vterm_state_get_cbdata	FOR,0:IF,0:functions,0:WHILE,0:CALL,0:SWITCH,0:DO,0:ELSE,0	2
0x40012c1	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      1830	state.c	FUNCTION_35
0x40012c5	              0xc3	                                     ret	      1831	state.c	FUNCTION_35
vterm_obtain_state	FOR,0:IF,2:functions,0:WHILE,0:CALL,6:SWITCH,0:DO,0:ELSE,0	63
0x400115c	    0x488b87180100	           mov rax, qword [rdi + 0x118] 	      1699	state.c	FUNCTION_30	IF_1
0x4001163	          0x4885c0	                           test rax, rax	      1699	state.c	FUNCTION_30	IF_1
0x4001166	     0xf85fb000000	                           jne 0x4001267	      1699	state.c	FUNCTION_30	IF_1
0x400116c	              0x55	                                push rbp	      1697	state.c	FUNCTION_30
0x400116d	              0x53	                                push rbx	      1697	state.c	FUNCTION_30
0x400116e	        0x4883ec08	                              sub rsp, 8	      1697	state.c	FUNCTION_30
0x4001172	          0x4889fd	                            mov rbp, rdi	      1697	state.c	FUNCTION_30
0x4001175	      0xbe98010000	                          mov esi, 0x198	        54	state.c	FUNCTION_4	CALL_1
0x400117a	      0xe800000000	                          call 0x400117f	        54	state.c	FUNCTION_4	CALL_1
0x400117f	          0x4889c3	                            mov rbx, rax	        54	state.c	FUNCTION_4	CALL_1
0x4001182	          0x488928	                    mov qword [rax], rbp	        56	state.c	FUNCTION_4
0x4001185	          0x8b4510	            mov eax, dword [rbp + 0x10] 	        58	state.c	FUNCTION_4
0x4001188	          0x894328	             mov dword [rbx + 0x28], eax	        58	state.c	FUNCTION_4
0x400118b	          0x8b4514	            mov eax, dword [rbp + 0x14] 	        59	state.c	FUNCTION_4
0x400118e	          0x89432c	             mov dword [rbx + 0x2c], eax	        59	state.c	FUNCTION_4
0x4001191	    0xc74360000000	               mov dword [rbx + 0x60], 0	        61	state.c	FUNCTION_4
0x4001198	    0xc74364000000	               mov dword [rbx + 0x64], 0	        62	state.c	FUNCTION_4
0x400119f	    0xc74368000000	               mov dword [rbx + 0x68], 0	        63	state.c	FUNCTION_4
0x40011a6	    0xc74370000000	               mov dword [rbx + 0x70], 0	        65	state.c	FUNCTION_4
0x40011ad	    0x48c743080000	                  mov qword [rbx + 8], 0	        67	state.c	FUNCTION_4
0x40011b5	    0x48c743100000	               mov qword [rbx + 0x10], 0	        68	state.c	FUNCTION_4
0x40011bd	          0x4889df	                            mov rdi, rbx	        70	state.c	FUNCTION_4	CALL_2
0x40011c0	      0xe800000000	                          call 0x40011c5	        70	state.c	FUNCTION_4	CALL_2
0x40011c5	    0xc78378010000	              mov dword [rbx + 0x178], 0	        72	state.c	FUNCTION_4
0x40011cf	    0x48899d180100	           mov qword [rbp + 0x118], rbx 	      1703	state.c	FUNCTION_30
0x40011d6	    0x48c783800000	           mov qword [rbx + 0x80], 0x10 	      1705	state.c	FUNCTION_30
0x40011e1	      0xbe40000000	                           mov esi, 0x40	      1706	state.c	FUNCTION_30	CALL_2
0x40011e6	          0x488b3b	                    mov rdi, qword [rbx]	      1706	state.c	FUNCTION_30	CALL_2
0x40011e9	      0xe800000000	                          call 0x40011ee	      1706	state.c	FUNCTION_30	CALL_2
0x40011ee	        0x48894378	             mov qword [rbx + 0x78], rax	      1706	state.c	FUNCTION_30	CALL_2
0x40011f2	          0x8b732c	            mov esi, dword [rbx + 0x2c] 	      1708	state.c	FUNCTION_30	CALL_3
0x40011f5	          0x8d460e	                    lea eax, [rsi + 0xe]	      1708	state.c	FUNCTION_30	CALL_3
0x40011f8	          0x83c607	                              add esi, 7	      1708	state.c	FUNCTION_30	CALL_3
0x40011fb	           0xf48f0	                          cmovs esi, eax	      1708	state.c	FUNCTION_30	CALL_3
0x40011fe	          0xc1fe03	                              sar esi, 3	      1708	state.c	FUNCTION_30	CALL_3
0x4001201	          0x4863f6	                         movsxd rsi, esi	      1708	state.c	FUNCTION_30	CALL_3
0x4001204	          0x488b3b	                    mov rdi, qword [rbx]	      1708	state.c	FUNCTION_30	CALL_3
0x4001207	      0xe800000000	                          call 0x400120c	      1708	state.c	FUNCTION_30	CALL_3
0x400120c	        0x48894350	             mov qword [rbx + 0x50], rax	      1708	state.c	FUNCTION_30	CALL_3
0x4001210	        0x48637328	         movsxd rsi, dword [rbx + 0x28] 	      1710	state.c	FUNCTION_30	CALL_4
0x4001214	        0x48c1e602	                              shl rsi, 2	      1710	state.c	FUNCTION_30	CALL_4
0x4001218	          0x488b3b	                    mov rdi, qword [rbx]	      1710	state.c	FUNCTION_30	CALL_4
0x400121b	      0xe800000000	                          call 0x4001220	      1710	state.c	FUNCTION_30	CALL_4
0x4001220	        0x48894358	             mov qword [rbx + 0x58], rax	      1710	state.c	FUNCTION_30	CALL_4
0x4001224	      0xbe75000000	                           mov esi, 0x75	      1712	state.c	FUNCTION_30	CALL_5
0x4001229	      0xbf00000000	                              mov edi, 0	      1712	state.c	FUNCTION_30	CALL_5
0x400122e	      0xe800000000	                          call 0x4001233	      1712	state.c	FUNCTION_30	CALL_5
0x4001233	    0x488983f80000	             mov qword [rbx + 0xf8], rax	      1712	state.c	FUNCTION_30	CALL_5
0x400123a	          0x488b10	                    mov rdx, qword [rax]	      1713	state.c	FUNCTION_30	IF_2
0x400123d	          0x4885d2	                           test rdx, rdx	      1713	state.c	FUNCTION_30	IF_2
0x4001240	            0x740c	                            je 0x400124e	      1713	state.c	FUNCTION_30	IF_2
0x4001242	    0x488db3000100	                  lea rsi, [rbx + 0x100]	      1714	state.c	FUNCTION_30	IF_2
0x4001249	          0x4889c7	                            mov rdi, rax	      1714	state.c	FUNCTION_30	IF_2
0x400124c	            0xffd2	                                call rdx	      1714	state.c	FUNCTION_30	IF_2
0x400124e	          0x4889da	                            mov rdx, rbx	      1716	state.c	FUNCTION_30	CALL_6
0x4001251	      0xbe00000000	                              mov esi, 0	      1716	state.c	FUNCTION_30	CALL_6
0x4001256	          0x4889ef	                            mov rdi, rbp	      1716	state.c	FUNCTION_30	CALL_6
0x4001259	      0xe800000000	                          call 0x400125e	      1716	state.c	FUNCTION_30	CALL_6
0x400125e	          0x4889d8	                            mov rax, rbx	      1718	state.c	FUNCTION_30
0x4001261	        0x4883c408	                              add rsp, 8	      1719	state.c	FUNCTION_30
0x4001265	              0x5b	                                 pop rbx	      1719	state.c	FUNCTION_30
0x4001266	              0x5d	                                 pop rbp	      1719	state.c	FUNCTION_30
0x4001267	            0xf3c3	                                     ret	      1719	state.c	FUNCTION_30
is_cursor_in_scrollregion	FOR,0:IF,2:functions,0:WHILE,0:CALL,3:SWITCH,0:DO,0:ELSE,0	28
0x4000175	          0x8b5730	            mov edx, dword [rdi + 0x30] 	       175	state.c	FUNCTION_12	IF_1
0x4000178	      0xb800000000	                              mov eax, 0	       177	state.c	FUNCTION_12	IF_1
0x400017d	          0x3b573c	            cmp edx, dword [rdi + 0x3c] 	       175	state.c	FUNCTION_12	IF_1
0x4000180	            0x7c40	                            jl 0x40001c2	       175	state.c	FUNCTION_12	IF_1
0x4000182	          0x8b4f40	            mov ecx, dword [rdi + 0x40] 	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x4000185	            0x85c9	                           test ecx, ecx	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x4000187	            0x7903	                           jns 0x400018c	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x4000189	          0x8b4f28	            mov ecx, dword [rdi + 0x28] 	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x400018c	      0xb800000000	                              mov eax, 0	       177	state.c	FUNCTION_12	IF_1
0x4000191	            0x39d1	                            cmp ecx, edx	       175	state.c	FUNCTION_12	IF_1
0x4000193	            0x7e2d	                           jle 0x40001c2	       175	state.c	FUNCTION_12	IF_1
0x4000195	          0x8b5734	            mov edx, dword [rdi + 0x34] 	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x4000198	    0xf68795000000	           test byte [rdi + 0x95], 0x10 	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x400019f	            0x7418	                            je 0x40001b9	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x40001a1	          0x3b5744	            cmp edx, dword [rdi + 0x44] 	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x40001a4	            0x7c1c	                            jl 0x40001c2	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x40001a6	          0x8b4748	            mov eax, dword [rdi + 0x48] 	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x40001a9	            0x85c0	                           test eax, eax	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x40001ab	            0x7903	                           jns 0x40001b0	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x40001ad	          0x8b472c	            mov eax, dword [rdi + 0x2c] 	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x40001b0	            0x39d0	                            cmp eax, edx	       177	state.c	FUNCTION_12	IF_1
0x40001b2	           0xf9fc0	                                 setg al	       177	state.c	FUNCTION_12	IF_1
0x40001b5	           0xfb6c0	                           movzx eax, al	       177	state.c	FUNCTION_12	IF_1
0x40001b8	              0xc3	                                     ret	       177	state.c	FUNCTION_12	IF_1
0x40001b9	      0xb800000000	                              mov eax, 0	       180	state.c	FUNCTION_12	IF_2
0x40001be	            0x85d2	                           test edx, edx	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x40001c0	            0x79eb	                           jns 0x40001ad	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x40001c2	            0xf3c3	                                     ret	       183	state.c	FUNCTION_12
settermprop_int	FOR,0:IF,0:functions,0:WHILE,0:CALL,1:SWITCH,0:DO,0:ELSE,0	13
0x4001729	        0x4883ec18	                           sub rsp, 0x18	       524	state.c	FUNCTION_18
0x400172d	    0x64488b042528	                mov rax, qword fs:[0x28]	       524	state.c	FUNCTION_18
0x4001736	      0x4889442408	                mov qword [rsp + 8], rax	       524	state.c	FUNCTION_18
0x400173b	            0x31c0	                            xor eax, eax	       524	state.c	FUNCTION_18
0x400173d	          0x891424	                    mov dword [rsp], edx	       526	state.c	FUNCTION_18
0x4001740	          0x4889e2	                            mov rdx, rsp	       527	state.c	FUNCTION_18	CALL_1
0x4001743	      0xe800000000	                          call 0x4001748	       527	state.c	FUNCTION_18	CALL_1
0x4001748	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       528	state.c	FUNCTION_18
0x400174d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       528	state.c	FUNCTION_18
0x4001756	            0x7405	                            je 0x400175d	       528	state.c	FUNCTION_18
0x4001758	      0xe800000000	                          call 0x400175d	       528	state.c	FUNCTION_18
0x400175d	        0x4883c418	                           add rsp, 0x18	       528	state.c	FUNCTION_18
0x4001761	              0xc3	                                     ret	       528	state.c	FUNCTION_18
on_control	FOR,0:IF,8:functions,0:WHILE,0:CALL,12:SWITCH,1:DO,0:ELSE,1	126
0x40009bc	              0x53	                                push rbx	       419	state.c	FUNCTION_16
0x40009bd	        0x4883ec10	                           sub rsp, 0x10	       419	state.c	FUNCTION_16
0x40009c1	          0x4889f3	                            mov rbx, rsi	       419	state.c	FUNCTION_16
0x40009c4	    0x64488b042528	                mov rax, qword fs:[0x28]	       419	state.c	FUNCTION_16
0x40009cd	      0x4889442408	                mov qword [rsp + 8], rax	       419	state.c	FUNCTION_16
0x40009d2	            0x31c0	                            xor eax, eax	       419	state.c	FUNCTION_16
0x40009d4	        0x488b4630	            mov rax, qword [rsi + 0x30] 	       422	state.c	FUNCTION_16
0x40009d8	        0x48890424	                    mov qword [rsp], rax	       422	state.c	FUNCTION_16
0x40009dc	          0x8d47f9	                      lea eax, [rdi - 7]	       424	state.c	FUNCTION_16	SWITCH_1
0x40009df	            0x3c88	                            cmp al, 0x88	       424	state.c	FUNCTION_16	SWITCH_1
0x40009e1	     0xf875c010000	                            ja 0x4000b43	       424	state.c	FUNCTION_16	SWITCH_1
0x40009e7	           0xfb6c0	                           movzx eax, al	       424	state.c	FUNCTION_16	SWITCH_1
0x40009ea	    0xff24c5000000	                       jmp qword [rax*8]	       424	state.c	FUNCTION_16	SWITCH_1
0x40009f1	        0x488b4608	                mov rax, qword [rsi + 8]	       426	state.c	FUNCTION_16	SWITCH_1	IF_1
0x40009f5	          0x4885c0	                           test rax, rax	       426	state.c	FUNCTION_16	SWITCH_1	IF_1
0x40009f8	     0xf8470010000	                            je 0x4000b6e	       426	state.c	FUNCTION_16	SWITCH_1	IF_1
0x40009fe	        0x488b4040	            mov rax, qword [rax + 0x40] 	       426	state.c	FUNCTION_16	SWITCH_1	IF_1
0x4000a02	          0x4885c0	                           test rax, rax	       426	state.c	FUNCTION_16	SWITCH_1	IF_1
0x4000a05	     0xf8463010000	                            je 0x4000b6e	       426	state.c	FUNCTION_16	SWITCH_1	IF_1
0x4000a0b	        0x488b7e10	            mov rdi, qword [rsi + 0x10] 	       427	state.c	FUNCTION_16	SWITCH_1	IF_1
0x4000a0f	            0xffd0	                                call rax	       427	state.c	FUNCTION_16	SWITCH_1	IF_1
0x4000a11	      0xe958010000	                           jmp 0x4000b6e	       427	state.c	FUNCTION_16	SWITCH_1	IF_1
0x4000a16	          0x8b4634	            mov eax, dword [rsi + 0x34] 	       431	state.c	FUNCTION_16	SWITCH_1	IF_2
0x4000a19	            0x85c0	                           test eax, eax	       431	state.c	FUNCTION_16	SWITCH_1	IF_2
0x4000a1b	     0xf8e4d010000	                           jle 0x4000b6e	       431	state.c	FUNCTION_16	SWITCH_1	IF_2
0x4000a21	          0x83e801	                              sub eax, 1	       432	state.c	FUNCTION_16	SWITCH_1	IF_2
0x4000a24	          0x894634	             mov dword [rsi + 0x34], eax	       432	state.c	FUNCTION_16	SWITCH_1	IF_2
0x4000a27	      0xe942010000	                           jmp 0x4000b6e	       432	state.c	FUNCTION_16	SWITCH_1	IF_2
0x4000a2c	      0xba01000000	                              mov edx, 1	       436	state.c	FUNCTION_16	SWITCH_1	CALL_1
0x4000a31	      0xbe01000000	                              mov esi, 1	       436	state.c	FUNCTION_16	SWITCH_1	CALL_1
0x4000a36	          0x4889df	                            mov rdi, rbx	       436	state.c	FUNCTION_16	SWITCH_1	CALL_1
0x4000a39	      0xe886f7ffff	                            call sym.tab	       436	state.c	FUNCTION_16	SWITCH_1	CALL_1
0x4000a3e	      0xe92b010000	                           jmp 0x4000b6e	       437	state.c	FUNCTION_16	SWITCH_1
0x4000a43	          0x4889f7	                            mov rdi, rsi	       442	state.c	FUNCTION_16	SWITCH_1	CALL_2
0x4000a46	      0xe8f0feffff	                       call sym.linefeed	       442	state.c	FUNCTION_16	SWITCH_1	CALL_2
0x4000a4b	    0xf68394000000	           test byte [rbx + 0x94], 0x10 	       443	state.c	FUNCTION_16	SWITCH_1	IF_3
0x4000a52	     0xf8416010000	                            je 0x4000b6e	       443	state.c	FUNCTION_16	SWITCH_1	IF_3
0x4000a58	    0xc74334000000	               mov dword [rbx + 0x34], 0	       444	state.c	FUNCTION_16	SWITCH_1	IF_3
0x4000a5f	      0xe90a010000	                           jmp 0x4000b6e	       444	state.c	FUNCTION_16	SWITCH_1	IF_3
0x4000a64	    0xc74634000000	               mov dword [rsi + 0x34], 0	       448	state.c	FUNCTION_16	SWITCH_1
0x4000a6b	      0xe9fe000000	                           jmp 0x4000b6e	       449	state.c	FUNCTION_16	SWITCH_1
0x4000a70	    0xc78610010000	              mov dword [rsi + 0x110], 1	       452	state.c	FUNCTION_16	SWITCH_1
0x4000a7a	      0xe9ef000000	                           jmp 0x4000b6e	       453	state.c	FUNCTION_16	SWITCH_1
0x4000a7f	    0xc78610010000	              mov dword [rsi + 0x110], 0	       456	state.c	FUNCTION_16	SWITCH_1
0x4000a89	      0xe9e0000000	                           jmp 0x4000b6e	       457	state.c	FUNCTION_16	SWITCH_1
0x4000a8e	          0x4889f7	                            mov rdi, rsi	       460	state.c	FUNCTION_16	SWITCH_1	CALL_3
0x4000a91	      0xe8a5feffff	                       call sym.linefeed	       460	state.c	FUNCTION_16	SWITCH_1	CALL_3
0x4000a96	      0xe9d3000000	                           jmp 0x4000b6e	       461	state.c	FUNCTION_16	SWITCH_1
0x4000a9b	          0x4889f7	                            mov rdi, rsi	       464	state.c	FUNCTION_16	SWITCH_1	CALL_4
0x4000a9e	      0xe898feffff	                       call sym.linefeed	       464	state.c	FUNCTION_16	SWITCH_1	CALL_4
0x4000aa3	    0xc74334000000	               mov dword [rbx + 0x34], 0	       465	state.c	FUNCTION_16	SWITCH_1
0x4000aaa	      0xe9bf000000	                           jmp 0x4000b6e	       466	state.c	FUNCTION_16	SWITCH_1
0x4000aaf	          0x8b4e34	            mov ecx, dword [rsi + 0x34] 	       469	state.c	FUNCTION_16	SWITCH_1	CALL_5
0x4000ab2	            0x89c8	                            mov eax, ecx	       158	state.c	FUNCTION_9
0x4000ab4	          0xc1f803	                              sar eax, 3	       158	state.c	FUNCTION_9
0x4000ab7	            0x4898	                                    cdqe	       158	state.c	FUNCTION_9
0x4000ab9	        0x48034650	             add rax, qword [rsi + 0x50]	       158	state.c	FUNCTION_9
0x4000abd	          0x83e107	                              and ecx, 7	       158	state.c	FUNCTION_9
0x4000ac0	      0xba01000000	                              mov edx, 1	       158	state.c	FUNCTION_9
0x4000ac5	            0xd3e2	                             shl edx, cl	       158	state.c	FUNCTION_9
0x4000ac7	             0x810	                       or byte [rax], dl	       158	state.c	FUNCTION_9
0x4000ac9	      0xe9a0000000	                           jmp 0x4000b6e	       158	state.c	FUNCTION_9
0x4000ace	          0x8b4630	            mov eax, dword [rsi + 0x30] 	       473	state.c	FUNCTION_16	SWITCH_1	IF_4
0x4000ad1	          0x3b463c	            cmp eax, dword [rsi + 0x3c] 	       473	state.c	FUNCTION_16	SWITCH_1	IF_4
0x4000ad4	            0x7549	                           jne 0x4000b1f	       473	state.c	FUNCTION_16	SWITCH_1	IF_4
0x4000ad6	            0x89c0	                            mov eax, eax	       475	state.c	FUNCTION_16	SWITCH_1	IF_4
0x4000ad8	          0x8b7640	            mov esi, dword [rsi + 0x40] 	       476	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_6
0x4000adb	            0x85f6	                           test esi, esi	       476	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_6
0x4000add	            0x7903	                           jns 0x4000ae2	       476	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_6
0x4000adf	          0x8b7328	            mov esi, dword [rbx + 0x28] 	       476	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_6
0x4000ae2	        0x48c1e620	                           shl rsi, 0x20	       476	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_6
0x4000ae6	          0x4809c6	                             or rsi, rax	       476	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_6
0x4000ae9	    0xf68395000000	           test byte [rbx + 0x95], 0x10 	       477	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_7
0x4000af0	     0xf84a6000000	                            je 0x4000b9c	       477	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_7
0x4000af6	          0x8b5344	            mov edx, dword [rbx + 0x44] 	       477	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_7
0x4000af9	          0x8b4b48	            mov ecx, dword [rbx + 0x48] 	       478	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_8
0x4000afc	            0x85c9	                           test ecx, ecx	       478	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_8
0x4000afe	            0x7903	                           jns 0x4000b03	       478	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_8
0x4000b00	          0x8b4b2c	            mov ecx, dword [rbx + 0x2c] 	       478	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_8
0x4000b03	        0x48c1e120	                           shl rcx, 0x20	       478	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_8
0x4000b07	          0x4809ca	                             or rdx, rcx	       478	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_8
0x4000b0a	    0x41b800000000	                              mov r8d, 0	       480	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_9
0x4000b10	      0xb9ffffffff	                     mov ecx, 0xffffffff	       480	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_9
0x4000b15	          0x4889df	                            mov rdi, rbx	       480	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_9
0x4000b18	      0xe8f4fcffff	                         call sym.scroll	       480	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_9
0x4000b1d	            0xeb4f	                           jmp 0x4000b6e	       480	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_9
0x4000b1f	            0x85c0	                           test eax, eax	       482	state.c	FUNCTION_16	SWITCH_1	ELSE_1	IF_5
0x4000b21	            0x7e4b	                           jle 0x4000b6e	       482	state.c	FUNCTION_16	SWITCH_1	ELSE_1	IF_5
0x4000b23	          0x83e801	                              sub eax, 1	       483	state.c	FUNCTION_16	SWITCH_1	ELSE_1	IF_5
0x4000b26	          0x894630	             mov dword [rsi + 0x30], eax	       483	state.c	FUNCTION_16	SWITCH_1	ELSE_1	IF_5
0x4000b29	            0xeb43	                           jmp 0x4000b6e	       483	state.c	FUNCTION_16	SWITCH_1	ELSE_1	IF_5
0x4000b2b	    0xc78618010000	              mov dword [rsi + 0x118], 2	       487	state.c	FUNCTION_16	SWITCH_1
0x4000b35	            0xeb37	                           jmp 0x4000b6e	       488	state.c	FUNCTION_16	SWITCH_1
0x4000b37	    0xc78618010000	              mov dword [rsi + 0x118], 3	       491	state.c	FUNCTION_16	SWITCH_1
0x4000b41	            0xeb2b	                           jmp 0x4000b6e	       492	state.c	FUNCTION_16	SWITCH_1
0x4000b43	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       495	state.c	FUNCTION_16	SWITCH_1	IF_6
0x4000b47	          0x4885c0	                           test rax, rax	       495	state.c	FUNCTION_16	SWITCH_1	IF_6
0x4000b4a	            0x7439	                            je 0x4000b85	       495	state.c	FUNCTION_16	SWITCH_1	IF_6
0x4000b4c	        0x488b5008	                mov rdx, qword [rax + 8]	       495	state.c	FUNCTION_16	SWITCH_1	IF_6
0x4000b50	      0xb800000000	                              mov eax, 0	       499	state.c	FUNCTION_16	SWITCH_1
0x4000b55	          0x4885d2	                           test rdx, rdx	       495	state.c	FUNCTION_16	SWITCH_1	IF_6
0x4000b58	            0x7430	                            je 0x4000b8a	       495	state.c	FUNCTION_16	SWITCH_1	IF_6
0x4000b5a	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	       496	state.c	FUNCTION_16	SWITCH_1	IF_6	IF_7
0x4000b5e	        0x400fb6ff	                          movzx edi, dil	       496	state.c	FUNCTION_16	SWITCH_1	IF_6	IF_7
0x4000b62	            0xffd2	                                call rdx	       496	state.c	FUNCTION_16	SWITCH_1	IF_6	IF_7
0x4000b64	            0x85c0	                           test eax, eax	       497	state.c	FUNCTION_16	SWITCH_1	IF_6	IF_7
0x4000b66	           0xf95c0	                                setne al	       497	state.c	FUNCTION_16	SWITCH_1	IF_6	IF_7
0x4000b69	           0xfb6c0	                           movzx eax, al	       497	state.c	FUNCTION_16	SWITCH_1	IF_6	IF_7
0x4000b6c	            0xeb1c	                           jmp 0x4000b8a	       497	state.c	FUNCTION_16	SWITCH_1	IF_6	IF_7
0x4000b6e	      0xba01000000	                              mov edx, 1	       502	state.c	FUNCTION_16	CALL_10
0x4000b73	          0x4889e6	                            mov rsi, rsp	       502	state.c	FUNCTION_16	CALL_10
0x4000b76	          0x4889df	                            mov rdi, rbx	       502	state.c	FUNCTION_16	CALL_10
0x4000b79	      0xe85af5ffff	                   call sym.updatecursor	       502	state.c	FUNCTION_16	CALL_10
0x4000b7e	      0xb801000000	                              mov eax, 1	       513	state.c	FUNCTION_16
0x4000b83	            0xeb05	                           jmp 0x4000b8a	       513	state.c	FUNCTION_16
0x4000b85	      0xb800000000	                              mov eax, 0	       499	state.c	FUNCTION_16	SWITCH_1
0x4000b8a	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       514	state.c	FUNCTION_16
0x4000b8f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       514	state.c	FUNCTION_16
0x4000b98	            0x7411	                            je 0x4000bab	       514	state.c	FUNCTION_16
0x4000b9a	            0xeb0a	                           jmp 0x4000ba6	       514	state.c	FUNCTION_16
0x4000b9c	      0xba00000000	                              mov edx, 0	       477	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_7
0x4000ba1	      0xe95affffff	                           jmp 0x4000b00	       477	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_7
0x4000ba6	      0xe800000000	                          call 0x4000bab	       514	state.c	FUNCTION_16
0x4000bab	        0x4883c410	                           add rsp, 0x10	       514	state.c	FUNCTION_16
0x4000baf	              0x5b	                                 pop rbx	       514	state.c	FUNCTION_16
0x4000bb0	              0xc3	                                     ret	       514	state.c	FUNCTION_16
vterm_state_focus_out	FOR,0:IF,1:functions,0:WHILE,0:CALL,1:SWITCH,0:DO,0:ELSE,0	10
0x40039c5	    0xf68795000000	           test byte [rdi + 0x95], 0x40 	      1910	state.c	FUNCTION_40	IF_1
0x40039cc	            0x741f	                            je 0x40039ed	      1910	state.c	FUNCTION_40	IF_1
0x40039ce	        0x4883ec08	                              sub rsp, 8	      1909	state.c	FUNCTION_40
0x40039d2	      0xba00000000	                              mov edx, 0	      1911	state.c	FUNCTION_40	CALL_1
0x40039d7	      0xbe9b000000	                           mov esi, 0x9b	      1911	state.c	FUNCTION_40	CALL_1
0x40039dc	          0x488b3f	                    mov rdi, qword [rdi]	      1911	state.c	FUNCTION_40	CALL_1
0x40039df	      0xb800000000	                              mov eax, 0	      1911	state.c	FUNCTION_40	CALL_1
0x40039e4	      0xe800000000	                          call 0x40039e9	      1911	state.c	FUNCTION_40	CALL_1
0x40039e9	        0x4883c408	                              add rsp, 8	      1912	state.c	FUNCTION_40
0x40039ed	            0xf3c3	                                     ret	      1912	state.c	FUNCTION_40
updatecursor	FOR,0:IF,4:functions,0:WHILE,0:CALL,0:SWITCH,0:DO,0:ELSE,0	25
0x40000d8	          0x8b4604	                mov eax, dword [rsi + 4]	        34	state.c	FUNCTION_2	IF_1
0x40000db	          0x394734	            cmp dword [rdi + 0x34], eax 	        34	state.c	FUNCTION_2	IF_1
0x40000de	            0x7507	                           jne 0x40000e7	        34	state.c	FUNCTION_2	IF_1
0x40000e0	            0x8b06	                    mov eax, dword [rsi]	        34	state.c	FUNCTION_2	IF_1
0x40000e2	          0x394730	            cmp dword [rdi + 0x30], eax 	        34	state.c	FUNCTION_2	IF_1
0x40000e5	            0x743f	                            je 0x4000126	        34	state.c	FUNCTION_2	IF_1
0x40000e7	            0x85d2	                           test edx, edx	        37	state.c	FUNCTION_2	IF_2
0x40000e9	            0x7407	                            je 0x40000f2	        37	state.c	FUNCTION_2	IF_2
0x40000eb	    0xc74738000000	               mov dword [rdi + 0x38], 0	        38	state.c	FUNCTION_2	IF_2
0x40000f2	        0x488b4708	                mov rax, qword [rdi + 8]	        40	state.c	FUNCTION_2	IF_3
0x40000f6	          0x4885c0	                           test rax, rax	        40	state.c	FUNCTION_2	IF_3
0x40000f9	            0x742b	                            je 0x4000126	        40	state.c	FUNCTION_2	IF_3
0x40000fb	        0x488b4008	                mov rax, qword [rax + 8]	        40	state.c	FUNCTION_2	IF_3
0x40000ff	          0x4885c0	                           test rax, rax	        40	state.c	FUNCTION_2	IF_3
0x4000102	            0x7422	                            je 0x4000126	        40	state.c	FUNCTION_2	IF_3
0x4000104	        0x4883ec08	                              sub rsp, 8	        33	state.c	FUNCTION_2
0x4000108	        0x488b4f10	            mov rcx, qword [rdi + 0x10] 	        41	state.c	FUNCTION_2	IF_3	IF_4
0x400010c	     0xfb697940000	           movzx edx, byte [rdi + 0x94] 	        41	state.c	FUNCTION_2	IF_3	IF_4
0x4000113	          0xc0ea05	                               shr dl, 5	        41	state.c	FUNCTION_2	IF_3	IF_4
0x4000116	          0x83e201	                              and edx, 1	        41	state.c	FUNCTION_2	IF_3	IF_4
0x4000119	        0x488b7f30	            mov rdi, qword [rdi + 0x30] 	        41	state.c	FUNCTION_2	IF_3	IF_4
0x400011d	          0x488b36	                    mov rsi, qword [rsi]	        41	state.c	FUNCTION_2	IF_3	IF_4
0x4000120	            0xffd0	                                call rax	        41	state.c	FUNCTION_2	IF_3	IF_4
0x4000122	        0x4883c408	                              add rsp, 8	        43	state.c	FUNCTION_2
0x4000126	            0xf3c3	                                     ret	        43	state.c	FUNCTION_2
vterm_state_set_callbacks	FOR,0:IF,2:functions,0:WHILE,0:CALL,0:SWITCH,0:DO,0:ELSE,1	16
0x4001289	          0x4885f6	                           test rsi, rsi	      1815	state.c	FUNCTION_34	IF_1
0x400128c	            0x741c	                            je 0x40012aa	      1815	state.c	FUNCTION_34	IF_1
0x400128e	        0x48897708	                mov qword [rdi + 8], rsi	      1816	state.c	FUNCTION_34	IF_1
0x4001292	        0x48895710	             mov qword [rdi + 0x10], rdx	      1817	state.c	FUNCTION_34	IF_1
0x4001296	        0x488b4628	            mov rax, qword [rsi + 0x28] 	      1819	state.c	FUNCTION_34	IF_1	IF_2
0x400129a	          0x4885c0	                           test rax, rax	      1819	state.c	FUNCTION_34	IF_1	IF_2
0x400129d	            0x7420	                            je 0x40012bf	      1819	state.c	FUNCTION_34	IF_1	IF_2
0x400129f	        0x4883ec08	                              sub rsp, 8	      1814	state.c	FUNCTION_34
0x40012a3	          0x4889d7	                            mov rdi, rdx	      1814	state.c	FUNCTION_34
0x40012a6	            0xffd0	                                call rax	      1820	state.c	FUNCTION_34	IF_1	IF_2
0x40012a8	            0xeb11	                           jmp 0x40012bb	      1820	state.c	FUNCTION_34	IF_1	IF_2
0x40012aa	    0x48c747080000	                  mov qword [rdi + 8], 0	      1823	state.c	FUNCTION_34	ELSE_1
0x40012b2	    0x48c747100000	               mov qword [rdi + 0x10], 0	      1824	state.c	FUNCTION_34	ELSE_1
0x40012ba	              0xc3	                                     ret	      1826	state.c	FUNCTION_34
0x40012bb	        0x4883c408	                              add rsp, 8	      1826	state.c	FUNCTION_34
0x40012bf	            0xf3c3	                                     ret	      1826	state.c	FUNCTION_34
vterm_state_set_termprop	FOR,0:IF,6:functions,0:WHILE,0:CALL,1:SWITCH,1:DO,0:ELSE,0	97
0x40012ea	            0x4154	                                push r12	      1851	state.c	FUNCTION_38
0x40012ec	              0x55	                                push rbp	      1851	state.c	FUNCTION_38
0x40012ed	              0x53	                                push rbx	      1851	state.c	FUNCTION_38
0x40012ee	          0x4889fd	                            mov rbp, rdi	      1851	state.c	FUNCTION_38
0x40012f1	            0x89f3	                            mov ebx, esi	      1851	state.c	FUNCTION_38
0x40012f3	          0x4989d4	                            mov r12, rdx	      1851	state.c	FUNCTION_38
0x40012f6	        0x488b4708	                mov rax, qword [rdi + 8]	      1854	state.c	FUNCTION_38	IF_1
0x40012fa	          0x4885c0	                           test rax, rax	      1854	state.c	FUNCTION_38	IF_1
0x40012fd	            0x741c	                            je 0x400131b	      1854	state.c	FUNCTION_38	IF_1
0x40012ff	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1854	state.c	FUNCTION_38	IF_1
0x4001303	          0x4885c0	                           test rax, rax	      1854	state.c	FUNCTION_38	IF_1
0x4001306	            0x7413	                            je 0x400131b	      1854	state.c	FUNCTION_38	IF_1
0x4001308	        0x488b5710	            mov rdx, qword [rdi + 0x10] 	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x400130c	          0x4c89e6	                            mov rsi, r12	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x400130f	            0x89df	                            mov edi, ebx	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4001311	            0xffd0	                                call rax	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4001313	            0x85c0	                           test eax, eax	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4001315	     0xf843b010000	                            je 0x4001456	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x400131b	          0x83fb09	                              cmp ebx, 9	      1858	state.c	FUNCTION_38	SWITCH_1
0x400131e	            0x7709	                            ja 0x4001329	      1858	state.c	FUNCTION_38	SWITCH_1
0x4001320	            0x89db	                            mov ebx, ebx	      1858	state.c	FUNCTION_38	SWITCH_1
0x4001322	    0xff24dd000000	                       jmp qword [rbx*8]	      1858	state.c	FUNCTION_38	SWITCH_1
0x4001329	      0xb800000000	                              mov eax, 0	      1896	state.c	FUNCTION_38	SWITCH_1
0x400132e	      0xe923010000	                           jmp 0x4001456	      1896	state.c	FUNCTION_38	SWITCH_1
0x4001333	        0x418b0424	                    mov eax, dword [r12]	      1865	state.c	FUNCTION_38	SWITCH_1
0x4001337	          0x83e001	                              and eax, 1	      1865	state.c	FUNCTION_38	SWITCH_1
0x400133a	          0xc1e005	                              shl eax, 5	      1865	state.c	FUNCTION_38	SWITCH_1
0x400133d	     0xfb695940000	           movzx edx, byte [rbp + 0x94] 	      1865	state.c	FUNCTION_38	SWITCH_1
0x4001344	          0x83e2df	                     and edx, 0xffffffdf	      1865	state.c	FUNCTION_38	SWITCH_1
0x4001347	             0x9d0	                             or eax, edx	      1865	state.c	FUNCTION_38	SWITCH_1
0x4001349	    0x888594000000	               mov byte [rbp + 0x94], al	      1865	state.c	FUNCTION_38	SWITCH_1
0x400134f	      0xb801000000	                              mov eax, 1	      1866	state.c	FUNCTION_38	SWITCH_1
0x4001354	      0xe9fd000000	                           jmp 0x4001456	      1866	state.c	FUNCTION_38	SWITCH_1
0x4001359	        0x418b0424	                    mov eax, dword [r12]	      1868	state.c	FUNCTION_38	SWITCH_1
0x400135d	          0x83e001	                              and eax, 1	      1868	state.c	FUNCTION_38	SWITCH_1
0x4001360	          0xc1e006	                              shl eax, 6	      1868	state.c	FUNCTION_38	SWITCH_1
0x4001363	     0xfb695940000	           movzx edx, byte [rbp + 0x94] 	      1868	state.c	FUNCTION_38	SWITCH_1
0x400136a	          0x83e2bf	                     and edx, 0xffffffbf	      1868	state.c	FUNCTION_38	SWITCH_1
0x400136d	             0x9d0	                             or eax, edx	      1868	state.c	FUNCTION_38	SWITCH_1
0x400136f	    0x888594000000	               mov byte [rbp + 0x94], al	      1868	state.c	FUNCTION_38	SWITCH_1
0x4001375	      0xb801000000	                              mov eax, 1	      1869	state.c	FUNCTION_38	SWITCH_1
0x400137a	      0xe9d7000000	                           jmp 0x4001456	      1869	state.c	FUNCTION_38	SWITCH_1
0x400137f	      0x410fb60424	                   movzx eax, byte [r12]	      1871	state.c	FUNCTION_38	SWITCH_1
0x4001384	          0x83e003	                              and eax, 3	      1871	state.c	FUNCTION_38	SWITCH_1
0x4001387	          0xc1e007	                              shl eax, 7	      1871	state.c	FUNCTION_38	SWITCH_1
0x400138a	     0xfb795940000	           movzx edx, word [rbp + 0x94] 	      1871	state.c	FUNCTION_38	SWITCH_1
0x4001391	      0x6681e27ffe	                          and dx, 0xfe7f	      1871	state.c	FUNCTION_38	SWITCH_1
0x4001396	             0x9d0	                             or eax, edx	      1871	state.c	FUNCTION_38	SWITCH_1
0x4001398	    0x668985940000	               mov word [rbp + 0x94], ax	      1871	state.c	FUNCTION_38	SWITCH_1
0x400139f	      0xb801000000	                              mov eax, 1	      1872	state.c	FUNCTION_38	SWITCH_1
0x40013a4	      0xe9ad000000	                           jmp 0x4001456	      1872	state.c	FUNCTION_38	SWITCH_1
0x40013a9	        0x418b0424	                    mov eax, dword [r12]	      1874	state.c	FUNCTION_38	SWITCH_1
0x40013ad	          0x83e001	                              and eax, 1	      1874	state.c	FUNCTION_38	SWITCH_1
0x40013b0	          0xc1e003	                              shl eax, 3	      1874	state.c	FUNCTION_38	SWITCH_1
0x40013b3	     0xfb695950000	           movzx edx, byte [rbp + 0x95] 	      1874	state.c	FUNCTION_38	SWITCH_1
0x40013ba	          0x83e2f7	                     and edx, 0xfffffff7	      1874	state.c	FUNCTION_38	SWITCH_1
0x40013bd	             0x9d0	                             or eax, edx	      1874	state.c	FUNCTION_38	SWITCH_1
0x40013bf	    0x888595000000	               mov byte [rbp + 0x95], al	      1874	state.c	FUNCTION_38	SWITCH_1
0x40013c5	      0xb801000000	                              mov eax, 1	      1875	state.c	FUNCTION_38	SWITCH_1
0x40013ca	      0xe987000000	                           jmp 0x4001456	      1875	state.c	FUNCTION_38	SWITCH_1
0x40013cf	        0x418b1424	                    mov edx, dword [r12]	      1877	state.c	FUNCTION_38	SWITCH_1
0x40013d3	          0x83e201	                              and edx, 1	      1877	state.c	FUNCTION_38	SWITCH_1
0x40013d6	          0x8d0412	                    lea eax, [rdx + rdx]	      1877	state.c	FUNCTION_38	SWITCH_1
0x40013d9	     0xfb695950000	           movzx edx, byte [rbp + 0x95] 	      1877	state.c	FUNCTION_38	SWITCH_1
0x40013e0	          0x83e2fd	                     and edx, 0xfffffffd	      1877	state.c	FUNCTION_38	SWITCH_1
0x40013e3	             0x9c2	                             or edx, eax	      1877	state.c	FUNCTION_38	SWITCH_1
0x40013e5	    0x889595000000	               mov byte [rbp + 0x95], dl	      1877	state.c	FUNCTION_38	SWITCH_1
0x40013eb	      0xb801000000	                              mov eax, 1	      1884	state.c	FUNCTION_38	SWITCH_1
0x40013f0	          0xf6c202	                              test dl, 2	      1878	state.c	FUNCTION_38	SWITCH_1	IF_3
0x40013f3	            0x7461	                            je 0x4001456	      1878	state.c	FUNCTION_38	SWITCH_1	IF_3
0x40013f5	          0x8b7528	            mov esi, dword [rbp + 0x28] 	      1880	state.c	FUNCTION_38	SWITCH_1	IF_3
0x40013f8	        0x48c1e620	                           shl rsi, 0x20	      1880	state.c	FUNCTION_38	SWITCH_1	IF_3
0x40013fc	          0x8b552c	            mov edx, dword [rbp + 0x2c] 	      1881	state.c	FUNCTION_38	SWITCH_1	IF_3
0x40013ff	        0x48c1e220	                           shl rdx, 0x20	      1881	state.c	FUNCTION_38	SWITCH_1	IF_3
0x4001403	      0xb900000000	                              mov ecx, 0	      1882	state.c	FUNCTION_38	SWITCH_1	IF_3	CALL_1
0x4001408	          0x4889ef	                            mov rdi, rbp	      1882	state.c	FUNCTION_38	SWITCH_1	IF_3	CALL_1
0x400140b	      0xe818edffff	                          call sym.erase	      1882	state.c	FUNCTION_38	SWITCH_1	IF_3	CALL_1
0x4001410	      0xb801000000	                              mov eax, 1	      1884	state.c	FUNCTION_38	SWITCH_1
0x4001415	            0xeb3f	                           jmp 0x4001456	      1884	state.c	FUNCTION_38	SWITCH_1
0x4001417	    0xc7456c000000	               mov dword [rbp + 0x6c], 0	      1886	state.c	FUNCTION_38	SWITCH_1
0x400141e	      0xb801000000	                              mov eax, 1	      1893	state.c	FUNCTION_38	SWITCH_1
0x4001423	      0x41833c2400	                      cmp dword [r12], 0	      1887	state.c	FUNCTION_38	SWITCH_1	IF_4
0x4001428	            0x742c	                            je 0x4001456	      1887	state.c	FUNCTION_38	SWITCH_1	IF_4
0x400142a	    0xc7456c010000	               mov dword [rbp + 0x6c], 1	      1888	state.c	FUNCTION_38	SWITCH_1	IF_4
0x4001431	      0x41833c2402	                      cmp dword [r12], 2	      1889	state.c	FUNCTION_38	SWITCH_1	IF_5
0x4001436	            0x7507	                           jne 0x400143f	      1889	state.c	FUNCTION_38	SWITCH_1	IF_5
0x4001438	    0xc7456c030000	               mov dword [rbp + 0x6c], 3	      1890	state.c	FUNCTION_38	SWITCH_1	IF_5
0x400143f	      0xb801000000	                              mov eax, 1	      1893	state.c	FUNCTION_38	SWITCH_1
0x4001444	      0x41833c2403	                      cmp dword [r12], 3	      1891	state.c	FUNCTION_38	SWITCH_1	IF_6
0x4001449	            0x750b	                           jne 0x4001456	      1891	state.c	FUNCTION_38	SWITCH_1	IF_6
0x400144b	        0x834d6c04	                or dword [rbp + 0x6c], 4	      1892	state.c	FUNCTION_38	SWITCH_1	IF_6
0x400144f	            0xeb05	                           jmp 0x4001456	      1892	state.c	FUNCTION_38	SWITCH_1	IF_6
0x4001451	      0xb801000000	                              mov eax, 1	      1863	state.c	FUNCTION_38	SWITCH_1
0x4001456	              0x5b	                                 pop rbx	      1900	state.c	FUNCTION_38
0x4001457	              0x5d	                                 pop rbp	      1900	state.c	FUNCTION_38
0x4001458	            0x415c	                                 pop r12	      1900	state.c	FUNCTION_38
0x400145a	              0xc3	                                     ret	      1900	state.c	FUNCTION_38
set_lineinfo	FOR,0:IF,6:functions,0:WHILE,0:CALL,0:SWITCH,0:DO,0:ELSE,3	64
0x4000243	            0x4154	                                push r12	       217	state.c	FUNCTION_14
0x4000245	              0x55	                                push rbp	       217	state.c	FUNCTION_14
0x4000246	              0x53	                                push rbx	       217	state.c	FUNCTION_14
0x4000247	        0x4883ec10	                           sub rsp, 0x10	       217	state.c	FUNCTION_14
0x400024b	          0x4889fb	                            mov rbx, rdi	       217	state.c	FUNCTION_14
0x400024e	            0x89f7	                            mov edi, esi	       217	state.c	FUNCTION_14
0x4000250	          0x4189d4	                           mov r12d, edx	       217	state.c	FUNCTION_14
0x4000253	    0x64488b042528	                mov rax, qword fs:[0x28]	       217	state.c	FUNCTION_14
0x400025c	      0x4889442408	                mov qword [rsp + 8], rax	       217	state.c	FUNCTION_14
0x4000261	            0x31c0	                            xor eax, eax	       217	state.c	FUNCTION_14
0x4000263	          0x4863ee	                         movsxd rbp, esi	       218	state.c	FUNCTION_14
0x4000266	        0x488b4358	            mov rax, qword [rbx + 0x58] 	       218	state.c	FUNCTION_14
0x400026a	        0x488d14a8	                  lea rdx, [rax + rbp*4]	       218	state.c	FUNCTION_14
0x400026e	            0x8b02	                    mov eax, dword [rdx]	       218	state.c	FUNCTION_14
0x4000270	          0x890424	                    mov dword [rsp], eax	       218	state.c	FUNCTION_14
0x4000273	            0x85c9	                           test ecx, ecx	       220	state.c	FUNCTION_14	IF_1
0x4000275	            0x7506	                           jne 0x400027d	       220	state.c	FUNCTION_14	IF_1
0x4000277	        0x802424fe	                    and byte [rsp], 0xfe	       221	state.c	FUNCTION_14	IF_1
0x400027b	            0xeb09	                           jmp 0x4000286	       221	state.c	FUNCTION_14	IF_1
0x400027d	          0x83f901	                              cmp ecx, 1	       222	state.c	FUNCTION_14	ELSE_1	IF_2
0x4000280	            0x7504	                           jne 0x4000286	       222	state.c	FUNCTION_14	ELSE_1	IF_2
0x4000282	        0x800c2401	                        or byte [rsp], 1	       223	state.c	FUNCTION_14	ELSE_1	IF_2
0x4000286	          0x4585c0	                           test r8d, r8d	       226	state.c	FUNCTION_14	IF_3
0x4000289	            0x7506	                           jne 0x4000291	       226	state.c	FUNCTION_14	IF_3
0x400028b	        0x802424f9	                    and byte [rsp], 0xf9	       227	state.c	FUNCTION_14	IF_3
0x400028f	            0xeb28	                           jmp 0x40002b9	       227	state.c	FUNCTION_14	IF_3
0x4000291	        0x4183f801	                              cmp r8d, 1	       228	state.c	FUNCTION_14	ELSE_2	IF_4
0x4000295	            0x750f	                           jne 0x40002a6	       228	state.c	FUNCTION_14	ELSE_2	IF_4
0x4000297	         0xfb60424	                   movzx eax, byte [rsp]	       229	state.c	FUNCTION_14	ELSE_2	IF_4
0x400029b	          0x83e0f9	                     and eax, 0xfffffff9	       229	state.c	FUNCTION_14	ELSE_2	IF_4
0x400029e	          0x83c802	                               or eax, 2	       229	state.c	FUNCTION_14	ELSE_2	IF_4
0x40002a1	          0x880424	                      mov byte [rsp], al	       229	state.c	FUNCTION_14	ELSE_2	IF_4
0x40002a4	            0xeb13	                           jmp 0x40002b9	       229	state.c	FUNCTION_14	ELSE_2	IF_4
0x40002a6	        0x4183f802	                              cmp r8d, 2	       230	state.c	FUNCTION_14	ELSE_3	IF_5
0x40002aa	            0x750d	                           jne 0x40002b9	       230	state.c	FUNCTION_14	ELSE_3	IF_5
0x40002ac	         0xfb60424	                   movzx eax, byte [rsp]	       231	state.c	FUNCTION_14	ELSE_3	IF_5
0x40002b0	          0x83e0f9	                     and eax, 0xfffffff9	       231	state.c	FUNCTION_14	ELSE_3	IF_5
0x40002b3	          0x83c804	                               or eax, 4	       231	state.c	FUNCTION_14	ELSE_3	IF_5
0x40002b6	          0x880424	                      mov byte [rsp], al	       231	state.c	FUNCTION_14	ELSE_3	IF_5
0x40002b9	        0x488b4308	                mov rax, qword [rbx + 8]	       233	state.c	FUNCTION_14	IF_6
0x40002bd	          0x4885c0	                           test rax, rax	       233	state.c	FUNCTION_14	IF_6
0x40002c0	            0x7416	                            je 0x40002d8	       233	state.c	FUNCTION_14	IF_6
0x40002c2	        0x488b4050	            mov rax, qword [rax + 0x50] 	       234	state.c	FUNCTION_14	IF_6
0x40002c6	          0x4885c0	                           test rax, rax	       233	state.c	FUNCTION_14	IF_6
0x40002c9	            0x740d	                            je 0x40002d8	       233	state.c	FUNCTION_14	IF_6
0x40002cb	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	       235	state.c	FUNCTION_14	IF_6
0x40002cf	          0x4889e6	                            mov rsi, rsp	       235	state.c	FUNCTION_14	IF_6
0x40002d2	            0xffd0	                                call rax	       235	state.c	FUNCTION_14	IF_6
0x40002d4	            0x85c0	                           test eax, eax	       234	state.c	FUNCTION_14	IF_6
0x40002d6	            0x7505	                           jne 0x40002dd	       234	state.c	FUNCTION_14	IF_6
0x40002d8	          0x4585e4	                         test r12d, r12d	       236	state.c	FUNCTION_14	IF_6
0x40002db	            0x740a	                            je 0x40002e7	       236	state.c	FUNCTION_14	IF_6
0x40002dd	        0x488b4358	            mov rax, qword [rbx + 0x58] 	       237	state.c	FUNCTION_14	IF_6
0x40002e1	          0x8b1424	                    mov edx, dword [rsp]	       237	state.c	FUNCTION_14	IF_6
0x40002e4	          0x8914a8	            mov dword [rax + rbp*4], edx	       237	state.c	FUNCTION_14	IF_6
0x40002e7	      0x488b442408	                mov rax, qword [rsp + 8]	       238	state.c	FUNCTION_14
0x40002ec	    0x644833042528	                xor rax, qword fs:[0x28]	       238	state.c	FUNCTION_14
0x40002f5	            0x7405	                            je 0x40002fc	       238	state.c	FUNCTION_14
0x40002f7	      0xe800000000	                          call 0x40002fc	       238	state.c	FUNCTION_14
0x40002fc	        0x4883c410	                           add rsp, 0x10	       238	state.c	FUNCTION_14
0x4000300	              0x5b	                                 pop rbx	       238	state.c	FUNCTION_14
0x4000301	              0x5d	                                 pop rbp	       238	state.c	FUNCTION_14
0x4000302	            0x415c	                                 pop r12	       238	state.c	FUNCTION_14
0x4000304	              0xc3	                                     ret	       238	state.c	FUNCTION_14
clear_col_tabstop	FOR,0:IF,0:functions,0:WHILE,0:CALL,0:SWITCH,0:DO,0:ELSE,0	11
0x4000159	            0x89f0	                            mov eax, esi	       164	state.c	FUNCTION_10
0x400015b	          0xc1f803	                              sar eax, 3	       164	state.c	FUNCTION_10
0x400015e	            0x4898	                                    cdqe	       164	state.c	FUNCTION_10
0x4000160	        0x48034750	             add rax, qword [rdi + 0x50]	       164	state.c	FUNCTION_10
0x4000164	            0x89f1	                            mov ecx, esi	       164	state.c	FUNCTION_10
0x4000166	          0x83e107	                              and ecx, 7	       164	state.c	FUNCTION_10
0x4000169	      0xba01000000	                              mov edx, 1	       164	state.c	FUNCTION_10
0x400016e	            0xd3e2	                             shl edx, cl	       164	state.c	FUNCTION_10
0x4000170	            0xf7d2	                                 not edx	       164	state.c	FUNCTION_10
0x4000172	            0x2010	                      and byte [rax], dl	       164	state.c	FUNCTION_10
0x4000174	              0xc3	                                     ret	       164	state.c	FUNCTION_10
vterm_state_get_unrecognised_fbdata	FOR,0:IF,0:functions,0:WHILE,0:CALL,0:SWITCH,0:DO,0:ELSE,0	2
0x40012e5	        0x488b4720	            mov rax, qword [rdi + 0x20] 	      1847	state.c	FUNCTION_37
0x40012e9	              0xc3	                                     ret	      1848	state.c	FUNCTION_37
vterm_state_get_lineinfo	FOR,0:IF,0:functions,0:WHILE,0:CALL,0:SWITCH,0:DO,0:ELSE,0	4
0x40039ef	          0x4863f6	                         movsxd rsi, esi	      1916	state.c	FUNCTION_41
0x40039f2	        0x488b4758	            mov rax, qword [rdi + 0x58] 	      1916	state.c	FUNCTION_41
0x40039f6	        0x488d04b0	                  lea rax, [rax + rsi*4]	      1916	state.c	FUNCTION_41
0x40039fa	              0xc3	                                     ret	      1917	state.c	FUNCTION_41
erase	FOR,0:IF,2:functions,0:WHILE,0:CALL,0:SWITCH,0:DO,0:ELSE,0	16
0x4000128	          0x4989d0	                             mov r8, rdx	        46	state.c	FUNCTION_3
0x400012b	        0x488b5708	                mov rdx, qword [rdi + 8]	        47	state.c	FUNCTION_3	IF_1
0x400012f	          0x4885d2	                           test rdx, rdx	        47	state.c	FUNCTION_3	IF_1
0x4000132	            0x7423	                            je 0x4000157	        47	state.c	FUNCTION_3	IF_1
0x4000134	          0x4889f8	                            mov rax, rdi	        47	state.c	FUNCTION_3	IF_1
0x4000137	        0x4c8b4a20	              mov r9, qword [rdx + 0x20]	        47	state.c	FUNCTION_3	IF_1
0x400013b	          0x4d85c9	                             test r9, r9	        47	state.c	FUNCTION_3	IF_1
0x400013e	            0x7417	                            je 0x4000157	        47	state.c	FUNCTION_3	IF_1
0x4000140	        0x4883ec08	                              sub rsp, 8	        46	state.c	FUNCTION_3
0x4000144	            0x89ca	                            mov edx, ecx	        46	state.c	FUNCTION_3
0x4000146	          0x4889f7	                            mov rdi, rsi	        46	state.c	FUNCTION_3
0x4000149	        0x488b4810	            mov rcx, qword [rax + 0x10] 	        48	state.c	FUNCTION_3	IF_1	IF_2
0x400014d	          0x4c89c6	                             mov rsi, r8	        48	state.c	FUNCTION_3	IF_1	IF_2
0x4000150	          0x41ffd1	                                 call r9	        48	state.c	FUNCTION_3	IF_1	IF_2
0x4000153	        0x4883c408	                              add rsp, 8	        50	state.c	FUNCTION_3
0x4000157	            0xf3c3	                                     ret	        50	state.c	FUNCTION_3
linefeed	FOR,0:IF,2:functions,0:WHILE,0:CALL,5:SWITCH,0:DO,0:ELSE,1	44
0x400093b	        0x4883ec08	                              sub rsp, 8	       128	state.c	FUNCTION_7
0x400093f	          0x8b5730	            mov edx, dword [rdi + 0x30] 	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x4000942	          0x8b4740	            mov eax, dword [rdi + 0x40] 	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x4000945	            0x85c0	                           test eax, eax	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x4000947	            0x7809	                            js 0x4000952	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x4000949	          0x8d48ff	                      lea ecx, [rax - 1]	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x400094c	            0x39ca	                            cmp edx, ecx	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x400094e	            0x7544	                           jne 0x4000994	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x4000950	            0xeb59	                           jmp 0x40009ab	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x4000952	          0x8b4728	            mov eax, dword [rdi + 0x28] 	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x4000955	          0x8d48ff	                      lea ecx, [rax - 1]	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x4000958	            0x39ca	                            cmp edx, ecx	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x400095a	            0x7538	                           jne 0x4000994	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x400095c	            0xeb48	                           jmp 0x40009a6	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x400095e	        0x48c1e020	                           shl rax, 0x20	       132	state.c	FUNCTION_7	IF_1	CALL_2
0x4000962	          0x4809c6	                             or rsi, rax	       132	state.c	FUNCTION_7	IF_1	CALL_2
0x4000965	    0xf68795000000	           test byte [rdi + 0x95], 0x10 	       133	state.c	FUNCTION_7	IF_1	CALL_3
0x400096c	            0x7442	                            je 0x40009b0	       133	state.c	FUNCTION_7	IF_1	CALL_3
0x400096e	          0x8b5744	            mov edx, dword [rdi + 0x44] 	       133	state.c	FUNCTION_7	IF_1	CALL_3
0x4000971	          0x8b4748	            mov eax, dword [rdi + 0x48] 	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x4000974	            0x85c0	                           test eax, eax	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x4000976	            0x7903	                           jns 0x400097b	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x4000978	          0x8b472c	            mov eax, dword [rdi + 0x2c] 	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x400097b	        0x48c1e020	                           shl rax, 0x20	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x400097f	          0x4809c2	                             or rdx, rax	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x4000982	    0x41b800000000	                              mov r8d, 0	       136	state.c	FUNCTION_7	IF_1	CALL_5
0x4000988	      0xb901000000	                              mov ecx, 1	       136	state.c	FUNCTION_7	IF_1	CALL_5
0x400098d	      0xe87ffeffff	                         call sym.scroll	       136	state.c	FUNCTION_7	IF_1	CALL_5
0x4000992	            0xeb23	                           jmp 0x40009b7	       136	state.c	FUNCTION_7	IF_1	CALL_5
0x4000994	          0x8b4728	            mov eax, dword [rdi + 0x28] 	       138	state.c	FUNCTION_7	ELSE_1	IF_2
0x4000997	          0x83e801	                              sub eax, 1	       138	state.c	FUNCTION_7	ELSE_1	IF_2
0x400099a	            0x39c2	                            cmp edx, eax	       138	state.c	FUNCTION_7	ELSE_1	IF_2
0x400099c	            0x7d19	                           jge 0x40009b7	       138	state.c	FUNCTION_7	ELSE_1	IF_2
0x400099e	          0x83c201	                              add edx, 1	       139	state.c	FUNCTION_7	ELSE_1	IF_2
0x40009a1	          0x895730	             mov dword [rdi + 0x30], edx	       139	state.c	FUNCTION_7	ELSE_1	IF_2
0x40009a4	            0xeb11	                           jmp 0x40009b7	       140	state.c	FUNCTION_7
0x40009a6	          0x8b773c	            mov esi, dword [rdi + 0x3c] 	       131	state.c	FUNCTION_7	IF_1
0x40009a9	            0xebb3	                           jmp 0x400095e	       131	state.c	FUNCTION_7	IF_1
0x40009ab	          0x8b773c	            mov esi, dword [rdi + 0x3c] 	       131	state.c	FUNCTION_7	IF_1
0x40009ae	            0xebae	                           jmp 0x400095e	       131	state.c	FUNCTION_7	IF_1
0x40009b0	      0xba00000000	                              mov edx, 0	       133	state.c	FUNCTION_7	IF_1	CALL_3
0x40009b5	            0xebc1	                           jmp 0x4000978	       133	state.c	FUNCTION_7	IF_1	CALL_3
0x40009b7	        0x4883c408	                              add rsp, 8	       140	state.c	FUNCTION_7
0x40009bb	              0xc3	                                     ret	       140	state.c	FUNCTION_7
on_text	FOR,7:IF,16:functions,0:WHILE,2:CALL,34:SWITCH,0:DO,0:ELSE,2	319
0x4000c09	            0x4157	                                push r15	       241	state.c	FUNCTION_15
0x4000c0b	            0x4156	                                push r14	       241	state.c	FUNCTION_15
0x4000c0d	            0x4155	                                push r13	       241	state.c	FUNCTION_15
0x4000c0f	            0x4154	                                push r12	       241	state.c	FUNCTION_15
0x4000c11	              0x55	                                push rbp	       241	state.c	FUNCTION_15
0x4000c12	              0x53	                                push rbx	       241	state.c	FUNCTION_15
0x4000c13	        0x4883ec58	                           sub rsp, 0x58	       241	state.c	FUNCTION_15
0x4000c17	          0x4889fd	                            mov rbp, rdi	       241	state.c	FUNCTION_15
0x4000c1a	          0x4889f3	                            mov rbx, rsi	       241	state.c	FUNCTION_15
0x4000c1d	          0x4989d4	                            mov r12, rdx	       241	state.c	FUNCTION_15
0x4000c20	    0x64488b042528	                mov rax, qword fs:[0x28]	       241	state.c	FUNCTION_15
0x4000c29	      0x4889442448	             mov qword [rsp + 0x48], rax	       241	state.c	FUNCTION_15
0x4000c2e	            0x31c0	                            xor eax, eax	       241	state.c	FUNCTION_15
0x4000c30	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	       244	state.c	FUNCTION_15
0x4000c38	    0x48c744244000	               mov qword [rsp + 0x40], 0	       245	state.c	FUNCTION_15
0x4000c41	        0x488b4230	            mov rax, qword [rdx + 0x30] 	       249	state.c	FUNCTION_15
0x4000c45	      0x4889442430	             mov qword [rsp + 0x30], rax	       249	state.c	FUNCTION_15
0x4000c4a	    0x488d34b50400	                    lea rsi, [rsi*4 + 4]	       253	state.c	FUNCTION_15	CALL_1
0x4000c52	          0x488b3a	                    mov rdi, qword [rdx]	       253	state.c	FUNCTION_15	CALL_1
0x4000c55	      0xe800000000	                          call 0x4000c5a	       253	state.c	FUNCTION_15	CALL_1
0x4000c5a	          0x4989c6	                            mov r14, rax	       253	state.c	FUNCTION_15	CALL_1
0x4000c5d	    0x418b84241801	           mov eax, dword [r12 + 0x118] 	       256	state.c	FUNCTION_15
0x4000c65	            0x85c0	                           test eax, eax	       256	state.c	FUNCTION_15
0x4000c67	            0x7429	                            je 0x4000c92	       256	state.c	FUNCTION_15
0x4000c69	            0x4898	                                    cdqe	       256	state.c	FUNCTION_15
0x4000c6b	        0x488d0c00	                    lea rcx, [rax + rax]	       256	state.c	FUNCTION_15
0x4000c6f	        0x488d1401	                    lea rdx, [rcx + rax]	       256	state.c	FUNCTION_15
0x4000c73	    0x498d94d49800	          lea rdx, [r12 + rdx*8 + 0x98] 	       256	state.c	FUNCTION_15
0x4000c7b	          0x4801c8	                            add rax, rcx	       261	state.c	FUNCTION_15
0x4000c7e	    0x498bbcc49800	    mov rdi, qword [r12 + rax*8 + 0x98] 	       261	state.c	FUNCTION_15
0x4000c86	        0x488b4708	                mov rax, qword [rdi + 8]	       261	state.c	FUNCTION_15
0x4000c8a	    0x41b801000000	                              mov r8d, 1	       261	state.c	FUNCTION_15
0x4000c90	            0xeb54	                           jmp 0x4000ce6	       261	state.c	FUNCTION_15
0x4000c92	      0x488b442440	            mov rax, qword [rsp + 0x40] 	       257	state.c	FUNCTION_15
0x4000c97	      0x807c050000	                 cmp byte [rbp + rax], 0	       257	state.c	FUNCTION_15
0x4000c9c	            0x7819	                            js 0x4000cb7	       257	state.c	FUNCTION_15
0x4000c9e	    0x496384241001	        movsxd rax, dword [r12 + 0x110] 	       257	state.c	FUNCTION_15
0x4000ca6	        0x488d0440	                  lea rax, [rax + rax*2]	       257	state.c	FUNCTION_15
0x4000caa	    0x498d94c49800	          lea rdx, [r12 + rax*8 + 0x98] 	       257	state.c	FUNCTION_15
0x4000cb2	      0xe94d040000	                           jmp 0x4001104	       257	state.c	FUNCTION_15
0x4000cb7	        0x498b0424	                    mov rax, qword [r12]	       258	state.c	FUNCTION_15
0x4000cbb	    0x498d9424f800	                   lea rdx, [r12 + 0xf8]	       258	state.c	FUNCTION_15
0x4000cc3	        0xf6401801	               test byte [rax + 0x18], 1	       258	state.c	FUNCTION_15
0x4000cc7	     0xf8537040000	                           jne 0x4001104	       258	state.c	FUNCTION_15
0x4000ccd	    0x496384241401	        movsxd rax, dword [r12 + 0x114] 	       258	state.c	FUNCTION_15
0x4000cd5	        0x488d0440	                  lea rax, [rax + rax*2]	       258	state.c	FUNCTION_15
0x4000cd9	    0x498d94c49800	          lea rdx, [r12 + rax*8 + 0x98] 	       258	state.c	FUNCTION_15
0x4000ce1	      0xe91e040000	                           jmp 0x4001104	       258	state.c	FUNCTION_15
0x4000ce6	        0x488d7208	                      lea rsi, [rdx + 8]	       261	state.c	FUNCTION_15
0x4000cea	              0x53	                                push rbx	       261	state.c	FUNCTION_15
0x4000ceb	      0x488d542448	                   lea rdx, [rsp + 0x48]	       261	state.c	FUNCTION_15
0x4000cf0	              0x52	                                push rdx	       261	state.c	FUNCTION_15
0x4000cf1	          0x4989e9	                             mov r9, rbp	       261	state.c	FUNCTION_15
0x4000cf4	      0x488d4c243c	                   lea rcx, [rsp + 0x3c]	       261	state.c	FUNCTION_15
0x4000cf9	          0x4c89f2	                            mov rdx, r14	       261	state.c	FUNCTION_15
0x4000cfc	            0xffd0	                                call rax	       261	state.c	FUNCTION_15
0x4000cfe	        0x4883c410	                           add rsp, 0x10	       268	state.c	FUNCTION_15	IF_1
0x4000d02	      0x837c242c00	               cmp dword [rsp + 0x2c], 0	       268	state.c	FUNCTION_15	IF_1
0x4000d07	            0x7515	                           jne 0x4000d1e	       268	state.c	FUNCTION_15	IF_1
0x4000d09	          0x4c89f6	                            mov rsi, r14	       270	state.c	FUNCTION_15	IF_1	CALL_2
0x4000d0c	        0x498b3c24	                    mov rdi, qword [r12]	       270	state.c	FUNCTION_15	IF_1	CALL_2
0x4000d10	      0xe800000000	                          call 0x4000d15	       270	state.c	FUNCTION_15	IF_1	CALL_2
0x4000d15	        0x8b442440	            mov eax, dword [rsp + 0x40] 	       271	state.c	FUNCTION_15	IF_1
0x4000d19	      0xe9d4030000	                           jmp 0x40010f2	       271	state.c	FUNCTION_15	IF_1
0x4000d1e	    0x4183bc241801	              cmp dword [r12 + 0x118], 0	       274	state.c	FUNCTION_15	IF_2
0x4000d27	            0x740c	                            je 0x4000d35	       274	state.c	FUNCTION_15	IF_2
0x4000d29	    0x41c784241801	              mov dword [r12 + 0x118], 0	       275	state.c	FUNCTION_15	IF_2
0x4000d35	          0x418b3e	                    mov edi, dword [r14]	       279	state.c	FUNCTION_15	IF_3	CALL_3
0x4000d38	      0xe800000000	                          call 0x4000d3d	       279	state.c	FUNCTION_15	IF_3	CALL_3
0x4000d3d	    0xc744240c0000	                mov dword [rsp + 0xc], 0	       247	state.c	FUNCTION_15
0x4000d45	            0x85c0	                           test eax, eax	       279	state.c	FUNCTION_15	IF_3	CALL_3
0x4000d47	     0xf84f1000000	                            je 0x4000e3e	       279	state.c	FUNCTION_15	IF_3	CALL_3
0x4000d4d	    0x418b84248c00	            mov eax, dword [r12 + 0x8c] 	       281	state.c	FUNCTION_15	IF_3	IF_4
0x4000d55	      0x4139442430	            cmp dword [r12 + 0x30], eax 	       281	state.c	FUNCTION_15	IF_3	IF_4
0x4000d5a	     0xf85de000000	                           jne 0x4000e3e	       281	state.c	FUNCTION_15	IF_3	IF_4
0x4000d60	    0x418b84248800	            mov eax, dword [r12 + 0x88] 	       281	state.c	FUNCTION_15	IF_3	IF_4
0x4000d68	    0x410384249000	             add eax, dword [r12 + 0x90]	       281	state.c	FUNCTION_15	IF_3	IF_4
0x4000d70	      0x4139442434	            cmp dword [r12 + 0x34], eax 	       281	state.c	FUNCTION_15	IF_3	IF_4
0x4000d75	     0xf85c3000000	                           jne 0x4000e3e	       281	state.c	FUNCTION_15	IF_3	IF_4
0x4000d7b	      0x498b542478	            mov rdx, qword [r12 + 0x78] 	       292	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0x4000d80	          0x833a00	                      cmp dword [rdx], 0	       292	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0x4000d83	            0x7413	                            je 0x4000d98	       292	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0x4000d85	      0xbb00000000	                              mov ebx, 0	       292	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0x4000d8a	          0x83c301	                              add ebx, 1	       293	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0x4000d8d	          0x4863c3	                         movsxd rax, ebx	       292	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0x4000d90	        0x833c8200	              cmp dword [rdx + rax*4], 0	       292	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0x4000d94	            0x75f4	                           jne 0x4000d8a	       292	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0x4000d96	            0xeb05	                           jmp 0x4000d9d	       292	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0x4000d98	      0xbb00000000	                              mov ebx, 0	       292	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0x4000d9d	    0xc744240c0000	                mov dword [rsp + 0xc], 0	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x4000da5	          0x4189dd	                           mov r13d, ebx	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x4000da8	      0x837c242c00	               cmp dword [rsp + 0x2c], 0	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x4000dad	            0x7e50	                           jle 0x4000dff	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x4000daf	            0xeb36	                           jmp 0x4000de7	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x4000db1	    0x413b9c248000	            cmp ebx, dword [r12 + 0x80] 	       297	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	IF_5
0x4000db9	            0x7c08	                            jl 0x4000dc3	       297	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	IF_5
0x4000dbb	          0x4c89e7	                            mov rdi, r12	       298	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_8
0x4000dbe	      0xe8eefdffff	            call sym.grow_combine_buffer	       298	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_8
0x4000dc3	        0x448d6b01	                     lea r13d, [rbx + 1]	       299	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2
0x4000dc7	      0x8344240c01	                add dword [rsp + 0xc], 1	       299	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2
0x4000dcc	        0x8b74240c	              mov esi, dword [rsp + 0xc]	       299	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2
0x4000dd0	          0x8b5500	                    mov edx, dword [rbp]	       299	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2
0x4000dd3	          0x4863db	                         movsxd rbx, ebx	       299	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2
0x4000dd6	      0x498b442478	            mov rax, qword [r12 + 0x78] 	       299	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2
0x4000ddb	          0x891498	            mov dword [rax + rbx*4], edx	       299	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2
0x4000dde	        0x3974242c	            cmp dword [rsp + 0x2c], esi 	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x4000de2	            0x7e1b	                           jle 0x4000dff	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x4000de4	          0x4489eb	                           mov ebx, r13d	       299	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2
0x4000de7	      0x486344240c	          movsxd rax, dword [rsp + 0xc] 	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x4000dec	        0x498d2c86	                  lea rbp, [r14 + rax*4]	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x4000df0	          0x8b7d00	                    mov edi, dword [rbp]	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x4000df3	      0xe800000000	                          call 0x4000df8	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x4000df8	            0x85c0	                           test eax, eax	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x4000dfa	            0x75b5	                           jne 0x4000db1	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x4000dfc	          0x4189dd	                           mov r13d, ebx	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x4000dff	    0x453bac248000	           cmp r13d, dword [r12 + 0x80] 	       301	state.c	FUNCTION_15	IF_3	IF_4	IF_6
0x4000e07	            0x7c08	                            jl 0x4000e11	       301	state.c	FUNCTION_15	IF_3	IF_4	IF_6
0x4000e09	          0x4c89e7	                            mov rdi, r12	       302	state.c	FUNCTION_15	IF_3	IF_4	CALL_9
0x4000e0c	      0xe8a0fdffff	            call sym.grow_combine_buffer	       302	state.c	FUNCTION_15	IF_3	IF_4	CALL_9
0x4000e11	          0x4d63ed	                        movsxd r13, r13d	       303	state.c	FUNCTION_15	IF_3	IF_4
0x4000e14	      0x498b442478	            mov rax, qword [r12 + 0x78] 	       303	state.c	FUNCTION_15	IF_3	IF_4
0x4000e19	    0x42c704a80000	              mov dword [rax + r13*4], 0	       303	state.c	FUNCTION_15	IF_3	IF_4
0x4000e21	    0x498b8c248c00	            mov rcx, qword [r12 + 0x8c] 	       312	state.c	FUNCTION_15	IF_3	IF_4	CALL_12
0x4000e29	    0x418b94248800	            mov edx, dword [r12 + 0x88] 	       312	state.c	FUNCTION_15	IF_3	IF_4	CALL_12
0x4000e31	      0x498b742478	            mov rsi, qword [r12 + 0x78] 	       312	state.c	FUNCTION_15	IF_3	IF_4	CALL_12
0x4000e36	          0x4c89e7	                            mov rdi, r12	       312	state.c	FUNCTION_15	IF_3	IF_4	CALL_12
0x4000e39	      0xe802f2ffff	                       call sym.putglyph	       312	state.c	FUNCTION_15	IF_3	IF_4	CALL_12
0x4000e3e	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       319	state.c	FUNCTION_15	FOR_3
0x4000e42	        0x3b44242c	            cmp eax, dword [rsp + 0x2c] 	       319	state.c	FUNCTION_15	FOR_3
0x4000e46	     0xf8d84020000	                           jge 0x40010d0	       319	state.c	FUNCTION_15	FOR_3
0x4000e4c	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       326	state.c	FUNCTION_15	FOR_3	FOR_4
0x4000e50	          0x8d5801	                      lea ebx, [rax + 1]	       326	state.c	FUNCTION_15	FOR_3	FOR_4
0x4000e53	        0x3b5c242c	            cmp ebx, dword [rsp + 0x2c] 	       326	state.c	FUNCTION_15	FOR_3	FOR_4
0x4000e57	            0x7d19	                           jge 0x4000e72	       326	state.c	FUNCTION_15	FOR_3	FOR_4
0x4000e59	          0x4863c3	                         movsxd rax, ebx	       327	state.c	FUNCTION_15	FOR_3	FOR_4	IF_7	CALL_14
0x4000e5c	        0x418b3c86	            mov edi, dword [r14 + rax*4]	       327	state.c	FUNCTION_15	FOR_3	FOR_4	IF_7	CALL_14
0x4000e60	      0xe800000000	                          call 0x4000e65	       327	state.c	FUNCTION_15	FOR_3	FOR_4	IF_7	CALL_14
0x4000e65	            0x85c0	                           test eax, eax	       327	state.c	FUNCTION_15	FOR_3	FOR_4	IF_7	CALL_14
0x4000e67	            0x7409	                            je 0x4000e72	       327	state.c	FUNCTION_15	FOR_3	FOR_4	IF_7	CALL_14
0x4000e69	          0x83c301	                              add ebx, 1	       326	state.c	FUNCTION_15	FOR_3	FOR_4
0x4000e6c	        0x395c242c	            cmp dword [rsp + 0x2c], ebx 	       326	state.c	FUNCTION_15	FOR_3	FOR_4
0x4000e70	            0x7fe7	                            jg 0x4000e59	       326	state.c	FUNCTION_15	FOR_3	FOR_4
0x4000e72	            0x89d8	                            mov eax, ebx	       330	state.c	FUNCTION_15	FOR_3	CALL_15
0x4000e74	        0x8b6c240c	              mov ebp, dword [rsp + 0xc]	       330	state.c	FUNCTION_15	FOR_3	CALL_15
0x4000e78	            0x29e8	                            sub eax, ebp	       330	state.c	FUNCTION_15	FOR_3	CALL_15
0x4000e7a	        0x89442410	             mov dword [rsp + 0x10], eax	       330	state.c	FUNCTION_15	FOR_3	CALL_15
0x4000e7e	          0x8d7001	                      lea esi, [rax + 1]	       330	state.c	FUNCTION_15	FOR_3	CALL_15
0x4000e81	          0x4863f6	                         movsxd rsi, esi	       330	state.c	FUNCTION_15	FOR_3	CALL_15
0x4000e84	        0x48c1e602	                              shl rsi, 2	       330	state.c	FUNCTION_15	FOR_3	CALL_15
0x4000e88	        0x498b3c24	                    mov rdi, qword [r12]	       330	state.c	FUNCTION_15	FOR_3	CALL_15
0x4000e8c	      0xe800000000	                          call 0x4000e91	       330	state.c	FUNCTION_15	FOR_3	CALL_15
0x4000e91	          0x4989c7	                            mov r15, rax	       330	state.c	FUNCTION_15	FOR_3	CALL_15
0x4000e94	            0x39dd	                            cmp ebp, ebx	       332	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000e96	            0x7d32	                           jge 0x4000eca	       332	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000e98	    0x41bd00000000	                             mov r13d, 0	       332	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000e9e	          0x4863c5	                         movsxd rax, ebp	       334	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000ea1	        0x498d1486	                  lea rdx, [r14 + rax*4]	       334	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000ea5	            0x8b0a	                    mov ecx, dword [rdx]	       334	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000ea7	            0x89e8	                            mov eax, ebp	       334	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000ea9	        0x2b44240c	              sub eax, dword [rsp + 0xc]	       334	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000ead	            0x4898	                                    cdqe	       334	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000eaf	        0x41890c87	            mov dword [r15 + rax*4], ecx	       334	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000eb3	            0x8b3a	                    mov edi, dword [rdx]	       335	state.c	FUNCTION_15	FOR_3	FOR_5	CALL_16
0x4000eb5	      0xe800000000	                          call 0x4000eba	       335	state.c	FUNCTION_15	FOR_3	FOR_5	CALL_16
0x4000eba	          0x4101c5	                           add r13d, eax	       342	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000ebd	          0x83c501	                              add ebp, 1	       332	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000ec0	            0x39dd	                            cmp ebp, ebx	       332	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000ec2	            0x7cda	                            jl 0x4000e9e	       332	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000ec4	        0x895c240c	              mov dword [rsp + 0xc], ebx	       332	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000ec8	            0xeb06	                           jmp 0x4000ed0	       332	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000eca	    0x41bd00000000	                             mov r13d, 0	       323	state.c	FUNCTION_15	FOR_3
0x4000ed0	      0x4863442410	         movsxd rax, dword [rsp + 0x10] 	       345	state.c	FUNCTION_15	FOR_3
0x4000ed5	    0x41c704870000	              mov dword [r15 + rax*4], 0	       345	state.c	FUNCTION_15	FOR_3
0x4000edd	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       346	state.c	FUNCTION_15	FOR_3
0x4000ee1	          0x8d58ff	                      lea ebx, [rax - 1]	       346	state.c	FUNCTION_15	FOR_3
0x4000ee4	    0x41837c243800	               cmp dword [r12 + 0x38], 0	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000eea	            0x7531	                           jne 0x4000f1d	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000eec	          0x4489ea	                           mov edx, r13d	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000eef	      0x4103542434	             add edx, dword [r12 + 0x34]	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000ef4	      0x49634c2430	         movsxd rcx, dword [r12 + 0x30] 	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000ef9	      0x498b442458	            mov rax, qword [r12 + 0x58] 	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000efe	        0xf6048801	              test byte [rax + rcx*4], 1	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000f02	            0x7410	                            je 0x4000f14	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000f04	      0x418b44242c	            mov eax, dword [r12 + 0x2c] 	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000f09	            0x89c1	                            mov ecx, eax	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000f0b	          0xc1e91f	                           shr ecx, 0x1f	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000f0e	             0x1c8	                            add eax, ecx	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000f10	            0xd1f8	                              sar eax, 1	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000f12	            0xeb05	                           jmp 0x4000f19	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000f14	      0x418b44242c	            mov eax, dword [r12 + 0x2c] 	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000f19	            0x39d0	                            cmp eax, edx	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000f1b	            0x7d1a	                           jge 0x4000f37	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000f1d	          0x4c89e7	                            mov rdi, r12	       357	state.c	FUNCTION_15	FOR_3	IF_9	CALL_23
0x4000f20	      0xe816faffff	                       call sym.linefeed	       357	state.c	FUNCTION_15	FOR_3	IF_9	CALL_23
0x4000f25	    0x41c744243400	               mov dword [r12 + 0x34], 0	       358	state.c	FUNCTION_15	FOR_3	IF_9
0x4000f2e	    0x41c744243800	               mov dword [r12 + 0x38], 0	       359	state.c	FUNCTION_15	FOR_3	IF_9
0x4000f37	    0x41f684249400	               test byte [r12 + 0x94], 8	       362	state.c	FUNCTION_15	FOR_3	IF_10
0x4000f40	            0x746e	                            je 0x4000fb0	       362	state.c	FUNCTION_15	FOR_3	IF_10
0x4000f42	      0x418b442430	            mov eax, dword [r12 + 0x30] 	       368	state.c	FUNCTION_15	FOR_3	IF_10
0x4000f47	          0x8d7001	                      lea esi, [rax + 1]	       369	state.c	FUNCTION_15	FOR_3	IF_10
0x4000f4a	        0x48c1e620	                           shl rsi, 0x20	       369	state.c	FUNCTION_15	FOR_3	IF_10
0x4000f4e	            0x89c2	                            mov edx, eax	       369	state.c	FUNCTION_15	FOR_3	IF_10
0x4000f50	          0x4809d6	                             or rsi, rdx	       369	state.c	FUNCTION_15	FOR_3	IF_10
0x4000f53	      0x418b542434	            mov edx, dword [r12 + 0x34] 	       370	state.c	FUNCTION_15	FOR_3	IF_10
0x4000f58	    0x48b900000000	          movabs rcx, 0xffffffff00000000	       370	state.c	FUNCTION_15	FOR_3	IF_10
0x4000f62	      0x48234c2418	             and rcx, qword [rsp + 0x18]	       370	state.c	FUNCTION_15	FOR_3	IF_10
0x4000f67	          0x4809d1	                             or rcx, rdx	       370	state.c	FUNCTION_15	FOR_3	IF_10
0x4000f6a	            0x4898	                                    cdqe	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0x4000f6c	      0x498b542458	            mov rdx, qword [r12 + 0x58] 	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0x4000f71	        0xf6048201	              test byte [rdx + rax*4], 1	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0x4000f75	            0x7410	                            je 0x4000f87	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0x4000f77	      0x418b44242c	            mov eax, dword [r12 + 0x2c] 	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0x4000f7c	            0x89c2	                            mov edx, eax	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0x4000f7e	          0xc1ea1f	                           shr edx, 0x1f	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0x4000f81	             0x1c2	                            add edx, eax	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0x4000f83	            0xd1fa	                              sar edx, 1	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0x4000f85	            0xeb05	                           jmp 0x4000f8c	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0x4000f87	      0x418b54242c	            mov edx, dword [r12 + 0x2c] 	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0x4000f8c	          0x4889d0	                            mov rax, rdx	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0x4000f8f	        0x48c1e020	                           shl rax, 0x20	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0x4000f93	            0x89ca	                            mov edx, ecx	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0x4000f95	          0x4809c2	                             or rdx, rax	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0x4000f98	      0x4889542418	             mov qword [rsp + 0x18], rdx	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0x4000f9d	    0x41b8ffffffff	                     mov r8d, 0xffffffff	       372	state.c	FUNCTION_15	FOR_3	IF_10	CALL_25
0x4000fa3	      0xb900000000	                              mov ecx, 0	       372	state.c	FUNCTION_15	FOR_3	IF_10	CALL_25
0x4000fa8	          0x4c89e7	                            mov rdi, r12	       372	state.c	FUNCTION_15	FOR_3	IF_10	CALL_25
0x4000fab	      0xe861f8ffff	                         call sym.scroll	       372	state.c	FUNCTION_15	FOR_3	IF_10	CALL_25
0x4000fb0	      0x498b4c2430	            mov rcx, qword [r12 + 0x30] 	       375	state.c	FUNCTION_15	FOR_3	CALL_26
0x4000fb5	          0x4489ea	                           mov edx, r13d	       375	state.c	FUNCTION_15	FOR_3	CALL_26
0x4000fb8	          0x4c89fe	                            mov rsi, r15	       375	state.c	FUNCTION_15	FOR_3	CALL_26
0x4000fbb	          0x4c89e7	                            mov rdi, r12	       375	state.c	FUNCTION_15	FOR_3	CALL_26
0x4000fbe	      0xe87df0ffff	                       call sym.putglyph	       375	state.c	FUNCTION_15	FOR_3	CALL_26
0x4000fc3	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	       377	state.c	FUNCTION_15	FOR_3	IF_11
0x4000fc7	          0x83e801	                              sub eax, 1	       377	state.c	FUNCTION_15	FOR_3	IF_11
0x4000fca	            0x39c3	                            cmp ebx, eax	       377	state.c	FUNCTION_15	FOR_3	IF_11
0x4000fcc	     0xf859a000000	                           jne 0x400106c	       377	state.c	FUNCTION_15	FOR_3	IF_11
0x4000fd2	        0x41833f00	                      cmp dword [r15], 0	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4000fd6	            0x744e	                            je 0x4001026	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4000fd8	          0x4c89fd	                            mov rbp, r15	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4000fdb	    0x48c744241000	               mov qword [rsp + 0x10], 0	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4000fe4	      0xbb00000000	                              mov ebx, 0	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4000fe9	    0x413b9c248000	            cmp ebx, dword [r12 + 0x80] 	       382	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7	IF_12
0x4000ff1	            0x7c08	                            jl 0x4000ffb	       382	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7	IF_12
0x4000ff3	          0x4c89e7	                            mov rdi, r12	       383	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7	CALL_27
0x4000ff6	      0xe8b6fbffff	            call sym.grow_combine_buffer	       383	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7	CALL_27
0x4000ffb	          0x8b5500	                    mov edx, dword [rbp]	       384	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4000ffe	      0x498b442478	            mov rax, qword [r12 + 0x78] 	       384	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4001003	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       384	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4001008	          0x891408	              mov dword [rax + rcx], edx	       384	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x400100b	          0x83c301	                              add ebx, 1	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x400100e	          0x4863c3	                         movsxd rax, ebx	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4001011	        0x48c1e002	                              shl rax, 2	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4001015	      0x4889442410	             mov qword [rsp + 0x10], rax	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x400101a	        0x498d2c07	                    lea rbp, [r15 + rax]	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x400101e	        0x837d0000	                      cmp dword [rbp], 0	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4001022	            0x75c5	                           jne 0x4000fe9	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4001024	            0xeb0e	                           jmp 0x4001034	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4001026	    0x48c744241000	               mov qword [rsp + 0x10], 0	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x400102f	      0xbb00000000	                              mov ebx, 0	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4001034	    0x413b9c248000	            cmp ebx, dword [r12 + 0x80] 	       386	state.c	FUNCTION_15	FOR_3	IF_11	IF_13
0x400103c	            0x7c08	                            jl 0x4001046	       386	state.c	FUNCTION_15	FOR_3	IF_11	IF_13
0x400103e	          0x4c89e7	                            mov rdi, r12	       387	state.c	FUNCTION_15	FOR_3	IF_11	CALL_28
0x4001041	      0xe86bfbffff	            call sym.grow_combine_buffer	       387	state.c	FUNCTION_15	FOR_3	IF_11	CALL_28
0x4001046	      0x498b442478	            mov rax, qword [r12 + 0x78] 	       388	state.c	FUNCTION_15	FOR_3	IF_11
0x400104b	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       388	state.c	FUNCTION_15	FOR_3	IF_11
0x4001050	    0xc70430000000	                mov dword [rax + rsi], 0	       388	state.c	FUNCTION_15	FOR_3	IF_11
0x4001057	    0x4589ac248800	            mov dword [r12 + 0x88], r13d	       389	state.c	FUNCTION_15	FOR_3	IF_11
0x400105f	      0x498b442430	            mov rax, qword [r12 + 0x30] 	       390	state.c	FUNCTION_15	FOR_3	IF_11
0x4001064	    0x498984248c00	             mov qword [r12 + 0x8c], rax	       390	state.c	FUNCTION_15	FOR_3	IF_11
0x400106c	      0x45036c2434	            add r13d, dword [r12 + 0x34]	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x4001071	      0x4963542430	         movsxd rdx, dword [r12 + 0x30] 	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x4001076	      0x498b442458	            mov rax, qword [r12 + 0x58] 	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x400107b	        0xf6049001	              test byte [rax + rdx*4], 1	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x400107f	            0x7410	                            je 0x4001091	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x4001081	      0x418b44242c	            mov eax, dword [r12 + 0x2c] 	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x4001086	            0x89c2	                            mov edx, eax	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x4001088	          0xc1ea1f	                           shr edx, 0x1f	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x400108b	             0x1d0	                            add eax, edx	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x400108d	            0xd1f8	                              sar eax, 1	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x400108f	            0xeb05	                           jmp 0x4001096	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x4001091	      0x418b44242c	            mov eax, dword [r12 + 0x2c] 	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x4001096	          0x4439e8	                           cmp eax, r13d	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x4001099	            0x7f16	                            jg 0x40010b1	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x400109b	    0x41f684249400	               test byte [r12 + 0x94], 4	       394	state.c	FUNCTION_15	FOR_3	IF_14	IF_15
0x40010a4	            0x7410	                            je 0x40010b6	       394	state.c	FUNCTION_15	FOR_3	IF_14	IF_15
0x40010a6	    0x41c744243801	               mov dword [r12 + 0x38], 1	       395	state.c	FUNCTION_15	FOR_3	IF_14	IF_15
0x40010af	            0xeb05	                           jmp 0x40010b6	       395	state.c	FUNCTION_15	FOR_3	IF_14	IF_15
0x40010b1	      0x45896c2434	            mov dword [r12 + 0x34], r13d	       398	state.c	FUNCTION_15	FOR_3	ELSE_2
0x40010b6	          0x4c89fe	                            mov rsi, r15	       400	state.c	FUNCTION_15	FOR_3	CALL_30
0x40010b9	        0x498b3c24	                    mov rdi, qword [r12]	       400	state.c	FUNCTION_15	FOR_3	CALL_30
0x40010bd	      0xe800000000	                          call 0x40010c2	       400	state.c	FUNCTION_15	FOR_3	CALL_30
0x40010c2	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       319	state.c	FUNCTION_15	FOR_3
0x40010c6	        0x3944242c	            cmp dword [rsp + 0x2c], eax 	       319	state.c	FUNCTION_15	FOR_3
0x40010ca	     0xf8f7cfdffff	                            jg 0x4000e4c	       319	state.c	FUNCTION_15	FOR_3
0x40010d0	      0xba00000000	                              mov edx, 0	       403	state.c	FUNCTION_15	CALL_31
0x40010d5	      0x488d742430	                   lea rsi, [rsp + 0x30]	       403	state.c	FUNCTION_15	CALL_31
0x40010da	          0x4c89e7	                            mov rdi, r12	       403	state.c	FUNCTION_15	CALL_31
0x40010dd	      0xe8f6efffff	                   call sym.updatecursor	       403	state.c	FUNCTION_15	CALL_31
0x40010e2	          0x4c89f6	                            mov rsi, r14	       414	state.c	FUNCTION_15	CALL_34
0x40010e5	        0x498b3c24	                    mov rdi, qword [r12]	       414	state.c	FUNCTION_15	CALL_34
0x40010e9	      0xe800000000	                          call 0x40010ee	       414	state.c	FUNCTION_15	CALL_34
0x40010ee	        0x8b442440	            mov eax, dword [rsp + 0x40] 	       415	state.c	FUNCTION_15
0x40010f2	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	       416	state.c	FUNCTION_15
0x40010f7	    0x644833342528	                xor rsi, qword fs:[0x28]	       416	state.c	FUNCTION_15
0x4001100	            0x7416	                            je 0x4001118	       416	state.c	FUNCTION_15
0x4001102	            0xeb0f	                           jmp 0x4001113	       416	state.c	FUNCTION_15
0x4001104	          0x488b3a	                    mov rdi, qword [rdx]	       261	state.c	FUNCTION_15
0x4001107	        0x488b4708	                mov rax, qword [rdi + 8]	       261	state.c	FUNCTION_15
0x400110b	          0x4189d8	                            mov r8d, ebx	       261	state.c	FUNCTION_15
0x400110e	      0xe9d3fbffff	                           jmp 0x4000ce6	       261	state.c	FUNCTION_15
0x4001113	      0xe800000000	                          call 0x4001118	       416	state.c	FUNCTION_15
0x4001118	        0x4883c458	                           add rsp, 0x58	       416	state.c	FUNCTION_15
0x400111c	              0x5b	                                 pop rbx	       416	state.c	FUNCTION_15
0x400111d	              0x5d	                                 pop rbp	       416	state.c	FUNCTION_15
0x400111e	            0x415c	                                 pop r12	       416	state.c	FUNCTION_15
0x4001120	            0x415d	                                 pop r13	       416	state.c	FUNCTION_15
0x4001122	            0x415e	                                 pop r14	       416	state.c	FUNCTION_15
0x4001124	            0x415f	                                 pop r15	       416	state.c	FUNCTION_15
0x4001126	              0xc3	                                     ret	       416	state.c	FUNCTION_15
on_dcs	FOR,0:IF,3:functions,0:WHILE,0:CALL,2:SWITCH,0:DO,0:ELSE,1	188
0x4000533	            0x4155	                                push r13	      1595	state.c	FUNCTION_28
0x4000535	            0x4154	                                push r12	      1595	state.c	FUNCTION_28
0x4000537	              0x55	                                push rbp	      1595	state.c	FUNCTION_28
0x4000538	              0x53	                                push rbx	      1595	state.c	FUNCTION_28
0x4000539	    0x4881ecb80000	                           sub rsp, 0xb8	      1595	state.c	FUNCTION_28
0x4000540	          0x4989f9	                             mov r9, rdi	      1595	state.c	FUNCTION_28
0x4000543	          0x4989f0	                             mov r8, rsi	      1595	state.c	FUNCTION_28
0x4000546	          0x4889d3	                            mov rbx, rdx	      1595	state.c	FUNCTION_28
0x4000549	    0x64488b042528	                mov rax, qword fs:[0x28]	      1595	state.c	FUNCTION_28
0x4000552	    0x48898424a800	             mov qword [rsp + 0xa8], rax	      1595	state.c	FUNCTION_28
0x400055a	            0x31c0	                            xor eax, eax	      1595	state.c	FUNCTION_28
0x400055c	        0x4883fe01	                              cmp rsi, 1	      1598	state.c	FUNCTION_28	IF_1	CALL_1
0x4000560	     0xf863c020000	                           jbe 0x40007a2	      1598	state.c	FUNCTION_28	IF_1	CALL_1
0x4000566	      0xbf00000000	                              mov edi, 0	      1598	state.c	FUNCTION_28	IF_1	CALL_1
0x400056b	      0xb902000000	                              mov ecx, 2	      1598	state.c	FUNCTION_28	IF_1	CALL_1
0x4000570	          0x4c89ce	                             mov rsi, r9	      1598	state.c	FUNCTION_28	IF_1	CALL_1
0x4000573	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1598	state.c	FUNCTION_28	IF_1	CALL_1
0x4000575	           0xf97c2	                                 seta dl	      1598	state.c	FUNCTION_28	IF_1	CALL_1
0x4000578	           0xf92c0	                                 setb al	      1598	state.c	FUNCTION_28	IF_1	CALL_1
0x400057b	            0x38c2	                              cmp dl, al	      1598	state.c	FUNCTION_28	IF_1	CALL_1
0x400057d	     0xf851f020000	                           jne 0x40007a2	      1598	state.c	FUNCTION_28	IF_1	CALL_1
0x4000583	        0x498d50fe	                       lea rdx, [r8 - 2]	      1599	state.c	FUNCTION_28	IF_1	CALL_2
0x4000587	        0x498d4102	                       lea rax, [r9 + 2]	      1599	state.c	FUNCTION_28	IF_1	CALL_2
0x400058b	        0x4883fa01	                              cmp rdx, 1	      1546	state.c	FUNCTION_27	IF_1
0x400058f	     0xf853c010000	                           jne 0x40006d1	      1546	state.c	FUNCTION_27	IF_1
0x4000595	      0x410fb64902	                movzx ecx, byte [r9 + 2]	      1547	state.c	FUNCTION_27	IF_1	SWITCH_1
0x400059a	          0x80f972	                            cmp cl, 0x72	      1547	state.c	FUNCTION_27	IF_1	SWITCH_1
0x400059d	     0xf84c8000000	                            je 0x400066b	      1547	state.c	FUNCTION_27	IF_1	SWITCH_1
0x40005a3	          0x80f973	                            cmp cl, 0x73	      1547	state.c	FUNCTION_27	IF_1	SWITCH_1
0x40005a6	     0xf84eb000000	                            je 0x4000697	      1547	state.c	FUNCTION_27	IF_1	SWITCH_1
0x40005ac	          0x80f96d	                            cmp cl, 0x6d	      1547	state.c	FUNCTION_27	IF_1	SWITCH_1
0x40005af	     0xf851c010000	                           jne 0x40006d1	      1547	state.c	FUNCTION_27	IF_1	SWITCH_1
0x40005b5	      0xba14000000	                           mov edx, 0x14	      1551	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_1
0x40005ba	          0x4889e6	                            mov rsi, rsp	      1551	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_1
0x40005bd	          0x4889df	                            mov rdi, rbx	      1551	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_1
0x40005c0	      0xe800000000	                          call 0x40005c5	      1551	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_1
0x40005c5	          0x4189c4	                           mov r12d, eax	      1551	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_1
0x40005c8	      0xba00000000	                              mov edx, 0	      1553	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_2
0x40005cd	      0xbe90000000	                           mov esi, 0x90	      1553	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_2
0x40005d2	          0x488b3b	                    mov rdi, qword [rbx]	      1553	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_2
0x40005d5	      0xb800000000	                              mov eax, 0	      1553	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_2
0x40005da	      0xe800000000	                          call 0x40005df	      1553	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_2
0x40005df	          0x4585e4	                         test r12d, r12d	      1554	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1
0x40005e2	            0x7e54	                           jle 0x4000638	      1554	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1
0x40005e4	      0x458d6c24ff	                     lea r13d, [r12 - 1]	      1554	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1
0x40005e9	        0x4983c501	                              add r13, 1	      1554	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1
0x40005ed	      0xbd00000000	                              mov ebp, 0	      1554	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1
0x40005f2	        0x4183ec01	                             sub r12d, 1	      1555	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1	CALL_3
0x40005f6	        0x488b04ec	            mov rax, qword [rsp + rbp*8]	      1559	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_5
0x40005fa	          0x4889c2	                            mov rdx, rax	      1555	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1	CALL_3
0x40005fd	    0x81e2ffffff7f	                     and edx, 0x7fffffff	      1555	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1	CALL_3
0x4000603	          0x4139ec	                           cmp r12d, ebp	      1555	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1	CALL_3
0x4000606	            0x7415	                            je 0x400061d	      1555	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1	CALL_3
0x4000608	      0x2500000080	                     and eax, 0x80000000	      1555	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1	CALL_3
0x400060d	      0xbe00000000	                              mov esi, 0	      1555	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1	CALL_3
0x4000612	      0xb800000000	                              mov eax, 0	      1555	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1	CALL_3
0x4000617	        0x480f45f0	                         cmovne rsi, rax	      1555	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1	CALL_3
0x400061b	            0xeb05	                           jmp 0x4000622	      1555	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1	CALL_3
0x400061d	      0xbe00000000	                              mov esi, 0	      1555	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1	CALL_3
0x4000622	          0x488b3b	                    mov rdi, qword [rbx]	      1555	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1	CALL_3
0x4000625	      0xb800000000	                              mov eax, 0	      1555	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1	CALL_3
0x400062a	      0xe800000000	                          call 0x400062f	      1555	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1	CALL_3
0x400062f	        0x4883c501	                              add rbp, 1	      1555	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1	CALL_3
0x4000633	          0x4c39ed	                            cmp rbp, r13	      1554	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1
0x4000636	            0x75be	                           jne 0x40005f6	      1554	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1
0x4000638	      0xbe00000000	                              mov esi, 0	      1560	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_6
0x400063d	          0x488b3b	                    mov rdi, qword [rbx]	      1560	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_6
0x4000640	      0xb800000000	                              mov eax, 0	      1560	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_6
0x4000645	      0xe800000000	                          call 0x400064a	      1560	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_6
0x400064a	      0xba00000000	                              mov edx, 0	      1561	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_7
0x400064f	      0xbe9c000000	                           mov esi, 0x9c	      1561	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_7
0x4000654	          0x488b3b	                    mov rdi, qword [rbx]	      1561	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_7
0x4000657	      0xb800000000	                              mov eax, 0	      1561	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_7
0x400065c	      0xe800000000	                          call 0x4000661	      1561	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_7
0x4000661	      0xb801000000	                              mov eax, 1	      1600	state.c	FUNCTION_28	IF_1
0x4000666	      0xe969010000	                           jmp 0x40007d4	      1600	state.c	FUNCTION_28	IF_1
0x400066b	          0x8b4b40	            mov ecx, dword [rbx + 0x40] 	      1565	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_9
0x400066e	            0x85c9	                           test ecx, ecx	      1565	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_9
0x4000670	            0x7903	                           jns 0x4000675	      1565	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_9
0x4000672	          0x8b4b28	            mov ecx, dword [rbx + 0x28] 	      1565	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_9
0x4000675	          0x8b433c	            mov eax, dword [rbx + 0x3c] 	      1565	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_9
0x4000678	          0x8d5001	                      lea edx, [rax + 1]	      1565	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_9
0x400067b	      0xbe00000000	                              mov esi, 0	      1565	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_9
0x4000680	          0x488b3b	                    mov rdi, qword [rbx]	      1565	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_9
0x4000683	      0xb800000000	                              mov eax, 0	      1565	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_9
0x4000688	      0xe800000000	                          call 0x400068d	      1565	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_9
0x400068d	      0xb801000000	                              mov eax, 1	      1600	state.c	FUNCTION_28	IF_1
0x4000692	      0xe93d010000	                           jmp 0x40007d4	      1600	state.c	FUNCTION_28	IF_1
0x4000697	    0xf68395000000	           test byte [rbx + 0x95], 0x10 	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x400069e	     0xf844d010000	                            je 0x40007f1	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x40006a4	          0x8b4b48	            mov ecx, dword [rbx + 0x48] 	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x40006a7	            0x85c9	                           test ecx, ecx	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x40006a9	     0xf883a010000	                            js 0x40007e9	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x40006af	          0x8b4344	            mov eax, dword [rbx + 0x44] 	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x40006b2	          0x8d5001	                      lea edx, [rax + 1]	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x40006b5	      0xbe00000000	                              mov esi, 0	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x40006ba	          0x488b3b	                    mov rdi, qword [rbx]	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x40006bd	      0xb800000000	                              mov eax, 0	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x40006c2	      0xe800000000	                          call 0x40006c7	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x40006c7	      0xb801000000	                              mov eax, 1	      1600	state.c	FUNCTION_28	IF_1
0x40006cc	      0xe903010000	                           jmp 0x40007d4	      1600	state.c	FUNCTION_28	IF_1
0x40006d1	        0x4883fa02	                              cmp rdx, 2	      1572	state.c	FUNCTION_27	IF_2
0x40006d5	     0xf85ab000000	                           jne 0x4000786	      1572	state.c	FUNCTION_27	IF_2
0x40006db	      0xbf00000000	                              mov edi, 0	      1573	state.c	FUNCTION_27	IF_2	IF_3	CALL_13
0x40006e0	      0xb902000000	                              mov ecx, 2	      1573	state.c	FUNCTION_27	IF_2	IF_3	CALL_13
0x40006e5	          0x4889c6	                            mov rsi, rax	      1573	state.c	FUNCTION_27	IF_2	IF_3	CALL_13
0x40006e8	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1573	state.c	FUNCTION_27	IF_2	IF_3	CALL_13
0x40006ea	        0x400f97c6	                                seta sil	      1573	state.c	FUNCTION_27	IF_2	IF_3	CALL_13
0x40006ee	           0xf92c1	                                 setb cl	      1573	state.c	FUNCTION_27	IF_2	IF_3	CALL_13
0x40006f1	          0x4038ce	                             cmp sil, cl	      1573	state.c	FUNCTION_27	IF_2	IF_3	CALL_13
0x40006f4	            0x7549	                           jne 0x400073f	      1573	state.c	FUNCTION_27	IF_2	IF_3	CALL_13
0x40006f6	     0xfb783940000	           movzx eax, word [rbx + 0x94] 	      1575	state.c	FUNCTION_27	IF_2	IF_3	SWITCH_2
0x40006fd	        0x66c1e807	                               shr ax, 7	      1575	state.c	FUNCTION_27	IF_2	IF_3	SWITCH_2
0x4000701	          0x83e003	                              and eax, 3	      1575	state.c	FUNCTION_27	IF_2	IF_3	SWITCH_2
0x4000704	            0x3c01	                               cmp al, 1	      1575	state.c	FUNCTION_27	IF_2	IF_3	SWITCH_2
0x4000706	            0x740c	                            je 0x4000714	      1575	state.c	FUNCTION_27	IF_2	IF_3	SWITCH_2
0x4000708	            0x3c02	                               cmp al, 2	      1578	state.c	FUNCTION_27	IF_2	IF_3	SWITCH_2
0x400070a	           0xf95c2	                                setne dl	      1578	state.c	FUNCTION_27	IF_2	IF_3	SWITCH_2
0x400070d	           0xfb6d2	                           movzx edx, dl	      1578	state.c	FUNCTION_27	IF_2	IF_3	SWITCH_2
0x4000710	        0x8d541204	                lea edx, [rdx + rdx + 4]	      1578	state.c	FUNCTION_27	IF_2	IF_3	SWITCH_2
0x4000714	     0xfb683940000	           movzx eax, byte [rbx + 0x94] 	      1580	state.c	FUNCTION_27	IF_2	IF_3	IF_4
0x400071b	          0x83e040	                           and eax, 0x40	      1580	state.c	FUNCTION_27	IF_2	IF_3	IF_4
0x400071e	            0x3c01	                               cmp al, 1	      1581	state.c	FUNCTION_27	IF_2	IF_3	IF_4
0x4000720	          0x83d2ff	             adc edx, 0xffffffffffffffff	      1581	state.c	FUNCTION_27	IF_2	IF_3	IF_4
0x4000723	      0xbe00000000	                              mov esi, 0	      1582	state.c	FUNCTION_27	IF_2	IF_3	CALL_14
0x4000728	          0x488b3b	                    mov rdi, qword [rbx]	      1582	state.c	FUNCTION_27	IF_2	IF_3	CALL_14
0x400072b	      0xb800000000	                              mov eax, 0	      1582	state.c	FUNCTION_27	IF_2	IF_3	CALL_14
0x4000730	      0xe800000000	                          call 0x4000735	      1582	state.c	FUNCTION_27	IF_2	IF_3	CALL_14
0x4000735	      0xb801000000	                              mov eax, 1	      1600	state.c	FUNCTION_28	IF_1
0x400073a	      0xe995000000	                           jmp 0x40007d4	      1600	state.c	FUNCTION_28	IF_1
0x400073f	      0xbf00000000	                              mov edi, 0	      1585	state.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_15
0x4000744	      0xb902000000	                              mov ecx, 2	      1585	state.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_15
0x4000749	          0x4889c6	                            mov rsi, rax	      1585	state.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_15
0x400074c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1585	state.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_15
0x400074e	        0x400f97c6	                                seta sil	      1585	state.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_15
0x4000752	           0xf92c1	                                 setb cl	      1585	state.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_15
0x4000755	          0x4038ce	                             cmp sil, cl	      1585	state.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_15
0x4000758	            0x752c	                           jne 0x4000786	      1585	state.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_15
0x400075a	     0xfb6937c0100	          movzx edx, byte [rbx + 0x17c] 	      1586	state.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_16
0x4000761	          0x83e201	                              and edx, 1	      1586	state.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_16
0x4000764	          0xc1e21f	                           shl edx, 0x1f	      1586	state.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_16
0x4000767	          0xc1fa1f	                           sar edx, 0x1f	      1586	state.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_16
0x400076a	          0x83c202	                              add edx, 2	      1586	state.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_16
0x400076d	      0xbe00000000	                              mov esi, 0	      1586	state.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_16
0x4000772	          0x488b3b	                    mov rdi, qword [rbx]	      1586	state.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_16
0x4000775	      0xb800000000	                              mov eax, 0	      1586	state.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_16
0x400077a	      0xe800000000	                          call 0x400077f	      1586	state.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_16
0x400077f	      0xb801000000	                              mov eax, 1	      1600	state.c	FUNCTION_28	IF_1
0x4000784	            0xeb4e	                           jmp 0x40007d4	      1600	state.c	FUNCTION_28	IF_1
0x4000786	          0x4889c1	                            mov rcx, rax	      1591	state.c	FUNCTION_27	CALL_17
0x4000789	      0xbe00000000	                              mov esi, 0	      1591	state.c	FUNCTION_27	CALL_17
0x400078e	          0x488b3b	                    mov rdi, qword [rbx]	      1591	state.c	FUNCTION_27	CALL_17
0x4000791	      0xb800000000	                              mov eax, 0	      1591	state.c	FUNCTION_27	CALL_17
0x4000796	      0xe800000000	                          call 0x400079b	      1591	state.c	FUNCTION_27	CALL_17
0x400079b	      0xb801000000	                              mov eax, 1	      1600	state.c	FUNCTION_28	IF_1
0x40007a0	            0xeb32	                           jmp 0x40007d4	      1600	state.c	FUNCTION_28	IF_1
0x40007a2	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1602	state.c	FUNCTION_28	ELSE_1	IF_2
0x40007a6	          0x4885c0	                           test rax, rax	      1602	state.c	FUNCTION_28	ELSE_1	IF_2
0x40007a9	            0x7424	                            je 0x40007cf	      1602	state.c	FUNCTION_28	ELSE_1	IF_2
0x40007ab	        0x488b4828	            mov rcx, qword [rax + 0x28] 	      1602	state.c	FUNCTION_28	ELSE_1	IF_2
0x40007af	      0xb800000000	                              mov eax, 0	      1606	state.c	FUNCTION_28
0x40007b4	          0x4885c9	                           test rcx, rcx	      1602	state.c	FUNCTION_28	ELSE_1	IF_2
0x40007b7	            0x741b	                            je 0x40007d4	      1602	state.c	FUNCTION_28	ELSE_1	IF_2
0x40007b9	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	      1603	state.c	FUNCTION_28	ELSE_1	IF_2	IF_3
0x40007bd	          0x4c89c6	                             mov rsi, r8	      1603	state.c	FUNCTION_28	ELSE_1	IF_2	IF_3
0x40007c0	          0x4c89cf	                             mov rdi, r9	      1603	state.c	FUNCTION_28	ELSE_1	IF_2	IF_3
0x40007c3	            0xffd1	                                call rcx	      1603	state.c	FUNCTION_28	ELSE_1	IF_2	IF_3
0x40007c5	            0x85c0	                           test eax, eax	      1600	state.c	FUNCTION_28	IF_1
0x40007c7	           0xf95c0	                                setne al	      1600	state.c	FUNCTION_28	IF_1
0x40007ca	           0xfb6c0	                           movzx eax, al	      1600	state.c	FUNCTION_28	IF_1
0x40007cd	            0xeb05	                           jmp 0x40007d4	      1600	state.c	FUNCTION_28	IF_1
0x40007cf	      0xb800000000	                              mov eax, 0	      1606	state.c	FUNCTION_28
0x40007d4	    0x488b9c24a800	            mov rbx, qword [rsp + 0xa8] 	      1607	state.c	FUNCTION_28
0x40007dc	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1607	state.c	FUNCTION_28
0x40007e5	            0x741c	                            je 0x4000803	      1607	state.c	FUNCTION_28
0x40007e7	            0xeb15	                           jmp 0x40007fe	      1607	state.c	FUNCTION_28
0x40007e9	          0x8b4b2c	            mov ecx, dword [rbx + 0x2c] 	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x40007ec	      0xe9befeffff	                           jmp 0x40006af	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x40007f1	          0x8b4b2c	            mov ecx, dword [rbx + 0x2c] 	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x40007f4	      0xba01000000	                              mov edx, 1	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x40007f9	      0xe9b7feffff	                           jmp 0x40006b5	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x40007fe	      0xe800000000	                          call 0x4000803	      1607	state.c	FUNCTION_28
0x4000803	    0x4881c4b80000	                           add rsp, 0xb8	      1607	state.c	FUNCTION_28
0x400080a	              0x5b	                                 pop rbx	      1607	state.c	FUNCTION_28
0x400080b	              0x5d	                                 pop rbp	      1607	state.c	FUNCTION_28
0x400080c	            0x415c	                                 pop r12	      1607	state.c	FUNCTION_28
0x400080e	            0x415d	                                 pop r13	      1607	state.c	FUNCTION_28
0x4000810	              0xc3	                                     ret	      1607	state.c	FUNCTION_28
on_osc	FOR,0:IF,9:functions,0:WHILE,0:CALL,13:SWITCH,0:DO,0:ELSE,6	145
0x40014eb	        0x4883fe01	                              cmp rsi, 1	      1501	state.c	FUNCTION_26	IF_1
0x40014ef	     0xf86eb010000	                           jbe 0x40016e0	      1501	state.c	FUNCTION_26	IF_1
0x40014f5	            0x4154	                                push r12	      1498	state.c	FUNCTION_26
0x40014f7	              0x55	                                push rbp	      1498	state.c	FUNCTION_26
0x40014f8	              0x53	                                push rbx	      1498	state.c	FUNCTION_26
0x40014f9	          0x4889d3	                            mov rbx, rdx	      1498	state.c	FUNCTION_26
0x40014fc	          0x4989f1	                             mov r9, rsi	      1498	state.c	FUNCTION_26
0x40014ff	          0x4989f8	                             mov r8, rdi	      1498	state.c	FUNCTION_26
0x4001502	      0xbf00000000	                              mov edi, 0	      1504	state.c	FUNCTION_26	IF_2	CALL_1
0x4001507	      0xb902000000	                              mov ecx, 2	      1504	state.c	FUNCTION_26	IF_2	CALL_1
0x400150c	          0x4c89c6	                             mov rsi, r8	      1504	state.c	FUNCTION_26	IF_2	CALL_1
0x400150f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1504	state.c	FUNCTION_26	IF_2	CALL_1
0x4001511	           0xf97c2	                                 seta dl	      1504	state.c	FUNCTION_26	IF_2	CALL_1
0x4001514	           0xf92c0	                                 setb al	      1504	state.c	FUNCTION_26	IF_2	CALL_1
0x4001517	            0x38c2	                              cmp dl, al	      1504	state.c	FUNCTION_26	IF_2	CALL_1
0x4001519	            0x7538	                           jne 0x4001553	      1504	state.c	FUNCTION_26	IF_2	CALL_1
0x400151b	        0x4d8d61fe	                       lea r12, [r9 - 2]	      1505	state.c	FUNCTION_26	IF_2	CALL_2
0x400151f	        0x498d6802	                       lea rbp, [r8 + 2]	      1505	state.c	FUNCTION_26	IF_2	CALL_2
0x4001523	          0x4c89e1	                            mov rcx, r12	      1505	state.c	FUNCTION_26	IF_2	CALL_2
0x4001526	          0x4889ea	                            mov rdx, rbp	      1505	state.c	FUNCTION_26	IF_2	CALL_2
0x4001529	      0xbe05000000	                              mov esi, 5	      1505	state.c	FUNCTION_26	IF_2	CALL_2
0x400152e	          0x4889df	                            mov rdi, rbx	      1505	state.c	FUNCTION_26	IF_2	CALL_2
0x4001531	      0xe825ffffff	             call sym.settermprop_string	      1505	state.c	FUNCTION_26	IF_2	CALL_2
0x4001536	          0x4c89e1	                            mov rcx, r12	      1506	state.c	FUNCTION_26	IF_2	CALL_3
0x4001539	          0x4889ea	                            mov rdx, rbp	      1506	state.c	FUNCTION_26	IF_2	CALL_3
0x400153c	      0xbe04000000	                              mov esi, 4	      1506	state.c	FUNCTION_26	IF_2	CALL_3
0x4001541	          0x4889df	                            mov rdi, rbx	      1506	state.c	FUNCTION_26	IF_2	CALL_3
0x4001544	      0xe812ffffff	             call sym.settermprop_string	      1506	state.c	FUNCTION_26	IF_2	CALL_3
0x4001549	      0xb801000000	                              mov eax, 1	      1507	state.c	FUNCTION_26	IF_2
0x400154e	      0xe998010000	                           jmp 0x40016eb	      1507	state.c	FUNCTION_26	IF_2
0x4001553	      0xbf00000000	                              mov edi, 0	      1509	state.c	FUNCTION_26	ELSE_1	IF_3	CALL_4
0x4001558	      0xb902000000	                              mov ecx, 2	      1509	state.c	FUNCTION_26	ELSE_1	IF_3	CALL_4
0x400155d	          0x4c89c6	                             mov rsi, r8	      1509	state.c	FUNCTION_26	ELSE_1	IF_3	CALL_4
0x4001560	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1509	state.c	FUNCTION_26	ELSE_1	IF_3	CALL_4
0x4001562	           0xf97c2	                                 seta dl	      1509	state.c	FUNCTION_26	ELSE_1	IF_3	CALL_4
0x4001565	           0xf92c0	                                 setb al	      1509	state.c	FUNCTION_26	ELSE_1	IF_3	CALL_4
0x4001568	            0x38c2	                              cmp dl, al	      1509	state.c	FUNCTION_26	ELSE_1	IF_3	CALL_4
0x400156a	            0x751f	                           jne 0x400158b	      1509	state.c	FUNCTION_26	ELSE_1	IF_3	CALL_4
0x400156c	        0x498d49fe	                       lea rcx, [r9 - 2]	      1510	state.c	FUNCTION_26	ELSE_1	IF_3	CALL_5
0x4001570	        0x498d5002	                       lea rdx, [r8 + 2]	      1510	state.c	FUNCTION_26	ELSE_1	IF_3	CALL_5
0x4001574	      0xbe05000000	                              mov esi, 5	      1510	state.c	FUNCTION_26	ELSE_1	IF_3	CALL_5
0x4001579	          0x4889df	                            mov rdi, rbx	      1510	state.c	FUNCTION_26	ELSE_1	IF_3	CALL_5
0x400157c	      0xe8dafeffff	             call sym.settermprop_string	      1510	state.c	FUNCTION_26	ELSE_1	IF_3	CALL_5
0x4001581	      0xb801000000	                              mov eax, 1	      1511	state.c	FUNCTION_26	ELSE_1	IF_3
0x4001586	      0xe960010000	                           jmp 0x40016eb	      1511	state.c	FUNCTION_26	ELSE_1	IF_3
0x400158b	      0xbf00000000	                              mov edi, 0	      1513	state.c	FUNCTION_26	ELSE_2	IF_4	CALL_6
0x4001590	      0xb902000000	                              mov ecx, 2	      1513	state.c	FUNCTION_26	ELSE_2	IF_4	CALL_6
0x4001595	          0x4c89c6	                             mov rsi, r8	      1513	state.c	FUNCTION_26	ELSE_2	IF_4	CALL_6
0x4001598	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1513	state.c	FUNCTION_26	ELSE_2	IF_4	CALL_6
0x400159a	           0xf97c2	                                 seta dl	      1513	state.c	FUNCTION_26	ELSE_2	IF_4	CALL_6
0x400159d	           0xf92c0	                                 setb al	      1513	state.c	FUNCTION_26	ELSE_2	IF_4	CALL_6
0x40015a0	            0x38c2	                              cmp dl, al	      1513	state.c	FUNCTION_26	ELSE_2	IF_4	CALL_6
0x40015a2	            0x751f	                           jne 0x40015c3	      1513	state.c	FUNCTION_26	ELSE_2	IF_4	CALL_6
0x40015a4	        0x498d49fe	                       lea rcx, [r9 - 2]	      1514	state.c	FUNCTION_26	ELSE_2	IF_4	CALL_7
0x40015a8	        0x498d5002	                       lea rdx, [r8 + 2]	      1514	state.c	FUNCTION_26	ELSE_2	IF_4	CALL_7
0x40015ac	      0xbe04000000	                              mov esi, 4	      1514	state.c	FUNCTION_26	ELSE_2	IF_4	CALL_7
0x40015b1	          0x4889df	                            mov rdi, rbx	      1514	state.c	FUNCTION_26	ELSE_2	IF_4	CALL_7
0x40015b4	      0xe8a2feffff	             call sym.settermprop_string	      1514	state.c	FUNCTION_26	ELSE_2	IF_4	CALL_7
0x40015b9	      0xb801000000	                              mov eax, 1	      1515	state.c	FUNCTION_26	ELSE_2	IF_4
0x40015be	      0xe928010000	                           jmp 0x40016eb	      1515	state.c	FUNCTION_26	ELSE_2	IF_4
0x40015c3	      0xbf00000000	                              mov edi, 0	      1517	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_8
0x40015c8	      0xb903000000	                              mov ecx, 3	      1517	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_8
0x40015cd	          0x4c89c6	                             mov rsi, r8	      1517	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_8
0x40015d0	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1517	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_8
0x40015d2	           0xf97c2	                                 seta dl	      1517	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_8
0x40015d5	           0xf92c0	                                 setb al	      1517	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_8
0x40015d8	            0x38c2	                              cmp dl, al	      1517	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_8
0x40015da	            0x7546	                           jne 0x4001622	      1517	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_8
0x40015dc	     0xfb68b280100	          movzx ecx, byte [rbx + 0x128] 	      1519	state.c	FUNCTION_26	ELSE_3	IF_5
0x40015e3	     0xfb6832a0100	          movzx eax, byte [rbx + 0x12a] 	      1520	state.c	FUNCTION_26	ELSE_3	IF_5
0x40015ea	    0x440fb68b2901	          movzx r9d, byte [rbx + 0x129] 	      1521	state.c	FUNCTION_26	ELSE_3	IF_5
0x40015f2	        0x4883ec08	                              sub rsp, 8	      1522	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_9
0x40015f6	              0x50	                                push rax	      1522	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_9
0x40015f7	              0x50	                                push rax	      1522	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_9
0x40015f8	            0x4151	                                 push r9	      1522	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_9
0x40015fa	          0x4189c8	                            mov r8d, ecx	      1522	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_9
0x40015fd	      0xba00000000	                              mov edx, 0	      1522	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_9
0x4001602	      0xbe9d000000	                           mov esi, 0x9d	      1522	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_9
0x4001607	          0x488b3b	                    mov rdi, qword [rbx]	      1522	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_9
0x400160a	      0xb800000000	                              mov eax, 0	      1522	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_9
0x400160f	      0xe800000000	                          call 0x4001614	      1522	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_9
0x4001614	        0x4883c420	                           add rsp, 0x20	      1523	state.c	FUNCTION_26	ELSE_3	IF_5
0x4001618	      0xb801000000	                              mov eax, 1	      1523	state.c	FUNCTION_26	ELSE_3	IF_5
0x400161d	      0xe9c9000000	                           jmp 0x40016eb	      1523	state.c	FUNCTION_26	ELSE_3	IF_5
0x4001622	      0xbf00000000	                              mov edi, 0	      1525	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_10
0x4001627	      0xb903000000	                              mov ecx, 3	      1525	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_10
0x400162c	          0x4c89c6	                             mov rsi, r8	      1525	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_10
0x400162f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1525	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_10
0x4001631	           0xf97c2	                                 seta dl	      1525	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_10
0x4001634	           0xf92c0	                                 setb al	      1525	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_10
0x4001637	            0x38c2	                              cmp dl, al	      1525	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_10
0x4001639	            0x7543	                           jne 0x400167e	      1525	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_10
0x400163b	     0xfb68b2c0100	          movzx ecx, byte [rbx + 0x12c] 	      1527	state.c	FUNCTION_26	ELSE_4	IF_6
0x4001642	     0xfb6832e0100	          movzx eax, byte [rbx + 0x12e] 	      1528	state.c	FUNCTION_26	ELSE_4	IF_6
0x4001649	    0x440fb68b2d01	          movzx r9d, byte [rbx + 0x12d] 	      1529	state.c	FUNCTION_26	ELSE_4	IF_6
0x4001651	        0x4883ec08	                              sub rsp, 8	      1530	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_11
0x4001655	              0x50	                                push rax	      1530	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_11
0x4001656	              0x50	                                push rax	      1530	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_11
0x4001657	            0x4151	                                 push r9	      1530	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_11
0x4001659	          0x4189c8	                            mov r8d, ecx	      1530	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_11
0x400165c	      0xba00000000	                              mov edx, 0	      1530	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_11
0x4001661	      0xbe9d000000	                           mov esi, 0x9d	      1530	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_11
0x4001666	          0x488b3b	                    mov rdi, qword [rbx]	      1530	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_11
0x4001669	      0xb800000000	                              mov eax, 0	      1530	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_11
0x400166e	      0xe800000000	                          call 0x4001673	      1530	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_11
0x4001673	        0x4883c420	                           add rsp, 0x20	      1531	state.c	FUNCTION_26	ELSE_4	IF_6
0x4001677	      0xb801000000	                              mov eax, 1	      1531	state.c	FUNCTION_26	ELSE_4	IF_6
0x400167c	            0xeb6d	                           jmp 0x40016eb	      1531	state.c	FUNCTION_26	ELSE_4	IF_6
0x400167e	      0xbf00000000	                              mov edi, 0	      1533	state.c	FUNCTION_26	ELSE_5	IF_7	CALL_12
0x4001683	      0xb903000000	                              mov ecx, 3	      1533	state.c	FUNCTION_26	ELSE_5	IF_7	CALL_12
0x4001688	          0x4c89c6	                             mov rsi, r8	      1533	state.c	FUNCTION_26	ELSE_5	IF_7	CALL_12
0x400168b	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1533	state.c	FUNCTION_26	ELSE_5	IF_7	CALL_12
0x400168d	           0xf97c2	                                 seta dl	      1533	state.c	FUNCTION_26	ELSE_5	IF_7	CALL_12
0x4001690	           0xf92c0	                                 setb al	      1533	state.c	FUNCTION_26	ELSE_5	IF_7	CALL_12
0x4001693	            0x38c2	                              cmp dl, al	      1533	state.c	FUNCTION_26	ELSE_5	IF_7	CALL_12
0x4001695	            0x751c	                           jne 0x40016b3	      1533	state.c	FUNCTION_26	ELSE_5	IF_7	CALL_12
0x4001697	        0x498d49fd	                       lea rcx, [r9 - 3]	      1534	state.c	FUNCTION_26	ELSE_5	IF_7	CALL_13
0x400169b	        0x498d5003	                       lea rdx, [r8 + 3]	      1534	state.c	FUNCTION_26	ELSE_5	IF_7	CALL_13
0x400169f	      0xbe09000000	                              mov esi, 9	      1534	state.c	FUNCTION_26	ELSE_5	IF_7	CALL_13
0x40016a4	          0x4889df	                            mov rdi, rbx	      1534	state.c	FUNCTION_26	ELSE_5	IF_7	CALL_13
0x40016a7	      0xe8affdffff	             call sym.settermprop_string	      1534	state.c	FUNCTION_26	ELSE_5	IF_7	CALL_13
0x40016ac	      0xb801000000	                              mov eax, 1	      1535	state.c	FUNCTION_26	ELSE_5	IF_7
0x40016b1	            0xeb38	                           jmp 0x40016eb	      1535	state.c	FUNCTION_26	ELSE_5	IF_7
0x40016b3	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1537	state.c	FUNCTION_26	ELSE_6	IF_8
0x40016b7	          0x4885c0	                           test rax, rax	      1537	state.c	FUNCTION_26	ELSE_6	IF_8
0x40016ba	            0x742a	                            je 0x40016e6	      1537	state.c	FUNCTION_26	ELSE_6	IF_8
0x40016bc	        0x488b4820	            mov rcx, qword [rax + 0x20] 	      1537	state.c	FUNCTION_26	ELSE_6	IF_8
0x40016c0	      0xb800000000	                              mov eax, 0	      1541	state.c	FUNCTION_26
0x40016c5	          0x4885c9	                           test rcx, rcx	      1537	state.c	FUNCTION_26	ELSE_6	IF_8
0x40016c8	            0x7421	                            je 0x40016eb	      1537	state.c	FUNCTION_26	ELSE_6	IF_8
0x40016ca	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	      1538	state.c	FUNCTION_26	ELSE_6	IF_8	IF_9
0x40016ce	          0x4c89ce	                             mov rsi, r9	      1538	state.c	FUNCTION_26	ELSE_6	IF_8	IF_9
0x40016d1	          0x4c89c7	                             mov rdi, r8	      1538	state.c	FUNCTION_26	ELSE_6	IF_8	IF_9
0x40016d4	            0xffd1	                                call rcx	      1538	state.c	FUNCTION_26	ELSE_6	IF_8	IF_9
0x40016d6	            0x85c0	                           test eax, eax	      1502	state.c	FUNCTION_26	IF_1
0x40016d8	           0xf95c0	                                setne al	      1502	state.c	FUNCTION_26	IF_1
0x40016db	           0xfb6c0	                           movzx eax, al	      1502	state.c	FUNCTION_26	IF_1
0x40016de	            0xeb0b	                           jmp 0x40016eb	      1502	state.c	FUNCTION_26	IF_1
0x40016e0	      0xb800000000	                              mov eax, 0	      1502	state.c	FUNCTION_26	IF_1
0x40016e5	              0xc3	                                     ret	      1542	state.c	FUNCTION_26
0x40016e6	      0xb800000000	                              mov eax, 0	      1541	state.c	FUNCTION_26
0x40016eb	              0x5b	                                 pop rbx	      1542	state.c	FUNCTION_26
0x40016ec	              0x5d	                                 pop rbp	      1542	state.c	FUNCTION_26
0x40016ed	            0x415c	                                 pop r12	      1542	state.c	FUNCTION_26
0x40016ef	              0xc3	                                     ret	      1542	state.c	FUNCTION_26
settermprop_bool	FOR,0:IF,0:functions,0:WHILE,0:CALL,1:SWITCH,0:DO,0:ELSE,0	13
0x40016f0	        0x4883ec18	                           sub rsp, 0x18	       517	state.c	FUNCTION_17
0x40016f4	    0x64488b042528	                mov rax, qword fs:[0x28]	       517	state.c	FUNCTION_17
0x40016fd	      0x4889442408	                mov qword [rsp + 8], rax	       517	state.c	FUNCTION_17
0x4001702	            0x31c0	                            xor eax, eax	       517	state.c	FUNCTION_17
0x4001704	          0x891424	                    mov dword [rsp], edx	       519	state.c	FUNCTION_17
0x4001707	          0x4889e2	                            mov rdx, rsp	       520	state.c	FUNCTION_17	CALL_1
0x400170a	      0xe800000000	                          call 0x400170f	       520	state.c	FUNCTION_17	CALL_1
0x400170f	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       521	state.c	FUNCTION_17
0x4001714	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       521	state.c	FUNCTION_17
0x400171d	            0x7405	                            je 0x4001724	       521	state.c	FUNCTION_17
0x400171f	      0xe800000000	                          call 0x4001724	       521	state.c	FUNCTION_17
0x4001724	        0x4883c418	                           add rsp, 0x18	       521	state.c	FUNCTION_17
0x4001728	              0xc3	                                     ret	       521	state.c	FUNCTION_17
grow_combine_buffer	FOR,0:IF,0:functions,0:WHILE,0:CALL,3:SWITCH,0:DO,0:ELSE,0	24
0x4000bb1	            0x4154	                                push r12	       143	state.c	FUNCTION_8
0x4000bb3	              0x55	                                push rbp	       143	state.c	FUNCTION_8
0x4000bb4	              0x53	                                push rbx	       143	state.c	FUNCTION_8
0x4000bb5	          0x4889fb	                            mov rbx, rdi	       143	state.c	FUNCTION_8
0x4000bb8	    0x488bb7800000	            mov rsi, qword [rdi + 0x80] 	       144	state.c	FUNCTION_8
0x4000bbf	        0x4c8d2436	                    lea r12, [rsi + rsi]	       144	state.c	FUNCTION_8
0x4000bc3	        0x48c1e603	                              shl rsi, 3	       145	state.c	FUNCTION_8	CALL_1
0x4000bc7	          0x488b3f	                    mov rdi, qword [rdi]	       145	state.c	FUNCTION_8	CALL_1
0x4000bca	      0xe800000000	                          call 0x4000bcf	       145	state.c	FUNCTION_8	CALL_1
0x4000bcf	          0x4889c5	                            mov rbp, rax	       145	state.c	FUNCTION_8	CALL_1
0x4000bd2	    0x488b83800000	            mov rax, qword [rbx + 0x80] 	        53	string3.h	FUNCTION_42	CALL_3
0x4000bd9	    0x488d14850000	                        lea rdx, [rax*4]	        53	string3.h	FUNCTION_42	CALL_3
0x4000be1	        0x488b7378	            mov rsi, qword [rbx + 0x78] 	        53	string3.h	FUNCTION_42	CALL_3
0x4000be5	          0x4889ef	                            mov rdi, rbp	        53	string3.h	FUNCTION_42	CALL_3
0x4000be8	      0xe800000000	                          call 0x4000bed	        53	string3.h	FUNCTION_42	CALL_3
0x4000bed	        0x488b7378	            mov rsi, qword [rbx + 0x78] 	       149	state.c	FUNCTION_8	CALL_3
0x4000bf1	          0x488b3b	                    mov rdi, qword [rbx]	       149	state.c	FUNCTION_8	CALL_3
0x4000bf4	      0xe800000000	                          call 0x4000bf9	       149	state.c	FUNCTION_8	CALL_3
0x4000bf9	        0x48896b78	             mov qword [rbx + 0x78], rbp	       151	state.c	FUNCTION_8
0x4000bfd	    0x4c89a3800000	             mov qword [rbx + 0x80], r12	       152	state.c	FUNCTION_8
0x4000c04	              0x5b	                                 pop rbx	       153	state.c	FUNCTION_8
0x4000c05	              0x5d	                                 pop rbp	       153	state.c	FUNCTION_8
0x4000c06	            0x415c	                                 pop r12	       153	state.c	FUNCTION_8
0x4000c08	              0xc3	                                     ret	       153	state.c	FUNCTION_8
tab	FOR,0:IF,5:functions,0:WHILE,1:CALL,2:SWITCH,0:DO,0:ELSE,1	45
0x40001c4	            0x85f6	                           test esi, esi	       187	state.c	FUNCTION_13	WHILE_1
0x40001c6	            0x7e79	                           jle 0x4000241	       187	state.c	FUNCTION_13	WHILE_1
0x40001c8	    0x41b901000000	                              mov r9d, 1	       201	state.c	FUNCTION_13	WHILE_1	IF_5	CALL_2
0x40001ce	            0x85d2	                           test edx, edx	       188	state.c	FUNCTION_13	WHILE_1	IF_1
0x40001d0	            0x7e38	                           jle 0x400020a	       188	state.c	FUNCTION_13	WHILE_1	IF_1
0x40001d2	          0x8b4f34	            mov ecx, dword [rdi + 0x34] 	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x40001d5	        0x4c634730	          movsxd r8, dword [rdi + 0x30] 	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x40001d9	        0x488b4758	            mov rax, qword [rdi + 0x58] 	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x40001dd	      0x42f6048001	               test byte [rax + r8*4], 1	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x40001e2	            0x7414	                            je 0x40001f8	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x40001e4	          0x8b472c	            mov eax, dword [rdi + 0x2c] 	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x40001e7	          0x4189c0	                            mov r8d, eax	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x40001ea	        0x41c1e81f	                           shr r8d, 0x1f	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x40001ee	          0x4401c0	                            add eax, r8d	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x40001f1	            0xd1f8	                              sar eax, 1	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x40001f3	          0x83e801	                              sub eax, 1	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x40001f6	            0xeb06	                           jmp 0x40001fe	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x40001f8	          0x8b472c	            mov eax, dword [rdi + 0x2c] 	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x40001fb	          0x83e801	                              sub eax, 1	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x40001fe	            0x39c8	                            cmp eax, ecx	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x4000200	            0x7e3f	                           jle 0x4000241	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x4000202	          0x83c101	                              add ecx, 1	       192	state.c	FUNCTION_13	WHILE_1	IF_1
0x4000205	          0x894f34	             mov dword [rdi + 0x34], ecx	       192	state.c	FUNCTION_13	WHILE_1	IF_1
0x4000208	            0xeb11	                           jmp 0x400021b	       192	state.c	FUNCTION_13	WHILE_1	IF_1
0x400020a	            0x85d2	                           test edx, edx	       194	state.c	FUNCTION_13	WHILE_1	ELSE_1	IF_3
0x400020c	            0x790d	                           jns 0x400021b	       194	state.c	FUNCTION_13	WHILE_1	ELSE_1	IF_3
0x400020e	          0x8b4734	            mov eax, dword [rdi + 0x34] 	       195	state.c	FUNCTION_13	WHILE_1	ELSE_1	IF_3	IF_4
0x4000211	            0x85c0	                           test eax, eax	       195	state.c	FUNCTION_13	WHILE_1	ELSE_1	IF_3	IF_4
0x4000213	            0x7e2c	                           jle 0x4000241	       195	state.c	FUNCTION_13	WHILE_1	ELSE_1	IF_3	IF_4
0x4000215	          0x83e801	                              sub eax, 1	       198	state.c	FUNCTION_13	WHILE_1	ELSE_1	IF_3
0x4000218	          0x894734	             mov dword [rdi + 0x34], eax	       198	state.c	FUNCTION_13	WHILE_1	ELSE_1	IF_3
0x400021b	          0x8b4f34	            mov ecx, dword [rdi + 0x34] 	       201	state.c	FUNCTION_13	WHILE_1	IF_5	CALL_2
0x400021e	          0x4189c8	                            mov r8d, ecx	       170	state.c	FUNCTION_11
0x4000221	        0x41c1f803	                              sar r8d, 3	       170	state.c	FUNCTION_11
0x4000225	          0x4d63c0	                          movsxd r8, r8d	       170	state.c	FUNCTION_11
0x4000228	        0x4c8b5750	            mov r10, qword [rdi + 0x50] 	       170	state.c	FUNCTION_11
0x400022c	          0x83e107	                              and ecx, 7	       201	state.c	FUNCTION_13	WHILE_1	IF_5	CALL_2
0x400022f	          0x4489c8	                            mov eax, r9d	       201	state.c	FUNCTION_13	WHILE_1	IF_5	CALL_2
0x4000232	            0xd3e0	                             shl eax, cl	       201	state.c	FUNCTION_13	WHILE_1	IF_5	CALL_2
0x4000234	        0x43220402	                 and al, byte [r10 + r8]	       201	state.c	FUNCTION_13	WHILE_1	IF_5	CALL_2
0x4000238	            0x3c01	                               cmp al, 1	       202	state.c	FUNCTION_13	WHILE_1	IF_5
0x400023a	          0x83d6ff	             adc esi, 0xffffffffffffffff	       202	state.c	FUNCTION_13	WHILE_1	IF_5
0x400023d	            0x85f6	                           test esi, esi	       187	state.c	FUNCTION_13	WHILE_1
0x400023f	            0x7f8d	                            jg 0x40001ce	       187	state.c	FUNCTION_13	WHILE_1
0x4000241	            0xf3c3	                                     ret	       187	state.c	FUNCTION_13	WHILE_1
savecursor	FOR,0:IF,1:functions,0:WHILE,0:CALL,6:SWITCH,0:DO,0:ELSE,1	66
0x4001762	              0x53	                                push rbx	       546	state.c	FUNCTION_20
0x4001763	        0x4883ec10	                           sub rsp, 0x10	       546	state.c	FUNCTION_20
0x4001767	          0x4889fb	                            mov rbx, rdi	       546	state.c	FUNCTION_20
0x400176a	    0x64488b042528	                mov rax, qword fs:[0x28]	       546	state.c	FUNCTION_20
0x4001773	      0x4889442408	                mov qword [rsp + 8], rax	       546	state.c	FUNCTION_20
0x4001778	            0x31c0	                            xor eax, eax	       546	state.c	FUNCTION_20
0x400177a	            0x85f6	                           test esi, esi	       547	state.c	FUNCTION_20	IF_1
0x400177c	            0x745a	                            je 0x40017d8	       547	state.c	FUNCTION_20	IF_1
0x400177e	        0x488b4730	            mov rax, qword [rdi + 0x30] 	       548	state.c	FUNCTION_20	IF_1
0x4001782	    0x488987800100	            mov qword [rdi + 0x180], rax	       548	state.c	FUNCTION_20	IF_1
0x4001789	     0xfb687940000	           movzx eax, byte [rdi + 0x94] 	       549	state.c	FUNCTION_20	IF_1
0x4001790	            0x89c1	                            mov ecx, eax	       549	state.c	FUNCTION_20	IF_1
0x4001792	          0xc0e905	                               shr cl, 5	       549	state.c	FUNCTION_20	IF_1
0x4001795	          0x83e101	                              and ecx, 1	       549	state.c	FUNCTION_20	IF_1
0x4001798	     0xfb6b7940100	          movzx esi, byte [rdi + 0x194] 	       549	state.c	FUNCTION_20	IF_1
0x400179f	          0x83e6fc	                     and esi, 0xfffffffc	       549	state.c	FUNCTION_20	IF_1
0x40017a2	          0xc0e805	                               shr al, 5	       550	state.c	FUNCTION_20	IF_1
0x40017a5	          0x83e002	                              and eax, 2	       550	state.c	FUNCTION_20	IF_1
0x40017a8	            0x89c2	                            mov edx, eax	       550	state.c	FUNCTION_20	IF_1
0x40017aa	            0x89f0	                            mov eax, esi	       550	state.c	FUNCTION_20	IF_1
0x40017ac	             0x9c8	                             or eax, ecx	       550	state.c	FUNCTION_20	IF_1
0x40017ae	             0x9d0	                             or eax, edx	       550	state.c	FUNCTION_20	IF_1
0x40017b0	     0xfb797940000	           movzx edx, word [rdi + 0x94] 	       551	state.c	FUNCTION_20	IF_1
0x40017b7	        0x66c1ea07	                               shr dx, 7	       551	state.c	FUNCTION_20	IF_1
0x40017bb	          0x83e203	                              and edx, 3	       551	state.c	FUNCTION_20	IF_1
0x40017be	          0xc1e202	                              shl edx, 2	       551	state.c	FUNCTION_20	IF_1
0x40017c1	          0x83e0f3	                     and eax, 0xfffffff3	       551	state.c	FUNCTION_20	IF_1
0x40017c4	             0x9d0	                             or eax, edx	       551	state.c	FUNCTION_20	IF_1
0x40017c6	    0x888794010000	              mov byte [rdi + 0x194], al	       551	state.c	FUNCTION_20	IF_1
0x40017cc	      0xbe01000000	                              mov esi, 1	       553	state.c	FUNCTION_20	IF_1	CALL_1
0x40017d1	      0xe800000000	                          call 0x40017d6	       553	state.c	FUNCTION_20	IF_1	CALL_1
0x40017d6	            0xeb77	                           jmp 0x400184f	       553	state.c	FUNCTION_20	IF_1	CALL_1
0x40017d8	        0x488b4730	            mov rax, qword [rdi + 0x30] 	       556	state.c	FUNCTION_20	ELSE_1
0x40017dc	        0x48890424	                    mov qword [rsp], rax	       556	state.c	FUNCTION_20	ELSE_1
0x40017e0	    0x488b87800100	           mov rax, qword [rdi + 0x180] 	       558	state.c	FUNCTION_20	ELSE_1
0x40017e7	        0x48894730	             mov qword [rdi + 0x30], rax	       558	state.c	FUNCTION_20	ELSE_1
0x40017eb	     0xfb697940100	          movzx edx, byte [rdi + 0x194] 	       560	state.c	FUNCTION_20	ELSE_1	CALL_2
0x40017f2	          0x83e201	                              and edx, 1	       560	state.c	FUNCTION_20	ELSE_1	CALL_2
0x40017f5	      0xbe01000000	                              mov esi, 1	       560	state.c	FUNCTION_20	ELSE_1	CALL_2
0x40017fa	      0xe8f1feffff	               call sym.settermprop_bool	       560	state.c	FUNCTION_20	ELSE_1	CALL_2
0x40017ff	     0xfb693940100	          movzx edx, byte [rbx + 0x194] 	       561	state.c	FUNCTION_20	ELSE_1	CALL_3
0x4001806	            0xd0ea	                               shr dl, 1	       561	state.c	FUNCTION_20	ELSE_1	CALL_3
0x4001808	          0x83e201	                              and edx, 1	       561	state.c	FUNCTION_20	ELSE_1	CALL_3
0x400180b	      0xbe02000000	                              mov esi, 2	       561	state.c	FUNCTION_20	ELSE_1	CALL_3
0x4001810	          0x4889df	                            mov rdi, rbx	       561	state.c	FUNCTION_20	ELSE_1	CALL_3
0x4001813	      0xe8d8feffff	               call sym.settermprop_bool	       561	state.c	FUNCTION_20	ELSE_1	CALL_3
0x4001818	     0xfb693940100	          movzx edx, byte [rbx + 0x194] 	       562	state.c	FUNCTION_20	ELSE_1	CALL_4
0x400181f	          0xc0ea02	                               shr dl, 2	       562	state.c	FUNCTION_20	ELSE_1	CALL_4
0x4001822	          0x83e203	                              and edx, 3	       562	state.c	FUNCTION_20	ELSE_1	CALL_4
0x4001825	      0xbe07000000	                              mov esi, 7	       562	state.c	FUNCTION_20	ELSE_1	CALL_4
0x400182a	          0x4889df	                            mov rdi, rbx	       562	state.c	FUNCTION_20	ELSE_1	CALL_4
0x400182d	      0xe8f7feffff	                call sym.settermprop_int	       562	state.c	FUNCTION_20	ELSE_1	CALL_4
0x4001832	      0xbe00000000	                              mov esi, 0	       564	state.c	FUNCTION_20	ELSE_1	CALL_5
0x4001837	          0x4889df	                            mov rdi, rbx	       564	state.c	FUNCTION_20	ELSE_1	CALL_5
0x400183a	      0xe800000000	                          call 0x400183f	       564	state.c	FUNCTION_20	ELSE_1	CALL_5
0x400183f	      0xba01000000	                              mov edx, 1	       566	state.c	FUNCTION_20	ELSE_1	CALL_6
0x4001844	          0x4889e6	                            mov rsi, rsp	       566	state.c	FUNCTION_20	ELSE_1	CALL_6
0x4001847	          0x4889df	                            mov rdi, rbx	       566	state.c	FUNCTION_20	ELSE_1	CALL_6
0x400184a	      0xe889e8ffff	                   call sym.updatecursor	       566	state.c	FUNCTION_20	ELSE_1	CALL_6
0x400184f	      0x488b442408	                mov rax, qword [rsp + 8]	       568	state.c	FUNCTION_20
0x4001854	    0x644833042528	                xor rax, qword fs:[0x28]	       568	state.c	FUNCTION_20
0x400185d	            0x7405	                            je 0x4001864	       568	state.c	FUNCTION_20
0x400185f	      0xe800000000	                          call 0x4001864	       568	state.c	FUNCTION_20
0x4001864	        0x4883c410	                           add rsp, 0x10	       568	state.c	FUNCTION_20
0x4001868	              0x5b	                                 pop rbx	       568	state.c	FUNCTION_20
0x4001869	              0xc3	                                     ret	       568	state.c	FUNCTION_20
scroll	FOR,0:IF,10:functions,0:WHILE,0:CALL,4:SWITCH,0:DO,0:ELSE,3	97
0x4000811	            0x89c8	                            mov eax, ecx	        89	state.c	FUNCTION_6	IF_1
0x4000813	          0x4409c0	                             or eax, r8d	        89	state.c	FUNCTION_6	IF_1
0x4000816	     0xf841d010000	                            je 0x4000939	        89	state.c	FUNCTION_6	IF_1
0x400081c	            0x4156	                                push r14	        86	state.c	FUNCTION_6
0x400081e	            0x4155	                                push r13	        86	state.c	FUNCTION_6
0x4000820	            0x4154	                                push r12	        86	state.c	FUNCTION_6
0x4000822	              0x55	                                push rbp	        86	state.c	FUNCTION_6
0x4000823	              0x53	                                push rbx	        86	state.c	FUNCTION_6
0x4000824	          0x4889f0	                            mov rax, rsi	        86	state.c	FUNCTION_6
0x4000827	        0x48c1f820	                           sar rax, 0x20	        86	state.c	FUNCTION_6
0x400082b	            0x29f0	                            sub eax, esi	        92	state.c	FUNCTION_6
0x400082d	          0x4189c6	                           mov r14d, eax	        94	state.c	FUNCTION_6	IF_2
0x4000830	            0x39c1	                            cmp ecx, eax	        93	state.c	FUNCTION_6	IF_2
0x4000832	            0x7f0a	                            jg 0x400083e	        93	state.c	FUNCTION_6	IF_2
0x4000834	          0x41f7de	                                neg r14d	        95	state.c	FUNCTION_6	ELSE_1	IF_3
0x4000837	          0x4439f1	                           cmp ecx, r14d	        95	state.c	FUNCTION_6	ELSE_1	IF_3
0x400083a	        0x440f4df1	                        cmovge r14d, ecx	        95	state.c	FUNCTION_6	ELSE_1	IF_3
0x400083e	          0x4889d1	                            mov rcx, rdx	        95	state.c	FUNCTION_6	ELSE_1	IF_3
0x4000841	        0x48c1f920	                           sar rcx, 0x20	        95	state.c	FUNCTION_6	ELSE_1	IF_3
0x4000845	          0x4189cd	                           mov r13d, ecx	        98	state.c	FUNCTION_6
0x4000848	          0x4129d5	                           sub r13d, edx	        98	state.c	FUNCTION_6
0x400084b	          0x4539e8	                           cmp r8d, r13d	        99	state.c	FUNCTION_6	IF_4
0x400084e	            0x7f0a	                            jg 0x400085a	        99	state.c	FUNCTION_6	IF_4
0x4000850	          0x41f7dd	                                neg r13d	       101	state.c	FUNCTION_6	ELSE_2	IF_5
0x4000853	          0x4539e8	                           cmp r8d, r13d	       101	state.c	FUNCTION_6	ELSE_2	IF_5
0x4000856	        0x450f4de8	                        cmovge r13d, r8d	       101	state.c	FUNCTION_6	ELSE_2	IF_5
0x400085a	          0x4889d3	                            mov rbx, rdx	       101	state.c	FUNCTION_6	ELSE_2	IF_5
0x400085d	          0x4889f5	                            mov rbp, rsi	       101	state.c	FUNCTION_6	ELSE_2	IF_5
0x4000860	          0x4989fc	                            mov r12, rdi	       101	state.c	FUNCTION_6	ELSE_2	IF_5
0x4000863	            0x85d2	                           test edx, edx	       105	state.c	FUNCTION_6	IF_6
0x4000865	            0x756f	                           jne 0x40008d6	       105	state.c	FUNCTION_6	IF_6
0x4000867	          0x394f2c	            cmp dword [rdi + 0x2c], ecx 	       105	state.c	FUNCTION_6	IF_6
0x400086a	            0x756a	                           jne 0x40008d6	       105	state.c	FUNCTION_6	IF_6
0x400086c	          0x4585ed	                         test r13d, r13d	       105	state.c	FUNCTION_6	IF_6
0x400086f	            0x7565	                           jne 0x40008d6	       105	state.c	FUNCTION_6	IF_6
0x4000871	          0x4489f1	                           mov ecx, r14d	       106	state.c	FUNCTION_6	IF_6	CALL_1
0x4000874	          0xc1f91f	                           sar ecx, 0x1f	       106	state.c	FUNCTION_6	IF_6	CALL_1
0x4000877	            0x89ca	                            mov edx, ecx	       106	state.c	FUNCTION_6	IF_6	CALL_1
0x4000879	          0x4431f2	                           xor edx, r14d	       106	state.c	FUNCTION_6	IF_6	CALL_1
0x400087c	            0x29ca	                            sub edx, ecx	       106	state.c	FUNCTION_6	IF_6	CALL_1
0x400087e	            0x29d0	                            sub eax, edx	       106	state.c	FUNCTION_6	IF_6	CALL_1
0x4000880	          0x4585f6	                         test r14d, r14d	       108	state.c	FUNCTION_6	IF_6	IF_7
0x4000883	            0x7e2a	                           jle 0x40008af	       108	state.c	FUNCTION_6	IF_6	IF_7
0x4000885	        0x488b7f58	            mov rdi, qword [rdi + 0x58] 	       110	state.c	FUNCTION_6	IF_6	IF_7
0x4000889	          0x4863ce	                         movsxd rcx, esi	       110	state.c	FUNCTION_6	IF_6	IF_7
0x400088c	            0x4898	                                    cdqe	        59	string3.h	FUNCTION_43	CALL_3
0x400088e	    0x488d14850000	                        lea rdx, [rax*4]	        59	string3.h	FUNCTION_43	CALL_3
0x4000896	          0x4963f6	                        movsxd rsi, r14d	        59	string3.h	FUNCTION_43	CALL_3
0x4000899	          0x4889c8	                            mov rax, rcx	        59	string3.h	FUNCTION_43	CALL_3
0x400089c	        0x488d0c0e	                    lea rcx, [rsi + rcx]	        59	string3.h	FUNCTION_43	CALL_3
0x40008a0	        0x488d348f	                  lea rsi, [rdi + rcx*4]	        59	string3.h	FUNCTION_43	CALL_3
0x40008a4	        0x488d3c87	                  lea rdi, [rdi + rax*4]	        59	string3.h	FUNCTION_43	CALL_3
0x40008a8	      0xe800000000	                          call 0x40008ad	        59	string3.h	FUNCTION_43	CALL_3
0x40008ad	            0xeb27	                           jmp 0x40008d6	        59	string3.h	FUNCTION_43	CALL_3
0x40008af	        0x488b7f58	            mov rdi, qword [rdi + 0x58] 	       114	state.c	FUNCTION_6	IF_6	ELSE_3
0x40008b3	          0x4863ce	                         movsxd rcx, esi	       113	state.c	FUNCTION_6	IF_6	ELSE_3	CALL_3
0x40008b6	            0x4898	                                    cdqe	        59	string3.h	FUNCTION_43	CALL_3
0x40008b8	    0x488d14850000	                        lea rdx, [rax*4]	        59	string3.h	FUNCTION_43	CALL_3
0x40008c0	          0x4889c8	                            mov rax, rcx	        59	string3.h	FUNCTION_43	CALL_3
0x40008c3	        0x488d348f	                  lea rsi, [rdi + rcx*4]	        59	string3.h	FUNCTION_43	CALL_3
0x40008c7	          0x4963ce	                        movsxd rcx, r14d	        59	string3.h	FUNCTION_43	CALL_3
0x40008ca	          0x4829c8	                            sub rax, rcx	        59	string3.h	FUNCTION_43	CALL_3
0x40008cd	        0x488d3c87	                  lea rdi, [rdi + rax*4]	        59	string3.h	FUNCTION_43	CALL_3
0x40008d1	      0xe800000000	                          call 0x40008d6	        59	string3.h	FUNCTION_43	CALL_3
0x40008d6	      0x498b442408	                mov rax, qword [r12 + 8]	       118	state.c	FUNCTION_6	IF_8
0x40008db	          0x4885c0	                           test rax, rax	       118	state.c	FUNCTION_6	IF_8
0x40008de	            0x7451	                            je 0x4000931	       118	state.c	FUNCTION_6	IF_8
0x40008e0	        0x4c8b4810	              mov r9, qword [rax + 0x10]	       118	state.c	FUNCTION_6	IF_8
0x40008e4	          0x4d85c9	                             test r9, r9	       118	state.c	FUNCTION_6	IF_8
0x40008e7	            0x7422	                            je 0x400090b	       118	state.c	FUNCTION_6	IF_8
0x40008e9	      0x4d8b442410	              mov r8, qword [r12 + 0x10]	       119	state.c	FUNCTION_6	IF_8	IF_9
0x40008ee	          0x4489e9	                           mov ecx, r13d	       119	state.c	FUNCTION_6	IF_8	IF_9
0x40008f1	          0x4489f2	                           mov edx, r14d	       119	state.c	FUNCTION_6	IF_8	IF_9
0x40008f4	          0x4889ef	                            mov rdi, rbp	       119	state.c	FUNCTION_6	IF_8	IF_9
0x40008f7	          0x4889de	                            mov rsi, rbx	       119	state.c	FUNCTION_6	IF_8	IF_9
0x40008fa	          0x41ffd1	                                 call r9	       119	state.c	FUNCTION_6	IF_8	IF_9
0x40008fd	            0x85c0	                           test eax, eax	       119	state.c	FUNCTION_6	IF_8	IF_9
0x40008ff	            0x7530	                           jne 0x4000931	       119	state.c	FUNCTION_6	IF_8	IF_9
0x4000901	      0x498b442408	                mov rax, qword [r12 + 8]	       122	state.c	FUNCTION_6	IF_10
0x4000906	          0x4885c0	                           test rax, rax	       122	state.c	FUNCTION_6	IF_10
0x4000909	            0x7426	                            je 0x4000931	       122	state.c	FUNCTION_6	IF_10
0x400090b	        0x4883ec08	                              sub rsp, 8	       123	state.c	FUNCTION_6	IF_10	CALL_4
0x400090f	      0x41ff742410	                 push qword [r12 + 0x10]	       123	state.c	FUNCTION_6	IF_10	CALL_4
0x4000914	        0x4c8b4820	              mov r9, qword [rax + 0x20]	       123	state.c	FUNCTION_6	IF_10	CALL_4
0x4000918	        0x4c8b4018	              mov r8, qword [rax + 0x18]	       123	state.c	FUNCTION_6	IF_10	CALL_4
0x400091c	          0x4489e9	                           mov ecx, r13d	       123	state.c	FUNCTION_6	IF_10	CALL_4
0x400091f	          0x4489f2	                           mov edx, r14d	       123	state.c	FUNCTION_6	IF_10	CALL_4
0x4000922	          0x4889ef	                            mov rdi, rbp	       123	state.c	FUNCTION_6	IF_10	CALL_4
0x4000925	          0x4889de	                            mov rsi, rbx	       123	state.c	FUNCTION_6	IF_10	CALL_4
0x4000928	      0xe800000000	                          call 0x400092d	       123	state.c	FUNCTION_6	IF_10	CALL_4
0x400092d	        0x4883c410	                           add rsp, 0x10	       123	state.c	FUNCTION_6	IF_10	CALL_4
0x4000931	              0x5b	                                 pop rbx	       125	state.c	FUNCTION_6
0x4000932	              0x5d	                                 pop rbp	       125	state.c	FUNCTION_6
0x4000933	            0x415c	                                 pop r12	       125	state.c	FUNCTION_6
0x4000935	            0x415d	                                 pop r13	       125	state.c	FUNCTION_6
0x4000937	            0x415e	                                 pop r14	       125	state.c	FUNCTION_6
0x4000939	            0xf3c3	                                     ret	       125	state.c	FUNCTION_6
vterm_state_set_unrecognised_fallbacks	FOR,0:IF,1:functions,0:WHILE,0:CALL,0:SWITCH,0:DO,0:ELSE,1	8
0x40012c6	          0x4885f6	                           test rsi, rsi	      1835	state.c	FUNCTION_36	IF_1
0x40012c9	            0x7409	                            je 0x40012d4	      1835	state.c	FUNCTION_36	IF_1
0x40012cb	        0x48897718	             mov qword [rdi + 0x18], rsi	      1836	state.c	FUNCTION_36	IF_1
0x40012cf	        0x48895720	             mov qword [rdi + 0x20], rdx	      1837	state.c	FUNCTION_36	IF_1
0x40012d3	              0xc3	                                     ret	      1837	state.c	FUNCTION_36	IF_1
0x40012d4	    0x48c747180000	               mov qword [rdi + 0x18], 0	      1840	state.c	FUNCTION_36	ELSE_1
0x40012dc	    0x48c747200000	               mov qword [rdi + 0x20], 0	      1841	state.c	FUNCTION_36	ELSE_1
0x40012e4	              0xc3	                                     ret	      1841	state.c	FUNCTION_36	ELSE_1
on_resize	FOR,4:IF,10:functions,0:WHILE,0:CALL,7:SWITCH,0:DO,0:ELSE,2	176
0x4000305	            0x4155	                                push r13	      1610	state.c	FUNCTION_29
0x4000307	            0x4154	                                push r12	      1610	state.c	FUNCTION_29
0x4000309	              0x55	                                push rbp	      1610	state.c	FUNCTION_29
0x400030a	              0x53	                                push rbx	      1610	state.c	FUNCTION_29
0x400030b	        0x4883ec28	                           sub rsp, 0x28	      1610	state.c	FUNCTION_29
0x400030f	          0x4189fc	                           mov r12d, edi	      1610	state.c	FUNCTION_29
0x4000312	            0x89f5	                            mov ebp, esi	      1610	state.c	FUNCTION_29
0x4000314	          0x4889d3	                            mov rbx, rdx	      1610	state.c	FUNCTION_29
0x4000317	    0x64488b042528	                mov rax, qword fs:[0x28]	      1610	state.c	FUNCTION_29
0x4000320	      0x4889442418	             mov qword [rsp + 0x18], rax	      1610	state.c	FUNCTION_29
0x4000325	            0x31c0	                            xor eax, eax	      1610	state.c	FUNCTION_29
0x4000327	        0x488b4230	            mov rax, qword [rdx + 0x30] 	      1612	state.c	FUNCTION_29
0x400032b	        0x48890424	                    mov qword [rsp], rax	      1612	state.c	FUNCTION_29
0x400032f	    0xc74424100000	               mov dword [rsp + 0x10], 0	      1613	state.c	FUNCTION_29
0x4000337	    0xc74424140000	               mov dword [rsp + 0x14], 0	      1613	state.c	FUNCTION_29
0x400033f	          0x39722c	            cmp dword [rdx + 0x2c], esi 	      1615	state.c	FUNCTION_29	IF_1
0x4000342	     0xf84b6000000	                            je 0x40003fe	      1615	state.c	FUNCTION_29	IF_1
0x4000348	          0x8d460e	                    lea eax, [rsi + 0xe]	      1616	state.c	FUNCTION_29	IF_1	CALL_1
0x400034b	          0x83c607	                              add esi, 7	      1616	state.c	FUNCTION_29	IF_1	CALL_1
0x400034e	           0xf48f0	                          cmovs esi, eax	      1616	state.c	FUNCTION_29	IF_1	CALL_1
0x4000351	          0xc1fe03	                              sar esi, 3	      1616	state.c	FUNCTION_29	IF_1	CALL_1
0x4000354	          0x4863f6	                         movsxd rsi, esi	      1616	state.c	FUNCTION_29	IF_1	CALL_1
0x4000357	          0x488b3a	                    mov rdi, qword [rdx]	      1616	state.c	FUNCTION_29	IF_1	CALL_1
0x400035a	      0xe800000000	                          call 0x400035f	      1616	state.c	FUNCTION_29	IF_1	CALL_1
0x400035f	          0x4989c5	                            mov r13, rax	      1616	state.c	FUNCTION_29	IF_1	CALL_1
0x4000362	        0x837b2c00	               cmp dword [rbx + 0x2c], 0	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x4000366	            0x7e46	                           jle 0x40003ae	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x4000368	            0x85ed	                           test ebp, ebp	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x400036a	            0x7e42	                           jle 0x40003ae	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x400036c	      0xb800000000	                              mov eax, 0	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x4000371	      0xbf01000000	                              mov edi, 1	      1621	state.c	FUNCTION_29	IF_1	FOR_1
0x4000376	            0x89c1	                            mov ecx, eax	      1621	state.c	FUNCTION_29	IF_1	FOR_1
0x4000378	          0x83e107	                              and ecx, 7	      1621	state.c	FUNCTION_29	IF_1	FOR_1
0x400037b	            0x89fe	                            mov esi, edi	      1621	state.c	FUNCTION_29	IF_1	FOR_1
0x400037d	            0xd3e6	                             shl esi, cl	      1621	state.c	FUNCTION_29	IF_1	FOR_1
0x400037f	            0x89f1	                            mov ecx, esi	      1621	state.c	FUNCTION_29	IF_1	FOR_1
0x4000381	            0x89c2	                            mov edx, eax	      1622	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x4000383	          0xc1fa03	                              sar edx, 3	      1622	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x4000386	          0x4863d2	                         movsxd rdx, edx	      1622	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x4000389	        0x488b7350	            mov rsi, qword [rbx + 0x50] 	      1622	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x400038d	          0x840c16	               test byte [rsi + rdx], cl	      1622	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x4000390	            0x7407	                            je 0x4000399	      1622	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x4000392	      0x41084c1500	                 or byte [r13 + rdx], cl	      1623	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x4000397	            0xeb07	                           jmp 0x40003a0	      1623	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x4000399	            0xf7d1	                                 not ecx	      1625	state.c	FUNCTION_29	IF_1	FOR_1	ELSE_1
0x400039b	      0x41204c1500	                and byte [r13 + rdx], cl	      1625	state.c	FUNCTION_29	IF_1	FOR_1	ELSE_1
0x40003a0	          0x83c001	                              add eax, 1	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x40003a3	          0x39432c	            cmp dword [rbx + 0x2c], eax 	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x40003a6	            0x7e0b	                           jle 0x40003b3	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x40003a8	            0x39c5	                            cmp ebp, eax	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x40003aa	            0x7fca	                            jg 0x4000376	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x40003ac	            0xeb05	                           jmp 0x40003b3	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x40003ae	      0xb800000000	                              mov eax, 0	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x40003b3	            0x39c5	                            cmp ebp, eax	      1628	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x40003b5	            0x7e37	                           jle 0x40003ee	      1628	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x40003b7	      0xbe01000000	                              mov esi, 1	      1629	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x40003bc	            0x89c1	                            mov ecx, eax	      1629	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x40003be	          0x83e107	                              and ecx, 7	      1629	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x40003c1	            0x89f2	                            mov edx, esi	      1629	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x40003c3	            0xd3e2	                             shl edx, cl	      1629	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x40003c5	            0x85c9	                           test ecx, ecx	      1630	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	IF_3
0x40003c7	            0x750f	                           jne 0x40003d8	      1630	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	IF_3
0x40003c9	            0x89c1	                            mov ecx, eax	      1631	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	IF_3
0x40003cb	          0xc1f903	                              sar ecx, 3	      1631	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	IF_3
0x40003ce	          0x4863c9	                         movsxd rcx, ecx	      1631	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	IF_3
0x40003d1	      0x4108540d00	                 or byte [r13 + rcx], dl	      1631	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	IF_3
0x40003d6	            0xeb0f	                           jmp 0x40003e7	      1631	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	IF_3
0x40003d8	            0x89c1	                            mov ecx, eax	      1633	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	ELSE_2
0x40003da	          0xc1f903	                              sar ecx, 3	      1633	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	ELSE_2
0x40003dd	          0x4863c9	                         movsxd rcx, ecx	      1633	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	ELSE_2
0x40003e0	            0xf7d2	                                 not edx	      1633	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	ELSE_2
0x40003e2	      0x4120540d00	                and byte [r13 + rcx], dl	      1633	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	ELSE_2
0x40003e7	          0x83c001	                              add eax, 1	      1628	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x40003ea	            0x39c5	                            cmp ebp, eax	      1628	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x40003ec	            0x75ce	                           jne 0x40003bc	      1628	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x40003ee	        0x488b7350	            mov rsi, qword [rbx + 0x50] 	      1636	state.c	FUNCTION_29	IF_1	CALL_2
0x40003f2	          0x488b3b	                    mov rdi, qword [rbx]	      1636	state.c	FUNCTION_29	IF_1	CALL_2
0x40003f5	      0xe800000000	                          call 0x40003fa	      1636	state.c	FUNCTION_29	IF_1	CALL_2
0x40003fa	        0x4c896b50	             mov qword [rbx + 0x50], r13	      1637	state.c	FUNCTION_29	IF_1
0x40003fe	        0x44396328	           cmp dword [rbx + 0x28], r12d 	      1640	state.c	FUNCTION_29	IF_4
0x4000402	            0x746b	                            je 0x400046f	      1640	state.c	FUNCTION_29	IF_4
0x4000404	          0x4963f4	                        movsxd rsi, r12d	      1641	state.c	FUNCTION_29	IF_4	CALL_3
0x4000407	        0x48c1e602	                              shl rsi, 2	      1641	state.c	FUNCTION_29	IF_4	CALL_3
0x400040b	          0x488b3b	                    mov rdi, qword [rbx]	      1641	state.c	FUNCTION_29	IF_4	CALL_3
0x400040e	      0xe800000000	                          call 0x4000413	      1641	state.c	FUNCTION_29	IF_4	CALL_3
0x4000413	          0x4989c5	                            mov r13, rax	      1641	state.c	FUNCTION_29	IF_4	CALL_3
0x4000416	        0x837b2800	               cmp dword [rbx + 0x28], 0	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x400041a	            0x7e28	                           jle 0x4000444	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x400041c	          0x4585e4	                         test r12d, r12d	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x400041f	            0x7e23	                           jle 0x4000444	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x4000421	      0xb800000000	                              mov eax, 0	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x4000426	          0x4863d0	                         movsxd rdx, eax	      1645	state.c	FUNCTION_29	IF_4	FOR_3
0x4000429	        0x488b4b58	            mov rcx, qword [rbx + 0x58] 	      1645	state.c	FUNCTION_29	IF_4	FOR_3
0x400042d	          0x8b0c91	            mov ecx, dword [rcx + rdx*4]	      1645	state.c	FUNCTION_29	IF_4	FOR_3
0x4000430	      0x41894c9500	            mov dword [r13 + rdx*4], ecx	      1645	state.c	FUNCTION_29	IF_4	FOR_3
0x4000435	          0x83c001	                              add eax, 1	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x4000438	          0x394328	            cmp dword [rbx + 0x28], eax 	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x400043b	            0x7e0c	                           jle 0x4000449	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x400043d	          0x4139c4	                           cmp r12d, eax	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x4000440	            0x7fe4	                            jg 0x4000426	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x4000442	            0xeb05	                           jmp 0x4000449	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x4000444	      0xb800000000	                              mov eax, 0	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x4000449	          0x4139c4	                           cmp r12d, eax	      1648	state.c	FUNCTION_29	IF_4	FOR_4
0x400044c	            0x7e11	                           jle 0x400045f	      1648	state.c	FUNCTION_29	IF_4	FOR_4
0x400044e	          0x4863d0	                         movsxd rdx, eax	      1649	state.c	FUNCTION_29	IF_4	FOR_4
0x4000451	    0x4180649500f8	            and byte [r13 + rdx*4], 0xf8	      1650	state.c	FUNCTION_29	IF_4	FOR_4
0x4000457	          0x83c001	                              add eax, 1	      1648	state.c	FUNCTION_29	IF_4	FOR_4
0x400045a	          0x4139c4	                           cmp r12d, eax	      1648	state.c	FUNCTION_29	IF_4	FOR_4
0x400045d	            0x75ef	                           jne 0x400044e	      1648	state.c	FUNCTION_29	IF_4	FOR_4
0x400045f	        0x488b7358	            mov rsi, qword [rbx + 0x58] 	      1653	state.c	FUNCTION_29	IF_4	CALL_4
0x4000463	          0x488b3b	                    mov rdi, qword [rbx]	      1653	state.c	FUNCTION_29	IF_4	CALL_4
0x4000466	      0xe800000000	                          call 0x400046b	      1653	state.c	FUNCTION_29	IF_4	CALL_4
0x400046b	        0x4c896b58	             mov qword [rbx + 0x58], r13	      1654	state.c	FUNCTION_29	IF_4
0x400046f	        0x44896328	            mov dword [rbx + 0x28], r12d	      1657	state.c	FUNCTION_29
0x4000473	          0x896b2c	             mov dword [rbx + 0x2c], ebp	      1658	state.c	FUNCTION_29
0x4000476	          0x8b4340	            mov eax, dword [rbx + 0x40] 	      1660	state.c	FUNCTION_29	IF_5
0x4000479	          0x4139c4	                           cmp r12d, eax	      1661	state.c	FUNCTION_29	CALL_5
0x400047c	            0x7d08	                           jge 0x4000486	      1661	state.c	FUNCTION_29	CALL_5
0x400047e	            0x85c0	                           test eax, eax	      1661	state.c	FUNCTION_29	CALL_5
0x4000480	            0x7804	                            js 0x4000486	      1661	state.c	FUNCTION_29	CALL_5
0x4000482	        0x44896340	            mov dword [rbx + 0x40], r12d	      1661	state.c	FUNCTION_29	CALL_5
0x4000486	          0x8b4348	            mov eax, dword [rbx + 0x48] 	      1662	state.c	FUNCTION_29	IF_6
0x4000489	            0x39c5	                            cmp ebp, eax	      1663	state.c	FUNCTION_29	CALL_6
0x400048b	            0x7d07	                           jge 0x4000494	      1663	state.c	FUNCTION_29	CALL_6
0x400048d	            0x85c0	                           test eax, eax	      1663	state.c	FUNCTION_29	CALL_6
0x400048f	            0x7803	                            js 0x4000494	      1663	state.c	FUNCTION_29	CALL_6
0x4000491	          0x896b48	             mov dword [rbx + 0x48], ebp	      1663	state.c	FUNCTION_29	CALL_6
0x4000494	        0x488b4308	                mov rax, qword [rbx + 8]	      1665	state.c	FUNCTION_29	IF_7
0x4000498	          0x4885c0	                           test rax, rax	      1665	state.c	FUNCTION_29	IF_7
0x400049b	            0x7419	                            je 0x40004b6	      1665	state.c	FUNCTION_29	IF_7
0x400049d	        0x488b4048	            mov rax, qword [rax + 0x48] 	      1665	state.c	FUNCTION_29	IF_7
0x40004a1	          0x4885c0	                           test rax, rax	      1665	state.c	FUNCTION_29	IF_7
0x40004a4	            0x7410	                            je 0x40004b6	      1665	state.c	FUNCTION_29	IF_7
0x40004a6	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	      1666	state.c	FUNCTION_29	IF_7
0x40004aa	      0x488d542410	                   lea rdx, [rsp + 0x10]	      1666	state.c	FUNCTION_29	IF_7
0x40004af	            0x89ee	                            mov esi, ebp	      1666	state.c	FUNCTION_29	IF_7
0x40004b1	          0x4489e7	                           mov edi, r12d	      1666	state.c	FUNCTION_29	IF_7
0x40004b4	            0xffd0	                                call rax	      1666	state.c	FUNCTION_29	IF_7
0x40004b6	        0x837b3800	               cmp dword [rbx + 0x38], 0	      1668	state.c	FUNCTION_29	IF_8
0x40004ba	            0x7417	                            je 0x40004d3	      1668	state.c	FUNCTION_29	IF_8
0x40004bc	          0x8b4334	            mov eax, dword [rbx + 0x34] 	      1668	state.c	FUNCTION_29	IF_8
0x40004bf	          0x8d55ff	                      lea edx, [rbp - 1]	      1668	state.c	FUNCTION_29	IF_8
0x40004c2	            0x39d0	                            cmp eax, edx	      1668	state.c	FUNCTION_29	IF_8
0x40004c4	            0x7d0d	                           jge 0x40004d3	      1668	state.c	FUNCTION_29	IF_8
0x40004c6	    0xc74338000000	               mov dword [rbx + 0x38], 0	      1669	state.c	FUNCTION_29	IF_8
0x40004cd	          0x83c001	                              add eax, 1	      1670	state.c	FUNCTION_29	IF_8
0x40004d0	          0x894334	             mov dword [rbx + 0x34], eax	      1670	state.c	FUNCTION_29	IF_8
0x40004d3	        0x8b542410	            mov edx, dword [rsp + 0x10] 	      1673	state.c	FUNCTION_29
0x40004d7	           0x35330	             add edx, dword [rbx + 0x30]	      1673	state.c	FUNCTION_29
0x40004da	          0x895330	             mov dword [rbx + 0x30], edx	      1673	state.c	FUNCTION_29
0x40004dd	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      1674	state.c	FUNCTION_29
0x40004e1	           0x34334	             add eax, dword [rbx + 0x34]	      1674	state.c	FUNCTION_29
0x40004e4	          0x894334	             mov dword [rbx + 0x34], eax	      1674	state.c	FUNCTION_29
0x40004e7	          0x4139d4	                           cmp r12d, edx	      1676	state.c	FUNCTION_29	IF_9
0x40004ea	            0x7f08	                            jg 0x40004f4	      1676	state.c	FUNCTION_29	IF_9
0x40004ec	        0x4183ec01	                             sub r12d, 1	      1677	state.c	FUNCTION_29	IF_9
0x40004f0	        0x44896330	            mov dword [rbx + 0x30], r12d	      1677	state.c	FUNCTION_29	IF_9
0x40004f4	            0x39c5	                            cmp ebp, eax	      1678	state.c	FUNCTION_29	IF_10
0x40004f6	            0x7f06	                            jg 0x40004fe	      1678	state.c	FUNCTION_29	IF_10
0x40004f8	          0x83ed01	                              sub ebp, 1	      1679	state.c	FUNCTION_29	IF_10
0x40004fb	          0x896b34	             mov dword [rbx + 0x34], ebp	      1679	state.c	FUNCTION_29	IF_10
0x40004fe	      0xba01000000	                              mov edx, 1	      1681	state.c	FUNCTION_29	CALL_7
0x4000503	          0x4889e6	                            mov rsi, rsp	      1681	state.c	FUNCTION_29	CALL_7
0x4000506	          0x4889df	                            mov rdi, rbx	      1681	state.c	FUNCTION_29	CALL_7
0x4000509	      0xe8cafbffff	                   call sym.updatecursor	      1681	state.c	FUNCTION_29	CALL_7
0x400050e	      0xb801000000	                              mov eax, 1	      1684	state.c	FUNCTION_29
0x4000513	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1684	state.c	FUNCTION_29
0x4000518	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      1684	state.c	FUNCTION_29
0x4000521	            0x7405	                            je 0x4000528	      1684	state.c	FUNCTION_29
0x4000523	      0xe800000000	                          call 0x4000528	      1684	state.c	FUNCTION_29
0x4000528	        0x4883c428	                           add rsp, 0x28	      1684	state.c	FUNCTION_29
0x400052c	              0x5b	                                 pop rbx	      1684	state.c	FUNCTION_29
0x400052d	              0x5d	                                 pop rbp	      1684	state.c	FUNCTION_29
0x400052e	            0x415c	                                 pop r12	      1684	state.c	FUNCTION_29
0x4000530	            0x415d	                                 pop r13	      1684	state.c	FUNCTION_29
0x4000532	              0xc3	                                     ret	      1684	state.c	FUNCTION_29
set_dec_mode	FOR,1:IF,1:functions,0:WHILE,0:CALL,12:SWITCH,1:DO,0:ELSE,0	192
0x400186a	              0x55	                                push rbp	       729	state.c	FUNCTION_23
0x400186b	              0x53	                                push rbx	       729	state.c	FUNCTION_23
0x400186c	        0x4883ec18	                           sub rsp, 0x18	       729	state.c	FUNCTION_23
0x4001870	          0x4889fd	                            mov rbp, rdi	       729	state.c	FUNCTION_23
0x4001873	            0x89d3	                            mov ebx, edx	       729	state.c	FUNCTION_23
0x4001875	    0x64488b042528	                mov rax, qword fs:[0x28]	       729	state.c	FUNCTION_23
0x400187e	      0x4889442408	                mov qword [rsp + 8], rax	       729	state.c	FUNCTION_23
0x4001883	            0x31c0	                            xor eax, eax	       729	state.c	FUNCTION_23
0x4001885	    0x81feeb030000	                          cmp esi, 0x3eb	       730	state.c	FUNCTION_23	SWITCH_1
0x400188b	            0x7f70	                            jg 0x40018fd	       730	state.c	FUNCTION_23	SWITCH_1
0x400188d	    0x81feea030000	                          cmp esi, 0x3ea	       730	state.c	FUNCTION_23	SWITCH_1
0x4001893	     0xf8df9010000	                           jge 0x4001a92	       730	state.c	FUNCTION_23	SWITCH_1
0x4001899	          0x83fe07	                              cmp esi, 7	       730	state.c	FUNCTION_23	SWITCH_1
0x400189c	     0xf845d010000	                            je 0x40019ff	       730	state.c	FUNCTION_23	SWITCH_1
0x40018a2	          0x83fe07	                              cmp esi, 7	       730	state.c	FUNCTION_23	SWITCH_1
0x40018a5	            0x7f20	                            jg 0x40018c7	       730	state.c	FUNCTION_23	SWITCH_1
0x40018a7	          0x83fe05	                              cmp esi, 5	       730	state.c	FUNCTION_23	SWITCH_1
0x40018aa	     0xf84e8000000	                            je 0x4001998	       730	state.c	FUNCTION_23	SWITCH_1
0x40018b0	          0x83fe05	                              cmp esi, 5	       730	state.c	FUNCTION_23	SWITCH_1
0x40018b3	     0xf8fee000000	                            jg 0x40019a7	       730	state.c	FUNCTION_23	SWITCH_1
0x40018b9	          0x83fe01	                              cmp esi, 1	       730	state.c	FUNCTION_23	SWITCH_1
0x40018bc	     0xf84ba000000	                            je 0x400197c	       730	state.c	FUNCTION_23	SWITCH_1
0x40018c2	      0xe98c020000	                           jmp 0x4001b53	       730	state.c	FUNCTION_23	SWITCH_1
0x40018c7	          0x83fe19	                           cmp esi, 0x19	       730	state.c	FUNCTION_23	SWITCH_1
0x40018ca	     0xf845b010000	                            je 0x4001a2b	       730	state.c	FUNCTION_23	SWITCH_1
0x40018d0	          0x83fe19	                           cmp esi, 0x19	       730	state.c	FUNCTION_23	SWITCH_1
0x40018d3	            0x7f0e	                            jg 0x40018e3	       730	state.c	FUNCTION_23	SWITCH_1
0x40018d5	          0x83fe0c	                            cmp esi, 0xc	       730	state.c	FUNCTION_23	SWITCH_1
0x40018d8	     0xf843e010000	                            je 0x4001a1c	       730	state.c	FUNCTION_23	SWITCH_1
0x40018de	      0xe970020000	                           jmp 0x4001b53	       730	state.c	FUNCTION_23	SWITCH_1
0x40018e3	          0x83fe45	                           cmp esi, 0x45	       730	state.c	FUNCTION_23	SWITCH_1
0x40018e6	     0xf844e010000	                            je 0x4001a3a	       730	state.c	FUNCTION_23	SWITCH_1
0x40018ec	    0x81fee8030000	                          cmp esi, 0x3e8	       730	state.c	FUNCTION_23	SWITCH_1
0x40018f2	     0xf849a010000	                            je 0x4001a92	       730	state.c	FUNCTION_23	SWITCH_1
0x40018f8	      0xe956020000	                           jmp 0x4001b53	       730	state.c	FUNCTION_23	SWITCH_1
0x40018fd	    0x81fef7030000	                          cmp esi, 0x3f7	       730	state.c	FUNCTION_23	SWITCH_1
0x4001903	     0xf84f8010000	                            je 0x4001b01	       730	state.c	FUNCTION_23	SWITCH_1
0x4001909	    0x81fef7030000	                          cmp esi, 0x3f7	       730	state.c	FUNCTION_23	SWITCH_1
0x400190f	            0x7f29	                            jg 0x400193a	       730	state.c	FUNCTION_23	SWITCH_1
0x4001911	    0x81feed030000	                          cmp esi, 0x3ed	       730	state.c	FUNCTION_23	SWITCH_1
0x4001917	     0xf84c8010000	                            je 0x4001ae5	       730	state.c	FUNCTION_23	SWITCH_1
0x400191d	    0x81feed030000	                          cmp esi, 0x3ed	       730	state.c	FUNCTION_23	SWITCH_1
0x4001923	     0xf8ca2010000	                            jl 0x4001acb	       730	state.c	FUNCTION_23	SWITCH_1
0x4001929	    0x81feee030000	                          cmp esi, 0x3ee	       730	state.c	FUNCTION_23	SWITCH_1
0x400192f	     0xf84bd010000	                            je 0x4001af2	       730	state.c	FUNCTION_23	SWITCH_1
0x4001935	      0xe919020000	                           jmp 0x4001b53	       730	state.c	FUNCTION_23	SWITCH_1
0x400193a	    0x81fe18040000	                          cmp esi, 0x418	       730	state.c	FUNCTION_23	SWITCH_1
0x4001940	     0xf84d6010000	                            je 0x4001b1c	       730	state.c	FUNCTION_23	SWITCH_1
0x4001946	    0x81fe18040000	                          cmp esi, 0x418	       730	state.c	FUNCTION_23	SWITCH_1
0x400194c	            0x7f11	                            jg 0x400195f	       730	state.c	FUNCTION_23	SWITCH_1
0x400194e	    0x81fe17040000	                          cmp esi, 0x417	       730	state.c	FUNCTION_23	SWITCH_1
0x4001954	     0xf84b6010000	                            je 0x4001b10	       730	state.c	FUNCTION_23	SWITCH_1
0x400195a	      0xe9f4010000	                           jmp 0x4001b53	       730	state.c	FUNCTION_23	SWITCH_1
0x400195f	    0x81fe19040000	                          cmp esi, 0x419	       730	state.c	FUNCTION_23	SWITCH_1
0x4001965	     0xf84ba010000	                            je 0x4001b25	       730	state.c	FUNCTION_23	SWITCH_1
0x400196b	    0x81fed4070000	                          cmp esi, 0x7d4	       730	state.c	FUNCTION_23	SWITCH_1
0x4001971	     0xf84c4010000	                            je 0x4001b3b	       730	state.c	FUNCTION_23	SWITCH_1
0x4001977	      0xe9d7010000	                           jmp 0x4001b53	       730	state.c	FUNCTION_23	SWITCH_1
0x400197c	          0x83e301	                              and ebx, 1	       732	state.c	FUNCTION_23	SWITCH_1
0x400197f	             0x1db	                            add ebx, ebx	       732	state.c	FUNCTION_23	SWITCH_1
0x4001981	     0xfb687940000	           movzx eax, byte [rdi + 0x94] 	       732	state.c	FUNCTION_23	SWITCH_1
0x4001988	          0x83e0fd	                     and eax, 0xfffffffd	       732	state.c	FUNCTION_23	SWITCH_1
0x400198b	             0x9c3	                             or ebx, eax	       732	state.c	FUNCTION_23	SWITCH_1
0x400198d	    0x889f94000000	               mov byte [rdi + 0x94], bl	       732	state.c	FUNCTION_23	SWITCH_1
0x4001993	      0xe9bb010000	                           jmp 0x4001b53	       733	state.c	FUNCTION_23	SWITCH_1
0x4001998	      0xbe06000000	                              mov esi, 6	       736	state.c	FUNCTION_23	SWITCH_1	CALL_1
0x400199d	      0xe84efdffff	               call sym.settermprop_bool	       736	state.c	FUNCTION_23	SWITCH_1	CALL_1
0x40019a2	      0xe9ac010000	                           jmp 0x4001b53	       737	state.c	FUNCTION_23	SWITCH_1
0x40019a7	        0x488b4730	            mov rax, qword [rdi + 0x30] 	       741	state.c	FUNCTION_23	SWITCH_1
0x40019ab	        0x48890424	                    mov qword [rsp], rax	       741	state.c	FUNCTION_23	SWITCH_1
0x40019af	          0x83e301	                              and ebx, 1	       742	state.c	FUNCTION_23	SWITCH_1
0x40019b2	          0xc1e302	                              shl ebx, 2	       742	state.c	FUNCTION_23	SWITCH_1
0x40019b5	     0xfb687950000	           movzx eax, byte [rdi + 0x95] 	       742	state.c	FUNCTION_23	SWITCH_1
0x40019bc	          0x83e0fb	                     and eax, 0xfffffffb	       742	state.c	FUNCTION_23	SWITCH_1
0x40019bf	             0x9c3	                             or ebx, eax	       742	state.c	FUNCTION_23	SWITCH_1
0x40019c1	    0x889f95000000	               mov byte [rdi + 0x95], bl	       742	state.c	FUNCTION_23	SWITCH_1
0x40019c7	      0xb800000000	                              mov eax, 0	       743	state.c	FUNCTION_23	SWITCH_1
0x40019cc	          0xf6c304	                              test bl, 4	       743	state.c	FUNCTION_23	SWITCH_1
0x40019cf	            0x7403	                            je 0x40019d4	       743	state.c	FUNCTION_23	SWITCH_1
0x40019d1	          0x8b473c	            mov eax, dword [rdi + 0x3c] 	       743	state.c	FUNCTION_23	SWITCH_1
0x40019d4	          0x894530	            mov dword [rbp + 0x30], eax 	       743	state.c	FUNCTION_23	SWITCH_1
0x40019d7	          0x83e314	                           and ebx, 0x14	       744	state.c	FUNCTION_23	SWITCH_1	CALL_2
0x40019da	      0xb800000000	                              mov eax, 0	       744	state.c	FUNCTION_23	SWITCH_1	CALL_2
0x40019df	          0x80fb14	                            cmp bl, 0x14	       744	state.c	FUNCTION_23	SWITCH_1	CALL_2
0x40019e2	            0x7503	                           jne 0x40019e7	       744	state.c	FUNCTION_23	SWITCH_1	CALL_2
0x40019e4	          0x8b4544	            mov eax, dword [rbp + 0x44] 	       744	state.c	FUNCTION_23	SWITCH_1	CALL_2
0x40019e7	          0x894534	            mov dword [rbp + 0x34], eax 	       744	state.c	FUNCTION_23	SWITCH_1	CALL_2
0x40019ea	      0xba01000000	                              mov edx, 1	       745	state.c	FUNCTION_23	SWITCH_1	CALL_3
0x40019ef	          0x4889e6	                            mov rsi, rsp	       745	state.c	FUNCTION_23	SWITCH_1	CALL_3
0x40019f2	          0x4889ef	                            mov rdi, rbp	       745	state.c	FUNCTION_23	SWITCH_1	CALL_3
0x40019f5	      0xe8dee6ffff	                   call sym.updatecursor	       745	state.c	FUNCTION_23	SWITCH_1	CALL_3
0x40019fa	      0xe954010000	                           jmp 0x4001b53	       747	state.c	FUNCTION_23	SWITCH_1
0x40019ff	          0x83e301	                              and ebx, 1	       750	state.c	FUNCTION_23	SWITCH_1
0x4001a02	          0xc1e302	                              shl ebx, 2	       750	state.c	FUNCTION_23	SWITCH_1
0x4001a05	     0xfb687940000	           movzx eax, byte [rdi + 0x94] 	       750	state.c	FUNCTION_23	SWITCH_1
0x4001a0c	          0x83e0fb	                     and eax, 0xfffffffb	       750	state.c	FUNCTION_23	SWITCH_1
0x4001a0f	             0x9c3	                             or ebx, eax	       750	state.c	FUNCTION_23	SWITCH_1
0x4001a11	    0x889f94000000	               mov byte [rdi + 0x94], bl	       750	state.c	FUNCTION_23	SWITCH_1
0x4001a17	      0xe937010000	                           jmp 0x4001b53	       751	state.c	FUNCTION_23	SWITCH_1
0x4001a1c	      0xbe02000000	                              mov esi, 2	       754	state.c	FUNCTION_23	SWITCH_1	CALL_4
0x4001a21	      0xe8cafcffff	               call sym.settermprop_bool	       754	state.c	FUNCTION_23	SWITCH_1	CALL_4
0x4001a26	      0xe928010000	                           jmp 0x4001b53	       755	state.c	FUNCTION_23	SWITCH_1
0x4001a2b	      0xbe01000000	                              mov esi, 1	       758	state.c	FUNCTION_23	SWITCH_1	CALL_5
0x4001a30	      0xe8bbfcffff	               call sym.settermprop_bool	       758	state.c	FUNCTION_23	SWITCH_1	CALL_5
0x4001a35	      0xe919010000	                           jmp 0x4001b53	       759	state.c	FUNCTION_23	SWITCH_1
0x4001a3a	            0x89d0	                            mov eax, edx	       763	state.c	FUNCTION_23	SWITCH_1
0x4001a3c	          0x83e001	                              and eax, 1	       763	state.c	FUNCTION_23	SWITCH_1
0x4001a3f	          0xc1e004	                              shl eax, 4	       763	state.c	FUNCTION_23	SWITCH_1
0x4001a42	     0xfb697950000	           movzx edx, byte [rdi + 0x95] 	       763	state.c	FUNCTION_23	SWITCH_1
0x4001a49	          0x83e2ef	                     and edx, 0xffffffef	       763	state.c	FUNCTION_23	SWITCH_1
0x4001a4c	             0x9d0	                             or eax, edx	       763	state.c	FUNCTION_23	SWITCH_1
0x4001a4e	    0x888795000000	               mov byte [rdi + 0x95], al	       763	state.c	FUNCTION_23	SWITCH_1
0x4001a54	            0x85db	                           test ebx, ebx	       764	state.c	FUNCTION_23	SWITCH_1	IF_1
0x4001a56	     0xf84f7000000	                            je 0x4001b53	       764	state.c	FUNCTION_23	SWITCH_1	IF_1
0x4001a5c	        0x837f2800	               cmp dword [rdi + 0x28], 0	       768	state.c	FUNCTION_23	SWITCH_1	IF_1	FOR_1
0x4001a60	     0xf8eed000000	                           jle 0x4001b53	       768	state.c	FUNCTION_23	SWITCH_1	IF_1	FOR_1
0x4001a66	      0xbb00000000	                              mov ebx, 0	       768	state.c	FUNCTION_23	SWITCH_1	IF_1	FOR_1
0x4001a6b	    0x41b800000000	                              mov r8d, 0	       769	state.c	FUNCTION_23	SWITCH_1	IF_1	CALL_6
0x4001a71	      0xb900000000	                              mov ecx, 0	       769	state.c	FUNCTION_23	SWITCH_1	IF_1	CALL_6
0x4001a76	      0xba01000000	                              mov edx, 1	       769	state.c	FUNCTION_23	SWITCH_1	IF_1	CALL_6
0x4001a7b	            0x89de	                            mov esi, ebx	       769	state.c	FUNCTION_23	SWITCH_1	IF_1	CALL_6
0x4001a7d	          0x4889ef	                            mov rdi, rbp	       769	state.c	FUNCTION_23	SWITCH_1	IF_1	CALL_6
0x4001a80	      0xe8bee7ffff	                   call sym.set_lineinfo	       769	state.c	FUNCTION_23	SWITCH_1	IF_1	CALL_6
0x4001a85	          0x83c301	                              add ebx, 1	       768	state.c	FUNCTION_23	SWITCH_1	IF_1	FOR_1
0x4001a88	          0x395d28	            cmp dword [rbp + 0x28], ebx 	       768	state.c	FUNCTION_23	SWITCH_1	IF_1	FOR_1
0x4001a8b	            0x7fde	                            jg 0x4001a6b	       768	state.c	FUNCTION_23	SWITCH_1	IF_1	FOR_1
0x4001a8d	      0xe9c1000000	                           jmp 0x4001b53	       768	state.c	FUNCTION_23	SWITCH_1	IF_1	FOR_1
0x4001a92	      0xba00000000	                              mov edx, 0	       777	state.c	FUNCTION_23	SWITCH_1	CALL_7
0x4001a97	            0x85db	                           test ebx, ebx	       777	state.c	FUNCTION_23	SWITCH_1	CALL_7
0x4001a99	            0x741e	                            je 0x4001ab9	       777	state.c	FUNCTION_23	SWITCH_1	CALL_7
0x4001a9b	    0x81fee8030000	                          cmp esi, 0x3e8	       779	state.c	FUNCTION_23	SWITCH_1
0x4001aa1	            0x7411	                            je 0x4001ab4	       779	state.c	FUNCTION_23	SWITCH_1
0x4001aa3	    0x81feea030000	                          cmp esi, 0x3ea	       780	state.c	FUNCTION_23	SWITCH_1
0x4001aa9	           0xf95c2	                                setne dl	       780	state.c	FUNCTION_23	SWITCH_1
0x4001aac	           0xfb6d2	                           movzx edx, dl	       780	state.c	FUNCTION_23	SWITCH_1
0x4001aaf	          0x83c202	                              add edx, 2	       780	state.c	FUNCTION_23	SWITCH_1
0x4001ab2	            0xeb05	                           jmp 0x4001ab9	       780	state.c	FUNCTION_23	SWITCH_1
0x4001ab4	      0xba01000000	                              mov edx, 1	       779	state.c	FUNCTION_23	SWITCH_1
0x4001ab9	      0xbe08000000	                              mov esi, 8	       777	state.c	FUNCTION_23	SWITCH_1	CALL_7
0x4001abe	          0x4889ef	                            mov rdi, rbp	       777	state.c	FUNCTION_23	SWITCH_1	CALL_7
0x4001ac1	      0xe863fcffff	                call sym.settermprop_int	       777	state.c	FUNCTION_23	SWITCH_1	CALL_7
0x4001ac6	      0xe988000000	                           jmp 0x4001b53	       782	state.c	FUNCTION_23	SWITCH_1
0x4001acb	          0x83e301	                              and ebx, 1	       785	state.c	FUNCTION_23	SWITCH_1
0x4001ace	          0xc1e306	                              shl ebx, 6	       785	state.c	FUNCTION_23	SWITCH_1
0x4001ad1	     0xfb687950000	           movzx eax, byte [rdi + 0x95] 	       785	state.c	FUNCTION_23	SWITCH_1
0x4001ad8	          0x83e0bf	                     and eax, 0xffffffbf	       785	state.c	FUNCTION_23	SWITCH_1
0x4001adb	             0x9c3	                             or ebx, eax	       785	state.c	FUNCTION_23	SWITCH_1
0x4001add	    0x889f95000000	               mov byte [rdi + 0x95], bl	       785	state.c	FUNCTION_23	SWITCH_1
0x4001ae3	            0xeb6e	                           jmp 0x4001b53	       786	state.c	FUNCTION_23	SWITCH_1
0x4001ae5	            0x85d2	                           test edx, edx	       789	state.c	FUNCTION_23	SWITCH_1
0x4001ae7	           0xf95c0	                                setne al	       789	state.c	FUNCTION_23	SWITCH_1
0x4001aea	           0xfb6c0	                           movzx eax, al	       789	state.c	FUNCTION_23	SWITCH_1
0x4001aed	          0x894770	             mov dword [rdi + 0x70], eax	       789	state.c	FUNCTION_23	SWITCH_1
0x4001af0	            0xeb61	                           jmp 0x4001b53	       790	state.c	FUNCTION_23	SWITCH_1
0x4001af2	          0x83fa01	                              cmp edx, 1	       793	state.c	FUNCTION_23	SWITCH_1
0x4001af5	            0x19c0	                            sbb eax, eax	       793	state.c	FUNCTION_23	SWITCH_1
0x4001af7	            0xf7d0	                                 not eax	       793	state.c	FUNCTION_23	SWITCH_1
0x4001af9	          0x83e002	                              and eax, 2	       793	state.c	FUNCTION_23	SWITCH_1
0x4001afc	          0x894770	             mov dword [rdi + 0x70], eax	       793	state.c	FUNCTION_23	SWITCH_1
0x4001aff	            0xeb52	                           jmp 0x4001b53	       794	state.c	FUNCTION_23	SWITCH_1
0x4001b01	          0x83fa01	                              cmp edx, 1	       797	state.c	FUNCTION_23	SWITCH_1
0x4001b04	            0x19c0	                            sbb eax, eax	       797	state.c	FUNCTION_23	SWITCH_1
0x4001b06	            0xf7d0	                                 not eax	       797	state.c	FUNCTION_23	SWITCH_1
0x4001b08	          0x83e003	                              and eax, 3	       797	state.c	FUNCTION_23	SWITCH_1
0x4001b0b	          0x894770	             mov dword [rdi + 0x70], eax	       797	state.c	FUNCTION_23	SWITCH_1
0x4001b0e	            0xeb43	                           jmp 0x4001b53	       798	state.c	FUNCTION_23	SWITCH_1
0x4001b10	      0xbe03000000	                              mov esi, 3	       801	state.c	FUNCTION_23	SWITCH_1	CALL_8
0x4001b15	      0xe8d6fbffff	               call sym.settermprop_bool	       801	state.c	FUNCTION_23	SWITCH_1	CALL_8
0x4001b1a	            0xeb37	                           jmp 0x4001b53	       802	state.c	FUNCTION_23	SWITCH_1
0x4001b1c	            0x89d6	                            mov esi, edx	       805	state.c	FUNCTION_23	SWITCH_1	CALL_9
0x4001b1e	      0xe83ffcffff	                     call sym.savecursor	       805	state.c	FUNCTION_23	SWITCH_1	CALL_9
0x4001b23	            0xeb2e	                           jmp 0x4001b53	       806	state.c	FUNCTION_23	SWITCH_1
0x4001b25	      0xbe03000000	                              mov esi, 3	       809	state.c	FUNCTION_23	SWITCH_1	CALL_10
0x4001b2a	      0xe8c1fbffff	               call sym.settermprop_bool	       809	state.c	FUNCTION_23	SWITCH_1	CALL_10
0x4001b2f	            0x89de	                            mov esi, ebx	       810	state.c	FUNCTION_23	SWITCH_1	CALL_11
0x4001b31	          0x4889ef	                            mov rdi, rbp	       810	state.c	FUNCTION_23	SWITCH_1	CALL_11
0x4001b34	      0xe829fcffff	                     call sym.savecursor	       810	state.c	FUNCTION_23	SWITCH_1	CALL_11
0x4001b39	            0xeb18	                           jmp 0x4001b53	       811	state.c	FUNCTION_23	SWITCH_1
0x4001b3b	          0x83e301	                              and ebx, 1	       814	state.c	FUNCTION_23	SWITCH_1
0x4001b3e	          0xc1e305	                              shl ebx, 5	       814	state.c	FUNCTION_23	SWITCH_1
0x4001b41	     0xfb687950000	           movzx eax, byte [rdi + 0x95] 	       814	state.c	FUNCTION_23	SWITCH_1
0x4001b48	          0x83e0df	                     and eax, 0xffffffdf	       814	state.c	FUNCTION_23	SWITCH_1
0x4001b4b	             0x9c3	                             or ebx, eax	       814	state.c	FUNCTION_23	SWITCH_1
0x4001b4d	    0x889f95000000	               mov byte [rdi + 0x95], bl	       814	state.c	FUNCTION_23	SWITCH_1
0x4001b53	      0x488b442408	                mov rax, qword [rsp + 8]	       821	state.c	FUNCTION_23
0x4001b58	    0x644833042528	                xor rax, qword fs:[0x28]	       821	state.c	FUNCTION_23
0x4001b61	            0x7405	                            je 0x4001b68	       821	state.c	FUNCTION_23
0x4001b63	      0xe800000000	                          call 0x4001b68	       821	state.c	FUNCTION_23
0x4001b68	        0x4883c418	                           add rsp, 0x18	       821	state.c	FUNCTION_23
0x4001b6c	              0x5b	                                 pop rbx	       821	state.c	FUNCTION_23
0x4001b6d	              0x5d	                                 pop rbp	       821	state.c	FUNCTION_23
0x4001b6e	              0xc3	                                     ret	       821	state.c	FUNCTION_23
on_csi	FOR,4:IF,36:functions,0:WHILE,0:CALL,180:SWITCH,10:DO,0:ELSE,5	1613
0x40020cc	            0x4157	                                push r15	       901	state.c	FUNCTION_25
0x40020ce	            0x4156	                                push r14	       901	state.c	FUNCTION_25
0x40020d0	            0x4155	                                push r13	       901	state.c	FUNCTION_25
0x40020d2	            0x4154	                                push r12	       901	state.c	FUNCTION_25
0x40020d4	              0x55	                                push rbp	       901	state.c	FUNCTION_25
0x40020d5	              0x53	                                push rbx	       901	state.c	FUNCTION_25
0x40020d6	        0x4883ec18	                           sub rsp, 0x18	       901	state.c	FUNCTION_25
0x40020da	          0x4c89cb	                             mov rbx, r9	       901	state.c	FUNCTION_25
0x40020dd	    0x64488b042528	                mov rax, qword fs:[0x28]	       901	state.c	FUNCTION_25
0x40020e6	      0x4889442408	                mov qword [rsp + 8], rax	       901	state.c	FUNCTION_25
0x40020eb	            0x31c0	                            xor eax, eax	       901	state.c	FUNCTION_25
0x40020ed	        0x498b4130	              mov rax, qword [r9 + 0x30]	       905	state.c	FUNCTION_25
0x40020f1	        0x48890424	                    mov qword [rsp], rax	       905	state.c	FUNCTION_25
0x40020f5	          0x4885ff	                           test rdi, rdi	       913	state.c	FUNCTION_25	IF_1
0x40020f8	            0x742c	                            je 0x4002126	       913	state.c	FUNCTION_25	IF_1
0x40020fa	        0x440fb60f	                   movzx r9d, byte [rdi]	       913	state.c	FUNCTION_25	IF_1
0x40020fe	          0x4584c9	                           test r9b, r9b	       913	state.c	FUNCTION_25	IF_1
0x4002101	            0x742b	                            je 0x400212e	       913	state.c	FUNCTION_25	IF_1
0x4002103	      0xb800000000	                              mov eax, 0	       915	state.c	FUNCTION_25	IF_1	IF_2
0x4002108	        0x807f0100	                   cmp byte [rdi + 1], 0	       914	state.c	FUNCTION_25	IF_1	IF_2
0x400210c	     0xf8528170000	                           jne 0x400383a	       914	state.c	FUNCTION_25	IF_1	IF_2
0x4002112	        0x458d51c2	                   lea r10d, [r9 - 0x3e]	       917	state.c	FUNCTION_25	IF_1	SWITCH_1
0x4002116	        0x4180fa01	                             cmp r10b, 1	       917	state.c	FUNCTION_25	IF_1	SWITCH_1
0x400211a	     0xf871a170000	                            ja 0x400383a	       917	state.c	FUNCTION_25	IF_1	SWITCH_1
0x4002120	        0x450fbed1	                         movsx r10d, r9b	       920	state.c	FUNCTION_25	IF_1	SWITCH_1
0x4002124	            0xeb0e	                           jmp 0x4002134	       921	state.c	FUNCTION_25	IF_1	SWITCH_1
0x4002126	    0x41ba00000000	                             mov r10d, 0	       903	state.c	FUNCTION_25
0x400212c	            0xeb06	                           jmp 0x4002134	       903	state.c	FUNCTION_25
0x400212e	    0x41ba00000000	                             mov r10d, 0	       903	state.c	FUNCTION_25
0x4002134	          0x4885c9	                           test rcx, rcx	       927	state.c	FUNCTION_25	IF_3
0x4002137	            0x7446	                            je 0x400217f	       927	state.c	FUNCTION_25	IF_3
0x4002139	        0x440fb609	                   movzx r9d, byte [rcx]	       927	state.c	FUNCTION_25	IF_3
0x400213d	          0x4584c9	                           test r9b, r9b	       927	state.c	FUNCTION_25	IF_3
0x4002140	            0x7445	                            je 0x4002187	       927	state.c	FUNCTION_25	IF_3
0x4002142	      0xb800000000	                              mov eax, 0	       929	state.c	FUNCTION_25	IF_3	IF_4
0x4002147	        0x80790100	                   cmp byte [rcx + 1], 0	       928	state.c	FUNCTION_25	IF_3	IF_4
0x400214b	     0xf85e9160000	                           jne 0x400383a	       928	state.c	FUNCTION_25	IF_3	IF_4
0x4002151	        0x4180f922	                           cmp r9b, 0x22	       931	state.c	FUNCTION_25	IF_3	SWITCH_2
0x4002155	            0x7422	                            je 0x4002179	       931	state.c	FUNCTION_25	IF_3	SWITCH_2
0x4002157	        0x4180f922	                           cmp r9b, 0x22	       931	state.c	FUNCTION_25	IF_3	SWITCH_2
0x400215b	            0x7f0c	                            jg 0x4002169	       931	state.c	FUNCTION_25	IF_3	SWITCH_2
0x400215d	        0x4180f920	                           cmp r9b, 0x20	       931	state.c	FUNCTION_25	IF_3	SWITCH_2
0x4002161	     0xf85c0160000	                           jne 0x4003827	       931	state.c	FUNCTION_25	IF_3	SWITCH_2
0x4002167	            0xeb10	                           jmp 0x4002179	       931	state.c	FUNCTION_25	IF_3	SWITCH_2
0x4002169	        0x4180f924	                           cmp r9b, 0x24	       931	state.c	FUNCTION_25	IF_3	SWITCH_2
0x400216d	            0x740a	                            je 0x4002179	       931	state.c	FUNCTION_25	IF_3	SWITCH_2
0x400216f	        0x4180f927	                           cmp r9b, 0x27	       931	state.c	FUNCTION_25	IF_3	SWITCH_2
0x4002173	     0xf85ae160000	                           jne 0x4003827	       931	state.c	FUNCTION_25	IF_3	SWITCH_2
0x4002179	        0x450fbec9	                          movsx r9d, r9b	       936	state.c	FUNCTION_25	IF_3	SWITCH_2
0x400217d	            0xeb0e	                           jmp 0x400218d	       937	state.c	FUNCTION_25	IF_3	SWITCH_2
0x400217f	    0x41b900000000	                              mov r9d, 0	       904	state.c	FUNCTION_25
0x4002185	            0xeb06	                           jmp 0x400218d	       904	state.c	FUNCTION_25
0x4002187	    0x41b900000000	                              mov r9d, 0	       904	state.c	FUNCTION_25
0x400218d	        0x488b4330	            mov rax, qword [rbx + 0x30] 	       943	state.c	FUNCTION_25
0x4002191	        0x48890424	                    mov qword [rsp], rax	       943	state.c	FUNCTION_25
0x4002195	        0x450fbec0	                          movsx r8d, r8b	       951	state.c	FUNCTION_25	SWITCH_3
0x4002199	          0x4489d0	                           mov eax, r10d	       951	state.c	FUNCTION_25	SWITCH_3
0x400219c	          0xc1e008	                              shl eax, 8	       951	state.c	FUNCTION_25	SWITCH_3
0x400219f	          0x4409c0	                             or eax, r8d	       951	state.c	FUNCTION_25	SWITCH_3
0x40021a2	        0x41c1e110	                           shl r9d, 0x10	       951	state.c	FUNCTION_25	SWITCH_3
0x40021a6	          0x4409c8	                             or eax, r9d	       951	state.c	FUNCTION_25	SWITCH_3
0x40021a9	          0x83f865	                           cmp eax, 0x65	       951	state.c	FUNCTION_25	SWITCH_3
0x40021ac	     0xf84d70b0000	                            je 0x4002d89	       951	state.c	FUNCTION_25	SWITCH_3
0x40021b2	          0x83f865	                           cmp eax, 0x65	       951	state.c	FUNCTION_25	SWITCH_3
0x40021b5	     0xf8f1e010000	                            jg 0x40022d9	       951	state.c	FUNCTION_25	SWITCH_3
0x40021bb	          0x83f84b	                           cmp eax, 0x4b	       951	state.c	FUNCTION_25	SWITCH_3
0x40021be	     0xf84ad060000	                            je 0x4002871	       951	state.c	FUNCTION_25	SWITCH_3
0x40021c4	          0x83f84b	                           cmp eax, 0x4b	       951	state.c	FUNCTION_25	SWITCH_3
0x40021c7	     0xf8f86000000	                            jg 0x4002253	       951	state.c	FUNCTION_25	SWITCH_3
0x40021cd	          0x83f845	                           cmp eax, 0x45	       951	state.c	FUNCTION_25	SWITCH_3
0x40021d0	     0xf84ae030000	                            je 0x4002584	       951	state.c	FUNCTION_25	SWITCH_3
0x40021d6	          0x83f845	                           cmp eax, 0x45	       951	state.c	FUNCTION_25	SWITCH_3
0x40021d9	            0x7f3c	                            jg 0x4002217	       951	state.c	FUNCTION_25	SWITCH_3
0x40021db	          0x83f842	                           cmp eax, 0x42	       951	state.c	FUNCTION_25	SWITCH_3
0x40021de	     0xf8407030000	                            je 0x40024eb	       951	state.c	FUNCTION_25	SWITCH_3
0x40021e4	          0x83f842	                           cmp eax, 0x42	       951	state.c	FUNCTION_25	SWITCH_3
0x40021e7	            0x7f17	                            jg 0x4002200	       951	state.c	FUNCTION_25	SWITCH_3
0x40021e9	          0x83f840	                           cmp eax, 0x40	       951	state.c	FUNCTION_25	SWITCH_3
0x40021ec	     0xf8425020000	                            je 0x4002417	       951	state.c	FUNCTION_25	SWITCH_3
0x40021f2	          0x83f841	                           cmp eax, 0x41	       951	state.c	FUNCTION_25	SWITCH_3
0x40021f5	     0xf84bd020000	                            je 0x40024b8	       951	state.c	FUNCTION_25	SWITCH_3
0x40021fb	      0xe9f1140000	                           jmp 0x40036f1	       951	state.c	FUNCTION_25	SWITCH_3
0x4002200	          0x83f843	                           cmp eax, 0x43	       951	state.c	FUNCTION_25	SWITCH_3
0x4002203	     0xf8415030000	                            je 0x400251e	       951	state.c	FUNCTION_25	SWITCH_3
0x4002209	          0x83f844	                           cmp eax, 0x44	       951	state.c	FUNCTION_25	SWITCH_3
0x400220c	     0xf843f030000	                            je 0x4002551	       951	state.c	FUNCTION_25	SWITCH_3
0x4002212	      0xe9da140000	                           jmp 0x40036f1	       951	state.c	FUNCTION_25	SWITCH_3
0x4002217	          0x83f848	                           cmp eax, 0x48	       951	state.c	FUNCTION_25	SWITCH_3
0x400221a	     0xf840a040000	                            je 0x400262a	       951	state.c	FUNCTION_25	SWITCH_3
0x4002220	          0x83f848	                           cmp eax, 0x48	       951	state.c	FUNCTION_25	SWITCH_3
0x4002223	            0x7f17	                            jg 0x400223c	       951	state.c	FUNCTION_25	SWITCH_3
0x4002225	          0x83f846	                           cmp eax, 0x46	       951	state.c	FUNCTION_25	SWITCH_3
0x4002228	     0xf8490030000	                            je 0x40025be	       951	state.c	FUNCTION_25	SWITCH_3
0x400222e	          0x83f847	                           cmp eax, 0x47	       951	state.c	FUNCTION_25	SWITCH_3
0x4002231	     0xf84c1030000	                            je 0x40025f8	       951	state.c	FUNCTION_25	SWITCH_3
0x4002237	      0xe9b5140000	                           jmp 0x40036f1	       951	state.c	FUNCTION_25	SWITCH_3
0x400223c	          0x83f849	                           cmp eax, 0x49	       951	state.c	FUNCTION_25	SWITCH_3
0x400223f	     0xf8468040000	                            je 0x40026ad	       951	state.c	FUNCTION_25	SWITCH_3
0x4002245	          0x83f84a	                           cmp eax, 0x4a	       951	state.c	FUNCTION_25	SWITCH_3
0x4002248	     0xf8494040000	                            je 0x40026e2	       951	state.c	FUNCTION_25	SWITCH_3
0x400224e	      0xe99e140000	                           jmp 0x40036f1	       951	state.c	FUNCTION_25	SWITCH_3
0x4002253	          0x83f858	                           cmp eax, 0x58	       951	state.c	FUNCTION_25	SWITCH_3
0x4002256	     0xf8468090000	                            je 0x4002bc4	       951	state.c	FUNCTION_25	SWITCH_3
0x400225c	          0x83f858	                           cmp eax, 0x58	       951	state.c	FUNCTION_25	SWITCH_3
0x400225f	            0x7f3c	                            jg 0x400229d	       951	state.c	FUNCTION_25	SWITCH_3
0x4002261	          0x83f850	                           cmp eax, 0x50	       951	state.c	FUNCTION_25	SWITCH_3
0x4002264	     0xf84d3070000	                            je 0x4002a3d	       951	state.c	FUNCTION_25	SWITCH_3
0x400226a	          0x83f850	                           cmp eax, 0x50	       951	state.c	FUNCTION_25	SWITCH_3
0x400226d	            0x7f17	                            jg 0x4002286	       951	state.c	FUNCTION_25	SWITCH_3
0x400226f	          0x83f84c	                           cmp eax, 0x4c	       951	state.c	FUNCTION_25	SWITCH_3
0x4002272	     0xf84bb060000	                            je 0x4002933	       951	state.c	FUNCTION_25	SWITCH_3
0x4002278	          0x83f84d	                           cmp eax, 0x4d	       951	state.c	FUNCTION_25	SWITCH_3
0x400227b	     0xf8438070000	                            je 0x40029b9	       951	state.c	FUNCTION_25	SWITCH_3
0x4002281	      0xe96b140000	                           jmp 0x40036f1	       951	state.c	FUNCTION_25	SWITCH_3
0x4002286	          0x83f853	                           cmp eax, 0x53	       951	state.c	FUNCTION_25	SWITCH_3
0x4002289	     0xf844c080000	                            je 0x4002adb	       951	state.c	FUNCTION_25	SWITCH_3
0x400228f	          0x83f854	                           cmp eax, 0x54	       951	state.c	FUNCTION_25	SWITCH_3
0x4002292	     0xf84b5080000	                            je 0x4002b4d	       951	state.c	FUNCTION_25	SWITCH_3
0x4002298	      0xe954140000	                           jmp 0x40036f1	       951	state.c	FUNCTION_25	SWITCH_3
0x400229d	          0x83f861	                           cmp eax, 0x61	       951	state.c	FUNCTION_25	SWITCH_3
0x40022a0	     0xf84060a0000	                            je 0x4002cac	       951	state.c	FUNCTION_25	SWITCH_3
0x40022a6	          0x83f861	                           cmp eax, 0x61	       951	state.c	FUNCTION_25	SWITCH_3
0x40022a9	            0x7f17	                            jg 0x40022c2	       951	state.c	FUNCTION_25	SWITCH_3
0x40022ab	          0x83f85a	                           cmp eax, 0x5a	       951	state.c	FUNCTION_25	SWITCH_3
0x40022ae	     0xf8491090000	                            je 0x4002c45	       951	state.c	FUNCTION_25	SWITCH_3
0x40022b4	          0x83f860	                           cmp eax, 0x60	       951	state.c	FUNCTION_25	SWITCH_3
0x40022b7	     0xf84bd090000	                            je 0x4002c7a	       951	state.c	FUNCTION_25	SWITCH_3
0x40022bd	      0xe92f140000	                           jmp 0x40036f1	       951	state.c	FUNCTION_25	SWITCH_3
0x40022c2	          0x83f863	                           cmp eax, 0x63	       951	state.c	FUNCTION_25	SWITCH_3
0x40022c5	     0xf84140a0000	                            je 0x4002cdf	       951	state.c	FUNCTION_25	SWITCH_3
0x40022cb	          0x83f864	                           cmp eax, 0x64	       951	state.c	FUNCTION_25	SWITCH_3
0x40022ce	     0xf84740a0000	                            je 0x4002d48	       951	state.c	FUNCTION_25	SWITCH_3
0x40022d4	      0xe918140000	                           jmp 0x40036f1	       951	state.c	FUNCTION_25	SWITCH_3
0x40022d9	      0x3d70210000	                         cmp eax, 0x2170	       951	state.c	FUNCTION_25	SWITCH_3
0x40022de	     0xf84a60d0000	                            je 0x400308a	       951	state.c	FUNCTION_25	SWITCH_3
0x40022e4	      0x3d70210000	                         cmp eax, 0x2170	       951	state.c	FUNCTION_25	SWITCH_3
0x40022e9	     0xf8f86000000	                            jg 0x4002375	       951	state.c	FUNCTION_25	SWITCH_3
0x40022ef	          0x83f86c	                           cmp eax, 0x6c	       951	state.c	FUNCTION_25	SWITCH_3
0x40022f2	     0xf848c0c0000	                            je 0x4002f84	       951	state.c	FUNCTION_25	SWITCH_3
0x40022f8	          0x83f86c	                           cmp eax, 0x6c	       951	state.c	FUNCTION_25	SWITCH_3
0x40022fb	            0x7f3c	                            jg 0x4002339	       951	state.c	FUNCTION_25	SWITCH_3
0x40022fd	          0x83f868	                           cmp eax, 0x68	       951	state.c	FUNCTION_25	SWITCH_3
0x4002300	     0xf84a40b0000	                            je 0x4002eaa	       951	state.c	FUNCTION_25	SWITCH_3
0x4002306	          0x83f868	                           cmp eax, 0x68	       951	state.c	FUNCTION_25	SWITCH_3
0x4002309	            0x7f17	                            jg 0x4002322	       951	state.c	FUNCTION_25	SWITCH_3
0x400230b	          0x83f866	                           cmp eax, 0x66	       951	state.c	FUNCTION_25	SWITCH_3
0x400230e	     0xf84a80a0000	                            je 0x4002dbc	       951	state.c	FUNCTION_25	SWITCH_3
0x4002314	          0x83f867	                           cmp eax, 0x67	       951	state.c	FUNCTION_25	SWITCH_3
0x4002317	     0xf84220b0000	                            je 0x4002e3f	       951	state.c	FUNCTION_25	SWITCH_3
0x400231d	      0xe9cf130000	                           jmp 0x40036f1	       951	state.c	FUNCTION_25	SWITCH_3
0x4002322	          0x83f86a	                           cmp eax, 0x6a	       951	state.c	FUNCTION_25	SWITCH_3
0x4002325	     0xf84f30b0000	                            je 0x4002f1e	       951	state.c	FUNCTION_25	SWITCH_3
0x400232b	          0x83f86b	                           cmp eax, 0x6b	       951	state.c	FUNCTION_25	SWITCH_3
0x400232e	     0xf841d0c0000	                            je 0x4002f51	       951	state.c	FUNCTION_25	SWITCH_3
0x4002334	      0xe9b8130000	                           jmp 0x40036f1	       951	state.c	FUNCTION_25	SWITCH_3
0x4002339	          0x83f872	                           cmp eax, 0x72	       951	state.c	FUNCTION_25	SWITCH_3
0x400233c	     0xf8413110000	                            je 0x4003455	       951	state.c	FUNCTION_25	SWITCH_3
0x4002342	          0x83f872	                           cmp eax, 0x72	       951	state.c	FUNCTION_25	SWITCH_3
0x4002345	            0x7f17	                            jg 0x400235e	       951	state.c	FUNCTION_25	SWITCH_3
0x4002347	          0x83f86d	                           cmp eax, 0x6d	       951	state.c	FUNCTION_25	SWITCH_3
0x400234a	     0xf84a80c0000	                            je 0x4002ff8	       951	state.c	FUNCTION_25	SWITCH_3
0x4002350	          0x83f86e	                           cmp eax, 0x6e	       951	state.c	FUNCTION_25	SWITCH_3
0x4002353	     0xf84ac0c0000	                            je 0x4003005	       951	state.c	FUNCTION_25	SWITCH_3
0x4002359	      0xe993130000	                           jmp 0x40036f1	       951	state.c	FUNCTION_25	SWITCH_3
0x400235e	          0x83f873	                           cmp eax, 0x73	       951	state.c	FUNCTION_25	SWITCH_3
0x4002361	     0xf84a1110000	                            je 0x4003508	       951	state.c	FUNCTION_25	SWITCH_3
0x4002367	          0x83f874	                           cmp eax, 0x74	       951	state.c	FUNCTION_25	SWITCH_3
0x400236a	     0xf844f120000	                            je 0x40035bf	       951	state.c	FUNCTION_25	SWITCH_3
0x4002370	      0xe97c130000	                           jmp 0x40036f1	       951	state.c	FUNCTION_25	SWITCH_3
0x4002375	      0x3d6e3f0000	                         cmp eax, 0x3f6e	       951	state.c	FUNCTION_25	SWITCH_3
0x400237a	     0xf84850c0000	                            je 0x4003005	       951	state.c	FUNCTION_25	SWITCH_3
0x4002380	      0x3d6e3f0000	                         cmp eax, 0x3f6e	       951	state.c	FUNCTION_25	SWITCH_3
0x4002385	            0x7f48	                            jg 0x40023cf	       951	state.c	FUNCTION_25	SWITCH_3
0x4002387	      0x3d4b3f0000	                         cmp eax, 0x3f4b	       951	state.c	FUNCTION_25	SWITCH_3
0x400238c	     0xf84df040000	                            je 0x4002871	       951	state.c	FUNCTION_25	SWITCH_3
0x4002392	      0x3d4b3f0000	                         cmp eax, 0x3f4b	       951	state.c	FUNCTION_25	SWITCH_3
0x4002397	            0x7f1b	                            jg 0x40023b4	       951	state.c	FUNCTION_25	SWITCH_3
0x4002399	      0x3d633e0000	                         cmp eax, 0x3e63	       951	state.c	FUNCTION_25	SWITCH_3
0x400239e	     0xf8477090000	                            je 0x4002d1b	       951	state.c	FUNCTION_25	SWITCH_3
0x40023a4	      0x3d4a3f0000	                         cmp eax, 0x3f4a	       951	state.c	FUNCTION_25	SWITCH_3
0x40023a9	     0xf8433030000	                            je 0x40026e2	       951	state.c	FUNCTION_25	SWITCH_3
0x40023af	      0xe93d130000	                           jmp 0x40036f1	       951	state.c	FUNCTION_25	SWITCH_3
0x40023b4	      0x3d683f0000	                         cmp eax, 0x3f68	       951	state.c	FUNCTION_25	SWITCH_3
0x40023b9	     0xf84300b0000	                            je 0x4002eef	       951	state.c	FUNCTION_25	SWITCH_3
0x40023bf	      0x3d6c3f0000	                         cmp eax, 0x3f6c	       951	state.c	FUNCTION_25	SWITCH_3
0x40023c4	     0xf84ff0b0000	                            je 0x4002fc9	       951	state.c	FUNCTION_25	SWITCH_3
0x40023ca	      0xe922130000	                           jmp 0x40036f1	       951	state.c	FUNCTION_25	SWITCH_3
0x40023cf	      0x3d703f2400	                       cmp eax, 0x243f70	       951	state.c	FUNCTION_25	SWITCH_3
0x40023d4	     0xf84c20c0000	                            je 0x400309c	       951	state.c	FUNCTION_25	SWITCH_3
0x40023da	      0x3d703f2400	                       cmp eax, 0x243f70	       951	state.c	FUNCTION_25	SWITCH_3
0x40023df	            0x7f1b	                            jg 0x40023fc	       951	state.c	FUNCTION_25	SWITCH_3
0x40023e1	      0x3d71002000	                       cmp eax, 0x200071	       951	state.c	FUNCTION_25	SWITCH_3
0x40023e6	     0xf84030f0000	                            je 0x40032ef	       951	state.c	FUNCTION_25	SWITCH_3
0x40023ec	      0x3d71002200	                       cmp eax, 0x220071	       951	state.c	FUNCTION_25	SWITCH_3
0x40023f1	     0xf841a100000	                            je 0x4003411	       951	state.c	FUNCTION_25	SWITCH_3
0x40023f7	      0xe9f5120000	                           jmp 0x40036f1	       951	state.c	FUNCTION_25	SWITCH_3
0x40023fc	      0x3d7d002700	                       cmp eax, 0x27007d	       951	state.c	FUNCTION_25	SWITCH_3
0x4002401	     0xf84f4110000	                            je 0x40035fb	       951	state.c	FUNCTION_25	SWITCH_3
0x4002407	      0x3d7e002700	                       cmp eax, 0x27007e	       951	state.c	FUNCTION_25	SWITCH_3
0x400240c	     0xf8469120000	                            je 0x400367b	       951	state.c	FUNCTION_25	SWITCH_3
0x4002412	      0xe9da120000	                           jmp 0x40036f1	       951	state.c	FUNCTION_25	SWITCH_3
0x4002417	          0x488b2e	                    mov rbp, qword [rsi]	       953	state.c	FUNCTION_25	SWITCH_3	CALL_1
0x400241a	          0x4889e8	                            mov rax, rbp	       953	state.c	FUNCTION_25	SWITCH_3	CALL_1
0x400241d	      0x25ffffff7f	                     and eax, 0x7fffffff	       953	state.c	FUNCTION_25	SWITCH_3	CALL_1
0x4002422	    0x483dffffff3f	                     cmp rax, 0x3fffffff	       953	state.c	FUNCTION_25	SWITCH_3	CALL_1
0x4002428	            0x740b	                            je 0x4002435	       953	state.c	FUNCTION_25	SWITCH_3	CALL_1
0x400242a	    0x81e5ffffff7f	                     and ebp, 0x7fffffff	       953	state.c	FUNCTION_25	SWITCH_3	CALL_1
0x4002430	          0x4885c0	                           test rax, rax	       953	state.c	FUNCTION_25	SWITCH_3	CALL_1
0x4002433	            0x7505	                           jne 0x400243a	       953	state.c	FUNCTION_25	SWITCH_3	CALL_1
0x4002435	      0xbd01000000	                              mov ebp, 1	       953	state.c	FUNCTION_25	SWITCH_3	CALL_1
0x400243a	          0x4889df	                            mov rdi, rbx	       955	state.c	FUNCTION_25	SWITCH_3	IF_5	CALL_2
0x400243d	      0xe833ddffff	      call sym.is_cursor_in_scrollregion	       955	state.c	FUNCTION_25	SWITCH_3	IF_5	CALL_2
0x4002442	            0x85c0	                           test eax, eax	       955	state.c	FUNCTION_25	SWITCH_3	IF_5	CALL_2
0x4002444	     0xf84da120000	                            je 0x4003724	       955	state.c	FUNCTION_25	SWITCH_3	IF_5	CALL_2
0x400244a	          0x8b4b30	            mov ecx, dword [rbx + 0x30] 	       958	state.c	FUNCTION_25	SWITCH_3
0x400244d	          0x8d7101	                      lea esi, [rcx + 1]	       959	state.c	FUNCTION_25	SWITCH_3
0x4002450	          0x8b7b34	            mov edi, dword [rbx + 0x34] 	       960	state.c	FUNCTION_25	SWITCH_3
0x4002453	    0xf68395000000	           test byte [rbx + 0x95], 0x10 	       961	state.c	FUNCTION_25	SWITCH_3	IF_6
0x400245a	            0x740c	                            je 0x4002468	       961	state.c	FUNCTION_25	SWITCH_3	IF_6
0x400245c	          0x8b5348	            mov edx, dword [rbx + 0x48] 	       962	state.c	FUNCTION_25	SWITCH_3	CALL_3
0x400245f	            0x85d2	                           test edx, edx	       962	state.c	FUNCTION_25	SWITCH_3	CALL_3
0x4002461	            0x7925	                           jns 0x4002488	       962	state.c	FUNCTION_25	SWITCH_3	CALL_3
0x4002463	          0x8b532c	            mov edx, dword [rbx + 0x2c] 	       962	state.c	FUNCTION_25	SWITCH_3	CALL_3
0x4002466	            0xeb20	                           jmp 0x4002488	       962	state.c	FUNCTION_25	SWITCH_3	CALL_3
0x4002468	          0x4863c1	                         movsxd rax, ecx	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x400246b	        0x488b5358	            mov rdx, qword [rbx + 0x58] 	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x400246f	        0xf6048201	              test byte [rdx + rax*4], 1	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x4002473	            0x7410	                            je 0x4002485	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x4002475	          0x8b432c	            mov eax, dword [rbx + 0x2c] 	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x4002478	            0x89c2	                            mov edx, eax	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x400247a	          0xc1ea1f	                           shr edx, 0x1f	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x400247d	             0x1d0	                            add eax, edx	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x400247f	            0xd1f8	                              sar eax, 1	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x4002481	            0x89c2	                            mov edx, eax	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x4002483	            0xeb03	                           jmp 0x4002488	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x4002485	          0x8b532c	            mov edx, dword [rbx + 0x2c] 	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x4002488	          0x4889f0	                            mov rax, rsi	       966	state.c	FUNCTION_25	SWITCH_3	CALL_5
0x400248b	        0x48c1e020	                           shl rax, 0x20	       966	state.c	FUNCTION_25	SWITCH_3	CALL_5
0x400248f	            0x89ce	                            mov esi, ecx	       966	state.c	FUNCTION_25	SWITCH_3	CALL_5
0x4002491	          0x4809c6	                             or rsi, rax	       966	state.c	FUNCTION_25	SWITCH_3	CALL_5
0x4002494	          0x4889d0	                            mov rax, rdx	       966	state.c	FUNCTION_25	SWITCH_3	CALL_5
0x4002497	        0x48c1e020	                           shl rax, 0x20	       966	state.c	FUNCTION_25	SWITCH_3	CALL_5
0x400249b	            0x89fa	                            mov edx, edi	       966	state.c	FUNCTION_25	SWITCH_3	CALL_5
0x400249d	          0x4809c2	                             or rdx, rax	       966	state.c	FUNCTION_25	SWITCH_3	CALL_5
0x40024a0	          0x4189e8	                            mov r8d, ebp	       966	state.c	FUNCTION_25	SWITCH_3	CALL_5
0x40024a3	          0x41f7d8	                                 neg r8d	       966	state.c	FUNCTION_25	SWITCH_3	CALL_5
0x40024a6	      0xb900000000	                              mov ecx, 0	       966	state.c	FUNCTION_25	SWITCH_3	CALL_5
0x40024ab	          0x4889df	                            mov rdi, rbx	       966	state.c	FUNCTION_25	SWITCH_3	CALL_5
0x40024ae	      0xe85ee3ffff	                         call sym.scroll	       966	state.c	FUNCTION_25	SWITCH_3	CALL_5
0x40024b3	      0xe96c120000	                           jmp 0x4003724	       968	state.c	FUNCTION_25	SWITCH_3
0x40024b8	          0x488b06	                    mov rax, qword [rsi]	       971	state.c	FUNCTION_25	SWITCH_3	CALL_6
0x40024bb	          0x4889c2	                            mov rdx, rax	       971	state.c	FUNCTION_25	SWITCH_3	CALL_6
0x40024be	    0x81e2ffffff7f	                     and edx, 0x7fffffff	       971	state.c	FUNCTION_25	SWITCH_3	CALL_6
0x40024c4	    0x4881faffffff	                     cmp rdx, 0x3fffffff	       971	state.c	FUNCTION_25	SWITCH_3	CALL_6
0x40024cb	            0x740a	                            je 0x40024d7	       971	state.c	FUNCTION_25	SWITCH_3	CALL_6
0x40024cd	      0x25ffffff7f	                     and eax, 0x7fffffff	       971	state.c	FUNCTION_25	SWITCH_3	CALL_6
0x40024d2	          0x4885d2	                           test rdx, rdx	       971	state.c	FUNCTION_25	SWITCH_3	CALL_6
0x40024d5	            0x7505	                           jne 0x40024dc	       971	state.c	FUNCTION_25	SWITCH_3	CALL_6
0x40024d7	      0xb801000000	                              mov eax, 1	       971	state.c	FUNCTION_25	SWITCH_3	CALL_6
0x40024dc	          0x294330	             sub dword [rbx + 0x30], eax	       972	state.c	FUNCTION_25	SWITCH_3
0x40024df	    0xc74338000000	               mov dword [rbx + 0x38], 0	       973	state.c	FUNCTION_25	SWITCH_3
0x40024e6	      0xe939120000	                           jmp 0x4003724	       974	state.c	FUNCTION_25	SWITCH_3
0x40024eb	          0x488b06	                    mov rax, qword [rsi]	       977	state.c	FUNCTION_25	SWITCH_3	CALL_7
0x40024ee	          0x4889c2	                            mov rdx, rax	       977	state.c	FUNCTION_25	SWITCH_3	CALL_7
0x40024f1	    0x81e2ffffff7f	                     and edx, 0x7fffffff	       977	state.c	FUNCTION_25	SWITCH_3	CALL_7
0x40024f7	    0x4881faffffff	                     cmp rdx, 0x3fffffff	       977	state.c	FUNCTION_25	SWITCH_3	CALL_7
0x40024fe	            0x740a	                            je 0x400250a	       977	state.c	FUNCTION_25	SWITCH_3	CALL_7
0x4002500	      0x25ffffff7f	                     and eax, 0x7fffffff	       977	state.c	FUNCTION_25	SWITCH_3	CALL_7
0x4002505	          0x4885d2	                           test rdx, rdx	       977	state.c	FUNCTION_25	SWITCH_3	CALL_7
0x4002508	            0x7505	                           jne 0x400250f	       977	state.c	FUNCTION_25	SWITCH_3	CALL_7
0x400250a	      0xb801000000	                              mov eax, 1	       977	state.c	FUNCTION_25	SWITCH_3	CALL_7
0x400250f	           0x14330	             add dword [rbx + 0x30], eax	       978	state.c	FUNCTION_25	SWITCH_3
0x4002512	    0xc74338000000	               mov dword [rbx + 0x38], 0	       979	state.c	FUNCTION_25	SWITCH_3
0x4002519	      0xe906120000	                           jmp 0x4003724	       980	state.c	FUNCTION_25	SWITCH_3
0x400251e	          0x488b06	                    mov rax, qword [rsi]	       983	state.c	FUNCTION_25	SWITCH_3	CALL_8
0x4002521	          0x4889c2	                            mov rdx, rax	       983	state.c	FUNCTION_25	SWITCH_3	CALL_8
0x4002524	    0x81e2ffffff7f	                     and edx, 0x7fffffff	       983	state.c	FUNCTION_25	SWITCH_3	CALL_8
0x400252a	    0x4881faffffff	                     cmp rdx, 0x3fffffff	       983	state.c	FUNCTION_25	SWITCH_3	CALL_8
0x4002531	            0x740a	                            je 0x400253d	       983	state.c	FUNCTION_25	SWITCH_3	CALL_8
0x4002533	      0x25ffffff7f	                     and eax, 0x7fffffff	       983	state.c	FUNCTION_25	SWITCH_3	CALL_8
0x4002538	          0x4885d2	                           test rdx, rdx	       983	state.c	FUNCTION_25	SWITCH_3	CALL_8
0x400253b	            0x7505	                           jne 0x4002542	       983	state.c	FUNCTION_25	SWITCH_3	CALL_8
0x400253d	      0xb801000000	                              mov eax, 1	       983	state.c	FUNCTION_25	SWITCH_3	CALL_8
0x4002542	           0x14334	             add dword [rbx + 0x34], eax	       984	state.c	FUNCTION_25	SWITCH_3
0x4002545	    0xc74338000000	               mov dword [rbx + 0x38], 0	       985	state.c	FUNCTION_25	SWITCH_3
0x400254c	      0xe9d3110000	                           jmp 0x4003724	       986	state.c	FUNCTION_25	SWITCH_3
0x4002551	          0x488b06	                    mov rax, qword [rsi]	       989	state.c	FUNCTION_25	SWITCH_3	CALL_9
0x4002554	          0x4889c2	                            mov rdx, rax	       989	state.c	FUNCTION_25	SWITCH_3	CALL_9
0x4002557	    0x81e2ffffff7f	                     and edx, 0x7fffffff	       989	state.c	FUNCTION_25	SWITCH_3	CALL_9
0x400255d	    0x4881faffffff	                     cmp rdx, 0x3fffffff	       989	state.c	FUNCTION_25	SWITCH_3	CALL_9
0x4002564	            0x740a	                            je 0x4002570	       989	state.c	FUNCTION_25	SWITCH_3	CALL_9
0x4002566	      0x25ffffff7f	                     and eax, 0x7fffffff	       989	state.c	FUNCTION_25	SWITCH_3	CALL_9
0x400256b	          0x4885d2	                           test rdx, rdx	       989	state.c	FUNCTION_25	SWITCH_3	CALL_9
0x400256e	            0x7505	                           jne 0x4002575	       989	state.c	FUNCTION_25	SWITCH_3	CALL_9
0x4002570	      0xb801000000	                              mov eax, 1	       989	state.c	FUNCTION_25	SWITCH_3	CALL_9
0x4002575	          0x294334	             sub dword [rbx + 0x34], eax	       990	state.c	FUNCTION_25	SWITCH_3
0x4002578	    0xc74338000000	               mov dword [rbx + 0x38], 0	       991	state.c	FUNCTION_25	SWITCH_3
0x400257f	      0xe9a0110000	                           jmp 0x4003724	       992	state.c	FUNCTION_25	SWITCH_3
0x4002584	          0x488b06	                    mov rax, qword [rsi]	       995	state.c	FUNCTION_25	SWITCH_3	CALL_10
0x4002587	          0x4889c2	                            mov rdx, rax	       995	state.c	FUNCTION_25	SWITCH_3	CALL_10
0x400258a	    0x81e2ffffff7f	                     and edx, 0x7fffffff	       995	state.c	FUNCTION_25	SWITCH_3	CALL_10
0x4002590	    0x4881faffffff	                     cmp rdx, 0x3fffffff	       995	state.c	FUNCTION_25	SWITCH_3	CALL_10
0x4002597	            0x740a	                            je 0x40025a3	       995	state.c	FUNCTION_25	SWITCH_3	CALL_10
0x4002599	      0x25ffffff7f	                     and eax, 0x7fffffff	       995	state.c	FUNCTION_25	SWITCH_3	CALL_10
0x400259e	          0x4885d2	                           test rdx, rdx	       995	state.c	FUNCTION_25	SWITCH_3	CALL_10
0x40025a1	            0x7505	                           jne 0x40025a8	       995	state.c	FUNCTION_25	SWITCH_3	CALL_10
0x40025a3	      0xb801000000	                              mov eax, 1	       995	state.c	FUNCTION_25	SWITCH_3	CALL_10
0x40025a8	    0xc74334000000	               mov dword [rbx + 0x34], 0	       996	state.c	FUNCTION_25	SWITCH_3
0x40025af	           0x14330	             add dword [rbx + 0x30], eax	       997	state.c	FUNCTION_25	SWITCH_3
0x40025b2	    0xc74338000000	               mov dword [rbx + 0x38], 0	       998	state.c	FUNCTION_25	SWITCH_3
0x40025b9	      0xe966110000	                           jmp 0x4003724	       999	state.c	FUNCTION_25	SWITCH_3
0x40025be	          0x488b06	                    mov rax, qword [rsi]	      1002	state.c	FUNCTION_25	SWITCH_3	CALL_11
0x40025c1	          0x4889c2	                            mov rdx, rax	      1002	state.c	FUNCTION_25	SWITCH_3	CALL_11
0x40025c4	    0x81e2ffffff7f	                     and edx, 0x7fffffff	      1002	state.c	FUNCTION_25	SWITCH_3	CALL_11
0x40025ca	    0x4881faffffff	                     cmp rdx, 0x3fffffff	      1002	state.c	FUNCTION_25	SWITCH_3	CALL_11
0x40025d1	            0x740a	                            je 0x40025dd	      1002	state.c	FUNCTION_25	SWITCH_3	CALL_11
0x40025d3	      0x25ffffff7f	                     and eax, 0x7fffffff	      1002	state.c	FUNCTION_25	SWITCH_3	CALL_11
0x40025d8	          0x4885d2	                           test rdx, rdx	      1002	state.c	FUNCTION_25	SWITCH_3	CALL_11
0x40025db	            0x7505	                           jne 0x40025e2	      1002	state.c	FUNCTION_25	SWITCH_3	CALL_11
0x40025dd	      0xb801000000	                              mov eax, 1	      1002	state.c	FUNCTION_25	SWITCH_3	CALL_11
0x40025e2	    0xc74334000000	               mov dword [rbx + 0x34], 0	      1003	state.c	FUNCTION_25	SWITCH_3
0x40025e9	          0x294330	             sub dword [rbx + 0x30], eax	      1004	state.c	FUNCTION_25	SWITCH_3
0x40025ec	    0xc74338000000	               mov dword [rbx + 0x38], 0	      1005	state.c	FUNCTION_25	SWITCH_3
0x40025f3	      0xe92c110000	                           jmp 0x4003724	      1006	state.c	FUNCTION_25	SWITCH_3
0x40025f8	          0x488b06	                    mov rax, qword [rsi]	      1009	state.c	FUNCTION_25	SWITCH_3	CALL_12
0x40025fb	          0x4889c2	                            mov rdx, rax	      1009	state.c	FUNCTION_25	SWITCH_3	CALL_12
0x40025fe	    0x81e2ffffff7f	                     and edx, 0x7fffffff	      1009	state.c	FUNCTION_25	SWITCH_3	CALL_12
0x4002604	      0x25ffffff7f	                     and eax, 0x7fffffff	      1009	state.c	FUNCTION_25	SWITCH_3	CALL_12
0x4002609	    0x4881faffffff	                     cmp rdx, 0x3fffffff	      1009	state.c	FUNCTION_25	SWITCH_3	CALL_12
0x4002610	      0xba01000000	                              mov edx, 1	      1009	state.c	FUNCTION_25	SWITCH_3	CALL_12
0x4002615	           0xf44c2	                          cmove eax, edx	      1009	state.c	FUNCTION_25	SWITCH_3	CALL_12
0x4002618	          0x83e801	                              sub eax, 1	      1010	state.c	FUNCTION_25	SWITCH_3
0x400261b	          0x894334	             mov dword [rbx + 0x34], eax	      1010	state.c	FUNCTION_25	SWITCH_3
0x400261e	    0xc74338000000	               mov dword [rbx + 0x38], 0	      1011	state.c	FUNCTION_25	SWITCH_3
0x4002625	      0xe9fa100000	                           jmp 0x4003724	      1012	state.c	FUNCTION_25	SWITCH_3
0x400262a	          0x488b06	                    mov rax, qword [rsi]	      1015	state.c	FUNCTION_25	SWITCH_3	CALL_13
0x400262d	          0x4889c1	                            mov rcx, rax	      1015	state.c	FUNCTION_25	SWITCH_3	CALL_13
0x4002630	    0x81e1ffffff7f	                     and ecx, 0x7fffffff	      1015	state.c	FUNCTION_25	SWITCH_3	CALL_13
0x4002636	      0x25ffffff7f	                     and eax, 0x7fffffff	      1015	state.c	FUNCTION_25	SWITCH_3	CALL_13
0x400263b	    0x4881f9ffffff	                     cmp rcx, 0x3fffffff	      1015	state.c	FUNCTION_25	SWITCH_3	CALL_13
0x4002642	      0xb901000000	                              mov ecx, 1	      1015	state.c	FUNCTION_25	SWITCH_3	CALL_13
0x4002647	           0xf44c1	                          cmove eax, ecx	      1015	state.c	FUNCTION_25	SWITCH_3	CALL_13
0x400264a	          0x83fa01	                              cmp edx, 1	      1016	state.c	FUNCTION_25	SWITCH_3	CALL_15
0x400264d	            0x7e22	                           jle 0x4002671	      1016	state.c	FUNCTION_25	SWITCH_3	CALL_15
0x400264f	        0x488b4e08	                mov rcx, qword [rsi + 8]	      1016	state.c	FUNCTION_25	SWITCH_3	CALL_15
0x4002653	          0x4889ca	                            mov rdx, rcx	      1016	state.c	FUNCTION_25	SWITCH_3	CALL_15
0x4002656	    0x81e2ffffff7f	                     and edx, 0x7fffffff	      1016	state.c	FUNCTION_25	SWITCH_3	CALL_15
0x400265c	    0x81e1ffffff7f	                     and ecx, 0x7fffffff	      1016	state.c	FUNCTION_25	SWITCH_3	CALL_15
0x4002662	    0x4881faffffff	                     cmp rdx, 0x3fffffff	      1016	state.c	FUNCTION_25	SWITCH_3	CALL_15
0x4002669	      0xba01000000	                              mov edx, 1	      1016	state.c	FUNCTION_25	SWITCH_3	CALL_15
0x400266e	           0xf44ca	                          cmove ecx, edx	      1016	state.c	FUNCTION_25	SWITCH_3	CALL_15
0x4002671	          0x83e801	                              sub eax, 1	      1018	state.c	FUNCTION_25	SWITCH_3
0x4002674	          0x894330	             mov dword [rbx + 0x30], eax	      1018	state.c	FUNCTION_25	SWITCH_3
0x4002677	          0x83e901	                              sub ecx, 1	      1019	state.c	FUNCTION_25	SWITCH_3
0x400267a	          0x894b34	             mov dword [rbx + 0x34], ecx	      1019	state.c	FUNCTION_25	SWITCH_3
0x400267d	     0xfb693950000	           movzx edx, byte [rbx + 0x95] 	      1020	state.c	FUNCTION_25	SWITCH_3	IF_7
0x4002684	          0xf6c204	                              test dl, 4	      1020	state.c	FUNCTION_25	SWITCH_3	IF_7
0x4002687	            0x7418	                            je 0x40026a1	      1020	state.c	FUNCTION_25	SWITCH_3	IF_7
0x4002689	           0x3433c	             add eax, dword [rbx + 0x3c]	      1021	state.c	FUNCTION_25	SWITCH_3	IF_7
0x400268c	          0x894330	             mov dword [rbx + 0x30], eax	      1021	state.c	FUNCTION_25	SWITCH_3	IF_7
0x400268f	      0xb800000000	                              mov eax, 0	      1022	state.c	FUNCTION_25	SWITCH_3	IF_7	CALL_16
0x4002694	          0xf6c210	                           test dl, 0x10	      1022	state.c	FUNCTION_25	SWITCH_3	IF_7	CALL_16
0x4002697	            0x7403	                            je 0x400269c	      1022	state.c	FUNCTION_25	SWITCH_3	IF_7	CALL_16
0x4002699	          0x8b4344	            mov eax, dword [rbx + 0x44] 	      1022	state.c	FUNCTION_25	SWITCH_3	IF_7	CALL_16
0x400269c	             0x1c1	                            add ecx, eax	      1022	state.c	FUNCTION_25	SWITCH_3	IF_7	CALL_16
0x400269e	          0x894b34	             mov dword [rbx + 0x34], ecx	      1022	state.c	FUNCTION_25	SWITCH_3	IF_7	CALL_16
0x40026a1	    0xc74338000000	               mov dword [rbx + 0x38], 0	      1024	state.c	FUNCTION_25	SWITCH_3
0x40026a8	      0xe977100000	                           jmp 0x4003724	      1025	state.c	FUNCTION_25	SWITCH_3
0x40026ad	          0x488b36	                    mov rsi, qword [rsi]	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x40026b0	          0x4889f0	                            mov rax, rsi	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x40026b3	      0x25ffffff7f	                     and eax, 0x7fffffff	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x40026b8	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x40026be	            0x740b	                            je 0x40026cb	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x40026c0	    0x81e6ffffff7f	                     and esi, 0x7fffffff	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x40026c6	          0x4885c0	                           test rax, rax	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x40026c9	            0x7505	                           jne 0x40026d0	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x40026cb	      0xbe01000000	                              mov esi, 1	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x40026d0	      0xba01000000	                              mov edx, 1	      1029	state.c	FUNCTION_25	SWITCH_3	CALL_18
0x40026d5	          0x4889df	                            mov rdi, rbx	      1029	state.c	FUNCTION_25	SWITCH_3	CALL_18
0x40026d8	      0xe8e7daffff	                            call sym.tab	      1029	state.c	FUNCTION_25	SWITCH_3	CALL_18
0x40026dd	      0xe942100000	                           jmp 0x4003724	      1030	state.c	FUNCTION_25	SWITCH_3
0x40026e2	        0x4183fa3f	                          cmp r10d, 0x3f	      1034	state.c	FUNCTION_25	SWITCH_3
0x40026e6	        0x410f94c4	                               sete r12b	      1034	state.c	FUNCTION_25	SWITCH_3
0x40026ea	        0x450fb6e4	                        movzx r12d, r12b	      1034	state.c	FUNCTION_25	SWITCH_3
0x40026ee	          0x488b06	                    mov rax, qword [rsi]	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_20
0x40026f1	      0x25ffffff7f	                     and eax, 0x7fffffff	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_20
0x40026f6	        0x4883f801	                              cmp rax, 1	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_20
0x40026fa	     0xf8499000000	                            je 0x4002799	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_20
0x4002700	        0x4883f801	                              cmp rax, 1	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_20
0x4002704	            0x7f0a	                            jg 0x4002710	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_20
0x4002706	          0x4885c0	                           test rax, rax	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_20
0x4002709	            0x741b	                            je 0x4002726	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_20
0x400270b	      0xe914100000	                           jmp 0x4003724	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_20
0x4002710	        0x4883f802	                              cmp rax, 2	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_20
0x4002714	     0xf8405010000	                            je 0x400281f	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_20
0x400271a	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_20
0x4002720	     0xf85fe0f0000	                           jne 0x4003724	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_20
0x4002726	          0x8b4334	            mov eax, dword [rbx + 0x34] 	      1039	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4002729	        0x448b732c	           mov r14d, dword [rbx + 0x2c] 	      1039	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x400272d	          0x4439f0	                           cmp eax, r14d	      1040	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_8
0x4002730	            0x7d29	                           jge 0x400275b	      1040	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_8
0x4002732	          0x8b4b30	            mov ecx, dword [rbx + 0x30] 	      1038	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4002735	          0x8d5101	                      lea edx, [rcx + 1]	      1041	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_21
0x4002738	        0x48c1e220	                           shl rdx, 0x20	      1041	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_21
0x400273c	            0x89c9	                            mov ecx, ecx	      1041	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_21
0x400273e	          0x4889ce	                            mov rsi, rcx	      1041	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_21
0x4002741	          0x4809d6	                             or rsi, rdx	      1041	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_21
0x4002744	          0x4c89f2	                            mov rdx, r14	      1041	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_21
0x4002747	        0x48c1e220	                           shl rdx, 0x20	      1041	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_21
0x400274b	            0x89c0	                            mov eax, eax	      1041	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_21
0x400274d	          0x4809c2	                             or rdx, rax	      1041	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_21
0x4002750	          0x4489e1	                           mov ecx, r12d	      1041	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_21
0x4002753	          0x4889df	                            mov rdi, rbx	      1041	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_21
0x4002756	      0xe8cdd9ffff	                          call sym.erase	      1041	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_21
0x400275b	          0x8b4330	            mov eax, dword [rbx + 0x30] 	      1043	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x400275e	        0x448d7801	                     lea r15d, [rax + 1]	      1043	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4002762	        0x448b6b28	           mov r13d, dword [rbx + 0x28] 	      1043	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4002766	          0x4539ef	                          cmp r15d, r13d	      1045	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_1
0x4002769	     0xf8db50f0000	                           jge 0x4003724	      1045	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_1
0x400276f	          0x4489fd	                           mov ebp, r15d	      1045	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_1
0x4002772	    0x41b800000000	                              mov r8d, 0	      1046	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_22
0x4002778	      0xb900000000	                              mov ecx, 0	      1046	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_22
0x400277d	      0xba01000000	                              mov edx, 1	      1046	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_22
0x4002782	            0x89ee	                            mov esi, ebp	      1046	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_22
0x4002784	          0x4889df	                            mov rdi, rbx	      1046	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_22
0x4002787	      0xe8b7daffff	                   call sym.set_lineinfo	      1046	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_22
0x400278c	          0x83c501	                              add ebp, 1	      1045	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_1
0x400278f	          0x4139ed	                           cmp r13d, ebp	      1045	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_1
0x4002792	            0x7fde	                            jg 0x4002772	      1045	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_1
0x4002794	      0xe9ba100000	                           jmp 0x4003853	      1045	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_1
0x4002799	        0x448b6b30	           mov r13d, dword [rbx + 0x30] 	      1052	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x400279d	        0x448b732c	           mov r14d, dword [rbx + 0x2c] 	      1053	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x40027a1	          0x4585ed	                         test r13d, r13d	      1054	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_2
0x40027a4	            0x7e27	                           jle 0x40027cd	      1054	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_2
0x40027a6	      0xbd00000000	                              mov ebp, 0	      1054	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_2
0x40027ab	    0x41b800000000	                              mov r8d, 0	      1055	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_24
0x40027b1	      0xb900000000	                              mov ecx, 0	      1055	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_24
0x40027b6	      0xba01000000	                              mov edx, 1	      1055	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_24
0x40027bb	            0x89ee	                            mov esi, ebp	      1055	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_24
0x40027bd	          0x4889df	                            mov rdi, rbx	      1055	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_24
0x40027c0	      0xe87edaffff	                   call sym.set_lineinfo	      1055	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_24
0x40027c5	          0x83c501	                              add ebp, 1	      1054	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_2
0x40027c8	          0x4139ed	                           cmp r13d, ebp	      1054	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_2
0x40027cb	            0x75de	                           jne 0x40027ab	      1054	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_2
0x40027cd	          0x4585f6	                         test r14d, r14d	      1056	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_10
0x40027d0	            0x7e19	                           jle 0x40027eb	      1056	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_10
0x40027d2	          0x4c89ee	                            mov rsi, r13	      1057	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_25
0x40027d5	        0x48c1e620	                           shl rsi, 0x20	      1057	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_25
0x40027d9	          0x4c89f2	                            mov rdx, r14	      1057	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_25
0x40027dc	        0x48c1e220	                           shl rdx, 0x20	      1057	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_25
0x40027e0	          0x4489e1	                           mov ecx, r12d	      1057	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_25
0x40027e3	          0x4889df	                            mov rdi, rbx	      1057	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_25
0x40027e6	      0xe83dd9ffff	                          call sym.erase	      1057	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_25
0x40027eb	          0x8b4330	            mov eax, dword [rbx + 0x30] 	      1059	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x40027ee	          0x8d5001	                      lea edx, [rax + 1]	      1059	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x40027f1	            0x39d0	                            cmp eax, edx	      1061	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_11
0x40027f3	     0xf8d2b0f0000	                           jge 0x4003724	      1061	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_11
0x40027f9	          0x8b4b34	            mov ecx, dword [rbx + 0x34] 	      1060	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x40027fc	        0x48c1e220	                           shl rdx, 0x20	      1062	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_26
0x4002800	            0x89c0	                            mov eax, eax	      1062	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_26
0x4002802	          0x4809d0	                             or rax, rdx	      1062	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_26
0x4002805	          0x4889c6	                            mov rsi, rax	      1062	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_26
0x4002808	          0x8d5101	                      lea edx, [rcx + 1]	      1062	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_26
0x400280b	        0x48c1e220	                           shl rdx, 0x20	      1062	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_26
0x400280f	          0x4489e1	                           mov ecx, r12d	      1062	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_26
0x4002812	          0x4889df	                            mov rdi, rbx	      1062	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_26
0x4002815	      0xe80ed9ffff	                          call sym.erase	      1062	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_26
0x400281a	      0xe9050f0000	                           jmp 0x4003724	      1062	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_26
0x400281f	        0x448b6b28	           mov r13d, dword [rbx + 0x28] 	      1066	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4002823	        0x448b732c	           mov r14d, dword [rbx + 0x2c] 	      1067	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4002827	          0x4585ed	                         test r13d, r13d	      1068	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_3
0x400282a	            0x7e27	                           jle 0x4002853	      1068	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_3
0x400282c	      0xbd00000000	                              mov ebp, 0	      1068	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_3
0x4002831	    0x41b800000000	                              mov r8d, 0	      1069	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_27
0x4002837	      0xb900000000	                              mov ecx, 0	      1069	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_27
0x400283c	      0xba01000000	                              mov edx, 1	      1069	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_27
0x4002841	            0x89ee	                            mov esi, ebp	      1069	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_27
0x4002843	          0x4889df	                            mov rdi, rbx	      1069	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_27
0x4002846	      0xe8f8d9ffff	                   call sym.set_lineinfo	      1069	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_27
0x400284b	          0x83c501	                              add ebp, 1	      1068	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_3
0x400284e	          0x4139ed	                           cmp r13d, ebp	      1068	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_3
0x4002851	            0x75de	                           jne 0x4002831	      1068	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_3
0x4002853	          0x4c89ee	                            mov rsi, r13	      1070	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_28
0x4002856	        0x48c1e620	                           shl rsi, 0x20	      1070	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_28
0x400285a	          0x4c89f2	                            mov rdx, r14	      1070	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_28
0x400285d	        0x48c1e220	                           shl rdx, 0x20	      1070	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_28
0x4002861	          0x4489e1	                           mov ecx, r12d	      1070	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_28
0x4002864	          0x4889df	                            mov rdi, rbx	      1070	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_28
0x4002867	      0xe8bcd8ffff	                          call sym.erase	      1070	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_28
0x400286c	      0xe9b30e0000	                           jmp 0x4003724	      1071	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4002871	          0x8b5330	            mov edx, dword [rbx + 0x30] 	      1078	state.c	FUNCTION_25	SWITCH_3
0x4002874	          0x488b06	                    mov rax, qword [rsi]	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x4002877	      0x25ffffff7f	                     and eax, 0x7fffffff	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x400287c	        0x4883f801	                              cmp rax, 1	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x4002880	            0x7445	                            je 0x40028c7	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x4002882	        0x4883f801	                              cmp rax, 1	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x4002886	            0x7f0a	                            jg 0x4002892	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x4002888	          0x4885c0	                           test rax, rax	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x400288b	            0x7417	                            je 0x40028a4	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x400288d	      0xe99c0f0000	                           jmp 0x400382e	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x4002892	        0x4883f802	                              cmp rax, 2	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x4002896	            0x743c	                            je 0x40028d4	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x4002898	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x400289e	     0xf858a0f0000	                           jne 0x400382e	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x40028a4	          0x8b4b34	            mov ecx, dword [rbx + 0x34] 	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_31
0x40028a7	          0x4863c2	                         movsxd rax, edx	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_31
0x40028aa	        0x488b7358	            mov rsi, qword [rbx + 0x58] 	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_31
0x40028ae	        0xf6048601	              test byte [rsi + rax*4], 1	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_31
0x40028b2	            0x740e	                            je 0x40028c2	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_31
0x40028b4	          0x8b432c	            mov eax, dword [rbx + 0x2c] 	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_31
0x40028b7	            0x89c6	                            mov esi, eax	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_31
0x40028b9	          0xc1ee1f	                           shr esi, 0x1f	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_31
0x40028bc	             0x1f0	                            add eax, esi	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_31
0x40028be	            0xd1f8	                              sar eax, 1	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_31
0x40028c0	            0xeb3a	                           jmp 0x40028fc	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_31
0x40028c2	          0x8b432c	            mov eax, dword [rbx + 0x2c] 	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_31
0x40028c5	            0xeb35	                           jmp 0x40028fc	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_31
0x40028c7	          0x8b4334	            mov eax, dword [rbx + 0x34] 	      1086	state.c	FUNCTION_25	SWITCH_3	SWITCH_5
0x40028ca	          0x83c001	                              add eax, 1	      1086	state.c	FUNCTION_25	SWITCH_3	SWITCH_5
0x40028cd	      0xb900000000	                              mov ecx, 0	      1086	state.c	FUNCTION_25	SWITCH_3	SWITCH_5
0x40028d2	            0xeb28	                           jmp 0x40028fc	      1086	state.c	FUNCTION_25	SWITCH_3	SWITCH_5
0x40028d4	          0x4863c2	                         movsxd rax, edx	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_32
0x40028d7	        0x488b4b58	            mov rcx, qword [rbx + 0x58] 	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_32
0x40028db	        0xf6048101	              test byte [rcx + rax*4], 1	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_32
0x40028df	            0x7413	                            je 0x40028f4	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_32
0x40028e1	          0x8b432c	            mov eax, dword [rbx + 0x2c] 	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_32
0x40028e4	            0x89c1	                            mov ecx, eax	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_32
0x40028e6	          0xc1e91f	                           shr ecx, 0x1f	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_32
0x40028e9	             0x1c8	                            add eax, ecx	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_32
0x40028eb	            0xd1f8	                              sar eax, 1	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_32
0x40028ed	      0xb900000000	                              mov ecx, 0	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_32
0x40028f2	            0xeb08	                           jmp 0x40028fc	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_32
0x40028f4	          0x8b432c	            mov eax, dword [rbx + 0x2c] 	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_32
0x40028f7	      0xb900000000	                              mov ecx, 0	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_32
0x40028fc	            0x39c8	                            cmp eax, ecx	      1093	state.c	FUNCTION_25	SWITCH_3	IF_12
0x40028fe	     0xf8e200e0000	                           jle 0x4003724	      1093	state.c	FUNCTION_25	SWITCH_3	IF_12
0x4002904	          0x8d7201	                      lea esi, [rdx + 1]	      1094	state.c	FUNCTION_25	SWITCH_3	CALL_33
0x4002907	        0x48c1e620	                           shl rsi, 0x20	      1094	state.c	FUNCTION_25	SWITCH_3	CALL_33
0x400290b	            0x89d2	                            mov edx, edx	      1094	state.c	FUNCTION_25	SWITCH_3	CALL_33
0x400290d	          0x4809d6	                             or rsi, rdx	      1094	state.c	FUNCTION_25	SWITCH_3	CALL_33
0x4002910	        0x48c1e020	                           shl rax, 0x20	      1094	state.c	FUNCTION_25	SWITCH_3	CALL_33
0x4002914	            0x89c9	                            mov ecx, ecx	      1094	state.c	FUNCTION_25	SWITCH_3	CALL_33
0x4002916	          0x4809c1	                             or rcx, rax	      1094	state.c	FUNCTION_25	SWITCH_3	CALL_33
0x4002919	          0x4889ca	                            mov rdx, rcx	      1094	state.c	FUNCTION_25	SWITCH_3	CALL_33
0x400291c	        0x4183fa3f	                          cmp r10d, 0x3f	      1094	state.c	FUNCTION_25	SWITCH_3	CALL_33
0x4002920	           0xf94c1	                                 sete cl	      1094	state.c	FUNCTION_25	SWITCH_3	CALL_33
0x4002923	           0xfb6c9	                           movzx ecx, cl	      1094	state.c	FUNCTION_25	SWITCH_3	CALL_33
0x4002926	          0x4889df	                            mov rdi, rbx	      1094	state.c	FUNCTION_25	SWITCH_3	CALL_33
0x4002929	      0xe8fad7ffff	                          call sym.erase	      1094	state.c	FUNCTION_25	SWITCH_3	CALL_33
0x400292e	      0xe9f10d0000	                           jmp 0x4003724	      1094	state.c	FUNCTION_25	SWITCH_3	CALL_33
0x4002933	          0x488b2e	                    mov rbp, qword [rsi]	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_34
0x4002936	          0x4889e8	                            mov rax, rbp	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_34
0x4002939	      0x25ffffff7f	                     and eax, 0x7fffffff	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_34
0x400293e	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_34
0x4002944	            0x740b	                            je 0x4002951	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_34
0x4002946	    0x81e5ffffff7f	                     and ebp, 0x7fffffff	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_34
0x400294c	          0x4885c0	                           test rax, rax	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_34
0x400294f	            0x7505	                           jne 0x4002956	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_34
0x4002951	      0xbd01000000	                              mov ebp, 1	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_34
0x4002956	          0x4889df	                            mov rdi, rbx	      1101	state.c	FUNCTION_25	SWITCH_3	IF_13	CALL_35
0x4002959	      0xe817d8ffff	      call sym.is_cursor_in_scrollregion	      1101	state.c	FUNCTION_25	SWITCH_3	IF_13	CALL_35
0x400295e	            0x85c0	                           test eax, eax	      1101	state.c	FUNCTION_25	SWITCH_3	IF_13	CALL_35
0x4002960	     0xf84be0d0000	                            je 0x4003724	      1101	state.c	FUNCTION_25	SWITCH_3	IF_13	CALL_35
0x4002966	          0x8b7330	            mov esi, dword [rbx + 0x30] 	      1104	state.c	FUNCTION_25	SWITCH_3
0x4002969	          0x8b4340	            mov eax, dword [rbx + 0x40] 	      1105	state.c	FUNCTION_25	SWITCH_3	CALL_36
0x400296c	            0x85c0	                           test eax, eax	      1105	state.c	FUNCTION_25	SWITCH_3	CALL_36
0x400296e	            0x7903	                           jns 0x4002973	      1105	state.c	FUNCTION_25	SWITCH_3	CALL_36
0x4002970	          0x8b4328	            mov eax, dword [rbx + 0x28] 	      1105	state.c	FUNCTION_25	SWITCH_3	CALL_36
0x4002973	    0xf68395000000	           test byte [rbx + 0x95], 0x10 	      1106	state.c	FUNCTION_25	SWITCH_3	CALL_37
0x400297a	            0x740c	                            je 0x4002988	      1106	state.c	FUNCTION_25	SWITCH_3	CALL_37
0x400297c	          0x8b4b44	            mov ecx, dword [rbx + 0x44] 	      1106	state.c	FUNCTION_25	SWITCH_3	CALL_37
0x400297f	          0x8b5348	            mov edx, dword [rbx + 0x48] 	      1107	state.c	FUNCTION_25	SWITCH_3	CALL_38
0x4002982	            0x85d2	                           test edx, edx	      1107	state.c	FUNCTION_25	SWITCH_3	CALL_38
0x4002984	            0x790a	                           jns 0x4002990	      1107	state.c	FUNCTION_25	SWITCH_3	CALL_38
0x4002986	            0xeb05	                           jmp 0x400298d	      1107	state.c	FUNCTION_25	SWITCH_3	CALL_38
0x4002988	      0xb900000000	                              mov ecx, 0	      1106	state.c	FUNCTION_25	SWITCH_3	CALL_37
0x400298d	          0x8b532c	            mov edx, dword [rbx + 0x2c] 	      1107	state.c	FUNCTION_25	SWITCH_3	CALL_38
0x4002990	        0x48c1e020	                           shl rax, 0x20	      1109	state.c	FUNCTION_25	SWITCH_3	CALL_39
0x4002994	            0x89f6	                            mov esi, esi	      1109	state.c	FUNCTION_25	SWITCH_3	CALL_39
0x4002996	          0x4809c6	                             or rsi, rax	      1109	state.c	FUNCTION_25	SWITCH_3	CALL_39
0x4002999	        0x48c1e220	                           shl rdx, 0x20	      1109	state.c	FUNCTION_25	SWITCH_3	CALL_39
0x400299d	            0x89c8	                            mov eax, ecx	      1109	state.c	FUNCTION_25	SWITCH_3	CALL_39
0x400299f	          0x4809c2	                             or rdx, rax	      1109	state.c	FUNCTION_25	SWITCH_3	CALL_39
0x40029a2	            0x89e9	                            mov ecx, ebp	      1109	state.c	FUNCTION_25	SWITCH_3	CALL_39
0x40029a4	            0xf7d9	                                 neg ecx	      1109	state.c	FUNCTION_25	SWITCH_3	CALL_39
0x40029a6	    0x41b800000000	                              mov r8d, 0	      1109	state.c	FUNCTION_25	SWITCH_3	CALL_39
0x40029ac	          0x4889df	                            mov rdi, rbx	      1109	state.c	FUNCTION_25	SWITCH_3	CALL_39
0x40029af	      0xe85ddeffff	                         call sym.scroll	      1109	state.c	FUNCTION_25	SWITCH_3	CALL_39
0x40029b4	      0xe96b0d0000	                           jmp 0x4003724	      1111	state.c	FUNCTION_25	SWITCH_3
0x40029b9	          0x488b2e	                    mov rbp, qword [rsi]	      1114	state.c	FUNCTION_25	SWITCH_3	CALL_40
0x40029bc	          0x4889e8	                            mov rax, rbp	      1114	state.c	FUNCTION_25	SWITCH_3	CALL_40
0x40029bf	      0x25ffffff7f	                     and eax, 0x7fffffff	      1114	state.c	FUNCTION_25	SWITCH_3	CALL_40
0x40029c4	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1114	state.c	FUNCTION_25	SWITCH_3	CALL_40
0x40029ca	            0x740b	                            je 0x40029d7	      1114	state.c	FUNCTION_25	SWITCH_3	CALL_40
0x40029cc	    0x81e5ffffff7f	                     and ebp, 0x7fffffff	      1114	state.c	FUNCTION_25	SWITCH_3	CALL_40
0x40029d2	          0x4885c0	                           test rax, rax	      1114	state.c	FUNCTION_25	SWITCH_3	CALL_40
0x40029d5	            0x7505	                           jne 0x40029dc	      1114	state.c	FUNCTION_25	SWITCH_3	CALL_40
0x40029d7	      0xbd01000000	                              mov ebp, 1	      1114	state.c	FUNCTION_25	SWITCH_3	CALL_40
0x40029dc	          0x4889df	                            mov rdi, rbx	      1116	state.c	FUNCTION_25	SWITCH_3	IF_14	CALL_41
0x40029df	      0xe891d7ffff	      call sym.is_cursor_in_scrollregion	      1116	state.c	FUNCTION_25	SWITCH_3	IF_14	CALL_41
0x40029e4	            0x85c0	                           test eax, eax	      1116	state.c	FUNCTION_25	SWITCH_3	IF_14	CALL_41
0x40029e6	     0xf84380d0000	                            je 0x4003724	      1116	state.c	FUNCTION_25	SWITCH_3	IF_14	CALL_41
0x40029ec	          0x8b7330	            mov esi, dword [rbx + 0x30] 	      1119	state.c	FUNCTION_25	SWITCH_3
0x40029ef	          0x8b4340	            mov eax, dword [rbx + 0x40] 	      1120	state.c	FUNCTION_25	SWITCH_3	CALL_42
0x40029f2	            0x85c0	                           test eax, eax	      1120	state.c	FUNCTION_25	SWITCH_3	CALL_42
0x40029f4	            0x7903	                           jns 0x40029f9	      1120	state.c	FUNCTION_25	SWITCH_3	CALL_42
0x40029f6	          0x8b4328	            mov eax, dword [rbx + 0x28] 	      1120	state.c	FUNCTION_25	SWITCH_3	CALL_42
0x40029f9	    0xf68395000000	           test byte [rbx + 0x95], 0x10 	      1121	state.c	FUNCTION_25	SWITCH_3	CALL_43
0x4002a00	            0x740c	                            je 0x4002a0e	      1121	state.c	FUNCTION_25	SWITCH_3	CALL_43
0x4002a02	          0x8b4b44	            mov ecx, dword [rbx + 0x44] 	      1121	state.c	FUNCTION_25	SWITCH_3	CALL_43
0x4002a05	          0x8b5348	            mov edx, dword [rbx + 0x48] 	      1122	state.c	FUNCTION_25	SWITCH_3	CALL_44
0x4002a08	            0x85d2	                           test edx, edx	      1122	state.c	FUNCTION_25	SWITCH_3	CALL_44
0x4002a0a	            0x790a	                           jns 0x4002a16	      1122	state.c	FUNCTION_25	SWITCH_3	CALL_44
0x4002a0c	            0xeb05	                           jmp 0x4002a13	      1122	state.c	FUNCTION_25	SWITCH_3	CALL_44
0x4002a0e	      0xb900000000	                              mov ecx, 0	      1121	state.c	FUNCTION_25	SWITCH_3	CALL_43
0x4002a13	          0x8b532c	            mov edx, dword [rbx + 0x2c] 	      1122	state.c	FUNCTION_25	SWITCH_3	CALL_44
0x4002a16	        0x48c1e020	                           shl rax, 0x20	      1124	state.c	FUNCTION_25	SWITCH_3	CALL_45
0x4002a1a	            0x89f6	                            mov esi, esi	      1124	state.c	FUNCTION_25	SWITCH_3	CALL_45
0x4002a1c	          0x4809c6	                             or rsi, rax	      1124	state.c	FUNCTION_25	SWITCH_3	CALL_45
0x4002a1f	        0x48c1e220	                           shl rdx, 0x20	      1124	state.c	FUNCTION_25	SWITCH_3	CALL_45
0x4002a23	            0x89c8	                            mov eax, ecx	      1124	state.c	FUNCTION_25	SWITCH_3	CALL_45
0x4002a25	          0x4809c2	                             or rdx, rax	      1124	state.c	FUNCTION_25	SWITCH_3	CALL_45
0x4002a28	    0x41b800000000	                              mov r8d, 0	      1124	state.c	FUNCTION_25	SWITCH_3	CALL_45
0x4002a2e	            0x89e9	                            mov ecx, ebp	      1124	state.c	FUNCTION_25	SWITCH_3	CALL_45
0x4002a30	          0x4889df	                            mov rdi, rbx	      1124	state.c	FUNCTION_25	SWITCH_3	CALL_45
0x4002a33	      0xe8d9ddffff	                         call sym.scroll	      1124	state.c	FUNCTION_25	SWITCH_3	CALL_45
0x4002a38	      0xe9e70c0000	                           jmp 0x4003724	      1126	state.c	FUNCTION_25	SWITCH_3
0x4002a3d	          0x488b2e	                    mov rbp, qword [rsi]	      1129	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x4002a40	          0x4889e8	                            mov rax, rbp	      1129	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x4002a43	      0x25ffffff7f	                     and eax, 0x7fffffff	      1129	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x4002a48	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1129	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x4002a4e	            0x740b	                            je 0x4002a5b	      1129	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x4002a50	    0x81e5ffffff7f	                     and ebp, 0x7fffffff	      1129	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x4002a56	          0x4885c0	                           test rax, rax	      1129	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x4002a59	            0x7505	                           jne 0x4002a60	      1129	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x4002a5b	      0xbd01000000	                              mov ebp, 1	      1129	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x4002a60	          0x4889df	                            mov rdi, rbx	      1131	state.c	FUNCTION_25	SWITCH_3	IF_15	CALL_47
0x4002a63	      0xe80dd7ffff	      call sym.is_cursor_in_scrollregion	      1131	state.c	FUNCTION_25	SWITCH_3	IF_15	CALL_47
0x4002a68	            0x85c0	                           test eax, eax	      1131	state.c	FUNCTION_25	SWITCH_3	IF_15	CALL_47
0x4002a6a	     0xf84b40c0000	                            je 0x4003724	      1131	state.c	FUNCTION_25	SWITCH_3	IF_15	CALL_47
0x4002a70	          0x8b4b30	            mov ecx, dword [rbx + 0x30] 	      1134	state.c	FUNCTION_25	SWITCH_3
0x4002a73	          0x8d7101	                      lea esi, [rcx + 1]	      1135	state.c	FUNCTION_25	SWITCH_3
0x4002a76	          0x8b7b34	            mov edi, dword [rbx + 0x34] 	      1136	state.c	FUNCTION_25	SWITCH_3
0x4002a79	    0xf68395000000	           test byte [rbx + 0x95], 0x10 	      1137	state.c	FUNCTION_25	SWITCH_3	IF_16
0x4002a80	            0x740c	                            je 0x4002a8e	      1137	state.c	FUNCTION_25	SWITCH_3	IF_16
0x4002a82	          0x8b5348	            mov edx, dword [rbx + 0x48] 	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_48
0x4002a85	            0x85d2	                           test edx, edx	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_48
0x4002a87	            0x7925	                           jns 0x4002aae	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_48
0x4002a89	          0x8b532c	            mov edx, dword [rbx + 0x2c] 	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_48
0x4002a8c	            0xeb20	                           jmp 0x4002aae	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_48
0x4002a8e	          0x4863c1	                         movsxd rax, ecx	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x4002a91	        0x488b5358	            mov rdx, qword [rbx + 0x58] 	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x4002a95	        0xf6048201	              test byte [rdx + rax*4], 1	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x4002a99	            0x7410	                            je 0x4002aab	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x4002a9b	          0x8b432c	            mov eax, dword [rbx + 0x2c] 	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x4002a9e	            0x89c2	                            mov edx, eax	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x4002aa0	          0xc1ea1f	                           shr edx, 0x1f	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x4002aa3	             0x1d0	                            add eax, edx	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x4002aa5	            0xd1f8	                              sar eax, 1	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x4002aa7	            0x89c2	                            mov edx, eax	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x4002aa9	            0xeb03	                           jmp 0x4002aae	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x4002aab	          0x8b532c	            mov edx, dword [rbx + 0x2c] 	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x4002aae	          0x4889f0	                            mov rax, rsi	      1142	state.c	FUNCTION_25	SWITCH_3	CALL_50
0x4002ab1	        0x48c1e020	                           shl rax, 0x20	      1142	state.c	FUNCTION_25	SWITCH_3	CALL_50
0x4002ab5	            0x89ce	                            mov esi, ecx	      1142	state.c	FUNCTION_25	SWITCH_3	CALL_50
0x4002ab7	          0x4809c6	                             or rsi, rax	      1142	state.c	FUNCTION_25	SWITCH_3	CALL_50
0x4002aba	          0x4889d0	                            mov rax, rdx	      1142	state.c	FUNCTION_25	SWITCH_3	CALL_50
0x4002abd	        0x48c1e020	                           shl rax, 0x20	      1142	state.c	FUNCTION_25	SWITCH_3	CALL_50
0x4002ac1	            0x89fa	                            mov edx, edi	      1142	state.c	FUNCTION_25	SWITCH_3	CALL_50
0x4002ac3	          0x4809c2	                             or rdx, rax	      1142	state.c	FUNCTION_25	SWITCH_3	CALL_50
0x4002ac6	          0x4189e8	                            mov r8d, ebp	      1142	state.c	FUNCTION_25	SWITCH_3	CALL_50
0x4002ac9	      0xb900000000	                              mov ecx, 0	      1142	state.c	FUNCTION_25	SWITCH_3	CALL_50
0x4002ace	          0x4889df	                            mov rdi, rbx	      1142	state.c	FUNCTION_25	SWITCH_3	CALL_50
0x4002ad1	      0xe83bddffff	                         call sym.scroll	      1142	state.c	FUNCTION_25	SWITCH_3	CALL_50
0x4002ad6	      0xe9490c0000	                           jmp 0x4003724	      1144	state.c	FUNCTION_25	SWITCH_3
0x4002adb	          0x488b0e	                    mov rcx, qword [rsi]	      1147	state.c	FUNCTION_25	SWITCH_3	CALL_51
0x4002ade	          0x4889c8	                            mov rax, rcx	      1147	state.c	FUNCTION_25	SWITCH_3	CALL_51
0x4002ae1	      0x25ffffff7f	                     and eax, 0x7fffffff	      1147	state.c	FUNCTION_25	SWITCH_3	CALL_51
0x4002ae6	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1147	state.c	FUNCTION_25	SWITCH_3	CALL_51
0x4002aec	            0x740b	                            je 0x4002af9	      1147	state.c	FUNCTION_25	SWITCH_3	CALL_51
0x4002aee	    0x81e1ffffff7f	                     and ecx, 0x7fffffff	      1147	state.c	FUNCTION_25	SWITCH_3	CALL_51
0x4002af4	          0x4885c0	                           test rax, rax	      1147	state.c	FUNCTION_25	SWITCH_3	CALL_51
0x4002af7	            0x7505	                           jne 0x4002afe	      1147	state.c	FUNCTION_25	SWITCH_3	CALL_51
0x4002af9	      0xb901000000	                              mov ecx, 1	      1147	state.c	FUNCTION_25	SWITCH_3	CALL_51
0x4002afe	          0x8b7b3c	            mov edi, dword [rbx + 0x3c] 	      1149	state.c	FUNCTION_25	SWITCH_3
0x4002b01	          0x8b7340	            mov esi, dword [rbx + 0x40] 	      1150	state.c	FUNCTION_25	SWITCH_3	CALL_52
0x4002b04	            0x85f6	                           test esi, esi	      1150	state.c	FUNCTION_25	SWITCH_3	CALL_52
0x4002b06	            0x7903	                           jns 0x4002b0b	      1150	state.c	FUNCTION_25	SWITCH_3	CALL_52
0x4002b08	          0x8b7328	            mov esi, dword [rbx + 0x28] 	      1150	state.c	FUNCTION_25	SWITCH_3	CALL_52
0x4002b0b	    0xf68395000000	           test byte [rbx + 0x95], 0x10 	      1151	state.c	FUNCTION_25	SWITCH_3	CALL_53
0x4002b12	            0x740c	                            je 0x4002b20	      1151	state.c	FUNCTION_25	SWITCH_3	CALL_53
0x4002b14	          0x8b4344	            mov eax, dword [rbx + 0x44] 	      1151	state.c	FUNCTION_25	SWITCH_3	CALL_53
0x4002b17	          0x8b5348	            mov edx, dword [rbx + 0x48] 	      1152	state.c	FUNCTION_25	SWITCH_3	CALL_54
0x4002b1a	            0x85d2	                           test edx, edx	      1152	state.c	FUNCTION_25	SWITCH_3	CALL_54
0x4002b1c	            0x790a	                           jns 0x4002b28	      1152	state.c	FUNCTION_25	SWITCH_3	CALL_54
0x4002b1e	            0xeb05	                           jmp 0x4002b25	      1152	state.c	FUNCTION_25	SWITCH_3	CALL_54
0x4002b20	      0xb800000000	                              mov eax, 0	      1151	state.c	FUNCTION_25	SWITCH_3	CALL_53
0x4002b25	          0x8b532c	            mov edx, dword [rbx + 0x2c] 	      1152	state.c	FUNCTION_25	SWITCH_3	CALL_54
0x4002b28	        0x48c1e620	                           shl rsi, 0x20	      1154	state.c	FUNCTION_25	SWITCH_3	CALL_55
0x4002b2c	            0x89ff	                            mov edi, edi	      1154	state.c	FUNCTION_25	SWITCH_3	CALL_55
0x4002b2e	          0x4809fe	                             or rsi, rdi	      1154	state.c	FUNCTION_25	SWITCH_3	CALL_55
0x4002b31	        0x48c1e220	                           shl rdx, 0x20	      1154	state.c	FUNCTION_25	SWITCH_3	CALL_55
0x4002b35	            0x89c0	                            mov eax, eax	      1154	state.c	FUNCTION_25	SWITCH_3	CALL_55
0x4002b37	          0x4809c2	                             or rdx, rax	      1154	state.c	FUNCTION_25	SWITCH_3	CALL_55
0x4002b3a	    0x41b800000000	                              mov r8d, 0	      1154	state.c	FUNCTION_25	SWITCH_3	CALL_55
0x4002b40	          0x4889df	                            mov rdi, rbx	      1154	state.c	FUNCTION_25	SWITCH_3	CALL_55
0x4002b43	      0xe8c9dcffff	                         call sym.scroll	      1154	state.c	FUNCTION_25	SWITCH_3	CALL_55
0x4002b48	      0xe9d70b0000	                           jmp 0x4003724	      1156	state.c	FUNCTION_25	SWITCH_3
0x4002b4d	          0x488b06	                    mov rax, qword [rsi]	      1159	state.c	FUNCTION_25	SWITCH_3	CALL_56
0x4002b50	          0x4889c2	                            mov rdx, rax	      1159	state.c	FUNCTION_25	SWITCH_3	CALL_56
0x4002b53	    0x81e2ffffff7f	                     and edx, 0x7fffffff	      1159	state.c	FUNCTION_25	SWITCH_3	CALL_56
0x4002b59	    0x4881faffffff	                     cmp rdx, 0x3fffffff	      1159	state.c	FUNCTION_25	SWITCH_3	CALL_56
0x4002b60	            0x740a	                            je 0x4002b6c	      1159	state.c	FUNCTION_25	SWITCH_3	CALL_56
0x4002b62	      0x25ffffff7f	                     and eax, 0x7fffffff	      1159	state.c	FUNCTION_25	SWITCH_3	CALL_56
0x4002b67	          0x4885d2	                           test rdx, rdx	      1159	state.c	FUNCTION_25	SWITCH_3	CALL_56
0x4002b6a	            0x7505	                           jne 0x4002b71	      1159	state.c	FUNCTION_25	SWITCH_3	CALL_56
0x4002b6c	      0xb801000000	                              mov eax, 1	      1159	state.c	FUNCTION_25	SWITCH_3	CALL_56
0x4002b71	          0x8b7b3c	            mov edi, dword [rbx + 0x3c] 	      1161	state.c	FUNCTION_25	SWITCH_3
0x4002b74	          0x8b7340	            mov esi, dword [rbx + 0x40] 	      1162	state.c	FUNCTION_25	SWITCH_3	CALL_57
0x4002b77	            0x85f6	                           test esi, esi	      1162	state.c	FUNCTION_25	SWITCH_3	CALL_57
0x4002b79	            0x7903	                           jns 0x4002b7e	      1162	state.c	FUNCTION_25	SWITCH_3	CALL_57
0x4002b7b	          0x8b7328	            mov esi, dword [rbx + 0x28] 	      1162	state.c	FUNCTION_25	SWITCH_3	CALL_57
0x4002b7e	    0xf68395000000	           test byte [rbx + 0x95], 0x10 	      1163	state.c	FUNCTION_25	SWITCH_3	CALL_58
0x4002b85	            0x740c	                            je 0x4002b93	      1163	state.c	FUNCTION_25	SWITCH_3	CALL_58
0x4002b87	          0x8b4b44	            mov ecx, dword [rbx + 0x44] 	      1163	state.c	FUNCTION_25	SWITCH_3	CALL_58
0x4002b8a	          0x8b5348	            mov edx, dword [rbx + 0x48] 	      1164	state.c	FUNCTION_25	SWITCH_3	CALL_59
0x4002b8d	            0x85d2	                           test edx, edx	      1164	state.c	FUNCTION_25	SWITCH_3	CALL_59
0x4002b8f	            0x790a	                           jns 0x4002b9b	      1164	state.c	FUNCTION_25	SWITCH_3	CALL_59
0x4002b91	            0xeb05	                           jmp 0x4002b98	      1164	state.c	FUNCTION_25	SWITCH_3	CALL_59
0x4002b93	      0xb900000000	                              mov ecx, 0	      1163	state.c	FUNCTION_25	SWITCH_3	CALL_58
0x4002b98	          0x8b532c	            mov edx, dword [rbx + 0x2c] 	      1164	state.c	FUNCTION_25	SWITCH_3	CALL_59
0x4002b9b	        0x48c1e620	                           shl rsi, 0x20	      1166	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x4002b9f	            0x89ff	                            mov edi, edi	      1166	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x4002ba1	          0x4809fe	                             or rsi, rdi	      1166	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x4002ba4	        0x48c1e220	                           shl rdx, 0x20	      1166	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x4002ba8	            0x89c9	                            mov ecx, ecx	      1166	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x4002baa	          0x4809ca	                             or rdx, rcx	      1166	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x4002bad	            0xf7d8	                                 neg eax	      1166	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x4002baf	            0x89c1	                            mov ecx, eax	      1166	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x4002bb1	    0x41b800000000	                              mov r8d, 0	      1166	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x4002bb7	          0x4889df	                            mov rdi, rbx	      1166	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x4002bba	      0xe852dcffff	                         call sym.scroll	      1166	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x4002bbf	      0xe9600b0000	                           jmp 0x4003724	      1168	state.c	FUNCTION_25	SWITCH_3
0x4002bc4	          0x488b06	                    mov rax, qword [rsi]	      1171	state.c	FUNCTION_25	SWITCH_3	CALL_61
0x4002bc7	          0x4889c2	                            mov rdx, rax	      1171	state.c	FUNCTION_25	SWITCH_3	CALL_61
0x4002bca	    0x81e2ffffff7f	                     and edx, 0x7fffffff	      1171	state.c	FUNCTION_25	SWITCH_3	CALL_61
0x4002bd0	    0x4881faffffff	                     cmp rdx, 0x3fffffff	      1171	state.c	FUNCTION_25	SWITCH_3	CALL_61
0x4002bd7	            0x740a	                            je 0x4002be3	      1171	state.c	FUNCTION_25	SWITCH_3	CALL_61
0x4002bd9	      0x25ffffff7f	                     and eax, 0x7fffffff	      1171	state.c	FUNCTION_25	SWITCH_3	CALL_61
0x4002bde	          0x4885d2	                           test rdx, rdx	      1171	state.c	FUNCTION_25	SWITCH_3	CALL_61
0x4002be1	            0x7505	                           jne 0x4002be8	      1171	state.c	FUNCTION_25	SWITCH_3	CALL_61
0x4002be3	      0xb801000000	                              mov eax, 1	      1171	state.c	FUNCTION_25	SWITCH_3	CALL_61
0x4002be8	          0x8b4b30	            mov ecx, dword [rbx + 0x30] 	      1173	state.c	FUNCTION_25	SWITCH_3
0x4002beb	          0x8d7101	                      lea esi, [rcx + 1]	      1174	state.c	FUNCTION_25	SWITCH_3
0x4002bee	          0x8b7b34	            mov edi, dword [rbx + 0x34] 	      1175	state.c	FUNCTION_25	SWITCH_3
0x4002bf1	             0x1f8	                            add eax, edi	      1176	state.c	FUNCTION_25	SWITCH_3
0x4002bf3	          0x4c63c1	                          movsxd r8, ecx	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x4002bf6	        0x488b5358	            mov rdx, qword [rbx + 0x58] 	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x4002bfa	      0x42f6048201	               test byte [rdx + r8*4], 1	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x4002bff	            0x7416	                            je 0x4002c17	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x4002c01	          0x8b532c	            mov edx, dword [rbx + 0x2c] 	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x4002c04	          0x4189d0	                            mov r8d, edx	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x4002c07	        0x41c1e81f	                           shr r8d, 0x1f	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x4002c0b	          0x4401c2	                            add edx, r8d	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x4002c0e	            0xd1fa	                              sar edx, 1	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x4002c10	            0x39c2	                            cmp edx, eax	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x4002c12	           0xf4ec2	                         cmovle eax, edx	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x4002c15	            0xeb07	                           jmp 0x4002c1e	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x4002c17	          0x39432c	            cmp dword [rbx + 0x2c], eax 	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x4002c1a	         0xf4e432c	          cmovle eax, dword [rbx + 0x2c]	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x4002c1e	          0x4889f2	                            mov rdx, rsi	      1179	state.c	FUNCTION_25	SWITCH_3	CALL_64
0x4002c21	        0x48c1e220	                           shl rdx, 0x20	      1179	state.c	FUNCTION_25	SWITCH_3	CALL_64
0x4002c25	            0x89ce	                            mov esi, ecx	      1179	state.c	FUNCTION_25	SWITCH_3	CALL_64
0x4002c27	          0x4809d6	                             or rsi, rdx	      1179	state.c	FUNCTION_25	SWITCH_3	CALL_64
0x4002c2a	        0x48c1e020	                           shl rax, 0x20	      1179	state.c	FUNCTION_25	SWITCH_3	CALL_64
0x4002c2e	            0x89fa	                            mov edx, edi	      1179	state.c	FUNCTION_25	SWITCH_3	CALL_64
0x4002c30	          0x4809c2	                             or rdx, rax	      1179	state.c	FUNCTION_25	SWITCH_3	CALL_64
0x4002c33	      0xb900000000	                              mov ecx, 0	      1179	state.c	FUNCTION_25	SWITCH_3	CALL_64
0x4002c38	          0x4889df	                            mov rdi, rbx	      1179	state.c	FUNCTION_25	SWITCH_3	CALL_64
0x4002c3b	      0xe8e8d4ffff	                          call sym.erase	      1179	state.c	FUNCTION_25	SWITCH_3	CALL_64
0x4002c40	      0xe9df0a0000	                           jmp 0x4003724	      1180	state.c	FUNCTION_25	SWITCH_3
0x4002c45	          0x488b36	                    mov rsi, qword [rsi]	      1183	state.c	FUNCTION_25	SWITCH_3	CALL_65
0x4002c48	          0x4889f0	                            mov rax, rsi	      1183	state.c	FUNCTION_25	SWITCH_3	CALL_65
0x4002c4b	      0x25ffffff7f	                     and eax, 0x7fffffff	      1183	state.c	FUNCTION_25	SWITCH_3	CALL_65
0x4002c50	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1183	state.c	FUNCTION_25	SWITCH_3	CALL_65
0x4002c56	            0x740b	                            je 0x4002c63	      1183	state.c	FUNCTION_25	SWITCH_3	CALL_65
0x4002c58	    0x81e6ffffff7f	                     and esi, 0x7fffffff	      1183	state.c	FUNCTION_25	SWITCH_3	CALL_65
0x4002c5e	          0x4885c0	                           test rax, rax	      1183	state.c	FUNCTION_25	SWITCH_3	CALL_65
0x4002c61	            0x7505	                           jne 0x4002c68	      1183	state.c	FUNCTION_25	SWITCH_3	CALL_65
0x4002c63	      0xbe01000000	                              mov esi, 1	      1183	state.c	FUNCTION_25	SWITCH_3	CALL_65
0x4002c68	      0xbaffffffff	                     mov edx, 0xffffffff	      1184	state.c	FUNCTION_25	SWITCH_3	CALL_66
0x4002c6d	          0x4889df	                            mov rdi, rbx	      1184	state.c	FUNCTION_25	SWITCH_3	CALL_66
0x4002c70	      0xe84fd5ffff	                            call sym.tab	      1184	state.c	FUNCTION_25	SWITCH_3	CALL_66
0x4002c75	      0xe9aa0a0000	                           jmp 0x4003724	      1185	state.c	FUNCTION_25	SWITCH_3
0x4002c7a	          0x488b06	                    mov rax, qword [rsi]	      1188	state.c	FUNCTION_25	SWITCH_3	CALL_67
0x4002c7d	          0x4889c2	                            mov rdx, rax	      1188	state.c	FUNCTION_25	SWITCH_3	CALL_67
0x4002c80	    0x81e2ffffff7f	                     and edx, 0x7fffffff	      1188	state.c	FUNCTION_25	SWITCH_3	CALL_67
0x4002c86	      0x25ffffff7f	                     and eax, 0x7fffffff	      1188	state.c	FUNCTION_25	SWITCH_3	CALL_67
0x4002c8b	    0x4881faffffff	                     cmp rdx, 0x3fffffff	      1188	state.c	FUNCTION_25	SWITCH_3	CALL_67
0x4002c92	      0xba01000000	                              mov edx, 1	      1188	state.c	FUNCTION_25	SWITCH_3	CALL_67
0x4002c97	           0xf44c2	                          cmove eax, edx	      1188	state.c	FUNCTION_25	SWITCH_3	CALL_67
0x4002c9a	          0x83e801	                              sub eax, 1	      1189	state.c	FUNCTION_25	SWITCH_3
0x4002c9d	          0x894334	             mov dword [rbx + 0x34], eax	      1189	state.c	FUNCTION_25	SWITCH_3
0x4002ca0	    0xc74338000000	               mov dword [rbx + 0x38], 0	      1190	state.c	FUNCTION_25	SWITCH_3
0x4002ca7	      0xe9780a0000	                           jmp 0x4003724	      1191	state.c	FUNCTION_25	SWITCH_3
0x4002cac	          0x488b06	                    mov rax, qword [rsi]	      1194	state.c	FUNCTION_25	SWITCH_3	CALL_68
0x4002caf	          0x4889c2	                            mov rdx, rax	      1194	state.c	FUNCTION_25	SWITCH_3	CALL_68
0x4002cb2	    0x81e2ffffff7f	                     and edx, 0x7fffffff	      1194	state.c	FUNCTION_25	SWITCH_3	CALL_68
0x4002cb8	    0x4881faffffff	                     cmp rdx, 0x3fffffff	      1194	state.c	FUNCTION_25	SWITCH_3	CALL_68
0x4002cbf	            0x740a	                            je 0x4002ccb	      1194	state.c	FUNCTION_25	SWITCH_3	CALL_68
0x4002cc1	      0x25ffffff7f	                     and eax, 0x7fffffff	      1194	state.c	FUNCTION_25	SWITCH_3	CALL_68
0x4002cc6	          0x4885d2	                           test rdx, rdx	      1194	state.c	FUNCTION_25	SWITCH_3	CALL_68
0x4002cc9	            0x7505	                           jne 0x4002cd0	      1194	state.c	FUNCTION_25	SWITCH_3	CALL_68
0x4002ccb	      0xb801000000	                              mov eax, 1	      1194	state.c	FUNCTION_25	SWITCH_3	CALL_68
0x4002cd0	           0x14334	             add dword [rbx + 0x34], eax	      1195	state.c	FUNCTION_25	SWITCH_3
0x4002cd3	    0xc74338000000	               mov dword [rbx + 0x38], 0	      1196	state.c	FUNCTION_25	SWITCH_3
0x4002cda	      0xe9450a0000	                           jmp 0x4003724	      1197	state.c	FUNCTION_25	SWITCH_3
0x4002cdf	          0x488b06	                    mov rax, qword [rsi]	      1200	state.c	FUNCTION_25	SWITCH_3	CALL_69
0x4002ce2	          0x4889c2	                            mov rdx, rax	      1200	state.c	FUNCTION_25	SWITCH_3	CALL_69
0x4002ce5	    0x81e2ffffff7f	                     and edx, 0x7fffffff	      1200	state.c	FUNCTION_25	SWITCH_3	CALL_69
0x4002ceb	    0x4881faffffff	                     cmp rdx, 0x3fffffff	      1200	state.c	FUNCTION_25	SWITCH_3	CALL_69
0x4002cf2	            0x740b	                            je 0x4002cff	      1200	state.c	FUNCTION_25	SWITCH_3	CALL_69
0x4002cf4	      0xa9ffffff7f	                    test eax, 0x7fffffff	      1201	state.c	FUNCTION_25	SWITCH_3	IF_17
0x4002cf9	     0xf85250a0000	                           jne 0x4003724	      1201	state.c	FUNCTION_25	SWITCH_3	IF_17
0x4002cff	      0xba00000000	                              mov edx, 0	      1203	state.c	FUNCTION_25	SWITCH_3	CALL_70
0x4002d04	      0xbe9b000000	                           mov esi, 0x9b	      1203	state.c	FUNCTION_25	SWITCH_3	CALL_70
0x4002d09	          0x488b3b	                    mov rdi, qword [rbx]	      1203	state.c	FUNCTION_25	SWITCH_3	CALL_70
0x4002d0c	      0xb800000000	                              mov eax, 0	      1203	state.c	FUNCTION_25	SWITCH_3	CALL_70
0x4002d11	      0xe800000000	                          call 0x4002d16	      1203	state.c	FUNCTION_25	SWITCH_3	CALL_70
0x4002d16	      0xe9090a0000	                           jmp 0x4003724	      1203	state.c	FUNCTION_25	SWITCH_3	CALL_70
0x4002d1b	    0x41b900000000	                              mov r9d, 0	      1208	state.c	FUNCTION_25	SWITCH_3	CALL_72
0x4002d21	    0x41b864000000	                           mov r8d, 0x64	      1208	state.c	FUNCTION_25	SWITCH_3	CALL_72
0x4002d27	      0xb900000000	                              mov ecx, 0	      1208	state.c	FUNCTION_25	SWITCH_3	CALL_72
0x4002d2c	      0xba00000000	                              mov edx, 0	      1208	state.c	FUNCTION_25	SWITCH_3	CALL_72
0x4002d31	      0xbe9b000000	                           mov esi, 0x9b	      1208	state.c	FUNCTION_25	SWITCH_3	CALL_72
0x4002d36	          0x488b3b	                    mov rdi, qword [rbx]	      1208	state.c	FUNCTION_25	SWITCH_3	CALL_72
0x4002d39	      0xb800000000	                              mov eax, 0	      1208	state.c	FUNCTION_25	SWITCH_3	CALL_72
0x4002d3e	      0xe800000000	                          call 0x4002d43	      1208	state.c	FUNCTION_25	SWITCH_3	CALL_72
0x4002d43	      0xe9dc090000	                           jmp 0x4003724	      1209	state.c	FUNCTION_25	SWITCH_3
0x4002d48	          0x488b06	                    mov rax, qword [rsi]	      1212	state.c	FUNCTION_25	SWITCH_3	CALL_73
0x4002d4b	          0x4889c2	                            mov rdx, rax	      1212	state.c	FUNCTION_25	SWITCH_3	CALL_73
0x4002d4e	    0x81e2ffffff7f	                     and edx, 0x7fffffff	      1212	state.c	FUNCTION_25	SWITCH_3	CALL_73
0x4002d54	      0x25ffffff7f	                     and eax, 0x7fffffff	      1212	state.c	FUNCTION_25	SWITCH_3	CALL_73
0x4002d59	    0x4881faffffff	                     cmp rdx, 0x3fffffff	      1212	state.c	FUNCTION_25	SWITCH_3	CALL_73
0x4002d60	      0xba01000000	                              mov edx, 1	      1212	state.c	FUNCTION_25	SWITCH_3	CALL_73
0x4002d65	           0xf44c2	                          cmove eax, edx	      1212	state.c	FUNCTION_25	SWITCH_3	CALL_73
0x4002d68	          0x83e801	                              sub eax, 1	      1213	state.c	FUNCTION_25	SWITCH_3
0x4002d6b	          0x894330	             mov dword [rbx + 0x30], eax	      1213	state.c	FUNCTION_25	SWITCH_3
0x4002d6e	    0xf68395000000	               test byte [rbx + 0x95], 4	      1214	state.c	FUNCTION_25	SWITCH_3	IF_18
0x4002d75	            0x7406	                            je 0x4002d7d	      1214	state.c	FUNCTION_25	SWITCH_3	IF_18
0x4002d77	           0x3433c	             add eax, dword [rbx + 0x3c]	      1215	state.c	FUNCTION_25	SWITCH_3	IF_18
0x4002d7a	          0x894330	             mov dword [rbx + 0x30], eax	      1215	state.c	FUNCTION_25	SWITCH_3	IF_18
0x4002d7d	    0xc74338000000	               mov dword [rbx + 0x38], 0	      1216	state.c	FUNCTION_25	SWITCH_3
0x4002d84	      0xe99b090000	                           jmp 0x4003724	      1217	state.c	FUNCTION_25	SWITCH_3
0x4002d89	          0x488b06	                    mov rax, qword [rsi]	      1220	state.c	FUNCTION_25	SWITCH_3	CALL_74
0x4002d8c	          0x4889c2	                            mov rdx, rax	      1220	state.c	FUNCTION_25	SWITCH_3	CALL_74
0x4002d8f	    0x81e2ffffff7f	                     and edx, 0x7fffffff	      1220	state.c	FUNCTION_25	SWITCH_3	CALL_74
0x4002d95	    0x4881faffffff	                     cmp rdx, 0x3fffffff	      1220	state.c	FUNCTION_25	SWITCH_3	CALL_74
0x4002d9c	            0x740a	                            je 0x4002da8	      1220	state.c	FUNCTION_25	SWITCH_3	CALL_74
0x4002d9e	      0x25ffffff7f	                     and eax, 0x7fffffff	      1220	state.c	FUNCTION_25	SWITCH_3	CALL_74
0x4002da3	          0x4885d2	                           test rdx, rdx	      1220	state.c	FUNCTION_25	SWITCH_3	CALL_74
0x4002da6	            0x7505	                           jne 0x4002dad	      1220	state.c	FUNCTION_25	SWITCH_3	CALL_74
0x4002da8	      0xb801000000	                              mov eax, 1	      1220	state.c	FUNCTION_25	SWITCH_3	CALL_74
0x4002dad	           0x14330	             add dword [rbx + 0x30], eax	      1221	state.c	FUNCTION_25	SWITCH_3
0x4002db0	    0xc74338000000	               mov dword [rbx + 0x38], 0	      1222	state.c	FUNCTION_25	SWITCH_3
0x4002db7	      0xe968090000	                           jmp 0x4003724	      1223	state.c	FUNCTION_25	SWITCH_3
0x4002dbc	          0x488b06	                    mov rax, qword [rsi]	      1226	state.c	FUNCTION_25	SWITCH_3	CALL_75
0x4002dbf	          0x4889c1	                            mov rcx, rax	      1226	state.c	FUNCTION_25	SWITCH_3	CALL_75
0x4002dc2	    0x81e1ffffff7f	                     and ecx, 0x7fffffff	      1226	state.c	FUNCTION_25	SWITCH_3	CALL_75
0x4002dc8	      0x25ffffff7f	                     and eax, 0x7fffffff	      1226	state.c	FUNCTION_25	SWITCH_3	CALL_75
0x4002dcd	    0x4881f9ffffff	                     cmp rcx, 0x3fffffff	      1226	state.c	FUNCTION_25	SWITCH_3	CALL_75
0x4002dd4	      0xb901000000	                              mov ecx, 1	      1226	state.c	FUNCTION_25	SWITCH_3	CALL_75
0x4002dd9	           0xf44c1	                          cmove eax, ecx	      1226	state.c	FUNCTION_25	SWITCH_3	CALL_75
0x4002ddc	          0x83fa01	                              cmp edx, 1	      1227	state.c	FUNCTION_25	SWITCH_3	CALL_77
0x4002ddf	            0x7e22	                           jle 0x4002e03	      1227	state.c	FUNCTION_25	SWITCH_3	CALL_77
0x4002de1	        0x488b4e08	                mov rcx, qword [rsi + 8]	      1227	state.c	FUNCTION_25	SWITCH_3	CALL_77
0x4002de5	          0x4889ca	                            mov rdx, rcx	      1227	state.c	FUNCTION_25	SWITCH_3	CALL_77
0x4002de8	    0x81e2ffffff7f	                     and edx, 0x7fffffff	      1227	state.c	FUNCTION_25	SWITCH_3	CALL_77
0x4002dee	    0x81e1ffffff7f	                     and ecx, 0x7fffffff	      1227	state.c	FUNCTION_25	SWITCH_3	CALL_77
0x4002df4	    0x4881faffffff	                     cmp rdx, 0x3fffffff	      1227	state.c	FUNCTION_25	SWITCH_3	CALL_77
0x4002dfb	      0xba01000000	                              mov edx, 1	      1227	state.c	FUNCTION_25	SWITCH_3	CALL_77
0x4002e00	           0xf44ca	                          cmove ecx, edx	      1227	state.c	FUNCTION_25	SWITCH_3	CALL_77
0x4002e03	          0x83e801	                              sub eax, 1	      1229	state.c	FUNCTION_25	SWITCH_3
0x4002e06	          0x894330	             mov dword [rbx + 0x30], eax	      1229	state.c	FUNCTION_25	SWITCH_3
0x4002e09	          0x83e901	                              sub ecx, 1	      1230	state.c	FUNCTION_25	SWITCH_3
0x4002e0c	          0x894b34	             mov dword [rbx + 0x34], ecx	      1230	state.c	FUNCTION_25	SWITCH_3
0x4002e0f	     0xfb693950000	           movzx edx, byte [rbx + 0x95] 	      1231	state.c	FUNCTION_25	SWITCH_3	IF_19
0x4002e16	          0xf6c204	                              test dl, 4	      1231	state.c	FUNCTION_25	SWITCH_3	IF_19
0x4002e19	            0x7418	                            je 0x4002e33	      1231	state.c	FUNCTION_25	SWITCH_3	IF_19
0x4002e1b	           0x3433c	             add eax, dword [rbx + 0x3c]	      1232	state.c	FUNCTION_25	SWITCH_3	IF_19
0x4002e1e	          0x894330	             mov dword [rbx + 0x30], eax	      1232	state.c	FUNCTION_25	SWITCH_3	IF_19
0x4002e21	      0xb800000000	                              mov eax, 0	      1233	state.c	FUNCTION_25	SWITCH_3	IF_19	CALL_78
0x4002e26	          0xf6c210	                           test dl, 0x10	      1233	state.c	FUNCTION_25	SWITCH_3	IF_19	CALL_78
0x4002e29	            0x7403	                            je 0x4002e2e	      1233	state.c	FUNCTION_25	SWITCH_3	IF_19	CALL_78
0x4002e2b	          0x8b4344	            mov eax, dword [rbx + 0x44] 	      1233	state.c	FUNCTION_25	SWITCH_3	IF_19	CALL_78
0x4002e2e	             0x1c1	                            add ecx, eax	      1233	state.c	FUNCTION_25	SWITCH_3	IF_19	CALL_78
0x4002e30	          0x894b34	             mov dword [rbx + 0x34], ecx	      1233	state.c	FUNCTION_25	SWITCH_3	IF_19	CALL_78
0x4002e33	    0xc74338000000	               mov dword [rbx + 0x38], 0	      1235	state.c	FUNCTION_25	SWITCH_3
0x4002e3a	      0xe9e5080000	                           jmp 0x4003724	      1236	state.c	FUNCTION_25	SWITCH_3
0x4002e3f	          0x488b06	                    mov rax, qword [rsi]	      1239	state.c	FUNCTION_25	SWITCH_3	CALL_79
0x4002e42	          0x4889c2	                            mov rdx, rax	      1239	state.c	FUNCTION_25	SWITCH_3	CALL_79
0x4002e45	    0x81e2ffffff7f	                     and edx, 0x7fffffff	      1239	state.c	FUNCTION_25	SWITCH_3	CALL_79
0x4002e4b	    0x4881faffffff	                     cmp rdx, 0x3fffffff	      1239	state.c	FUNCTION_25	SWITCH_3	CALL_79
0x4002e52	            0x742f	                            je 0x4002e83	      1239	state.c	FUNCTION_25	SWITCH_3	CALL_79
0x4002e54	            0x89c2	                            mov edx, eax	      1241	state.c	FUNCTION_25	SWITCH_3	SWITCH_6
0x4002e56	    0x81e2ffffff7f	                     and edx, 0x7fffffff	      1241	state.c	FUNCTION_25	SWITCH_3	SWITCH_6
0x4002e5c	      0xb800000000	                              mov eax, 0	      1256	state.c	FUNCTION_25	SWITCH_3	SWITCH_6
0x4002e61	          0x83fa05	                              cmp edx, 5	      1241	state.c	FUNCTION_25	SWITCH_3	SWITCH_6
0x4002e64	     0xf87d0090000	                            ja 0x400383a	      1241	state.c	FUNCTION_25	SWITCH_3	SWITCH_6
0x4002e6a	            0x89d0	                            mov eax, edx	      1241	state.c	FUNCTION_25	SWITCH_3	SWITCH_6
0x4002e6c	    0xff24c5000000	                       jmp qword [rax*8]	      1241	state.c	FUNCTION_25	SWITCH_3	SWITCH_6
0x4002e73	      0xbd00000000	                              mov ebp, 0	      1247	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	FOR_4
0x4002e78	        0x837b2c00	               cmp dword [rbx + 0x2c], 0	      1247	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	FOR_4
0x4002e7c	            0x7f15	                            jg 0x4002e93	      1247	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	FOR_4
0x4002e7e	      0xe9a1080000	                           jmp 0x4003724	      1247	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	FOR_4
0x4002e83	          0x8b7334	            mov esi, dword [rbx + 0x34] 	      1243	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	CALL_80
0x4002e86	          0x4889df	                            mov rdi, rbx	      1243	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	CALL_80
0x4002e89	      0xe8cbd2ffff	              call sym.clear_col_tabstop	      1243	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	CALL_80
0x4002e8e	      0xe991080000	                           jmp 0x4003724	      1244	state.c	FUNCTION_25	SWITCH_3	SWITCH_6
0x4002e93	            0x89ee	                            mov esi, ebp	      1248	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	CALL_81
0x4002e95	          0x4889df	                            mov rdi, rbx	      1248	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	CALL_81
0x4002e98	      0xe8bcd2ffff	              call sym.clear_col_tabstop	      1248	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	CALL_81
0x4002e9d	          0x83c501	                              add ebp, 1	      1247	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	FOR_4
0x4002ea0	          0x396b2c	            cmp dword [rbx + 0x2c], ebp 	      1247	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	FOR_4
0x4002ea3	            0x7fee	                            jg 0x4002e93	      1247	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	FOR_4
0x4002ea5	      0xe97a080000	                           jmp 0x4003724	      1247	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	FOR_4
0x4002eaa	          0x488b06	                    mov rax, qword [rsi]	      1261	state.c	FUNCTION_25	SWITCH_3	IF_20	CALL_82
0x4002ead	          0x4889c2	                            mov rdx, rax	      1261	state.c	FUNCTION_25	SWITCH_3	IF_20	CALL_82
0x4002eb0	    0x81e2ffffff7f	                     and edx, 0x7fffffff	      1261	state.c	FUNCTION_25	SWITCH_3	IF_20	CALL_82
0x4002eb6	    0x4881faffffff	                     cmp rdx, 0x3fffffff	      1261	state.c	FUNCTION_25	SWITCH_3	IF_20	CALL_82
0x4002ebd	     0xf8461080000	                            je 0x4003724	      1261	state.c	FUNCTION_25	SWITCH_3	IF_20	CALL_82
0x4002ec3	      0x25ffffff7f	                     and eax, 0x7fffffff	       713	state.c	FUNCTION_22	SWITCH_1
0x4002ec8	          0x83f804	                              cmp eax, 4	       713	state.c	FUNCTION_22	SWITCH_1
0x4002ecb	            0x740a	                            je 0x4002ed7	       713	state.c	FUNCTION_22	SWITCH_1
0x4002ecd	          0x83f814	                           cmp eax, 0x14	       713	state.c	FUNCTION_22	SWITCH_1
0x4002ed0	            0x7411	                            je 0x4002ee3	       713	state.c	FUNCTION_22	SWITCH_1
0x4002ed2	      0xe94d080000	                           jmp 0x4003724	       713	state.c	FUNCTION_22	SWITCH_1
0x4002ed7	    0x808b94000000	                 or byte [rbx + 0x94], 8	       715	state.c	FUNCTION_22	SWITCH_1
0x4002ede	      0xe941080000	                           jmp 0x4003724	       715	state.c	FUNCTION_22	SWITCH_1
0x4002ee3	    0x808b94000000	              or byte [rbx + 0x94], 0x10	       719	state.c	FUNCTION_22	SWITCH_1
0x4002eea	      0xe935080000	                           jmp 0x4003724	       719	state.c	FUNCTION_22	SWITCH_1
0x4002eef	          0x488b36	                    mov rsi, qword [rsi]	      1266	state.c	FUNCTION_25	SWITCH_3	IF_21	CALL_86
0x4002ef2	          0x4889f0	                            mov rax, rsi	      1266	state.c	FUNCTION_25	SWITCH_3	IF_21	CALL_86
0x4002ef5	      0x25ffffff7f	                     and eax, 0x7fffffff	      1266	state.c	FUNCTION_25	SWITCH_3	IF_21	CALL_86
0x4002efa	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1266	state.c	FUNCTION_25	SWITCH_3	IF_21	CALL_86
0x4002f00	     0xf841e080000	                            je 0x4003724	      1266	state.c	FUNCTION_25	SWITCH_3	IF_21	CALL_86
0x4002f06	    0x81e6ffffff7f	                     and esi, 0x7fffffff	      1267	state.c	FUNCTION_25	SWITCH_3	CALL_88
0x4002f0c	      0xba01000000	                              mov edx, 1	      1267	state.c	FUNCTION_25	SWITCH_3	CALL_88
0x4002f11	          0x4889df	                            mov rdi, rbx	      1267	state.c	FUNCTION_25	SWITCH_3	CALL_88
0x4002f14	      0xe851e9ffff	                   call sym.set_dec_mode	      1267	state.c	FUNCTION_25	SWITCH_3	CALL_88
0x4002f19	      0xe906080000	                           jmp 0x4003724	      1267	state.c	FUNCTION_25	SWITCH_3	CALL_88
0x4002f1e	          0x488b06	                    mov rax, qword [rsi]	      1271	state.c	FUNCTION_25	SWITCH_3	CALL_89
0x4002f21	          0x4889c2	                            mov rdx, rax	      1271	state.c	FUNCTION_25	SWITCH_3	CALL_89
0x4002f24	    0x81e2ffffff7f	                     and edx, 0x7fffffff	      1271	state.c	FUNCTION_25	SWITCH_3	CALL_89
0x4002f2a	    0x4881faffffff	                     cmp rdx, 0x3fffffff	      1271	state.c	FUNCTION_25	SWITCH_3	CALL_89
0x4002f31	            0x740a	                            je 0x4002f3d	      1271	state.c	FUNCTION_25	SWITCH_3	CALL_89
0x4002f33	      0x25ffffff7f	                     and eax, 0x7fffffff	      1271	state.c	FUNCTION_25	SWITCH_3	CALL_89
0x4002f38	          0x4885d2	                           test rdx, rdx	      1271	state.c	FUNCTION_25	SWITCH_3	CALL_89
0x4002f3b	            0x7505	                           jne 0x4002f42	      1271	state.c	FUNCTION_25	SWITCH_3	CALL_89
0x4002f3d	      0xb801000000	                              mov eax, 1	      1271	state.c	FUNCTION_25	SWITCH_3	CALL_89
0x4002f42	          0x294334	             sub dword [rbx + 0x34], eax	      1272	state.c	FUNCTION_25	SWITCH_3
0x4002f45	    0xc74338000000	               mov dword [rbx + 0x38], 0	      1273	state.c	FUNCTION_25	SWITCH_3
0x4002f4c	      0xe9d3070000	                           jmp 0x4003724	      1274	state.c	FUNCTION_25	SWITCH_3
0x4002f51	          0x488b06	                    mov rax, qword [rsi]	      1277	state.c	FUNCTION_25	SWITCH_3	CALL_90
0x4002f54	          0x4889c2	                            mov rdx, rax	      1277	state.c	FUNCTION_25	SWITCH_3	CALL_90
0x4002f57	    0x81e2ffffff7f	                     and edx, 0x7fffffff	      1277	state.c	FUNCTION_25	SWITCH_3	CALL_90
0x4002f5d	    0x4881faffffff	                     cmp rdx, 0x3fffffff	      1277	state.c	FUNCTION_25	SWITCH_3	CALL_90
0x4002f64	            0x740a	                            je 0x4002f70	      1277	state.c	FUNCTION_25	SWITCH_3	CALL_90
0x4002f66	      0x25ffffff7f	                     and eax, 0x7fffffff	      1277	state.c	FUNCTION_25	SWITCH_3	CALL_90
0x4002f6b	          0x4885d2	                           test rdx, rdx	      1277	state.c	FUNCTION_25	SWITCH_3	CALL_90
0x4002f6e	            0x7505	                           jne 0x4002f75	      1277	state.c	FUNCTION_25	SWITCH_3	CALL_90
0x4002f70	      0xb801000000	                              mov eax, 1	      1277	state.c	FUNCTION_25	SWITCH_3	CALL_90
0x4002f75	          0x294330	             sub dword [rbx + 0x30], eax	      1278	state.c	FUNCTION_25	SWITCH_3
0x4002f78	    0xc74338000000	               mov dword [rbx + 0x38], 0	      1279	state.c	FUNCTION_25	SWITCH_3
0x4002f7f	      0xe9a0070000	                           jmp 0x4003724	      1280	state.c	FUNCTION_25	SWITCH_3
0x4002f84	          0x488b06	                    mov rax, qword [rsi]	      1283	state.c	FUNCTION_25	SWITCH_3	IF_22	CALL_91
0x4002f87	          0x4889c2	                            mov rdx, rax	      1283	state.c	FUNCTION_25	SWITCH_3	IF_22	CALL_91
0x4002f8a	    0x81e2ffffff7f	                     and edx, 0x7fffffff	      1283	state.c	FUNCTION_25	SWITCH_3	IF_22	CALL_91
0x4002f90	    0x4881faffffff	                     cmp rdx, 0x3fffffff	      1283	state.c	FUNCTION_25	SWITCH_3	IF_22	CALL_91
0x4002f97	     0xf8487070000	                            je 0x4003724	      1283	state.c	FUNCTION_25	SWITCH_3	IF_22	CALL_91
0x4002f9d	      0x25ffffff7f	                     and eax, 0x7fffffff	       713	state.c	FUNCTION_22	SWITCH_1
0x4002fa2	          0x83f804	                              cmp eax, 4	       713	state.c	FUNCTION_22	SWITCH_1
0x4002fa5	            0x740a	                            je 0x4002fb1	       713	state.c	FUNCTION_22	SWITCH_1
0x4002fa7	          0x83f814	                           cmp eax, 0x14	       713	state.c	FUNCTION_22	SWITCH_1
0x4002faa	            0x7411	                            je 0x4002fbd	       713	state.c	FUNCTION_22	SWITCH_1
0x4002fac	      0xe973070000	                           jmp 0x4003724	       713	state.c	FUNCTION_22	SWITCH_1
0x4002fb1	    0x80a394000000	             and byte [rbx + 0x94], 0xf7	       715	state.c	FUNCTION_22	SWITCH_1
0x4002fb8	      0xe967070000	                           jmp 0x4003724	       715	state.c	FUNCTION_22	SWITCH_1
0x4002fbd	    0x80a394000000	             and byte [rbx + 0x94], 0xef	       719	state.c	FUNCTION_22	SWITCH_1
0x4002fc4	      0xe95b070000	                           jmp 0x4003724	       719	state.c	FUNCTION_22	SWITCH_1
0x4002fc9	          0x488b36	                    mov rsi, qword [rsi]	      1288	state.c	FUNCTION_25	SWITCH_3	IF_23	CALL_95
0x4002fcc	          0x4889f0	                            mov rax, rsi	      1288	state.c	FUNCTION_25	SWITCH_3	IF_23	CALL_95
0x4002fcf	      0x25ffffff7f	                     and eax, 0x7fffffff	      1288	state.c	FUNCTION_25	SWITCH_3	IF_23	CALL_95
0x4002fd4	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1288	state.c	FUNCTION_25	SWITCH_3	IF_23	CALL_95
0x4002fda	     0xf8444070000	                            je 0x4003724	      1288	state.c	FUNCTION_25	SWITCH_3	IF_23	CALL_95
0x4002fe0	    0x81e6ffffff7f	                     and esi, 0x7fffffff	      1289	state.c	FUNCTION_25	SWITCH_3	CALL_97
0x4002fe6	      0xba00000000	                              mov edx, 0	      1289	state.c	FUNCTION_25	SWITCH_3	CALL_97
0x4002feb	          0x4889df	                            mov rdi, rbx	      1289	state.c	FUNCTION_25	SWITCH_3	CALL_97
0x4002fee	      0xe877e8ffff	                   call sym.set_dec_mode	      1289	state.c	FUNCTION_25	SWITCH_3	CALL_97
0x4002ff3	      0xe92c070000	                           jmp 0x4003724	      1289	state.c	FUNCTION_25	SWITCH_3	CALL_97
0x4002ff8	          0x4889df	                            mov rdi, rbx	      1293	state.c	FUNCTION_25	SWITCH_3	CALL_98
0x4002ffb	      0xe800000000	                          call 0x4003000	      1293	state.c	FUNCTION_25	SWITCH_3	CALL_98
0x4003000	      0xe91f070000	                           jmp 0x4003724	      1294	state.c	FUNCTION_25	SWITCH_3
0x4003005	          0x488b06	                    mov rax, qword [rsi]	      1298	state.c	FUNCTION_25	SWITCH_3	CALL_100
0x4003008	          0x4889c2	                            mov rdx, rax	      1298	state.c	FUNCTION_25	SWITCH_3	CALL_100
0x400300b	    0x81e2ffffff7f	                     and edx, 0x7fffffff	      1298	state.c	FUNCTION_25	SWITCH_3	CALL_100
0x4003011	    0x4881faffffff	                     cmp rdx, 0x3fffffff	      1298	state.c	FUNCTION_25	SWITCH_3	CALL_100
0x4003018	     0xf8406070000	                            je 0x4003724	      1298	state.c	FUNCTION_25	SWITCH_3	CALL_100
0x400301e	      0x25ffffff7f	                     and eax, 0x7fffffff	      1298	state.c	FUNCTION_25	SWITCH_3	CALL_100
0x4003023	        0x4183fa3f	                          cmp r10d, 0x3f	      1301	state.c	FUNCTION_25	SWITCH_3
0x4003027	      0xb900000000	                              mov ecx, 0	      1301	state.c	FUNCTION_25	SWITCH_3
0x400302c	      0xba00000000	                              mov edx, 0	      1301	state.c	FUNCTION_25	SWITCH_3
0x4003031	        0x480f45ca	                         cmovne rcx, rdx	      1301	state.c	FUNCTION_25	SWITCH_3
0x4003035	          0x83f805	                              cmp eax, 5	      1303	state.c	FUNCTION_25	SWITCH_3	SWITCH_7
0x4003038	            0x740a	                            je 0x4003044	      1303	state.c	FUNCTION_25	SWITCH_3	SWITCH_7
0x400303a	          0x83f806	                              cmp eax, 6	      1303	state.c	FUNCTION_25	SWITCH_3	SWITCH_7
0x400303d	            0x7421	                            je 0x4003060	      1303	state.c	FUNCTION_25	SWITCH_3	SWITCH_7
0x400303f	      0xe9e0060000	                           jmp 0x4003724	      1303	state.c	FUNCTION_25	SWITCH_3	SWITCH_7
0x4003044	      0xba00000000	                              mov edx, 0	      1308	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_101
0x4003049	      0xbe9b000000	                           mov esi, 0x9b	      1308	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_101
0x400304e	          0x488b3b	                    mov rdi, qword [rbx]	      1308	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_101
0x4003051	      0xb800000000	                              mov eax, 0	      1308	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_101
0x4003056	      0xe800000000	                          call 0x400305b	      1308	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_101
0x400305b	      0xe9c4060000	                           jmp 0x4003724	      1309	state.c	FUNCTION_25	SWITCH_3	SWITCH_7
0x4003060	          0x8b5334	            mov edx, dword [rbx + 0x34] 	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_102
0x4003063	          0x8b4330	            mov eax, dword [rbx + 0x30] 	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_102
0x4003066	        0x448d4a01	                      lea r9d, [rdx + 1]	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_102
0x400306a	        0x448d4001	                      lea r8d, [rax + 1]	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_102
0x400306e	      0xba00000000	                              mov edx, 0	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_102
0x4003073	      0xbe9b000000	                           mov esi, 0x9b	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_102
0x4003078	          0x488b3b	                    mov rdi, qword [rbx]	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_102
0x400307b	      0xb800000000	                              mov eax, 0	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_102
0x4003080	      0xe800000000	                          call 0x4003085	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_102
0x4003085	      0xe99a060000	                           jmp 0x4003724	      1312	state.c	FUNCTION_25	SWITCH_3	SWITCH_7
0x400308a	      0xbe00000000	                              mov esi, 0	      1319	state.c	FUNCTION_25	SWITCH_3	CALL_104
0x400308f	          0x4889df	                            mov rdi, rbx	      1319	state.c	FUNCTION_25	SWITCH_3	CALL_104
0x4003092	      0xe800000000	                          call 0x4003097	      1319	state.c	FUNCTION_25	SWITCH_3	CALL_104
0x4003097	      0xe988060000	                           jmp 0x4003724	      1320	state.c	FUNCTION_25	SWITCH_3
0x400309c	          0x488b0e	                    mov rcx, qword [rsi]	      1323	state.c	FUNCTION_25	SWITCH_3	CALL_108
0x400309f	    0x81e1ffffff7f	                     and ecx, 0x7fffffff	      1323	state.c	FUNCTION_25	SWITCH_3	CALL_108
0x40030a5	    0x81f9e8030000	                          cmp ecx, 0x3e8	       827	state.c	FUNCTION_24	SWITCH_1
0x40030ab	     0xf8467010000	                            je 0x4003218	       827	state.c	FUNCTION_24	SWITCH_1
0x40030b1	    0x81f9e8030000	                          cmp ecx, 0x3e8	       827	state.c	FUNCTION_24	SWITCH_1
0x40030b7	            0x7f4e	                            jg 0x4003107	       827	state.c	FUNCTION_24	SWITCH_1
0x40030b9	          0x83f907	                              cmp ecx, 7	       827	state.c	FUNCTION_24	SWITCH_1
0x40030bc	     0xf8402010000	                            je 0x40031c4	       827	state.c	FUNCTION_24	SWITCH_1
0x40030c2	          0x83f907	                              cmp ecx, 7	       827	state.c	FUNCTION_24	SWITCH_1
0x40030c5	            0x7f20	                            jg 0x40030e7	       827	state.c	FUNCTION_24	SWITCH_1
0x40030c7	          0x83f905	                              cmp ecx, 5	       827	state.c	FUNCTION_24	SWITCH_1
0x40030ca	     0xf84ca000000	                            je 0x400319a	       827	state.c	FUNCTION_24	SWITCH_1
0x40030d0	          0x83f905	                              cmp ecx, 5	       827	state.c	FUNCTION_24	SWITCH_1
0x40030d3	     0xf8fd6000000	                            jg 0x40031af	       827	state.c	FUNCTION_24	SWITCH_1
0x40030d9	          0x83f901	                              cmp ecx, 1	       827	state.c	FUNCTION_24	SWITCH_1
0x40030dc	     0xf84a4000000	                            je 0x4003186	       827	state.c	FUNCTION_24	SWITCH_1
0x40030e2	      0xe9c3010000	                           jmp 0x40032aa	       827	state.c	FUNCTION_24	SWITCH_1
0x40030e7	          0x83f919	                           cmp ecx, 0x19	       827	state.c	FUNCTION_24	SWITCH_1
0x40030ea	     0xf84fe000000	                            je 0x40031ee	       827	state.c	FUNCTION_24	SWITCH_1
0x40030f0	          0x83f945	                           cmp ecx, 0x45	       827	state.c	FUNCTION_24	SWITCH_1
0x40030f3	     0xf840a010000	                            je 0x4003203	       827	state.c	FUNCTION_24	SWITCH_1
0x40030f9	          0x83f90c	                            cmp ecx, 0xc	       827	state.c	FUNCTION_24	SWITCH_1
0x40030fc	     0xf85a8010000	                           jne 0x40032aa	       827	state.c	FUNCTION_24	SWITCH_1
0x4003102	      0xe9d2000000	                           jmp 0x40031d9	       827	state.c	FUNCTION_24	SWITCH_1
0x4003107	    0x81f9ed030000	                          cmp ecx, 0x3ed	       827	state.c	FUNCTION_24	SWITCH_1
0x400310d	     0xf844a010000	                            je 0x400325d	       827	state.c	FUNCTION_24	SWITCH_1
0x4003113	    0x81f9ed030000	                          cmp ecx, 0x3ed	       827	state.c	FUNCTION_24	SWITCH_1
0x4003119	            0x7f29	                            jg 0x4003144	       827	state.c	FUNCTION_24	SWITCH_1
0x400311b	    0x81f9eb030000	                          cmp ecx, 0x3eb	       827	state.c	FUNCTION_24	SWITCH_1
0x4003121	     0xf8413010000	                            je 0x400323a	       827	state.c	FUNCTION_24	SWITCH_1
0x4003127	    0x81f9eb030000	                          cmp ecx, 0x3eb	       827	state.c	FUNCTION_24	SWITCH_1
0x400312d	     0xf8f18010000	                            jg 0x400324b	       827	state.c	FUNCTION_24	SWITCH_1
0x4003133	    0x81f9ea030000	                          cmp ecx, 0x3ea	       827	state.c	FUNCTION_24	SWITCH_1
0x4003139	     0xf84ea000000	                            je 0x4003229	       827	state.c	FUNCTION_24	SWITCH_1
0x400313f	      0xe966010000	                           jmp 0x40032aa	       827	state.c	FUNCTION_24	SWITCH_1
0x4003144	    0x81f9f7030000	                          cmp ecx, 0x3f7	       827	state.c	FUNCTION_24	SWITCH_1
0x400314a	     0xf8429010000	                            je 0x4003279	       827	state.c	FUNCTION_24	SWITCH_1
0x4003150	    0x81f9f7030000	                          cmp ecx, 0x3f7	       827	state.c	FUNCTION_24	SWITCH_1
0x4003156	            0x7f11	                            jg 0x4003169	       827	state.c	FUNCTION_24	SWITCH_1
0x4003158	    0x81f9ee030000	                          cmp ecx, 0x3ee	       827	state.c	FUNCTION_24	SWITCH_1
0x400315e	     0xf8407010000	                            je 0x400326b	       827	state.c	FUNCTION_24	SWITCH_1
0x4003164	      0xe941010000	                           jmp 0x40032aa	       827	state.c	FUNCTION_24	SWITCH_1
0x4003169	    0x81f917040000	                          cmp ecx, 0x417	       827	state.c	FUNCTION_24	SWITCH_1
0x400316f	     0xf8412010000	                            je 0x4003287	       827	state.c	FUNCTION_24	SWITCH_1
0x4003175	    0x81f9d4070000	                          cmp ecx, 0x7d4	       827	state.c	FUNCTION_24	SWITCH_1
0x400317b	     0xf8417010000	                            je 0x4003298	       827	state.c	FUNCTION_24	SWITCH_1
0x4003181	      0xe924010000	                           jmp 0x40032aa	       827	state.c	FUNCTION_24	SWITCH_1
0x4003186	    0x440fb6839400	           movzx r8d, byte [rbx + 0x94] 	       829	state.c	FUNCTION_24	SWITCH_1
0x400318e	          0x41d0e8	                              shr r8b, 1	       829	state.c	FUNCTION_24	SWITCH_1
0x4003191	        0x4183e001	                              and r8d, 1	       829	state.c	FUNCTION_24	SWITCH_1
0x4003195	      0xe932010000	                           jmp 0x40032cc	       829	state.c	FUNCTION_24	SWITCH_1
0x400319a	    0x440fb6839500	           movzx r8d, byte [rbx + 0x95] 	       833	state.c	FUNCTION_24	SWITCH_1
0x40031a2	        0x41c0e803	                              shr r8b, 3	       833	state.c	FUNCTION_24	SWITCH_1
0x40031a6	        0x4183e001	                              and r8d, 1	       833	state.c	FUNCTION_24	SWITCH_1
0x40031aa	      0xe91d010000	                           jmp 0x40032cc	       833	state.c	FUNCTION_24	SWITCH_1
0x40031af	    0x440fb6839500	           movzx r8d, byte [rbx + 0x95] 	       837	state.c	FUNCTION_24	SWITCH_1
0x40031b7	        0x41c0e802	                              shr r8b, 2	       837	state.c	FUNCTION_24	SWITCH_1
0x40031bb	        0x4183e001	                              and r8d, 1	       837	state.c	FUNCTION_24	SWITCH_1
0x40031bf	      0xe908010000	                           jmp 0x40032cc	       837	state.c	FUNCTION_24	SWITCH_1
0x40031c4	    0x440fb6839400	           movzx r8d, byte [rbx + 0x94] 	       841	state.c	FUNCTION_24	SWITCH_1
0x40031cc	        0x41c0e802	                              shr r8b, 2	       841	state.c	FUNCTION_24	SWITCH_1
0x40031d0	        0x4183e001	                              and r8d, 1	       841	state.c	FUNCTION_24	SWITCH_1
0x40031d4	      0xe9f3000000	                           jmp 0x40032cc	       841	state.c	FUNCTION_24	SWITCH_1
0x40031d9	    0x440fb6839400	           movzx r8d, byte [rbx + 0x94] 	       845	state.c	FUNCTION_24	SWITCH_1
0x40031e1	        0x41c0e806	                              shr r8b, 6	       845	state.c	FUNCTION_24	SWITCH_1
0x40031e5	        0x4183e001	                              and r8d, 1	       845	state.c	FUNCTION_24	SWITCH_1
0x40031e9	      0xe9de000000	                           jmp 0x40032cc	       845	state.c	FUNCTION_24	SWITCH_1
0x40031ee	    0x440fb6839400	           movzx r8d, byte [rbx + 0x94] 	       849	state.c	FUNCTION_24	SWITCH_1
0x40031f6	        0x41c0e805	                              shr r8b, 5	       849	state.c	FUNCTION_24	SWITCH_1
0x40031fa	        0x4183e001	                              and r8d, 1	       849	state.c	FUNCTION_24	SWITCH_1
0x40031fe	      0xe9c9000000	                           jmp 0x40032cc	       849	state.c	FUNCTION_24	SWITCH_1
0x4003203	    0x440fb6839500	           movzx r8d, byte [rbx + 0x95] 	       853	state.c	FUNCTION_24	SWITCH_1
0x400320b	        0x41c0e804	                              shr r8b, 4	       853	state.c	FUNCTION_24	SWITCH_1
0x400320f	        0x4183e001	                              and r8d, 1	       853	state.c	FUNCTION_24	SWITCH_1
0x4003213	      0xe9b4000000	                           jmp 0x40032cc	       853	state.c	FUNCTION_24	SWITCH_1
0x4003218	        0x837b6c01	               cmp dword [rbx + 0x6c], 1	       857	state.c	FUNCTION_24	SWITCH_1
0x400321c	        0x410f94c0	                                sete r8b	       857	state.c	FUNCTION_24	SWITCH_1
0x4003220	        0x450fb6c0	                          movzx r8d, r8b	       857	state.c	FUNCTION_24	SWITCH_1
0x4003224	      0xe9a3000000	                           jmp 0x40032cc	       857	state.c	FUNCTION_24	SWITCH_1
0x4003229	        0x837b6c03	               cmp dword [rbx + 0x6c], 3	       861	state.c	FUNCTION_24	SWITCH_1
0x400322d	        0x410f94c0	                                sete r8b	       861	state.c	FUNCTION_24	SWITCH_1
0x4003231	        0x450fb6c0	                          movzx r8d, r8b	       861	state.c	FUNCTION_24	SWITCH_1
0x4003235	      0xe992000000	                           jmp 0x40032cc	       861	state.c	FUNCTION_24	SWITCH_1
0x400323a	        0x837b6c05	               cmp dword [rbx + 0x6c], 5	       865	state.c	FUNCTION_24	SWITCH_1
0x400323e	        0x410f94c0	                                sete r8b	       865	state.c	FUNCTION_24	SWITCH_1
0x4003242	        0x450fb6c0	                          movzx r8d, r8b	       865	state.c	FUNCTION_24	SWITCH_1
0x4003246	      0xe981000000	                           jmp 0x40032cc	       865	state.c	FUNCTION_24	SWITCH_1
0x400324b	    0x440fb6839500	           movzx r8d, byte [rbx + 0x95] 	       869	state.c	FUNCTION_24	SWITCH_1
0x4003253	        0x41c0e806	                              shr r8b, 6	       869	state.c	FUNCTION_24	SWITCH_1
0x4003257	        0x4183e001	                              and r8d, 1	       869	state.c	FUNCTION_24	SWITCH_1
0x400325b	            0xeb6f	                           jmp 0x40032cc	       869	state.c	FUNCTION_24	SWITCH_1
0x400325d	        0x837b7001	               cmp dword [rbx + 0x70], 1	       873	state.c	FUNCTION_24	SWITCH_1
0x4003261	        0x410f94c0	                                sete r8b	       873	state.c	FUNCTION_24	SWITCH_1
0x4003265	        0x450fb6c0	                          movzx r8d, r8b	       873	state.c	FUNCTION_24	SWITCH_1
0x4003269	            0xeb61	                           jmp 0x40032cc	       873	state.c	FUNCTION_24	SWITCH_1
0x400326b	        0x837b7002	               cmp dword [rbx + 0x70], 2	       877	state.c	FUNCTION_24	SWITCH_1
0x400326f	        0x410f94c0	                                sete r8b	       877	state.c	FUNCTION_24	SWITCH_1
0x4003273	        0x450fb6c0	                          movzx r8d, r8b	       877	state.c	FUNCTION_24	SWITCH_1
0x4003277	            0xeb53	                           jmp 0x40032cc	       877	state.c	FUNCTION_24	SWITCH_1
0x4003279	        0x837b7003	               cmp dword [rbx + 0x70], 3	       881	state.c	FUNCTION_24	SWITCH_1
0x400327d	        0x410f94c0	                                sete r8b	       881	state.c	FUNCTION_24	SWITCH_1
0x4003281	        0x450fb6c0	                          movzx r8d, r8b	       881	state.c	FUNCTION_24	SWITCH_1
0x4003285	            0xeb45	                           jmp 0x40032cc	       881	state.c	FUNCTION_24	SWITCH_1
0x4003287	    0x440fb6839500	           movzx r8d, byte [rbx + 0x95] 	       885	state.c	FUNCTION_24	SWITCH_1
0x400328f	          0x41d0e8	                              shr r8b, 1	       885	state.c	FUNCTION_24	SWITCH_1
0x4003292	        0x4183e001	                              and r8d, 1	       885	state.c	FUNCTION_24	SWITCH_1
0x4003296	            0xeb34	                           jmp 0x40032cc	       885	state.c	FUNCTION_24	SWITCH_1
0x4003298	    0x440fb6839500	           movzx r8d, byte [rbx + 0x95] 	       889	state.c	FUNCTION_24	SWITCH_1
0x40032a0	        0x41c0e805	                              shr r8b, 5	       889	state.c	FUNCTION_24	SWITCH_1
0x40032a4	        0x4183e001	                              and r8d, 1	       889	state.c	FUNCTION_24	SWITCH_1
0x40032a8	            0xeb22	                           jmp 0x40032cc	       889	state.c	FUNCTION_24	SWITCH_1
0x40032aa	    0x41b800000000	                              mov r8d, 0	       893	state.c	FUNCTION_24	SWITCH_1	CALL_1
0x40032b0	      0xba00000000	                              mov edx, 0	       893	state.c	FUNCTION_24	SWITCH_1	CALL_1
0x40032b5	      0xbe9b000000	                           mov esi, 0x9b	       893	state.c	FUNCTION_24	SWITCH_1	CALL_1
0x40032ba	          0x488b3b	                    mov rdi, qword [rbx]	       893	state.c	FUNCTION_24	SWITCH_1	CALL_1
0x40032bd	      0xb800000000	                              mov eax, 0	       893	state.c	FUNCTION_24	SWITCH_1	CALL_1
0x40032c2	      0xe800000000	                          call 0x40032c7	       893	state.c	FUNCTION_24	SWITCH_1	CALL_1
0x40032c7	      0xe958040000	                           jmp 0x4003724	       893	state.c	FUNCTION_24	SWITCH_1	CALL_1
0x40032cc	          0x41f7d8	                                 neg r8d	       897	state.c	FUNCTION_24	CALL_2
0x40032cf	        0x4183c002	                              add r8d, 2	       897	state.c	FUNCTION_24	CALL_2
0x40032d3	      0xba00000000	                              mov edx, 0	       897	state.c	FUNCTION_24	CALL_2
0x40032d8	      0xbe9b000000	                           mov esi, 0x9b	       897	state.c	FUNCTION_24	CALL_2
0x40032dd	          0x488b3b	                    mov rdi, qword [rbx]	       897	state.c	FUNCTION_24	CALL_2
0x40032e0	      0xb800000000	                              mov eax, 0	       897	state.c	FUNCTION_24	CALL_2
0x40032e5	      0xe800000000	                          call 0x40032ea	       897	state.c	FUNCTION_24	CALL_2
0x40032ea	      0xe935040000	                           jmp 0x4003724	       897	state.c	FUNCTION_24	CALL_2
0x40032ef	          0x488b06	                    mov rax, qword [rsi]	      1327	state.c	FUNCTION_25	SWITCH_3	CALL_110
0x40032f2	          0x4889c2	                            mov rdx, rax	      1327	state.c	FUNCTION_25	SWITCH_3	CALL_110
0x40032f5	    0x81e2ffffff7f	                     and edx, 0x7fffffff	      1327	state.c	FUNCTION_25	SWITCH_3	CALL_110
0x40032fb	    0x4881faffffff	                     cmp rdx, 0x3fffffff	      1327	state.c	FUNCTION_25	SWITCH_3	CALL_110
0x4003302	            0x7417	                            je 0x400331b	      1327	state.c	FUNCTION_25	SWITCH_3	CALL_110
0x4003304	      0x25ffffff7f	                     and eax, 0x7fffffff	      1329	state.c	FUNCTION_25	SWITCH_3	SWITCH_8
0x4003309	          0x83f806	                              cmp eax, 6	      1329	state.c	FUNCTION_25	SWITCH_3	SWITCH_8
0x400330c	     0xf8712040000	                            ja 0x4003724	      1329	state.c	FUNCTION_25	SWITCH_3	SWITCH_8
0x4003312	            0x89c0	                            mov eax, eax	      1329	state.c	FUNCTION_25	SWITCH_3	SWITCH_8
0x4003314	    0xff24c5000000	                       jmp qword [rax*8]	      1329	state.c	FUNCTION_25	SWITCH_3	SWITCH_8
0x400331b	      0xba01000000	                              mov edx, 1	      1331	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_111
0x4003320	      0xbe02000000	                              mov esi, 2	      1331	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_111
0x4003325	          0x4889df	                            mov rdi, rbx	      1331	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_111
0x4003328	      0xe8c3e3ffff	               call sym.settermprop_bool	      1331	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_111
0x400332d	      0xba01000000	                              mov edx, 1	      1332	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_112
0x4003332	      0xbe07000000	                              mov esi, 7	      1332	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_112
0x4003337	          0x4889df	                            mov rdi, rbx	      1332	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_112
0x400333a	      0xe8eae3ffff	                call sym.settermprop_int	      1332	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_112
0x400333f	      0xe9e0030000	                           jmp 0x4003724	      1333	state.c	FUNCTION_25	SWITCH_3	SWITCH_8
0x4003344	      0xba00000000	                              mov edx, 0	      1335	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_113
0x4003349	      0xbe02000000	                              mov esi, 2	      1335	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_113
0x400334e	          0x4889df	                            mov rdi, rbx	      1335	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_113
0x4003351	      0xe89ae3ffff	               call sym.settermprop_bool	      1335	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_113
0x4003356	      0xba01000000	                              mov edx, 1	      1336	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_114
0x400335b	      0xbe07000000	                              mov esi, 7	      1336	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_114
0x4003360	          0x4889df	                            mov rdi, rbx	      1336	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_114
0x4003363	      0xe8c1e3ffff	                call sym.settermprop_int	      1336	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_114
0x4003368	      0xe9b7030000	                           jmp 0x4003724	      1337	state.c	FUNCTION_25	SWITCH_3	SWITCH_8
0x400336d	      0xba01000000	                              mov edx, 1	      1339	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_115
0x4003372	      0xbe02000000	                              mov esi, 2	      1339	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_115
0x4003377	          0x4889df	                            mov rdi, rbx	      1339	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_115
0x400337a	      0xe871e3ffff	               call sym.settermprop_bool	      1339	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_115
0x400337f	      0xba02000000	                              mov edx, 2	      1340	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_116
0x4003384	      0xbe07000000	                              mov esi, 7	      1340	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_116
0x4003389	          0x4889df	                            mov rdi, rbx	      1340	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_116
0x400338c	      0xe898e3ffff	                call sym.settermprop_int	      1340	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_116
0x4003391	      0xe98e030000	                           jmp 0x4003724	      1341	state.c	FUNCTION_25	SWITCH_3	SWITCH_8
0x4003396	      0xba00000000	                              mov edx, 0	      1343	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_117
0x400339b	      0xbe02000000	                              mov esi, 2	      1343	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_117
0x40033a0	          0x4889df	                            mov rdi, rbx	      1343	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_117
0x40033a3	      0xe848e3ffff	               call sym.settermprop_bool	      1343	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_117
0x40033a8	      0xba02000000	                              mov edx, 2	      1344	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_118
0x40033ad	      0xbe07000000	                              mov esi, 7	      1344	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_118
0x40033b2	          0x4889df	                            mov rdi, rbx	      1344	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_118
0x40033b5	      0xe86fe3ffff	                call sym.settermprop_int	      1344	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_118
0x40033ba	      0xe965030000	                           jmp 0x4003724	      1345	state.c	FUNCTION_25	SWITCH_3	SWITCH_8
0x40033bf	      0xba01000000	                              mov edx, 1	      1347	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_119
0x40033c4	      0xbe02000000	                              mov esi, 2	      1347	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_119
0x40033c9	          0x4889df	                            mov rdi, rbx	      1347	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_119
0x40033cc	      0xe81fe3ffff	               call sym.settermprop_bool	      1347	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_119
0x40033d1	      0xba03000000	                              mov edx, 3	      1348	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_120
0x40033d6	      0xbe07000000	                              mov esi, 7	      1348	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_120
0x40033db	          0x4889df	                            mov rdi, rbx	      1348	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_120
0x40033de	      0xe846e3ffff	                call sym.settermprop_int	      1348	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_120
0x40033e3	      0xe93c030000	                           jmp 0x4003724	      1349	state.c	FUNCTION_25	SWITCH_3	SWITCH_8
0x40033e8	      0xba00000000	                              mov edx, 0	      1351	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_121
0x40033ed	      0xbe02000000	                              mov esi, 2	      1351	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_121
0x40033f2	          0x4889df	                            mov rdi, rbx	      1351	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_121
0x40033f5	      0xe8f6e2ffff	               call sym.settermprop_bool	      1351	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_121
0x40033fa	      0xba03000000	                              mov edx, 3	      1352	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_122
0x40033ff	      0xbe07000000	                              mov esi, 7	      1352	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_122
0x4003404	          0x4889df	                            mov rdi, rbx	      1352	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_122
0x4003407	      0xe81de3ffff	                call sym.settermprop_int	      1352	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_122
0x400340c	      0xe913030000	                           jmp 0x4003724	      1353	state.c	FUNCTION_25	SWITCH_3	SWITCH_8
0x4003411	          0x488b06	                    mov rax, qword [rsi]	      1359	state.c	FUNCTION_25	SWITCH_3	CALL_124
0x4003414	          0x4889c2	                            mov rdx, rax	      1359	state.c	FUNCTION_25	SWITCH_3	CALL_124
0x4003417	    0x81e2ffffff7f	                     and edx, 0x7fffffff	      1359	state.c	FUNCTION_25	SWITCH_3	CALL_124
0x400341d	    0x4881faffffff	                     cmp rdx, 0x3fffffff	      1359	state.c	FUNCTION_25	SWITCH_3	CALL_124
0x4003424	            0x7417	                            je 0x400343d	      1359	state.c	FUNCTION_25	SWITCH_3	CALL_124
0x4003426	      0x25ffffff7f	                     and eax, 0x7fffffff	      1361	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x400342b	          0x83f801	                              cmp eax, 1	      1361	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x400342e	            0x7419	                            je 0x4003449	      1361	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x4003430	          0x83f802	                              cmp eax, 2	      1361	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x4003433	            0x7408	                            je 0x400343d	      1361	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x4003435	            0x85c0	                           test eax, eax	      1361	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x4003437	     0xf85e7020000	                           jne 0x4003724	      1361	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x400343d	    0x80a37c010000	            and byte [rbx + 0x17c], 0xfe	      1363	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x4003444	      0xe9db020000	                           jmp 0x4003724	      1364	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x4003449	    0x808b7c010000	                or byte [rbx + 0x17c], 1	      1366	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x4003450	      0xe9cf020000	                           jmp 0x4003724	      1367	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x4003455	          0x488b06	                    mov rax, qword [rsi]	      1373	state.c	FUNCTION_25	SWITCH_3	CALL_125
0x4003458	          0x4889c1	                            mov rcx, rax	      1373	state.c	FUNCTION_25	SWITCH_3	CALL_125
0x400345b	    0x81e1ffffff7f	                     and ecx, 0x7fffffff	      1373	state.c	FUNCTION_25	SWITCH_3	CALL_125
0x4003461	    0x4881f9ffffff	                     cmp rcx, 0x3fffffff	      1373	state.c	FUNCTION_25	SWITCH_3	CALL_125
0x4003468	     0xf8423040000	                            je 0x4003891	      1373	state.c	FUNCTION_25	SWITCH_3	CALL_125
0x400346e	      0x25ffffff7f	                     and eax, 0x7fffffff	      1373	state.c	FUNCTION_25	SWITCH_3	CALL_125
0x4003473	          0x83e801	                              sub eax, 1	      1373	state.c	FUNCTION_25	SWITCH_3	CALL_125
0x4003476	          0x89433c	             mov dword [rbx + 0x3c], eax	      1373	state.c	FUNCTION_25	SWITCH_3	CALL_125
0x4003479	      0xb9ffffffff	                     mov ecx, 0xffffffff	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x400347e	          0x83fa01	                              cmp edx, 1	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x4003481	            0x7e1e	                           jle 0x40034a1	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x4003483	        0x488b5608	                mov rdx, qword [rsi + 8]	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x4003487	          0x4889d6	                            mov rsi, rdx	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x400348a	    0x81e6ffffff7f	                     and esi, 0x7fffffff	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x4003490	    0x4881feffffff	                     cmp rsi, 0x3fffffff	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x4003497	            0x7408	                            je 0x40034a1	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x4003499	            0x89d1	                            mov ecx, edx	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x400349b	    0x81e1ffffff7f	                     and ecx, 0x7fffffff	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x40034a1	          0x894b40	             mov dword [rbx + 0x40], ecx	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x40034a4	            0x85c0	                           test eax, eax	      1375	state.c	FUNCTION_25	SWITCH_3	CALL_128
0x40034a6	            0x7907	                           jns 0x40034af	      1375	state.c	FUNCTION_25	SWITCH_3	CALL_128
0x40034a8	    0xc7433c000000	               mov dword [rbx + 0x3c], 0	      1375	state.c	FUNCTION_25	SWITCH_3	CALL_128
0x40034af	          0x8b4328	            mov eax, dword [rbx + 0x28] 	      1376	state.c	FUNCTION_25	SWITCH_3	CALL_129
0x40034b2	          0x39433c	            cmp dword [rbx + 0x3c], eax 	      1376	state.c	FUNCTION_25	SWITCH_3	CALL_129
0x40034b5	            0x7e03	                           jle 0x40034ba	      1376	state.c	FUNCTION_25	SWITCH_3	CALL_129
0x40034b7	          0x89433c	             mov dword [rbx + 0x3c], eax	      1376	state.c	FUNCTION_25	SWITCH_3	CALL_129
0x40034ba	          0x83f9ff	             cmp ecx, 0xffffffffffffffff	      1377	state.c	FUNCTION_25	SWITCH_3	CALL_130
0x40034bd	            0x7d07	                           jge 0x40034c6	      1377	state.c	FUNCTION_25	SWITCH_3	CALL_130
0x40034bf	    0xc74340ffffff	     mov dword [rbx + 0x40], 0xffffffff 	      1377	state.c	FUNCTION_25	SWITCH_3	CALL_130
0x40034c6	          0x8b4b3c	            mov ecx, dword [rbx + 0x3c] 	      1378	state.c	FUNCTION_25	SWITCH_3	IF_24
0x40034c9	            0x85c9	                           test ecx, ecx	      1378	state.c	FUNCTION_25	SWITCH_3	IF_24
0x40034cb	            0x7510	                           jne 0x40034dd	      1378	state.c	FUNCTION_25	SWITCH_3	IF_24
0x40034cd	          0x3b4340	            cmp eax, dword [rbx + 0x40] 	      1378	state.c	FUNCTION_25	SWITCH_3	IF_24
0x40034d0	            0x750b	                           jne 0x40034dd	      1378	state.c	FUNCTION_25	SWITCH_3	IF_24
0x40034d2	    0xc74340ffffff	     mov dword [rbx + 0x40], 0xffffffff 	      1379	state.c	FUNCTION_25	SWITCH_3	IF_24
0x40034d9	            0x89c2	                            mov edx, eax	      1379	state.c	FUNCTION_25	SWITCH_3	IF_24
0x40034db	            0xeb10	                           jmp 0x40034ed	      1379	state.c	FUNCTION_25	SWITCH_3	IF_24
0x40034dd	          0x3b4340	            cmp eax, dword [rbx + 0x40] 	      1381	state.c	FUNCTION_25	SWITCH_3	CALL_131
0x40034e0	            0x7d03	                           jge 0x40034e5	      1381	state.c	FUNCTION_25	SWITCH_3	CALL_131
0x40034e2	          0x894340	             mov dword [rbx + 0x40], eax	      1381	state.c	FUNCTION_25	SWITCH_3	CALL_131
0x40034e5	          0x8b5340	            mov edx, dword [rbx + 0x40] 	      1383	state.c	FUNCTION_25	SWITCH_3	IF_25	CALL_132
0x40034e8	            0x85d2	                           test edx, edx	      1383	state.c	FUNCTION_25	SWITCH_3	IF_25	CALL_132
0x40034ea	           0xf48d0	                          cmovs edx, eax	      1383	state.c	FUNCTION_25	SWITCH_3	IF_25	CALL_132
0x40034ed	            0x39ca	                            cmp edx, ecx	      1383	state.c	FUNCTION_25	SWITCH_3	IF_25	CALL_132
0x40034ef	     0xf8f2f020000	                            jg 0x4003724	      1383	state.c	FUNCTION_25	SWITCH_3	IF_25	CALL_132
0x40034f5	    0xc7433c000000	               mov dword [rbx + 0x3c], 0	      1385	state.c	FUNCTION_25	SWITCH_3	IF_25
0x40034fc	    0xc74340ffffff	     mov dword [rbx + 0x40], 0xffffffff 	      1386	state.c	FUNCTION_25	SWITCH_3	IF_25
0x4003503	      0xe91c020000	                           jmp 0x4003724	      1386	state.c	FUNCTION_25	SWITCH_3	IF_25
0x4003508	          0x488b06	                    mov rax, qword [rsi]	      1393	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x400350b	          0x4889c1	                            mov rcx, rax	      1393	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x400350e	    0x81e1ffffff7f	                     and ecx, 0x7fffffff	      1393	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x4003514	    0x4881f9ffffff	                     cmp rcx, 0x3fffffff	      1393	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x400351b	     0xf849b030000	                            je 0x40038bc	      1393	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x4003521	      0x25ffffff7f	                     and eax, 0x7fffffff	      1393	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x4003526	          0x83e801	                              sub eax, 1	      1393	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x4003529	          0x894344	             mov dword [rbx + 0x44], eax	      1393	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x400352c	      0xb9ffffffff	                     mov ecx, 0xffffffff	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_135
0x4003531	          0x83fa01	                              cmp edx, 1	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_135
0x4003534	            0x7e1e	                           jle 0x4003554	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_135
0x4003536	        0x488b5608	                mov rdx, qword [rsi + 8]	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_135
0x400353a	          0x4889d6	                            mov rsi, rdx	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_135
0x400353d	    0x81e6ffffff7f	                     and esi, 0x7fffffff	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_135
0x4003543	    0x4881feffffff	                     cmp rsi, 0x3fffffff	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_135
0x400354a	            0x7408	                            je 0x4003554	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_135
0x400354c	            0x89d1	                            mov ecx, edx	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_135
0x400354e	    0x81e1ffffff7f	                     and ecx, 0x7fffffff	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_135
0x4003554	          0x894b48	             mov dword [rbx + 0x48], ecx	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_135
0x4003557	            0x85c0	                           test eax, eax	      1395	state.c	FUNCTION_25	SWITCH_3	CALL_136
0x4003559	            0x7907	                           jns 0x4003562	      1395	state.c	FUNCTION_25	SWITCH_3	CALL_136
0x400355b	    0xc74344000000	               mov dword [rbx + 0x44], 0	      1395	state.c	FUNCTION_25	SWITCH_3	CALL_136
0x4003562	          0x8b432c	            mov eax, dword [rbx + 0x2c] 	      1396	state.c	FUNCTION_25	SWITCH_3	CALL_137
0x4003565	          0x394344	            cmp dword [rbx + 0x44], eax 	      1396	state.c	FUNCTION_25	SWITCH_3	CALL_137
0x4003568	            0x7e03	                           jle 0x400356d	      1396	state.c	FUNCTION_25	SWITCH_3	CALL_137
0x400356a	          0x894344	             mov dword [rbx + 0x44], eax	      1396	state.c	FUNCTION_25	SWITCH_3	CALL_137
0x400356d	          0x83f9ff	             cmp ecx, 0xffffffffffffffff	      1397	state.c	FUNCTION_25	SWITCH_3	CALL_138
0x4003570	            0x7d07	                           jge 0x4003579	      1397	state.c	FUNCTION_25	SWITCH_3	CALL_138
0x4003572	    0xc74348ffffff	     mov dword [rbx + 0x48], 0xffffffff 	      1397	state.c	FUNCTION_25	SWITCH_3	CALL_138
0x4003579	          0x8b5344	            mov edx, dword [rbx + 0x44] 	      1398	state.c	FUNCTION_25	SWITCH_3	IF_26
0x400357c	            0x85d2	                           test edx, edx	      1398	state.c	FUNCTION_25	SWITCH_3	IF_26
0x400357e	            0x7511	                           jne 0x4003591	      1398	state.c	FUNCTION_25	SWITCH_3	IF_26
0x4003580	          0x3b4348	            cmp eax, dword [rbx + 0x48] 	      1398	state.c	FUNCTION_25	SWITCH_3	IF_26
0x4003583	            0x750c	                           jne 0x4003591	      1398	state.c	FUNCTION_25	SWITCH_3	IF_26
0x4003585	    0xc74348ffffff	     mov dword [rbx + 0x48], 0xffffffff 	      1399	state.c	FUNCTION_25	SWITCH_3	IF_26
0x400358c	      0xe993010000	                           jmp 0x4003724	      1399	state.c	FUNCTION_25	SWITCH_3	IF_26
0x4003591	          0x3b4348	            cmp eax, dword [rbx + 0x48] 	      1401	state.c	FUNCTION_25	SWITCH_3	CALL_139
0x4003594	            0x7d03	                           jge 0x4003599	      1401	state.c	FUNCTION_25	SWITCH_3	CALL_139
0x4003596	          0x894348	             mov dword [rbx + 0x48], eax	      1401	state.c	FUNCTION_25	SWITCH_3	CALL_139
0x4003599	          0x8b4348	            mov eax, dword [rbx + 0x48] 	      1403	state.c	FUNCTION_25	SWITCH_3	IF_27
0x400359c	            0x39c2	                            cmp edx, eax	      1403	state.c	FUNCTION_25	SWITCH_3	IF_27
0x400359e	     0xf8c80010000	                            jl 0x4003724	      1403	state.c	FUNCTION_25	SWITCH_3	IF_27
0x40035a4	            0x85c0	                           test eax, eax	      1403	state.c	FUNCTION_25	SWITCH_3	IF_27
0x40035a6	     0xf8878010000	                            js 0x4003724	      1403	state.c	FUNCTION_25	SWITCH_3	IF_27
0x40035ac	    0xc74344000000	               mov dword [rbx + 0x44], 0	      1406	state.c	FUNCTION_25	SWITCH_3	IF_27
0x40035b3	    0xc74348ffffff	     mov dword [rbx + 0x48], 0xffffffff 	      1407	state.c	FUNCTION_25	SWITCH_3	IF_27
0x40035ba	      0xe965010000	                           jmp 0x4003724	      1407	state.c	FUNCTION_25	SWITCH_3	IF_27
0x40035bf	          0x488b06	                    mov rax, qword [rsi]	      1413	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_140
0x40035c2	      0x25ffffff7f	                     and eax, 0x7fffffff	      1413	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_140
0x40035c7	        0x4883f808	                              cmp rax, 8	      1413	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_140
0x40035cb	     0xf8553010000	                           jne 0x4003724	      1413	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_140
0x40035d1	          0x83fa03	                              cmp edx, 3	      1415	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	IF_28
0x40035d4	     0xf854a010000	                           jne 0x4003724	      1415	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	IF_28
0x40035da	          0x8b4610	            mov eax, dword [rsi + 0x10] 	      1416	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_143
0x40035dd	      0x25ffffff7f	                     and eax, 0x7fffffff	      1416	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_143
0x40035e2	        0x488b7e08	                mov rdi, qword [rsi + 8]	      1416	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_143
0x40035e6	    0x81e7ffffff7f	                     and edi, 0x7fffffff	      1416	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_143
0x40035ec	          0x4889da	                            mov rdx, rbx	      1416	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_143
0x40035ef	            0x89c6	                            mov esi, eax	      1416	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_143
0x40035f1	      0xe80fcdffff	                      call sym.on_resize	      1416	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_143
0x40035f6	      0xe929010000	                           jmp 0x4003724	      1416	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_143
0x40035fb	          0x488b2e	                    mov rbp, qword [rsi]	      1421	state.c	FUNCTION_25	SWITCH_3	CALL_145
0x40035fe	          0x4889e8	                            mov rax, rbp	      1421	state.c	FUNCTION_25	SWITCH_3	CALL_145
0x4003601	      0x25ffffff7f	                     and eax, 0x7fffffff	      1421	state.c	FUNCTION_25	SWITCH_3	CALL_145
0x4003606	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1421	state.c	FUNCTION_25	SWITCH_3	CALL_145
0x400360c	            0x740b	                            je 0x4003619	      1421	state.c	FUNCTION_25	SWITCH_3	CALL_145
0x400360e	    0x81e5ffffff7f	                     and ebp, 0x7fffffff	      1421	state.c	FUNCTION_25	SWITCH_3	CALL_145
0x4003614	          0x4885c0	                           test rax, rax	      1421	state.c	FUNCTION_25	SWITCH_3	CALL_145
0x4003617	            0x7505	                           jne 0x400361e	      1421	state.c	FUNCTION_25	SWITCH_3	CALL_145
0x4003619	      0xbd01000000	                              mov ebp, 1	      1421	state.c	FUNCTION_25	SWITCH_3	CALL_145
0x400361e	          0x4889df	                            mov rdi, rbx	      1423	state.c	FUNCTION_25	SWITCH_3	IF_29	CALL_146
0x4003621	      0xe84fcbffff	      call sym.is_cursor_in_scrollregion	      1423	state.c	FUNCTION_25	SWITCH_3	IF_29	CALL_146
0x4003626	            0x85c0	                           test eax, eax	      1423	state.c	FUNCTION_25	SWITCH_3	IF_29	CALL_146
0x4003628	     0xf84f6000000	                            je 0x4003724	      1423	state.c	FUNCTION_25	SWITCH_3	IF_29	CALL_146
0x400362e	          0x8b733c	            mov esi, dword [rbx + 0x3c] 	      1426	state.c	FUNCTION_25	SWITCH_3
0x4003631	          0x8b4340	            mov eax, dword [rbx + 0x40] 	      1427	state.c	FUNCTION_25	SWITCH_3	CALL_147
0x4003634	            0x85c0	                           test eax, eax	      1427	state.c	FUNCTION_25	SWITCH_3	CALL_147
0x4003636	            0x7903	                           jns 0x400363b	      1427	state.c	FUNCTION_25	SWITCH_3	CALL_147
0x4003638	          0x8b4328	            mov eax, dword [rbx + 0x28] 	      1427	state.c	FUNCTION_25	SWITCH_3	CALL_147
0x400363b	          0x8b4b34	            mov ecx, dword [rbx + 0x34] 	      1428	state.c	FUNCTION_25	SWITCH_3
0x400363e	    0xf68395000000	           test byte [rbx + 0x95], 0x10 	      1429	state.c	FUNCTION_25	SWITCH_3	CALL_148
0x4003645	            0x7407	                            je 0x400364e	      1429	state.c	FUNCTION_25	SWITCH_3	CALL_148
0x4003647	          0x8b5348	            mov edx, dword [rbx + 0x48] 	      1429	state.c	FUNCTION_25	SWITCH_3	CALL_148
0x400364a	            0x85d2	                           test edx, edx	      1429	state.c	FUNCTION_25	SWITCH_3	CALL_148
0x400364c	            0x7903	                           jns 0x4003651	      1429	state.c	FUNCTION_25	SWITCH_3	CALL_148
0x400364e	          0x8b532c	            mov edx, dword [rbx + 0x2c] 	      1429	state.c	FUNCTION_25	SWITCH_3	CALL_148
0x4003651	        0x48c1e020	                           shl rax, 0x20	      1431	state.c	FUNCTION_25	SWITCH_3	CALL_149
0x4003655	            0x89f6	                            mov esi, esi	      1431	state.c	FUNCTION_25	SWITCH_3	CALL_149
0x4003657	          0x4809c6	                             or rsi, rax	      1431	state.c	FUNCTION_25	SWITCH_3	CALL_149
0x400365a	        0x48c1e220	                           shl rdx, 0x20	      1431	state.c	FUNCTION_25	SWITCH_3	CALL_149
0x400365e	            0x89c8	                            mov eax, ecx	      1431	state.c	FUNCTION_25	SWITCH_3	CALL_149
0x4003660	          0x4809c2	                             or rdx, rax	      1431	state.c	FUNCTION_25	SWITCH_3	CALL_149
0x4003663	          0x4189e8	                            mov r8d, ebp	      1431	state.c	FUNCTION_25	SWITCH_3	CALL_149
0x4003666	          0x41f7d8	                                 neg r8d	      1431	state.c	FUNCTION_25	SWITCH_3	CALL_149
0x4003669	      0xb900000000	                              mov ecx, 0	      1431	state.c	FUNCTION_25	SWITCH_3	CALL_149
0x400366e	          0x4889df	                            mov rdi, rbx	      1431	state.c	FUNCTION_25	SWITCH_3	CALL_149
0x4003671	      0xe89bd1ffff	                         call sym.scroll	      1431	state.c	FUNCTION_25	SWITCH_3	CALL_149
0x4003676	      0xe9a9000000	                           jmp 0x4003724	      1433	state.c	FUNCTION_25	SWITCH_3
0x400367b	          0x488b2e	                    mov rbp, qword [rsi]	      1436	state.c	FUNCTION_25	SWITCH_3	CALL_151
0x400367e	          0x4889e8	                            mov rax, rbp	      1436	state.c	FUNCTION_25	SWITCH_3	CALL_151
0x4003681	      0x25ffffff7f	                     and eax, 0x7fffffff	      1436	state.c	FUNCTION_25	SWITCH_3	CALL_151
0x4003686	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1436	state.c	FUNCTION_25	SWITCH_3	CALL_151
0x400368c	            0x740b	                            je 0x4003699	      1436	state.c	FUNCTION_25	SWITCH_3	CALL_151
0x400368e	    0x81e5ffffff7f	                     and ebp, 0x7fffffff	      1436	state.c	FUNCTION_25	SWITCH_3	CALL_151
0x4003694	          0x4885c0	                           test rax, rax	      1436	state.c	FUNCTION_25	SWITCH_3	CALL_151
0x4003697	            0x7505	                           jne 0x400369e	      1436	state.c	FUNCTION_25	SWITCH_3	CALL_151
0x4003699	      0xbd01000000	                              mov ebp, 1	      1436	state.c	FUNCTION_25	SWITCH_3	CALL_151
0x400369e	          0x4889df	                            mov rdi, rbx	      1438	state.c	FUNCTION_25	SWITCH_3	IF_30	CALL_152
0x40036a1	      0xe8cfcaffff	      call sym.is_cursor_in_scrollregion	      1438	state.c	FUNCTION_25	SWITCH_3	IF_30	CALL_152
0x40036a6	            0x85c0	                           test eax, eax	      1438	state.c	FUNCTION_25	SWITCH_3	IF_30	CALL_152
0x40036a8	            0x747a	                            je 0x4003724	      1438	state.c	FUNCTION_25	SWITCH_3	IF_30	CALL_152
0x40036aa	          0x8b733c	            mov esi, dword [rbx + 0x3c] 	      1441	state.c	FUNCTION_25	SWITCH_3
0x40036ad	          0x8b4340	            mov eax, dword [rbx + 0x40] 	      1442	state.c	FUNCTION_25	SWITCH_3	CALL_153
0x40036b0	            0x85c0	                           test eax, eax	      1442	state.c	FUNCTION_25	SWITCH_3	CALL_153
0x40036b2	            0x7903	                           jns 0x40036b7	      1442	state.c	FUNCTION_25	SWITCH_3	CALL_153
0x40036b4	          0x8b4328	            mov eax, dword [rbx + 0x28] 	      1442	state.c	FUNCTION_25	SWITCH_3	CALL_153
0x40036b7	          0x8b4b34	            mov ecx, dword [rbx + 0x34] 	      1443	state.c	FUNCTION_25	SWITCH_3
0x40036ba	    0xf68395000000	           test byte [rbx + 0x95], 0x10 	      1444	state.c	FUNCTION_25	SWITCH_3	CALL_154
0x40036c1	            0x7407	                            je 0x40036ca	      1444	state.c	FUNCTION_25	SWITCH_3	CALL_154
0x40036c3	          0x8b5348	            mov edx, dword [rbx + 0x48] 	      1444	state.c	FUNCTION_25	SWITCH_3	CALL_154
0x40036c6	            0x85d2	                           test edx, edx	      1444	state.c	FUNCTION_25	SWITCH_3	CALL_154
0x40036c8	            0x7903	                           jns 0x40036cd	      1444	state.c	FUNCTION_25	SWITCH_3	CALL_154
0x40036ca	          0x8b532c	            mov edx, dword [rbx + 0x2c] 	      1444	state.c	FUNCTION_25	SWITCH_3	CALL_154
0x40036cd	        0x48c1e020	                           shl rax, 0x20	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_155
0x40036d1	            0x89f6	                            mov esi, esi	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_155
0x40036d3	          0x4809c6	                             or rsi, rax	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_155
0x40036d6	        0x48c1e220	                           shl rdx, 0x20	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_155
0x40036da	            0x89c8	                            mov eax, ecx	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_155
0x40036dc	          0x4809c2	                             or rdx, rax	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_155
0x40036df	          0x4189e8	                            mov r8d, ebp	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_155
0x40036e2	      0xb900000000	                              mov ecx, 0	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_155
0x40036e7	          0x4889df	                            mov rdi, rbx	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_155
0x40036ea	      0xe822d1ffff	                         call sym.scroll	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_155
0x40036ef	            0xeb33	                           jmp 0x4003724	      1448	state.c	FUNCTION_25	SWITCH_3
0x40036f1	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1451	state.c	FUNCTION_25	SWITCH_3	IF_31
0x40036f5	          0x4885c0	                           test rax, rax	      1451	state.c	FUNCTION_25	SWITCH_3	IF_31
0x40036f8	     0xf8437010000	                            je 0x4003835	      1451	state.c	FUNCTION_25	SWITCH_3	IF_31
0x40036fe	        0x4c8b5018	            mov r10, qword [rax + 0x18] 	      1451	state.c	FUNCTION_25	SWITCH_3	IF_31
0x4003702	      0xb800000000	                              mov eax, 0	      1455	state.c	FUNCTION_25	SWITCH_3
0x4003707	          0x4d85d2	                           test r10, r10	      1451	state.c	FUNCTION_25	SWITCH_3	IF_31
0x400370a	     0xf842a010000	                            je 0x400383a	      1451	state.c	FUNCTION_25	SWITCH_3	IF_31
0x4003710	        0x4c8b4b20	              mov r9, qword [rbx + 0x20]	      1452	state.c	FUNCTION_25	SWITCH_3	IF_31	IF_32
0x4003714	          0x41ffd2	                                call r10	      1452	state.c	FUNCTION_25	SWITCH_3	IF_31	IF_32
0x4003717	            0x85c0	                           test eax, eax	       915	state.c	FUNCTION_25	IF_1	IF_2
0x4003719	           0xf95c0	                                setne al	       915	state.c	FUNCTION_25	IF_1	IF_2
0x400371c	           0xfb6c0	                           movzx eax, al	       915	state.c	FUNCTION_25	IF_1	IF_2
0x400371f	      0xe916010000	                           jmp 0x400383a	       915	state.c	FUNCTION_25	IF_1	IF_2
0x4003724	     0xfb683950000	           movzx eax, byte [rbx + 0x95] 	      1458	state.c	FUNCTION_25	IF_33
0x400372b	            0xa804	                              test al, 4	      1458	state.c	FUNCTION_25	IF_33
0x400372d	     0xf8482000000	                            je 0x40037b5	      1458	state.c	FUNCTION_25	IF_33
0x4003733	          0x8b533c	            mov edx, dword [rbx + 0x3c] 	      1459	state.c	FUNCTION_25	IF_33	CALL_156
0x4003736	          0x395330	            cmp dword [rbx + 0x30], edx 	      1459	state.c	FUNCTION_25	IF_33	CALL_156
0x4003739	            0x7d03	                           jge 0x400373e	      1459	state.c	FUNCTION_25	IF_33	CALL_156
0x400373b	          0x895330	             mov dword [rbx + 0x30], edx	      1459	state.c	FUNCTION_25	IF_33	CALL_156
0x400373e	          0x8b4b30	            mov ecx, dword [rbx + 0x30] 	      1460	state.c	FUNCTION_25	IF_33	CALL_158
0x4003741	          0x8b5340	            mov edx, dword [rbx + 0x40] 	      1460	state.c	FUNCTION_25	IF_33	CALL_158
0x4003744	            0x85d2	                           test edx, edx	      1460	state.c	FUNCTION_25	IF_33	CALL_158
0x4003746	            0x7809	                            js 0x4003751	      1460	state.c	FUNCTION_25	IF_33	CALL_158
0x4003748	          0x83ea01	                              sub edx, 1	      1460	state.c	FUNCTION_25	IF_33	CALL_158
0x400374b	            0x39d1	                            cmp ecx, edx	      1460	state.c	FUNCTION_25	IF_33	CALL_158
0x400374d	            0x7f0c	                            jg 0x400375b	      1460	state.c	FUNCTION_25	IF_33	CALL_158
0x400374f	            0xeb0d	                           jmp 0x400375e	      1460	state.c	FUNCTION_25	IF_33	CALL_158
0x4003751	          0x8b7328	            mov esi, dword [rbx + 0x28] 	      1460	state.c	FUNCTION_25	IF_33	CALL_158
0x4003754	          0x8d56ff	                      lea edx, [rsi - 1]	      1460	state.c	FUNCTION_25	IF_33	CALL_158
0x4003757	            0x39d1	                            cmp ecx, edx	      1460	state.c	FUNCTION_25	IF_33	CALL_158
0x4003759	            0x7e03	                           jle 0x400375e	      1460	state.c	FUNCTION_25	IF_33	CALL_158
0x400375b	          0x895330	             mov dword [rbx + 0x30], edx	      1460	state.c	FUNCTION_25	IF_33	CALL_158
0x400375e	          0x8b4b34	            mov ecx, dword [rbx + 0x34] 	      1461	state.c	FUNCTION_25	IF_33	CALL_160
0x4003761	          0x83e010	                           and eax, 0x10	      1461	state.c	FUNCTION_25	IF_33	CALL_160
0x4003764	     0xf8460010000	                            je 0x40038ca	      1461	state.c	FUNCTION_25	IF_33	CALL_160
0x400376a	          0x8b5344	            mov edx, dword [rbx + 0x44] 	      1461	state.c	FUNCTION_25	IF_33	CALL_160
0x400376d	            0x39d1	                            cmp ecx, edx	      1461	state.c	FUNCTION_25	IF_33	CALL_160
0x400376f	     0xf8dc8010000	                           jge 0x400393d	      1461	state.c	FUNCTION_25	IF_33	CALL_160
0x4003775	          0x895334	             mov dword [rbx + 0x34], edx	      1461	state.c	FUNCTION_25	IF_33	CALL_160
0x4003778	            0x89d1	                            mov ecx, edx	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x400377a	            0x84c0	                             test al, al	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x400377c	     0xf84d7010000	                            je 0x4003959	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x4003782	          0x8b4348	            mov eax, dword [rbx + 0x48] 	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x4003785	            0x85c0	                           test eax, eax	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x4003787	     0xf88df010000	                            js 0x400396c	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x400378d	          0x83e801	                              sub eax, 1	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x4003790	            0x39c1	                            cmp ecx, eax	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x4003792	     0xf8fe7010000	                            jg 0x400397f	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x4003798	            0xeb76	                           jmp 0x4003810	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x400379a	            0x84c0	                             test al, al	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x400379c	            0x740c	                            je 0x40037aa	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x400379e	          0x8b4348	            mov eax, dword [rbx + 0x48] 	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x40037a1	            0x85c0	                           test eax, eax	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x40037a3	            0x7805	                            js 0x40037aa	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x40037a5	          0x83e801	                              sub eax, 1	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x40037a8	            0xeb06	                           jmp 0x40037b0	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x40037aa	          0x8b432c	            mov eax, dword [rbx + 0x2c] 	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x40037ad	          0x83e801	                              sub eax, 1	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x40037b0	          0x894334	             mov dword [rbx + 0x34], eax	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x40037b3	            0xeb5b	                           jmp 0x4003810	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x40037b5	        0x837b3000	               cmp dword [rbx + 0x30], 0	      1465	state.c	FUNCTION_25	ELSE_5	CALL_163
0x40037b9	            0x7907	                           jns 0x40037c2	      1465	state.c	FUNCTION_25	ELSE_5	CALL_163
0x40037bb	    0xc74330000000	               mov dword [rbx + 0x30], 0	      1465	state.c	FUNCTION_25	ELSE_5	CALL_163
0x40037c2	          0x8b4328	            mov eax, dword [rbx + 0x28] 	      1466	state.c	FUNCTION_25	ELSE_5	CALL_164
0x40037c5	          0x83e801	                              sub eax, 1	      1466	state.c	FUNCTION_25	ELSE_5	CALL_164
0x40037c8	          0x394330	            cmp dword [rbx + 0x30], eax 	      1466	state.c	FUNCTION_25	ELSE_5	CALL_164
0x40037cb	            0x7e03	                           jle 0x40037d0	      1466	state.c	FUNCTION_25	ELSE_5	CALL_164
0x40037cd	          0x894330	             mov dword [rbx + 0x30], eax	      1466	state.c	FUNCTION_25	ELSE_5	CALL_164
0x40037d0	        0x837b3400	               cmp dword [rbx + 0x34], 0	      1467	state.c	FUNCTION_25	ELSE_5	CALL_165
0x40037d4	            0x7907	                           jns 0x40037dd	      1467	state.c	FUNCTION_25	ELSE_5	CALL_165
0x40037d6	    0xc74334000000	               mov dword [rbx + 0x34], 0	      1467	state.c	FUNCTION_25	ELSE_5	CALL_165
0x40037dd	          0x8b4b34	            mov ecx, dword [rbx + 0x34] 	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x40037e0	        0x48635330	         movsxd rdx, dword [rbx + 0x30] 	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x40037e4	        0x488b4358	            mov rax, qword [rbx + 0x58] 	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x40037e8	        0xf6049001	              test byte [rax + rdx*4], 1	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x40037ec	            0x7415	                            je 0x4003803	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x40037ee	          0x8b432c	            mov eax, dword [rbx + 0x2c] 	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x40037f1	            0x89c2	                            mov edx, eax	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x40037f3	          0xc1ea1f	                           shr edx, 0x1f	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x40037f6	             0x1d0	                            add eax, edx	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x40037f8	            0xd1f8	                              sar eax, 1	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x40037fa	          0x83e801	                              sub eax, 1	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x40037fd	            0x39c1	                            cmp ecx, eax	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x40037ff	            0x7f0c	                            jg 0x400380d	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x4003801	            0xeb0d	                           jmp 0x4003810	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x4003803	          0x8b432c	            mov eax, dword [rbx + 0x2c] 	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x4003806	          0x83e801	                              sub eax, 1	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x4003809	            0x39c1	                            cmp ecx, eax	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x400380b	            0x7e03	                           jle 0x4003810	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x400380d	          0x894334	             mov dword [rbx + 0x34], eax	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x4003810	      0xba01000000	                              mov edx, 1	      1471	state.c	FUNCTION_25	CALL_168
0x4003815	          0x4889e6	                            mov rsi, rsp	      1471	state.c	FUNCTION_25	CALL_168
0x4003818	          0x4889df	                            mov rdi, rbx	      1471	state.c	FUNCTION_25	CALL_168
0x400381b	      0xe8b8c8ffff	                   call sym.updatecursor	      1471	state.c	FUNCTION_25	CALL_168
0x4003820	      0xb801000000	                              mov eax, 1	      1494	state.c	FUNCTION_25
0x4003825	            0xeb13	                           jmp 0x400383a	      1494	state.c	FUNCTION_25
0x4003827	      0xb800000000	                              mov eax, 0	       939	state.c	FUNCTION_25	IF_3	SWITCH_2
0x400382c	            0xeb0c	                           jmp 0x400383a	       939	state.c	FUNCTION_25	IF_3	SWITCH_2
0x400382e	      0xb800000000	                              mov eax, 0	      1090	state.c	FUNCTION_25	SWITCH_3	SWITCH_5
0x4003833	            0xeb05	                           jmp 0x400383a	      1090	state.c	FUNCTION_25	SWITCH_3	SWITCH_5
0x4003835	      0xb800000000	                              mov eax, 0	      1455	state.c	FUNCTION_25	SWITCH_3
0x400383a	      0x488b742408	                mov rsi, qword [rsp + 8]	      1495	state.c	FUNCTION_25
0x400383f	    0x644833342528	                xor rsi, qword fs:[0x28]	      1495	state.c	FUNCTION_25
0x4003848	     0xf843e010000	                            je 0x400398c	      1495	state.c	FUNCTION_25
0x400384e	      0xe934010000	                           jmp 0x4003987	      1495	state.c	FUNCTION_25
0x4003853	        0x49c1e520	                           shl r13, 0x20	      1048	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_23
0x4003857	          0x4489fe	                           mov esi, r15d	      1048	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_23
0x400385a	          0x4c09ee	                             or rsi, r13	      1048	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_23
0x400385d	          0x4c89f2	                            mov rdx, r14	      1048	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_23
0x4003860	        0x48c1e220	                           shl rdx, 0x20	      1048	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_23
0x4003864	          0x4489e1	                           mov ecx, r12d	      1048	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_23
0x4003867	          0x4889df	                            mov rdi, rbx	      1048	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_23
0x400386a	      0xe8b9c8ffff	                          call sym.erase	      1048	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_23
0x400386f	      0xe9b0feffff	                           jmp 0x4003724	      1048	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_23
0x4003874	    0xc74340ffffff	     mov dword [rbx + 0x40], 0xffffffff 	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x400387b	          0x8b4328	            mov eax, dword [rbx + 0x28] 	      1376	state.c	FUNCTION_25	SWITCH_3	CALL_129
0x400387e	      0xb9ffffffff	                     mov ecx, 0xffffffff	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x4003883	          0x3b433c	            cmp eax, dword [rbx + 0x3c] 	      1376	state.c	FUNCTION_25	SWITCH_3	CALL_129
0x4003886	     0xf8c2bfcffff	                            jl 0x40034b7	      1376	state.c	FUNCTION_25	SWITCH_3	CALL_129
0x400388c	      0xe935fcffff	                           jmp 0x40034c6	      1376	state.c	FUNCTION_25	SWITCH_3	CALL_129
0x4003891	    0xc7433c000000	               mov dword [rbx + 0x3c], 0	      1373	state.c	FUNCTION_25	SWITCH_3	CALL_125
0x4003898	          0x83fa01	                              cmp edx, 1	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x400389b	            0x7f4d	                            jg 0x40038ea	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x400389d	            0xebd5	                           jmp 0x4003874	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x400389f	    0xc74348ffffff	     mov dword [rbx + 0x48], 0xffffffff 	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_135
0x40038a6	          0x8b432c	            mov eax, dword [rbx + 0x2c] 	      1396	state.c	FUNCTION_25	SWITCH_3	CALL_137
0x40038a9	      0xb9ffffffff	                     mov ecx, 0xffffffff	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_135
0x40038ae	          0x394344	            cmp dword [rbx + 0x44], eax 	      1396	state.c	FUNCTION_25	SWITCH_3	CALL_137
0x40038b1	     0xf8fb3fcffff	                            jg 0x400356a	      1396	state.c	FUNCTION_25	SWITCH_3	CALL_137
0x40038b7	      0xe9bdfcffff	                           jmp 0x4003579	      1396	state.c	FUNCTION_25	SWITCH_3	CALL_137
0x40038bc	    0xc74344000000	               mov dword [rbx + 0x44], 0	      1393	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x40038c3	          0x83fa01	                              cmp edx, 1	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_135
0x40038c6	            0x7f54	                            jg 0x400391c	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_135
0x40038c8	            0xebd5	                           jmp 0x400389f	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_135
0x40038ca	      0xba00000000	                              mov edx, 0	      1461	state.c	FUNCTION_25	IF_33	CALL_160
0x40038cf	            0x85c9	                           test ecx, ecx	      1461	state.c	FUNCTION_25	IF_33	CALL_160
0x40038d1	     0xf889efeffff	                            js 0x4003775	      1461	state.c	FUNCTION_25	IF_33	CALL_160
0x40038d7	            0xeb6c	                           jmp 0x4003945	      1461	state.c	FUNCTION_25	IF_33	CALL_160
0x40038d9	    0xc74340ffffff	     mov dword [rbx + 0x40], 0xffffffff 	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x40038e0	      0xb9ffffffff	                     mov ecx, 0xffffffff	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x40038e5	      0xe9c5fbffff	                           jmp 0x40034af	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x40038ea	        0x488b5608	                mov rdx, qword [rsi + 8]	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x40038ee	          0x4889d1	                            mov rcx, rdx	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x40038f1	    0x81e1ffffff7f	                     and ecx, 0x7fffffff	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x40038f7	      0xb800000000	                              mov eax, 0	      1373	state.c	FUNCTION_25	SWITCH_3	CALL_125
0x40038fc	    0x4881f9ffffff	                     cmp rcx, 0x3fffffff	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x4003903	     0xf8590fbffff	                           jne 0x4003499	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x4003909	            0xebce	                           jmp 0x40038d9	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x400390b	    0xc74348ffffff	     mov dword [rbx + 0x48], 0xffffffff 	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_135
0x4003912	      0xb9ffffffff	                     mov ecx, 0xffffffff	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_135
0x4003917	      0xe946fcffff	                           jmp 0x4003562	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_135
0x400391c	        0x488b5608	                mov rdx, qword [rsi + 8]	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_135
0x4003920	          0x4889d1	                            mov rcx, rdx	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_135
0x4003923	    0x81e1ffffff7f	                     and ecx, 0x7fffffff	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_135
0x4003929	      0xb800000000	                              mov eax, 0	      1393	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x400392e	    0x4881f9ffffff	                     cmp rcx, 0x3fffffff	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_135
0x4003935	     0xf8511fcffff	                           jne 0x400354c	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_135
0x400393b	            0xebce	                           jmp 0x400390b	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_135
0x400393d	          0x8b4b34	            mov ecx, dword [rbx + 0x34] 	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x4003940	      0xe93dfeffff	                           jmp 0x4003782	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x4003945	          0x8b732c	            mov esi, dword [rbx + 0x2c] 	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x4003948	          0x8d56ff	                      lea edx, [rsi - 1]	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x400394b	          0x3b5334	            cmp edx, dword [rbx + 0x34] 	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x400394e	     0xf8c46feffff	                            jl 0x400379a	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x4003954	      0xe9b7feffff	                           jmp 0x4003810	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x4003959	          0x8b432c	            mov eax, dword [rbx + 0x2c] 	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x400395c	          0x83e801	                              sub eax, 1	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x400395f	            0x39c2	                            cmp edx, eax	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x4003961	     0xf8f43feffff	                            jg 0x40037aa	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x4003967	      0xe9a4feffff	                           jmp 0x4003810	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x400396c	          0x8b432c	            mov eax, dword [rbx + 0x2c] 	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x400396f	          0x83e801	                              sub eax, 1	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x4003972	            0x39c1	                            cmp ecx, eax	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x4003974	     0xf8f24feffff	                            jg 0x400379e	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x400397a	      0xe991feffff	                           jmp 0x4003810	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x400397f	          0x8b4348	            mov eax, dword [rbx + 0x48] 	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x4003982	      0xe91efeffff	                           jmp 0x40037a5	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x4003987	      0xe800000000	                          call 0x400398c	      1495	state.c	FUNCTION_25
0x400398c	        0x4883c418	                           add rsp, 0x18	      1495	state.c	FUNCTION_25
0x4003990	              0x5b	                                 pop rbx	      1495	state.c	FUNCTION_25
0x4003991	              0x5d	                                 pop rbp	      1495	state.c	FUNCTION_25
0x4003992	            0x415c	                                 pop r12	      1495	state.c	FUNCTION_25
0x4003994	            0x415d	                                 pop r13	      1495	state.c	FUNCTION_25
0x4003996	            0x415e	                                 pop r14	      1495	state.c	FUNCTION_25
0x4003998	            0x415f	                                 pop r15	      1495	state.c	FUNCTION_25
0x400399a	              0xc3	                                     ret	      1495	state.c	FUNCTION_25
putglyph	FOR,0:IF,2:functions,0:WHILE,0:CALL,1:SWITCH,0:DO,0:ELSE,0	43
0x4000040	        0x4883ec28	                           sub rsp, 0x28	        17	state.c	FUNCTION_1
0x4000044	    0x64488b042528	                mov rax, qword fs:[0x28]	        17	state.c	FUNCTION_1
0x400004d	      0x4889442418	             mov qword [rsp + 0x18], rax	        17	state.c	FUNCTION_1
0x4000052	            0x31c0	                            xor eax, eax	        17	state.c	FUNCTION_1
0x4000054	        0x48893424	                    mov qword [rsp], rsi	        19	state.c	FUNCTION_1
0x4000058	        0x89542408	                mov dword [rsp + 8], edx	        20	state.c	FUNCTION_1
0x400005c	     0xfb6877c0100	          movzx eax, byte [rdi + 0x17c] 	        21	state.c	FUNCTION_1
0x4000063	          0x83e001	                              and eax, 1	        21	state.c	FUNCTION_1
0x4000066	       0xfb654240c	            movzx edx, byte [rsp + 0xc] 	        21	state.c	FUNCTION_1
0x400006b	          0x83e2fe	                     and edx, 0xfffffffe	        21	state.c	FUNCTION_1
0x400006e	             0x9d0	                             or eax, edx	        21	state.c	FUNCTION_1
0x4000070	        0x8844240c	                mov byte [rsp + 0xc], al	        21	state.c	FUNCTION_1
0x4000074	          0x4863f1	                         movsxd rsi, ecx	        22	state.c	FUNCTION_1
0x4000077	        0x488b5758	            mov rdx, qword [rdi + 0x58] 	        22	state.c	FUNCTION_1
0x400007b	        0x488d34b2	                  lea rsi, [rdx + rsi*4]	        22	state.c	FUNCTION_1
0x400007f	           0xfb616	                   movzx edx, byte [rsi]	        22	state.c	FUNCTION_1
0x4000082	          0x83e201	                              and edx, 1	        22	state.c	FUNCTION_1
0x4000085	             0x1d2	                            add edx, edx	        22	state.c	FUNCTION_1
0x4000087	          0x83e0fd	                     and eax, 0xfffffffd	        22	state.c	FUNCTION_1
0x400008a	             0x9d0	                             or eax, edx	        22	state.c	FUNCTION_1
0x400008c	        0x8844240c	                mov byte [rsp + 0xc], al	        22	state.c	FUNCTION_1
0x4000090	           0xfb616	                   movzx edx, byte [rsi]	        23	state.c	FUNCTION_1
0x4000093	             0x1d2	                            add edx, edx	        23	state.c	FUNCTION_1
0x4000095	          0x83e20c	                            and edx, 0xc	        23	state.c	FUNCTION_1
0x4000098	          0x83e0f3	                     and eax, 0xfffffff3	        23	state.c	FUNCTION_1
0x400009b	             0x9d0	                             or eax, edx	        23	state.c	FUNCTION_1
0x400009d	        0x8844240c	                mov byte [rsp + 0xc], al	        23	state.c	FUNCTION_1
0x40000a1	        0x488b4708	                mov rax, qword [rdi + 8]	        25	state.c	FUNCTION_1	IF_1
0x40000a5	          0x4885c0	                           test rax, rax	        25	state.c	FUNCTION_1	IF_1
0x40000a8	            0x7414	                            je 0x40000be	        25	state.c	FUNCTION_1	IF_1
0x40000aa	          0x488b00	                    mov rax, qword [rax]	        25	state.c	FUNCTION_1	IF_1
0x40000ad	          0x4885c0	                           test rax, rax	        25	state.c	FUNCTION_1	IF_1
0x40000b0	            0x740c	                            je 0x40000be	        25	state.c	FUNCTION_1	IF_1
0x40000b2	        0x488b5710	            mov rdx, qword [rdi + 0x10] 	        26	state.c	FUNCTION_1	IF_1	IF_2
0x40000b6	          0x4889ce	                            mov rsi, rcx	        26	state.c	FUNCTION_1	IF_1	IF_2
0x40000b9	          0x4889e7	                            mov rdi, rsp	        26	state.c	FUNCTION_1	IF_1	IF_2
0x40000bc	            0xffd0	                                call rax	        26	state.c	FUNCTION_1	IF_1	IF_2
0x40000be	      0x488b442418	            mov rax, qword [rsp + 0x18] 	        30	state.c	FUNCTION_1
0x40000c3	    0x644833042528	                xor rax, qword fs:[0x28]	        30	state.c	FUNCTION_1
0x40000cc	            0x7405	                            je 0x40000d3	        30	state.c	FUNCTION_1
0x40000ce	      0xe800000000	                          call 0x40000d3	        30	state.c	FUNCTION_1
0x40000d3	        0x4883c428	                           add rsp, 0x28	        30	state.c	FUNCTION_1
0x40000d7	              0xc3	                                     ret	        30	state.c	FUNCTION_1
vterm_state_get_cursorpos	FOR,0:IF,0:functions,0:WHILE,0:CALL,0:SWITCH,0:DO,0:ELSE,0	3
0x4001269	        0x488b4730	            mov rax, qword [rdi + 0x30] 	      1802	state.c	FUNCTION_32
0x400126d	          0x488906	                    mov qword [rsi], rax	      1802	state.c	FUNCTION_32
0x4001270	              0xc3	                                     ret	      1802	state.c	FUNCTION_32
vterm_state_focus_in	FOR,0:IF,1:functions,0:WHILE,0:CALL,1:SWITCH,0:DO,0:ELSE,0	10
0x400399b	    0xf68795000000	           test byte [rdi + 0x95], 0x40 	      1904	state.c	FUNCTION_39	IF_1
0x40039a2	            0x741f	                            je 0x40039c3	      1904	state.c	FUNCTION_39	IF_1
0x40039a4	        0x4883ec08	                              sub rsp, 8	      1903	state.c	FUNCTION_39
0x40039a8	      0xba00000000	                              mov edx, 0	      1905	state.c	FUNCTION_39	CALL_1
0x40039ad	      0xbe9b000000	                           mov esi, 0x9b	      1905	state.c	FUNCTION_39	CALL_1
0x40039b2	          0x488b3f	                    mov rdi, qword [rdi]	      1905	state.c	FUNCTION_39	CALL_1
0x40039b5	      0xb800000000	                              mov eax, 0	      1905	state.c	FUNCTION_39	CALL_1
0x40039ba	      0xe800000000	                          call 0x40039bf	      1905	state.c	FUNCTION_39	CALL_1
0x40039bf	        0x4883c408	                              add rsp, 8	      1906	state.c	FUNCTION_39
0x40039c3	            0xf3c3	                                     ret	      1906	state.c	FUNCTION_39
vterm_state_free	FOR,0:IF,0:functions,0:WHILE,0:CALL,4:SWITCH,0:DO,0:ELSE,0	16
0x4001127	              0x53	                                push rbx	        78	state.c	FUNCTION_5
0x4001128	          0x4889fb	                            mov rbx, rdi	        78	state.c	FUNCTION_5
0x400112b	        0x488b7750	            mov rsi, qword [rdi + 0x50] 	        79	state.c	FUNCTION_5	CALL_1
0x400112f	          0x488b3f	                    mov rdi, qword [rdi]	        79	state.c	FUNCTION_5	CALL_1
0x4001132	      0xe800000000	                          call 0x4001137	        79	state.c	FUNCTION_5	CALL_1
0x4001137	        0x488b7358	            mov rsi, qword [rbx + 0x58] 	        80	state.c	FUNCTION_5	CALL_2
0x400113b	          0x488b3b	                    mov rdi, qword [rbx]	        80	state.c	FUNCTION_5	CALL_2
0x400113e	      0xe800000000	                          call 0x4001143	        80	state.c	FUNCTION_5	CALL_2
0x4001143	        0x488b7378	            mov rsi, qword [rbx + 0x78] 	        81	state.c	FUNCTION_5	CALL_3
0x4001147	          0x488b3b	                    mov rdi, qword [rbx]	        81	state.c	FUNCTION_5	CALL_3
0x400114a	      0xe800000000	                          call 0x400114f	        81	state.c	FUNCTION_5	CALL_3
0x400114f	          0x4889de	                            mov rsi, rbx	        82	state.c	FUNCTION_5	CALL_4
0x4001152	          0x488b3b	                    mov rdi, qword [rbx]	        82	state.c	FUNCTION_5	CALL_4
0x4001155	      0xe800000000	                          call 0x400115a	        82	state.c	FUNCTION_5	CALL_4
0x400115a	              0x5b	                                 pop rbx	        83	state.c	FUNCTION_5
0x400115b	              0xc3	                                     ret	        83	state.c	FUNCTION_5
vterm_state_reset	FOR,3:IF,4:functions,0:WHILE,0:CALL,10:SWITCH,0:DO,0:ELSE,1	120
0x4001b6f	            0x4156	                                push r14	      1722	state.c	FUNCTION_31
0x4001b71	            0x4155	                                push r13	      1722	state.c	FUNCTION_31
0x4001b73	            0x4154	                                push r12	      1722	state.c	FUNCTION_31
0x4001b75	              0x55	                                push rbp	      1722	state.c	FUNCTION_31
0x4001b76	              0x53	                                push rbx	      1722	state.c	FUNCTION_31
0x4001b77	          0x4889fb	                            mov rbx, rdi	      1722	state.c	FUNCTION_31
0x4001b7a	          0x4189f4	                           mov r12d, esi	      1722	state.c	FUNCTION_31
0x4001b7d	    0xc7473c000000	               mov dword [rdi + 0x3c], 0	      1725	state.c	FUNCTION_31
0x4001b84	    0xc74740ffffff	     mov dword [rdi + 0x40], 0xffffffff 	      1726	state.c	FUNCTION_31
0x4001b8b	    0xc74744000000	               mov dword [rdi + 0x44], 0	      1727	state.c	FUNCTION_31
0x4001b92	    0xc74748ffffff	     mov dword [rdi + 0x48], 0xffffffff 	      1728	state.c	FUNCTION_31
0x4001b99	     0xfb687940000	           movzx eax, byte [rdi + 0x94] 	      1732	state.c	FUNCTION_31
0x4001ba0	          0x83e0e0	                     and eax, 0xffffffe0	      1732	state.c	FUNCTION_31
0x4001ba3	          0x83c804	                               or eax, 4	      1734	state.c	FUNCTION_31
0x4001ba6	    0x888794000000	               mov byte [rdi + 0x94], al	      1734	state.c	FUNCTION_31
0x4001bac	    0x80a795000000	             and byte [rdi + 0x95], 0x89	      1739	state.c	FUNCTION_31
0x4001bb3	          0x488b07	                    mov rax, qword [rdi]	      1741	state.c	FUNCTION_31
0x4001bb6	        0x806018fd	             and byte [rax + 0x18], 0xfd	      1741	state.c	FUNCTION_31
0x4001bba	        0x837f2c00	               cmp dword [rdi + 0x2c], 0	      1745	state.c	FUNCTION_31	FOR_1
0x4001bbe	            0x7e3c	                           jle 0x4001bfc	      1745	state.c	FUNCTION_31	FOR_1
0x4001bc0	      0xbd00000000	                              mov ebp, 0	      1745	state.c	FUNCTION_31	FOR_1
0x4001bc5	    0x41bd01000000	                             mov r13d, 1	       158	state.c	FUNCTION_9
0x4001bcb	        0x40f6c507	                             test bpl, 7	      1746	state.c	FUNCTION_31	FOR_1	IF_1
0x4001bcf	            0x7519	                           jne 0x4001bea	      1746	state.c	FUNCTION_31	FOR_1	IF_1
0x4001bd1	            0x89e8	                            mov eax, ebp	       158	state.c	FUNCTION_9
0x4001bd3	          0xc1f803	                              sar eax, 3	       158	state.c	FUNCTION_9
0x4001bd6	            0x4898	                                    cdqe	       158	state.c	FUNCTION_9
0x4001bd8	        0x48034350	             add rax, qword [rbx + 0x50]	       158	state.c	FUNCTION_9
0x4001bdc	            0x89e9	                            mov ecx, ebp	       158	state.c	FUNCTION_9
0x4001bde	          0x83e107	                              and ecx, 7	       158	state.c	FUNCTION_9
0x4001be1	          0x4489ea	                           mov edx, r13d	       158	state.c	FUNCTION_9
0x4001be4	            0xd3e2	                             shl edx, cl	       158	state.c	FUNCTION_9
0x4001be6	             0x810	                       or byte [rax], dl	       158	state.c	FUNCTION_9
0x4001be8	            0xeb0a	                           jmp 0x4001bf4	       158	state.c	FUNCTION_9
0x4001bea	            0x89ee	                            mov esi, ebp	      1749	state.c	FUNCTION_31	CALL_2
0x4001bec	          0x4889df	                            mov rdi, rbx	      1749	state.c	FUNCTION_31	CALL_2
0x4001bef	      0xe865e5ffff	              call sym.clear_col_tabstop	      1749	state.c	FUNCTION_31	CALL_2
0x4001bf4	          0x83c501	                              add ebp, 1	      1745	state.c	FUNCTION_31	FOR_1
0x4001bf7	          0x396b2c	            cmp dword [rbx + 0x2c], ebp 	      1745	state.c	FUNCTION_31	FOR_1
0x4001bfa	            0x7fcf	                            jg 0x4001bcb	      1745	state.c	FUNCTION_31	FOR_1
0x4001bfc	        0x837b2800	               cmp dword [rbx + 0x28], 0	      1754	state.c	FUNCTION_31	FOR_2
0x4001c00	            0x7e27	                           jle 0x4001c29	      1754	state.c	FUNCTION_31	FOR_2
0x4001c02	      0xbd00000000	                              mov ebp, 0	      1754	state.c	FUNCTION_31	FOR_2
0x4001c07	    0x41b800000000	                              mov r8d, 0	      1755	state.c	FUNCTION_31	CALL_3
0x4001c0d	      0xb900000000	                              mov ecx, 0	      1755	state.c	FUNCTION_31	CALL_3
0x4001c12	      0xba01000000	                              mov edx, 1	      1755	state.c	FUNCTION_31	CALL_3
0x4001c17	            0x89ee	                            mov esi, ebp	      1755	state.c	FUNCTION_31	CALL_3
0x4001c19	          0x4889df	                            mov rdi, rbx	      1755	state.c	FUNCTION_31	CALL_3
0x4001c1c	      0xe822e6ffff	                   call sym.set_lineinfo	      1755	state.c	FUNCTION_31	CALL_3
0x4001c21	          0x83c501	                              add ebp, 1	      1754	state.c	FUNCTION_31	FOR_2
0x4001c24	          0x396b28	            cmp dword [rbx + 0x28], ebp 	      1754	state.c	FUNCTION_31	FOR_2
0x4001c27	            0x7fde	                            jg 0x4001c07	      1754	state.c	FUNCTION_31	FOR_2
0x4001c29	        0x488b4308	                mov rax, qword [rbx + 8]	      1758	state.c	FUNCTION_31	IF_2
0x4001c2d	          0x4885c0	                           test rax, rax	      1758	state.c	FUNCTION_31	IF_2
0x4001c30	            0x740f	                            je 0x4001c41	      1758	state.c	FUNCTION_31	IF_2
0x4001c32	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1758	state.c	FUNCTION_31	IF_2
0x4001c36	          0x4885c0	                           test rax, rax	      1758	state.c	FUNCTION_31	IF_2
0x4001c39	            0x7406	                            je 0x4001c41	      1758	state.c	FUNCTION_31	IF_2
0x4001c3b	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      1759	state.c	FUNCTION_31	IF_2
0x4001c3f	            0xffd0	                                call rax	      1759	state.c	FUNCTION_31	IF_2
0x4001c41	          0x4889df	                            mov rdi, rbx	      1761	state.c	FUNCTION_31	CALL_4
0x4001c44	      0xe800000000	                          call 0x4001c49	      1761	state.c	FUNCTION_31	CALL_4
0x4001c49	          0x488b03	                    mov rax, qword [rbx]	      1763	state.c	FUNCTION_31
0x4001c4c	        0xf6401801	               test byte [rax + 0x18], 1	      1764	state.c	FUNCTION_31	CALL_5
0x4001c50	            0x7414	                            je 0x4001c66	      1764	state.c	FUNCTION_31	CALL_5
0x4001c52	      0xbe75000000	                           mov esi, 0x75	      1764	state.c	FUNCTION_31	CALL_5
0x4001c57	      0xbf00000000	                              mov edi, 0	      1764	state.c	FUNCTION_31	CALL_5
0x4001c5c	      0xe800000000	                          call 0x4001c61	      1764	state.c	FUNCTION_31	CALL_5
0x4001c61	          0x4989c5	                            mov r13, rax	      1764	state.c	FUNCTION_31	CALL_5
0x4001c64	            0xeb12	                           jmp 0x4001c78	      1764	state.c	FUNCTION_31	CALL_5
0x4001c66	      0xbe42000000	                           mov esi, 0x42	      1764	state.c	FUNCTION_31	CALL_5
0x4001c6b	      0xbf01000000	                              mov edi, 1	      1764	state.c	FUNCTION_31	CALL_5
0x4001c70	      0xe800000000	                          call 0x4001c75	      1764	state.c	FUNCTION_31	CALL_5
0x4001c75	          0x4989c5	                            mov r13, rax	      1764	state.c	FUNCTION_31	CALL_5
0x4001c78	    0x488daba00000	                   lea rbp, [rbx + 0xa0]	      1764	state.c	FUNCTION_31	CALL_5
0x4001c7f	    0x4c8db3000100	                  lea r14, [rbx + 0x100]	      1764	state.c	FUNCTION_31	CALL_5
0x4001c86	        0x4c896df8	                mov qword [rbp - 8], r13	      1770	state.c	FUNCTION_31	FOR_3
0x4001c8a	        0x498b4500	                    mov rax, qword [r13]	      1771	state.c	FUNCTION_31	FOR_3	IF_3
0x4001c8e	          0x4885c0	                           test rax, rax	      1771	state.c	FUNCTION_31	FOR_3	IF_3
0x4001c91	            0x7408	                            je 0x4001c9b	      1771	state.c	FUNCTION_31	FOR_3	IF_3
0x4001c93	          0x4889ee	                            mov rsi, rbp	      1772	state.c	FUNCTION_31	FOR_3	IF_3
0x4001c96	          0x4c89ef	                            mov rdi, r13	      1772	state.c	FUNCTION_31	FOR_3	IF_3
0x4001c99	            0xffd0	                                call rax	      1772	state.c	FUNCTION_31	FOR_3	IF_3
0x4001c9b	        0x4883c518	                           add rbp, 0x18	      1772	state.c	FUNCTION_31	FOR_3	IF_3
0x4001c9f	          0x4939ee	                            cmp r14, rbp	      1769	state.c	FUNCTION_31	FOR_3
0x4001ca2	            0x75e2	                           jne 0x4001c86	      1769	state.c	FUNCTION_31	FOR_3
0x4001ca4	    0xc78310010000	              mov dword [rbx + 0x110], 0	      1776	state.c	FUNCTION_31
0x4001cae	    0xc78314010000	              mov dword [rbx + 0x114], 1	      1777	state.c	FUNCTION_31
0x4001cb8	    0xc78318010000	              mov dword [rbx + 0x118], 0	      1778	state.c	FUNCTION_31
0x4001cc2	    0x80a37c010000	            and byte [rbx + 0x17c], 0xfe	      1780	state.c	FUNCTION_31
0x4001cc9	      0xba01000000	                              mov edx, 1	      1783	state.c	FUNCTION_31	CALL_7
0x4001cce	      0xbe01000000	                              mov esi, 1	      1783	state.c	FUNCTION_31	CALL_7
0x4001cd3	          0x4889df	                            mov rdi, rbx	      1783	state.c	FUNCTION_31	CALL_7
0x4001cd6	      0xe815faffff	               call sym.settermprop_bool	      1783	state.c	FUNCTION_31	CALL_7
0x4001cdb	      0xba01000000	                              mov edx, 1	      1784	state.c	FUNCTION_31	CALL_8
0x4001ce0	      0xbe02000000	                              mov esi, 2	      1784	state.c	FUNCTION_31	CALL_8
0x4001ce5	          0x4889df	                            mov rdi, rbx	      1784	state.c	FUNCTION_31	CALL_8
0x4001ce8	      0xe803faffff	               call sym.settermprop_bool	      1784	state.c	FUNCTION_31	CALL_8
0x4001ced	      0xba01000000	                              mov edx, 1	      1785	state.c	FUNCTION_31	CALL_9
0x4001cf2	      0xbe07000000	                              mov esi, 7	      1785	state.c	FUNCTION_31	CALL_9
0x4001cf7	          0x4889df	                            mov rdi, rbx	      1785	state.c	FUNCTION_31	CALL_9
0x4001cfa	      0xe82afaffff	                call sym.settermprop_int	      1785	state.c	FUNCTION_31	CALL_9
0x4001cff	          0x4585e4	                         test r12d, r12d	      1787	state.c	FUNCTION_31	IF_4
0x4001d02	            0x7430	                            je 0x4001d34	      1787	state.c	FUNCTION_31	IF_4
0x4001d04	    0xc74330000000	               mov dword [rbx + 0x30], 0	      1790	state.c	FUNCTION_31	IF_4
0x4001d0b	    0xc74334000000	               mov dword [rbx + 0x34], 0	      1791	state.c	FUNCTION_31	IF_4
0x4001d12	    0xc74338000000	               mov dword [rbx + 0x38], 0	      1792	state.c	FUNCTION_31	IF_4
0x4001d19	          0x8b7328	            mov esi, dword [rbx + 0x28] 	      1794	state.c	FUNCTION_31	IF_4
0x4001d1c	        0x48c1e620	                           shl rsi, 0x20	      1794	state.c	FUNCTION_31	IF_4
0x4001d20	          0x8b532c	            mov edx, dword [rbx + 0x2c] 	      1795	state.c	FUNCTION_31	IF_4
0x4001d23	        0x48c1e220	                           shl rdx, 0x20	      1795	state.c	FUNCTION_31	IF_4
0x4001d27	      0xb900000000	                              mov ecx, 0	      1796	state.c	FUNCTION_31	IF_4	CALL_10
0x4001d2c	          0x4889df	                            mov rdi, rbx	      1796	state.c	FUNCTION_31	IF_4	CALL_10
0x4001d2f	      0xe8f4e3ffff	                          call sym.erase	      1796	state.c	FUNCTION_31	IF_4	CALL_10
0x4001d34	              0x5b	                                 pop rbx	      1798	state.c	FUNCTION_31
0x4001d35	              0x5d	                                 pop rbp	      1798	state.c	FUNCTION_31
0x4001d36	            0x415c	                                 pop r12	      1798	state.c	FUNCTION_31
0x4001d38	            0x415d	                                 pop r13	      1798	state.c	FUNCTION_31
0x4001d3a	            0x415e	                                 pop r14	      1798	state.c	FUNCTION_31
0x4001d3c	              0xc3	                                     ret	      1798	state.c	FUNCTION_31
vterm_state_get_mousestate	FOR,0:IF,0:functions,0:WHILE,0:CALL,0:SWITCH,0:DO,0:ELSE,0	9
0x4001271	          0x8b4760	            mov eax, dword [rdi + 0x60] 	      1807	state.c	FUNCTION_33
0x4001274	          0x894604	                mov dword [rsi + 4], eax	      1807	state.c	FUNCTION_33
0x4001277	          0x8b4764	            mov eax, dword [rdi + 0x64] 	      1808	state.c	FUNCTION_33
0x400127a	            0x8906	                    mov dword [rsi], eax	      1808	state.c	FUNCTION_33
0x400127c	          0x8b4768	            mov eax, dword [rdi + 0x68] 	      1809	state.c	FUNCTION_33
0x400127f	          0x894608	                mov dword [rsi + 8], eax	      1809	state.c	FUNCTION_33
0x4001282	          0x8b476c	            mov eax, dword [rdi + 0x6c] 	      1810	state.c	FUNCTION_33
0x4001285	          0x89460c	              mov dword [rsi + 0xc], eax	      1810	state.c	FUNCTION_33
0x4001288	              0xc3	                                     ret	      1810	state.c	FUNCTION_33
on_escape	FOR,2:IF,10:functions,0:WHILE,0:CALL,10:SWITCH,3:DO,0:ELSE,0	215
0x4001d3d	            0x4156	                                push r14	       571	state.c	FUNCTION_21
0x4001d3f	            0x4155	                                push r13	       571	state.c	FUNCTION_21
0x4001d41	            0x4154	                                push r12	       571	state.c	FUNCTION_21
0x4001d43	              0x55	                                push rbp	       571	state.c	FUNCTION_21
0x4001d44	              0x53	                                push rbx	       571	state.c	FUNCTION_21
0x4001d45	        0x4883ec10	                           sub rsp, 0x10	       571	state.c	FUNCTION_21
0x4001d49	    0x64488b042528	                mov rax, qword fs:[0x28]	       571	state.c	FUNCTION_21
0x4001d52	      0x4889442408	                mov qword [rsp + 8], rax	       571	state.c	FUNCTION_21
0x4001d57	            0x31c0	                            xor eax, eax	       571	state.c	FUNCTION_21
0x4001d59	           0xfb62f	                   movzx ebp, byte [rdi]	       577	state.c	FUNCTION_21	SWITCH_1
0x4001d5c	          0x8d45e0	                   lea eax, [rbp - 0x20]	       577	state.c	FUNCTION_21	SWITCH_1
0x4001d5f	            0x3c5e	                            cmp al, 0x5e	       577	state.c	FUNCTION_21	SWITCH_1
0x4001d61	            0x770d	                            ja 0x4001d70	       577	state.c	FUNCTION_21	SWITCH_1
0x4001d63	          0x4889d3	                            mov rbx, rdx	       577	state.c	FUNCTION_21	SWITCH_1
0x4001d66	           0xfb6c0	                           movzx eax, al	       577	state.c	FUNCTION_21	SWITCH_1
0x4001d69	    0xff24c5000000	                       jmp qword [rax*8]	       577	state.c	FUNCTION_21	SWITCH_1
0x4001d70	      0xb800000000	                              mov eax, 0	       707	state.c	FUNCTION_21	SWITCH_1
0x4001d75	      0xe930030000	                           jmp 0x40020aa	       707	state.c	FUNCTION_21	SWITCH_1
0x4001d7a	      0xb800000000	                              mov eax, 0	       580	state.c	FUNCTION_21	SWITCH_1	IF_1
0x4001d7f	        0x4883fe02	                              cmp rsi, 2	       579	state.c	FUNCTION_21	SWITCH_1	IF_1
0x4001d83	     0xf8521030000	                           jne 0x40020aa	       579	state.c	FUNCTION_21	SWITCH_1	IF_1
0x4001d89	         0xfb64701	               movzx eax, byte [rdi + 1]	       582	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x4001d8d	            0x3c46	                            cmp al, 0x46	       582	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x4001d8f	            0x7409	                            je 0x4001d9a	       582	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x4001d91	            0x3c47	                            cmp al, 0x47	       582	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x4001d93	            0x7416	                            je 0x4001dab	       582	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x4001d95	      0xe904030000	                           jmp 0x400209e	       582	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x4001d9a	          0x488b02	                    mov rax, qword [rdx]	       584	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x4001d9d	        0x806018fd	             and byte [rax + 0x18], 0xfd	       584	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x4001da1	      0xb802000000	                              mov eax, 2	       594	state.c	FUNCTION_21	SWITCH_1
0x4001da6	      0xe9ff020000	                           jmp 0x40020aa	       585	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x4001dab	          0x488b02	                    mov rax, qword [rdx]	       588	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x4001dae	        0x80481802	                 or byte [rax + 0x18], 2	       588	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x4001db2	      0xb802000000	                              mov eax, 2	       594	state.c	FUNCTION_21	SWITCH_1
0x4001db7	      0xe9ee020000	                           jmp 0x40020aa	       589	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x4001dbc	      0xb800000000	                              mov eax, 0	       598	state.c	FUNCTION_21	SWITCH_1	IF_2
0x4001dc1	        0x4883fe02	                              cmp rsi, 2	       597	state.c	FUNCTION_21	SWITCH_1	IF_2
0x4001dc5	     0xf85df020000	                           jne 0x40020aa	       597	state.c	FUNCTION_21	SWITCH_1	IF_2
0x4001dcb	         0xfb64701	               movzx eax, byte [rdi + 1]	       600	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x4001dcf	          0x83e833	                           sub eax, 0x33	       600	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x4001dd2	            0x3c05	                               cmp al, 5	       600	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x4001dd4	     0xf87cb020000	                            ja 0x40020a5	       600	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x4001dda	           0xfb6c0	                           movzx eax, al	       600	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x4001ddd	    0xff24c5000000	                       jmp qword [rax*8]	       600	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x4001de4	      0xb802000000	                              mov eax, 2	       638	state.c	FUNCTION_21	SWITCH_1
0x4001de9	    0xf68295000000	           test byte [rdx + 0x95], 0x10 	       602	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_3
0x4001df0	     0xf85b4020000	                           jne 0x40020aa	       602	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_3
0x4001df6	          0x8b7230	            mov esi, dword [rdx + 0x30] 	       604	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_1
0x4001df9	    0x41b801000000	                              mov r8d, 1	       604	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_1
0x4001dff	      0xb901000000	                              mov ecx, 1	       604	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_1
0x4001e04	      0xba00000000	                              mov edx, 0	       604	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_1
0x4001e09	          0x4889df	                            mov rdi, rbx	       604	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_1
0x4001e0c	      0xe832e4ffff	                   call sym.set_lineinfo	       604	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_1
0x4001e11	      0xb802000000	                              mov eax, 2	       638	state.c	FUNCTION_21	SWITCH_1
0x4001e16	      0xe98f020000	                           jmp 0x40020aa	       605	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x4001e1b	      0xb802000000	                              mov eax, 2	       638	state.c	FUNCTION_21	SWITCH_1
0x4001e20	    0xf68295000000	           test byte [rdx + 0x95], 0x10 	       608	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_4
0x4001e27	     0xf857d020000	                           jne 0x40020aa	       608	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_4
0x4001e2d	          0x8b7230	            mov esi, dword [rdx + 0x30] 	       610	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_2
0x4001e30	    0x41b802000000	                              mov r8d, 2	       610	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_2
0x4001e36	      0xb901000000	                              mov ecx, 1	       610	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_2
0x4001e3b	      0xba00000000	                              mov edx, 0	       610	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_2
0x4001e40	          0x4889df	                            mov rdi, rbx	       610	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_2
0x4001e43	      0xe8fbe3ffff	                   call sym.set_lineinfo	       610	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_2
0x4001e48	      0xb802000000	                              mov eax, 2	       638	state.c	FUNCTION_21	SWITCH_1
0x4001e4d	      0xe958020000	                           jmp 0x40020aa	       611	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x4001e52	      0xb802000000	                              mov eax, 2	       638	state.c	FUNCTION_21	SWITCH_1
0x4001e57	    0xf68295000000	           test byte [rdx + 0x95], 0x10 	       614	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_5
0x4001e5e	     0xf8546020000	                           jne 0x40020aa	       614	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_5
0x4001e64	          0x8b7230	            mov esi, dword [rdx + 0x30] 	       616	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_3
0x4001e67	    0x41b800000000	                              mov r8d, 0	       616	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_3
0x4001e6d	      0xb900000000	                              mov ecx, 0	       616	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_3
0x4001e72	      0xba00000000	                              mov edx, 0	       616	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_3
0x4001e77	          0x4889df	                            mov rdi, rbx	       616	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_3
0x4001e7a	      0xe8c4e3ffff	                   call sym.set_lineinfo	       616	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_3
0x4001e7f	      0xb802000000	                              mov eax, 2	       638	state.c	FUNCTION_21	SWITCH_1
0x4001e84	      0xe921020000	                           jmp 0x40020aa	       617	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x4001e89	      0xb802000000	                              mov eax, 2	       638	state.c	FUNCTION_21	SWITCH_1
0x4001e8e	    0xf68295000000	           test byte [rdx + 0x95], 0x10 	       620	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_6
0x4001e95	     0xf850f020000	                           jne 0x40020aa	       620	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_6
0x4001e9b	          0x8b7230	            mov esi, dword [rdx + 0x30] 	       622	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_4
0x4001e9e	    0x41b800000000	                              mov r8d, 0	       622	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_4
0x4001ea4	      0xb901000000	                              mov ecx, 1	       622	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_4
0x4001ea9	      0xba00000000	                              mov edx, 0	       622	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_4
0x4001eae	          0x4889df	                            mov rdi, rbx	       622	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_4
0x4001eb1	      0xe88de3ffff	                   call sym.set_lineinfo	       622	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_4
0x4001eb6	      0xb802000000	                              mov eax, 2	       638	state.c	FUNCTION_21	SWITCH_1
0x4001ebb	      0xe9ea010000	                           jmp 0x40020aa	       623	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x4001ec0	    0xc70424450000	                   mov dword [rsp], 0x45	       628	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x4001ec7	    0xc74424040000	                  mov dword [rsp + 4], 0	       628	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x4001ecf	    0x41be00000000	                             mov r14d, 0	       629	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1
0x4001ed5	        0x837a2800	               cmp dword [rdx + 0x28], 0	       629	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1
0x4001ed9	            0x7f48	                            jg 0x4001f23	       629	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1
0x4001edb	            0xeb57	                           jmp 0x4001f34	       629	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1
0x4001edd	        0x48c1e120	                           shl rcx, 0x20	       631	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2
0x4001ee1	          0x4c09e9	                             or rcx, r13	       631	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2
0x4001ee4	      0xba01000000	                              mov edx, 1	       631	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2
0x4001ee9	          0x4889e6	                            mov rsi, rsp	       631	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2
0x4001eec	          0x4889df	                            mov rdi, rbx	       631	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2
0x4001eef	      0xe84ce1ffff	                       call sym.putglyph	       631	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2
0x4001ef4	            0x89e9	                            mov ecx, ebp	       631	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2
0x4001ef6	        0x488b4358	            mov rax, qword [rbx + 0x58] 	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x4001efa	      0x42f6042001	                test byte [rax + r12], 1	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x4001eff	            0x740e	                            je 0x4001f0f	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x4001f01	          0x8b432c	            mov eax, dword [rbx + 0x2c] 	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x4001f04	            0x89c2	                            mov edx, eax	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x4001f06	          0xc1ea1f	                           shr edx, 0x1f	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x4001f09	             0x1d0	                            add eax, edx	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x4001f0b	            0xd1f8	                              sar eax, 1	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x4001f0d	            0xeb03	                           jmp 0x4001f12	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x4001f0f	          0x8b432c	            mov eax, dword [rbx + 0x2c] 	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x4001f12	          0x83c501	                              add ebp, 1	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x4001f15	            0x39c8	                            cmp eax, ecx	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x4001f17	            0x7fc4	                            jg 0x4001edd	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x4001f19	        0x4183c601	                             add r14d, 1	       629	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1
0x4001f1d	        0x44397328	           cmp dword [rbx + 0x28], r14d 	       629	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1
0x4001f21	            0x7e11	                           jle 0x4001f34	       629	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1
0x4001f23	          0x4d63e6	                        movsxd r12, r14d	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x4001f26	        0x49c1e402	                              shl r12, 2	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x4001f2a	      0xbd00000000	                              mov ebp, 0	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x4001f2f	          0x4589f5	                          mov r13d, r14d	       631	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2
0x4001f32	            0xebc0	                           jmp 0x4001ef4	       631	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2
0x4001f34	      0xb802000000	                              mov eax, 2	       638	state.c	FUNCTION_21	SWITCH_1
0x4001f39	      0xe96c010000	                           jmp 0x40020aa	       638	state.c	FUNCTION_21	SWITCH_1
0x4001f3e	      0xb800000000	                              mov eax, 0	       642	state.c	FUNCTION_21	SWITCH_1	IF_7
0x4001f43	        0x4883fe02	                              cmp rsi, 2	       641	state.c	FUNCTION_21	SWITCH_1	IF_7
0x4001f47	     0xf855d010000	                           jne 0x40020aa	       641	state.c	FUNCTION_21	SWITCH_1	IF_7
0x4001f4d	         0xfbe7701	               movsx esi, byte [rdi + 1]	       646	state.c	FUNCTION_21	SWITCH_1	CALL_7
0x4001f51	      0xbf01000000	                              mov edi, 1	       646	state.c	FUNCTION_21	SWITCH_1	CALL_7
0x4001f56	      0xe800000000	                          call 0x4001f5b	       646	state.c	FUNCTION_21	SWITCH_1	CALL_7
0x4001f5b	          0x4889c7	                            mov rdi, rax	       646	state.c	FUNCTION_21	SWITCH_1	CALL_7
0x4001f5e	      0xb802000000	                              mov eax, 2	       656	state.c	FUNCTION_21	SWITCH_1
0x4001f63	          0x4885ff	                           test rdi, rdi	       648	state.c	FUNCTION_21	SWITCH_1	IF_8
0x4001f66	     0xf843e010000	                            je 0x40020aa	       648	state.c	FUNCTION_21	SWITCH_1	IF_8
0x4001f6c	        0x400fbed5	                          movsx edx, bpl	       645	state.c	FUNCTION_21	SWITCH_1
0x4001f70	          0x83ea28	                           sub edx, 0x28	       645	state.c	FUNCTION_21	SWITCH_1
0x4001f73	          0x4863c2	                         movsxd rax, edx	       649	state.c	FUNCTION_21	SWITCH_1	IF_8
0x4001f76	        0x488d0440	                  lea rax, [rax + rax*2]	       649	state.c	FUNCTION_21	SWITCH_1	IF_8
0x4001f7a	    0x4889bcc39800	     mov qword [rbx + rax*8 + 0x98], rdi	       649	state.c	FUNCTION_21	SWITCH_1	IF_8
0x4001f82	          0x488b0f	                    mov rcx, qword [rdi]	       651	state.c	FUNCTION_21	SWITCH_1	IF_8	IF_9
0x4001f85	      0xb802000000	                              mov eax, 2	       656	state.c	FUNCTION_21	SWITCH_1
0x4001f8a	          0x4885c9	                           test rcx, rcx	       651	state.c	FUNCTION_21	SWITCH_1	IF_8	IF_9
0x4001f8d	     0xf8417010000	                            je 0x40020aa	       651	state.c	FUNCTION_21	SWITCH_1	IF_8	IF_9
0x4001f93	          0x4863d2	                         movsxd rdx, edx	       652	state.c	FUNCTION_21	SWITCH_1	IF_8	IF_9
0x4001f96	        0x488d0452	                  lea rax, [rdx + rdx*2]	       652	state.c	FUNCTION_21	SWITCH_1	IF_8	IF_9
0x4001f9a	    0x488db4c3a000	          lea rsi, [rbx + rax*8 + 0xa0] 	       652	state.c	FUNCTION_21	SWITCH_1	IF_8	IF_9
0x4001fa2	            0xffd1	                                call rcx	       652	state.c	FUNCTION_21	SWITCH_1	IF_8	IF_9
0x4001fa4	      0xb802000000	                              mov eax, 2	       656	state.c	FUNCTION_21	SWITCH_1
0x4001fa9	      0xe9fc000000	                           jmp 0x40020aa	       656	state.c	FUNCTION_21	SWITCH_1
0x4001fae	      0xbe01000000	                              mov esi, 1	       659	state.c	FUNCTION_21	SWITCH_1	CALL_8
0x4001fb3	          0x4889d7	                            mov rdi, rdx	       659	state.c	FUNCTION_21	SWITCH_1	CALL_8
0x4001fb6	      0xe8a7f7ffff	                     call sym.savecursor	       659	state.c	FUNCTION_21	SWITCH_1	CALL_8
0x4001fbb	      0xb801000000	                              mov eax, 1	       660	state.c	FUNCTION_21	SWITCH_1
0x4001fc0	      0xe9e5000000	                           jmp 0x40020aa	       660	state.c	FUNCTION_21	SWITCH_1
0x4001fc5	      0xbe00000000	                              mov esi, 0	       663	state.c	FUNCTION_21	SWITCH_1	CALL_9
0x4001fca	          0x4889d7	                            mov rdi, rdx	       663	state.c	FUNCTION_21	SWITCH_1	CALL_9
0x4001fcd	      0xe890f7ffff	                     call sym.savecursor	       663	state.c	FUNCTION_21	SWITCH_1	CALL_9
0x4001fd2	      0xb801000000	                              mov eax, 1	       664	state.c	FUNCTION_21	SWITCH_1
0x4001fd7	      0xe9ce000000	                           jmp 0x40020aa	       664	state.c	FUNCTION_21	SWITCH_1
0x4001fdc	    0x808a94000000	                 or byte [rdx + 0x94], 1	       670	state.c	FUNCTION_21	SWITCH_1
0x4001fe3	      0xb801000000	                              mov eax, 1	       671	state.c	FUNCTION_21	SWITCH_1
0x4001fe8	      0xe9bd000000	                           jmp 0x40020aa	       671	state.c	FUNCTION_21	SWITCH_1
0x4001fed	    0x80a294000000	             and byte [rdx + 0x94], 0xfe	       674	state.c	FUNCTION_21	SWITCH_1
0x4001ff4	      0xb801000000	                              mov eax, 1	       675	state.c	FUNCTION_21	SWITCH_1
0x4001ff9	      0xe9ac000000	                           jmp 0x40020aa	       675	state.c	FUNCTION_21	SWITCH_1
0x4001ffe	        0x488b6a30	            mov rbp, qword [rdx + 0x30] 	       679	state.c	FUNCTION_21	SWITCH_1
0x4002002	      0xbe01000000	                              mov esi, 1	       680	state.c	FUNCTION_21	SWITCH_1	CALL_10
0x4002007	          0x4889d7	                            mov rdi, rdx	       680	state.c	FUNCTION_21	SWITCH_1	CALL_10
0x400200a	      0xe800000000	                          call 0x400200f	       680	state.c	FUNCTION_21	SWITCH_1	CALL_10
0x400200f	        0x488b4308	                mov rax, qword [rbx + 8]	       681	state.c	FUNCTION_21	SWITCH_1	IF_10
0x4002013	          0x4885c0	                           test rax, rax	       681	state.c	FUNCTION_21	SWITCH_1	IF_10
0x4002016	            0x7423	                            je 0x400203b	       681	state.c	FUNCTION_21	SWITCH_1	IF_10
0x4002018	        0x488b4008	                mov rax, qword [rax + 8]	       681	state.c	FUNCTION_21	SWITCH_1	IF_10
0x400201c	          0x4885c0	                           test rax, rax	       681	state.c	FUNCTION_21	SWITCH_1	IF_10
0x400201f	            0x741a	                            je 0x400203b	       681	state.c	FUNCTION_21	SWITCH_1	IF_10
0x4002021	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	       682	state.c	FUNCTION_21	SWITCH_1	IF_10
0x4002025	     0xfb693940000	           movzx edx, byte [rbx + 0x94] 	       682	state.c	FUNCTION_21	SWITCH_1	IF_10
0x400202c	          0xc0ea05	                               shr dl, 5	       682	state.c	FUNCTION_21	SWITCH_1	IF_10
0x400202f	          0x83e201	                              and edx, 1	       682	state.c	FUNCTION_21	SWITCH_1	IF_10
0x4002032	        0x488b7b30	            mov rdi, qword [rbx + 0x30] 	       682	state.c	FUNCTION_21	SWITCH_1	IF_10
0x4002036	          0x4889ee	                            mov rsi, rbp	       682	state.c	FUNCTION_21	SWITCH_1	IF_10
0x4002039	            0xffd0	                                call rax	       682	state.c	FUNCTION_21	SWITCH_1	IF_10
0x400203b	      0xb801000000	                              mov eax, 1	       683	state.c	FUNCTION_21	SWITCH_1
0x4002040	            0xeb68	                           jmp 0x40020aa	       683	state.c	FUNCTION_21	SWITCH_1
0x4002042	    0xc78210010000	              mov dword [rdx + 0x110], 2	       687	state.c	FUNCTION_21	SWITCH_1
0x400204c	      0xb801000000	                              mov eax, 1	       688	state.c	FUNCTION_21	SWITCH_1
0x4002051	            0xeb57	                           jmp 0x40020aa	       688	state.c	FUNCTION_21	SWITCH_1
0x4002053	    0xc78210010000	              mov dword [rdx + 0x110], 3	       691	state.c	FUNCTION_21	SWITCH_1
0x400205d	      0xb801000000	                              mov eax, 1	       692	state.c	FUNCTION_21	SWITCH_1
0x4002062	            0xeb46	                           jmp 0x40020aa	       692	state.c	FUNCTION_21	SWITCH_1
0x4002064	    0xc78214010000	              mov dword [rdx + 0x114], 1	       695	state.c	FUNCTION_21	SWITCH_1
0x400206e	      0xb801000000	                              mov eax, 1	       696	state.c	FUNCTION_21	SWITCH_1
0x4002073	            0xeb35	                           jmp 0x40020aa	       696	state.c	FUNCTION_21	SWITCH_1
0x4002075	    0xc78214010000	              mov dword [rdx + 0x114], 2	       699	state.c	FUNCTION_21	SWITCH_1
0x400207f	      0xb801000000	                              mov eax, 1	       700	state.c	FUNCTION_21	SWITCH_1
0x4002084	            0xeb24	                           jmp 0x40020aa	       700	state.c	FUNCTION_21	SWITCH_1
0x4002086	    0xc78214010000	              mov dword [rdx + 0x114], 3	       703	state.c	FUNCTION_21	SWITCH_1
0x4002090	      0xb801000000	                              mov eax, 1	       704	state.c	FUNCTION_21	SWITCH_1
0x4002095	            0xeb13	                           jmp 0x40020aa	       704	state.c	FUNCTION_21	SWITCH_1
0x4002097	      0xb801000000	                              mov eax, 1	       667	state.c	FUNCTION_21	SWITCH_1
0x400209c	            0xeb0c	                           jmp 0x40020aa	       667	state.c	FUNCTION_21	SWITCH_1
0x400209e	      0xb800000000	                              mov eax, 0	       592	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x40020a3	            0xeb05	                           jmp 0x40020aa	       592	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x40020a5	      0xb800000000	                              mov eax, 0	       636	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x40020aa	      0x488b542408	                mov rdx, qword [rsp + 8]	       709	state.c	FUNCTION_21
0x40020af	    0x644833142528	                xor rdx, qword fs:[0x28]	       709	state.c	FUNCTION_21
0x40020b8	            0x7405	                            je 0x40020bf	       709	state.c	FUNCTION_21
0x40020ba	      0xe800000000	                          call 0x40020bf	       709	state.c	FUNCTION_21
0x40020bf	        0x4883c410	                           add rsp, 0x10	       709	state.c	FUNCTION_21
0x40020c3	              0x5b	                                 pop rbx	       709	state.c	FUNCTION_21
0x40020c4	              0x5d	                                 pop rbp	       709	state.c	FUNCTION_21
0x40020c5	            0x415c	                                 pop r12	       709	state.c	FUNCTION_21
0x40020c7	            0x415d	                                 pop r13	       709	state.c	FUNCTION_21
0x40020c9	            0x415e	                                 pop r14	       709	state.c	FUNCTION_21
0x40020cb	              0xc3	                                     ret	       709	state.c	FUNCTION_21
settermprop_string	FOR,0:IF,0:functions,0:WHILE,0:CALL,4:SWITCH,0:DO,0:ELSE,0	43
0x400145b	            0x4156	                                push r14	       531	state.c	FUNCTION_19
0x400145d	            0x4155	                                push r13	       531	state.c	FUNCTION_19
0x400145f	            0x4154	                                push r12	       531	state.c	FUNCTION_19
0x4001461	              0x55	                                push rbp	       531	state.c	FUNCTION_19
0x4001462	              0x53	                                push rbx	       531	state.c	FUNCTION_19
0x4001463	        0x4883ec10	                           sub rsp, 0x10	       531	state.c	FUNCTION_19
0x4001467	          0x4889fd	                            mov rbp, rdi	       531	state.c	FUNCTION_19
0x400146a	          0x4189f5	                           mov r13d, esi	       531	state.c	FUNCTION_19
0x400146d	          0x4989d6	                            mov r14, rdx	       531	state.c	FUNCTION_19
0x4001470	          0x4989cc	                            mov r12, rcx	       531	state.c	FUNCTION_19
0x4001473	    0x64488b042528	                mov rax, qword fs:[0x28]	       531	state.c	FUNCTION_19
0x400147c	      0x4889442408	                mov qword [rsp + 8], rax	       531	state.c	FUNCTION_19
0x4001481	            0x31c0	                            xor eax, eax	       531	state.c	FUNCTION_19
0x4001483	        0x488d7101	                      lea rsi, [rcx + 1]	       535	state.c	FUNCTION_19	CALL_1
0x4001487	          0x488b3f	                    mov rdi, qword [rdi]	       535	state.c	FUNCTION_19	CALL_1
0x400148a	      0xe800000000	                          call 0x400148f	       535	state.c	FUNCTION_19	CALL_1
0x400148f	          0x4889c3	                            mov rbx, rax	       535	state.c	FUNCTION_19	CALL_1
0x4001492	          0x4c89e2	                            mov rdx, r12	       126	string3.h	FUNCTION_50	CALL_3
0x4001495	          0x4c89f6	                            mov rsi, r14	       126	string3.h	FUNCTION_50	CALL_3
0x4001498	          0x4889c7	                            mov rdi, rax	       126	string3.h	FUNCTION_50	CALL_3
0x400149b	      0xe800000000	                          call 0x40014a0	       126	string3.h	FUNCTION_50	CALL_3
0x40014a0	      0x42c6042300	                 mov byte [rbx + r12], 0	       537	state.c	FUNCTION_19
0x40014a5	        0x48891c24	                    mov qword [rsp], rbx	       539	state.c	FUNCTION_19
0x40014a9	          0x4889e2	                            mov rdx, rsp	       540	state.c	FUNCTION_19	CALL_3
0x40014ac	          0x4489ee	                           mov esi, r13d	       540	state.c	FUNCTION_19	CALL_3
0x40014af	          0x4889ef	                            mov rdi, rbp	       540	state.c	FUNCTION_19	CALL_3
0x40014b2	      0xe800000000	                          call 0x40014b7	       540	state.c	FUNCTION_19	CALL_3
0x40014b7	          0x4189c4	                           mov r12d, eax	       540	state.c	FUNCTION_19	CALL_3
0x40014ba	          0x4889de	                            mov rsi, rbx	       541	state.c	FUNCTION_19	CALL_4
0x40014bd	        0x488b7d00	                    mov rdi, qword [rbp]	       541	state.c	FUNCTION_19	CALL_4
0x40014c1	      0xe800000000	                          call 0x40014c6	       541	state.c	FUNCTION_19	CALL_4
0x40014c6	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       543	state.c	FUNCTION_19
0x40014cb	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       543	state.c	FUNCTION_19
0x40014d4	            0x7405	                            je 0x40014db	       543	state.c	FUNCTION_19
0x40014d6	      0xe800000000	                          call 0x40014db	       543	state.c	FUNCTION_19
0x40014db	          0x4489e0	                           mov eax, r12d	       543	state.c	FUNCTION_19
0x40014de	        0x4883c410	                           add rsp, 0x10	       543	state.c	FUNCTION_19
0x40014e2	              0x5b	                                 pop rbx	       543	state.c	FUNCTION_19
0x40014e3	              0x5d	                                 pop rbp	       543	state.c	FUNCTION_19
0x40014e4	            0x415c	                                 pop r12	       543	state.c	FUNCTION_19
0x40014e6	            0x415d	                                 pop r13	       543	state.c	FUNCTION_19
0x40014e8	            0x415e	                                 pop r14	       543	state.c	FUNCTION_19
0x40014ea	              0xc3	                                     ret	       543	state.c	FUNCTION_19
