clear_col_tabstop	functions,0:CALL,0:DO,0:WHILE,0:IF,0:ELSE,0:SWITCH,0:FOR,0	32
0x4000779	              0x55	                                push rbp	       162	state.c	FUNCTION_10
0x400077a	          0x4889e5	                            mov rbp, rsp	       162	state.c	FUNCTION_10
0x400077d	        0x48897de8	             mov qword [rbp - 0x18], rdi	       162	state.c	FUNCTION_10
0x4000781	          0x8975e4	             mov dword [rbp - 0x1c], esi	       162	state.c	FUNCTION_10
0x4000784	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       163	state.c	FUNCTION_10
0x4000787	          0x83e007	                              and eax, 7	       163	state.c	FUNCTION_10
0x400078a	      0xba01000000	                              mov edx, 1	       163	state.c	FUNCTION_10
0x400078f	            0x89c1	                            mov ecx, eax	       163	state.c	FUNCTION_10
0x4000791	            0xd3e2	                             shl edx, cl	       163	state.c	FUNCTION_10
0x4000793	            0x89d0	                            mov eax, edx	       163	state.c	FUNCTION_10
0x4000795	          0x8845ff	                  mov byte [rbp - 1], al	       163	state.c	FUNCTION_10
0x4000798	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       164	state.c	FUNCTION_10
0x400079c	        0x488b5050	            mov rdx, qword [rax + 0x50] 	       164	state.c	FUNCTION_10
0x40007a0	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       164	state.c	FUNCTION_10
0x40007a3	          0xc1f803	                              sar eax, 3	       164	state.c	FUNCTION_10
0x40007a6	            0x4898	                                    cdqe	       164	state.c	FUNCTION_10
0x40007a8	          0x4801c2	                            add rdx, rax	       164	state.c	FUNCTION_10
0x40007ab	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       164	state.c	FUNCTION_10
0x40007af	        0x488b4850	            mov rcx, qword [rax + 0x50] 	       164	state.c	FUNCTION_10
0x40007b3	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       164	state.c	FUNCTION_10
0x40007b6	          0xc1f803	                              sar eax, 3	       164	state.c	FUNCTION_10
0x40007b9	            0x4898	                                    cdqe	       164	state.c	FUNCTION_10
0x40007bb	          0x4801c8	                            add rax, rcx	       164	state.c	FUNCTION_10
0x40007be	           0xfb600	                   movzx eax, byte [rax]	       164	state.c	FUNCTION_10
0x40007c1	            0x89c1	                            mov ecx, eax	       164	state.c	FUNCTION_10
0x40007c3	         0xfb645ff	               movzx eax, byte [rbp - 1]	       164	state.c	FUNCTION_10
0x40007c7	            0xf7d0	                                 not eax	       164	state.c	FUNCTION_10
0x40007c9	            0x21c8	                            and eax, ecx	       164	state.c	FUNCTION_10
0x40007cb	            0x8802	                      mov byte [rdx], al	       164	state.c	FUNCTION_10
0x40007cd	              0x90	                                     nop	       165	state.c	FUNCTION_10
0x40007ce	              0x5d	                                 pop rbp	       165	state.c	FUNCTION_10
0x40007cf	              0xc3	                                     ret	       165	state.c	FUNCTION_10
on_dcs	functions,0:CALL,1:DO,0:WHILE,0:IF,3:ELSE,1:SWITCH,0:FOR,0	52
0x4004cc9	              0x55	                                push rbp	      1595	state.c	FUNCTION_28
0x4004cca	          0x4889e5	                            mov rbp, rsp	      1595	state.c	FUNCTION_28
0x4004ccd	        0x4883ec30	                           sub rsp, 0x30	      1595	state.c	FUNCTION_28
0x4004cd1	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1595	state.c	FUNCTION_28
0x4004cd5	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1595	state.c	FUNCTION_28
0x4004cd9	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1595	state.c	FUNCTION_28
0x4004cdd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1596	state.c	FUNCTION_28
0x4004ce1	        0x488945f8	                mov qword [rbp - 8], rax	      1596	state.c	FUNCTION_28
0x4004ce5	      0x48837de001	               cmp qword [rbp - 0x20], 1	      1598	state.c	FUNCTION_28	IF_1
0x4004cea	            0x7640	                           jbe 0x4004d2c	      1598	state.c	FUNCTION_28	IF_1
0x4004cec	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1598	state.c	FUNCTION_28	IF_1
0x4004cf0	      0xba02000000	                              mov edx, 2	      1598	state.c	FUNCTION_28	IF_1
0x4004cf5	      0xbe00000000	                              mov esi, 0	      1598	state.c	FUNCTION_28	IF_1
0x4004cfa	          0x4889c7	                            mov rdi, rax	      1598	state.c	FUNCTION_28	IF_1
0x4004cfd	      0xe800000000	                          call 0x4004d02	      1598	state.c	FUNCTION_28	IF_1
0x4004d02	            0x85c0	                           test eax, eax	      1598	state.c	FUNCTION_28	IF_1
0x4004d04	            0x7526	                           jne 0x4004d2c	      1598	state.c	FUNCTION_28	IF_1
0x4004d06	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1599	state.c	FUNCTION_28	IF_1	CALL_1
0x4004d0a	        0x488d50fe	                      lea rdx, [rax - 2]	      1599	state.c	FUNCTION_28	IF_1	CALL_1
0x4004d0e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1599	state.c	FUNCTION_28	IF_1	CALL_1
0x4004d12	        0x488d4802	                      lea rcx, [rax + 2]	      1599	state.c	FUNCTION_28	IF_1	CALL_1
0x4004d16	        0x488b45f8	                mov rax, qword [rbp - 8]	      1599	state.c	FUNCTION_28	IF_1	CALL_1
0x4004d1a	          0x4889ce	                            mov rsi, rcx	      1599	state.c	FUNCTION_28	IF_1	CALL_1
0x4004d1d	          0x4889c7	                            mov rdi, rax	      1599	state.c	FUNCTION_28	IF_1	CALL_1
0x4004d20	      0xe8effbffff	          call sym.request_status_string	      1599	state.c	FUNCTION_28	IF_1	CALL_1
0x4004d25	      0xb801000000	                              mov eax, 1	      1600	state.c	FUNCTION_28	IF_1
0x4004d2a	            0xeb4f	                           jmp 0x4004d7b	      1600	state.c	FUNCTION_28	IF_1
0x4004d2c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1602	state.c	FUNCTION_28	ELSE_1	IF_2
0x4004d30	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1602	state.c	FUNCTION_28	ELSE_1	IF_2
0x4004d34	          0x4885c0	                           test rax, rax	      1602	state.c	FUNCTION_28	ELSE_1	IF_2
0x4004d37	            0x743d	                            je 0x4004d76	      1602	state.c	FUNCTION_28	ELSE_1	IF_2
0x4004d39	        0x488b45f8	                mov rax, qword [rbp - 8]	      1602	state.c	FUNCTION_28	ELSE_1	IF_2
0x4004d3d	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1602	state.c	FUNCTION_28	ELSE_1	IF_2
0x4004d41	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1602	state.c	FUNCTION_28	ELSE_1	IF_2
0x4004d45	          0x4885c0	                           test rax, rax	      1602	state.c	FUNCTION_28	ELSE_1	IF_2
0x4004d48	            0x742c	                            je 0x4004d76	      1602	state.c	FUNCTION_28	ELSE_1	IF_2
0x4004d4a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1603	state.c	FUNCTION_28	ELSE_1	IF_2	IF_3
0x4004d4e	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1603	state.c	FUNCTION_28	ELSE_1	IF_2	IF_3
0x4004d52	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1603	state.c	FUNCTION_28	ELSE_1	IF_2	IF_3
0x4004d56	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1603	state.c	FUNCTION_28	ELSE_1	IF_2	IF_3
0x4004d5a	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	      1603	state.c	FUNCTION_28	ELSE_1	IF_2	IF_3
0x4004d5e	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1603	state.c	FUNCTION_28	ELSE_1	IF_2	IF_3
0x4004d62	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      1603	state.c	FUNCTION_28	ELSE_1	IF_2	IF_3
0x4004d66	          0x4889cf	                            mov rdi, rcx	      1603	state.c	FUNCTION_28	ELSE_1	IF_2	IF_3
0x4004d69	            0xffd0	                                call rax	      1603	state.c	FUNCTION_28	ELSE_1	IF_2	IF_3
0x4004d6b	            0x85c0	                           test eax, eax	      1603	state.c	FUNCTION_28	ELSE_1	IF_2	IF_3
0x4004d6d	            0x7407	                            je 0x4004d76	      1603	state.c	FUNCTION_28	ELSE_1	IF_2	IF_3
0x4004d6f	      0xb801000000	                              mov eax, 1	      1604	state.c	FUNCTION_28	ELSE_1	IF_2	IF_3
0x4004d74	            0xeb05	                           jmp 0x4004d7b	      1604	state.c	FUNCTION_28	ELSE_1	IF_2	IF_3
0x4004d76	      0xb800000000	                              mov eax, 0	      1606	state.c	FUNCTION_28
0x4004d7b	              0xc9	                                   leave	      1607	state.c	FUNCTION_28
0x4004d7c	              0xc3	                                     ret	      1607	state.c	FUNCTION_28
vterm_state_reset	functions,0:CALL,10:DO,0:WHILE,0:IF,4:ELSE,1:SWITCH,0:FOR,3	215
0x400531b	              0x55	                                push rbp	      1722	state.c	FUNCTION_31
0x400531c	          0x4889e5	                            mov rbp, rsp	      1722	state.c	FUNCTION_31
0x400531f	        0x4883ec40	                           sub rsp, 0x40	      1722	state.c	FUNCTION_31
0x4005323	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1722	state.c	FUNCTION_31
0x4005327	          0x8975c4	             mov dword [rbp - 0x3c], esi	      1722	state.c	FUNCTION_31
0x400532a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1725	state.c	FUNCTION_31
0x400532e	    0xc7403c000000	               mov dword [rax + 0x3c], 0	      1725	state.c	FUNCTION_31
0x4005335	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1726	state.c	FUNCTION_31
0x4005339	    0xc74040ffffff	     mov dword [rax + 0x40], 0xffffffff 	      1726	state.c	FUNCTION_31
0x4005340	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1727	state.c	FUNCTION_31
0x4005344	    0xc74044000000	               mov dword [rax + 0x44], 0	      1727	state.c	FUNCTION_31
0x400534b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1728	state.c	FUNCTION_31
0x400534f	    0xc74048ffffff	     mov dword [rax + 0x48], 0xffffffff 	      1728	state.c	FUNCTION_31
0x4005356	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1730	state.c	FUNCTION_31
0x400535a	     0xfb690940000	           movzx edx, byte [rax + 0x94] 	      1730	state.c	FUNCTION_31
0x4005361	          0x83e2fe	                     and edx, 0xfffffffe	      1730	state.c	FUNCTION_31
0x4005364	    0x889094000000	               mov byte [rax + 0x94], dl	      1730	state.c	FUNCTION_31
0x400536a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1731	state.c	FUNCTION_31
0x400536e	     0xfb690940000	           movzx edx, byte [rax + 0x94] 	      1731	state.c	FUNCTION_31
0x4005375	          0x83e2fd	                     and edx, 0xfffffffd	      1731	state.c	FUNCTION_31
0x4005378	    0x889094000000	               mov byte [rax + 0x94], dl	      1731	state.c	FUNCTION_31
0x400537e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1732	state.c	FUNCTION_31
0x4005382	     0xfb690940000	           movzx edx, byte [rax + 0x94] 	      1732	state.c	FUNCTION_31
0x4005389	          0x83ca04	                               or edx, 4	      1732	state.c	FUNCTION_31
0x400538c	    0x889094000000	               mov byte [rax + 0x94], dl	      1732	state.c	FUNCTION_31
0x4005392	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1733	state.c	FUNCTION_31
0x4005396	     0xfb690940000	           movzx edx, byte [rax + 0x94] 	      1733	state.c	FUNCTION_31
0x400539d	          0x83e2f7	                     and edx, 0xfffffff7	      1733	state.c	FUNCTION_31
0x40053a0	    0x889094000000	               mov byte [rax + 0x94], dl	      1733	state.c	FUNCTION_31
0x40053a6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1734	state.c	FUNCTION_31
0x40053aa	     0xfb690940000	           movzx edx, byte [rax + 0x94] 	      1734	state.c	FUNCTION_31
0x40053b1	          0x83e2ef	                     and edx, 0xffffffef	      1734	state.c	FUNCTION_31
0x40053b4	    0x889094000000	               mov byte [rax + 0x94], dl	      1734	state.c	FUNCTION_31
0x40053ba	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1735	state.c	FUNCTION_31
0x40053be	     0xfb690950000	           movzx edx, byte [rax + 0x95] 	      1735	state.c	FUNCTION_31
0x40053c5	          0x83e2fd	                     and edx, 0xfffffffd	      1735	state.c	FUNCTION_31
0x40053c8	    0x889095000000	               mov byte [rax + 0x95], dl	      1735	state.c	FUNCTION_31
0x40053ce	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1736	state.c	FUNCTION_31
0x40053d2	     0xfb690950000	           movzx edx, byte [rax + 0x95] 	      1736	state.c	FUNCTION_31
0x40053d9	          0x83e2fb	                     and edx, 0xfffffffb	      1736	state.c	FUNCTION_31
0x40053dc	    0x889095000000	               mov byte [rax + 0x95], dl	      1736	state.c	FUNCTION_31
0x40053e2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1737	state.c	FUNCTION_31
0x40053e6	     0xfb690950000	           movzx edx, byte [rax + 0x95] 	      1737	state.c	FUNCTION_31
0x40053ed	          0x83e2ef	                     and edx, 0xffffffef	      1737	state.c	FUNCTION_31
0x40053f0	    0x889095000000	               mov byte [rax + 0x95], dl	      1737	state.c	FUNCTION_31
0x40053f6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1738	state.c	FUNCTION_31
0x40053fa	     0xfb690950000	           movzx edx, byte [rax + 0x95] 	      1738	state.c	FUNCTION_31
0x4005401	          0x83e2df	                     and edx, 0xffffffdf	      1738	state.c	FUNCTION_31
0x4005404	    0x889095000000	               mov byte [rax + 0x95], dl	      1738	state.c	FUNCTION_31
0x400540a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1739	state.c	FUNCTION_31
0x400540e	     0xfb690950000	           movzx edx, byte [rax + 0x95] 	      1739	state.c	FUNCTION_31
0x4005415	          0x83e2bf	                     and edx, 0xffffffbf	      1739	state.c	FUNCTION_31
0x4005418	    0x889095000000	               mov byte [rax + 0x95], dl	      1739	state.c	FUNCTION_31
0x400541e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1741	state.c	FUNCTION_31
0x4005422	          0x488b00	                    mov rax, qword [rax]	      1741	state.c	FUNCTION_31
0x4005425	         0xfb65018	           movzx edx, byte [rax + 0x18] 	      1741	state.c	FUNCTION_31
0x4005429	          0x83e2fd	                     and edx, 0xfffffffd	      1741	state.c	FUNCTION_31
0x400542c	          0x885018	               mov byte [rax + 0x18], dl	      1741	state.c	FUNCTION_31
0x400542f	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      1745	state.c	FUNCTION_31	FOR_1
0x4005436	            0xeb32	                           jmp 0x400546a	      1745	state.c	FUNCTION_31	FOR_1
0x4005438	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1746	state.c	FUNCTION_31	FOR_1	IF_1
0x400543b	          0x83e007	                              and eax, 7	      1746	state.c	FUNCTION_31	FOR_1	IF_1
0x400543e	            0x85c0	                           test eax, eax	      1746	state.c	FUNCTION_31	FOR_1	IF_1
0x4005440	            0x7513	                           jne 0x4005455	      1746	state.c	FUNCTION_31	FOR_1	IF_1
0x4005442	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1747	state.c	FUNCTION_31	FOR_1	IF_1
0x4005445	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1747	state.c	FUNCTION_31	FOR_1	IF_1
0x4005449	            0x89d6	                            mov esi, edx	      1747	state.c	FUNCTION_31	FOR_1	IF_1
0x400544b	          0x4889c7	                            mov rdi, rax	      1747	state.c	FUNCTION_31	FOR_1	IF_1
0x400544e	      0xe8d6b2ffff	                call sym.set_col_tabstop	      1747	state.c	FUNCTION_31	FOR_1	IF_1
0x4005453	            0xeb11	                           jmp 0x4005466	      1747	state.c	FUNCTION_31	FOR_1	IF_1
0x4005455	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1749	state.c	FUNCTION_31	CALL_2
0x4005458	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1749	state.c	FUNCTION_31	CALL_2
0x400545c	            0x89d6	                            mov esi, edx	      1749	state.c	FUNCTION_31	CALL_2
0x400545e	          0x4889c7	                            mov rdi, rax	      1749	state.c	FUNCTION_31	CALL_2
0x4005461	      0xe813b3ffff	              call sym.clear_col_tabstop	      1749	state.c	FUNCTION_31	CALL_2
0x4005466	        0x8345dc01	               add dword [rbp - 0x24], 1	      1745	state.c	FUNCTION_31	FOR_1
0x400546a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1745	state.c	FUNCTION_31	FOR_1
0x400546e	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1745	state.c	FUNCTION_31	FOR_1
0x4005471	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	      1745	state.c	FUNCTION_31	FOR_1
0x4005474	            0x7fc2	                            jg 0x4005438	      1745	state.c	FUNCTION_31	FOR_1
0x4005476	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      1754	state.c	FUNCTION_31	FOR_2
0x400547d	            0xeb23	                           jmp 0x40054a2	      1754	state.c	FUNCTION_31	FOR_2
0x400547f	          0x8b75e0	             mov esi, dword [rbp - 0x20]	      1755	state.c	FUNCTION_31	CALL_3
0x4005482	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1755	state.c	FUNCTION_31	CALL_3
0x4005486	    0x41b800000000	                              mov r8d, 0	      1755	state.c	FUNCTION_31	CALL_3
0x400548c	      0xb900000000	                              mov ecx, 0	      1755	state.c	FUNCTION_31	CALL_3
0x4005491	      0xba01000000	                              mov edx, 1	      1755	state.c	FUNCTION_31	CALL_3
0x4005496	          0x4889c7	                            mov rdi, rax	      1755	state.c	FUNCTION_31	CALL_3
0x4005499	      0xe8f4b4ffff	                   call sym.set_lineinfo	      1755	state.c	FUNCTION_31	CALL_3
0x400549e	        0x8345e001	               add dword [rbp - 0x20], 1	      1754	state.c	FUNCTION_31	FOR_2
0x40054a2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1754	state.c	FUNCTION_31	FOR_2
0x40054a6	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1754	state.c	FUNCTION_31	FOR_2
0x40054a9	          0x3b45e0	             cmp eax, dword [rbp - 0x20]	      1754	state.c	FUNCTION_31	FOR_2
0x40054ac	            0x7fd1	                            jg 0x400547f	      1754	state.c	FUNCTION_31	FOR_2
0x40054ae	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1758	state.c	FUNCTION_31	IF_2
0x40054b2	        0x488b4008	                mov rax, qword [rax + 8]	      1758	state.c	FUNCTION_31	IF_2
0x40054b6	          0x4885c0	                           test rax, rax	      1758	state.c	FUNCTION_31	IF_2
0x40054b9	            0x742a	                            je 0x40054e5	      1758	state.c	FUNCTION_31	IF_2
0x40054bb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1758	state.c	FUNCTION_31	IF_2
0x40054bf	        0x488b4008	                mov rax, qword [rax + 8]	      1758	state.c	FUNCTION_31	IF_2
0x40054c3	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1758	state.c	FUNCTION_31	IF_2
0x40054c7	          0x4885c0	                           test rax, rax	      1758	state.c	FUNCTION_31	IF_2
0x40054ca	            0x7419	                            je 0x40054e5	      1758	state.c	FUNCTION_31	IF_2
0x40054cc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1759	state.c	FUNCTION_31	IF_2
0x40054d0	        0x488b4008	                mov rax, qword [rax + 8]	      1759	state.c	FUNCTION_31	IF_2
0x40054d4	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1759	state.c	FUNCTION_31	IF_2
0x40054d8	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1759	state.c	FUNCTION_31	IF_2
0x40054dc	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      1759	state.c	FUNCTION_31	IF_2
0x40054e0	          0x4889d7	                            mov rdi, rdx	      1759	state.c	FUNCTION_31	IF_2
0x40054e3	            0xffd0	                                call rax	      1759	state.c	FUNCTION_31	IF_2
0x40054e5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1761	state.c	FUNCTION_31	CALL_4
0x40054e9	          0x4889c7	                            mov rdi, rax	      1761	state.c	FUNCTION_31	CALL_4
0x40054ec	      0xe800000000	                          call 0x40054f1	      1761	state.c	FUNCTION_31	CALL_4
0x40054f1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1763	state.c	FUNCTION_31
0x40054f5	          0x488b00	                    mov rax, qword [rax]	      1763	state.c	FUNCTION_31
0x40054f8	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      1763	state.c	FUNCTION_31
0x40054fc	          0x83e001	                              and eax, 1	      1763	state.c	FUNCTION_31
0x40054ff	            0x84c0	                             test al, al	      1764	state.c	FUNCTION_31	CALL_5
0x4005501	            0x7411	                            je 0x4005514	      1764	state.c	FUNCTION_31	CALL_5
0x4005503	      0xbe75000000	                           mov esi, 0x75	      1764	state.c	FUNCTION_31	CALL_5
0x4005508	      0xbf00000000	                              mov edi, 0	      1764	state.c	FUNCTION_31	CALL_5
0x400550d	      0xe800000000	                          call 0x4005512	      1764	state.c	FUNCTION_31	CALL_5
0x4005512	            0xeb0f	                           jmp 0x4005523	      1764	state.c	FUNCTION_31	CALL_5
0x4005514	      0xbe42000000	                           mov esi, 0x42	      1764	state.c	FUNCTION_31	CALL_5
0x4005519	      0xbf01000000	                              mov edi, 1	      1764	state.c	FUNCTION_31	CALL_5
0x400551e	      0xe800000000	                          call 0x4005523	      1764	state.c	FUNCTION_31	CALL_5
0x4005523	        0x488945e8	             mov qword [rbp - 0x18], rax	      1763	state.c	FUNCTION_31
0x4005527	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      1769	state.c	FUNCTION_31	FOR_3
0x400552e	            0xeb70	                           jmp 0x40055a0	      1769	state.c	FUNCTION_31	FOR_3
0x4005530	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      1770	state.c	FUNCTION_31	FOR_3
0x4005534	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1770	state.c	FUNCTION_31	FOR_3
0x4005537	          0x4863d0	                         movsxd rdx, eax	      1770	state.c	FUNCTION_31	FOR_3
0x400553a	          0x4889d0	                            mov rax, rdx	      1770	state.c	FUNCTION_31	FOR_3
0x400553d	          0x4801c0	                            add rax, rax	      1770	state.c	FUNCTION_31	FOR_3
0x4005540	          0x4801d0	                            add rax, rdx	      1770	state.c	FUNCTION_31	FOR_3
0x4005543	        0x48c1e003	                              shl rax, 3	      1770	state.c	FUNCTION_31	FOR_3
0x4005547	          0x4801c8	                            add rax, rcx	      1770	state.c	FUNCTION_31	FOR_3
0x400554a	    0x488d90980000	                   lea rdx, [rax + 0x98]	      1770	state.c	FUNCTION_31	FOR_3
0x4005551	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1770	state.c	FUNCTION_31	FOR_3
0x4005555	          0x488902	                    mov qword [rdx], rax	      1770	state.c	FUNCTION_31	FOR_3
0x4005558	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1771	state.c	FUNCTION_31	FOR_3	IF_3
0x400555c	          0x488b00	                    mov rax, qword [rax]	      1771	state.c	FUNCTION_31	FOR_3	IF_3
0x400555f	          0x4885c0	                           test rax, rax	      1771	state.c	FUNCTION_31	FOR_3	IF_3
0x4005562	            0x7438	                            je 0x400559c	      1771	state.c	FUNCTION_31	FOR_3	IF_3
0x4005564	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1772	state.c	FUNCTION_31	FOR_3	IF_3
0x4005568	          0x488b08	                    mov rcx, qword [rax]	      1772	state.c	FUNCTION_31	FOR_3	IF_3
0x400556b	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1772	state.c	FUNCTION_31	FOR_3	IF_3
0x400556e	          0x4863d0	                         movsxd rdx, eax	      1772	state.c	FUNCTION_31	FOR_3	IF_3
0x4005571	          0x4889d0	                            mov rax, rdx	      1772	state.c	FUNCTION_31	FOR_3	IF_3
0x4005574	          0x4801c0	                            add rax, rax	      1772	state.c	FUNCTION_31	FOR_3	IF_3
0x4005577	          0x4801d0	                            add rax, rdx	      1772	state.c	FUNCTION_31	FOR_3	IF_3
0x400557a	        0x48c1e003	                              shl rax, 3	      1772	state.c	FUNCTION_31	FOR_3	IF_3
0x400557e	    0x488d90900000	                   lea rdx, [rax + 0x90]	      1772	state.c	FUNCTION_31	FOR_3	IF_3
0x4005585	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1772	state.c	FUNCTION_31	FOR_3	IF_3
0x4005589	          0x4801d0	                            add rax, rdx	      1772	state.c	FUNCTION_31	FOR_3	IF_3
0x400558c	        0x488d5010	                   lea rdx, [rax + 0x10]	      1772	state.c	FUNCTION_31	FOR_3	IF_3
0x4005590	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1772	state.c	FUNCTION_31	FOR_3	IF_3
0x4005594	          0x4889d6	                            mov rsi, rdx	      1772	state.c	FUNCTION_31	FOR_3	IF_3
0x4005597	          0x4889c7	                            mov rdi, rax	      1772	state.c	FUNCTION_31	FOR_3	IF_3
0x400559a	            0xffd1	                                call rcx	      1772	state.c	FUNCTION_31	FOR_3	IF_3
0x400559c	        0x8345e401	               add dword [rbp - 0x1c], 1	      1769	state.c	FUNCTION_31	FOR_3
0x40055a0	        0x837de403	               cmp dword [rbp - 0x1c], 3	      1769	state.c	FUNCTION_31	FOR_3
0x40055a4	            0x7e8a	                           jle 0x4005530	      1769	state.c	FUNCTION_31	FOR_3
0x40055a6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1776	state.c	FUNCTION_31
0x40055aa	    0xc78010010000	              mov dword [rax + 0x110], 0	      1776	state.c	FUNCTION_31
0x40055b4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1777	state.c	FUNCTION_31
0x40055b8	    0xc78014010000	              mov dword [rax + 0x114], 1	      1777	state.c	FUNCTION_31
0x40055c2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1778	state.c	FUNCTION_31
0x40055c6	    0xc78018010000	              mov dword [rax + 0x118], 0	      1778	state.c	FUNCTION_31
0x40055d0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1780	state.c	FUNCTION_31
0x40055d4	     0xfb6907c0100	          movzx edx, byte [rax + 0x17c] 	      1780	state.c	FUNCTION_31
0x40055db	          0x83e2fe	                     and edx, 0xfffffffe	      1780	state.c	FUNCTION_31
0x40055de	    0x88907c010000	              mov byte [rax + 0x17c], dl	      1780	state.c	FUNCTION_31
0x40055e4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1783	state.c	FUNCTION_31	CALL_7
0x40055e8	      0xba01000000	                              mov edx, 1	      1783	state.c	FUNCTION_31	CALL_7
0x40055ed	      0xbe01000000	                              mov esi, 1	      1783	state.c	FUNCTION_31	CALL_7
0x40055f2	          0x4889c7	                            mov rdi, rax	      1783	state.c	FUNCTION_31	CALL_7
0x40055f5	      0xe806bfffff	               call sym.settermprop_bool	      1783	state.c	FUNCTION_31	CALL_7
0x40055fa	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1784	state.c	FUNCTION_31	CALL_8
0x40055fe	      0xba01000000	                              mov edx, 1	      1784	state.c	FUNCTION_31	CALL_8
0x4005603	      0xbe02000000	                              mov esi, 2	      1784	state.c	FUNCTION_31	CALL_8
0x4005608	          0x4889c7	                            mov rdi, rax	      1784	state.c	FUNCTION_31	CALL_8
0x400560b	      0xe8f0beffff	               call sym.settermprop_bool	      1784	state.c	FUNCTION_31	CALL_8
0x4005610	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1785	state.c	FUNCTION_31	CALL_9
0x4005614	      0xba01000000	                              mov edx, 1	      1785	state.c	FUNCTION_31	CALL_9
0x4005619	      0xbe07000000	                              mov esi, 7	      1785	state.c	FUNCTION_31	CALL_9
0x400561e	          0x4889c7	                            mov rdi, rax	      1785	state.c	FUNCTION_31	CALL_9
0x4005621	      0xe82cbfffff	                call sym.settermprop_int	      1785	state.c	FUNCTION_31	CALL_9
0x4005626	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      1787	state.c	FUNCTION_31	IF_4
0x400562a	            0x746a	                            je 0x4005696	      1787	state.c	FUNCTION_31	IF_4
0x400562c	    0xc745f0000000	               mov dword [rbp - 0x10], 0	      1788	state.c	FUNCTION_31	IF_4
0x4005633	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      1788	state.c	FUNCTION_31	IF_4
0x400563a	    0xc745f8000000	                  mov dword [rbp - 8], 0	      1788	state.c	FUNCTION_31	IF_4
0x4005641	    0xc745fc000000	                  mov dword [rbp - 4], 0	      1788	state.c	FUNCTION_31	IF_4
0x4005648	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1790	state.c	FUNCTION_31	IF_4
0x400564c	    0xc74030000000	               mov dword [rax + 0x30], 0	      1790	state.c	FUNCTION_31	IF_4
0x4005653	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1791	state.c	FUNCTION_31	IF_4
0x4005657	    0xc74034000000	               mov dword [rax + 0x34], 0	      1791	state.c	FUNCTION_31	IF_4
0x400565e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1792	state.c	FUNCTION_31	IF_4
0x4005662	    0xc74038000000	               mov dword [rax + 0x38], 0	      1792	state.c	FUNCTION_31	IF_4
0x4005669	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1794	state.c	FUNCTION_31	IF_4
0x400566d	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1794	state.c	FUNCTION_31	IF_4
0x4005670	          0x8945f4	              mov dword [rbp - 0xc], eax	      1794	state.c	FUNCTION_31	IF_4
0x4005673	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1795	state.c	FUNCTION_31	IF_4
0x4005677	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1795	state.c	FUNCTION_31	IF_4
0x400567a	          0x8945fc	                mov dword [rbp - 4], eax	      1795	state.c	FUNCTION_31	IF_4
0x400567d	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      1796	state.c	FUNCTION_31	IF_4	CALL_10
0x4005681	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1796	state.c	FUNCTION_31	IF_4	CALL_10
0x4005685	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1796	state.c	FUNCTION_31	IF_4	CALL_10
0x4005689	      0xb900000000	                              mov ecx, 0	      1796	state.c	FUNCTION_31	IF_4	CALL_10
0x400568e	          0x4889c7	                            mov rdi, rax	      1796	state.c	FUNCTION_31	IF_4	CALL_10
0x4005691	      0xe85babffff	                          call sym.erase	      1796	state.c	FUNCTION_31	IF_4	CALL_10
0x4005696	              0x90	                                     nop	      1798	state.c	FUNCTION_31
0x4005697	              0xc9	                                   leave	      1798	state.c	FUNCTION_31
0x4005698	              0xc3	                                     ret	      1798	state.c	FUNCTION_31
vterm_state_get_cursorpos	functions,0:CALL,0:DO,0:WHILE,0:IF,0:ELSE,0:SWITCH,0:FOR,0	11
0x4005699	              0x55	                                push rbp	      1801	state.c	FUNCTION_32
0x400569a	          0x4889e5	                            mov rbp, rsp	      1801	state.c	FUNCTION_32
0x400569d	        0x48897df8	                mov qword [rbp - 8], rdi	      1801	state.c	FUNCTION_32
0x40056a1	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1801	state.c	FUNCTION_32
0x40056a5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1802	state.c	FUNCTION_32
0x40056a9	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1802	state.c	FUNCTION_32
0x40056ad	        0x488b5230	            mov rdx, qword [rdx + 0x30] 	      1802	state.c	FUNCTION_32
0x40056b1	          0x488910	                    mov qword [rax], rdx	      1802	state.c	FUNCTION_32
0x40056b4	              0x90	                                     nop	      1803	state.c	FUNCTION_32
0x40056b5	              0x5d	                                 pop rbp	      1803	state.c	FUNCTION_32
0x40056b6	              0xc3	                                     ret	      1803	state.c	FUNCTION_32
set_dec_mode	functions,0:CALL,12:DO,0:WHILE,0:IF,1:ELSE,0:SWITCH,1:FOR,1	272
0x4001d4d	              0x55	                                push rbp	       729	state.c	FUNCTION_23
0x4001d4e	          0x4889e5	                            mov rbp, rsp	       729	state.c	FUNCTION_23
0x4001d51	        0x4883ec30	                           sub rsp, 0x30	       729	state.c	FUNCTION_23
0x4001d55	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       729	state.c	FUNCTION_23
0x4001d59	          0x8975d4	             mov dword [rbp - 0x2c], esi	       729	state.c	FUNCTION_23
0x4001d5c	          0x8955d0	             mov dword [rbp - 0x30], edx	       729	state.c	FUNCTION_23
0x4001d5f	    0x64488b042528	                mov rax, qword fs:[0x28]	       729	state.c	FUNCTION_23
0x4001d68	        0x488945f8	                mov qword [rbp - 8], rax	       729	state.c	FUNCTION_23
0x4001d6c	            0x31c0	                            xor eax, eax	       729	state.c	FUNCTION_23
0x4001d6e	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       730	state.c	FUNCTION_23	SWITCH_1
0x4001d71	      0x3deb030000	                          cmp eax, 0x3eb	       730	state.c	FUNCTION_23	SWITCH_1
0x4001d76	            0x7f6e	                            jg 0x4001de6	       730	state.c	FUNCTION_23	SWITCH_1
0x4001d78	      0x3dea030000	                          cmp eax, 0x3ea	       730	state.c	FUNCTION_23	SWITCH_1
0x4001d7d	     0xf8d9e020000	                           jge 0x4002021	       730	state.c	FUNCTION_23	SWITCH_1
0x4001d83	          0x83f807	                              cmp eax, 7	       730	state.c	FUNCTION_23	SWITCH_1
0x4001d86	     0xf84c9010000	                            je 0x4001f55	       730	state.c	FUNCTION_23	SWITCH_1
0x4001d8c	          0x83f807	                              cmp eax, 7	       730	state.c	FUNCTION_23	SWITCH_1
0x4001d8f	            0x7f20	                            jg 0x4001db1	       730	state.c	FUNCTION_23	SWITCH_1
0x4001d91	          0x83f805	                              cmp eax, 5	       730	state.c	FUNCTION_23	SWITCH_1
0x4001d94	     0xf84ea000000	                            je 0x4001e84	       730	state.c	FUNCTION_23	SWITCH_1
0x4001d9a	          0x83f805	                              cmp eax, 5	       730	state.c	FUNCTION_23	SWITCH_1
0x4001d9d	     0xf8ffa000000	                            jg 0x4001e9d	       730	state.c	FUNCTION_23	SWITCH_1
0x4001da3	          0x83f801	                              cmp eax, 1	       730	state.c	FUNCTION_23	SWITCH_1
0x4001da6	     0xf84af000000	                            je 0x4001e5b	       730	state.c	FUNCTION_23	SWITCH_1
0x4001dac	      0xe9ad030000	                           jmp 0x400215e	       819	state.c	FUNCTION_23	SWITCH_1
0x4001db1	          0x83f819	                           cmp eax, 0x19	       730	state.c	FUNCTION_23	SWITCH_1
0x4001db4	     0xf84e1010000	                            je 0x4001f9b	       730	state.c	FUNCTION_23	SWITCH_1
0x4001dba	          0x83f819	                           cmp eax, 0x19	       730	state.c	FUNCTION_23	SWITCH_1
0x4001dbd	            0x7f0e	                            jg 0x4001dcd	       730	state.c	FUNCTION_23	SWITCH_1
0x4001dbf	          0x83f80c	                            cmp eax, 0xc	       730	state.c	FUNCTION_23	SWITCH_1
0x4001dc2	     0xf84ba010000	                            je 0x4001f82	       730	state.c	FUNCTION_23	SWITCH_1
0x4001dc8	      0xe991030000	                           jmp 0x400215e	       819	state.c	FUNCTION_23	SWITCH_1
0x4001dcd	          0x83f845	                           cmp eax, 0x45	       730	state.c	FUNCTION_23	SWITCH_1
0x4001dd0	     0xf84de010000	                            je 0x4001fb4	       730	state.c	FUNCTION_23	SWITCH_1
0x4001dd6	      0x3de8030000	                          cmp eax, 0x3e8	       730	state.c	FUNCTION_23	SWITCH_1
0x4001ddb	     0xf8440020000	                            je 0x4002021	       730	state.c	FUNCTION_23	SWITCH_1
0x4001de1	      0xe978030000	                           jmp 0x400215e	       819	state.c	FUNCTION_23	SWITCH_1
0x4001de6	      0x3df7030000	                          cmp eax, 0x3f7	       730	state.c	FUNCTION_23	SWITCH_1
0x4001deb	     0xf84d9020000	                            je 0x40020ca	       730	state.c	FUNCTION_23	SWITCH_1
0x4001df1	      0x3df7030000	                          cmp eax, 0x3f7	       730	state.c	FUNCTION_23	SWITCH_1
0x4001df6	            0x7f26	                            jg 0x4001e1e	       730	state.c	FUNCTION_23	SWITCH_1
0x4001df8	      0x3ded030000	                          cmp eax, 0x3ed	       730	state.c	FUNCTION_23	SWITCH_1
0x4001dfd	     0xf8493020000	                            je 0x4002096	       730	state.c	FUNCTION_23	SWITCH_1
0x4001e03	      0x3ded030000	                          cmp eax, 0x3ed	       730	state.c	FUNCTION_23	SWITCH_1
0x4001e08	     0xf8c5d020000	                            jl 0x400206b	       730	state.c	FUNCTION_23	SWITCH_1
0x4001e0e	      0x3dee030000	                          cmp eax, 0x3ee	       730	state.c	FUNCTION_23	SWITCH_1
0x4001e13	     0xf8493020000	                            je 0x40020ac	       730	state.c	FUNCTION_23	SWITCH_1
0x4001e19	      0xe940030000	                           jmp 0x400215e	       819	state.c	FUNCTION_23	SWITCH_1
0x4001e1e	      0x3d18040000	                          cmp eax, 0x418	       730	state.c	FUNCTION_23	SWITCH_1
0x4001e23	     0xf84d2020000	                            je 0x40020fb	       730	state.c	FUNCTION_23	SWITCH_1
0x4001e29	      0x3d18040000	                          cmp eax, 0x418	       730	state.c	FUNCTION_23	SWITCH_1
0x4001e2e	            0x7f10	                            jg 0x4001e40	       730	state.c	FUNCTION_23	SWITCH_1
0x4001e30	      0x3d17040000	                          cmp eax, 0x417	       730	state.c	FUNCTION_23	SWITCH_1
0x4001e35	     0xf84aa020000	                            je 0x40020e5	       730	state.c	FUNCTION_23	SWITCH_1
0x4001e3b	      0xe91e030000	                           jmp 0x400215e	       819	state.c	FUNCTION_23	SWITCH_1
0x4001e40	      0x3d19040000	                          cmp eax, 0x419	       730	state.c	FUNCTION_23	SWITCH_1
0x4001e45	     0xf84c3020000	                            je 0x400210e	       730	state.c	FUNCTION_23	SWITCH_1
0x4001e4b	      0x3dd4070000	                          cmp eax, 0x7d4	       730	state.c	FUNCTION_23	SWITCH_1
0x4001e50	     0xf84df020000	                            je 0x4002135	       730	state.c	FUNCTION_23	SWITCH_1
0x4001e56	      0xe903030000	                           jmp 0x400215e	       819	state.c	FUNCTION_23	SWITCH_1
0x4001e5b	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       732	state.c	FUNCTION_23	SWITCH_1
0x4001e5e	          0x83e001	                              and eax, 1	       732	state.c	FUNCTION_23	SWITCH_1
0x4001e61	            0x89c2	                            mov edx, eax	       732	state.c	FUNCTION_23	SWITCH_1
0x4001e63	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       732	state.c	FUNCTION_23	SWITCH_1
0x4001e67	          0x83e201	                              and edx, 1	       732	state.c	FUNCTION_23	SWITCH_1
0x4001e6a	          0x8d0c12	                    lea ecx, [rdx + rdx]	       732	state.c	FUNCTION_23	SWITCH_1
0x4001e6d	     0xfb690940000	           movzx edx, byte [rax + 0x94] 	       732	state.c	FUNCTION_23	SWITCH_1
0x4001e74	          0x83e2fd	                     and edx, 0xfffffffd	       732	state.c	FUNCTION_23	SWITCH_1
0x4001e77	             0x9ca	                             or edx, ecx	       732	state.c	FUNCTION_23	SWITCH_1
0x4001e79	    0x889094000000	               mov byte [rax + 0x94], dl	       732	state.c	FUNCTION_23	SWITCH_1
0x4001e7f	      0xe9da020000	                           jmp 0x400215e	       733	state.c	FUNCTION_23	SWITCH_1
0x4001e84	          0x8b55d0	             mov edx, dword [rbp - 0x30]	       736	state.c	FUNCTION_23	SWITCH_1	CALL_1
0x4001e87	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       736	state.c	FUNCTION_23	SWITCH_1	CALL_1
0x4001e8b	      0xbe06000000	                              mov esi, 6	       736	state.c	FUNCTION_23	SWITCH_1	CALL_1
0x4001e90	          0x4889c7	                            mov rdi, rax	       736	state.c	FUNCTION_23	SWITCH_1	CALL_1
0x4001e93	      0xe868f6ffff	               call sym.settermprop_bool	       736	state.c	FUNCTION_23	SWITCH_1	CALL_1
0x4001e98	      0xe9c1020000	                           jmp 0x400215e	       737	state.c	FUNCTION_23	SWITCH_1
0x4001e9d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       741	state.c	FUNCTION_23	SWITCH_1
0x4001ea1	        0x488b4030	            mov rax, qword [rax + 0x30] 	       741	state.c	FUNCTION_23	SWITCH_1
0x4001ea5	        0x488945f0	             mov qword [rbp - 0x10], rax	       741	state.c	FUNCTION_23	SWITCH_1
0x4001ea9	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       742	state.c	FUNCTION_23	SWITCH_1
0x4001eac	          0x83e001	                              and eax, 1	       742	state.c	FUNCTION_23	SWITCH_1
0x4001eaf	            0x89c2	                            mov edx, eax	       742	state.c	FUNCTION_23	SWITCH_1
0x4001eb1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       742	state.c	FUNCTION_23	SWITCH_1
0x4001eb5	          0x83e201	                              and edx, 1	       742	state.c	FUNCTION_23	SWITCH_1
0x4001eb8	    0x8d0c95000000	                        lea ecx, [rdx*4]	       742	state.c	FUNCTION_23	SWITCH_1
0x4001ebf	     0xfb690950000	           movzx edx, byte [rax + 0x95] 	       742	state.c	FUNCTION_23	SWITCH_1
0x4001ec6	          0x83e2fb	                     and edx, 0xfffffffb	       742	state.c	FUNCTION_23	SWITCH_1
0x4001ec9	             0x9ca	                             or edx, ecx	       742	state.c	FUNCTION_23	SWITCH_1
0x4001ecb	    0x889095000000	               mov byte [rax + 0x95], dl	       742	state.c	FUNCTION_23	SWITCH_1
0x4001ed1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       743	state.c	FUNCTION_23	SWITCH_1
0x4001ed5	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	       743	state.c	FUNCTION_23	SWITCH_1
0x4001edc	          0x83e004	                              and eax, 4	       743	state.c	FUNCTION_23	SWITCH_1
0x4001edf	            0x84c0	                             test al, al	       743	state.c	FUNCTION_23	SWITCH_1
0x4001ee1	            0x7409	                            je 0x4001eec	       743	state.c	FUNCTION_23	SWITCH_1
0x4001ee3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       743	state.c	FUNCTION_23	SWITCH_1
0x4001ee7	          0x8b403c	            mov eax, dword [rax + 0x3c] 	       743	state.c	FUNCTION_23	SWITCH_1
0x4001eea	            0xeb05	                           jmp 0x4001ef1	       743	state.c	FUNCTION_23	SWITCH_1
0x4001eec	      0xb800000000	                              mov eax, 0	       743	state.c	FUNCTION_23	SWITCH_1
0x4001ef1	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       743	state.c	FUNCTION_23	SWITCH_1
0x4001ef5	          0x894230	             mov dword [rdx + 0x30], eax	       743	state.c	FUNCTION_23	SWITCH_1
0x4001ef8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       744	state.c	FUNCTION_23	SWITCH_1	CALL_2
0x4001efc	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	       744	state.c	FUNCTION_23	SWITCH_1	CALL_2
0x4001f03	          0x83e004	                              and eax, 4	       744	state.c	FUNCTION_23	SWITCH_1	CALL_2
0x4001f06	            0x84c0	                             test al, al	       744	state.c	FUNCTION_23	SWITCH_1	CALL_2
0x4001f08	            0x7422	                            je 0x4001f2c	       744	state.c	FUNCTION_23	SWITCH_1	CALL_2
0x4001f0a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       744	state.c	FUNCTION_23	SWITCH_1	CALL_2
0x4001f0e	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	       744	state.c	FUNCTION_23	SWITCH_1	CALL_2
0x4001f15	          0x83e010	                           and eax, 0x10	       744	state.c	FUNCTION_23	SWITCH_1	CALL_2
0x4001f18	            0x84c0	                             test al, al	       744	state.c	FUNCTION_23	SWITCH_1	CALL_2
0x4001f1a	            0x7409	                            je 0x4001f25	       744	state.c	FUNCTION_23	SWITCH_1	CALL_2
0x4001f1c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       744	state.c	FUNCTION_23	SWITCH_1	CALL_2
0x4001f20	          0x8b4044	            mov eax, dword [rax + 0x44] 	       744	state.c	FUNCTION_23	SWITCH_1	CALL_2
0x4001f23	            0xeb0c	                           jmp 0x4001f31	       744	state.c	FUNCTION_23	SWITCH_1	CALL_2
0x4001f25	      0xb800000000	                              mov eax, 0	       744	state.c	FUNCTION_23	SWITCH_1	CALL_2
0x4001f2a	            0xeb05	                           jmp 0x4001f31	       744	state.c	FUNCTION_23	SWITCH_1	CALL_2
0x4001f2c	      0xb800000000	                              mov eax, 0	       744	state.c	FUNCTION_23	SWITCH_1	CALL_2
0x4001f31	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       744	state.c	FUNCTION_23	SWITCH_1	CALL_2
0x4001f35	          0x894234	             mov dword [rdx + 0x34], eax	       744	state.c	FUNCTION_23	SWITCH_1	CALL_2
0x4001f38	        0x488d4df0	                   lea rcx, [rbp - 0x10]	       745	state.c	FUNCTION_23	SWITCH_1	CALL_3
0x4001f3c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       745	state.c	FUNCTION_23	SWITCH_1	CALL_3
0x4001f40	      0xba01000000	                              mov edx, 1	       745	state.c	FUNCTION_23	SWITCH_1	CALL_3
0x4001f45	          0x4889ce	                            mov rsi, rcx	       745	state.c	FUNCTION_23	SWITCH_1	CALL_3
0x4001f48	          0x4889c7	                            mov rdi, rax	       745	state.c	FUNCTION_23	SWITCH_1	CALL_3
0x4001f4b	      0xe8f8e1ffff	                   call sym.updatecursor	       745	state.c	FUNCTION_23	SWITCH_1	CALL_3
0x4001f50	      0xe909020000	                           jmp 0x400215e	       747	state.c	FUNCTION_23	SWITCH_1
0x4001f55	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       750	state.c	FUNCTION_23	SWITCH_1
0x4001f58	          0x83e001	                              and eax, 1	       750	state.c	FUNCTION_23	SWITCH_1
0x4001f5b	            0x89c2	                            mov edx, eax	       750	state.c	FUNCTION_23	SWITCH_1
0x4001f5d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       750	state.c	FUNCTION_23	SWITCH_1
0x4001f61	          0x83e201	                              and edx, 1	       750	state.c	FUNCTION_23	SWITCH_1
0x4001f64	    0x8d0c95000000	                        lea ecx, [rdx*4]	       750	state.c	FUNCTION_23	SWITCH_1
0x4001f6b	     0xfb690940000	           movzx edx, byte [rax + 0x94] 	       750	state.c	FUNCTION_23	SWITCH_1
0x4001f72	          0x83e2fb	                     and edx, 0xfffffffb	       750	state.c	FUNCTION_23	SWITCH_1
0x4001f75	             0x9ca	                             or edx, ecx	       750	state.c	FUNCTION_23	SWITCH_1
0x4001f77	    0x889094000000	               mov byte [rax + 0x94], dl	       750	state.c	FUNCTION_23	SWITCH_1
0x4001f7d	      0xe9dc010000	                           jmp 0x400215e	       751	state.c	FUNCTION_23	SWITCH_1
0x4001f82	          0x8b55d0	             mov edx, dword [rbp - 0x30]	       754	state.c	FUNCTION_23	SWITCH_1	CALL_4
0x4001f85	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       754	state.c	FUNCTION_23	SWITCH_1	CALL_4
0x4001f89	      0xbe02000000	                              mov esi, 2	       754	state.c	FUNCTION_23	SWITCH_1	CALL_4
0x4001f8e	          0x4889c7	                            mov rdi, rax	       754	state.c	FUNCTION_23	SWITCH_1	CALL_4
0x4001f91	      0xe86af5ffff	               call sym.settermprop_bool	       754	state.c	FUNCTION_23	SWITCH_1	CALL_4
0x4001f96	      0xe9c3010000	                           jmp 0x400215e	       755	state.c	FUNCTION_23	SWITCH_1
0x4001f9b	          0x8b55d0	             mov edx, dword [rbp - 0x30]	       758	state.c	FUNCTION_23	SWITCH_1	CALL_5
0x4001f9e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       758	state.c	FUNCTION_23	SWITCH_1	CALL_5
0x4001fa2	      0xbe01000000	                              mov esi, 1	       758	state.c	FUNCTION_23	SWITCH_1	CALL_5
0x4001fa7	          0x4889c7	                            mov rdi, rax	       758	state.c	FUNCTION_23	SWITCH_1	CALL_5
0x4001faa	      0xe851f5ffff	               call sym.settermprop_bool	       758	state.c	FUNCTION_23	SWITCH_1	CALL_5
0x4001faf	      0xe9aa010000	                           jmp 0x400215e	       759	state.c	FUNCTION_23	SWITCH_1
0x4001fb4	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       763	state.c	FUNCTION_23	SWITCH_1
0x4001fb7	          0x83e001	                              and eax, 1	       763	state.c	FUNCTION_23	SWITCH_1
0x4001fba	            0x89c2	                            mov edx, eax	       763	state.c	FUNCTION_23	SWITCH_1
0x4001fbc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       763	state.c	FUNCTION_23	SWITCH_1
0x4001fc0	          0x83e201	                              and edx, 1	       763	state.c	FUNCTION_23	SWITCH_1
0x4001fc3	            0x89d1	                            mov ecx, edx	       763	state.c	FUNCTION_23	SWITCH_1
0x4001fc5	          0xc1e104	                              shl ecx, 4	       763	state.c	FUNCTION_23	SWITCH_1
0x4001fc8	     0xfb690950000	           movzx edx, byte [rax + 0x95] 	       763	state.c	FUNCTION_23	SWITCH_1
0x4001fcf	          0x83e2ef	                     and edx, 0xffffffef	       763	state.c	FUNCTION_23	SWITCH_1
0x4001fd2	             0x9ca	                             or edx, ecx	       763	state.c	FUNCTION_23	SWITCH_1
0x4001fd4	    0x889095000000	               mov byte [rax + 0x95], dl	       763	state.c	FUNCTION_23	SWITCH_1
0x4001fda	        0x837dd000	               cmp dword [rbp - 0x30], 0	       764	state.c	FUNCTION_23	SWITCH_1	IF_1
0x4001fde	     0xf8479010000	                            je 0x400215d	       764	state.c	FUNCTION_23	SWITCH_1	IF_1
0x4001fe4	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       768	state.c	FUNCTION_23	SWITCH_1	IF_1	FOR_1
0x4001feb	            0xeb23	                           jmp 0x4002010	       768	state.c	FUNCTION_23	SWITCH_1	IF_1	FOR_1
0x4001fed	          0x8b75ec	             mov esi, dword [rbp - 0x14]	       769	state.c	FUNCTION_23	SWITCH_1	IF_1	CALL_6
0x4001ff0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       769	state.c	FUNCTION_23	SWITCH_1	IF_1	CALL_6
0x4001ff4	    0x41b800000000	                              mov r8d, 0	       769	state.c	FUNCTION_23	SWITCH_1	IF_1	CALL_6
0x4001ffa	      0xb900000000	                              mov ecx, 0	       769	state.c	FUNCTION_23	SWITCH_1	IF_1	CALL_6
0x4001fff	      0xba01000000	                              mov edx, 1	       769	state.c	FUNCTION_23	SWITCH_1	IF_1	CALL_6
0x4002004	          0x4889c7	                            mov rdi, rax	       769	state.c	FUNCTION_23	SWITCH_1	IF_1	CALL_6
0x4002007	      0xe886e9ffff	                   call sym.set_lineinfo	       769	state.c	FUNCTION_23	SWITCH_1	IF_1	CALL_6
0x400200c	        0x8345ec01	               add dword [rbp - 0x14], 1	       768	state.c	FUNCTION_23	SWITCH_1	IF_1	FOR_1
0x4002010	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       768	state.c	FUNCTION_23	SWITCH_1	IF_1	FOR_1
0x4002014	          0x8b4028	            mov eax, dword [rax + 0x28] 	       768	state.c	FUNCTION_23	SWITCH_1	IF_1	FOR_1
0x4002017	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	       768	state.c	FUNCTION_23	SWITCH_1	IF_1	FOR_1
0x400201a	            0x7fd1	                            jg 0x4001fed	       768	state.c	FUNCTION_23	SWITCH_1	IF_1	FOR_1
0x400201c	      0xe93c010000	                           jmp 0x400215d	       772	state.c	FUNCTION_23	SWITCH_1
0x4002021	        0x837dd000	               cmp dword [rbp - 0x30], 0	       777	state.c	FUNCTION_23	SWITCH_1	CALL_7
0x4002025	            0x7427	                            je 0x400204e	       777	state.c	FUNCTION_23	SWITCH_1	CALL_7
0x4002027	    0x817dd4e80300	          cmp dword [rbp - 0x2c], 0x3e8 	       779	state.c	FUNCTION_23	SWITCH_1
0x400202e	            0x7417	                            je 0x4002047	       779	state.c	FUNCTION_23	SWITCH_1
0x4002030	    0x817dd4ea0300	          cmp dword [rbp - 0x2c], 0x3ea 	       780	state.c	FUNCTION_23	SWITCH_1
0x4002037	            0x7507	                           jne 0x4002040	       780	state.c	FUNCTION_23	SWITCH_1
0x4002039	      0xb802000000	                              mov eax, 2	       780	state.c	FUNCTION_23	SWITCH_1
0x400203e	            0xeb13	                           jmp 0x4002053	       780	state.c	FUNCTION_23	SWITCH_1
0x4002040	      0xb803000000	                              mov eax, 3	       780	state.c	FUNCTION_23	SWITCH_1
0x4002045	            0xeb0c	                           jmp 0x4002053	       780	state.c	FUNCTION_23	SWITCH_1
0x4002047	      0xb801000000	                              mov eax, 1	       779	state.c	FUNCTION_23	SWITCH_1
0x400204c	            0xeb05	                           jmp 0x4002053	       779	state.c	FUNCTION_23	SWITCH_1
0x400204e	      0xb800000000	                              mov eax, 0	       777	state.c	FUNCTION_23	SWITCH_1	CALL_7
0x4002053	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       777	state.c	FUNCTION_23	SWITCH_1	CALL_7
0x4002057	            0x89c2	                            mov edx, eax	       777	state.c	FUNCTION_23	SWITCH_1	CALL_7
0x4002059	      0xbe08000000	                              mov esi, 8	       777	state.c	FUNCTION_23	SWITCH_1	CALL_7
0x400205e	          0x4889cf	                            mov rdi, rcx	       777	state.c	FUNCTION_23	SWITCH_1	CALL_7
0x4002061	      0xe8ecf4ffff	                call sym.settermprop_int	       777	state.c	FUNCTION_23	SWITCH_1	CALL_7
0x4002066	      0xe9f3000000	                           jmp 0x400215e	       782	state.c	FUNCTION_23	SWITCH_1
0x400206b	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       785	state.c	FUNCTION_23	SWITCH_1
0x400206e	          0x83e001	                              and eax, 1	       785	state.c	FUNCTION_23	SWITCH_1
0x4002071	            0x89c2	                            mov edx, eax	       785	state.c	FUNCTION_23	SWITCH_1
0x4002073	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       785	state.c	FUNCTION_23	SWITCH_1
0x4002077	          0x83e201	                              and edx, 1	       785	state.c	FUNCTION_23	SWITCH_1
0x400207a	            0x89d1	                            mov ecx, edx	       785	state.c	FUNCTION_23	SWITCH_1
0x400207c	          0xc1e106	                              shl ecx, 6	       785	state.c	FUNCTION_23	SWITCH_1
0x400207f	     0xfb690950000	           movzx edx, byte [rax + 0x95] 	       785	state.c	FUNCTION_23	SWITCH_1
0x4002086	          0x83e2bf	                     and edx, 0xffffffbf	       785	state.c	FUNCTION_23	SWITCH_1
0x4002089	             0x9ca	                             or edx, ecx	       785	state.c	FUNCTION_23	SWITCH_1
0x400208b	    0x889095000000	               mov byte [rax + 0x95], dl	       785	state.c	FUNCTION_23	SWITCH_1
0x4002091	      0xe9c8000000	                           jmp 0x400215e	       786	state.c	FUNCTION_23	SWITCH_1
0x4002096	        0x837dd000	               cmp dword [rbp - 0x30], 0	       789	state.c	FUNCTION_23	SWITCH_1
0x400209a	           0xf95c0	                                setne al	       789	state.c	FUNCTION_23	SWITCH_1
0x400209d	           0xfb6d0	                           movzx edx, al	       789	state.c	FUNCTION_23	SWITCH_1
0x40020a0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       789	state.c	FUNCTION_23	SWITCH_1
0x40020a4	          0x895070	             mov dword [rax + 0x70], edx	       789	state.c	FUNCTION_23	SWITCH_1
0x40020a7	      0xe9b2000000	                           jmp 0x400215e	       790	state.c	FUNCTION_23	SWITCH_1
0x40020ac	        0x837dd000	               cmp dword [rbp - 0x30], 0	       793	state.c	FUNCTION_23	SWITCH_1
0x40020b0	            0x7407	                            je 0x40020b9	       793	state.c	FUNCTION_23	SWITCH_1
0x40020b2	      0xba02000000	                              mov edx, 2	       793	state.c	FUNCTION_23	SWITCH_1
0x40020b7	            0xeb05	                           jmp 0x40020be	       793	state.c	FUNCTION_23	SWITCH_1
0x40020b9	      0xba00000000	                              mov edx, 0	       793	state.c	FUNCTION_23	SWITCH_1
0x40020be	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       793	state.c	FUNCTION_23	SWITCH_1
0x40020c2	          0x895070	             mov dword [rax + 0x70], edx	       793	state.c	FUNCTION_23	SWITCH_1
0x40020c5	      0xe994000000	                           jmp 0x400215e	       794	state.c	FUNCTION_23	SWITCH_1
0x40020ca	        0x837dd000	               cmp dword [rbp - 0x30], 0	       797	state.c	FUNCTION_23	SWITCH_1
0x40020ce	            0x7407	                            je 0x40020d7	       797	state.c	FUNCTION_23	SWITCH_1
0x40020d0	      0xba03000000	                              mov edx, 3	       797	state.c	FUNCTION_23	SWITCH_1
0x40020d5	            0xeb05	                           jmp 0x40020dc	       797	state.c	FUNCTION_23	SWITCH_1
0x40020d7	      0xba00000000	                              mov edx, 0	       797	state.c	FUNCTION_23	SWITCH_1
0x40020dc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       797	state.c	FUNCTION_23	SWITCH_1
0x40020e0	          0x895070	             mov dword [rax + 0x70], edx	       797	state.c	FUNCTION_23	SWITCH_1
0x40020e3	            0xeb79	                           jmp 0x400215e	       798	state.c	FUNCTION_23	SWITCH_1
0x40020e5	          0x8b55d0	             mov edx, dword [rbp - 0x30]	       801	state.c	FUNCTION_23	SWITCH_1	CALL_8
0x40020e8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       801	state.c	FUNCTION_23	SWITCH_1	CALL_8
0x40020ec	      0xbe03000000	                              mov esi, 3	       801	state.c	FUNCTION_23	SWITCH_1	CALL_8
0x40020f1	          0x4889c7	                            mov rdi, rax	       801	state.c	FUNCTION_23	SWITCH_1	CALL_8
0x40020f4	      0xe807f4ffff	               call sym.settermprop_bool	       801	state.c	FUNCTION_23	SWITCH_1	CALL_8
0x40020f9	            0xeb63	                           jmp 0x400215e	       802	state.c	FUNCTION_23	SWITCH_1
0x40020fb	          0x8b55d0	             mov edx, dword [rbp - 0x30]	       805	state.c	FUNCTION_23	SWITCH_1	CALL_9
0x40020fe	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       805	state.c	FUNCTION_23	SWITCH_1	CALL_9
0x4002102	            0x89d6	                            mov esi, edx	       805	state.c	FUNCTION_23	SWITCH_1	CALL_9
0x4002104	          0x4889c7	                            mov rdi, rax	       805	state.c	FUNCTION_23	SWITCH_1	CALL_9
0x4002107	      0xe850f5ffff	                     call sym.savecursor	       805	state.c	FUNCTION_23	SWITCH_1	CALL_9
0x400210c	            0xeb50	                           jmp 0x400215e	       806	state.c	FUNCTION_23	SWITCH_1
0x400210e	          0x8b55d0	             mov edx, dword [rbp - 0x30]	       809	state.c	FUNCTION_23	SWITCH_1	CALL_10
0x4002111	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       809	state.c	FUNCTION_23	SWITCH_1	CALL_10
0x4002115	      0xbe03000000	                              mov esi, 3	       809	state.c	FUNCTION_23	SWITCH_1	CALL_10
0x400211a	          0x4889c7	                            mov rdi, rax	       809	state.c	FUNCTION_23	SWITCH_1	CALL_10
0x400211d	      0xe8def3ffff	               call sym.settermprop_bool	       809	state.c	FUNCTION_23	SWITCH_1	CALL_10
0x4002122	          0x8b55d0	             mov edx, dword [rbp - 0x30]	       810	state.c	FUNCTION_23	SWITCH_1	CALL_11
0x4002125	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       810	state.c	FUNCTION_23	SWITCH_1	CALL_11
0x4002129	            0x89d6	                            mov esi, edx	       810	state.c	FUNCTION_23	SWITCH_1	CALL_11
0x400212b	          0x4889c7	                            mov rdi, rax	       810	state.c	FUNCTION_23	SWITCH_1	CALL_11
0x400212e	      0xe829f5ffff	                     call sym.savecursor	       810	state.c	FUNCTION_23	SWITCH_1	CALL_11
0x4002133	            0xeb29	                           jmp 0x400215e	       811	state.c	FUNCTION_23	SWITCH_1
0x4002135	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       814	state.c	FUNCTION_23	SWITCH_1
0x4002138	          0x83e001	                              and eax, 1	       814	state.c	FUNCTION_23	SWITCH_1
0x400213b	            0x89c2	                            mov edx, eax	       814	state.c	FUNCTION_23	SWITCH_1
0x400213d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       814	state.c	FUNCTION_23	SWITCH_1
0x4002141	          0x83e201	                              and edx, 1	       814	state.c	FUNCTION_23	SWITCH_1
0x4002144	            0x89d1	                            mov ecx, edx	       814	state.c	FUNCTION_23	SWITCH_1
0x4002146	          0xc1e105	                              shl ecx, 5	       814	state.c	FUNCTION_23	SWITCH_1
0x4002149	     0xfb690950000	           movzx edx, byte [rax + 0x95] 	       814	state.c	FUNCTION_23	SWITCH_1
0x4002150	          0x83e2df	                     and edx, 0xffffffdf	       814	state.c	FUNCTION_23	SWITCH_1
0x4002153	             0x9ca	                             or edx, ecx	       814	state.c	FUNCTION_23	SWITCH_1
0x4002155	    0x889095000000	               mov byte [rax + 0x95], dl	       814	state.c	FUNCTION_23	SWITCH_1
0x400215b	            0xeb01	                           jmp 0x400215e	       815	state.c	FUNCTION_23	SWITCH_1
0x400215d	              0x90	                                     nop	       772	state.c	FUNCTION_23	SWITCH_1
0x400215e	        0x488b45f8	                mov rax, qword [rbp - 8]	       821	state.c	FUNCTION_23
0x4002162	    0x644833042528	                xor rax, qword fs:[0x28]	       821	state.c	FUNCTION_23
0x400216b	            0x7405	                            je 0x4002172	       821	state.c	FUNCTION_23
0x400216d	      0xe800000000	                          call 0x4002172	       821	state.c	FUNCTION_23
0x4002172	              0xc9	                                   leave	       821	state.c	FUNCTION_23
0x4002173	              0xc3	                                     ret	       821	state.c	FUNCTION_23
set_lineinfo	functions,0:CALL,0:DO,0:WHILE,0:IF,6:ELSE,3:SWITCH,0:FOR,0	93
0x4000992	              0x55	                                push rbp	       217	state.c	FUNCTION_14
0x4000993	          0x4889e5	                            mov rbp, rsp	       217	state.c	FUNCTION_14
0x4000996	        0x4883ec30	                           sub rsp, 0x30	       217	state.c	FUNCTION_14
0x400099a	        0x48897de8	             mov qword [rbp - 0x18], rdi	       217	state.c	FUNCTION_14
0x400099e	          0x8975e4	             mov dword [rbp - 0x1c], esi	       217	state.c	FUNCTION_14
0x40009a1	          0x8955e0	             mov dword [rbp - 0x20], edx	       217	state.c	FUNCTION_14
0x40009a4	          0x894ddc	             mov dword [rbp - 0x24], ecx	       217	state.c	FUNCTION_14
0x40009a7	        0x448945d8	             mov dword [rbp - 0x28], r8d	       217	state.c	FUNCTION_14
0x40009ab	    0x64488b042528	                mov rax, qword fs:[0x28]	       217	state.c	FUNCTION_14
0x40009b4	        0x488945f8	                mov qword [rbp - 8], rax	       217	state.c	FUNCTION_14
0x40009b8	            0x31c0	                            xor eax, eax	       217	state.c	FUNCTION_14
0x40009ba	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       218	state.c	FUNCTION_14
0x40009be	        0x488b4058	            mov rax, qword [rax + 0x58] 	       218	state.c	FUNCTION_14
0x40009c2	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       218	state.c	FUNCTION_14
0x40009c5	          0x4863d2	                         movsxd rdx, edx	       218	state.c	FUNCTION_14
0x40009c8	        0x48c1e202	                              shl rdx, 2	       218	state.c	FUNCTION_14
0x40009cc	          0x4801d0	                            add rax, rdx	       218	state.c	FUNCTION_14
0x40009cf	            0x8b00	                    mov eax, dword [rax]	       218	state.c	FUNCTION_14
0x40009d1	          0x8945f0	             mov dword [rbp - 0x10], eax	       218	state.c	FUNCTION_14
0x40009d4	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       220	state.c	FUNCTION_14	IF_1
0x40009d8	            0x750c	                           jne 0x40009e6	       220	state.c	FUNCTION_14	IF_1
0x40009da	         0xfb645f0	            movzx eax, byte [rbp - 0x10]	       221	state.c	FUNCTION_14	IF_1
0x40009de	          0x83e0fe	                     and eax, 0xfffffffe	       221	state.c	FUNCTION_14	IF_1
0x40009e1	          0x8845f0	               mov byte [rbp - 0x10], al	       221	state.c	FUNCTION_14	IF_1
0x40009e4	            0xeb10	                           jmp 0x40009f6	       221	state.c	FUNCTION_14	IF_1
0x40009e6	        0x837ddc01	               cmp dword [rbp - 0x24], 1	       222	state.c	FUNCTION_14	ELSE_1	IF_2
0x40009ea	            0x750a	                           jne 0x40009f6	       222	state.c	FUNCTION_14	ELSE_1	IF_2
0x40009ec	         0xfb645f0	            movzx eax, byte [rbp - 0x10]	       223	state.c	FUNCTION_14	ELSE_1	IF_2
0x40009f0	          0x83c801	                               or eax, 1	       223	state.c	FUNCTION_14	ELSE_1	IF_2
0x40009f3	          0x8845f0	               mov byte [rbp - 0x10], al	       223	state.c	FUNCTION_14	ELSE_1	IF_2
0x40009f6	        0x837dd800	               cmp dword [rbp - 0x28], 0	       226	state.c	FUNCTION_14	IF_3
0x40009fa	            0x750c	                           jne 0x4000a08	       226	state.c	FUNCTION_14	IF_3
0x40009fc	         0xfb645f0	            movzx eax, byte [rbp - 0x10]	       227	state.c	FUNCTION_14	IF_3
0x4000a00	          0x83e0f9	                     and eax, 0xfffffff9	       227	state.c	FUNCTION_14	IF_3
0x4000a03	          0x8845f0	               mov byte [rbp - 0x10], al	       227	state.c	FUNCTION_14	IF_3
0x4000a06	            0xeb28	                           jmp 0x4000a30	       227	state.c	FUNCTION_14	IF_3
0x4000a08	        0x837dd801	               cmp dword [rbp - 0x28], 1	       228	state.c	FUNCTION_14	ELSE_2	IF_4
0x4000a0c	            0x750f	                           jne 0x4000a1d	       228	state.c	FUNCTION_14	ELSE_2	IF_4
0x4000a0e	         0xfb645f0	            movzx eax, byte [rbp - 0x10]	       229	state.c	FUNCTION_14	ELSE_2	IF_4
0x4000a12	          0x83e0f9	                     and eax, 0xfffffff9	       229	state.c	FUNCTION_14	ELSE_2	IF_4
0x4000a15	          0x83c802	                               or eax, 2	       229	state.c	FUNCTION_14	ELSE_2	IF_4
0x4000a18	          0x8845f0	               mov byte [rbp - 0x10], al	       229	state.c	FUNCTION_14	ELSE_2	IF_4
0x4000a1b	            0xeb13	                           jmp 0x4000a30	       229	state.c	FUNCTION_14	ELSE_2	IF_4
0x4000a1d	        0x837dd802	               cmp dword [rbp - 0x28], 2	       230	state.c	FUNCTION_14	ELSE_3	IF_5
0x4000a21	            0x750d	                           jne 0x4000a30	       230	state.c	FUNCTION_14	ELSE_3	IF_5
0x4000a23	         0xfb645f0	            movzx eax, byte [rbp - 0x10]	       231	state.c	FUNCTION_14	ELSE_3	IF_5
0x4000a27	          0x83e0f9	                     and eax, 0xfffffff9	       231	state.c	FUNCTION_14	ELSE_3	IF_5
0x4000a2a	          0x83c804	                               or eax, 4	       231	state.c	FUNCTION_14	ELSE_3	IF_5
0x4000a2d	          0x8845f0	               mov byte [rbp - 0x10], al	       231	state.c	FUNCTION_14	ELSE_3	IF_5
0x4000a30	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       233	state.c	FUNCTION_14	IF_6
0x4000a34	        0x488b4008	                mov rax, qword [rax + 8]	       233	state.c	FUNCTION_14	IF_6
0x4000a38	          0x4885c0	                           test rax, rax	       233	state.c	FUNCTION_14	IF_6
0x4000a3b	            0x744e	                            je 0x4000a8b	       233	state.c	FUNCTION_14	IF_6
0x4000a3d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       234	state.c	FUNCTION_14	IF_6
0x4000a41	        0x488b4008	                mov rax, qword [rax + 8]	       234	state.c	FUNCTION_14	IF_6
0x4000a45	        0x488b4050	            mov rax, qword [rax + 0x50] 	       234	state.c	FUNCTION_14	IF_6
0x4000a49	          0x4885c0	                           test rax, rax	       233	state.c	FUNCTION_14	IF_6
0x4000a4c	            0x743d	                            je 0x4000a8b	       233	state.c	FUNCTION_14	IF_6
0x4000a4e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       235	state.c	FUNCTION_14	IF_6
0x4000a52	        0x488b4008	                mov rax, qword [rax + 8]	       235	state.c	FUNCTION_14	IF_6
0x4000a56	        0x488b4050	            mov rax, qword [rax + 0x50] 	       235	state.c	FUNCTION_14	IF_6
0x4000a5a	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       235	state.c	FUNCTION_14	IF_6
0x4000a5e	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	       235	state.c	FUNCTION_14	IF_6
0x4000a62	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       235	state.c	FUNCTION_14	IF_6
0x4000a66	        0x488b4958	            mov rcx, qword [rcx + 0x58] 	       235	state.c	FUNCTION_14	IF_6
0x4000a6a	          0x8b75e4	             mov esi, dword [rbp - 0x1c]	       235	state.c	FUNCTION_14	IF_6
0x4000a6d	          0x4863f6	                         movsxd rsi, esi	       235	state.c	FUNCTION_14	IF_6
0x4000a70	        0x48c1e602	                              shl rsi, 2	       235	state.c	FUNCTION_14	IF_6
0x4000a74	        0x4c8d0431	                     lea r8, [rcx + rsi]	       235	state.c	FUNCTION_14	IF_6
0x4000a78	        0x488d75f0	                   lea rsi, [rbp - 0x10]	       235	state.c	FUNCTION_14	IF_6
0x4000a7c	          0x8b7de4	             mov edi, dword [rbp - 0x1c]	       235	state.c	FUNCTION_14	IF_6
0x4000a7f	          0x4889d1	                            mov rcx, rdx	       235	state.c	FUNCTION_14	IF_6
0x4000a82	          0x4c89c2	                             mov rdx, r8	       235	state.c	FUNCTION_14	IF_6
0x4000a85	            0xffd0	                                call rax	       235	state.c	FUNCTION_14	IF_6
0x4000a87	            0x85c0	                           test eax, eax	       234	state.c	FUNCTION_14	IF_6
0x4000a89	            0x7506	                           jne 0x4000a91	       234	state.c	FUNCTION_14	IF_6
0x4000a8b	        0x837de000	               cmp dword [rbp - 0x20], 0	       236	state.c	FUNCTION_14	IF_6
0x4000a8f	            0x741a	                            je 0x4000aab	       236	state.c	FUNCTION_14	IF_6
0x4000a91	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       237	state.c	FUNCTION_14	IF_6
0x4000a95	        0x488b4058	            mov rax, qword [rax + 0x58] 	       237	state.c	FUNCTION_14	IF_6
0x4000a99	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       237	state.c	FUNCTION_14	IF_6
0x4000a9c	          0x4863d2	                         movsxd rdx, edx	       237	state.c	FUNCTION_14	IF_6
0x4000a9f	        0x48c1e202	                              shl rdx, 2	       237	state.c	FUNCTION_14	IF_6
0x4000aa3	          0x4801c2	                            add rdx, rax	       237	state.c	FUNCTION_14	IF_6
0x4000aa6	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       237	state.c	FUNCTION_14	IF_6
0x4000aa9	            0x8902	                    mov dword [rdx], eax	       237	state.c	FUNCTION_14	IF_6
0x4000aab	              0x90	                                     nop	       238	state.c	FUNCTION_14
0x4000aac	        0x488b45f8	                mov rax, qword [rbp - 8]	       238	state.c	FUNCTION_14
0x4000ab0	    0x644833042528	                xor rax, qword fs:[0x28]	       238	state.c	FUNCTION_14
0x4000ab9	            0x7405	                            je 0x4000ac0	       238	state.c	FUNCTION_14
0x4000abb	      0xe800000000	                          call 0x4000ac0	       238	state.c	FUNCTION_14
0x4000ac0	              0xc9	                                   leave	       238	state.c	FUNCTION_14
0x4000ac1	              0xc3	                                     ret	       238	state.c	FUNCTION_14
on_escape	functions,0:CALL,10:DO,0:WHILE,0:IF,10:ELSE,0:SWITCH,3:FOR,2	316
0x4001804	              0x55	                                push rbp	       571	state.c	FUNCTION_21
0x4001805	          0x4889e5	                            mov rbp, rsp	       571	state.c	FUNCTION_21
0x4001808	        0x4883ec60	                           sub rsp, 0x60	       571	state.c	FUNCTION_21
0x400180c	        0x48897db8	             mov qword [rbp - 0x48], rdi	       571	state.c	FUNCTION_21
0x4001810	        0x488975b0	             mov qword [rbp - 0x50], rsi	       571	state.c	FUNCTION_21
0x4001814	        0x488955a8	             mov qword [rbp - 0x58], rdx	       571	state.c	FUNCTION_21
0x4001818	    0x64488b042528	                mov rax, qword fs:[0x28]	       571	state.c	FUNCTION_21
0x4001821	        0x488945f8	                mov qword [rbp - 8], rax	       571	state.c	FUNCTION_21
0x4001825	            0x31c0	                            xor eax, eax	       571	state.c	FUNCTION_21
0x4001827	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       572	state.c	FUNCTION_21
0x400182b	        0x488945e0	             mov qword [rbp - 0x20], rax	       572	state.c	FUNCTION_21
0x400182f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       577	state.c	FUNCTION_21	SWITCH_1
0x4001833	           0xfb600	                   movzx eax, byte [rax]	       577	state.c	FUNCTION_21	SWITCH_1
0x4001836	           0xfbec0	                           movsx eax, al	       577	state.c	FUNCTION_21	SWITCH_1
0x4001839	          0x83e820	                           sub eax, 0x20	       577	state.c	FUNCTION_21	SWITCH_1
0x400183c	          0x83f85e	                           cmp eax, 0x5e	       577	state.c	FUNCTION_21	SWITCH_1
0x400183f	     0xf877d040000	                            ja 0x4001cc2	       577	state.c	FUNCTION_21	SWITCH_1
0x4001845	            0x89c0	                            mov eax, eax	       577	state.c	FUNCTION_21	SWITCH_1
0x4001847	    0x488b04c50000	                  mov rax, qword [rax*8]	       577	state.c	FUNCTION_21	SWITCH_1
0x400184f	            0xffe0	                                 jmp rax	       577	state.c	FUNCTION_21	SWITCH_1
0x4001851	      0x48837db002	               cmp qword [rbp - 0x50], 2	       579	state.c	FUNCTION_21	SWITCH_1	IF_1
0x4001856	            0x740a	                            je 0x4001862	       579	state.c	FUNCTION_21	SWITCH_1	IF_1
0x4001858	      0xb800000000	                              mov eax, 0	       580	state.c	FUNCTION_21	SWITCH_1	IF_1
0x400185d	      0xe965040000	                           jmp 0x4001cc7	       580	state.c	FUNCTION_21	SWITCH_1	IF_1
0x4001862	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       582	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x4001866	        0x4883c001	                              add rax, 1	       582	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x400186a	           0xfb600	                   movzx eax, byte [rax]	       582	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x400186d	           0xfbec0	                           movsx eax, al	       582	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x4001870	          0x83f846	                           cmp eax, 0x46	       582	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x4001873	            0x7407	                            je 0x400187c	       582	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x4001875	          0x83f847	                           cmp eax, 0x47	       582	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x4001878	            0x7415	                            je 0x400188f	       582	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x400187a	            0xeb26	                           jmp 0x40018a2	       582	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x400187c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       584	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x4001880	          0x488b00	                    mov rax, qword [rax]	       584	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x4001883	         0xfb65018	           movzx edx, byte [rax + 0x18] 	       584	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x4001887	          0x83e2fd	                     and edx, 0xfffffffd	       584	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x400188a	          0x885018	               mov byte [rax + 0x18], dl	       584	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x400188d	            0xeb1d	                           jmp 0x40018ac	       585	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x400188f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       588	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x4001893	          0x488b00	                    mov rax, qword [rax]	       588	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x4001896	         0xfb65018	           movzx edx, byte [rax + 0x18] 	       588	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x400189a	          0x83ca02	                               or edx, 2	       588	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x400189d	          0x885018	               mov byte [rax + 0x18], dl	       588	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x40018a0	            0xeb0a	                           jmp 0x40018ac	       589	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x40018a2	      0xb800000000	                              mov eax, 0	       592	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x40018a7	      0xe91b040000	                           jmp 0x4001cc7	       592	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x40018ac	      0xb802000000	                              mov eax, 2	       594	state.c	FUNCTION_21	SWITCH_1
0x40018b1	      0xe911040000	                           jmp 0x4001cc7	       594	state.c	FUNCTION_21	SWITCH_1
0x40018b6	      0x48837db002	               cmp qword [rbp - 0x50], 2	       597	state.c	FUNCTION_21	SWITCH_1	IF_2
0x40018bb	            0x740a	                            je 0x40018c7	       597	state.c	FUNCTION_21	SWITCH_1	IF_2
0x40018bd	      0xb800000000	                              mov eax, 0	       598	state.c	FUNCTION_21	SWITCH_1	IF_2
0x40018c2	      0xe900040000	                           jmp 0x4001cc7	       598	state.c	FUNCTION_21	SWITCH_1	IF_2
0x40018c7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       600	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x40018cb	        0x4883c001	                              add rax, 1	       600	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x40018cf	           0xfb600	                   movzx eax, byte [rax]	       600	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x40018d2	           0xfbec0	                           movsx eax, al	       600	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x40018d5	          0x83e833	                           sub eax, 0x33	       600	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x40018d8	          0x83f805	                              cmp eax, 5	       600	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x40018db	     0xf87a6010000	                            ja 0x4001a87	       600	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x40018e1	            0x89c0	                            mov eax, eax	       600	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x40018e3	    0x488b04c50000	                  mov rax, qword [rax*8]	       600	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x40018eb	            0xffe0	                                 jmp rax	       600	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x40018ed	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       602	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_3
0x40018f1	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	       602	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_3
0x40018f8	          0x83e010	                           and eax, 0x10	       602	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_3
0x40018fb	            0x84c0	                             test al, al	       602	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_3
0x40018fd	     0xf858e010000	                           jne 0x4001a91	       602	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_3
0x4001903	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       604	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_1
0x4001907	          0x8b7030	            mov esi, dword [rax + 0x30] 	       604	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_1
0x400190a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       604	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_1
0x400190e	    0x41b801000000	                              mov r8d, 1	       604	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_1
0x4001914	      0xb901000000	                              mov ecx, 1	       604	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_1
0x4001919	      0xba00000000	                              mov edx, 0	       604	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_1
0x400191e	          0x4889c7	                            mov rdi, rax	       604	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_1
0x4001921	      0xe86cf0ffff	                   call sym.set_lineinfo	       604	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_1
0x4001926	      0xe970010000	                           jmp 0x4001a9b	       605	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x400192b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       608	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_4
0x400192f	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	       608	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_4
0x4001936	          0x83e010	                           and eax, 0x10	       608	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_4
0x4001939	            0x84c0	                             test al, al	       608	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_4
0x400193b	     0xf8553010000	                           jne 0x4001a94	       608	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_4
0x4001941	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       610	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_2
0x4001945	          0x8b7030	            mov esi, dword [rax + 0x30] 	       610	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_2
0x4001948	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       610	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_2
0x400194c	    0x41b802000000	                              mov r8d, 2	       610	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_2
0x4001952	      0xb901000000	                              mov ecx, 1	       610	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_2
0x4001957	      0xba00000000	                              mov edx, 0	       610	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_2
0x400195c	          0x4889c7	                            mov rdi, rax	       610	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_2
0x400195f	      0xe82ef0ffff	                   call sym.set_lineinfo	       610	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_2
0x4001964	      0xe932010000	                           jmp 0x4001a9b	       611	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x4001969	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       614	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_5
0x400196d	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	       614	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_5
0x4001974	          0x83e010	                           and eax, 0x10	       614	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_5
0x4001977	            0x84c0	                             test al, al	       614	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_5
0x4001979	     0xf8518010000	                           jne 0x4001a97	       614	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_5
0x400197f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       616	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_3
0x4001983	          0x8b7030	            mov esi, dword [rax + 0x30] 	       616	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_3
0x4001986	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       616	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_3
0x400198a	    0x41b800000000	                              mov r8d, 0	       616	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_3
0x4001990	      0xb900000000	                              mov ecx, 0	       616	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_3
0x4001995	      0xba00000000	                              mov edx, 0	       616	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_3
0x400199a	          0x4889c7	                            mov rdi, rax	       616	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_3
0x400199d	      0xe8f0efffff	                   call sym.set_lineinfo	       616	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_3
0x40019a2	      0xe9f4000000	                           jmp 0x4001a9b	       617	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x40019a7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       620	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_6
0x40019ab	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	       620	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_6
0x40019b2	          0x83e010	                           and eax, 0x10	       620	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_6
0x40019b5	            0x84c0	                             test al, al	       620	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_6
0x40019b7	     0xf85dd000000	                           jne 0x4001a9a	       620	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_6
0x40019bd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       622	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_4
0x40019c1	          0x8b7030	            mov esi, dword [rax + 0x30] 	       622	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_4
0x40019c4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       622	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_4
0x40019c8	    0x41b800000000	                              mov r8d, 0	       622	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_4
0x40019ce	      0xb901000000	                              mov ecx, 1	       622	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_4
0x40019d3	      0xba00000000	                              mov edx, 0	       622	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_4
0x40019d8	          0x4889c7	                            mov rdi, rax	       622	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_4
0x40019db	      0xe8b2efffff	                   call sym.set_lineinfo	       622	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_4
0x40019e0	      0xe9b6000000	                           jmp 0x4001a9b	       623	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x40019e5	    0xc745f0450000	           mov dword [rbp - 0x10], 0x45 	       628	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x40019ec	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       628	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x40019f3	    0xc745d0000000	               mov dword [rbp - 0x30], 0	       629	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1
0x40019fa	            0xeb76	                           jmp 0x4001a72	       629	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1
0x40019fc	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x4001a03	            0xeb25	                           jmp 0x4001a2a	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x4001a05	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       631	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2
0x4001a09	        0x488d75f0	                   lea rsi, [rbp - 0x10]	       631	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2
0x4001a0d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       631	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2
0x4001a11	          0x4889d1	                            mov rcx, rdx	       631	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2
0x4001a14	      0xba01000000	                              mov edx, 1	       631	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2
0x4001a19	          0x4889c7	                            mov rdi, rax	       631	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2
0x4001a1c	      0xe81fe6ffff	                       call sym.putglyph	       631	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2
0x4001a21	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x4001a24	          0x83c001	                              add eax, 1	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x4001a27	          0x8945d4	             mov dword [rbp - 0x2c], eax	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x4001a2a	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x4001a2d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x4001a31	        0x488b4058	            mov rax, qword [rax + 0x58] 	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x4001a35	          0x8b4dd0	             mov ecx, dword [rbp - 0x30]	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x4001a38	          0x4863c9	                         movsxd rcx, ecx	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x4001a3b	        0x48c1e102	                              shl rcx, 2	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x4001a3f	          0x4801c8	                            add rax, rcx	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x4001a42	           0xfb600	                   movzx eax, byte [rax]	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x4001a45	          0x83e001	                              and eax, 1	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x4001a48	            0x84c0	                             test al, al	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x4001a4a	            0x7412	                            je 0x4001a5e	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x4001a4c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x4001a50	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x4001a53	            0x89c1	                            mov ecx, eax	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x4001a55	          0xc1e91f	                           shr ecx, 0x1f	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x4001a58	             0x1c8	                            add eax, ecx	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x4001a5a	            0xd1f8	                              sar eax, 1	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x4001a5c	            0xeb07	                           jmp 0x4001a65	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x4001a5e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x4001a62	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x4001a65	            0x39c2	                            cmp edx, eax	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x4001a67	            0x7c9c	                            jl 0x4001a05	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x4001a69	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       629	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1
0x4001a6c	          0x83c001	                              add eax, 1	       629	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1
0x4001a6f	          0x8945d0	             mov dword [rbp - 0x30], eax	       629	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1
0x4001a72	          0x8b55d0	             mov edx, dword [rbp - 0x30]	       629	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1
0x4001a75	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       629	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1
0x4001a79	          0x8b4028	            mov eax, dword [rax + 0x28] 	       629	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1
0x4001a7c	            0x39c2	                            cmp edx, eax	       629	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1
0x4001a7e	     0xf8c78ffffff	                            jl 0x40019fc	       629	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1
0x4001a84	              0x90	                                     nop	       632	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x4001a85	            0xeb14	                           jmp 0x4001a9b	       632	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x4001a87	      0xb800000000	                              mov eax, 0	       636	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x4001a8c	      0xe936020000	                           jmp 0x4001cc7	       636	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x4001a91	              0x90	                                     nop	       603	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_3
0x4001a92	            0xeb07	                           jmp 0x4001a9b	       603	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_3
0x4001a94	              0x90	                                     nop	       609	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_4
0x4001a95	            0xeb04	                           jmp 0x4001a9b	       609	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_4
0x4001a97	              0x90	                                     nop	       615	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_5
0x4001a98	            0xeb01	                           jmp 0x4001a9b	       615	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_5
0x4001a9a	              0x90	                                     nop	       621	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_6
0x4001a9b	      0xb802000000	                              mov eax, 2	       638	state.c	FUNCTION_21	SWITCH_1
0x4001aa0	      0xe922020000	                           jmp 0x4001cc7	       638	state.c	FUNCTION_21	SWITCH_1
0x4001aa5	      0x48837db002	               cmp qword [rbp - 0x50], 2	       641	state.c	FUNCTION_21	SWITCH_1	IF_7
0x4001aaa	            0x740a	                            je 0x4001ab6	       641	state.c	FUNCTION_21	SWITCH_1	IF_7
0x4001aac	      0xb800000000	                              mov eax, 0	       642	state.c	FUNCTION_21	SWITCH_1	IF_7
0x4001ab1	      0xe911020000	                           jmp 0x4001cc7	       642	state.c	FUNCTION_21	SWITCH_1	IF_7
0x4001ab6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       645	state.c	FUNCTION_21	SWITCH_1
0x4001aba	           0xfb600	                   movzx eax, byte [rax]	       645	state.c	FUNCTION_21	SWITCH_1
0x4001abd	           0xfbec0	                           movsx eax, al	       645	state.c	FUNCTION_21	SWITCH_1
0x4001ac0	          0x83e828	                           sub eax, 0x28	       645	state.c	FUNCTION_21	SWITCH_1
0x4001ac3	          0x8945cc	             mov dword [rbp - 0x34], eax	       645	state.c	FUNCTION_21	SWITCH_1
0x4001ac6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       646	state.c	FUNCTION_21	SWITCH_1	CALL_7
0x4001aca	        0x4883c001	                              add rax, 1	       646	state.c	FUNCTION_21	SWITCH_1	CALL_7
0x4001ace	           0xfb600	                   movzx eax, byte [rax]	       646	state.c	FUNCTION_21	SWITCH_1	CALL_7
0x4001ad1	           0xfbec0	                           movsx eax, al	       646	state.c	FUNCTION_21	SWITCH_1	CALL_7
0x4001ad4	            0x89c6	                            mov esi, eax	       646	state.c	FUNCTION_21	SWITCH_1	CALL_7
0x4001ad6	      0xbf01000000	                              mov edi, 1	       646	state.c	FUNCTION_21	SWITCH_1	CALL_7
0x4001adb	      0xe800000000	                          call 0x4001ae0	       646	state.c	FUNCTION_21	SWITCH_1	CALL_7
0x4001ae0	        0x488945e8	             mov qword [rbp - 0x18], rax	       646	state.c	FUNCTION_21	SWITCH_1	CALL_7
0x4001ae4	      0x48837de800	               cmp qword [rbp - 0x18], 0	       648	state.c	FUNCTION_21	SWITCH_1	IF_8
0x4001ae9	            0x746c	                            je 0x4001b57	       648	state.c	FUNCTION_21	SWITCH_1	IF_8
0x4001aeb	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       649	state.c	FUNCTION_21	SWITCH_1	IF_8
0x4001aef	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       649	state.c	FUNCTION_21	SWITCH_1	IF_8
0x4001af2	          0x4863d0	                         movsxd rdx, eax	       649	state.c	FUNCTION_21	SWITCH_1	IF_8
0x4001af5	          0x4889d0	                            mov rax, rdx	       649	state.c	FUNCTION_21	SWITCH_1	IF_8
0x4001af8	          0x4801c0	                            add rax, rax	       649	state.c	FUNCTION_21	SWITCH_1	IF_8
0x4001afb	          0x4801d0	                            add rax, rdx	       649	state.c	FUNCTION_21	SWITCH_1	IF_8
0x4001afe	        0x48c1e003	                              shl rax, 3	       649	state.c	FUNCTION_21	SWITCH_1	IF_8
0x4001b02	          0x4801c8	                            add rax, rcx	       649	state.c	FUNCTION_21	SWITCH_1	IF_8
0x4001b05	    0x488d90980000	                   lea rdx, [rax + 0x98]	       649	state.c	FUNCTION_21	SWITCH_1	IF_8
0x4001b0c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       649	state.c	FUNCTION_21	SWITCH_1	IF_8
0x4001b10	          0x488902	                    mov qword [rdx], rax	       649	state.c	FUNCTION_21	SWITCH_1	IF_8
0x4001b13	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       651	state.c	FUNCTION_21	SWITCH_1	IF_8	IF_9
0x4001b17	          0x488b00	                    mov rax, qword [rax]	       651	state.c	FUNCTION_21	SWITCH_1	IF_8	IF_9
0x4001b1a	          0x4885c0	                           test rax, rax	       651	state.c	FUNCTION_21	SWITCH_1	IF_8	IF_9
0x4001b1d	            0x7438	                            je 0x4001b57	       651	state.c	FUNCTION_21	SWITCH_1	IF_8	IF_9
0x4001b1f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       652	state.c	FUNCTION_21	SWITCH_1	IF_8	IF_9
0x4001b23	          0x488b08	                    mov rcx, qword [rax]	       652	state.c	FUNCTION_21	SWITCH_1	IF_8	IF_9
0x4001b26	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       652	state.c	FUNCTION_21	SWITCH_1	IF_8	IF_9
0x4001b29	          0x4863d0	                         movsxd rdx, eax	       652	state.c	FUNCTION_21	SWITCH_1	IF_8	IF_9
0x4001b2c	          0x4889d0	                            mov rax, rdx	       652	state.c	FUNCTION_21	SWITCH_1	IF_8	IF_9
0x4001b2f	          0x4801c0	                            add rax, rax	       652	state.c	FUNCTION_21	SWITCH_1	IF_8	IF_9
0x4001b32	          0x4801d0	                            add rax, rdx	       652	state.c	FUNCTION_21	SWITCH_1	IF_8	IF_9
0x4001b35	        0x48c1e003	                              shl rax, 3	       652	state.c	FUNCTION_21	SWITCH_1	IF_8	IF_9
0x4001b39	    0x488d90900000	                   lea rdx, [rax + 0x90]	       652	state.c	FUNCTION_21	SWITCH_1	IF_8	IF_9
0x4001b40	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       652	state.c	FUNCTION_21	SWITCH_1	IF_8	IF_9
0x4001b44	          0x4801d0	                            add rax, rdx	       652	state.c	FUNCTION_21	SWITCH_1	IF_8	IF_9
0x4001b47	        0x488d5010	                   lea rdx, [rax + 0x10]	       652	state.c	FUNCTION_21	SWITCH_1	IF_8	IF_9
0x4001b4b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       652	state.c	FUNCTION_21	SWITCH_1	IF_8	IF_9
0x4001b4f	          0x4889d6	                            mov rsi, rdx	       652	state.c	FUNCTION_21	SWITCH_1	IF_8	IF_9
0x4001b52	          0x4889c7	                            mov rdi, rax	       652	state.c	FUNCTION_21	SWITCH_1	IF_8	IF_9
0x4001b55	            0xffd1	                                call rcx	       652	state.c	FUNCTION_21	SWITCH_1	IF_8	IF_9
0x4001b57	      0xb802000000	                              mov eax, 2	       656	state.c	FUNCTION_21	SWITCH_1
0x4001b5c	      0xe966010000	                           jmp 0x4001cc7	       656	state.c	FUNCTION_21	SWITCH_1
0x4001b61	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       659	state.c	FUNCTION_21	SWITCH_1	CALL_8
0x4001b65	      0xbe01000000	                              mov esi, 1	       659	state.c	FUNCTION_21	SWITCH_1	CALL_8
0x4001b6a	          0x4889c7	                            mov rdi, rax	       659	state.c	FUNCTION_21	SWITCH_1	CALL_8
0x4001b6d	      0xe8eafaffff	                     call sym.savecursor	       659	state.c	FUNCTION_21	SWITCH_1	CALL_8
0x4001b72	      0xb801000000	                              mov eax, 1	       660	state.c	FUNCTION_21	SWITCH_1
0x4001b77	      0xe94b010000	                           jmp 0x4001cc7	       660	state.c	FUNCTION_21	SWITCH_1
0x4001b7c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       663	state.c	FUNCTION_21	SWITCH_1	CALL_9
0x4001b80	      0xbe00000000	                              mov esi, 0	       663	state.c	FUNCTION_21	SWITCH_1	CALL_9
0x4001b85	          0x4889c7	                            mov rdi, rax	       663	state.c	FUNCTION_21	SWITCH_1	CALL_9
0x4001b88	      0xe8cffaffff	                     call sym.savecursor	       663	state.c	FUNCTION_21	SWITCH_1	CALL_9
0x4001b8d	      0xb801000000	                              mov eax, 1	       664	state.c	FUNCTION_21	SWITCH_1
0x4001b92	      0xe930010000	                           jmp 0x4001cc7	       664	state.c	FUNCTION_21	SWITCH_1
0x4001b97	      0xb801000000	                              mov eax, 1	       667	state.c	FUNCTION_21	SWITCH_1
0x4001b9c	      0xe926010000	                           jmp 0x4001cc7	       667	state.c	FUNCTION_21	SWITCH_1
0x4001ba1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       670	state.c	FUNCTION_21	SWITCH_1
0x4001ba5	     0xfb690940000	           movzx edx, byte [rax + 0x94] 	       670	state.c	FUNCTION_21	SWITCH_1
0x4001bac	          0x83ca01	                               or edx, 1	       670	state.c	FUNCTION_21	SWITCH_1
0x4001baf	    0x889094000000	               mov byte [rax + 0x94], dl	       670	state.c	FUNCTION_21	SWITCH_1
0x4001bb5	      0xb801000000	                              mov eax, 1	       671	state.c	FUNCTION_21	SWITCH_1
0x4001bba	      0xe908010000	                           jmp 0x4001cc7	       671	state.c	FUNCTION_21	SWITCH_1
0x4001bbf	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       674	state.c	FUNCTION_21	SWITCH_1
0x4001bc3	     0xfb690940000	           movzx edx, byte [rax + 0x94] 	       674	state.c	FUNCTION_21	SWITCH_1
0x4001bca	          0x83e2fe	                     and edx, 0xfffffffe	       674	state.c	FUNCTION_21	SWITCH_1
0x4001bcd	    0x889094000000	               mov byte [rax + 0x94], dl	       674	state.c	FUNCTION_21	SWITCH_1
0x4001bd3	      0xb801000000	                              mov eax, 1	       675	state.c	FUNCTION_21	SWITCH_1
0x4001bd8	      0xe9ea000000	                           jmp 0x4001cc7	       675	state.c	FUNCTION_21	SWITCH_1
0x4001bdd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       679	state.c	FUNCTION_21	SWITCH_1
0x4001be1	        0x488b4030	            mov rax, qword [rax + 0x30] 	       679	state.c	FUNCTION_21	SWITCH_1
0x4001be5	        0x488945d0	             mov qword [rbp - 0x30], rax	       679	state.c	FUNCTION_21	SWITCH_1
0x4001be9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       680	state.c	FUNCTION_21	SWITCH_1	CALL_10
0x4001bed	      0xbe01000000	                              mov esi, 1	       680	state.c	FUNCTION_21	SWITCH_1	CALL_10
0x4001bf2	          0x4889c7	                            mov rdi, rax	       680	state.c	FUNCTION_21	SWITCH_1	CALL_10
0x4001bf5	      0xe800000000	                          call 0x4001bfa	       680	state.c	FUNCTION_21	SWITCH_1	CALL_10
0x4001bfa	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       681	state.c	FUNCTION_21	SWITCH_1	IF_10
0x4001bfe	        0x488b4008	                mov rax, qword [rax + 8]	       681	state.c	FUNCTION_21	SWITCH_1	IF_10
0x4001c02	          0x4885c0	                           test rax, rax	       681	state.c	FUNCTION_21	SWITCH_1	IF_10
0x4001c05	            0x744b	                            je 0x4001c52	       681	state.c	FUNCTION_21	SWITCH_1	IF_10
0x4001c07	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       681	state.c	FUNCTION_21	SWITCH_1	IF_10
0x4001c0b	        0x488b4008	                mov rax, qword [rax + 8]	       681	state.c	FUNCTION_21	SWITCH_1	IF_10
0x4001c0f	        0x488b4008	                mov rax, qword [rax + 8]	       681	state.c	FUNCTION_21	SWITCH_1	IF_10
0x4001c13	          0x4885c0	                           test rax, rax	       681	state.c	FUNCTION_21	SWITCH_1	IF_10
0x4001c16	            0x743a	                            je 0x4001c52	       681	state.c	FUNCTION_21	SWITCH_1	IF_10
0x4001c18	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       682	state.c	FUNCTION_21	SWITCH_1	IF_10
0x4001c1c	        0x488b4008	                mov rax, qword [rax + 8]	       682	state.c	FUNCTION_21	SWITCH_1	IF_10
0x4001c20	        0x4c8b4008	                 mov r8, qword [rax + 8]	       682	state.c	FUNCTION_21	SWITCH_1	IF_10
0x4001c24	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       682	state.c	FUNCTION_21	SWITCH_1	IF_10
0x4001c28	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       682	state.c	FUNCTION_21	SWITCH_1	IF_10
0x4001c2c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       682	state.c	FUNCTION_21	SWITCH_1	IF_10
0x4001c30	     0xfb680940000	           movzx eax, byte [rax + 0x94] 	       682	state.c	FUNCTION_21	SWITCH_1	IF_10
0x4001c37	          0xc0e805	                               shr al, 5	       682	state.c	FUNCTION_21	SWITCH_1	IF_10
0x4001c3a	          0x83e001	                              and eax, 1	       682	state.c	FUNCTION_21	SWITCH_1	IF_10
0x4001c3d	           0xfb6d0	                           movzx edx, al	       682	state.c	FUNCTION_21	SWITCH_1	IF_10
0x4001c40	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	       682	state.c	FUNCTION_21	SWITCH_1	IF_10
0x4001c44	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       682	state.c	FUNCTION_21	SWITCH_1	IF_10
0x4001c48	        0x488b4030	            mov rax, qword [rax + 0x30] 	       682	state.c	FUNCTION_21	SWITCH_1	IF_10
0x4001c4c	          0x4889c7	                            mov rdi, rax	       682	state.c	FUNCTION_21	SWITCH_1	IF_10
0x4001c4f	          0x41ffd0	                                 call r8	       682	state.c	FUNCTION_21	SWITCH_1	IF_10
0x4001c52	      0xb801000000	                              mov eax, 1	       683	state.c	FUNCTION_21	SWITCH_1
0x4001c57	            0xeb6e	                           jmp 0x4001cc7	       683	state.c	FUNCTION_21	SWITCH_1
0x4001c59	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       687	state.c	FUNCTION_21	SWITCH_1
0x4001c5d	    0xc78010010000	              mov dword [rax + 0x110], 2	       687	state.c	FUNCTION_21	SWITCH_1
0x4001c67	      0xb801000000	                              mov eax, 1	       688	state.c	FUNCTION_21	SWITCH_1
0x4001c6c	            0xeb59	                           jmp 0x4001cc7	       688	state.c	FUNCTION_21	SWITCH_1
0x4001c6e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       691	state.c	FUNCTION_21	SWITCH_1
0x4001c72	    0xc78010010000	              mov dword [rax + 0x110], 3	       691	state.c	FUNCTION_21	SWITCH_1
0x4001c7c	      0xb801000000	                              mov eax, 1	       692	state.c	FUNCTION_21	SWITCH_1
0x4001c81	            0xeb44	                           jmp 0x4001cc7	       692	state.c	FUNCTION_21	SWITCH_1
0x4001c83	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       695	state.c	FUNCTION_21	SWITCH_1
0x4001c87	    0xc78014010000	              mov dword [rax + 0x114], 1	       695	state.c	FUNCTION_21	SWITCH_1
0x4001c91	      0xb801000000	                              mov eax, 1	       696	state.c	FUNCTION_21	SWITCH_1
0x4001c96	            0xeb2f	                           jmp 0x4001cc7	       696	state.c	FUNCTION_21	SWITCH_1
0x4001c98	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       699	state.c	FUNCTION_21	SWITCH_1
0x4001c9c	    0xc78014010000	              mov dword [rax + 0x114], 2	       699	state.c	FUNCTION_21	SWITCH_1
0x4001ca6	      0xb801000000	                              mov eax, 1	       700	state.c	FUNCTION_21	SWITCH_1
0x4001cab	            0xeb1a	                           jmp 0x4001cc7	       700	state.c	FUNCTION_21	SWITCH_1
0x4001cad	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       703	state.c	FUNCTION_21	SWITCH_1
0x4001cb1	    0xc78014010000	              mov dword [rax + 0x114], 3	       703	state.c	FUNCTION_21	SWITCH_1
0x4001cbb	      0xb801000000	                              mov eax, 1	       704	state.c	FUNCTION_21	SWITCH_1
0x4001cc0	            0xeb05	                           jmp 0x4001cc7	       704	state.c	FUNCTION_21	SWITCH_1
0x4001cc2	      0xb800000000	                              mov eax, 0	       707	state.c	FUNCTION_21	SWITCH_1
0x4001cc7	        0x488b7df8	                mov rdi, qword [rbp - 8]	       709	state.c	FUNCTION_21
0x4001ccb	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       709	state.c	FUNCTION_21
0x4001cd4	            0x7405	                            je 0x4001cdb	       709	state.c	FUNCTION_21
0x4001cd6	      0xe800000000	                          call 0x4001cdb	       709	state.c	FUNCTION_21
0x4001cdb	              0xc9	                                   leave	       709	state.c	FUNCTION_21
0x4001cdc	              0xc3	                                     ret	       709	state.c	FUNCTION_21
settermprop_int	functions,0:CALL,1:DO,0:WHILE,0:IF,0:ELSE,0:SWITCH,0:FOR,0	23
0x4001552	              0x55	                                push rbp	       524	state.c	FUNCTION_18
0x4001553	          0x4889e5	                            mov rbp, rsp	       524	state.c	FUNCTION_18
0x4001556	        0x4883ec20	                           sub rsp, 0x20	       524	state.c	FUNCTION_18
0x400155a	        0x48897de8	             mov qword [rbp - 0x18], rdi	       524	state.c	FUNCTION_18
0x400155e	          0x8975e4	             mov dword [rbp - 0x1c], esi	       524	state.c	FUNCTION_18
0x4001561	          0x8955e0	             mov dword [rbp - 0x20], edx	       524	state.c	FUNCTION_18
0x4001564	    0x64488b042528	                mov rax, qword fs:[0x28]	       524	state.c	FUNCTION_18
0x400156d	        0x488945f8	                mov qword [rbp - 8], rax	       524	state.c	FUNCTION_18
0x4001571	            0x31c0	                            xor eax, eax	       524	state.c	FUNCTION_18
0x4001573	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       526	state.c	FUNCTION_18
0x4001576	          0x8945f0	             mov dword [rbp - 0x10], eax	       526	state.c	FUNCTION_18
0x4001579	        0x488d55f0	                   lea rdx, [rbp - 0x10]	       527	state.c	FUNCTION_18	CALL_1
0x400157d	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	       527	state.c	FUNCTION_18	CALL_1
0x4001580	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       527	state.c	FUNCTION_18	CALL_1
0x4001584	            0x89ce	                            mov esi, ecx	       527	state.c	FUNCTION_18	CALL_1
0x4001586	          0x4889c7	                            mov rdi, rax	       527	state.c	FUNCTION_18	CALL_1
0x4001589	      0xe800000000	                          call 0x400158e	       527	state.c	FUNCTION_18	CALL_1
0x400158e	        0x488b4df8	                mov rcx, qword [rbp - 8]	       528	state.c	FUNCTION_18
0x4001592	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       528	state.c	FUNCTION_18
0x400159b	            0x7405	                            je 0x40015a2	       528	state.c	FUNCTION_18
0x400159d	      0xe800000000	                          call 0x40015a2	       528	state.c	FUNCTION_18
0x40015a2	              0xc9	                                   leave	       528	state.c	FUNCTION_18
0x40015a3	              0xc3	                                     ret	       528	state.c	FUNCTION_18
settermprop_string	functions,0:CALL,4:DO,0:WHILE,0:IF,0:ELSE,0:SWITCH,0:FOR,0	50
0x40015a4	              0x55	                                push rbp	       531	state.c	FUNCTION_19
0x40015a5	          0x4889e5	                            mov rbp, rsp	       531	state.c	FUNCTION_19
0x40015a8	        0x4883ec50	                           sub rsp, 0x50	       531	state.c	FUNCTION_19
0x40015ac	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       531	state.c	FUNCTION_19
0x40015b0	          0x8975c4	             mov dword [rbp - 0x3c], esi	       531	state.c	FUNCTION_19
0x40015b3	        0x488955b8	             mov qword [rbp - 0x48], rdx	       531	state.c	FUNCTION_19
0x40015b7	        0x48894db0	             mov qword [rbp - 0x50], rcx	       531	state.c	FUNCTION_19
0x40015bb	    0x64488b042528	                mov rax, qword fs:[0x28]	       531	state.c	FUNCTION_19
0x40015c4	        0x488945f8	                mov qword [rbp - 8], rax	       531	state.c	FUNCTION_19
0x40015c8	            0x31c0	                            xor eax, eax	       531	state.c	FUNCTION_19
0x40015ca	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       535	state.c	FUNCTION_19	CALL_1
0x40015ce	        0x488d5001	                      lea rdx, [rax + 1]	       535	state.c	FUNCTION_19	CALL_1
0x40015d2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       535	state.c	FUNCTION_19	CALL_1
0x40015d6	          0x488b00	                    mov rax, qword [rax]	       535	state.c	FUNCTION_19	CALL_1
0x40015d9	          0x4889d6	                            mov rsi, rdx	       535	state.c	FUNCTION_19	CALL_1
0x40015dc	          0x4889c7	                            mov rdi, rax	       535	state.c	FUNCTION_19	CALL_1
0x40015df	      0xe800000000	                          call 0x40015e4	       535	state.c	FUNCTION_19	CALL_1
0x40015e4	        0x488945f0	             mov qword [rbp - 0x10], rax	       535	state.c	FUNCTION_19	CALL_1
0x40015e8	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       536	state.c	FUNCTION_19	CALL_2
0x40015ec	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	       536	state.c	FUNCTION_19	CALL_2
0x40015f0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       536	state.c	FUNCTION_19	CALL_2
0x40015f4	          0x4889ce	                            mov rsi, rcx	       536	state.c	FUNCTION_19	CALL_2
0x40015f7	          0x4889c7	                            mov rdi, rax	       536	state.c	FUNCTION_19	CALL_2
0x40015fa	      0xe800000000	                          call 0x40015ff	       536	state.c	FUNCTION_19	CALL_2
0x40015ff	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       537	state.c	FUNCTION_19
0x4001603	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       537	state.c	FUNCTION_19
0x4001607	          0x4801d0	                            add rax, rdx	       537	state.c	FUNCTION_19
0x400160a	          0xc60000	                       mov byte [rax], 0	       537	state.c	FUNCTION_19
0x400160d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       539	state.c	FUNCTION_19
0x4001611	        0x488945e0	             mov qword [rbp - 0x20], rax	       539	state.c	FUNCTION_19
0x4001615	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       540	state.c	FUNCTION_19	CALL_3
0x4001619	          0x8b4dc4	             mov ecx, dword [rbp - 0x3c]	       540	state.c	FUNCTION_19	CALL_3
0x400161c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       540	state.c	FUNCTION_19	CALL_3
0x4001620	            0x89ce	                            mov esi, ecx	       540	state.c	FUNCTION_19	CALL_3
0x4001622	          0x4889c7	                            mov rdi, rax	       540	state.c	FUNCTION_19	CALL_3
0x4001625	      0xe800000000	                          call 0x400162a	       540	state.c	FUNCTION_19	CALL_3
0x400162a	          0x8945dc	             mov dword [rbp - 0x24], eax	       540	state.c	FUNCTION_19	CALL_3
0x400162d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       541	state.c	FUNCTION_19	CALL_4
0x4001631	          0x488b00	                    mov rax, qword [rax]	       541	state.c	FUNCTION_19	CALL_4
0x4001634	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       541	state.c	FUNCTION_19	CALL_4
0x4001638	          0x4889d6	                            mov rsi, rdx	       541	state.c	FUNCTION_19	CALL_4
0x400163b	          0x4889c7	                            mov rdi, rax	       541	state.c	FUNCTION_19	CALL_4
0x400163e	      0xe800000000	                          call 0x4001643	       541	state.c	FUNCTION_19	CALL_4
0x4001643	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       542	state.c	FUNCTION_19
0x4001646	        0x488b4df8	                mov rcx, qword [rbp - 8]	       543	state.c	FUNCTION_19
0x400164a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       543	state.c	FUNCTION_19
0x4001653	            0x7405	                            je 0x400165a	       543	state.c	FUNCTION_19
0x4001655	      0xe800000000	                          call 0x400165a	       543	state.c	FUNCTION_19
0x400165a	              0xc9	                                   leave	       543	state.c	FUNCTION_19
0x400165b	              0xc3	                                     ret	       543	state.c	FUNCTION_19
vterm_state_set_unrecognised_fallbacks	functions,0:CALL,0:DO,0:WHILE,0:IF,1:ELSE,1:SWITCH,0:FOR,0	21
0x4005796	              0x55	                                push rbp	      1834	state.c	FUNCTION_36
0x4005797	          0x4889e5	                            mov rbp, rsp	      1834	state.c	FUNCTION_36
0x400579a	        0x48897df8	                mov qword [rbp - 8], rdi	      1834	state.c	FUNCTION_36
0x400579e	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1834	state.c	FUNCTION_36
0x40057a2	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1834	state.c	FUNCTION_36
0x40057a6	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1835	state.c	FUNCTION_36	IF_1
0x40057ab	            0x741a	                            je 0x40057c7	      1835	state.c	FUNCTION_36	IF_1
0x40057ad	        0x488b45f8	                mov rax, qword [rbp - 8]	      1836	state.c	FUNCTION_36	IF_1
0x40057b1	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1836	state.c	FUNCTION_36	IF_1
0x40057b5	        0x48895018	             mov qword [rax + 0x18], rdx	      1836	state.c	FUNCTION_36	IF_1
0x40057b9	        0x488b45f8	                mov rax, qword [rbp - 8]	      1837	state.c	FUNCTION_36	IF_1
0x40057bd	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1837	state.c	FUNCTION_36	IF_1
0x40057c1	        0x48895020	             mov qword [rax + 0x20], rdx	      1837	state.c	FUNCTION_36	IF_1
0x40057c5	            0xeb18	                           jmp 0x40057df	      1843	state.c	FUNCTION_36
0x40057c7	        0x488b45f8	                mov rax, qword [rbp - 8]	      1840	state.c	FUNCTION_36	ELSE_1
0x40057cb	    0x48c740180000	               mov qword [rax + 0x18], 0	      1840	state.c	FUNCTION_36	ELSE_1
0x40057d3	        0x488b45f8	                mov rax, qword [rbp - 8]	      1841	state.c	FUNCTION_36	ELSE_1
0x40057d7	    0x48c740200000	               mov qword [rax + 0x20], 0	      1841	state.c	FUNCTION_36	ELSE_1
0x40057df	              0x90	                                     nop	      1843	state.c	FUNCTION_36
0x40057e0	              0x5d	                                 pop rbp	      1843	state.c	FUNCTION_36
0x40057e1	              0xc3	                                     ret	      1843	state.c	FUNCTION_36
tab	functions,0:CALL,2:DO,0:WHILE,1:IF,5:ELSE,1:SWITCH,0:FOR,0	69
0x40008c5	              0x55	                                push rbp	       186	state.c	FUNCTION_13
0x40008c6	          0x4889e5	                            mov rbp, rsp	       186	state.c	FUNCTION_13
0x40008c9	        0x4883ec10	                           sub rsp, 0x10	       186	state.c	FUNCTION_13
0x40008cd	        0x48897df8	                mov qword [rbp - 8], rdi	       186	state.c	FUNCTION_13
0x40008d1	          0x8975f4	              mov dword [rbp - 0xc], esi	       186	state.c	FUNCTION_13
0x40008d4	          0x8955f0	             mov dword [rbp - 0x10], edx	       186	state.c	FUNCTION_13
0x40008d7	      0xe9a4000000	                           jmp 0x4000980	       187	state.c	FUNCTION_13	WHILE_1
0x40008dc	        0x837df000	               cmp dword [rbp - 0x10], 0	       188	state.c	FUNCTION_13	WHILE_1	IF_1
0x40008e0	            0x7e5f	                           jle 0x4000941	       188	state.c	FUNCTION_13	WHILE_1	IF_1
0x40008e2	        0x488b45f8	                mov rax, qword [rbp - 8]	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x40008e6	          0x8b5034	            mov edx, dword [rax + 0x34] 	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x40008e9	        0x488b45f8	                mov rax, qword [rbp - 8]	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x40008ed	        0x488b4858	            mov rcx, qword [rax + 0x58] 	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x40008f1	        0x488b45f8	                mov rax, qword [rbp - 8]	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x40008f5	          0x8b4030	            mov eax, dword [rax + 0x30] 	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x40008f8	            0x4898	                                    cdqe	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x40008fa	        0x48c1e002	                              shl rax, 2	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x40008fe	          0x4801c8	                            add rax, rcx	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x4000901	           0xfb600	                   movzx eax, byte [rax]	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x4000904	          0x83e001	                              and eax, 1	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x4000907	            0x84c0	                             test al, al	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x4000909	            0x7415	                            je 0x4000920	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x400090b	        0x488b45f8	                mov rax, qword [rbp - 8]	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x400090f	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x4000912	            0x89c1	                            mov ecx, eax	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x4000914	          0xc1e91f	                           shr ecx, 0x1f	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x4000917	             0x1c8	                            add eax, ecx	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x4000919	            0xd1f8	                              sar eax, 1	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x400091b	          0x83e801	                              sub eax, 1	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x400091e	            0xeb0a	                           jmp 0x400092a	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x4000920	        0x488b45f8	                mov rax, qword [rbp - 8]	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x4000924	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x4000927	          0x83e801	                              sub eax, 1	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x400092a	            0x39c2	                            cmp edx, eax	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x400092c	            0x7d5e	                           jge 0x400098c	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x400092e	        0x488b45f8	                mov rax, qword [rbp - 8]	       192	state.c	FUNCTION_13	WHILE_1	IF_1
0x4000932	          0x8b4034	            mov eax, dword [rax + 0x34] 	       192	state.c	FUNCTION_13	WHILE_1	IF_1
0x4000935	          0x8d5001	                      lea edx, [rax + 1]	       192	state.c	FUNCTION_13	WHILE_1	IF_1
0x4000938	        0x488b45f8	                mov rax, qword [rbp - 8]	       192	state.c	FUNCTION_13	WHILE_1	IF_1
0x400093c	          0x895034	             mov dword [rax + 0x34], edx	       192	state.c	FUNCTION_13	WHILE_1	IF_1
0x400093f	            0xeb22	                           jmp 0x4000963	       192	state.c	FUNCTION_13	WHILE_1	IF_1
0x4000941	        0x837df000	               cmp dword [rbp - 0x10], 0	       194	state.c	FUNCTION_13	WHILE_1	ELSE_1	IF_3
0x4000945	            0x791c	                           jns 0x4000963	       194	state.c	FUNCTION_13	WHILE_1	ELSE_1	IF_3
0x4000947	        0x488b45f8	                mov rax, qword [rbp - 8]	       195	state.c	FUNCTION_13	WHILE_1	ELSE_1	IF_3	IF_4
0x400094b	          0x8b4034	            mov eax, dword [rax + 0x34] 	       195	state.c	FUNCTION_13	WHILE_1	ELSE_1	IF_3	IF_4
0x400094e	            0x85c0	                           test eax, eax	       195	state.c	FUNCTION_13	WHILE_1	ELSE_1	IF_3	IF_4
0x4000950	            0x7e3d	                           jle 0x400098f	       195	state.c	FUNCTION_13	WHILE_1	ELSE_1	IF_3	IF_4
0x4000952	        0x488b45f8	                mov rax, qword [rbp - 8]	       198	state.c	FUNCTION_13	WHILE_1	ELSE_1	IF_3
0x4000956	          0x8b4034	            mov eax, dword [rax + 0x34] 	       198	state.c	FUNCTION_13	WHILE_1	ELSE_1	IF_3
0x4000959	          0x8d50ff	                      lea edx, [rax - 1]	       198	state.c	FUNCTION_13	WHILE_1	ELSE_1	IF_3
0x400095c	        0x488b45f8	                mov rax, qword [rbp - 8]	       198	state.c	FUNCTION_13	WHILE_1	ELSE_1	IF_3
0x4000960	          0x895034	             mov dword [rax + 0x34], edx	       198	state.c	FUNCTION_13	WHILE_1	ELSE_1	IF_3
0x4000963	        0x488b45f8	                mov rax, qword [rbp - 8]	       201	state.c	FUNCTION_13	WHILE_1	IF_5	CALL_2
0x4000967	          0x8b5034	            mov edx, dword [rax + 0x34] 	       201	state.c	FUNCTION_13	WHILE_1	IF_5	CALL_2
0x400096a	        0x488b45f8	                mov rax, qword [rbp - 8]	       201	state.c	FUNCTION_13	WHILE_1	IF_5	CALL_2
0x400096e	            0x89d6	                            mov esi, edx	       201	state.c	FUNCTION_13	WHILE_1	IF_5	CALL_2
0x4000970	          0x4889c7	                            mov rdi, rax	       201	state.c	FUNCTION_13	WHILE_1	IF_5	CALL_2
0x4000973	      0xe858feffff	                 call sym.is_col_tabstop	       201	state.c	FUNCTION_13	WHILE_1	IF_5	CALL_2
0x4000978	            0x85c0	                           test eax, eax	       201	state.c	FUNCTION_13	WHILE_1	IF_5	CALL_2
0x400097a	            0x7404	                            je 0x4000980	       201	state.c	FUNCTION_13	WHILE_1	IF_5	CALL_2
0x400097c	        0x836df401	                sub dword [rbp - 0xc], 1	       202	state.c	FUNCTION_13	WHILE_1	IF_5
0x4000980	        0x837df400	                cmp dword [rbp - 0xc], 0	       187	state.c	FUNCTION_13	WHILE_1
0x4000984	     0xf8f52ffffff	                            jg 0x40008dc	       187	state.c	FUNCTION_13	WHILE_1
0x400098a	            0xeb04	                           jmp 0x4000990	       187	state.c	FUNCTION_13	WHILE_1
0x400098c	              0x90	                                     nop	       190	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2
0x400098d	            0xeb01	                           jmp 0x4000990	       190	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2
0x400098f	              0x90	                                     nop	       196	state.c	FUNCTION_13	WHILE_1	ELSE_1	IF_3	IF_4
0x4000990	              0xc9	                                   leave	       204	state.c	FUNCTION_13
0x4000991	              0xc3	                                     ret	       204	state.c	FUNCTION_13
vterm_obtain_state	functions,0:CALL,6:DO,0:WHILE,0:IF,2:ELSE,0:SWITCH,0:FOR,0	88
0x40051b7	              0x55	                                push rbp	      1697	state.c	FUNCTION_30
0x40051b8	          0x4889e5	                            mov rbp, rsp	      1697	state.c	FUNCTION_30
0x40051bb	        0x4883ec20	                           sub rsp, 0x20	      1697	state.c	FUNCTION_30
0x40051bf	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1697	state.c	FUNCTION_30
0x40051c3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1699	state.c	FUNCTION_30	IF_1
0x40051c7	    0x488b80180100	           mov rax, qword [rax + 0x118] 	      1699	state.c	FUNCTION_30	IF_1
0x40051ce	          0x4885c0	                           test rax, rax	      1699	state.c	FUNCTION_30	IF_1
0x40051d1	            0x7410	                            je 0x40051e3	      1699	state.c	FUNCTION_30	IF_1
0x40051d3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1700	state.c	FUNCTION_30	IF_1
0x40051d7	    0x488b80180100	           mov rax, qword [rax + 0x118] 	      1700	state.c	FUNCTION_30	IF_1
0x40051de	      0xe936010000	                           jmp 0x4005319	      1700	state.c	FUNCTION_30	IF_1
0x40051e3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1702	state.c	FUNCTION_30	CALL_1
0x40051e7	          0x4889c7	                            mov rdi, rax	      1702	state.c	FUNCTION_30	CALL_1
0x40051ea	      0xe865b0ffff	                call sym.vterm_state_new	      1702	state.c	FUNCTION_30	CALL_1
0x40051ef	        0x488945f8	                mov qword [rbp - 8], rax	      1702	state.c	FUNCTION_30	CALL_1
0x40051f3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1703	state.c	FUNCTION_30
0x40051f7	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1703	state.c	FUNCTION_30
0x40051fb	    0x488990180100	            mov qword [rax + 0x118], rdx	      1703	state.c	FUNCTION_30
0x4005202	        0x488b45f8	                mov rax, qword [rbp - 8]	      1705	state.c	FUNCTION_30
0x4005206	    0x48c780800000	           mov qword [rax + 0x80], 0x10 	      1705	state.c	FUNCTION_30
0x4005211	        0x488b45f8	                mov rax, qword [rbp - 8]	      1706	state.c	FUNCTION_30	CALL_2
0x4005215	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      1706	state.c	FUNCTION_30	CALL_2
0x400521c	    0x488d14850000	                        lea rdx, [rax*4]	      1706	state.c	FUNCTION_30	CALL_2
0x4005224	        0x488b45f8	                mov rax, qword [rbp - 8]	      1706	state.c	FUNCTION_30	CALL_2
0x4005228	          0x488b00	                    mov rax, qword [rax]	      1706	state.c	FUNCTION_30	CALL_2
0x400522b	          0x4889d6	                            mov rsi, rdx	      1706	state.c	FUNCTION_30	CALL_2
0x400522e	          0x4889c7	                            mov rdi, rax	      1706	state.c	FUNCTION_30	CALL_2
0x4005231	      0xe800000000	                          call 0x4005236	      1706	state.c	FUNCTION_30	CALL_2
0x4005236	          0x4889c2	                            mov rdx, rax	      1706	state.c	FUNCTION_30	CALL_2
0x4005239	        0x488b45f8	                mov rax, qword [rbp - 8]	      1706	state.c	FUNCTION_30	CALL_2
0x400523d	        0x48895078	             mov qword [rax + 0x78], rdx	      1706	state.c	FUNCTION_30	CALL_2
0x4005241	        0x488b45f8	                mov rax, qword [rbp - 8]	      1708	state.c	FUNCTION_30	CALL_3
0x4005245	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1708	state.c	FUNCTION_30	CALL_3
0x4005248	          0x83c007	                              add eax, 7	      1708	state.c	FUNCTION_30	CALL_3
0x400524b	          0x8d5007	                      lea edx, [rax + 7]	      1708	state.c	FUNCTION_30	CALL_3
0x400524e	            0x85c0	                           test eax, eax	      1708	state.c	FUNCTION_30	CALL_3
0x4005250	           0xf48c2	                          cmovs eax, edx	      1708	state.c	FUNCTION_30	CALL_3
0x4005253	          0xc1f803	                              sar eax, 3	      1708	state.c	FUNCTION_30	CALL_3
0x4005256	          0x4863d0	                         movsxd rdx, eax	      1708	state.c	FUNCTION_30	CALL_3
0x4005259	        0x488b45f8	                mov rax, qword [rbp - 8]	      1708	state.c	FUNCTION_30	CALL_3
0x400525d	          0x488b00	                    mov rax, qword [rax]	      1708	state.c	FUNCTION_30	CALL_3
0x4005260	          0x4889d6	                            mov rsi, rdx	      1708	state.c	FUNCTION_30	CALL_3
0x4005263	          0x4889c7	                            mov rdi, rax	      1708	state.c	FUNCTION_30	CALL_3
0x4005266	      0xe800000000	                          call 0x400526b	      1708	state.c	FUNCTION_30	CALL_3
0x400526b	          0x4889c2	                            mov rdx, rax	      1708	state.c	FUNCTION_30	CALL_3
0x400526e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1708	state.c	FUNCTION_30	CALL_3
0x4005272	        0x48895050	             mov qword [rax + 0x50], rdx	      1708	state.c	FUNCTION_30	CALL_3
0x4005276	        0x488b45f8	                mov rax, qword [rbp - 8]	      1710	state.c	FUNCTION_30	CALL_4
0x400527a	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1710	state.c	FUNCTION_30	CALL_4
0x400527d	            0x4898	                                    cdqe	      1710	state.c	FUNCTION_30	CALL_4
0x400527f	    0x488d14850000	                        lea rdx, [rax*4]	      1710	state.c	FUNCTION_30	CALL_4
0x4005287	        0x488b45f8	                mov rax, qword [rbp - 8]	      1710	state.c	FUNCTION_30	CALL_4
0x400528b	          0x488b00	                    mov rax, qword [rax]	      1710	state.c	FUNCTION_30	CALL_4
0x400528e	          0x4889d6	                            mov rsi, rdx	      1710	state.c	FUNCTION_30	CALL_4
0x4005291	          0x4889c7	                            mov rdi, rax	      1710	state.c	FUNCTION_30	CALL_4
0x4005294	      0xe800000000	                          call 0x4005299	      1710	state.c	FUNCTION_30	CALL_4
0x4005299	          0x4889c2	                            mov rdx, rax	      1710	state.c	FUNCTION_30	CALL_4
0x400529c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1710	state.c	FUNCTION_30	CALL_4
0x40052a0	        0x48895058	             mov qword [rax + 0x58], rdx	      1710	state.c	FUNCTION_30	CALL_4
0x40052a4	      0xbe75000000	                           mov esi, 0x75	      1712	state.c	FUNCTION_30	CALL_5
0x40052a9	      0xbf00000000	                              mov edi, 0	      1712	state.c	FUNCTION_30	CALL_5
0x40052ae	      0xe800000000	                          call 0x40052b3	      1712	state.c	FUNCTION_30	CALL_5
0x40052b3	          0x4889c2	                            mov rdx, rax	      1712	state.c	FUNCTION_30	CALL_5
0x40052b6	        0x488b45f8	                mov rax, qword [rbp - 8]	      1712	state.c	FUNCTION_30	CALL_5
0x40052ba	    0x488990f80000	             mov qword [rax + 0xf8], rdx	      1712	state.c	FUNCTION_30	CALL_5
0x40052c1	        0x488b45f8	                mov rax, qword [rbp - 8]	      1713	state.c	FUNCTION_30	IF_2
0x40052c5	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1713	state.c	FUNCTION_30	IF_2
0x40052cc	          0x488b00	                    mov rax, qword [rax]	      1713	state.c	FUNCTION_30	IF_2
0x40052cf	          0x4885c0	                           test rax, rax	      1713	state.c	FUNCTION_30	IF_2
0x40052d2	            0x742c	                            je 0x4005300	      1713	state.c	FUNCTION_30	IF_2
0x40052d4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1714	state.c	FUNCTION_30	IF_2
0x40052d8	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1714	state.c	FUNCTION_30	IF_2
0x40052df	          0x488b00	                    mov rax, qword [rax]	      1714	state.c	FUNCTION_30	IF_2
0x40052e2	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1714	state.c	FUNCTION_30	IF_2
0x40052e6	    0x488d8a000100	                  lea rcx, [rdx + 0x100]	      1714	state.c	FUNCTION_30	IF_2
0x40052ed	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1714	state.c	FUNCTION_30	IF_2
0x40052f1	    0x488b92f80000	            mov rdx, qword [rdx + 0xf8] 	      1714	state.c	FUNCTION_30	IF_2
0x40052f8	          0x4889ce	                            mov rsi, rcx	      1714	state.c	FUNCTION_30	IF_2
0x40052fb	          0x4889d7	                            mov rdi, rdx	      1714	state.c	FUNCTION_30	IF_2
0x40052fe	            0xffd0	                                call rax	      1714	state.c	FUNCTION_30	IF_2
0x4005300	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1716	state.c	FUNCTION_30	CALL_6
0x4005304	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1716	state.c	FUNCTION_30	CALL_6
0x4005308	      0xbe00000000	                              mov esi, 0	      1716	state.c	FUNCTION_30	CALL_6
0x400530d	          0x4889c7	                            mov rdi, rax	      1716	state.c	FUNCTION_30	CALL_6
0x4005310	      0xe800000000	                          call 0x4005315	      1716	state.c	FUNCTION_30	CALL_6
0x4005315	        0x488b45f8	                mov rax, qword [rbp - 8]	      1718	state.c	FUNCTION_30
0x4005319	              0xc9	                                   leave	      1719	state.c	FUNCTION_30
0x400531a	              0xc3	                                     ret	      1719	state.c	FUNCTION_30
grow_combine_buffer	functions,0:CALL,3:DO,0:WHILE,0:IF,0:ELSE,0:SWITCH,0:FOR,0	41
0x4000687	              0x55	                                push rbp	       143	state.c	FUNCTION_8
0x4000688	          0x4889e5	                            mov rbp, rsp	       143	state.c	FUNCTION_8
0x400068b	        0x4883ec20	                           sub rsp, 0x20	       143	state.c	FUNCTION_8
0x400068f	        0x48897de8	             mov qword [rbp - 0x18], rdi	       143	state.c	FUNCTION_8
0x4000693	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       144	state.c	FUNCTION_8
0x4000697	    0x488b80800000	            mov rax, qword [rax + 0x80] 	       144	state.c	FUNCTION_8
0x400069e	          0x4801c0	                            add rax, rax	       144	state.c	FUNCTION_8
0x40006a1	        0x488945f0	             mov qword [rbp - 0x10], rax	       144	state.c	FUNCTION_8
0x40006a5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       145	state.c	FUNCTION_8	CALL_1
0x40006a9	    0x488d14850000	                        lea rdx, [rax*4]	       145	state.c	FUNCTION_8	CALL_1
0x40006b1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       145	state.c	FUNCTION_8	CALL_1
0x40006b5	          0x488b00	                    mov rax, qword [rax]	       145	state.c	FUNCTION_8	CALL_1
0x40006b8	          0x4889d6	                            mov rsi, rdx	       145	state.c	FUNCTION_8	CALL_1
0x40006bb	          0x4889c7	                            mov rdi, rax	       145	state.c	FUNCTION_8	CALL_1
0x40006be	      0xe800000000	                          call 0x40006c3	       145	state.c	FUNCTION_8	CALL_1
0x40006c3	        0x488945f8	                mov qword [rbp - 8], rax	       145	state.c	FUNCTION_8	CALL_1
0x40006c7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       147	state.c	FUNCTION_8	CALL_2
0x40006cb	    0x488b80800000	            mov rax, qword [rax + 0x80] 	       147	state.c	FUNCTION_8	CALL_2
0x40006d2	    0x488d14850000	                        lea rdx, [rax*4]	       147	state.c	FUNCTION_8	CALL_2
0x40006da	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       147	state.c	FUNCTION_8	CALL_2
0x40006de	        0x488b4878	            mov rcx, qword [rax + 0x78] 	       147	state.c	FUNCTION_8	CALL_2
0x40006e2	        0x488b45f8	                mov rax, qword [rbp - 8]	       147	state.c	FUNCTION_8	CALL_2
0x40006e6	          0x4889ce	                            mov rsi, rcx	       147	state.c	FUNCTION_8	CALL_2
0x40006e9	          0x4889c7	                            mov rdi, rax	       147	state.c	FUNCTION_8	CALL_2
0x40006ec	      0xe800000000	                          call 0x40006f1	       147	state.c	FUNCTION_8	CALL_2
0x40006f1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       149	state.c	FUNCTION_8	CALL_3
0x40006f5	        0x488b5078	            mov rdx, qword [rax + 0x78] 	       149	state.c	FUNCTION_8	CALL_3
0x40006f9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       149	state.c	FUNCTION_8	CALL_3
0x40006fd	          0x488b00	                    mov rax, qword [rax]	       149	state.c	FUNCTION_8	CALL_3
0x4000700	          0x4889d6	                            mov rsi, rdx	       149	state.c	FUNCTION_8	CALL_3
0x4000703	          0x4889c7	                            mov rdi, rax	       149	state.c	FUNCTION_8	CALL_3
0x4000706	      0xe800000000	                          call 0x400070b	       149	state.c	FUNCTION_8	CALL_3
0x400070b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       151	state.c	FUNCTION_8
0x400070f	        0x488b55f8	                mov rdx, qword [rbp - 8]	       151	state.c	FUNCTION_8
0x4000713	        0x48895078	             mov qword [rax + 0x78], rdx	       151	state.c	FUNCTION_8
0x4000717	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       152	state.c	FUNCTION_8
0x400071b	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       152	state.c	FUNCTION_8
0x400071f	    0x488990800000	             mov qword [rax + 0x80], rdx	       152	state.c	FUNCTION_8
0x4000726	              0x90	                                     nop	       153	state.c	FUNCTION_8
0x4000727	              0xc9	                                   leave	       153	state.c	FUNCTION_8
0x4000728	              0xc3	                                     ret	       153	state.c	FUNCTION_8
vterm_state_free	functions,0:CALL,4:DO,0:WHILE,0:IF,0:ELSE,0:SWITCH,0:FOR,0	34
0x4000300	              0x55	                                push rbp	        78	state.c	FUNCTION_5
0x4000301	          0x4889e5	                            mov rbp, rsp	        78	state.c	FUNCTION_5
0x4000304	        0x4883ec10	                           sub rsp, 0x10	        78	state.c	FUNCTION_5
0x4000308	        0x48897df8	                mov qword [rbp - 8], rdi	        78	state.c	FUNCTION_5
0x400030c	        0x488b45f8	                mov rax, qword [rbp - 8]	        79	state.c	FUNCTION_5	CALL_1
0x4000310	        0x488b5050	            mov rdx, qword [rax + 0x50] 	        79	state.c	FUNCTION_5	CALL_1
0x4000314	        0x488b45f8	                mov rax, qword [rbp - 8]	        79	state.c	FUNCTION_5	CALL_1
0x4000318	          0x488b00	                    mov rax, qword [rax]	        79	state.c	FUNCTION_5	CALL_1
0x400031b	          0x4889d6	                            mov rsi, rdx	        79	state.c	FUNCTION_5	CALL_1
0x400031e	          0x4889c7	                            mov rdi, rax	        79	state.c	FUNCTION_5	CALL_1
0x4000321	      0xe800000000	                          call 0x4000326	        79	state.c	FUNCTION_5	CALL_1
0x4000326	        0x488b45f8	                mov rax, qword [rbp - 8]	        80	state.c	FUNCTION_5	CALL_2
0x400032a	        0x488b5058	            mov rdx, qword [rax + 0x58] 	        80	state.c	FUNCTION_5	CALL_2
0x400032e	        0x488b45f8	                mov rax, qword [rbp - 8]	        80	state.c	FUNCTION_5	CALL_2
0x4000332	          0x488b00	                    mov rax, qword [rax]	        80	state.c	FUNCTION_5	CALL_2
0x4000335	          0x4889d6	                            mov rsi, rdx	        80	state.c	FUNCTION_5	CALL_2
0x4000338	          0x4889c7	                            mov rdi, rax	        80	state.c	FUNCTION_5	CALL_2
0x400033b	      0xe800000000	                          call 0x4000340	        80	state.c	FUNCTION_5	CALL_2
0x4000340	        0x488b45f8	                mov rax, qword [rbp - 8]	        81	state.c	FUNCTION_5	CALL_3
0x4000344	        0x488b5078	            mov rdx, qword [rax + 0x78] 	        81	state.c	FUNCTION_5	CALL_3
0x4000348	        0x488b45f8	                mov rax, qword [rbp - 8]	        81	state.c	FUNCTION_5	CALL_3
0x400034c	          0x488b00	                    mov rax, qword [rax]	        81	state.c	FUNCTION_5	CALL_3
0x400034f	          0x4889d6	                            mov rsi, rdx	        81	state.c	FUNCTION_5	CALL_3
0x4000352	          0x4889c7	                            mov rdi, rax	        81	state.c	FUNCTION_5	CALL_3
0x4000355	      0xe800000000	                          call 0x400035a	        81	state.c	FUNCTION_5	CALL_3
0x400035a	        0x488b45f8	                mov rax, qword [rbp - 8]	        82	state.c	FUNCTION_5	CALL_4
0x400035e	          0x488b00	                    mov rax, qword [rax]	        82	state.c	FUNCTION_5	CALL_4
0x4000361	        0x488b55f8	                mov rdx, qword [rbp - 8]	        82	state.c	FUNCTION_5	CALL_4
0x4000365	          0x4889d6	                            mov rsi, rdx	        82	state.c	FUNCTION_5	CALL_4
0x4000368	          0x4889c7	                            mov rdi, rax	        82	state.c	FUNCTION_5	CALL_4
0x400036b	      0xe800000000	                          call 0x4000370	        82	state.c	FUNCTION_5	CALL_4
0x4000370	              0x90	                                     nop	        83	state.c	FUNCTION_5
0x4000371	              0xc9	                                   leave	        83	state.c	FUNCTION_5
0x4000372	              0xc3	                                     ret	        83	state.c	FUNCTION_5
erase	functions,0:CALL,0:DO,0:WHILE,0:IF,2:ELSE,0:SWITCH,0:FOR,0	31
0x40001f1	              0x55	                                push rbp	        46	state.c	FUNCTION_3
0x40001f2	          0x4889e5	                            mov rbp, rsp	        46	state.c	FUNCTION_3
0x40001f5	        0x4883ec20	                           sub rsp, 0x20	        46	state.c	FUNCTION_3
0x40001f9	        0x48897df8	                mov qword [rbp - 8], rdi	        46	state.c	FUNCTION_3
0x40001fd	          0x4889f0	                            mov rax, rsi	        46	state.c	FUNCTION_3
0x4000200	          0x4889d6	                            mov rsi, rdx	        46	state.c	FUNCTION_3
0x4000203	          0x4889f2	                            mov rdx, rsi	        46	state.c	FUNCTION_3
0x4000206	        0x488945e0	             mov qword [rbp - 0x20], rax	        46	state.c	FUNCTION_3
0x400020a	        0x488955e8	             mov qword [rbp - 0x18], rdx	        46	state.c	FUNCTION_3
0x400020e	          0x894df4	              mov dword [rbp - 0xc], ecx	        46	state.c	FUNCTION_3
0x4000211	        0x488b45f8	                mov rax, qword [rbp - 8]	        47	state.c	FUNCTION_3	IF_1
0x4000215	        0x488b4008	                mov rax, qword [rax + 8]	        47	state.c	FUNCTION_3	IF_1
0x4000219	          0x4885c0	                           test rax, rax	        47	state.c	FUNCTION_3	IF_1
0x400021c	            0x7434	                            je 0x4000252	        47	state.c	FUNCTION_3	IF_1
0x400021e	        0x488b45f8	                mov rax, qword [rbp - 8]	        47	state.c	FUNCTION_3	IF_1
0x4000222	        0x488b4008	                mov rax, qword [rax + 8]	        47	state.c	FUNCTION_3	IF_1
0x4000226	        0x488b4020	            mov rax, qword [rax + 0x20] 	        47	state.c	FUNCTION_3	IF_1
0x400022a	          0x4885c0	                           test rax, rax	        47	state.c	FUNCTION_3	IF_1
0x400022d	            0x7423	                            je 0x4000252	        47	state.c	FUNCTION_3	IF_1
0x400022f	        0x488b45f8	                mov rax, qword [rbp - 8]	        48	state.c	FUNCTION_3	IF_1	IF_2
0x4000233	        0x488b4008	                mov rax, qword [rax + 8]	        48	state.c	FUNCTION_3	IF_1	IF_2
0x4000237	        0x488b4020	            mov rax, qword [rax + 0x20] 	        48	state.c	FUNCTION_3	IF_1	IF_2
0x400023b	        0x488b55f8	                mov rdx, qword [rbp - 8]	        48	state.c	FUNCTION_3	IF_1	IF_2
0x400023f	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	        48	state.c	FUNCTION_3	IF_1	IF_2
0x4000243	          0x8b55f4	              mov edx, dword [rbp - 0xc]	        48	state.c	FUNCTION_3	IF_1	IF_2
0x4000246	        0x488b7de0	             mov rdi, qword [rbp - 0x20]	        48	state.c	FUNCTION_3	IF_1	IF_2
0x400024a	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	        48	state.c	FUNCTION_3	IF_1	IF_2
0x400024e	            0xffd0	                                call rax	        48	state.c	FUNCTION_3	IF_1	IF_2
0x4000250	            0x85c0	                           test eax, eax	        48	state.c	FUNCTION_3	IF_1	IF_2
0x4000252	              0xc9	                                   leave	        50	state.c	FUNCTION_3
0x4000253	              0xc3	                                     ret	        50	state.c	FUNCTION_3
is_cursor_in_scrollregion	functions,0:CALL,3:DO,0:WHILE,0:IF,2:ELSE,0:SWITCH,0:FOR,0	60
0x400080d	              0x55	                                push rbp	       174	state.c	FUNCTION_12
0x400080e	          0x4889e5	                            mov rbp, rsp	       174	state.c	FUNCTION_12
0x4000811	        0x48897df8	                mov qword [rbp - 8], rdi	       174	state.c	FUNCTION_12
0x4000815	        0x488b45f8	                mov rax, qword [rbp - 8]	       175	state.c	FUNCTION_12	IF_1
0x4000819	          0x8b5030	            mov edx, dword [rax + 0x30] 	       175	state.c	FUNCTION_12	IF_1
0x400081c	        0x488b45f8	                mov rax, qword [rbp - 8]	       175	state.c	FUNCTION_12	IF_1
0x4000820	          0x8b403c	            mov eax, dword [rax + 0x3c] 	       175	state.c	FUNCTION_12	IF_1
0x4000823	            0x39c2	                            cmp edx, eax	       175	state.c	FUNCTION_12	IF_1
0x4000825	            0x7c26	                            jl 0x400084d	       175	state.c	FUNCTION_12	IF_1
0x4000827	        0x488b45f8	                mov rax, qword [rbp - 8]	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x400082b	          0x8b5030	            mov edx, dword [rax + 0x30] 	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x400082e	        0x488b45f8	                mov rax, qword [rbp - 8]	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x4000832	          0x8b4040	            mov eax, dword [rax + 0x40] 	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x4000835	            0x85c0	                           test eax, eax	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x4000837	            0x7809	                            js 0x4000842	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x4000839	        0x488b45f8	                mov rax, qword [rbp - 8]	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x400083d	          0x8b4040	            mov eax, dword [rax + 0x40] 	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x4000840	            0xeb07	                           jmp 0x4000849	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x4000842	        0x488b45f8	                mov rax, qword [rbp - 8]	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x4000846	          0x8b4028	            mov eax, dword [rax + 0x28] 	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x4000849	            0x39c2	                            cmp edx, eax	       175	state.c	FUNCTION_12	IF_1
0x400084b	            0x7c07	                            jl 0x4000854	       175	state.c	FUNCTION_12	IF_1
0x400084d	      0xb800000000	                              mov eax, 0	       177	state.c	FUNCTION_12	IF_1
0x4000852	            0xeb6f	                           jmp 0x40008c3	       177	state.c	FUNCTION_12	IF_1
0x4000854	        0x488b45f8	                mov rax, qword [rbp - 8]	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x4000858	          0x8b5034	            mov edx, dword [rax + 0x34] 	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x400085b	        0x488b45f8	                mov rax, qword [rbp - 8]	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x400085f	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x4000866	          0x83e010	                           and eax, 0x10	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x4000869	            0x84c0	                             test al, al	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x400086b	            0x7409	                            je 0x4000876	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x400086d	        0x488b45f8	                mov rax, qword [rbp - 8]	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x4000871	          0x8b4044	            mov eax, dword [rax + 0x44] 	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x4000874	            0xeb05	                           jmp 0x400087b	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x4000876	      0xb800000000	                              mov eax, 0	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x400087b	            0x39c2	                            cmp edx, eax	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x400087d	            0x7c38	                            jl 0x40008b7	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x400087f	        0x488b45f8	                mov rax, qword [rbp - 8]	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x4000883	          0x8b5034	            mov edx, dword [rax + 0x34] 	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x4000886	        0x488b45f8	                mov rax, qword [rbp - 8]	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x400088a	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x4000891	          0x83e010	                           and eax, 0x10	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x4000894	            0x84c0	                             test al, al	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x4000896	            0x7414	                            je 0x40008ac	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x4000898	        0x488b45f8	                mov rax, qword [rbp - 8]	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x400089c	          0x8b4048	            mov eax, dword [rax + 0x48] 	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x400089f	            0x85c0	                           test eax, eax	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x40008a1	            0x7809	                            js 0x40008ac	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x40008a3	        0x488b45f8	                mov rax, qword [rbp - 8]	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x40008a7	          0x8b4048	            mov eax, dword [rax + 0x48] 	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x40008aa	            0xeb07	                           jmp 0x40008b3	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x40008ac	        0x488b45f8	                mov rax, qword [rbp - 8]	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x40008b0	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x40008b3	            0x39c2	                            cmp edx, eax	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x40008b5	            0x7c07	                            jl 0x40008be	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x40008b7	      0xb800000000	                              mov eax, 0	       180	state.c	FUNCTION_12	IF_2
0x40008bc	            0xeb05	                           jmp 0x40008c3	       180	state.c	FUNCTION_12	IF_2
0x40008be	      0xb801000000	                              mov eax, 1	       182	state.c	FUNCTION_12
0x40008c3	              0x5d	                                 pop rbp	       183	state.c	FUNCTION_12
0x40008c4	              0xc3	                                     ret	       183	state.c	FUNCTION_12
vterm_state_focus_out	functions,0:CALL,1:DO,0:WHILE,0:IF,1:ELSE,0:SWITCH,0:FOR,0	19
0x4005a88	              0x55	                                push rbp	      1909	state.c	FUNCTION_40
0x4005a89	          0x4889e5	                            mov rbp, rsp	      1909	state.c	FUNCTION_40
0x4005a8c	        0x4883ec10	                           sub rsp, 0x10	      1909	state.c	FUNCTION_40
0x4005a90	        0x48897df8	                mov qword [rbp - 8], rdi	      1909	state.c	FUNCTION_40
0x4005a94	        0x488b45f8	                mov rax, qword [rbp - 8]	      1910	state.c	FUNCTION_40	IF_1
0x4005a98	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	      1910	state.c	FUNCTION_40	IF_1
0x4005a9f	          0x83e040	                           and eax, 0x40	      1910	state.c	FUNCTION_40	IF_1
0x4005aa2	            0x84c0	                             test al, al	      1910	state.c	FUNCTION_40	IF_1
0x4005aa4	            0x741e	                            je 0x4005ac4	      1910	state.c	FUNCTION_40	IF_1
0x4005aa6	        0x488b45f8	                mov rax, qword [rbp - 8]	      1911	state.c	FUNCTION_40	CALL_1
0x4005aaa	          0x488b00	                    mov rax, qword [rax]	      1911	state.c	FUNCTION_40	CALL_1
0x4005aad	      0xba00000000	                              mov edx, 0	      1911	state.c	FUNCTION_40	CALL_1
0x4005ab2	      0xbe9b000000	                           mov esi, 0x9b	      1911	state.c	FUNCTION_40	CALL_1
0x4005ab7	          0x4889c7	                            mov rdi, rax	      1911	state.c	FUNCTION_40	CALL_1
0x4005aba	      0xb800000000	                              mov eax, 0	      1911	state.c	FUNCTION_40	CALL_1
0x4005abf	      0xe800000000	                          call 0x4005ac4	      1911	state.c	FUNCTION_40	CALL_1
0x4005ac4	              0x90	                                     nop	      1912	state.c	FUNCTION_40
0x4005ac5	              0xc9	                                   leave	      1912	state.c	FUNCTION_40
0x4005ac6	              0xc3	                                     ret	      1912	state.c	FUNCTION_40
vterm_state_get_cbdata	functions,0:CALL,0:DO,0:WHILE,0:IF,0:ELSE,0:SWITCH,0:FOR,0	7
0x4005784	              0x55	                                push rbp	      1829	state.c	FUNCTION_35
0x4005785	          0x4889e5	                            mov rbp, rsp	      1829	state.c	FUNCTION_35
0x4005788	        0x48897df8	                mov qword [rbp - 8], rdi	      1829	state.c	FUNCTION_35
0x400578c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1830	state.c	FUNCTION_35
0x4005790	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1830	state.c	FUNCTION_35
0x4005794	              0x5d	                                 pop rbp	      1831	state.c	FUNCTION_35
0x4005795	              0xc3	                                     ret	      1831	state.c	FUNCTION_35
vterm_state_get_unrecognised_fbdata	functions,0:CALL,0:DO,0:WHILE,0:IF,0:ELSE,0:SWITCH,0:FOR,0	7
0x40057e2	              0x55	                                push rbp	      1846	state.c	FUNCTION_37
0x40057e3	          0x4889e5	                            mov rbp, rsp	      1846	state.c	FUNCTION_37
0x40057e6	        0x48897df8	                mov qword [rbp - 8], rdi	      1846	state.c	FUNCTION_37
0x40057ea	        0x488b45f8	                mov rax, qword [rbp - 8]	      1847	state.c	FUNCTION_37
0x40057ee	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1847	state.c	FUNCTION_37
0x40057f2	              0x5d	                                 pop rbp	      1848	state.c	FUNCTION_37
0x40057f3	              0xc3	                                     ret	      1848	state.c	FUNCTION_37
scroll	functions,0:CALL,4:DO,0:WHILE,0:IF,10:ELSE,3:SWITCH,0:FOR,0	168
0x4000373	              0x55	                                push rbp	        86	state.c	FUNCTION_6
0x4000374	          0x4889e5	                            mov rbp, rsp	        86	state.c	FUNCTION_6
0x4000377	        0x4883ec30	                           sub rsp, 0x30	        86	state.c	FUNCTION_6
0x400037b	        0x48897de8	             mov qword [rbp - 0x18], rdi	        86	state.c	FUNCTION_6
0x400037f	          0x4889f0	                            mov rax, rsi	        86	state.c	FUNCTION_6
0x4000382	          0x4889d6	                            mov rsi, rdx	        86	state.c	FUNCTION_6
0x4000385	          0x4889f2	                            mov rdx, rsi	        86	state.c	FUNCTION_6
0x4000388	        0x488945d0	             mov qword [rbp - 0x30], rax	        86	state.c	FUNCTION_6
0x400038c	        0x488955d8	             mov qword [rbp - 0x28], rdx	        86	state.c	FUNCTION_6
0x4000390	          0x894de4	             mov dword [rbp - 0x1c], ecx	        86	state.c	FUNCTION_6
0x4000393	        0x448945e0	             mov dword [rbp - 0x20], r8d	        86	state.c	FUNCTION_6
0x4000397	        0x837de400	               cmp dword [rbp - 0x1c], 0	        89	state.c	FUNCTION_6	IF_1
0x400039b	            0x750a	                           jne 0x40003a7	        89	state.c	FUNCTION_6	IF_1
0x400039d	        0x837de000	               cmp dword [rbp - 0x20], 0	        89	state.c	FUNCTION_6	IF_1
0x40003a1	     0xf84d9010000	                            je 0x4000580	        89	state.c	FUNCTION_6	IF_1
0x40003a7	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	        92	state.c	FUNCTION_6
0x40003aa	          0x8b45d0	             mov eax, dword [rbp - 0x30]	        92	state.c	FUNCTION_6
0x40003ad	            0x29c2	                            sub edx, eax	        92	state.c	FUNCTION_6
0x40003af	            0x89d0	                            mov eax, edx	        92	state.c	FUNCTION_6
0x40003b1	          0x8945f4	              mov dword [rbp - 0xc], eax	        92	state.c	FUNCTION_6
0x40003b4	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	        93	state.c	FUNCTION_6	IF_2
0x40003b7	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	        93	state.c	FUNCTION_6	IF_2
0x40003ba	            0x7e08	                           jle 0x40003c4	        93	state.c	FUNCTION_6	IF_2
0x40003bc	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        94	state.c	FUNCTION_6	IF_2
0x40003bf	          0x8945e4	             mov dword [rbp - 0x1c], eax	        94	state.c	FUNCTION_6	IF_2
0x40003c2	            0xeb12	                           jmp 0x40003d6	        94	state.c	FUNCTION_6	IF_2
0x40003c4	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        95	state.c	FUNCTION_6	ELSE_1	IF_3
0x40003c7	            0xf7d8	                                 neg eax	        95	state.c	FUNCTION_6	ELSE_1	IF_3
0x40003c9	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	        95	state.c	FUNCTION_6	ELSE_1	IF_3
0x40003cc	            0x7e08	                           jle 0x40003d6	        95	state.c	FUNCTION_6	ELSE_1	IF_3
0x40003ce	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        96	state.c	FUNCTION_6	ELSE_1	IF_3
0x40003d1	            0xf7d8	                                 neg eax	        96	state.c	FUNCTION_6	ELSE_1	IF_3
0x40003d3	          0x8945e4	             mov dword [rbp - 0x1c], eax	        96	state.c	FUNCTION_6	ELSE_1	IF_3
0x40003d6	          0x8b55dc	             mov edx, dword [rbp - 0x24]	        98	state.c	FUNCTION_6
0x40003d9	          0x8b45d8	             mov eax, dword [rbp - 0x28]	        98	state.c	FUNCTION_6
0x40003dc	            0x29c2	                            sub edx, eax	        98	state.c	FUNCTION_6
0x40003de	            0x89d0	                            mov eax, edx	        98	state.c	FUNCTION_6
0x40003e0	          0x8945f8	                mov dword [rbp - 8], eax	        98	state.c	FUNCTION_6
0x40003e3	          0x8b45e0	             mov eax, dword [rbp - 0x20]	        99	state.c	FUNCTION_6	IF_4
0x40003e6	          0x3b45f8	                cmp eax, dword [rbp - 8]	        99	state.c	FUNCTION_6	IF_4
0x40003e9	            0x7e08	                           jle 0x40003f3	        99	state.c	FUNCTION_6	IF_4
0x40003eb	          0x8b45f8	                mov eax, dword [rbp - 8]	       100	state.c	FUNCTION_6	IF_4
0x40003ee	          0x8945e0	             mov dword [rbp - 0x20], eax	       100	state.c	FUNCTION_6	IF_4
0x40003f1	            0xeb12	                           jmp 0x4000405	       100	state.c	FUNCTION_6	IF_4
0x40003f3	          0x8b45f8	                mov eax, dword [rbp - 8]	       101	state.c	FUNCTION_6	ELSE_2	IF_5
0x40003f6	            0xf7d8	                                 neg eax	       101	state.c	FUNCTION_6	ELSE_2	IF_5
0x40003f8	          0x3b45e0	             cmp eax, dword [rbp - 0x20]	       101	state.c	FUNCTION_6	ELSE_2	IF_5
0x40003fb	            0x7e08	                           jle 0x4000405	       101	state.c	FUNCTION_6	ELSE_2	IF_5
0x40003fd	          0x8b45f8	                mov eax, dword [rbp - 8]	       102	state.c	FUNCTION_6	ELSE_2	IF_5
0x4000400	            0xf7d8	                                 neg eax	       102	state.c	FUNCTION_6	ELSE_2	IF_5
0x4000402	          0x8945e0	             mov dword [rbp - 0x20], eax	       102	state.c	FUNCTION_6	ELSE_2	IF_5
0x4000405	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       105	state.c	FUNCTION_6	IF_6
0x4000408	            0x85c0	                           test eax, eax	       105	state.c	FUNCTION_6	IF_6
0x400040a	     0xf85d9000000	                           jne 0x40004e9	       105	state.c	FUNCTION_6	IF_6
0x4000410	          0x8b55dc	             mov edx, dword [rbp - 0x24]	       105	state.c	FUNCTION_6	IF_6
0x4000413	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       105	state.c	FUNCTION_6	IF_6
0x4000417	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       105	state.c	FUNCTION_6	IF_6
0x400041a	            0x39c2	                            cmp edx, eax	       105	state.c	FUNCTION_6	IF_6
0x400041c	     0xf85c7000000	                           jne 0x40004e9	       105	state.c	FUNCTION_6	IF_6
0x4000422	        0x837de000	               cmp dword [rbp - 0x20], 0	       105	state.c	FUNCTION_6	IF_6
0x4000426	     0xf85bd000000	                           jne 0x40004e9	       105	state.c	FUNCTION_6	IF_6
0x400042c	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	       106	state.c	FUNCTION_6	IF_6	CALL_1
0x400042f	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       106	state.c	FUNCTION_6	IF_6	CALL_1
0x4000432	            0x89d1	                            mov ecx, edx	       106	state.c	FUNCTION_6	IF_6	CALL_1
0x4000434	            0x29c1	                            sub ecx, eax	       106	state.c	FUNCTION_6	IF_6	CALL_1
0x4000436	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       106	state.c	FUNCTION_6	IF_6	CALL_1
0x4000439	              0x99	                                     cdq	       106	state.c	FUNCTION_6	IF_6	CALL_1
0x400043a	            0x89d0	                            mov eax, edx	       106	state.c	FUNCTION_6	IF_6	CALL_1
0x400043c	          0x3345e4	             xor eax, dword [rbp - 0x1c]	       106	state.c	FUNCTION_6	IF_6	CALL_1
0x400043f	            0x29d0	                            sub eax, edx	       106	state.c	FUNCTION_6	IF_6	CALL_1
0x4000441	            0x29c1	                            sub ecx, eax	       106	state.c	FUNCTION_6	IF_6	CALL_1
0x4000443	            0x89c8	                            mov eax, ecx	       106	state.c	FUNCTION_6	IF_6	CALL_1
0x4000445	          0x8945fc	                mov dword [rbp - 4], eax	       106	state.c	FUNCTION_6	IF_6	CALL_1
0x4000448	        0x837de400	               cmp dword [rbp - 0x1c], 0	       108	state.c	FUNCTION_6	IF_6	IF_7
0x400044c	            0x7e4d	                           jle 0x400049b	       108	state.c	FUNCTION_6	IF_6	IF_7
0x400044e	          0x8b45fc	                mov eax, dword [rbp - 4]	       109	state.c	FUNCTION_6	IF_6	IF_7	CALL_2
0x4000451	            0x4898	                                    cdqe	       109	state.c	FUNCTION_6	IF_6	IF_7	CALL_2
0x4000453	    0x488d14850000	                        lea rdx, [rax*4]	       109	state.c	FUNCTION_6	IF_6	IF_7	CALL_2
0x400045b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       110	state.c	FUNCTION_6	IF_6	IF_7
0x400045f	        0x488b4058	            mov rax, qword [rax + 0x58] 	       110	state.c	FUNCTION_6	IF_6	IF_7
0x4000463	          0x8b4dd0	             mov ecx, dword [rbp - 0x30]	       110	state.c	FUNCTION_6	IF_6	IF_7
0x4000466	          0x4863f1	                         movsxd rsi, ecx	       110	state.c	FUNCTION_6	IF_6	IF_7
0x4000469	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	       110	state.c	FUNCTION_6	IF_6	IF_7
0x400046c	          0x4863c9	                         movsxd rcx, ecx	       110	state.c	FUNCTION_6	IF_6	IF_7
0x400046f	          0x4801f1	                            add rcx, rsi	       110	state.c	FUNCTION_6	IF_6	IF_7
0x4000472	        0x48c1e102	                              shl rcx, 2	       110	state.c	FUNCTION_6	IF_6	IF_7
0x4000476	          0x4801c1	                            add rcx, rax	       110	state.c	FUNCTION_6	IF_6	IF_7
0x4000479	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       109	state.c	FUNCTION_6	IF_6	IF_7	CALL_2
0x400047d	        0x488b4058	            mov rax, qword [rax + 0x58] 	       109	state.c	FUNCTION_6	IF_6	IF_7	CALL_2
0x4000481	          0x8b75d0	             mov esi, dword [rbp - 0x30]	       109	state.c	FUNCTION_6	IF_6	IF_7	CALL_2
0x4000484	          0x4863f6	                         movsxd rsi, esi	       109	state.c	FUNCTION_6	IF_6	IF_7	CALL_2
0x4000487	        0x48c1e602	                              shl rsi, 2	       109	state.c	FUNCTION_6	IF_6	IF_7	CALL_2
0x400048b	          0x4801f0	                            add rax, rsi	       109	state.c	FUNCTION_6	IF_6	IF_7	CALL_2
0x400048e	          0x4889ce	                            mov rsi, rcx	       109	state.c	FUNCTION_6	IF_6	IF_7	CALL_2
0x4000491	          0x4889c7	                            mov rdi, rax	       109	state.c	FUNCTION_6	IF_6	IF_7	CALL_2
0x4000494	      0xe800000000	                          call 0x4000499	       109	state.c	FUNCTION_6	IF_6	IF_7	CALL_2
0x4000499	            0xeb4e	                           jmp 0x40004e9	       109	state.c	FUNCTION_6	IF_6	IF_7	CALL_2
0x400049b	          0x8b45fc	                mov eax, dword [rbp - 4]	       113	state.c	FUNCTION_6	IF_6	ELSE_3	CALL_3
0x400049e	            0x4898	                                    cdqe	       113	state.c	FUNCTION_6	IF_6	ELSE_3	CALL_3
0x40004a0	    0x488d14850000	                        lea rdx, [rax*4]	       113	state.c	FUNCTION_6	IF_6	ELSE_3	CALL_3
0x40004a8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       114	state.c	FUNCTION_6	IF_6	ELSE_3
0x40004ac	        0x488b4058	            mov rax, qword [rax + 0x58] 	       114	state.c	FUNCTION_6	IF_6	ELSE_3
0x40004b0	          0x8b4dd0	             mov ecx, dword [rbp - 0x30]	       114	state.c	FUNCTION_6	IF_6	ELSE_3
0x40004b3	          0x4863c9	                         movsxd rcx, ecx	       113	state.c	FUNCTION_6	IF_6	ELSE_3	CALL_3
0x40004b6	        0x48c1e102	                              shl rcx, 2	       114	state.c	FUNCTION_6	IF_6	ELSE_3
0x40004ba	          0x4801c1	                            add rcx, rax	       113	state.c	FUNCTION_6	IF_6	ELSE_3	CALL_3
0x40004bd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       113	state.c	FUNCTION_6	IF_6	ELSE_3	CALL_3
0x40004c1	        0x488b4058	            mov rax, qword [rax + 0x58] 	       113	state.c	FUNCTION_6	IF_6	ELSE_3	CALL_3
0x40004c5	          0x8b75d0	             mov esi, dword [rbp - 0x30]	       113	state.c	FUNCTION_6	IF_6	ELSE_3	CALL_3
0x40004c8	          0x4863fe	                         movsxd rdi, esi	       113	state.c	FUNCTION_6	IF_6	ELSE_3	CALL_3
0x40004cb	          0x8b75e4	             mov esi, dword [rbp - 0x1c]	       113	state.c	FUNCTION_6	IF_6	ELSE_3	CALL_3
0x40004ce	          0x4863f6	                         movsxd rsi, esi	       113	state.c	FUNCTION_6	IF_6	ELSE_3	CALL_3
0x40004d1	          0x4829f7	                            sub rdi, rsi	       113	state.c	FUNCTION_6	IF_6	ELSE_3	CALL_3
0x40004d4	          0x4889fe	                            mov rsi, rdi	       113	state.c	FUNCTION_6	IF_6	ELSE_3	CALL_3
0x40004d7	        0x48c1e602	                              shl rsi, 2	       113	state.c	FUNCTION_6	IF_6	ELSE_3	CALL_3
0x40004db	          0x4801f0	                            add rax, rsi	       113	state.c	FUNCTION_6	IF_6	ELSE_3	CALL_3
0x40004de	          0x4889ce	                            mov rsi, rcx	       113	state.c	FUNCTION_6	IF_6	ELSE_3	CALL_3
0x40004e1	          0x4889c7	                            mov rdi, rax	       113	state.c	FUNCTION_6	IF_6	ELSE_3	CALL_3
0x40004e4	      0xe800000000	                          call 0x40004e9	       113	state.c	FUNCTION_6	IF_6	ELSE_3	CALL_3
0x40004e9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       118	state.c	FUNCTION_6	IF_8
0x40004ed	        0x488b4008	                mov rax, qword [rax + 8]	       118	state.c	FUNCTION_6	IF_8
0x40004f1	          0x4885c0	                           test rax, rax	       118	state.c	FUNCTION_6	IF_8
0x40004f4	            0x7439	                            je 0x400052f	       118	state.c	FUNCTION_6	IF_8
0x40004f6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       118	state.c	FUNCTION_6	IF_8
0x40004fa	        0x488b4008	                mov rax, qword [rax + 8]	       118	state.c	FUNCTION_6	IF_8
0x40004fe	        0x488b4010	            mov rax, qword [rax + 0x10] 	       118	state.c	FUNCTION_6	IF_8
0x4000502	          0x4885c0	                           test rax, rax	       118	state.c	FUNCTION_6	IF_8
0x4000505	            0x7428	                            je 0x400052f	       118	state.c	FUNCTION_6	IF_8
0x4000507	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       119	state.c	FUNCTION_6	IF_8	IF_9
0x400050b	        0x488b4008	                mov rax, qword [rax + 8]	       119	state.c	FUNCTION_6	IF_8	IF_9
0x400050f	        0x488b4010	            mov rax, qword [rax + 0x10] 	       119	state.c	FUNCTION_6	IF_8	IF_9
0x4000513	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       119	state.c	FUNCTION_6	IF_8	IF_9
0x4000517	        0x4c8b4210	              mov r8, qword [rdx + 0x10]	       119	state.c	FUNCTION_6	IF_8	IF_9
0x400051b	          0x8b4de0	             mov ecx, dword [rbp - 0x20]	       119	state.c	FUNCTION_6	IF_8	IF_9
0x400051e	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       119	state.c	FUNCTION_6	IF_8	IF_9
0x4000521	        0x488b7dd0	             mov rdi, qword [rbp - 0x30]	       119	state.c	FUNCTION_6	IF_8	IF_9
0x4000525	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	       119	state.c	FUNCTION_6	IF_8	IF_9
0x4000529	            0xffd0	                                call rax	       119	state.c	FUNCTION_6	IF_8	IF_9
0x400052b	            0x85c0	                           test eax, eax	       119	state.c	FUNCTION_6	IF_8	IF_9
0x400052d	            0x7554	                           jne 0x4000583	       119	state.c	FUNCTION_6	IF_8	IF_9
0x400052f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       122	state.c	FUNCTION_6	IF_10
0x4000533	        0x488b4008	                mov rax, qword [rax + 8]	       122	state.c	FUNCTION_6	IF_10
0x4000537	          0x4885c0	                           test rax, rax	       122	state.c	FUNCTION_6	IF_10
0x400053a	            0x7448	                            je 0x4000584	       122	state.c	FUNCTION_6	IF_10
0x400053c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       123	state.c	FUNCTION_6	IF_10	CALL_4
0x4000540	        0x488b7810	            mov rdi, qword [rax + 0x10] 	       123	state.c	FUNCTION_6	IF_10	CALL_4
0x4000544	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       124	state.c	FUNCTION_6	IF_10
0x4000548	        0x488b4008	                mov rax, qword [rax + 8]	       124	state.c	FUNCTION_6	IF_10
0x400054c	        0x4c8b4820	              mov r9, qword [rax + 0x20]	       123	state.c	FUNCTION_6	IF_10	CALL_4
0x4000550	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       124	state.c	FUNCTION_6	IF_10
0x4000554	        0x488b4008	                mov rax, qword [rax + 8]	       124	state.c	FUNCTION_6	IF_10
0x4000558	        0x4c8b4018	              mov r8, qword [rax + 0x18]	       123	state.c	FUNCTION_6	IF_10	CALL_4
0x400055c	          0x8b4de0	             mov ecx, dword [rbp - 0x20]	       123	state.c	FUNCTION_6	IF_10	CALL_4
0x400055f	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       123	state.c	FUNCTION_6	IF_10	CALL_4
0x4000562	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	       123	state.c	FUNCTION_6	IF_10	CALL_4
0x4000566	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       123	state.c	FUNCTION_6	IF_10	CALL_4
0x400056a	        0x4883ec08	                              sub rsp, 8	       123	state.c	FUNCTION_6	IF_10	CALL_4
0x400056e	              0x57	                                push rdi	       123	state.c	FUNCTION_6	IF_10	CALL_4
0x400056f	          0x4889f7	                            mov rdi, rsi	       123	state.c	FUNCTION_6	IF_10	CALL_4
0x4000572	          0x4889c6	                            mov rsi, rax	       123	state.c	FUNCTION_6	IF_10	CALL_4
0x4000575	      0xe800000000	                          call 0x400057a	       123	state.c	FUNCTION_6	IF_10	CALL_4
0x400057a	        0x4883c410	                           add rsp, 0x10	       123	state.c	FUNCTION_6	IF_10	CALL_4
0x400057e	            0xeb04	                           jmp 0x4000584	       123	state.c	FUNCTION_6	IF_10	CALL_4
0x4000580	              0x90	                                     nop	        90	state.c	FUNCTION_6	IF_1
0x4000581	            0xeb01	                           jmp 0x4000584	        90	state.c	FUNCTION_6	IF_1
0x4000583	              0x90	                                     nop	       120	state.c	FUNCTION_6	IF_8	IF_9
0x4000584	              0xc9	                                   leave	       125	state.c	FUNCTION_6
0x4000585	              0xc3	                                     ret	       125	state.c	FUNCTION_6
linefeed	functions,0:CALL,5:DO,0:WHILE,0:IF,2:ELSE,1:SWITCH,0:FOR,0	80
0x4000586	              0x55	                                push rbp	       128	state.c	FUNCTION_7
0x4000587	          0x4889e5	                            mov rbp, rsp	       128	state.c	FUNCTION_7
0x400058a	        0x4883ec20	                           sub rsp, 0x20	       128	state.c	FUNCTION_7
0x400058e	        0x48897de8	             mov qword [rbp - 0x18], rdi	       128	state.c	FUNCTION_7
0x4000592	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x4000596	          0x8b5030	            mov edx, dword [rax + 0x30] 	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x4000599	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x400059d	          0x8b4040	            mov eax, dword [rax + 0x40] 	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x40005a0	            0x85c0	                           test eax, eax	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x40005a2	            0x780c	                            js 0x40005b0	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x40005a4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x40005a8	          0x8b4040	            mov eax, dword [rax + 0x40] 	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x40005ab	          0x83e801	                              sub eax, 1	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x40005ae	            0xeb0a	                           jmp 0x40005ba	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x40005b0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x40005b4	          0x8b4028	            mov eax, dword [rax + 0x28] 	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x40005b7	          0x83e801	                              sub eax, 1	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x40005ba	            0x39c2	                            cmp edx, eax	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x40005bc	     0xf859c000000	                           jne 0x400065e	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x40005c2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       131	state.c	FUNCTION_7	IF_1
0x40005c6	          0x8b403c	            mov eax, dword [rax + 0x3c] 	       131	state.c	FUNCTION_7	IF_1
0x40005c9	          0x8945f0	             mov dword [rbp - 0x10], eax	       131	state.c	FUNCTION_7	IF_1
0x40005cc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       132	state.c	FUNCTION_7	IF_1	CALL_2
0x40005d0	          0x8b4040	            mov eax, dword [rax + 0x40] 	       132	state.c	FUNCTION_7	IF_1	CALL_2
0x40005d3	            0x85c0	                           test eax, eax	       132	state.c	FUNCTION_7	IF_1	CALL_2
0x40005d5	            0x7809	                            js 0x40005e0	       132	state.c	FUNCTION_7	IF_1	CALL_2
0x40005d7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       132	state.c	FUNCTION_7	IF_1	CALL_2
0x40005db	          0x8b4040	            mov eax, dword [rax + 0x40] 	       132	state.c	FUNCTION_7	IF_1	CALL_2
0x40005de	            0xeb07	                           jmp 0x40005e7	       132	state.c	FUNCTION_7	IF_1	CALL_2
0x40005e0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       132	state.c	FUNCTION_7	IF_1	CALL_2
0x40005e4	          0x8b4028	            mov eax, dword [rax + 0x28] 	       132	state.c	FUNCTION_7	IF_1	CALL_2
0x40005e7	          0x8945f4	              mov dword [rbp - 0xc], eax	       132	state.c	FUNCTION_7	IF_1	CALL_2
0x40005ea	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       133	state.c	FUNCTION_7	IF_1	CALL_3
0x40005ee	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	       133	state.c	FUNCTION_7	IF_1	CALL_3
0x40005f5	          0x83e010	                           and eax, 0x10	       133	state.c	FUNCTION_7	IF_1	CALL_3
0x40005f8	            0x84c0	                             test al, al	       133	state.c	FUNCTION_7	IF_1	CALL_3
0x40005fa	            0x7409	                            je 0x4000605	       133	state.c	FUNCTION_7	IF_1	CALL_3
0x40005fc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       133	state.c	FUNCTION_7	IF_1	CALL_3
0x4000600	          0x8b4044	            mov eax, dword [rax + 0x44] 	       133	state.c	FUNCTION_7	IF_1	CALL_3
0x4000603	            0xeb05	                           jmp 0x400060a	       133	state.c	FUNCTION_7	IF_1	CALL_3
0x4000605	      0xb800000000	                              mov eax, 0	       133	state.c	FUNCTION_7	IF_1	CALL_3
0x400060a	          0x8945f8	                mov dword [rbp - 8], eax	       133	state.c	FUNCTION_7	IF_1	CALL_3
0x400060d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x4000611	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x4000618	          0x83e010	                           and eax, 0x10	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x400061b	            0x84c0	                             test al, al	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x400061d	            0x7414	                            je 0x4000633	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x400061f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x4000623	          0x8b4048	            mov eax, dword [rax + 0x48] 	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x4000626	            0x85c0	                           test eax, eax	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x4000628	            0x7809	                            js 0x4000633	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x400062a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x400062e	          0x8b4048	            mov eax, dword [rax + 0x48] 	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x4000631	            0xeb07	                           jmp 0x400063a	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x4000633	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x4000637	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x400063a	          0x8945fc	                mov dword [rbp - 4], eax	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x400063d	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       136	state.c	FUNCTION_7	IF_1	CALL_5
0x4000641	        0x488b55f8	                mov rdx, qword [rbp - 8]	       136	state.c	FUNCTION_7	IF_1	CALL_5
0x4000645	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       136	state.c	FUNCTION_7	IF_1	CALL_5
0x4000649	    0x41b800000000	                              mov r8d, 0	       136	state.c	FUNCTION_7	IF_1	CALL_5
0x400064f	      0xb901000000	                              mov ecx, 1	       136	state.c	FUNCTION_7	IF_1	CALL_5
0x4000654	          0x4889c7	                            mov rdi, rax	       136	state.c	FUNCTION_7	IF_1	CALL_5
0x4000657	      0xe817fdffff	                         call sym.scroll	       136	state.c	FUNCTION_7	IF_1	CALL_5
0x400065c	            0xeb26	                           jmp 0x4000684	       140	state.c	FUNCTION_7
0x400065e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       138	state.c	FUNCTION_7	ELSE_1	IF_2
0x4000662	          0x8b5030	            mov edx, dword [rax + 0x30] 	       138	state.c	FUNCTION_7	ELSE_1	IF_2
0x4000665	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       138	state.c	FUNCTION_7	ELSE_1	IF_2
0x4000669	          0x8b4028	            mov eax, dword [rax + 0x28] 	       138	state.c	FUNCTION_7	ELSE_1	IF_2
0x400066c	          0x83e801	                              sub eax, 1	       138	state.c	FUNCTION_7	ELSE_1	IF_2
0x400066f	            0x39c2	                            cmp edx, eax	       138	state.c	FUNCTION_7	ELSE_1	IF_2
0x4000671	            0x7d11	                           jge 0x4000684	       138	state.c	FUNCTION_7	ELSE_1	IF_2
0x4000673	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       139	state.c	FUNCTION_7	ELSE_1	IF_2
0x4000677	          0x8b4030	            mov eax, dword [rax + 0x30] 	       139	state.c	FUNCTION_7	ELSE_1	IF_2
0x400067a	          0x8d5001	                      lea edx, [rax + 1]	       139	state.c	FUNCTION_7	ELSE_1	IF_2
0x400067d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       139	state.c	FUNCTION_7	ELSE_1	IF_2
0x4000681	          0x895030	             mov dword [rax + 0x30], edx	       139	state.c	FUNCTION_7	ELSE_1	IF_2
0x4000684	              0x90	                                     nop	       140	state.c	FUNCTION_7
0x4000685	              0xc9	                                   leave	       140	state.c	FUNCTION_7
0x4000686	              0xc3	                                     ret	       140	state.c	FUNCTION_7
on_text	functions,0:CALL,34:DO,0:WHILE,2:IF,16:ELSE,2:SWITCH,0:FOR,7	509
0x4000ac2	              0x55	                                push rbp	       241	state.c	FUNCTION_15
0x4000ac3	          0x4889e5	                            mov rbp, rsp	       241	state.c	FUNCTION_15
0x4000ac6	    0x4881ec900000	                           sub rsp, 0x90	       241	state.c	FUNCTION_15
0x4000acd	        0x48897d88	             mov qword [rbp - 0x78], rdi	       241	state.c	FUNCTION_15
0x4000ad1	        0x48897580	             mov qword [rbp - 0x80], rsi	       241	state.c	FUNCTION_15
0x4000ad5	    0x48899578ffff	             mov qword [rbp - 0x88], rdx	       241	state.c	FUNCTION_15
0x4000adc	    0x64488b042528	                mov rax, qword fs:[0x28]	       241	state.c	FUNCTION_15
0x4000ae5	        0x488945f8	                mov qword [rbp - 8], rax	       241	state.c	FUNCTION_15
0x4000ae9	            0x31c0	                            xor eax, eax	       241	state.c	FUNCTION_15
0x4000aeb	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       242	state.c	FUNCTION_15
0x4000af2	        0x488945c0	             mov qword [rbp - 0x40], rax	       242	state.c	FUNCTION_15
0x4000af6	    0xc74590000000	               mov dword [rbp - 0x70], 0	       244	state.c	FUNCTION_15
0x4000afd	    0x48c745b80000	               mov qword [rbp - 0x48], 0	       245	state.c	FUNCTION_15
0x4000b05	    0xc74594000000	               mov dword [rbp - 0x6c], 0	       247	state.c	FUNCTION_15
0x4000b0c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       249	state.c	FUNCTION_15
0x4000b10	        0x488b4030	            mov rax, qword [rax + 0x30] 	       249	state.c	FUNCTION_15
0x4000b14	        0x488945b0	             mov qword [rbp - 0x50], rax	       249	state.c	FUNCTION_15
0x4000b18	        0x488b4580	             mov rax, qword [rbp - 0x80]	       253	state.c	FUNCTION_15	CALL_1
0x4000b1c	        0x4883c001	                              add rax, 1	       253	state.c	FUNCTION_15	CALL_1
0x4000b20	    0x488d14850000	                        lea rdx, [rax*4]	       253	state.c	FUNCTION_15	CALL_1
0x4000b28	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       253	state.c	FUNCTION_15	CALL_1
0x4000b2c	          0x488b00	                    mov rax, qword [rax]	       253	state.c	FUNCTION_15	CALL_1
0x4000b2f	          0x4889d6	                            mov rsi, rdx	       253	state.c	FUNCTION_15	CALL_1
0x4000b32	          0x4889c7	                            mov rdi, rax	       253	state.c	FUNCTION_15	CALL_1
0x4000b35	      0xe800000000	                          call 0x4000b3a	       253	state.c	FUNCTION_15	CALL_1
0x4000b3a	        0x488945c8	             mov qword [rbp - 0x38], rax	       253	state.c	FUNCTION_15	CALL_1
0x4000b3e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       256	state.c	FUNCTION_15
0x4000b42	    0x8b8018010000	           mov eax, dword [rax + 0x118] 	       256	state.c	FUNCTION_15
0x4000b48	            0x85c0	                           test eax, eax	       256	state.c	FUNCTION_15
0x4000b4a	            0x7431	                            je 0x4000b7d	       256	state.c	FUNCTION_15
0x4000b4c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       256	state.c	FUNCTION_15
0x4000b50	    0x8b8018010000	           mov eax, dword [rax + 0x118] 	       256	state.c	FUNCTION_15
0x4000b56	          0x4863d0	                         movsxd rdx, eax	       256	state.c	FUNCTION_15
0x4000b59	          0x4889d0	                            mov rax, rdx	       256	state.c	FUNCTION_15
0x4000b5c	          0x4801c0	                            add rax, rax	       256	state.c	FUNCTION_15
0x4000b5f	          0x4801d0	                            add rax, rdx	       256	state.c	FUNCTION_15
0x4000b62	        0x48c1e003	                              shl rax, 3	       256	state.c	FUNCTION_15
0x4000b66	    0x488d90900000	                   lea rdx, [rax + 0x90]	       256	state.c	FUNCTION_15
0x4000b6d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       256	state.c	FUNCTION_15
0x4000b71	          0x4801d0	                            add rax, rdx	       256	state.c	FUNCTION_15
0x4000b74	        0x4883c008	                              add rax, 8	       256	state.c	FUNCTION_15
0x4000b78	      0xe98a000000	                           jmp 0x4000c07	       256	state.c	FUNCTION_15
0x4000b7d	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       257	state.c	FUNCTION_15
0x4000b81	        0x488b4588	             mov rax, qword [rbp - 0x78]	       257	state.c	FUNCTION_15
0x4000b85	          0x4801d0	                            add rax, rdx	       257	state.c	FUNCTION_15
0x4000b88	           0xfb600	                   movzx eax, byte [rax]	       257	state.c	FUNCTION_15
0x4000b8b	            0x84c0	                             test al, al	       257	state.c	FUNCTION_15
0x4000b8d	            0x782e	                            js 0x4000bbd	       257	state.c	FUNCTION_15
0x4000b8f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       257	state.c	FUNCTION_15
0x4000b93	    0x8b8010010000	           mov eax, dword [rax + 0x110] 	       257	state.c	FUNCTION_15
0x4000b99	          0x4863d0	                         movsxd rdx, eax	       257	state.c	FUNCTION_15
0x4000b9c	          0x4889d0	                            mov rax, rdx	       257	state.c	FUNCTION_15
0x4000b9f	          0x4801c0	                            add rax, rax	       257	state.c	FUNCTION_15
0x4000ba2	          0x4801d0	                            add rax, rdx	       257	state.c	FUNCTION_15
0x4000ba5	        0x48c1e003	                              shl rax, 3	       257	state.c	FUNCTION_15
0x4000ba9	    0x488d90900000	                   lea rdx, [rax + 0x90]	       257	state.c	FUNCTION_15
0x4000bb0	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       257	state.c	FUNCTION_15
0x4000bb4	          0x4801d0	                            add rax, rdx	       257	state.c	FUNCTION_15
0x4000bb7	        0x4883c008	                              add rax, 8	       257	state.c	FUNCTION_15
0x4000bbb	            0xeb4a	                           jmp 0x4000c07	       257	state.c	FUNCTION_15
0x4000bbd	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       258	state.c	FUNCTION_15
0x4000bc1	          0x488b00	                    mov rax, qword [rax]	       258	state.c	FUNCTION_15
0x4000bc4	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       258	state.c	FUNCTION_15
0x4000bc8	          0x83e001	                              and eax, 1	       258	state.c	FUNCTION_15
0x4000bcb	            0x84c0	                             test al, al	       258	state.c	FUNCTION_15
0x4000bcd	            0x740c	                            je 0x4000bdb	       258	state.c	FUNCTION_15
0x4000bcf	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       258	state.c	FUNCTION_15
0x4000bd3	    0x4805f8000000	                           add rax, 0xf8	       258	state.c	FUNCTION_15
0x4000bd9	            0xeb2c	                           jmp 0x4000c07	       258	state.c	FUNCTION_15
0x4000bdb	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       259	state.c	FUNCTION_15
0x4000bdf	    0x8b8014010000	           mov eax, dword [rax + 0x114] 	       259	state.c	FUNCTION_15
0x4000be5	          0x4863d0	                         movsxd rdx, eax	       258	state.c	FUNCTION_15
0x4000be8	          0x4889d0	                            mov rax, rdx	       258	state.c	FUNCTION_15
0x4000beb	          0x4801c0	                            add rax, rax	       258	state.c	FUNCTION_15
0x4000bee	          0x4801d0	                            add rax, rdx	       258	state.c	FUNCTION_15
0x4000bf1	        0x48c1e003	                              shl rax, 3	       258	state.c	FUNCTION_15
0x4000bf5	    0x488d90900000	                   lea rdx, [rax + 0x90]	       258	state.c	FUNCTION_15
0x4000bfc	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       258	state.c	FUNCTION_15
0x4000c00	          0x4801d0	                            add rax, rdx	       258	state.c	FUNCTION_15
0x4000c03	        0x4883c008	                              add rax, 8	       258	state.c	FUNCTION_15
0x4000c07	        0x488945d0	             mov qword [rbp - 0x30], rax	       255	state.c	FUNCTION_15
0x4000c0b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       261	state.c	FUNCTION_15
0x4000c0f	          0x488b00	                    mov rax, qword [rax]	       261	state.c	FUNCTION_15
0x4000c12	        0x488b4008	                mov rax, qword [rax + 8]	       261	state.c	FUNCTION_15
0x4000c16	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       262	state.c	FUNCTION_15
0x4000c1a	    0x8b9218010000	           mov edx, dword [rdx + 0x118] 	       262	state.c	FUNCTION_15
0x4000c20	            0x85d2	                           test edx, edx	       261	state.c	FUNCTION_15
0x4000c22	            0x7509	                           jne 0x4000c2d	       261	state.c	FUNCTION_15
0x4000c24	        0x488b5580	             mov rdx, qword [rbp - 0x80]	       261	state.c	FUNCTION_15
0x4000c28	          0x4189d3	                           mov r11d, edx	       261	state.c	FUNCTION_15
0x4000c2b	            0xeb06	                           jmp 0x4000c33	       261	state.c	FUNCTION_15
0x4000c2d	    0x41bb01000000	                             mov r11d, 1	       261	state.c	FUNCTION_15
0x4000c33	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       261	state.c	FUNCTION_15
0x4000c37	        0x4c8d5208	                      lea r10, [rdx + 8]	       261	state.c	FUNCTION_15
0x4000c3b	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       261	state.c	FUNCTION_15
0x4000c3f	          0x488b3a	                    mov rdi, qword [rdx]	       261	state.c	FUNCTION_15
0x4000c42	        0x4c8b4588	              mov r8, qword [rbp - 0x78]	       261	state.c	FUNCTION_15
0x4000c46	        0x488d4d90	                   lea rcx, [rbp - 0x70]	       261	state.c	FUNCTION_15
0x4000c4a	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       261	state.c	FUNCTION_15
0x4000c4e	          0xff7580	                 push qword [rbp - 0x80]	       261	state.c	FUNCTION_15
0x4000c51	        0x488d75b8	                   lea rsi, [rbp - 0x48]	       261	state.c	FUNCTION_15
0x4000c55	              0x56	                                push rsi	       261	state.c	FUNCTION_15
0x4000c56	          0x4d89c1	                              mov r9, r8	       261	state.c	FUNCTION_15
0x4000c59	          0x4589d8	                           mov r8d, r11d	       261	state.c	FUNCTION_15
0x4000c5c	          0x4c89d6	                            mov rsi, r10	       261	state.c	FUNCTION_15
0x4000c5f	            0xffd0	                                call rax	       261	state.c	FUNCTION_15
0x4000c61	        0x4883c410	                           add rsp, 0x10	       261	state.c	FUNCTION_15
0x4000c65	          0x8b4590	             mov eax, dword [rbp - 0x70]	       268	state.c	FUNCTION_15	IF_1
0x4000c68	            0x85c0	                           test eax, eax	       268	state.c	FUNCTION_15	IF_1
0x4000c6a	            0x751f	                           jne 0x4000c8b	       268	state.c	FUNCTION_15	IF_1
0x4000c6c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       270	state.c	FUNCTION_15	IF_1	CALL_2
0x4000c70	          0x488b00	                    mov rax, qword [rax]	       270	state.c	FUNCTION_15	IF_1	CALL_2
0x4000c73	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       270	state.c	FUNCTION_15	IF_1	CALL_2
0x4000c77	          0x4889d6	                            mov rsi, rdx	       270	state.c	FUNCTION_15	IF_1	CALL_2
0x4000c7a	          0x4889c7	                            mov rdi, rax	       270	state.c	FUNCTION_15	IF_1	CALL_2
0x4000c7d	      0xe800000000	                          call 0x4000c82	       270	state.c	FUNCTION_15	IF_1	CALL_2
0x4000c82	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       271	state.c	FUNCTION_15	IF_1
0x4000c86	      0xe957050000	                           jmp 0x40011e2	       271	state.c	FUNCTION_15	IF_1
0x4000c8b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       274	state.c	FUNCTION_15	IF_2
0x4000c8f	    0x8b8018010000	           mov eax, dword [rax + 0x118] 	       274	state.c	FUNCTION_15	IF_2
0x4000c95	            0x85c0	                           test eax, eax	       274	state.c	FUNCTION_15	IF_2
0x4000c97	            0x7415	                            je 0x4000cae	       274	state.c	FUNCTION_15	IF_2
0x4000c99	          0x8b4590	             mov eax, dword [rbp - 0x70]	       274	state.c	FUNCTION_15	IF_2
0x4000c9c	            0x85c0	                           test eax, eax	       274	state.c	FUNCTION_15	IF_2
0x4000c9e	            0x740e	                            je 0x4000cae	       274	state.c	FUNCTION_15	IF_2
0x4000ca0	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       275	state.c	FUNCTION_15	IF_2
0x4000ca4	    0xc78018010000	              mov dword [rax + 0x118], 0	       275	state.c	FUNCTION_15	IF_2
0x4000cae	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       279	state.c	FUNCTION_15	IF_3	CALL_3
0x4000cb1	            0x4898	                                    cdqe	       279	state.c	FUNCTION_15	IF_3	CALL_3
0x4000cb3	    0x488d14850000	                        lea rdx, [rax*4]	       279	state.c	FUNCTION_15	IF_3	CALL_3
0x4000cbb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       279	state.c	FUNCTION_15	IF_3	CALL_3
0x4000cbf	          0x4801d0	                            add rax, rdx	       279	state.c	FUNCTION_15	IF_3	CALL_3
0x4000cc2	            0x8b00	                    mov eax, dword [rax]	       279	state.c	FUNCTION_15	IF_3	CALL_3
0x4000cc4	            0x89c7	                            mov edi, eax	       279	state.c	FUNCTION_15	IF_3	CALL_3
0x4000cc6	      0xe800000000	                          call 0x4000ccb	       279	state.c	FUNCTION_15	IF_3	CALL_3
0x4000ccb	            0x85c0	                           test eax, eax	       279	state.c	FUNCTION_15	IF_3	CALL_3
0x4000ccd	     0xf84d1040000	                            je 0x40011a4	       279	state.c	FUNCTION_15	IF_3	CALL_3
0x4000cd3	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       281	state.c	FUNCTION_15	IF_3	IF_4
0x4000cd7	          0x8b5030	            mov edx, dword [rax + 0x30] 	       281	state.c	FUNCTION_15	IF_3	IF_4
0x4000cda	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       281	state.c	FUNCTION_15	IF_3	IF_4
0x4000cde	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	       281	state.c	FUNCTION_15	IF_3	IF_4
0x4000ce4	            0x39c2	                            cmp edx, eax	       281	state.c	FUNCTION_15	IF_3	IF_4
0x4000ce6	     0xf85b8040000	                           jne 0x40011a4	       281	state.c	FUNCTION_15	IF_3	IF_4
0x4000cec	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       281	state.c	FUNCTION_15	IF_3	IF_4
0x4000cf0	          0x8b5034	            mov edx, dword [rax + 0x34] 	       281	state.c	FUNCTION_15	IF_3	IF_4
0x4000cf3	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       281	state.c	FUNCTION_15	IF_3	IF_4
0x4000cf7	    0x8b8890000000	            mov ecx, dword [rax + 0x90] 	       281	state.c	FUNCTION_15	IF_3	IF_4
0x4000cfd	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       281	state.c	FUNCTION_15	IF_3	IF_4
0x4000d01	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	       281	state.c	FUNCTION_15	IF_3	IF_4
0x4000d07	             0x1c8	                            add eax, ecx	       281	state.c	FUNCTION_15	IF_3	IF_4
0x4000d09	            0x39c2	                            cmp edx, eax	       281	state.c	FUNCTION_15	IF_3	IF_4
0x4000d0b	     0xf8593040000	                           jne 0x40011a4	       281	state.c	FUNCTION_15	IF_3	IF_4
0x4000d11	    0xc74598000000	               mov dword [rbp - 0x68], 0	       291	state.c	FUNCTION_15	IF_3	IF_4
0x4000d18	            0xeb04	                           jmp 0x4000d1e	       292	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0x4000d1a	        0x83459801	               add dword [rbp - 0x68], 1	       293	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0x4000d1e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       292	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0x4000d22	        0x488b4078	            mov rax, qword [rax + 0x78] 	       292	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0x4000d26	          0x8b5598	             mov edx, dword [rbp - 0x68]	       292	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0x4000d29	          0x4863d2	                         movsxd rdx, edx	       292	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0x4000d2c	        0x48c1e202	                              shl rdx, 2	       292	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0x4000d30	          0x4801d0	                            add rax, rdx	       292	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0x4000d33	            0x8b00	                    mov eax, dword [rax]	       292	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0x4000d35	            0x85c0	                           test eax, eax	       292	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0x4000d37	            0x75e1	                           jne 0x4000d1a	       292	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0x4000d39	            0xeb54	                           jmp 0x4000d8f	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x4000d3b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       297	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	IF_5
0x4000d3f	    0x488b80800000	            mov rax, qword [rax + 0x80] 	       297	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	IF_5
0x4000d46	          0x3b4598	             cmp eax, dword [rbp - 0x68]	       297	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	IF_5
0x4000d49	            0x7f0c	                            jg 0x4000d57	       297	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	IF_5
0x4000d4b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       298	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_8
0x4000d4f	          0x4889c7	                            mov rdi, rax	       298	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_8
0x4000d52	      0xe830f9ffff	            call sym.grow_combine_buffer	       298	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_8
0x4000d57	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       299	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2
0x4000d5b	        0x488b4878	            mov rcx, qword [rax + 0x78] 	       299	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2
0x4000d5f	          0x8b4598	             mov eax, dword [rbp - 0x68]	       299	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2
0x4000d62	          0x8d5001	                      lea edx, [rax + 1]	       299	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2
0x4000d65	          0x895598	             mov dword [rbp - 0x68], edx	       299	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2
0x4000d68	            0x4898	                                    cdqe	       299	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2
0x4000d6a	        0x48c1e002	                              shl rax, 2	       299	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2
0x4000d6e	          0x4801c1	                            add rcx, rax	       299	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2
0x4000d71	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       299	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2
0x4000d74	          0x8d5001	                      lea edx, [rax + 1]	       299	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2
0x4000d77	          0x895594	             mov dword [rbp - 0x6c], edx	       299	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2
0x4000d7a	            0x4898	                                    cdqe	       299	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2
0x4000d7c	    0x488d14850000	                        lea rdx, [rax*4]	       299	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2
0x4000d84	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       299	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2
0x4000d88	          0x4801d0	                            add rax, rdx	       299	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2
0x4000d8b	            0x8b00	                    mov eax, dword [rax]	       299	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2
0x4000d8d	            0x8901	                    mov dword [rcx], eax	       299	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2
0x4000d8f	          0x8b4590	             mov eax, dword [rbp - 0x70]	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x4000d92	          0x394594	            cmp dword [rbp - 0x6c], eax 	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x4000d95	            0x7d21	                           jge 0x4000db8	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x4000d97	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x4000d9a	            0x4898	                                    cdqe	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x4000d9c	    0x488d14850000	                        lea rdx, [rax*4]	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x4000da4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x4000da8	          0x4801d0	                            add rax, rdx	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x4000dab	            0x8b00	                    mov eax, dword [rax]	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x4000dad	            0x89c7	                            mov edi, eax	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x4000daf	      0xe800000000	                          call 0x4000db4	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x4000db4	            0x85c0	                           test eax, eax	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x4000db6	            0x7583	                           jne 0x4000d3b	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x4000db8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       301	state.c	FUNCTION_15	IF_3	IF_4	IF_6
0x4000dbc	    0x488b80800000	            mov rax, qword [rax + 0x80] 	       301	state.c	FUNCTION_15	IF_3	IF_4	IF_6
0x4000dc3	          0x3b4598	             cmp eax, dword [rbp - 0x68]	       301	state.c	FUNCTION_15	IF_3	IF_4	IF_6
0x4000dc6	            0x7f0c	                            jg 0x4000dd4	       301	state.c	FUNCTION_15	IF_3	IF_4	IF_6
0x4000dc8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       302	state.c	FUNCTION_15	IF_3	IF_4	CALL_9
0x4000dcc	          0x4889c7	                            mov rdi, rax	       302	state.c	FUNCTION_15	IF_3	IF_4	CALL_9
0x4000dcf	      0xe8b3f8ffff	            call sym.grow_combine_buffer	       302	state.c	FUNCTION_15	IF_3	IF_4	CALL_9
0x4000dd4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       303	state.c	FUNCTION_15	IF_3	IF_4
0x4000dd8	        0x488b4078	            mov rax, qword [rax + 0x78] 	       303	state.c	FUNCTION_15	IF_3	IF_4
0x4000ddc	          0x8b5598	             mov edx, dword [rbp - 0x68]	       303	state.c	FUNCTION_15	IF_3	IF_4
0x4000ddf	          0x4863d2	                         movsxd rdx, edx	       303	state.c	FUNCTION_15	IF_3	IF_4
0x4000de2	        0x48c1e202	                              shl rdx, 2	       303	state.c	FUNCTION_15	IF_3	IF_4
0x4000de6	          0x4801d0	                            add rax, rdx	       303	state.c	FUNCTION_15	IF_3	IF_4
0x4000de9	    0xc70000000000	                      mov dword [rax], 0	       303	state.c	FUNCTION_15	IF_3	IF_4
0x4000def	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       312	state.c	FUNCTION_15	IF_3	IF_4	CALL_12
0x4000df3	    0x8b9088000000	            mov edx, dword [rax + 0x88] 	       312	state.c	FUNCTION_15	IF_3	IF_4	CALL_12
0x4000df9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       312	state.c	FUNCTION_15	IF_3	IF_4	CALL_12
0x4000dfd	        0x488b7078	            mov rsi, qword [rax + 0x78] 	       312	state.c	FUNCTION_15	IF_3	IF_4	CALL_12
0x4000e01	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       312	state.c	FUNCTION_15	IF_3	IF_4	CALL_12
0x4000e05	    0x488b888c0000	            mov rcx, qword [rax + 0x8c] 	       312	state.c	FUNCTION_15	IF_3	IF_4	CALL_12
0x4000e0c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       312	state.c	FUNCTION_15	IF_3	IF_4	CALL_12
0x4000e10	          0x4889c7	                            mov rdi, rax	       312	state.c	FUNCTION_15	IF_3	IF_4	CALL_12
0x4000e13	      0xe828f2ffff	                       call sym.putglyph	       312	state.c	FUNCTION_15	IF_3	IF_4	CALL_12
0x4000e18	      0xe987030000	                           jmp 0x40011a4	       319	state.c	FUNCTION_15	FOR_3
0x4000e1d	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       321	state.c	FUNCTION_15	FOR_3
0x4000e20	          0x8945a8	             mov dword [rbp - 0x58], eax	       321	state.c	FUNCTION_15	FOR_3
0x4000e23	    0xc745a0000000	               mov dword [rbp - 0x60], 0	       323	state.c	FUNCTION_15	FOR_3
0x4000e2a	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       326	state.c	FUNCTION_15	FOR_3	FOR_4
0x4000e2d	          0x83c001	                              add eax, 1	       326	state.c	FUNCTION_15	FOR_3	FOR_4
0x4000e30	          0x89459c	             mov dword [rbp - 0x64], eax	       326	state.c	FUNCTION_15	FOR_3	FOR_4
0x4000e33	            0xeb25	                           jmp 0x4000e5a	       326	state.c	FUNCTION_15	FOR_3	FOR_4
0x4000e35	          0x8b459c	             mov eax, dword [rbp - 0x64]	       327	state.c	FUNCTION_15	FOR_3	FOR_4	IF_7	CALL_14
0x4000e38	            0x4898	                                    cdqe	       327	state.c	FUNCTION_15	FOR_3	FOR_4	IF_7	CALL_14
0x4000e3a	    0x488d14850000	                        lea rdx, [rax*4]	       327	state.c	FUNCTION_15	FOR_3	FOR_4	IF_7	CALL_14
0x4000e42	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       327	state.c	FUNCTION_15	FOR_3	FOR_4	IF_7	CALL_14
0x4000e46	          0x4801d0	                            add rax, rdx	       327	state.c	FUNCTION_15	FOR_3	FOR_4	IF_7	CALL_14
0x4000e49	            0x8b00	                    mov eax, dword [rax]	       327	state.c	FUNCTION_15	FOR_3	FOR_4	IF_7	CALL_14
0x4000e4b	            0x89c7	                            mov edi, eax	       327	state.c	FUNCTION_15	FOR_3	FOR_4	IF_7	CALL_14
0x4000e4d	      0xe800000000	                          call 0x4000e52	       327	state.c	FUNCTION_15	FOR_3	FOR_4	IF_7	CALL_14
0x4000e52	            0x85c0	                           test eax, eax	       327	state.c	FUNCTION_15	FOR_3	FOR_4	IF_7	CALL_14
0x4000e54	            0x740e	                            je 0x4000e64	       327	state.c	FUNCTION_15	FOR_3	FOR_4	IF_7	CALL_14
0x4000e56	        0x83459c01	               add dword [rbp - 0x64], 1	       326	state.c	FUNCTION_15	FOR_3	FOR_4
0x4000e5a	          0x8b4590	             mov eax, dword [rbp - 0x70]	       326	state.c	FUNCTION_15	FOR_3	FOR_4
0x4000e5d	          0x39459c	            cmp dword [rbp - 0x64], eax 	       326	state.c	FUNCTION_15	FOR_3	FOR_4
0x4000e60	            0x7cd3	                            jl 0x4000e35	       326	state.c	FUNCTION_15	FOR_3	FOR_4
0x4000e62	            0xeb01	                           jmp 0x4000e65	       326	state.c	FUNCTION_15	FOR_3	FOR_4
0x4000e64	              0x90	                                     nop	       328	state.c	FUNCTION_15	FOR_3	FOR_4	IF_7
0x4000e65	          0x8b459c	             mov eax, dword [rbp - 0x64]	       330	state.c	FUNCTION_15	FOR_3	CALL_15
0x4000e68	          0x2b45a8	             sub eax, dword [rbp - 0x58]	       330	state.c	FUNCTION_15	FOR_3	CALL_15
0x4000e6b	          0x83c001	                              add eax, 1	       330	state.c	FUNCTION_15	FOR_3	CALL_15
0x4000e6e	            0x4898	                                    cdqe	       330	state.c	FUNCTION_15	FOR_3	CALL_15
0x4000e70	    0x488d14850000	                        lea rdx, [rax*4]	       330	state.c	FUNCTION_15	FOR_3	CALL_15
0x4000e78	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       330	state.c	FUNCTION_15	FOR_3	CALL_15
0x4000e7c	          0x488b00	                    mov rax, qword [rax]	       330	state.c	FUNCTION_15	FOR_3	CALL_15
0x4000e7f	          0x4889d6	                            mov rsi, rdx	       330	state.c	FUNCTION_15	FOR_3	CALL_15
0x4000e82	          0x4889c7	                            mov rdi, rax	       330	state.c	FUNCTION_15	FOR_3	CALL_15
0x4000e85	      0xe800000000	                          call 0x4000e8a	       330	state.c	FUNCTION_15	FOR_3	CALL_15
0x4000e8a	        0x488945d8	             mov qword [rbp - 0x28], rax	       330	state.c	FUNCTION_15	FOR_3	CALL_15
0x4000e8e	            0xeb59	                           jmp 0x4000ee9	       332	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000e90	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       334	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000e93	          0x2b45a8	             sub eax, dword [rbp - 0x58]	       334	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000e96	            0x4898	                                    cdqe	       334	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000e98	    0x488d14850000	                        lea rdx, [rax*4]	       334	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000ea0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       334	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000ea4	          0x4801c2	                            add rdx, rax	       334	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000ea7	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       334	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000eaa	            0x4898	                                    cdqe	       334	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000eac	    0x488d0c850000	                        lea rcx, [rax*4]	       334	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000eb4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       334	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000eb8	          0x4801c8	                            add rax, rcx	       334	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000ebb	            0x8b00	                    mov eax, dword [rax]	       334	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000ebd	            0x8902	                    mov dword [rdx], eax	       334	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000ebf	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       335	state.c	FUNCTION_15	FOR_3	FOR_5	CALL_16
0x4000ec2	            0x4898	                                    cdqe	       335	state.c	FUNCTION_15	FOR_3	FOR_5	CALL_16
0x4000ec4	    0x488d14850000	                        lea rdx, [rax*4]	       335	state.c	FUNCTION_15	FOR_3	FOR_5	CALL_16
0x4000ecc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       335	state.c	FUNCTION_15	FOR_3	FOR_5	CALL_16
0x4000ed0	          0x4801d0	                            add rax, rdx	       335	state.c	FUNCTION_15	FOR_3	FOR_5	CALL_16
0x4000ed3	            0x8b00	                    mov eax, dword [rax]	       335	state.c	FUNCTION_15	FOR_3	FOR_5	CALL_16
0x4000ed5	            0x89c7	                            mov edi, eax	       335	state.c	FUNCTION_15	FOR_3	FOR_5	CALL_16
0x4000ed7	      0xe800000000	                          call 0x4000edc	       335	state.c	FUNCTION_15	FOR_3	FOR_5	CALL_16
0x4000edc	          0x8945ac	             mov dword [rbp - 0x54], eax	       335	state.c	FUNCTION_15	FOR_3	FOR_5	CALL_16
0x4000edf	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       342	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000ee2	           0x145a0	             add dword [rbp - 0x60], eax	       342	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000ee5	        0x83459401	               add dword [rbp - 0x6c], 1	       332	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000ee9	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       332	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000eec	          0x3b459c	             cmp eax, dword [rbp - 0x64]	       332	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000eef	            0x7c9f	                            jl 0x4000e90	       332	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000ef1	          0x8b459c	             mov eax, dword [rbp - 0x64]	       345	state.c	FUNCTION_15	FOR_3
0x4000ef4	          0x2b45a8	             sub eax, dword [rbp - 0x58]	       345	state.c	FUNCTION_15	FOR_3
0x4000ef7	            0x4898	                                    cdqe	       345	state.c	FUNCTION_15	FOR_3
0x4000ef9	    0x488d14850000	                        lea rdx, [rax*4]	       345	state.c	FUNCTION_15	FOR_3
0x4000f01	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       345	state.c	FUNCTION_15	FOR_3
0x4000f05	          0x4801d0	                            add rax, rdx	       345	state.c	FUNCTION_15	FOR_3
0x4000f08	    0xc70000000000	                      mov dword [rax], 0	       345	state.c	FUNCTION_15	FOR_3
0x4000f0e	        0x836d9401	               sub dword [rbp - 0x6c], 1	       346	state.c	FUNCTION_15	FOR_3
0x4000f12	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000f16	          0x8b4038	            mov eax, dword [rax + 0x38] 	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000f19	            0x85c0	                           test eax, eax	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000f1b	            0x754c	                           jne 0x4000f69	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000f1d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000f21	          0x8b5034	            mov edx, dword [rax + 0x34] 	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000f24	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000f27	          0x8d0c02	                    lea ecx, [rdx + rax]	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000f2a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000f2e	        0x488b5058	            mov rdx, qword [rax + 0x58] 	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000f32	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000f36	          0x8b4030	            mov eax, dword [rax + 0x30] 	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000f39	            0x4898	                                    cdqe	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000f3b	        0x48c1e002	                              shl rax, 2	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000f3f	          0x4801d0	                            add rax, rdx	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000f42	           0xfb600	                   movzx eax, byte [rax]	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000f45	          0x83e001	                              and eax, 1	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000f48	            0x84c0	                             test al, al	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000f4a	            0x7412	                            je 0x4000f5e	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000f4c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000f50	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000f53	            0x89c2	                            mov edx, eax	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000f55	          0xc1ea1f	                           shr edx, 0x1f	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000f58	             0x1d0	                            add eax, edx	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000f5a	            0xd1f8	                              sar eax, 1	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000f5c	            0xeb07	                           jmp 0x4000f65	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000f5e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000f62	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000f65	            0x39c1	                            cmp ecx, eax	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000f67	            0x7e22	                           jle 0x4000f8b	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000f69	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       357	state.c	FUNCTION_15	FOR_3	IF_9	CALL_23
0x4000f6d	          0x4889c7	                            mov rdi, rax	       357	state.c	FUNCTION_15	FOR_3	IF_9	CALL_23
0x4000f70	      0xe811f6ffff	                       call sym.linefeed	       357	state.c	FUNCTION_15	FOR_3	IF_9	CALL_23
0x4000f75	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       358	state.c	FUNCTION_15	FOR_3	IF_9
0x4000f79	    0xc74034000000	               mov dword [rax + 0x34], 0	       358	state.c	FUNCTION_15	FOR_3	IF_9
0x4000f80	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       359	state.c	FUNCTION_15	FOR_3	IF_9
0x4000f84	    0xc74038000000	               mov dword [rax + 0x38], 0	       359	state.c	FUNCTION_15	FOR_3	IF_9
0x4000f8b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       362	state.c	FUNCTION_15	FOR_3	IF_10
0x4000f8f	     0xfb680940000	           movzx eax, byte [rax + 0x94] 	       362	state.c	FUNCTION_15	FOR_3	IF_10
0x4000f96	          0x83e008	                              and eax, 8	       362	state.c	FUNCTION_15	FOR_3	IF_10
0x4000f99	            0x84c0	                             test al, al	       362	state.c	FUNCTION_15	FOR_3	IF_10
0x4000f9b	            0x747e	                            je 0x400101b	       362	state.c	FUNCTION_15	FOR_3	IF_10
0x4000f9d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       368	state.c	FUNCTION_15	FOR_3	IF_10
0x4000fa1	          0x8b4030	            mov eax, dword [rax + 0x30] 	       368	state.c	FUNCTION_15	FOR_3	IF_10
0x4000fa4	          0x8945e0	             mov dword [rbp - 0x20], eax	       368	state.c	FUNCTION_15	FOR_3	IF_10
0x4000fa7	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       369	state.c	FUNCTION_15	FOR_3	IF_10
0x4000fab	          0x8b4030	            mov eax, dword [rax + 0x30] 	       369	state.c	FUNCTION_15	FOR_3	IF_10
0x4000fae	          0x83c001	                              add eax, 1	       369	state.c	FUNCTION_15	FOR_3	IF_10
0x4000fb1	          0x8945e4	             mov dword [rbp - 0x1c], eax	       369	state.c	FUNCTION_15	FOR_3	IF_10
0x4000fb4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       370	state.c	FUNCTION_15	FOR_3	IF_10
0x4000fb8	          0x8b4034	            mov eax, dword [rax + 0x34] 	       370	state.c	FUNCTION_15	FOR_3	IF_10
0x4000fbb	          0x8945e8	             mov dword [rbp - 0x18], eax	       370	state.c	FUNCTION_15	FOR_3	IF_10
0x4000fbe	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0x4000fc2	        0x488b5058	            mov rdx, qword [rax + 0x58] 	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0x4000fc6	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0x4000fca	          0x8b4030	            mov eax, dword [rax + 0x30] 	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0x4000fcd	            0x4898	                                    cdqe	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0x4000fcf	        0x48c1e002	                              shl rax, 2	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0x4000fd3	          0x4801d0	                            add rax, rdx	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0x4000fd6	           0xfb600	                   movzx eax, byte [rax]	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0x4000fd9	          0x83e001	                              and eax, 1	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0x4000fdc	            0x84c0	                             test al, al	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0x4000fde	            0x7412	                            je 0x4000ff2	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0x4000fe0	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0x4000fe4	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0x4000fe7	            0x89c2	                            mov edx, eax	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0x4000fe9	          0xc1ea1f	                           shr edx, 0x1f	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0x4000fec	             0x1d0	                            add eax, edx	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0x4000fee	            0xd1f8	                              sar eax, 1	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0x4000ff0	            0xeb07	                           jmp 0x4000ff9	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0x4000ff2	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0x4000ff6	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0x4000ff9	          0x8945ec	             mov dword [rbp - 0x14], eax	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0x4000ffc	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       372	state.c	FUNCTION_15	FOR_3	IF_10	CALL_25
0x4001000	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       372	state.c	FUNCTION_15	FOR_3	IF_10	CALL_25
0x4001004	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       372	state.c	FUNCTION_15	FOR_3	IF_10	CALL_25
0x4001008	    0x41b8ffffffff	                     mov r8d, 0xffffffff	       372	state.c	FUNCTION_15	FOR_3	IF_10	CALL_25
0x400100e	      0xb900000000	                              mov ecx, 0	       372	state.c	FUNCTION_15	FOR_3	IF_10	CALL_25
0x4001013	          0x4889c7	                            mov rdi, rax	       372	state.c	FUNCTION_15	FOR_3	IF_10	CALL_25
0x4001016	      0xe858f3ffff	                         call sym.scroll	       372	state.c	FUNCTION_15	FOR_3	IF_10	CALL_25
0x400101b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       375	state.c	FUNCTION_15	FOR_3	CALL_26
0x400101f	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       375	state.c	FUNCTION_15	FOR_3	CALL_26
0x4001023	          0x8b55a0	             mov edx, dword [rbp - 0x60]	       375	state.c	FUNCTION_15	FOR_3	CALL_26
0x4001026	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	       375	state.c	FUNCTION_15	FOR_3	CALL_26
0x400102a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       375	state.c	FUNCTION_15	FOR_3	CALL_26
0x400102e	          0x4889c7	                            mov rdi, rax	       375	state.c	FUNCTION_15	FOR_3	CALL_26
0x4001031	      0xe80af0ffff	                       call sym.putglyph	       375	state.c	FUNCTION_15	FOR_3	CALL_26
0x4001036	          0x8b4590	             mov eax, dword [rbp - 0x70]	       377	state.c	FUNCTION_15	FOR_3	IF_11
0x4001039	          0x83e801	                              sub eax, 1	       377	state.c	FUNCTION_15	FOR_3	IF_11
0x400103c	          0x3b4594	             cmp eax, dword [rbp - 0x6c]	       377	state.c	FUNCTION_15	FOR_3	IF_11
0x400103f	     0xf85c7000000	                           jne 0x400110c	       377	state.c	FUNCTION_15	FOR_3	IF_11
0x4001045	    0xc745a4000000	               mov dword [rbp - 0x5c], 0	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x400104c	            0xeb4d	                           jmp 0x400109b	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x400104e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       382	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7	IF_12
0x4001052	    0x488b80800000	            mov rax, qword [rax + 0x80] 	       382	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7	IF_12
0x4001059	          0x3b45a4	             cmp eax, dword [rbp - 0x5c]	       382	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7	IF_12
0x400105c	            0x7f0c	                            jg 0x400106a	       382	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7	IF_12
0x400105e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       383	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7	CALL_27
0x4001062	          0x4889c7	                            mov rdi, rax	       383	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7	CALL_27
0x4001065	      0xe81df6ffff	            call sym.grow_combine_buffer	       383	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7	CALL_27
0x400106a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       384	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x400106e	        0x488b4078	            mov rax, qword [rax + 0x78] 	       384	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4001072	          0x8b55a4	             mov edx, dword [rbp - 0x5c]	       384	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4001075	          0x4863d2	                         movsxd rdx, edx	       384	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4001078	        0x48c1e202	                              shl rdx, 2	       384	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x400107c	          0x4801c2	                            add rdx, rax	       384	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x400107f	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       384	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4001082	            0x4898	                                    cdqe	       384	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4001084	    0x488d0c850000	                        lea rcx, [rax*4]	       384	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x400108c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       384	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4001090	          0x4801c8	                            add rax, rcx	       384	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4001093	            0x8b00	                    mov eax, dword [rax]	       384	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4001095	            0x8902	                    mov dword [rdx], eax	       384	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4001097	        0x8345a401	               add dword [rbp - 0x5c], 1	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x400109b	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x400109e	            0x4898	                                    cdqe	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x40010a0	    0x488d14850000	                        lea rdx, [rax*4]	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x40010a8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x40010ac	          0x4801d0	                            add rax, rdx	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x40010af	            0x8b00	                    mov eax, dword [rax]	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x40010b1	            0x85c0	                           test eax, eax	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x40010b3	            0x7599	                           jne 0x400104e	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x40010b5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       386	state.c	FUNCTION_15	FOR_3	IF_11	IF_13
0x40010b9	    0x488b80800000	            mov rax, qword [rax + 0x80] 	       386	state.c	FUNCTION_15	FOR_3	IF_11	IF_13
0x40010c0	          0x3b45a4	             cmp eax, dword [rbp - 0x5c]	       386	state.c	FUNCTION_15	FOR_3	IF_11	IF_13
0x40010c3	            0x7f0c	                            jg 0x40010d1	       386	state.c	FUNCTION_15	FOR_3	IF_11	IF_13
0x40010c5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       387	state.c	FUNCTION_15	FOR_3	IF_11	CALL_28
0x40010c9	          0x4889c7	                            mov rdi, rax	       387	state.c	FUNCTION_15	FOR_3	IF_11	CALL_28
0x40010cc	      0xe8b6f5ffff	            call sym.grow_combine_buffer	       387	state.c	FUNCTION_15	FOR_3	IF_11	CALL_28
0x40010d1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       388	state.c	FUNCTION_15	FOR_3	IF_11
0x40010d5	        0x488b4078	            mov rax, qword [rax + 0x78] 	       388	state.c	FUNCTION_15	FOR_3	IF_11
0x40010d9	          0x8b55a4	             mov edx, dword [rbp - 0x5c]	       388	state.c	FUNCTION_15	FOR_3	IF_11
0x40010dc	          0x4863d2	                         movsxd rdx, edx	       388	state.c	FUNCTION_15	FOR_3	IF_11
0x40010df	        0x48c1e202	                              shl rdx, 2	       388	state.c	FUNCTION_15	FOR_3	IF_11
0x40010e3	          0x4801d0	                            add rax, rdx	       388	state.c	FUNCTION_15	FOR_3	IF_11
0x40010e6	    0xc70000000000	                      mov dword [rax], 0	       388	state.c	FUNCTION_15	FOR_3	IF_11
0x40010ec	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       389	state.c	FUNCTION_15	FOR_3	IF_11
0x40010f0	          0x8b55a0	             mov edx, dword [rbp - 0x60]	       389	state.c	FUNCTION_15	FOR_3	IF_11
0x40010f3	    0x899088000000	             mov dword [rax + 0x88], edx	       389	state.c	FUNCTION_15	FOR_3	IF_11
0x40010f9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       390	state.c	FUNCTION_15	FOR_3	IF_11
0x40010fd	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       390	state.c	FUNCTION_15	FOR_3	IF_11
0x4001101	        0x488b5230	            mov rdx, qword [rdx + 0x30] 	       390	state.c	FUNCTION_15	FOR_3	IF_11
0x4001105	    0x4889908c0000	             mov qword [rax + 0x8c], rdx	       390	state.c	FUNCTION_15	FOR_3	IF_11
0x400110c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x4001110	          0x8b5034	            mov edx, dword [rax + 0x34] 	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x4001113	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x4001116	          0x8d0c02	                    lea ecx, [rdx + rax]	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x4001119	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x400111d	        0x488b5058	            mov rdx, qword [rax + 0x58] 	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x4001121	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x4001125	          0x8b4030	            mov eax, dword [rax + 0x30] 	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x4001128	            0x4898	                                    cdqe	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x400112a	        0x48c1e002	                              shl rax, 2	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x400112e	          0x4801d0	                            add rax, rdx	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x4001131	           0xfb600	                   movzx eax, byte [rax]	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x4001134	          0x83e001	                              and eax, 1	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x4001137	            0x84c0	                             test al, al	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x4001139	            0x7412	                            je 0x400114d	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x400113b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x400113f	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x4001142	            0x89c2	                            mov edx, eax	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x4001144	          0xc1ea1f	                           shr edx, 0x1f	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x4001147	             0x1d0	                            add eax, edx	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x4001149	            0xd1f8	                              sar eax, 1	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x400114b	            0xeb07	                           jmp 0x4001154	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x400114d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x4001151	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x4001154	            0x39c1	                            cmp ecx, eax	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x4001156	            0x7c1f	                            jl 0x4001177	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x4001158	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       394	state.c	FUNCTION_15	FOR_3	IF_14	IF_15
0x400115c	     0xfb680940000	           movzx eax, byte [rax + 0x94] 	       394	state.c	FUNCTION_15	FOR_3	IF_14	IF_15
0x4001163	          0x83e004	                              and eax, 4	       394	state.c	FUNCTION_15	FOR_3	IF_14	IF_15
0x4001166	            0x84c0	                             test al, al	       394	state.c	FUNCTION_15	FOR_3	IF_14	IF_15
0x4001168	            0x7420	                            je 0x400118a	       394	state.c	FUNCTION_15	FOR_3	IF_14	IF_15
0x400116a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       395	state.c	FUNCTION_15	FOR_3	IF_14	IF_15
0x400116e	    0xc74038010000	               mov dword [rax + 0x38], 1	       395	state.c	FUNCTION_15	FOR_3	IF_14	IF_15
0x4001175	            0xeb13	                           jmp 0x400118a	       395	state.c	FUNCTION_15	FOR_3	IF_14	IF_15
0x4001177	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       398	state.c	FUNCTION_15	FOR_3	ELSE_2
0x400117b	          0x8b5034	            mov edx, dword [rax + 0x34] 	       398	state.c	FUNCTION_15	FOR_3	ELSE_2
0x400117e	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       398	state.c	FUNCTION_15	FOR_3	ELSE_2
0x4001181	             0x1c2	                            add edx, eax	       398	state.c	FUNCTION_15	FOR_3	ELSE_2
0x4001183	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       398	state.c	FUNCTION_15	FOR_3	ELSE_2
0x4001187	          0x895034	             mov dword [rax + 0x34], edx	       398	state.c	FUNCTION_15	FOR_3	ELSE_2
0x400118a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       400	state.c	FUNCTION_15	FOR_3	CALL_30
0x400118e	          0x488b00	                    mov rax, qword [rax]	       400	state.c	FUNCTION_15	FOR_3	CALL_30
0x4001191	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       400	state.c	FUNCTION_15	FOR_3	CALL_30
0x4001195	          0x4889d6	                            mov rsi, rdx	       400	state.c	FUNCTION_15	FOR_3	CALL_30
0x4001198	          0x4889c7	                            mov rdi, rax	       400	state.c	FUNCTION_15	FOR_3	CALL_30
0x400119b	      0xe800000000	                          call 0x40011a0	       400	state.c	FUNCTION_15	FOR_3	CALL_30
0x40011a0	        0x83459401	               add dword [rbp - 0x6c], 1	       319	state.c	FUNCTION_15	FOR_3
0x40011a4	          0x8b4590	             mov eax, dword [rbp - 0x70]	       319	state.c	FUNCTION_15	FOR_3
0x40011a7	          0x394594	            cmp dword [rbp - 0x6c], eax 	       319	state.c	FUNCTION_15	FOR_3
0x40011aa	     0xf8c6dfcffff	                            jl 0x4000e1d	       319	state.c	FUNCTION_15	FOR_3
0x40011b0	        0x488d4db0	                   lea rcx, [rbp - 0x50]	       403	state.c	FUNCTION_15	CALL_31
0x40011b4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       403	state.c	FUNCTION_15	CALL_31
0x40011b8	      0xba00000000	                              mov edx, 0	       403	state.c	FUNCTION_15	CALL_31
0x40011bd	          0x4889ce	                            mov rsi, rcx	       403	state.c	FUNCTION_15	CALL_31
0x40011c0	          0x4889c7	                            mov rdi, rax	       403	state.c	FUNCTION_15	CALL_31
0x40011c3	      0xe880efffff	                   call sym.updatecursor	       403	state.c	FUNCTION_15	CALL_31
0x40011c8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       414	state.c	FUNCTION_15	CALL_34
0x40011cc	          0x488b00	                    mov rax, qword [rax]	       414	state.c	FUNCTION_15	CALL_34
0x40011cf	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       414	state.c	FUNCTION_15	CALL_34
0x40011d3	          0x4889d6	                            mov rsi, rdx	       414	state.c	FUNCTION_15	CALL_34
0x40011d6	          0x4889c7	                            mov rdi, rax	       414	state.c	FUNCTION_15	CALL_34
0x40011d9	      0xe800000000	                          call 0x40011de	       414	state.c	FUNCTION_15	CALL_34
0x40011de	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       415	state.c	FUNCTION_15
0x40011e2	        0x488b75f8	                mov rsi, qword [rbp - 8]	       416	state.c	FUNCTION_15
0x40011e6	    0x644833342528	                xor rsi, qword fs:[0x28]	       416	state.c	FUNCTION_15
0x40011ef	            0x7405	                            je 0x40011f6	       416	state.c	FUNCTION_15
0x40011f1	      0xe800000000	                          call 0x40011f6	       416	state.c	FUNCTION_15
0x40011f6	              0xc9	                                   leave	       416	state.c	FUNCTION_15
0x40011f7	              0xc3	                                     ret	       416	state.c	FUNCTION_15
vterm_state_new	functions,0:CALL,2:DO,0:WHILE,0:IF,0:ELSE,0:SWITCH,0:FOR,0	40
0x4000254	              0x55	                                push rbp	        53	state.c	FUNCTION_4
0x4000255	          0x4889e5	                            mov rbp, rsp	        53	state.c	FUNCTION_4
0x4000258	        0x4883ec20	                           sub rsp, 0x20	        53	state.c	FUNCTION_4
0x400025c	        0x48897de8	             mov qword [rbp - 0x18], rdi	        53	state.c	FUNCTION_4
0x4000260	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        54	state.c	FUNCTION_4	CALL_1
0x4000264	      0xbe98010000	                          mov esi, 0x198	        54	state.c	FUNCTION_4	CALL_1
0x4000269	          0x4889c7	                            mov rdi, rax	        54	state.c	FUNCTION_4	CALL_1
0x400026c	      0xe800000000	                          call 0x4000271	        54	state.c	FUNCTION_4	CALL_1
0x4000271	        0x488945f8	                mov qword [rbp - 8], rax	        54	state.c	FUNCTION_4	CALL_1
0x4000275	        0x488b45f8	                mov rax, qword [rbp - 8]	        56	state.c	FUNCTION_4
0x4000279	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        56	state.c	FUNCTION_4
0x400027d	          0x488910	                    mov qword [rax], rdx	        56	state.c	FUNCTION_4
0x4000280	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        58	state.c	FUNCTION_4
0x4000284	          0x8b5010	            mov edx, dword [rax + 0x10] 	        58	state.c	FUNCTION_4
0x4000287	        0x488b45f8	                mov rax, qword [rbp - 8]	        58	state.c	FUNCTION_4
0x400028b	          0x895028	             mov dword [rax + 0x28], edx	        58	state.c	FUNCTION_4
0x400028e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        59	state.c	FUNCTION_4
0x4000292	          0x8b5014	            mov edx, dword [rax + 0x14] 	        59	state.c	FUNCTION_4
0x4000295	        0x488b45f8	                mov rax, qword [rbp - 8]	        59	state.c	FUNCTION_4
0x4000299	          0x89502c	             mov dword [rax + 0x2c], edx	        59	state.c	FUNCTION_4
0x400029c	        0x488b45f8	                mov rax, qword [rbp - 8]	        61	state.c	FUNCTION_4
0x40002a0	    0xc74060000000	               mov dword [rax + 0x60], 0	        61	state.c	FUNCTION_4
0x40002a7	        0x488b45f8	                mov rax, qword [rbp - 8]	        62	state.c	FUNCTION_4
0x40002ab	    0xc74064000000	               mov dword [rax + 0x64], 0	        62	state.c	FUNCTION_4
0x40002b2	        0x488b45f8	                mov rax, qword [rbp - 8]	        63	state.c	FUNCTION_4
0x40002b6	    0xc74068000000	               mov dword [rax + 0x68], 0	        63	state.c	FUNCTION_4
0x40002bd	        0x488b45f8	                mov rax, qword [rbp - 8]	        65	state.c	FUNCTION_4
0x40002c1	    0xc74070000000	               mov dword [rax + 0x70], 0	        65	state.c	FUNCTION_4
0x40002c8	        0x488b45f8	                mov rax, qword [rbp - 8]	        67	state.c	FUNCTION_4
0x40002cc	    0x48c740080000	                  mov qword [rax + 8], 0	        67	state.c	FUNCTION_4
0x40002d4	        0x488b45f8	                mov rax, qword [rbp - 8]	        68	state.c	FUNCTION_4
0x40002d8	    0x48c740100000	               mov qword [rax + 0x10], 0	        68	state.c	FUNCTION_4
0x40002e0	        0x488b45f8	                mov rax, qword [rbp - 8]	        70	state.c	FUNCTION_4	CALL_2
0x40002e4	          0x4889c7	                            mov rdi, rax	        70	state.c	FUNCTION_4	CALL_2
0x40002e7	      0xe800000000	                          call 0x40002ec	        70	state.c	FUNCTION_4	CALL_2
0x40002ec	        0x488b45f8	                mov rax, qword [rbp - 8]	        72	state.c	FUNCTION_4
0x40002f0	    0xc78078010000	              mov dword [rax + 0x178], 0	        72	state.c	FUNCTION_4
0x40002fa	        0x488b45f8	                mov rax, qword [rbp - 8]	        74	state.c	FUNCTION_4
0x40002fe	              0xc9	                                   leave	        75	state.c	FUNCTION_4
0x40002ff	              0xc3	                                     ret	        75	state.c	FUNCTION_4
on_csi	functions,0:CALL,150:DO,0:WHILE,0:IF,36:ELSE,5:SWITCH,10:FOR,4	2394
0x400245a	              0x55	                                push rbp	       901	state.c	FUNCTION_25
0x400245b	          0x4889e5	                            mov rbp, rsp	       901	state.c	FUNCTION_25
0x400245e	    0x4881ec900000	                           sub rsp, 0x90	       901	state.c	FUNCTION_25
0x4002465	        0x48897d98	             mov qword [rbp - 0x68], rdi	       901	state.c	FUNCTION_25
0x4002469	        0x48897590	             mov qword [rbp - 0x70], rsi	       901	state.c	FUNCTION_25
0x400246d	          0x89558c	             mov dword [rbp - 0x74], edx	       901	state.c	FUNCTION_25
0x4002470	        0x48894d80	             mov qword [rbp - 0x80], rcx	       901	state.c	FUNCTION_25
0x4002474	          0x4489c0	                            mov eax, r8d	       901	state.c	FUNCTION_25
0x4002477	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	       901	state.c	FUNCTION_25
0x400247e	          0x884588	               mov byte [rbp - 0x78], al	       901	state.c	FUNCTION_25
0x4002481	    0x64488b042528	                mov rax, qword fs:[0x28]	       901	state.c	FUNCTION_25
0x400248a	        0x488945f8	                mov qword [rbp - 8], rax	       901	state.c	FUNCTION_25
0x400248e	            0x31c0	                            xor eax, eax	       901	state.c	FUNCTION_25
0x4002490	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       902	state.c	FUNCTION_25
0x4002497	        0x488945d0	             mov qword [rbp - 0x30], rax	       902	state.c	FUNCTION_25
0x400249b	    0xc745a4000000	               mov dword [rbp - 0x5c], 0	       903	state.c	FUNCTION_25
0x40024a2	    0xc745a8000000	               mov dword [rbp - 0x58], 0	       904	state.c	FUNCTION_25
0x40024a9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       905	state.c	FUNCTION_25
0x40024ad	        0x488b4030	            mov rax, qword [rax + 0x30] 	       905	state.c	FUNCTION_25
0x40024b1	        0x488945c0	             mov qword [rbp - 0x40], rax	       905	state.c	FUNCTION_25
0x40024b5	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       913	state.c	FUNCTION_25	IF_1
0x40024ba	            0x744f	                            je 0x400250b	       913	state.c	FUNCTION_25	IF_1
0x40024bc	        0x488b4598	             mov rax, qword [rbp - 0x68]	       913	state.c	FUNCTION_25	IF_1
0x40024c0	           0xfb600	                   movzx eax, byte [rax]	       913	state.c	FUNCTION_25	IF_1
0x40024c3	            0x84c0	                             test al, al	       913	state.c	FUNCTION_25	IF_1
0x40024c5	            0x7444	                            je 0x400250b	       913	state.c	FUNCTION_25	IF_1
0x40024c7	        0x488b4598	             mov rax, qword [rbp - 0x68]	       914	state.c	FUNCTION_25	IF_1	IF_2
0x40024cb	        0x4883c001	                              add rax, 1	       914	state.c	FUNCTION_25	IF_1	IF_2
0x40024cf	           0xfb600	                   movzx eax, byte [rax]	       914	state.c	FUNCTION_25	IF_1	IF_2
0x40024d2	            0x84c0	                             test al, al	       914	state.c	FUNCTION_25	IF_1	IF_2
0x40024d4	            0x740a	                            je 0x40024e0	       914	state.c	FUNCTION_25	IF_1	IF_2
0x40024d6	      0xb800000000	                              mov eax, 0	       915	state.c	FUNCTION_25	IF_1	IF_2
0x40024db	      0xe932210000	                           jmp 0x4004612	       915	state.c	FUNCTION_25	IF_1	IF_2
0x40024e0	        0x488b4598	             mov rax, qword [rbp - 0x68]	       917	state.c	FUNCTION_25	IF_1	SWITCH_1
0x40024e4	           0xfb600	                   movzx eax, byte [rax]	       917	state.c	FUNCTION_25	IF_1	SWITCH_1
0x40024e7	           0xfbec0	                           movsx eax, al	       917	state.c	FUNCTION_25	IF_1	SWITCH_1
0x40024ea	          0x83e83e	                           sub eax, 0x3e	       917	state.c	FUNCTION_25	IF_1	SWITCH_1
0x40024ed	          0x83f801	                              cmp eax, 1	       917	state.c	FUNCTION_25	IF_1	SWITCH_1
0x40024f0	            0x770f	                            ja 0x4002501	       917	state.c	FUNCTION_25	IF_1	SWITCH_1
0x40024f2	        0x488b4598	             mov rax, qword [rbp - 0x68]	       920	state.c	FUNCTION_25	IF_1	SWITCH_1
0x40024f6	           0xfb600	                   movzx eax, byte [rax]	       920	state.c	FUNCTION_25	IF_1	SWITCH_1
0x40024f9	           0xfbec0	                           movsx eax, al	       920	state.c	FUNCTION_25	IF_1	SWITCH_1
0x40024fc	          0x8945a4	             mov dword [rbp - 0x5c], eax	       920	state.c	FUNCTION_25	IF_1	SWITCH_1
0x40024ff	            0xeb0a	                           jmp 0x400250b	       921	state.c	FUNCTION_25	IF_1	SWITCH_1
0x4002501	      0xb800000000	                              mov eax, 0	       923	state.c	FUNCTION_25	IF_1	SWITCH_1
0x4002506	      0xe907210000	                           jmp 0x4004612	       923	state.c	FUNCTION_25	IF_1	SWITCH_1
0x400250b	      0x48837d8000	               cmp qword [rbp - 0x80], 0	       927	state.c	FUNCTION_25	IF_3
0x4002510	            0x7462	                            je 0x4002574	       927	state.c	FUNCTION_25	IF_3
0x4002512	        0x488b4580	             mov rax, qword [rbp - 0x80]	       927	state.c	FUNCTION_25	IF_3
0x4002516	           0xfb600	                   movzx eax, byte [rax]	       927	state.c	FUNCTION_25	IF_3
0x4002519	            0x84c0	                             test al, al	       927	state.c	FUNCTION_25	IF_3
0x400251b	            0x7457	                            je 0x4002574	       927	state.c	FUNCTION_25	IF_3
0x400251d	        0x488b4580	             mov rax, qword [rbp - 0x80]	       928	state.c	FUNCTION_25	IF_3	IF_4
0x4002521	        0x4883c001	                              add rax, 1	       928	state.c	FUNCTION_25	IF_3	IF_4
0x4002525	           0xfb600	                   movzx eax, byte [rax]	       928	state.c	FUNCTION_25	IF_3	IF_4
0x4002528	            0x84c0	                             test al, al	       928	state.c	FUNCTION_25	IF_3	IF_4
0x400252a	            0x740a	                            je 0x4002536	       928	state.c	FUNCTION_25	IF_3	IF_4
0x400252c	      0xb800000000	                              mov eax, 0	       929	state.c	FUNCTION_25	IF_3	IF_4
0x4002531	      0xe9dc200000	                           jmp 0x4004612	       929	state.c	FUNCTION_25	IF_3	IF_4
0x4002536	        0x488b4580	             mov rax, qword [rbp - 0x80]	       931	state.c	FUNCTION_25	IF_3	SWITCH_2
0x400253a	           0xfb600	                   movzx eax, byte [rax]	       931	state.c	FUNCTION_25	IF_3	SWITCH_2
0x400253d	           0xfbec0	                           movsx eax, al	       931	state.c	FUNCTION_25	IF_3	SWITCH_2
0x4002540	          0x83f822	                           cmp eax, 0x22	       931	state.c	FUNCTION_25	IF_3	SWITCH_2
0x4002543	            0x7416	                            je 0x400255b	       931	state.c	FUNCTION_25	IF_3	SWITCH_2
0x4002545	          0x83f822	                           cmp eax, 0x22	       931	state.c	FUNCTION_25	IF_3	SWITCH_2
0x4002548	            0x7f07	                            jg 0x4002551	       931	state.c	FUNCTION_25	IF_3	SWITCH_2
0x400254a	          0x83f820	                           cmp eax, 0x20	       931	state.c	FUNCTION_25	IF_3	SWITCH_2
0x400254d	            0x740c	                            je 0x400255b	       931	state.c	FUNCTION_25	IF_3	SWITCH_2
0x400254f	            0xeb19	                           jmp 0x400256a	       931	state.c	FUNCTION_25	IF_3	SWITCH_2
0x4002551	          0x83f824	                           cmp eax, 0x24	       931	state.c	FUNCTION_25	IF_3	SWITCH_2
0x4002554	            0x7405	                            je 0x400255b	       931	state.c	FUNCTION_25	IF_3	SWITCH_2
0x4002556	          0x83f827	                           cmp eax, 0x27	       931	state.c	FUNCTION_25	IF_3	SWITCH_2
0x4002559	            0x750f	                           jne 0x400256a	       931	state.c	FUNCTION_25	IF_3	SWITCH_2
0x400255b	        0x488b4580	             mov rax, qword [rbp - 0x80]	       936	state.c	FUNCTION_25	IF_3	SWITCH_2
0x400255f	           0xfb600	                   movzx eax, byte [rax]	       936	state.c	FUNCTION_25	IF_3	SWITCH_2
0x4002562	           0xfbec0	                           movsx eax, al	       936	state.c	FUNCTION_25	IF_3	SWITCH_2
0x4002565	          0x8945a8	             mov dword [rbp - 0x58], eax	       936	state.c	FUNCTION_25	IF_3	SWITCH_2
0x4002568	            0xeb0a	                           jmp 0x4002574	       937	state.c	FUNCTION_25	IF_3	SWITCH_2
0x400256a	      0xb800000000	                              mov eax, 0	       939	state.c	FUNCTION_25	IF_3	SWITCH_2
0x400256f	      0xe99e200000	                           jmp 0x4004612	       939	state.c	FUNCTION_25	IF_3	SWITCH_2
0x4002574	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       943	state.c	FUNCTION_25
0x4002578	        0x488b4030	            mov rax, qword [rax + 0x30] 	       943	state.c	FUNCTION_25
0x400257c	        0x488945c0	             mov qword [rbp - 0x40], rax	       943	state.c	FUNCTION_25
0x4002580	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       951	state.c	FUNCTION_25	SWITCH_3
0x4002583	          0xc1e010	                           shl eax, 0x10	       951	state.c	FUNCTION_25	SWITCH_3
0x4002586	            0x89c2	                            mov edx, eax	       951	state.c	FUNCTION_25	SWITCH_3
0x4002588	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       951	state.c	FUNCTION_25	SWITCH_3
0x400258b	          0xc1e008	                              shl eax, 8	       951	state.c	FUNCTION_25	SWITCH_3
0x400258e	             0x9c2	                             or edx, eax	       951	state.c	FUNCTION_25	SWITCH_3
0x4002590	         0xfbe4588	            movsx eax, byte [rbp - 0x78]	       951	state.c	FUNCTION_25	SWITCH_3
0x4002594	             0x9d0	                             or eax, edx	       951	state.c	FUNCTION_25	SWITCH_3
0x4002596	          0x83f865	                           cmp eax, 0x65	       951	state.c	FUNCTION_25	SWITCH_3
0x4002599	     0xf846f120000	                            je 0x400380e	       951	state.c	FUNCTION_25	SWITCH_3
0x400259f	          0x83f865	                           cmp eax, 0x65	       951	state.c	FUNCTION_25	SWITCH_3
0x40025a2	     0xf8f1e010000	                            jg 0x40026c6	       951	state.c	FUNCTION_25	SWITCH_3
0x40025a8	          0x83f84b	                           cmp eax, 0x4b	       951	state.c	FUNCTION_25	SWITCH_3
0x40025ab	     0xf8485090000	                            je 0x4002f36	       951	state.c	FUNCTION_25	SWITCH_3
0x40025b1	          0x83f84b	                           cmp eax, 0x4b	       951	state.c	FUNCTION_25	SWITCH_3
0x40025b4	     0xf8f86000000	                            jg 0x4002640	       951	state.c	FUNCTION_25	SWITCH_3
0x40025ba	          0x83f845	                           cmp eax, 0x45	       951	state.c	FUNCTION_25	SWITCH_3
0x40025bd	     0xf84d3040000	                            je 0x4002a96	       951	state.c	FUNCTION_25	SWITCH_3
0x40025c3	          0x83f845	                           cmp eax, 0x45	       951	state.c	FUNCTION_25	SWITCH_3
0x40025c6	            0x7f3c	                            jg 0x4002604	       951	state.c	FUNCTION_25	SWITCH_3
0x40025c8	          0x83f842	                           cmp eax, 0x42	       951	state.c	FUNCTION_25	SWITCH_3
0x40025cb	     0xf84ab030000	                            je 0x400297c	       951	state.c	FUNCTION_25	SWITCH_3
0x40025d1	          0x83f842	                           cmp eax, 0x42	       951	state.c	FUNCTION_25	SWITCH_3
0x40025d4	            0x7f17	                            jg 0x40025ed	       951	state.c	FUNCTION_25	SWITCH_3
0x40025d6	          0x83f840	                           cmp eax, 0x40	       951	state.c	FUNCTION_25	SWITCH_3
0x40025d9	     0xf8425020000	                            je 0x4002804	       951	state.c	FUNCTION_25	SWITCH_3
0x40025df	          0x83f841	                           cmp eax, 0x41	       951	state.c	FUNCTION_25	SWITCH_3
0x40025e2	     0xf8436030000	                            je 0x400291e	       951	state.c	FUNCTION_25	SWITCH_3
0x40025e8	      0xe9341d0000	                           jmp 0x4004321	       951	state.c	FUNCTION_25	SWITCH_3
0x40025ed	          0x83f843	                           cmp eax, 0x43	       951	state.c	FUNCTION_25	SWITCH_3
0x40025f0	     0xf84e4030000	                            je 0x40029da	       951	state.c	FUNCTION_25	SWITCH_3
0x40025f6	          0x83f844	                           cmp eax, 0x44	       951	state.c	FUNCTION_25	SWITCH_3
0x40025f9	     0xf8439040000	                            je 0x4002a38	       951	state.c	FUNCTION_25	SWITCH_3
0x40025ff	      0xe91d1d0000	                           jmp 0x4004321	       951	state.c	FUNCTION_25	SWITCH_3
0x4002604	          0x83f848	                           cmp eax, 0x48	       951	state.c	FUNCTION_25	SWITCH_3
0x4002607	     0xf84a2050000	                            je 0x4002baf	       951	state.c	FUNCTION_25	SWITCH_3
0x400260d	          0x83f848	                           cmp eax, 0x48	       951	state.c	FUNCTION_25	SWITCH_3
0x4002610	            0x7f17	                            jg 0x4002629	       951	state.c	FUNCTION_25	SWITCH_3
0x4002612	          0x83f846	                           cmp eax, 0x46	       951	state.c	FUNCTION_25	SWITCH_3
0x4002615	     0xf84e4040000	                            je 0x4002aff	       951	state.c	FUNCTION_25	SWITCH_3
0x400261b	          0x83f847	                           cmp eax, 0x47	       951	state.c	FUNCTION_25	SWITCH_3
0x400261e	     0xf8444050000	                            je 0x4002b68	       951	state.c	FUNCTION_25	SWITCH_3
0x4002624	      0xe9f81c0000	                           jmp 0x4004321	       951	state.c	FUNCTION_25	SWITCH_3
0x4002629	          0x83f849	                           cmp eax, 0x49	       951	state.c	FUNCTION_25	SWITCH_3
0x400262c	     0xf8462060000	                            je 0x4002c94	       951	state.c	FUNCTION_25	SWITCH_3
0x4002632	          0x83f84a	                           cmp eax, 0x4a	       951	state.c	FUNCTION_25	SWITCH_3
0x4002635	     0xf84af060000	                            je 0x4002cea	       951	state.c	FUNCTION_25	SWITCH_3
0x400263b	      0xe9e11c0000	                           jmp 0x4004321	       951	state.c	FUNCTION_25	SWITCH_3
0x4002640	          0x83f858	                           cmp eax, 0x58	       951	state.c	FUNCTION_25	SWITCH_3
0x4002643	     0xf84c60e0000	                            je 0x400350f	       951	state.c	FUNCTION_25	SWITCH_3
0x4002649	          0x83f858	                           cmp eax, 0x58	       951	state.c	FUNCTION_25	SWITCH_3
0x400264c	            0x7f3c	                            jg 0x400268a	       951	state.c	FUNCTION_25	SWITCH_3
0x400264e	          0x83f850	                           cmp eax, 0x50	       951	state.c	FUNCTION_25	SWITCH_3
0x4002651	     0xf84ee0b0000	                            je 0x4003245	       951	state.c	FUNCTION_25	SWITCH_3
0x4002657	          0x83f850	                           cmp eax, 0x50	       951	state.c	FUNCTION_25	SWITCH_3
0x400265a	            0x7f17	                            jg 0x4002673	       951	state.c	FUNCTION_25	SWITCH_3
0x400265c	          0x83f84c	                           cmp eax, 0x4c	       951	state.c	FUNCTION_25	SWITCH_3
0x400265f	     0xf84040a0000	                            je 0x4003069	       951	state.c	FUNCTION_25	SWITCH_3
0x4002665	          0x83f84d	                           cmp eax, 0x4d	       951	state.c	FUNCTION_25	SWITCH_3
0x4002668	     0xf84eb0a0000	                            je 0x4003159	       951	state.c	FUNCTION_25	SWITCH_3
0x400266e	      0xe9ae1c0000	                           jmp 0x4004321	       951	state.c	FUNCTION_25	SWITCH_3
0x4002673	          0x83f853	                           cmp eax, 0x53	       951	state.c	FUNCTION_25	SWITCH_3
0x4002676	     0xf84df0c0000	                            je 0x400335b	       951	state.c	FUNCTION_25	SWITCH_3
0x400267c	          0x83f854	                           cmp eax, 0x54	       951	state.c	FUNCTION_25	SWITCH_3
0x400267f	     0xf84ae0d0000	                            je 0x4003433	       951	state.c	FUNCTION_25	SWITCH_3
0x4002685	      0xe9971c0000	                           jmp 0x4004321	       951	state.c	FUNCTION_25	SWITCH_3
0x400268a	          0x83f861	                           cmp eax, 0x61	       951	state.c	FUNCTION_25	SWITCH_3
0x400268d	     0xf8422100000	                            je 0x40036b5	       951	state.c	FUNCTION_25	SWITCH_3
0x4002693	          0x83f861	                           cmp eax, 0x61	       951	state.c	FUNCTION_25	SWITCH_3
0x4002696	            0x7f17	                            jg 0x40026af	       951	state.c	FUNCTION_25	SWITCH_3
0x4002698	          0x83f85a	                           cmp eax, 0x5a	       951	state.c	FUNCTION_25	SWITCH_3
0x400269b	     0xf84770f0000	                            je 0x4003618	       951	state.c	FUNCTION_25	SWITCH_3
0x40026a1	          0x83f860	                           cmp eax, 0x60	       951	state.c	FUNCTION_25	SWITCH_3
0x40026a4	     0xf84c40f0000	                            je 0x400366e	       951	state.c	FUNCTION_25	SWITCH_3
0x40026aa	      0xe9721c0000	                           jmp 0x4004321	       951	state.c	FUNCTION_25	SWITCH_3
0x40026af	          0x83f863	                           cmp eax, 0x63	       951	state.c	FUNCTION_25	SWITCH_3
0x40026b2	     0xf845b100000	                            je 0x4003713	       951	state.c	FUNCTION_25	SWITCH_3
0x40026b8	          0x83f864	                           cmp eax, 0x64	       951	state.c	FUNCTION_25	SWITCH_3
0x40026bb	     0xf84dd100000	                            je 0x400379e	       951	state.c	FUNCTION_25	SWITCH_3
0x40026c1	      0xe95b1c0000	                           jmp 0x4004321	       951	state.c	FUNCTION_25	SWITCH_3
0x40026c6	      0x3d70210000	                         cmp eax, 0x2170	       951	state.c	FUNCTION_25	SWITCH_3
0x40026cb	     0xf84ac150000	                            je 0x4003c7d	       951	state.c	FUNCTION_25	SWITCH_3
0x40026d1	      0x3d70210000	                         cmp eax, 0x2170	       951	state.c	FUNCTION_25	SWITCH_3
0x40026d6	     0xf8f86000000	                            jg 0x4002762	       951	state.c	FUNCTION_25	SWITCH_3
0x40026dc	          0x83f86c	                           cmp eax, 0x6c	       951	state.c	FUNCTION_25	SWITCH_3
0x40026df	     0xf8434140000	                            je 0x4003b19	       951	state.c	FUNCTION_25	SWITCH_3
0x40026e5	          0x83f86c	                           cmp eax, 0x6c	       951	state.c	FUNCTION_25	SWITCH_3
0x40026e8	            0x7f3c	                            jg 0x4002726	       951	state.c	FUNCTION_25	SWITCH_3
0x40026ea	          0x83f868	                           cmp eax, 0x68	       951	state.c	FUNCTION_25	SWITCH_3
0x40026ed	     0xf84ee120000	                            je 0x40039e1	       951	state.c	FUNCTION_25	SWITCH_3
0x40026f3	          0x83f868	                           cmp eax, 0x68	       951	state.c	FUNCTION_25	SWITCH_3
0x40026f6	            0x7f17	                            jg 0x400270f	       951	state.c	FUNCTION_25	SWITCH_3
0x40026f8	          0x83f866	                           cmp eax, 0x66	       951	state.c	FUNCTION_25	SWITCH_3
0x40026fb	     0xf846b110000	                            je 0x400386c	       951	state.c	FUNCTION_25	SWITCH_3
0x4002701	          0x83f867	                           cmp eax, 0x67	       951	state.c	FUNCTION_25	SWITCH_3
0x4002704	     0xf8447120000	                            je 0x4003951	       951	state.c	FUNCTION_25	SWITCH_3
0x400270a	      0xe9121c0000	                           jmp 0x4004321	       951	state.c	FUNCTION_25	SWITCH_3
0x400270f	          0x83f86a	                           cmp eax, 0x6a	       951	state.c	FUNCTION_25	SWITCH_3
0x4002712	     0xf8445130000	                            je 0x4003a5d	       951	state.c	FUNCTION_25	SWITCH_3
0x4002718	          0x83f86b	                           cmp eax, 0x6b	       951	state.c	FUNCTION_25	SWITCH_3
0x400271b	     0xf849a130000	                            je 0x4003abb	       951	state.c	FUNCTION_25	SWITCH_3
0x4002721	      0xe9fb1b0000	                           jmp 0x4004321	       951	state.c	FUNCTION_25	SWITCH_3
0x4002726	          0x83f872	                           cmp eax, 0x72	       951	state.c	FUNCTION_25	SWITCH_3
0x4002729	     0xf8457170000	                            je 0x4003e86	       951	state.c	FUNCTION_25	SWITCH_3
0x400272f	          0x83f872	                           cmp eax, 0x72	       951	state.c	FUNCTION_25	SWITCH_3
0x4002732	            0x7f17	                            jg 0x400274b	       951	state.c	FUNCTION_25	SWITCH_3
0x4002734	          0x83f86d	                           cmp eax, 0x6d	       951	state.c	FUNCTION_25	SWITCH_3
0x4002737	     0xf8458140000	                            je 0x4003b95	       951	state.c	FUNCTION_25	SWITCH_3
0x400273d	          0x83f86e	                           cmp eax, 0x6e	       951	state.c	FUNCTION_25	SWITCH_3
0x4002740	     0xf846a140000	                            je 0x4003bb0	       951	state.c	FUNCTION_25	SWITCH_3
0x4002746	      0xe9d61b0000	                           jmp 0x4004321	       951	state.c	FUNCTION_25	SWITCH_3
0x400274b	          0x83f873	                           cmp eax, 0x73	       951	state.c	FUNCTION_25	SWITCH_3
0x400274e	     0xf847f180000	                            je 0x4003fd3	       951	state.c	FUNCTION_25	SWITCH_3
0x4002754	          0x83f874	                           cmp eax, 0x74	       951	state.c	FUNCTION_25	SWITCH_3
0x4002757	     0xf84be190000	                            je 0x400411b	       951	state.c	FUNCTION_25	SWITCH_3
0x400275d	      0xe9bf1b0000	                           jmp 0x4004321	       951	state.c	FUNCTION_25	SWITCH_3
0x4002762	      0x3d6e3f0000	                         cmp eax, 0x3f6e	       951	state.c	FUNCTION_25	SWITCH_3
0x4002767	     0xf8443140000	                            je 0x4003bb0	       951	state.c	FUNCTION_25	SWITCH_3
0x400276d	      0x3d6e3f0000	                         cmp eax, 0x3f6e	       951	state.c	FUNCTION_25	SWITCH_3
0x4002772	            0x7f48	                            jg 0x40027bc	       951	state.c	FUNCTION_25	SWITCH_3
0x4002774	      0x3d4b3f0000	                         cmp eax, 0x3f4b	       951	state.c	FUNCTION_25	SWITCH_3
0x4002779	     0xf84b7070000	                            je 0x4002f36	       951	state.c	FUNCTION_25	SWITCH_3
0x400277f	      0x3d4b3f0000	                         cmp eax, 0x3f4b	       951	state.c	FUNCTION_25	SWITCH_3
0x4002784	            0x7f1b	                            jg 0x40027a1	       951	state.c	FUNCTION_25	SWITCH_3
0x4002786	      0x3d633e0000	                         cmp eax, 0x3e63	       951	state.c	FUNCTION_25	SWITCH_3
0x400278b	     0xf84d90f0000	                            je 0x400376a	       951	state.c	FUNCTION_25	SWITCH_3
0x4002791	      0x3d4a3f0000	                         cmp eax, 0x3f4a	       951	state.c	FUNCTION_25	SWITCH_3
0x4002796	     0xf844e050000	                            je 0x4002cea	       951	state.c	FUNCTION_25	SWITCH_3
0x400279c	      0xe9801b0000	                           jmp 0x4004321	       951	state.c	FUNCTION_25	SWITCH_3
0x40027a1	      0x3d683f0000	                         cmp eax, 0x3f68	       951	state.c	FUNCTION_25	SWITCH_3
0x40027a6	     0xf8473120000	                            je 0x4003a1f	       951	state.c	FUNCTION_25	SWITCH_3
0x40027ac	      0x3d6c3f0000	                         cmp eax, 0x3f6c	       951	state.c	FUNCTION_25	SWITCH_3
0x40027b1	     0xf84a0130000	                            je 0x4003b57	       951	state.c	FUNCTION_25	SWITCH_3
0x40027b7	      0xe9651b0000	                           jmp 0x4004321	       951	state.c	FUNCTION_25	SWITCH_3
0x40027bc	      0x3d703f2400	                       cmp eax, 0x243f70	       951	state.c	FUNCTION_25	SWITCH_3
0x40027c1	     0xf84cc140000	                            je 0x4003c93	       951	state.c	FUNCTION_25	SWITCH_3
0x40027c7	      0x3d703f2400	                       cmp eax, 0x243f70	       951	state.c	FUNCTION_25	SWITCH_3
0x40027cc	            0x7f1b	                            jg 0x40027e9	       951	state.c	FUNCTION_25	SWITCH_3
0x40027ce	      0x3d71002000	                       cmp eax, 0x200071	       951	state.c	FUNCTION_25	SWITCH_3
0x40027d3	     0xf84db140000	                            je 0x4003cb4	       951	state.c	FUNCTION_25	SWITCH_3
0x40027d9	      0x3d71002200	                       cmp eax, 0x220071	       951	state.c	FUNCTION_25	SWITCH_3
0x40027de	     0xf8432160000	                            je 0x4003e16	       951	state.c	FUNCTION_25	SWITCH_3
0x40027e4	      0xe9381b0000	                           jmp 0x4004321	       951	state.c	FUNCTION_25	SWITCH_3
0x40027e9	      0x3d7d002700	                       cmp eax, 0x27007d	       951	state.c	FUNCTION_25	SWITCH_3
0x40027ee	     0xf847f190000	                            je 0x4004173	       951	state.c	FUNCTION_25	SWITCH_3
0x40027f4	      0x3d7e002700	                       cmp eax, 0x27007e	       951	state.c	FUNCTION_25	SWITCH_3
0x40027f9	     0xf844d1a0000	                            je 0x400424c	       951	state.c	FUNCTION_25	SWITCH_3
0x40027ff	      0xe91d1b0000	                           jmp 0x4004321	       951	state.c	FUNCTION_25	SWITCH_3
0x4002804	        0x488b4590	             mov rax, qword [rbp - 0x70]	       953	state.c	FUNCTION_25	SWITCH_3	CALL_1
0x4002808	          0x488b00	                    mov rax, qword [rax]	       953	state.c	FUNCTION_25	SWITCH_3	CALL_1
0x400280b	      0x25ffffff7f	                     and eax, 0x7fffffff	       953	state.c	FUNCTION_25	SWITCH_3	CALL_1
0x4002810	    0x483dffffff3f	                     cmp rax, 0x3fffffff	       953	state.c	FUNCTION_25	SWITCH_3	CALL_1
0x4002816	            0x741f	                            je 0x4002837	       953	state.c	FUNCTION_25	SWITCH_3	CALL_1
0x4002818	        0x488b4590	             mov rax, qword [rbp - 0x70]	       953	state.c	FUNCTION_25	SWITCH_3	CALL_1
0x400281c	          0x488b00	                    mov rax, qword [rax]	       953	state.c	FUNCTION_25	SWITCH_3	CALL_1
0x400281f	      0x25ffffff7f	                     and eax, 0x7fffffff	       953	state.c	FUNCTION_25	SWITCH_3	CALL_1
0x4002824	          0x4885c0	                           test rax, rax	       953	state.c	FUNCTION_25	SWITCH_3	CALL_1
0x4002827	            0x740e	                            je 0x4002837	       953	state.c	FUNCTION_25	SWITCH_3	CALL_1
0x4002829	        0x488b4590	             mov rax, qword [rbp - 0x70]	       953	state.c	FUNCTION_25	SWITCH_3	CALL_1
0x400282d	          0x488b00	                    mov rax, qword [rax]	       953	state.c	FUNCTION_25	SWITCH_3	CALL_1
0x4002830	      0x25ffffff7f	                     and eax, 0x7fffffff	       953	state.c	FUNCTION_25	SWITCH_3	CALL_1
0x4002835	            0xeb05	                           jmp 0x400283c	       953	state.c	FUNCTION_25	SWITCH_3	CALL_1
0x4002837	      0xb801000000	                              mov eax, 1	       953	state.c	FUNCTION_25	SWITCH_3	CALL_1
0x400283c	          0x8945bc	             mov dword [rbp - 0x44], eax	       953	state.c	FUNCTION_25	SWITCH_3	CALL_1
0x400283f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       955	state.c	FUNCTION_25	SWITCH_3	IF_5	CALL_2
0x4002843	          0x4889c7	                            mov rdi, rax	       955	state.c	FUNCTION_25	SWITCH_3	IF_5	CALL_2
0x4002846	      0xe8c2dfffff	      call sym.is_cursor_in_scrollregion	       955	state.c	FUNCTION_25	SWITCH_3	IF_5	CALL_2
0x400284b	            0x85c0	                           test eax, eax	       955	state.c	FUNCTION_25	SWITCH_3	IF_5	CALL_2
0x400284d	     0xf842e1b0000	                            je 0x4004381	       955	state.c	FUNCTION_25	SWITCH_3	IF_5	CALL_2
0x4002853	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       958	state.c	FUNCTION_25	SWITCH_3
0x4002857	          0x8b4030	            mov eax, dword [rax + 0x30] 	       958	state.c	FUNCTION_25	SWITCH_3
0x400285a	          0x8945e0	             mov dword [rbp - 0x20], eax	       958	state.c	FUNCTION_25	SWITCH_3
0x400285d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       959	state.c	FUNCTION_25	SWITCH_3
0x4002861	          0x8b4030	            mov eax, dword [rax + 0x30] 	       959	state.c	FUNCTION_25	SWITCH_3
0x4002864	          0x83c001	                              add eax, 1	       959	state.c	FUNCTION_25	SWITCH_3
0x4002867	          0x8945e4	             mov dword [rbp - 0x1c], eax	       959	state.c	FUNCTION_25	SWITCH_3
0x400286a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       960	state.c	FUNCTION_25	SWITCH_3
0x400286e	          0x8b4034	            mov eax, dword [rax + 0x34] 	       960	state.c	FUNCTION_25	SWITCH_3
0x4002871	          0x8945e8	             mov dword [rbp - 0x18], eax	       960	state.c	FUNCTION_25	SWITCH_3
0x4002874	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       961	state.c	FUNCTION_25	SWITCH_3	IF_6
0x4002878	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	       961	state.c	FUNCTION_25	SWITCH_3	IF_6
0x400287f	          0x83e010	                           and eax, 0x10	       961	state.c	FUNCTION_25	SWITCH_3	IF_6
0x4002882	            0x84c0	                             test al, al	       961	state.c	FUNCTION_25	SWITCH_3	IF_6
0x4002884	            0x7432	                            je 0x40028b8	       961	state.c	FUNCTION_25	SWITCH_3	IF_6
0x4002886	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       962	state.c	FUNCTION_25	SWITCH_3	CALL_3
0x400288a	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	       962	state.c	FUNCTION_25	SWITCH_3	CALL_3
0x4002891	          0x83e010	                           and eax, 0x10	       962	state.c	FUNCTION_25	SWITCH_3	CALL_3
0x4002894	            0x84c0	                             test al, al	       962	state.c	FUNCTION_25	SWITCH_3	CALL_3
0x4002896	            0x7414	                            je 0x40028ac	       962	state.c	FUNCTION_25	SWITCH_3	CALL_3
0x4002898	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       962	state.c	FUNCTION_25	SWITCH_3	CALL_3
0x400289c	          0x8b4048	            mov eax, dword [rax + 0x48] 	       962	state.c	FUNCTION_25	SWITCH_3	CALL_3
0x400289f	            0x85c0	                           test eax, eax	       962	state.c	FUNCTION_25	SWITCH_3	CALL_3
0x40028a1	            0x7809	                            js 0x40028ac	       962	state.c	FUNCTION_25	SWITCH_3	CALL_3
0x40028a3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       962	state.c	FUNCTION_25	SWITCH_3	CALL_3
0x40028a7	          0x8b4048	            mov eax, dword [rax + 0x48] 	       962	state.c	FUNCTION_25	SWITCH_3	CALL_3
0x40028aa	            0xeb07	                           jmp 0x40028b3	       962	state.c	FUNCTION_25	SWITCH_3	CALL_3
0x40028ac	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       962	state.c	FUNCTION_25	SWITCH_3	CALL_3
0x40028b0	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       962	state.c	FUNCTION_25	SWITCH_3	CALL_3
0x40028b3	          0x8945ec	             mov dword [rbp - 0x14], eax	       962	state.c	FUNCTION_25	SWITCH_3	CALL_3
0x40028b6	            0xeb3e	                           jmp 0x40028f6	       962	state.c	FUNCTION_25	SWITCH_3	CALL_3
0x40028b8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x40028bc	        0x488b5058	            mov rdx, qword [rax + 0x58] 	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x40028c0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x40028c4	          0x8b4030	            mov eax, dword [rax + 0x30] 	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x40028c7	            0x4898	                                    cdqe	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x40028c9	        0x48c1e002	                              shl rax, 2	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x40028cd	          0x4801d0	                            add rax, rdx	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x40028d0	           0xfb600	                   movzx eax, byte [rax]	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x40028d3	          0x83e001	                              and eax, 1	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x40028d6	            0x84c0	                             test al, al	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x40028d8	            0x7412	                            je 0x40028ec	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x40028da	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x40028de	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x40028e1	            0x89c2	                            mov edx, eax	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x40028e3	          0xc1ea1f	                           shr edx, 0x1f	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x40028e6	             0x1d0	                            add eax, edx	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x40028e8	            0xd1f8	                              sar eax, 1	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x40028ea	            0xeb07	                           jmp 0x40028f3	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x40028ec	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x40028f0	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x40028f3	          0x8945ec	             mov dword [rbp - 0x14], eax	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x40028f6	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       966	state.c	FUNCTION_25	SWITCH_3	CALL_5
0x40028f9	            0xf7d8	                                 neg eax	       966	state.c	FUNCTION_25	SWITCH_3	CALL_5
0x40028fb	            0x89c1	                            mov ecx, eax	       966	state.c	FUNCTION_25	SWITCH_3	CALL_5
0x40028fd	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       966	state.c	FUNCTION_25	SWITCH_3	CALL_5
0x4002901	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       966	state.c	FUNCTION_25	SWITCH_3	CALL_5
0x4002905	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       966	state.c	FUNCTION_25	SWITCH_3	CALL_5
0x4002909	          0x4189c8	                            mov r8d, ecx	       966	state.c	FUNCTION_25	SWITCH_3	CALL_5
0x400290c	      0xb900000000	                              mov ecx, 0	       966	state.c	FUNCTION_25	SWITCH_3	CALL_5
0x4002911	          0x4889c7	                            mov rdi, rax	       966	state.c	FUNCTION_25	SWITCH_3	CALL_5
0x4002914	      0xe85adaffff	                         call sym.scroll	       966	state.c	FUNCTION_25	SWITCH_3	CALL_5
0x4002919	      0xe9941a0000	                           jmp 0x40043b2	       968	state.c	FUNCTION_25	SWITCH_3
0x400291e	        0x488b4590	             mov rax, qword [rbp - 0x70]	       971	state.c	FUNCTION_25	SWITCH_3	CALL_6
0x4002922	          0x488b00	                    mov rax, qword [rax]	       971	state.c	FUNCTION_25	SWITCH_3	CALL_6
0x4002925	      0x25ffffff7f	                     and eax, 0x7fffffff	       971	state.c	FUNCTION_25	SWITCH_3	CALL_6
0x400292a	    0x483dffffff3f	                     cmp rax, 0x3fffffff	       971	state.c	FUNCTION_25	SWITCH_3	CALL_6
0x4002930	            0x741f	                            je 0x4002951	       971	state.c	FUNCTION_25	SWITCH_3	CALL_6
0x4002932	        0x488b4590	             mov rax, qword [rbp - 0x70]	       971	state.c	FUNCTION_25	SWITCH_3	CALL_6
0x4002936	          0x488b00	                    mov rax, qword [rax]	       971	state.c	FUNCTION_25	SWITCH_3	CALL_6
0x4002939	      0x25ffffff7f	                     and eax, 0x7fffffff	       971	state.c	FUNCTION_25	SWITCH_3	CALL_6
0x400293e	          0x4885c0	                           test rax, rax	       971	state.c	FUNCTION_25	SWITCH_3	CALL_6
0x4002941	            0x740e	                            je 0x4002951	       971	state.c	FUNCTION_25	SWITCH_3	CALL_6
0x4002943	        0x488b4590	             mov rax, qword [rbp - 0x70]	       971	state.c	FUNCTION_25	SWITCH_3	CALL_6
0x4002947	          0x488b00	                    mov rax, qword [rax]	       971	state.c	FUNCTION_25	SWITCH_3	CALL_6
0x400294a	      0x25ffffff7f	                     and eax, 0x7fffffff	       971	state.c	FUNCTION_25	SWITCH_3	CALL_6
0x400294f	            0xeb05	                           jmp 0x4002956	       971	state.c	FUNCTION_25	SWITCH_3	CALL_6
0x4002951	      0xb801000000	                              mov eax, 1	       971	state.c	FUNCTION_25	SWITCH_3	CALL_6
0x4002956	          0x8945bc	             mov dword [rbp - 0x44], eax	       971	state.c	FUNCTION_25	SWITCH_3	CALL_6
0x4002959	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       972	state.c	FUNCTION_25	SWITCH_3
0x400295d	          0x8b4030	            mov eax, dword [rax + 0x30] 	       972	state.c	FUNCTION_25	SWITCH_3
0x4002960	          0x2b45bc	             sub eax, dword [rbp - 0x44]	       972	state.c	FUNCTION_25	SWITCH_3
0x4002963	            0x89c2	                            mov edx, eax	       972	state.c	FUNCTION_25	SWITCH_3
0x4002965	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       972	state.c	FUNCTION_25	SWITCH_3
0x4002969	          0x895030	             mov dword [rax + 0x30], edx	       972	state.c	FUNCTION_25	SWITCH_3
0x400296c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       973	state.c	FUNCTION_25	SWITCH_3
0x4002970	    0xc74038000000	               mov dword [rax + 0x38], 0	       973	state.c	FUNCTION_25	SWITCH_3
0x4002977	      0xe9361a0000	                           jmp 0x40043b2	       974	state.c	FUNCTION_25	SWITCH_3
0x400297c	        0x488b4590	             mov rax, qword [rbp - 0x70]	       977	state.c	FUNCTION_25	SWITCH_3	CALL_7
0x4002980	          0x488b00	                    mov rax, qword [rax]	       977	state.c	FUNCTION_25	SWITCH_3	CALL_7
0x4002983	      0x25ffffff7f	                     and eax, 0x7fffffff	       977	state.c	FUNCTION_25	SWITCH_3	CALL_7
0x4002988	    0x483dffffff3f	                     cmp rax, 0x3fffffff	       977	state.c	FUNCTION_25	SWITCH_3	CALL_7
0x400298e	            0x741f	                            je 0x40029af	       977	state.c	FUNCTION_25	SWITCH_3	CALL_7
0x4002990	        0x488b4590	             mov rax, qword [rbp - 0x70]	       977	state.c	FUNCTION_25	SWITCH_3	CALL_7
0x4002994	          0x488b00	                    mov rax, qword [rax]	       977	state.c	FUNCTION_25	SWITCH_3	CALL_7
0x4002997	      0x25ffffff7f	                     and eax, 0x7fffffff	       977	state.c	FUNCTION_25	SWITCH_3	CALL_7
0x400299c	          0x4885c0	                           test rax, rax	       977	state.c	FUNCTION_25	SWITCH_3	CALL_7
0x400299f	            0x740e	                            je 0x40029af	       977	state.c	FUNCTION_25	SWITCH_3	CALL_7
0x40029a1	        0x488b4590	             mov rax, qword [rbp - 0x70]	       977	state.c	FUNCTION_25	SWITCH_3	CALL_7
0x40029a5	          0x488b00	                    mov rax, qword [rax]	       977	state.c	FUNCTION_25	SWITCH_3	CALL_7
0x40029a8	      0x25ffffff7f	                     and eax, 0x7fffffff	       977	state.c	FUNCTION_25	SWITCH_3	CALL_7
0x40029ad	            0xeb05	                           jmp 0x40029b4	       977	state.c	FUNCTION_25	SWITCH_3	CALL_7
0x40029af	      0xb801000000	                              mov eax, 1	       977	state.c	FUNCTION_25	SWITCH_3	CALL_7
0x40029b4	          0x8945bc	             mov dword [rbp - 0x44], eax	       977	state.c	FUNCTION_25	SWITCH_3	CALL_7
0x40029b7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       978	state.c	FUNCTION_25	SWITCH_3
0x40029bb	          0x8b5030	            mov edx, dword [rax + 0x30] 	       978	state.c	FUNCTION_25	SWITCH_3
0x40029be	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       978	state.c	FUNCTION_25	SWITCH_3
0x40029c1	             0x1c2	                            add edx, eax	       978	state.c	FUNCTION_25	SWITCH_3
0x40029c3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       978	state.c	FUNCTION_25	SWITCH_3
0x40029c7	          0x895030	             mov dword [rax + 0x30], edx	       978	state.c	FUNCTION_25	SWITCH_3
0x40029ca	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       979	state.c	FUNCTION_25	SWITCH_3
0x40029ce	    0xc74038000000	               mov dword [rax + 0x38], 0	       979	state.c	FUNCTION_25	SWITCH_3
0x40029d5	      0xe9d8190000	                           jmp 0x40043b2	       980	state.c	FUNCTION_25	SWITCH_3
0x40029da	        0x488b4590	             mov rax, qword [rbp - 0x70]	       983	state.c	FUNCTION_25	SWITCH_3	CALL_8
0x40029de	          0x488b00	                    mov rax, qword [rax]	       983	state.c	FUNCTION_25	SWITCH_3	CALL_8
0x40029e1	      0x25ffffff7f	                     and eax, 0x7fffffff	       983	state.c	FUNCTION_25	SWITCH_3	CALL_8
0x40029e6	    0x483dffffff3f	                     cmp rax, 0x3fffffff	       983	state.c	FUNCTION_25	SWITCH_3	CALL_8
0x40029ec	            0x741f	                            je 0x4002a0d	       983	state.c	FUNCTION_25	SWITCH_3	CALL_8
0x40029ee	        0x488b4590	             mov rax, qword [rbp - 0x70]	       983	state.c	FUNCTION_25	SWITCH_3	CALL_8
0x40029f2	          0x488b00	                    mov rax, qword [rax]	       983	state.c	FUNCTION_25	SWITCH_3	CALL_8
0x40029f5	      0x25ffffff7f	                     and eax, 0x7fffffff	       983	state.c	FUNCTION_25	SWITCH_3	CALL_8
0x40029fa	          0x4885c0	                           test rax, rax	       983	state.c	FUNCTION_25	SWITCH_3	CALL_8
0x40029fd	            0x740e	                            je 0x4002a0d	       983	state.c	FUNCTION_25	SWITCH_3	CALL_8
0x40029ff	        0x488b4590	             mov rax, qword [rbp - 0x70]	       983	state.c	FUNCTION_25	SWITCH_3	CALL_8
0x4002a03	          0x488b00	                    mov rax, qword [rax]	       983	state.c	FUNCTION_25	SWITCH_3	CALL_8
0x4002a06	      0x25ffffff7f	                     and eax, 0x7fffffff	       983	state.c	FUNCTION_25	SWITCH_3	CALL_8
0x4002a0b	            0xeb05	                           jmp 0x4002a12	       983	state.c	FUNCTION_25	SWITCH_3	CALL_8
0x4002a0d	      0xb801000000	                              mov eax, 1	       983	state.c	FUNCTION_25	SWITCH_3	CALL_8
0x4002a12	          0x8945bc	             mov dword [rbp - 0x44], eax	       983	state.c	FUNCTION_25	SWITCH_3	CALL_8
0x4002a15	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       984	state.c	FUNCTION_25	SWITCH_3
0x4002a19	          0x8b5034	            mov edx, dword [rax + 0x34] 	       984	state.c	FUNCTION_25	SWITCH_3
0x4002a1c	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       984	state.c	FUNCTION_25	SWITCH_3
0x4002a1f	             0x1c2	                            add edx, eax	       984	state.c	FUNCTION_25	SWITCH_3
0x4002a21	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       984	state.c	FUNCTION_25	SWITCH_3
0x4002a25	          0x895034	             mov dword [rax + 0x34], edx	       984	state.c	FUNCTION_25	SWITCH_3
0x4002a28	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       985	state.c	FUNCTION_25	SWITCH_3
0x4002a2c	    0xc74038000000	               mov dword [rax + 0x38], 0	       985	state.c	FUNCTION_25	SWITCH_3
0x4002a33	      0xe97a190000	                           jmp 0x40043b2	       986	state.c	FUNCTION_25	SWITCH_3
0x4002a38	        0x488b4590	             mov rax, qword [rbp - 0x70]	       989	state.c	FUNCTION_25	SWITCH_3	CALL_9
0x4002a3c	          0x488b00	                    mov rax, qword [rax]	       989	state.c	FUNCTION_25	SWITCH_3	CALL_9
0x4002a3f	      0x25ffffff7f	                     and eax, 0x7fffffff	       989	state.c	FUNCTION_25	SWITCH_3	CALL_9
0x4002a44	    0x483dffffff3f	                     cmp rax, 0x3fffffff	       989	state.c	FUNCTION_25	SWITCH_3	CALL_9
0x4002a4a	            0x741f	                            je 0x4002a6b	       989	state.c	FUNCTION_25	SWITCH_3	CALL_9
0x4002a4c	        0x488b4590	             mov rax, qword [rbp - 0x70]	       989	state.c	FUNCTION_25	SWITCH_3	CALL_9
0x4002a50	          0x488b00	                    mov rax, qword [rax]	       989	state.c	FUNCTION_25	SWITCH_3	CALL_9
0x4002a53	      0x25ffffff7f	                     and eax, 0x7fffffff	       989	state.c	FUNCTION_25	SWITCH_3	CALL_9
0x4002a58	          0x4885c0	                           test rax, rax	       989	state.c	FUNCTION_25	SWITCH_3	CALL_9
0x4002a5b	            0x740e	                            je 0x4002a6b	       989	state.c	FUNCTION_25	SWITCH_3	CALL_9
0x4002a5d	        0x488b4590	             mov rax, qword [rbp - 0x70]	       989	state.c	FUNCTION_25	SWITCH_3	CALL_9
0x4002a61	          0x488b00	                    mov rax, qword [rax]	       989	state.c	FUNCTION_25	SWITCH_3	CALL_9
0x4002a64	      0x25ffffff7f	                     and eax, 0x7fffffff	       989	state.c	FUNCTION_25	SWITCH_3	CALL_9
0x4002a69	            0xeb05	                           jmp 0x4002a70	       989	state.c	FUNCTION_25	SWITCH_3	CALL_9
0x4002a6b	      0xb801000000	                              mov eax, 1	       989	state.c	FUNCTION_25	SWITCH_3	CALL_9
0x4002a70	          0x8945bc	             mov dword [rbp - 0x44], eax	       989	state.c	FUNCTION_25	SWITCH_3	CALL_9
0x4002a73	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       990	state.c	FUNCTION_25	SWITCH_3
0x4002a77	          0x8b4034	            mov eax, dword [rax + 0x34] 	       990	state.c	FUNCTION_25	SWITCH_3
0x4002a7a	          0x2b45bc	             sub eax, dword [rbp - 0x44]	       990	state.c	FUNCTION_25	SWITCH_3
0x4002a7d	            0x89c2	                            mov edx, eax	       990	state.c	FUNCTION_25	SWITCH_3
0x4002a7f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       990	state.c	FUNCTION_25	SWITCH_3
0x4002a83	          0x895034	             mov dword [rax + 0x34], edx	       990	state.c	FUNCTION_25	SWITCH_3
0x4002a86	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       991	state.c	FUNCTION_25	SWITCH_3
0x4002a8a	    0xc74038000000	               mov dword [rax + 0x38], 0	       991	state.c	FUNCTION_25	SWITCH_3
0x4002a91	      0xe91c190000	                           jmp 0x40043b2	       992	state.c	FUNCTION_25	SWITCH_3
0x4002a96	        0x488b4590	             mov rax, qword [rbp - 0x70]	       995	state.c	FUNCTION_25	SWITCH_3	CALL_10
0x4002a9a	          0x488b00	                    mov rax, qword [rax]	       995	state.c	FUNCTION_25	SWITCH_3	CALL_10
0x4002a9d	      0x25ffffff7f	                     and eax, 0x7fffffff	       995	state.c	FUNCTION_25	SWITCH_3	CALL_10
0x4002aa2	    0x483dffffff3f	                     cmp rax, 0x3fffffff	       995	state.c	FUNCTION_25	SWITCH_3	CALL_10
0x4002aa8	            0x741f	                            je 0x4002ac9	       995	state.c	FUNCTION_25	SWITCH_3	CALL_10
0x4002aaa	        0x488b4590	             mov rax, qword [rbp - 0x70]	       995	state.c	FUNCTION_25	SWITCH_3	CALL_10
0x4002aae	          0x488b00	                    mov rax, qword [rax]	       995	state.c	FUNCTION_25	SWITCH_3	CALL_10
0x4002ab1	      0x25ffffff7f	                     and eax, 0x7fffffff	       995	state.c	FUNCTION_25	SWITCH_3	CALL_10
0x4002ab6	          0x4885c0	                           test rax, rax	       995	state.c	FUNCTION_25	SWITCH_3	CALL_10
0x4002ab9	            0x740e	                            je 0x4002ac9	       995	state.c	FUNCTION_25	SWITCH_3	CALL_10
0x4002abb	        0x488b4590	             mov rax, qword [rbp - 0x70]	       995	state.c	FUNCTION_25	SWITCH_3	CALL_10
0x4002abf	          0x488b00	                    mov rax, qword [rax]	       995	state.c	FUNCTION_25	SWITCH_3	CALL_10
0x4002ac2	      0x25ffffff7f	                     and eax, 0x7fffffff	       995	state.c	FUNCTION_25	SWITCH_3	CALL_10
0x4002ac7	            0xeb05	                           jmp 0x4002ace	       995	state.c	FUNCTION_25	SWITCH_3	CALL_10
0x4002ac9	      0xb801000000	                              mov eax, 1	       995	state.c	FUNCTION_25	SWITCH_3	CALL_10
0x4002ace	          0x8945bc	             mov dword [rbp - 0x44], eax	       995	state.c	FUNCTION_25	SWITCH_3	CALL_10
0x4002ad1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       996	state.c	FUNCTION_25	SWITCH_3
0x4002ad5	    0xc74034000000	               mov dword [rax + 0x34], 0	       996	state.c	FUNCTION_25	SWITCH_3
0x4002adc	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       997	state.c	FUNCTION_25	SWITCH_3
0x4002ae0	          0x8b5030	            mov edx, dword [rax + 0x30] 	       997	state.c	FUNCTION_25	SWITCH_3
0x4002ae3	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       997	state.c	FUNCTION_25	SWITCH_3
0x4002ae6	             0x1c2	                            add edx, eax	       997	state.c	FUNCTION_25	SWITCH_3
0x4002ae8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       997	state.c	FUNCTION_25	SWITCH_3
0x4002aec	          0x895030	             mov dword [rax + 0x30], edx	       997	state.c	FUNCTION_25	SWITCH_3
0x4002aef	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       998	state.c	FUNCTION_25	SWITCH_3
0x4002af3	    0xc74038000000	               mov dword [rax + 0x38], 0	       998	state.c	FUNCTION_25	SWITCH_3
0x4002afa	      0xe9b3180000	                           jmp 0x40043b2	       999	state.c	FUNCTION_25	SWITCH_3
0x4002aff	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1002	state.c	FUNCTION_25	SWITCH_3	CALL_11
0x4002b03	          0x488b00	                    mov rax, qword [rax]	      1002	state.c	FUNCTION_25	SWITCH_3	CALL_11
0x4002b06	      0x25ffffff7f	                     and eax, 0x7fffffff	      1002	state.c	FUNCTION_25	SWITCH_3	CALL_11
0x4002b0b	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1002	state.c	FUNCTION_25	SWITCH_3	CALL_11
0x4002b11	            0x741f	                            je 0x4002b32	      1002	state.c	FUNCTION_25	SWITCH_3	CALL_11
0x4002b13	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1002	state.c	FUNCTION_25	SWITCH_3	CALL_11
0x4002b17	          0x488b00	                    mov rax, qword [rax]	      1002	state.c	FUNCTION_25	SWITCH_3	CALL_11
0x4002b1a	      0x25ffffff7f	                     and eax, 0x7fffffff	      1002	state.c	FUNCTION_25	SWITCH_3	CALL_11
0x4002b1f	          0x4885c0	                           test rax, rax	      1002	state.c	FUNCTION_25	SWITCH_3	CALL_11
0x4002b22	            0x740e	                            je 0x4002b32	      1002	state.c	FUNCTION_25	SWITCH_3	CALL_11
0x4002b24	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1002	state.c	FUNCTION_25	SWITCH_3	CALL_11
0x4002b28	          0x488b00	                    mov rax, qword [rax]	      1002	state.c	FUNCTION_25	SWITCH_3	CALL_11
0x4002b2b	      0x25ffffff7f	                     and eax, 0x7fffffff	      1002	state.c	FUNCTION_25	SWITCH_3	CALL_11
0x4002b30	            0xeb05	                           jmp 0x4002b37	      1002	state.c	FUNCTION_25	SWITCH_3	CALL_11
0x4002b32	      0xb801000000	                              mov eax, 1	      1002	state.c	FUNCTION_25	SWITCH_3	CALL_11
0x4002b37	          0x8945bc	             mov dword [rbp - 0x44], eax	      1002	state.c	FUNCTION_25	SWITCH_3	CALL_11
0x4002b3a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1003	state.c	FUNCTION_25	SWITCH_3
0x4002b3e	    0xc74034000000	               mov dword [rax + 0x34], 0	      1003	state.c	FUNCTION_25	SWITCH_3
0x4002b45	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1004	state.c	FUNCTION_25	SWITCH_3
0x4002b49	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1004	state.c	FUNCTION_25	SWITCH_3
0x4002b4c	          0x2b45bc	             sub eax, dword [rbp - 0x44]	      1004	state.c	FUNCTION_25	SWITCH_3
0x4002b4f	            0x89c2	                            mov edx, eax	      1004	state.c	FUNCTION_25	SWITCH_3
0x4002b51	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1004	state.c	FUNCTION_25	SWITCH_3
0x4002b55	          0x895030	             mov dword [rax + 0x30], edx	      1004	state.c	FUNCTION_25	SWITCH_3
0x4002b58	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1005	state.c	FUNCTION_25	SWITCH_3
0x4002b5c	    0xc74038000000	               mov dword [rax + 0x38], 0	      1005	state.c	FUNCTION_25	SWITCH_3
0x4002b63	      0xe94a180000	                           jmp 0x40043b2	      1006	state.c	FUNCTION_25	SWITCH_3
0x4002b68	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1009	state.c	FUNCTION_25	SWITCH_3	CALL_12
0x4002b6c	          0x488b00	                    mov rax, qword [rax]	      1009	state.c	FUNCTION_25	SWITCH_3	CALL_12
0x4002b6f	      0x25ffffff7f	                     and eax, 0x7fffffff	      1009	state.c	FUNCTION_25	SWITCH_3	CALL_12
0x4002b74	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1009	state.c	FUNCTION_25	SWITCH_3	CALL_12
0x4002b7a	            0x740e	                            je 0x4002b8a	      1009	state.c	FUNCTION_25	SWITCH_3	CALL_12
0x4002b7c	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1009	state.c	FUNCTION_25	SWITCH_3	CALL_12
0x4002b80	          0x488b00	                    mov rax, qword [rax]	      1009	state.c	FUNCTION_25	SWITCH_3	CALL_12
0x4002b83	      0x25ffffff7f	                     and eax, 0x7fffffff	      1009	state.c	FUNCTION_25	SWITCH_3	CALL_12
0x4002b88	            0xeb05	                           jmp 0x4002b8f	      1009	state.c	FUNCTION_25	SWITCH_3	CALL_12
0x4002b8a	      0xb801000000	                              mov eax, 1	      1009	state.c	FUNCTION_25	SWITCH_3	CALL_12
0x4002b8f	          0x8945b8	             mov dword [rbp - 0x48], eax	      1009	state.c	FUNCTION_25	SWITCH_3	CALL_12
0x4002b92	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1010	state.c	FUNCTION_25	SWITCH_3
0x4002b95	          0x8d50ff	                      lea edx, [rax - 1]	      1010	state.c	FUNCTION_25	SWITCH_3
0x4002b98	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1010	state.c	FUNCTION_25	SWITCH_3
0x4002b9c	          0x895034	             mov dword [rax + 0x34], edx	      1010	state.c	FUNCTION_25	SWITCH_3
0x4002b9f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1011	state.c	FUNCTION_25	SWITCH_3
0x4002ba3	    0xc74038000000	               mov dword [rax + 0x38], 0	      1011	state.c	FUNCTION_25	SWITCH_3
0x4002baa	      0xe903180000	                           jmp 0x40043b2	      1012	state.c	FUNCTION_25	SWITCH_3
0x4002baf	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1015	state.c	FUNCTION_25	SWITCH_3	CALL_13
0x4002bb3	          0x488b00	                    mov rax, qword [rax]	      1015	state.c	FUNCTION_25	SWITCH_3	CALL_13
0x4002bb6	      0x25ffffff7f	                     and eax, 0x7fffffff	      1015	state.c	FUNCTION_25	SWITCH_3	CALL_13
0x4002bbb	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1015	state.c	FUNCTION_25	SWITCH_3	CALL_13
0x4002bc1	            0x740e	                            je 0x4002bd1	      1015	state.c	FUNCTION_25	SWITCH_3	CALL_13
0x4002bc3	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1015	state.c	FUNCTION_25	SWITCH_3	CALL_13
0x4002bc7	          0x488b00	                    mov rax, qword [rax]	      1015	state.c	FUNCTION_25	SWITCH_3	CALL_13
0x4002bca	      0x25ffffff7f	                     and eax, 0x7fffffff	      1015	state.c	FUNCTION_25	SWITCH_3	CALL_13
0x4002bcf	            0xeb05	                           jmp 0x4002bd6	      1015	state.c	FUNCTION_25	SWITCH_3	CALL_13
0x4002bd1	      0xb801000000	                              mov eax, 1	      1015	state.c	FUNCTION_25	SWITCH_3	CALL_13
0x4002bd6	          0x8945ac	             mov dword [rbp - 0x54], eax	      1015	state.c	FUNCTION_25	SWITCH_3	CALL_13
0x4002bd9	        0x837d8c01	               cmp dword [rbp - 0x74], 1	      1016	state.c	FUNCTION_25	SWITCH_3	CALL_15
0x4002bdd	            0x7e2a	                           jle 0x4002c09	      1016	state.c	FUNCTION_25	SWITCH_3	CALL_15
0x4002bdf	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1016	state.c	FUNCTION_25	SWITCH_3	CALL_15
0x4002be3	        0x4883c008	                              add rax, 8	      1016	state.c	FUNCTION_25	SWITCH_3	CALL_15
0x4002be7	          0x488b00	                    mov rax, qword [rax]	      1016	state.c	FUNCTION_25	SWITCH_3	CALL_15
0x4002bea	      0x25ffffff7f	                     and eax, 0x7fffffff	      1016	state.c	FUNCTION_25	SWITCH_3	CALL_15
0x4002bef	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1016	state.c	FUNCTION_25	SWITCH_3	CALL_15
0x4002bf5	            0x7412	                            je 0x4002c09	      1016	state.c	FUNCTION_25	SWITCH_3	CALL_15
0x4002bf7	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1016	state.c	FUNCTION_25	SWITCH_3	CALL_15
0x4002bfb	        0x4883c008	                              add rax, 8	      1016	state.c	FUNCTION_25	SWITCH_3	CALL_15
0x4002bff	          0x488b00	                    mov rax, qword [rax]	      1016	state.c	FUNCTION_25	SWITCH_3	CALL_15
0x4002c02	      0x25ffffff7f	                     and eax, 0x7fffffff	      1016	state.c	FUNCTION_25	SWITCH_3	CALL_15
0x4002c07	            0xeb05	                           jmp 0x4002c0e	      1016	state.c	FUNCTION_25	SWITCH_3	CALL_15
0x4002c09	      0xb801000000	                              mov eax, 1	      1016	state.c	FUNCTION_25	SWITCH_3	CALL_15
0x4002c0e	          0x8945b0	             mov dword [rbp - 0x50], eax	      1016	state.c	FUNCTION_25	SWITCH_3	CALL_15
0x4002c11	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1018	state.c	FUNCTION_25	SWITCH_3
0x4002c14	          0x8d50ff	                      lea edx, [rax - 1]	      1018	state.c	FUNCTION_25	SWITCH_3
0x4002c17	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1018	state.c	FUNCTION_25	SWITCH_3
0x4002c1b	          0x895030	             mov dword [rax + 0x30], edx	      1018	state.c	FUNCTION_25	SWITCH_3
0x4002c1e	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1019	state.c	FUNCTION_25	SWITCH_3
0x4002c21	          0x8d50ff	                      lea edx, [rax - 1]	      1019	state.c	FUNCTION_25	SWITCH_3
0x4002c24	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1019	state.c	FUNCTION_25	SWITCH_3
0x4002c28	          0x895034	             mov dword [rax + 0x34], edx	      1019	state.c	FUNCTION_25	SWITCH_3
0x4002c2b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1020	state.c	FUNCTION_25	SWITCH_3	IF_7
0x4002c2f	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	      1020	state.c	FUNCTION_25	SWITCH_3	IF_7
0x4002c36	          0x83e004	                              and eax, 4	      1020	state.c	FUNCTION_25	SWITCH_3	IF_7
0x4002c39	            0x84c0	                             test al, al	      1020	state.c	FUNCTION_25	SWITCH_3	IF_7
0x4002c3b	            0x7447	                            je 0x4002c84	      1020	state.c	FUNCTION_25	SWITCH_3	IF_7
0x4002c3d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1021	state.c	FUNCTION_25	SWITCH_3	IF_7
0x4002c41	          0x8b5030	            mov edx, dword [rax + 0x30] 	      1021	state.c	FUNCTION_25	SWITCH_3	IF_7
0x4002c44	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1021	state.c	FUNCTION_25	SWITCH_3	IF_7
0x4002c48	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      1021	state.c	FUNCTION_25	SWITCH_3	IF_7
0x4002c4b	             0x1c2	                            add edx, eax	      1021	state.c	FUNCTION_25	SWITCH_3	IF_7
0x4002c4d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1021	state.c	FUNCTION_25	SWITCH_3	IF_7
0x4002c51	          0x895030	             mov dword [rax + 0x30], edx	      1021	state.c	FUNCTION_25	SWITCH_3	IF_7
0x4002c54	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1022	state.c	FUNCTION_25	SWITCH_3	IF_7	CALL_16
0x4002c58	          0x8b5034	            mov edx, dword [rax + 0x34] 	      1022	state.c	FUNCTION_25	SWITCH_3	IF_7	CALL_16
0x4002c5b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1022	state.c	FUNCTION_25	SWITCH_3	IF_7	CALL_16
0x4002c5f	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	      1022	state.c	FUNCTION_25	SWITCH_3	IF_7	CALL_16
0x4002c66	          0x83e010	                           and eax, 0x10	      1022	state.c	FUNCTION_25	SWITCH_3	IF_7	CALL_16
0x4002c69	            0x84c0	                             test al, al	      1022	state.c	FUNCTION_25	SWITCH_3	IF_7	CALL_16
0x4002c6b	            0x7409	                            je 0x4002c76	      1022	state.c	FUNCTION_25	SWITCH_3	IF_7	CALL_16
0x4002c6d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1022	state.c	FUNCTION_25	SWITCH_3	IF_7	CALL_16
0x4002c71	          0x8b4044	            mov eax, dword [rax + 0x44] 	      1022	state.c	FUNCTION_25	SWITCH_3	IF_7	CALL_16
0x4002c74	            0xeb05	                           jmp 0x4002c7b	      1022	state.c	FUNCTION_25	SWITCH_3	IF_7	CALL_16
0x4002c76	      0xb800000000	                              mov eax, 0	      1022	state.c	FUNCTION_25	SWITCH_3	IF_7	CALL_16
0x4002c7b	             0x1c2	                            add edx, eax	      1022	state.c	FUNCTION_25	SWITCH_3	IF_7	CALL_16
0x4002c7d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1022	state.c	FUNCTION_25	SWITCH_3	IF_7	CALL_16
0x4002c81	          0x895034	             mov dword [rax + 0x34], edx	      1022	state.c	FUNCTION_25	SWITCH_3	IF_7	CALL_16
0x4002c84	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1024	state.c	FUNCTION_25	SWITCH_3
0x4002c88	    0xc74038000000	               mov dword [rax + 0x38], 0	      1024	state.c	FUNCTION_25	SWITCH_3
0x4002c8f	      0xe91e170000	                           jmp 0x40043b2	      1025	state.c	FUNCTION_25	SWITCH_3
0x4002c94	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x4002c98	          0x488b00	                    mov rax, qword [rax]	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x4002c9b	      0x25ffffff7f	                     and eax, 0x7fffffff	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x4002ca0	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x4002ca6	            0x741f	                            je 0x4002cc7	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x4002ca8	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x4002cac	          0x488b00	                    mov rax, qword [rax]	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x4002caf	      0x25ffffff7f	                     and eax, 0x7fffffff	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x4002cb4	          0x4885c0	                           test rax, rax	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x4002cb7	            0x740e	                            je 0x4002cc7	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x4002cb9	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x4002cbd	          0x488b00	                    mov rax, qword [rax]	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x4002cc0	      0x25ffffff7f	                     and eax, 0x7fffffff	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x4002cc5	            0xeb05	                           jmp 0x4002ccc	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x4002cc7	      0xb801000000	                              mov eax, 1	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x4002ccc	          0x8945bc	             mov dword [rbp - 0x44], eax	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x4002ccf	          0x8b4dbc	             mov ecx, dword [rbp - 0x44]	      1029	state.c	FUNCTION_25	SWITCH_3	CALL_18
0x4002cd2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1029	state.c	FUNCTION_25	SWITCH_3	CALL_18
0x4002cd6	      0xba01000000	                              mov edx, 1	      1029	state.c	FUNCTION_25	SWITCH_3	CALL_18
0x4002cdb	            0x89ce	                            mov esi, ecx	      1029	state.c	FUNCTION_25	SWITCH_3	CALL_18
0x4002cdd	          0x4889c7	                            mov rdi, rax	      1029	state.c	FUNCTION_25	SWITCH_3	CALL_18
0x4002ce0	      0xe8e0dbffff	                            call sym.tab	      1029	state.c	FUNCTION_25	SWITCH_3	CALL_18
0x4002ce5	      0xe9c8160000	                           jmp 0x40043b2	      1030	state.c	FUNCTION_25	SWITCH_3
0x4002cea	        0x837da43f	           cmp dword [rbp - 0x5c], 0x3f 	      1034	state.c	FUNCTION_25	SWITCH_3
0x4002cee	           0xf94c0	                                 sete al	      1034	state.c	FUNCTION_25	SWITCH_3
0x4002cf1	           0xfb6c0	                           movzx eax, al	      1034	state.c	FUNCTION_25	SWITCH_3
0x4002cf4	          0x8945b4	             mov dword [rbp - 0x4c], eax	      1034	state.c	FUNCTION_25	SWITCH_3
0x4002cf7	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_19
0x4002cfb	          0x488b00	                    mov rax, qword [rax]	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_19
0x4002cfe	      0x25ffffff7f	                     and eax, 0x7fffffff	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_19
0x4002d03	        0x4883f801	                              cmp rax, 1	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_19
0x4002d07	     0xf84ee000000	                            je 0x4002dfb	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_19
0x4002d0d	        0x4883f801	                              cmp rax, 1	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_19
0x4002d11	            0x7f0a	                            jg 0x4002d1d	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_19
0x4002d13	          0x4885c0	                           test rax, rax	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_19
0x4002d16	            0x741c	                            je 0x4002d34	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_19
0x4002d18	      0xe995160000	                           jmp 0x40043b2	      1073	state.c	FUNCTION_25	SWITCH_3
0x4002d1d	        0x4883f802	                              cmp rax, 2	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_19
0x4002d21	     0xf8495010000	                            je 0x4002ebc	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_19
0x4002d27	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_19
0x4002d2d	            0x7405	                            je 0x4002d34	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_19
0x4002d2f	      0xe97e160000	                           jmp 0x40043b2	      1073	state.c	FUNCTION_25	SWITCH_3
0x4002d34	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1038	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4002d38	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1038	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4002d3b	          0x8945e0	             mov dword [rbp - 0x20], eax	      1038	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4002d3e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1038	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4002d42	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1038	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4002d45	          0x83c001	                              add eax, 1	      1038	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4002d48	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1038	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4002d4b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1039	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4002d4f	          0x8b4034	            mov eax, dword [rax + 0x34] 	      1039	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4002d52	          0x8945e8	             mov dword [rbp - 0x18], eax	      1039	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4002d55	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1039	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4002d59	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1039	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4002d5c	          0x8945ec	             mov dword [rbp - 0x14], eax	      1039	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4002d5f	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1040	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_8
0x4002d62	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1040	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_8
0x4002d65	            0x39c2	                            cmp edx, eax	      1040	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_8
0x4002d67	            0x7e17	                           jle 0x4002d80	      1040	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_8
0x4002d69	          0x8b4db4	             mov ecx, dword [rbp - 0x4c]	      1041	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_20
0x4002d6c	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1041	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_20
0x4002d70	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1041	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_20
0x4002d74	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1041	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_20
0x4002d78	          0x4889c7	                            mov rdi, rax	      1041	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_20
0x4002d7b	      0xe871d4ffff	                          call sym.erase	      1041	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_20
0x4002d80	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1043	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4002d84	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1043	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4002d87	          0x83c001	                              add eax, 1	      1043	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4002d8a	          0x8945e0	             mov dword [rbp - 0x20], eax	      1043	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4002d8d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1043	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4002d91	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1043	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4002d94	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1043	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4002d97	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      1044	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4002d9e	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1045	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_1
0x4002da1	          0x8945ac	             mov dword [rbp - 0x54], eax	      1045	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_1
0x4002da4	            0xeb23	                           jmp 0x4002dc9	      1045	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_1
0x4002da6	          0x8b75ac	             mov esi, dword [rbp - 0x54]	      1046	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_21
0x4002da9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1046	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_21
0x4002dad	    0x41b800000000	                              mov r8d, 0	      1046	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_21
0x4002db3	      0xb900000000	                              mov ecx, 0	      1046	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_21
0x4002db8	      0xba01000000	                              mov edx, 1	      1046	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_21
0x4002dbd	          0x4889c7	                            mov rdi, rax	      1046	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_21
0x4002dc0	      0xe8cddbffff	                   call sym.set_lineinfo	      1046	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_21
0x4002dc5	        0x8345ac01	               add dword [rbp - 0x54], 1	      1045	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_1
0x4002dc9	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1045	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_1
0x4002dcc	          0x3b45ac	             cmp eax, dword [rbp - 0x54]	      1045	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_1
0x4002dcf	            0x7fd5	                            jg 0x4002da6	      1045	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_1
0x4002dd1	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1047	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_9
0x4002dd4	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1047	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_9
0x4002dd7	            0x39c2	                            cmp edx, eax	      1047	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_9
0x4002dd9	     0xf8e4b010000	                           jle 0x4002f2a	      1047	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_9
0x4002ddf	          0x8b4db4	             mov ecx, dword [rbp - 0x4c]	      1048	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_22
0x4002de2	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1048	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_22
0x4002de6	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1048	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_22
0x4002dea	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1048	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_22
0x4002dee	          0x4889c7	                            mov rdi, rax	      1048	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_22
0x4002df1	      0xe8fbd3ffff	                          call sym.erase	      1048	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_22
0x4002df6	      0xe92f010000	                           jmp 0x4002f2a	      1049	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4002dfb	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      1052	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4002e02	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1052	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4002e06	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1052	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4002e09	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1052	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4002e0c	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      1053	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4002e13	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1053	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4002e17	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1053	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4002e1a	          0x8945ec	             mov dword [rbp - 0x14], eax	      1053	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4002e1d	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1054	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_2
0x4002e20	          0x8945ac	             mov dword [rbp - 0x54], eax	      1054	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_2
0x4002e23	            0xeb23	                           jmp 0x4002e48	      1054	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_2
0x4002e25	          0x8b75ac	             mov esi, dword [rbp - 0x54]	      1055	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_23
0x4002e28	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1055	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_23
0x4002e2c	    0x41b800000000	                              mov r8d, 0	      1055	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_23
0x4002e32	      0xb900000000	                              mov ecx, 0	      1055	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_23
0x4002e37	      0xba01000000	                              mov edx, 1	      1055	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_23
0x4002e3c	          0x4889c7	                            mov rdi, rax	      1055	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_23
0x4002e3f	      0xe84edbffff	                   call sym.set_lineinfo	      1055	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_23
0x4002e44	        0x8345ac01	               add dword [rbp - 0x54], 1	      1054	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_2
0x4002e48	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1054	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_2
0x4002e4b	          0x3b45ac	             cmp eax, dword [rbp - 0x54]	      1054	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_2
0x4002e4e	            0x7fd5	                            jg 0x4002e25	      1054	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_2
0x4002e50	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1056	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_10
0x4002e53	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1056	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_10
0x4002e56	            0x39c2	                            cmp edx, eax	      1056	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_10
0x4002e58	            0x7e17	                           jle 0x4002e71	      1056	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_10
0x4002e5a	          0x8b4db4	             mov ecx, dword [rbp - 0x4c]	      1057	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_24
0x4002e5d	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1057	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_24
0x4002e61	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1057	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_24
0x4002e65	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1057	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_24
0x4002e69	          0x4889c7	                            mov rdi, rax	      1057	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_24
0x4002e6c	      0xe880d3ffff	                          call sym.erase	      1057	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_24
0x4002e71	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1059	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4002e75	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1059	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4002e78	          0x8945e0	             mov dword [rbp - 0x20], eax	      1059	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4002e7b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1059	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4002e7f	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1059	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4002e82	          0x83c001	                              add eax, 1	      1059	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4002e85	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1059	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4002e88	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1060	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4002e8c	          0x8b4034	            mov eax, dword [rax + 0x34] 	      1060	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4002e8f	          0x83c001	                              add eax, 1	      1060	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4002e92	          0x8945ec	             mov dword [rbp - 0x14], eax	      1060	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4002e95	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1061	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_11
0x4002e98	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1061	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_11
0x4002e9b	            0x39c2	                            cmp edx, eax	      1061	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_11
0x4002e9d	     0xf8e8d000000	                           jle 0x4002f30	      1061	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_11
0x4002ea3	          0x8b4db4	             mov ecx, dword [rbp - 0x4c]	      1062	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_25
0x4002ea6	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1062	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_25
0x4002eaa	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1062	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_25
0x4002eae	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1062	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_25
0x4002eb2	          0x4889c7	                            mov rdi, rax	      1062	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_25
0x4002eb5	      0xe837d3ffff	                          call sym.erase	      1062	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_25
0x4002eba	            0xeb74	                           jmp 0x4002f30	      1063	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4002ebc	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      1066	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4002ec3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1066	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4002ec7	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1066	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4002eca	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1066	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4002ecd	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      1067	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4002ed4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1067	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4002ed8	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1067	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4002edb	          0x8945ec	             mov dword [rbp - 0x14], eax	      1067	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4002ede	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1068	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_3
0x4002ee1	          0x8945ac	             mov dword [rbp - 0x54], eax	      1068	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_3
0x4002ee4	            0xeb23	                           jmp 0x4002f09	      1068	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_3
0x4002ee6	          0x8b75ac	             mov esi, dword [rbp - 0x54]	      1069	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_26
0x4002ee9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1069	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_26
0x4002eed	    0x41b800000000	                              mov r8d, 0	      1069	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_26
0x4002ef3	      0xb900000000	                              mov ecx, 0	      1069	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_26
0x4002ef8	      0xba01000000	                              mov edx, 1	      1069	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_26
0x4002efd	          0x4889c7	                            mov rdi, rax	      1069	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_26
0x4002f00	      0xe88ddaffff	                   call sym.set_lineinfo	      1069	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_26
0x4002f05	        0x8345ac01	               add dword [rbp - 0x54], 1	      1068	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_3
0x4002f09	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1068	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_3
0x4002f0c	          0x3b45ac	             cmp eax, dword [rbp - 0x54]	      1068	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_3
0x4002f0f	            0x7fd5	                            jg 0x4002ee6	      1068	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_3
0x4002f11	          0x8b4db4	             mov ecx, dword [rbp - 0x4c]	      1070	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_27
0x4002f14	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1070	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_27
0x4002f18	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1070	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_27
0x4002f1c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1070	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_27
0x4002f20	          0x4889c7	                            mov rdi, rax	      1070	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_27
0x4002f23	      0xe8c9d2ffff	                          call sym.erase	      1070	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_27
0x4002f28	            0xeb07	                           jmp 0x4002f31	      1071	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4002f2a	              0x90	                                     nop	      1049	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4002f2b	      0xe982140000	                           jmp 0x40043b2	      1049	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4002f30	              0x90	                                     nop	      1063	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4002f31	      0xe97c140000	                           jmp 0x40043b2	      1073	state.c	FUNCTION_25	SWITCH_3
0x4002f36	        0x837da43f	           cmp dword [rbp - 0x5c], 0x3f 	      1077	state.c	FUNCTION_25	SWITCH_3
0x4002f3a	           0xf94c0	                                 sete al	      1077	state.c	FUNCTION_25	SWITCH_3
0x4002f3d	           0xfb6c0	                           movzx eax, al	      1077	state.c	FUNCTION_25	SWITCH_3
0x4002f40	          0x8945b4	             mov dword [rbp - 0x4c], eax	      1077	state.c	FUNCTION_25	SWITCH_3
0x4002f43	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1078	state.c	FUNCTION_25	SWITCH_3
0x4002f47	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1078	state.c	FUNCTION_25	SWITCH_3
0x4002f4a	          0x8945e0	             mov dword [rbp - 0x20], eax	      1078	state.c	FUNCTION_25	SWITCH_3
0x4002f4d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1079	state.c	FUNCTION_25	SWITCH_3
0x4002f51	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1079	state.c	FUNCTION_25	SWITCH_3
0x4002f54	          0x83c001	                              add eax, 1	      1079	state.c	FUNCTION_25	SWITCH_3
0x4002f57	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1079	state.c	FUNCTION_25	SWITCH_3
0x4002f5a	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_28
0x4002f5e	          0x488b00	                    mov rax, qword [rax]	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_28
0x4002f61	      0x25ffffff7f	                     and eax, 0x7fffffff	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_28
0x4002f66	        0x4883f801	                              cmp rax, 1	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_28
0x4002f6a	            0x746c	                            je 0x4002fd8	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_28
0x4002f6c	        0x4883f801	                              cmp rax, 1	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_28
0x4002f70	            0x7f0a	                            jg 0x4002f7c	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_28
0x4002f72	          0x4885c0	                           test rax, rax	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_28
0x4002f75	            0x7417	                            je 0x4002f8e	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_28
0x4002f77	      0xe9b9000000	                           jmp 0x4003035	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_28
0x4002f7c	        0x4883f802	                              cmp rax, 2	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_28
0x4002f80	            0x746c	                            je 0x4002fee	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_28
0x4002f82	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_28
0x4002f88	     0xf85a7000000	                           jne 0x4003035	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_28
0x4002f8e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_29
0x4002f92	          0x8b4034	            mov eax, dword [rax + 0x34] 	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_29
0x4002f95	          0x8945e8	             mov dword [rbp - 0x18], eax	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_29
0x4002f98	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_29
0x4002f9c	        0x488b5058	            mov rdx, qword [rax + 0x58] 	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_29
0x4002fa0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_29
0x4002fa4	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_29
0x4002fa7	            0x4898	                                    cdqe	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_29
0x4002fa9	        0x48c1e002	                              shl rax, 2	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_29
0x4002fad	          0x4801d0	                            add rax, rdx	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_29
0x4002fb0	           0xfb600	                   movzx eax, byte [rax]	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_29
0x4002fb3	          0x83e001	                              and eax, 1	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_29
0x4002fb6	            0x84c0	                             test al, al	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_29
0x4002fb8	            0x7412	                            je 0x4002fcc	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_29
0x4002fba	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_29
0x4002fbe	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_29
0x4002fc1	            0x89c2	                            mov edx, eax	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_29
0x4002fc3	          0xc1ea1f	                           shr edx, 0x1f	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_29
0x4002fc6	             0x1d0	                            add eax, edx	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_29
0x4002fc8	            0xd1f8	                              sar eax, 1	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_29
0x4002fca	            0xeb07	                           jmp 0x4002fd3	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_29
0x4002fcc	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_29
0x4002fd0	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_29
0x4002fd3	          0x8945ec	             mov dword [rbp - 0x14], eax	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_29
0x4002fd6	            0xeb67	                           jmp 0x400303f	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_29
0x4002fd8	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      1086	state.c	FUNCTION_25	SWITCH_3	SWITCH_5
0x4002fdf	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1086	state.c	FUNCTION_25	SWITCH_3	SWITCH_5
0x4002fe3	          0x8b4034	            mov eax, dword [rax + 0x34] 	      1086	state.c	FUNCTION_25	SWITCH_3	SWITCH_5
0x4002fe6	          0x83c001	                              add eax, 1	      1086	state.c	FUNCTION_25	SWITCH_3	SWITCH_5
0x4002fe9	          0x8945ec	             mov dword [rbp - 0x14], eax	      1086	state.c	FUNCTION_25	SWITCH_3	SWITCH_5
0x4002fec	            0xeb51	                           jmp 0x400303f	      1086	state.c	FUNCTION_25	SWITCH_3	SWITCH_5
0x4002fee	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x4002ff5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x4002ff9	        0x488b5058	            mov rdx, qword [rax + 0x58] 	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x4002ffd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x4003001	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x4003004	            0x4898	                                    cdqe	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x4003006	        0x48c1e002	                              shl rax, 2	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x400300a	          0x4801d0	                            add rax, rdx	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x400300d	           0xfb600	                   movzx eax, byte [rax]	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x4003010	          0x83e001	                              and eax, 1	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x4003013	            0x84c0	                             test al, al	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x4003015	            0x7412	                            je 0x4003029	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x4003017	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x400301b	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x400301e	            0x89c2	                            mov edx, eax	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x4003020	          0xc1ea1f	                           shr edx, 0x1f	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x4003023	             0x1d0	                            add eax, edx	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x4003025	            0xd1f8	                              sar eax, 1	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x4003027	            0xeb07	                           jmp 0x4003030	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x4003029	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x400302d	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x4003030	          0x8945ec	             mov dword [rbp - 0x14], eax	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x4003033	            0xeb0a	                           jmp 0x400303f	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x4003035	      0xb800000000	                              mov eax, 0	      1090	state.c	FUNCTION_25	SWITCH_3	SWITCH_5
0x400303a	      0xe9d3150000	                           jmp 0x4004612	      1090	state.c	FUNCTION_25	SWITCH_3	SWITCH_5
0x400303f	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1093	state.c	FUNCTION_25	SWITCH_3	IF_12
0x4003042	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1093	state.c	FUNCTION_25	SWITCH_3	IF_12
0x4003045	            0x39c2	                            cmp edx, eax	      1093	state.c	FUNCTION_25	SWITCH_3	IF_12
0x4003047	     0xf8e37130000	                           jle 0x4004384	      1093	state.c	FUNCTION_25	SWITCH_3	IF_12
0x400304d	          0x8b4db4	             mov ecx, dword [rbp - 0x4c]	      1094	state.c	FUNCTION_25	SWITCH_3	CALL_31
0x4003050	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1094	state.c	FUNCTION_25	SWITCH_3	CALL_31
0x4003054	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1094	state.c	FUNCTION_25	SWITCH_3	CALL_31
0x4003058	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1094	state.c	FUNCTION_25	SWITCH_3	CALL_31
0x400305c	          0x4889c7	                            mov rdi, rax	      1094	state.c	FUNCTION_25	SWITCH_3	CALL_31
0x400305f	      0xe88dd1ffff	                          call sym.erase	      1094	state.c	FUNCTION_25	SWITCH_3	CALL_31
0x4003064	      0xe91b130000	                           jmp 0x4004384	      1096	state.c	FUNCTION_25	SWITCH_3
0x4003069	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_32
0x400306d	          0x488b00	                    mov rax, qword [rax]	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_32
0x4003070	      0x25ffffff7f	                     and eax, 0x7fffffff	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_32
0x4003075	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_32
0x400307b	            0x741f	                            je 0x400309c	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_32
0x400307d	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_32
0x4003081	          0x488b00	                    mov rax, qword [rax]	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_32
0x4003084	      0x25ffffff7f	                     and eax, 0x7fffffff	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_32
0x4003089	          0x4885c0	                           test rax, rax	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_32
0x400308c	            0x740e	                            je 0x400309c	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_32
0x400308e	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_32
0x4003092	          0x488b00	                    mov rax, qword [rax]	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_32
0x4003095	      0x25ffffff7f	                     and eax, 0x7fffffff	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_32
0x400309a	            0xeb05	                           jmp 0x40030a1	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_32
0x400309c	      0xb801000000	                              mov eax, 1	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_32
0x40030a1	          0x8945bc	             mov dword [rbp - 0x44], eax	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_32
0x40030a4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1101	state.c	FUNCTION_25	SWITCH_3	IF_13	CALL_33
0x40030a8	          0x4889c7	                            mov rdi, rax	      1101	state.c	FUNCTION_25	SWITCH_3	IF_13	CALL_33
0x40030ab	      0xe85dd7ffff	      call sym.is_cursor_in_scrollregion	      1101	state.c	FUNCTION_25	SWITCH_3	IF_13	CALL_33
0x40030b0	            0x85c0	                           test eax, eax	      1101	state.c	FUNCTION_25	SWITCH_3	IF_13	CALL_33
0x40030b2	     0xf84cf120000	                            je 0x4004387	      1101	state.c	FUNCTION_25	SWITCH_3	IF_13	CALL_33
0x40030b8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1104	state.c	FUNCTION_25	SWITCH_3
0x40030bc	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1104	state.c	FUNCTION_25	SWITCH_3
0x40030bf	          0x8945e0	             mov dword [rbp - 0x20], eax	      1104	state.c	FUNCTION_25	SWITCH_3
0x40030c2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1105	state.c	FUNCTION_25	SWITCH_3	CALL_34
0x40030c6	          0x8b4040	            mov eax, dword [rax + 0x40] 	      1105	state.c	FUNCTION_25	SWITCH_3	CALL_34
0x40030c9	            0x85c0	                           test eax, eax	      1105	state.c	FUNCTION_25	SWITCH_3	CALL_34
0x40030cb	            0x7809	                            js 0x40030d6	      1105	state.c	FUNCTION_25	SWITCH_3	CALL_34
0x40030cd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1105	state.c	FUNCTION_25	SWITCH_3	CALL_34
0x40030d1	          0x8b4040	            mov eax, dword [rax + 0x40] 	      1105	state.c	FUNCTION_25	SWITCH_3	CALL_34
0x40030d4	            0xeb07	                           jmp 0x40030dd	      1105	state.c	FUNCTION_25	SWITCH_3	CALL_34
0x40030d6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1105	state.c	FUNCTION_25	SWITCH_3	CALL_34
0x40030da	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1105	state.c	FUNCTION_25	SWITCH_3	CALL_34
0x40030dd	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1105	state.c	FUNCTION_25	SWITCH_3	CALL_34
0x40030e0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1106	state.c	FUNCTION_25	SWITCH_3	CALL_35
0x40030e4	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	      1106	state.c	FUNCTION_25	SWITCH_3	CALL_35
0x40030eb	          0x83e010	                           and eax, 0x10	      1106	state.c	FUNCTION_25	SWITCH_3	CALL_35
0x40030ee	            0x84c0	                             test al, al	      1106	state.c	FUNCTION_25	SWITCH_3	CALL_35
0x40030f0	            0x7409	                            je 0x40030fb	      1106	state.c	FUNCTION_25	SWITCH_3	CALL_35
0x40030f2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1106	state.c	FUNCTION_25	SWITCH_3	CALL_35
0x40030f6	          0x8b4044	            mov eax, dword [rax + 0x44] 	      1106	state.c	FUNCTION_25	SWITCH_3	CALL_35
0x40030f9	            0xeb05	                           jmp 0x4003100	      1106	state.c	FUNCTION_25	SWITCH_3	CALL_35
0x40030fb	      0xb800000000	                              mov eax, 0	      1106	state.c	FUNCTION_25	SWITCH_3	CALL_35
0x4003100	          0x8945e8	             mov dword [rbp - 0x18], eax	      1106	state.c	FUNCTION_25	SWITCH_3	CALL_35
0x4003103	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1107	state.c	FUNCTION_25	SWITCH_3	CALL_36
0x4003107	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	      1107	state.c	FUNCTION_25	SWITCH_3	CALL_36
0x400310e	          0x83e010	                           and eax, 0x10	      1107	state.c	FUNCTION_25	SWITCH_3	CALL_36
0x4003111	            0x84c0	                             test al, al	      1107	state.c	FUNCTION_25	SWITCH_3	CALL_36
0x4003113	            0x7414	                            je 0x4003129	      1107	state.c	FUNCTION_25	SWITCH_3	CALL_36
0x4003115	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1107	state.c	FUNCTION_25	SWITCH_3	CALL_36
0x4003119	          0x8b4048	            mov eax, dword [rax + 0x48] 	      1107	state.c	FUNCTION_25	SWITCH_3	CALL_36
0x400311c	            0x85c0	                           test eax, eax	      1107	state.c	FUNCTION_25	SWITCH_3	CALL_36
0x400311e	            0x7809	                            js 0x4003129	      1107	state.c	FUNCTION_25	SWITCH_3	CALL_36
0x4003120	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1107	state.c	FUNCTION_25	SWITCH_3	CALL_36
0x4003124	          0x8b4048	            mov eax, dword [rax + 0x48] 	      1107	state.c	FUNCTION_25	SWITCH_3	CALL_36
0x4003127	            0xeb07	                           jmp 0x4003130	      1107	state.c	FUNCTION_25	SWITCH_3	CALL_36
0x4003129	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1107	state.c	FUNCTION_25	SWITCH_3	CALL_36
0x400312d	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1107	state.c	FUNCTION_25	SWITCH_3	CALL_36
0x4003130	          0x8945ec	             mov dword [rbp - 0x14], eax	      1107	state.c	FUNCTION_25	SWITCH_3	CALL_36
0x4003133	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1109	state.c	FUNCTION_25	SWITCH_3	CALL_37
0x4003136	            0xf7d8	                                 neg eax	      1109	state.c	FUNCTION_25	SWITCH_3	CALL_37
0x4003138	            0x89c1	                            mov ecx, eax	      1109	state.c	FUNCTION_25	SWITCH_3	CALL_37
0x400313a	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1109	state.c	FUNCTION_25	SWITCH_3	CALL_37
0x400313e	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1109	state.c	FUNCTION_25	SWITCH_3	CALL_37
0x4003142	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1109	state.c	FUNCTION_25	SWITCH_3	CALL_37
0x4003146	    0x41b800000000	                              mov r8d, 0	      1109	state.c	FUNCTION_25	SWITCH_3	CALL_37
0x400314c	          0x4889c7	                            mov rdi, rax	      1109	state.c	FUNCTION_25	SWITCH_3	CALL_37
0x400314f	      0xe81fd2ffff	                         call sym.scroll	      1109	state.c	FUNCTION_25	SWITCH_3	CALL_37
0x4003154	      0xe959120000	                           jmp 0x40043b2	      1111	state.c	FUNCTION_25	SWITCH_3
0x4003159	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1114	state.c	FUNCTION_25	SWITCH_3	CALL_38
0x400315d	          0x488b00	                    mov rax, qword [rax]	      1114	state.c	FUNCTION_25	SWITCH_3	CALL_38
0x4003160	      0x25ffffff7f	                     and eax, 0x7fffffff	      1114	state.c	FUNCTION_25	SWITCH_3	CALL_38
0x4003165	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1114	state.c	FUNCTION_25	SWITCH_3	CALL_38
0x400316b	            0x741f	                            je 0x400318c	      1114	state.c	FUNCTION_25	SWITCH_3	CALL_38
0x400316d	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1114	state.c	FUNCTION_25	SWITCH_3	CALL_38
0x4003171	          0x488b00	                    mov rax, qword [rax]	      1114	state.c	FUNCTION_25	SWITCH_3	CALL_38
0x4003174	      0x25ffffff7f	                     and eax, 0x7fffffff	      1114	state.c	FUNCTION_25	SWITCH_3	CALL_38
0x4003179	          0x4885c0	                           test rax, rax	      1114	state.c	FUNCTION_25	SWITCH_3	CALL_38
0x400317c	            0x740e	                            je 0x400318c	      1114	state.c	FUNCTION_25	SWITCH_3	CALL_38
0x400317e	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1114	state.c	FUNCTION_25	SWITCH_3	CALL_38
0x4003182	          0x488b00	                    mov rax, qword [rax]	      1114	state.c	FUNCTION_25	SWITCH_3	CALL_38
0x4003185	      0x25ffffff7f	                     and eax, 0x7fffffff	      1114	state.c	FUNCTION_25	SWITCH_3	CALL_38
0x400318a	            0xeb05	                           jmp 0x4003191	      1114	state.c	FUNCTION_25	SWITCH_3	CALL_38
0x400318c	      0xb801000000	                              mov eax, 1	      1114	state.c	FUNCTION_25	SWITCH_3	CALL_38
0x4003191	          0x8945bc	             mov dword [rbp - 0x44], eax	      1114	state.c	FUNCTION_25	SWITCH_3	CALL_38
0x4003194	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1116	state.c	FUNCTION_25	SWITCH_3	IF_14	CALL_39
0x4003198	          0x4889c7	                            mov rdi, rax	      1116	state.c	FUNCTION_25	SWITCH_3	IF_14	CALL_39
0x400319b	      0xe86dd6ffff	      call sym.is_cursor_in_scrollregion	      1116	state.c	FUNCTION_25	SWITCH_3	IF_14	CALL_39
0x40031a0	            0x85c0	                           test eax, eax	      1116	state.c	FUNCTION_25	SWITCH_3	IF_14	CALL_39
0x40031a2	     0xf84e2110000	                            je 0x400438a	      1116	state.c	FUNCTION_25	SWITCH_3	IF_14	CALL_39
0x40031a8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1119	state.c	FUNCTION_25	SWITCH_3
0x40031ac	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1119	state.c	FUNCTION_25	SWITCH_3
0x40031af	          0x8945e0	             mov dword [rbp - 0x20], eax	      1119	state.c	FUNCTION_25	SWITCH_3
0x40031b2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1120	state.c	FUNCTION_25	SWITCH_3	CALL_40
0x40031b6	          0x8b4040	            mov eax, dword [rax + 0x40] 	      1120	state.c	FUNCTION_25	SWITCH_3	CALL_40
0x40031b9	            0x85c0	                           test eax, eax	      1120	state.c	FUNCTION_25	SWITCH_3	CALL_40
0x40031bb	            0x7809	                            js 0x40031c6	      1120	state.c	FUNCTION_25	SWITCH_3	CALL_40
0x40031bd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1120	state.c	FUNCTION_25	SWITCH_3	CALL_40
0x40031c1	          0x8b4040	            mov eax, dword [rax + 0x40] 	      1120	state.c	FUNCTION_25	SWITCH_3	CALL_40
0x40031c4	            0xeb07	                           jmp 0x40031cd	      1120	state.c	FUNCTION_25	SWITCH_3	CALL_40
0x40031c6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1120	state.c	FUNCTION_25	SWITCH_3	CALL_40
0x40031ca	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1120	state.c	FUNCTION_25	SWITCH_3	CALL_40
0x40031cd	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1120	state.c	FUNCTION_25	SWITCH_3	CALL_40
0x40031d0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1121	state.c	FUNCTION_25	SWITCH_3	CALL_41
0x40031d4	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	      1121	state.c	FUNCTION_25	SWITCH_3	CALL_41
0x40031db	          0x83e010	                           and eax, 0x10	      1121	state.c	FUNCTION_25	SWITCH_3	CALL_41
0x40031de	            0x84c0	                             test al, al	      1121	state.c	FUNCTION_25	SWITCH_3	CALL_41
0x40031e0	            0x7409	                            je 0x40031eb	      1121	state.c	FUNCTION_25	SWITCH_3	CALL_41
0x40031e2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1121	state.c	FUNCTION_25	SWITCH_3	CALL_41
0x40031e6	          0x8b4044	            mov eax, dword [rax + 0x44] 	      1121	state.c	FUNCTION_25	SWITCH_3	CALL_41
0x40031e9	            0xeb05	                           jmp 0x40031f0	      1121	state.c	FUNCTION_25	SWITCH_3	CALL_41
0x40031eb	      0xb800000000	                              mov eax, 0	      1121	state.c	FUNCTION_25	SWITCH_3	CALL_41
0x40031f0	          0x8945e8	             mov dword [rbp - 0x18], eax	      1121	state.c	FUNCTION_25	SWITCH_3	CALL_41
0x40031f3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1122	state.c	FUNCTION_25	SWITCH_3	CALL_42
0x40031f7	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	      1122	state.c	FUNCTION_25	SWITCH_3	CALL_42
0x40031fe	          0x83e010	                           and eax, 0x10	      1122	state.c	FUNCTION_25	SWITCH_3	CALL_42
0x4003201	            0x84c0	                             test al, al	      1122	state.c	FUNCTION_25	SWITCH_3	CALL_42
0x4003203	            0x7414	                            je 0x4003219	      1122	state.c	FUNCTION_25	SWITCH_3	CALL_42
0x4003205	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1122	state.c	FUNCTION_25	SWITCH_3	CALL_42
0x4003209	          0x8b4048	            mov eax, dword [rax + 0x48] 	      1122	state.c	FUNCTION_25	SWITCH_3	CALL_42
0x400320c	            0x85c0	                           test eax, eax	      1122	state.c	FUNCTION_25	SWITCH_3	CALL_42
0x400320e	            0x7809	                            js 0x4003219	      1122	state.c	FUNCTION_25	SWITCH_3	CALL_42
0x4003210	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1122	state.c	FUNCTION_25	SWITCH_3	CALL_42
0x4003214	          0x8b4048	            mov eax, dword [rax + 0x48] 	      1122	state.c	FUNCTION_25	SWITCH_3	CALL_42
0x4003217	            0xeb07	                           jmp 0x4003220	      1122	state.c	FUNCTION_25	SWITCH_3	CALL_42
0x4003219	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1122	state.c	FUNCTION_25	SWITCH_3	CALL_42
0x400321d	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1122	state.c	FUNCTION_25	SWITCH_3	CALL_42
0x4003220	          0x8945ec	             mov dword [rbp - 0x14], eax	      1122	state.c	FUNCTION_25	SWITCH_3	CALL_42
0x4003223	          0x8b4dbc	             mov ecx, dword [rbp - 0x44]	      1124	state.c	FUNCTION_25	SWITCH_3	CALL_43
0x4003226	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1124	state.c	FUNCTION_25	SWITCH_3	CALL_43
0x400322a	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1124	state.c	FUNCTION_25	SWITCH_3	CALL_43
0x400322e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1124	state.c	FUNCTION_25	SWITCH_3	CALL_43
0x4003232	    0x41b800000000	                              mov r8d, 0	      1124	state.c	FUNCTION_25	SWITCH_3	CALL_43
0x4003238	          0x4889c7	                            mov rdi, rax	      1124	state.c	FUNCTION_25	SWITCH_3	CALL_43
0x400323b	      0xe833d1ffff	                         call sym.scroll	      1124	state.c	FUNCTION_25	SWITCH_3	CALL_43
0x4003240	      0xe96d110000	                           jmp 0x40043b2	      1126	state.c	FUNCTION_25	SWITCH_3
0x4003245	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1129	state.c	FUNCTION_25	SWITCH_3	CALL_44
0x4003249	          0x488b00	                    mov rax, qword [rax]	      1129	state.c	FUNCTION_25	SWITCH_3	CALL_44
0x400324c	      0x25ffffff7f	                     and eax, 0x7fffffff	      1129	state.c	FUNCTION_25	SWITCH_3	CALL_44
0x4003251	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1129	state.c	FUNCTION_25	SWITCH_3	CALL_44
0x4003257	            0x741f	                            je 0x4003278	      1129	state.c	FUNCTION_25	SWITCH_3	CALL_44
0x4003259	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1129	state.c	FUNCTION_25	SWITCH_3	CALL_44
0x400325d	          0x488b00	                    mov rax, qword [rax]	      1129	state.c	FUNCTION_25	SWITCH_3	CALL_44
0x4003260	      0x25ffffff7f	                     and eax, 0x7fffffff	      1129	state.c	FUNCTION_25	SWITCH_3	CALL_44
0x4003265	          0x4885c0	                           test rax, rax	      1129	state.c	FUNCTION_25	SWITCH_3	CALL_44
0x4003268	            0x740e	                            je 0x4003278	      1129	state.c	FUNCTION_25	SWITCH_3	CALL_44
0x400326a	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1129	state.c	FUNCTION_25	SWITCH_3	CALL_44
0x400326e	          0x488b00	                    mov rax, qword [rax]	      1129	state.c	FUNCTION_25	SWITCH_3	CALL_44
0x4003271	      0x25ffffff7f	                     and eax, 0x7fffffff	      1129	state.c	FUNCTION_25	SWITCH_3	CALL_44
0x4003276	            0xeb05	                           jmp 0x400327d	      1129	state.c	FUNCTION_25	SWITCH_3	CALL_44
0x4003278	      0xb801000000	                              mov eax, 1	      1129	state.c	FUNCTION_25	SWITCH_3	CALL_44
0x400327d	          0x8945bc	             mov dword [rbp - 0x44], eax	      1129	state.c	FUNCTION_25	SWITCH_3	CALL_44
0x4003280	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1131	state.c	FUNCTION_25	SWITCH_3	IF_15	CALL_45
0x4003284	          0x4889c7	                            mov rdi, rax	      1131	state.c	FUNCTION_25	SWITCH_3	IF_15	CALL_45
0x4003287	      0xe881d5ffff	      call sym.is_cursor_in_scrollregion	      1131	state.c	FUNCTION_25	SWITCH_3	IF_15	CALL_45
0x400328c	            0x85c0	                           test eax, eax	      1131	state.c	FUNCTION_25	SWITCH_3	IF_15	CALL_45
0x400328e	     0xf84f9100000	                            je 0x400438d	      1131	state.c	FUNCTION_25	SWITCH_3	IF_15	CALL_45
0x4003294	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1134	state.c	FUNCTION_25	SWITCH_3
0x4003298	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1134	state.c	FUNCTION_25	SWITCH_3
0x400329b	          0x8945e0	             mov dword [rbp - 0x20], eax	      1134	state.c	FUNCTION_25	SWITCH_3
0x400329e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1135	state.c	FUNCTION_25	SWITCH_3
0x40032a2	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1135	state.c	FUNCTION_25	SWITCH_3
0x40032a5	          0x83c001	                              add eax, 1	      1135	state.c	FUNCTION_25	SWITCH_3
0x40032a8	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1135	state.c	FUNCTION_25	SWITCH_3
0x40032ab	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1136	state.c	FUNCTION_25	SWITCH_3
0x40032af	          0x8b4034	            mov eax, dword [rax + 0x34] 	      1136	state.c	FUNCTION_25	SWITCH_3
0x40032b2	          0x8945e8	             mov dword [rbp - 0x18], eax	      1136	state.c	FUNCTION_25	SWITCH_3
0x40032b5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1137	state.c	FUNCTION_25	SWITCH_3	IF_16
0x40032b9	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	      1137	state.c	FUNCTION_25	SWITCH_3	IF_16
0x40032c0	          0x83e010	                           and eax, 0x10	      1137	state.c	FUNCTION_25	SWITCH_3	IF_16
0x40032c3	            0x84c0	                             test al, al	      1137	state.c	FUNCTION_25	SWITCH_3	IF_16
0x40032c5	            0x7432	                            je 0x40032f9	      1137	state.c	FUNCTION_25	SWITCH_3	IF_16
0x40032c7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x40032cb	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x40032d2	          0x83e010	                           and eax, 0x10	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x40032d5	            0x84c0	                             test al, al	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x40032d7	            0x7414	                            je 0x40032ed	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x40032d9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x40032dd	          0x8b4048	            mov eax, dword [rax + 0x48] 	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x40032e0	            0x85c0	                           test eax, eax	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x40032e2	            0x7809	                            js 0x40032ed	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x40032e4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x40032e8	          0x8b4048	            mov eax, dword [rax + 0x48] 	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x40032eb	            0xeb07	                           jmp 0x40032f4	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x40032ed	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x40032f1	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x40032f4	          0x8945ec	             mov dword [rbp - 0x14], eax	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x40032f7	            0xeb3e	                           jmp 0x4003337	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x40032f9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_47
0x40032fd	        0x488b5058	            mov rdx, qword [rax + 0x58] 	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_47
0x4003301	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_47
0x4003305	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_47
0x4003308	            0x4898	                                    cdqe	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_47
0x400330a	        0x48c1e002	                              shl rax, 2	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_47
0x400330e	          0x4801d0	                            add rax, rdx	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_47
0x4003311	           0xfb600	                   movzx eax, byte [rax]	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_47
0x4003314	          0x83e001	                              and eax, 1	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_47
0x4003317	            0x84c0	                             test al, al	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_47
0x4003319	            0x7412	                            je 0x400332d	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_47
0x400331b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_47
0x400331f	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_47
0x4003322	            0x89c2	                            mov edx, eax	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_47
0x4003324	          0xc1ea1f	                           shr edx, 0x1f	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_47
0x4003327	             0x1d0	                            add eax, edx	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_47
0x4003329	            0xd1f8	                              sar eax, 1	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_47
0x400332b	            0xeb07	                           jmp 0x4003334	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_47
0x400332d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_47
0x4003331	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_47
0x4003334	          0x8945ec	             mov dword [rbp - 0x14], eax	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_47
0x4003337	          0x8b4dbc	             mov ecx, dword [rbp - 0x44]	      1142	state.c	FUNCTION_25	SWITCH_3	CALL_48
0x400333a	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1142	state.c	FUNCTION_25	SWITCH_3	CALL_48
0x400333e	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1142	state.c	FUNCTION_25	SWITCH_3	CALL_48
0x4003342	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1142	state.c	FUNCTION_25	SWITCH_3	CALL_48
0x4003346	          0x4189c8	                            mov r8d, ecx	      1142	state.c	FUNCTION_25	SWITCH_3	CALL_48
0x4003349	      0xb900000000	                              mov ecx, 0	      1142	state.c	FUNCTION_25	SWITCH_3	CALL_48
0x400334e	          0x4889c7	                            mov rdi, rax	      1142	state.c	FUNCTION_25	SWITCH_3	CALL_48
0x4003351	      0xe81dd0ffff	                         call sym.scroll	      1142	state.c	FUNCTION_25	SWITCH_3	CALL_48
0x4003356	      0xe957100000	                           jmp 0x40043b2	      1144	state.c	FUNCTION_25	SWITCH_3
0x400335b	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1147	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x400335f	          0x488b00	                    mov rax, qword [rax]	      1147	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x4003362	      0x25ffffff7f	                     and eax, 0x7fffffff	      1147	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x4003367	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1147	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x400336d	            0x741f	                            je 0x400338e	      1147	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x400336f	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1147	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x4003373	          0x488b00	                    mov rax, qword [rax]	      1147	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x4003376	      0x25ffffff7f	                     and eax, 0x7fffffff	      1147	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x400337b	          0x4885c0	                           test rax, rax	      1147	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x400337e	            0x740e	                            je 0x400338e	      1147	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x4003380	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1147	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x4003384	          0x488b00	                    mov rax, qword [rax]	      1147	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x4003387	      0x25ffffff7f	                     and eax, 0x7fffffff	      1147	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x400338c	            0xeb05	                           jmp 0x4003393	      1147	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x400338e	      0xb801000000	                              mov eax, 1	      1147	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x4003393	          0x8945bc	             mov dword [rbp - 0x44], eax	      1147	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x4003396	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1149	state.c	FUNCTION_25	SWITCH_3
0x400339a	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      1149	state.c	FUNCTION_25	SWITCH_3
0x400339d	          0x8945e0	             mov dword [rbp - 0x20], eax	      1149	state.c	FUNCTION_25	SWITCH_3
0x40033a0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1150	state.c	FUNCTION_25	SWITCH_3	CALL_50
0x40033a4	          0x8b4040	            mov eax, dword [rax + 0x40] 	      1150	state.c	FUNCTION_25	SWITCH_3	CALL_50
0x40033a7	            0x85c0	                           test eax, eax	      1150	state.c	FUNCTION_25	SWITCH_3	CALL_50
0x40033a9	            0x7809	                            js 0x40033b4	      1150	state.c	FUNCTION_25	SWITCH_3	CALL_50
0x40033ab	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1150	state.c	FUNCTION_25	SWITCH_3	CALL_50
0x40033af	          0x8b4040	            mov eax, dword [rax + 0x40] 	      1150	state.c	FUNCTION_25	SWITCH_3	CALL_50
0x40033b2	            0xeb07	                           jmp 0x40033bb	      1150	state.c	FUNCTION_25	SWITCH_3	CALL_50
0x40033b4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1150	state.c	FUNCTION_25	SWITCH_3	CALL_50
0x40033b8	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1150	state.c	FUNCTION_25	SWITCH_3	CALL_50
0x40033bb	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1150	state.c	FUNCTION_25	SWITCH_3	CALL_50
0x40033be	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1151	state.c	FUNCTION_25	SWITCH_3	CALL_51
0x40033c2	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	      1151	state.c	FUNCTION_25	SWITCH_3	CALL_51
0x40033c9	          0x83e010	                           and eax, 0x10	      1151	state.c	FUNCTION_25	SWITCH_3	CALL_51
0x40033cc	            0x84c0	                             test al, al	      1151	state.c	FUNCTION_25	SWITCH_3	CALL_51
0x40033ce	            0x7409	                            je 0x40033d9	      1151	state.c	FUNCTION_25	SWITCH_3	CALL_51
0x40033d0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1151	state.c	FUNCTION_25	SWITCH_3	CALL_51
0x40033d4	          0x8b4044	            mov eax, dword [rax + 0x44] 	      1151	state.c	FUNCTION_25	SWITCH_3	CALL_51
0x40033d7	            0xeb05	                           jmp 0x40033de	      1151	state.c	FUNCTION_25	SWITCH_3	CALL_51
0x40033d9	      0xb800000000	                              mov eax, 0	      1151	state.c	FUNCTION_25	SWITCH_3	CALL_51
0x40033de	          0x8945e8	             mov dword [rbp - 0x18], eax	      1151	state.c	FUNCTION_25	SWITCH_3	CALL_51
0x40033e1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1152	state.c	FUNCTION_25	SWITCH_3	CALL_52
0x40033e5	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	      1152	state.c	FUNCTION_25	SWITCH_3	CALL_52
0x40033ec	          0x83e010	                           and eax, 0x10	      1152	state.c	FUNCTION_25	SWITCH_3	CALL_52
0x40033ef	            0x84c0	                             test al, al	      1152	state.c	FUNCTION_25	SWITCH_3	CALL_52
0x40033f1	            0x7414	                            je 0x4003407	      1152	state.c	FUNCTION_25	SWITCH_3	CALL_52
0x40033f3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1152	state.c	FUNCTION_25	SWITCH_3	CALL_52
0x40033f7	          0x8b4048	            mov eax, dword [rax + 0x48] 	      1152	state.c	FUNCTION_25	SWITCH_3	CALL_52
0x40033fa	            0x85c0	                           test eax, eax	      1152	state.c	FUNCTION_25	SWITCH_3	CALL_52
0x40033fc	            0x7809	                            js 0x4003407	      1152	state.c	FUNCTION_25	SWITCH_3	CALL_52
0x40033fe	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1152	state.c	FUNCTION_25	SWITCH_3	CALL_52
0x4003402	          0x8b4048	            mov eax, dword [rax + 0x48] 	      1152	state.c	FUNCTION_25	SWITCH_3	CALL_52
0x4003405	            0xeb07	                           jmp 0x400340e	      1152	state.c	FUNCTION_25	SWITCH_3	CALL_52
0x4003407	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1152	state.c	FUNCTION_25	SWITCH_3	CALL_52
0x400340b	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1152	state.c	FUNCTION_25	SWITCH_3	CALL_52
0x400340e	          0x8945ec	             mov dword [rbp - 0x14], eax	      1152	state.c	FUNCTION_25	SWITCH_3	CALL_52
0x4003411	          0x8b4dbc	             mov ecx, dword [rbp - 0x44]	      1154	state.c	FUNCTION_25	SWITCH_3	CALL_53
0x4003414	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1154	state.c	FUNCTION_25	SWITCH_3	CALL_53
0x4003418	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1154	state.c	FUNCTION_25	SWITCH_3	CALL_53
0x400341c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1154	state.c	FUNCTION_25	SWITCH_3	CALL_53
0x4003420	    0x41b800000000	                              mov r8d, 0	      1154	state.c	FUNCTION_25	SWITCH_3	CALL_53
0x4003426	          0x4889c7	                            mov rdi, rax	      1154	state.c	FUNCTION_25	SWITCH_3	CALL_53
0x4003429	      0xe845cfffff	                         call sym.scroll	      1154	state.c	FUNCTION_25	SWITCH_3	CALL_53
0x400342e	      0xe97f0f0000	                           jmp 0x40043b2	      1156	state.c	FUNCTION_25	SWITCH_3
0x4003433	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1159	state.c	FUNCTION_25	SWITCH_3	CALL_54
0x4003437	          0x488b00	                    mov rax, qword [rax]	      1159	state.c	FUNCTION_25	SWITCH_3	CALL_54
0x400343a	      0x25ffffff7f	                     and eax, 0x7fffffff	      1159	state.c	FUNCTION_25	SWITCH_3	CALL_54
0x400343f	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1159	state.c	FUNCTION_25	SWITCH_3	CALL_54
0x4003445	            0x741f	                            je 0x4003466	      1159	state.c	FUNCTION_25	SWITCH_3	CALL_54
0x4003447	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1159	state.c	FUNCTION_25	SWITCH_3	CALL_54
0x400344b	          0x488b00	                    mov rax, qword [rax]	      1159	state.c	FUNCTION_25	SWITCH_3	CALL_54
0x400344e	      0x25ffffff7f	                     and eax, 0x7fffffff	      1159	state.c	FUNCTION_25	SWITCH_3	CALL_54
0x4003453	          0x4885c0	                           test rax, rax	      1159	state.c	FUNCTION_25	SWITCH_3	CALL_54
0x4003456	            0x740e	                            je 0x4003466	      1159	state.c	FUNCTION_25	SWITCH_3	CALL_54
0x4003458	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1159	state.c	FUNCTION_25	SWITCH_3	CALL_54
0x400345c	          0x488b00	                    mov rax, qword [rax]	      1159	state.c	FUNCTION_25	SWITCH_3	CALL_54
0x400345f	      0x25ffffff7f	                     and eax, 0x7fffffff	      1159	state.c	FUNCTION_25	SWITCH_3	CALL_54
0x4003464	            0xeb05	                           jmp 0x400346b	      1159	state.c	FUNCTION_25	SWITCH_3	CALL_54
0x4003466	      0xb801000000	                              mov eax, 1	      1159	state.c	FUNCTION_25	SWITCH_3	CALL_54
0x400346b	          0x8945bc	             mov dword [rbp - 0x44], eax	      1159	state.c	FUNCTION_25	SWITCH_3	CALL_54
0x400346e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1161	state.c	FUNCTION_25	SWITCH_3
0x4003472	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      1161	state.c	FUNCTION_25	SWITCH_3
0x4003475	          0x8945e0	             mov dword [rbp - 0x20], eax	      1161	state.c	FUNCTION_25	SWITCH_3
0x4003478	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1162	state.c	FUNCTION_25	SWITCH_3	CALL_55
0x400347c	          0x8b4040	            mov eax, dword [rax + 0x40] 	      1162	state.c	FUNCTION_25	SWITCH_3	CALL_55
0x400347f	            0x85c0	                           test eax, eax	      1162	state.c	FUNCTION_25	SWITCH_3	CALL_55
0x4003481	            0x7809	                            js 0x400348c	      1162	state.c	FUNCTION_25	SWITCH_3	CALL_55
0x4003483	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1162	state.c	FUNCTION_25	SWITCH_3	CALL_55
0x4003487	          0x8b4040	            mov eax, dword [rax + 0x40] 	      1162	state.c	FUNCTION_25	SWITCH_3	CALL_55
0x400348a	            0xeb07	                           jmp 0x4003493	      1162	state.c	FUNCTION_25	SWITCH_3	CALL_55
0x400348c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1162	state.c	FUNCTION_25	SWITCH_3	CALL_55
0x4003490	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1162	state.c	FUNCTION_25	SWITCH_3	CALL_55
0x4003493	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1162	state.c	FUNCTION_25	SWITCH_3	CALL_55
0x4003496	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1163	state.c	FUNCTION_25	SWITCH_3	CALL_56
0x400349a	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	      1163	state.c	FUNCTION_25	SWITCH_3	CALL_56
0x40034a1	          0x83e010	                           and eax, 0x10	      1163	state.c	FUNCTION_25	SWITCH_3	CALL_56
0x40034a4	            0x84c0	                             test al, al	      1163	state.c	FUNCTION_25	SWITCH_3	CALL_56
0x40034a6	            0x7409	                            je 0x40034b1	      1163	state.c	FUNCTION_25	SWITCH_3	CALL_56
0x40034a8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1163	state.c	FUNCTION_25	SWITCH_3	CALL_56
0x40034ac	          0x8b4044	            mov eax, dword [rax + 0x44] 	      1163	state.c	FUNCTION_25	SWITCH_3	CALL_56
0x40034af	            0xeb05	                           jmp 0x40034b6	      1163	state.c	FUNCTION_25	SWITCH_3	CALL_56
0x40034b1	      0xb800000000	                              mov eax, 0	      1163	state.c	FUNCTION_25	SWITCH_3	CALL_56
0x40034b6	          0x8945e8	             mov dword [rbp - 0x18], eax	      1163	state.c	FUNCTION_25	SWITCH_3	CALL_56
0x40034b9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1164	state.c	FUNCTION_25	SWITCH_3	CALL_57
0x40034bd	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	      1164	state.c	FUNCTION_25	SWITCH_3	CALL_57
0x40034c4	          0x83e010	                           and eax, 0x10	      1164	state.c	FUNCTION_25	SWITCH_3	CALL_57
0x40034c7	            0x84c0	                             test al, al	      1164	state.c	FUNCTION_25	SWITCH_3	CALL_57
0x40034c9	            0x7414	                            je 0x40034df	      1164	state.c	FUNCTION_25	SWITCH_3	CALL_57
0x40034cb	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1164	state.c	FUNCTION_25	SWITCH_3	CALL_57
0x40034cf	          0x8b4048	            mov eax, dword [rax + 0x48] 	      1164	state.c	FUNCTION_25	SWITCH_3	CALL_57
0x40034d2	            0x85c0	                           test eax, eax	      1164	state.c	FUNCTION_25	SWITCH_3	CALL_57
0x40034d4	            0x7809	                            js 0x40034df	      1164	state.c	FUNCTION_25	SWITCH_3	CALL_57
0x40034d6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1164	state.c	FUNCTION_25	SWITCH_3	CALL_57
0x40034da	          0x8b4048	            mov eax, dword [rax + 0x48] 	      1164	state.c	FUNCTION_25	SWITCH_3	CALL_57
0x40034dd	            0xeb07	                           jmp 0x40034e6	      1164	state.c	FUNCTION_25	SWITCH_3	CALL_57
0x40034df	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1164	state.c	FUNCTION_25	SWITCH_3	CALL_57
0x40034e3	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1164	state.c	FUNCTION_25	SWITCH_3	CALL_57
0x40034e6	          0x8945ec	             mov dword [rbp - 0x14], eax	      1164	state.c	FUNCTION_25	SWITCH_3	CALL_57
0x40034e9	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1166	state.c	FUNCTION_25	SWITCH_3	CALL_58
0x40034ec	            0xf7d8	                                 neg eax	      1166	state.c	FUNCTION_25	SWITCH_3	CALL_58
0x40034ee	            0x89c1	                            mov ecx, eax	      1166	state.c	FUNCTION_25	SWITCH_3	CALL_58
0x40034f0	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1166	state.c	FUNCTION_25	SWITCH_3	CALL_58
0x40034f4	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1166	state.c	FUNCTION_25	SWITCH_3	CALL_58
0x40034f8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1166	state.c	FUNCTION_25	SWITCH_3	CALL_58
0x40034fc	    0x41b800000000	                              mov r8d, 0	      1166	state.c	FUNCTION_25	SWITCH_3	CALL_58
0x4003502	          0x4889c7	                            mov rdi, rax	      1166	state.c	FUNCTION_25	SWITCH_3	CALL_58
0x4003505	      0xe869ceffff	                         call sym.scroll	      1166	state.c	FUNCTION_25	SWITCH_3	CALL_58
0x400350a	      0xe9a30e0000	                           jmp 0x40043b2	      1168	state.c	FUNCTION_25	SWITCH_3
0x400350f	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1171	state.c	FUNCTION_25	SWITCH_3	CALL_59
0x4003513	          0x488b00	                    mov rax, qword [rax]	      1171	state.c	FUNCTION_25	SWITCH_3	CALL_59
0x4003516	      0x25ffffff7f	                     and eax, 0x7fffffff	      1171	state.c	FUNCTION_25	SWITCH_3	CALL_59
0x400351b	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1171	state.c	FUNCTION_25	SWITCH_3	CALL_59
0x4003521	            0x741f	                            je 0x4003542	      1171	state.c	FUNCTION_25	SWITCH_3	CALL_59
0x4003523	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1171	state.c	FUNCTION_25	SWITCH_3	CALL_59
0x4003527	          0x488b00	                    mov rax, qword [rax]	      1171	state.c	FUNCTION_25	SWITCH_3	CALL_59
0x400352a	      0x25ffffff7f	                     and eax, 0x7fffffff	      1171	state.c	FUNCTION_25	SWITCH_3	CALL_59
0x400352f	          0x4885c0	                           test rax, rax	      1171	state.c	FUNCTION_25	SWITCH_3	CALL_59
0x4003532	            0x740e	                            je 0x4003542	      1171	state.c	FUNCTION_25	SWITCH_3	CALL_59
0x4003534	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1171	state.c	FUNCTION_25	SWITCH_3	CALL_59
0x4003538	          0x488b00	                    mov rax, qword [rax]	      1171	state.c	FUNCTION_25	SWITCH_3	CALL_59
0x400353b	      0x25ffffff7f	                     and eax, 0x7fffffff	      1171	state.c	FUNCTION_25	SWITCH_3	CALL_59
0x4003540	            0xeb05	                           jmp 0x4003547	      1171	state.c	FUNCTION_25	SWITCH_3	CALL_59
0x4003542	      0xb801000000	                              mov eax, 1	      1171	state.c	FUNCTION_25	SWITCH_3	CALL_59
0x4003547	          0x8945bc	             mov dword [rbp - 0x44], eax	      1171	state.c	FUNCTION_25	SWITCH_3	CALL_59
0x400354a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1173	state.c	FUNCTION_25	SWITCH_3
0x400354e	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1173	state.c	FUNCTION_25	SWITCH_3
0x4003551	          0x8945e0	             mov dword [rbp - 0x20], eax	      1173	state.c	FUNCTION_25	SWITCH_3
0x4003554	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1174	state.c	FUNCTION_25	SWITCH_3
0x4003558	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1174	state.c	FUNCTION_25	SWITCH_3
0x400355b	          0x83c001	                              add eax, 1	      1174	state.c	FUNCTION_25	SWITCH_3
0x400355e	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1174	state.c	FUNCTION_25	SWITCH_3
0x4003561	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1175	state.c	FUNCTION_25	SWITCH_3
0x4003565	          0x8b4034	            mov eax, dword [rax + 0x34] 	      1175	state.c	FUNCTION_25	SWITCH_3
0x4003568	          0x8945e8	             mov dword [rbp - 0x18], eax	      1175	state.c	FUNCTION_25	SWITCH_3
0x400356b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1176	state.c	FUNCTION_25	SWITCH_3
0x400356f	          0x8b5034	            mov edx, dword [rax + 0x34] 	      1176	state.c	FUNCTION_25	SWITCH_3
0x4003572	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1176	state.c	FUNCTION_25	SWITCH_3
0x4003575	             0x1d0	                            add eax, edx	      1176	state.c	FUNCTION_25	SWITCH_3
0x4003577	          0x8945ec	             mov dword [rbp - 0x14], eax	      1176	state.c	FUNCTION_25	SWITCH_3
0x400357a	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x400357d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x4003581	        0x488b4858	            mov rcx, qword [rax + 0x58] 	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x4003585	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x4003589	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x400358c	            0x4898	                                    cdqe	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x400358e	        0x48c1e002	                              shl rax, 2	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x4003592	          0x4801c8	                            add rax, rcx	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x4003595	           0xfb600	                   movzx eax, byte [rax]	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x4003598	          0x83e001	                              and eax, 1	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x400359b	            0x84c0	                             test al, al	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x400359d	            0x7412	                            je 0x40035b1	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x400359f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x40035a3	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x40035a6	            0x89c1	                            mov ecx, eax	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x40035a8	          0xc1e91f	                           shr ecx, 0x1f	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x40035ab	             0x1c8	                            add eax, ecx	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x40035ad	            0xd1f8	                              sar eax, 1	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x40035af	            0xeb07	                           jmp 0x40035b8	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x40035b1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x40035b5	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x40035b8	            0x39c2	                            cmp edx, eax	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x40035ba	            0x7e3e	                           jle 0x40035fa	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x40035bc	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x40035c0	        0x488b5058	            mov rdx, qword [rax + 0x58] 	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x40035c4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x40035c8	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x40035cb	            0x4898	                                    cdqe	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x40035cd	        0x48c1e002	                              shl rax, 2	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x40035d1	          0x4801d0	                            add rax, rdx	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x40035d4	           0xfb600	                   movzx eax, byte [rax]	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x40035d7	          0x83e001	                              and eax, 1	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x40035da	            0x84c0	                             test al, al	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x40035dc	            0x7412	                            je 0x40035f0	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x40035de	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x40035e2	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x40035e5	            0x89c2	                            mov edx, eax	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x40035e7	          0xc1ea1f	                           shr edx, 0x1f	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x40035ea	             0x1d0	                            add eax, edx	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x40035ec	            0xd1f8	                              sar eax, 1	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x40035ee	            0xeb07	                           jmp 0x40035f7	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x40035f0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x40035f4	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x40035f7	          0x8945ec	             mov dword [rbp - 0x14], eax	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x40035fa	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1179	state.c	FUNCTION_25	SWITCH_3	CALL_61
0x40035fe	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1179	state.c	FUNCTION_25	SWITCH_3	CALL_61
0x4003602	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1179	state.c	FUNCTION_25	SWITCH_3	CALL_61
0x4003606	      0xb900000000	                              mov ecx, 0	      1179	state.c	FUNCTION_25	SWITCH_3	CALL_61
0x400360b	          0x4889c7	                            mov rdi, rax	      1179	state.c	FUNCTION_25	SWITCH_3	CALL_61
0x400360e	      0xe8decbffff	                          call sym.erase	      1179	state.c	FUNCTION_25	SWITCH_3	CALL_61
0x4003613	      0xe99a0d0000	                           jmp 0x40043b2	      1180	state.c	FUNCTION_25	SWITCH_3
0x4003618	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1183	state.c	FUNCTION_25	SWITCH_3	CALL_62
0x400361c	          0x488b00	                    mov rax, qword [rax]	      1183	state.c	FUNCTION_25	SWITCH_3	CALL_62
0x400361f	      0x25ffffff7f	                     and eax, 0x7fffffff	      1183	state.c	FUNCTION_25	SWITCH_3	CALL_62
0x4003624	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1183	state.c	FUNCTION_25	SWITCH_3	CALL_62
0x400362a	            0x741f	                            je 0x400364b	      1183	state.c	FUNCTION_25	SWITCH_3	CALL_62
0x400362c	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1183	state.c	FUNCTION_25	SWITCH_3	CALL_62
0x4003630	          0x488b00	                    mov rax, qword [rax]	      1183	state.c	FUNCTION_25	SWITCH_3	CALL_62
0x4003633	      0x25ffffff7f	                     and eax, 0x7fffffff	      1183	state.c	FUNCTION_25	SWITCH_3	CALL_62
0x4003638	          0x4885c0	                           test rax, rax	      1183	state.c	FUNCTION_25	SWITCH_3	CALL_62
0x400363b	            0x740e	                            je 0x400364b	      1183	state.c	FUNCTION_25	SWITCH_3	CALL_62
0x400363d	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1183	state.c	FUNCTION_25	SWITCH_3	CALL_62
0x4003641	          0x488b00	                    mov rax, qword [rax]	      1183	state.c	FUNCTION_25	SWITCH_3	CALL_62
0x4003644	      0x25ffffff7f	                     and eax, 0x7fffffff	      1183	state.c	FUNCTION_25	SWITCH_3	CALL_62
0x4003649	            0xeb05	                           jmp 0x4003650	      1183	state.c	FUNCTION_25	SWITCH_3	CALL_62
0x400364b	      0xb801000000	                              mov eax, 1	      1183	state.c	FUNCTION_25	SWITCH_3	CALL_62
0x4003650	          0x8945bc	             mov dword [rbp - 0x44], eax	      1183	state.c	FUNCTION_25	SWITCH_3	CALL_62
0x4003653	          0x8b4dbc	             mov ecx, dword [rbp - 0x44]	      1184	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x4003656	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1184	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x400365a	      0xbaffffffff	                     mov edx, 0xffffffff	      1184	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x400365f	            0x89ce	                            mov esi, ecx	      1184	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x4003661	          0x4889c7	                            mov rdi, rax	      1184	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x4003664	      0xe85cd2ffff	                            call sym.tab	      1184	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x4003669	      0xe9440d0000	                           jmp 0x40043b2	      1185	state.c	FUNCTION_25	SWITCH_3
0x400366e	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1188	state.c	FUNCTION_25	SWITCH_3	CALL_64
0x4003672	          0x488b00	                    mov rax, qword [rax]	      1188	state.c	FUNCTION_25	SWITCH_3	CALL_64
0x4003675	      0x25ffffff7f	                     and eax, 0x7fffffff	      1188	state.c	FUNCTION_25	SWITCH_3	CALL_64
0x400367a	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1188	state.c	FUNCTION_25	SWITCH_3	CALL_64
0x4003680	            0x740e	                            je 0x4003690	      1188	state.c	FUNCTION_25	SWITCH_3	CALL_64
0x4003682	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1188	state.c	FUNCTION_25	SWITCH_3	CALL_64
0x4003686	          0x488b00	                    mov rax, qword [rax]	      1188	state.c	FUNCTION_25	SWITCH_3	CALL_64
0x4003689	      0x25ffffff7f	                     and eax, 0x7fffffff	      1188	state.c	FUNCTION_25	SWITCH_3	CALL_64
0x400368e	            0xeb05	                           jmp 0x4003695	      1188	state.c	FUNCTION_25	SWITCH_3	CALL_64
0x4003690	      0xb801000000	                              mov eax, 1	      1188	state.c	FUNCTION_25	SWITCH_3	CALL_64
0x4003695	          0x8945b0	             mov dword [rbp - 0x50], eax	      1188	state.c	FUNCTION_25	SWITCH_3	CALL_64
0x4003698	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1189	state.c	FUNCTION_25	SWITCH_3
0x400369b	          0x8d50ff	                      lea edx, [rax - 1]	      1189	state.c	FUNCTION_25	SWITCH_3
0x400369e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1189	state.c	FUNCTION_25	SWITCH_3
0x40036a2	          0x895034	             mov dword [rax + 0x34], edx	      1189	state.c	FUNCTION_25	SWITCH_3
0x40036a5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1190	state.c	FUNCTION_25	SWITCH_3
0x40036a9	    0xc74038000000	               mov dword [rax + 0x38], 0	      1190	state.c	FUNCTION_25	SWITCH_3
0x40036b0	      0xe9fd0c0000	                           jmp 0x40043b2	      1191	state.c	FUNCTION_25	SWITCH_3
0x40036b5	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1194	state.c	FUNCTION_25	SWITCH_3	CALL_65
0x40036b9	          0x488b00	                    mov rax, qword [rax]	      1194	state.c	FUNCTION_25	SWITCH_3	CALL_65
0x40036bc	      0x25ffffff7f	                     and eax, 0x7fffffff	      1194	state.c	FUNCTION_25	SWITCH_3	CALL_65
0x40036c1	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1194	state.c	FUNCTION_25	SWITCH_3	CALL_65
0x40036c7	            0x741f	                            je 0x40036e8	      1194	state.c	FUNCTION_25	SWITCH_3	CALL_65
0x40036c9	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1194	state.c	FUNCTION_25	SWITCH_3	CALL_65
0x40036cd	          0x488b00	                    mov rax, qword [rax]	      1194	state.c	FUNCTION_25	SWITCH_3	CALL_65
0x40036d0	      0x25ffffff7f	                     and eax, 0x7fffffff	      1194	state.c	FUNCTION_25	SWITCH_3	CALL_65
0x40036d5	          0x4885c0	                           test rax, rax	      1194	state.c	FUNCTION_25	SWITCH_3	CALL_65
0x40036d8	            0x740e	                            je 0x40036e8	      1194	state.c	FUNCTION_25	SWITCH_3	CALL_65
0x40036da	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1194	state.c	FUNCTION_25	SWITCH_3	CALL_65
0x40036de	          0x488b00	                    mov rax, qword [rax]	      1194	state.c	FUNCTION_25	SWITCH_3	CALL_65
0x40036e1	      0x25ffffff7f	                     and eax, 0x7fffffff	      1194	state.c	FUNCTION_25	SWITCH_3	CALL_65
0x40036e6	            0xeb05	                           jmp 0x40036ed	      1194	state.c	FUNCTION_25	SWITCH_3	CALL_65
0x40036e8	      0xb801000000	                              mov eax, 1	      1194	state.c	FUNCTION_25	SWITCH_3	CALL_65
0x40036ed	          0x8945bc	             mov dword [rbp - 0x44], eax	      1194	state.c	FUNCTION_25	SWITCH_3	CALL_65
0x40036f0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1195	state.c	FUNCTION_25	SWITCH_3
0x40036f4	          0x8b5034	            mov edx, dword [rax + 0x34] 	      1195	state.c	FUNCTION_25	SWITCH_3
0x40036f7	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1195	state.c	FUNCTION_25	SWITCH_3
0x40036fa	             0x1c2	                            add edx, eax	      1195	state.c	FUNCTION_25	SWITCH_3
0x40036fc	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1195	state.c	FUNCTION_25	SWITCH_3
0x4003700	          0x895034	             mov dword [rax + 0x34], edx	      1195	state.c	FUNCTION_25	SWITCH_3
0x4003703	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1196	state.c	FUNCTION_25	SWITCH_3
0x4003707	    0xc74038000000	               mov dword [rax + 0x38], 0	      1196	state.c	FUNCTION_25	SWITCH_3
0x400370e	      0xe99f0c0000	                           jmp 0x40043b2	      1197	state.c	FUNCTION_25	SWITCH_3
0x4003713	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1200	state.c	FUNCTION_25	SWITCH_3	CALL_66
0x4003717	          0x488b00	                    mov rax, qword [rax]	      1200	state.c	FUNCTION_25	SWITCH_3	CALL_66
0x400371a	      0x25ffffff7f	                     and eax, 0x7fffffff	      1200	state.c	FUNCTION_25	SWITCH_3	CALL_66
0x400371f	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1200	state.c	FUNCTION_25	SWITCH_3	CALL_66
0x4003725	            0x740e	                            je 0x4003735	      1200	state.c	FUNCTION_25	SWITCH_3	CALL_66
0x4003727	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1200	state.c	FUNCTION_25	SWITCH_3	CALL_66
0x400372b	          0x488b00	                    mov rax, qword [rax]	      1200	state.c	FUNCTION_25	SWITCH_3	CALL_66
0x400372e	      0x25ffffff7f	                     and eax, 0x7fffffff	      1200	state.c	FUNCTION_25	SWITCH_3	CALL_66
0x4003733	            0xeb05	                           jmp 0x400373a	      1200	state.c	FUNCTION_25	SWITCH_3	CALL_66
0x4003735	      0xb800000000	                              mov eax, 0	      1200	state.c	FUNCTION_25	SWITCH_3	CALL_66
0x400373a	          0x8945b8	             mov dword [rbp - 0x48], eax	      1200	state.c	FUNCTION_25	SWITCH_3	CALL_66
0x400373d	        0x837db800	               cmp dword [rbp - 0x48], 0	      1201	state.c	FUNCTION_25	SWITCH_3	IF_17
0x4003741	     0xf85490c0000	                           jne 0x4004390	      1201	state.c	FUNCTION_25	SWITCH_3	IF_17
0x4003747	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1203	state.c	FUNCTION_25	SWITCH_3	CALL_67
0x400374b	          0x488b00	                    mov rax, qword [rax]	      1203	state.c	FUNCTION_25	SWITCH_3	CALL_67
0x400374e	      0xba00000000	                              mov edx, 0	      1203	state.c	FUNCTION_25	SWITCH_3	CALL_67
0x4003753	      0xbe9b000000	                           mov esi, 0x9b	      1203	state.c	FUNCTION_25	SWITCH_3	CALL_67
0x4003758	          0x4889c7	                            mov rdi, rax	      1203	state.c	FUNCTION_25	SWITCH_3	CALL_67
0x400375b	      0xb800000000	                              mov eax, 0	      1203	state.c	FUNCTION_25	SWITCH_3	CALL_67
0x4003760	      0xe800000000	                          call 0x4003765	      1203	state.c	FUNCTION_25	SWITCH_3	CALL_67
0x4003765	      0xe9260c0000	                           jmp 0x4004390	      1204	state.c	FUNCTION_25	SWITCH_3
0x400376a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1208	state.c	FUNCTION_25	SWITCH_3	CALL_68
0x400376e	          0x488b00	                    mov rax, qword [rax]	      1208	state.c	FUNCTION_25	SWITCH_3	CALL_68
0x4003771	    0x41b900000000	                              mov r9d, 0	      1208	state.c	FUNCTION_25	SWITCH_3	CALL_68
0x4003777	    0x41b864000000	                           mov r8d, 0x64	      1208	state.c	FUNCTION_25	SWITCH_3	CALL_68
0x400377d	      0xb900000000	                              mov ecx, 0	      1208	state.c	FUNCTION_25	SWITCH_3	CALL_68
0x4003782	      0xba00000000	                              mov edx, 0	      1208	state.c	FUNCTION_25	SWITCH_3	CALL_68
0x4003787	      0xbe9b000000	                           mov esi, 0x9b	      1208	state.c	FUNCTION_25	SWITCH_3	CALL_68
0x400378c	          0x4889c7	                            mov rdi, rax	      1208	state.c	FUNCTION_25	SWITCH_3	CALL_68
0x400378f	      0xb800000000	                              mov eax, 0	      1208	state.c	FUNCTION_25	SWITCH_3	CALL_68
0x4003794	      0xe800000000	                          call 0x4003799	      1208	state.c	FUNCTION_25	SWITCH_3	CALL_68
0x4003799	      0xe9140c0000	                           jmp 0x40043b2	      1209	state.c	FUNCTION_25	SWITCH_3
0x400379e	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1212	state.c	FUNCTION_25	SWITCH_3	CALL_69
0x40037a2	          0x488b00	                    mov rax, qword [rax]	      1212	state.c	FUNCTION_25	SWITCH_3	CALL_69
0x40037a5	      0x25ffffff7f	                     and eax, 0x7fffffff	      1212	state.c	FUNCTION_25	SWITCH_3	CALL_69
0x40037aa	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1212	state.c	FUNCTION_25	SWITCH_3	CALL_69
0x40037b0	            0x740e	                            je 0x40037c0	      1212	state.c	FUNCTION_25	SWITCH_3	CALL_69
0x40037b2	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1212	state.c	FUNCTION_25	SWITCH_3	CALL_69
0x40037b6	          0x488b00	                    mov rax, qword [rax]	      1212	state.c	FUNCTION_25	SWITCH_3	CALL_69
0x40037b9	      0x25ffffff7f	                     and eax, 0x7fffffff	      1212	state.c	FUNCTION_25	SWITCH_3	CALL_69
0x40037be	            0xeb05	                           jmp 0x40037c5	      1212	state.c	FUNCTION_25	SWITCH_3	CALL_69
0x40037c0	      0xb801000000	                              mov eax, 1	      1212	state.c	FUNCTION_25	SWITCH_3	CALL_69
0x40037c5	          0x8945ac	             mov dword [rbp - 0x54], eax	      1212	state.c	FUNCTION_25	SWITCH_3	CALL_69
0x40037c8	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1213	state.c	FUNCTION_25	SWITCH_3
0x40037cb	          0x8d50ff	                      lea edx, [rax - 1]	      1213	state.c	FUNCTION_25	SWITCH_3
0x40037ce	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1213	state.c	FUNCTION_25	SWITCH_3
0x40037d2	          0x895030	             mov dword [rax + 0x30], edx	      1213	state.c	FUNCTION_25	SWITCH_3
0x40037d5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1214	state.c	FUNCTION_25	SWITCH_3	IF_18
0x40037d9	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	      1214	state.c	FUNCTION_25	SWITCH_3	IF_18
0x40037e0	          0x83e004	                              and eax, 4	      1214	state.c	FUNCTION_25	SWITCH_3	IF_18
0x40037e3	            0x84c0	                             test al, al	      1214	state.c	FUNCTION_25	SWITCH_3	IF_18
0x40037e5	            0x7417	                            je 0x40037fe	      1214	state.c	FUNCTION_25	SWITCH_3	IF_18
0x40037e7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1215	state.c	FUNCTION_25	SWITCH_3	IF_18
0x40037eb	          0x8b5030	            mov edx, dword [rax + 0x30] 	      1215	state.c	FUNCTION_25	SWITCH_3	IF_18
0x40037ee	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1215	state.c	FUNCTION_25	SWITCH_3	IF_18
0x40037f2	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      1215	state.c	FUNCTION_25	SWITCH_3	IF_18
0x40037f5	             0x1c2	                            add edx, eax	      1215	state.c	FUNCTION_25	SWITCH_3	IF_18
0x40037f7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1215	state.c	FUNCTION_25	SWITCH_3	IF_18
0x40037fb	          0x895030	             mov dword [rax + 0x30], edx	      1215	state.c	FUNCTION_25	SWITCH_3	IF_18
0x40037fe	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1216	state.c	FUNCTION_25	SWITCH_3
0x4003802	    0xc74038000000	               mov dword [rax + 0x38], 0	      1216	state.c	FUNCTION_25	SWITCH_3
0x4003809	      0xe9a40b0000	                           jmp 0x40043b2	      1217	state.c	FUNCTION_25	SWITCH_3
0x400380e	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1220	state.c	FUNCTION_25	SWITCH_3	CALL_70
0x4003812	          0x488b00	                    mov rax, qword [rax]	      1220	state.c	FUNCTION_25	SWITCH_3	CALL_70
0x4003815	      0x25ffffff7f	                     and eax, 0x7fffffff	      1220	state.c	FUNCTION_25	SWITCH_3	CALL_70
0x400381a	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1220	state.c	FUNCTION_25	SWITCH_3	CALL_70
0x4003820	            0x741f	                            je 0x4003841	      1220	state.c	FUNCTION_25	SWITCH_3	CALL_70
0x4003822	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1220	state.c	FUNCTION_25	SWITCH_3	CALL_70
0x4003826	          0x488b00	                    mov rax, qword [rax]	      1220	state.c	FUNCTION_25	SWITCH_3	CALL_70
0x4003829	      0x25ffffff7f	                     and eax, 0x7fffffff	      1220	state.c	FUNCTION_25	SWITCH_3	CALL_70
0x400382e	          0x4885c0	                           test rax, rax	      1220	state.c	FUNCTION_25	SWITCH_3	CALL_70
0x4003831	            0x740e	                            je 0x4003841	      1220	state.c	FUNCTION_25	SWITCH_3	CALL_70
0x4003833	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1220	state.c	FUNCTION_25	SWITCH_3	CALL_70
0x4003837	          0x488b00	                    mov rax, qword [rax]	      1220	state.c	FUNCTION_25	SWITCH_3	CALL_70
0x400383a	      0x25ffffff7f	                     and eax, 0x7fffffff	      1220	state.c	FUNCTION_25	SWITCH_3	CALL_70
0x400383f	            0xeb05	                           jmp 0x4003846	      1220	state.c	FUNCTION_25	SWITCH_3	CALL_70
0x4003841	      0xb801000000	                              mov eax, 1	      1220	state.c	FUNCTION_25	SWITCH_3	CALL_70
0x4003846	          0x8945bc	             mov dword [rbp - 0x44], eax	      1220	state.c	FUNCTION_25	SWITCH_3	CALL_70
0x4003849	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1221	state.c	FUNCTION_25	SWITCH_3
0x400384d	          0x8b5030	            mov edx, dword [rax + 0x30] 	      1221	state.c	FUNCTION_25	SWITCH_3
0x4003850	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1221	state.c	FUNCTION_25	SWITCH_3
0x4003853	             0x1c2	                            add edx, eax	      1221	state.c	FUNCTION_25	SWITCH_3
0x4003855	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1221	state.c	FUNCTION_25	SWITCH_3
0x4003859	          0x895030	             mov dword [rax + 0x30], edx	      1221	state.c	FUNCTION_25	SWITCH_3
0x400385c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1222	state.c	FUNCTION_25	SWITCH_3
0x4003860	    0xc74038000000	               mov dword [rax + 0x38], 0	      1222	state.c	FUNCTION_25	SWITCH_3
0x4003867	      0xe9460b0000	                           jmp 0x40043b2	      1223	state.c	FUNCTION_25	SWITCH_3
0x400386c	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1226	state.c	FUNCTION_25	SWITCH_3	CALL_71
0x4003870	          0x488b00	                    mov rax, qword [rax]	      1226	state.c	FUNCTION_25	SWITCH_3	CALL_71
0x4003873	      0x25ffffff7f	                     and eax, 0x7fffffff	      1226	state.c	FUNCTION_25	SWITCH_3	CALL_71
0x4003878	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1226	state.c	FUNCTION_25	SWITCH_3	CALL_71
0x400387e	            0x740e	                            je 0x400388e	      1226	state.c	FUNCTION_25	SWITCH_3	CALL_71
0x4003880	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1226	state.c	FUNCTION_25	SWITCH_3	CALL_71
0x4003884	          0x488b00	                    mov rax, qword [rax]	      1226	state.c	FUNCTION_25	SWITCH_3	CALL_71
0x4003887	      0x25ffffff7f	                     and eax, 0x7fffffff	      1226	state.c	FUNCTION_25	SWITCH_3	CALL_71
0x400388c	            0xeb05	                           jmp 0x4003893	      1226	state.c	FUNCTION_25	SWITCH_3	CALL_71
0x400388e	      0xb801000000	                              mov eax, 1	      1226	state.c	FUNCTION_25	SWITCH_3	CALL_71
0x4003893	          0x8945ac	             mov dword [rbp - 0x54], eax	      1226	state.c	FUNCTION_25	SWITCH_3	CALL_71
0x4003896	        0x837d8c01	               cmp dword [rbp - 0x74], 1	      1227	state.c	FUNCTION_25	SWITCH_3	CALL_73
0x400389a	            0x7e2a	                           jle 0x40038c6	      1227	state.c	FUNCTION_25	SWITCH_3	CALL_73
0x400389c	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1227	state.c	FUNCTION_25	SWITCH_3	CALL_73
0x40038a0	        0x4883c008	                              add rax, 8	      1227	state.c	FUNCTION_25	SWITCH_3	CALL_73
0x40038a4	          0x488b00	                    mov rax, qword [rax]	      1227	state.c	FUNCTION_25	SWITCH_3	CALL_73
0x40038a7	      0x25ffffff7f	                     and eax, 0x7fffffff	      1227	state.c	FUNCTION_25	SWITCH_3	CALL_73
0x40038ac	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1227	state.c	FUNCTION_25	SWITCH_3	CALL_73
0x40038b2	            0x7412	                            je 0x40038c6	      1227	state.c	FUNCTION_25	SWITCH_3	CALL_73
0x40038b4	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1227	state.c	FUNCTION_25	SWITCH_3	CALL_73
0x40038b8	        0x4883c008	                              add rax, 8	      1227	state.c	FUNCTION_25	SWITCH_3	CALL_73
0x40038bc	          0x488b00	                    mov rax, qword [rax]	      1227	state.c	FUNCTION_25	SWITCH_3	CALL_73
0x40038bf	      0x25ffffff7f	                     and eax, 0x7fffffff	      1227	state.c	FUNCTION_25	SWITCH_3	CALL_73
0x40038c4	            0xeb05	                           jmp 0x40038cb	      1227	state.c	FUNCTION_25	SWITCH_3	CALL_73
0x40038c6	      0xb801000000	                              mov eax, 1	      1227	state.c	FUNCTION_25	SWITCH_3	CALL_73
0x40038cb	          0x8945b0	             mov dword [rbp - 0x50], eax	      1227	state.c	FUNCTION_25	SWITCH_3	CALL_73
0x40038ce	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1229	state.c	FUNCTION_25	SWITCH_3
0x40038d1	          0x8d50ff	                      lea edx, [rax - 1]	      1229	state.c	FUNCTION_25	SWITCH_3
0x40038d4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1229	state.c	FUNCTION_25	SWITCH_3
0x40038d8	          0x895030	             mov dword [rax + 0x30], edx	      1229	state.c	FUNCTION_25	SWITCH_3
0x40038db	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1230	state.c	FUNCTION_25	SWITCH_3
0x40038de	          0x8d50ff	                      lea edx, [rax - 1]	      1230	state.c	FUNCTION_25	SWITCH_3
0x40038e1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1230	state.c	FUNCTION_25	SWITCH_3
0x40038e5	          0x895034	             mov dword [rax + 0x34], edx	      1230	state.c	FUNCTION_25	SWITCH_3
0x40038e8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1231	state.c	FUNCTION_25	SWITCH_3	IF_19
0x40038ec	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	      1231	state.c	FUNCTION_25	SWITCH_3	IF_19
0x40038f3	          0x83e004	                              and eax, 4	      1231	state.c	FUNCTION_25	SWITCH_3	IF_19
0x40038f6	            0x84c0	                             test al, al	      1231	state.c	FUNCTION_25	SWITCH_3	IF_19
0x40038f8	            0x7447	                            je 0x4003941	      1231	state.c	FUNCTION_25	SWITCH_3	IF_19
0x40038fa	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1232	state.c	FUNCTION_25	SWITCH_3	IF_19
0x40038fe	          0x8b5030	            mov edx, dword [rax + 0x30] 	      1232	state.c	FUNCTION_25	SWITCH_3	IF_19
0x4003901	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1232	state.c	FUNCTION_25	SWITCH_3	IF_19
0x4003905	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      1232	state.c	FUNCTION_25	SWITCH_3	IF_19
0x4003908	             0x1c2	                            add edx, eax	      1232	state.c	FUNCTION_25	SWITCH_3	IF_19
0x400390a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1232	state.c	FUNCTION_25	SWITCH_3	IF_19
0x400390e	          0x895030	             mov dword [rax + 0x30], edx	      1232	state.c	FUNCTION_25	SWITCH_3	IF_19
0x4003911	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1233	state.c	FUNCTION_25	SWITCH_3	IF_19	CALL_74
0x4003915	          0x8b5034	            mov edx, dword [rax + 0x34] 	      1233	state.c	FUNCTION_25	SWITCH_3	IF_19	CALL_74
0x4003918	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1233	state.c	FUNCTION_25	SWITCH_3	IF_19	CALL_74
0x400391c	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	      1233	state.c	FUNCTION_25	SWITCH_3	IF_19	CALL_74
0x4003923	          0x83e010	                           and eax, 0x10	      1233	state.c	FUNCTION_25	SWITCH_3	IF_19	CALL_74
0x4003926	            0x84c0	                             test al, al	      1233	state.c	FUNCTION_25	SWITCH_3	IF_19	CALL_74
0x4003928	            0x7409	                            je 0x4003933	      1233	state.c	FUNCTION_25	SWITCH_3	IF_19	CALL_74
0x400392a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1233	state.c	FUNCTION_25	SWITCH_3	IF_19	CALL_74
0x400392e	          0x8b4044	            mov eax, dword [rax + 0x44] 	      1233	state.c	FUNCTION_25	SWITCH_3	IF_19	CALL_74
0x4003931	            0xeb05	                           jmp 0x4003938	      1233	state.c	FUNCTION_25	SWITCH_3	IF_19	CALL_74
0x4003933	      0xb800000000	                              mov eax, 0	      1233	state.c	FUNCTION_25	SWITCH_3	IF_19	CALL_74
0x4003938	             0x1c2	                            add edx, eax	      1233	state.c	FUNCTION_25	SWITCH_3	IF_19	CALL_74
0x400393a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1233	state.c	FUNCTION_25	SWITCH_3	IF_19	CALL_74
0x400393e	          0x895034	             mov dword [rax + 0x34], edx	      1233	state.c	FUNCTION_25	SWITCH_3	IF_19	CALL_74
0x4003941	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1235	state.c	FUNCTION_25	SWITCH_3
0x4003945	    0xc74038000000	               mov dword [rax + 0x38], 0	      1235	state.c	FUNCTION_25	SWITCH_3
0x400394c	      0xe9610a0000	                           jmp 0x40043b2	      1236	state.c	FUNCTION_25	SWITCH_3
0x4003951	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1239	state.c	FUNCTION_25	SWITCH_3	CALL_75
0x4003955	          0x488b00	                    mov rax, qword [rax]	      1239	state.c	FUNCTION_25	SWITCH_3	CALL_75
0x4003958	      0x25ffffff7f	                     and eax, 0x7fffffff	      1239	state.c	FUNCTION_25	SWITCH_3	CALL_75
0x400395d	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1239	state.c	FUNCTION_25	SWITCH_3	CALL_75
0x4003963	            0x740e	                            je 0x4003973	      1239	state.c	FUNCTION_25	SWITCH_3	CALL_75
0x4003965	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1239	state.c	FUNCTION_25	SWITCH_3	CALL_75
0x4003969	          0x488b00	                    mov rax, qword [rax]	      1239	state.c	FUNCTION_25	SWITCH_3	CALL_75
0x400396c	      0x25ffffff7f	                     and eax, 0x7fffffff	      1239	state.c	FUNCTION_25	SWITCH_3	CALL_75
0x4003971	            0xeb05	                           jmp 0x4003978	      1239	state.c	FUNCTION_25	SWITCH_3	CALL_75
0x4003973	      0xb800000000	                              mov eax, 0	      1239	state.c	FUNCTION_25	SWITCH_3	CALL_75
0x4003978	          0x8945b8	             mov dword [rbp - 0x48], eax	      1239	state.c	FUNCTION_25	SWITCH_3	CALL_75
0x400397b	        0x837db805	               cmp dword [rbp - 0x48], 5	      1241	state.c	FUNCTION_25	SWITCH_3	SWITCH_6
0x400397f	            0x7750	                            ja 0x40039d1	      1241	state.c	FUNCTION_25	SWITCH_3	SWITCH_6
0x4003981	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1241	state.c	FUNCTION_25	SWITCH_3	SWITCH_6
0x4003984	    0x488b04c50000	                  mov rax, qword [rax*8]	      1241	state.c	FUNCTION_25	SWITCH_3	SWITCH_6
0x400398c	            0xffe0	                                 jmp rax	      1241	state.c	FUNCTION_25	SWITCH_3	SWITCH_6
0x400398e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1243	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	CALL_76
0x4003992	          0x8b5034	            mov edx, dword [rax + 0x34] 	      1243	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	CALL_76
0x4003995	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1243	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	CALL_76
0x4003999	            0x89d6	                            mov esi, edx	      1243	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	CALL_76
0x400399b	          0x4889c7	                            mov rdi, rax	      1243	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	CALL_76
0x400399e	      0xe8d6cdffff	              call sym.clear_col_tabstop	      1243	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	CALL_76
0x40039a3	            0xeb37	                           jmp 0x40039dc	      1244	state.c	FUNCTION_25	SWITCH_3	SWITCH_6
0x40039a5	    0xc745b0000000	               mov dword [rbp - 0x50], 0	      1247	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	FOR_4
0x40039ac	            0xeb15	                           jmp 0x40039c3	      1247	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	FOR_4
0x40039ae	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      1248	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	CALL_77
0x40039b1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1248	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	CALL_77
0x40039b5	            0x89d6	                            mov esi, edx	      1248	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	CALL_77
0x40039b7	          0x4889c7	                            mov rdi, rax	      1248	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	CALL_77
0x40039ba	      0xe8bacdffff	              call sym.clear_col_tabstop	      1248	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	CALL_77
0x40039bf	        0x8345b001	               add dword [rbp - 0x50], 1	      1247	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	FOR_4
0x40039c3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1247	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	FOR_4
0x40039c7	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1247	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	FOR_4
0x40039ca	          0x3b45b0	             cmp eax, dword [rbp - 0x50]	      1247	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	FOR_4
0x40039cd	            0x7fdf	                            jg 0x40039ae	      1247	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	FOR_4
0x40039cf	            0xeb0b	                           jmp 0x40039dc	      1249	state.c	FUNCTION_25	SWITCH_3	SWITCH_6
0x40039d1	      0xb800000000	                              mov eax, 0	      1256	state.c	FUNCTION_25	SWITCH_3	SWITCH_6
0x40039d6	      0xe9370c0000	                           jmp 0x4004612	      1256	state.c	FUNCTION_25	SWITCH_3	SWITCH_6
0x40039db	              0x90	                                     nop	      1253	state.c	FUNCTION_25	SWITCH_3	SWITCH_6
0x40039dc	      0xe9d1090000	                           jmp 0x40043b2	      1258	state.c	FUNCTION_25	SWITCH_3
0x40039e1	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1261	state.c	FUNCTION_25	SWITCH_3	IF_20	CALL_78
0x40039e5	          0x488b00	                    mov rax, qword [rax]	      1261	state.c	FUNCTION_25	SWITCH_3	IF_20	CALL_78
0x40039e8	      0x25ffffff7f	                     and eax, 0x7fffffff	      1261	state.c	FUNCTION_25	SWITCH_3	IF_20	CALL_78
0x40039ed	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1261	state.c	FUNCTION_25	SWITCH_3	IF_20	CALL_78
0x40039f3	     0xf849a090000	                            je 0x4004393	      1261	state.c	FUNCTION_25	SWITCH_3	IF_20	CALL_78
0x40039f9	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1262	state.c	FUNCTION_25	SWITCH_3	CALL_80
0x40039fd	          0x488b00	                    mov rax, qword [rax]	      1262	state.c	FUNCTION_25	SWITCH_3	CALL_80
0x4003a00	      0x25ffffff7f	                     and eax, 0x7fffffff	      1262	state.c	FUNCTION_25	SWITCH_3	CALL_80
0x4003a05	            0x89c1	                            mov ecx, eax	      1262	state.c	FUNCTION_25	SWITCH_3	CALL_80
0x4003a07	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1262	state.c	FUNCTION_25	SWITCH_3	CALL_80
0x4003a0b	      0xba01000000	                              mov edx, 1	      1262	state.c	FUNCTION_25	SWITCH_3	CALL_80
0x4003a10	            0x89ce	                            mov esi, ecx	      1262	state.c	FUNCTION_25	SWITCH_3	CALL_80
0x4003a12	          0x4889c7	                            mov rdi, rax	      1262	state.c	FUNCTION_25	SWITCH_3	CALL_80
0x4003a15	      0xe8c3e2ffff	                       call sym.set_mode	      1262	state.c	FUNCTION_25	SWITCH_3	CALL_80
0x4003a1a	      0xe974090000	                           jmp 0x4004393	      1263	state.c	FUNCTION_25	SWITCH_3
0x4003a1f	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1266	state.c	FUNCTION_25	SWITCH_3	IF_21	CALL_81
0x4003a23	          0x488b00	                    mov rax, qword [rax]	      1266	state.c	FUNCTION_25	SWITCH_3	IF_21	CALL_81
0x4003a26	      0x25ffffff7f	                     and eax, 0x7fffffff	      1266	state.c	FUNCTION_25	SWITCH_3	IF_21	CALL_81
0x4003a2b	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1266	state.c	FUNCTION_25	SWITCH_3	IF_21	CALL_81
0x4003a31	     0xf845f090000	                            je 0x4004396	      1266	state.c	FUNCTION_25	SWITCH_3	IF_21	CALL_81
0x4003a37	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1267	state.c	FUNCTION_25	SWITCH_3	CALL_83
0x4003a3b	          0x488b00	                    mov rax, qword [rax]	      1267	state.c	FUNCTION_25	SWITCH_3	CALL_83
0x4003a3e	      0x25ffffff7f	                     and eax, 0x7fffffff	      1267	state.c	FUNCTION_25	SWITCH_3	CALL_83
0x4003a43	            0x89c1	                            mov ecx, eax	      1267	state.c	FUNCTION_25	SWITCH_3	CALL_83
0x4003a45	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1267	state.c	FUNCTION_25	SWITCH_3	CALL_83
0x4003a49	      0xba01000000	                              mov edx, 1	      1267	state.c	FUNCTION_25	SWITCH_3	CALL_83
0x4003a4e	            0x89ce	                            mov esi, ecx	      1267	state.c	FUNCTION_25	SWITCH_3	CALL_83
0x4003a50	          0x4889c7	                            mov rdi, rax	      1267	state.c	FUNCTION_25	SWITCH_3	CALL_83
0x4003a53	      0xe8f5e2ffff	                   call sym.set_dec_mode	      1267	state.c	FUNCTION_25	SWITCH_3	CALL_83
0x4003a58	      0xe939090000	                           jmp 0x4004396	      1268	state.c	FUNCTION_25	SWITCH_3
0x4003a5d	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1271	state.c	FUNCTION_25	SWITCH_3	CALL_84
0x4003a61	          0x488b00	                    mov rax, qword [rax]	      1271	state.c	FUNCTION_25	SWITCH_3	CALL_84
0x4003a64	      0x25ffffff7f	                     and eax, 0x7fffffff	      1271	state.c	FUNCTION_25	SWITCH_3	CALL_84
0x4003a69	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1271	state.c	FUNCTION_25	SWITCH_3	CALL_84
0x4003a6f	            0x741f	                            je 0x4003a90	      1271	state.c	FUNCTION_25	SWITCH_3	CALL_84
0x4003a71	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1271	state.c	FUNCTION_25	SWITCH_3	CALL_84
0x4003a75	          0x488b00	                    mov rax, qword [rax]	      1271	state.c	FUNCTION_25	SWITCH_3	CALL_84
0x4003a78	      0x25ffffff7f	                     and eax, 0x7fffffff	      1271	state.c	FUNCTION_25	SWITCH_3	CALL_84
0x4003a7d	          0x4885c0	                           test rax, rax	      1271	state.c	FUNCTION_25	SWITCH_3	CALL_84
0x4003a80	            0x740e	                            je 0x4003a90	      1271	state.c	FUNCTION_25	SWITCH_3	CALL_84
0x4003a82	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1271	state.c	FUNCTION_25	SWITCH_3	CALL_84
0x4003a86	          0x488b00	                    mov rax, qword [rax]	      1271	state.c	FUNCTION_25	SWITCH_3	CALL_84
0x4003a89	      0x25ffffff7f	                     and eax, 0x7fffffff	      1271	state.c	FUNCTION_25	SWITCH_3	CALL_84
0x4003a8e	            0xeb05	                           jmp 0x4003a95	      1271	state.c	FUNCTION_25	SWITCH_3	CALL_84
0x4003a90	      0xb801000000	                              mov eax, 1	      1271	state.c	FUNCTION_25	SWITCH_3	CALL_84
0x4003a95	          0x8945bc	             mov dword [rbp - 0x44], eax	      1271	state.c	FUNCTION_25	SWITCH_3	CALL_84
0x4003a98	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1272	state.c	FUNCTION_25	SWITCH_3
0x4003a9c	          0x8b4034	            mov eax, dword [rax + 0x34] 	      1272	state.c	FUNCTION_25	SWITCH_3
0x4003a9f	          0x2b45bc	             sub eax, dword [rbp - 0x44]	      1272	state.c	FUNCTION_25	SWITCH_3
0x4003aa2	            0x89c2	                            mov edx, eax	      1272	state.c	FUNCTION_25	SWITCH_3
0x4003aa4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1272	state.c	FUNCTION_25	SWITCH_3
0x4003aa8	          0x895034	             mov dword [rax + 0x34], edx	      1272	state.c	FUNCTION_25	SWITCH_3
0x4003aab	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1273	state.c	FUNCTION_25	SWITCH_3
0x4003aaf	    0xc74038000000	               mov dword [rax + 0x38], 0	      1273	state.c	FUNCTION_25	SWITCH_3
0x4003ab6	      0xe9f7080000	                           jmp 0x40043b2	      1274	state.c	FUNCTION_25	SWITCH_3
0x4003abb	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1277	state.c	FUNCTION_25	SWITCH_3	CALL_85
0x4003abf	          0x488b00	                    mov rax, qword [rax]	      1277	state.c	FUNCTION_25	SWITCH_3	CALL_85
0x4003ac2	      0x25ffffff7f	                     and eax, 0x7fffffff	      1277	state.c	FUNCTION_25	SWITCH_3	CALL_85
0x4003ac7	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1277	state.c	FUNCTION_25	SWITCH_3	CALL_85
0x4003acd	            0x741f	                            je 0x4003aee	      1277	state.c	FUNCTION_25	SWITCH_3	CALL_85
0x4003acf	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1277	state.c	FUNCTION_25	SWITCH_3	CALL_85
0x4003ad3	          0x488b00	                    mov rax, qword [rax]	      1277	state.c	FUNCTION_25	SWITCH_3	CALL_85
0x4003ad6	      0x25ffffff7f	                     and eax, 0x7fffffff	      1277	state.c	FUNCTION_25	SWITCH_3	CALL_85
0x4003adb	          0x4885c0	                           test rax, rax	      1277	state.c	FUNCTION_25	SWITCH_3	CALL_85
0x4003ade	            0x740e	                            je 0x4003aee	      1277	state.c	FUNCTION_25	SWITCH_3	CALL_85
0x4003ae0	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1277	state.c	FUNCTION_25	SWITCH_3	CALL_85
0x4003ae4	          0x488b00	                    mov rax, qword [rax]	      1277	state.c	FUNCTION_25	SWITCH_3	CALL_85
0x4003ae7	      0x25ffffff7f	                     and eax, 0x7fffffff	      1277	state.c	FUNCTION_25	SWITCH_3	CALL_85
0x4003aec	            0xeb05	                           jmp 0x4003af3	      1277	state.c	FUNCTION_25	SWITCH_3	CALL_85
0x4003aee	      0xb801000000	                              mov eax, 1	      1277	state.c	FUNCTION_25	SWITCH_3	CALL_85
0x4003af3	          0x8945bc	             mov dword [rbp - 0x44], eax	      1277	state.c	FUNCTION_25	SWITCH_3	CALL_85
0x4003af6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1278	state.c	FUNCTION_25	SWITCH_3
0x4003afa	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1278	state.c	FUNCTION_25	SWITCH_3
0x4003afd	          0x2b45bc	             sub eax, dword [rbp - 0x44]	      1278	state.c	FUNCTION_25	SWITCH_3
0x4003b00	            0x89c2	                            mov edx, eax	      1278	state.c	FUNCTION_25	SWITCH_3
0x4003b02	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1278	state.c	FUNCTION_25	SWITCH_3
0x4003b06	          0x895030	             mov dword [rax + 0x30], edx	      1278	state.c	FUNCTION_25	SWITCH_3
0x4003b09	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1279	state.c	FUNCTION_25	SWITCH_3
0x4003b0d	    0xc74038000000	               mov dword [rax + 0x38], 0	      1279	state.c	FUNCTION_25	SWITCH_3
0x4003b14	      0xe999080000	                           jmp 0x40043b2	      1280	state.c	FUNCTION_25	SWITCH_3
0x4003b19	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1283	state.c	FUNCTION_25	SWITCH_3	IF_22	CALL_86
0x4003b1d	          0x488b00	                    mov rax, qword [rax]	      1283	state.c	FUNCTION_25	SWITCH_3	IF_22	CALL_86
0x4003b20	      0x25ffffff7f	                     and eax, 0x7fffffff	      1283	state.c	FUNCTION_25	SWITCH_3	IF_22	CALL_86
0x4003b25	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1283	state.c	FUNCTION_25	SWITCH_3	IF_22	CALL_86
0x4003b2b	     0xf8468080000	                            je 0x4004399	      1283	state.c	FUNCTION_25	SWITCH_3	IF_22	CALL_86
0x4003b31	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1284	state.c	FUNCTION_25	SWITCH_3	CALL_88
0x4003b35	          0x488b00	                    mov rax, qword [rax]	      1284	state.c	FUNCTION_25	SWITCH_3	CALL_88
0x4003b38	      0x25ffffff7f	                     and eax, 0x7fffffff	      1284	state.c	FUNCTION_25	SWITCH_3	CALL_88
0x4003b3d	            0x89c1	                            mov ecx, eax	      1284	state.c	FUNCTION_25	SWITCH_3	CALL_88
0x4003b3f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1284	state.c	FUNCTION_25	SWITCH_3	CALL_88
0x4003b43	      0xba00000000	                              mov edx, 0	      1284	state.c	FUNCTION_25	SWITCH_3	CALL_88
0x4003b48	            0x89ce	                            mov esi, ecx	      1284	state.c	FUNCTION_25	SWITCH_3	CALL_88
0x4003b4a	          0x4889c7	                            mov rdi, rax	      1284	state.c	FUNCTION_25	SWITCH_3	CALL_88
0x4003b4d	      0xe88be1ffff	                       call sym.set_mode	      1284	state.c	FUNCTION_25	SWITCH_3	CALL_88
0x4003b52	      0xe942080000	                           jmp 0x4004399	      1285	state.c	FUNCTION_25	SWITCH_3
0x4003b57	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1288	state.c	FUNCTION_25	SWITCH_3	IF_23	CALL_89
0x4003b5b	          0x488b00	                    mov rax, qword [rax]	      1288	state.c	FUNCTION_25	SWITCH_3	IF_23	CALL_89
0x4003b5e	      0x25ffffff7f	                     and eax, 0x7fffffff	      1288	state.c	FUNCTION_25	SWITCH_3	IF_23	CALL_89
0x4003b63	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1288	state.c	FUNCTION_25	SWITCH_3	IF_23	CALL_89
0x4003b69	     0xf842d080000	                            je 0x400439c	      1288	state.c	FUNCTION_25	SWITCH_3	IF_23	CALL_89
0x4003b6f	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1289	state.c	FUNCTION_25	SWITCH_3	CALL_91
0x4003b73	          0x488b00	                    mov rax, qword [rax]	      1289	state.c	FUNCTION_25	SWITCH_3	CALL_91
0x4003b76	      0x25ffffff7f	                     and eax, 0x7fffffff	      1289	state.c	FUNCTION_25	SWITCH_3	CALL_91
0x4003b7b	            0x89c1	                            mov ecx, eax	      1289	state.c	FUNCTION_25	SWITCH_3	CALL_91
0x4003b7d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1289	state.c	FUNCTION_25	SWITCH_3	CALL_91
0x4003b81	      0xba00000000	                              mov edx, 0	      1289	state.c	FUNCTION_25	SWITCH_3	CALL_91
0x4003b86	            0x89ce	                            mov esi, ecx	      1289	state.c	FUNCTION_25	SWITCH_3	CALL_91
0x4003b88	          0x4889c7	                            mov rdi, rax	      1289	state.c	FUNCTION_25	SWITCH_3	CALL_91
0x4003b8b	      0xe8bde1ffff	                   call sym.set_dec_mode	      1289	state.c	FUNCTION_25	SWITCH_3	CALL_91
0x4003b90	      0xe907080000	                           jmp 0x400439c	      1290	state.c	FUNCTION_25	SWITCH_3
0x4003b95	          0x8b558c	             mov edx, dword [rbp - 0x74]	      1293	state.c	FUNCTION_25	SWITCH_3	CALL_92
0x4003b98	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	      1293	state.c	FUNCTION_25	SWITCH_3	CALL_92
0x4003b9c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1293	state.c	FUNCTION_25	SWITCH_3	CALL_92
0x4003ba0	          0x4889ce	                            mov rsi, rcx	      1293	state.c	FUNCTION_25	SWITCH_3	CALL_92
0x4003ba3	          0x4889c7	                            mov rdi, rax	      1293	state.c	FUNCTION_25	SWITCH_3	CALL_92
0x4003ba6	      0xe800000000	                          call 0x4003bab	      1293	state.c	FUNCTION_25	SWITCH_3	CALL_92
0x4003bab	      0xe902080000	                           jmp 0x40043b2	      1294	state.c	FUNCTION_25	SWITCH_3
0x4003bb0	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1298	state.c	FUNCTION_25	SWITCH_3	CALL_93
0x4003bb4	          0x488b00	                    mov rax, qword [rax]	      1298	state.c	FUNCTION_25	SWITCH_3	CALL_93
0x4003bb7	      0x25ffffff7f	                     and eax, 0x7fffffff	      1298	state.c	FUNCTION_25	SWITCH_3	CALL_93
0x4003bbc	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1298	state.c	FUNCTION_25	SWITCH_3	CALL_93
0x4003bc2	            0x740e	                            je 0x4003bd2	      1298	state.c	FUNCTION_25	SWITCH_3	CALL_93
0x4003bc4	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1298	state.c	FUNCTION_25	SWITCH_3	CALL_93
0x4003bc8	          0x488b00	                    mov rax, qword [rax]	      1298	state.c	FUNCTION_25	SWITCH_3	CALL_93
0x4003bcb	      0x25ffffff7f	                     and eax, 0x7fffffff	      1298	state.c	FUNCTION_25	SWITCH_3	CALL_93
0x4003bd0	            0xeb05	                           jmp 0x4003bd7	      1298	state.c	FUNCTION_25	SWITCH_3	CALL_93
0x4003bd2	      0xb800000000	                              mov eax, 0	      1298	state.c	FUNCTION_25	SWITCH_3	CALL_93
0x4003bd7	          0x8945b8	             mov dword [rbp - 0x48], eax	      1298	state.c	FUNCTION_25	SWITCH_3	CALL_93
0x4003bda	        0x837da43f	           cmp dword [rbp - 0x5c], 0x3f 	      1301	state.c	FUNCTION_25	SWITCH_3
0x4003bde	            0x7507	                           jne 0x4003be7	      1301	state.c	FUNCTION_25	SWITCH_3
0x4003be0	      0xb800000000	                              mov eax, 0	      1301	state.c	FUNCTION_25	SWITCH_3
0x4003be5	            0xeb05	                           jmp 0x4003bec	      1301	state.c	FUNCTION_25	SWITCH_3
0x4003be7	      0xb800000000	                              mov eax, 0	      1301	state.c	FUNCTION_25	SWITCH_3
0x4003bec	        0x488945d8	             mov qword [rbp - 0x28], rax	      1301	state.c	FUNCTION_25	SWITCH_3
0x4003bf0	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1303	state.c	FUNCTION_25	SWITCH_3	SWITCH_7
0x4003bf3	          0x83f805	                              cmp eax, 5	      1303	state.c	FUNCTION_25	SWITCH_3	SWITCH_7
0x4003bf6	            0x7419	                            je 0x4003c11	      1303	state.c	FUNCTION_25	SWITCH_3	SWITCH_7
0x4003bf8	          0x83f805	                              cmp eax, 5	      1303	state.c	FUNCTION_25	SWITCH_3	SWITCH_7
0x4003bfb	            0x7f0a	                            jg 0x4003c07	      1303	state.c	FUNCTION_25	SWITCH_3	SWITCH_7
0x4003bfd	            0x85c0	                           test eax, eax	      1303	state.c	FUNCTION_25	SWITCH_3	SWITCH_7
0x4003bff	     0xf889a070000	                            js 0x400439f	      1303	state.c	FUNCTION_25	SWITCH_3	SWITCH_7
0x4003c05	            0xeb71	                           jmp 0x4003c78	      1306	state.c	FUNCTION_25	SWITCH_3	SWITCH_7
0x4003c07	          0x83f806	                              cmp eax, 6	      1303	state.c	FUNCTION_25	SWITCH_3	SWITCH_7
0x4003c0a	            0x742c	                            je 0x4003c38	      1303	state.c	FUNCTION_25	SWITCH_3	SWITCH_7
0x4003c0c	      0xe98e070000	                           jmp 0x400439f	      1315	state.c	FUNCTION_25	SWITCH_3
0x4003c11	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1308	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_94
0x4003c15	          0x488b00	                    mov rax, qword [rax]	      1308	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_94
0x4003c18	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1308	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_94
0x4003c1c	          0x4889d1	                            mov rcx, rdx	      1308	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_94
0x4003c1f	      0xba00000000	                              mov edx, 0	      1308	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_94
0x4003c24	      0xbe9b000000	                           mov esi, 0x9b	      1308	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_94
0x4003c29	          0x4889c7	                            mov rdi, rax	      1308	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_94
0x4003c2c	      0xb800000000	                              mov eax, 0	      1308	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_94
0x4003c31	      0xe800000000	                          call 0x4003c36	      1308	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_94
0x4003c36	            0xeb40	                           jmp 0x4003c78	      1309	state.c	FUNCTION_25	SWITCH_3	SWITCH_7
0x4003c38	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_95
0x4003c3c	          0x8b4034	            mov eax, dword [rax + 0x34] 	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_95
0x4003c3f	          0x8d7001	                      lea esi, [rax + 1]	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_95
0x4003c42	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_95
0x4003c46	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_95
0x4003c49	          0x8d4801	                      lea ecx, [rax + 1]	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_95
0x4003c4c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_95
0x4003c50	          0x488b00	                    mov rax, qword [rax]	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_95
0x4003c53	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_95
0x4003c57	          0x4189f1	                            mov r9d, esi	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_95
0x4003c5a	          0x4189c8	                            mov r8d, ecx	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_95
0x4003c5d	          0x4889d1	                            mov rcx, rdx	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_95
0x4003c60	      0xba00000000	                              mov edx, 0	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_95
0x4003c65	      0xbe9b000000	                           mov esi, 0x9b	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_95
0x4003c6a	          0x4889c7	                            mov rdi, rax	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_95
0x4003c6d	      0xb800000000	                              mov eax, 0	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_95
0x4003c72	      0xe800000000	                          call 0x4003c77	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_95
0x4003c77	              0x90	                                     nop	      1312	state.c	FUNCTION_25	SWITCH_3	SWITCH_7
0x4003c78	      0xe922070000	                           jmp 0x400439f	      1315	state.c	FUNCTION_25	SWITCH_3
0x4003c7d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1319	state.c	FUNCTION_25	SWITCH_3	CALL_96
0x4003c81	      0xbe00000000	                              mov esi, 0	      1319	state.c	FUNCTION_25	SWITCH_3	CALL_96
0x4003c86	          0x4889c7	                            mov rdi, rax	      1319	state.c	FUNCTION_25	SWITCH_3	CALL_96
0x4003c89	      0xe800000000	                          call 0x4003c8e	      1319	state.c	FUNCTION_25	SWITCH_3	CALL_96
0x4003c8e	      0xe91f070000	                           jmp 0x40043b2	      1320	state.c	FUNCTION_25	SWITCH_3
0x4003c93	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1323	state.c	FUNCTION_25	SWITCH_3	CALL_98
0x4003c97	          0x488b00	                    mov rax, qword [rax]	      1323	state.c	FUNCTION_25	SWITCH_3	CALL_98
0x4003c9a	      0x25ffffff7f	                     and eax, 0x7fffffff	      1323	state.c	FUNCTION_25	SWITCH_3	CALL_98
0x4003c9f	            0x89c2	                            mov edx, eax	      1323	state.c	FUNCTION_25	SWITCH_3	CALL_98
0x4003ca1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1323	state.c	FUNCTION_25	SWITCH_3	CALL_98
0x4003ca5	            0x89d6	                            mov esi, edx	      1323	state.c	FUNCTION_25	SWITCH_3	CALL_98
0x4003ca7	          0x4889c7	                            mov rdi, rax	      1323	state.c	FUNCTION_25	SWITCH_3	CALL_98
0x4003caa	      0xe8c5e4ffff	               call sym.request_dec_mode	      1323	state.c	FUNCTION_25	SWITCH_3	CALL_98
0x4003caf	      0xe9fe060000	                           jmp 0x40043b2	      1324	state.c	FUNCTION_25	SWITCH_3
0x4003cb4	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1327	state.c	FUNCTION_25	SWITCH_3	CALL_99
0x4003cb8	          0x488b00	                    mov rax, qword [rax]	      1327	state.c	FUNCTION_25	SWITCH_3	CALL_99
0x4003cbb	      0x25ffffff7f	                     and eax, 0x7fffffff	      1327	state.c	FUNCTION_25	SWITCH_3	CALL_99
0x4003cc0	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1327	state.c	FUNCTION_25	SWITCH_3	CALL_99
0x4003cc6	            0x740e	                            je 0x4003cd6	      1327	state.c	FUNCTION_25	SWITCH_3	CALL_99
0x4003cc8	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1327	state.c	FUNCTION_25	SWITCH_3	CALL_99
0x4003ccc	          0x488b00	                    mov rax, qword [rax]	      1327	state.c	FUNCTION_25	SWITCH_3	CALL_99
0x4003ccf	      0x25ffffff7f	                     and eax, 0x7fffffff	      1327	state.c	FUNCTION_25	SWITCH_3	CALL_99
0x4003cd4	            0xeb05	                           jmp 0x4003cdb	      1327	state.c	FUNCTION_25	SWITCH_3	CALL_99
0x4003cd6	      0xb801000000	                              mov eax, 1	      1327	state.c	FUNCTION_25	SWITCH_3	CALL_99
0x4003cdb	          0x8945b8	             mov dword [rbp - 0x48], eax	      1327	state.c	FUNCTION_25	SWITCH_3	CALL_99
0x4003cde	        0x837db806	               cmp dword [rbp - 0x48], 6	      1329	state.c	FUNCTION_25	SWITCH_3	SWITCH_8
0x4003ce2	     0xf87ba060000	                            ja 0x40043a2	      1329	state.c	FUNCTION_25	SWITCH_3	SWITCH_8
0x4003ce8	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1329	state.c	FUNCTION_25	SWITCH_3	SWITCH_8
0x4003ceb	    0x488b04c50000	                  mov rax, qword [rax*8]	      1329	state.c	FUNCTION_25	SWITCH_3	SWITCH_8
0x4003cf3	            0xffe0	                                 jmp rax	      1329	state.c	FUNCTION_25	SWITCH_3	SWITCH_8
0x4003cf5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1331	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_100
0x4003cf9	      0xba01000000	                              mov edx, 1	      1331	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_100
0x4003cfe	      0xbe02000000	                              mov esi, 2	      1331	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_100
0x4003d03	          0x4889c7	                            mov rdi, rax	      1331	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_100
0x4003d06	      0xe8f5d7ffff	               call sym.settermprop_bool	      1331	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_100
0x4003d0b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1332	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_101
0x4003d0f	      0xba01000000	                              mov edx, 1	      1332	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_101
0x4003d14	      0xbe07000000	                              mov esi, 7	      1332	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_101
0x4003d19	          0x4889c7	                            mov rdi, rax	      1332	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_101
0x4003d1c	      0xe831d8ffff	                call sym.settermprop_int	      1332	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_101
0x4003d21	      0xe9eb000000	                           jmp 0x4003e11	      1333	state.c	FUNCTION_25	SWITCH_3	SWITCH_8
0x4003d26	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1335	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_102
0x4003d2a	      0xba00000000	                              mov edx, 0	      1335	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_102
0x4003d2f	      0xbe02000000	                              mov esi, 2	      1335	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_102
0x4003d34	          0x4889c7	                            mov rdi, rax	      1335	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_102
0x4003d37	      0xe8c4d7ffff	               call sym.settermprop_bool	      1335	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_102
0x4003d3c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1336	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_103
0x4003d40	      0xba01000000	                              mov edx, 1	      1336	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_103
0x4003d45	      0xbe07000000	                              mov esi, 7	      1336	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_103
0x4003d4a	          0x4889c7	                            mov rdi, rax	      1336	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_103
0x4003d4d	      0xe800d8ffff	                call sym.settermprop_int	      1336	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_103
0x4003d52	      0xe9ba000000	                           jmp 0x4003e11	      1337	state.c	FUNCTION_25	SWITCH_3	SWITCH_8
0x4003d57	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1339	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_104
0x4003d5b	      0xba01000000	                              mov edx, 1	      1339	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_104
0x4003d60	      0xbe02000000	                              mov esi, 2	      1339	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_104
0x4003d65	          0x4889c7	                            mov rdi, rax	      1339	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_104
0x4003d68	      0xe893d7ffff	               call sym.settermprop_bool	      1339	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_104
0x4003d6d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1340	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_105
0x4003d71	      0xba02000000	                              mov edx, 2	      1340	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_105
0x4003d76	      0xbe07000000	                              mov esi, 7	      1340	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_105
0x4003d7b	          0x4889c7	                            mov rdi, rax	      1340	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_105
0x4003d7e	      0xe8cfd7ffff	                call sym.settermprop_int	      1340	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_105
0x4003d83	      0xe989000000	                           jmp 0x4003e11	      1341	state.c	FUNCTION_25	SWITCH_3	SWITCH_8
0x4003d88	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1343	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_106
0x4003d8c	      0xba00000000	                              mov edx, 0	      1343	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_106
0x4003d91	      0xbe02000000	                              mov esi, 2	      1343	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_106
0x4003d96	          0x4889c7	                            mov rdi, rax	      1343	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_106
0x4003d99	      0xe862d7ffff	               call sym.settermprop_bool	      1343	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_106
0x4003d9e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1344	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_107
0x4003da2	      0xba02000000	                              mov edx, 2	      1344	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_107
0x4003da7	      0xbe07000000	                              mov esi, 7	      1344	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_107
0x4003dac	          0x4889c7	                            mov rdi, rax	      1344	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_107
0x4003daf	      0xe89ed7ffff	                call sym.settermprop_int	      1344	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_107
0x4003db4	            0xeb5b	                           jmp 0x4003e11	      1345	state.c	FUNCTION_25	SWITCH_3	SWITCH_8
0x4003db6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1347	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_108
0x4003dba	      0xba01000000	                              mov edx, 1	      1347	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_108
0x4003dbf	      0xbe02000000	                              mov esi, 2	      1347	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_108
0x4003dc4	          0x4889c7	                            mov rdi, rax	      1347	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_108
0x4003dc7	      0xe834d7ffff	               call sym.settermprop_bool	      1347	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_108
0x4003dcc	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1348	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_109
0x4003dd0	      0xba03000000	                              mov edx, 3	      1348	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_109
0x4003dd5	      0xbe07000000	                              mov esi, 7	      1348	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_109
0x4003dda	          0x4889c7	                            mov rdi, rax	      1348	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_109
0x4003ddd	      0xe870d7ffff	                call sym.settermprop_int	      1348	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_109
0x4003de2	            0xeb2d	                           jmp 0x4003e11	      1349	state.c	FUNCTION_25	SWITCH_3	SWITCH_8
0x4003de4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1351	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_110
0x4003de8	      0xba00000000	                              mov edx, 0	      1351	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_110
0x4003ded	      0xbe02000000	                              mov esi, 2	      1351	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_110
0x4003df2	          0x4889c7	                            mov rdi, rax	      1351	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_110
0x4003df5	      0xe806d7ffff	               call sym.settermprop_bool	      1351	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_110
0x4003dfa	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1352	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_111
0x4003dfe	      0xba03000000	                              mov edx, 3	      1352	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_111
0x4003e03	      0xbe07000000	                              mov esi, 7	      1352	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_111
0x4003e08	          0x4889c7	                            mov rdi, rax	      1352	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_111
0x4003e0b	      0xe842d7ffff	                call sym.settermprop_int	      1352	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_111
0x4003e10	              0x90	                                     nop	      1353	state.c	FUNCTION_25	SWITCH_3	SWITCH_8
0x4003e11	      0xe98c050000	                           jmp 0x40043a2	      1356	state.c	FUNCTION_25	SWITCH_3
0x4003e16	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1359	state.c	FUNCTION_25	SWITCH_3	CALL_112
0x4003e1a	          0x488b00	                    mov rax, qword [rax]	      1359	state.c	FUNCTION_25	SWITCH_3	CALL_112
0x4003e1d	      0x25ffffff7f	                     and eax, 0x7fffffff	      1359	state.c	FUNCTION_25	SWITCH_3	CALL_112
0x4003e22	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1359	state.c	FUNCTION_25	SWITCH_3	CALL_112
0x4003e28	            0x740e	                            je 0x4003e38	      1359	state.c	FUNCTION_25	SWITCH_3	CALL_112
0x4003e2a	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1359	state.c	FUNCTION_25	SWITCH_3	CALL_112
0x4003e2e	          0x488b00	                    mov rax, qword [rax]	      1359	state.c	FUNCTION_25	SWITCH_3	CALL_112
0x4003e31	      0x25ffffff7f	                     and eax, 0x7fffffff	      1359	state.c	FUNCTION_25	SWITCH_3	CALL_112
0x4003e36	            0xeb05	                           jmp 0x4003e3d	      1359	state.c	FUNCTION_25	SWITCH_3	CALL_112
0x4003e38	      0xb800000000	                              mov eax, 0	      1359	state.c	FUNCTION_25	SWITCH_3	CALL_112
0x4003e3d	          0x8945b8	             mov dword [rbp - 0x48], eax	      1359	state.c	FUNCTION_25	SWITCH_3	CALL_112
0x4003e40	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1361	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x4003e43	          0x83f801	                              cmp eax, 1	      1361	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x4003e46	            0x7424	                            je 0x4003e6c	      1361	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x4003e48	          0x83f802	                              cmp eax, 2	      1361	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x4003e4b	            0x7409	                            je 0x4003e56	      1361	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x4003e4d	            0x85c0	                           test eax, eax	      1361	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x4003e4f	            0x7405	                            je 0x4003e56	      1361	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x4003e51	      0xe95c050000	                           jmp 0x40043b2	      1370	state.c	FUNCTION_25	SWITCH_3
0x4003e56	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1363	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x4003e5a	     0xfb6907c0100	          movzx edx, byte [rax + 0x17c] 	      1363	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x4003e61	          0x83e2fe	                     and edx, 0xfffffffe	      1363	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x4003e64	    0x88907c010000	              mov byte [rax + 0x17c], dl	      1363	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x4003e6a	            0xeb15	                           jmp 0x4003e81	      1364	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x4003e6c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1366	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x4003e70	     0xfb6907c0100	          movzx edx, byte [rax + 0x17c] 	      1366	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x4003e77	          0x83ca01	                               or edx, 1	      1366	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x4003e7a	    0x88907c010000	              mov byte [rax + 0x17c], dl	      1366	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x4003e80	              0x90	                                     nop	      1367	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x4003e81	      0xe92c050000	                           jmp 0x40043b2	      1370	state.c	FUNCTION_25	SWITCH_3
0x4003e86	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1373	state.c	FUNCTION_25	SWITCH_3	CALL_113
0x4003e8a	          0x488b00	                    mov rax, qword [rax]	      1373	state.c	FUNCTION_25	SWITCH_3	CALL_113
0x4003e8d	      0x25ffffff7f	                     and eax, 0x7fffffff	      1373	state.c	FUNCTION_25	SWITCH_3	CALL_113
0x4003e92	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1373	state.c	FUNCTION_25	SWITCH_3	CALL_113
0x4003e98	            0x7413	                            je 0x4003ead	      1373	state.c	FUNCTION_25	SWITCH_3	CALL_113
0x4003e9a	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1373	state.c	FUNCTION_25	SWITCH_3	CALL_113
0x4003e9e	          0x488b00	                    mov rax, qword [rax]	      1373	state.c	FUNCTION_25	SWITCH_3	CALL_113
0x4003ea1	      0x25ffffff7f	                     and eax, 0x7fffffff	      1373	state.c	FUNCTION_25	SWITCH_3	CALL_113
0x4003ea6	          0x83e801	                              sub eax, 1	      1373	state.c	FUNCTION_25	SWITCH_3	CALL_113
0x4003ea9	            0x89c2	                            mov edx, eax	      1373	state.c	FUNCTION_25	SWITCH_3	CALL_113
0x4003eab	            0xeb05	                           jmp 0x4003eb2	      1373	state.c	FUNCTION_25	SWITCH_3	CALL_113
0x4003ead	      0xba00000000	                              mov edx, 0	      1373	state.c	FUNCTION_25	SWITCH_3	CALL_113
0x4003eb2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1373	state.c	FUNCTION_25	SWITCH_3	CALL_113
0x4003eb6	          0x89503c	             mov dword [rax + 0x3c], edx	      1373	state.c	FUNCTION_25	SWITCH_3	CALL_113
0x4003eb9	        0x837d8c01	               cmp dword [rbp - 0x74], 1	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_115
0x4003ebd	            0x7e2c	                           jle 0x4003eeb	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_115
0x4003ebf	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_115
0x4003ec3	        0x4883c008	                              add rax, 8	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_115
0x4003ec7	          0x488b00	                    mov rax, qword [rax]	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_115
0x4003eca	      0x25ffffff7f	                     and eax, 0x7fffffff	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_115
0x4003ecf	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_115
0x4003ed5	            0x7414	                            je 0x4003eeb	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_115
0x4003ed7	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_115
0x4003edb	        0x4883c008	                              add rax, 8	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_115
0x4003edf	          0x488b00	                    mov rax, qword [rax]	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_115
0x4003ee2	      0x25ffffff7f	                     and eax, 0x7fffffff	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_115
0x4003ee7	            0x89c2	                            mov edx, eax	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_115
0x4003ee9	            0xeb05	                           jmp 0x4003ef0	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_115
0x4003eeb	      0xbaffffffff	                     mov edx, 0xffffffff	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_115
0x4003ef0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_115
0x4003ef4	          0x895040	             mov dword [rax + 0x40], edx	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_115
0x4003ef7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1375	state.c	FUNCTION_25	SWITCH_3
0x4003efb	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      1375	state.c	FUNCTION_25	SWITCH_3
0x4003efe	            0x85c0	                           test eax, eax	      1375	state.c	FUNCTION_25	SWITCH_3
0x4003f00	            0x790b	                           jns 0x4003f0d	      1375	state.c	FUNCTION_25	SWITCH_3
0x4003f02	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1375	state.c	FUNCTION_25	SWITCH_3
0x4003f06	    0xc7403c000000	               mov dword [rax + 0x3c], 0	      1375	state.c	FUNCTION_25	SWITCH_3
0x4003f0d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1376	state.c	FUNCTION_25	SWITCH_3
0x4003f11	          0x8b503c	            mov edx, dword [rax + 0x3c] 	      1376	state.c	FUNCTION_25	SWITCH_3
0x4003f14	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1376	state.c	FUNCTION_25	SWITCH_3
0x4003f18	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1376	state.c	FUNCTION_25	SWITCH_3
0x4003f1b	            0x39c2	                            cmp edx, eax	      1376	state.c	FUNCTION_25	SWITCH_3
0x4003f1d	            0x7e0e	                           jle 0x4003f2d	      1376	state.c	FUNCTION_25	SWITCH_3
0x4003f1f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1376	state.c	FUNCTION_25	SWITCH_3
0x4003f23	          0x8b5028	            mov edx, dword [rax + 0x28] 	      1376	state.c	FUNCTION_25	SWITCH_3
0x4003f26	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1376	state.c	FUNCTION_25	SWITCH_3
0x4003f2a	          0x89503c	             mov dword [rax + 0x3c], edx	      1376	state.c	FUNCTION_25	SWITCH_3
0x4003f2d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1377	state.c	FUNCTION_25	SWITCH_3
0x4003f31	          0x8b4040	            mov eax, dword [rax + 0x40] 	      1377	state.c	FUNCTION_25	SWITCH_3
0x4003f34	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1377	state.c	FUNCTION_25	SWITCH_3
0x4003f37	            0x7d0b	                           jge 0x4003f44	      1377	state.c	FUNCTION_25	SWITCH_3
0x4003f39	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1377	state.c	FUNCTION_25	SWITCH_3
0x4003f3d	    0xc74040ffffff	     mov dword [rax + 0x40], 0xffffffff 	      1377	state.c	FUNCTION_25	SWITCH_3
0x4003f44	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1378	state.c	FUNCTION_25	SWITCH_3	IF_24
0x4003f48	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      1378	state.c	FUNCTION_25	SWITCH_3	IF_24
0x4003f4b	            0x85c0	                           test eax, eax	      1378	state.c	FUNCTION_25	SWITCH_3	IF_24
0x4003f4d	            0x751f	                           jne 0x4003f6e	      1378	state.c	FUNCTION_25	SWITCH_3	IF_24
0x4003f4f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1378	state.c	FUNCTION_25	SWITCH_3	IF_24
0x4003f53	          0x8b5040	            mov edx, dword [rax + 0x40] 	      1378	state.c	FUNCTION_25	SWITCH_3	IF_24
0x4003f56	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1378	state.c	FUNCTION_25	SWITCH_3	IF_24
0x4003f5a	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1378	state.c	FUNCTION_25	SWITCH_3	IF_24
0x4003f5d	            0x39c2	                            cmp edx, eax	      1378	state.c	FUNCTION_25	SWITCH_3	IF_24
0x4003f5f	            0x750d	                           jne 0x4003f6e	      1378	state.c	FUNCTION_25	SWITCH_3	IF_24
0x4003f61	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1379	state.c	FUNCTION_25	SWITCH_3	IF_24
0x4003f65	    0xc74040ffffff	     mov dword [rax + 0x40], 0xffffffff 	      1379	state.c	FUNCTION_25	SWITCH_3	IF_24
0x4003f6c	            0xeb20	                           jmp 0x4003f8e	      1379	state.c	FUNCTION_25	SWITCH_3	IF_24
0x4003f6e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1381	state.c	FUNCTION_25	SWITCH_3	ELSE_3
0x4003f72	          0x8b5040	            mov edx, dword [rax + 0x40] 	      1381	state.c	FUNCTION_25	SWITCH_3	ELSE_3
0x4003f75	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1381	state.c	FUNCTION_25	SWITCH_3	ELSE_3
0x4003f79	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1381	state.c	FUNCTION_25	SWITCH_3	ELSE_3
0x4003f7c	            0x39c2	                            cmp edx, eax	      1381	state.c	FUNCTION_25	SWITCH_3	ELSE_3
0x4003f7e	            0x7e0e	                           jle 0x4003f8e	      1381	state.c	FUNCTION_25	SWITCH_3	ELSE_3
0x4003f80	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1381	state.c	FUNCTION_25	SWITCH_3	ELSE_3
0x4003f84	          0x8b5028	            mov edx, dword [rax + 0x28] 	      1381	state.c	FUNCTION_25	SWITCH_3	ELSE_3
0x4003f87	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1381	state.c	FUNCTION_25	SWITCH_3	ELSE_3
0x4003f8b	          0x895040	             mov dword [rax + 0x40], edx	      1381	state.c	FUNCTION_25	SWITCH_3	ELSE_3
0x4003f8e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1383	state.c	FUNCTION_25	SWITCH_3	IF_25	CALL_116
0x4003f92	          0x8b4040	            mov eax, dword [rax + 0x40] 	      1383	state.c	FUNCTION_25	SWITCH_3	IF_25	CALL_116
0x4003f95	            0x85c0	                           test eax, eax	      1383	state.c	FUNCTION_25	SWITCH_3	IF_25	CALL_116
0x4003f97	            0x7809	                            js 0x4003fa2	      1383	state.c	FUNCTION_25	SWITCH_3	IF_25	CALL_116
0x4003f99	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1383	state.c	FUNCTION_25	SWITCH_3	IF_25	CALL_116
0x4003f9d	          0x8b4040	            mov eax, dword [rax + 0x40] 	      1383	state.c	FUNCTION_25	SWITCH_3	IF_25	CALL_116
0x4003fa0	            0xeb07	                           jmp 0x4003fa9	      1383	state.c	FUNCTION_25	SWITCH_3	IF_25	CALL_116
0x4003fa2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1383	state.c	FUNCTION_25	SWITCH_3	IF_25	CALL_116
0x4003fa6	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1383	state.c	FUNCTION_25	SWITCH_3	IF_25	CALL_116
0x4003fa9	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1383	state.c	FUNCTION_25	SWITCH_3	IF_25	CALL_116
0x4003fad	          0x8b523c	            mov edx, dword [rdx + 0x3c] 	      1383	state.c	FUNCTION_25	SWITCH_3	IF_25	CALL_116
0x4003fb0	            0x39d0	                            cmp eax, edx	      1383	state.c	FUNCTION_25	SWITCH_3	IF_25	CALL_116
0x4003fb2	     0xf8fed030000	                            jg 0x40043a5	      1383	state.c	FUNCTION_25	SWITCH_3	IF_25	CALL_116
0x4003fb8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1385	state.c	FUNCTION_25	SWITCH_3	IF_25
0x4003fbc	    0xc7403c000000	               mov dword [rax + 0x3c], 0	      1385	state.c	FUNCTION_25	SWITCH_3	IF_25
0x4003fc3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1386	state.c	FUNCTION_25	SWITCH_3	IF_25
0x4003fc7	    0xc74040ffffff	     mov dword [rax + 0x40], 0xffffffff 	      1386	state.c	FUNCTION_25	SWITCH_3	IF_25
0x4003fce	      0xe9d2030000	                           jmp 0x40043a5	      1389	state.c	FUNCTION_25	SWITCH_3
0x4003fd3	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1393	state.c	FUNCTION_25	SWITCH_3	CALL_117
0x4003fd7	          0x488b00	                    mov rax, qword [rax]	      1393	state.c	FUNCTION_25	SWITCH_3	CALL_117
0x4003fda	      0x25ffffff7f	                     and eax, 0x7fffffff	      1393	state.c	FUNCTION_25	SWITCH_3	CALL_117
0x4003fdf	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1393	state.c	FUNCTION_25	SWITCH_3	CALL_117
0x4003fe5	            0x7413	                            je 0x4003ffa	      1393	state.c	FUNCTION_25	SWITCH_3	CALL_117
0x4003fe7	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1393	state.c	FUNCTION_25	SWITCH_3	CALL_117
0x4003feb	          0x488b00	                    mov rax, qword [rax]	      1393	state.c	FUNCTION_25	SWITCH_3	CALL_117
0x4003fee	      0x25ffffff7f	                     and eax, 0x7fffffff	      1393	state.c	FUNCTION_25	SWITCH_3	CALL_117
0x4003ff3	          0x83e801	                              sub eax, 1	      1393	state.c	FUNCTION_25	SWITCH_3	CALL_117
0x4003ff6	            0x89c2	                            mov edx, eax	      1393	state.c	FUNCTION_25	SWITCH_3	CALL_117
0x4003ff8	            0xeb05	                           jmp 0x4003fff	      1393	state.c	FUNCTION_25	SWITCH_3	CALL_117
0x4003ffa	      0xba00000000	                              mov edx, 0	      1393	state.c	FUNCTION_25	SWITCH_3	CALL_117
0x4003fff	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1393	state.c	FUNCTION_25	SWITCH_3	CALL_117
0x4004003	          0x895044	             mov dword [rax + 0x44], edx	      1393	state.c	FUNCTION_25	SWITCH_3	CALL_117
0x4004006	        0x837d8c01	               cmp dword [rbp - 0x74], 1	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_119
0x400400a	            0x7e2c	                           jle 0x4004038	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_119
0x400400c	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_119
0x4004010	        0x4883c008	                              add rax, 8	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_119
0x4004014	          0x488b00	                    mov rax, qword [rax]	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_119
0x4004017	      0x25ffffff7f	                     and eax, 0x7fffffff	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_119
0x400401c	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_119
0x4004022	            0x7414	                            je 0x4004038	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_119
0x4004024	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_119
0x4004028	        0x4883c008	                              add rax, 8	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_119
0x400402c	          0x488b00	                    mov rax, qword [rax]	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_119
0x400402f	      0x25ffffff7f	                     and eax, 0x7fffffff	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_119
0x4004034	            0x89c2	                            mov edx, eax	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_119
0x4004036	            0xeb05	                           jmp 0x400403d	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_119
0x4004038	      0xbaffffffff	                     mov edx, 0xffffffff	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_119
0x400403d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_119
0x4004041	          0x895048	             mov dword [rax + 0x48], edx	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_119
0x4004044	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1395	state.c	FUNCTION_25	SWITCH_3
0x4004048	          0x8b4044	            mov eax, dword [rax + 0x44] 	      1395	state.c	FUNCTION_25	SWITCH_3
0x400404b	            0x85c0	                           test eax, eax	      1395	state.c	FUNCTION_25	SWITCH_3
0x400404d	            0x790b	                           jns 0x400405a	      1395	state.c	FUNCTION_25	SWITCH_3
0x400404f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1395	state.c	FUNCTION_25	SWITCH_3
0x4004053	    0xc74044000000	               mov dword [rax + 0x44], 0	      1395	state.c	FUNCTION_25	SWITCH_3
0x400405a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1396	state.c	FUNCTION_25	SWITCH_3
0x400405e	          0x8b5044	            mov edx, dword [rax + 0x44] 	      1396	state.c	FUNCTION_25	SWITCH_3
0x4004061	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1396	state.c	FUNCTION_25	SWITCH_3
0x4004065	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1396	state.c	FUNCTION_25	SWITCH_3
0x4004068	            0x39c2	                            cmp edx, eax	      1396	state.c	FUNCTION_25	SWITCH_3
0x400406a	            0x7e0e	                           jle 0x400407a	      1396	state.c	FUNCTION_25	SWITCH_3
0x400406c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1396	state.c	FUNCTION_25	SWITCH_3
0x4004070	          0x8b502c	            mov edx, dword [rax + 0x2c] 	      1396	state.c	FUNCTION_25	SWITCH_3
0x4004073	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1396	state.c	FUNCTION_25	SWITCH_3
0x4004077	          0x895044	             mov dword [rax + 0x44], edx	      1396	state.c	FUNCTION_25	SWITCH_3
0x400407a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1397	state.c	FUNCTION_25	SWITCH_3
0x400407e	          0x8b4048	            mov eax, dword [rax + 0x48] 	      1397	state.c	FUNCTION_25	SWITCH_3
0x4004081	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1397	state.c	FUNCTION_25	SWITCH_3
0x4004084	            0x7d0b	                           jge 0x4004091	      1397	state.c	FUNCTION_25	SWITCH_3
0x4004086	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1397	state.c	FUNCTION_25	SWITCH_3
0x400408a	    0xc74048ffffff	     mov dword [rax + 0x48], 0xffffffff 	      1397	state.c	FUNCTION_25	SWITCH_3
0x4004091	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1398	state.c	FUNCTION_25	SWITCH_3	IF_26
0x4004095	          0x8b4044	            mov eax, dword [rax + 0x44] 	      1398	state.c	FUNCTION_25	SWITCH_3	IF_26
0x4004098	            0x85c0	                           test eax, eax	      1398	state.c	FUNCTION_25	SWITCH_3	IF_26
0x400409a	            0x751f	                           jne 0x40040bb	      1398	state.c	FUNCTION_25	SWITCH_3	IF_26
0x400409c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1398	state.c	FUNCTION_25	SWITCH_3	IF_26
0x40040a0	          0x8b5048	            mov edx, dword [rax + 0x48] 	      1398	state.c	FUNCTION_25	SWITCH_3	IF_26
0x40040a3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1398	state.c	FUNCTION_25	SWITCH_3	IF_26
0x40040a7	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1398	state.c	FUNCTION_25	SWITCH_3	IF_26
0x40040aa	            0x39c2	                            cmp edx, eax	      1398	state.c	FUNCTION_25	SWITCH_3	IF_26
0x40040ac	            0x750d	                           jne 0x40040bb	      1398	state.c	FUNCTION_25	SWITCH_3	IF_26
0x40040ae	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1399	state.c	FUNCTION_25	SWITCH_3	IF_26
0x40040b2	    0xc74048ffffff	     mov dword [rax + 0x48], 0xffffffff 	      1399	state.c	FUNCTION_25	SWITCH_3	IF_26
0x40040b9	            0xeb20	                           jmp 0x40040db	      1399	state.c	FUNCTION_25	SWITCH_3	IF_26
0x40040bb	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1401	state.c	FUNCTION_25	SWITCH_3	ELSE_4
0x40040bf	          0x8b5048	            mov edx, dword [rax + 0x48] 	      1401	state.c	FUNCTION_25	SWITCH_3	ELSE_4
0x40040c2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1401	state.c	FUNCTION_25	SWITCH_3	ELSE_4
0x40040c6	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1401	state.c	FUNCTION_25	SWITCH_3	ELSE_4
0x40040c9	            0x39c2	                            cmp edx, eax	      1401	state.c	FUNCTION_25	SWITCH_3	ELSE_4
0x40040cb	            0x7e0e	                           jle 0x40040db	      1401	state.c	FUNCTION_25	SWITCH_3	ELSE_4
0x40040cd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1401	state.c	FUNCTION_25	SWITCH_3	ELSE_4
0x40040d1	          0x8b502c	            mov edx, dword [rax + 0x2c] 	      1401	state.c	FUNCTION_25	SWITCH_3	ELSE_4
0x40040d4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1401	state.c	FUNCTION_25	SWITCH_3	ELSE_4
0x40040d8	          0x895048	             mov dword [rax + 0x48], edx	      1401	state.c	FUNCTION_25	SWITCH_3	ELSE_4
0x40040db	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1403	state.c	FUNCTION_25	SWITCH_3	IF_27
0x40040df	          0x8b4048	            mov eax, dword [rax + 0x48] 	      1403	state.c	FUNCTION_25	SWITCH_3	IF_27
0x40040e2	            0x85c0	                           test eax, eax	      1403	state.c	FUNCTION_25	SWITCH_3	IF_27
0x40040e4	     0xf88be020000	                            js 0x40043a8	      1403	state.c	FUNCTION_25	SWITCH_3	IF_27
0x40040ea	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1404	state.c	FUNCTION_25	SWITCH_3	IF_27
0x40040ee	          0x8b5048	            mov edx, dword [rax + 0x48] 	      1404	state.c	FUNCTION_25	SWITCH_3	IF_27
0x40040f1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1404	state.c	FUNCTION_25	SWITCH_3	IF_27
0x40040f5	          0x8b4044	            mov eax, dword [rax + 0x44] 	      1404	state.c	FUNCTION_25	SWITCH_3	IF_27
0x40040f8	            0x39c2	                            cmp edx, eax	      1403	state.c	FUNCTION_25	SWITCH_3	IF_27
0x40040fa	     0xf8fa8020000	                            jg 0x40043a8	      1403	state.c	FUNCTION_25	SWITCH_3	IF_27
0x4004100	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1406	state.c	FUNCTION_25	SWITCH_3	IF_27
0x4004104	    0xc74044000000	               mov dword [rax + 0x44], 0	      1406	state.c	FUNCTION_25	SWITCH_3	IF_27
0x400410b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1407	state.c	FUNCTION_25	SWITCH_3	IF_27
0x400410f	    0xc74048ffffff	     mov dword [rax + 0x48], 0xffffffff 	      1407	state.c	FUNCTION_25	SWITCH_3	IF_27
0x4004116	      0xe98d020000	                           jmp 0x40043a8	      1410	state.c	FUNCTION_25	SWITCH_3
0x400411b	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1413	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_120
0x400411f	          0x488b00	                    mov rax, qword [rax]	      1413	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_120
0x4004122	      0x25ffffff7f	                     and eax, 0x7fffffff	      1413	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_120
0x4004127	        0x4883f808	                              cmp rax, 8	      1413	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_120
0x400412b	            0x7405	                            je 0x4004132	      1413	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_120
0x400412d	      0xe979020000	                           jmp 0x40043ab	      1418	state.c	FUNCTION_25	SWITCH_3
0x4004132	        0x837d8c03	               cmp dword [rbp - 0x74], 3	      1415	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	IF_28
0x4004136	     0xf856f020000	                           jne 0x40043ab	      1415	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	IF_28
0x400413c	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1416	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_123
0x4004140	        0x4883c010	                           add rax, 0x10	      1416	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_123
0x4004144	          0x488b00	                    mov rax, qword [rax]	      1416	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_123
0x4004147	      0x25ffffff7f	                     and eax, 0x7fffffff	      1416	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_123
0x400414c	            0x89c6	                            mov esi, eax	      1416	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_123
0x400414e	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1416	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_123
0x4004152	        0x4883c008	                              add rax, 8	      1416	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_123
0x4004156	          0x488b00	                    mov rax, qword [rax]	      1416	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_123
0x4004159	      0x25ffffff7f	                     and eax, 0x7fffffff	      1416	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_123
0x400415e	            0x89c1	                            mov ecx, eax	      1416	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_123
0x4004160	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1416	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_123
0x4004164	          0x4889c2	                            mov rdx, rax	      1416	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_123
0x4004167	            0x89cf	                            mov edi, ecx	      1416	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_123
0x4004169	      0xe80f0c0000	                      call sym.on_resize	      1416	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_123
0x400416e	      0xe938020000	                           jmp 0x40043ab	      1418	state.c	FUNCTION_25	SWITCH_3
0x4004173	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1421	state.c	FUNCTION_25	SWITCH_3	CALL_124
0x4004177	          0x488b00	                    mov rax, qword [rax]	      1421	state.c	FUNCTION_25	SWITCH_3	CALL_124
0x400417a	      0x25ffffff7f	                     and eax, 0x7fffffff	      1421	state.c	FUNCTION_25	SWITCH_3	CALL_124
0x400417f	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1421	state.c	FUNCTION_25	SWITCH_3	CALL_124
0x4004185	            0x741f	                            je 0x40041a6	      1421	state.c	FUNCTION_25	SWITCH_3	CALL_124
0x4004187	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1421	state.c	FUNCTION_25	SWITCH_3	CALL_124
0x400418b	          0x488b00	                    mov rax, qword [rax]	      1421	state.c	FUNCTION_25	SWITCH_3	CALL_124
0x400418e	      0x25ffffff7f	                     and eax, 0x7fffffff	      1421	state.c	FUNCTION_25	SWITCH_3	CALL_124
0x4004193	          0x4885c0	                           test rax, rax	      1421	state.c	FUNCTION_25	SWITCH_3	CALL_124
0x4004196	            0x740e	                            je 0x40041a6	      1421	state.c	FUNCTION_25	SWITCH_3	CALL_124
0x4004198	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1421	state.c	FUNCTION_25	SWITCH_3	CALL_124
0x400419c	          0x488b00	                    mov rax, qword [rax]	      1421	state.c	FUNCTION_25	SWITCH_3	CALL_124
0x400419f	      0x25ffffff7f	                     and eax, 0x7fffffff	      1421	state.c	FUNCTION_25	SWITCH_3	CALL_124
0x40041a4	            0xeb05	                           jmp 0x40041ab	      1421	state.c	FUNCTION_25	SWITCH_3	CALL_124
0x40041a6	      0xb801000000	                              mov eax, 1	      1421	state.c	FUNCTION_25	SWITCH_3	CALL_124
0x40041ab	          0x8945bc	             mov dword [rbp - 0x44], eax	      1421	state.c	FUNCTION_25	SWITCH_3	CALL_124
0x40041ae	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1423	state.c	FUNCTION_25	SWITCH_3	IF_29	CALL_125
0x40041b2	          0x4889c7	                            mov rdi, rax	      1423	state.c	FUNCTION_25	SWITCH_3	IF_29	CALL_125
0x40041b5	      0xe853c6ffff	      call sym.is_cursor_in_scrollregion	      1423	state.c	FUNCTION_25	SWITCH_3	IF_29	CALL_125
0x40041ba	            0x85c0	                           test eax, eax	      1423	state.c	FUNCTION_25	SWITCH_3	IF_29	CALL_125
0x40041bc	     0xf84ec010000	                            je 0x40043ae	      1423	state.c	FUNCTION_25	SWITCH_3	IF_29	CALL_125
0x40041c2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1426	state.c	FUNCTION_25	SWITCH_3
0x40041c6	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      1426	state.c	FUNCTION_25	SWITCH_3
0x40041c9	          0x8945e0	             mov dword [rbp - 0x20], eax	      1426	state.c	FUNCTION_25	SWITCH_3
0x40041cc	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1427	state.c	FUNCTION_25	SWITCH_3	CALL_126
0x40041d0	          0x8b4040	            mov eax, dword [rax + 0x40] 	      1427	state.c	FUNCTION_25	SWITCH_3	CALL_126
0x40041d3	            0x85c0	                           test eax, eax	      1427	state.c	FUNCTION_25	SWITCH_3	CALL_126
0x40041d5	            0x7809	                            js 0x40041e0	      1427	state.c	FUNCTION_25	SWITCH_3	CALL_126
0x40041d7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1427	state.c	FUNCTION_25	SWITCH_3	CALL_126
0x40041db	          0x8b4040	            mov eax, dword [rax + 0x40] 	      1427	state.c	FUNCTION_25	SWITCH_3	CALL_126
0x40041de	            0xeb07	                           jmp 0x40041e7	      1427	state.c	FUNCTION_25	SWITCH_3	CALL_126
0x40041e0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1427	state.c	FUNCTION_25	SWITCH_3	CALL_126
0x40041e4	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1427	state.c	FUNCTION_25	SWITCH_3	CALL_126
0x40041e7	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1427	state.c	FUNCTION_25	SWITCH_3	CALL_126
0x40041ea	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1428	state.c	FUNCTION_25	SWITCH_3
0x40041ee	          0x8b4034	            mov eax, dword [rax + 0x34] 	      1428	state.c	FUNCTION_25	SWITCH_3
0x40041f1	          0x8945e8	             mov dword [rbp - 0x18], eax	      1428	state.c	FUNCTION_25	SWITCH_3
0x40041f4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1429	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x40041f8	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	      1429	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x40041ff	          0x83e010	                           and eax, 0x10	      1429	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x4004202	            0x84c0	                             test al, al	      1429	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x4004204	            0x7414	                            je 0x400421a	      1429	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x4004206	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1429	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x400420a	          0x8b4048	            mov eax, dword [rax + 0x48] 	      1429	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x400420d	            0x85c0	                           test eax, eax	      1429	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x400420f	            0x7809	                            js 0x400421a	      1429	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x4004211	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1429	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x4004215	          0x8b4048	            mov eax, dword [rax + 0x48] 	      1429	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x4004218	            0xeb07	                           jmp 0x4004221	      1429	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x400421a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1429	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x400421e	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1429	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x4004221	          0x8945ec	             mov dword [rbp - 0x14], eax	      1429	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x4004224	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1431	state.c	FUNCTION_25	SWITCH_3	CALL_128
0x4004227	            0xf7d8	                                 neg eax	      1431	state.c	FUNCTION_25	SWITCH_3	CALL_128
0x4004229	            0x89c1	                            mov ecx, eax	      1431	state.c	FUNCTION_25	SWITCH_3	CALL_128
0x400422b	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1431	state.c	FUNCTION_25	SWITCH_3	CALL_128
0x400422f	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1431	state.c	FUNCTION_25	SWITCH_3	CALL_128
0x4004233	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1431	state.c	FUNCTION_25	SWITCH_3	CALL_128
0x4004237	          0x4189c8	                            mov r8d, ecx	      1431	state.c	FUNCTION_25	SWITCH_3	CALL_128
0x400423a	      0xb900000000	                              mov ecx, 0	      1431	state.c	FUNCTION_25	SWITCH_3	CALL_128
0x400423f	          0x4889c7	                            mov rdi, rax	      1431	state.c	FUNCTION_25	SWITCH_3	CALL_128
0x4004242	      0xe82cc1ffff	                         call sym.scroll	      1431	state.c	FUNCTION_25	SWITCH_3	CALL_128
0x4004247	      0xe966010000	                           jmp 0x40043b2	      1433	state.c	FUNCTION_25	SWITCH_3
0x400424c	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1436	state.c	FUNCTION_25	SWITCH_3	CALL_129
0x4004250	          0x488b00	                    mov rax, qword [rax]	      1436	state.c	FUNCTION_25	SWITCH_3	CALL_129
0x4004253	      0x25ffffff7f	                     and eax, 0x7fffffff	      1436	state.c	FUNCTION_25	SWITCH_3	CALL_129
0x4004258	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1436	state.c	FUNCTION_25	SWITCH_3	CALL_129
0x400425e	            0x741f	                            je 0x400427f	      1436	state.c	FUNCTION_25	SWITCH_3	CALL_129
0x4004260	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1436	state.c	FUNCTION_25	SWITCH_3	CALL_129
0x4004264	          0x488b00	                    mov rax, qword [rax]	      1436	state.c	FUNCTION_25	SWITCH_3	CALL_129
0x4004267	      0x25ffffff7f	                     and eax, 0x7fffffff	      1436	state.c	FUNCTION_25	SWITCH_3	CALL_129
0x400426c	          0x4885c0	                           test rax, rax	      1436	state.c	FUNCTION_25	SWITCH_3	CALL_129
0x400426f	            0x740e	                            je 0x400427f	      1436	state.c	FUNCTION_25	SWITCH_3	CALL_129
0x4004271	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1436	state.c	FUNCTION_25	SWITCH_3	CALL_129
0x4004275	          0x488b00	                    mov rax, qword [rax]	      1436	state.c	FUNCTION_25	SWITCH_3	CALL_129
0x4004278	      0x25ffffff7f	                     and eax, 0x7fffffff	      1436	state.c	FUNCTION_25	SWITCH_3	CALL_129
0x400427d	            0xeb05	                           jmp 0x4004284	      1436	state.c	FUNCTION_25	SWITCH_3	CALL_129
0x400427f	      0xb801000000	                              mov eax, 1	      1436	state.c	FUNCTION_25	SWITCH_3	CALL_129
0x4004284	          0x8945bc	             mov dword [rbp - 0x44], eax	      1436	state.c	FUNCTION_25	SWITCH_3	CALL_129
0x4004287	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1438	state.c	FUNCTION_25	SWITCH_3	IF_30	CALL_130
0x400428b	          0x4889c7	                            mov rdi, rax	      1438	state.c	FUNCTION_25	SWITCH_3	IF_30	CALL_130
0x400428e	      0xe87ac5ffff	      call sym.is_cursor_in_scrollregion	      1438	state.c	FUNCTION_25	SWITCH_3	IF_30	CALL_130
0x4004293	            0x85c0	                           test eax, eax	      1438	state.c	FUNCTION_25	SWITCH_3	IF_30	CALL_130
0x4004295	     0xf8416010000	                            je 0x40043b1	      1438	state.c	FUNCTION_25	SWITCH_3	IF_30	CALL_130
0x400429b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1441	state.c	FUNCTION_25	SWITCH_3
0x400429f	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      1441	state.c	FUNCTION_25	SWITCH_3
0x40042a2	          0x8945e0	             mov dword [rbp - 0x20], eax	      1441	state.c	FUNCTION_25	SWITCH_3
0x40042a5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1442	state.c	FUNCTION_25	SWITCH_3	CALL_131
0x40042a9	          0x8b4040	            mov eax, dword [rax + 0x40] 	      1442	state.c	FUNCTION_25	SWITCH_3	CALL_131
0x40042ac	            0x85c0	                           test eax, eax	      1442	state.c	FUNCTION_25	SWITCH_3	CALL_131
0x40042ae	            0x7809	                            js 0x40042b9	      1442	state.c	FUNCTION_25	SWITCH_3	CALL_131
0x40042b0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1442	state.c	FUNCTION_25	SWITCH_3	CALL_131
0x40042b4	          0x8b4040	            mov eax, dword [rax + 0x40] 	      1442	state.c	FUNCTION_25	SWITCH_3	CALL_131
0x40042b7	            0xeb07	                           jmp 0x40042c0	      1442	state.c	FUNCTION_25	SWITCH_3	CALL_131
0x40042b9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1442	state.c	FUNCTION_25	SWITCH_3	CALL_131
0x40042bd	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1442	state.c	FUNCTION_25	SWITCH_3	CALL_131
0x40042c0	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1442	state.c	FUNCTION_25	SWITCH_3	CALL_131
0x40042c3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1443	state.c	FUNCTION_25	SWITCH_3
0x40042c7	          0x8b4034	            mov eax, dword [rax + 0x34] 	      1443	state.c	FUNCTION_25	SWITCH_3
0x40042ca	          0x8945e8	             mov dword [rbp - 0x18], eax	      1443	state.c	FUNCTION_25	SWITCH_3
0x40042cd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1444	state.c	FUNCTION_25	SWITCH_3	CALL_132
0x40042d1	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	      1444	state.c	FUNCTION_25	SWITCH_3	CALL_132
0x40042d8	          0x83e010	                           and eax, 0x10	      1444	state.c	FUNCTION_25	SWITCH_3	CALL_132
0x40042db	            0x84c0	                             test al, al	      1444	state.c	FUNCTION_25	SWITCH_3	CALL_132
0x40042dd	            0x7414	                            je 0x40042f3	      1444	state.c	FUNCTION_25	SWITCH_3	CALL_132
0x40042df	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1444	state.c	FUNCTION_25	SWITCH_3	CALL_132
0x40042e3	          0x8b4048	            mov eax, dword [rax + 0x48] 	      1444	state.c	FUNCTION_25	SWITCH_3	CALL_132
0x40042e6	            0x85c0	                           test eax, eax	      1444	state.c	FUNCTION_25	SWITCH_3	CALL_132
0x40042e8	            0x7809	                            js 0x40042f3	      1444	state.c	FUNCTION_25	SWITCH_3	CALL_132
0x40042ea	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1444	state.c	FUNCTION_25	SWITCH_3	CALL_132
0x40042ee	          0x8b4048	            mov eax, dword [rax + 0x48] 	      1444	state.c	FUNCTION_25	SWITCH_3	CALL_132
0x40042f1	            0xeb07	                           jmp 0x40042fa	      1444	state.c	FUNCTION_25	SWITCH_3	CALL_132
0x40042f3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1444	state.c	FUNCTION_25	SWITCH_3	CALL_132
0x40042f7	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1444	state.c	FUNCTION_25	SWITCH_3	CALL_132
0x40042fa	          0x8945ec	             mov dword [rbp - 0x14], eax	      1444	state.c	FUNCTION_25	SWITCH_3	CALL_132
0x40042fd	          0x8b4dbc	             mov ecx, dword [rbp - 0x44]	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x4004300	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x4004304	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x4004308	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x400430c	          0x4189c8	                            mov r8d, ecx	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x400430f	      0xb900000000	                              mov ecx, 0	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x4004314	          0x4889c7	                            mov rdi, rax	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x4004317	      0xe857c0ffff	                         call sym.scroll	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x400431c	      0xe991000000	                           jmp 0x40043b2	      1448	state.c	FUNCTION_25	SWITCH_3
0x4004321	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1451	state.c	FUNCTION_25	SWITCH_3	IF_31
0x4004325	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1451	state.c	FUNCTION_25	SWITCH_3	IF_31
0x4004329	          0x4885c0	                           test rax, rax	      1451	state.c	FUNCTION_25	SWITCH_3	IF_31
0x400432c	            0x7449	                            je 0x4004377	      1451	state.c	FUNCTION_25	SWITCH_3	IF_31
0x400432e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1451	state.c	FUNCTION_25	SWITCH_3	IF_31
0x4004332	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1451	state.c	FUNCTION_25	SWITCH_3	IF_31
0x4004336	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1451	state.c	FUNCTION_25	SWITCH_3	IF_31
0x400433a	          0x4885c0	                           test rax, rax	      1451	state.c	FUNCTION_25	SWITCH_3	IF_31
0x400433d	            0x7438	                            je 0x4004377	      1451	state.c	FUNCTION_25	SWITCH_3	IF_31
0x400433f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1452	state.c	FUNCTION_25	SWITCH_3	IF_31	IF_32
0x4004343	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1452	state.c	FUNCTION_25	SWITCH_3	IF_31	IF_32
0x4004347	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1452	state.c	FUNCTION_25	SWITCH_3	IF_31	IF_32
0x400434b	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1452	state.c	FUNCTION_25	SWITCH_3	IF_31	IF_32
0x400434f	        0x4c8b4a20	              mov r9, qword [rdx + 0x20]	      1452	state.c	FUNCTION_25	SWITCH_3	IF_31	IF_32
0x4004353	      0x440fbe4588	            movsx r8d, byte [rbp - 0x78]	      1452	state.c	FUNCTION_25	SWITCH_3	IF_31	IF_32
0x4004358	        0x488b4d80	             mov rcx, qword [rbp - 0x80]	      1452	state.c	FUNCTION_25	SWITCH_3	IF_31	IF_32
0x400435c	          0x8b558c	             mov edx, dword [rbp - 0x74]	      1452	state.c	FUNCTION_25	SWITCH_3	IF_31	IF_32
0x400435f	        0x488b7590	             mov rsi, qword [rbp - 0x70]	      1452	state.c	FUNCTION_25	SWITCH_3	IF_31	IF_32
0x4004363	        0x488b7d98	             mov rdi, qword [rbp - 0x68]	      1452	state.c	FUNCTION_25	SWITCH_3	IF_31	IF_32
0x4004367	            0xffd0	                                call rax	      1452	state.c	FUNCTION_25	SWITCH_3	IF_31	IF_32
0x4004369	            0x85c0	                           test eax, eax	      1452	state.c	FUNCTION_25	SWITCH_3	IF_31	IF_32
0x400436b	            0x740a	                            je 0x4004377	      1452	state.c	FUNCTION_25	SWITCH_3	IF_31	IF_32
0x400436d	      0xb801000000	                              mov eax, 1	      1453	state.c	FUNCTION_25	SWITCH_3	IF_31	IF_32
0x4004372	      0xe99b020000	                           jmp 0x4004612	      1453	state.c	FUNCTION_25	SWITCH_3	IF_31	IF_32
0x4004377	      0xb800000000	                              mov eax, 0	      1455	state.c	FUNCTION_25	SWITCH_3
0x400437c	      0xe991020000	                           jmp 0x4004612	      1455	state.c	FUNCTION_25	SWITCH_3
0x4004381	              0x90	                                     nop	       956	state.c	FUNCTION_25	SWITCH_3	IF_5
0x4004382	            0xeb2e	                           jmp 0x40043b2	       956	state.c	FUNCTION_25	SWITCH_3	IF_5
0x4004384	              0x90	                                     nop	      1096	state.c	FUNCTION_25	SWITCH_3
0x4004385	            0xeb2b	                           jmp 0x40043b2	      1096	state.c	FUNCTION_25	SWITCH_3
0x4004387	              0x90	                                     nop	      1102	state.c	FUNCTION_25	SWITCH_3	IF_13
0x4004388	            0xeb28	                           jmp 0x40043b2	      1102	state.c	FUNCTION_25	SWITCH_3	IF_13
0x400438a	              0x90	                                     nop	      1117	state.c	FUNCTION_25	SWITCH_3	IF_14
0x400438b	            0xeb25	                           jmp 0x40043b2	      1117	state.c	FUNCTION_25	SWITCH_3	IF_14
0x400438d	              0x90	                                     nop	      1132	state.c	FUNCTION_25	SWITCH_3	IF_15
0x400438e	            0xeb22	                           jmp 0x40043b2	      1132	state.c	FUNCTION_25	SWITCH_3	IF_15
0x4004390	              0x90	                                     nop	      1204	state.c	FUNCTION_25	SWITCH_3
0x4004391	            0xeb1f	                           jmp 0x40043b2	      1204	state.c	FUNCTION_25	SWITCH_3
0x4004393	              0x90	                                     nop	      1263	state.c	FUNCTION_25	SWITCH_3
0x4004394	            0xeb1c	                           jmp 0x40043b2	      1263	state.c	FUNCTION_25	SWITCH_3
0x4004396	              0x90	                                     nop	      1268	state.c	FUNCTION_25	SWITCH_3
0x4004397	            0xeb19	                           jmp 0x40043b2	      1268	state.c	FUNCTION_25	SWITCH_3
0x4004399	              0x90	                                     nop	      1285	state.c	FUNCTION_25	SWITCH_3
0x400439a	            0xeb16	                           jmp 0x40043b2	      1285	state.c	FUNCTION_25	SWITCH_3
0x400439c	              0x90	                                     nop	      1290	state.c	FUNCTION_25	SWITCH_3
0x400439d	            0xeb13	                           jmp 0x40043b2	      1290	state.c	FUNCTION_25	SWITCH_3
0x400439f	              0x90	                                     nop	      1315	state.c	FUNCTION_25	SWITCH_3
0x40043a0	            0xeb10	                           jmp 0x40043b2	      1315	state.c	FUNCTION_25	SWITCH_3
0x40043a2	              0x90	                                     nop	      1356	state.c	FUNCTION_25	SWITCH_3
0x40043a3	            0xeb0d	                           jmp 0x40043b2	      1356	state.c	FUNCTION_25	SWITCH_3
0x40043a5	              0x90	                                     nop	      1389	state.c	FUNCTION_25	SWITCH_3
0x40043a6	            0xeb0a	                           jmp 0x40043b2	      1389	state.c	FUNCTION_25	SWITCH_3
0x40043a8	              0x90	                                     nop	      1410	state.c	FUNCTION_25	SWITCH_3
0x40043a9	            0xeb07	                           jmp 0x40043b2	      1410	state.c	FUNCTION_25	SWITCH_3
0x40043ab	              0x90	                                     nop	      1418	state.c	FUNCTION_25	SWITCH_3
0x40043ac	            0xeb04	                           jmp 0x40043b2	      1418	state.c	FUNCTION_25	SWITCH_3
0x40043ae	              0x90	                                     nop	      1424	state.c	FUNCTION_25	SWITCH_3	IF_29
0x40043af	            0xeb01	                           jmp 0x40043b2	      1424	state.c	FUNCTION_25	SWITCH_3	IF_29
0x40043b1	              0x90	                                     nop	      1439	state.c	FUNCTION_25	SWITCH_3	IF_30
0x40043b2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1458	state.c	FUNCTION_25	IF_33
0x40043b6	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	      1458	state.c	FUNCTION_25	IF_33
0x40043bd	          0x83e004	                              and eax, 4	      1458	state.c	FUNCTION_25	IF_33
0x40043c0	            0x84c0	                             test al, al	      1458	state.c	FUNCTION_25	IF_33
0x40043c2	     0xf8447010000	                            je 0x400450f	      1458	state.c	FUNCTION_25	IF_33
0x40043c8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1459	state.c	FUNCTION_25	IF_33
0x40043cc	          0x8b5030	            mov edx, dword [rax + 0x30] 	      1459	state.c	FUNCTION_25	IF_33
0x40043cf	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1459	state.c	FUNCTION_25	IF_33
0x40043d3	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      1459	state.c	FUNCTION_25	IF_33
0x40043d6	            0x39c2	                            cmp edx, eax	      1459	state.c	FUNCTION_25	IF_33
0x40043d8	            0x7d0e	                           jge 0x40043e8	      1459	state.c	FUNCTION_25	IF_33
0x40043da	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1459	state.c	FUNCTION_25	IF_33
0x40043de	          0x8b503c	            mov edx, dword [rax + 0x3c] 	      1459	state.c	FUNCTION_25	IF_33
0x40043e1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1459	state.c	FUNCTION_25	IF_33
0x40043e5	          0x895030	             mov dword [rax + 0x30], edx	      1459	state.c	FUNCTION_25	IF_33
0x40043e8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1460	state.c	FUNCTION_25	IF_33	CALL_134
0x40043ec	          0x8b5030	            mov edx, dword [rax + 0x30] 	      1460	state.c	FUNCTION_25	IF_33	CALL_134
0x40043ef	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1460	state.c	FUNCTION_25	IF_33	CALL_134
0x40043f3	          0x8b4040	            mov eax, dword [rax + 0x40] 	      1460	state.c	FUNCTION_25	IF_33	CALL_134
0x40043f6	            0x85c0	                           test eax, eax	      1460	state.c	FUNCTION_25	IF_33	CALL_134
0x40043f8	            0x780c	                            js 0x4004406	      1460	state.c	FUNCTION_25	IF_33	CALL_134
0x40043fa	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1460	state.c	FUNCTION_25	IF_33	CALL_134
0x40043fe	          0x8b4040	            mov eax, dword [rax + 0x40] 	      1460	state.c	FUNCTION_25	IF_33	CALL_134
0x4004401	          0x83e801	                              sub eax, 1	      1460	state.c	FUNCTION_25	IF_33	CALL_134
0x4004404	            0xeb0a	                           jmp 0x4004410	      1460	state.c	FUNCTION_25	IF_33	CALL_134
0x4004406	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1460	state.c	FUNCTION_25	IF_33	CALL_134
0x400440a	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1460	state.c	FUNCTION_25	IF_33	CALL_134
0x400440d	          0x83e801	                              sub eax, 1	      1460	state.c	FUNCTION_25	IF_33	CALL_134
0x4004410	            0x39c2	                            cmp edx, eax	      1460	state.c	FUNCTION_25	IF_33	CALL_134
0x4004412	            0x7e28	                           jle 0x400443c	      1460	state.c	FUNCTION_25	IF_33	CALL_134
0x4004414	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1460	state.c	FUNCTION_25	IF_33	CALL_134
0x4004418	          0x8b4040	            mov eax, dword [rax + 0x40] 	      1460	state.c	FUNCTION_25	IF_33	CALL_134
0x400441b	            0x85c0	                           test eax, eax	      1460	state.c	FUNCTION_25	IF_33	CALL_134
0x400441d	            0x780c	                            js 0x400442b	      1460	state.c	FUNCTION_25	IF_33	CALL_134
0x400441f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1460	state.c	FUNCTION_25	IF_33	CALL_134
0x4004423	          0x8b4040	            mov eax, dword [rax + 0x40] 	      1460	state.c	FUNCTION_25	IF_33	CALL_134
0x4004426	          0x83e801	                              sub eax, 1	      1460	state.c	FUNCTION_25	IF_33	CALL_134
0x4004429	            0xeb0a	                           jmp 0x4004435	      1460	state.c	FUNCTION_25	IF_33	CALL_134
0x400442b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1460	state.c	FUNCTION_25	IF_33	CALL_134
0x400442f	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1460	state.c	FUNCTION_25	IF_33	CALL_134
0x4004432	          0x83e801	                              sub eax, 1	      1460	state.c	FUNCTION_25	IF_33	CALL_134
0x4004435	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1460	state.c	FUNCTION_25	IF_33	CALL_134
0x4004439	          0x894230	             mov dword [rdx + 0x30], eax	      1460	state.c	FUNCTION_25	IF_33	CALL_134
0x400443c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1461	state.c	FUNCTION_25	IF_33	CALL_135
0x4004440	          0x8b5034	            mov edx, dword [rax + 0x34] 	      1461	state.c	FUNCTION_25	IF_33	CALL_135
0x4004443	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1461	state.c	FUNCTION_25	IF_33	CALL_135
0x4004447	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	      1461	state.c	FUNCTION_25	IF_33	CALL_135
0x400444e	          0x83e010	                           and eax, 0x10	      1461	state.c	FUNCTION_25	IF_33	CALL_135
0x4004451	            0x84c0	                             test al, al	      1461	state.c	FUNCTION_25	IF_33	CALL_135
0x4004453	            0x7409	                            je 0x400445e	      1461	state.c	FUNCTION_25	IF_33	CALL_135
0x4004455	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1461	state.c	FUNCTION_25	IF_33	CALL_135
0x4004459	          0x8b4044	            mov eax, dword [rax + 0x44] 	      1461	state.c	FUNCTION_25	IF_33	CALL_135
0x400445c	            0xeb05	                           jmp 0x4004463	      1461	state.c	FUNCTION_25	IF_33	CALL_135
0x400445e	      0xb800000000	                              mov eax, 0	      1461	state.c	FUNCTION_25	IF_33	CALL_135
0x4004463	            0x39c2	                            cmp edx, eax	      1461	state.c	FUNCTION_25	IF_33	CALL_135
0x4004465	            0x7d27	                           jge 0x400448e	      1461	state.c	FUNCTION_25	IF_33	CALL_135
0x4004467	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1461	state.c	FUNCTION_25	IF_33	CALL_135
0x400446b	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	      1461	state.c	FUNCTION_25	IF_33	CALL_135
0x4004472	          0x83e010	                           and eax, 0x10	      1461	state.c	FUNCTION_25	IF_33	CALL_135
0x4004475	            0x84c0	                             test al, al	      1461	state.c	FUNCTION_25	IF_33	CALL_135
0x4004477	            0x7409	                            je 0x4004482	      1461	state.c	FUNCTION_25	IF_33	CALL_135
0x4004479	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1461	state.c	FUNCTION_25	IF_33	CALL_135
0x400447d	          0x8b4044	            mov eax, dword [rax + 0x44] 	      1461	state.c	FUNCTION_25	IF_33	CALL_135
0x4004480	            0xeb05	                           jmp 0x4004487	      1461	state.c	FUNCTION_25	IF_33	CALL_135
0x4004482	      0xb800000000	                              mov eax, 0	      1461	state.c	FUNCTION_25	IF_33	CALL_135
0x4004487	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1461	state.c	FUNCTION_25	IF_33	CALL_135
0x400448b	          0x894234	             mov dword [rdx + 0x34], eax	      1461	state.c	FUNCTION_25	IF_33	CALL_135
0x400448e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x4004492	          0x8b5034	            mov edx, dword [rax + 0x34] 	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x4004495	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x4004499	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x40044a0	          0x83e010	                           and eax, 0x10	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x40044a3	            0x84c0	                             test al, al	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x40044a5	            0x7417	                            je 0x40044be	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x40044a7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x40044ab	          0x8b4048	            mov eax, dword [rax + 0x48] 	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x40044ae	            0x85c0	                           test eax, eax	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x40044b0	            0x780c	                            js 0x40044be	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x40044b2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x40044b6	          0x8b4048	            mov eax, dword [rax + 0x48] 	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x40044b9	          0x83e801	                              sub eax, 1	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x40044bc	            0xeb0a	                           jmp 0x40044c8	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x40044be	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x40044c2	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x40044c5	          0x83e801	                              sub eax, 1	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x40044c8	            0x39c2	                            cmp edx, eax	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x40044ca	     0xf8e25010000	                           jle 0x40045f5	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x40044d0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x40044d4	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x40044db	          0x83e010	                           and eax, 0x10	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x40044de	            0x84c0	                             test al, al	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x40044e0	            0x7417	                            je 0x40044f9	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x40044e2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x40044e6	          0x8b4048	            mov eax, dword [rax + 0x48] 	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x40044e9	            0x85c0	                           test eax, eax	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x40044eb	            0x780c	                            js 0x40044f9	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x40044ed	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x40044f1	          0x8b4048	            mov eax, dword [rax + 0x48] 	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x40044f4	          0x83e801	                              sub eax, 1	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x40044f7	            0xeb0a	                           jmp 0x4004503	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x40044f9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x40044fd	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x4004500	          0x83e801	                              sub eax, 1	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x4004503	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x4004507	          0x894234	             mov dword [rdx + 0x34], eax	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x400450a	      0xe9e6000000	                           jmp 0x40045f5	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x400450f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1465	state.c	FUNCTION_25	ELSE_5
0x4004513	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1465	state.c	FUNCTION_25	ELSE_5
0x4004516	            0x85c0	                           test eax, eax	      1465	state.c	FUNCTION_25	ELSE_5
0x4004518	            0x790b	                           jns 0x4004525	      1465	state.c	FUNCTION_25	ELSE_5
0x400451a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1465	state.c	FUNCTION_25	ELSE_5
0x400451e	    0xc74030000000	               mov dword [rax + 0x30], 0	      1465	state.c	FUNCTION_25	ELSE_5
0x4004525	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1466	state.c	FUNCTION_25	ELSE_5
0x4004529	          0x8b5030	            mov edx, dword [rax + 0x30] 	      1466	state.c	FUNCTION_25	ELSE_5
0x400452c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1466	state.c	FUNCTION_25	ELSE_5
0x4004530	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1466	state.c	FUNCTION_25	ELSE_5
0x4004533	          0x83e801	                              sub eax, 1	      1466	state.c	FUNCTION_25	ELSE_5
0x4004536	            0x39c2	                            cmp edx, eax	      1466	state.c	FUNCTION_25	ELSE_5
0x4004538	            0x7e11	                           jle 0x400454b	      1466	state.c	FUNCTION_25	ELSE_5
0x400453a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1466	state.c	FUNCTION_25	ELSE_5
0x400453e	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1466	state.c	FUNCTION_25	ELSE_5
0x4004541	          0x8d50ff	                      lea edx, [rax - 1]	      1466	state.c	FUNCTION_25	ELSE_5
0x4004544	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1466	state.c	FUNCTION_25	ELSE_5
0x4004548	          0x895030	             mov dword [rax + 0x30], edx	      1466	state.c	FUNCTION_25	ELSE_5
0x400454b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1467	state.c	FUNCTION_25	ELSE_5
0x400454f	          0x8b4034	            mov eax, dword [rax + 0x34] 	      1467	state.c	FUNCTION_25	ELSE_5
0x4004552	            0x85c0	                           test eax, eax	      1467	state.c	FUNCTION_25	ELSE_5
0x4004554	            0x790b	                           jns 0x4004561	      1467	state.c	FUNCTION_25	ELSE_5
0x4004556	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1467	state.c	FUNCTION_25	ELSE_5
0x400455a	    0xc74034000000	               mov dword [rax + 0x34], 0	      1467	state.c	FUNCTION_25	ELSE_5
0x4004561	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x4004565	          0x8b5034	            mov edx, dword [rax + 0x34] 	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x4004568	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x400456c	        0x488b4858	            mov rcx, qword [rax + 0x58] 	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x4004570	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x4004574	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x4004577	            0x4898	                                    cdqe	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x4004579	        0x48c1e002	                              shl rax, 2	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x400457d	          0x4801c8	                            add rax, rcx	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x4004580	           0xfb600	                   movzx eax, byte [rax]	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x4004583	          0x83e001	                              and eax, 1	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x4004586	            0x84c0	                             test al, al	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x4004588	            0x7415	                            je 0x400459f	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x400458a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x400458e	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x4004591	            0x89c1	                            mov ecx, eax	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x4004593	          0xc1e91f	                           shr ecx, 0x1f	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x4004596	             0x1c8	                            add eax, ecx	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x4004598	            0xd1f8	                              sar eax, 1	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x400459a	          0x83e801	                              sub eax, 1	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x400459d	            0xeb0a	                           jmp 0x40045a9	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x400459f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x40045a3	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x40045a6	          0x83e801	                              sub eax, 1	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x40045a9	            0x39c2	                            cmp edx, eax	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x40045ab	            0x7e48	                           jle 0x40045f5	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x40045ad	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x40045b1	        0x488b5058	            mov rdx, qword [rax + 0x58] 	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x40045b5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x40045b9	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x40045bc	            0x4898	                                    cdqe	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x40045be	        0x48c1e002	                              shl rax, 2	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x40045c2	          0x4801d0	                            add rax, rdx	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x40045c5	           0xfb600	                   movzx eax, byte [rax]	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x40045c8	          0x83e001	                              and eax, 1	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x40045cb	            0x84c0	                             test al, al	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x40045cd	            0x7415	                            je 0x40045e4	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x40045cf	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x40045d3	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x40045d6	            0x89c2	                            mov edx, eax	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x40045d8	          0xc1ea1f	                           shr edx, 0x1f	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x40045db	             0x1d0	                            add eax, edx	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x40045dd	            0xd1f8	                              sar eax, 1	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x40045df	          0x83e801	                              sub eax, 1	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x40045e2	            0xeb0a	                           jmp 0x40045ee	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x40045e4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x40045e8	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x40045eb	          0x83e801	                              sub eax, 1	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x40045ee	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x40045f2	          0x894234	             mov dword [rdx + 0x34], eax	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x40045f5	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	      1471	state.c	FUNCTION_25	CALL_138
0x40045f9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1471	state.c	FUNCTION_25	CALL_138
0x40045fd	      0xba01000000	                              mov edx, 1	      1471	state.c	FUNCTION_25	CALL_138
0x4004602	          0x4889ce	                            mov rsi, rcx	      1471	state.c	FUNCTION_25	CALL_138
0x4004605	          0x4889c7	                            mov rdi, rax	      1471	state.c	FUNCTION_25	CALL_138
0x4004608	      0xe83bbbffff	                   call sym.updatecursor	      1471	state.c	FUNCTION_25	CALL_138
0x400460d	      0xb801000000	                              mov eax, 1	      1494	state.c	FUNCTION_25
0x4004612	        0x488b7df8	                mov rdi, qword [rbp - 8]	      1495	state.c	FUNCTION_25
0x4004616	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      1495	state.c	FUNCTION_25
0x400461f	            0x7405	                            je 0x4004626	      1495	state.c	FUNCTION_25
0x4004621	      0xe800000000	                          call 0x4004626	      1495	state.c	FUNCTION_25
0x4004626	              0xc9	                                   leave	      1495	state.c	FUNCTION_25
0x4004627	              0xc3	                                     ret	      1495	state.c	FUNCTION_25
set_col_tabstop	functions,0:CALL,0:DO,0:WHILE,0:IF,0:ELSE,0:SWITCH,0:FOR,0	29
0x4000729	              0x55	                                push rbp	       156	state.c	FUNCTION_9
0x400072a	          0x4889e5	                            mov rbp, rsp	       156	state.c	FUNCTION_9
0x400072d	        0x48897de8	             mov qword [rbp - 0x18], rdi	       156	state.c	FUNCTION_9
0x4000731	          0x8975e4	             mov dword [rbp - 0x1c], esi	       156	state.c	FUNCTION_9
0x4000734	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       157	state.c	FUNCTION_9
0x4000737	          0x83e007	                              and eax, 7	       157	state.c	FUNCTION_9
0x400073a	      0xba01000000	                              mov edx, 1	       157	state.c	FUNCTION_9
0x400073f	            0x89c1	                            mov ecx, eax	       157	state.c	FUNCTION_9
0x4000741	            0xd3e2	                             shl edx, cl	       157	state.c	FUNCTION_9
0x4000743	            0x89d0	                            mov eax, edx	       157	state.c	FUNCTION_9
0x4000745	          0x8845ff	                  mov byte [rbp - 1], al	       157	state.c	FUNCTION_9
0x4000748	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       158	state.c	FUNCTION_9
0x400074c	        0x488b5050	            mov rdx, qword [rax + 0x50] 	       158	state.c	FUNCTION_9
0x4000750	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       158	state.c	FUNCTION_9
0x4000753	          0xc1f803	                              sar eax, 3	       158	state.c	FUNCTION_9
0x4000756	            0x4898	                                    cdqe	       158	state.c	FUNCTION_9
0x4000758	          0x4801c2	                            add rdx, rax	       158	state.c	FUNCTION_9
0x400075b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       158	state.c	FUNCTION_9
0x400075f	        0x488b4850	            mov rcx, qword [rax + 0x50] 	       158	state.c	FUNCTION_9
0x4000763	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       158	state.c	FUNCTION_9
0x4000766	          0xc1f803	                              sar eax, 3	       158	state.c	FUNCTION_9
0x4000769	            0x4898	                                    cdqe	       158	state.c	FUNCTION_9
0x400076b	          0x4801c8	                            add rax, rcx	       158	state.c	FUNCTION_9
0x400076e	           0xfb600	                   movzx eax, byte [rax]	       158	state.c	FUNCTION_9
0x4000771	           0xa45ff	                   or al, byte [rbp - 1]	       158	state.c	FUNCTION_9
0x4000774	            0x8802	                      mov byte [rdx], al	       158	state.c	FUNCTION_9
0x4000776	              0x90	                                     nop	       159	state.c	FUNCTION_9
0x4000777	              0x5d	                                 pop rbp	       159	state.c	FUNCTION_9
0x4000778	              0xc3	                                     ret	       159	state.c	FUNCTION_9
updatecursor	functions,0:CALL,0:DO,0:WHILE,0:IF,4:ELSE,0:SWITCH,0:FOR,0	52
0x4000148	              0x55	                                push rbp	        33	state.c	FUNCTION_2
0x4000149	          0x4889e5	                            mov rbp, rsp	        33	state.c	FUNCTION_2
0x400014c	        0x4883ec20	                           sub rsp, 0x20	        33	state.c	FUNCTION_2
0x4000150	        0x48897df8	                mov qword [rbp - 8], rdi	        33	state.c	FUNCTION_2
0x4000154	        0x488975f0	             mov qword [rbp - 0x10], rsi	        33	state.c	FUNCTION_2
0x4000158	          0x8955ec	             mov dword [rbp - 0x14], edx	        33	state.c	FUNCTION_2
0x400015b	        0x488b45f8	                mov rax, qword [rbp - 8]	        34	state.c	FUNCTION_2	IF_1
0x400015f	          0x8b5034	            mov edx, dword [rax + 0x34] 	        34	state.c	FUNCTION_2	IF_1
0x4000162	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        34	state.c	FUNCTION_2	IF_1
0x4000166	          0x8b4004	                mov eax, dword [rax + 4]	        34	state.c	FUNCTION_2	IF_1
0x4000169	            0x39c2	                            cmp edx, eax	        34	state.c	FUNCTION_2	IF_1
0x400016b	            0x7511	                           jne 0x400017e	        34	state.c	FUNCTION_2	IF_1
0x400016d	        0x488b45f8	                mov rax, qword [rbp - 8]	        34	state.c	FUNCTION_2	IF_1
0x4000171	          0x8b5030	            mov edx, dword [rax + 0x30] 	        34	state.c	FUNCTION_2	IF_1
0x4000174	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        34	state.c	FUNCTION_2	IF_1
0x4000178	            0x8b00	                    mov eax, dword [rax]	        34	state.c	FUNCTION_2	IF_1
0x400017a	            0x39c2	                            cmp edx, eax	        34	state.c	FUNCTION_2	IF_1
0x400017c	            0x7470	                            je 0x40001ee	        34	state.c	FUNCTION_2	IF_1
0x400017e	        0x837dec00	               cmp dword [rbp - 0x14], 0	        37	state.c	FUNCTION_2	IF_2
0x4000182	            0x740b	                            je 0x400018f	        37	state.c	FUNCTION_2	IF_2
0x4000184	        0x488b45f8	                mov rax, qword [rbp - 8]	        38	state.c	FUNCTION_2	IF_2
0x4000188	    0xc74038000000	               mov dword [rax + 0x38], 0	        38	state.c	FUNCTION_2	IF_2
0x400018f	        0x488b45f8	                mov rax, qword [rbp - 8]	        40	state.c	FUNCTION_2	IF_3
0x4000193	        0x488b4008	                mov rax, qword [rax + 8]	        40	state.c	FUNCTION_2	IF_3
0x4000197	          0x4885c0	                           test rax, rax	        40	state.c	FUNCTION_2	IF_3
0x400019a	            0x7453	                            je 0x40001ef	        40	state.c	FUNCTION_2	IF_3
0x400019c	        0x488b45f8	                mov rax, qword [rbp - 8]	        40	state.c	FUNCTION_2	IF_3
0x40001a0	        0x488b4008	                mov rax, qword [rax + 8]	        40	state.c	FUNCTION_2	IF_3
0x40001a4	        0x488b4008	                mov rax, qword [rax + 8]	        40	state.c	FUNCTION_2	IF_3
0x40001a8	          0x4885c0	                           test rax, rax	        40	state.c	FUNCTION_2	IF_3
0x40001ab	            0x7442	                            je 0x40001ef	        40	state.c	FUNCTION_2	IF_3
0x40001ad	        0x488b45f8	                mov rax, qword [rbp - 8]	        41	state.c	FUNCTION_2	IF_3	IF_4
0x40001b1	        0x488b4008	                mov rax, qword [rax + 8]	        41	state.c	FUNCTION_2	IF_3	IF_4
0x40001b5	        0x4c8b4008	                 mov r8, qword [rax + 8]	        41	state.c	FUNCTION_2	IF_3	IF_4
0x40001b9	        0x488b45f8	                mov rax, qword [rbp - 8]	        41	state.c	FUNCTION_2	IF_3	IF_4
0x40001bd	        0x488b4810	            mov rcx, qword [rax + 0x10] 	        41	state.c	FUNCTION_2	IF_3	IF_4
0x40001c1	        0x488b45f8	                mov rax, qword [rbp - 8]	        41	state.c	FUNCTION_2	IF_3	IF_4
0x40001c5	     0xfb680940000	           movzx eax, byte [rax + 0x94] 	        41	state.c	FUNCTION_2	IF_3	IF_4
0x40001cc	          0xc0e805	                               shr al, 5	        41	state.c	FUNCTION_2	IF_3	IF_4
0x40001cf	          0x83e001	                              and eax, 1	        41	state.c	FUNCTION_2	IF_3	IF_4
0x40001d2	           0xfb6d0	                           movzx edx, al	        41	state.c	FUNCTION_2	IF_3	IF_4
0x40001d5	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	        41	state.c	FUNCTION_2	IF_3	IF_4
0x40001d9	        0x488b45f8	                mov rax, qword [rbp - 8]	        41	state.c	FUNCTION_2	IF_3	IF_4
0x40001dd	        0x488b4030	            mov rax, qword [rax + 0x30] 	        41	state.c	FUNCTION_2	IF_3	IF_4
0x40001e1	          0x488b36	                    mov rsi, qword [rsi]	        41	state.c	FUNCTION_2	IF_3	IF_4
0x40001e4	          0x4889c7	                            mov rdi, rax	        41	state.c	FUNCTION_2	IF_3	IF_4
0x40001e7	          0x41ffd0	                                 call r8	        41	state.c	FUNCTION_2	IF_3	IF_4
0x40001ea	            0x85c0	                           test eax, eax	        41	state.c	FUNCTION_2	IF_3	IF_4
0x40001ec	            0xeb01	                           jmp 0x40001ef	        41	state.c	FUNCTION_2	IF_3	IF_4
0x40001ee	              0x90	                                     nop	        35	state.c	FUNCTION_2	IF_1
0x40001ef	              0xc9	                                   leave	        43	state.c	FUNCTION_2
0x40001f0	              0xc3	                                     ret	        43	state.c	FUNCTION_2
settermprop_bool	functions,0:CALL,1:DO,0:WHILE,0:IF,0:ELSE,0:SWITCH,0:FOR,0	23
0x4001500	              0x55	                                push rbp	       517	state.c	FUNCTION_17
0x4001501	          0x4889e5	                            mov rbp, rsp	       517	state.c	FUNCTION_17
0x4001504	        0x4883ec20	                           sub rsp, 0x20	       517	state.c	FUNCTION_17
0x4001508	        0x48897de8	             mov qword [rbp - 0x18], rdi	       517	state.c	FUNCTION_17
0x400150c	          0x8975e4	             mov dword [rbp - 0x1c], esi	       517	state.c	FUNCTION_17
0x400150f	          0x8955e0	             mov dword [rbp - 0x20], edx	       517	state.c	FUNCTION_17
0x4001512	    0x64488b042528	                mov rax, qword fs:[0x28]	       517	state.c	FUNCTION_17
0x400151b	        0x488945f8	                mov qword [rbp - 8], rax	       517	state.c	FUNCTION_17
0x400151f	            0x31c0	                            xor eax, eax	       517	state.c	FUNCTION_17
0x4001521	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       519	state.c	FUNCTION_17
0x4001524	          0x8945f0	             mov dword [rbp - 0x10], eax	       519	state.c	FUNCTION_17
0x4001527	        0x488d55f0	                   lea rdx, [rbp - 0x10]	       520	state.c	FUNCTION_17	CALL_1
0x400152b	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	       520	state.c	FUNCTION_17	CALL_1
0x400152e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       520	state.c	FUNCTION_17	CALL_1
0x4001532	            0x89ce	                            mov esi, ecx	       520	state.c	FUNCTION_17	CALL_1
0x4001534	          0x4889c7	                            mov rdi, rax	       520	state.c	FUNCTION_17	CALL_1
0x4001537	      0xe800000000	                          call 0x400153c	       520	state.c	FUNCTION_17	CALL_1
0x400153c	        0x488b4df8	                mov rcx, qword [rbp - 8]	       521	state.c	FUNCTION_17
0x4001540	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       521	state.c	FUNCTION_17
0x4001549	            0x7405	                            je 0x4001550	       521	state.c	FUNCTION_17
0x400154b	      0xe800000000	                          call 0x4001550	       521	state.c	FUNCTION_17
0x4001550	              0xc9	                                   leave	       521	state.c	FUNCTION_17
0x4001551	              0xc3	                                     ret	       521	state.c	FUNCTION_17
on_control	functions,0:CALL,12:DO,0:WHILE,0:IF,8:ELSE,1:SWITCH,1:FOR,0	203
0x40011f8	              0x55	                                push rbp	       419	state.c	FUNCTION_16
0x40011f9	          0x4889e5	                            mov rbp, rsp	       419	state.c	FUNCTION_16
0x40011fc	        0x4883ec40	                           sub rsp, 0x40	       419	state.c	FUNCTION_16
0x4001200	            0x89f8	                            mov eax, edi	       419	state.c	FUNCTION_16
0x4001202	        0x488975c0	             mov qword [rbp - 0x40], rsi	       419	state.c	FUNCTION_16
0x4001206	          0x8845cc	               mov byte [rbp - 0x34], al	       419	state.c	FUNCTION_16
0x4001209	    0x64488b042528	                mov rax, qword fs:[0x28]	       419	state.c	FUNCTION_16
0x4001212	        0x488945f8	                mov qword [rbp - 8], rax	       419	state.c	FUNCTION_16
0x4001216	            0x31c0	                            xor eax, eax	       419	state.c	FUNCTION_16
0x4001218	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       420	state.c	FUNCTION_16
0x400121c	        0x488945d8	             mov qword [rbp - 0x28], rax	       420	state.c	FUNCTION_16
0x4001220	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       422	state.c	FUNCTION_16
0x4001224	        0x488b4030	            mov rax, qword [rax + 0x30] 	       422	state.c	FUNCTION_16
0x4001228	        0x488945d0	             mov qword [rbp - 0x30], rax	       422	state.c	FUNCTION_16
0x400122c	         0xfb645cc	            movzx eax, byte [rbp - 0x34]	       424	state.c	FUNCTION_16	SWITCH_1
0x4001230	          0x83e807	                              sub eax, 7	       424	state.c	FUNCTION_16	SWITCH_1
0x4001233	      0x3d88000000	                           cmp eax, 0x88	       424	state.c	FUNCTION_16	SWITCH_1
0x4001238	     0xf8736020000	                            ja 0x4001474	       424	state.c	FUNCTION_16	SWITCH_1
0x400123e	            0x89c0	                            mov eax, eax	       424	state.c	FUNCTION_16	SWITCH_1
0x4001240	    0x488b04c50000	                  mov rax, qword [rax*8]	       424	state.c	FUNCTION_16	SWITCH_1
0x4001248	            0xffe0	                                 jmp rax	       424	state.c	FUNCTION_16	SWITCH_1
0x400124a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       426	state.c	FUNCTION_16	SWITCH_1	IF_1
0x400124e	        0x488b4008	                mov rax, qword [rax + 8]	       426	state.c	FUNCTION_16	SWITCH_1	IF_1
0x4001252	          0x4885c0	                           test rax, rax	       426	state.c	FUNCTION_16	SWITCH_1	IF_1
0x4001255	     0xf8468020000	                            je 0x40014c3	       426	state.c	FUNCTION_16	SWITCH_1	IF_1
0x400125b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       426	state.c	FUNCTION_16	SWITCH_1	IF_1
0x400125f	        0x488b4008	                mov rax, qword [rax + 8]	       426	state.c	FUNCTION_16	SWITCH_1	IF_1
0x4001263	        0x488b4040	            mov rax, qword [rax + 0x40] 	       426	state.c	FUNCTION_16	SWITCH_1	IF_1
0x4001267	          0x4885c0	                           test rax, rax	       426	state.c	FUNCTION_16	SWITCH_1	IF_1
0x400126a	     0xf8453020000	                            je 0x40014c3	       426	state.c	FUNCTION_16	SWITCH_1	IF_1
0x4001270	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       427	state.c	FUNCTION_16	SWITCH_1	IF_1
0x4001274	        0x488b4008	                mov rax, qword [rax + 8]	       427	state.c	FUNCTION_16	SWITCH_1	IF_1
0x4001278	        0x488b4040	            mov rax, qword [rax + 0x40] 	       427	state.c	FUNCTION_16	SWITCH_1	IF_1
0x400127c	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       427	state.c	FUNCTION_16	SWITCH_1	IF_1
0x4001280	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	       427	state.c	FUNCTION_16	SWITCH_1	IF_1
0x4001284	          0x4889d7	                            mov rdi, rdx	       427	state.c	FUNCTION_16	SWITCH_1	IF_1
0x4001287	            0xffd0	                                call rax	       427	state.c	FUNCTION_16	SWITCH_1	IF_1
0x4001289	      0xe935020000	                           jmp 0x40014c3	       428	state.c	FUNCTION_16	SWITCH_1
0x400128e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       431	state.c	FUNCTION_16	SWITCH_1	IF_2
0x4001292	          0x8b4034	            mov eax, dword [rax + 0x34] 	       431	state.c	FUNCTION_16	SWITCH_1	IF_2
0x4001295	            0x85c0	                           test eax, eax	       431	state.c	FUNCTION_16	SWITCH_1	IF_2
0x4001297	     0xf8e29020000	                           jle 0x40014c6	       431	state.c	FUNCTION_16	SWITCH_1	IF_2
0x400129d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       432	state.c	FUNCTION_16	SWITCH_1	IF_2
0x40012a1	          0x8b4034	            mov eax, dword [rax + 0x34] 	       432	state.c	FUNCTION_16	SWITCH_1	IF_2
0x40012a4	          0x8d50ff	                      lea edx, [rax - 1]	       432	state.c	FUNCTION_16	SWITCH_1	IF_2
0x40012a7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       432	state.c	FUNCTION_16	SWITCH_1	IF_2
0x40012ab	          0x895034	             mov dword [rax + 0x34], edx	       432	state.c	FUNCTION_16	SWITCH_1	IF_2
0x40012ae	      0xe913020000	                           jmp 0x40014c6	       433	state.c	FUNCTION_16	SWITCH_1
0x40012b3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       436	state.c	FUNCTION_16	SWITCH_1	CALL_1
0x40012b7	      0xba01000000	                              mov edx, 1	       436	state.c	FUNCTION_16	SWITCH_1	CALL_1
0x40012bc	      0xbe01000000	                              mov esi, 1	       436	state.c	FUNCTION_16	SWITCH_1	CALL_1
0x40012c1	          0x4889c7	                            mov rdi, rax	       436	state.c	FUNCTION_16	SWITCH_1	CALL_1
0x40012c4	      0xe8fcf5ffff	                            call sym.tab	       436	state.c	FUNCTION_16	SWITCH_1	CALL_1
0x40012c9	      0xe9ff010000	                           jmp 0x40014cd	       437	state.c	FUNCTION_16	SWITCH_1
0x40012ce	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       442	state.c	FUNCTION_16	SWITCH_1	CALL_2
0x40012d2	          0x4889c7	                            mov rdi, rax	       442	state.c	FUNCTION_16	SWITCH_1	CALL_2
0x40012d5	      0xe8acf2ffff	                       call sym.linefeed	       442	state.c	FUNCTION_16	SWITCH_1	CALL_2
0x40012da	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       443	state.c	FUNCTION_16	SWITCH_1	IF_3
0x40012de	     0xfb680940000	           movzx eax, byte [rax + 0x94] 	       443	state.c	FUNCTION_16	SWITCH_1	IF_3
0x40012e5	          0x83e010	                           and eax, 0x10	       443	state.c	FUNCTION_16	SWITCH_1	IF_3
0x40012e8	            0x84c0	                             test al, al	       443	state.c	FUNCTION_16	SWITCH_1	IF_3
0x40012ea	     0xf84d9010000	                            je 0x40014c9	       443	state.c	FUNCTION_16	SWITCH_1	IF_3
0x40012f0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       444	state.c	FUNCTION_16	SWITCH_1	IF_3
0x40012f4	    0xc74034000000	               mov dword [rax + 0x34], 0	       444	state.c	FUNCTION_16	SWITCH_1	IF_3
0x40012fb	      0xe9c9010000	                           jmp 0x40014c9	       445	state.c	FUNCTION_16	SWITCH_1
0x4001300	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       448	state.c	FUNCTION_16	SWITCH_1
0x4001304	    0xc74034000000	               mov dword [rax + 0x34], 0	       448	state.c	FUNCTION_16	SWITCH_1
0x400130b	      0xe9bd010000	                           jmp 0x40014cd	       449	state.c	FUNCTION_16	SWITCH_1
0x4001310	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       452	state.c	FUNCTION_16	SWITCH_1
0x4001314	    0xc78010010000	              mov dword [rax + 0x110], 1	       452	state.c	FUNCTION_16	SWITCH_1
0x400131e	      0xe9aa010000	                           jmp 0x40014cd	       453	state.c	FUNCTION_16	SWITCH_1
0x4001323	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       456	state.c	FUNCTION_16	SWITCH_1
0x4001327	    0xc78010010000	              mov dword [rax + 0x110], 0	       456	state.c	FUNCTION_16	SWITCH_1
0x4001331	      0xe997010000	                           jmp 0x40014cd	       457	state.c	FUNCTION_16	SWITCH_1
0x4001336	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       460	state.c	FUNCTION_16	SWITCH_1	CALL_3
0x400133a	          0x4889c7	                            mov rdi, rax	       460	state.c	FUNCTION_16	SWITCH_1	CALL_3
0x400133d	      0xe844f2ffff	                       call sym.linefeed	       460	state.c	FUNCTION_16	SWITCH_1	CALL_3
0x4001342	      0xe986010000	                           jmp 0x40014cd	       461	state.c	FUNCTION_16	SWITCH_1
0x4001347	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       464	state.c	FUNCTION_16	SWITCH_1	CALL_4
0x400134b	          0x4889c7	                            mov rdi, rax	       464	state.c	FUNCTION_16	SWITCH_1	CALL_4
0x400134e	      0xe833f2ffff	                       call sym.linefeed	       464	state.c	FUNCTION_16	SWITCH_1	CALL_4
0x4001353	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       465	state.c	FUNCTION_16	SWITCH_1
0x4001357	    0xc74034000000	               mov dword [rax + 0x34], 0	       465	state.c	FUNCTION_16	SWITCH_1
0x400135e	      0xe96a010000	                           jmp 0x40014cd	       466	state.c	FUNCTION_16	SWITCH_1
0x4001363	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       469	state.c	FUNCTION_16	SWITCH_1	CALL_5
0x4001367	          0x8b5034	            mov edx, dword [rax + 0x34] 	       469	state.c	FUNCTION_16	SWITCH_1	CALL_5
0x400136a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       469	state.c	FUNCTION_16	SWITCH_1	CALL_5
0x400136e	            0x89d6	                            mov esi, edx	       469	state.c	FUNCTION_16	SWITCH_1	CALL_5
0x4001370	          0x4889c7	                            mov rdi, rax	       469	state.c	FUNCTION_16	SWITCH_1	CALL_5
0x4001373	      0xe8b1f3ffff	                call sym.set_col_tabstop	       469	state.c	FUNCTION_16	SWITCH_1	CALL_5
0x4001378	      0xe950010000	                           jmp 0x40014cd	       470	state.c	FUNCTION_16	SWITCH_1
0x400137d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       473	state.c	FUNCTION_16	SWITCH_1	IF_4
0x4001381	          0x8b5030	            mov edx, dword [rax + 0x30] 	       473	state.c	FUNCTION_16	SWITCH_1	IF_4
0x4001384	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       473	state.c	FUNCTION_16	SWITCH_1	IF_4
0x4001388	          0x8b403c	            mov eax, dword [rax + 0x3c] 	       473	state.c	FUNCTION_16	SWITCH_1	IF_4
0x400138b	            0x39c2	                            cmp edx, eax	       473	state.c	FUNCTION_16	SWITCH_1	IF_4
0x400138d	     0xf859f000000	                           jne 0x4001432	       473	state.c	FUNCTION_16	SWITCH_1	IF_4
0x4001393	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       475	state.c	FUNCTION_16	SWITCH_1	IF_4
0x4001397	          0x8b403c	            mov eax, dword [rax + 0x3c] 	       475	state.c	FUNCTION_16	SWITCH_1	IF_4
0x400139a	          0x8945e0	             mov dword [rbp - 0x20], eax	       475	state.c	FUNCTION_16	SWITCH_1	IF_4
0x400139d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       476	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_6
0x40013a1	          0x8b4040	            mov eax, dword [rax + 0x40] 	       476	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_6
0x40013a4	            0x85c0	                           test eax, eax	       476	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_6
0x40013a6	            0x7809	                            js 0x40013b1	       476	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_6
0x40013a8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       476	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_6
0x40013ac	          0x8b4040	            mov eax, dword [rax + 0x40] 	       476	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_6
0x40013af	            0xeb07	                           jmp 0x40013b8	       476	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_6
0x40013b1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       476	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_6
0x40013b5	          0x8b4028	            mov eax, dword [rax + 0x28] 	       476	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_6
0x40013b8	          0x8945e4	             mov dword [rbp - 0x1c], eax	       476	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_6
0x40013bb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       477	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_7
0x40013bf	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	       477	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_7
0x40013c6	          0x83e010	                           and eax, 0x10	       477	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_7
0x40013c9	            0x84c0	                             test al, al	       477	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_7
0x40013cb	            0x7409	                            je 0x40013d6	       477	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_7
0x40013cd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       477	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_7
0x40013d1	          0x8b4044	            mov eax, dword [rax + 0x44] 	       477	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_7
0x40013d4	            0xeb05	                           jmp 0x40013db	       477	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_7
0x40013d6	      0xb800000000	                              mov eax, 0	       477	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_7
0x40013db	          0x8945e8	             mov dword [rbp - 0x18], eax	       477	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_7
0x40013de	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       478	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_8
0x40013e2	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	       478	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_8
0x40013e9	          0x83e010	                           and eax, 0x10	       478	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_8
0x40013ec	            0x84c0	                             test al, al	       478	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_8
0x40013ee	            0x7414	                            je 0x4001404	       478	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_8
0x40013f0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       478	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_8
0x40013f4	          0x8b4048	            mov eax, dword [rax + 0x48] 	       478	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_8
0x40013f7	            0x85c0	                           test eax, eax	       478	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_8
0x40013f9	            0x7809	                            js 0x4001404	       478	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_8
0x40013fb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       478	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_8
0x40013ff	          0x8b4048	            mov eax, dword [rax + 0x48] 	       478	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_8
0x4001402	            0xeb07	                           jmp 0x400140b	       478	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_8
0x4001404	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       478	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_8
0x4001408	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       478	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_8
0x400140b	          0x8945ec	             mov dword [rbp - 0x14], eax	       478	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_8
0x400140e	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       480	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_9
0x4001412	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       480	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_9
0x4001416	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       480	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_9
0x400141a	    0x41b800000000	                              mov r8d, 0	       480	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_9
0x4001420	      0xb9ffffffff	                     mov ecx, 0xffffffff	       480	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_9
0x4001425	          0x4889c7	                            mov rdi, rax	       480	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_9
0x4001428	      0xe846efffff	                         call sym.scroll	       480	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_9
0x400142d	      0xe99a000000	                           jmp 0x40014cc	       484	state.c	FUNCTION_16	SWITCH_1
0x4001432	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       482	state.c	FUNCTION_16	SWITCH_1	ELSE_1	IF_5
0x4001436	          0x8b4030	            mov eax, dword [rax + 0x30] 	       482	state.c	FUNCTION_16	SWITCH_1	ELSE_1	IF_5
0x4001439	            0x85c0	                           test eax, eax	       482	state.c	FUNCTION_16	SWITCH_1	ELSE_1	IF_5
0x400143b	     0xf8e8b000000	                           jle 0x40014cc	       482	state.c	FUNCTION_16	SWITCH_1	ELSE_1	IF_5
0x4001441	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       483	state.c	FUNCTION_16	SWITCH_1	ELSE_1	IF_5
0x4001445	          0x8b4030	            mov eax, dword [rax + 0x30] 	       483	state.c	FUNCTION_16	SWITCH_1	ELSE_1	IF_5
0x4001448	          0x8d50ff	                      lea edx, [rax - 1]	       483	state.c	FUNCTION_16	SWITCH_1	ELSE_1	IF_5
0x400144b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       483	state.c	FUNCTION_16	SWITCH_1	ELSE_1	IF_5
0x400144f	          0x895030	             mov dword [rax + 0x30], edx	       483	state.c	FUNCTION_16	SWITCH_1	ELSE_1	IF_5
0x4001452	            0xeb78	                           jmp 0x40014cc	       484	state.c	FUNCTION_16	SWITCH_1
0x4001454	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       487	state.c	FUNCTION_16	SWITCH_1
0x4001458	    0xc78018010000	              mov dword [rax + 0x118], 2	       487	state.c	FUNCTION_16	SWITCH_1
0x4001462	            0xeb69	                           jmp 0x40014cd	       488	state.c	FUNCTION_16	SWITCH_1
0x4001464	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       491	state.c	FUNCTION_16	SWITCH_1
0x4001468	    0xc78018010000	              mov dword [rax + 0x118], 3	       491	state.c	FUNCTION_16	SWITCH_1
0x4001472	            0xeb59	                           jmp 0x40014cd	       492	state.c	FUNCTION_16	SWITCH_1
0x4001474	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       495	state.c	FUNCTION_16	SWITCH_1	IF_6
0x4001478	        0x488b4018	            mov rax, qword [rax + 0x18] 	       495	state.c	FUNCTION_16	SWITCH_1	IF_6
0x400147c	          0x4885c0	                           test rax, rax	       495	state.c	FUNCTION_16	SWITCH_1	IF_6
0x400147f	            0x743b	                            je 0x40014bc	       495	state.c	FUNCTION_16	SWITCH_1	IF_6
0x4001481	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       495	state.c	FUNCTION_16	SWITCH_1	IF_6
0x4001485	        0x488b4018	            mov rax, qword [rax + 0x18] 	       495	state.c	FUNCTION_16	SWITCH_1	IF_6
0x4001489	        0x488b4008	                mov rax, qword [rax + 8]	       495	state.c	FUNCTION_16	SWITCH_1	IF_6
0x400148d	          0x4885c0	                           test rax, rax	       495	state.c	FUNCTION_16	SWITCH_1	IF_6
0x4001490	            0x742a	                            je 0x40014bc	       495	state.c	FUNCTION_16	SWITCH_1	IF_6
0x4001492	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       496	state.c	FUNCTION_16	SWITCH_1	IF_6	IF_7
0x4001496	        0x488b4018	            mov rax, qword [rax + 0x18] 	       496	state.c	FUNCTION_16	SWITCH_1	IF_6	IF_7
0x400149a	        0x488b4008	                mov rax, qword [rax + 8]	       496	state.c	FUNCTION_16	SWITCH_1	IF_6	IF_7
0x400149e	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       496	state.c	FUNCTION_16	SWITCH_1	IF_6	IF_7
0x40014a2	        0x488b4a20	            mov rcx, qword [rdx + 0x20] 	       496	state.c	FUNCTION_16	SWITCH_1	IF_6	IF_7
0x40014a6	         0xfb655cc	            movzx edx, byte [rbp - 0x34]	       496	state.c	FUNCTION_16	SWITCH_1	IF_6	IF_7
0x40014aa	          0x4889ce	                            mov rsi, rcx	       496	state.c	FUNCTION_16	SWITCH_1	IF_6	IF_7
0x40014ad	            0x89d7	                            mov edi, edx	       496	state.c	FUNCTION_16	SWITCH_1	IF_6	IF_7
0x40014af	            0xffd0	                                call rax	       496	state.c	FUNCTION_16	SWITCH_1	IF_6	IF_7
0x40014b1	            0x85c0	                           test eax, eax	       496	state.c	FUNCTION_16	SWITCH_1	IF_6	IF_7
0x40014b3	            0x7407	                            je 0x40014bc	       496	state.c	FUNCTION_16	SWITCH_1	IF_6	IF_7
0x40014b5	      0xb801000000	                              mov eax, 1	       497	state.c	FUNCTION_16	SWITCH_1	IF_6	IF_7
0x40014ba	            0xeb2e	                           jmp 0x40014ea	       497	state.c	FUNCTION_16	SWITCH_1	IF_6	IF_7
0x40014bc	      0xb800000000	                              mov eax, 0	       499	state.c	FUNCTION_16	SWITCH_1
0x40014c1	            0xeb27	                           jmp 0x40014ea	       499	state.c	FUNCTION_16	SWITCH_1
0x40014c3	              0x90	                                     nop	       428	state.c	FUNCTION_16	SWITCH_1
0x40014c4	            0xeb07	                           jmp 0x40014cd	       428	state.c	FUNCTION_16	SWITCH_1
0x40014c6	              0x90	                                     nop	       433	state.c	FUNCTION_16	SWITCH_1
0x40014c7	            0xeb04	                           jmp 0x40014cd	       433	state.c	FUNCTION_16	SWITCH_1
0x40014c9	              0x90	                                     nop	       445	state.c	FUNCTION_16	SWITCH_1
0x40014ca	            0xeb01	                           jmp 0x40014cd	       445	state.c	FUNCTION_16	SWITCH_1
0x40014cc	              0x90	                                     nop	       484	state.c	FUNCTION_16	SWITCH_1
0x40014cd	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	       502	state.c	FUNCTION_16	CALL_10
0x40014d1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       502	state.c	FUNCTION_16	CALL_10
0x40014d5	      0xba01000000	                              mov edx, 1	       502	state.c	FUNCTION_16	CALL_10
0x40014da	          0x4889ce	                            mov rsi, rcx	       502	state.c	FUNCTION_16	CALL_10
0x40014dd	          0x4889c7	                            mov rdi, rax	       502	state.c	FUNCTION_16	CALL_10
0x40014e0	      0xe863ecffff	                   call sym.updatecursor	       502	state.c	FUNCTION_16	CALL_10
0x40014e5	      0xb801000000	                              mov eax, 1	       513	state.c	FUNCTION_16
0x40014ea	        0x488b4df8	                mov rcx, qword [rbp - 8]	       514	state.c	FUNCTION_16
0x40014ee	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       514	state.c	FUNCTION_16
0x40014f7	            0x7405	                            je 0x40014fe	       514	state.c	FUNCTION_16
0x40014f9	      0xe800000000	                          call 0x40014fe	       514	state.c	FUNCTION_16
0x40014fe	              0xc9	                                   leave	       514	state.c	FUNCTION_16
0x40014ff	              0xc3	                                     ret	       514	state.c	FUNCTION_16
vterm_state_set_termprop	functions,0:CALL,1:DO,0:WHILE,0:IF,6:ELSE,0:SWITCH,1:FOR,0	164
0x40057f4	              0x55	                                push rbp	      1851	state.c	FUNCTION_38
0x40057f5	          0x4889e5	                            mov rbp, rsp	      1851	state.c	FUNCTION_38
0x40057f8	        0x4883ec30	                           sub rsp, 0x30	      1851	state.c	FUNCTION_38
0x40057fc	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1851	state.c	FUNCTION_38
0x4005800	          0x8975e4	             mov dword [rbp - 0x1c], esi	      1851	state.c	FUNCTION_38
0x4005803	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1851	state.c	FUNCTION_38
0x4005807	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1854	state.c	FUNCTION_38	IF_1
0x400580b	        0x488b4008	                mov rax, qword [rax + 8]	      1854	state.c	FUNCTION_38	IF_1
0x400580f	          0x4885c0	                           test rax, rax	      1854	state.c	FUNCTION_38	IF_1
0x4005812	            0x743e	                            je 0x4005852	      1854	state.c	FUNCTION_38	IF_1
0x4005814	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1854	state.c	FUNCTION_38	IF_1
0x4005818	        0x488b4008	                mov rax, qword [rax + 8]	      1854	state.c	FUNCTION_38	IF_1
0x400581c	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1854	state.c	FUNCTION_38	IF_1
0x4005820	          0x4885c0	                           test rax, rax	      1854	state.c	FUNCTION_38	IF_1
0x4005823	            0x742d	                            je 0x4005852	      1854	state.c	FUNCTION_38	IF_1
0x4005825	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4005829	        0x488b4008	                mov rax, qword [rax + 8]	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x400582d	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4005831	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4005835	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4005839	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x400583d	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4005840	            0x89cf	                            mov edi, ecx	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4005842	            0xffd0	                                call rax	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4005844	            0x85c0	                           test eax, eax	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4005846	            0x750a	                           jne 0x4005852	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4005848	      0xb800000000	                              mov eax, 0	      1856	state.c	FUNCTION_38	IF_1	IF_2
0x400584d	      0xe9f5010000	                           jmp 0x4005a47	      1856	state.c	FUNCTION_38	IF_1	IF_2
0x4005852	        0x837de40a	            cmp dword [rbp - 0x1c], 0xa 	      1858	state.c	FUNCTION_38	SWITCH_1
0x4005856	     0xf87e6010000	                            ja 0x4005a42	      1858	state.c	FUNCTION_38	SWITCH_1
0x400585c	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1858	state.c	FUNCTION_38	SWITCH_1
0x400585f	    0x488b04c50000	                  mov rax, qword [rax*8]	      1858	state.c	FUNCTION_38	SWITCH_1
0x4005867	            0xffe0	                                 jmp rax	      1858	state.c	FUNCTION_38	SWITCH_1
0x4005869	      0xb801000000	                              mov eax, 1	      1863	state.c	FUNCTION_38	SWITCH_1
0x400586e	      0xe9d4010000	                           jmp 0x4005a47	      1863	state.c	FUNCTION_38	SWITCH_1
0x4005873	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1865	state.c	FUNCTION_38	SWITCH_1
0x4005877	            0x8b00	                    mov eax, dword [rax]	      1865	state.c	FUNCTION_38	SWITCH_1
0x4005879	          0x83e001	                              and eax, 1	      1865	state.c	FUNCTION_38	SWITCH_1
0x400587c	            0x89c2	                            mov edx, eax	      1865	state.c	FUNCTION_38	SWITCH_1
0x400587e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1865	state.c	FUNCTION_38	SWITCH_1
0x4005882	          0x83e201	                              and edx, 1	      1865	state.c	FUNCTION_38	SWITCH_1
0x4005885	            0x89d1	                            mov ecx, edx	      1865	state.c	FUNCTION_38	SWITCH_1
0x4005887	          0xc1e105	                              shl ecx, 5	      1865	state.c	FUNCTION_38	SWITCH_1
0x400588a	     0xfb690940000	           movzx edx, byte [rax + 0x94] 	      1865	state.c	FUNCTION_38	SWITCH_1
0x4005891	          0x83e2df	                     and edx, 0xffffffdf	      1865	state.c	FUNCTION_38	SWITCH_1
0x4005894	             0x9ca	                             or edx, ecx	      1865	state.c	FUNCTION_38	SWITCH_1
0x4005896	    0x889094000000	               mov byte [rax + 0x94], dl	      1865	state.c	FUNCTION_38	SWITCH_1
0x400589c	      0xb801000000	                              mov eax, 1	      1866	state.c	FUNCTION_38	SWITCH_1
0x40058a1	      0xe9a1010000	                           jmp 0x4005a47	      1866	state.c	FUNCTION_38	SWITCH_1
0x40058a6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1868	state.c	FUNCTION_38	SWITCH_1
0x40058aa	            0x8b00	                    mov eax, dword [rax]	      1868	state.c	FUNCTION_38	SWITCH_1
0x40058ac	          0x83e001	                              and eax, 1	      1868	state.c	FUNCTION_38	SWITCH_1
0x40058af	            0x89c2	                            mov edx, eax	      1868	state.c	FUNCTION_38	SWITCH_1
0x40058b1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1868	state.c	FUNCTION_38	SWITCH_1
0x40058b5	          0x83e201	                              and edx, 1	      1868	state.c	FUNCTION_38	SWITCH_1
0x40058b8	            0x89d1	                            mov ecx, edx	      1868	state.c	FUNCTION_38	SWITCH_1
0x40058ba	          0xc1e106	                              shl ecx, 6	      1868	state.c	FUNCTION_38	SWITCH_1
0x40058bd	     0xfb690940000	           movzx edx, byte [rax + 0x94] 	      1868	state.c	FUNCTION_38	SWITCH_1
0x40058c4	          0x83e2bf	                     and edx, 0xffffffbf	      1868	state.c	FUNCTION_38	SWITCH_1
0x40058c7	             0x9ca	                             or edx, ecx	      1868	state.c	FUNCTION_38	SWITCH_1
0x40058c9	    0x889094000000	               mov byte [rax + 0x94], dl	      1868	state.c	FUNCTION_38	SWITCH_1
0x40058cf	      0xb801000000	                              mov eax, 1	      1869	state.c	FUNCTION_38	SWITCH_1
0x40058d4	      0xe96e010000	                           jmp 0x4005a47	      1869	state.c	FUNCTION_38	SWITCH_1
0x40058d9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1871	state.c	FUNCTION_38	SWITCH_1
0x40058dd	            0x8b00	                    mov eax, dword [rax]	      1871	state.c	FUNCTION_38	SWITCH_1
0x40058df	          0x83e003	                              and eax, 3	      1871	state.c	FUNCTION_38	SWITCH_1
0x40058e2	            0x89c2	                            mov edx, eax	      1871	state.c	FUNCTION_38	SWITCH_1
0x40058e4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1871	state.c	FUNCTION_38	SWITCH_1
0x40058e8	           0xfb6d2	                           movzx edx, dl	      1871	state.c	FUNCTION_38	SWITCH_1
0x40058eb	          0x83e203	                              and edx, 3	      1871	state.c	FUNCTION_38	SWITCH_1
0x40058ee	            0x89d1	                            mov ecx, edx	      1871	state.c	FUNCTION_38	SWITCH_1
0x40058f0	          0xc1e107	                              shl ecx, 7	      1871	state.c	FUNCTION_38	SWITCH_1
0x40058f3	     0xfb790940000	           movzx edx, word [rax + 0x94] 	      1871	state.c	FUNCTION_38	SWITCH_1
0x40058fa	      0x6681e27ffe	                          and dx, 0xfe7f	      1871	state.c	FUNCTION_38	SWITCH_1
0x40058ff	             0x9ca	                             or edx, ecx	      1871	state.c	FUNCTION_38	SWITCH_1
0x4005901	    0x668990940000	               mov word [rax + 0x94], dx	      1871	state.c	FUNCTION_38	SWITCH_1
0x4005908	      0xb801000000	                              mov eax, 1	      1872	state.c	FUNCTION_38	SWITCH_1
0x400590d	      0xe935010000	                           jmp 0x4005a47	      1872	state.c	FUNCTION_38	SWITCH_1
0x4005912	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1874	state.c	FUNCTION_38	SWITCH_1
0x4005916	            0x8b00	                    mov eax, dword [rax]	      1874	state.c	FUNCTION_38	SWITCH_1
0x4005918	          0x83e001	                              and eax, 1	      1874	state.c	FUNCTION_38	SWITCH_1
0x400591b	            0x89c2	                            mov edx, eax	      1874	state.c	FUNCTION_38	SWITCH_1
0x400591d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1874	state.c	FUNCTION_38	SWITCH_1
0x4005921	          0x83e201	                              and edx, 1	      1874	state.c	FUNCTION_38	SWITCH_1
0x4005924	    0x8d0cd5000000	                        lea ecx, [rdx*8]	      1874	state.c	FUNCTION_38	SWITCH_1
0x400592b	     0xfb690950000	           movzx edx, byte [rax + 0x95] 	      1874	state.c	FUNCTION_38	SWITCH_1
0x4005932	          0x83e2f7	                     and edx, 0xfffffff7	      1874	state.c	FUNCTION_38	SWITCH_1
0x4005935	             0x9ca	                             or edx, ecx	      1874	state.c	FUNCTION_38	SWITCH_1
0x4005937	    0x889095000000	               mov byte [rax + 0x95], dl	      1874	state.c	FUNCTION_38	SWITCH_1
0x400593d	      0xb801000000	                              mov eax, 1	      1875	state.c	FUNCTION_38	SWITCH_1
0x4005942	      0xe900010000	                           jmp 0x4005a47	      1875	state.c	FUNCTION_38	SWITCH_1
0x4005947	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1877	state.c	FUNCTION_38	SWITCH_1
0x400594b	            0x8b00	                    mov eax, dword [rax]	      1877	state.c	FUNCTION_38	SWITCH_1
0x400594d	          0x83e001	                              and eax, 1	      1877	state.c	FUNCTION_38	SWITCH_1
0x4005950	            0x89c2	                            mov edx, eax	      1877	state.c	FUNCTION_38	SWITCH_1
0x4005952	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1877	state.c	FUNCTION_38	SWITCH_1
0x4005956	          0x83e201	                              and edx, 1	      1877	state.c	FUNCTION_38	SWITCH_1
0x4005959	          0x8d0c12	                    lea ecx, [rdx + rdx]	      1877	state.c	FUNCTION_38	SWITCH_1
0x400595c	     0xfb690950000	           movzx edx, byte [rax + 0x95] 	      1877	state.c	FUNCTION_38	SWITCH_1
0x4005963	          0x83e2fd	                     and edx, 0xfffffffd	      1877	state.c	FUNCTION_38	SWITCH_1
0x4005966	             0x9ca	                             or edx, ecx	      1877	state.c	FUNCTION_38	SWITCH_1
0x4005968	    0x889095000000	               mov byte [rax + 0x95], dl	      1877	state.c	FUNCTION_38	SWITCH_1
0x400596e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1878	state.c	FUNCTION_38	SWITCH_1	IF_3
0x4005972	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	      1878	state.c	FUNCTION_38	SWITCH_1	IF_3
0x4005979	          0x83e002	                              and eax, 2	      1878	state.c	FUNCTION_38	SWITCH_1	IF_3
0x400597c	            0x84c0	                             test al, al	      1878	state.c	FUNCTION_38	SWITCH_1	IF_3
0x400597e	            0x7449	                            je 0x40059c9	      1878	state.c	FUNCTION_38	SWITCH_1	IF_3
0x4005980	    0xc745f0000000	               mov dword [rbp - 0x10], 0	      1879	state.c	FUNCTION_38	SWITCH_1	IF_3
0x4005987	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      1879	state.c	FUNCTION_38	SWITCH_1	IF_3
0x400598e	    0xc745f8000000	                  mov dword [rbp - 8], 0	      1879	state.c	FUNCTION_38	SWITCH_1	IF_3
0x4005995	    0xc745fc000000	                  mov dword [rbp - 4], 0	      1879	state.c	FUNCTION_38	SWITCH_1	IF_3
0x400599c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1880	state.c	FUNCTION_38	SWITCH_1	IF_3
0x40059a0	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1880	state.c	FUNCTION_38	SWITCH_1	IF_3
0x40059a3	          0x8945f4	              mov dword [rbp - 0xc], eax	      1880	state.c	FUNCTION_38	SWITCH_1	IF_3
0x40059a6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1881	state.c	FUNCTION_38	SWITCH_1	IF_3
0x40059aa	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1881	state.c	FUNCTION_38	SWITCH_1	IF_3
0x40059ad	          0x8945fc	                mov dword [rbp - 4], eax	      1881	state.c	FUNCTION_38	SWITCH_1	IF_3
0x40059b0	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      1882	state.c	FUNCTION_38	SWITCH_1	IF_3	CALL_1
0x40059b4	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1882	state.c	FUNCTION_38	SWITCH_1	IF_3	CALL_1
0x40059b8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1882	state.c	FUNCTION_38	SWITCH_1	IF_3	CALL_1
0x40059bc	      0xb900000000	                              mov ecx, 0	      1882	state.c	FUNCTION_38	SWITCH_1	IF_3	CALL_1
0x40059c1	          0x4889c7	                            mov rdi, rax	      1882	state.c	FUNCTION_38	SWITCH_1	IF_3	CALL_1
0x40059c4	      0xe828a8ffff	                          call sym.erase	      1882	state.c	FUNCTION_38	SWITCH_1	IF_3	CALL_1
0x40059c9	      0xb801000000	                              mov eax, 1	      1884	state.c	FUNCTION_38	SWITCH_1
0x40059ce	            0xeb77	                           jmp 0x4005a47	      1884	state.c	FUNCTION_38	SWITCH_1
0x40059d0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1886	state.c	FUNCTION_38	SWITCH_1
0x40059d4	    0xc7406c000000	               mov dword [rax + 0x6c], 0	      1886	state.c	FUNCTION_38	SWITCH_1
0x40059db	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1887	state.c	FUNCTION_38	SWITCH_1	IF_4
0x40059df	            0x8b00	                    mov eax, dword [rax]	      1887	state.c	FUNCTION_38	SWITCH_1	IF_4
0x40059e1	            0x85c0	                           test eax, eax	      1887	state.c	FUNCTION_38	SWITCH_1	IF_4
0x40059e3	            0x7413	                            je 0x40059f8	      1887	state.c	FUNCTION_38	SWITCH_1	IF_4
0x40059e5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1888	state.c	FUNCTION_38	SWITCH_1	IF_4
0x40059e9	          0x8b406c	            mov eax, dword [rax + 0x6c] 	      1888	state.c	FUNCTION_38	SWITCH_1	IF_4
0x40059ec	          0x83c801	                               or eax, 1	      1888	state.c	FUNCTION_38	SWITCH_1	IF_4
0x40059ef	            0x89c2	                            mov edx, eax	      1888	state.c	FUNCTION_38	SWITCH_1	IF_4
0x40059f1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1888	state.c	FUNCTION_38	SWITCH_1	IF_4
0x40059f5	          0x89506c	             mov dword [rax + 0x6c], edx	      1888	state.c	FUNCTION_38	SWITCH_1	IF_4
0x40059f8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1889	state.c	FUNCTION_38	SWITCH_1	IF_5
0x40059fc	            0x8b00	                    mov eax, dword [rax]	      1889	state.c	FUNCTION_38	SWITCH_1	IF_5
0x40059fe	          0x83f802	                              cmp eax, 2	      1889	state.c	FUNCTION_38	SWITCH_1	IF_5
0x4005a01	            0x7513	                           jne 0x4005a16	      1889	state.c	FUNCTION_38	SWITCH_1	IF_5
0x4005a03	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1890	state.c	FUNCTION_38	SWITCH_1	IF_5
0x4005a07	          0x8b406c	            mov eax, dword [rax + 0x6c] 	      1890	state.c	FUNCTION_38	SWITCH_1	IF_5
0x4005a0a	          0x83c802	                               or eax, 2	      1890	state.c	FUNCTION_38	SWITCH_1	IF_5
0x4005a0d	            0x89c2	                            mov edx, eax	      1890	state.c	FUNCTION_38	SWITCH_1	IF_5
0x4005a0f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1890	state.c	FUNCTION_38	SWITCH_1	IF_5
0x4005a13	          0x89506c	             mov dword [rax + 0x6c], edx	      1890	state.c	FUNCTION_38	SWITCH_1	IF_5
0x4005a16	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1891	state.c	FUNCTION_38	SWITCH_1	IF_6
0x4005a1a	            0x8b00	                    mov eax, dword [rax]	      1891	state.c	FUNCTION_38	SWITCH_1	IF_6
0x4005a1c	          0x83f803	                              cmp eax, 3	      1891	state.c	FUNCTION_38	SWITCH_1	IF_6
0x4005a1f	            0x7513	                           jne 0x4005a34	      1891	state.c	FUNCTION_38	SWITCH_1	IF_6
0x4005a21	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1892	state.c	FUNCTION_38	SWITCH_1	IF_6
0x4005a25	          0x8b406c	            mov eax, dword [rax + 0x6c] 	      1892	state.c	FUNCTION_38	SWITCH_1	IF_6
0x4005a28	          0x83c804	                               or eax, 4	      1892	state.c	FUNCTION_38	SWITCH_1	IF_6
0x4005a2b	            0x89c2	                            mov edx, eax	      1892	state.c	FUNCTION_38	SWITCH_1	IF_6
0x4005a2d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1892	state.c	FUNCTION_38	SWITCH_1	IF_6
0x4005a31	          0x89506c	             mov dword [rax + 0x6c], edx	      1892	state.c	FUNCTION_38	SWITCH_1	IF_6
0x4005a34	      0xb801000000	                              mov eax, 1	      1893	state.c	FUNCTION_38	SWITCH_1
0x4005a39	            0xeb0c	                           jmp 0x4005a47	      1893	state.c	FUNCTION_38	SWITCH_1
0x4005a3b	      0xb800000000	                              mov eax, 0	      1896	state.c	FUNCTION_38	SWITCH_1
0x4005a40	            0xeb05	                           jmp 0x4005a47	      1896	state.c	FUNCTION_38	SWITCH_1
0x4005a42	      0xb800000000	                              mov eax, 0	      1899	state.c	FUNCTION_38
0x4005a47	              0xc9	                                   leave	      1900	state.c	FUNCTION_38
0x4005a48	              0xc3	                                     ret	      1900	state.c	FUNCTION_38
vterm_state_get_mousestate	functions,0:CALL,0:DO,0:WHILE,0:IF,0:ELSE,0:SWITCH,0:FOR,0	23
0x40056b7	              0x55	                                push rbp	      1806	state.c	FUNCTION_33
0x40056b8	          0x4889e5	                            mov rbp, rsp	      1806	state.c	FUNCTION_33
0x40056bb	        0x48897df8	                mov qword [rbp - 8], rdi	      1806	state.c	FUNCTION_33
0x40056bf	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1806	state.c	FUNCTION_33
0x40056c3	        0x488b45f8	                mov rax, qword [rbp - 8]	      1807	state.c	FUNCTION_33
0x40056c7	          0x8b5060	            mov edx, dword [rax + 0x60] 	      1807	state.c	FUNCTION_33
0x40056ca	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1807	state.c	FUNCTION_33
0x40056ce	          0x895004	                mov dword [rax + 4], edx	      1807	state.c	FUNCTION_33
0x40056d1	        0x488b45f8	                mov rax, qword [rbp - 8]	      1808	state.c	FUNCTION_33
0x40056d5	          0x8b5064	            mov edx, dword [rax + 0x64] 	      1808	state.c	FUNCTION_33
0x40056d8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1808	state.c	FUNCTION_33
0x40056dc	            0x8910	                    mov dword [rax], edx	      1808	state.c	FUNCTION_33
0x40056de	        0x488b45f8	                mov rax, qword [rbp - 8]	      1809	state.c	FUNCTION_33
0x40056e2	          0x8b5068	            mov edx, dword [rax + 0x68] 	      1809	state.c	FUNCTION_33
0x40056e5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1809	state.c	FUNCTION_33
0x40056e9	          0x895008	                mov dword [rax + 8], edx	      1809	state.c	FUNCTION_33
0x40056ec	        0x488b45f8	                mov rax, qword [rbp - 8]	      1810	state.c	FUNCTION_33
0x40056f0	          0x8b506c	            mov edx, dword [rax + 0x6c] 	      1810	state.c	FUNCTION_33
0x40056f3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1810	state.c	FUNCTION_33
0x40056f7	          0x89500c	              mov dword [rax + 0xc], edx	      1810	state.c	FUNCTION_33
0x40056fa	              0x90	                                     nop	      1811	state.c	FUNCTION_33
0x40056fb	              0x5d	                                 pop rbp	      1811	state.c	FUNCTION_33
0x40056fc	              0xc3	                                     ret	      1811	state.c	FUNCTION_33
vterm_state_focus_in	functions,0:CALL,1:DO,0:WHILE,0:IF,1:ELSE,0:SWITCH,0:FOR,0	19
0x4005a49	              0x55	                                push rbp	      1903	state.c	FUNCTION_39
0x4005a4a	          0x4889e5	                            mov rbp, rsp	      1903	state.c	FUNCTION_39
0x4005a4d	        0x4883ec10	                           sub rsp, 0x10	      1903	state.c	FUNCTION_39
0x4005a51	        0x48897df8	                mov qword [rbp - 8], rdi	      1903	state.c	FUNCTION_39
0x4005a55	        0x488b45f8	                mov rax, qword [rbp - 8]	      1904	state.c	FUNCTION_39	IF_1
0x4005a59	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	      1904	state.c	FUNCTION_39	IF_1
0x4005a60	          0x83e040	                           and eax, 0x40	      1904	state.c	FUNCTION_39	IF_1
0x4005a63	            0x84c0	                             test al, al	      1904	state.c	FUNCTION_39	IF_1
0x4005a65	            0x741e	                            je 0x4005a85	      1904	state.c	FUNCTION_39	IF_1
0x4005a67	        0x488b45f8	                mov rax, qword [rbp - 8]	      1905	state.c	FUNCTION_39	CALL_1
0x4005a6b	          0x488b00	                    mov rax, qword [rax]	      1905	state.c	FUNCTION_39	CALL_1
0x4005a6e	      0xba00000000	                              mov edx, 0	      1905	state.c	FUNCTION_39	CALL_1
0x4005a73	      0xbe9b000000	                           mov esi, 0x9b	      1905	state.c	FUNCTION_39	CALL_1
0x4005a78	          0x4889c7	                            mov rdi, rax	      1905	state.c	FUNCTION_39	CALL_1
0x4005a7b	      0xb800000000	                              mov eax, 0	      1905	state.c	FUNCTION_39	CALL_1
0x4005a80	      0xe800000000	                          call 0x4005a85	      1905	state.c	FUNCTION_39	CALL_1
0x4005a85	              0x90	                                     nop	      1906	state.c	FUNCTION_39
0x4005a86	              0xc9	                                   leave	      1906	state.c	FUNCTION_39
0x4005a87	              0xc3	                                     ret	      1906	state.c	FUNCTION_39
request_dec_mode	functions,0:CALL,2:DO,0:WHILE,0:IF,0:ELSE,0:SWITCH,1:FOR,0	191
0x4002174	              0x55	                                push rbp	       824	state.c	FUNCTION_24
0x4002175	          0x4889e5	                            mov rbp, rsp	       824	state.c	FUNCTION_24
0x4002178	        0x4883ec20	                           sub rsp, 0x20	       824	state.c	FUNCTION_24
0x400217c	        0x48897de8	             mov qword [rbp - 0x18], rdi	       824	state.c	FUNCTION_24
0x4002180	          0x8975e4	             mov dword [rbp - 0x1c], esi	       824	state.c	FUNCTION_24
0x4002183	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       827	state.c	FUNCTION_24	SWITCH_1
0x4002186	      0x3de8030000	                          cmp eax, 0x3e8	       827	state.c	FUNCTION_24	SWITCH_1
0x400218b	     0xf848d010000	                            je 0x400231e	       827	state.c	FUNCTION_24	SWITCH_1
0x4002191	      0x3de8030000	                          cmp eax, 0x3e8	       827	state.c	FUNCTION_24	SWITCH_1
0x4002196	            0x7f4e	                            jg 0x40021e6	       827	state.c	FUNCTION_24	SWITCH_1
0x4002198	          0x83f807	                              cmp eax, 7	       827	state.c	FUNCTION_24	SWITCH_1
0x400219b	     0xf840d010000	                            je 0x40022ae	       827	state.c	FUNCTION_24	SWITCH_1
0x40021a1	          0x83f807	                              cmp eax, 7	       827	state.c	FUNCTION_24	SWITCH_1
0x40021a4	            0x7f20	                            jg 0x40021c6	       827	state.c	FUNCTION_24	SWITCH_1
0x40021a6	          0x83f805	                              cmp eax, 5	       827	state.c	FUNCTION_24	SWITCH_1
0x40021a9	     0xf84c7000000	                            je 0x4002276	       827	state.c	FUNCTION_24	SWITCH_1
0x40021af	          0x83f805	                              cmp eax, 5	       827	state.c	FUNCTION_24	SWITCH_1
0x40021b2	     0xf8fda000000	                            jg 0x4002292	       827	state.c	FUNCTION_24	SWITCH_1
0x40021b8	          0x83f801	                              cmp eax, 1	       827	state.c	FUNCTION_24	SWITCH_1
0x40021bb	     0xf849a000000	                            je 0x400225b	       827	state.c	FUNCTION_24	SWITCH_1
0x40021c1	      0xe92f020000	                           jmp 0x40023f5	       827	state.c	FUNCTION_24	SWITCH_1
0x40021c6	          0x83f819	                           cmp eax, 0x19	       827	state.c	FUNCTION_24	SWITCH_1
0x40021c9	     0xf8417010000	                            je 0x40022e6	       827	state.c	FUNCTION_24	SWITCH_1
0x40021cf	          0x83f845	                           cmp eax, 0x45	       827	state.c	FUNCTION_24	SWITCH_1
0x40021d2	     0xf842a010000	                            je 0x4002302	       827	state.c	FUNCTION_24	SWITCH_1
0x40021d8	          0x83f80c	                            cmp eax, 0xc	       827	state.c	FUNCTION_24	SWITCH_1
0x40021db	     0xf84e9000000	                            je 0x40022ca	       827	state.c	FUNCTION_24	SWITCH_1
0x40021e1	      0xe90f020000	                           jmp 0x40023f5	       827	state.c	FUNCTION_24	SWITCH_1
0x40021e6	      0x3ded030000	                          cmp eax, 0x3ed	       827	state.c	FUNCTION_24	SWITCH_1
0x40021eb	     0xf8491010000	                            je 0x4002382	       827	state.c	FUNCTION_24	SWITCH_1
0x40021f1	      0x3ded030000	                          cmp eax, 0x3ed	       827	state.c	FUNCTION_24	SWITCH_1
0x40021f6	            0x7f26	                            jg 0x400221e	       827	state.c	FUNCTION_24	SWITCH_1
0x40021f8	      0x3deb030000	                          cmp eax, 0x3eb	       827	state.c	FUNCTION_24	SWITCH_1
0x40021fd	     0xf844b010000	                            je 0x400234e	       827	state.c	FUNCTION_24	SWITCH_1
0x4002203	      0x3deb030000	                          cmp eax, 0x3eb	       827	state.c	FUNCTION_24	SWITCH_1
0x4002208	     0xf8f58010000	                            jg 0x4002366	       827	state.c	FUNCTION_24	SWITCH_1
0x400220e	      0x3dea030000	                          cmp eax, 0x3ea	       827	state.c	FUNCTION_24	SWITCH_1
0x4002213	     0xf841d010000	                            je 0x4002336	       827	state.c	FUNCTION_24	SWITCH_1
0x4002219	      0xe9d7010000	                           jmp 0x40023f5	       827	state.c	FUNCTION_24	SWITCH_1
0x400221e	      0x3df7030000	                          cmp eax, 0x3f7	       827	state.c	FUNCTION_24	SWITCH_1
0x4002223	     0xf8486010000	                            je 0x40023af	       827	state.c	FUNCTION_24	SWITCH_1
0x4002229	      0x3df7030000	                          cmp eax, 0x3f7	       827	state.c	FUNCTION_24	SWITCH_1
0x400222e	            0x7f10	                            jg 0x4002240	       827	state.c	FUNCTION_24	SWITCH_1
0x4002230	      0x3dee030000	                          cmp eax, 0x3ee	       827	state.c	FUNCTION_24	SWITCH_1
0x4002235	     0xf845f010000	                            je 0x400239a	       827	state.c	FUNCTION_24	SWITCH_1
0x400223b	      0xe9b5010000	                           jmp 0x40023f5	       827	state.c	FUNCTION_24	SWITCH_1
0x4002240	      0x3d17040000	                          cmp eax, 0x417	       827	state.c	FUNCTION_24	SWITCH_1
0x4002245	     0xf8479010000	                            je 0x40023c4	       827	state.c	FUNCTION_24	SWITCH_1
0x400224b	      0x3dd4070000	                          cmp eax, 0x7d4	       827	state.c	FUNCTION_24	SWITCH_1
0x4002250	     0xf8486010000	                            je 0x40023dc	       827	state.c	FUNCTION_24	SWITCH_1
0x4002256	      0xe99a010000	                           jmp 0x40023f5	       827	state.c	FUNCTION_24	SWITCH_1
0x400225b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       829	state.c	FUNCTION_24	SWITCH_1
0x400225f	     0xfb680940000	           movzx eax, byte [rax + 0x94] 	       829	state.c	FUNCTION_24	SWITCH_1
0x4002266	            0xd0e8	                               shr al, 1	       829	state.c	FUNCTION_24	SWITCH_1
0x4002268	          0x83e001	                              and eax, 1	       829	state.c	FUNCTION_24	SWITCH_1
0x400226b	           0xfb6c0	                           movzx eax, al	       829	state.c	FUNCTION_24	SWITCH_1
0x400226e	          0x8945fc	                mov dword [rbp - 4], eax	       829	state.c	FUNCTION_24	SWITCH_1
0x4002271	      0xe9aa010000	                           jmp 0x4002420	       830	state.c	FUNCTION_24	SWITCH_1
0x4002276	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       833	state.c	FUNCTION_24	SWITCH_1
0x400227a	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	       833	state.c	FUNCTION_24	SWITCH_1
0x4002281	          0xc0e803	                               shr al, 3	       833	state.c	FUNCTION_24	SWITCH_1
0x4002284	          0x83e001	                              and eax, 1	       833	state.c	FUNCTION_24	SWITCH_1
0x4002287	           0xfb6c0	                           movzx eax, al	       833	state.c	FUNCTION_24	SWITCH_1
0x400228a	          0x8945fc	                mov dword [rbp - 4], eax	       833	state.c	FUNCTION_24	SWITCH_1
0x400228d	      0xe98e010000	                           jmp 0x4002420	       834	state.c	FUNCTION_24	SWITCH_1
0x4002292	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       837	state.c	FUNCTION_24	SWITCH_1
0x4002296	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	       837	state.c	FUNCTION_24	SWITCH_1
0x400229d	          0xc0e802	                               shr al, 2	       837	state.c	FUNCTION_24	SWITCH_1
0x40022a0	          0x83e001	                              and eax, 1	       837	state.c	FUNCTION_24	SWITCH_1
0x40022a3	           0xfb6c0	                           movzx eax, al	       837	state.c	FUNCTION_24	SWITCH_1
0x40022a6	          0x8945fc	                mov dword [rbp - 4], eax	       837	state.c	FUNCTION_24	SWITCH_1
0x40022a9	      0xe972010000	                           jmp 0x4002420	       838	state.c	FUNCTION_24	SWITCH_1
0x40022ae	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       841	state.c	FUNCTION_24	SWITCH_1
0x40022b2	     0xfb680940000	           movzx eax, byte [rax + 0x94] 	       841	state.c	FUNCTION_24	SWITCH_1
0x40022b9	          0xc0e802	                               shr al, 2	       841	state.c	FUNCTION_24	SWITCH_1
0x40022bc	          0x83e001	                              and eax, 1	       841	state.c	FUNCTION_24	SWITCH_1
0x40022bf	           0xfb6c0	                           movzx eax, al	       841	state.c	FUNCTION_24	SWITCH_1
0x40022c2	          0x8945fc	                mov dword [rbp - 4], eax	       841	state.c	FUNCTION_24	SWITCH_1
0x40022c5	      0xe956010000	                           jmp 0x4002420	       842	state.c	FUNCTION_24	SWITCH_1
0x40022ca	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       845	state.c	FUNCTION_24	SWITCH_1
0x40022ce	     0xfb680940000	           movzx eax, byte [rax + 0x94] 	       845	state.c	FUNCTION_24	SWITCH_1
0x40022d5	          0xc0e806	                               shr al, 6	       845	state.c	FUNCTION_24	SWITCH_1
0x40022d8	          0x83e001	                              and eax, 1	       845	state.c	FUNCTION_24	SWITCH_1
0x40022db	           0xfb6c0	                           movzx eax, al	       845	state.c	FUNCTION_24	SWITCH_1
0x40022de	          0x8945fc	                mov dword [rbp - 4], eax	       845	state.c	FUNCTION_24	SWITCH_1
0x40022e1	      0xe93a010000	                           jmp 0x4002420	       846	state.c	FUNCTION_24	SWITCH_1
0x40022e6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       849	state.c	FUNCTION_24	SWITCH_1
0x40022ea	     0xfb680940000	           movzx eax, byte [rax + 0x94] 	       849	state.c	FUNCTION_24	SWITCH_1
0x40022f1	          0xc0e805	                               shr al, 5	       849	state.c	FUNCTION_24	SWITCH_1
0x40022f4	          0x83e001	                              and eax, 1	       849	state.c	FUNCTION_24	SWITCH_1
0x40022f7	           0xfb6c0	                           movzx eax, al	       849	state.c	FUNCTION_24	SWITCH_1
0x40022fa	          0x8945fc	                mov dword [rbp - 4], eax	       849	state.c	FUNCTION_24	SWITCH_1
0x40022fd	      0xe91e010000	                           jmp 0x4002420	       850	state.c	FUNCTION_24	SWITCH_1
0x4002302	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       853	state.c	FUNCTION_24	SWITCH_1
0x4002306	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	       853	state.c	FUNCTION_24	SWITCH_1
0x400230d	          0xc0e804	                               shr al, 4	       853	state.c	FUNCTION_24	SWITCH_1
0x4002310	          0x83e001	                              and eax, 1	       853	state.c	FUNCTION_24	SWITCH_1
0x4002313	           0xfb6c0	                           movzx eax, al	       853	state.c	FUNCTION_24	SWITCH_1
0x4002316	          0x8945fc	                mov dword [rbp - 4], eax	       853	state.c	FUNCTION_24	SWITCH_1
0x4002319	      0xe902010000	                           jmp 0x4002420	       854	state.c	FUNCTION_24	SWITCH_1
0x400231e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       857	state.c	FUNCTION_24	SWITCH_1
0x4002322	          0x8b406c	            mov eax, dword [rax + 0x6c] 	       857	state.c	FUNCTION_24	SWITCH_1
0x4002325	          0x83f801	                              cmp eax, 1	       857	state.c	FUNCTION_24	SWITCH_1
0x4002328	           0xf94c0	                                 sete al	       857	state.c	FUNCTION_24	SWITCH_1
0x400232b	           0xfb6c0	                           movzx eax, al	       857	state.c	FUNCTION_24	SWITCH_1
0x400232e	          0x8945fc	                mov dword [rbp - 4], eax	       857	state.c	FUNCTION_24	SWITCH_1
0x4002331	      0xe9ea000000	                           jmp 0x4002420	       858	state.c	FUNCTION_24	SWITCH_1
0x4002336	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       861	state.c	FUNCTION_24	SWITCH_1
0x400233a	          0x8b406c	            mov eax, dword [rax + 0x6c] 	       861	state.c	FUNCTION_24	SWITCH_1
0x400233d	          0x83f803	                              cmp eax, 3	       861	state.c	FUNCTION_24	SWITCH_1
0x4002340	           0xf94c0	                                 sete al	       861	state.c	FUNCTION_24	SWITCH_1
0x4002343	           0xfb6c0	                           movzx eax, al	       861	state.c	FUNCTION_24	SWITCH_1
0x4002346	          0x8945fc	                mov dword [rbp - 4], eax	       861	state.c	FUNCTION_24	SWITCH_1
0x4002349	      0xe9d2000000	                           jmp 0x4002420	       862	state.c	FUNCTION_24	SWITCH_1
0x400234e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       865	state.c	FUNCTION_24	SWITCH_1
0x4002352	          0x8b406c	            mov eax, dword [rax + 0x6c] 	       865	state.c	FUNCTION_24	SWITCH_1
0x4002355	          0x83f805	                              cmp eax, 5	       865	state.c	FUNCTION_24	SWITCH_1
0x4002358	           0xf94c0	                                 sete al	       865	state.c	FUNCTION_24	SWITCH_1
0x400235b	           0xfb6c0	                           movzx eax, al	       865	state.c	FUNCTION_24	SWITCH_1
0x400235e	          0x8945fc	                mov dword [rbp - 4], eax	       865	state.c	FUNCTION_24	SWITCH_1
0x4002361	      0xe9ba000000	                           jmp 0x4002420	       866	state.c	FUNCTION_24	SWITCH_1
0x4002366	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       869	state.c	FUNCTION_24	SWITCH_1
0x400236a	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	       869	state.c	FUNCTION_24	SWITCH_1
0x4002371	          0xc0e806	                               shr al, 6	       869	state.c	FUNCTION_24	SWITCH_1
0x4002374	          0x83e001	                              and eax, 1	       869	state.c	FUNCTION_24	SWITCH_1
0x4002377	           0xfb6c0	                           movzx eax, al	       869	state.c	FUNCTION_24	SWITCH_1
0x400237a	          0x8945fc	                mov dword [rbp - 4], eax	       869	state.c	FUNCTION_24	SWITCH_1
0x400237d	      0xe99e000000	                           jmp 0x4002420	       870	state.c	FUNCTION_24	SWITCH_1
0x4002382	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       873	state.c	FUNCTION_24	SWITCH_1
0x4002386	          0x8b4070	            mov eax, dword [rax + 0x70] 	       873	state.c	FUNCTION_24	SWITCH_1
0x4002389	          0x83f801	                              cmp eax, 1	       873	state.c	FUNCTION_24	SWITCH_1
0x400238c	           0xf94c0	                                 sete al	       873	state.c	FUNCTION_24	SWITCH_1
0x400238f	           0xfb6c0	                           movzx eax, al	       873	state.c	FUNCTION_24	SWITCH_1
0x4002392	          0x8945fc	                mov dword [rbp - 4], eax	       873	state.c	FUNCTION_24	SWITCH_1
0x4002395	      0xe986000000	                           jmp 0x4002420	       874	state.c	FUNCTION_24	SWITCH_1
0x400239a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       877	state.c	FUNCTION_24	SWITCH_1
0x400239e	          0x8b4070	            mov eax, dword [rax + 0x70] 	       877	state.c	FUNCTION_24	SWITCH_1
0x40023a1	          0x83f802	                              cmp eax, 2	       877	state.c	FUNCTION_24	SWITCH_1
0x40023a4	           0xf94c0	                                 sete al	       877	state.c	FUNCTION_24	SWITCH_1
0x40023a7	           0xfb6c0	                           movzx eax, al	       877	state.c	FUNCTION_24	SWITCH_1
0x40023aa	          0x8945fc	                mov dword [rbp - 4], eax	       877	state.c	FUNCTION_24	SWITCH_1
0x40023ad	            0xeb71	                           jmp 0x4002420	       878	state.c	FUNCTION_24	SWITCH_1
0x40023af	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       881	state.c	FUNCTION_24	SWITCH_1
0x40023b3	          0x8b4070	            mov eax, dword [rax + 0x70] 	       881	state.c	FUNCTION_24	SWITCH_1
0x40023b6	          0x83f803	                              cmp eax, 3	       881	state.c	FUNCTION_24	SWITCH_1
0x40023b9	           0xf94c0	                                 sete al	       881	state.c	FUNCTION_24	SWITCH_1
0x40023bc	           0xfb6c0	                           movzx eax, al	       881	state.c	FUNCTION_24	SWITCH_1
0x40023bf	          0x8945fc	                mov dword [rbp - 4], eax	       881	state.c	FUNCTION_24	SWITCH_1
0x40023c2	            0xeb5c	                           jmp 0x4002420	       882	state.c	FUNCTION_24	SWITCH_1
0x40023c4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       885	state.c	FUNCTION_24	SWITCH_1
0x40023c8	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	       885	state.c	FUNCTION_24	SWITCH_1
0x40023cf	            0xd0e8	                               shr al, 1	       885	state.c	FUNCTION_24	SWITCH_1
0x40023d1	          0x83e001	                              and eax, 1	       885	state.c	FUNCTION_24	SWITCH_1
0x40023d4	           0xfb6c0	                           movzx eax, al	       885	state.c	FUNCTION_24	SWITCH_1
0x40023d7	          0x8945fc	                mov dword [rbp - 4], eax	       885	state.c	FUNCTION_24	SWITCH_1
0x40023da	            0xeb44	                           jmp 0x4002420	       886	state.c	FUNCTION_24	SWITCH_1
0x40023dc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       889	state.c	FUNCTION_24	SWITCH_1
0x40023e0	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	       889	state.c	FUNCTION_24	SWITCH_1
0x40023e7	          0xc0e805	                               shr al, 5	       889	state.c	FUNCTION_24	SWITCH_1
0x40023ea	          0x83e001	                              and eax, 1	       889	state.c	FUNCTION_24	SWITCH_1
0x40023ed	           0xfb6c0	                           movzx eax, al	       889	state.c	FUNCTION_24	SWITCH_1
0x40023f0	          0x8945fc	                mov dword [rbp - 4], eax	       889	state.c	FUNCTION_24	SWITCH_1
0x40023f3	            0xeb2b	                           jmp 0x4002420	       890	state.c	FUNCTION_24	SWITCH_1
0x40023f5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       893	state.c	FUNCTION_24	SWITCH_1	CALL_1
0x40023f9	          0x488b00	                    mov rax, qword [rax]	       893	state.c	FUNCTION_24	SWITCH_1	CALL_1
0x40023fc	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       893	state.c	FUNCTION_24	SWITCH_1	CALL_1
0x40023ff	    0x41b800000000	                              mov r8d, 0	       893	state.c	FUNCTION_24	SWITCH_1	CALL_1
0x4002405	            0x89d1	                            mov ecx, edx	       893	state.c	FUNCTION_24	SWITCH_1	CALL_1
0x4002407	      0xba00000000	                              mov edx, 0	       893	state.c	FUNCTION_24	SWITCH_1	CALL_1
0x400240c	      0xbe9b000000	                           mov esi, 0x9b	       893	state.c	FUNCTION_24	SWITCH_1	CALL_1
0x4002411	          0x4889c7	                            mov rdi, rax	       893	state.c	FUNCTION_24	SWITCH_1	CALL_1
0x4002414	      0xb800000000	                              mov eax, 0	       893	state.c	FUNCTION_24	SWITCH_1	CALL_1
0x4002419	      0xe800000000	                          call 0x400241e	       893	state.c	FUNCTION_24	SWITCH_1	CALL_1
0x400241e	            0xeb38	                           jmp 0x4002458	       894	state.c	FUNCTION_24	SWITCH_1
0x4002420	        0x837dfc00	                  cmp dword [rbp - 4], 0	       897	state.c	FUNCTION_24	CALL_2
0x4002424	            0x7407	                            je 0x400242d	       897	state.c	FUNCTION_24	CALL_2
0x4002426	      0xb901000000	                              mov ecx, 1	       897	state.c	FUNCTION_24	CALL_2
0x400242b	            0xeb05	                           jmp 0x4002432	       897	state.c	FUNCTION_24	CALL_2
0x400242d	      0xb902000000	                              mov ecx, 2	       897	state.c	FUNCTION_24	CALL_2
0x4002432	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       897	state.c	FUNCTION_24	CALL_2
0x4002436	          0x488b00	                    mov rax, qword [rax]	       897	state.c	FUNCTION_24	CALL_2
0x4002439	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       897	state.c	FUNCTION_24	CALL_2
0x400243c	          0x4189c8	                            mov r8d, ecx	       897	state.c	FUNCTION_24	CALL_2
0x400243f	            0x89d1	                            mov ecx, edx	       897	state.c	FUNCTION_24	CALL_2
0x4002441	      0xba00000000	                              mov edx, 0	       897	state.c	FUNCTION_24	CALL_2
0x4002446	      0xbe9b000000	                           mov esi, 0x9b	       897	state.c	FUNCTION_24	CALL_2
0x400244b	          0x4889c7	                            mov rdi, rax	       897	state.c	FUNCTION_24	CALL_2
0x400244e	      0xb800000000	                              mov eax, 0	       897	state.c	FUNCTION_24	CALL_2
0x4002453	      0xe800000000	                          call 0x4002458	       897	state.c	FUNCTION_24	CALL_2
0x4002458	              0xc9	                                   leave	       898	state.c	FUNCTION_24
0x4002459	              0xc3	                                     ret	       898	state.c	FUNCTION_24
is_col_tabstop	functions,0:CALL,0:DO,0:WHILE,0:IF,0:ELSE,0:SWITCH,0:FOR,0	22
0x40007d0	              0x55	                                push rbp	       168	state.c	FUNCTION_11
0x40007d1	          0x4889e5	                            mov rbp, rsp	       168	state.c	FUNCTION_11
0x40007d4	        0x48897de8	             mov qword [rbp - 0x18], rdi	       168	state.c	FUNCTION_11
0x40007d8	          0x8975e4	             mov dword [rbp - 0x1c], esi	       168	state.c	FUNCTION_11
0x40007db	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       169	state.c	FUNCTION_11
0x40007de	          0x83e007	                              and eax, 7	       169	state.c	FUNCTION_11
0x40007e1	      0xba01000000	                              mov edx, 1	       169	state.c	FUNCTION_11
0x40007e6	            0x89c1	                            mov ecx, eax	       169	state.c	FUNCTION_11
0x40007e8	            0xd3e2	                             shl edx, cl	       169	state.c	FUNCTION_11
0x40007ea	            0x89d0	                            mov eax, edx	       169	state.c	FUNCTION_11
0x40007ec	          0x8845ff	                  mov byte [rbp - 1], al	       169	state.c	FUNCTION_11
0x40007ef	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       170	state.c	FUNCTION_11
0x40007f3	        0x488b5050	            mov rdx, qword [rax + 0x50] 	       170	state.c	FUNCTION_11
0x40007f7	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       170	state.c	FUNCTION_11
0x40007fa	          0xc1f803	                              sar eax, 3	       170	state.c	FUNCTION_11
0x40007fd	            0x4898	                                    cdqe	       170	state.c	FUNCTION_11
0x40007ff	          0x4801d0	                            add rax, rdx	       170	state.c	FUNCTION_11
0x4000802	           0xfb600	                   movzx eax, byte [rax]	       170	state.c	FUNCTION_11
0x4000805	          0x2245ff	                  and al, byte [rbp - 1]	       170	state.c	FUNCTION_11
0x4000808	           0xfb6c0	                           movzx eax, al	       170	state.c	FUNCTION_11
0x400080b	              0x5d	                                 pop rbp	       171	state.c	FUNCTION_11
0x400080c	              0xc3	                                     ret	       171	state.c	FUNCTION_11
savecursor	functions,0:CALL,6:DO,0:WHILE,0:IF,1:ELSE,1:SWITCH,0:FOR,0	103
0x400165c	              0x55	                                push rbp	       546	state.c	FUNCTION_20
0x400165d	          0x4889e5	                            mov rbp, rsp	       546	state.c	FUNCTION_20
0x4001660	        0x4883ec20	                           sub rsp, 0x20	       546	state.c	FUNCTION_20
0x4001664	        0x48897de8	             mov qword [rbp - 0x18], rdi	       546	state.c	FUNCTION_20
0x4001668	          0x8975e4	             mov dword [rbp - 0x1c], esi	       546	state.c	FUNCTION_20
0x400166b	    0x64488b042528	                mov rax, qword fs:[0x28]	       546	state.c	FUNCTION_20
0x4001674	        0x488945f8	                mov qword [rbp - 8], rax	       546	state.c	FUNCTION_20
0x4001678	            0x31c0	                            xor eax, eax	       546	state.c	FUNCTION_20
0x400167a	        0x837de400	               cmp dword [rbp - 0x1c], 0	       547	state.c	FUNCTION_20	IF_1
0x400167e	     0xf84b6000000	                            je 0x400173a	       547	state.c	FUNCTION_20	IF_1
0x4001684	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       548	state.c	FUNCTION_20	IF_1
0x4001688	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       548	state.c	FUNCTION_20	IF_1
0x400168c	        0x488b5230	            mov rdx, qword [rdx + 0x30] 	       548	state.c	FUNCTION_20	IF_1
0x4001690	    0x488990800100	            mov qword [rax + 0x180], rdx	       548	state.c	FUNCTION_20	IF_1
0x4001697	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       549	state.c	FUNCTION_20	IF_1
0x400169b	     0xfb680940000	           movzx eax, byte [rax + 0x94] 	       549	state.c	FUNCTION_20	IF_1
0x40016a2	          0xc0e805	                               shr al, 5	       549	state.c	FUNCTION_20	IF_1
0x40016a5	          0x83e001	                              and eax, 1	       549	state.c	FUNCTION_20	IF_1
0x40016a8	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       549	state.c	FUNCTION_20	IF_1
0x40016ac	          0x83e001	                              and eax, 1	       549	state.c	FUNCTION_20	IF_1
0x40016af	            0x89c1	                            mov ecx, eax	       549	state.c	FUNCTION_20	IF_1
0x40016b1	     0xfb682940100	          movzx eax, byte [rdx + 0x194] 	       549	state.c	FUNCTION_20	IF_1
0x40016b8	          0x83e0fe	                     and eax, 0xfffffffe	       549	state.c	FUNCTION_20	IF_1
0x40016bb	             0x9c8	                             or eax, ecx	       549	state.c	FUNCTION_20	IF_1
0x40016bd	    0x888294010000	              mov byte [rdx + 0x194], al	       549	state.c	FUNCTION_20	IF_1
0x40016c3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       550	state.c	FUNCTION_20	IF_1
0x40016c7	     0xfb680940000	           movzx eax, byte [rax + 0x94] 	       550	state.c	FUNCTION_20	IF_1
0x40016ce	          0xc0e806	                               shr al, 6	       550	state.c	FUNCTION_20	IF_1
0x40016d1	          0x83e001	                              and eax, 1	       550	state.c	FUNCTION_20	IF_1
0x40016d4	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       550	state.c	FUNCTION_20	IF_1
0x40016d8	          0x83e001	                              and eax, 1	       550	state.c	FUNCTION_20	IF_1
0x40016db	          0x8d0c00	                    lea ecx, [rax + rax]	       550	state.c	FUNCTION_20	IF_1
0x40016de	     0xfb682940100	          movzx eax, byte [rdx + 0x194] 	       550	state.c	FUNCTION_20	IF_1
0x40016e5	          0x83e0fd	                     and eax, 0xfffffffd	       550	state.c	FUNCTION_20	IF_1
0x40016e8	             0x9c8	                             or eax, ecx	       550	state.c	FUNCTION_20	IF_1
0x40016ea	    0x888294010000	              mov byte [rdx + 0x194], al	       550	state.c	FUNCTION_20	IF_1
0x40016f0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       551	state.c	FUNCTION_20	IF_1
0x40016f4	     0xfb780940000	           movzx eax, word [rax + 0x94] 	       551	state.c	FUNCTION_20	IF_1
0x40016fb	        0x66c1e807	                               shr ax, 7	       551	state.c	FUNCTION_20	IF_1
0x40016ff	            0x89c2	                            mov edx, eax	       551	state.c	FUNCTION_20	IF_1
0x4001701	          0x83e203	                              and edx, 3	       551	state.c	FUNCTION_20	IF_1
0x4001704	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       551	state.c	FUNCTION_20	IF_1
0x4001708	          0x83e203	                              and edx, 3	       551	state.c	FUNCTION_20	IF_1
0x400170b	    0x8d0c95000000	                        lea ecx, [rdx*4]	       551	state.c	FUNCTION_20	IF_1
0x4001712	     0xfb690940100	          movzx edx, byte [rax + 0x194] 	       551	state.c	FUNCTION_20	IF_1
0x4001719	          0x83e2f3	                     and edx, 0xfffffff3	       551	state.c	FUNCTION_20	IF_1
0x400171c	             0x9ca	                             or edx, ecx	       551	state.c	FUNCTION_20	IF_1
0x400171e	    0x889094010000	              mov byte [rax + 0x194], dl	       551	state.c	FUNCTION_20	IF_1
0x4001724	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       553	state.c	FUNCTION_20	IF_1	CALL_1
0x4001728	      0xbe01000000	                              mov esi, 1	       553	state.c	FUNCTION_20	IF_1	CALL_1
0x400172d	          0x4889c7	                            mov rdi, rax	       553	state.c	FUNCTION_20	IF_1	CALL_1
0x4001730	      0xe800000000	                          call 0x4001735	       553	state.c	FUNCTION_20	IF_1	CALL_1
0x4001735	      0xe9b3000000	                           jmp 0x40017ed	       568	state.c	FUNCTION_20
0x400173a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       556	state.c	FUNCTION_20	ELSE_1
0x400173e	        0x488b4030	            mov rax, qword [rax + 0x30] 	       556	state.c	FUNCTION_20	ELSE_1
0x4001742	        0x488945f0	             mov qword [rbp - 0x10], rax	       556	state.c	FUNCTION_20	ELSE_1
0x4001746	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       558	state.c	FUNCTION_20	ELSE_1
0x400174a	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       558	state.c	FUNCTION_20	ELSE_1
0x400174e	    0x488b92800100	           mov rdx, qword [rdx + 0x180] 	       558	state.c	FUNCTION_20	ELSE_1
0x4001755	        0x48895030	             mov qword [rax + 0x30], rdx	       558	state.c	FUNCTION_20	ELSE_1
0x4001759	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       560	state.c	FUNCTION_20	ELSE_1	CALL_2
0x400175d	     0xfb680940100	          movzx eax, byte [rax + 0x194] 	       560	state.c	FUNCTION_20	ELSE_1	CALL_2
0x4001764	          0x83e001	                              and eax, 1	       560	state.c	FUNCTION_20	ELSE_1	CALL_2
0x4001767	           0xfb6d0	                           movzx edx, al	       560	state.c	FUNCTION_20	ELSE_1	CALL_2
0x400176a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       560	state.c	FUNCTION_20	ELSE_1	CALL_2
0x400176e	      0xbe01000000	                              mov esi, 1	       560	state.c	FUNCTION_20	ELSE_1	CALL_2
0x4001773	          0x4889c7	                            mov rdi, rax	       560	state.c	FUNCTION_20	ELSE_1	CALL_2
0x4001776	      0xe885fdffff	               call sym.settermprop_bool	       560	state.c	FUNCTION_20	ELSE_1	CALL_2
0x400177b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       561	state.c	FUNCTION_20	ELSE_1	CALL_3
0x400177f	     0xfb680940100	          movzx eax, byte [rax + 0x194] 	       561	state.c	FUNCTION_20	ELSE_1	CALL_3
0x4001786	            0xd0e8	                               shr al, 1	       561	state.c	FUNCTION_20	ELSE_1	CALL_3
0x4001788	          0x83e001	                              and eax, 1	       561	state.c	FUNCTION_20	ELSE_1	CALL_3
0x400178b	           0xfb6d0	                           movzx edx, al	       561	state.c	FUNCTION_20	ELSE_1	CALL_3
0x400178e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       561	state.c	FUNCTION_20	ELSE_1	CALL_3
0x4001792	      0xbe02000000	                              mov esi, 2	       561	state.c	FUNCTION_20	ELSE_1	CALL_3
0x4001797	          0x4889c7	                            mov rdi, rax	       561	state.c	FUNCTION_20	ELSE_1	CALL_3
0x400179a	      0xe861fdffff	               call sym.settermprop_bool	       561	state.c	FUNCTION_20	ELSE_1	CALL_3
0x400179f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       562	state.c	FUNCTION_20	ELSE_1	CALL_4
0x40017a3	     0xfb680940100	          movzx eax, byte [rax + 0x194] 	       562	state.c	FUNCTION_20	ELSE_1	CALL_4
0x40017aa	          0xc0e802	                               shr al, 2	       562	state.c	FUNCTION_20	ELSE_1	CALL_4
0x40017ad	          0x83e003	                              and eax, 3	       562	state.c	FUNCTION_20	ELSE_1	CALL_4
0x40017b0	           0xfb6d0	                           movzx edx, al	       562	state.c	FUNCTION_20	ELSE_1	CALL_4
0x40017b3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       562	state.c	FUNCTION_20	ELSE_1	CALL_4
0x40017b7	      0xbe07000000	                              mov esi, 7	       562	state.c	FUNCTION_20	ELSE_1	CALL_4
0x40017bc	          0x4889c7	                            mov rdi, rax	       562	state.c	FUNCTION_20	ELSE_1	CALL_4
0x40017bf	      0xe88efdffff	                call sym.settermprop_int	       562	state.c	FUNCTION_20	ELSE_1	CALL_4
0x40017c4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       564	state.c	FUNCTION_20	ELSE_1	CALL_5
0x40017c8	      0xbe00000000	                              mov esi, 0	       564	state.c	FUNCTION_20	ELSE_1	CALL_5
0x40017cd	          0x4889c7	                            mov rdi, rax	       564	state.c	FUNCTION_20	ELSE_1	CALL_5
0x40017d0	      0xe800000000	                          call 0x40017d5	       564	state.c	FUNCTION_20	ELSE_1	CALL_5
0x40017d5	        0x488d4df0	                   lea rcx, [rbp - 0x10]	       566	state.c	FUNCTION_20	ELSE_1	CALL_6
0x40017d9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       566	state.c	FUNCTION_20	ELSE_1	CALL_6
0x40017dd	      0xba01000000	                              mov edx, 1	       566	state.c	FUNCTION_20	ELSE_1	CALL_6
0x40017e2	          0x4889ce	                            mov rsi, rcx	       566	state.c	FUNCTION_20	ELSE_1	CALL_6
0x40017e5	          0x4889c7	                            mov rdi, rax	       566	state.c	FUNCTION_20	ELSE_1	CALL_6
0x40017e8	      0xe85be9ffff	                   call sym.updatecursor	       566	state.c	FUNCTION_20	ELSE_1	CALL_6
0x40017ed	              0x90	                                     nop	       568	state.c	FUNCTION_20
0x40017ee	        0x488b45f8	                mov rax, qword [rbp - 8]	       568	state.c	FUNCTION_20
0x40017f2	    0x644833042528	                xor rax, qword fs:[0x28]	       568	state.c	FUNCTION_20
0x40017fb	            0x7405	                            je 0x4001802	       568	state.c	FUNCTION_20
0x40017fd	      0xe800000000	                          call 0x4001802	       568	state.c	FUNCTION_20
0x4001802	              0xc9	                                   leave	       568	state.c	FUNCTION_20
0x4001803	              0xc3	                                     ret	       568	state.c	FUNCTION_20
vterm_state_set_callbacks	functions,0:CALL,0:DO,0:WHILE,0:IF,2:ELSE,1:SWITCH,0:FOR,0	38
0x40056fd	              0x55	                                push rbp	      1814	state.c	FUNCTION_34
0x40056fe	          0x4889e5	                            mov rbp, rsp	      1814	state.c	FUNCTION_34
0x4005701	        0x4883ec20	                           sub rsp, 0x20	      1814	state.c	FUNCTION_34
0x4005705	        0x48897df8	                mov qword [rbp - 8], rdi	      1814	state.c	FUNCTION_34
0x4005709	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1814	state.c	FUNCTION_34
0x400570d	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1814	state.c	FUNCTION_34
0x4005711	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1815	state.c	FUNCTION_34	IF_1
0x4005716	            0x7451	                            je 0x4005769	      1815	state.c	FUNCTION_34	IF_1
0x4005718	        0x488b45f8	                mov rax, qword [rbp - 8]	      1816	state.c	FUNCTION_34	IF_1
0x400571c	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1816	state.c	FUNCTION_34	IF_1
0x4005720	        0x48895008	                mov qword [rax + 8], rdx	      1816	state.c	FUNCTION_34	IF_1
0x4005724	        0x488b45f8	                mov rax, qword [rbp - 8]	      1817	state.c	FUNCTION_34	IF_1
0x4005728	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1817	state.c	FUNCTION_34	IF_1
0x400572c	        0x48895010	             mov qword [rax + 0x10], rdx	      1817	state.c	FUNCTION_34	IF_1
0x4005730	        0x488b45f8	                mov rax, qword [rbp - 8]	      1819	state.c	FUNCTION_34	IF_1	IF_2
0x4005734	        0x488b4008	                mov rax, qword [rax + 8]	      1819	state.c	FUNCTION_34	IF_1	IF_2
0x4005738	          0x4885c0	                           test rax, rax	      1819	state.c	FUNCTION_34	IF_1	IF_2
0x400573b	            0x7444	                            je 0x4005781	      1819	state.c	FUNCTION_34	IF_1	IF_2
0x400573d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1819	state.c	FUNCTION_34	IF_1	IF_2
0x4005741	        0x488b4008	                mov rax, qword [rax + 8]	      1819	state.c	FUNCTION_34	IF_1	IF_2
0x4005745	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1819	state.c	FUNCTION_34	IF_1	IF_2
0x4005749	          0x4885c0	                           test rax, rax	      1819	state.c	FUNCTION_34	IF_1	IF_2
0x400574c	            0x7433	                            je 0x4005781	      1819	state.c	FUNCTION_34	IF_1	IF_2
0x400574e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1820	state.c	FUNCTION_34	IF_1	IF_2
0x4005752	        0x488b4008	                mov rax, qword [rax + 8]	      1820	state.c	FUNCTION_34	IF_1	IF_2
0x4005756	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1820	state.c	FUNCTION_34	IF_1	IF_2
0x400575a	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1820	state.c	FUNCTION_34	IF_1	IF_2
0x400575e	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      1820	state.c	FUNCTION_34	IF_1	IF_2
0x4005762	          0x4889d7	                            mov rdi, rdx	      1820	state.c	FUNCTION_34	IF_1	IF_2
0x4005765	            0xffd0	                                call rax	      1820	state.c	FUNCTION_34	IF_1	IF_2
0x4005767	            0xeb18	                           jmp 0x4005781	      1826	state.c	FUNCTION_34
0x4005769	        0x488b45f8	                mov rax, qword [rbp - 8]	      1823	state.c	FUNCTION_34	ELSE_1
0x400576d	    0x48c740080000	                  mov qword [rax + 8], 0	      1823	state.c	FUNCTION_34	ELSE_1
0x4005775	        0x488b45f8	                mov rax, qword [rbp - 8]	      1824	state.c	FUNCTION_34	ELSE_1
0x4005779	    0x48c740100000	               mov qword [rax + 0x10], 0	      1824	state.c	FUNCTION_34	ELSE_1
0x4005781	              0x90	                                     nop	      1826	state.c	FUNCTION_34
0x4005782	              0xc9	                                   leave	      1826	state.c	FUNCTION_34
0x4005783	              0xc3	                                     ret	      1826	state.c	FUNCTION_34
on_osc	functions,0:CALL,7:DO,0:WHILE,0:IF,9:ELSE,6:SWITCH,0:FOR,0	197
0x4004628	              0x55	                                push rbp	      1498	state.c	FUNCTION_26
0x4004629	          0x4889e5	                            mov rbp, rsp	      1498	state.c	FUNCTION_26
0x400462c	        0x4883ec40	                           sub rsp, 0x40	      1498	state.c	FUNCTION_26
0x4004630	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1498	state.c	FUNCTION_26
0x4004634	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1498	state.c	FUNCTION_26
0x4004638	        0x488955c8	             mov qword [rbp - 0x38], rdx	      1498	state.c	FUNCTION_26
0x400463c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1499	state.c	FUNCTION_26
0x4004640	        0x488945f8	                mov qword [rbp - 8], rax	      1499	state.c	FUNCTION_26
0x4004644	      0x48837dd001	               cmp qword [rbp - 0x30], 1	      1501	state.c	FUNCTION_26	IF_1
0x4004649	            0x770a	                            ja 0x4004655	      1501	state.c	FUNCTION_26	IF_1
0x400464b	      0xb800000000	                              mov eax, 0	      1502	state.c	FUNCTION_26	IF_1
0x4004650	      0xe9bd020000	                           jmp 0x4004912	      1502	state.c	FUNCTION_26	IF_1
0x4004655	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1504	state.c	FUNCTION_26	IF_2
0x4004659	      0xba02000000	                              mov edx, 2	      1504	state.c	FUNCTION_26	IF_2
0x400465e	      0xbe00000000	                              mov esi, 0	      1504	state.c	FUNCTION_26	IF_2
0x4004663	          0x4889c7	                            mov rdi, rax	      1504	state.c	FUNCTION_26	IF_2
0x4004666	      0xe800000000	                          call 0x400466b	      1504	state.c	FUNCTION_26	IF_2
0x400466b	            0x85c0	                           test eax, eax	      1504	state.c	FUNCTION_26	IF_2
0x400466d	            0x754c	                           jne 0x40046bb	      1504	state.c	FUNCTION_26	IF_2
0x400466f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1505	state.c	FUNCTION_26	IF_2	CALL_1
0x4004673	        0x488d48fe	                      lea rcx, [rax - 2]	      1505	state.c	FUNCTION_26	IF_2	CALL_1
0x4004677	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1505	state.c	FUNCTION_26	IF_2	CALL_1
0x400467b	        0x488d5002	                      lea rdx, [rax + 2]	      1505	state.c	FUNCTION_26	IF_2	CALL_1
0x400467f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1505	state.c	FUNCTION_26	IF_2	CALL_1
0x4004683	      0xbe05000000	                              mov esi, 5	      1505	state.c	FUNCTION_26	IF_2	CALL_1
0x4004688	          0x4889c7	                            mov rdi, rax	      1505	state.c	FUNCTION_26	IF_2	CALL_1
0x400468b	      0xe814cfffff	             call sym.settermprop_string	      1505	state.c	FUNCTION_26	IF_2	CALL_1
0x4004690	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1506	state.c	FUNCTION_26	IF_2	CALL_2
0x4004694	        0x488d48fe	                      lea rcx, [rax - 2]	      1506	state.c	FUNCTION_26	IF_2	CALL_2
0x4004698	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1506	state.c	FUNCTION_26	IF_2	CALL_2
0x400469c	        0x488d5002	                      lea rdx, [rax + 2]	      1506	state.c	FUNCTION_26	IF_2	CALL_2
0x40046a0	        0x488b45f8	                mov rax, qword [rbp - 8]	      1506	state.c	FUNCTION_26	IF_2	CALL_2
0x40046a4	      0xbe04000000	                              mov esi, 4	      1506	state.c	FUNCTION_26	IF_2	CALL_2
0x40046a9	          0x4889c7	                            mov rdi, rax	      1506	state.c	FUNCTION_26	IF_2	CALL_2
0x40046ac	      0xe8f3ceffff	             call sym.settermprop_string	      1506	state.c	FUNCTION_26	IF_2	CALL_2
0x40046b1	      0xb801000000	                              mov eax, 1	      1507	state.c	FUNCTION_26	IF_2
0x40046b6	      0xe957020000	                           jmp 0x4004912	      1507	state.c	FUNCTION_26	IF_2
0x40046bb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1509	state.c	FUNCTION_26	ELSE_1	IF_3
0x40046bf	      0xba02000000	                              mov edx, 2	      1509	state.c	FUNCTION_26	ELSE_1	IF_3
0x40046c4	      0xbe00000000	                              mov esi, 0	      1509	state.c	FUNCTION_26	ELSE_1	IF_3
0x40046c9	          0x4889c7	                            mov rdi, rax	      1509	state.c	FUNCTION_26	ELSE_1	IF_3
0x40046cc	      0xe800000000	                          call 0x40046d1	      1509	state.c	FUNCTION_26	ELSE_1	IF_3
0x40046d1	            0x85c0	                           test eax, eax	      1509	state.c	FUNCTION_26	ELSE_1	IF_3
0x40046d3	            0x752b	                           jne 0x4004700	      1509	state.c	FUNCTION_26	ELSE_1	IF_3
0x40046d5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1510	state.c	FUNCTION_26	ELSE_1	IF_3	CALL_3
0x40046d9	        0x488d48fe	                      lea rcx, [rax - 2]	      1510	state.c	FUNCTION_26	ELSE_1	IF_3	CALL_3
0x40046dd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1510	state.c	FUNCTION_26	ELSE_1	IF_3	CALL_3
0x40046e1	        0x488d5002	                      lea rdx, [rax + 2]	      1510	state.c	FUNCTION_26	ELSE_1	IF_3	CALL_3
0x40046e5	        0x488b45f8	                mov rax, qword [rbp - 8]	      1510	state.c	FUNCTION_26	ELSE_1	IF_3	CALL_3
0x40046e9	      0xbe05000000	                              mov esi, 5	      1510	state.c	FUNCTION_26	ELSE_1	IF_3	CALL_3
0x40046ee	          0x4889c7	                            mov rdi, rax	      1510	state.c	FUNCTION_26	ELSE_1	IF_3	CALL_3
0x40046f1	      0xe8aeceffff	             call sym.settermprop_string	      1510	state.c	FUNCTION_26	ELSE_1	IF_3	CALL_3
0x40046f6	      0xb801000000	                              mov eax, 1	      1511	state.c	FUNCTION_26	ELSE_1	IF_3
0x40046fb	      0xe912020000	                           jmp 0x4004912	      1511	state.c	FUNCTION_26	ELSE_1	IF_3
0x4004700	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1513	state.c	FUNCTION_26	ELSE_2	IF_4
0x4004704	      0xba02000000	                              mov edx, 2	      1513	state.c	FUNCTION_26	ELSE_2	IF_4
0x4004709	      0xbe00000000	                              mov esi, 0	      1513	state.c	FUNCTION_26	ELSE_2	IF_4
0x400470e	          0x4889c7	                            mov rdi, rax	      1513	state.c	FUNCTION_26	ELSE_2	IF_4
0x4004711	      0xe800000000	                          call 0x4004716	      1513	state.c	FUNCTION_26	ELSE_2	IF_4
0x4004716	            0x85c0	                           test eax, eax	      1513	state.c	FUNCTION_26	ELSE_2	IF_4
0x4004718	            0x752b	                           jne 0x4004745	      1513	state.c	FUNCTION_26	ELSE_2	IF_4
0x400471a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1514	state.c	FUNCTION_26	ELSE_2	IF_4	CALL_4
0x400471e	        0x488d48fe	                      lea rcx, [rax - 2]	      1514	state.c	FUNCTION_26	ELSE_2	IF_4	CALL_4
0x4004722	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1514	state.c	FUNCTION_26	ELSE_2	IF_4	CALL_4
0x4004726	        0x488d5002	                      lea rdx, [rax + 2]	      1514	state.c	FUNCTION_26	ELSE_2	IF_4	CALL_4
0x400472a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1514	state.c	FUNCTION_26	ELSE_2	IF_4	CALL_4
0x400472e	      0xbe04000000	                              mov esi, 4	      1514	state.c	FUNCTION_26	ELSE_2	IF_4	CALL_4
0x4004733	          0x4889c7	                            mov rdi, rax	      1514	state.c	FUNCTION_26	ELSE_2	IF_4	CALL_4
0x4004736	      0xe869ceffff	             call sym.settermprop_string	      1514	state.c	FUNCTION_26	ELSE_2	IF_4	CALL_4
0x400473b	      0xb801000000	                              mov eax, 1	      1515	state.c	FUNCTION_26	ELSE_2	IF_4
0x4004740	      0xe9cd010000	                           jmp 0x4004912	      1515	state.c	FUNCTION_26	ELSE_2	IF_4
0x4004745	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1517	state.c	FUNCTION_26	ELSE_3	IF_5
0x4004749	      0xba03000000	                              mov edx, 3	      1517	state.c	FUNCTION_26	ELSE_3	IF_5
0x400474e	      0xbe00000000	                              mov esi, 0	      1517	state.c	FUNCTION_26	ELSE_3	IF_5
0x4004753	          0x4889c7	                            mov rdi, rax	      1517	state.c	FUNCTION_26	ELSE_3	IF_5
0x4004756	      0xe800000000	                          call 0x400475b	      1517	state.c	FUNCTION_26	ELSE_3	IF_5
0x400475b	            0x85c0	                           test eax, eax	      1517	state.c	FUNCTION_26	ELSE_3	IF_5
0x400475d	     0xf8580000000	                           jne 0x40047e3	      1517	state.c	FUNCTION_26	ELSE_3	IF_5
0x4004763	        0x488b45f8	                mov rax, qword [rbp - 8]	      1519	state.c	FUNCTION_26	ELSE_3	IF_5
0x4004767	     0xfb680280100	          movzx eax, byte [rax + 0x128] 	      1519	state.c	FUNCTION_26	ELSE_3	IF_5
0x400476e	           0xfb6c0	                           movzx eax, al	      1519	state.c	FUNCTION_26	ELSE_3	IF_5
0x4004771	          0x8945e0	             mov dword [rbp - 0x20], eax	      1519	state.c	FUNCTION_26	ELSE_3	IF_5
0x4004774	        0x488b45f8	                mov rax, qword [rbp - 8]	      1520	state.c	FUNCTION_26	ELSE_3	IF_5
0x4004778	     0xfb6802a0100	          movzx eax, byte [rax + 0x12a] 	      1520	state.c	FUNCTION_26	ELSE_3	IF_5
0x400477f	           0xfb6c0	                           movzx eax, al	      1520	state.c	FUNCTION_26	ELSE_3	IF_5
0x4004782	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1520	state.c	FUNCTION_26	ELSE_3	IF_5
0x4004785	        0x488b45f8	                mov rax, qword [rbp - 8]	      1521	state.c	FUNCTION_26	ELSE_3	IF_5
0x4004789	     0xfb680290100	          movzx eax, byte [rax + 0x129] 	      1521	state.c	FUNCTION_26	ELSE_3	IF_5
0x4004790	           0xfb6c0	                           movzx eax, al	      1521	state.c	FUNCTION_26	ELSE_3	IF_5
0x4004793	          0x8945e8	             mov dword [rbp - 0x18], eax	      1521	state.c	FUNCTION_26	ELSE_3	IF_5
0x4004796	        0x488b45f8	                mov rax, qword [rbp - 8]	      1522	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_5
0x400479a	          0x488b00	                    mov rax, qword [rax]	      1522	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_5
0x400479d	          0x8b7de8	             mov edi, dword [rbp - 0x18]	      1522	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_5
0x40047a0	          0x8b75e0	             mov esi, dword [rbp - 0x20]	      1522	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_5
0x40047a3	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      1522	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_5
0x40047a6	        0x4883ec08	                              sub rsp, 8	      1522	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_5
0x40047aa	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	      1522	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_5
0x40047ad	              0x51	                                push rcx	      1522	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_5
0x40047ae	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	      1522	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_5
0x40047b1	              0x51	                                push rcx	      1522	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_5
0x40047b2	          0x8b4de8	             mov ecx, dword [rbp - 0x18]	      1522	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_5
0x40047b5	              0x51	                                push rcx	      1522	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_5
0x40047b6	          0x4189f9	                            mov r9d, edi	      1522	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_5
0x40047b9	          0x4189f0	                            mov r8d, esi	      1522	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_5
0x40047bc	            0x89d1	                            mov ecx, edx	      1522	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_5
0x40047be	      0xba00000000	                              mov edx, 0	      1522	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_5
0x40047c3	      0xbe9d000000	                           mov esi, 0x9d	      1522	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_5
0x40047c8	          0x4889c7	                            mov rdi, rax	      1522	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_5
0x40047cb	      0xb800000000	                              mov eax, 0	      1522	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_5
0x40047d0	      0xe800000000	                          call 0x40047d5	      1522	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_5
0x40047d5	        0x4883c420	                           add rsp, 0x20	      1522	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_5
0x40047d9	      0xb801000000	                              mov eax, 1	      1523	state.c	FUNCTION_26	ELSE_3	IF_5
0x40047de	      0xe92f010000	                           jmp 0x4004912	      1523	state.c	FUNCTION_26	ELSE_3	IF_5
0x40047e3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1525	state.c	FUNCTION_26	ELSE_4	IF_6
0x40047e7	      0xba03000000	                              mov edx, 3	      1525	state.c	FUNCTION_26	ELSE_4	IF_6
0x40047ec	      0xbe00000000	                              mov esi, 0	      1525	state.c	FUNCTION_26	ELSE_4	IF_6
0x40047f1	          0x4889c7	                            mov rdi, rax	      1525	state.c	FUNCTION_26	ELSE_4	IF_6
0x40047f4	      0xe800000000	                          call 0x40047f9	      1525	state.c	FUNCTION_26	ELSE_4	IF_6
0x40047f9	            0x85c0	                           test eax, eax	      1525	state.c	FUNCTION_26	ELSE_4	IF_6
0x40047fb	     0xf8580000000	                           jne 0x4004881	      1525	state.c	FUNCTION_26	ELSE_4	IF_6
0x4004801	        0x488b45f8	                mov rax, qword [rbp - 8]	      1527	state.c	FUNCTION_26	ELSE_4	IF_6
0x4004805	     0xfb6802c0100	          movzx eax, byte [rax + 0x12c] 	      1527	state.c	FUNCTION_26	ELSE_4	IF_6
0x400480c	           0xfb6c0	                           movzx eax, al	      1527	state.c	FUNCTION_26	ELSE_4	IF_6
0x400480f	          0x8945ec	             mov dword [rbp - 0x14], eax	      1527	state.c	FUNCTION_26	ELSE_4	IF_6
0x4004812	        0x488b45f8	                mov rax, qword [rbp - 8]	      1528	state.c	FUNCTION_26	ELSE_4	IF_6
0x4004816	     0xfb6802e0100	          movzx eax, byte [rax + 0x12e] 	      1528	state.c	FUNCTION_26	ELSE_4	IF_6
0x400481d	           0xfb6c0	                           movzx eax, al	      1528	state.c	FUNCTION_26	ELSE_4	IF_6
0x4004820	          0x8945f0	             mov dword [rbp - 0x10], eax	      1528	state.c	FUNCTION_26	ELSE_4	IF_6
0x4004823	        0x488b45f8	                mov rax, qword [rbp - 8]	      1529	state.c	FUNCTION_26	ELSE_4	IF_6
0x4004827	     0xfb6802d0100	          movzx eax, byte [rax + 0x12d] 	      1529	state.c	FUNCTION_26	ELSE_4	IF_6
0x400482e	           0xfb6c0	                           movzx eax, al	      1529	state.c	FUNCTION_26	ELSE_4	IF_6
0x4004831	          0x8945f4	              mov dword [rbp - 0xc], eax	      1529	state.c	FUNCTION_26	ELSE_4	IF_6
0x4004834	        0x488b45f8	                mov rax, qword [rbp - 8]	      1530	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_6
0x4004838	          0x488b00	                    mov rax, qword [rax]	      1530	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_6
0x400483b	          0x8b7df4	              mov edi, dword [rbp - 0xc]	      1530	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_6
0x400483e	          0x8b75ec	             mov esi, dword [rbp - 0x14]	      1530	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_6
0x4004841	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1530	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_6
0x4004844	        0x4883ec08	                              sub rsp, 8	      1530	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_6
0x4004848	          0x8b4df0	             mov ecx, dword [rbp - 0x10]	      1530	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_6
0x400484b	              0x51	                                push rcx	      1530	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_6
0x400484c	          0x8b4df0	             mov ecx, dword [rbp - 0x10]	      1530	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_6
0x400484f	              0x51	                                push rcx	      1530	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_6
0x4004850	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	      1530	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_6
0x4004853	              0x51	                                push rcx	      1530	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_6
0x4004854	          0x4189f9	                            mov r9d, edi	      1530	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_6
0x4004857	          0x4189f0	                            mov r8d, esi	      1530	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_6
0x400485a	            0x89d1	                            mov ecx, edx	      1530	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_6
0x400485c	      0xba00000000	                              mov edx, 0	      1530	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_6
0x4004861	      0xbe9d000000	                           mov esi, 0x9d	      1530	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_6
0x4004866	          0x4889c7	                            mov rdi, rax	      1530	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_6
0x4004869	      0xb800000000	                              mov eax, 0	      1530	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_6
0x400486e	      0xe800000000	                          call 0x4004873	      1530	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_6
0x4004873	        0x4883c420	                           add rsp, 0x20	      1530	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_6
0x4004877	      0xb801000000	                              mov eax, 1	      1531	state.c	FUNCTION_26	ELSE_4	IF_6
0x400487c	      0xe991000000	                           jmp 0x4004912	      1531	state.c	FUNCTION_26	ELSE_4	IF_6
0x4004881	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1533	state.c	FUNCTION_26	ELSE_5	IF_7
0x4004885	      0xba03000000	                              mov edx, 3	      1533	state.c	FUNCTION_26	ELSE_5	IF_7
0x400488a	      0xbe00000000	                              mov esi, 0	      1533	state.c	FUNCTION_26	ELSE_5	IF_7
0x400488f	          0x4889c7	                            mov rdi, rax	      1533	state.c	FUNCTION_26	ELSE_5	IF_7
0x4004892	      0xe800000000	                          call 0x4004897	      1533	state.c	FUNCTION_26	ELSE_5	IF_7
0x4004897	            0x85c0	                           test eax, eax	      1533	state.c	FUNCTION_26	ELSE_5	IF_7
0x4004899	            0x7528	                           jne 0x40048c3	      1533	state.c	FUNCTION_26	ELSE_5	IF_7
0x400489b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1534	state.c	FUNCTION_26	ELSE_5	IF_7	CALL_7
0x400489f	        0x488d48fd	                      lea rcx, [rax - 3]	      1534	state.c	FUNCTION_26	ELSE_5	IF_7	CALL_7
0x40048a3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1534	state.c	FUNCTION_26	ELSE_5	IF_7	CALL_7
0x40048a7	        0x488d5003	                      lea rdx, [rax + 3]	      1534	state.c	FUNCTION_26	ELSE_5	IF_7	CALL_7
0x40048ab	        0x488b45f8	                mov rax, qword [rbp - 8]	      1534	state.c	FUNCTION_26	ELSE_5	IF_7	CALL_7
0x40048af	      0xbe09000000	                              mov esi, 9	      1534	state.c	FUNCTION_26	ELSE_5	IF_7	CALL_7
0x40048b4	          0x4889c7	                            mov rdi, rax	      1534	state.c	FUNCTION_26	ELSE_5	IF_7	CALL_7
0x40048b7	      0xe8e8ccffff	             call sym.settermprop_string	      1534	state.c	FUNCTION_26	ELSE_5	IF_7	CALL_7
0x40048bc	      0xb801000000	                              mov eax, 1	      1535	state.c	FUNCTION_26	ELSE_5	IF_7
0x40048c1	            0xeb4f	                           jmp 0x4004912	      1535	state.c	FUNCTION_26	ELSE_5	IF_7
0x40048c3	        0x488b45f8	                mov rax, qword [rbp - 8]	      1537	state.c	FUNCTION_26	ELSE_6	IF_8
0x40048c7	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1537	state.c	FUNCTION_26	ELSE_6	IF_8
0x40048cb	          0x4885c0	                           test rax, rax	      1537	state.c	FUNCTION_26	ELSE_6	IF_8
0x40048ce	            0x743d	                            je 0x400490d	      1537	state.c	FUNCTION_26	ELSE_6	IF_8
0x40048d0	        0x488b45f8	                mov rax, qword [rbp - 8]	      1537	state.c	FUNCTION_26	ELSE_6	IF_8
0x40048d4	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1537	state.c	FUNCTION_26	ELSE_6	IF_8
0x40048d8	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1537	state.c	FUNCTION_26	ELSE_6	IF_8
0x40048dc	          0x4885c0	                           test rax, rax	      1537	state.c	FUNCTION_26	ELSE_6	IF_8
0x40048df	            0x742c	                            je 0x400490d	      1537	state.c	FUNCTION_26	ELSE_6	IF_8
0x40048e1	        0x488b45f8	                mov rax, qword [rbp - 8]	      1538	state.c	FUNCTION_26	ELSE_6	IF_8	IF_9
0x40048e5	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1538	state.c	FUNCTION_26	ELSE_6	IF_8	IF_9
0x40048e9	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1538	state.c	FUNCTION_26	ELSE_6	IF_8	IF_9
0x40048ed	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1538	state.c	FUNCTION_26	ELSE_6	IF_8	IF_9
0x40048f1	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	      1538	state.c	FUNCTION_26	ELSE_6	IF_8	IF_9
0x40048f5	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	      1538	state.c	FUNCTION_26	ELSE_6	IF_8	IF_9
0x40048f9	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      1538	state.c	FUNCTION_26	ELSE_6	IF_8	IF_9
0x40048fd	          0x4889cf	                            mov rdi, rcx	      1538	state.c	FUNCTION_26	ELSE_6	IF_8	IF_9
0x4004900	            0xffd0	                                call rax	      1538	state.c	FUNCTION_26	ELSE_6	IF_8	IF_9
0x4004902	            0x85c0	                           test eax, eax	      1538	state.c	FUNCTION_26	ELSE_6	IF_8	IF_9
0x4004904	            0x7407	                            je 0x400490d	      1538	state.c	FUNCTION_26	ELSE_6	IF_8	IF_9
0x4004906	      0xb801000000	                              mov eax, 1	      1539	state.c	FUNCTION_26	ELSE_6	IF_8	IF_9
0x400490b	            0xeb05	                           jmp 0x4004912	      1539	state.c	FUNCTION_26	ELSE_6	IF_8	IF_9
0x400490d	      0xb800000000	                              mov eax, 0	      1541	state.c	FUNCTION_26
0x4004912	              0xc9	                                   leave	      1542	state.c	FUNCTION_26
0x4004913	              0xc3	                                     ret	      1542	state.c	FUNCTION_26
request_status_string	functions,0:CALL,15:DO,0:WHILE,0:IF,5:ELSE,1:SWITCH,2:FOR,1	210
0x4004914	              0x55	                                push rbp	      1545	state.c	FUNCTION_27
0x4004915	          0x4889e5	                            mov rbp, rsp	      1545	state.c	FUNCTION_27
0x4004918	    0x4881ece00000	                           sub rsp, 0xe0	      1545	state.c	FUNCTION_27
0x400491f	    0x4889bd38ffff	             mov qword [rbp - 0xc8], rdi	      1545	state.c	FUNCTION_27
0x4004926	    0x4889b530ffff	             mov qword [rbp - 0xd0], rsi	      1545	state.c	FUNCTION_27
0x400492d	    0x48899528ffff	             mov qword [rbp - 0xd8], rdx	      1545	state.c	FUNCTION_27
0x4004934	    0x64488b042528	                mov rax, qword fs:[0x28]	      1545	state.c	FUNCTION_27
0x400493d	        0x488945f8	                mov qword [rbp - 8], rax	      1545	state.c	FUNCTION_27
0x4004941	            0x31c0	                            xor eax, eax	      1545	state.c	FUNCTION_27
0x4004943	    0x4883bd28ffff	               cmp qword [rbp - 0xd8], 1	      1546	state.c	FUNCTION_27	IF_1
0x400494b	     0xf851c020000	                           jne 0x4004b6d	      1546	state.c	FUNCTION_27	IF_1
0x4004951	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      1547	state.c	FUNCTION_27	IF_1	SWITCH_1
0x4004958	           0xfb600	                   movzx eax, byte [rax]	      1547	state.c	FUNCTION_27	IF_1	SWITCH_1
0x400495b	           0xfbec0	                           movsx eax, al	      1547	state.c	FUNCTION_27	IF_1	SWITCH_1
0x400495e	          0x83f872	                           cmp eax, 0x72	      1547	state.c	FUNCTION_27	IF_1	SWITCH_1
0x4004961	     0xf8431010000	                            je 0x4004a98	      1547	state.c	FUNCTION_27	IF_1	SWITCH_1
0x4004967	          0x83f873	                           cmp eax, 0x73	      1547	state.c	FUNCTION_27	IF_1	SWITCH_1
0x400496a	     0xf847b010000	                            je 0x4004aeb	      1547	state.c	FUNCTION_27	IF_1	SWITCH_1
0x4004970	          0x83f86d	                           cmp eax, 0x6d	      1547	state.c	FUNCTION_27	IF_1	SWITCH_1
0x4004973	     0xf85f4010000	                           jne 0x4004b6d	      1547	state.c	FUNCTION_27	IF_1	SWITCH_1
0x4004979	    0x488d8d50ffff	                   lea rcx, [rbp - 0xb0]	      1551	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_1
0x4004980	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1551	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_1
0x4004987	      0xba14000000	                           mov edx, 0x14	      1551	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_1
0x400498c	          0x4889ce	                            mov rsi, rcx	      1551	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_1
0x400498f	          0x4889c7	                            mov rdi, rax	      1551	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_1
0x4004992	      0xe800000000	                          call 0x4004997	      1551	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_1
0x4004997	    0x89854cffffff	             mov dword [rbp - 0xb4], eax	      1551	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_1
0x400499d	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1553	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_2
0x40049a4	          0x488b00	                    mov rax, qword [rax]	      1553	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_2
0x40049a7	      0xba00000000	                              mov edx, 0	      1553	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_2
0x40049ac	      0xbe90000000	                           mov esi, 0x90	      1553	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_2
0x40049b1	          0x4889c7	                            mov rdi, rax	      1553	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_2
0x40049b4	      0xb800000000	                              mov eax, 0	      1553	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_2
0x40049b9	      0xe800000000	                          call 0x40049be	      1553	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_2
0x40049be	    0xc78544ffffff	               mov dword [rbp - 0xbc], 0	      1554	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1
0x40049c8	            0xeb7a	                           jmp 0x4004a44	      1554	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1
0x40049ca	    0x8b8544ffffff	             mov eax, dword [rbp - 0xbc]	      1559	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_5
0x40049d0	            0x4898	                                    cdqe	      1559	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_5
0x40049d2	    0x488b84c550ff	     mov rax, qword [rbp + rax*8 - 0xb0]	      1559	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_5
0x40049da	      0x25ffffff7f	                     and eax, 0x7fffffff	      1555	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1	CALL_3
0x40049df	          0x4889c2	                            mov rdx, rax	      1555	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1	CALL_3
0x40049e2	    0x8b854cffffff	             mov eax, dword [rbp - 0xb4]	      1556	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1
0x40049e8	          0x83e801	                              sub eax, 1	      1556	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1
0x40049eb	    0x3b8544ffffff	             cmp eax, dword [rbp - 0xbc]	      1555	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1	CALL_3
0x40049f1	            0x742b	                            je 0x4004a1e	      1555	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1	CALL_3
0x40049f3	    0x8b8544ffffff	             mov eax, dword [rbp - 0xbc]	      1557	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1	CALL_4
0x40049f9	            0x4898	                                    cdqe	      1557	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1	CALL_4
0x40049fb	    0x488b84c550ff	     mov rax, qword [rbp + rax*8 - 0xb0]	      1557	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1	CALL_4
0x4004a03	      0x2500000080	                     and eax, 0x80000000	      1557	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1	CALL_4
0x4004a08	          0x4885c0	                           test rax, rax	      1555	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1	CALL_3
0x4004a0b	            0x7407	                            je 0x4004a14	      1555	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1	CALL_3
0x4004a0d	      0xb800000000	                              mov eax, 0	      1555	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1	CALL_3
0x4004a12	            0xeb05	                           jmp 0x4004a19	      1555	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1	CALL_3
0x4004a14	      0xb800000000	                              mov eax, 0	      1555	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1	CALL_3
0x4004a19	          0x4889c1	                            mov rcx, rax	      1555	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1	CALL_3
0x4004a1c	            0xeb05	                           jmp 0x4004a23	      1555	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1	CALL_3
0x4004a1e	      0xb900000000	                              mov ecx, 0	      1555	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1	CALL_3
0x4004a23	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1555	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1	CALL_3
0x4004a2a	          0x488b00	                    mov rax, qword [rax]	      1555	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1	CALL_3
0x4004a2d	          0x4889ce	                            mov rsi, rcx	      1555	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1	CALL_3
0x4004a30	          0x4889c7	                            mov rdi, rax	      1555	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1	CALL_3
0x4004a33	      0xb800000000	                              mov eax, 0	      1555	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1	CALL_3
0x4004a38	      0xe800000000	                          call 0x4004a3d	      1555	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1	CALL_3
0x4004a3d	    0x838544ffffff	               add dword [rbp - 0xbc], 1	      1554	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1
0x4004a44	    0x8b8544ffffff	             mov eax, dword [rbp - 0xbc]	      1554	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1
0x4004a4a	    0x3b854cffffff	             cmp eax, dword [rbp - 0xb4]	      1554	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1
0x4004a50	     0xf8c74ffffff	                            jl 0x40049ca	      1554	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1
0x4004a56	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1560	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_6
0x4004a5d	          0x488b00	                    mov rax, qword [rax]	      1560	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_6
0x4004a60	      0xbe00000000	                              mov esi, 0	      1560	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_6
0x4004a65	          0x4889c7	                            mov rdi, rax	      1560	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_6
0x4004a68	      0xb800000000	                              mov eax, 0	      1560	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_6
0x4004a6d	      0xe800000000	                          call 0x4004a72	      1560	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_6
0x4004a72	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1561	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_7
0x4004a79	          0x488b00	                    mov rax, qword [rax]	      1561	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_7
0x4004a7c	      0xba00000000	                              mov edx, 0	      1561	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_7
0x4004a81	      0xbe9c000000	                           mov esi, 0x9c	      1561	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_7
0x4004a86	          0x4889c7	                            mov rdi, rax	      1561	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_7
0x4004a89	      0xb800000000	                              mov eax, 0	      1561	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_7
0x4004a8e	      0xe800000000	                          call 0x4004a93	      1561	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_7
0x4004a93	      0xe91b020000	                           jmp 0x4004cb3	      1563	state.c	FUNCTION_27	IF_1	SWITCH_1
0x4004a98	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1565	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_9
0x4004a9f	          0x8b4040	            mov eax, dword [rax + 0x40] 	      1565	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_9
0x4004aa2	            0x85c0	                           test eax, eax	      1565	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_9
0x4004aa4	            0x780c	                            js 0x4004ab2	      1565	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_9
0x4004aa6	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1565	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_9
0x4004aad	          0x8b4040	            mov eax, dword [rax + 0x40] 	      1565	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_9
0x4004ab0	            0xeb0a	                           jmp 0x4004abc	      1565	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_9
0x4004ab2	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1565	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_9
0x4004ab9	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1565	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_9
0x4004abc	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	      1565	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_9
0x4004ac3	          0x8b523c	            mov edx, dword [rdx + 0x3c] 	      1565	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_9
0x4004ac6	          0x8d7201	                      lea esi, [rdx + 1]	      1565	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_9
0x4004ac9	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	      1565	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_9
0x4004ad0	          0x488b3a	                    mov rdi, qword [rdx]	      1565	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_9
0x4004ad3	            0x89c1	                            mov ecx, eax	      1565	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_9
0x4004ad5	            0x89f2	                            mov edx, esi	      1565	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_9
0x4004ad7	      0xbe00000000	                              mov esi, 0	      1565	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_9
0x4004adc	      0xb800000000	                              mov eax, 0	      1565	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_9
0x4004ae1	      0xe800000000	                          call 0x4004ae6	      1565	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_9
0x4004ae6	      0xe9c8010000	                           jmp 0x4004cb3	      1566	state.c	FUNCTION_27	IF_1	SWITCH_1
0x4004aeb	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x4004af2	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x4004af9	          0x83e010	                           and eax, 0x10	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x4004afc	            0x84c0	                             test al, al	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x4004afe	            0x741a	                            je 0x4004b1a	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x4004b00	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x4004b07	          0x8b4048	            mov eax, dword [rax + 0x48] 	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x4004b0a	            0x85c0	                           test eax, eax	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x4004b0c	            0x780c	                            js 0x4004b1a	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x4004b0e	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x4004b15	          0x8b4048	            mov eax, dword [rax + 0x48] 	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x4004b18	            0xeb0a	                           jmp 0x4004b24	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x4004b1a	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x4004b21	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x4004b24	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x4004b2b	     0xfb692950000	           movzx edx, byte [rdx + 0x95] 	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x4004b32	          0x83e210	                           and edx, 0x10	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x4004b35	            0x84d2	                             test dl, dl	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x4004b37	            0x740f	                            je 0x4004b48	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x4004b39	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x4004b40	          0x8b5244	            mov edx, dword [rdx + 0x44] 	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x4004b43	          0x83c201	                              add edx, 1	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x4004b46	            0xeb05	                           jmp 0x4004b4d	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x4004b48	      0xba01000000	                              mov edx, 1	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x4004b4d	    0x488b8d38ffff	             mov rcx, qword [rbp - 0xc8]	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x4004b54	          0x488b39	                    mov rdi, qword [rcx]	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x4004b57	            0x89c1	                            mov ecx, eax	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x4004b59	      0xbe00000000	                              mov esi, 0	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x4004b5e	      0xb800000000	                              mov eax, 0	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x4004b63	      0xe800000000	                          call 0x4004b68	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x4004b68	      0xe946010000	                           jmp 0x4004cb3	      1569	state.c	FUNCTION_27	IF_1	SWITCH_1
0x4004b6d	    0x4883bd28ffff	               cmp qword [rbp - 0xd8], 2	      1572	state.c	FUNCTION_27	IF_2
0x4004b75	     0xf8507010000	                           jne 0x4004c82	      1572	state.c	FUNCTION_27	IF_2
0x4004b7b	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      1573	state.c	FUNCTION_27	IF_2	IF_3
0x4004b82	      0xba02000000	                              mov edx, 2	      1573	state.c	FUNCTION_27	IF_2	IF_3
0x4004b87	      0xbe00000000	                              mov esi, 0	      1573	state.c	FUNCTION_27	IF_2	IF_3
0x4004b8c	          0x4889c7	                            mov rdi, rax	      1573	state.c	FUNCTION_27	IF_2	IF_3
0x4004b8f	      0xe800000000	                          call 0x4004b94	      1573	state.c	FUNCTION_27	IF_2	IF_3
0x4004b94	            0x85c0	                           test eax, eax	      1573	state.c	FUNCTION_27	IF_2	IF_3
0x4004b96	     0xf858a000000	                           jne 0x4004c26	      1573	state.c	FUNCTION_27	IF_2	IF_3
0x4004b9c	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1575	state.c	FUNCTION_27	IF_2	IF_3	SWITCH_2
0x4004ba3	     0xfb780940000	           movzx eax, word [rax + 0x94] 	      1575	state.c	FUNCTION_27	IF_2	IF_3	SWITCH_2
0x4004baa	        0x66c1e807	                               shr ax, 7	      1575	state.c	FUNCTION_27	IF_2	IF_3	SWITCH_2
0x4004bae	          0x83e003	                              and eax, 3	      1575	state.c	FUNCTION_27	IF_2	IF_3	SWITCH_2
0x4004bb1	           0xfb6c0	                           movzx eax, al	      1575	state.c	FUNCTION_27	IF_2	IF_3	SWITCH_2
0x4004bb4	          0x83f801	                              cmp eax, 1	      1575	state.c	FUNCTION_27	IF_2	IF_3	SWITCH_2
0x4004bb7	            0x7407	                            je 0x4004bc0	      1575	state.c	FUNCTION_27	IF_2	IF_3	SWITCH_2
0x4004bb9	          0x83f802	                              cmp eax, 2	      1575	state.c	FUNCTION_27	IF_2	IF_3	SWITCH_2
0x4004bbc	            0x740e	                            je 0x4004bcc	      1575	state.c	FUNCTION_27	IF_2	IF_3	SWITCH_2
0x4004bbe	            0xeb18	                           jmp 0x4004bd8	      1575	state.c	FUNCTION_27	IF_2	IF_3	SWITCH_2
0x4004bc0	    0xc78548ffffff	               mov dword [rbp - 0xb8], 2	      1576	state.c	FUNCTION_27	IF_2	IF_3	SWITCH_2
0x4004bca	            0xeb17	                           jmp 0x4004be3	      1576	state.c	FUNCTION_27	IF_2	IF_3	SWITCH_2
0x4004bcc	    0xc78548ffffff	               mov dword [rbp - 0xb8], 4	      1577	state.c	FUNCTION_27	IF_2	IF_3	SWITCH_2
0x4004bd6	            0xeb0b	                           jmp 0x4004be3	      1577	state.c	FUNCTION_27	IF_2	IF_3	SWITCH_2
0x4004bd8	    0xc78548ffffff	               mov dword [rbp - 0xb8], 6	      1578	state.c	FUNCTION_27	IF_2	IF_3	SWITCH_2
0x4004be2	              0x90	                                     nop	      1578	state.c	FUNCTION_27	IF_2	IF_3	SWITCH_2
0x4004be3	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1580	state.c	FUNCTION_27	IF_2	IF_3	IF_4
0x4004bea	     0xfb680940000	           movzx eax, byte [rax + 0x94] 	      1580	state.c	FUNCTION_27	IF_2	IF_3	IF_4
0x4004bf1	          0x83e040	                           and eax, 0x40	      1580	state.c	FUNCTION_27	IF_2	IF_3	IF_4
0x4004bf4	            0x84c0	                             test al, al	      1580	state.c	FUNCTION_27	IF_2	IF_3	IF_4
0x4004bf6	            0x7407	                            je 0x4004bff	      1580	state.c	FUNCTION_27	IF_2	IF_3	IF_4
0x4004bf8	    0x83ad48ffffff	               sub dword [rbp - 0xb8], 1	      1581	state.c	FUNCTION_27	IF_2	IF_3	IF_4
0x4004bff	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1582	state.c	FUNCTION_27	IF_2	IF_3	CALL_13
0x4004c06	          0x488b00	                    mov rax, qword [rax]	      1582	state.c	FUNCTION_27	IF_2	IF_3	CALL_13
0x4004c09	    0x8b9548ffffff	             mov edx, dword [rbp - 0xb8]	      1582	state.c	FUNCTION_27	IF_2	IF_3	CALL_13
0x4004c0f	      0xbe00000000	                              mov esi, 0	      1582	state.c	FUNCTION_27	IF_2	IF_3	CALL_13
0x4004c14	          0x4889c7	                            mov rdi, rax	      1582	state.c	FUNCTION_27	IF_2	IF_3	CALL_13
0x4004c17	      0xb800000000	                              mov eax, 0	      1582	state.c	FUNCTION_27	IF_2	IF_3	CALL_13
0x4004c1c	      0xe800000000	                          call 0x4004c21	      1582	state.c	FUNCTION_27	IF_2	IF_3	CALL_13
0x4004c21	      0xe98d000000	                           jmp 0x4004cb3	      1583	state.c	FUNCTION_27	IF_2	IF_3
0x4004c26	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      1585	state.c	FUNCTION_27	IF_2	ELSE_1	IF_5
0x4004c2d	      0xba02000000	                              mov edx, 2	      1585	state.c	FUNCTION_27	IF_2	ELSE_1	IF_5
0x4004c32	      0xbe00000000	                              mov esi, 0	      1585	state.c	FUNCTION_27	IF_2	ELSE_1	IF_5
0x4004c37	          0x4889c7	                            mov rdi, rax	      1585	state.c	FUNCTION_27	IF_2	ELSE_1	IF_5
0x4004c3a	      0xe800000000	                          call 0x4004c3f	      1585	state.c	FUNCTION_27	IF_2	ELSE_1	IF_5
0x4004c3f	            0x85c0	                           test eax, eax	      1585	state.c	FUNCTION_27	IF_2	ELSE_1	IF_5
0x4004c41	            0x753f	                           jne 0x4004c82	      1585	state.c	FUNCTION_27	IF_2	ELSE_1	IF_5
0x4004c43	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1586	state.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_14
0x4004c4a	     0xfb6807c0100	          movzx eax, byte [rax + 0x17c] 	      1586	state.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_14
0x4004c51	          0x83e001	                              and eax, 1	      1586	state.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_14
0x4004c54	            0x84c0	                             test al, al	      1586	state.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_14
0x4004c56	            0x7407	                            je 0x4004c5f	      1586	state.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_14
0x4004c58	      0xba01000000	                              mov edx, 1	      1586	state.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_14
0x4004c5d	            0xeb05	                           jmp 0x4004c64	      1586	state.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_14
0x4004c5f	      0xba02000000	                              mov edx, 2	      1586	state.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_14
0x4004c64	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1586	state.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_14
0x4004c6b	          0x488b00	                    mov rax, qword [rax]	      1586	state.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_14
0x4004c6e	      0xbe00000000	                              mov esi, 0	      1586	state.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_14
0x4004c73	          0x4889c7	                            mov rdi, rax	      1586	state.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_14
0x4004c76	      0xb800000000	                              mov eax, 0	      1586	state.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_14
0x4004c7b	      0xe800000000	                          call 0x4004c80	      1586	state.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_14
0x4004c80	            0xeb31	                           jmp 0x4004cb3	      1587	state.c	FUNCTION_27	IF_2	ELSE_1	IF_5
0x4004c82	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1591	state.c	FUNCTION_27	CALL_15
0x4004c89	            0x89c6	                            mov esi, eax	      1591	state.c	FUNCTION_27	CALL_15
0x4004c8b	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1591	state.c	FUNCTION_27	CALL_15
0x4004c92	          0x488b00	                    mov rax, qword [rax]	      1591	state.c	FUNCTION_27	CALL_15
0x4004c95	    0x488b9530ffff	             mov rdx, qword [rbp - 0xd0]	      1591	state.c	FUNCTION_27	CALL_15
0x4004c9c	          0x4889d1	                            mov rcx, rdx	      1591	state.c	FUNCTION_27	CALL_15
0x4004c9f	            0x89f2	                            mov edx, esi	      1591	state.c	FUNCTION_27	CALL_15
0x4004ca1	      0xbe00000000	                              mov esi, 0	      1591	state.c	FUNCTION_27	CALL_15
0x4004ca6	          0x4889c7	                            mov rdi, rax	      1591	state.c	FUNCTION_27	CALL_15
0x4004ca9	      0xb800000000	                              mov eax, 0	      1591	state.c	FUNCTION_27	CALL_15
0x4004cae	      0xe800000000	                          call 0x4004cb3	      1591	state.c	FUNCTION_27	CALL_15
0x4004cb3	        0x488b45f8	                mov rax, qword [rbp - 8]	      1592	state.c	FUNCTION_27
0x4004cb7	    0x644833042528	                xor rax, qword fs:[0x28]	      1592	state.c	FUNCTION_27
0x4004cc0	            0x7405	                            je 0x4004cc7	      1592	state.c	FUNCTION_27
0x4004cc2	      0xe800000000	                          call 0x4004cc7	      1592	state.c	FUNCTION_27
0x4004cc7	              0xc9	                                   leave	      1592	state.c	FUNCTION_27
0x4004cc8	              0xc3	                                     ret	      1592	state.c	FUNCTION_27
set_mode	functions,0:CALL,1:DO,0:WHILE,0:IF,0:ELSE,0:SWITCH,1:FOR,0	36
0x4001cdd	              0x55	                                push rbp	       712	state.c	FUNCTION_22
0x4001cde	          0x4889e5	                            mov rbp, rsp	       712	state.c	FUNCTION_22
0x4001ce1	        0x48897df8	                mov qword [rbp - 8], rdi	       712	state.c	FUNCTION_22
0x4001ce5	          0x8975f4	              mov dword [rbp - 0xc], esi	       712	state.c	FUNCTION_22
0x4001ce8	          0x8955f0	             mov dword [rbp - 0x10], edx	       712	state.c	FUNCTION_22
0x4001ceb	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       713	state.c	FUNCTION_22	SWITCH_1
0x4001cee	          0x83f804	                              cmp eax, 4	       713	state.c	FUNCTION_22	SWITCH_1
0x4001cf1	            0x7407	                            je 0x4001cfa	       713	state.c	FUNCTION_22	SWITCH_1
0x4001cf3	          0x83f814	                           cmp eax, 0x14	       713	state.c	FUNCTION_22	SWITCH_1
0x4001cf6	            0x742c	                            je 0x4001d24	       713	state.c	FUNCTION_22	SWITCH_1
0x4001cf8	            0xeb51	                           jmp 0x4001d4b	       724	state.c	FUNCTION_22	SWITCH_1
0x4001cfa	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       715	state.c	FUNCTION_22	SWITCH_1
0x4001cfd	          0x83e001	                              and eax, 1	       715	state.c	FUNCTION_22	SWITCH_1
0x4001d00	            0x89c2	                            mov edx, eax	       715	state.c	FUNCTION_22	SWITCH_1
0x4001d02	        0x488b45f8	                mov rax, qword [rbp - 8]	       715	state.c	FUNCTION_22	SWITCH_1
0x4001d06	          0x83e201	                              and edx, 1	       715	state.c	FUNCTION_22	SWITCH_1
0x4001d09	    0x8d0cd5000000	                        lea ecx, [rdx*8]	       715	state.c	FUNCTION_22	SWITCH_1
0x4001d10	     0xfb690940000	           movzx edx, byte [rax + 0x94] 	       715	state.c	FUNCTION_22	SWITCH_1
0x4001d17	          0x83e2f7	                     and edx, 0xfffffff7	       715	state.c	FUNCTION_22	SWITCH_1
0x4001d1a	             0x9ca	                             or edx, ecx	       715	state.c	FUNCTION_22	SWITCH_1
0x4001d1c	    0x889094000000	               mov byte [rax + 0x94], dl	       715	state.c	FUNCTION_22	SWITCH_1
0x4001d22	            0xeb27	                           jmp 0x4001d4b	       716	state.c	FUNCTION_22	SWITCH_1
0x4001d24	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       719	state.c	FUNCTION_22	SWITCH_1
0x4001d27	          0x83e001	                              and eax, 1	       719	state.c	FUNCTION_22	SWITCH_1
0x4001d2a	            0x89c2	                            mov edx, eax	       719	state.c	FUNCTION_22	SWITCH_1
0x4001d2c	        0x488b45f8	                mov rax, qword [rbp - 8]	       719	state.c	FUNCTION_22	SWITCH_1
0x4001d30	          0x83e201	                              and edx, 1	       719	state.c	FUNCTION_22	SWITCH_1
0x4001d33	            0x89d1	                            mov ecx, edx	       719	state.c	FUNCTION_22	SWITCH_1
0x4001d35	          0xc1e104	                              shl ecx, 4	       719	state.c	FUNCTION_22	SWITCH_1
0x4001d38	     0xfb690940000	           movzx edx, byte [rax + 0x94] 	       719	state.c	FUNCTION_22	SWITCH_1
0x4001d3f	          0x83e2ef	                     and edx, 0xffffffef	       719	state.c	FUNCTION_22	SWITCH_1
0x4001d42	             0x9ca	                             or edx, ecx	       719	state.c	FUNCTION_22	SWITCH_1
0x4001d44	    0x889094000000	               mov byte [rax + 0x94], dl	       719	state.c	FUNCTION_22	SWITCH_1
0x4001d4a	              0x90	                                     nop	       720	state.c	FUNCTION_22	SWITCH_1
0x4001d4b	              0x5d	                                 pop rbp	       726	state.c	FUNCTION_22
0x4001d4c	              0xc3	                                     ret	       726	state.c	FUNCTION_22
on_resize	functions,0:CALL,5:DO,0:WHILE,0:IF,10:ELSE,2:SWITCH,0:FOR,4	323
0x4004d7d	              0x55	                                push rbp	      1610	state.c	FUNCTION_29
0x4004d7e	          0x4889e5	                            mov rbp, rsp	      1610	state.c	FUNCTION_29
0x4004d81	        0x4883ec60	                           sub rsp, 0x60	      1610	state.c	FUNCTION_29
0x4004d85	          0x897dac	             mov dword [rbp - 0x54], edi	      1610	state.c	FUNCTION_29
0x4004d88	          0x8975a8	             mov dword [rbp - 0x58], esi	      1610	state.c	FUNCTION_29
0x4004d8b	        0x488955a0	             mov qword [rbp - 0x60], rdx	      1610	state.c	FUNCTION_29
0x4004d8f	    0x64488b042528	                mov rax, qword fs:[0x28]	      1610	state.c	FUNCTION_29
0x4004d98	        0x488945f8	                mov qword [rbp - 8], rax	      1610	state.c	FUNCTION_29
0x4004d9c	            0x31c0	                            xor eax, eax	      1610	state.c	FUNCTION_29
0x4004d9e	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1611	state.c	FUNCTION_29
0x4004da2	        0x488945e0	             mov qword [rbp - 0x20], rax	      1611	state.c	FUNCTION_29
0x4004da6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1612	state.c	FUNCTION_29
0x4004daa	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1612	state.c	FUNCTION_29
0x4004dae	        0x488945c0	             mov qword [rbp - 0x40], rax	      1612	state.c	FUNCTION_29
0x4004db2	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      1613	state.c	FUNCTION_29
0x4004db9	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      1613	state.c	FUNCTION_29
0x4004dc0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1615	state.c	FUNCTION_29	IF_1
0x4004dc4	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1615	state.c	FUNCTION_29	IF_1
0x4004dc7	          0x3b45a8	             cmp eax, dword [rbp - 0x58]	      1615	state.c	FUNCTION_29	IF_1
0x4004dca	     0xf848f010000	                            je 0x4004f5f	      1615	state.c	FUNCTION_29	IF_1
0x4004dd0	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      1616	state.c	FUNCTION_29	IF_1	CALL_1
0x4004dd3	          0x83c007	                              add eax, 7	      1616	state.c	FUNCTION_29	IF_1	CALL_1
0x4004dd6	          0x8d5007	                      lea edx, [rax + 7]	      1616	state.c	FUNCTION_29	IF_1	CALL_1
0x4004dd9	            0x85c0	                           test eax, eax	      1616	state.c	FUNCTION_29	IF_1	CALL_1
0x4004ddb	           0xf48c2	                          cmovs eax, edx	      1616	state.c	FUNCTION_29	IF_1	CALL_1
0x4004dde	          0xc1f803	                              sar eax, 3	      1616	state.c	FUNCTION_29	IF_1	CALL_1
0x4004de1	          0x4863d0	                         movsxd rdx, eax	      1616	state.c	FUNCTION_29	IF_1	CALL_1
0x4004de4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1616	state.c	FUNCTION_29	IF_1	CALL_1
0x4004de8	          0x488b00	                    mov rax, qword [rax]	      1616	state.c	FUNCTION_29	IF_1	CALL_1
0x4004deb	          0x4889d6	                            mov rsi, rdx	      1616	state.c	FUNCTION_29	IF_1	CALL_1
0x4004dee	          0x4889c7	                            mov rdi, rax	      1616	state.c	FUNCTION_29	IF_1	CALL_1
0x4004df1	      0xe800000000	                          call 0x4004df6	      1616	state.c	FUNCTION_29	IF_1	CALL_1
0x4004df6	        0x488945e8	             mov qword [rbp - 0x18], rax	      1616	state.c	FUNCTION_29	IF_1	CALL_1
0x4004dfa	    0xc745b8000000	               mov dword [rbp - 0x48], 0	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x4004e01	      0xe98e000000	                           jmp 0x4004e94	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x4004e06	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1621	state.c	FUNCTION_29	IF_1	FOR_1
0x4004e09	          0x83e007	                              and eax, 7	      1621	state.c	FUNCTION_29	IF_1	FOR_1
0x4004e0c	      0xba01000000	                              mov edx, 1	      1621	state.c	FUNCTION_29	IF_1	FOR_1
0x4004e11	            0x89c1	                            mov ecx, eax	      1621	state.c	FUNCTION_29	IF_1	FOR_1
0x4004e13	            0xd3e2	                             shl edx, cl	      1621	state.c	FUNCTION_29	IF_1	FOR_1
0x4004e15	            0x89d0	                            mov eax, edx	      1621	state.c	FUNCTION_29	IF_1	FOR_1
0x4004e17	          0x8845b6	               mov byte [rbp - 0x4a], al	      1621	state.c	FUNCTION_29	IF_1	FOR_1
0x4004e1a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1622	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x4004e1e	        0x488b5050	            mov rdx, qword [rax + 0x50] 	      1622	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x4004e22	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1622	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x4004e25	          0xc1f803	                              sar eax, 3	      1622	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x4004e28	            0x4898	                                    cdqe	      1622	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x4004e2a	          0x4801d0	                            add rax, rdx	      1622	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x4004e2d	           0xfb600	                   movzx eax, byte [rax]	      1622	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x4004e30	          0x2245b6	               and al, byte [rbp - 0x4a]	      1622	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x4004e33	            0x84c0	                             test al, al	      1622	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x4004e35	            0x742a	                            je 0x4004e61	      1622	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x4004e37	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1623	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x4004e3a	          0xc1f803	                              sar eax, 3	      1623	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x4004e3d	          0x4863d0	                         movsxd rdx, eax	      1623	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x4004e40	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1623	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x4004e44	          0x4801c2	                            add rdx, rax	      1623	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x4004e47	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1623	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x4004e4a	          0xc1f803	                              sar eax, 3	      1623	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x4004e4d	          0x4863c8	                         movsxd rcx, eax	      1623	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x4004e50	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1623	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x4004e54	          0x4801c8	                            add rax, rcx	      1623	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x4004e57	           0xfb600	                   movzx eax, byte [rax]	      1623	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x4004e5a	           0xa45b6	                or al, byte [rbp - 0x4a]	      1623	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x4004e5d	            0x8802	                      mov byte [rdx], al	      1623	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x4004e5f	            0xeb2f	                           jmp 0x4004e90	      1623	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x4004e61	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1625	state.c	FUNCTION_29	IF_1	FOR_1	ELSE_1
0x4004e64	          0xc1f803	                              sar eax, 3	      1625	state.c	FUNCTION_29	IF_1	FOR_1	ELSE_1
0x4004e67	          0x4863d0	                         movsxd rdx, eax	      1625	state.c	FUNCTION_29	IF_1	FOR_1	ELSE_1
0x4004e6a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1625	state.c	FUNCTION_29	IF_1	FOR_1	ELSE_1
0x4004e6e	          0x4801d0	                            add rax, rdx	      1625	state.c	FUNCTION_29	IF_1	FOR_1	ELSE_1
0x4004e71	          0x8b55b8	             mov edx, dword [rbp - 0x48]	      1625	state.c	FUNCTION_29	IF_1	FOR_1	ELSE_1
0x4004e74	          0xc1fa03	                              sar edx, 3	      1625	state.c	FUNCTION_29	IF_1	FOR_1	ELSE_1
0x4004e77	          0x4863ca	                         movsxd rcx, edx	      1625	state.c	FUNCTION_29	IF_1	FOR_1	ELSE_1
0x4004e7a	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1625	state.c	FUNCTION_29	IF_1	FOR_1	ELSE_1
0x4004e7e	          0x4801ca	                            add rdx, rcx	      1625	state.c	FUNCTION_29	IF_1	FOR_1	ELSE_1
0x4004e81	           0xfb612	                   movzx edx, byte [rdx]	      1625	state.c	FUNCTION_29	IF_1	FOR_1	ELSE_1
0x4004e84	            0x89d1	                            mov ecx, edx	      1625	state.c	FUNCTION_29	IF_1	FOR_1	ELSE_1
0x4004e86	         0xfb655b6	            movzx edx, byte [rbp - 0x4a]	      1625	state.c	FUNCTION_29	IF_1	FOR_1	ELSE_1
0x4004e8a	            0xf7d2	                                 not edx	      1625	state.c	FUNCTION_29	IF_1	FOR_1	ELSE_1
0x4004e8c	            0x21ca	                            and edx, ecx	      1625	state.c	FUNCTION_29	IF_1	FOR_1	ELSE_1
0x4004e8e	            0x8810	                      mov byte [rax], dl	      1625	state.c	FUNCTION_29	IF_1	FOR_1	ELSE_1
0x4004e90	        0x8345b801	               add dword [rbp - 0x48], 1	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x4004e94	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x4004e98	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x4004e9b	          0x3b45b8	             cmp eax, dword [rbp - 0x48]	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x4004e9e	     0xf8e89000000	                           jle 0x4004f2d	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x4004ea4	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x4004ea7	          0x3b45a8	             cmp eax, dword [rbp - 0x58]	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x4004eaa	     0xf8c56ffffff	                            jl 0x4004e06	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x4004eb0	            0xeb7b	                           jmp 0x4004f2d	      1628	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x4004eb2	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1629	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x4004eb5	          0x83e007	                              and eax, 7	      1629	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x4004eb8	      0xba01000000	                              mov edx, 1	      1629	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x4004ebd	            0x89c1	                            mov ecx, eax	      1629	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x4004ebf	            0xd3e2	                             shl edx, cl	      1629	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x4004ec1	            0x89d0	                            mov eax, edx	      1629	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x4004ec3	          0x8845b7	               mov byte [rbp - 0x49], al	      1629	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x4004ec6	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1630	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	IF_3
0x4004ec9	          0x83e007	                              and eax, 7	      1630	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	IF_3
0x4004ecc	            0x85c0	                           test eax, eax	      1630	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	IF_3
0x4004ece	            0x752a	                           jne 0x4004efa	      1630	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	IF_3
0x4004ed0	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1631	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	IF_3
0x4004ed3	          0xc1f803	                              sar eax, 3	      1631	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	IF_3
0x4004ed6	          0x4863d0	                         movsxd rdx, eax	      1631	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	IF_3
0x4004ed9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1631	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	IF_3
0x4004edd	          0x4801c2	                            add rdx, rax	      1631	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	IF_3
0x4004ee0	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1631	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	IF_3
0x4004ee3	          0xc1f803	                              sar eax, 3	      1631	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	IF_3
0x4004ee6	          0x4863c8	                         movsxd rcx, eax	      1631	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	IF_3
0x4004ee9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1631	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	IF_3
0x4004eed	          0x4801c8	                            add rax, rcx	      1631	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	IF_3
0x4004ef0	           0xfb600	                   movzx eax, byte [rax]	      1631	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	IF_3
0x4004ef3	           0xa45b7	                or al, byte [rbp - 0x49]	      1631	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	IF_3
0x4004ef6	            0x8802	                      mov byte [rdx], al	      1631	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	IF_3
0x4004ef8	            0xeb2f	                           jmp 0x4004f29	      1631	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	IF_3
0x4004efa	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1633	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	ELSE_2
0x4004efd	          0xc1f803	                              sar eax, 3	      1633	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	ELSE_2
0x4004f00	          0x4863d0	                         movsxd rdx, eax	      1633	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	ELSE_2
0x4004f03	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1633	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	ELSE_2
0x4004f07	          0x4801d0	                            add rax, rdx	      1633	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	ELSE_2
0x4004f0a	          0x8b55b8	             mov edx, dword [rbp - 0x48]	      1633	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	ELSE_2
0x4004f0d	          0xc1fa03	                              sar edx, 3	      1633	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	ELSE_2
0x4004f10	          0x4863ca	                         movsxd rcx, edx	      1633	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	ELSE_2
0x4004f13	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1633	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	ELSE_2
0x4004f17	          0x4801ca	                            add rdx, rcx	      1633	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	ELSE_2
0x4004f1a	           0xfb612	                   movzx edx, byte [rdx]	      1633	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	ELSE_2
0x4004f1d	            0x89d1	                            mov ecx, edx	      1633	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	ELSE_2
0x4004f1f	         0xfb655b7	            movzx edx, byte [rbp - 0x49]	      1633	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	ELSE_2
0x4004f23	            0xf7d2	                                 not edx	      1633	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	ELSE_2
0x4004f25	            0x21ca	                            and edx, ecx	      1633	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	ELSE_2
0x4004f27	            0x8810	                      mov byte [rax], dl	      1633	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	ELSE_2
0x4004f29	        0x8345b801	               add dword [rbp - 0x48], 1	      1628	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x4004f2d	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1628	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x4004f30	          0x3b45a8	             cmp eax, dword [rbp - 0x58]	      1628	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x4004f33	     0xf8c79ffffff	                            jl 0x4004eb2	      1628	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x4004f39	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1636	state.c	FUNCTION_29	IF_1	CALL_2
0x4004f3d	        0x488b5050	            mov rdx, qword [rax + 0x50] 	      1636	state.c	FUNCTION_29	IF_1	CALL_2
0x4004f41	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1636	state.c	FUNCTION_29	IF_1	CALL_2
0x4004f45	          0x488b00	                    mov rax, qword [rax]	      1636	state.c	FUNCTION_29	IF_1	CALL_2
0x4004f48	          0x4889d6	                            mov rsi, rdx	      1636	state.c	FUNCTION_29	IF_1	CALL_2
0x4004f4b	          0x4889c7	                            mov rdi, rax	      1636	state.c	FUNCTION_29	IF_1	CALL_2
0x4004f4e	      0xe800000000	                          call 0x4004f53	      1636	state.c	FUNCTION_29	IF_1	CALL_2
0x4004f53	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1637	state.c	FUNCTION_29	IF_1
0x4004f57	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1637	state.c	FUNCTION_29	IF_1
0x4004f5b	        0x48895050	             mov qword [rax + 0x50], rdx	      1637	state.c	FUNCTION_29	IF_1
0x4004f5f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1640	state.c	FUNCTION_29	IF_4
0x4004f63	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1640	state.c	FUNCTION_29	IF_4
0x4004f66	          0x3b45ac	             cmp eax, dword [rbp - 0x54]	      1640	state.c	FUNCTION_29	IF_4
0x4004f69	     0xf84dd000000	                            je 0x400504c	      1640	state.c	FUNCTION_29	IF_4
0x4004f6f	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1641	state.c	FUNCTION_29	IF_4	CALL_3
0x4004f72	            0x4898	                                    cdqe	      1641	state.c	FUNCTION_29	IF_4	CALL_3
0x4004f74	    0x488d14850000	                        lea rdx, [rax*4]	      1641	state.c	FUNCTION_29	IF_4	CALL_3
0x4004f7c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1641	state.c	FUNCTION_29	IF_4	CALL_3
0x4004f80	          0x488b00	                    mov rax, qword [rax]	      1641	state.c	FUNCTION_29	IF_4	CALL_3
0x4004f83	          0x4889d6	                            mov rsi, rdx	      1641	state.c	FUNCTION_29	IF_4	CALL_3
0x4004f86	          0x4889c7	                            mov rdi, rax	      1641	state.c	FUNCTION_29	IF_4	CALL_3
0x4004f89	      0xe800000000	                          call 0x4004f8e	      1641	state.c	FUNCTION_29	IF_4	CALL_3
0x4004f8e	        0x488945f0	             mov qword [rbp - 0x10], rax	      1641	state.c	FUNCTION_29	IF_4	CALL_3
0x4004f92	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x4004f99	            0xeb31	                           jmp 0x4004fcc	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x4004f9b	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1645	state.c	FUNCTION_29	IF_4	FOR_3
0x4004f9e	            0x4898	                                    cdqe	      1645	state.c	FUNCTION_29	IF_4	FOR_3
0x4004fa0	    0x488d14850000	                        lea rdx, [rax*4]	      1645	state.c	FUNCTION_29	IF_4	FOR_3
0x4004fa8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1645	state.c	FUNCTION_29	IF_4	FOR_3
0x4004fac	          0x4801c2	                            add rdx, rax	      1645	state.c	FUNCTION_29	IF_4	FOR_3
0x4004faf	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1645	state.c	FUNCTION_29	IF_4	FOR_3
0x4004fb3	        0x488b4058	            mov rax, qword [rax + 0x58] 	      1645	state.c	FUNCTION_29	IF_4	FOR_3
0x4004fb7	          0x8b4dbc	             mov ecx, dword [rbp - 0x44]	      1645	state.c	FUNCTION_29	IF_4	FOR_3
0x4004fba	          0x4863c9	                         movsxd rcx, ecx	      1645	state.c	FUNCTION_29	IF_4	FOR_3
0x4004fbd	        0x48c1e102	                              shl rcx, 2	      1645	state.c	FUNCTION_29	IF_4	FOR_3
0x4004fc1	          0x4801c8	                            add rax, rcx	      1645	state.c	FUNCTION_29	IF_4	FOR_3
0x4004fc4	            0x8b00	                    mov eax, dword [rax]	      1645	state.c	FUNCTION_29	IF_4	FOR_3
0x4004fc6	            0x8902	                    mov dword [rdx], eax	      1645	state.c	FUNCTION_29	IF_4	FOR_3
0x4004fc8	        0x8345bc01	               add dword [rbp - 0x44], 1	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x4004fcc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x4004fd0	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x4004fd3	          0x3b45bc	             cmp eax, dword [rbp - 0x44]	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x4004fd6	            0x7e46	                           jle 0x400501e	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x4004fd8	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x4004fdb	          0x3b45ac	             cmp eax, dword [rbp - 0x54]	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x4004fde	            0x7cbb	                            jl 0x4004f9b	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x4004fe0	            0xeb3c	                           jmp 0x400501e	      1648	state.c	FUNCTION_29	IF_4	FOR_4
0x4004fe2	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1649	state.c	FUNCTION_29	IF_4	FOR_4
0x4004fe5	            0x4898	                                    cdqe	      1649	state.c	FUNCTION_29	IF_4	FOR_4
0x4004fe7	    0x488d14850000	                        lea rdx, [rax*4]	      1649	state.c	FUNCTION_29	IF_4	FOR_4
0x4004fef	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1649	state.c	FUNCTION_29	IF_4	FOR_4
0x4004ff3	          0x4801d0	                            add rax, rdx	      1649	state.c	FUNCTION_29	IF_4	FOR_4
0x4004ff6	           0xfb610	                   movzx edx, byte [rax]	      1649	state.c	FUNCTION_29	IF_4	FOR_4
0x4004ff9	          0x83e2fe	                     and edx, 0xfffffffe	      1649	state.c	FUNCTION_29	IF_4	FOR_4
0x4004ffc	            0x8810	                      mov byte [rax], dl	      1649	state.c	FUNCTION_29	IF_4	FOR_4
0x4004ffe	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1650	state.c	FUNCTION_29	IF_4	FOR_4
0x4005001	            0x4898	                                    cdqe	      1650	state.c	FUNCTION_29	IF_4	FOR_4
0x4005003	    0x488d14850000	                        lea rdx, [rax*4]	      1650	state.c	FUNCTION_29	IF_4	FOR_4
0x400500b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1650	state.c	FUNCTION_29	IF_4	FOR_4
0x400500f	          0x4801d0	                            add rax, rdx	      1650	state.c	FUNCTION_29	IF_4	FOR_4
0x4005012	           0xfb610	                   movzx edx, byte [rax]	      1650	state.c	FUNCTION_29	IF_4	FOR_4
0x4005015	          0x83e2f9	                     and edx, 0xfffffff9	      1650	state.c	FUNCTION_29	IF_4	FOR_4
0x4005018	            0x8810	                      mov byte [rax], dl	      1650	state.c	FUNCTION_29	IF_4	FOR_4
0x400501a	        0x8345bc01	               add dword [rbp - 0x44], 1	      1648	state.c	FUNCTION_29	IF_4	FOR_4
0x400501e	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1648	state.c	FUNCTION_29	IF_4	FOR_4
0x4005021	          0x3b45ac	             cmp eax, dword [rbp - 0x54]	      1648	state.c	FUNCTION_29	IF_4	FOR_4
0x4005024	            0x7cbc	                            jl 0x4004fe2	      1648	state.c	FUNCTION_29	IF_4	FOR_4
0x4005026	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1653	state.c	FUNCTION_29	IF_4	CALL_4
0x400502a	        0x488b5058	            mov rdx, qword [rax + 0x58] 	      1653	state.c	FUNCTION_29	IF_4	CALL_4
0x400502e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1653	state.c	FUNCTION_29	IF_4	CALL_4
0x4005032	          0x488b00	                    mov rax, qword [rax]	      1653	state.c	FUNCTION_29	IF_4	CALL_4
0x4005035	          0x4889d6	                            mov rsi, rdx	      1653	state.c	FUNCTION_29	IF_4	CALL_4
0x4005038	          0x4889c7	                            mov rdi, rax	      1653	state.c	FUNCTION_29	IF_4	CALL_4
0x400503b	      0xe800000000	                          call 0x4005040	      1653	state.c	FUNCTION_29	IF_4	CALL_4
0x4005040	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1654	state.c	FUNCTION_29	IF_4
0x4005044	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1654	state.c	FUNCTION_29	IF_4
0x4005048	        0x48895058	             mov qword [rax + 0x58], rdx	      1654	state.c	FUNCTION_29	IF_4
0x400504c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1657	state.c	FUNCTION_29
0x4005050	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      1657	state.c	FUNCTION_29
0x4005053	          0x895028	             mov dword [rax + 0x28], edx	      1657	state.c	FUNCTION_29
0x4005056	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1658	state.c	FUNCTION_29
0x400505a	          0x8b55a8	             mov edx, dword [rbp - 0x58]	      1658	state.c	FUNCTION_29
0x400505d	          0x89502c	             mov dword [rax + 0x2c], edx	      1658	state.c	FUNCTION_29
0x4005060	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1660	state.c	FUNCTION_29	IF_5
0x4005064	          0x8b4040	            mov eax, dword [rax + 0x40] 	      1660	state.c	FUNCTION_29	IF_5
0x4005067	            0x85c0	                           test eax, eax	      1660	state.c	FUNCTION_29	IF_5
0x4005069	            0x7820	                            js 0x400508b	      1660	state.c	FUNCTION_29	IF_5
0x400506b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1661	state.c	FUNCTION_29	IF_5
0x400506f	          0x8b5040	            mov edx, dword [rax + 0x40] 	      1661	state.c	FUNCTION_29	IF_5
0x4005072	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1661	state.c	FUNCTION_29	IF_5
0x4005076	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1661	state.c	FUNCTION_29	IF_5
0x4005079	            0x39c2	                            cmp edx, eax	      1661	state.c	FUNCTION_29	IF_5
0x400507b	            0x7e0e	                           jle 0x400508b	      1661	state.c	FUNCTION_29	IF_5
0x400507d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1661	state.c	FUNCTION_29	IF_5
0x4005081	          0x8b5028	            mov edx, dword [rax + 0x28] 	      1661	state.c	FUNCTION_29	IF_5
0x4005084	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1661	state.c	FUNCTION_29	IF_5
0x4005088	          0x895040	             mov dword [rax + 0x40], edx	      1661	state.c	FUNCTION_29	IF_5
0x400508b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1662	state.c	FUNCTION_29	IF_6
0x400508f	          0x8b4048	            mov eax, dword [rax + 0x48] 	      1662	state.c	FUNCTION_29	IF_6
0x4005092	            0x85c0	                           test eax, eax	      1662	state.c	FUNCTION_29	IF_6
0x4005094	            0x7820	                            js 0x40050b6	      1662	state.c	FUNCTION_29	IF_6
0x4005096	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1663	state.c	FUNCTION_29	IF_6
0x400509a	          0x8b5048	            mov edx, dword [rax + 0x48] 	      1663	state.c	FUNCTION_29	IF_6
0x400509d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1663	state.c	FUNCTION_29	IF_6
0x40050a1	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1663	state.c	FUNCTION_29	IF_6
0x40050a4	            0x39c2	                            cmp edx, eax	      1663	state.c	FUNCTION_29	IF_6
0x40050a6	            0x7e0e	                           jle 0x40050b6	      1663	state.c	FUNCTION_29	IF_6
0x40050a8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1663	state.c	FUNCTION_29	IF_6
0x40050ac	          0x8b502c	            mov edx, dword [rax + 0x2c] 	      1663	state.c	FUNCTION_29	IF_6
0x40050af	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1663	state.c	FUNCTION_29	IF_6
0x40050b3	          0x895048	             mov dword [rax + 0x48], edx	      1663	state.c	FUNCTION_29	IF_6
0x40050b6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1665	state.c	FUNCTION_29	IF_7
0x40050ba	        0x488b4008	                mov rax, qword [rax + 8]	      1665	state.c	FUNCTION_29	IF_7
0x40050be	          0x4885c0	                           test rax, rax	      1665	state.c	FUNCTION_29	IF_7
0x40050c1	            0x7431	                            je 0x40050f4	      1665	state.c	FUNCTION_29	IF_7
0x40050c3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1665	state.c	FUNCTION_29	IF_7
0x40050c7	        0x488b4008	                mov rax, qword [rax + 8]	      1665	state.c	FUNCTION_29	IF_7
0x40050cb	        0x488b4048	            mov rax, qword [rax + 0x48] 	      1665	state.c	FUNCTION_29	IF_7
0x40050cf	          0x4885c0	                           test rax, rax	      1665	state.c	FUNCTION_29	IF_7
0x40050d2	            0x7420	                            je 0x40050f4	      1665	state.c	FUNCTION_29	IF_7
0x40050d4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1666	state.c	FUNCTION_29	IF_7
0x40050d8	        0x488b4008	                mov rax, qword [rax + 8]	      1666	state.c	FUNCTION_29	IF_7
0x40050dc	        0x488b4048	            mov rax, qword [rax + 0x48] 	      1666	state.c	FUNCTION_29	IF_7
0x40050e0	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1666	state.c	FUNCTION_29	IF_7
0x40050e4	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	      1666	state.c	FUNCTION_29	IF_7
0x40050e8	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      1666	state.c	FUNCTION_29	IF_7
0x40050ec	          0x8b75a8	             mov esi, dword [rbp - 0x58]	      1666	state.c	FUNCTION_29	IF_7
0x40050ef	          0x8b7dac	             mov edi, dword [rbp - 0x54]	      1666	state.c	FUNCTION_29	IF_7
0x40050f2	            0xffd0	                                call rax	      1666	state.c	FUNCTION_29	IF_7
0x40050f4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1668	state.c	FUNCTION_29	IF_8
0x40050f8	          0x8b4038	            mov eax, dword [rax + 0x38] 	      1668	state.c	FUNCTION_29	IF_8
0x40050fb	            0x85c0	                           test eax, eax	      1668	state.c	FUNCTION_29	IF_8
0x40050fd	            0x742d	                            je 0x400512c	      1668	state.c	FUNCTION_29	IF_8
0x40050ff	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1668	state.c	FUNCTION_29	IF_8
0x4005103	          0x8b4034	            mov eax, dword [rax + 0x34] 	      1668	state.c	FUNCTION_29	IF_8
0x4005106	          0x8b55a8	             mov edx, dword [rbp - 0x58]	      1668	state.c	FUNCTION_29	IF_8
0x4005109	          0x83ea01	                              sub edx, 1	      1668	state.c	FUNCTION_29	IF_8
0x400510c	            0x39d0	                            cmp eax, edx	      1668	state.c	FUNCTION_29	IF_8
0x400510e	            0x7d1c	                           jge 0x400512c	      1668	state.c	FUNCTION_29	IF_8
0x4005110	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1669	state.c	FUNCTION_29	IF_8
0x4005114	    0xc74038000000	               mov dword [rax + 0x38], 0	      1669	state.c	FUNCTION_29	IF_8
0x400511b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1670	state.c	FUNCTION_29	IF_8
0x400511f	          0x8b4034	            mov eax, dword [rax + 0x34] 	      1670	state.c	FUNCTION_29	IF_8
0x4005122	          0x8d5001	                      lea edx, [rax + 1]	      1670	state.c	FUNCTION_29	IF_8
0x4005125	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1670	state.c	FUNCTION_29	IF_8
0x4005129	          0x895034	             mov dword [rax + 0x34], edx	      1670	state.c	FUNCTION_29	IF_8
0x400512c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1673	state.c	FUNCTION_29
0x4005130	          0x8b5030	            mov edx, dword [rax + 0x30] 	      1673	state.c	FUNCTION_29
0x4005133	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1673	state.c	FUNCTION_29
0x4005136	             0x1c2	                            add edx, eax	      1673	state.c	FUNCTION_29
0x4005138	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1673	state.c	FUNCTION_29
0x400513c	          0x895030	             mov dword [rax + 0x30], edx	      1673	state.c	FUNCTION_29
0x400513f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1674	state.c	FUNCTION_29
0x4005143	          0x8b5034	            mov edx, dword [rax + 0x34] 	      1674	state.c	FUNCTION_29
0x4005146	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1674	state.c	FUNCTION_29
0x4005149	             0x1c2	                            add edx, eax	      1674	state.c	FUNCTION_29
0x400514b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1674	state.c	FUNCTION_29
0x400514f	          0x895034	             mov dword [rax + 0x34], edx	      1674	state.c	FUNCTION_29
0x4005152	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1676	state.c	FUNCTION_29	IF_9
0x4005156	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1676	state.c	FUNCTION_29	IF_9
0x4005159	          0x3b45ac	             cmp eax, dword [rbp - 0x54]	      1676	state.c	FUNCTION_29	IF_9
0x400515c	            0x7c0d	                            jl 0x400516b	      1676	state.c	FUNCTION_29	IF_9
0x400515e	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1677	state.c	FUNCTION_29	IF_9
0x4005161	          0x8d50ff	                      lea edx, [rax - 1]	      1677	state.c	FUNCTION_29	IF_9
0x4005164	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1677	state.c	FUNCTION_29	IF_9
0x4005168	          0x895030	             mov dword [rax + 0x30], edx	      1677	state.c	FUNCTION_29	IF_9
0x400516b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1678	state.c	FUNCTION_29	IF_10
0x400516f	          0x8b4034	            mov eax, dword [rax + 0x34] 	      1678	state.c	FUNCTION_29	IF_10
0x4005172	          0x3b45a8	             cmp eax, dword [rbp - 0x58]	      1678	state.c	FUNCTION_29	IF_10
0x4005175	            0x7c0d	                            jl 0x4005184	      1678	state.c	FUNCTION_29	IF_10
0x4005177	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      1679	state.c	FUNCTION_29	IF_10
0x400517a	          0x8d50ff	                      lea edx, [rax - 1]	      1679	state.c	FUNCTION_29	IF_10
0x400517d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1679	state.c	FUNCTION_29	IF_10
0x4005181	          0x895034	             mov dword [rax + 0x34], edx	      1679	state.c	FUNCTION_29	IF_10
0x4005184	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	      1681	state.c	FUNCTION_29	CALL_5
0x4005188	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1681	state.c	FUNCTION_29	CALL_5
0x400518c	      0xba01000000	                              mov edx, 1	      1681	state.c	FUNCTION_29	CALL_5
0x4005191	          0x4889ce	                            mov rsi, rcx	      1681	state.c	FUNCTION_29	CALL_5
0x4005194	          0x4889c7	                            mov rdi, rax	      1681	state.c	FUNCTION_29	CALL_5
0x4005197	      0xe8acafffff	                   call sym.updatecursor	      1681	state.c	FUNCTION_29	CALL_5
0x400519c	      0xb801000000	                              mov eax, 1	      1683	state.c	FUNCTION_29
0x40051a1	        0x488b75f8	                mov rsi, qword [rbp - 8]	      1684	state.c	FUNCTION_29
0x40051a5	    0x644833342528	                xor rsi, qword fs:[0x28]	      1684	state.c	FUNCTION_29
0x40051ae	            0x7405	                            je 0x40051b5	      1684	state.c	FUNCTION_29
0x40051b0	      0xe800000000	                          call 0x40051b5	      1684	state.c	FUNCTION_29
0x40051b5	              0xc9	                                   leave	      1684	state.c	FUNCTION_29
0x40051b6	              0xc3	                                     ret	      1684	state.c	FUNCTION_29
vterm_state_get_lineinfo	functions,0:CALL,0:DO,0:WHILE,0:IF,0:ELSE,0:SWITCH,0:FOR,0	12
0x4005ac7	              0x55	                                push rbp	      1915	state.c	FUNCTION_41
0x4005ac8	          0x4889e5	                            mov rbp, rsp	      1915	state.c	FUNCTION_41
0x4005acb	        0x48897df8	                mov qword [rbp - 8], rdi	      1915	state.c	FUNCTION_41
0x4005acf	          0x8975f4	              mov dword [rbp - 0xc], esi	      1915	state.c	FUNCTION_41
0x4005ad2	        0x488b45f8	                mov rax, qword [rbp - 8]	      1916	state.c	FUNCTION_41
0x4005ad6	        0x488b4058	            mov rax, qword [rax + 0x58] 	      1916	state.c	FUNCTION_41
0x4005ada	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1916	state.c	FUNCTION_41
0x4005add	          0x4863d2	                         movsxd rdx, edx	      1916	state.c	FUNCTION_41
0x4005ae0	        0x48c1e202	                              shl rdx, 2	      1916	state.c	FUNCTION_41
0x4005ae4	          0x4801d0	                            add rax, rdx	      1916	state.c	FUNCTION_41
0x4005ae7	              0x5d	                                 pop rbp	      1917	state.c	FUNCTION_41
0x4005ae8	              0xc3	                                     ret	      1917	state.c	FUNCTION_41
putglyph	functions,0:CALL,1:DO,0:WHILE,0:IF,2:ELSE,0:SWITCH,0:FOR,0	77
0x4000040	              0x55	                                push rbp	        17	state.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	        17	state.c	FUNCTION_1
0x4000044	        0x4883ec40	                           sub rsp, 0x40	        17	state.c	FUNCTION_1
0x4000048	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        17	state.c	FUNCTION_1
0x400004c	        0x488975d0	             mov qword [rbp - 0x30], rsi	        17	state.c	FUNCTION_1
0x4000050	          0x8955cc	             mov dword [rbp - 0x34], edx	        17	state.c	FUNCTION_1
0x4000053	        0x48894dc0	             mov qword [rbp - 0x40], rcx	        17	state.c	FUNCTION_1
0x4000057	    0x64488b042528	                mov rax, qword fs:[0x28]	        17	state.c	FUNCTION_1
0x4000060	        0x488945f8	                mov qword [rbp - 8], rax	        17	state.c	FUNCTION_1
0x4000064	            0x31c0	                            xor eax, eax	        17	state.c	FUNCTION_1
0x4000066	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        19	state.c	FUNCTION_1
0x400006a	        0x488945e0	             mov qword [rbp - 0x20], rax	        19	state.c	FUNCTION_1
0x400006e	          0x8b45cc	             mov eax, dword [rbp - 0x34]	        20	state.c	FUNCTION_1
0x4000071	          0x8945e8	             mov dword [rbp - 0x18], eax	        20	state.c	FUNCTION_1
0x4000074	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        21	state.c	FUNCTION_1
0x4000078	     0xfb6807c0100	          movzx eax, byte [rax + 0x17c] 	        21	state.c	FUNCTION_1
0x400007f	          0x83e001	                              and eax, 1	        21	state.c	FUNCTION_1
0x4000082	          0x83e001	                              and eax, 1	        21	state.c	FUNCTION_1
0x4000085	            0x89c2	                            mov edx, eax	        21	state.c	FUNCTION_1
0x4000087	         0xfb645ec	            movzx eax, byte [rbp - 0x14]	        21	state.c	FUNCTION_1
0x400008b	          0x83e0fe	                     and eax, 0xfffffffe	        21	state.c	FUNCTION_1
0x400008e	             0x9d0	                             or eax, edx	        21	state.c	FUNCTION_1
0x4000090	          0x8845ec	               mov byte [rbp - 0x14], al	        21	state.c	FUNCTION_1
0x4000093	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        22	state.c	FUNCTION_1
0x4000097	        0x488b4058	            mov rax, qword [rax + 0x58] 	        22	state.c	FUNCTION_1
0x400009b	          0x8b55c0	             mov edx, dword [rbp - 0x40]	        22	state.c	FUNCTION_1
0x400009e	          0x4863d2	                         movsxd rdx, edx	        22	state.c	FUNCTION_1
0x40000a1	        0x48c1e202	                              shl rdx, 2	        22	state.c	FUNCTION_1
0x40000a5	          0x4801d0	                            add rax, rdx	        22	state.c	FUNCTION_1
0x40000a8	           0xfb600	                   movzx eax, byte [rax]	        22	state.c	FUNCTION_1
0x40000ab	          0x83e001	                              and eax, 1	        22	state.c	FUNCTION_1
0x40000ae	          0x83e001	                              and eax, 1	        22	state.c	FUNCTION_1
0x40000b1	          0x8d1400	                    lea edx, [rax + rax]	        22	state.c	FUNCTION_1
0x40000b4	         0xfb645ec	            movzx eax, byte [rbp - 0x14]	        22	state.c	FUNCTION_1
0x40000b8	          0x83e0fd	                     and eax, 0xfffffffd	        22	state.c	FUNCTION_1
0x40000bb	             0x9d0	                             or eax, edx	        22	state.c	FUNCTION_1
0x40000bd	          0x8845ec	               mov byte [rbp - 0x14], al	        22	state.c	FUNCTION_1
0x40000c0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        23	state.c	FUNCTION_1
0x40000c4	        0x488b4058	            mov rax, qword [rax + 0x58] 	        23	state.c	FUNCTION_1
0x40000c8	          0x8b55c0	             mov edx, dword [rbp - 0x40]	        23	state.c	FUNCTION_1
0x40000cb	          0x4863d2	                         movsxd rdx, edx	        23	state.c	FUNCTION_1
0x40000ce	        0x48c1e202	                              shl rdx, 2	        23	state.c	FUNCTION_1
0x40000d2	          0x4801d0	                            add rax, rdx	        23	state.c	FUNCTION_1
0x40000d5	           0xfb600	                   movzx eax, byte [rax]	        23	state.c	FUNCTION_1
0x40000d8	            0xd0e8	                               shr al, 1	        23	state.c	FUNCTION_1
0x40000da	          0x83e003	                              and eax, 3	        23	state.c	FUNCTION_1
0x40000dd	          0x83e003	                              and eax, 3	        23	state.c	FUNCTION_1
0x40000e0	    0x8d1485000000	                        lea edx, [rax*4]	        23	state.c	FUNCTION_1
0x40000e7	         0xfb645ec	            movzx eax, byte [rbp - 0x14]	        23	state.c	FUNCTION_1
0x40000eb	          0x83e0f3	                     and eax, 0xfffffff3	        23	state.c	FUNCTION_1
0x40000ee	             0x9d0	                             or eax, edx	        23	state.c	FUNCTION_1
0x40000f0	          0x8845ec	               mov byte [rbp - 0x14], al	        23	state.c	FUNCTION_1
0x40000f3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        25	state.c	FUNCTION_1	IF_1
0x40000f7	        0x488b4008	                mov rax, qword [rax + 8]	        25	state.c	FUNCTION_1	IF_1
0x40000fb	          0x4885c0	                           test rax, rax	        25	state.c	FUNCTION_1	IF_1
0x40000fe	            0x7432	                            je 0x4000132	        25	state.c	FUNCTION_1	IF_1
0x4000100	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        25	state.c	FUNCTION_1	IF_1
0x4000104	        0x488b4008	                mov rax, qword [rax + 8]	        25	state.c	FUNCTION_1	IF_1
0x4000108	          0x488b00	                    mov rax, qword [rax]	        25	state.c	FUNCTION_1	IF_1
0x400010b	          0x4885c0	                           test rax, rax	        25	state.c	FUNCTION_1	IF_1
0x400010e	            0x7422	                            je 0x4000132	        25	state.c	FUNCTION_1	IF_1
0x4000110	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        26	state.c	FUNCTION_1	IF_1	IF_2
0x4000114	        0x488b4008	                mov rax, qword [rax + 8]	        26	state.c	FUNCTION_1	IF_1	IF_2
0x4000118	          0x488b00	                    mov rax, qword [rax]	        26	state.c	FUNCTION_1	IF_1	IF_2
0x400011b	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	        26	state.c	FUNCTION_1	IF_1	IF_2
0x400011f	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	        26	state.c	FUNCTION_1	IF_1	IF_2
0x4000123	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	        26	state.c	FUNCTION_1	IF_1	IF_2
0x4000127	        0x488d4de0	                   lea rcx, [rbp - 0x20]	        26	state.c	FUNCTION_1	IF_1	IF_2
0x400012b	          0x4889cf	                            mov rdi, rcx	        26	state.c	FUNCTION_1	IF_1	IF_2
0x400012e	            0xffd0	                                call rax	        26	state.c	FUNCTION_1	IF_1	IF_2
0x4000130	            0x85c0	                           test eax, eax	        26	state.c	FUNCTION_1	IF_1	IF_2
0x4000132	        0x488b45f8	                mov rax, qword [rbp - 8]	        30	state.c	FUNCTION_1
0x4000136	    0x644833042528	                xor rax, qword fs:[0x28]	        30	state.c	FUNCTION_1
0x400013f	            0x7405	                            je 0x4000146	        30	state.c	FUNCTION_1
0x4000141	      0xe800000000	                          call 0x4000146	        30	state.c	FUNCTION_1
0x4000146	              0xc9	                                   leave	        30	state.c	FUNCTION_1
0x4000147	              0xc3	                                     ret	        30	state.c	FUNCTION_1
