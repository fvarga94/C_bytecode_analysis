gui_clear_block	IF,1:functions,0:ELSE,0:CALL,2:SWITCH,0:WHILE,0:FOR,0:DO,0	34
0x4001e55	              0x55	                                push rbp	      1739	gui.c	ELSE_1	FUNCTION_28
0x4001e56	          0x4889e5	                            mov rbp, rsp	      1739	gui.c	ELSE_1	FUNCTION_28
0x4001e59	        0x4883ec10	                           sub rsp, 0x10	      1739	gui.c	ELSE_1	FUNCTION_28
0x4001e5d	          0x897dfc	                mov dword [rbp - 4], edi	      1739	gui.c	ELSE_1	FUNCTION_28
0x4001e60	          0x8975f8	                mov dword [rbp - 8], esi	      1739	gui.c	ELSE_1	FUNCTION_28
0x4001e63	          0x8955f4	              mov dword [rbp - 0xc], edx	      1739	gui.c	ELSE_1	FUNCTION_28
0x4001e66	          0x894df0	             mov dword [rbp - 0x10], ecx	      1739	gui.c	ELSE_1	FUNCTION_28
0x4001e69	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1741	gui.c	ELSE_1	FUNCTION_28	CALL_1
0x4001e6c	          0x8b45fc	                mov eax, dword [rbp - 4]	      1741	gui.c	ELSE_1	FUNCTION_28	CALL_1
0x4001e6f	            0x89d6	                            mov esi, edx	      1741	gui.c	ELSE_1	FUNCTION_28	CALL_1
0x4001e71	            0x89c7	                            mov edi, eax	      1741	gui.c	ELSE_1	FUNCTION_28	CALL_1
0x4001e73	      0xe800000000	                          call 0x4001e78	      1741	gui.c	ELSE_1	FUNCTION_28	CALL_1
0x4001e78	          0x8b4df0	             mov ecx, dword [rbp - 0x10]	      1743	gui.c	ELSE_1	FUNCTION_28	CALL_2
0x4001e7b	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1743	gui.c	ELSE_1	FUNCTION_28	CALL_2
0x4001e7e	          0x8b75f8	                mov esi, dword [rbp - 8]	      1743	gui.c	ELSE_1	FUNCTION_28	CALL_2
0x4001e81	          0x8b45fc	                mov eax, dword [rbp - 4]	      1743	gui.c	ELSE_1	FUNCTION_28	CALL_2
0x4001e84	            0x89c7	                            mov edi, eax	      1743	gui.c	ELSE_1	FUNCTION_28	CALL_2
0x4001e86	      0xe800000000	                          call 0x4001e8b	      1743	gui.c	ELSE_1	FUNCTION_28	CALL_2
0x4001e8b	    0x8b0500000000	            mov eax, dword [0x04001e91] 	      1746	gui.c	ELSE_1	FUNCTION_28	IF_1
0x4001e91	          0x3b45fc	                cmp eax, dword [rbp - 4]	      1746	gui.c	ELSE_1	FUNCTION_28	IF_1
0x4001e94	            0x7c28	                            jl 0x4001ebe	      1746	gui.c	ELSE_1	FUNCTION_28	IF_1
0x4001e96	    0x8b0500000000	            mov eax, dword [0x04001e9c] 	      1746	gui.c	ELSE_1	FUNCTION_28	IF_1
0x4001e9c	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	      1746	gui.c	ELSE_1	FUNCTION_28	IF_1
0x4001e9f	            0x7f1d	                            jg 0x4001ebe	      1746	gui.c	ELSE_1	FUNCTION_28	IF_1
0x4001ea1	    0x8b0500000000	            mov eax, dword [0x04001ea7] 	      1747	gui.c	ELSE_1	FUNCTION_28	IF_1
0x4001ea7	          0x3b45f8	                cmp eax, dword [rbp - 8]	      1747	gui.c	ELSE_1	FUNCTION_28	IF_1
0x4001eaa	            0x7c12	                            jl 0x4001ebe	      1747	gui.c	ELSE_1	FUNCTION_28	IF_1
0x4001eac	    0x8b0500000000	            mov eax, dword [0x04001eb2] 	      1747	gui.c	ELSE_1	FUNCTION_28	IF_1
0x4001eb2	          0x3b45f0	             cmp eax, dword [rbp - 0x10]	      1747	gui.c	ELSE_1	FUNCTION_28	IF_1
0x4001eb5	            0x7f07	                            jg 0x4001ebe	      1747	gui.c	ELSE_1	FUNCTION_28	IF_1
0x4001eb7	    0xc60500000000	                mov byte [0x04001ebe], 0	      1748	gui.c	ELSE_1	FUNCTION_28	IF_1
0x4001ebe	              0x90	                                     nop	      1749	gui.c	ELSE_1	FUNCTION_28
0x4001ebf	              0xc9	                                   leave	      1749	gui.c	ELSE_1	FUNCTION_28
0x4001ec0	              0xc3	                                     ret	      1749	gui.c	ELSE_1	FUNCTION_28
ex_gui	IF,3:functions,0:ELSE,0:CALL,7:SWITCH,0:WHILE,0:FOR,0:DO,0	71
0x400671c	              0x55	                                push rbp	      4989	gui.c	FUNCTION_82
0x400671d	          0x4889e5	                            mov rbp, rsp	      4989	gui.c	FUNCTION_82
0x4006720	        0x4883ec20	                           sub rsp, 0x20	      4989	gui.c	FUNCTION_82
0x4006724	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4989	gui.c	FUNCTION_82
0x4006728	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4990	gui.c	FUNCTION_82
0x400672c	          0x488b00	                    mov rax, qword [rax]	      4990	gui.c	FUNCTION_82
0x400672f	        0x488945f8	                mov qword [rbp - 8], rax	      4990	gui.c	FUNCTION_82
0x4006733	        0x488b45f8	                mov rax, qword [rbp - 8]	      4997	gui.c	FUNCTION_82	IF_1
0x4006737	           0xfb600	                   movzx eax, byte [rax]	      4997	gui.c	FUNCTION_82	IF_1
0x400673a	            0x3c2d	                            cmp al, 0x2d	      4997	gui.c	FUNCTION_82	IF_1
0x400673c	     0xf8581000000	                           jne 0x40067c3	      4997	gui.c	FUNCTION_82	IF_1
0x4006742	        0x488b45f8	                mov rax, qword [rbp - 8]	      4998	gui.c	FUNCTION_82	IF_1
0x4006746	        0x4883c001	                              add rax, 1	      4998	gui.c	FUNCTION_82	IF_1
0x400674a	           0xfb600	                   movzx eax, byte [rax]	      4998	gui.c	FUNCTION_82	IF_1
0x400674d	            0x3c66	                            cmp al, 0x66	      4998	gui.c	FUNCTION_82	IF_1
0x400674f	            0x740f	                            je 0x4006760	      4998	gui.c	FUNCTION_82	IF_1
0x4006751	        0x488b45f8	                mov rax, qword [rbp - 8]	      4998	gui.c	FUNCTION_82	IF_1
0x4006755	        0x4883c001	                              add rax, 1	      4998	gui.c	FUNCTION_82	IF_1
0x4006759	           0xfb600	                   movzx eax, byte [rax]	      4998	gui.c	FUNCTION_82	IF_1
0x400675c	            0x3c62	                            cmp al, 0x62	      4998	gui.c	FUNCTION_82	IF_1
0x400675e	            0x7563	                           jne 0x40067c3	      4998	gui.c	FUNCTION_82	IF_1
0x4006760	        0x488b45f8	                mov rax, qword [rbp - 8]	      4999	gui.c	FUNCTION_82	IF_1	CALL_1
0x4006764	        0x4883c002	                              add rax, 2	      4999	gui.c	FUNCTION_82	IF_1	CALL_1
0x4006768	           0xfb600	                   movzx eax, byte [rax]	      4999	gui.c	FUNCTION_82	IF_1	CALL_1
0x400676b	            0x84c0	                             test al, al	      4999	gui.c	FUNCTION_82	IF_1	CALL_1
0x400676d	            0x741e	                            je 0x400678d	      4999	gui.c	FUNCTION_82	IF_1	CALL_1
0x400676f	        0x488b45f8	                mov rax, qword [rbp - 8]	      4999	gui.c	FUNCTION_82	IF_1	CALL_1
0x4006773	        0x4883c002	                              add rax, 2	      4999	gui.c	FUNCTION_82	IF_1	CALL_1
0x4006777	           0xfb600	                   movzx eax, byte [rax]	      4999	gui.c	FUNCTION_82	IF_1	CALL_1
0x400677a	            0x3c20	                            cmp al, 0x20	      4999	gui.c	FUNCTION_82	IF_1	CALL_1
0x400677c	            0x740f	                            je 0x400678d	      4999	gui.c	FUNCTION_82	IF_1	CALL_1
0x400677e	        0x488b45f8	                mov rax, qword [rbp - 8]	      4999	gui.c	FUNCTION_82	IF_1	CALL_1
0x4006782	        0x4883c002	                              add rax, 2	      4999	gui.c	FUNCTION_82	IF_1	CALL_1
0x4006786	           0xfb600	                   movzx eax, byte [rax]	      4999	gui.c	FUNCTION_82	IF_1	CALL_1
0x4006789	            0x3c09	                               cmp al, 9	      4999	gui.c	FUNCTION_82	IF_1	CALL_1
0x400678b	            0x7536	                           jne 0x40067c3	      4999	gui.c	FUNCTION_82	IF_1	CALL_1
0x400678d	        0x488b45f8	                mov rax, qword [rbp - 8]	      5001	gui.c	FUNCTION_82	IF_1
0x4006791	        0x4883c001	                              add rax, 1	      5001	gui.c	FUNCTION_82	IF_1
0x4006795	           0xfb600	                   movzx eax, byte [rax]	      5001	gui.c	FUNCTION_82	IF_1
0x4006798	            0x3c62	                            cmp al, 0x62	      5001	gui.c	FUNCTION_82	IF_1
0x400679a	           0xf94c0	                                 sete al	      5001	gui.c	FUNCTION_82	IF_1
0x400679d	           0xfb6c0	                           movzx eax, al	      5001	gui.c	FUNCTION_82	IF_1
0x40067a0	    0x890500000000	            mov dword [0x040067a6], eax 	      5001	gui.c	FUNCTION_82	IF_1
0x40067a6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5002	gui.c	FUNCTION_82	IF_1	CALL_2
0x40067aa	          0x488b00	                    mov rax, qword [rax]	      5002	gui.c	FUNCTION_82	IF_1	CALL_2
0x40067ad	        0x4883c002	                              add rax, 2	      5002	gui.c	FUNCTION_82	IF_1	CALL_2
0x40067b1	          0x4889c7	                            mov rdi, rax	      5002	gui.c	FUNCTION_82	IF_1	CALL_2
0x40067b4	      0xe800000000	                          call 0x40067b9	      5002	gui.c	FUNCTION_82	IF_1	CALL_2
0x40067b9	          0x4889c2	                            mov rdx, rax	      5002	gui.c	FUNCTION_82	IF_1	CALL_2
0x40067bc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5002	gui.c	FUNCTION_82	IF_1	CALL_2
0x40067c0	          0x488910	                    mov qword [rax], rdx	      5002	gui.c	FUNCTION_82	IF_1	CALL_2
0x40067c3	    0x8b0500000000	            mov eax, dword [0x040067c9] 	      5004	gui.c	FUNCTION_82	IF_2
0x40067c9	            0x85c0	                           test eax, eax	      5004	gui.c	FUNCTION_82	IF_2
0x40067cb	            0x750f	                           jne 0x40067dc	      5004	gui.c	FUNCTION_82	IF_2
0x40067cd	      0xe800000000	                          call 0x40067d2	      5008	gui.c	FUNCTION_82	IF_2	CALL_3
0x40067d2	      0xe800000000	                          call 0x40067d7	      5009	gui.c	FUNCTION_82	IF_2	CALL_4
0x40067d7	      0xe800000000	                          call 0x40067dc	      5011	gui.c	FUNCTION_82	IF_2	CALL_5
0x40067dc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5014	gui.c	FUNCTION_82	IF_3	CALL_6
0x40067e0	          0x488b00	                    mov rax, qword [rax]	      5014	gui.c	FUNCTION_82	IF_3	CALL_6
0x40067e3	           0xfb600	                   movzx eax, byte [rax]	      5014	gui.c	FUNCTION_82	IF_3	CALL_6
0x40067e6	           0xfb6c0	                           movzx eax, al	      5014	gui.c	FUNCTION_82	IF_3	CALL_6
0x40067e9	            0x89c7	                            mov edi, eax	      5014	gui.c	FUNCTION_82	IF_3	CALL_6
0x40067eb	      0xe800000000	                          call 0x40067f0	      5014	gui.c	FUNCTION_82	IF_3	CALL_6
0x40067f0	            0x85c0	                           test eax, eax	      5014	gui.c	FUNCTION_82	IF_3	CALL_6
0x40067f2	            0x750c	                           jne 0x4006800	      5014	gui.c	FUNCTION_82	IF_3	CALL_6
0x40067f4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5015	gui.c	FUNCTION_82	CALL_7
0x40067f8	          0x4889c7	                            mov rdi, rax	      5015	gui.c	FUNCTION_82	CALL_7
0x40067fb	      0xe800000000	                          call 0x4006800	      5015	gui.c	FUNCTION_82	CALL_7
0x4006800	              0x90	                                     nop	      5016	gui.c	FUNCTION_82
0x4006801	              0xc9	                                   leave	      5016	gui.c	FUNCTION_82
0x4006802	              0xc3	                                     ret	      5016	gui.c	FUNCTION_82
gui_init_which_components	IF,25:functions,1:ELSE,2:CALL,18:SWITCH,1:WHILE,0:FOR,3:DO,0	293
0x4003f47	              0x55	                                push rbp	      3438	gui.c	FUNCTION_53
0x4003f48	          0x4889e5	                            mov rbp, rsp	      3438	gui.c	FUNCTION_53
0x4003f4b	              0x53	                                push rbx	      3438	gui.c	FUNCTION_53
0x4003f4c	        0x4883ec68	                           sub rsp, 0x68	      3438	gui.c	FUNCTION_53
0x4003f50	        0x48897d98	             mov qword [rbp - 0x68], rdi	      3438	gui.c	FUNCTION_53
0x4003f54	    0xc745a8000000	               mov dword [rbp - 0x58], 0	      3444	gui.c	FUNCTION_53
0x4003f5b	    0xc745ac000000	               mov dword [rbp - 0x54], 0	      3455	gui.c	FUNCTION_53
0x4003f62	      0x48837d9800	               cmp qword [rbp - 0x68], 0	      3469	gui.c	FUNCTION_53	IF_1
0x4003f67	            0x747a	                            je 0x4003fe3	      3469	gui.c	FUNCTION_53	IF_1
0x4003f69	    0x8b0500000000	            mov eax, dword [0x04003f6f] 	      3469	gui.c	FUNCTION_53	IF_1
0x4003f6f	            0x85c0	                           test eax, eax	      3469	gui.c	FUNCTION_53	IF_1
0x4003f71	            0x7470	                            je 0x4003fe3	      3469	gui.c	FUNCTION_53	IF_1
0x4003f73	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3474	gui.c	FUNCTION_53	IF_1	CALL_1
0x4003f77	      0xbe67000000	                           mov esi, 0x67	      3474	gui.c	FUNCTION_53	IF_1	CALL_1
0x4003f7c	          0x4889c7	                            mov rdi, rax	      3474	gui.c	FUNCTION_53	IF_1	CALL_1
0x4003f7f	      0xe800000000	                          call 0x4003f84	      3474	gui.c	FUNCTION_53	IF_1	CALL_1
0x4003f84	          0x4885c0	                           test rax, rax	      3474	gui.c	FUNCTION_53	IF_1	CALL_1
0x4003f87	           0xf95c0	                                setne al	      3474	gui.c	FUNCTION_53	IF_1	CALL_1
0x4003f8a	           0xfb6c0	                           movzx eax, al	      3474	gui.c	FUNCTION_53	IF_1	CALL_1
0x4003f8d	          0x8945bc	             mov dword [rbp - 0x44], eax	      3474	gui.c	FUNCTION_53	IF_1	CALL_1
0x4003f90	    0x488b05000000	            mov rax, qword [0x04003f97] 	      3475	gui.c	FUNCTION_53	IF_1	CALL_2
0x4003f97	      0xbe67000000	                           mov esi, 0x67	      3475	gui.c	FUNCTION_53	IF_1	CALL_2
0x4003f9c	          0x4889c7	                            mov rdi, rax	      3475	gui.c	FUNCTION_53	IF_1	CALL_2
0x4003f9f	      0xe800000000	                          call 0x4003fa4	      3475	gui.c	FUNCTION_53	IF_1	CALL_2
0x4003fa4	          0x4885c0	                           test rax, rax	      3475	gui.c	FUNCTION_53	IF_1	CALL_2
0x4003fa7	           0xf95c0	                                setne al	      3475	gui.c	FUNCTION_53	IF_1	CALL_2
0x4003faa	           0xfb6c0	                           movzx eax, al	      3475	gui.c	FUNCTION_53	IF_1	CALL_2
0x4003fad	          0x8945c0	             mov dword [rbp - 0x40], eax	      3475	gui.c	FUNCTION_53	IF_1	CALL_2
0x4003fb0	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      3476	gui.c	FUNCTION_53	IF_1	IF_2
0x4003fb3	          0x3b45c0	             cmp eax, dword [rbp - 0x40]	      3476	gui.c	FUNCTION_53	IF_1	IF_2
0x4003fb6	            0x742b	                            je 0x4003fe3	      3476	gui.c	FUNCTION_53	IF_1	IF_2
0x4003fb8	    0x488b05000000	            mov rax, qword [0x04003fbf] 	      3478	gui.c	FUNCTION_53	IF_1	IF_2
0x4003fbf	        0x488945d8	             mov qword [rbp - 0x28], rax	      3478	gui.c	FUNCTION_53	IF_1	IF_2
0x4003fc3	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3479	gui.c	FUNCTION_53	IF_1	IF_2
0x4003fc7	    0x488905000000	            mov qword [0x04003fce], rax 	      3479	gui.c	FUNCTION_53	IF_1	IF_2
0x4003fce	      0xbf3f000000	                           mov edi, 0x3f	      3480	gui.c	FUNCTION_53	IF_1	IF_2	CALL_3
0x4003fd3	      0xe800000000	                          call 0x4003fd8	      3480	gui.c	FUNCTION_53	IF_1	IF_2	CALL_3
0x4003fd8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3481	gui.c	FUNCTION_53	IF_1	IF_2
0x4003fdc	    0x488905000000	            mov qword [0x04003fe3], rax 	      3481	gui.c	FUNCTION_53	IF_1	IF_2
0x4003fe3	    0xc60500000000	                mov byte [0x04003fea], 0	      3484	gui.c	FUNCTION_53
0x4003fea	    0xc745b0000000	               mov dword [rbp - 0x50], 0	      3487	gui.c	FUNCTION_53	FOR_1
0x4003ff1	            0xeb18	                           jmp 0x400400b	      3487	gui.c	FUNCTION_53	FOR_1
0x4003ff3	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      3488	gui.c	FUNCTION_53	FOR_1
0x4003ff6	            0x4898	                                    cdqe	      3488	gui.c	FUNCTION_53	FOR_1
0x4003ff8	        0x4883c030	                           add rax, 0x30	      3488	gui.c	FUNCTION_53	FOR_1
0x4003ffc	    0xc70485000000	                    mov dword [rax*4], 0	      3488	gui.c	FUNCTION_53	FOR_1
0x4004007	        0x8345b001	               add dword [rbp - 0x50], 1	      3487	gui.c	FUNCTION_53	FOR_1
0x400400b	        0x837db002	               cmp dword [rbp - 0x50], 2	      3487	gui.c	FUNCTION_53	FOR_1
0x400400f	            0x7ee2	                           jle 0x4003ff3	      3487	gui.c	FUNCTION_53	FOR_1
0x4004011	    0x488b05000000	            mov rax, qword [0x04004018] 	      3489	gui.c	FUNCTION_53	FOR_2
0x4004018	        0x488945c8	             mov qword [rbp - 0x38], rax	      3489	gui.c	FUNCTION_53	FOR_2
0x400401c	      0xe993000000	                           jmp 0x40040b4	      3489	gui.c	FUNCTION_53	FOR_2
0x4004021	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3490	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x4004025	           0xfb600	                   movzx eax, byte [rax]	      3490	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x4004028	           0xfb6c0	                           movzx eax, al	      3490	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x400402b	          0x83e84c	                           sub eax, 0x4c	      3490	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x400402e	          0x83f828	                           cmp eax, 0x28	      3490	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x4004031	            0x7775	                            ja 0x40040a8	      3490	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x4004033	            0x89c0	                            mov eax, eax	      3490	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x4004035	    0x488b04c50000	                  mov rax, qword [rax*8]	      3490	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x400403d	            0xffe0	                                 jmp rax	      3490	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x400403f	    0xc70500000000	               mov dword [0x04004049], 1	      3493	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x4004049	            0xeb64	                           jmp 0x40040af	      3494	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x400404b	    0xc70500000000	               mov dword [0x04004055], 1	      3496	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x4004055	            0xeb58	                           jmp 0x40040af	      3497	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x4004057	      0xe800000000	                          call 0x400405c	      3499	gui.c	FUNCTION_53	FOR_2	SWITCH_1	IF_3	CALL_4
0x400405c	            0x85c0	                           test eax, eax	      3499	gui.c	FUNCTION_53	FOR_2	SWITCH_1	IF_3	CALL_4
0x400405e	            0x744b	                            je 0x40040ab	      3499	gui.c	FUNCTION_53	FOR_2	SWITCH_1	IF_3	CALL_4
0x4004060	    0xc70500000000	               mov dword [0x0400406a], 1	      3500	gui.c	FUNCTION_53	FOR_2	SWITCH_1	IF_3
0x400406a	            0xeb3f	                           jmp 0x40040ab	      3501	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x400406c	      0xe800000000	                          call 0x4004071	      3503	gui.c	FUNCTION_53	FOR_2	SWITCH_1	IF_4	CALL_5
0x4004071	            0x85c0	                           test eax, eax	      3503	gui.c	FUNCTION_53	FOR_2	SWITCH_1	IF_4	CALL_5
0x4004073	            0x7439	                            je 0x40040ae	      3503	gui.c	FUNCTION_53	FOR_2	SWITCH_1	IF_4	CALL_5
0x4004075	    0xc70500000000	               mov dword [0x0400407f], 1	      3504	gui.c	FUNCTION_53	FOR_2	SWITCH_1	IF_4
0x400407f	            0xeb2d	                           jmp 0x40040ae	      3505	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x4004081	    0xc70500000000	               mov dword [0x0400408b], 1	      3507	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x400408b	            0xeb22	                           jmp 0x40040af	      3508	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x400408d	    0xc60500000000	                mov byte [0x04004094], 1	      3511	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x4004094	            0xeb19	                           jmp 0x40040af	      3512	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x4004096	    0xc745a8010000	               mov dword [rbp - 0x58], 1	      3519	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x400409d	            0xeb10	                           jmp 0x40040af	      3520	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x400409f	    0xc745ac010000	               mov dword [rbp - 0x54], 1	      3529	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x40040a6	            0xeb07	                           jmp 0x40040af	      3531	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x40040a8	              0x90	                                     nop	      3534	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x40040a9	            0xeb04	                           jmp 0x40040af	      3534	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x40040ab	              0x90	                                     nop	      3501	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x40040ac	            0xeb01	                           jmp 0x40040af	      3501	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x40040ae	              0x90	                                     nop	      3505	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x40040af	      0x488345c801	               add qword [rbp - 0x38], 1	      3489	gui.c	FUNCTION_53	FOR_2
0x40040b4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3489	gui.c	FUNCTION_53	FOR_2
0x40040b8	           0xfb600	                   movzx eax, byte [rax]	      3489	gui.c	FUNCTION_53	FOR_2
0x40040bb	            0x84c0	                             test al, al	      3489	gui.c	FUNCTION_53	FOR_2
0x40040bd	     0xf855effffff	                           jne 0x4004021	      3489	gui.c	FUNCTION_53	FOR_2
0x40040c3	    0x8b0500000000	            mov eax, dword [0x040040c9] 	      3537	gui.c	FUNCTION_53	IF_5
0x40040c9	            0x85c0	                           test eax, eax	      3537	gui.c	FUNCTION_53	IF_5
0x40040cb	     0xf84fb020000	                            je 0x40043cc	      3537	gui.c	FUNCTION_53	IF_5
0x40040d1	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	      3539	gui.c	FUNCTION_53	IF_5
0x40040d8	    0xc745b8000000	               mov dword [rbp - 0x48], 0	      3540	gui.c	FUNCTION_53	IF_5
0x40040df	      0xe825030000	                call sym.gui_has_tabline	      3545	gui.c	FUNCTION_53	IF_5	CALL_6
0x40040e4	          0x8945c4	             mov dword [rbp - 0x3c], eax	      3545	gui.c	FUNCTION_53	IF_5	CALL_6
0x40040e7	      0xe800000000	                          call 0x40040ec	      3546	gui.c	FUNCTION_53	IF_5	IF_6	CALL_7
0x40040ec	            0x85c0	                           test eax, eax	      3546	gui.c	FUNCTION_53	IF_5	IF_6	CALL_7
0x40040ee	           0xf94c2	                                 sete dl	      3546	gui.c	FUNCTION_53	IF_5	IF_6	CALL_7
0x40040f1	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      3546	gui.c	FUNCTION_53	IF_5	IF_6	CALL_7
0x40040f5	           0xf94c0	                                 sete al	      3546	gui.c	FUNCTION_53	IF_5	IF_6	CALL_7
0x40040f8	            0x31d0	                            xor eax, edx	      3546	gui.c	FUNCTION_53	IF_5	IF_6	CALL_7
0x40040fa	            0x84c0	                             test al, al	      3546	gui.c	FUNCTION_53	IF_5	IF_6	CALL_7
0x40040fc	            0x743f	                            je 0x400413d	      3546	gui.c	FUNCTION_53	IF_5	IF_6	CALL_7
0x40040fe	    0x488b05000000	            mov rax, qword [0x04004105] 	      3550	gui.c	FUNCTION_53	IF_5	IF_6
0x4004105	          0x8945b0	             mov dword [rbp - 0x50], eax	      3550	gui.c	FUNCTION_53	IF_5	IF_6
0x4004108	      0xe800000000	                          call 0x400410d	      3551	gui.c	FUNCTION_53	IF_5	IF_6	CALL_8
0x400410d	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      3552	gui.c	FUNCTION_53	IF_5	IF_6
0x4004110	            0x4898	                                    cdqe	      3552	gui.c	FUNCTION_53	IF_5	IF_6
0x4004112	    0x488905000000	            mov qword [0x04004119], rax 	      3552	gui.c	FUNCTION_53	IF_5	IF_6
0x4004119	        0x834db401	                or dword [rbp - 0x4c], 1	      3553	gui.c	FUNCTION_53	IF_5	IF_6
0x400411d	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      3554	gui.c	FUNCTION_53	IF_5	IF_6	IF_7
0x4004121	            0x7407	                            je 0x400412a	      3554	gui.c	FUNCTION_53	IF_5	IF_6	IF_7
0x4004123	    0xc745b8010000	               mov dword [rbp - 0x48], 1	      3555	gui.c	FUNCTION_53	IF_5	IF_6	IF_7
0x400412a	      0xe800000000	                          call 0x400412f	      3556	gui.c	FUNCTION_53	IF_5	IF_6	IF_8	CALL_9
0x400412f	            0x85c0	                           test eax, eax	      3556	gui.c	FUNCTION_53	IF_5	IF_6	IF_8	CALL_9
0x4004131	            0x750a	                           jne 0x400413d	      3556	gui.c	FUNCTION_53	IF_5	IF_6	IF_8	CALL_9
0x4004133	    0xc70500000000	               mov dword [0x0400413d], 1	      3557	gui.c	FUNCTION_53	IF_5	IF_6	IF_8
0x400413d	    0xc745b0000000	               mov dword [rbp - 0x50], 0	      3561	gui.c	FUNCTION_53	IF_5	FOR_3
0x4004144	      0xe943010000	                           jmp 0x400428c	      3561	gui.c	FUNCTION_53	IF_5	FOR_3
0x4004149	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      3567	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x400414c	            0x4898	                                    cdqe	      3567	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x400414e	        0x4883c030	                           add rax, 0x30	      3567	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x4004152	    0x8b1485000000	                  mov edx, dword [rax*4]	      3567	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x4004159	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      3567	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x400415c	            0x4898	                                    cdqe	      3567	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x400415e	    0x8b0485000000	                  mov eax, dword [rax*4]	      3567	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x4004165	            0x39c2	                            cmp edx, eax	      3567	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x4004167	            0x752d	                           jne 0x4004196	      3567	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x4004169	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      3568	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x400416c	            0x4898	                                    cdqe	      3568	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x400416e	        0x4883c030	                           add rax, 0x30	      3568	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x4004172	    0x8b1485000000	                  mov edx, dword [rax*4]	      3568	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x4004179	    0x488b05000000	            mov rax, qword [0x04004180] 	      3569	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x4004180	          0x8b4db0	             mov ecx, dword [rbp - 0x50]	      3569	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x4004183	          0x4863c9	                         movsxd rcx, ecx	      3569	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x4004186	        0x4883c110	                           add rcx, 0x10	      3569	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x400418a	        0x8b448808	       mov eax, dword [rax + rcx*4 + 8] 	      3569	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x400418e	            0x39c2	                            cmp edx, eax	      3568	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x4004190	     0xf84b0000000	                            je 0x4004246	      3568	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x4004196	        0x837db002	               cmp dword [rbp - 0x50], 2	      3571	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_10
0x400419a	            0x751e	                           jne 0x40041ba	      3571	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_10
0x400419c	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      3572	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_10	CALL_10
0x400419f	            0x4898	                                    cdqe	      3572	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_10	CALL_10
0x40041a1	        0x4883c030	                           add rax, 0x30	      3572	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_10	CALL_10
0x40041a5	    0x8b0485000000	                  mov eax, dword [rax*4]	      3572	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_10	CALL_10
0x40041ac	            0x89c6	                            mov esi, eax	      3572	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_10	CALL_10
0x40041ae	      0xbf00000000	                              mov edi, 0	      3572	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_10	CALL_10
0x40041b3	      0xe800000000	                          call 0x40041b8	      3572	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_10	CALL_10
0x40041b8	            0xeb41	                           jmp 0x40041fb	      3572	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_10	CALL_10
0x40041ba	    0x488b05000000	            mov rax, qword [0x040041c1] 	      3576	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1
0x40041c1	        0x488945d0	             mov qword [rbp - 0x30], rax	      3576	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1
0x40041c5	            0xeb2d	                           jmp 0x40041f4	      3576	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1
0x40041c7	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      3578	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1	FUNCTION_1	CALL_1
0x40041ca	            0x4898	                                    cdqe	      3578	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1	FUNCTION_1	CALL_1
0x40041cc	        0x4883c030	                           add rax, 0x30	      3578	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1	FUNCTION_1	CALL_1
0x40041d0	    0x8b1485000000	                  mov edx, dword [rax*4]	      3578	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1	FUNCTION_1	CALL_1
0x40041d7	          0x8b4db0	             mov ecx, dword [rbp - 0x50]	      3578	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1	FUNCTION_1	CALL_1
0x40041da	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3578	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1	FUNCTION_1	CALL_1
0x40041de	            0x89ce	                            mov esi, ecx	      3578	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1	FUNCTION_1	CALL_1
0x40041e0	          0x4889c7	                            mov rdi, rax	      3578	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1	FUNCTION_1	CALL_1
0x40041e3	      0xe893140000	               call sym.gui_do_scrollbar	      3578	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1	FUNCTION_1	CALL_1
0x40041e8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3576	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1
0x40041ec	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3576	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1
0x40041f0	        0x488945d0	             mov qword [rbp - 0x30], rax	      3576	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1
0x40041f4	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      3576	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1
0x40041f9	            0x75cc	                           jne 0x40041c7	      3576	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1
0x40041fb	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      3581	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11
0x40041fe	            0x4898	                                    cdqe	      3581	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11
0x4004200	        0x4883c030	                           add rax, 0x30	      3581	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11
0x4004204	    0x8b1485000000	                  mov edx, dword [rax*4]	      3581	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11
0x400420b	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      3581	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11
0x400420e	            0x4898	                                    cdqe	      3581	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11
0x4004210	    0x8b0485000000	                  mov eax, dword [rax*4]	      3581	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11
0x4004217	            0x39c2	                            cmp edx, eax	      3581	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11
0x4004219	            0x742b	                            je 0x4004246	      3581	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11
0x400421b	        0x837db002	               cmp dword [rbp - 0x50], 2	      3583	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11	IF_12
0x400421f	            0x7506	                           jne 0x4004227	      3583	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11	IF_12
0x4004221	        0x834db401	                or dword [rbp - 0x4c], 1	      3584	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11	IF_12
0x4004225	            0xeb04	                           jmp 0x400422b	      3584	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11	IF_12
0x4004227	        0x834db402	                or dword [rbp - 0x4c], 2	      3586	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11	ELSE_2
0x400422b	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      3587	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11	IF_13
0x400422e	            0x4898	                                    cdqe	      3587	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11	IF_13
0x4004230	        0x4883c030	                           add rax, 0x30	      3587	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11	IF_13
0x4004234	    0x8b0485000000	                  mov eax, dword [rax*4]	      3587	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11	IF_13
0x400423b	            0x85c0	                           test eax, eax	      3587	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11	IF_13
0x400423d	            0x7407	                            je 0x4004246	      3587	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11	IF_13
0x400423f	    0xc745b8010000	               mov dword [rbp - 0x48], 1	      3588	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11	IF_13
0x4004246	    0x488b05000000	            mov rax, qword [0x0400424d] 	      3591	gui.c	FUNCTION_53	IF_5	FOR_3
0x400424d	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      3591	gui.c	FUNCTION_53	IF_5	FOR_3
0x4004250	          0x4863d2	                         movsxd rdx, edx	      3591	gui.c	FUNCTION_53	IF_5	FOR_3
0x4004253	        0x4883c230	                           add rdx, 0x30	      3591	gui.c	FUNCTION_53	IF_5	FOR_3
0x4004257	    0x8b1495000000	                  mov edx, dword [rdx*4]	      3591	gui.c	FUNCTION_53	IF_5	FOR_3
0x400425e	          0x8b4db0	             mov ecx, dword [rbp - 0x50]	      3591	gui.c	FUNCTION_53	IF_5	FOR_3
0x4004261	          0x4863c9	                         movsxd rcx, ecx	      3591	gui.c	FUNCTION_53	IF_5	FOR_3
0x4004264	        0x4883c110	                           add rcx, 0x10	      3591	gui.c	FUNCTION_53	IF_5	FOR_3
0x4004268	        0x89548808	        mov dword [rax + rcx*4 + 8], edx	      3591	gui.c	FUNCTION_53	IF_5	FOR_3
0x400426c	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      3592	gui.c	FUNCTION_53	IF_5	FOR_3
0x400426f	            0x4898	                                    cdqe	      3592	gui.c	FUNCTION_53	IF_5	FOR_3
0x4004271	        0x4883c030	                           add rax, 0x30	      3592	gui.c	FUNCTION_53	IF_5	FOR_3
0x4004275	    0x8b1485000000	                  mov edx, dword [rax*4]	      3592	gui.c	FUNCTION_53	IF_5	FOR_3
0x400427c	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      3592	gui.c	FUNCTION_53	IF_5	FOR_3
0x400427f	            0x4898	                                    cdqe	      3592	gui.c	FUNCTION_53	IF_5	FOR_3
0x4004281	    0x891485000000	                  mov dword [rax*4], edx	      3592	gui.c	FUNCTION_53	IF_5	FOR_3
0x4004288	        0x8345b001	               add dword [rbp - 0x50], 1	      3561	gui.c	FUNCTION_53	IF_5	FOR_3
0x400428c	        0x837db002	               cmp dword [rbp - 0x50], 2	      3561	gui.c	FUNCTION_53	IF_5	FOR_3
0x4004290	     0xf8eb3feffff	                           jle 0x4004149	      3561	gui.c	FUNCTION_53	IF_5	FOR_3
0x4004296	     0xfb605000000	           movzx eax, byte [0x0400429d] 	      3596	gui.c	FUNCTION_53	IF_5	IF_14
0x400429d	           0xfbed0	                           movsx edx, al	      3596	gui.c	FUNCTION_53	IF_5	IF_14
0x40042a0	    0x8b0500000000	            mov eax, dword [0x040042a6] 	      3596	gui.c	FUNCTION_53	IF_5	IF_14
0x40042a6	            0x39c2	                            cmp edx, eax	      3596	gui.c	FUNCTION_53	IF_5	IF_14
0x40042a8	            0x744d	                            je 0x40042f7	      3596	gui.c	FUNCTION_53	IF_5	IF_14
0x40042aa	    0x488b05000000	            mov rax, qword [0x040042b1] 	      3600	gui.c	FUNCTION_53	IF_5	IF_14
0x40042b1	          0x8945b0	             mov dword [rbp - 0x50], eax	      3600	gui.c	FUNCTION_53	IF_5	IF_14
0x40042b4	     0xfb605000000	           movzx eax, byte [0x040042bb] 	      3601	gui.c	FUNCTION_53	IF_5	IF_14	CALL_11
0x40042bb	           0xfbec0	                           movsx eax, al	      3601	gui.c	FUNCTION_53	IF_5	IF_14	CALL_11
0x40042be	            0x89c7	                            mov edi, eax	      3601	gui.c	FUNCTION_53	IF_5	IF_14	CALL_11
0x40042c0	      0xe800000000	                          call 0x40042c5	      3601	gui.c	FUNCTION_53	IF_5	IF_14	CALL_11
0x40042c5	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      3602	gui.c	FUNCTION_53	IF_5	IF_14
0x40042c8	            0x4898	                                    cdqe	      3602	gui.c	FUNCTION_53	IF_5	IF_14
0x40042ca	    0x488905000000	            mov qword [0x040042d1], rax 	      3602	gui.c	FUNCTION_53	IF_5	IF_14
0x40042d1	     0xfb605000000	           movzx eax, byte [0x040042d8] 	      3603	gui.c	FUNCTION_53	IF_5	IF_14
0x40042d8	           0xfbec0	                           movsx eax, al	      3603	gui.c	FUNCTION_53	IF_5	IF_14
0x40042db	    0x890500000000	            mov dword [0x040042e1], eax 	      3603	gui.c	FUNCTION_53	IF_5	IF_14
0x40042e1	        0x834db401	                or dword [rbp - 0x4c], 1	      3604	gui.c	FUNCTION_53	IF_5	IF_14
0x40042e5	     0xfb605000000	           movzx eax, byte [0x040042ec] 	      3605	gui.c	FUNCTION_53	IF_5	IF_14	IF_15
0x40042ec	            0x84c0	                             test al, al	      3605	gui.c	FUNCTION_53	IF_5	IF_14	IF_15
0x40042ee	            0x7407	                            je 0x40042f7	      3605	gui.c	FUNCTION_53	IF_5	IF_14	IF_15
0x40042f0	    0xc745b8010000	               mov dword [rbp - 0x48], 1	      3606	gui.c	FUNCTION_53	IF_5	IF_14	IF_15
0x40042f7	    0x8b0500000000	            mov eax, dword [0x040042fd] 	      3611	gui.c	FUNCTION_53	IF_5	IF_16
0x40042fd	          0x3945a8	            cmp dword [rbp - 0x58], eax 	      3611	gui.c	FUNCTION_53	IF_5	IF_16
0x4004300	            0x7424	                            je 0x4004326	      3611	gui.c	FUNCTION_53	IF_5	IF_16
0x4004302	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      3613	gui.c	FUNCTION_53	IF_5	IF_16	CALL_12
0x4004305	            0x89c7	                            mov edi, eax	      3613	gui.c	FUNCTION_53	IF_5	IF_16	CALL_12
0x4004307	      0xe800000000	                          call 0x400430c	      3613	gui.c	FUNCTION_53	IF_5	IF_16	CALL_12
0x400430c	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      3614	gui.c	FUNCTION_53	IF_5	IF_16
0x400430f	    0x890500000000	            mov dword [0x04004315], eax 	      3614	gui.c	FUNCTION_53	IF_5	IF_16
0x4004315	        0x834db401	                or dword [rbp - 0x4c], 1	      3615	gui.c	FUNCTION_53	IF_5	IF_16
0x4004319	        0x837da800	               cmp dword [rbp - 0x58], 0	      3616	gui.c	FUNCTION_53	IF_5	IF_16	IF_17
0x400431d	            0x7407	                            je 0x4004326	      3616	gui.c	FUNCTION_53	IF_5	IF_16	IF_17
0x400431f	    0xc745b8010000	               mov dword [rbp - 0x48], 1	      3617	gui.c	FUNCTION_53	IF_5	IF_16	IF_17
0x4004326	    0x8b0500000000	            mov eax, dword [0x0400432c] 	      3631	gui.c	FUNCTION_53	IF_5	IF_20
0x400432c	          0x3945ac	            cmp dword [rbp - 0x54], eax 	      3631	gui.c	FUNCTION_53	IF_5	IF_20
0x400432f	            0x7413	                            je 0x4004344	      3631	gui.c	FUNCTION_53	IF_5	IF_20
0x4004331	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      3633	gui.c	FUNCTION_53	IF_5	IF_20	CALL_14
0x4004334	            0x89c7	                            mov edi, eax	      3633	gui.c	FUNCTION_53	IF_5	IF_20	CALL_14
0x4004336	      0xe800000000	                          call 0x400433b	      3633	gui.c	FUNCTION_53	IF_5	IF_20	CALL_14
0x400433b	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      3634	gui.c	FUNCTION_53	IF_5	IF_20
0x400433e	    0x890500000000	            mov dword [0x04004344], eax 	      3634	gui.c	FUNCTION_53	IF_5	IF_20
0x4004344	        0x837db400	               cmp dword [rbp - 0x4c], 0	      3637	gui.c	FUNCTION_53	IF_5	IF_21
0x4004348	            0x7467	                            je 0x40043b1	      3637	gui.c	FUNCTION_53	IF_5	IF_21
0x400434a	    0x488b05000000	            mov rax, qword [0x04004351] 	      3640	gui.c	FUNCTION_53	IF_5	IF_21
0x4004351	        0x488945e0	             mov qword [rbp - 0x20], rax	      3640	gui.c	FUNCTION_53	IF_5	IF_21
0x4004355	    0x488b05000000	            mov rax, qword [0x0400435c] 	      3641	gui.c	FUNCTION_53	IF_5	IF_21
0x400435c	        0x488945e8	             mov qword [rbp - 0x18], rax	      3641	gui.c	FUNCTION_53	IF_5	IF_21
0x4004360	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      3646	gui.c	FUNCTION_53	IF_5	IF_21	CALL_15
0x4004363	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      3646	gui.c	FUNCTION_53	IF_5	IF_21	CALL_15
0x4004366	            0x89c6	                            mov esi, eax	      3646	gui.c	FUNCTION_53	IF_5	IF_21	CALL_15
0x4004368	      0xbf00000000	                              mov edi, 0	      3646	gui.c	FUNCTION_53	IF_5	IF_21	CALL_15
0x400436d	      0xe800000000	                          call 0x4004372	      3646	gui.c	FUNCTION_53	IF_5	IF_21	CALL_15
0x4004372	    0x8b0500000000	            mov eax, dword [0x04004378] 	      3659	gui.c	FUNCTION_53	IF_5	IF_21	IF_22
0x4004378	            0x85c0	                           test eax, eax	      3659	gui.c	FUNCTION_53	IF_5	IF_21	IF_22
0x400437a	            0x750b	                           jne 0x4004387	      3659	gui.c	FUNCTION_53	IF_5	IF_21	IF_22
0x400437c	        0x837db403	               cmp dword [rbp - 0x4c], 3	      3659	gui.c	FUNCTION_53	IF_5	IF_21	IF_22
0x4004380	            0x7405	                            je 0x4004387	      3659	gui.c	FUNCTION_53	IF_5	IF_21	IF_22
0x4004382	      0xe800000000	                          call 0x4004387	      3660	gui.c	FUNCTION_53	IF_5	IF_21	CALL_16
0x4004387	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      3661	gui.c	FUNCTION_53	IF_5	IF_21	IF_23
0x400438a	          0x83e001	                              and eax, 1	      3661	gui.c	FUNCTION_53	IF_5	IF_21	IF_23
0x400438d	            0x85c0	                           test eax, eax	      3661	gui.c	FUNCTION_53	IF_5	IF_21	IF_23
0x400438f	            0x750b	                           jne 0x400439c	      3661	gui.c	FUNCTION_53	IF_5	IF_21	IF_23
0x4004391	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3662	gui.c	FUNCTION_53	IF_5	IF_21	IF_23
0x4004395	    0x488905000000	            mov qword [0x0400439c], rax 	      3662	gui.c	FUNCTION_53	IF_5	IF_21	IF_23
0x400439c	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      3663	gui.c	FUNCTION_53	IF_5	IF_21	IF_24
0x400439f	          0x83e002	                              and eax, 2	      3663	gui.c	FUNCTION_53	IF_5	IF_21	IF_24
0x40043a2	            0x85c0	                           test eax, eax	      3663	gui.c	FUNCTION_53	IF_5	IF_21	IF_24
0x40043a4	            0x750b	                           jne 0x40043b1	      3663	gui.c	FUNCTION_53	IF_5	IF_21	IF_24
0x40043a6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3664	gui.c	FUNCTION_53	IF_5	IF_21	IF_24
0x40043aa	    0x488905000000	            mov qword [0x040043b1], rax 	      3664	gui.c	FUNCTION_53	IF_5	IF_21	IF_24
0x40043b1	    0x488b05000000	            mov rax, qword [0x040043b8] 	      3669	gui.c	FUNCTION_53	IF_5	IF_25	CALL_17
0x40043b8	    0x8b989c000000	            mov ebx, dword [rax + 0x9c] 	      3669	gui.c	FUNCTION_53	IF_5	IF_25	CALL_17
0x40043be	      0xe800000000	                          call 0x40043c3	      3669	gui.c	FUNCTION_53	IF_5	IF_25	CALL_17
0x40043c3	            0x39c3	                            cmp ebx, eax	      3669	gui.c	FUNCTION_53	IF_5	IF_25	CALL_17
0x40043c5	            0x7405	                            je 0x40043cc	      3669	gui.c	FUNCTION_53	IF_5	IF_25	CALL_17
0x40043c7	      0xe800000000	                          call 0x40043cc	      3670	gui.c	FUNCTION_53	IF_5	CALL_18
0x40043cc	              0x90	                                     nop	      3672	gui.c	FUNCTION_53
0x40043cd	        0x4883c468	                           add rsp, 0x68	      3672	gui.c	FUNCTION_53
0x40043d1	              0x5b	                                 pop rbx	      3672	gui.c	FUNCTION_53
0x40043d2	              0x5d	                                 pop rbp	      3672	gui.c	FUNCTION_53
0x40043d3	              0xc3	                                     ret	      3672	gui.c	FUNCTION_53
gui_may_resize_shell	IF,1:functions,0:ELSE,0:CALL,1:SWITCH,0:WHILE,0:FOR,0:DO,0	13
0x4001a2a	              0x55	                                push rbp	      1546	gui.c	FUNCTION_21
0x4001a2b	          0x4889e5	                            mov rbp, rsp	      1546	gui.c	FUNCTION_21
0x4001a2e	    0x8b0500000000	            mov eax, dword [0x04001a34] 	      1547	gui.c	FUNCTION_21	IF_1
0x4001a34	            0x85c0	                           test eax, eax	      1547	gui.c	FUNCTION_21	IF_1
0x4001a36	            0x7415	                            je 0x4001a4d	      1547	gui.c	FUNCTION_21	IF_1
0x4001a38	    0x8b1500000000	            mov edx, dword [0x04001a3e] 	      1550	gui.c	FUNCTION_21	CALL_1
0x4001a3e	    0x8b0500000000	            mov eax, dword [0x04001a44] 	      1550	gui.c	FUNCTION_21	CALL_1
0x4001a44	            0x89d6	                            mov esi, edx	      1550	gui.c	FUNCTION_21	CALL_1
0x4001a46	            0x89c7	                            mov edi, eax	      1550	gui.c	FUNCTION_21	CALL_1
0x4001a48	      0xe800000000	                          call 0x4001a4d	      1550	gui.c	FUNCTION_21	CALL_1
0x4001a4d	              0x90	                                     nop	      1551	gui.c	FUNCTION_21
0x4001a4e	              0x5d	                                 pop rbp	      1551	gui.c	FUNCTION_21
0x4001a4f	              0xc3	                                     ret	      1551	gui.c	FUNCTION_21
gui_use_tabline	IF,0:functions,0:ELSE,0:CALL,1:SWITCH,0:WHILE,0:FOR,0:DO,0	16
0x40043d4	              0x55	                                push rbp	      3681	gui.c	FUNCTION_54
0x40043d5	          0x4889e5	                            mov rbp, rsp	      3681	gui.c	FUNCTION_54
0x40043d8	    0x8b0500000000	            mov eax, dword [0x040043de] 	      3682	gui.c	FUNCTION_54	CALL_1
0x40043de	            0x85c0	                           test eax, eax	      3682	gui.c	FUNCTION_54	CALL_1
0x40043e0	            0x7420	                            je 0x4004402	      3682	gui.c	FUNCTION_54	CALL_1
0x40043e2	    0x488b05000000	            mov rax, qword [0x040043e9] 	      3682	gui.c	FUNCTION_54	CALL_1
0x40043e9	      0xbe65000000	                           mov esi, 0x65	      3682	gui.c	FUNCTION_54	CALL_1
0x40043ee	          0x4889c7	                            mov rdi, rax	      3682	gui.c	FUNCTION_54	CALL_1
0x40043f1	      0xe800000000	                          call 0x40043f6	      3682	gui.c	FUNCTION_54	CALL_1
0x40043f6	          0x4885c0	                           test rax, rax	      3682	gui.c	FUNCTION_54	CALL_1
0x40043f9	            0x7407	                            je 0x4004402	      3682	gui.c	FUNCTION_54	CALL_1
0x40043fb	      0xb801000000	                              mov eax, 1	      3682	gui.c	FUNCTION_54	CALL_1
0x4004400	            0xeb05	                           jmp 0x4004407	      3682	gui.c	FUNCTION_54	CALL_1
0x4004402	      0xb800000000	                              mov eax, 0	      3682	gui.c	FUNCTION_54	CALL_1
0x4004407	              0x5d	                                 pop rbp	      3683	gui.c	FUNCTION_54
0x4004408	              0xc3	                                     ret	      3683	gui.c	FUNCTION_54
gui_inchar	IF,1:functions,0:ELSE,0:CALL,3:SWITCH,0:WHILE,0:FOR,0:DO,0	29
0x40035ee	              0x55	                                push rbp	      3045	gui.c	FUNCTION_48
0x40035ef	          0x4889e5	                            mov rbp, rsp	      3045	gui.c	FUNCTION_48
0x40035f2	        0x4883ec20	                           sub rsp, 0x20	      3045	gui.c	FUNCTION_48
0x40035f6	        0x48897df8	                mov qword [rbp - 8], rdi	      3045	gui.c	FUNCTION_48
0x40035fa	          0x8975f4	              mov dword [rbp - 0xc], esi	      3045	gui.c	FUNCTION_48
0x40035fd	        0x488955e8	             mov qword [rbp - 0x18], rdx	      3045	gui.c	FUNCTION_48
0x4003601	          0x894df0	             mov dword [rbp - 0x10], ecx	      3045	gui.c	FUNCTION_48
0x4003604	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      3046	gui.c	FUNCTION_48	IF_1	CALL_1
0x4003607	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3046	gui.c	FUNCTION_48	IF_1	CALL_1
0x400360b	            0x89d6	                            mov esi, edx	      3046	gui.c	FUNCTION_48	IF_1	CALL_1
0x400360d	          0x4889c7	                            mov rdi, rax	      3046	gui.c	FUNCTION_48	IF_1	CALL_1
0x4003610	      0xe800000000	                          call 0x4003615	      3046	gui.c	FUNCTION_48	IF_1	CALL_1
0x4003615	            0x85c0	                           test eax, eax	      3046	gui.c	FUNCTION_48	IF_1	CALL_1
0x4003617	            0x7425	                            je 0x400363e	      3046	gui.c	FUNCTION_48	IF_1	CALL_1
0x4003619	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      3047	gui.c	FUNCTION_48	IF_1	CALL_2
0x400361c	            0x89c7	                            mov edi, eax	      3047	gui.c	FUNCTION_48	IF_1	CALL_2
0x400361e	      0xe800000000	                          call 0x4003623	      3047	gui.c	FUNCTION_48	IF_1	CALL_2
0x4003623	            0x85c0	                           test eax, eax	      3047	gui.c	FUNCTION_48	IF_1	CALL_2
0x4003625	            0x7517	                           jne 0x400363e	      3047	gui.c	FUNCTION_48	IF_1	CALL_2
0x4003627	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      3048	gui.c	FUNCTION_48	CALL_3
0x400362a	          0x4863d0	                         movsxd rdx, eax	      3048	gui.c	FUNCTION_48	CALL_3
0x400362d	        0x488b45f8	                mov rax, qword [rbp - 8]	      3048	gui.c	FUNCTION_48	CALL_3
0x4003631	          0x4889d6	                            mov rsi, rdx	      3048	gui.c	FUNCTION_48	CALL_3
0x4003634	          0x4889c7	                            mov rdi, rax	      3048	gui.c	FUNCTION_48	CALL_3
0x4003637	      0xe800000000	                          call 0x400363c	      3048	gui.c	FUNCTION_48	CALL_3
0x400363c	            0xeb05	                           jmp 0x4003643	      3048	gui.c	FUNCTION_48	CALL_3
0x400363e	      0xb800000000	                              mov eax, 0	      3049	gui.c	FUNCTION_48
0x4003643	              0xc9	                                   leave	      3050	gui.c	FUNCTION_48
0x4003644	              0xc3	                                     ret	      3050	gui.c	FUNCTION_48
no_console_input	IF,0:functions,0:ELSE,0:CALL,2:SWITCH,0:WHILE,0:FOR,0:DO,0	21
0x40069fd	              0x55	                                push rbp	      5110	gui.c	FUNCTION_87
0x40069fe	          0x4889e5	                            mov rbp, rsp	      5110	gui.c	FUNCTION_87
0x4006a01	    0x8b0500000000	            mov eax, dword [0x04006a07] 	      5111	gui.c	FUNCTION_87
0x4006a07	            0x85c0	                           test eax, eax	      5113	gui.c	FUNCTION_87	CALL_2
0x4006a09	            0x740a	                            je 0x4006a15	      5113	gui.c	FUNCTION_87	CALL_2
0x4006a0b	    0x8b0500000000	            mov eax, dword [0x04006a11] 	      5111	gui.c	FUNCTION_87
0x4006a11	            0x85c0	                           test eax, eax	      5111	gui.c	FUNCTION_87
0x4006a13	            0x7423	                            je 0x4006a38	      5111	gui.c	FUNCTION_87
0x4006a15	      0xbf00000000	                              mov edi, 0	      5113	gui.c	FUNCTION_87	CALL_2
0x4006a1a	      0xe800000000	                          call 0x4006a1f	      5113	gui.c	FUNCTION_87	CALL_2
0x4006a1f	            0x85c0	                           test eax, eax	      5113	gui.c	FUNCTION_87	CALL_2
0x4006a21	            0x7515	                           jne 0x4006a38	      5113	gui.c	FUNCTION_87	CALL_2
0x4006a23	      0xbf02000000	                              mov edi, 2	      5113	gui.c	FUNCTION_87	CALL_2
0x4006a28	      0xe800000000	                          call 0x4006a2d	      5113	gui.c	FUNCTION_87	CALL_2
0x4006a2d	            0x85c0	                           test eax, eax	      5113	gui.c	FUNCTION_87	CALL_2
0x4006a2f	            0x7507	                           jne 0x4006a38	      5113	gui.c	FUNCTION_87	CALL_2
0x4006a31	      0xb801000000	                              mov eax, 1	      5113	gui.c	FUNCTION_87	CALL_2
0x4006a36	            0xeb05	                           jmp 0x4006a3d	      5113	gui.c	FUNCTION_87	CALL_2
0x4006a38	      0xb800000000	                              mov eax, 0	      5113	gui.c	FUNCTION_87	CALL_2
0x4006a3d	              0x5d	                                 pop rbp	      5116	gui.c	FUNCTION_87
0x4006a3e	              0xc3	                                     ret	      5116	gui.c	FUNCTION_87
gui_screenchar	IF,3:functions,0:ELSE,0:CALL,5:SWITCH,0:WHILE,0:FOR,0:DO,0	117
0x40025b2	              0x55	                                push rbp	      2107	gui.c	FUNCTION_37
0x40025b3	          0x4889e5	                            mov rbp, rsp	      2107	gui.c	FUNCTION_37
0x40025b6	        0x4883ec40	                           sub rsp, 0x40	      2107	gui.c	FUNCTION_37
0x40025ba	          0x897ddc	             mov dword [rbp - 0x24], edi	      2107	gui.c	FUNCTION_37
0x40025bd	          0x8975d8	             mov dword [rbp - 0x28], esi	      2107	gui.c	FUNCTION_37
0x40025c0	        0x488955d0	             mov qword [rbp - 0x30], rdx	      2107	gui.c	FUNCTION_37
0x40025c4	        0x48894dc8	             mov qword [rbp - 0x38], rcx	      2107	gui.c	FUNCTION_37
0x40025c8	        0x448945c4	             mov dword [rbp - 0x3c], r8d	      2107	gui.c	FUNCTION_37
0x40025cc	    0x64488b042528	                mov rax, qword fs:[0x28]	      2107	gui.c	FUNCTION_37
0x40025d5	        0x488945f8	                mov qword [rbp - 8], rax	      2107	gui.c	FUNCTION_37
0x40025d9	            0x31c0	                            xor eax, eax	      2107	gui.c	FUNCTION_37
0x40025db	    0x8b0500000000	            mov eax, dword [0x040025e1] 	      2112	gui.c	FUNCTION_37	IF_1
0x40025e1	            0x85c0	                           test eax, eax	      2112	gui.c	FUNCTION_37	IF_1
0x40025e3	            0x7420	                            je 0x4002605	      2112	gui.c	FUNCTION_37	IF_1
0x40025e5	    0x488b15000000	            mov rdx, qword [0x040025ec] 	      2112	gui.c	FUNCTION_37	IF_1
0x40025ec	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2112	gui.c	FUNCTION_37	IF_1
0x40025ef	            0x4898	                                    cdqe	      2112	gui.c	FUNCTION_37	IF_1
0x40025f1	          0x4801d0	                            add rax, rdx	      2112	gui.c	FUNCTION_37	IF_1
0x40025f4	           0xfb600	                   movzx eax, byte [rax]	      2112	gui.c	FUNCTION_37	IF_1
0x40025f7	            0x84c0	                             test al, al	      2112	gui.c	FUNCTION_37	IF_1
0x40025f9	            0x750a	                           jne 0x4002605	      2112	gui.c	FUNCTION_37	IF_1
0x40025fb	      0xb801000000	                              mov eax, 1	      2113	gui.c	FUNCTION_37	IF_1
0x4002600	      0xe936010000	                           jmp 0x400273b	      2113	gui.c	FUNCTION_37	IF_1
0x4002605	    0x8b0500000000	            mov eax, dword [0x0400260b] 	      2115	gui.c	FUNCTION_37	IF_2
0x400260b	            0x85c0	                           test eax, eax	      2115	gui.c	FUNCTION_37	IF_2
0x400260d	            0x7456	                            je 0x4002665	      2115	gui.c	FUNCTION_37	IF_2
0x400260f	    0x488b05000000	            mov rax, qword [0x04002616] 	      2115	gui.c	FUNCTION_37	IF_2
0x4002616	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      2115	gui.c	FUNCTION_37	IF_2
0x4002619	          0x4863d2	                         movsxd rdx, edx	      2115	gui.c	FUNCTION_37	IF_2
0x400261c	        0x48c1e202	                              shl rdx, 2	      2115	gui.c	FUNCTION_37	IF_2
0x4002620	          0x4801d0	                            add rax, rdx	      2115	gui.c	FUNCTION_37	IF_2
0x4002623	            0x8b00	                    mov eax, dword [rax]	      2115	gui.c	FUNCTION_37	IF_2
0x4002625	            0x85c0	                           test eax, eax	      2115	gui.c	FUNCTION_37	IF_2
0x4002627	            0x743c	                            je 0x4002665	      2115	gui.c	FUNCTION_37	IF_2
0x4002629	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      2117	gui.c	FUNCTION_37	IF_2	CALL_2
0x400262d	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2117	gui.c	FUNCTION_37	IF_2	CALL_2
0x4002630	          0x4889d6	                            mov rsi, rdx	      2117	gui.c	FUNCTION_37	IF_2	CALL_2
0x4002633	            0x89c7	                            mov edi, eax	      2117	gui.c	FUNCTION_37	IF_2	CALL_2
0x4002635	      0xe800000000	                          call 0x400263a	      2117	gui.c	FUNCTION_37	IF_2	CALL_2
0x400263a	          0x4189c2	                           mov r10d, eax	      2117	gui.c	FUNCTION_37	IF_2	CALL_2
0x400263d	          0x8b7dc4	             mov edi, dword [rbp - 0x3c]	      2117	gui.c	FUNCTION_37	IF_2	CALL_2
0x4002640	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	      2117	gui.c	FUNCTION_37	IF_2	CALL_2
0x4002644	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      2117	gui.c	FUNCTION_37	IF_2	CALL_2
0x4002648	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      2117	gui.c	FUNCTION_37	IF_2	CALL_2
0x400264b	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2117	gui.c	FUNCTION_37	IF_2	CALL_2
0x400264f	          0x4189f9	                            mov r9d, edi	      2117	gui.c	FUNCTION_37	IF_2	CALL_2
0x4002652	          0x4989f0	                             mov r8, rsi	      2117	gui.c	FUNCTION_37	IF_2	CALL_2
0x4002655	          0x4489d6	                           mov esi, r10d	      2117	gui.c	FUNCTION_37	IF_2	CALL_2
0x4002658	          0x4889c7	                            mov rdi, rax	      2117	gui.c	FUNCTION_37	IF_2	CALL_2
0x400265b	      0xe800000000	                          call 0x4002660	      2117	gui.c	FUNCTION_37	IF_2	CALL_2
0x4002660	      0xe9d6000000	                           jmp 0x400273b	      2117	gui.c	FUNCTION_37	IF_2	CALL_2
0x4002665	    0x8b0500000000	            mov eax, dword [0x0400266b] 	      2120	gui.c	FUNCTION_37	IF_3
0x400266b	      0x3dcc260000	                         cmp eax, 0x26cc	      2120	gui.c	FUNCTION_37	IF_3
0x4002670	            0x7567	                           jne 0x40026d9	      2120	gui.c	FUNCTION_37	IF_3
0x4002672	    0x488b15000000	            mov rdx, qword [0x04002679] 	      2120	gui.c	FUNCTION_37	IF_3
0x4002679	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2120	gui.c	FUNCTION_37	IF_3
0x400267c	            0x4898	                                    cdqe	      2120	gui.c	FUNCTION_37	IF_3
0x400267e	          0x4801d0	                            add rax, rdx	      2120	gui.c	FUNCTION_37	IF_3
0x4002681	           0xfb600	                   movzx eax, byte [rax]	      2120	gui.c	FUNCTION_37	IF_3
0x4002684	            0x3c8e	                            cmp al, 0x8e	      2120	gui.c	FUNCTION_37	IF_3
0x4002686	            0x7551	                           jne 0x40026d9	      2120	gui.c	FUNCTION_37	IF_3
0x4002688	    0x488b15000000	            mov rdx, qword [0x0400268f] 	      2122	gui.c	FUNCTION_37	IF_3
0x400268f	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2122	gui.c	FUNCTION_37	IF_3
0x4002692	            0x4898	                                    cdqe	      2122	gui.c	FUNCTION_37	IF_3
0x4002694	          0x4801d0	                            add rax, rdx	      2122	gui.c	FUNCTION_37	IF_3
0x4002697	           0xfb600	                   movzx eax, byte [rax]	      2122	gui.c	FUNCTION_37	IF_3
0x400269a	          0x8845e0	               mov byte [rbp - 0x20], al	      2122	gui.c	FUNCTION_37	IF_3
0x400269d	    0x488b15000000	            mov rdx, qword [0x040026a4] 	      2123	gui.c	FUNCTION_37	IF_3
0x40026a4	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2123	gui.c	FUNCTION_37	IF_3
0x40026a7	            0x4898	                                    cdqe	      2123	gui.c	FUNCTION_37	IF_3
0x40026a9	          0x4801d0	                            add rax, rdx	      2123	gui.c	FUNCTION_37	IF_3
0x40026ac	           0xfb600	                   movzx eax, byte [rax]	      2123	gui.c	FUNCTION_37	IF_3
0x40026af	          0x8845e1	               mov byte [rbp - 0x1f], al	      2123	gui.c	FUNCTION_37	IF_3
0x40026b2	          0x8b7dc4	             mov edi, dword [rbp - 0x3c]	      2124	gui.c	FUNCTION_37	IF_3	CALL_3
0x40026b5	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	      2124	gui.c	FUNCTION_37	IF_3	CALL_3
0x40026b9	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      2124	gui.c	FUNCTION_37	IF_3	CALL_3
0x40026bd	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      2124	gui.c	FUNCTION_37	IF_3	CALL_3
0x40026c0	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2124	gui.c	FUNCTION_37	IF_3	CALL_3
0x40026c4	          0x4189f9	                            mov r9d, edi	      2124	gui.c	FUNCTION_37	IF_3	CALL_3
0x40026c7	          0x4989f0	                             mov r8, rsi	      2124	gui.c	FUNCTION_37	IF_3	CALL_3
0x40026ca	      0xbe02000000	                              mov esi, 2	      2124	gui.c	FUNCTION_37	IF_3	CALL_3
0x40026cf	          0x4889c7	                            mov rdi, rax	      2124	gui.c	FUNCTION_37	IF_3	CALL_3
0x40026d2	      0xe800000000	                          call 0x40026d7	      2124	gui.c	FUNCTION_37	IF_3	CALL_3
0x40026d7	            0xeb62	                           jmp 0x400273b	      2124	gui.c	FUNCTION_37	IF_3	CALL_3
0x40026d9	    0x8b0500000000	            mov eax, dword [0x040026df] 	      2129	gui.c	FUNCTION_37
0x40026df	            0x85c0	                           test eax, eax	      2128	gui.c	FUNCTION_37	CALL_4
0x40026e1	            0x7421	                            je 0x4002704	      2128	gui.c	FUNCTION_37	CALL_4
0x40026e3	    0x488b05000000	            mov rax, qword [0x040026ea] 	      2129	gui.c	FUNCTION_37
0x40026ea	    0x488b0d000000	            mov rcx, qword [0x040026f1] 	      2129	gui.c	FUNCTION_37
0x40026f1	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      2129	gui.c	FUNCTION_37
0x40026f4	          0x4863d2	                         movsxd rdx, edx	      2129	gui.c	FUNCTION_37
0x40026f7	          0x4801ca	                            add rdx, rcx	      2129	gui.c	FUNCTION_37
0x40026fa	          0x4889d7	                            mov rdi, rdx	      2128	gui.c	FUNCTION_37	CALL_4
0x40026fd	            0xffd0	                                call rax	      2128	gui.c	FUNCTION_37	CALL_4
0x40026ff	          0x4189c2	                           mov r10d, eax	      2128	gui.c	FUNCTION_37	CALL_4
0x4002702	            0xeb06	                           jmp 0x400270a	      2128	gui.c	FUNCTION_37	CALL_4
0x4002704	    0x41ba01000000	                             mov r10d, 1	      2128	gui.c	FUNCTION_37	CALL_4
0x400270a	    0x488b15000000	            mov rdx, qword [0x04002711] 	      2128	gui.c	FUNCTION_37	CALL_4
0x4002711	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2128	gui.c	FUNCTION_37	CALL_4
0x4002714	            0x4898	                                    cdqe	      2128	gui.c	FUNCTION_37	CALL_4
0x4002716	        0x488d3c02	                    lea rdi, [rdx + rax]	      2128	gui.c	FUNCTION_37	CALL_4
0x400271a	          0x8b75c4	             mov esi, dword [rbp - 0x3c]	      2128	gui.c	FUNCTION_37	CALL_4
0x400271d	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      2128	gui.c	FUNCTION_37	CALL_4
0x4002721	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2128	gui.c	FUNCTION_37	CALL_4
0x4002725	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      2128	gui.c	FUNCTION_37	CALL_4
0x4002728	          0x4189f1	                            mov r9d, esi	      2128	gui.c	FUNCTION_37	CALL_4
0x400272b	          0x4989c8	                             mov r8, rcx	      2128	gui.c	FUNCTION_37	CALL_4
0x400272e	          0x4889d1	                            mov rcx, rdx	      2128	gui.c	FUNCTION_37	CALL_4
0x4002731	            0x89c2	                            mov edx, eax	      2128	gui.c	FUNCTION_37	CALL_4
0x4002733	          0x4489d6	                           mov esi, r10d	      2128	gui.c	FUNCTION_37	CALL_4
0x4002736	      0xe800000000	                          call 0x400273b	      2128	gui.c	FUNCTION_37	CALL_4
0x400273b	        0x488b75f8	                mov rsi, qword [rbp - 8]	      2134	gui.c	FUNCTION_37
0x400273f	    0x644833342528	                xor rsi, qword fs:[0x28]	      2134	gui.c	FUNCTION_37
0x4002748	            0x7405	                            je 0x400274f	      2134	gui.c	FUNCTION_37
0x400274a	      0xe800000000	                          call 0x400274f	      2134	gui.c	FUNCTION_37
0x400274f	              0xc9	                                   leave	      2134	gui.c	FUNCTION_37
0x4002750	              0xc3	                                     ret	      2134	gui.c	FUNCTION_37
gui_has_tabline	IF,1:functions,0:ELSE,0:CALL,1:SWITCH,0:WHILE,0:FOR,0:DO,0	20
0x4004409	              0x55	                                push rbp	      3691	gui.c	FUNCTION_55
0x400440a	          0x4889e5	                            mov rbp, rsp	      3691	gui.c	FUNCTION_55
0x400440d	      0xe800000000	                          call 0x4004412	      3692	gui.c	FUNCTION_55	IF_1	CALL_1
0x4004412	            0x85c0	                           test eax, eax	      3692	gui.c	FUNCTION_55	IF_1	CALL_1
0x4004414	            0x7428	                            je 0x400443e	      3692	gui.c	FUNCTION_55	IF_1	CALL_1
0x4004416	    0x488b05000000	            mov rax, qword [0x0400441d] 	      3693	gui.c	FUNCTION_55	IF_1
0x400441d	          0x4885c0	                           test rax, rax	      3693	gui.c	FUNCTION_55	IF_1
0x4004420	            0x741c	                            je 0x400443e	      3693	gui.c	FUNCTION_55	IF_1
0x4004422	    0x488b05000000	            mov rax, qword [0x04004429] 	      3694	gui.c	FUNCTION_55	IF_1
0x4004429	        0x4883f801	                              cmp rax, 1	      3694	gui.c	FUNCTION_55	IF_1
0x400442d	            0x7516	                           jne 0x4004445	      3694	gui.c	FUNCTION_55	IF_1
0x400442f	    0x488b05000000	            mov rax, qword [0x04004436] 	      3694	gui.c	FUNCTION_55	IF_1
0x4004436	          0x488b00	                    mov rax, qword [rax]	      3694	gui.c	FUNCTION_55	IF_1
0x4004439	          0x4885c0	                           test rax, rax	      3694	gui.c	FUNCTION_55	IF_1
0x400443c	            0x7507	                           jne 0x4004445	      3694	gui.c	FUNCTION_55	IF_1
0x400443e	      0xb800000000	                              mov eax, 0	      3695	gui.c	FUNCTION_55	IF_1
0x4004443	            0xeb05	                           jmp 0x400444a	      3695	gui.c	FUNCTION_55	IF_1
0x4004445	      0xb801000000	                              mov eax, 1	      3696	gui.c	FUNCTION_55
0x400444a	              0x5d	                                 pop rbp	      3697	gui.c	FUNCTION_55
0x400444b	              0xc3	                                     ret	      3697	gui.c	FUNCTION_55
gui_new_shellsize	IF,0:functions,0:ELSE,0:CALL,1:SWITCH,0:WHILE,0:FOR,0:DO,0	6
0x4001db1	              0x55	                                push rbp	      1695	gui.c	FUNCTION_24
0x4001db2	          0x4889e5	                            mov rbp, rsp	      1695	gui.c	FUNCTION_24
0x4001db5	      0xe800000000	                          call 0x4001dba	      1696	gui.c	FUNCTION_24	CALL_1
0x4001dba	              0x90	                                     nop	      1697	gui.c	FUNCTION_24
0x4001dbb	              0x5d	                                 pop rbp	      1697	gui.c	FUNCTION_24
0x4001dbc	              0xc3	                                     ret	      1697	gui.c	FUNCTION_24
gui_menu_cb	IF,1:functions,0:ELSE,0:CALL,3:SWITCH,0:WHILE,0:FOR,0:DO,0	34
0x4003ec8	              0x55	                                push rbp	      3413	gui.c	FUNCTION_52
0x4003ec9	          0x4889e5	                            mov rbp, rsp	      3413	gui.c	FUNCTION_52
0x4003ecc	        0x4883ec20	                           sub rsp, 0x20	      3413	gui.c	FUNCTION_52
0x4003ed0	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3413	gui.c	FUNCTION_52
0x4003ed4	    0x64488b042528	                mov rax, qword fs:[0x28]	      3413	gui.c	FUNCTION_52
0x4003edd	        0x488945f8	                mov qword [rbp - 8], rax	      3413	gui.c	FUNCTION_52
0x4003ee1	            0x31c0	                            xor eax, eax	      3413	gui.c	FUNCTION_52
0x4003ee3	    0x8b0500000000	            mov eax, dword [0x04003ee9] 	      3417	gui.c	FUNCTION_52	IF_1
0x4003ee9	            0x85c0	                           test eax, eax	      3417	gui.c	FUNCTION_52	IF_1
0x4003eeb	            0x7543	                           jne 0x4003f30	      3417	gui.c	FUNCTION_52	IF_1
0x4003eed	        0xc645f09b	            mov byte [rbp - 0x10], 0x9b 	      3420	gui.c	FUNCTION_52
0x4003ef1	        0xc645f1fa	              mov byte [rbp - 0xf], 0xfa	      3421	gui.c	FUNCTION_52
0x4003ef5	        0xc645f258	              mov byte [rbp - 0xe], 0x58	      3422	gui.c	FUNCTION_52
0x4003ef9	        0x488d45f0	                   lea rax, [rbp - 0x10]	      3423	gui.c	FUNCTION_52	CALL_1
0x4003efd	      0xbe03000000	                              mov esi, 3	      3423	gui.c	FUNCTION_52	CALL_1
0x4003f02	          0x4889c7	                            mov rdi, rax	      3423	gui.c	FUNCTION_52	CALL_1
0x4003f05	      0xe800000000	                          call 0x4003f0a	      3423	gui.c	FUNCTION_52	CALL_1
0x4003f0a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3424	gui.c	FUNCTION_52	CALL_2
0x4003f0e	        0x488d55f0	                   lea rdx, [rbp - 0x10]	      3424	gui.c	FUNCTION_52	CALL_2
0x4003f12	          0x4889d6	                            mov rsi, rdx	      3424	gui.c	FUNCTION_52	CALL_2
0x4003f15	          0x4889c7	                            mov rdi, rax	      3424	gui.c	FUNCTION_52	CALL_2
0x4003f18	      0xe800000000	                          call 0x4003f1d	      3424	gui.c	FUNCTION_52	CALL_2
0x4003f1d	        0x488d45f0	                   lea rax, [rbp - 0x10]	      3425	gui.c	FUNCTION_52	CALL_3
0x4003f21	      0xbe08000000	                              mov esi, 8	      3425	gui.c	FUNCTION_52	CALL_3
0x4003f26	          0x4889c7	                            mov rdi, rax	      3425	gui.c	FUNCTION_52	CALL_3
0x4003f29	      0xe800000000	                          call 0x4003f2e	      3425	gui.c	FUNCTION_52	CALL_3
0x4003f2e	            0xeb01	                           jmp 0x4003f31	      3425	gui.c	FUNCTION_52	CALL_3
0x4003f30	              0x90	                                     nop	      3418	gui.c	FUNCTION_52	IF_1
0x4003f31	        0x488b45f8	                mov rax, qword [rbp - 8]	      3426	gui.c	FUNCTION_52
0x4003f35	    0x644833042528	                xor rax, qword fs:[0x28]	      3426	gui.c	FUNCTION_52
0x4003f3e	            0x7405	                            je 0x4003f45	      3426	gui.c	FUNCTION_52
0x4003f40	      0xe800000000	                          call 0x4003f45	      3426	gui.c	FUNCTION_52
0x4003f45	              0xc9	                                   leave	      3426	gui.c	FUNCTION_52
0x4003f46	              0xc3	                                     ret	      3426	gui.c	FUNCTION_52
gui_get_base_height	IF,5:functions,0:ELSE,0:CALL,4:SWITCH,0:WHILE,0:FOR,0:DO,0	13
0x400186c	              0x55	                                push rbp	      1425	gui.c	FUNCTION_19
0x400186d	          0x4889e5	                            mov rbp, rsp	      1425	gui.c	FUNCTION_19
0x4001870	    0x8b0500000000	            mov eax, dword [0x04001876] 	      1428	gui.c	FUNCTION_19
0x4001876	             0x1c0	                            add eax, eax	      1428	gui.c	FUNCTION_19
0x4001878	          0x8945fc	                mov dword [rbp - 4], eax	      1428	gui.c	FUNCTION_19
0x400187b	    0x8b0500000000	            mov eax, dword [0x04001881] 	      1429	gui.c	FUNCTION_19	IF_1
0x4001881	            0x85c0	                           test eax, eax	      1429	gui.c	FUNCTION_19	IF_1
0x4001883	            0x7409	                            je 0x400188e	      1429	gui.c	FUNCTION_19	IF_1
0x4001885	    0x8b0500000000	            mov eax, dword [0x0400188b] 	      1430	gui.c	FUNCTION_19	IF_1
0x400188b	           0x145fc	                add dword [rbp - 4], eax	      1430	gui.c	FUNCTION_19	IF_1
0x400188e	          0x8b45fc	                mov eax, dword [rbp - 4]	      1461	gui.c	FUNCTION_19
0x4001891	              0x5d	                                 pop rbp	      1462	gui.c	FUNCTION_19
0x4001892	              0xc3	                                     ret	      1462	gui.c	FUNCTION_19
gui_write	IF,21:functions,0:ELSE,12:CALL,31:SWITCH,1:WHILE,2:FOR,1:DO,0	317
0x4001ed2	              0x55	                                push rbp	      1765	gui.c	FUNCTION_30
0x4001ed3	          0x4889e5	                            mov rbp, rsp	      1765	gui.c	FUNCTION_30
0x4001ed6	        0x4883ec30	                           sub rsp, 0x30	      1765	gui.c	FUNCTION_30
0x4001eda	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1765	gui.c	FUNCTION_30
0x4001ede	          0x8975d4	             mov dword [rbp - 0x2c], esi	      1765	gui.c	FUNCTION_30
0x4001ee1	    0x64488b042528	                mov rax, qword fs:[0x28]	      1765	gui.c	FUNCTION_30
0x4001eea	        0x488945f8	                mov qword [rbp - 8], rax	      1765	gui.c	FUNCTION_30
0x4001eee	            0x31c0	                            xor eax, eax	      1765	gui.c	FUNCTION_30
0x4001ef0	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      1767	gui.c	FUNCTION_30
0x4001ef7	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      1767	gui.c	FUNCTION_30
0x4001efe	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      1768	gui.c	FUNCTION_30
0x4001f05	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      1769	gui.c	FUNCTION_30
0x4001f0c	      0xe9d5030000	                           jmp 0x40022e6	      1797	gui.c	FUNCTION_30	WHILE_1
0x4001f11	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1799	gui.c	FUNCTION_30	WHILE_1	IF_4
0x4001f15	           0xfb600	                   movzx eax, byte [rax]	      1799	gui.c	FUNCTION_30	WHILE_1	IF_4
0x4001f18	            0x3c1b	                            cmp al, 0x1b	      1799	gui.c	FUNCTION_30	WHILE_1	IF_4
0x4001f1a	     0xf8571020000	                           jne 0x4002191	      1799	gui.c	FUNCTION_30	WHILE_1	IF_4
0x4001f20	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1799	gui.c	FUNCTION_30	WHILE_1	IF_4
0x4001f24	        0x4883c001	                              add rax, 1	      1799	gui.c	FUNCTION_30	WHILE_1	IF_4
0x4001f28	           0xfb600	                   movzx eax, byte [rax]	      1799	gui.c	FUNCTION_30	WHILE_1	IF_4
0x4001f2b	            0x3c7c	                            cmp al, 0x7c	      1799	gui.c	FUNCTION_30	WHILE_1	IF_4
0x4001f2d	     0xf855e020000	                           jne 0x4002191	      1799	gui.c	FUNCTION_30	WHILE_1	IF_4
0x4001f33	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1801	gui.c	FUNCTION_30	WHILE_1	IF_4
0x4001f37	        0x4883c002	                              add rax, 2	      1801	gui.c	FUNCTION_30	WHILE_1	IF_4
0x4001f3b	        0x488945f0	             mov qword [rbp - 0x10], rax	      1801	gui.c	FUNCTION_30	WHILE_1	IF_4
0x4001f3f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x4001f43	           0xfb600	                   movzx eax, byte [rax]	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x4001f46	           0xfb6c0	                           movzx eax, al	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x4001f49	          0x83e830	                           sub eax, 0x30	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x4001f4c	          0x83f809	                              cmp eax, 9	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x4001f4f	            0x7621	                           jbe 0x4001f72	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x4001f51	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x4001f55	           0xfb600	                   movzx eax, byte [rax]	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x4001f58	            0x3c2d	                            cmp al, 0x2d	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x4001f5a	            0x757f	                           jne 0x4001fdb	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x4001f5c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x4001f60	        0x4883c001	                              add rax, 1	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x4001f64	           0xfb600	                   movzx eax, byte [rax]	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x4001f67	           0xfb6c0	                           movzx eax, al	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x4001f6a	          0x83e830	                           sub eax, 0x30	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x4001f6d	          0x83f809	                              cmp eax, 9	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x4001f70	            0x7769	                            ja 0x4001fdb	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x4001f72	        0x488d45f0	                   lea rax, [rbp - 0x10]	      1804	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_10
0x4001f76	          0x4889c7	                            mov rdi, rax	      1804	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_10
0x4001f79	      0xe800000000	                          call 0x4001f7e	      1804	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_10
0x4001f7e	          0x8945e0	             mov dword [rbp - 0x20], eax	      1804	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_10
0x4001f81	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1805	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_6
0x4001f84	          0x4863d0	                         movsxd rdx, eax	      1805	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_6
0x4001f87	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1805	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_6
0x4001f8b	          0x4801c2	                            add rdx, rax	      1805	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_6
0x4001f8e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1805	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_6
0x4001f92	          0x4839c2	                            cmp rdx, rax	      1805	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_6
0x4001f95	     0xf8257030000	                            jb 0x40022f2	      1805	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_6
0x4001f9b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1807	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7
0x4001f9f	           0xfb600	                   movzx eax, byte [rax]	      1807	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7
0x4001fa2	            0x3c3b	                            cmp al, 0x3b	      1807	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7
0x4001fa4	            0x7535	                           jne 0x4001fdb	      1807	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7
0x4001fa6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1809	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7
0x4001faa	        0x4883c001	                              add rax, 1	      1809	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7
0x4001fae	        0x488945f0	             mov qword [rbp - 0x10], rax	      1809	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7
0x4001fb2	        0x488d45f0	                   lea rax, [rbp - 0x10]	      1810	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7	CALL_11
0x4001fb6	          0x4889c7	                            mov rdi, rax	      1810	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7	CALL_11
0x4001fb9	      0xe800000000	                          call 0x4001fbe	      1810	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7	CALL_11
0x4001fbe	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1810	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7	CALL_11
0x4001fc1	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1811	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7	IF_8
0x4001fc4	          0x4863d0	                         movsxd rdx, eax	      1811	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7	IF_8
0x4001fc7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1811	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7	IF_8
0x4001fcb	          0x4801c2	                            add rdx, rax	      1811	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7	IF_8
0x4001fce	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1811	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7	IF_8
0x4001fd2	          0x4839c2	                            cmp rdx, rax	      1811	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7	IF_8
0x4001fd5	     0xf821a030000	                            jb 0x40022f5	      1811	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7	IF_8
0x4001fdb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1815	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4001fdf	           0xfb600	                   movzx eax, byte [rax]	      1815	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4001fe2	           0xfb6c0	                           movzx eax, al	      1815	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4001fe5	          0x83e824	                           sub eax, 0x24	      1815	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4001fe8	          0x83f84f	                           cmp eax, 0x4f	      1815	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4001feb	     0xf8766010000	                            ja 0x4002157	      1815	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4001ff1	            0x89c0	                            mov eax, eax	      1815	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4001ff3	    0x488b04c50000	                  mov rax, qword [rax*8]	      1815	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4001ffb	            0xffe0	                                 jmp rax	      1815	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4001ffd	      0xbf0f270000	                         mov edi, 0x270f	      1818	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_12
0x4002002	      0xe800000000	                          call 0x4002007	      1818	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_12
0x4002007	      0xe800000000	                          call 0x400200c	      1819	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_13
0x400200c	    0xc60500000000	                mov byte [0x04002013], 0	      1820	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4002013	    0xc745ec010000	               mov dword [rbp - 0x14], 1	      1821	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x400201a	      0xe945010000	                           jmp 0x4002164	      1822	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x400201f	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1824	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_14
0x4002022	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1824	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_14
0x4002025	            0x89d6	                            mov esi, edx	      1824	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_14
0x4002027	            0x89c7	                            mov edi, eax	      1824	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_14
0x4002029	      0xe800000000	                          call 0x400202e	      1824	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_14
0x400202e	      0xe931010000	                           jmp 0x4002164	      1825	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4002033	    0xc745e8010000	               mov dword [rbp - 0x18], 1	      1827	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x400203a	      0xe925010000	                           jmp 0x4002164	      1828	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x400203f	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1830	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_9
0x4002042	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      1830	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_9
0x4002045	            0x7d17	                           jge 0x400205e	      1830	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_9
0x4002047	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1832	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_9
0x400204a	    0x890500000000	            mov dword [0x04002050], eax 	      1832	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_9
0x4002050	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1833	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_9
0x4002053	    0x890500000000	            mov dword [0x04002059], eax 	      1833	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_9
0x4002059	      0xe906010000	                           jmp 0x4002164	      1840	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x400205e	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1837	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	ELSE_3
0x4002061	    0x890500000000	            mov dword [0x04002067], eax 	      1837	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	ELSE_3
0x4002067	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1838	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	ELSE_3
0x400206a	    0x890500000000	            mov dword [0x04002070], eax 	      1838	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	ELSE_3
0x4002070	      0xe9ef000000	                           jmp 0x4002164	      1840	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4002075	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1842	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_10
0x4002078	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      1842	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_10
0x400207b	            0x7d17	                           jge 0x4002094	      1842	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_10
0x400207d	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1844	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_10
0x4002080	    0x890500000000	            mov dword [0x04002086], eax 	      1844	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_10
0x4002086	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1845	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_10
0x4002089	    0x890500000000	            mov dword [0x0400208f], eax 	      1845	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_10
0x400208f	      0xe9d0000000	                           jmp 0x4002164	      1852	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4002094	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1849	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	ELSE_4
0x4002097	    0x890500000000	            mov dword [0x0400209d], eax 	      1849	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	ELSE_4
0x400209d	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1850	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	ELSE_4
0x40020a0	    0x890500000000	            mov dword [0x040020a6], eax 	      1850	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	ELSE_4
0x40020a6	      0xe9b9000000	                           jmp 0x4002164	      1852	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x40020ab	    0x8b0500000000	            mov eax, dword [0x040020b1] 	      1854	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_15
0x40020b1	      0xbe01000000	                              mov esi, 1	      1854	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_15
0x40020b6	            0x89c7	                            mov edi, eax	      1854	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_15
0x40020b8	      0xe8fe110000	               call sym.gui_delete_lines	      1854	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_15
0x40020bd	      0xe9a2000000	                           jmp 0x4002164	      1855	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x40020c2	    0x8b0500000000	            mov eax, dword [0x040020c8] 	      1857	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_16
0x40020c8	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      1857	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_16
0x40020cb	            0x89d6	                            mov esi, edx	      1857	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_16
0x40020cd	            0x89c7	                            mov edi, eax	      1857	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_16
0x40020cf	      0xe8e7110000	               call sym.gui_delete_lines	      1857	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_16
0x40020d4	      0xe98b000000	                           jmp 0x4002164	      1858	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x40020d9	    0x8b0500000000	            mov eax, dword [0x040020df] 	      1860	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_17
0x40020df	      0xbe01000000	                              mov esi, 1	      1860	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_17
0x40020e4	            0x89c7	                            mov edi, eax	      1860	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_17
0x40020e6	      0xe891120000	               call sym.gui_insert_lines	      1860	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_17
0x40020eb	            0xeb77	                           jmp 0x4002164	      1861	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x40020ed	    0x8b0500000000	            mov eax, dword [0x040020f3] 	      1863	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_18
0x40020f3	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      1863	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_18
0x40020f6	            0x89d6	                            mov esi, edx	      1863	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_18
0x40020f8	            0x89c7	                            mov edi, eax	      1863	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_18
0x40020fa	      0xe87d120000	               call sym.gui_insert_lines	      1863	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_18
0x40020ff	            0xeb63	                           jmp 0x4002164	      1864	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4002101	    0x488b05000000	            mov rax, qword [0x04002108] 	      1867	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4002108	          0x8d48ff	                      lea ecx, [rax - 1]	      1866	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_19
0x400210b	    0x8b1500000000	            mov edx, dword [0x04002111] 	      1866	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_19
0x4002111	    0x8b3500000000	            mov esi, dword [0x04002117] 	      1866	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_19
0x4002117	    0x8b0500000000	            mov eax, dword [0x0400211d] 	      1866	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_19
0x400211d	            0x89c7	                            mov edi, eax	      1866	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_19
0x400211f	      0xe800000000	                          call 0x4002124	      1866	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_19
0x4002124	            0xeb3e	                           jmp 0x4002164	      1868	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4002126	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1870	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_20
0x4002129	            0x89c7	                            mov edi, eax	      1870	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_20
0x400212b	      0xe800000000	                          call 0x4002130	      1870	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_20
0x4002130	            0xeb32	                           jmp 0x4002164	      1871	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4002132	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1873	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_21
0x4002135	            0x89c7	                            mov edi, eax	      1873	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_21
0x4002137	      0xe800000000	                          call 0x400213c	      1873	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_21
0x400213c	            0xeb26	                           jmp 0x4002164	      1874	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x400213e	        0x837de000	               cmp dword [rbp - 0x20], 0	      1876	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_22
0x4002142	            0x7405	                            je 0x4002149	      1876	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_22
0x4002144	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1876	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_22
0x4002147	            0xeb05	                           jmp 0x400214e	      1876	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_22
0x4002149	      0xb814000000	                           mov eax, 0x14	      1876	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_22
0x400214e	            0x89c7	                            mov edi, eax	      1876	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_22
0x4002150	      0xe800000000	                          call 0x4002155	      1876	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_22
0x4002155	            0xeb0d	                           jmp 0x4002164	      1877	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4002157	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1879	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x400215b	        0x4883c001	                              add rax, 1	      1879	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x400215f	        0x488945f0	             mov qword [rbp - 0x10], rax	      1879	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4002163	              0x90	                                     nop	      1880	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4002164	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1882	gui.c	FUNCTION_30	WHILE_1	IF_4
0x4002168	        0x4883c001	                              add rax, 1	      1882	gui.c	FUNCTION_30	WHILE_1	IF_4
0x400216c	        0x488945f0	             mov qword [rbp - 0x10], rax	      1882	gui.c	FUNCTION_30	WHILE_1	IF_4
0x4002170	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1882	gui.c	FUNCTION_30	WHILE_1	IF_4
0x4002174	          0x4889c2	                            mov rdx, rax	      1882	gui.c	FUNCTION_30	WHILE_1	IF_4
0x4002177	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1882	gui.c	FUNCTION_30	WHILE_1	IF_4
0x400217b	          0x4829c2	                            sub rdx, rax	      1882	gui.c	FUNCTION_30	WHILE_1	IF_4
0x400217e	          0x4889d0	                            mov rax, rdx	      1882	gui.c	FUNCTION_30	WHILE_1	IF_4
0x4002181	          0x2945d4	             sub dword [rbp - 0x2c], eax	      1882	gui.c	FUNCTION_30	WHILE_1	IF_4
0x4002184	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1883	gui.c	FUNCTION_30	WHILE_1	IF_4
0x4002188	        0x488945d8	             mov qword [rbp - 0x28], rax	      1883	gui.c	FUNCTION_30	WHILE_1	IF_4
0x400218c	      0xe955010000	                           jmp 0x40022e6	      1883	gui.c	FUNCTION_30	WHILE_1	IF_4
0x4002191	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1889	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11
0x4002195	           0xfb600	                   movzx eax, byte [rax]	      1889	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11
0x4002198	            0x3c1f	                            cmp al, 0x1f	      1885	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11
0x400219a	     0xf87dc000000	                            ja 0x400227c	      1885	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11
0x40021a0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1892	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11
0x40021a4	           0xfb600	                   movzx eax, byte [rax]	      1892	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11
0x40021a7	            0x3c01	                               cmp al, 1	      1892	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11
0x40021a9	     0xf84cd000000	                            je 0x400227c	      1892	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11
0x40021af	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1894	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11
0x40021b3	           0xfb600	                   movzx eax, byte [rax]	      1894	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11
0x40021b6	            0x3c02	                               cmp al, 2	      1894	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11
0x40021b8	     0xf84be000000	                            je 0x400227c	      1894	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11
0x40021be	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1899	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12
0x40021c2	           0xfb600	                   movzx eax, byte [rax]	      1899	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12
0x40021c5	            0x3c0a	                             cmp al, 0xa	      1899	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12
0x40021c7	            0x753f	                           jne 0x4002208	      1899	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12
0x40021c9	    0xc70500000000	               mov dword [0x040021d3], 0	      1901	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12
0x40021d3	    0x8b1500000000	            mov edx, dword [0x040021d9] 	      1902	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12	IF_13
0x40021d9	    0x8b0500000000	            mov eax, dword [0x040021df] 	      1902	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12	IF_13
0x40021df	            0x39c2	                            cmp edx, eax	      1902	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12	IF_13
0x40021e1	            0x7d11	                           jge 0x40021f4	      1902	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12	IF_13
0x40021e3	    0x8b0500000000	            mov eax, dword [0x040021e9] 	      1903	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12	IF_13
0x40021e9	          0x83c001	                              add eax, 1	      1903	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12	IF_13
0x40021ec	    0x890500000000	            mov dword [0x040021f2], eax 	      1903	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12	IF_13
0x40021f2	            0xeb7d	                           jmp 0x4002271	      1903	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12	IF_13
0x40021f4	    0x8b0500000000	            mov eax, dword [0x040021fa] 	      1905	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12	CALL_24
0x40021fa	      0xbe01000000	                              mov esi, 1	      1905	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12	CALL_24
0x40021ff	            0x89c7	                            mov edi, eax	      1905	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12	CALL_24
0x4002201	      0xe8b5100000	               call sym.gui_delete_lines	      1905	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12	CALL_24
0x4002206	            0xeb69	                           jmp 0x4002271	      1905	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12	CALL_24
0x4002208	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1907	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_7	IF_14
0x400220c	           0xfb600	                   movzx eax, byte [rax]	      1907	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_7	IF_14
0x400220f	            0x3c0d	                             cmp al, 0xd	      1907	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_7	IF_14
0x4002211	            0x750c	                           jne 0x400221f	      1907	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_7	IF_14
0x4002213	    0xc70500000000	               mov dword [0x0400221d], 0	      1909	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_7	IF_14
0x400221d	            0xeb52	                           jmp 0x4002271	      1909	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_7	IF_14
0x400221f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1911	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_8	IF_15
0x4002223	           0xfb600	                   movzx eax, byte [rax]	      1911	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_8	IF_15
0x4002226	            0x3c08	                               cmp al, 8	      1911	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_8	IF_15
0x4002228	            0x751b	                           jne 0x4002245	      1911	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_8	IF_15
0x400222a	    0x8b0500000000	            mov eax, dword [0x04002230] 	      1913	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_8	IF_15	IF_16
0x4002230	            0x85c0	                           test eax, eax	      1913	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_8	IF_15	IF_16
0x4002232	            0x743d	                            je 0x4002271	      1913	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_8	IF_15	IF_16
0x4002234	    0x8b0500000000	            mov eax, dword [0x0400223a] 	      1914	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_8	IF_15	IF_16
0x400223a	          0x83e801	                              sub eax, 1	      1914	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_8	IF_15	IF_16
0x400223d	    0x890500000000	            mov dword [0x04002243], eax 	      1914	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_8	IF_15	IF_16
0x4002243	            0xeb2c	                           jmp 0x4002271	      1914	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_8	IF_15	IF_16
0x4002245	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1916	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_9	IF_17
0x4002249	           0xfb600	                   movzx eax, byte [rax]	      1916	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_9	IF_17
0x400224c	            0x3c0c	                             cmp al, 0xc	      1916	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_9	IF_17
0x400224e	            0x7511	                           jne 0x4002261	      1916	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_9	IF_17
0x4002250	    0x8b0500000000	            mov eax, dword [0x04002256] 	      1918	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_9	IF_17
0x4002256	          0x83c001	                              add eax, 1	      1918	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_9	IF_17
0x4002259	    0x890500000000	            mov dword [0x0400225f], eax 	      1918	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_9	IF_17
0x400225f	            0xeb10	                           jmp 0x4002271	      1918	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_9	IF_17
0x4002261	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1920	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_10	IF_18
0x4002265	           0xfb600	                   movzx eax, byte [rax]	      1920	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_10	IF_18
0x4002268	            0x3c07	                               cmp al, 7	      1920	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_10	IF_18
0x400226a	            0x7505	                           jne 0x4002271	      1920	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_10	IF_18
0x400226c	      0xe800000000	                          call 0x4002271	      1922	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_10	IF_18	CALL_25
0x4002271	        0x836dd401	               sub dword [rbp - 0x2c], 1	      1926	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11
0x4002275	      0x488345d801	               add qword [rbp - 0x28], 1	      1927	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11
0x400227a	            0xeb6a	                           jmp 0x40022e6	      1927	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11
0x400227c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1931	gui.c	FUNCTION_30	WHILE_1	ELSE_11
0x4002280	        0x488945f0	             mov qword [rbp - 0x10], rax	      1931	gui.c	FUNCTION_30	WHILE_1	ELSE_11
0x4002284	            0xeb10	                           jmp 0x4002296	      1932	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x4002286	        0x836dd401	               sub dword [rbp - 0x2c], 1	      1946	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x400228a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1947	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x400228e	        0x4883c001	                              add rax, 1	      1947	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x4002292	        0x488945f0	             mov qword [rbp - 0x10], rax	      1947	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x4002296	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      1932	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x400229a	            0x7e21	                           jle 0x40022bd	      1932	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x400229c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1936	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x40022a0	           0xfb600	                   movzx eax, byte [rax]	      1936	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x40022a3	            0x3c1f	                            cmp al, 0x1f	      1932	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x40022a5	            0x77df	                            ja 0x4002286	      1932	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x40022a7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1939	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x40022ab	           0xfb600	                   movzx eax, byte [rax]	      1939	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x40022ae	            0x3c01	                               cmp al, 1	      1939	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x40022b0	            0x74d4	                            je 0x4002286	      1939	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x40022b2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1941	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x40022b6	           0xfb600	                   movzx eax, byte [rax]	      1941	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x40022b9	            0x3c02	                               cmp al, 2	      1941	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x40022bb	            0x74c9	                            je 0x4002286	      1941	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x40022bd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1949	gui.c	FUNCTION_30	WHILE_1	ELSE_11	CALL_27
0x40022c1	          0x4889c2	                            mov rdx, rax	      1949	gui.c	FUNCTION_30	WHILE_1	ELSE_11	CALL_27
0x40022c4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1949	gui.c	FUNCTION_30	WHILE_1	ELSE_11	CALL_27
0x40022c8	          0x4829c2	                            sub rdx, rax	      1949	gui.c	FUNCTION_30	WHILE_1	ELSE_11	CALL_27
0x40022cb	          0x4889d0	                            mov rax, rdx	      1949	gui.c	FUNCTION_30	WHILE_1	ELSE_11	CALL_27
0x40022ce	            0x89c2	                            mov edx, eax	      1949	gui.c	FUNCTION_30	WHILE_1	ELSE_11	CALL_27
0x40022d0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1949	gui.c	FUNCTION_30	WHILE_1	ELSE_11	CALL_27
0x40022d4	            0x89d6	                            mov esi, edx	      1949	gui.c	FUNCTION_30	WHILE_1	ELSE_11	CALL_27
0x40022d6	          0x4889c7	                            mov rdi, rax	      1949	gui.c	FUNCTION_30	WHILE_1	ELSE_11	CALL_27
0x40022d9	      0xe82d010000	                     call sym.gui_outstr	      1949	gui.c	FUNCTION_30	WHILE_1	ELSE_11	CALL_27
0x40022de	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1950	gui.c	FUNCTION_30	WHILE_1	ELSE_11
0x40022e2	        0x488945d8	             mov qword [rbp - 0x28], rax	      1950	gui.c	FUNCTION_30	WHILE_1	ELSE_11
0x40022e6	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      1797	gui.c	FUNCTION_30	WHILE_1
0x40022ea	     0xf8521fcffff	                           jne 0x4001f11	      1797	gui.c	FUNCTION_30	WHILE_1
0x40022f0	            0xeb04	                           jmp 0x40022f6	      1797	gui.c	FUNCTION_30	WHILE_1
0x40022f2	              0x90	                                     nop	      1806	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_6
0x40022f3	            0xeb01	                           jmp 0x40022f6	      1806	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_6
0x40022f5	              0x90	                                     nop	      1812	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7	IF_8
0x40022f6	        0x837de800	               cmp dword [rbp - 0x18], 0	      1956	gui.c	FUNCTION_30	IF_19
0x40022fa	            0x740f	                            je 0x400230b	      1956	gui.c	FUNCTION_30	IF_19
0x40022fc	      0xbe01000000	                              mov esi, 1	      1957	gui.c	FUNCTION_30	CALL_28
0x4002301	      0xbf01000000	                              mov edi, 1	      1957	gui.c	FUNCTION_30	CALL_28
0x4002306	      0xe800000000	                          call 0x400230b	      1957	gui.c	FUNCTION_30	CALL_28
0x400230b	    0x488b15000000	            mov rdx, qword [0x04002312] 	      1961	gui.c	FUNCTION_30	IF_20
0x4002312	    0x488b05000000	            mov rax, qword [0x04002319] 	      1961	gui.c	FUNCTION_30	IF_20
0x4002319	          0x4839c2	                            cmp rdx, rax	      1961	gui.c	FUNCTION_30	IF_20
0x400231c	            0x740a	                            je 0x4002328	      1961	gui.c	FUNCTION_30	IF_20
0x400231e	    0xc70500000000	     mov dword [0x04002328], 0xffffffff 	      1962	gui.c	FUNCTION_30	IF_20
0x4002328	        0x837dec00	               cmp dword [rbp - 0x14], 0	      1968	gui.c	FUNCTION_30	IF_21
0x400232c	            0x7513	                           jne 0x4002341	      1968	gui.c	FUNCTION_30	IF_21
0x400232e	    0x488b15000000	            mov rdx, qword [0x04002335] 	      1968	gui.c	FUNCTION_30	IF_21
0x4002335	    0x488b05000000	            mov rax, qword [0x0400233c] 	      1968	gui.c	FUNCTION_30	IF_21
0x400233c	          0x4839c2	                            cmp rdx, rax	      1968	gui.c	FUNCTION_30	IF_21
0x400233f	            0x740c	                            je 0x400234d	      1968	gui.c	FUNCTION_30	IF_21
0x4002341	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1969	gui.c	FUNCTION_30	CALL_29
0x4002344	            0x89c7	                            mov edi, eax	      1969	gui.c	FUNCTION_30	CALL_29
0x4002346	      0xe800000000	                          call 0x400234b	      1969	gui.c	FUNCTION_30	CALL_29
0x400234b	            0xeb0a	                           jmp 0x4002357	      1969	gui.c	FUNCTION_30	CALL_29
0x400234d	      0xbf00000000	                              mov edi, 0	      1971	gui.c	FUNCTION_30	CALL_30
0x4002352	      0xe8f2380000	     call sym.gui_update_horiz_scrollbar	      1971	gui.c	FUNCTION_30	CALL_30
0x4002357	    0x488b05000000	            mov rax, qword [0x0400235e] 	      1972	gui.c	FUNCTION_30
0x400235e	    0x488905000000	            mov qword [0x04002365], rax 	      1972	gui.c	FUNCTION_30
0x4002365	    0xc70500000000	     mov dword [0x0400236f], 0xffffffff 	      1979	gui.c	FUNCTION_30
0x400236f	      0xe800000000	                          call 0x4002374	      1982	gui.c	FUNCTION_30	CALL_31
0x4002374	              0x90	                                     nop	      1983	gui.c	FUNCTION_30
0x4002375	        0x488b45f8	                mov rax, qword [rbp - 8]	      1983	gui.c	FUNCTION_30
0x4002379	    0x644833042528	                xor rax, qword fs:[0x28]	      1983	gui.c	FUNCTION_30
0x4002382	            0x7405	                            je 0x4002389	      1983	gui.c	FUNCTION_30
0x4002384	      0xe800000000	                          call 0x4002389	      1983	gui.c	FUNCTION_30
0x4002389	              0xc9	                                   leave	      1983	gui.c	FUNCTION_30
0x400238a	              0xc3	                                     ret	      1983	gui.c	FUNCTION_30
gui_attempt_start	IF,2:functions,0:ELSE,0:CALL,4:SWITCH,0:WHILE,0:FOR,0:DO,0	41
0x4000162	              0x55	                                push rbp	       159	gui.c	FUNCTION_2
0x4000163	          0x4889e5	                            mov rbp, rsp	       159	gui.c	FUNCTION_2
0x4000166	        0x4883ec20	                           sub rsp, 0x20	       159	gui.c	FUNCTION_2
0x400016a	    0x64488b042528	                mov rax, qword fs:[0x28]	       159	gui.c	FUNCTION_2
0x4000173	        0x488945f8	                mov qword [rbp - 8], rax	       159	gui.c	FUNCTION_2
0x4000177	            0x31c0	                            xor eax, eax	       159	gui.c	FUNCTION_2
0x4000179	    0x8b0500000000	            mov eax, dword [0x0400017f] 	       162	gui.c	FUNCTION_2
0x400017f	          0x83c001	                              add eax, 1	       162	gui.c	FUNCTION_2
0x4000182	    0x890500000000	            mov dword [0x04000188], eax 	       162	gui.c	FUNCTION_2
0x4000188	    0xc70500000000	               mov dword [0x04000192], 1	       163	gui.c	FUNCTION_2
0x4000192	    0xc70500000000	               mov dword [0x0400019c], 0	       166	gui.c	FUNCTION_2
0x400019c	      0xbf00000000	                              mov edi, 0	       169	gui.c	FUNCTION_2	CALL_1
0x40001a1	      0xe800000000	                          call 0x40001a6	       169	gui.c	FUNCTION_2	CALL_1
0x40001a6	    0x8b0500000000	            mov eax, dword [0x040001ac] 	       170	gui.c	FUNCTION_2
0x40001ac	          0x83e801	                              sub eax, 1	       170	gui.c	FUNCTION_2
0x40001af	    0x890500000000	            mov dword [0x040001b5], eax 	       170	gui.c	FUNCTION_2
0x40001b5	    0x8b0500000000	            mov eax, dword [0x040001bb] 	       173	gui.c	FUNCTION_2	IF_1
0x40001bb	            0x85c0	                           test eax, eax	       173	gui.c	FUNCTION_2	IF_1
0x40001bd	            0x742e	                            je 0x40001ed	       173	gui.c	FUNCTION_2	IF_1
0x40001bf	        0x488d55f0	                   lea rdx, [rbp - 0x10]	       179	gui.c	FUNCTION_2	IF_1	IF_2	CALL_2
0x40001c3	        0x488d45e8	                   lea rax, [rbp - 0x18]	       179	gui.c	FUNCTION_2	IF_1	IF_2	CALL_2
0x40001c7	          0x4889d6	                            mov rsi, rdx	       179	gui.c	FUNCTION_2	IF_1	IF_2	CALL_2
0x40001ca	          0x4889c7	                            mov rdi, rax	       179	gui.c	FUNCTION_2	IF_1	IF_2	CALL_2
0x40001cd	      0xe800000000	                          call 0x40001d2	       179	gui.c	FUNCTION_2	IF_1	IF_2	CALL_2
0x40001d2	          0x83f801	                              cmp eax, 1	       179	gui.c	FUNCTION_2	IF_1	IF_2	CALL_2
0x40001d5	            0x7511	                           jne 0x40001e8	       179	gui.c	FUNCTION_2	IF_1	IF_2	CALL_2
0x40001d7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       180	gui.c	FUNCTION_2	IF_1	CALL_3
0x40001db	          0x4889c6	                            mov rsi, rax	       180	gui.c	FUNCTION_2	IF_1	CALL_3
0x40001de	      0xbf3a000000	                           mov edi, 0x3a	       180	gui.c	FUNCTION_2	IF_1	CALL_3
0x40001e3	      0xe800000000	                          call 0x40001e8	       180	gui.c	FUNCTION_2	IF_1	CALL_3
0x40001e8	      0xe800000000	                          call 0x40001ed	       184	gui.c	FUNCTION_2	IF_1	CALL_4
0x40001ed	    0x8b0500000000	            mov eax, dword [0x040001f3] 	       187	gui.c	FUNCTION_2
0x40001f3	          0x83e801	                              sub eax, 1	       187	gui.c	FUNCTION_2
0x40001f6	    0x890500000000	            mov dword [0x040001fc], eax 	       187	gui.c	FUNCTION_2
0x40001fc	              0x90	                                     nop	       188	gui.c	FUNCTION_2
0x40001fd	        0x488b45f8	                mov rax, qword [rbp - 8]	       188	gui.c	FUNCTION_2
0x4000201	    0x644833042528	                xor rax, qword fs:[0x28]	       188	gui.c	FUNCTION_2
0x400020a	            0x7405	                            je 0x4000211	       188	gui.c	FUNCTION_2
0x400020c	      0xe800000000	                          call 0x4000211	       188	gui.c	FUNCTION_2
0x4000211	              0xc9	                                   leave	       188	gui.c	FUNCTION_2
0x4000212	              0xc3	                                     ret	       188	gui.c	FUNCTION_2
gui_set_fg_color	IF,0:functions,0:ELSE,0:CALL,3:SWITCH,0:WHILE,0:FOR,0:DO,0	16
0x4006008	              0x55	                                push rbp	      4745	gui.c	FUNCTION_73
0x4006009	          0x4889e5	                            mov rbp, rsp	      4745	gui.c	FUNCTION_73
0x400600c	        0x4883ec10	                           sub rsp, 0x10	      4745	gui.c	FUNCTION_73
0x4006010	        0x48897df8	                mov qword [rbp - 8], rdi	      4745	gui.c	FUNCTION_73
0x4006014	        0x488b45f8	                mov rax, qword [rbp - 8]	      4746	gui.c	FUNCTION_73	CALL_1
0x4006018	          0x4889c7	                            mov rdi, rax	      4746	gui.c	FUNCTION_73	CALL_1
0x400601b	      0xe800000000	                          call 0x4006020	      4746	gui.c	FUNCTION_73	CALL_1
0x4006020	    0x488905000000	            mov qword [0x04006027], rax 	      4746	gui.c	FUNCTION_73	CALL_1
0x4006027	        0x488b45f8	                mov rax, qword [rbp - 8]	      4747	gui.c	FUNCTION_73	CALL_3
0x400602b	          0x4889c7	                            mov rdi, rax	      4747	gui.c	FUNCTION_73	CALL_3
0x400602e	      0xe800000000	                          call 0x4006033	      4747	gui.c	FUNCTION_73	CALL_3
0x4006033	          0x4889c7	                            mov rdi, rax	      4747	gui.c	FUNCTION_73	CALL_3
0x4006036	      0xe800000000	                          call 0x400603b	      4747	gui.c	FUNCTION_73	CALL_3
0x400603b	              0x90	                                     nop	      4748	gui.c	FUNCTION_73
0x400603c	              0xc9	                                   leave	      4748	gui.c	FUNCTION_73
0x400603d	              0xc3	                                     ret	      4748	gui.c	FUNCTION_73
gui_read_child_pipe	IF,2:functions,0:ELSE,0:CALL,3:SWITCH,0:WHILE,0:FOR,0:DO,0	40
0x40003a1	              0x55	                                push rbp	       329	gui.c	FUNCTION_4
0x40003a2	          0x4889e5	                            mov rbp, rsp	       329	gui.c	FUNCTION_4
0x40003a5	        0x4883ec40	                           sub rsp, 0x40	       329	gui.c	FUNCTION_4
0x40003a9	          0x897dcc	             mov dword [rbp - 0x34], edi	       329	gui.c	FUNCTION_4
0x40003ac	    0x64488b042528	                mov rax, qword fs:[0x28]	       329	gui.c	FUNCTION_4
0x40003b5	        0x488945f8	                mov qword [rbp - 8], rax	       329	gui.c	FUNCTION_4
0x40003b9	            0x31c0	                            xor eax, eax	       329	gui.c	FUNCTION_4
0x40003bb	        0x488d4de0	                   lea rcx, [rbp - 0x20]	       334	gui.c	FUNCTION_4	CALL_1
0x40003bf	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       334	gui.c	FUNCTION_4	CALL_1
0x40003c2	      0xba09000000	                              mov edx, 9	       334	gui.c	FUNCTION_4	CALL_1
0x40003c7	          0x4889ce	                            mov rsi, rcx	       334	gui.c	FUNCTION_4	CALL_1
0x40003ca	            0x89c7	                            mov edi, eax	       334	gui.c	FUNCTION_4	CALL_1
0x40003cc	      0xe800000000	                          call 0x40003d1	       334	gui.c	FUNCTION_4	CALL_1
0x40003d1	        0x488945d8	             mov qword [rbp - 0x28], rax	       334	gui.c	FUNCTION_4	CALL_1
0x40003d5	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       336	gui.c	FUNCTION_4	CALL_2
0x40003d8	            0x89c7	                            mov edi, eax	       336	gui.c	FUNCTION_4	CALL_2
0x40003da	      0xe800000000	                          call 0x40003df	       336	gui.c	FUNCTION_4	CALL_2
0x40003df	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       337	gui.c	FUNCTION_4	IF_1
0x40003e4	            0x7907	                           jns 0x40003ed	       337	gui.c	FUNCTION_4	IF_1
0x40003e6	      0xb800000000	                              mov eax, 0	       338	gui.c	FUNCTION_4	IF_1
0x40003eb	            0xeb2f	                           jmp 0x400041c	       338	gui.c	FUNCTION_4	IF_1
0x40003ed	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       339	gui.c	FUNCTION_4
0x40003f1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       339	gui.c	FUNCTION_4
0x40003f5	          0x4801d0	                            add rax, rdx	       339	gui.c	FUNCTION_4
0x40003f8	          0xc60000	                       mov byte [rax], 0	       339	gui.c	FUNCTION_4
0x40003fb	        0x488d45e0	                   lea rax, [rbp - 0x20]	       340	gui.c	FUNCTION_4	IF_2	CALL_3
0x40003ff	      0xbe00000000	                              mov esi, 0	       340	gui.c	FUNCTION_4	IF_2	CALL_3
0x4000404	          0x4889c7	                            mov rdi, rax	       340	gui.c	FUNCTION_4	IF_2	CALL_3
0x4000407	      0xe800000000	                          call 0x400040c	       340	gui.c	FUNCTION_4	IF_2	CALL_3
0x400040c	            0x85c0	                           test eax, eax	       340	gui.c	FUNCTION_4	IF_2	CALL_3
0x400040e	            0x7507	                           jne 0x4000417	       340	gui.c	FUNCTION_4	IF_2	CALL_3
0x4000410	      0xb801000000	                              mov eax, 1	       341	gui.c	FUNCTION_4	IF_2
0x4000415	            0xeb05	                           jmp 0x400041c	       341	gui.c	FUNCTION_4	IF_2
0x4000417	      0xb802000000	                              mov eax, 2	       342	gui.c	FUNCTION_4
0x400041c	        0x488b4df8	                mov rcx, qword [rbp - 8]	       343	gui.c	FUNCTION_4
0x4000420	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       343	gui.c	FUNCTION_4
0x4000429	            0x7405	                            je 0x4000430	       343	gui.c	FUNCTION_4
0x400042b	      0xe800000000	                          call 0x4000430	       343	gui.c	FUNCTION_4
0x4000430	              0xc9	                                   leave	       343	gui.c	FUNCTION_4
0x4000431	              0xc3	                                     ret	       343	gui.c	FUNCTION_4
gui_mouse_moved	IF,7:functions,0:ELSE,0:CALL,11:SWITCH,0:WHILE,0:FOR,0:DO,0	132
0x40061ca	              0x55	                                push rbp	      4849	gui.c	FUNCTION_79
0x40061cb	          0x4889e5	                            mov rbp, rsp	      4849	gui.c	FUNCTION_79
0x40061ce	              0x53	                                push rbx	      4849	gui.c	FUNCTION_79
0x40061cf	        0x4883ec38	                           sub rsp, 0x38	      4849	gui.c	FUNCTION_79
0x40061d3	          0x897dcc	             mov dword [rbp - 0x34], edi	      4849	gui.c	FUNCTION_79
0x40061d6	          0x8975c8	             mov dword [rbp - 0x38], esi	      4849	gui.c	FUNCTION_79
0x40061d9	    0x64488b042528	                mov rax, qword fs:[0x28]	      4849	gui.c	FUNCTION_79
0x40061e2	        0x488945e8	             mov qword [rbp - 0x18], rax	      4849	gui.c	FUNCTION_79
0x40061e6	            0x31c0	                            xor eax, eax	      4849	gui.c	FUNCTION_79
0x40061e8	    0x8b0500000000	            mov eax, dword [0x040061ee] 	      4854	gui.c	FUNCTION_79	IF_1
0x40061ee	            0x85c0	                           test eax, eax	      4854	gui.c	FUNCTION_79	IF_1
0x40061f0	     0xf84b5010000	                            je 0x40063ab	      4854	gui.c	FUNCTION_79	IF_1
0x40061f6	    0x8b0500000000	            mov eax, dword [0x040061fc] 	      4854	gui.c	FUNCTION_79	IF_1
0x40061fc	            0x85c0	                           test eax, eax	      4854	gui.c	FUNCTION_79	IF_1
0x40061fe	     0xf85a7010000	                           jne 0x40063ab	      4854	gui.c	FUNCTION_79	IF_1
0x4006204	          0x8b55c8	             mov edx, dword [rbp - 0x38]	      4859	gui.c	FUNCTION_79	CALL_1
0x4006207	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      4859	gui.c	FUNCTION_79	CALL_1
0x400620a	            0x89d6	                            mov esi, edx	      4859	gui.c	FUNCTION_79	CALL_1
0x400620c	            0x89c7	                            mov edi, eax	      4859	gui.c	FUNCTION_79	CALL_1
0x400620e	      0xe837030000	                         call sym.xy2win	      4859	gui.c	FUNCTION_79	CALL_1
0x4006213	        0x488945d8	             mov qword [rbp - 0x28], rax	      4859	gui.c	FUNCTION_79	CALL_1
0x4006217	    0x8b0500000000	            mov eax, dword [0x0400621d] 	      4863	gui.c	FUNCTION_79	IF_2
0x400621d	            0x85c0	                           test eax, eax	      4863	gui.c	FUNCTION_79	IF_2
0x400621f	     0xf8490010000	                            je 0x40063b5	      4863	gui.c	FUNCTION_79	IF_2
0x4006225	    0x8b0500000000	            mov eax, dword [0x0400622b] 	      4864	gui.c	FUNCTION_79	IF_2
0x400622b	            0x85c0	                           test eax, eax	      4864	gui.c	FUNCTION_79	IF_2
0x400622d	     0xf8582010000	                           jne 0x40063b5	      4864	gui.c	FUNCTION_79	IF_2
0x4006233	    0x8b0500000000	            mov eax, dword [0x04006239] 	      4865	gui.c	FUNCTION_79	IF_2
0x4006239	          0x83e011	                           and eax, 0x11	      4865	gui.c	FUNCTION_79	IF_2
0x400623c	            0x85c0	                           test eax, eax	      4865	gui.c	FUNCTION_79	IF_2
0x400623e	     0xf8471010000	                            je 0x40063b5	      4865	gui.c	FUNCTION_79	IF_2
0x4006244	    0x8b0500000000	            mov eax, dword [0x0400624a] 	      4866	gui.c	FUNCTION_79	IF_2
0x400624a	      0x3d01020000	                          cmp eax, 0x201	      4866	gui.c	FUNCTION_79	IF_2
0x400624f	     0xf8460010000	                            je 0x40063b5	      4866	gui.c	FUNCTION_79	IF_2
0x4006255	    0x8b0500000000	            mov eax, dword [0x0400625b] 	      4867	gui.c	FUNCTION_79	IF_2
0x400625b	            0x85c0	                           test eax, eax	      4867	gui.c	FUNCTION_79	IF_2
0x400625d	     0xf8552010000	                           jne 0x40063b5	      4867	gui.c	FUNCTION_79	IF_2
0x4006263	    0x8b0500000000	            mov eax, dword [0x04006269] 	      4868	gui.c	FUNCTION_79	IF_2
0x4006269	            0x85c0	                           test eax, eax	      4868	gui.c	FUNCTION_79	IF_2
0x400626b	     0xf8544010000	                           jne 0x40063b5	      4868	gui.c	FUNCTION_79	IF_2
0x4006271	    0x8b0500000000	            mov eax, dword [0x04006277] 	      4869	gui.c	FUNCTION_79	IF_2
0x4006277	            0x85c0	                           test eax, eax	      4869	gui.c	FUNCTION_79	IF_2
0x4006279	     0xf8436010000	                            je 0x40063b5	      4869	gui.c	FUNCTION_79	IF_2
0x400627f	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      4872	gui.c	FUNCTION_79	IF_2	IF_3
0x4006283	     0xf8825010000	                            js 0x40063ae	      4872	gui.c	FUNCTION_79	IF_2	IF_3
0x4006289	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      4872	gui.c	FUNCTION_79	IF_2	IF_3
0x400628c	          0x4863d0	                         movsxd rdx, eax	      4872	gui.c	FUNCTION_79	IF_2	IF_3
0x400628f	    0x8b0500000000	            mov eax, dword [0x04006295] 	      4872	gui.c	FUNCTION_79	IF_2	IF_3
0x4006295	          0x4863c8	                         movsxd rcx, eax	      4872	gui.c	FUNCTION_79	IF_2	IF_3
0x4006298	    0x488b05000000	            mov rax, qword [0x0400629f] 	      4872	gui.c	FUNCTION_79	IF_2	IF_3
0x400629f	        0x480fafc1	                           imul rax, rcx	      4872	gui.c	FUNCTION_79	IF_2	IF_3
0x40062a3	          0x4839c2	                            cmp rdx, rax	      4872	gui.c	FUNCTION_79	IF_2	IF_3
0x40062a6	     0xf8f02010000	                            jg 0x40063ae	      4872	gui.c	FUNCTION_79	IF_2	IF_3
0x40062ac	    0x488b05000000	            mov rax, qword [0x040062b3] 	      4877	gui.c	FUNCTION_79	IF_2	IF_4
0x40062b3	        0x483945d8	            cmp qword [rbp - 0x28], rax 	      4877	gui.c	FUNCTION_79	IF_2	IF_4
0x40062b7	     0xf84f4000000	                            je 0x40063b1	      4877	gui.c	FUNCTION_79	IF_2	IF_4
0x40062bd	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      4877	gui.c	FUNCTION_79	IF_2	IF_4
0x40062c2	     0xf84e9000000	                            je 0x40063b1	      4877	gui.c	FUNCTION_79	IF_2	IF_4
0x40062c8	    0x8b0500000000	            mov eax, dword [0x040062ce] 	      4881	gui.c	FUNCTION_79	IF_2	IF_5	CALL_4
0x40062ce	          0x8b55c8	             mov edx, dword [rbp - 0x38]	      4881	gui.c	FUNCTION_79	IF_2	IF_5	CALL_4
0x40062d1	            0x29c2	                            sub edx, eax	      4881	gui.c	FUNCTION_79	IF_2	IF_5	CALL_4
0x40062d3	            0x89d0	                            mov eax, edx	      4881	gui.c	FUNCTION_79	IF_2	IF_5	CALL_4
0x40062d5	    0x8b1d00000000	            mov ebx, dword [0x040062db] 	      4881	gui.c	FUNCTION_79	IF_2	IF_5	CALL_4
0x40062db	              0x99	                                     cdq	      4881	gui.c	FUNCTION_79	IF_2	IF_5	CALL_4
0x40062dc	            0xf7fb	                                idiv ebx	      4881	gui.c	FUNCTION_79	IF_2	IF_5	CALL_4
0x40062de	            0x89c3	                            mov ebx, eax	      4881	gui.c	FUNCTION_79	IF_2	IF_5	CALL_4
0x40062e0	      0xe800000000	                          call 0x40062e5	      4881	gui.c	FUNCTION_79	IF_2	IF_5	CALL_4
0x40062e5	            0x39c3	                            cmp ebx, eax	      4881	gui.c	FUNCTION_79	IF_2	IF_5	CALL_4
0x40062e7	     0xf8cc7000000	                            jl 0x40063b4	      4881	gui.c	FUNCTION_79	IF_2	IF_5	CALL_4
0x40062ed	    0x8b0500000000	            mov eax, dword [0x040062f3] 	      4890	gui.c	FUNCTION_79	IF_2	IF_6
0x40062f3	            0x85c0	                           test eax, eax	      4890	gui.c	FUNCTION_79	IF_2	IF_6
0x40062f5	            0x7415	                            je 0x400630c	      4890	gui.c	FUNCTION_79	IF_2	IF_6
0x40062f7	        0xc645e01b	            mov byte [rbp - 0x20], 0x1b 	      4893	gui.c	FUNCTION_79	IF_2	IF_6
0x40062fb	        0x488d45e0	                   lea rax, [rbp - 0x20]	      4894	gui.c	FUNCTION_79	IF_2	IF_6	CALL_5
0x40062ff	      0xbe01000000	                              mov esi, 1	      4894	gui.c	FUNCTION_79	IF_2	IF_6	CALL_5
0x4006304	          0x4889c7	                            mov rdi, rax	      4894	gui.c	FUNCTION_79	IF_2	IF_6	CALL_5
0x4006307	      0xe800000000	                          call 0x400630c	      4894	gui.c	FUNCTION_79	IF_2	IF_6	CALL_5
0x400630c	        0xc645e09b	            mov byte [rbp - 0x20], 0x9b 	      4896	gui.c	FUNCTION_79	IF_2
0x4006310	        0xc645e1fb	            mov byte [rbp - 0x1f], 0xfb 	      4897	gui.c	FUNCTION_79	IF_2
0x4006314	        0xc645e258	            mov byte [rbp - 0x1e], 0x58 	      4898	gui.c	FUNCTION_79	IF_2
0x4006318	        0xc645e300	                mov byte [rbp - 0x1d], 0	      4899	gui.c	FUNCTION_79	IF_2
0x400631c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4902	gui.c	FUNCTION_79	IF_2	CALL_7
0x4006320	    0x8b90a0000000	            mov edx, dword [rax + 0xa0] 	      4902	gui.c	FUNCTION_79	IF_2	CALL_7
0x4006326	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4902	gui.c	FUNCTION_79	IF_2	CALL_7
0x400632a	    0x8b889c000000	            mov ecx, dword [rax + 0x9c] 	      4902	gui.c	FUNCTION_79	IF_2	CALL_7
0x4006330	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4902	gui.c	FUNCTION_79	IF_2	CALL_7
0x4006334	    0x8b80a8010000	           mov eax, dword [rax + 0x1a8] 	      4902	gui.c	FUNCTION_79	IF_2	CALL_7
0x400633a	             0x1c8	                            add eax, ecx	      4902	gui.c	FUNCTION_79	IF_2	CALL_7
0x400633c	             0x1c2	                            add edx, eax	      4900	gui.c	FUNCTION_79	IF_2	CALL_6
0x400633e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4901	gui.c	FUNCTION_79	IF_2
0x4006342	    0x8b80a8000000	            mov eax, dword [rax + 0xa8] 	      4901	gui.c	FUNCTION_79	IF_2
0x4006348	            0x85c0	                           test eax, eax	      4900	gui.c	FUNCTION_79	IF_2	CALL_6
0x400634a	            0x7412	                            je 0x400635e	      4900	gui.c	FUNCTION_79	IF_2	CALL_6
0x400634c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4901	gui.c	FUNCTION_79	IF_2
0x4006350	    0x8b80a8000000	            mov eax, dword [rax + 0xa8] 	      4901	gui.c	FUNCTION_79	IF_2
0x4006356	    0x8d8810270000	                 lea ecx, [rax + 0x2710]	      4900	gui.c	FUNCTION_79	IF_2	CALL_6
0x400635c	            0xeb05	                           jmp 0x4006363	      4900	gui.c	FUNCTION_79	IF_2	CALL_6
0x400635e	      0xb9ffffffff	                     mov ecx, 0xffffffff	      4900	gui.c	FUNCTION_79	IF_2	CALL_6
0x4006363	        0x488d45e0	                   lea rax, [rbp - 0x20]	      4900	gui.c	FUNCTION_79	IF_2	CALL_6
0x4006367	        0x4883c004	                              add rax, 4	      4900	gui.c	FUNCTION_79	IF_2	CALL_6
0x400636b	            0x89ce	                            mov esi, ecx	      4900	gui.c	FUNCTION_79	IF_2	CALL_6
0x400636d	          0x4889c7	                            mov rdi, rax	      4900	gui.c	FUNCTION_79	IF_2	CALL_6
0x4006370	      0xe8d0d2ffff	               call sym.fill_mouse_coord	      4900	gui.c	FUNCTION_79	IF_2	CALL_6
0x4006375	        0x488d45e0	                   lea rax, [rbp - 0x20]	      4904	gui.c	FUNCTION_79	IF_2	CALL_8
0x4006379	      0xbe08000000	                              mov esi, 8	      4904	gui.c	FUNCTION_79	IF_2	CALL_8
0x400637e	          0x4889c7	                            mov rdi, rax	      4904	gui.c	FUNCTION_79	IF_2	CALL_8
0x4006381	      0xe800000000	                          call 0x4006386	      4904	gui.c	FUNCTION_79	IF_2	CALL_8
0x4006386	        0xc645e303	                mov byte [rbp - 0x1d], 3	      4905	gui.c	FUNCTION_79	IF_2
0x400638a	        0x488d45e0	                   lea rax, [rbp - 0x20]	      4906	gui.c	FUNCTION_79	IF_2	CALL_9
0x400638e	      0xbe08000000	                              mov esi, 8	      4906	gui.c	FUNCTION_79	IF_2	CALL_9
0x4006393	          0x4889c7	                            mov rdi, rax	      4906	gui.c	FUNCTION_79	IF_2	CALL_9
0x4006396	      0xe800000000	                          call 0x400639b	      4906	gui.c	FUNCTION_79	IF_2	CALL_9
0x400639b	      0xe800000000	                          call 0x40063a0	      4909	gui.c	FUNCTION_79	IF_2	IF_7	CALL_10
0x40063a0	            0x85c0	                           test eax, eax	      4909	gui.c	FUNCTION_79	IF_2	IF_7	CALL_10
0x40063a2	            0x7411	                            je 0x40063b5	      4909	gui.c	FUNCTION_79	IF_2	IF_7	CALL_10
0x40063a4	      0xe800000000	                          call 0x40063a9	      4910	gui.c	FUNCTION_79	IF_2	CALL_11
0x40063a9	            0xeb0a	                           jmp 0x40063b5	      4910	gui.c	FUNCTION_79	IF_2	CALL_11
0x40063ab	              0x90	                                     nop	      4855	gui.c	FUNCTION_79	IF_1
0x40063ac	            0xeb07	                           jmp 0x40063b5	      4855	gui.c	FUNCTION_79	IF_1
0x40063ae	              0x90	                                     nop	      4873	gui.c	FUNCTION_79	IF_2	IF_3
0x40063af	            0xeb04	                           jmp 0x40063b5	      4873	gui.c	FUNCTION_79	IF_2	IF_3
0x40063b1	              0x90	                                     nop	      4878	gui.c	FUNCTION_79	IF_2	IF_4
0x40063b2	            0xeb01	                           jmp 0x40063b5	      4878	gui.c	FUNCTION_79	IF_2	IF_4
0x40063b4	              0x90	                                     nop	      4882	gui.c	FUNCTION_79	IF_2	IF_5
0x40063b5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4913	gui.c	FUNCTION_79
0x40063b9	    0x644833042528	                xor rax, qword fs:[0x28]	      4913	gui.c	FUNCTION_79
0x40063c2	            0x7405	                            je 0x40063c9	      4913	gui.c	FUNCTION_79
0x40063c4	      0xe800000000	                          call 0x40063c9	      4913	gui.c	FUNCTION_79
0x40063c9	        0x4883c438	                           add rsp, 0x38	      4913	gui.c	FUNCTION_79
0x40063cd	              0x5b	                                 pop rbx	      4913	gui.c	FUNCTION_79
0x40063ce	              0x5d	                                 pop rbp	      4913	gui.c	FUNCTION_79
0x40063cf	              0xc3	                                     ret	      4913	gui.c	FUNCTION_79
gui_send_mouse_event	IF,32:functions,0:ELSE,9:CALL,26:SWITCH,2:WHILE,0:FOR,0:DO,0	534
0x40036be	              0x55	                                push rbp	      3087	gui.c	FUNCTION_50
0x40036bf	          0x4889e5	                            mov rbp, rsp	      3087	gui.c	FUNCTION_50
0x40036c2	        0x4883ec60	                           sub rsp, 0x60	      3087	gui.c	FUNCTION_50
0x40036c6	          0x897dbc	             mov dword [rbp - 0x44], edi	      3087	gui.c	FUNCTION_50
0x40036c9	          0x8975b8	             mov dword [rbp - 0x48], esi	      3087	gui.c	FUNCTION_50
0x40036cc	          0x8955b4	             mov dword [rbp - 0x4c], edx	      3087	gui.c	FUNCTION_50
0x40036cf	          0x894db0	             mov dword [rbp - 0x50], ecx	      3087	gui.c	FUNCTION_50
0x40036d2	        0x448945ac	             mov dword [rbp - 0x54], r8d	      3087	gui.c	FUNCTION_50
0x40036d6	    0x64488b042528	                mov rax, qword fs:[0x28]	      3087	gui.c	FUNCTION_50
0x40036df	        0x488945f8	                mov qword [rbp - 8], rax	      3087	gui.c	FUNCTION_50
0x40036e3	            0x31c0	                            xor eax, eax	      3087	gui.c	FUNCTION_50
0x40036e5	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      3096	gui.c	FUNCTION_50
0x40036ec	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      3102	gui.c	FUNCTION_50	SWITCH_1
0x40036ef	      0x3d00030000	                          cmp eax, 0x300	      3102	gui.c	FUNCTION_50	SWITCH_1
0x40036f4	            0x7434	                            je 0x400372a	      3102	gui.c	FUNCTION_50	SWITCH_1
0x40036f6	      0x3d00030000	                          cmp eax, 0x300	      3102	gui.c	FUNCTION_50	SWITCH_1
0x40036fb	            0x7f13	                            jg 0x4003710	      3102	gui.c	FUNCTION_50	SWITCH_1
0x40036fd	      0x3d00010000	                          cmp eax, 0x100	      3102	gui.c	FUNCTION_50	SWITCH_1
0x4003702	            0x7438	                            je 0x400373c	      3102	gui.c	FUNCTION_50	SWITCH_1
0x4003704	      0x3d00020000	                          cmp eax, 0x200	      3102	gui.c	FUNCTION_50	SWITCH_1
0x4003709	            0x743a	                            je 0x4003745	      3102	gui.c	FUNCTION_50	SWITCH_1
0x400370b	      0xe94e010000	                           jmp 0x400385e	      3102	gui.c	FUNCTION_50	SWITCH_1
0x4003710	      0x3d00050000	                          cmp eax, 0x500	      3102	gui.c	FUNCTION_50	SWITCH_1
0x4003715	            0x7437	                            je 0x400374e	      3102	gui.c	FUNCTION_50	SWITCH_1
0x4003717	      0x3d00060000	                          cmp eax, 0x600	      3102	gui.c	FUNCTION_50	SWITCH_1
0x400371c	            0x7439	                            je 0x4003757	      3102	gui.c	FUNCTION_50	SWITCH_1
0x400371e	      0x3d00040000	                          cmp eax, 0x400	      3102	gui.c	FUNCTION_50	SWITCH_1
0x4003723	            0x740e	                            je 0x4003733	      3102	gui.c	FUNCTION_50	SWITCH_1
0x4003725	      0xe934010000	                           jmp 0x400385e	      3102	gui.c	FUNCTION_50	SWITCH_1
0x400372a	    0xc745d0590000	           mov dword [rbp - 0x30], 0x59 	      3105	gui.c	FUNCTION_50	SWITCH_1
0x4003731	            0xeb2b	                           jmp 0x400375e	      3106	gui.c	FUNCTION_50	SWITCH_1
0x4003733	    0xc745d05c0000	           mov dword [rbp - 0x30], 0x5c 	      3108	gui.c	FUNCTION_50	SWITCH_1
0x400373a	            0xeb22	                           jmp 0x400375e	      3109	gui.c	FUNCTION_50	SWITCH_1
0x400373c	    0xc745d04b0000	           mov dword [rbp - 0x30], 0x4b 	      3111	gui.c	FUNCTION_50	SWITCH_1
0x4003743	            0xeb19	                           jmp 0x400375e	      3112	gui.c	FUNCTION_50	SWITCH_1
0x4003745	    0xc745d04c0000	           mov dword [rbp - 0x30], 0x4c 	      3114	gui.c	FUNCTION_50	SWITCH_1
0x400374c	            0xeb10	                           jmp 0x400375e	      3115	gui.c	FUNCTION_50	SWITCH_1
0x400374e	    0xc745d04d0000	           mov dword [rbp - 0x30], 0x4d 	      3117	gui.c	FUNCTION_50	SWITCH_1
0x4003755	            0xeb07	                           jmp 0x400375e	      3118	gui.c	FUNCTION_50	SWITCH_1
0x4003757	    0xc745d04e0000	           mov dword [rbp - 0x30], 0x4e 	      3120	gui.c	FUNCTION_50	SWITCH_1
0x400375e	    0x8b0500000000	            mov eax, dword [0x04003764] 	      3124	gui.c	FUNCTION_50	SWITCH_1	IF_1
0x4003764	            0x85c0	                           test eax, eax	      3124	gui.c	FUNCTION_50	SWITCH_1	IF_1
0x4003766	     0xf85cb060000	                           jne 0x4003e37	      3124	gui.c	FUNCTION_50	SWITCH_1	IF_1
0x400376c	        0xc645e39b	            mov byte [rbp - 0x1d], 0x9b 	      3127	gui.c	FUNCTION_50	SWITCH_1
0x4003770	        0xc645e4fd	            mov byte [rbp - 0x1c], 0xfd 	      3128	gui.c	FUNCTION_50	SWITCH_1
0x4003774	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      3129	gui.c	FUNCTION_50	SWITCH_1
0x4003777	          0x8845e5	               mov byte [rbp - 0x1b], al	      3129	gui.c	FUNCTION_50	SWITCH_1
0x400377a	        0x488d55cc	                   lea rdx, [rbp - 0x34]	      3133	gui.c	FUNCTION_50	SWITCH_1	CALL_1
0x400377e	          0x8b4db4	             mov ecx, dword [rbp - 0x4c]	      3133	gui.c	FUNCTION_50	SWITCH_1	CALL_1
0x4003781	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      3133	gui.c	FUNCTION_50	SWITCH_1	CALL_1
0x4003784	            0x89ce	                            mov esi, ecx	      3133	gui.c	FUNCTION_50	SWITCH_1	CALL_1
0x4003786	            0x89c7	                            mov edi, eax	      3133	gui.c	FUNCTION_50	SWITCH_1	CALL_1
0x4003788	      0xe800000000	                          call 0x400378d	      3133	gui.c	FUNCTION_50	SWITCH_1	CALL_1
0x400378d	          0x8945d4	             mov dword [rbp - 0x2c], eax	      3133	gui.c	FUNCTION_50	SWITCH_1	CALL_1
0x4003790	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      3134	gui.c	FUNCTION_50	SWITCH_1
0x4003793	          0x8d507f	                   lea edx, [rax + 0x7f]	      3134	gui.c	FUNCTION_50	SWITCH_1
0x4003796	            0x85c0	                           test eax, eax	      3134	gui.c	FUNCTION_50	SWITCH_1
0x4003798	           0xf48c2	                          cmovs eax, edx	      3134	gui.c	FUNCTION_50	SWITCH_1
0x400379b	          0xc1f807	                              sar eax, 7	      3134	gui.c	FUNCTION_50	SWITCH_1
0x400379e	          0x83c021	                           add eax, 0x21	      3134	gui.c	FUNCTION_50	SWITCH_1
0x40037a1	          0x8845e6	               mov byte [rbp - 0x1a], al	      3134	gui.c	FUNCTION_50	SWITCH_1
0x40037a4	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      3135	gui.c	FUNCTION_50	SWITCH_1
0x40037a7	              0x99	                                     cdq	      3135	gui.c	FUNCTION_50	SWITCH_1
0x40037a8	          0xc1ea19	                           shr edx, 0x19	      3135	gui.c	FUNCTION_50	SWITCH_1
0x40037ab	             0x1d0	                            add eax, edx	      3135	gui.c	FUNCTION_50	SWITCH_1
0x40037ad	          0x83e07f	                           and eax, 0x7f	      3135	gui.c	FUNCTION_50	SWITCH_1
0x40037b0	            0x29d0	                            sub eax, edx	      3135	gui.c	FUNCTION_50	SWITCH_1
0x40037b2	          0x83c021	                           add eax, 0x21	      3135	gui.c	FUNCTION_50	SWITCH_1
0x40037b5	          0x8845e7	               mov byte [rbp - 0x19], al	      3135	gui.c	FUNCTION_50	SWITCH_1
0x40037b8	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      3136	gui.c	FUNCTION_50	SWITCH_1
0x40037bb	          0x8d507f	                   lea edx, [rax + 0x7f]	      3136	gui.c	FUNCTION_50	SWITCH_1
0x40037be	            0x85c0	                           test eax, eax	      3136	gui.c	FUNCTION_50	SWITCH_1
0x40037c0	           0xf48c2	                          cmovs eax, edx	      3136	gui.c	FUNCTION_50	SWITCH_1
0x40037c3	          0xc1f807	                              sar eax, 7	      3136	gui.c	FUNCTION_50	SWITCH_1
0x40037c6	          0x83c021	                           add eax, 0x21	      3136	gui.c	FUNCTION_50	SWITCH_1
0x40037c9	          0x8845e8	               mov byte [rbp - 0x18], al	      3136	gui.c	FUNCTION_50	SWITCH_1
0x40037cc	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      3137	gui.c	FUNCTION_50	SWITCH_1
0x40037cf	              0x99	                                     cdq	      3137	gui.c	FUNCTION_50	SWITCH_1
0x40037d0	          0xc1ea19	                           shr edx, 0x19	      3137	gui.c	FUNCTION_50	SWITCH_1
0x40037d3	             0x1d0	                            add eax, edx	      3137	gui.c	FUNCTION_50	SWITCH_1
0x40037d5	          0x83e07f	                           and eax, 0x7f	      3137	gui.c	FUNCTION_50	SWITCH_1
0x40037d8	            0x29d0	                            sub eax, edx	      3137	gui.c	FUNCTION_50	SWITCH_1
0x40037da	          0x83c021	                           add eax, 0x21	      3137	gui.c	FUNCTION_50	SWITCH_1
0x40037dd	          0x8845e9	               mov byte [rbp - 0x17], al	      3137	gui.c	FUNCTION_50	SWITCH_1
0x40037e0	        0x837dac00	               cmp dword [rbp - 0x54], 0	      3139	gui.c	FUNCTION_50	SWITCH_1	IF_2
0x40037e4	            0x751a	                           jne 0x4003800	      3139	gui.c	FUNCTION_50	SWITCH_1	IF_2
0x40037e6	        0x488d45e0	                   lea rax, [rbp - 0x20]	      3140	gui.c	FUNCTION_50	SWITCH_1	CALL_2
0x40037ea	        0x4883c003	                              add rax, 3	      3140	gui.c	FUNCTION_50	SWITCH_1	CALL_2
0x40037ee	      0xbe07000000	                              mov esi, 7	      3140	gui.c	FUNCTION_50	SWITCH_1	CALL_2
0x40037f3	          0x4889c7	                            mov rdi, rax	      3140	gui.c	FUNCTION_50	SWITCH_1	CALL_2
0x40037f6	      0xe800000000	                          call 0x40037fb	      3140	gui.c	FUNCTION_50	SWITCH_1	CALL_2
0x40037fb	      0xe944060000	                           jmp 0x4003e44	      3154	gui.c	FUNCTION_50	SWITCH_1
0x4003800	        0xc645e09b	            mov byte [rbp - 0x20], 0x9b 	      3143	gui.c	FUNCTION_50	SWITCH_1	ELSE_1
0x4003804	        0xc645e1fc	            mov byte [rbp - 0x1f], 0xfc 	      3144	gui.c	FUNCTION_50	SWITCH_1	ELSE_1
0x4003808	        0xc645e200	                mov byte [rbp - 0x1e], 0	      3145	gui.c	FUNCTION_50	SWITCH_1	ELSE_1
0x400380c	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      3146	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_3
0x400380f	          0x83e004	                              and eax, 4	      3146	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_3
0x4003812	            0x85c0	                           test eax, eax	      3146	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_3
0x4003814	            0x740a	                            je 0x4003820	      3146	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_3
0x4003816	         0xfb645e2	            movzx eax, byte [rbp - 0x1e]	      3147	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_3
0x400381a	          0x83c802	                               or eax, 2	      3147	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_3
0x400381d	          0x8845e2	               mov byte [rbp - 0x1e], al	      3147	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_3
0x4003820	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      3148	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_4
0x4003823	          0x83e010	                           and eax, 0x10	      3148	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_4
0x4003826	            0x85c0	                           test eax, eax	      3148	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_4
0x4003828	            0x740a	                            je 0x4003834	      3148	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_4
0x400382a	         0xfb645e2	            movzx eax, byte [rbp - 0x1e]	      3149	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_4
0x400382e	          0x83c804	                               or eax, 4	      3149	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_4
0x4003831	          0x8845e2	               mov byte [rbp - 0x1e], al	      3149	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_4
0x4003834	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      3150	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_5
0x4003837	          0x83e008	                              and eax, 8	      3150	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_5
0x400383a	            0x85c0	                           test eax, eax	      3150	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_5
0x400383c	            0x740a	                            je 0x4003848	      3150	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_5
0x400383e	         0xfb645e2	            movzx eax, byte [rbp - 0x1e]	      3151	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_5
0x4003842	          0x83c808	                               or eax, 8	      3151	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_5
0x4003845	          0x8845e2	               mov byte [rbp - 0x1e], al	      3151	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_5
0x4003848	        0x488d45e0	                   lea rax, [rbp - 0x20]	      3152	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	CALL_3
0x400384c	      0xbe0a000000	                            mov esi, 0xa	      3152	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	CALL_3
0x4003851	          0x4889c7	                            mov rdi, rax	      3152	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	CALL_3
0x4003854	      0xe800000000	                          call 0x4003859	      3152	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	CALL_3
0x4003859	      0xe9e6050000	                           jmp 0x4003e44	      3154	gui.c	FUNCTION_50	SWITCH_1
0x400385e	     0xfb705000000	           movzx eax, word [0x04003865] 	      3160	gui.c	FUNCTION_50	IF_6
0x4003865	        0x6683f801	                               cmp ax, 1	      3160	gui.c	FUNCTION_50	IF_6
0x4003869	            0x7544	                           jne 0x40038af	      3160	gui.c	FUNCTION_50	IF_6
0x400386b	          0x8b4db0	             mov ecx, dword [rbp - 0x50]	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x400386e	    0x8b0500000000	            mov eax, dword [0x04003874] 	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x4003874	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x4003877	            0x29c2	                            sub edx, eax	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x4003879	            0x89d0	                            mov eax, edx	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x400387b	    0x8b3500000000	            mov esi, dword [0x04003881] 	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x4003881	              0x99	                                     cdq	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x4003882	            0xf7fe	                                idiv esi	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x4003884	            0x89c7	                            mov edi, eax	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x4003886	    0x8b0500000000	            mov eax, dword [0x0400388c] 	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x400388c	          0x8b55b8	             mov edx, dword [rbp - 0x48]	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x400388f	            0x29c2	                            sub edx, eax	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x4003891	            0x89d0	                            mov eax, edx	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x4003893	    0x8b3500000000	            mov esi, dword [0x04003899] 	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x4003899	              0x99	                                     cdq	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x400389a	            0xf7fe	                                idiv esi	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x400389c	            0x89c6	                            mov esi, eax	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x400389e	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x40038a1	            0x89fa	                            mov edx, edi	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x40038a3	            0x89c7	                            mov edi, eax	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x40038a5	      0xe800000000	                          call 0x40038aa	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x40038aa	      0xe995050000	                           jmp 0x4003e44	      3163	gui.c	FUNCTION_50	IF_6
0x40038af	      0xe800000000	                          call 0x40038b4	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x40038b4	          0x83f850	                           cmp eax, 0x50	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x40038b7	     0xf84b6000000	                            je 0x4003973	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x40038bd	          0x83f850	                           cmp eax, 0x50	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x40038c0	            0x7f3e	                            jg 0x4003900	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x40038c2	          0x83f808	                              cmp eax, 8	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x40038c5	     0xf84e5000000	                            je 0x40039b0	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x40038cb	          0x83f808	                              cmp eax, 8	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x40038ce	            0x7f18	                            jg 0x40038e8	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x40038d0	          0x83f802	                              cmp eax, 2	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x40038d3	     0xf8485000000	                            je 0x400395e	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x40038d9	          0x83f804	                              cmp eax, 4	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x40038dc	            0x7474	                            je 0x4003952	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x40038de	          0x83f801	                              cmp eax, 1	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x40038e1	            0x746f	                            je 0x4003952	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x40038e3	      0xe902010000	                           jmp 0x40039ea	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x40038e8	          0x83f828	                           cmp eax, 0x28	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x40038eb	     0xf84bf000000	                            je 0x40039b0	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x40038f1	          0x83f830	                           cmp eax, 0x30	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x40038f4	            0x747d	                            je 0x4003973	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x40038f6	          0x83f810	                           cmp eax, 0x10	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x40038f9	            0x7478	                            je 0x4003973	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x40038fb	      0xe9ea000000	                           jmp 0x40039ea	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4003900	      0x3d01010000	                          cmp eax, 0x101	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4003905	            0x744b	                            je 0x4003952	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4003907	      0x3d01010000	                          cmp eax, 0x101	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x400390c	            0x7f18	                            jg 0x4003926	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x400390e	      0x3dd0000000	                           cmp eax, 0xd0	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4003913	            0x745e	                            je 0x4003973	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4003915	      0x3df0000000	                           cmp eax, 0xf0	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x400391a	            0x7457	                            je 0x4003973	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x400391c	          0x83f870	                           cmp eax, 0x70	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x400391f	            0x7452	                            je 0x4003973	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4003921	      0xe9c4000000	                           jmp 0x40039ea	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4003926	      0x3d00030000	                          cmp eax, 0x300	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x400392b	            0x744f	                            je 0x400397c	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x400392d	      0x3d00030000	                          cmp eax, 0x300	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4003932	            0x7f0c	                            jg 0x4003940	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4003934	      0x3d01020000	                          cmp eax, 0x201	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4003939	            0x7441	                            je 0x400397c	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x400393b	      0xe9aa000000	                           jmp 0x40039ea	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4003940	      0x3d00100000	                         cmp eax, 0x1000	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4003945	            0x7423	                            je 0x400396a	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4003947	      0x3d00200000	                         cmp eax, 0x2000	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x400394c	     0xf8598000000	                           jne 0x40039ea	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4003952	    0xc745d86e0000	           mov dword [rbp - 0x28], 0x6e 	      3174	gui.c	FUNCTION_50	SWITCH_2
0x4003959	      0xe994000000	                           jmp 0x40039f2	      3174	gui.c	FUNCTION_50	SWITCH_2
0x400395e	    0xc745d8760000	           mov dword [rbp - 0x28], 0x76 	      3175	gui.c	FUNCTION_50	SWITCH_2
0x4003965	      0xe988000000	                           jmp 0x40039f2	      3175	gui.c	FUNCTION_50	SWITCH_2
0x400396a	    0xc745d8760000	           mov dword [rbp - 0x28], 0x76 	      3176	gui.c	FUNCTION_50	SWITCH_2
0x4003971	            0xeb7f	                           jmp 0x40039f2	      3176	gui.c	FUNCTION_50	SWITCH_2
0x4003973	    0xc745d8690000	           mov dword [rbp - 0x28], 0x69 	      3184	gui.c	FUNCTION_50	SWITCH_2
0x400397a	            0xeb76	                           jmp 0x40039f2	      3184	gui.c	FUNCTION_50	SWITCH_2
0x400397c	    0x8b0500000000	            mov eax, dword [0x04003982] 	      3189	gui.c	FUNCTION_50	SWITCH_2	IF_7	CALL_8
0x4003982	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      3189	gui.c	FUNCTION_50	SWITCH_2	IF_7	CALL_8
0x4003985	            0x29c2	                            sub edx, eax	      3189	gui.c	FUNCTION_50	SWITCH_2	IF_7	CALL_8
0x4003987	            0x89d0	                            mov eax, edx	      3189	gui.c	FUNCTION_50	SWITCH_2	IF_7	CALL_8
0x4003989	    0x8b3500000000	            mov esi, dword [0x0400398f] 	      3189	gui.c	FUNCTION_50	SWITCH_2	IF_7	CALL_8
0x400398f	              0x99	                                     cdq	      3189	gui.c	FUNCTION_50	SWITCH_2	IF_7	CALL_8
0x4003990	            0xf7fe	                                idiv esi	      3189	gui.c	FUNCTION_50	SWITCH_2	IF_7	CALL_8
0x4003992	            0x89c2	                            mov edx, eax	      3189	gui.c	FUNCTION_50	SWITCH_2	IF_7	CALL_8
0x4003994	    0x8b0500000000	            mov eax, dword [0x0400399a] 	      3189	gui.c	FUNCTION_50	SWITCH_2	IF_7	CALL_8
0x400399a	            0x39c2	                            cmp edx, eax	      3189	gui.c	FUNCTION_50	SWITCH_2	IF_7	CALL_8
0x400399c	            0x7c09	                            jl 0x40039a7	      3189	gui.c	FUNCTION_50	SWITCH_2	IF_7	CALL_8
0x400399e	    0xc745d86e0000	           mov dword [rbp - 0x28], 0x6e 	      3190	gui.c	FUNCTION_50	SWITCH_2	IF_7
0x40039a5	            0xeb4b	                           jmp 0x40039f2	      3193	gui.c	FUNCTION_50	SWITCH_2
0x40039a7	    0xc745d8720000	           mov dword [rbp - 0x28], 0x72 	      3192	gui.c	FUNCTION_50	SWITCH_2	ELSE_2
0x40039ae	            0xeb42	                           jmp 0x40039f2	      3193	gui.c	FUNCTION_50	SWITCH_2
0x40039b0	    0x8b0500000000	            mov eax, dword [0x040039b6] 	      3201	gui.c	FUNCTION_50	SWITCH_2	IF_8	CALL_9
0x40039b6	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      3201	gui.c	FUNCTION_50	SWITCH_2	IF_8	CALL_9
0x40039b9	            0x29c2	                            sub edx, eax	      3201	gui.c	FUNCTION_50	SWITCH_2	IF_8	CALL_9
0x40039bb	            0x89d0	                            mov eax, edx	      3201	gui.c	FUNCTION_50	SWITCH_2	IF_8	CALL_9
0x40039bd	    0x8b3d00000000	            mov edi, dword [0x040039c3] 	      3201	gui.c	FUNCTION_50	SWITCH_2	IF_8	CALL_9
0x40039c3	              0x99	                                     cdq	      3201	gui.c	FUNCTION_50	SWITCH_2	IF_8	CALL_9
0x40039c4	            0xf7ff	                                idiv edi	      3201	gui.c	FUNCTION_50	SWITCH_2	IF_8	CALL_9
0x40039c6	            0x89c2	                            mov edx, eax	      3201	gui.c	FUNCTION_50	SWITCH_2	IF_8	CALL_9
0x40039c8	    0x8b0500000000	            mov eax, dword [0x040039ce] 	      3201	gui.c	FUNCTION_50	SWITCH_2	IF_8	CALL_9
0x40039ce	            0x39c2	                            cmp edx, eax	      3201	gui.c	FUNCTION_50	SWITCH_2	IF_8	CALL_9
0x40039d0	            0x7d0f	                           jge 0x40039e1	      3201	gui.c	FUNCTION_50	SWITCH_2	IF_8	CALL_9
0x40039d2	        0x837dbc01	               cmp dword [rbp - 0x44], 1	      3201	gui.c	FUNCTION_50	SWITCH_2	IF_8	CALL_9
0x40039d6	            0x7409	                            je 0x40039e1	      3201	gui.c	FUNCTION_50	SWITCH_2	IF_8	CALL_9
0x40039d8	    0xc745d8200000	           mov dword [rbp - 0x28], 0x20 	      3202	gui.c	FUNCTION_50	SWITCH_2	IF_8
0x40039df	            0xeb11	                           jmp 0x40039f2	      3205	gui.c	FUNCTION_50	SWITCH_2
0x40039e1	    0xc745d8630000	           mov dword [rbp - 0x28], 0x63 	      3204	gui.c	FUNCTION_50	SWITCH_2	ELSE_3
0x40039e8	            0xeb08	                           jmp 0x40039f2	      3205	gui.c	FUNCTION_50	SWITCH_2
0x40039ea	    0xc745d8200000	           mov dword [rbp - 0x28], 0x20 	      3208	gui.c	FUNCTION_50	SWITCH_2
0x40039f1	              0x90	                                     nop	      3209	gui.c	FUNCTION_50	SWITCH_2
0x40039f2	    0x8b0500000000	            mov eax, dword [0x040039f8] 	      3217	gui.c	FUNCTION_50	IF_9
0x40039f8	          0x83f801	                              cmp eax, 1	      3217	gui.c	FUNCTION_50	IF_9
0x40039fb	            0x741a	                            je 0x4003a17	      3217	gui.c	FUNCTION_50	IF_9
0x40039fd	    0x8b0500000000	            mov eax, dword [0x04003a03] 	      3217	gui.c	FUNCTION_50	IF_9
0x4003a03	      0x3d01010000	                          cmp eax, 0x101	      3217	gui.c	FUNCTION_50	IF_9
0x4003a08	            0x740d	                            je 0x4003a17	      3217	gui.c	FUNCTION_50	IF_9
0x4003a0a	    0x8b0500000000	            mov eax, dword [0x04003a10] 	      3217	gui.c	FUNCTION_50	IF_9
0x4003a10	          0x83e010	                           and eax, 0x10	      3217	gui.c	FUNCTION_50	IF_9
0x4003a13	            0x85c0	                           test eax, eax	      3217	gui.c	FUNCTION_50	IF_9
0x4003a15	            0x7456	                            je 0x4003a6d	      3217	gui.c	FUNCTION_50	IF_9
0x4003a17	    0x8b0500000000	            mov eax, dword [0x04003a1d] 	      3218	gui.c	FUNCTION_50	IF_9	CALL_10
0x4003a1d	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      3218	gui.c	FUNCTION_50	IF_9	CALL_10
0x4003a20	            0x29c2	                            sub edx, eax	      3218	gui.c	FUNCTION_50	IF_9	CALL_10
0x4003a22	            0x89d0	                            mov eax, edx	      3218	gui.c	FUNCTION_50	IF_9	CALL_10
0x4003a24	    0x8b3500000000	            mov esi, dword [0x04003a2a] 	      3218	gui.c	FUNCTION_50	IF_9	CALL_10
0x4003a2a	              0x99	                                     cdq	      3218	gui.c	FUNCTION_50	IF_9	CALL_10
0x4003a2b	            0xf7fe	                                idiv esi	      3218	gui.c	FUNCTION_50	IF_9	CALL_10
0x4003a2d	            0x89c1	                            mov ecx, eax	      3218	gui.c	FUNCTION_50	IF_9	CALL_10
0x4003a2f	    0x488b05000000	            mov rax, qword [0x04003a36] 	      3218	gui.c	FUNCTION_50	IF_9	CALL_10
0x4003a36	          0x8b500c	              mov edx, dword [rax + 0xc]	      3218	gui.c	FUNCTION_50	IF_9	CALL_10
0x4003a39	    0x488b05000000	            mov rax, qword [0x04003a40] 	      3218	gui.c	FUNCTION_50	IF_9	CALL_10
0x4003a40	    0x8b809c000000	            mov eax, dword [rax + 0x9c] 	      3218	gui.c	FUNCTION_50	IF_9	CALL_10
0x4003a46	             0x1d0	                            add eax, edx	      3218	gui.c	FUNCTION_50	IF_9	CALL_10
0x4003a48	            0x39c1	                            cmp ecx, eax	      3218	gui.c	FUNCTION_50	IF_9	CALL_10
0x4003a4a	            0x7c21	                            jl 0x4003a6d	      3218	gui.c	FUNCTION_50	IF_9	CALL_10
0x4003a4c	        0x837dbc43	           cmp dword [rbp - 0x44], 0x43 	      3219	gui.c	FUNCTION_50	IF_9
0x4003a50	            0x741b	                            je 0x4003a6d	      3219	gui.c	FUNCTION_50	IF_9
0x4003a52	    0x8b0500000000	            mov eax, dword [0x04003a58] 	      3221	gui.c	FUNCTION_50	IF_9
0x4003a58	            0x85c0	                           test eax, eax	      3221	gui.c	FUNCTION_50	IF_9
0x4003a5a	            0x7511	                           jne 0x4003a6d	      3221	gui.c	FUNCTION_50	IF_9
0x4003a5c	    0x8b0500000000	            mov eax, dword [0x04003a62] 	      3222	gui.c	FUNCTION_50	IF_9
0x4003a62	            0x85c0	                           test eax, eax	      3222	gui.c	FUNCTION_50	IF_9
0x4003a64	            0x7507	                           jne 0x4003a6d	      3222	gui.c	FUNCTION_50	IF_9
0x4003a66	    0xc745d8200000	           mov dword [rbp - 0x28], 0x20 	      3225	gui.c	FUNCTION_50	IF_9
0x4003a6d	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      3230	gui.c	FUNCTION_50	IF_10
0x4003a70	          0x83e010	                           and eax, 0x10	      3230	gui.c	FUNCTION_50	IF_10
0x4003a73	            0x85c0	                           test eax, eax	      3230	gui.c	FUNCTION_50	IF_10
0x4003a75	            0x7411	                            je 0x4003a88	      3230	gui.c	FUNCTION_50	IF_10
0x4003a77	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      3230	gui.c	FUNCTION_50	IF_10
0x4003a7a	          0x83e004	                              and eax, 4	      3230	gui.c	FUNCTION_50	IF_10
0x4003a7d	            0x85c0	                           test eax, eax	      3230	gui.c	FUNCTION_50	IF_10
0x4003a7f	            0x7407	                            je 0x4003a88	      3230	gui.c	FUNCTION_50	IF_10
0x4003a81	    0xc745d8780000	           mov dword [rbp - 0x28], 0x78 	      3231	gui.c	FUNCTION_50	IF_10
0x4003a88	    0x8b0500000000	            mov eax, dword [0x04003a8e] 	      3236	gui.c	FUNCTION_50	IF_11
0x4003a8e	            0x85c0	                           test eax, eax	      3236	gui.c	FUNCTION_50	IF_11
0x4003a90	            0x7407	                            je 0x4003a99	      3236	gui.c	FUNCTION_50	IF_11
0x4003a92	    0xc745d8200000	           mov dword [rbp - 0x28], 0x20 	      3237	gui.c	FUNCTION_50	IF_11
0x4003a99	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      3246	gui.c	FUNCTION_50	IF_12	CALL_11
0x4003a9c	            0x89c7	                            mov edi, eax	      3246	gui.c	FUNCTION_50	IF_12	CALL_11
0x4003a9e	      0xe800000000	                          call 0x4003aa3	      3246	gui.c	FUNCTION_50	IF_12	CALL_11
0x4003aa3	            0x85c0	                           test eax, eax	      3246	gui.c	FUNCTION_50	IF_12	CALL_11
0x4003aa5	            0x740a	                            je 0x4003ab1	      3246	gui.c	FUNCTION_50	IF_12	CALL_11
0x4003aa7	        0x837dd863	           cmp dword [rbp - 0x28], 0x63 	      3246	gui.c	FUNCTION_50	IF_12	CALL_11
0x4003aab	     0xf859f010000	                           jne 0x4003c50	      3246	gui.c	FUNCTION_50	IF_12	CALL_11
0x4003ab1	        0x837dd878	           cmp dword [rbp - 0x28], 0x78 	      3249	gui.c	FUNCTION_50	IF_12	IF_13
0x4003ab5	            0x741b	                            je 0x4003ad2	      3249	gui.c	FUNCTION_50	IF_12	IF_13
0x4003ab7	    0x8b0500000000	            mov eax, dword [0x04003abd] 	      3249	gui.c	FUNCTION_50	IF_12	IF_13
0x4003abd	            0x85c0	                           test eax, eax	      3249	gui.c	FUNCTION_50	IF_12	IF_13
0x4003abf	            0x7411	                            je 0x4003ad2	      3249	gui.c	FUNCTION_50	IF_12	IF_13
0x4003ac1	    0x8b0500000000	            mov eax, dword [0x04003ac7] 	      3249	gui.c	FUNCTION_50	IF_12	IF_13
0x4003ac7	          0x83e001	                              and eax, 1	      3249	gui.c	FUNCTION_50	IF_12	IF_13
0x4003aca	            0x85c0	                           test eax, eax	      3249	gui.c	FUNCTION_50	IF_12	IF_13
0x4003acc	     0xf8568030000	                           jne 0x4003e3a	      3249	gui.c	FUNCTION_50	IF_12	IF_13
0x4003ad2	      0xe800000000	                          call 0x4003ad7	      3256	gui.c	FUNCTION_50	IF_12	IF_14	CALL_12
0x4003ad7	            0x85c0	                           test eax, eax	      3256	gui.c	FUNCTION_50	IF_12	IF_14	CALL_12
0x4003ad9	            0x7425	                            je 0x4003b00	      3256	gui.c	FUNCTION_50	IF_12	IF_14	CALL_12
0x4003adb	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      3256	gui.c	FUNCTION_50	IF_12	IF_14	CALL_12
0x4003adf	            0x751f	                           jne 0x4003b00	      3256	gui.c	FUNCTION_50	IF_12	IF_14	CALL_12
0x4003ae1	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      3257	gui.c	FUNCTION_50	IF_12	IF_14
0x4003ae4	          0x83e004	                              and eax, 4	      3257	gui.c	FUNCTION_50	IF_12	IF_14
0x4003ae7	            0x85c0	                           test eax, eax	      3257	gui.c	FUNCTION_50	IF_12	IF_14
0x4003ae9	            0x7415	                            je 0x4003b00	      3257	gui.c	FUNCTION_50	IF_12	IF_14
0x4003aeb	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      3257	gui.c	FUNCTION_50	IF_12	IF_14
0x4003aee	          0x83e010	                           and eax, 0x10	      3257	gui.c	FUNCTION_50	IF_12	IF_14
0x4003af1	            0x85c0	                           test eax, eax	      3257	gui.c	FUNCTION_50	IF_12	IF_14
0x4003af3	            0x750b	                           jne 0x4003b00	      3257	gui.c	FUNCTION_50	IF_12	IF_14
0x4003af5	    0xc745bc020000	               mov dword [rbp - 0x44], 2	      3259	gui.c	FUNCTION_50	IF_12	IF_14
0x4003afc	        0x8365acfb	      and dword [rbp - 0x54], 0xfffffffb	      3260	gui.c	FUNCTION_50	IF_12	IF_14
0x4003b00	        0x837dbc02	               cmp dword [rbp - 0x44], 2	      3266	gui.c	FUNCTION_50	IF_12	IF_15
0x4003b04	     0xf85c7000000	                           jne 0x4003bd1	      3266	gui.c	FUNCTION_50	IF_12	IF_15
0x4003b0a	     0xfb705000000	           movzx eax, word [0x04003b11] 	      3268	gui.c	FUNCTION_50	IF_12	IF_15	IF_16
0x4003b11	          0x6685c0	                             test ax, ax	      3268	gui.c	FUNCTION_50	IF_12	IF_15	IF_16
0x4003b14	            0x7573	                           jne 0x4003b89	      3268	gui.c	FUNCTION_50	IF_12	IF_15	IF_16
0x4003b16	    0x8b0500000000	            mov eax, dword [0x04003b1c] 	      3270	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	IF_17
0x4003b1c	          0x83e008	                              and eax, 8	      3270	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	IF_17
0x4003b1f	            0x85c0	                           test eax, eax	      3270	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	IF_17
0x4003b21	            0x7414	                            je 0x4003b37	      3270	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	IF_17
0x4003b23	    0x8b0500000000	            mov eax, dword [0x04003b29] 	      3272	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	IF_17
0x4003b29	          0x8945cc	             mov dword [rbp - 0x34], eax	      3272	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	IF_17
0x4003b2c	    0x8b0500000000	            mov eax, dword [0x04003b32] 	      3273	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	IF_17
0x4003b32	          0x8945d4	             mov dword [rbp - 0x2c], eax	      3273	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	IF_17
0x4003b35	            0xeb3e	                           jmp 0x4003b75	      3273	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	IF_17
0x4003b37	    0x488b05000000	            mov rax, qword [0x04003b3e] 	      3277	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	ELSE_4
0x4003b3e	    0x8b80e0000000	            mov eax, dword [rax + 0xe0] 	      3277	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	ELSE_4
0x4003b44	          0x8945cc	             mov dword [rbp - 0x34], eax	      3277	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	ELSE_4
0x4003b47	    0x488b05000000	            mov rax, qword [0x04003b4e] 	      3278	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	ELSE_4	CALL_13
0x4003b4e	    0x8b90dc000000	            mov edx, dword [rax + 0xdc] 	      3278	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	ELSE_4	CALL_13
0x4003b54	    0x488b05000000	            mov rax, qword [0x04003b5b] 	      3278	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	ELSE_4	CALL_13
0x4003b5b	    0x8b889c000000	            mov ecx, dword [rax + 0x9c] 	      3278	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	ELSE_4	CALL_13
0x4003b61	    0x488b05000000	            mov rax, qword [0x04003b68] 	      3278	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	ELSE_4	CALL_13
0x4003b68	    0x8b80a8010000	           mov eax, dword [rax + 0x1a8] 	      3278	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	ELSE_4	CALL_13
0x4003b6e	             0x1c8	                            add eax, ecx	      3278	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	ELSE_4	CALL_13
0x4003b70	             0x1d0	                            add eax, edx	      3278	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	ELSE_4	CALL_13
0x4003b72	          0x8945d4	             mov dword [rbp - 0x2c], eax	      3278	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	ELSE_4	CALL_13
0x4003b75	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      3280	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	CALL_14
0x4003b78	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	      3280	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	CALL_14
0x4003b7b	      0xba00000000	                              mov edx, 0	      3280	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	CALL_14
0x4003b80	            0x89ce	                            mov esi, ecx	      3280	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	CALL_14
0x4003b82	            0x89c7	                            mov edi, eax	      3280	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	CALL_14
0x4003b84	      0xe800000000	                          call 0x4003b89	      3280	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	CALL_14
0x4003b89	          0x8b4db0	             mov ecx, dword [rbp - 0x50]	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x4003b8c	    0x8b0500000000	            mov eax, dword [0x04003b92] 	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x4003b92	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x4003b95	            0x29c2	                            sub edx, eax	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x4003b97	            0x89d0	                            mov eax, edx	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x4003b99	    0x8b3d00000000	            mov edi, dword [0x04003b9f] 	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x4003b9f	              0x99	                                     cdq	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x4003ba0	            0xf7ff	                                idiv edi	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x4003ba2	            0x89c7	                            mov edi, eax	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x4003ba4	    0x8b0500000000	            mov eax, dword [0x04003baa] 	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x4003baa	          0x8b55b8	             mov edx, dword [rbp - 0x48]	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x4003bad	            0x29c2	                            sub edx, eax	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x4003baf	            0x89d0	                            mov eax, edx	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x4003bb1	    0x8b3500000000	            mov esi, dword [0x04003bb7] 	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x4003bb7	              0x99	                                     cdq	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x4003bb8	            0xf7fe	                                idiv esi	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x4003bba	            0x89c6	                            mov esi, eax	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x4003bbc	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x4003bbf	            0x89fa	                            mov edx, edi	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x4003bc1	            0x89c7	                            mov edi, eax	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x4003bc3	      0xe800000000	                          call 0x4003bc8	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x4003bc8	    0xc745dc010000	               mov dword [rbp - 0x24], 1	      3284	gui.c	FUNCTION_50	IF_12	IF_15
0x4003bcf	            0xeb49	                           jmp 0x4003c1a	      3284	gui.c	FUNCTION_50	IF_12	IF_15
0x4003bd1	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      3287	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18
0x4003bd5	            0x7543	                           jne 0x4003c1a	      3287	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18
0x4003bd7	    0x8b0500000000	            mov eax, dword [0x04003bdd] 	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x4003bdd	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x4003be0	            0x29c2	                            sub edx, eax	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x4003be2	            0x89d0	                            mov eax, edx	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x4003be4	    0x8b0d00000000	            mov ecx, dword [0x04003bea] 	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x4003bea	              0x99	                                     cdq	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x4003beb	            0xf7f9	                                idiv ecx	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x4003bed	            0x89c6	                            mov esi, eax	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x4003bef	    0x8b0500000000	            mov eax, dword [0x04003bf5] 	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x4003bf5	          0x8b55b8	             mov edx, dword [rbp - 0x48]	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x4003bf8	            0x29c2	                            sub edx, eax	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x4003bfa	            0x89d0	                            mov eax, edx	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x4003bfc	    0x8b3d00000000	            mov edi, dword [0x04003c02] 	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x4003c02	              0x99	                                     cdq	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x4003c03	            0xf7ff	                                idiv edi	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x4003c05	            0x89c1	                            mov ecx, eax	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x4003c07	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x4003c0a	            0x89c2	                            mov edx, eax	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x4003c0c	            0x89cf	                            mov edi, ecx	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x4003c0e	      0xe800000000	                          call 0x4003c13	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x4003c13	    0xc745dc010000	               mov dword [rbp - 0x24], 1	      3290	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18
0x4003c1a	        0x837dbc01	               cmp dword [rbp - 0x44], 1	      3294	gui.c	FUNCTION_50	IF_12	IF_19
0x4003c1e	            0x7429	                            je 0x4003c49	      3294	gui.c	FUNCTION_50	IF_12	IF_19
0x4003c20	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      3296	gui.c	FUNCTION_50	IF_12	IF_19	IF_20	CALL_21
0x4003c23	            0x89c7	                            mov edi, eax	      3296	gui.c	FUNCTION_50	IF_12	IF_19	IF_20	CALL_21
0x4003c25	      0xe800000000	                          call 0x4003c2a	      3296	gui.c	FUNCTION_50	IF_12	IF_19	IF_20	CALL_21
0x4003c2a	            0x85c0	                           test eax, eax	      3296	gui.c	FUNCTION_50	IF_12	IF_19	IF_20	CALL_21
0x4003c2c	     0xf840b020000	                            je 0x4003e3d	      3296	gui.c	FUNCTION_50	IF_12	IF_19	IF_20	CALL_21
0x4003c32	        0x837dbc03	               cmp dword [rbp - 0x44], 3	      3296	gui.c	FUNCTION_50	IF_12	IF_19	IF_20	CALL_21
0x4003c36	     0xf8401020000	                            je 0x4003e3d	      3296	gui.c	FUNCTION_50	IF_12	IF_19	IF_20	CALL_21
0x4003c3c	        0x837dd863	           cmp dword [rbp - 0x28], 0x63 	      3298	gui.c	FUNCTION_50	IF_12	IF_19	IF_21
0x4003c40	            0x7407	                            je 0x4003c49	      3298	gui.c	FUNCTION_50	IF_12	IF_19	IF_21
0x4003c42	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      3299	gui.c	FUNCTION_50	IF_12	IF_19	IF_21
0x4003c49	    0xc745b0000000	               mov dword [rbp - 0x50], 0	      3301	gui.c	FUNCTION_50	IF_12
0x4003c50	     0xfb705000000	           movzx eax, word [0x04003c57] 	      3304	gui.c	FUNCTION_50	IF_22
0x4003c57	          0x6685c0	                             test ax, ax	      3304	gui.c	FUNCTION_50	IF_22
0x4003c5a	            0x7410	                            je 0x4003c6c	      3304	gui.c	FUNCTION_50	IF_22
0x4003c5c	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      3304	gui.c	FUNCTION_50	IF_22
0x4003c60	            0x750a	                           jne 0x4003c6c	      3304	gui.c	FUNCTION_50	IF_22
0x4003c62	      0xbf00000000	                              mov edi, 0	      3305	gui.c	FUNCTION_50	CALL_22
0x4003c67	      0xe800000000	                          call 0x4003c6c	      3305	gui.c	FUNCTION_50	CALL_22
0x4003c6c	    0x8b0500000000	            mov eax, dword [0x04003c72] 	      3309	gui.c	FUNCTION_50	IF_23
0x4003c72	            0x85c0	                           test eax, eax	      3309	gui.c	FUNCTION_50	IF_23
0x4003c74	     0xf85c6010000	                           jne 0x4003e40	      3309	gui.c	FUNCTION_50	IF_23
0x4003c7a	        0x488d55cc	                   lea rdx, [rbp - 0x34]	      3312	gui.c	FUNCTION_50	CALL_23
0x4003c7e	          0x8b4db4	             mov ecx, dword [rbp - 0x4c]	      3312	gui.c	FUNCTION_50	CALL_23
0x4003c81	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      3312	gui.c	FUNCTION_50	CALL_23
0x4003c84	            0x89ce	                            mov esi, ecx	      3312	gui.c	FUNCTION_50	CALL_23
0x4003c86	            0x89c7	                            mov edi, eax	      3312	gui.c	FUNCTION_50	CALL_23
0x4003c88	      0xe800000000	                          call 0x4003c8d	      3312	gui.c	FUNCTION_50	CALL_23
0x4003c8d	          0x8945d4	             mov dword [rbp - 0x2c], eax	      3312	gui.c	FUNCTION_50	CALL_23
0x4003c90	        0x837dbc43	           cmp dword [rbp - 0x44], 0x43 	      3318	gui.c	FUNCTION_50	IF_24
0x4003c94	            0x7529	                           jne 0x4003cbf	      3318	gui.c	FUNCTION_50	IF_24
0x4003c96	    0x8b0500000000	            mov eax, dword [0x04003c9c] 	      3320	gui.c	FUNCTION_50	IF_24	IF_25
0x4003c9c	          0x3945d4	            cmp dword [rbp - 0x2c], eax 	      3320	gui.c	FUNCTION_50	IF_24	IF_25
0x4003c9f	            0x7511	                           jne 0x4003cb2	      3320	gui.c	FUNCTION_50	IF_24	IF_25
0x4003ca1	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      3320	gui.c	FUNCTION_50	IF_24	IF_25
0x4003ca4	    0x8b0500000000	            mov eax, dword [0x04003caa] 	      3320	gui.c	FUNCTION_50	IF_24	IF_25
0x4003caa	            0x39c2	                            cmp edx, eax	      3320	gui.c	FUNCTION_50	IF_24	IF_25
0x4003cac	     0xf8491010000	                            je 0x4003e43	      3320	gui.c	FUNCTION_50	IF_24	IF_25
0x4003cb2	        0x837db400	               cmp dword [rbp - 0x4c], 0	      3323	gui.c	FUNCTION_50	IF_24	IF_26
0x4003cb6	            0x7907	                           jns 0x4003cbf	      3323	gui.c	FUNCTION_50	IF_24	IF_26
0x4003cb8	    0xc745d4ffffff	     mov dword [rbp - 0x2c], 0xffffffff 	      3324	gui.c	FUNCTION_50	IF_24	IF_26
0x4003cbf	    0x488b05000000	            mov rax, qword [0x04003cc6] 	      3332	gui.c	FUNCTION_50	IF_27
0x4003cc6	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      3332	gui.c	FUNCTION_50	IF_27
0x4003cca	    0x488b05000000	            mov rax, qword [0x04003cd1] 	      3332	gui.c	FUNCTION_50	IF_27
0x4003cd1	          0x4839c2	                            cmp rdx, rax	      3332	gui.c	FUNCTION_50	IF_27
0x4003cd4	            0x7517	                           jne 0x4003ced	      3332	gui.c	FUNCTION_50	IF_27
0x4003cd6	    0x488b05000000	            mov rax, qword [0x04003cdd] 	      3334	gui.c	FUNCTION_50	IF_27
0x4003cdd	    0x8b9084000000	            mov edx, dword [rax + 0x84] 	      3334	gui.c	FUNCTION_50	IF_27
0x4003ce3	    0x8b0500000000	            mov eax, dword [0x04003ce9] 	      3334	gui.c	FUNCTION_50	IF_27
0x4003ce9	            0x39c2	                            cmp edx, eax	      3334	gui.c	FUNCTION_50	IF_27
0x4003ceb	            0x7407	                            je 0x4003cf4	      3334	gui.c	FUNCTION_50	IF_27
0x4003ced	    0xc745b0000000	               mov dword [rbp - 0x50], 0	      3337	gui.c	FUNCTION_50	IF_27
0x4003cf4	        0xc645e09b	            mov byte [rbp - 0x20], 0x9b 	      3339	gui.c	FUNCTION_50
0x4003cf8	        0xc645e1fb	            mov byte [rbp - 0x1f], 0xfb 	      3340	gui.c	FUNCTION_50
0x4003cfc	        0xc645e258	            mov byte [rbp - 0x1e], 0x58 	      3341	gui.c	FUNCTION_50
0x4003d00	        0x837dbc43	           cmp dword [rbp - 0x44], 0x43 	      3342	gui.c	FUNCTION_50	IF_28
0x4003d04	     0xf84c2000000	                            je 0x4003dcc	      3342	gui.c	FUNCTION_50	IF_28
0x4003d0a	        0x837dbc03	               cmp dword [rbp - 0x44], 3	      3342	gui.c	FUNCTION_50	IF_28
0x4003d0e	     0xf84b8000000	                            je 0x4003dcc	      3342	gui.c	FUNCTION_50	IF_28
0x4003d14	        0x837db000	               cmp dword [rbp - 0x50], 0	      3344	gui.c	FUNCTION_50	IF_28	IF_29
0x4003d18	            0x7455	                            je 0x4003d6f	      3344	gui.c	FUNCTION_50	IF_28	IF_29
0x4003d1a	    0x8b0500000000	            mov eax, dword [0x04003d20] 	      3350	gui.c	FUNCTION_50	IF_28	IF_29	IF_30
0x4003d20	          0x3945bc	            cmp dword [rbp - 0x44], eax 	      3350	gui.c	FUNCTION_50	IF_28	IF_29	IF_30
0x4003d23	            0x7518	                           jne 0x4003d3d	      3350	gui.c	FUNCTION_50	IF_28	IF_29	IF_30
0x4003d25	    0x8b0500000000	            mov eax, dword [0x04003d2b] 	      3350	gui.c	FUNCTION_50	IF_28	IF_29	IF_30
0x4003d2b	          0x3945d4	            cmp dword [rbp - 0x2c], eax 	      3350	gui.c	FUNCTION_50	IF_28	IF_29	IF_30
0x4003d2e	            0x750d	                           jne 0x4003d3d	      3350	gui.c	FUNCTION_50	IF_28	IF_29	IF_30
0x4003d30	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      3350	gui.c	FUNCTION_50	IF_28	IF_29	IF_30
0x4003d33	    0x8b0500000000	            mov eax, dword [0x04003d39] 	      3350	gui.c	FUNCTION_50	IF_28	IF_29	IF_30
0x4003d39	            0x39c2	                            cmp edx, eax	      3350	gui.c	FUNCTION_50	IF_28	IF_29	IF_30
0x4003d3b	            0x740c	                            je 0x4003d49	      3350	gui.c	FUNCTION_50	IF_28	IF_29	IF_30
0x4003d3d	    0xc70500000000	               mov dword [0x04003d47], 1	      3351	gui.c	FUNCTION_50	IF_28	IF_29	IF_30
0x4003d47	            0xeb30	                           jmp 0x4003d79	      3351	gui.c	FUNCTION_50	IF_28	IF_29	IF_30
0x4003d49	    0x8b0500000000	            mov eax, dword [0x04003d4f] 	      3352	gui.c	FUNCTION_50	IF_28	IF_29	ELSE_6	IF_31
0x4003d4f	          0x83c001	                              add eax, 1	      3352	gui.c	FUNCTION_50	IF_28	IF_29	ELSE_6	IF_31
0x4003d52	    0x890500000000	            mov dword [0x04003d58], eax 	      3352	gui.c	FUNCTION_50	IF_28	IF_29	ELSE_6	IF_31
0x4003d58	    0x8b0500000000	            mov eax, dword [0x04003d5e] 	      3352	gui.c	FUNCTION_50	IF_28	IF_29	ELSE_6	IF_31
0x4003d5e	          0x83f804	                              cmp eax, 4	      3352	gui.c	FUNCTION_50	IF_28	IF_29	ELSE_6	IF_31
0x4003d61	            0x7e16	                           jle 0x4003d79	      3352	gui.c	FUNCTION_50	IF_28	IF_29	ELSE_6	IF_31
0x4003d63	    0xc70500000000	               mov dword [0x04003d6d], 1	      3353	gui.c	FUNCTION_50	IF_28	IF_29	ELSE_6	IF_31
0x4003d6d	            0xeb0a	                           jmp 0x4003d79	      3353	gui.c	FUNCTION_50	IF_28	IF_29	ELSE_6	IF_31
0x4003d6f	    0xc70500000000	               mov dword [0x04003d79], 1	      3356	gui.c	FUNCTION_50	IF_28	ELSE_7
0x4003d79	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      3357	gui.c	FUNCTION_50	IF_28
0x4003d7c	    0x890500000000	            mov dword [0x04003d82], eax 	      3357	gui.c	FUNCTION_50	IF_28
0x4003d82	    0x488b05000000	            mov rax, qword [0x04003d89] 	      3358	gui.c	FUNCTION_50	IF_28
0x4003d89	        0x488b4078	            mov rax, qword [rax + 0x78] 	      3358	gui.c	FUNCTION_50	IF_28
0x4003d8d	    0x488905000000	            mov qword [0x04003d94], rax 	      3358	gui.c	FUNCTION_50	IF_28
0x4003d94	    0x488b05000000	            mov rax, qword [0x04003d9b] 	      3360	gui.c	FUNCTION_50	IF_28
0x4003d9b	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      3360	gui.c	FUNCTION_50	IF_28
0x4003da1	    0x890500000000	            mov dword [0x04003da7], eax 	      3360	gui.c	FUNCTION_50	IF_28
0x4003da7	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      3363	gui.c	FUNCTION_50	IF_28
0x4003daa	          0x83c820	                            or eax, 0x20	      3363	gui.c	FUNCTION_50	IF_28
0x4003dad	          0x8845e3	               mov byte [rbp - 0x1d], al	      3363	gui.c	FUNCTION_50	IF_28
0x4003db0	         0xfb645e3	            movzx eax, byte [rbp - 0x1d]	      3364	gui.c	FUNCTION_50	IF_28	CALL_24
0x4003db4	          0x83e03f	                           and eax, 0x3f	      3364	gui.c	FUNCTION_50	IF_28	CALL_24
0x4003db7	            0x89c2	                            mov edx, eax	      3364	gui.c	FUNCTION_50	IF_28	CALL_24
0x4003db9	    0x8b0500000000	            mov eax, dword [0x04003dbf] 	      3364	gui.c	FUNCTION_50	IF_28	CALL_24
0x4003dbf	          0x83e801	                              sub eax, 1	      3364	gui.c	FUNCTION_50	IF_28	CALL_24
0x4003dc2	          0xc1e006	                              shl eax, 6	      3364	gui.c	FUNCTION_50	IF_28	CALL_24
0x4003dc5	             0x9d0	                             or eax, edx	      3364	gui.c	FUNCTION_50	IF_28	CALL_24
0x4003dc7	          0x8845e3	               mov byte [rbp - 0x1d], al	      3364	gui.c	FUNCTION_50	IF_28	CALL_24
0x4003dca	            0xeb06	                           jmp 0x4003dd2	      3364	gui.c	FUNCTION_50	IF_28	CALL_24
0x4003dcc	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      3367	gui.c	FUNCTION_50	ELSE_8
0x4003dcf	          0x8845e3	               mov byte [rbp - 0x1d], al	      3367	gui.c	FUNCTION_50	ELSE_8
0x4003dd2	         0xfb655e3	            movzx edx, byte [rbp - 0x1d]	      3369	gui.c	FUNCTION_50
0x4003dd6	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      3369	gui.c	FUNCTION_50
0x4003dd9	             0x9d0	                             or eax, edx	      3369	gui.c	FUNCTION_50
0x4003ddb	          0x8845e3	               mov byte [rbp - 0x1d], al	      3369	gui.c	FUNCTION_50
0x4003dde	          0x8b4dcc	             mov ecx, dword [rbp - 0x34]	      3370	gui.c	FUNCTION_50	CALL_25
0x4003de1	        0x488d45e0	                   lea rax, [rbp - 0x20]	      3370	gui.c	FUNCTION_50	CALL_25
0x4003de5	        0x4883c004	                              add rax, 4	      3370	gui.c	FUNCTION_50	CALL_25
0x4003de9	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      3370	gui.c	FUNCTION_50	CALL_25
0x4003dec	            0x89ce	                            mov esi, ecx	      3370	gui.c	FUNCTION_50	CALL_25
0x4003dee	          0x4889c7	                            mov rdi, rax	      3370	gui.c	FUNCTION_50	CALL_25
0x4003df1	      0xe84ff8ffff	               call sym.fill_mouse_coord	      3370	gui.c	FUNCTION_50	CALL_25
0x4003df6	        0x488d45e0	                   lea rax, [rbp - 0x20]	      3371	gui.c	FUNCTION_50	CALL_26
0x4003dfa	      0xbe08000000	                              mov esi, 8	      3371	gui.c	FUNCTION_50	CALL_26
0x4003dff	          0x4889c7	                            mov rdi, rax	      3371	gui.c	FUNCTION_50	CALL_26
0x4003e02	      0xe800000000	                          call 0x4003e07	      3371	gui.c	FUNCTION_50	CALL_26
0x4003e07	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      3373	gui.c	FUNCTION_50	IF_32
0x4003e0b	            0x790c	                           jns 0x4003e19	      3373	gui.c	FUNCTION_50	IF_32
0x4003e0d	    0xc70500000000	               mov dword [0x04003e17], 0	      3374	gui.c	FUNCTION_50	IF_32
0x4003e17	            0xeb09	                           jmp 0x4003e22	      3374	gui.c	FUNCTION_50	IF_32
0x4003e19	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      3376	gui.c	FUNCTION_50	ELSE_9
0x4003e1c	    0x890500000000	            mov dword [0x04003e22], eax 	      3376	gui.c	FUNCTION_50	ELSE_9
0x4003e22	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      3377	gui.c	FUNCTION_50	ELSE_9
0x4003e25	    0x890500000000	            mov dword [0x04003e2b], eax 	      3377	gui.c	FUNCTION_50	ELSE_9
0x4003e2b	    0xc70500000000	     mov dword [0x04003e35], 0xffffffff 	      3384	gui.c	FUNCTION_50	ELSE_9
0x4003e35	            0xeb0d	                           jmp 0x4003e44	      3384	gui.c	FUNCTION_50	ELSE_9
0x4003e37	              0x90	                                     nop	      3125	gui.c	FUNCTION_50	SWITCH_1	IF_1
0x4003e38	            0xeb0a	                           jmp 0x4003e44	      3125	gui.c	FUNCTION_50	SWITCH_1	IF_1
0x4003e3a	              0x90	                                     nop	      3250	gui.c	FUNCTION_50	IF_12	IF_13
0x4003e3b	            0xeb07	                           jmp 0x4003e44	      3250	gui.c	FUNCTION_50	IF_12	IF_13
0x4003e3d	              0x90	                                     nop	      3297	gui.c	FUNCTION_50	IF_12	IF_19	IF_20
0x4003e3e	            0xeb04	                           jmp 0x4003e44	      3297	gui.c	FUNCTION_50	IF_12	IF_19	IF_20
0x4003e40	              0x90	                                     nop	      3310	gui.c	FUNCTION_50	IF_23
0x4003e41	            0xeb01	                           jmp 0x4003e44	      3310	gui.c	FUNCTION_50	IF_23
0x4003e43	              0x90	                                     nop	      3321	gui.c	FUNCTION_50	IF_24	IF_25
0x4003e44	        0x488b45f8	                mov rax, qword [rbp - 8]	      3386	gui.c	FUNCTION_50	ELSE_9
0x4003e48	    0x644833042528	                xor rax, qword fs:[0x28]	      3386	gui.c	FUNCTION_50	ELSE_9
0x4003e51	            0x7405	                            je 0x4003e58	      3386	gui.c	FUNCTION_50	ELSE_9
0x4003e53	      0xe800000000	                          call 0x4003e58	      3386	gui.c	FUNCTION_50	ELSE_9
0x4003e58	              0xc9	                                   leave	      3386	gui.c	FUNCTION_50	ELSE_9
0x4003e59	              0xc3	                                     ret	      3386	gui.c	FUNCTION_50	ELSE_9
gui_drag_scrollbar	IF,28:functions,0:ELSE,9:CALL,22:SWITCH,0:WHILE,0:FOR,1:DO,0	297
0x4004c83	              0x55	                                push rbp	      3961	gui.c	FUNCTION_63
0x4004c84	          0x4889e5	                            mov rbp, rsp	      3961	gui.c	FUNCTION_63
0x4004c87	        0x4883ec40	                           sub rsp, 0x40	      3961	gui.c	FUNCTION_63
0x4004c8b	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      3961	gui.c	FUNCTION_63
0x4004c8f	        0x488975d0	             mov qword [rbp - 0x30], rsi	      3961	gui.c	FUNCTION_63
0x4004c93	          0x8955cc	             mov dword [rbp - 0x34], edx	      3961	gui.c	FUNCTION_63
0x4004c96	    0x488b05000000	            mov rax, qword [0x04004c9d] 	      3965	gui.c	FUNCTION_63
0x4004c9d	    0x8b8094000000	            mov eax, dword [rax + 0x94] 	      3965	gui.c	FUNCTION_63
0x4004ca3	          0x8945e8	             mov dword [rbp - 0x18], eax	      3965	gui.c	FUNCTION_63
0x4004ca6	    0x488b05000000	            mov rax, qword [0x04004cad] 	      3966	gui.c	FUNCTION_63
0x4004cad	        0x488b4078	            mov rax, qword [rax + 0x78] 	      3966	gui.c	FUNCTION_63
0x4004cb1	        0x488945f8	                mov qword [rbp - 8], rax	      3966	gui.c	FUNCTION_63
0x4004cb5	    0x488b05000000	            mov rax, qword [0x04004cbc] 	      3968	gui.c	FUNCTION_63
0x4004cbc	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      3968	gui.c	FUNCTION_63
0x4004cc2	          0x8945ec	             mov dword [rbp - 0x14], eax	      3968	gui.c	FUNCTION_63
0x4004cc5	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      3975	gui.c	FUNCTION_63	IF_1
0x4004cca	     0xf8451040000	                            je 0x4005121	      3975	gui.c	FUNCTION_63	IF_1
0x4004cd0	    0x8b0500000000	            mov eax, dword [0x04004cd6] 	      3979	gui.c	FUNCTION_63	IF_2
0x4004cd6	            0x85c0	                           test eax, eax	      3979	gui.c	FUNCTION_63	IF_2
0x4004cd8	     0xf8546040000	                           jne 0x4005124	      3979	gui.c	FUNCTION_63	IF_2
0x4004cde	    0x8b0500000000	            mov eax, dword [0x04004ce4] 	      3983	gui.c	FUNCTION_63	IF_3
0x4004ce4	            0x85c0	                           test eax, eax	      3983	gui.c	FUNCTION_63	IF_3
0x4004ce6	            0x7418	                            je 0x4004d00	      3983	gui.c	FUNCTION_63	IF_3
0x4004ce8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3983	gui.c	FUNCTION_63	IF_3
0x4004cec	        0x488b5008	                mov rdx, qword [rax + 8]	      3983	gui.c	FUNCTION_63	IF_3
0x4004cf0	    0x488b05000000	            mov rax, qword [0x04004cf7] 	      3983	gui.c	FUNCTION_63	IF_3
0x4004cf7	          0x4839c2	                            cmp rdx, rax	      3983	gui.c	FUNCTION_63	IF_3
0x4004cfa	     0xf8527040000	                           jne 0x4005127	      3983	gui.c	FUNCTION_63	IF_3
0x4004d00	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      3987	gui.c	FUNCTION_63	IF_4
0x4004d04	            0x7454	                            je 0x4004d5a	      3987	gui.c	FUNCTION_63	IF_4
0x4004d06	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3989	gui.c	FUNCTION_63	IF_4	IF_5
0x4004d0a	        0x488b4008	                mov rax, qword [rax + 8]	      3989	gui.c	FUNCTION_63	IF_4	IF_5
0x4004d0e	          0x4885c0	                           test rax, rax	      3989	gui.c	FUNCTION_63	IF_4	IF_5
0x4004d11	            0x750c	                           jne 0x4004d1f	      3989	gui.c	FUNCTION_63	IF_4	IF_5
0x4004d13	    0xc70500000000	               mov dword [0x04004d1d], 2	      3990	gui.c	FUNCTION_63	IF_4	IF_5
0x4004d1d	            0xeb2a	                           jmp 0x4004d49	      3990	gui.c	FUNCTION_63	IF_4	IF_5
0x4004d1f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3991	gui.c	FUNCTION_63	IF_4	ELSE_1	IF_6
0x4004d23	        0x488b4008	                mov rax, qword [rax + 8]	      3991	gui.c	FUNCTION_63	IF_4	ELSE_1	IF_6
0x4004d27	    0x480590180000	                         add rax, 0x1890	      3991	gui.c	FUNCTION_63	IF_4	ELSE_1	IF_6
0x4004d2d	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      3991	gui.c	FUNCTION_63	IF_4	ELSE_1	IF_6
0x4004d31	            0x750c	                           jne 0x4004d3f	      3991	gui.c	FUNCTION_63	IF_4	ELSE_1	IF_6
0x4004d33	    0xc70500000000	               mov dword [0x04004d3d], 0	      3992	gui.c	FUNCTION_63	IF_4	ELSE_1	IF_6
0x4004d3d	            0xeb0a	                           jmp 0x4004d49	      3992	gui.c	FUNCTION_63	IF_4	ELSE_1	IF_6
0x4004d3f	    0xc70500000000	               mov dword [0x04004d49], 1	      3994	gui.c	FUNCTION_63	IF_4	ELSE_2
0x4004d49	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3995	gui.c	FUNCTION_63	IF_4
0x4004d4d	        0x488b4008	                mov rax, qword [rax + 8]	      3995	gui.c	FUNCTION_63	IF_4
0x4004d51	    0x488905000000	            mov qword [0x04004d58], rax 	      3995	gui.c	FUNCTION_63	IF_4
0x4004d58	            0xeb15	                           jmp 0x4004d6f	      3995	gui.c	FUNCTION_63	IF_4
0x4004d5a	    0xc70500000000	     mov dword [0x04004d64], 0xffffffff 	      3999	gui.c	FUNCTION_63	ELSE_3
0x4004d64	    0x48c705000000	               mov qword [0x04004d6f], 0	      4003	gui.c	FUNCTION_63	ELSE_3
0x4004d6f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4008	gui.c	FUNCTION_63	IF_7
0x4004d73	        0x488b4008	                mov rax, qword [rax + 8]	      4008	gui.c	FUNCTION_63	IF_7
0x4004d77	          0x4885c0	                           test rax, rax	      4008	gui.c	FUNCTION_63	IF_7
0x4004d7a	            0x7412	                            je 0x4004d8e	      4008	gui.c	FUNCTION_63	IF_7
0x4004d7c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4009	gui.c	FUNCTION_63	IF_7
0x4004d80	        0x488b4008	                mov rax, qword [rax + 8]	      4009	gui.c	FUNCTION_63	IF_7
0x4004d84	    0x480590180000	                         add rax, 0x1890	      4009	gui.c	FUNCTION_63	IF_7
0x4004d8a	        0x488945d8	             mov qword [rbp - 0x28], rax	      4009	gui.c	FUNCTION_63	IF_7
0x4004d8e	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      4014	gui.c	FUNCTION_63	IF_8
0x4004d93	            0x7908	                           jns 0x4004d9d	      4014	gui.c	FUNCTION_63	IF_8
0x4004d95	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      4015	gui.c	FUNCTION_63	IF_8
0x4004d9d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4020	gui.c	FUNCTION_63	IF_10
0x4004da1	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      4020	gui.c	FUNCTION_63	IF_10
0x4004da5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4020	gui.c	FUNCTION_63	IF_10
0x4004da9	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4020	gui.c	FUNCTION_63	IF_10
0x4004dad	          0x4829c2	                            sub rdx, rax	      4020	gui.c	FUNCTION_63	IF_10
0x4004db0	          0x4889d0	                            mov rax, rdx	      4020	gui.c	FUNCTION_63	IF_10
0x4004db3	        0x4883c001	                              add rax, 1	      4020	gui.c	FUNCTION_63	IF_10
0x4004db7	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      4020	gui.c	FUNCTION_63	IF_10
0x4004dbb	            0x7d1e	                           jge 0x4004ddb	      4020	gui.c	FUNCTION_63	IF_10
0x4004dbd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4021	gui.c	FUNCTION_63	IF_10
0x4004dc1	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      4021	gui.c	FUNCTION_63	IF_10
0x4004dc5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4021	gui.c	FUNCTION_63	IF_10
0x4004dc9	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4021	gui.c	FUNCTION_63	IF_10
0x4004dcd	          0x4829c2	                            sub rdx, rax	      4021	gui.c	FUNCTION_63	IF_10
0x4004dd0	          0x4889d0	                            mov rax, rdx	      4021	gui.c	FUNCTION_63	IF_10
0x4004dd3	        0x4883c001	                              add rax, 1	      4021	gui.c	FUNCTION_63	IF_10
0x4004dd7	        0x488945d0	             mov qword [rbp - 0x30], rax	      4021	gui.c	FUNCTION_63	IF_10
0x4004ddb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4024	gui.c	FUNCTION_63
0x4004ddf	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      4024	gui.c	FUNCTION_63
0x4004de3	        0x48895018	             mov qword [rax + 0x18], rdx	      4024	gui.c	FUNCTION_63
0x4004de7	    0x8b0500000000	            mov eax, dword [0x04004ded] 	      4030	gui.c	FUNCTION_63	IF_11
0x4004ded	            0x85c0	                           test eax, eax	      4030	gui.c	FUNCTION_63	IF_11
0x4004def	     0xf8535030000	                           jne 0x400512a	      4030	gui.c	FUNCTION_63	IF_11
0x4004df5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4036	gui.c	FUNCTION_63	IF_12	CALL_1
0x4004df9	        0x488b4008	                mov rax, qword [rax + 8]	      4036	gui.c	FUNCTION_63	IF_12	CALL_1
0x4004dfd	          0x4885c0	                           test rax, rax	      4036	gui.c	FUNCTION_63	IF_12	CALL_1
0x4004e00	            0x7414	                            je 0x4004e16	      4036	gui.c	FUNCTION_63	IF_12	CALL_1
0x4004e02	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4036	gui.c	FUNCTION_63	IF_12	CALL_1
0x4004e06	        0x488b5008	                mov rdx, qword [rax + 8]	      4036	gui.c	FUNCTION_63	IF_12	CALL_1
0x4004e0a	    0x488b05000000	            mov rax, qword [0x04004e11] 	      4036	gui.c	FUNCTION_63	IF_12	CALL_1
0x4004e11	          0x4839c2	                            cmp rdx, rax	      4036	gui.c	FUNCTION_63	IF_12	CALL_1
0x4004e14	            0x750d	                           jne 0x4004e23	      4036	gui.c	FUNCTION_63	IF_12	CALL_1
0x4004e16	      0xe800000000	                          call 0x4004e1b	      4036	gui.c	FUNCTION_63	IF_12	CALL_1
0x4004e1b	            0x85c0	                           test eax, eax	      4036	gui.c	FUNCTION_63	IF_12	CALL_1
0x4004e1d	     0xf850a030000	                           jne 0x400512d	      4036	gui.c	FUNCTION_63	IF_12	CALL_1
0x4004e23	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4041	gui.c	FUNCTION_63	IF_13
0x4004e27	        0x488b4008	                mov rax, qword [rax + 8]	      4041	gui.c	FUNCTION_63	IF_13
0x4004e2b	          0x4885c0	                           test rax, rax	      4041	gui.c	FUNCTION_63	IF_13
0x4004e2e	            0x7542	                           jne 0x4004e72	      4041	gui.c	FUNCTION_63	IF_13
0x4004e30	    0x488b05000000	            mov rax, qword [0x04004e37] 	      4041	gui.c	FUNCTION_63	IF_13
0x4004e37	    0x8b8054020000	           mov eax, dword [rax + 0x254] 	      4041	gui.c	FUNCTION_63	IF_13
0x4004e3d	            0x85c0	                           test eax, eax	      4041	gui.c	FUNCTION_63	IF_13
0x4004e3f	            0x7431	                            je 0x4004e72	      4041	gui.c	FUNCTION_63	IF_13
0x4004e41	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4043	gui.c	FUNCTION_63	IF_13
0x4004e45	        0x488b4028	            mov rax, qword [rax + 0x28] 	      4043	gui.c	FUNCTION_63	IF_13
0x4004e49	        0x488d5001	                      lea rdx, [rax + 1]	      4043	gui.c	FUNCTION_63	IF_13
0x4004e4d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4043	gui.c	FUNCTION_63	IF_13
0x4004e51	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4043	gui.c	FUNCTION_63	IF_13
0x4004e55	          0x4829c2	                            sub rdx, rax	      4043	gui.c	FUNCTION_63	IF_13
0x4004e58	          0x4889d0	                            mov rax, rdx	      4043	gui.c	FUNCTION_63	IF_13
0x4004e5b	        0x482b45d0	             sub rax, qword [rbp - 0x30]	      4043	gui.c	FUNCTION_63	IF_13
0x4004e5f	        0x488945d0	             mov qword [rbp - 0x30], rax	      4043	gui.c	FUNCTION_63	IF_13
0x4004e63	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      4044	gui.c	FUNCTION_63	IF_13	IF_14
0x4004e68	            0x7908	                           jns 0x4004e72	      4044	gui.c	FUNCTION_63	IF_13	IF_14
0x4004e6a	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      4045	gui.c	FUNCTION_63	IF_13	IF_14
0x4004e72	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4049	gui.c	FUNCTION_63	IF_15
0x4004e76	        0x488b4008	                mov rax, qword [rax + 8]	      4049	gui.c	FUNCTION_63	IF_15
0x4004e7a	          0x4885c0	                           test rax, rax	      4049	gui.c	FUNCTION_63	IF_15
0x4004e7d	     0xf8441010000	                            je 0x4004fc4	      4049	gui.c	FUNCTION_63	IF_15
0x4004e83	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      4051	gui.c	FUNCTION_63	IF_15
0x4004e8a	    0x488b05000000	            mov rax, qword [0x04004e91] 	      4052	gui.c	FUNCTION_63	IF_15	FOR_1
0x4004e91	        0x488945f0	             mov qword [rbp - 0x10], rax	      4052	gui.c	FUNCTION_63	IF_15	FOR_1
0x4004e95	            0xeb10	                           jmp 0x4004ea7	      4052	gui.c	FUNCTION_63	IF_15	FOR_1
0x4004e97	        0x8345e401	               add dword [rbp - 0x1c], 1	      4053	gui.c	FUNCTION_63	IF_15	FOR_1
0x4004e9b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4052	gui.c	FUNCTION_63	IF_15	FOR_1
0x4004e9f	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4052	gui.c	FUNCTION_63	IF_15	FOR_1
0x4004ea3	        0x488945f0	             mov qword [rbp - 0x10], rax	      4052	gui.c	FUNCTION_63	IF_15	FOR_1
0x4004ea7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4052	gui.c	FUNCTION_63	IF_15	FOR_1
0x4004eab	        0x488b4008	                mov rax, qword [rax + 8]	      4052	gui.c	FUNCTION_63	IF_15	FOR_1
0x4004eaf	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      4052	gui.c	FUNCTION_63	IF_15	FOR_1
0x4004eb3	            0x7407	                            je 0x4004ebc	      4052	gui.c	FUNCTION_63	IF_15	FOR_1
0x4004eb5	      0x48837df000	               cmp qword [rbp - 0x10], 0	      4052	gui.c	FUNCTION_63	IF_15	FOR_1
0x4004eba	            0x75db	                           jne 0x4004e97	      4052	gui.c	FUNCTION_63	IF_15	FOR_1
0x4004ebc	      0x48837df000	               cmp qword [rbp - 0x10], 0	      4054	gui.c	FUNCTION_63	IF_15	IF_16
0x4004ec1	     0xf8469020000	                            je 0x4005130	      4054	gui.c	FUNCTION_63	IF_15	IF_16
0x4004ec7	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4058	gui.c	FUNCTION_63	IF_15
0x4004eca	    0x890500000000	            mov dword [0x04004ed0], eax 	      4058	gui.c	FUNCTION_63	IF_15
0x4004ed0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4059	gui.c	FUNCTION_63	IF_15
0x4004ed4	    0x488905000000	            mov qword [0x04004edb], rax 	      4059	gui.c	FUNCTION_63	IF_15
0x4004edb	    0x8b0500000000	            mov eax, dword [0x04004ee1] 	      4060	gui.c	FUNCTION_63	IF_15	IF_17
0x4004ee1	          0x83e001	                              and eax, 1	      4060	gui.c	FUNCTION_63	IF_15	IF_17
0x4004ee4	            0x85c0	                           test eax, eax	      4060	gui.c	FUNCTION_63	IF_15	IF_17
0x4004ee6	            0x740c	                            je 0x4004ef4	      4060	gui.c	FUNCTION_63	IF_15	IF_17
0x4004ee8	      0xe800000000	                          call 0x4004eed	      4062	gui.c	FUNCTION_63	IF_15	IF_17	CALL_2
0x4004eed	      0xe800000000	                          call 0x4004ef2	      4063	gui.c	FUNCTION_63	IF_15	IF_17	CALL_3
0x4004ef2	            0xeb3a	                           jmp 0x4004f2e	      4063	gui.c	FUNCTION_63	IF_15	IF_17	CALL_3
0x4004ef4	    0x8b0500000000	            mov eax, dword [0x04004efa] 	      4065	gui.c	FUNCTION_63	IF_15	ELSE_5	IF_18
0x4004efa	          0x83e010	                           and eax, 0x10	      4065	gui.c	FUNCTION_63	IF_15	ELSE_5	IF_18
0x4004efd	            0x85c0	                           test eax, eax	      4065	gui.c	FUNCTION_63	IF_15	ELSE_5	IF_18
0x4004eff	            0x740c	                            je 0x4004f0d	      4065	gui.c	FUNCTION_63	IF_15	ELSE_5	IF_18
0x4004f01	      0xe800000000	                          call 0x4004f06	      4067	gui.c	FUNCTION_63	IF_15	ELSE_5	IF_18	CALL_4
0x4004f06	      0xe800000000	                          call 0x4004f0b	      4068	gui.c	FUNCTION_63	IF_15	ELSE_5	IF_18	CALL_5
0x4004f0b	            0xeb21	                           jmp 0x4004f2e	      4068	gui.c	FUNCTION_63	IF_15	ELSE_5	IF_18	CALL_5
0x4004f0d	    0x8b0500000000	            mov eax, dword [0x04004f13] 	      4070	gui.c	FUNCTION_63	IF_15	ELSE_6	IF_19
0x4004f13	          0x83e008	                              and eax, 8	      4070	gui.c	FUNCTION_63	IF_15	ELSE_6	IF_19
0x4004f16	            0x85c0	                           test eax, eax	      4070	gui.c	FUNCTION_63	IF_15	ELSE_6	IF_19
0x4004f18	            0x7414	                            je 0x4004f2e	      4070	gui.c	FUNCTION_63	IF_15	ELSE_6	IF_19
0x4004f1a	    0x8b0500000000	            mov eax, dword [0x04004f20] 	      4072	gui.c	FUNCTION_63	IF_15	ELSE_6	IF_19	IF_20
0x4004f20	            0x85c0	                           test eax, eax	      4072	gui.c	FUNCTION_63	IF_15	ELSE_6	IF_19	IF_20
0x4004f22	            0x750a	                           jne 0x4004f2e	      4072	gui.c	FUNCTION_63	IF_15	ELSE_6	IF_19	IF_20
0x4004f24	      0xe800000000	                          call 0x4004f29	      4074	gui.c	FUNCTION_63	IF_15	ELSE_6	IF_19	IF_20	CALL_6
0x4004f29	      0xe800000000	                          call 0x4004f2e	      4075	gui.c	FUNCTION_63	IF_15	ELSE_6	IF_19	IF_20	CALL_7
0x4004f2e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4080	gui.c	FUNCTION_63	IF_15
0x4004f32	        0x488b4008	                mov rax, qword [rax + 8]	      4080	gui.c	FUNCTION_63	IF_15
0x4004f36	        0x488b4078	            mov rax, qword [rax + 0x78] 	      4080	gui.c	FUNCTION_63	IF_15
0x4004f3a	        0x488d50ff	                      lea rdx, [rax - 1]	      4080	gui.c	FUNCTION_63	IF_15
0x4004f3e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4080	gui.c	FUNCTION_63	IF_15
0x4004f42	        0x48895018	             mov qword [rax + 0x18], rdx	      4080	gui.c	FUNCTION_63	IF_15
0x4004f46	    0x8b0500000000	            mov eax, dword [0x04004f4c] 	      4085	gui.c	FUNCTION_63	IF_15	IF_21
0x4004f4c	            0x85c0	                           test eax, eax	      4085	gui.c	FUNCTION_63	IF_15	IF_21
0x4004f4e	     0xf8408010000	                            je 0x400505c	      4085	gui.c	FUNCTION_63	IF_15	IF_21
0x4004f54	    0x8b0500000000	            mov eax, dword [0x04004f5a] 	      4085	gui.c	FUNCTION_63	IF_15	IF_21
0x4004f5a	            0x85c0	                           test eax, eax	      4085	gui.c	FUNCTION_63	IF_15	IF_21
0x4004f5c	     0xf84fa000000	                            je 0x400505c	      4085	gui.c	FUNCTION_63	IF_15	IF_21
0x4004f62	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x4004f66	        0x488b4828	            mov rcx, qword [rax + 0x28] 	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x4004f6a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x4004f6e	        0x488b7820	            mov rdi, qword [rax + 0x20] 	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x4004f72	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x4004f76	        0x488b7018	            mov rsi, qword [rax + 0x18] 	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x4004f7a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4087	gui.c	FUNCTION_63	IF_15	IF_21
0x4004f7e	        0x4c8b4008	                 mov r8, qword [rax + 8]	      4087	gui.c	FUNCTION_63	IF_15	IF_21
0x4004f82	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4088	gui.c	FUNCTION_63	IF_15	IF_21
0x4004f86	        0x488b4008	                mov rax, qword [rax + 8]	      4088	gui.c	FUNCTION_63	IF_15	IF_21
0x4004f8a	    0x4805e0180000	                         add rax, 0x18e0	      4088	gui.c	FUNCTION_63	IF_15	IF_21
0x4004f90	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      4089	gui.c	FUNCTION_63	IF_15	IF_21
0x4004f94	           0xf95c0	                                setne al	      4089	gui.c	FUNCTION_63	IF_15	IF_21
0x4004f97	           0xfb6c0	                           movzx eax, al	      4089	gui.c	FUNCTION_63	IF_15	IF_21
0x4004f9a	          0x4863d0	                         movsxd rdx, eax	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x4004f9d	          0x4889d0	                            mov rax, rdx	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x4004fa0	        0x48c1e002	                              shl rax, 2	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x4004fa4	          0x4801d0	                            add rax, rdx	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x4004fa7	        0x48c1e004	                              shl rax, 4	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x4004fab	    0x480590180000	                         add rax, 0x1890	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x4004fb1	          0x4c01c0	                             add rax, r8	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x4004fb4	          0x4889fa	                            mov rdx, rdi	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x4004fb7	          0x4889c7	                            mov rdi, rax	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x4004fba	      0xe800000000	                          call 0x4004fbf	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x4004fbf	      0xe998000000	                           jmp 0x400505c	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x4004fc4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4103	gui.c	FUNCTION_63	ELSE_7
0x4004fc8	    0x488905000000	            mov qword [0x04004fcf], rax 	      4103	gui.c	FUNCTION_63	ELSE_7
0x4004fcf	    0x8b0500000000	            mov eax, dword [0x04004fd5] 	      4105	gui.c	FUNCTION_63	ELSE_7	IF_22
0x4004fd5	          0x83e001	                              and eax, 1	      4105	gui.c	FUNCTION_63	ELSE_7	IF_22
0x4004fd8	            0x85c0	                           test eax, eax	      4105	gui.c	FUNCTION_63	ELSE_7	IF_22
0x4004fda	            0x7416	                            je 0x4004ff2	      4105	gui.c	FUNCTION_63	ELSE_7	IF_22
0x4004fdc	    0x488b05000000	            mov rax, qword [0x04004fe3] 	      4106	gui.c	FUNCTION_63	ELSE_7	CALL_9
0x4004fe3	      0xbe00000000	                              mov esi, 0	      4106	gui.c	FUNCTION_63	ELSE_7	CALL_9
0x4004fe8	          0x4889c7	                            mov rdi, rax	      4106	gui.c	FUNCTION_63	ELSE_7	CALL_9
0x4004feb	      0xe800000000	                          call 0x4004ff0	      4106	gui.c	FUNCTION_63	ELSE_7	CALL_9
0x4004ff0	            0xeb44	                           jmp 0x4005036	      4106	gui.c	FUNCTION_63	ELSE_7	CALL_9
0x4004ff2	    0x8b0500000000	            mov eax, dword [0x04004ff8] 	      4107	gui.c	FUNCTION_63	ELSE_7	ELSE_8	IF_23
0x4004ff8	          0x83e010	                           and eax, 0x10	      4107	gui.c	FUNCTION_63	ELSE_7	ELSE_8	IF_23
0x4004ffb	            0x85c0	                           test eax, eax	      4107	gui.c	FUNCTION_63	ELSE_7	ELSE_8	IF_23
0x4004ffd	            0x7407	                            je 0x4005006	      4107	gui.c	FUNCTION_63	ELSE_7	ELSE_8	IF_23
0x4004fff	      0xe800000000	                          call 0x4005004	      4108	gui.c	FUNCTION_63	ELSE_7	ELSE_8	IF_23
0x4005004	            0xeb30	                           jmp 0x4005036	      4108	gui.c	FUNCTION_63	ELSE_7	ELSE_8	IF_23
0x4005006	    0x8b0500000000	            mov eax, dword [0x0400500c] 	      4109	gui.c	FUNCTION_63	ELSE_7	ELSE_9	IF_24
0x400500c	          0x83e008	                              and eax, 8	      4109	gui.c	FUNCTION_63	ELSE_7	ELSE_9	IF_24
0x400500f	            0x85c0	                           test eax, eax	      4109	gui.c	FUNCTION_63	ELSE_7	ELSE_9	IF_24
0x4005011	            0x7423	                            je 0x4005036	      4109	gui.c	FUNCTION_63	ELSE_7	ELSE_9	IF_24
0x4005013	    0x8b0500000000	            mov eax, dword [0x04005019] 	      4111	gui.c	FUNCTION_63	ELSE_7	ELSE_9	IF_24	IF_25
0x4005019	            0x85c0	                           test eax, eax	      4111	gui.c	FUNCTION_63	ELSE_7	ELSE_9	IF_24	IF_25
0x400501b	            0x7519	                           jne 0x4005036	      4111	gui.c	FUNCTION_63	ELSE_7	ELSE_9	IF_24	IF_25
0x400501d	    0x488b05000000	            mov rax, qword [0x04005024] 	      4113	gui.c	FUNCTION_63	ELSE_7	ELSE_9	IF_24	IF_25	CALL_11
0x4005024	      0xbe00000000	                              mov esi, 0	      4113	gui.c	FUNCTION_63	ELSE_7	ELSE_9	IF_24	IF_25	CALL_11
0x4005029	          0x4889c7	                            mov rdi, rax	      4113	gui.c	FUNCTION_63	ELSE_7	ELSE_9	IF_24	IF_25	CALL_11
0x400502c	      0xe800000000	                          call 0x4005031	      4113	gui.c	FUNCTION_63	ELSE_7	ELSE_9	IF_24	IF_25	CALL_11
0x4005031	      0xe800000000	                          call 0x4005036	      4114	gui.c	FUNCTION_63	ELSE_7	ELSE_9	IF_24	IF_25	CALL_12
0x4005036	    0x488b05000000	            mov rax, qword [0x0400503d] 	      4117	gui.c	FUNCTION_63	ELSE_7	IF_26
0x400503d	    0x8b8094000000	            mov eax, dword [rax + 0x94] 	      4117	gui.c	FUNCTION_63	ELSE_7	IF_26
0x4005043	          0x3b45e8	             cmp eax, dword [rbp - 0x18]	      4117	gui.c	FUNCTION_63	ELSE_7	IF_26
0x4005046	            0x7414	                            je 0x400505c	      4117	gui.c	FUNCTION_63	ELSE_7	IF_26
0x4005048	    0x488b05000000	            mov rax, qword [0x0400504f] 	      4119	gui.c	FUNCTION_63	ELSE_7	IF_26	CALL_13
0x400504f	          0x4889c7	                            mov rdi, rax	      4119	gui.c	FUNCTION_63	ELSE_7	IF_26	CALL_13
0x4005052	      0xe800000000	                          call 0x4005057	      4119	gui.c	FUNCTION_63	ELSE_7	IF_26	CALL_13
0x4005057	      0xe800000000	                          call 0x400505c	      4120	gui.c	FUNCTION_63	ELSE_7	IF_26	CALL_14
0x400505c	    0x488b05000000	            mov rax, qword [0x04005063] 	      4134	gui.c	FUNCTION_63	IF_27
0x4005063	    0x8b8088020000	           mov eax, dword [rax + 0x288] 	      4134	gui.c	FUNCTION_63	IF_27
0x4005069	            0x85c0	                           test eax, eax	      4134	gui.c	FUNCTION_63	IF_27
0x400506b	     0xf849f000000	                            je 0x4005110	      4134	gui.c	FUNCTION_63	IF_27
0x4005071	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4135	gui.c	FUNCTION_63	IF_27
0x4005075	        0x488b4008	                mov rax, qword [rax + 8]	      4135	gui.c	FUNCTION_63	IF_27
0x4005079	          0x4885c0	                           test rax, rax	      4135	gui.c	FUNCTION_63	IF_27
0x400507c	            0x7512	                           jne 0x4005090	      4135	gui.c	FUNCTION_63	IF_27
0x400507e	    0x488b05000000	            mov rax, qword [0x04005085] 	      4135	gui.c	FUNCTION_63	IF_27
0x4005085	    0x8b8094000000	            mov eax, dword [rax + 0x94] 	      4135	gui.c	FUNCTION_63	IF_27
0x400508b	          0x3b45e8	             cmp eax, dword [rbp - 0x18]	      4135	gui.c	FUNCTION_63	IF_27
0x400508e	            0x7537	                           jne 0x40050c7	      4135	gui.c	FUNCTION_63	IF_27
0x4005090	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4136	gui.c	FUNCTION_63	IF_27
0x4005094	        0x488b5008	                mov rdx, qword [rax + 8]	      4136	gui.c	FUNCTION_63	IF_27
0x4005098	    0x488b05000000	            mov rax, qword [0x0400509f] 	      4136	gui.c	FUNCTION_63	IF_27
0x400509f	          0x4839c2	                            cmp rdx, rax	      4136	gui.c	FUNCTION_63	IF_27
0x40050a2	            0x756c	                           jne 0x4005110	      4136	gui.c	FUNCTION_63	IF_27
0x40050a4	    0x488b05000000	            mov rax, qword [0x040050ab] 	      4136	gui.c	FUNCTION_63	IF_27
0x40050ab	        0x488b4078	            mov rax, qword [rax + 0x78] 	      4136	gui.c	FUNCTION_63	IF_27
0x40050af	        0x483b45f8	                cmp rax, qword [rbp - 8]	      4136	gui.c	FUNCTION_63	IF_27
0x40050b3	            0x7512	                           jne 0x40050c7	      4136	gui.c	FUNCTION_63	IF_27
0x40050b5	    0x488b05000000	            mov rax, qword [0x040050bc] 	      4138	gui.c	FUNCTION_63	IF_27
0x40050bc	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      4138	gui.c	FUNCTION_63	IF_27
0x40050c2	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      4138	gui.c	FUNCTION_63	IF_27
0x40050c5	            0x7449	                            je 0x4005110	      4138	gui.c	FUNCTION_63	IF_27
0x40050c7	      0xbf01000000	                              mov edi, 1	      4142	gui.c	FUNCTION_63	IF_27	CALL_15
0x40050cc	      0xe800000000	                          call 0x40050d1	      4142	gui.c	FUNCTION_63	IF_27	CALL_15
0x40050d1	    0x488b05000000	            mov rax, qword [0x040050d8] 	      4144	gui.c	FUNCTION_63	IF_27	CALL_16
0x40050d8	        0x488945f0	             mov qword [rbp - 0x10], rax	      4144	gui.c	FUNCTION_63	IF_27	CALL_16
0x40050dc	            0xeb26	                           jmp 0x4005104	      4144	gui.c	FUNCTION_63	IF_27	CALL_16
0x40050de	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4145	gui.c	FUNCTION_63	IF_27	IF_28
0x40050e2	    0x8b8028010000	           mov eax, dword [rax + 0x128] 	      4145	gui.c	FUNCTION_63	IF_27	IF_28
0x40050e8	            0x85c0	                           test eax, eax	      4145	gui.c	FUNCTION_63	IF_27	IF_28
0x40050ea	            0x7e0c	                           jle 0x40050f8	      4145	gui.c	FUNCTION_63	IF_27	IF_28
0x40050ec	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4146	gui.c	FUNCTION_63	IF_27	CALL_17
0x40050f0	          0x4889c7	                            mov rdi, rax	      4146	gui.c	FUNCTION_63	IF_27	CALL_17
0x40050f3	      0xe800000000	                          call 0x40050f8	      4146	gui.c	FUNCTION_63	IF_27	CALL_17
0x40050f8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4144	gui.c	FUNCTION_63	IF_27	CALL_16
0x40050fc	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4144	gui.c	FUNCTION_63	IF_27	CALL_16
0x4005100	        0x488945f0	             mov qword [rbp - 0x10], rax	      4144	gui.c	FUNCTION_63	IF_27	CALL_16
0x4005104	      0x48837df000	               cmp qword [rbp - 0x10], 0	      4144	gui.c	FUNCTION_63	IF_27	CALL_16
0x4005109	            0x75d3	                           jne 0x40050de	      4144	gui.c	FUNCTION_63	IF_27	CALL_16
0x400510b	      0xe800000000	                          call 0x4005110	      4147	gui.c	FUNCTION_63	IF_27	CALL_18
0x4005110	      0xbe01000000	                              mov esi, 1	      4149	gui.c	FUNCTION_63	CALL_19
0x4005115	      0xbf00000000	                              mov edi, 0	      4149	gui.c	FUNCTION_63	CALL_19
0x400511a	      0xe800000000	                          call 0x400511f	      4149	gui.c	FUNCTION_63	CALL_19
0x400511f	            0xeb10	                           jmp 0x4005131	      4149	gui.c	FUNCTION_63	CALL_19
0x4005121	              0x90	                                     nop	      3976	gui.c	FUNCTION_63	IF_1
0x4005122	            0xeb0d	                           jmp 0x4005131	      3976	gui.c	FUNCTION_63	IF_1
0x4005124	              0x90	                                     nop	      3980	gui.c	FUNCTION_63	IF_2
0x4005125	            0xeb0a	                           jmp 0x4005131	      3980	gui.c	FUNCTION_63	IF_2
0x4005127	              0x90	                                     nop	      3984	gui.c	FUNCTION_63	IF_3
0x4005128	            0xeb07	                           jmp 0x4005131	      3984	gui.c	FUNCTION_63	IF_3
0x400512a	              0x90	                                     nop	      4031	gui.c	FUNCTION_63	IF_11
0x400512b	            0xeb04	                           jmp 0x4005131	      4031	gui.c	FUNCTION_63	IF_11
0x400512d	              0x90	                                     nop	      4037	gui.c	FUNCTION_63	IF_12
0x400512e	            0xeb01	                           jmp 0x4005131	      4037	gui.c	FUNCTION_63	IF_12
0x4005130	              0x90	                                     nop	      4055	gui.c	FUNCTION_63	IF_15	IF_16
0x4005131	              0xc9	                                   leave	      4155	gui.c	FUNCTION_63
0x4005132	              0xc3	                                     ret	      4155	gui.c	FUNCTION_63
gui_update_cursor	IF,35:functions,0:ELSE,7:CALL,22:SWITCH,0:WHILE,0:FOR,0:DO,0	498
0x4000fad	              0x55	                                push rbp	      1056	gui.c	FUNCTION_15
0x4000fae	          0x4889e5	                            mov rbp, rsp	      1056	gui.c	FUNCTION_15
0x4000fb1	        0x4883c480	             add rsp, 0xffffffffffffff80	      1056	gui.c	FUNCTION_15
0x4000fb5	          0x897d8c	             mov dword [rbp - 0x74], edi	      1056	gui.c	FUNCTION_15
0x4000fb8	          0x897588	             mov dword [rbp - 0x78], esi	      1056	gui.c	FUNCTION_15
0x4000fbb	    0x64488b042528	                mov rax, qword fs:[0x28]	      1056	gui.c	FUNCTION_15
0x4000fc4	        0x488945f8	                mov qword [rbp - 8], rax	      1056	gui.c	FUNCTION_15
0x4000fc8	            0x31c0	                            xor eax, eax	      1056	gui.c	FUNCTION_15
0x4000fca	    0xc74594000000	               mov dword [rbp - 0x6c], 0	      1057	gui.c	FUNCTION_15
0x4000fd1	    0xc74598000000	               mov dword [rbp - 0x68], 0	      1058	gui.c	FUNCTION_15
0x4000fd8	    0x48c745b099d4	mov qword [rbp - 0x50], 0xffffffffffffd499	      1063	gui.c	FUNCTION_15
0x4000fe0	    0x48c745b899d4	mov qword [rbp - 0x48], 0xffffffffffffd499	      1064	gui.c	FUNCTION_15
0x4000fe8	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      1069	gui.c	FUNCTION_15
0x4000ff0	    0x8b0500000000	            mov eax, dword [0x04000ff6] 	      1073	gui.c	FUNCTION_15	IF_1
0x4000ff6	            0x85c0	                           test eax, eax	      1073	gui.c	FUNCTION_15	IF_1
0x4000ff8	     0xf8426070000	                            je 0x4001724	      1073	gui.c	FUNCTION_15	IF_1
0x4000ffe	    0x8b1500000000	            mov edx, dword [0x04001004] 	      1073	gui.c	FUNCTION_15	IF_1
0x4001004	    0x8b0500000000	            mov eax, dword [0x0400100a] 	      1073	gui.c	FUNCTION_15	IF_1
0x400100a	            0x39c2	                            cmp edx, eax	      1073	gui.c	FUNCTION_15	IF_1
0x400100c	     0xf8512070000	                           jne 0x4001724	      1073	gui.c	FUNCTION_15	IF_1
0x4001012	    0x8b1500000000	            mov edx, dword [0x04001018] 	      1074	gui.c	FUNCTION_15	IF_1
0x4001018	    0x8b0500000000	            mov eax, dword [0x0400101e] 	      1074	gui.c	FUNCTION_15	IF_1
0x400101e	            0x39c2	                            cmp edx, eax	      1074	gui.c	FUNCTION_15	IF_1
0x4001020	     0xf85fe060000	                           jne 0x4001724	      1074	gui.c	FUNCTION_15	IF_1
0x4001026	      0xe816ffffff	                  call sym.gui_check_pos	      1077	gui.c	FUNCTION_15	CALL_1
0x400102b	     0xfb605000000	           movzx eax, byte [0x04001032] 	      1078	gui.c	FUNCTION_15	IF_2
0x4001032	            0x84c0	                             test al, al	      1078	gui.c	FUNCTION_15	IF_2
0x4001034	            0x742a	                            je 0x4001060	      1078	gui.c	FUNCTION_15	IF_2
0x4001036	        0x837d8c00	               cmp dword [rbp - 0x74], 0	      1078	gui.c	FUNCTION_15	IF_2
0x400103a	            0x7524	                           jne 0x4001060	      1078	gui.c	FUNCTION_15	IF_2
0x400103c	    0x8b1500000000	            mov edx, dword [0x04001042] 	      1079	gui.c	FUNCTION_15	IF_2
0x4001042	    0x8b0500000000	            mov eax, dword [0x04001048] 	      1079	gui.c	FUNCTION_15	IF_2
0x4001048	            0x39c2	                            cmp edx, eax	      1079	gui.c	FUNCTION_15	IF_2
0x400104a	            0x7514	                           jne 0x4001060	      1079	gui.c	FUNCTION_15	IF_2
0x400104c	    0x8b1500000000	            mov edx, dword [0x04001052] 	      1079	gui.c	FUNCTION_15	IF_2
0x4001052	    0x8b0500000000	            mov eax, dword [0x04001058] 	      1079	gui.c	FUNCTION_15	IF_2
0x4001058	            0x39c2	                            cmp edx, eax	      1079	gui.c	FUNCTION_15	IF_2
0x400105a	     0xf84ce060000	                            je 0x400172e	      1079	gui.c	FUNCTION_15	IF_2
0x4001060	      0xe800000000	                          call 0x4001065	      1081	gui.c	FUNCTION_15	IF_2	CALL_2
0x4001065	    0x8b0500000000	            mov eax, dword [0x0400106b] 	      1082	gui.c	FUNCTION_15	IF_2	IF_3
0x400106b	            0x85c0	                           test eax, eax	      1082	gui.c	FUNCTION_15	IF_2	IF_3
0x400106d	     0xf88b4060000	                            js 0x4001727	      1082	gui.c	FUNCTION_15	IF_2	IF_3
0x4001073	    0x8b1500000000	            mov edx, dword [0x04001079] 	      1085	gui.c	FUNCTION_15	IF_2	IF_4
0x4001079	    0x8b0500000000	            mov eax, dword [0x0400107f] 	      1085	gui.c	FUNCTION_15	IF_2	IF_4
0x400107f	            0x39c2	                            cmp edx, eax	      1085	gui.c	FUNCTION_15	IF_2	IF_4
0x4001081	            0x7510	                           jne 0x4001093	      1085	gui.c	FUNCTION_15	IF_2	IF_4
0x4001083	    0x8b1500000000	            mov edx, dword [0x04001089] 	      1085	gui.c	FUNCTION_15	IF_2	IF_4
0x4001089	    0x8b0500000000	            mov eax, dword [0x0400108f] 	      1085	gui.c	FUNCTION_15	IF_2	IF_4
0x400108f	            0x39c2	                            cmp edx, eax	      1085	gui.c	FUNCTION_15	IF_2	IF_4
0x4001091	            0x7415	                            je 0x40010a8	      1085	gui.c	FUNCTION_15	IF_2	IF_4
0x4001093	    0x8b1500000000	            mov edx, dword [0x04001099] 	      1086	gui.c	FUNCTION_15	IF_2	CALL_3
0x4001099	    0x8b0500000000	            mov eax, dword [0x0400109f] 	      1086	gui.c	FUNCTION_15	IF_2	CALL_3
0x400109f	            0x89d6	                            mov esi, edx	      1086	gui.c	FUNCTION_15	IF_2	CALL_3
0x40010a1	            0x89c7	                            mov edi, eax	      1086	gui.c	FUNCTION_15	IF_2	CALL_3
0x40010a3	      0xe800000000	                          call 0x40010a8	      1086	gui.c	FUNCTION_15	IF_2	CALL_3
0x40010a8	    0x8b0500000000	            mov eax, dword [0x040010ae] 	      1088	gui.c	FUNCTION_15	IF_2
0x40010ae	    0x890500000000	            mov dword [0x040010b4], eax 	      1088	gui.c	FUNCTION_15	IF_2
0x40010b4	    0x8b0500000000	            mov eax, dword [0x040010ba] 	      1089	gui.c	FUNCTION_15	IF_2
0x40010ba	    0x890500000000	            mov dword [0x040010c0], eax 	      1089	gui.c	FUNCTION_15	IF_2
0x40010c0	    0x8b0500000000	            mov eax, dword [0x040010c6] 	      1092	gui.c	FUNCTION_15	IF_2	IF_5
0x40010c6	            0x85c0	                           test eax, eax	      1092	gui.c	FUNCTION_15	IF_2	IF_5
0x40010c8	     0xf845c060000	                            je 0x400172a	      1092	gui.c	FUNCTION_15	IF_2	IF_5
0x40010ce	    0x488b05000000	            mov rax, qword [0x040010d5] 	      1092	gui.c	FUNCTION_15	IF_2	IF_5
0x40010d5	          0x4885c0	                           test rax, rax	      1092	gui.c	FUNCTION_15	IF_2	IF_5
0x40010d8	     0xf844c060000	                            je 0x400172a	      1092	gui.c	FUNCTION_15	IF_2	IF_5
0x40010de	        0x837d8800	               cmp dword [rbp - 0x78], 0	      1096	gui.c	FUNCTION_15	IF_2	IF_6
0x40010e2	            0x7415	                            je 0x40010f9	      1096	gui.c	FUNCTION_15	IF_2	IF_6
0x40010e4	    0x8b1500000000	            mov edx, dword [0x040010ea] 	      1097	gui.c	FUNCTION_15	IF_2	CALL_4
0x40010ea	    0x8b0500000000	            mov eax, dword [0x040010f0] 	      1097	gui.c	FUNCTION_15	IF_2	CALL_4
0x40010f0	            0x89d6	                            mov esi, edx	      1097	gui.c	FUNCTION_15	IF_2	CALL_4
0x40010f2	            0x89c7	                            mov edi, eax	      1097	gui.c	FUNCTION_15	IF_2	CALL_4
0x40010f4	      0xe800000000	                          call 0x40010f9	      1097	gui.c	FUNCTION_15	IF_2	CALL_4
0x40010f9	    0x8b1500000000	            mov edx, dword [0x040010ff] 	      1100	gui.c	FUNCTION_15	IF_2	IF_7
0x40010ff	    0x8b0500000000	            mov eax, dword [0x04001105] 	      1100	gui.c	FUNCTION_15	IF_2	IF_7
0x4001105	            0x39c2	                            cmp edx, eax	      1100	gui.c	FUNCTION_15	IF_2	IF_7
0x4001107	     0xf8d20060000	                           jge 0x400172d	      1100	gui.c	FUNCTION_15	IF_2	IF_7
0x400110d	    0x8b1500000000	            mov edx, dword [0x04001113] 	      1100	gui.c	FUNCTION_15	IF_2	IF_7
0x4001113	    0x8b0500000000	            mov eax, dword [0x04001119] 	      1100	gui.c	FUNCTION_15	IF_2	IF_7
0x4001119	            0x39c2	                            cmp edx, eax	      1100	gui.c	FUNCTION_15	IF_2	IF_7
0x400111b	     0xf8d0c060000	                           jge 0x400172d	      1100	gui.c	FUNCTION_15	IF_2	IF_7
0x4001121	    0xc60500000000	                mov byte [0x04001128], 1	      1103	gui.c	FUNCTION_15	IF_2
0x4001128	      0xe800000000	                          call 0x400112d	      1110	gui.c	FUNCTION_15	IF_2	IF_8	CALL_5
0x400112d	            0x85c0	                           test eax, eax	      1110	gui.c	FUNCTION_15	IF_2	IF_8	CALL_5
0x400112f	            0x7419	                            je 0x400114a	      1110	gui.c	FUNCTION_15	IF_2	IF_8	CALL_5
0x4001131	        0x488d55b8	                   lea rdx, [rbp - 0x48]	      1111	gui.c	FUNCTION_15	IF_2	CALL_6
0x4001135	        0x488d45b0	                   lea rax, [rbp - 0x50]	      1111	gui.c	FUNCTION_15	IF_2	CALL_6
0x4001139	          0x4889d6	                            mov rsi, rdx	      1111	gui.c	FUNCTION_15	IF_2	CALL_6
0x400113c	          0x4889c7	                            mov rdi, rax	      1111	gui.c	FUNCTION_15	IF_2	CALL_6
0x400113f	      0xe800000000	                          call 0x4001144	      1111	gui.c	FUNCTION_15	IF_2	CALL_6
0x4001144	        0x488945e0	             mov qword [rbp - 0x20], rax	      1111	gui.c	FUNCTION_15	IF_2	CALL_6
0x4001148	            0xeb1a	                           jmp 0x4001164	      1111	gui.c	FUNCTION_15	IF_2	CALL_6
0x400114a	      0xbf00000000	                              mov edi, 0	      1114	gui.c	FUNCTION_15	IF_2	CALL_7
0x400114f	      0xe800000000	                          call 0x4001154	      1114	gui.c	FUNCTION_15	IF_2	CALL_7
0x4001154	            0x4898	                                    cdqe	      1114	gui.c	FUNCTION_15	IF_2	CALL_7
0x4001156	        0x48c1e006	                              shl rax, 6	      1114	gui.c	FUNCTION_15	IF_2	CALL_7
0x400115a	    0x480500000000	                              add rax, 0	      1114	gui.c	FUNCTION_15	IF_2	CALL_7
0x4001160	        0x488945e0	             mov qword [rbp - 0x20], rax	      1114	gui.c	FUNCTION_15	IF_2	CALL_7
0x4001164	    0x8b0500000000	            mov eax, dword [0x0400116a] 	      1115	gui.c	FUNCTION_15	IF_2	IF_9
0x400116a	          0x83e020	                           and eax, 0x20	      1115	gui.c	FUNCTION_15	IF_2	IF_9
0x400116d	            0x85c0	                           test eax, eax	      1115	gui.c	FUNCTION_15	IF_2	IF_9
0x400116f	            0x740c	                            je 0x400117d	      1115	gui.c	FUNCTION_15	IF_2	IF_9
0x4001171	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1116	gui.c	FUNCTION_15	IF_2	IF_9
0x4001175	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1116	gui.c	FUNCTION_15	IF_2	IF_9
0x4001178	          0x89459c	             mov dword [rbp - 0x64], eax	      1116	gui.c	FUNCTION_15	IF_2	IF_9
0x400117b	            0xeb0a	                           jmp 0x4001187	      1116	gui.c	FUNCTION_15	IF_2	IF_9
0x400117d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1118	gui.c	FUNCTION_15	IF_2	ELSE_2
0x4001181	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1118	gui.c	FUNCTION_15	IF_2	ELSE_2
0x4001184	          0x89459c	             mov dword [rbp - 0x64], eax	      1118	gui.c	FUNCTION_15	IF_2	ELSE_2
0x4001187	    0x48c745c099d4	mov qword [rbp - 0x40], 0xffffffffffffd499	      1121	gui.c	FUNCTION_15	IF_2
0x400118f	    0x48c745c899d4	mov qword [rbp - 0x38], 0xffffffffffffd499	      1122	gui.c	FUNCTION_15	IF_2
0x4001197	    0xc745a0010000	               mov dword [rbp - 0x60], 1	      1123	gui.c	FUNCTION_15	IF_2
0x400119e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1124	gui.c	FUNCTION_15	IF_2	CALL_8
0x40011a2	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      1124	gui.c	FUNCTION_15	IF_2	CALL_8
0x40011a6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1124	gui.c	FUNCTION_15	IF_2	CALL_8
0x40011aa	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      1124	gui.c	FUNCTION_15	IF_2	CALL_8
0x40011ae	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1124	gui.c	FUNCTION_15	IF_2	CALL_8
0x40011b2	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1124	gui.c	FUNCTION_15	IF_2	CALL_8
0x40011b6	          0x4889ce	                            mov rsi, rcx	      1124	gui.c	FUNCTION_15	IF_2	CALL_8
0x40011b9	          0x4889c7	                            mov rdi, rax	      1124	gui.c	FUNCTION_15	IF_2	CALL_8
0x40011bc	      0xe800000000	                          call 0x40011c1	      1124	gui.c	FUNCTION_15	IF_2	CALL_8
0x40011c1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1127	gui.c	FUNCTION_15	IF_2	IF_10
0x40011c5	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1127	gui.c	FUNCTION_15	IF_2	IF_10
0x40011c9	          0x4885c0	                           test rax, rax	      1127	gui.c	FUNCTION_15	IF_2	IF_10
0x40011cc	            0x741a	                            je 0x40011e8	      1127	gui.c	FUNCTION_15	IF_2	IF_10
0x40011ce	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1127	gui.c	FUNCTION_15	IF_2	IF_10
0x40011d2	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1127	gui.c	FUNCTION_15	IF_2	IF_10
0x40011d6	          0x4885c0	                           test rax, rax	      1127	gui.c	FUNCTION_15	IF_2	IF_10
0x40011d9	            0x740d	                            je 0x40011e8	      1127	gui.c	FUNCTION_15	IF_2	IF_10
0x40011db	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1128	gui.c	FUNCTION_15	IF_2	IF_10
0x40011df	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1128	gui.c	FUNCTION_15	IF_2	IF_10
0x40011e3	          0x4885c0	                           test rax, rax	      1128	gui.c	FUNCTION_15	IF_2	IF_10
0x40011e6	            0x750a	                           jne 0x40011f2	      1128	gui.c	FUNCTION_15	IF_2	IF_10
0x40011e8	      0xbf00000000	                              mov edi, 0	      1129	gui.c	FUNCTION_15	IF_2	CALL_9
0x40011ed	      0xe800000000	                          call 0x40011f2	      1129	gui.c	FUNCTION_15	IF_2	CALL_9
0x40011f2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1131	gui.c	FUNCTION_15	IF_2	IF_11
0x40011f6	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      1131	gui.c	FUNCTION_15	IF_2	IF_11
0x40011fc	            0x741c	                            je 0x400121a	      1131	gui.c	FUNCTION_15	IF_2	IF_11
0x40011fe	    0xc745a0000000	               mov dword [rbp - 0x60], 0	      1133	gui.c	FUNCTION_15	IF_2	IF_11
0x4001205	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1134	gui.c	FUNCTION_15	IF_2	IF_11
0x4001209	        0x488945c0	             mov qword [rbp - 0x40], rax	      1134	gui.c	FUNCTION_15	IF_2	IF_11
0x400120d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1135	gui.c	FUNCTION_15	IF_2	IF_11
0x4001211	        0x488945c8	             mov qword [rbp - 0x38], rax	      1135	gui.c	FUNCTION_15	IF_2	IF_11
0x4001215	      0xe981000000	                           jmp 0x400129b	      1135	gui.c	FUNCTION_15	IF_2	IF_11
0x400121a	        0x837d9c00	               cmp dword [rbp - 0x64], 0	      1139	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12
0x400121e	            0x7e7b	                           jle 0x400129b	      1139	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12
0x4001220	        0x488d55c8	                   lea rdx, [rbp - 0x38]	      1141	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	CALL_10
0x4001224	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	      1141	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	CALL_10
0x4001228	          0x8b459c	             mov eax, dword [rbp - 0x64]	      1141	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	CALL_10
0x400122b	          0x4889ce	                            mov rsi, rcx	      1141	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	CALL_10
0x400122e	            0x89c7	                            mov edi, eax	      1141	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	CALL_10
0x4001230	      0xe800000000	                          call 0x4001235	      1141	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	CALL_10
0x4001235	          0x8945a0	             mov dword [rbp - 0x60], eax	      1141	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	CALL_10
0x4001238	      0xe800000000	                          call 0x400123d	      1149	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	CALL_11
0x400123d	            0x85c0	                           test eax, eax	      1147	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13
0x400123f	            0x745a	                            je 0x400129b	      1147	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13
0x4001241	      0xbf00000000	                              mov edi, 0	      1155	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	CALL_13
0x4001246	      0xe800000000	                          call 0x400124b	      1155	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	CALL_13
0x400124b	    0x890500000000	            mov dword [0x04001251], eax 	      1155	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	CALL_13
0x4001251	    0x8b0500000000	            mov eax, dword [0x04001257] 	      1156	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14
0x4001257	            0x85c0	                           test eax, eax	      1156	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14
0x4001259	            0x7e40	                           jle 0x400129b	      1156	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14
0x400125b	    0x8b0500000000	            mov eax, dword [0x04001261] 	      1158	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	CALL_14
0x4001261	        0x488d55d8	                   lea rdx, [rbp - 0x28]	      1158	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	CALL_14
0x4001265	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	      1158	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	CALL_14
0x4001269	          0x4889ce	                            mov rsi, rcx	      1158	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	CALL_14
0x400126c	            0x89c7	                            mov edi, eax	      1158	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	CALL_14
0x400126e	      0xe800000000	                          call 0x4001273	      1158	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	CALL_14
0x4001273	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1159	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	IF_15
0x4001277	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      1159	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	IF_15
0x400127d	            0x7408	                            je 0x4001287	      1159	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	IF_15
0x400127f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1160	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	IF_15
0x4001283	        0x488945c8	             mov qword [rbp - 0x38], rax	      1160	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	IF_15
0x4001287	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1161	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	IF_16
0x400128b	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      1161	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	IF_16
0x4001291	            0x7408	                            je 0x400129b	      1161	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	IF_16
0x4001293	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1162	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	IF_16
0x4001297	        0x488945c0	             mov qword [rbp - 0x40], rax	      1162	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	IF_16
0x400129b	    0x488b05000000	            mov rax, qword [0x040012a2] 	      1173	gui.c	FUNCTION_15	IF_2
0x40012a2	    0x488b15000000	            mov rdx, qword [0x040012a9] 	      1173	gui.c	FUNCTION_15	IF_2
0x40012a9	    0x8b0d00000000	            mov ecx, dword [0x040012af] 	      1173	gui.c	FUNCTION_15	IF_2
0x40012af	          0x4863c9	                         movsxd rcx, ecx	      1173	gui.c	FUNCTION_15	IF_2
0x40012b2	        0x48c1e102	                              shl rcx, 2	      1173	gui.c	FUNCTION_15	IF_2
0x40012b6	          0x4801ca	                            add rdx, rcx	      1173	gui.c	FUNCTION_15	IF_2
0x40012b9	            0x8b12	                    mov edx, dword [rdx]	      1173	gui.c	FUNCTION_15	IF_2
0x40012bb	    0x8b0d00000000	            mov ecx, dword [0x040012c1] 	      1173	gui.c	FUNCTION_15	IF_2
0x40012c1	             0x1ca	                            add edx, ecx	      1173	gui.c	FUNCTION_15	IF_2
0x40012c3	            0x89d2	                            mov edx, edx	      1173	gui.c	FUNCTION_15	IF_2
0x40012c5	          0x4801d2	                            add rdx, rdx	      1173	gui.c	FUNCTION_15	IF_2
0x40012c8	          0x4801d0	                            add rax, rdx	      1173	gui.c	FUNCTION_15	IF_2
0x40012cb	           0xfb700	                   movzx eax, word [rax]	      1173	gui.c	FUNCTION_15	IF_2
0x40012ce	           0xfb7c0	                           movzx eax, ax	      1173	gui.c	FUNCTION_15	IF_2
0x40012d1	          0x8945a4	             mov dword [rbp - 0x5c], eax	      1173	gui.c	FUNCTION_15	IF_2
0x40012d4	    0x817da4ff0000	           cmp dword [rbp - 0x5c], 0xff 	      1174	gui.c	FUNCTION_15	IF_2	IF_17
0x40012db	            0x7e0e	                           jle 0x40012eb	      1174	gui.c	FUNCTION_15	IF_2	IF_17
0x40012dd	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      1175	gui.c	FUNCTION_15	IF_2	CALL_15
0x40012e0	            0x89c7	                            mov edi, eax	      1175	gui.c	FUNCTION_15	IF_2	CALL_15
0x40012e2	      0xe800000000	                          call 0x40012e7	      1175	gui.c	FUNCTION_15	IF_2	CALL_15
0x40012e7	        0x488945e8	             mov qword [rbp - 0x18], rax	      1175	gui.c	FUNCTION_15	IF_2	CALL_15
0x40012eb	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1176	gui.c	FUNCTION_15	IF_2	IF_18
0x40012f0	            0x7463	                            je 0x4001355	      1176	gui.c	FUNCTION_15	IF_2	IF_18
0x40012f2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1178	gui.c	FUNCTION_15	IF_2	IF_18
0x40012f6	           0xfb700	                   movzx eax, word [rax]	      1178	gui.c	FUNCTION_15	IF_2	IF_18
0x40012f9	              0x98	                                    cwde	      1178	gui.c	FUNCTION_15	IF_2	IF_18
0x40012fa	          0x8945a4	             mov dword [rbp - 0x5c], eax	      1178	gui.c	FUNCTION_15	IF_2	IF_18
0x40012fd	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1179	gui.c	FUNCTION_15	IF_2	IF_18	IF_19
0x4001301	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      1179	gui.c	FUNCTION_15	IF_2	IF_18	IF_19
0x4001307	            0x7520	                           jne 0x4001329	      1179	gui.c	FUNCTION_15	IF_2	IF_18	IF_19
0x4001309	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      1180	gui.c	FUNCTION_15	IF_2	IF_18	IF_19
0x400130c	          0x83e001	                              and eax, 1	      1180	gui.c	FUNCTION_15	IF_2	IF_18	IF_19
0x400130f	            0x85c0	                           test eax, eax	      1181	gui.c	FUNCTION_15	IF_2	IF_18	IF_19
0x4001311	            0x740a	                            je 0x400131d	      1181	gui.c	FUNCTION_15	IF_2	IF_18	IF_19
0x4001313	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1181	gui.c	FUNCTION_15	IF_2	IF_18	IF_19
0x4001317	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1181	gui.c	FUNCTION_15	IF_2	IF_18	IF_19
0x400131b	            0xeb08	                           jmp 0x4001325	      1181	gui.c	FUNCTION_15	IF_2	IF_18	IF_19
0x400131d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1181	gui.c	FUNCTION_15	IF_2	IF_18	IF_19
0x4001321	        0x488b4008	                mov rax, qword [rax + 8]	      1181	gui.c	FUNCTION_15	IF_2	IF_18	IF_19
0x4001325	        0x488945c0	             mov qword [rbp - 0x40], rax	      1180	gui.c	FUNCTION_15	IF_2	IF_18	IF_19
0x4001329	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1182	gui.c	FUNCTION_15	IF_2	IF_18	IF_20
0x400132d	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      1182	gui.c	FUNCTION_15	IF_2	IF_18	IF_20
0x4001333	            0x7520	                           jne 0x4001355	      1182	gui.c	FUNCTION_15	IF_2	IF_18	IF_20
0x4001335	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      1183	gui.c	FUNCTION_15	IF_2	IF_18	IF_20
0x4001338	          0x83e001	                              and eax, 1	      1183	gui.c	FUNCTION_15	IF_2	IF_18	IF_20
0x400133b	            0x85c0	                           test eax, eax	      1184	gui.c	FUNCTION_15	IF_2	IF_18	IF_20
0x400133d	            0x740a	                            je 0x4001349	      1184	gui.c	FUNCTION_15	IF_2	IF_18	IF_20
0x400133f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1184	gui.c	FUNCTION_15	IF_2	IF_18	IF_20
0x4001343	        0x488b4008	                mov rax, qword [rax + 8]	      1184	gui.c	FUNCTION_15	IF_2	IF_18	IF_20
0x4001347	            0xeb08	                           jmp 0x4001351	      1184	gui.c	FUNCTION_15	IF_2	IF_18	IF_20
0x4001349	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1184	gui.c	FUNCTION_15	IF_2	IF_18	IF_20
0x400134d	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1184	gui.c	FUNCTION_15	IF_2	IF_18	IF_20
0x4001351	        0x488945c8	             mov qword [rbp - 0x38], rax	      1183	gui.c	FUNCTION_15	IF_2	IF_18	IF_20
0x4001355	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1186	gui.c	FUNCTION_15	IF_2	IF_21
0x4001359	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      1186	gui.c	FUNCTION_15	IF_2	IF_21
0x400135f	            0x751e	                           jne 0x400137f	      1186	gui.c	FUNCTION_15	IF_2	IF_21
0x4001361	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      1187	gui.c	FUNCTION_15	IF_2	IF_21
0x4001364	          0x83e001	                              and eax, 1	      1187	gui.c	FUNCTION_15	IF_2	IF_21
0x4001367	            0x85c0	                           test eax, eax	      1187	gui.c	FUNCTION_15	IF_2	IF_21
0x4001369	            0x7409	                            je 0x4001374	      1187	gui.c	FUNCTION_15	IF_2	IF_21
0x400136b	    0x488b05000000	            mov rax, qword [0x04001372] 	      1187	gui.c	FUNCTION_15	IF_2	IF_21
0x4001372	            0xeb07	                           jmp 0x400137b	      1187	gui.c	FUNCTION_15	IF_2	IF_21
0x4001374	    0x488b05000000	            mov rax, qword [0x0400137b] 	      1187	gui.c	FUNCTION_15	IF_2	IF_21
0x400137b	        0x488945c0	             mov qword [rbp - 0x40], rax	      1187	gui.c	FUNCTION_15	IF_2	IF_21
0x400137f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1188	gui.c	FUNCTION_15	IF_2	IF_22
0x4001383	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      1188	gui.c	FUNCTION_15	IF_2	IF_22
0x4001389	            0x751e	                           jne 0x40013a9	      1188	gui.c	FUNCTION_15	IF_2	IF_22
0x400138b	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      1189	gui.c	FUNCTION_15	IF_2	IF_22
0x400138e	          0x83e001	                              and eax, 1	      1189	gui.c	FUNCTION_15	IF_2	IF_22
0x4001391	            0x85c0	                           test eax, eax	      1189	gui.c	FUNCTION_15	IF_2	IF_22
0x4001393	            0x7409	                            je 0x400139e	      1189	gui.c	FUNCTION_15	IF_2	IF_22
0x4001395	    0x488b05000000	            mov rax, qword [0x0400139c] 	      1189	gui.c	FUNCTION_15	IF_2	IF_22
0x400139c	            0xeb07	                           jmp 0x40013a5	      1189	gui.c	FUNCTION_15	IF_2	IF_22
0x400139e	    0x488b05000000	            mov rax, qword [0x040013a5] 	      1189	gui.c	FUNCTION_15	IF_2	IF_22
0x40013a5	        0x488945c8	             mov qword [rbp - 0x38], rax	      1189	gui.c	FUNCTION_15	IF_2	IF_22
0x40013a9	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1192	gui.c	FUNCTION_15	IF_2	IF_23
0x40013ae	     0xf84a8000000	                            je 0x400145c	      1192	gui.c	FUNCTION_15	IF_2	IF_23
0x40013b4	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      1194	gui.c	FUNCTION_15	IF_2	IF_23
0x40013b7	          0x83e001	                              and eax, 1	      1194	gui.c	FUNCTION_15	IF_2	IF_23
0x40013ba	            0x85c0	                           test eax, eax	      1195	gui.c	FUNCTION_15	IF_2	IF_23
0x40013bc	            0x740a	                            je 0x40013c8	      1195	gui.c	FUNCTION_15	IF_2	IF_23
0x40013be	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1195	gui.c	FUNCTION_15	IF_2	IF_23
0x40013c2	        0x488b4008	                mov rax, qword [rax + 8]	      1195	gui.c	FUNCTION_15	IF_2	IF_23
0x40013c6	            0xeb08	                           jmp 0x40013d0	      1195	gui.c	FUNCTION_15	IF_2	IF_23
0x40013c8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1195	gui.c	FUNCTION_15	IF_2	IF_23
0x40013cc	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1195	gui.c	FUNCTION_15	IF_2	IF_23
0x40013d0	    0x488905000000	            mov qword [0x040013d7], rax 	      1194	gui.c	FUNCTION_15	IF_2	IF_23
0x40013d7	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      1196	gui.c	FUNCTION_15	IF_2	IF_23
0x40013da	          0x83e001	                              and eax, 1	      1196	gui.c	FUNCTION_15	IF_2	IF_23
0x40013dd	            0x85c0	                           test eax, eax	      1197	gui.c	FUNCTION_15	IF_2	IF_23
0x40013df	            0x740a	                            je 0x40013eb	      1197	gui.c	FUNCTION_15	IF_2	IF_23
0x40013e1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1197	gui.c	FUNCTION_15	IF_2	IF_23
0x40013e5	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1197	gui.c	FUNCTION_15	IF_2	IF_23
0x40013e9	            0xeb08	                           jmp 0x40013f3	      1197	gui.c	FUNCTION_15	IF_2	IF_23
0x40013eb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1197	gui.c	FUNCTION_15	IF_2	IF_23
0x40013ef	        0x488b4008	                mov rax, qword [rax + 8]	      1197	gui.c	FUNCTION_15	IF_2	IF_23
0x40013f3	    0x488905000000	            mov qword [0x040013fa], rax 	      1196	gui.c	FUNCTION_15	IF_2	IF_23
0x40013fa	    0x488b05000000	            mov rax, qword [0x04001401] 	      1198	gui.c	FUNCTION_15	IF_2	IF_23	IF_24
0x4001401	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      1198	gui.c	FUNCTION_15	IF_2	IF_23	IF_24
0x4001407	            0x7521	                           jne 0x400142a	      1198	gui.c	FUNCTION_15	IF_2	IF_23	IF_24
0x4001409	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      1199	gui.c	FUNCTION_15	IF_2	IF_23	IF_24
0x400140c	          0x83e001	                              and eax, 1	      1199	gui.c	FUNCTION_15	IF_2	IF_23	IF_24
0x400140f	            0x85c0	                           test eax, eax	      1200	gui.c	FUNCTION_15	IF_2	IF_23	IF_24
0x4001411	            0x7409	                            je 0x400141c	      1200	gui.c	FUNCTION_15	IF_2	IF_23	IF_24
0x4001413	    0x488b05000000	            mov rax, qword [0x0400141a] 	      1200	gui.c	FUNCTION_15	IF_2	IF_23	IF_24
0x400141a	            0xeb07	                           jmp 0x4001423	      1200	gui.c	FUNCTION_15	IF_2	IF_23	IF_24
0x400141c	    0x488b05000000	            mov rax, qword [0x04001423] 	      1200	gui.c	FUNCTION_15	IF_2	IF_23	IF_24
0x4001423	    0x488905000000	            mov qword [0x0400142a], rax 	      1199	gui.c	FUNCTION_15	IF_2	IF_23	IF_24
0x400142a	    0x488b05000000	            mov rax, qword [0x04001431] 	      1201	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x4001431	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      1201	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x4001437	            0x7565	                           jne 0x400149e	      1201	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x4001439	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      1202	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x400143c	          0x83e001	                              and eax, 1	      1202	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x400143f	            0x85c0	                           test eax, eax	      1203	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x4001441	            0x7409	                            je 0x400144c	      1203	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x4001443	    0x488b05000000	            mov rax, qword [0x0400144a] 	      1203	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x400144a	            0xeb07	                           jmp 0x4001453	      1203	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x400144c	    0x488b05000000	            mov rax, qword [0x04001453] 	      1203	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x4001453	    0x488905000000	            mov qword [0x0400145a], rax 	      1202	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x400145a	            0xeb42	                           jmp 0x400149e	      1202	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x400145c	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      1207	gui.c	FUNCTION_15	IF_2	ELSE_4
0x400145f	          0x83e001	                              and eax, 1	      1207	gui.c	FUNCTION_15	IF_2	ELSE_4
0x4001462	            0x85c0	                           test eax, eax	      1208	gui.c	FUNCTION_15	IF_2	ELSE_4
0x4001464	            0x7409	                            je 0x400146f	      1208	gui.c	FUNCTION_15	IF_2	ELSE_4
0x4001466	    0x488b05000000	            mov rax, qword [0x0400146d] 	      1208	gui.c	FUNCTION_15	IF_2	ELSE_4
0x400146d	            0xeb07	                           jmp 0x4001476	      1208	gui.c	FUNCTION_15	IF_2	ELSE_4
0x400146f	    0x488b05000000	            mov rax, qword [0x04001476] 	      1208	gui.c	FUNCTION_15	IF_2	ELSE_4
0x4001476	    0x488905000000	            mov qword [0x0400147d], rax 	      1207	gui.c	FUNCTION_15	IF_2	ELSE_4
0x400147d	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      1209	gui.c	FUNCTION_15	IF_2	ELSE_4
0x4001480	          0x83e001	                              and eax, 1	      1209	gui.c	FUNCTION_15	IF_2	ELSE_4
0x4001483	            0x85c0	                           test eax, eax	      1210	gui.c	FUNCTION_15	IF_2	ELSE_4
0x4001485	            0x7409	                            je 0x4001490	      1210	gui.c	FUNCTION_15	IF_2	ELSE_4
0x4001487	    0x488b05000000	            mov rax, qword [0x0400148e] 	      1210	gui.c	FUNCTION_15	IF_2	ELSE_4
0x400148e	            0xeb07	                           jmp 0x4001497	      1210	gui.c	FUNCTION_15	IF_2	ELSE_4
0x4001490	    0x488b05000000	            mov rax, qword [0x04001497] 	      1210	gui.c	FUNCTION_15	IF_2	ELSE_4
0x4001497	    0x488905000000	            mov qword [0x0400149e], rax 	      1209	gui.c	FUNCTION_15	IF_2	ELSE_4
0x400149e	        0x8365a4fe	      and dword [rbp - 0x5c], 0xfffffffe	      1214	gui.c	FUNCTION_15	IF_2
0x40014a2	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      1215	gui.c	FUNCTION_15	IF_2	IF_26
0x40014a5	          0x83e001	                              and eax, 1	      1215	gui.c	FUNCTION_15	IF_2	IF_26
0x40014a8	            0x85c0	                           test eax, eax	      1215	gui.c	FUNCTION_15	IF_2	IF_26
0x40014aa	            0x7418	                            je 0x40014c4	      1215	gui.c	FUNCTION_15	IF_2	IF_26
0x40014ac	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1217	gui.c	FUNCTION_15	IF_2	IF_26
0x40014b0	        0x488945f0	             mov qword [rbp - 0x10], rax	      1217	gui.c	FUNCTION_15	IF_2	IF_26
0x40014b4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1218	gui.c	FUNCTION_15	IF_2	IF_26
0x40014b8	        0x488945c8	             mov qword [rbp - 0x38], rax	      1218	gui.c	FUNCTION_15	IF_2	IF_26
0x40014bc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1219	gui.c	FUNCTION_15	IF_2	IF_26
0x40014c0	        0x488945c0	             mov qword [rbp - 0x40], rax	      1219	gui.c	FUNCTION_15	IF_2	IF_26
0x40014c4	        0x8365a0fe	      and dword [rbp - 0x60], 0xfffffffe	      1221	gui.c	FUNCTION_15	IF_2
0x40014c8	    0x8b0500000000	            mov eax, dword [0x040014ce] 	      1226	gui.c	FUNCTION_15	IF_2	IF_27
0x40014ce	            0x85c0	                           test eax, eax	      1226	gui.c	FUNCTION_15	IF_2	IF_27
0x40014d0	            0x7511	                           jne 0x40014e3	      1226	gui.c	FUNCTION_15	IF_2	IF_27
0x40014d2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1228	gui.c	FUNCTION_15	IF_2	IF_27	CALL_16
0x40014d6	          0x4889c7	                            mov rdi, rax	      1228	gui.c	FUNCTION_15	IF_2	IF_27	CALL_16
0x40014d9	      0xe800000000	                          call 0x40014de	      1228	gui.c	FUNCTION_15	IF_2	IF_27	CALL_16
0x40014de	      0xe94b020000	                           jmp 0x400172e	      1229	gui.c	FUNCTION_15	IF_2	IF_27
0x40014e3	    0x8b0500000000	            mov eax, dword [0x040014e9] 	      1232	gui.c	FUNCTION_15	IF_2
0x40014e9	          0x8945ac	             mov dword [rbp - 0x54], eax	      1232	gui.c	FUNCTION_15	IF_2
0x40014ec	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1233	gui.c	FUNCTION_15	IF_2	IF_28
0x40014f0	            0x8b00	                    mov eax, dword [rax]	      1233	gui.c	FUNCTION_15	IF_2	IF_28
0x40014f2	            0x85c0	                           test eax, eax	      1233	gui.c	FUNCTION_15	IF_2	IF_28
0x40014f4	            0x7552	                           jne 0x4001548	      1233	gui.c	FUNCTION_15	IF_2	IF_28
0x40014f6	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      1243	gui.c	FUNCTION_15	IF_2	IF_28
0x40014f9	           0xb45a4	              or eax, dword [rbp - 0x5c]	      1243	gui.c	FUNCTION_15	IF_2	IF_28
0x40014fc	    0x890500000000	            mov dword [0x04001502], eax 	      1243	gui.c	FUNCTION_15	IF_2	IF_28
0x4001502	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1261	gui.c	FUNCTION_15	IF_2	IF_28	ELSE_5	CALL_20
0x4001506	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1261	gui.c	FUNCTION_15	IF_2	IF_28	ELSE_5	CALL_20
0x400150a	    0x488b0d000000	            mov rcx, qword [0x04001511] 	      1261	gui.c	FUNCTION_15	IF_2	IF_28	ELSE_5	CALL_20
0x4001511	    0x8b3500000000	            mov esi, dword [0x04001517] 	      1261	gui.c	FUNCTION_15	IF_2	IF_28	ELSE_5	CALL_20
0x4001517	          0x4863f6	                         movsxd rsi, esi	      1261	gui.c	FUNCTION_15	IF_2	IF_28	ELSE_5	CALL_20
0x400151a	        0x48c1e602	                              shl rsi, 2	      1261	gui.c	FUNCTION_15	IF_2	IF_28	ELSE_5	CALL_20
0x400151e	          0x4801f1	                            add rcx, rsi	      1261	gui.c	FUNCTION_15	IF_2	IF_28	ELSE_5	CALL_20
0x4001521	            0x8b09	                    mov ecx, dword [rcx]	      1261	gui.c	FUNCTION_15	IF_2	IF_28	ELSE_5	CALL_20
0x4001523	    0x8b3500000000	            mov esi, dword [0x04001529] 	      1261	gui.c	FUNCTION_15	IF_2	IF_28	ELSE_5	CALL_20
0x4001529	             0x1f1	                            add ecx, esi	      1261	gui.c	FUNCTION_15	IF_2	IF_28	ELSE_5	CALL_20
0x400152b	            0x89cf	                            mov edi, ecx	      1261	gui.c	FUNCTION_15	IF_2	IF_28	ELSE_5	CALL_20
0x400152d	    0x41b800000000	                              mov r8d, 0	      1261	gui.c	FUNCTION_15	IF_2	IF_28	ELSE_5	CALL_20
0x4001533	          0x4889d1	                            mov rcx, rdx	      1261	gui.c	FUNCTION_15	IF_2	IF_28	ELSE_5	CALL_20
0x4001536	          0x4889c2	                            mov rdx, rax	      1261	gui.c	FUNCTION_15	IF_2	IF_28	ELSE_5	CALL_20
0x4001539	      0xbe14000000	                           mov esi, 0x14	      1261	gui.c	FUNCTION_15	IF_2	IF_28	ELSE_5	CALL_20
0x400153e	      0xe86f100000	                 call sym.gui_screenchar	      1261	gui.c	FUNCTION_15	IF_2	IF_28	ELSE_5	CALL_20
0x4001543	      0xe9d1010000	                           jmp 0x4001719	      1261	gui.c	FUNCTION_15	IF_2	IF_28	ELSE_5	CALL_20
0x4001548	    0xc745a8000000	               mov dword [rbp - 0x58], 0	      1267	gui.c	FUNCTION_15	IF_2	ELSE_6
0x400154f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1273	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x4001553	            0x8b00	                    mov eax, dword [rax]	      1273	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x4001555	          0x83f802	                              cmp eax, 2	      1273	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x4001558	            0x7536	                           jne 0x4001590	      1273	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x400155a	    0x8b0500000000	            mov eax, dword [0x04001560] 	      1275	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x4001560	          0x894598	             mov dword [rbp - 0x68], eax	      1275	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x4001563	    0x8b1500000000	            mov edx, dword [0x04001569] 	      1276	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x4001569	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1276	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x400156d	          0x8b4008	                mov eax, dword [rax + 8]	      1276	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x4001570	           0xfafc2	                           imul eax, edx	      1276	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x4001573	          0x8d4863	                   lea ecx, [rax + 0x63]	      1276	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x4001576	      0xba1f85eb51	                     mov edx, 0x51eb851f	      1276	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x400157b	            0x89c8	                            mov eax, ecx	      1276	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x400157d	            0xf7ea	                                imul edx	      1276	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x400157f	          0xc1fa05	                              sar edx, 5	      1276	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x4001582	            0x89c8	                            mov eax, ecx	      1276	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x4001584	          0xc1f81f	                           sar eax, 0x1f	      1276	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x4001587	            0x29c2	                            sub edx, eax	      1276	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x4001589	            0x89d0	                            mov eax, edx	      1276	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x400158b	          0x894594	             mov dword [rbp - 0x6c], eax	      1276	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x400158e	            0xeb34	                           jmp 0x40015c4	      1276	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x4001590	    0x8b1500000000	            mov edx, dword [0x04001596] 	      1280	gui.c	FUNCTION_15	IF_2	ELSE_6	ELSE_7
0x4001596	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1280	gui.c	FUNCTION_15	IF_2	ELSE_6	ELSE_7
0x400159a	          0x8b4008	                mov eax, dword [rax + 8]	      1280	gui.c	FUNCTION_15	IF_2	ELSE_6	ELSE_7
0x400159d	           0xfafc2	                           imul eax, edx	      1280	gui.c	FUNCTION_15	IF_2	ELSE_6	ELSE_7
0x40015a0	          0x8d4863	                   lea ecx, [rax + 0x63]	      1280	gui.c	FUNCTION_15	IF_2	ELSE_6	ELSE_7
0x40015a3	      0xba1f85eb51	                     mov edx, 0x51eb851f	      1280	gui.c	FUNCTION_15	IF_2	ELSE_6	ELSE_7
0x40015a8	            0x89c8	                            mov eax, ecx	      1280	gui.c	FUNCTION_15	IF_2	ELSE_6	ELSE_7
0x40015aa	            0xf7ea	                                imul edx	      1280	gui.c	FUNCTION_15	IF_2	ELSE_6	ELSE_7
0x40015ac	          0xc1fa05	                              sar edx, 5	      1280	gui.c	FUNCTION_15	IF_2	ELSE_6	ELSE_7
0x40015af	            0x89c8	                            mov eax, ecx	      1280	gui.c	FUNCTION_15	IF_2	ELSE_6	ELSE_7
0x40015b1	          0xc1f81f	                           sar eax, 0x1f	      1280	gui.c	FUNCTION_15	IF_2	ELSE_6	ELSE_7
0x40015b4	            0x29c2	                            sub edx, eax	      1280	gui.c	FUNCTION_15	IF_2	ELSE_6	ELSE_7
0x40015b6	            0x89d0	                            mov eax, edx	      1280	gui.c	FUNCTION_15	IF_2	ELSE_6	ELSE_7
0x40015b8	          0x894598	             mov dword [rbp - 0x68], eax	      1280	gui.c	FUNCTION_15	IF_2	ELSE_6	ELSE_7
0x40015bb	    0x8b0500000000	            mov eax, dword [0x040015c1] 	      1281	gui.c	FUNCTION_15	IF_2	ELSE_6	ELSE_7
0x40015c1	          0x894594	             mov dword [rbp - 0x6c], eax	      1281	gui.c	FUNCTION_15	IF_2	ELSE_6	ELSE_7
0x40015c4	    0x8b0500000000	            mov eax, dword [0x040015ca] 	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x40015ca	            0x85c0	                           test eax, eax	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x40015cc	     0xf84a6000000	                            je 0x4001678	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x40015d2	    0x488b05000000	            mov rax, qword [0x040015d9] 	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x40015d9	    0x488b15000000	            mov rdx, qword [0x040015e0] 	      1285	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x40015e0	    0x8b0d00000000	            mov ecx, dword [0x040015e6] 	      1285	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x40015e6	          0x4863c9	                         movsxd rcx, ecx	      1285	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x40015e9	        0x48c1e102	                              shl rcx, 2	      1285	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x40015ed	          0x4801ca	                            add rdx, rcx	      1285	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x40015f0	            0x8b12	                    mov edx, dword [rdx]	      1285	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x40015f2	    0x8b0d00000000	            mov ecx, dword [0x040015f8] 	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x40015f8	             0x1d1	                            add ecx, edx	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x40015fa	    0x488b15000000	            mov rdx, qword [0x04001601] 	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x4001601	    0x8b3500000000	            mov esi, dword [0x04001607] 	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x4001607	          0x4863f6	                         movsxd rsi, esi	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x400160a	        0x48c1e602	                              shl rsi, 2	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x400160e	          0x4801f2	                            add rdx, rsi	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x4001611	            0x8b12	                    mov edx, dword [rdx]	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x4001613	    0x8b3500000000	            mov esi, dword [0x04001619] 	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x4001619	             0x1f2	                            add edx, esi	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x400161b	            0x89ce	                            mov esi, ecx	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x400161d	            0x89d7	                            mov edi, edx	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x400161f	            0xffd0	                                call rax	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x4001621	          0x83f801	                              cmp eax, 1	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x4001624	            0x7e52	                           jle 0x4001678	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x4001626	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1288	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_33
0x400162a	            0x8b00	                    mov eax, dword [rax]	      1288	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_33
0x400162c	          0x83f802	                              cmp eax, 2	      1288	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_33
0x400162f	            0x7409	                            je 0x400163a	      1288	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_33
0x4001631	    0x8b0500000000	            mov eax, dword [0x04001637] 	      1289	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_33
0x4001637	           0x14594	             add dword [rbp - 0x6c], eax	      1289	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_33
0x400163a	    0x488b05000000	            mov rax, qword [0x04001641] 	      1291	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_34
0x4001641	    0x8b8054020000	           mov eax, dword [rax + 0x254] 	      1291	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_34
0x4001647	            0x85c0	                           test eax, eax	      1291	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_34
0x4001649	            0x742d	                            je 0x4001678	      1291	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_34
0x400164b	    0x8b0500000000	            mov eax, dword [0x04001651] 	      1291	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_34
0x4001651	          0x83e008	                              and eax, 8	      1291	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_34
0x4001654	            0x85c0	                           test eax, eax	      1291	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_34
0x4001656	            0x740a	                            je 0x4001662	      1291	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_34
0x4001658	    0x8b0500000000	            mov eax, dword [0x0400165e] 	      1291	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_34
0x400165e	            0x85c0	                           test eax, eax	      1291	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_34
0x4001660	            0x7416	                            je 0x4001678	      1291	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_34
0x4001662	    0xc745a8010000	               mov dword [rbp - 0x58], 1	      1297	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_34
0x4001669	    0x8b0500000000	            mov eax, dword [0x0400166f] 	      1298	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_34
0x400166f	          0x83c001	                              add eax, 1	      1298	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_34
0x4001672	    0x890500000000	            mov dword [0x04001678], eax 	      1298	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_34
0x4001678	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1303	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_21
0x400167c	          0x8b4d98	             mov ecx, dword [rbp - 0x68]	      1303	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_21
0x400167f	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      1303	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_21
0x4001682	            0x89ce	                            mov esi, ecx	      1303	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_21
0x4001684	            0x89c7	                            mov edi, eax	      1303	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_21
0x4001686	      0xe800000000	                          call 0x400168b	      1303	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_21
0x400168b	        0x837da800	               cmp dword [rbp - 0x58], 0	      1305	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_35
0x400168f	            0x740f	                            je 0x40016a0	      1305	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_35
0x4001691	    0x8b0500000000	            mov eax, dword [0x04001697] 	      1306	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_35
0x4001697	          0x83e801	                              sub eax, 1	      1306	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_35
0x400169a	    0x890500000000	            mov dword [0x040016a0], eax 	      1306	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_35
0x40016a0	    0x488b05000000	            mov rax, qword [0x040016a7] 	      1310	gui.c	FUNCTION_15	IF_2	ELSE_6
0x40016a7	    0x488b15000000	            mov rdx, qword [0x040016ae] 	      1310	gui.c	FUNCTION_15	IF_2	ELSE_6
0x40016ae	    0x8b0d00000000	            mov ecx, dword [0x040016b4] 	      1310	gui.c	FUNCTION_15	IF_2	ELSE_6
0x40016b4	          0x4863c9	                         movsxd rcx, ecx	      1310	gui.c	FUNCTION_15	IF_2	ELSE_6
0x40016b7	        0x48c1e102	                              shl rcx, 2	      1310	gui.c	FUNCTION_15	IF_2	ELSE_6
0x40016bb	          0x4801ca	                            add rdx, rcx	      1310	gui.c	FUNCTION_15	IF_2	ELSE_6
0x40016be	            0x8b12	                    mov edx, dword [rdx]	      1310	gui.c	FUNCTION_15	IF_2	ELSE_6
0x40016c0	    0x8b0d00000000	            mov ecx, dword [0x040016c6] 	      1310	gui.c	FUNCTION_15	IF_2	ELSE_6
0x40016c6	             0x1ca	                            add edx, ecx	      1310	gui.c	FUNCTION_15	IF_2	ELSE_6
0x40016c8	            0x89d2	                            mov edx, edx	      1310	gui.c	FUNCTION_15	IF_2	ELSE_6
0x40016ca	          0x4801d2	                            add rdx, rdx	      1310	gui.c	FUNCTION_15	IF_2	ELSE_6
0x40016cd	          0x4801d0	                            add rax, rdx	      1310	gui.c	FUNCTION_15	IF_2	ELSE_6
0x40016d0	           0xfb700	                   movzx eax, word [rax]	      1310	gui.c	FUNCTION_15	IF_2	ELSE_6
0x40016d3	           0xfb7c0	                           movzx eax, ax	      1310	gui.c	FUNCTION_15	IF_2	ELSE_6
0x40016d6	    0x890500000000	            mov dword [0x040016dc], eax 	      1310	gui.c	FUNCTION_15	IF_2	ELSE_6
0x40016dc	    0x488b05000000	            mov rax, qword [0x040016e3] 	      1311	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_22
0x40016e3	    0x8b1500000000	            mov edx, dword [0x040016e9] 	      1311	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_22
0x40016e9	          0x4863d2	                         movsxd rdx, edx	      1311	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_22
0x40016ec	        0x48c1e202	                              shl rdx, 2	      1311	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_22
0x40016f0	          0x4801d0	                            add rax, rdx	      1311	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_22
0x40016f3	            0x8b00	                    mov eax, dword [rax]	      1311	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_22
0x40016f5	    0x8b1500000000	            mov edx, dword [0x040016fb] 	      1311	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_22
0x40016fb	             0x1d0	                            add eax, edx	      1311	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_22
0x40016fd	    0x41b800000000	                              mov r8d, 0	      1311	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_22
0x4001703	      0xb900000000	                              mov ecx, 0	      1311	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_22
0x4001708	      0xba00000000	                              mov edx, 0	      1311	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_22
0x400170d	      0xbe18000000	                           mov esi, 0x18	      1311	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_22
0x4001712	            0x89c7	                            mov edi, eax	      1311	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_22
0x4001714	      0xe8990e0000	                 call sym.gui_screenchar	      1311	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_22
0x4001719	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1316	gui.c	FUNCTION_15	IF_2
0x400171c	    0x890500000000	            mov dword [0x04001722], eax 	      1316	gui.c	FUNCTION_15	IF_2
0x4001722	            0xeb0a	                           jmp 0x400172e	      1316	gui.c	FUNCTION_15	IF_2
0x4001724	              0x90	                                     nop	      1075	gui.c	FUNCTION_15	IF_1
0x4001725	            0xeb07	                           jmp 0x400172e	      1075	gui.c	FUNCTION_15	IF_1
0x4001727	              0x90	                                     nop	      1083	gui.c	FUNCTION_15	IF_2	IF_3
0x4001728	            0xeb04	                           jmp 0x400172e	      1083	gui.c	FUNCTION_15	IF_2	IF_3
0x400172a	              0x90	                                     nop	      1093	gui.c	FUNCTION_15	IF_2	IF_5
0x400172b	            0xeb01	                           jmp 0x400172e	      1093	gui.c	FUNCTION_15	IF_2	IF_5
0x400172d	              0x90	                                     nop	      1101	gui.c	FUNCTION_15	IF_2	IF_7
0x400172e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1318	gui.c	FUNCTION_15
0x4001732	    0x644833042528	                xor rax, qword fs:[0x28]	      1318	gui.c	FUNCTION_15
0x400173b	            0x7405	                            je 0x4001742	      1318	gui.c	FUNCTION_15
0x400173d	      0xe800000000	                          call 0x4001742	      1318	gui.c	FUNCTION_15
0x4001742	              0xc9	                                   leave	      1318	gui.c	FUNCTION_15
0x4001743	              0xc3	                                     ret	      1318	gui.c	FUNCTION_15
xy2win	IF,7:functions,0:ELSE,5:CALL,11:SWITCH,0:WHILE,0:FOR,0:DO,0	130
0x400654a	              0x55	                                push rbp	      4949	gui.c	FUNCTION_81
0x400654b	          0x4889e5	                            mov rbp, rsp	      4949	gui.c	FUNCTION_81
0x400654e	        0x4883ec30	                           sub rsp, 0x30	      4949	gui.c	FUNCTION_81
0x4006552	          0x897ddc	             mov dword [rbp - 0x24], edi	      4949	gui.c	FUNCTION_81
0x4006555	          0x8975d8	             mov dword [rbp - 0x28], esi	      4949	gui.c	FUNCTION_81
0x4006558	    0x64488b042528	                mov rax, qword fs:[0x28]	      4949	gui.c	FUNCTION_81
0x4006561	        0x488945f8	                mov qword [rbp - 8], rax	      4949	gui.c	FUNCTION_81
0x4006565	            0x31c0	                            xor eax, eax	      4949	gui.c	FUNCTION_81
0x4006567	    0x8b0500000000	            mov eax, dword [0x0400656d] 	      4954	gui.c	FUNCTION_81	CALL_1
0x400656d	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      4954	gui.c	FUNCTION_81	CALL_1
0x4006570	            0x29c2	                            sub edx, eax	      4954	gui.c	FUNCTION_81	CALL_1
0x4006572	            0x89d0	                            mov eax, edx	      4954	gui.c	FUNCTION_81	CALL_1
0x4006574	    0x8b0d00000000	            mov ecx, dword [0x0400657a] 	      4954	gui.c	FUNCTION_81	CALL_1
0x400657a	              0x99	                                     cdq	      4954	gui.c	FUNCTION_81	CALL_1
0x400657b	            0xf7f9	                                idiv ecx	      4954	gui.c	FUNCTION_81	CALL_1
0x400657d	          0x8945e8	             mov dword [rbp - 0x18], eax	      4954	gui.c	FUNCTION_81	CALL_1
0x4006580	    0x8b0500000000	            mov eax, dword [0x04006586] 	      4955	gui.c	FUNCTION_81	CALL_2
0x4006586	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      4955	gui.c	FUNCTION_81	CALL_2
0x4006589	            0x29c2	                            sub edx, eax	      4955	gui.c	FUNCTION_81	CALL_2
0x400658b	            0x89d0	                            mov eax, edx	      4955	gui.c	FUNCTION_81	CALL_2
0x400658d	    0x8b3500000000	            mov esi, dword [0x04006593] 	      4955	gui.c	FUNCTION_81	CALL_2
0x4006593	              0x99	                                     cdq	      4955	gui.c	FUNCTION_81	CALL_2
0x4006594	            0xf7fe	                                idiv esi	      4955	gui.c	FUNCTION_81	CALL_2
0x4006596	          0x8945ec	             mov dword [rbp - 0x14], eax	      4955	gui.c	FUNCTION_81	CALL_2
0x4006599	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      4956	gui.c	FUNCTION_81	IF_1
0x400659c	            0x85c0	                           test eax, eax	      4956	gui.c	FUNCTION_81	IF_1
0x400659e	            0x7807	                            js 0x40065a7	      4956	gui.c	FUNCTION_81	IF_1
0x40065a0	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      4956	gui.c	FUNCTION_81	IF_1
0x40065a3	            0x85c0	                           test eax, eax	      4956	gui.c	FUNCTION_81	IF_1
0x40065a5	            0x790a	                           jns 0x40065b1	      4956	gui.c	FUNCTION_81	IF_1
0x40065a7	      0xb800000000	                              mov eax, 0	      4957	gui.c	FUNCTION_81	IF_1
0x40065ac	      0xe955010000	                           jmp 0x4006706	      4957	gui.c	FUNCTION_81	IF_1
0x40065b1	        0x488d55ec	                   lea rdx, [rbp - 0x14]	      4958	gui.c	FUNCTION_81	CALL_3
0x40065b5	        0x488d45e8	                   lea rax, [rbp - 0x18]	      4958	gui.c	FUNCTION_81	CALL_3
0x40065b9	          0x4889d6	                            mov rsi, rdx	      4958	gui.c	FUNCTION_81	CALL_3
0x40065bc	          0x4889c7	                            mov rdi, rax	      4958	gui.c	FUNCTION_81	CALL_3
0x40065bf	      0xe800000000	                          call 0x40065c4	      4958	gui.c	FUNCTION_81	CALL_3
0x40065c4	        0x488945f0	             mov qword [rbp - 0x10], rax	      4958	gui.c	FUNCTION_81	CALL_3
0x40065c8	      0x48837df000	               cmp qword [rbp - 0x10], 0	      4959	gui.c	FUNCTION_81	IF_2
0x40065cd	            0x750a	                           jne 0x40065d9	      4959	gui.c	FUNCTION_81	IF_2
0x40065cf	      0xb800000000	                              mov eax, 0	      4960	gui.c	FUNCTION_81	IF_2
0x40065d4	      0xe92d010000	                           jmp 0x4006706	      4960	gui.c	FUNCTION_81	IF_2
0x40065d9	    0x8b0500000000	            mov eax, dword [0x040065df] 	      4962	gui.c	FUNCTION_81	IF_3
0x40065df	      0x3d01020000	                          cmp eax, 0x201	      4962	gui.c	FUNCTION_81	IF_3
0x40065e4	            0x740d	                            je 0x40065f3	      4962	gui.c	FUNCTION_81	IF_3
0x40065e6	    0x8b0500000000	            mov eax, dword [0x040065ec] 	      4962	gui.c	FUNCTION_81	IF_3
0x40065ec	      0x3d00030000	                          cmp eax, 0x300	      4962	gui.c	FUNCTION_81	IF_3
0x40065f1	            0x7540	                           jne 0x4006633	      4962	gui.c	FUNCTION_81	IF_3
0x40065f3	    0x8b0500000000	            mov eax, dword [0x040065f9] 	      4964	gui.c	FUNCTION_81	IF_3	IF_4	CALL_4
0x40065f9	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      4964	gui.c	FUNCTION_81	IF_3	IF_4	CALL_4
0x40065fc	            0x29c2	                            sub edx, eax	      4964	gui.c	FUNCTION_81	IF_3	IF_4	CALL_4
0x40065fe	            0x89d0	                            mov eax, edx	      4964	gui.c	FUNCTION_81	IF_3	IF_4	CALL_4
0x4006600	    0x8b0d00000000	            mov ecx, dword [0x04006606] 	      4964	gui.c	FUNCTION_81	IF_3	IF_4	CALL_4
0x4006606	              0x99	                                     cdq	      4964	gui.c	FUNCTION_81	IF_3	IF_4	CALL_4
0x4006607	            0xf7f9	                                idiv ecx	      4964	gui.c	FUNCTION_81	IF_3	IF_4	CALL_4
0x4006609	            0x89c2	                            mov edx, eax	      4964	gui.c	FUNCTION_81	IF_3	IF_4	CALL_4
0x400660b	    0x8b0500000000	            mov eax, dword [0x04006611] 	      4964	gui.c	FUNCTION_81	IF_3	IF_4	CALL_4
0x4006611	            0x39c2	                            cmp edx, eax	      4964	gui.c	FUNCTION_81	IF_3	IF_4	CALL_4
0x4006613	            0x7c0f	                            jl 0x4006624	      4964	gui.c	FUNCTION_81	IF_3	IF_4	CALL_4
0x4006615	      0xbf0f000000	                            mov edi, 0xf	      4965	gui.c	FUNCTION_81	IF_3	CALL_5
0x400661a	      0xe800000000	                          call 0x400661f	      4965	gui.c	FUNCTION_81	IF_3	CALL_5
0x400661f	      0xe9de000000	                           jmp 0x4006702	      4964	gui.c	FUNCTION_81	IF_3	IF_4	CALL_4
0x4006624	      0xbf0e000000	                            mov edi, 0xe	      4967	gui.c	FUNCTION_81	IF_3	CALL_6
0x4006629	      0xe800000000	                          call 0x400662e	      4967	gui.c	FUNCTION_81	IF_3	CALL_6
0x400662e	      0xe9cf000000	                           jmp 0x4006702	      4964	gui.c	FUNCTION_81	IF_3	IF_4	CALL_4
0x4006633	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4969	gui.c	FUNCTION_81	ELSE_2	IF_5
0x4006637	    0x8b90a0000000	            mov edx, dword [rax + 0xa0] 	      4969	gui.c	FUNCTION_81	ELSE_2	IF_5
0x400663d	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      4969	gui.c	FUNCTION_81	ELSE_2	IF_5
0x4006640	            0x39c2	                            cmp edx, eax	      4969	gui.c	FUNCTION_81	ELSE_2	IF_5
0x4006642	            0x7d0f	                           jge 0x4006653	      4969	gui.c	FUNCTION_81	ELSE_2	IF_5
0x4006644	      0xbf09000000	                              mov edi, 9	      4970	gui.c	FUNCTION_81	ELSE_2	IF_5
0x4006649	      0xe800000000	                          call 0x400664e	      4970	gui.c	FUNCTION_81	ELSE_2	IF_5
0x400664e	      0xe9af000000	                           jmp 0x4006702	      4970	gui.c	FUNCTION_81	ELSE_2	IF_5
0x4006653	    0x8b0500000000	            mov eax, dword [0x04006659] 	      4971	gui.c	FUNCTION_81	ELSE_3	IF_6
0x4006659	          0x83e008	                              and eax, 8	      4971	gui.c	FUNCTION_81	ELSE_3	IF_6
0x400665c	            0x85c0	                           test eax, eax	      4971	gui.c	FUNCTION_81	ELSE_3	IF_6
0x400665e	            0x7556	                           jne 0x40066b6	      4971	gui.c	FUNCTION_81	ELSE_3	IF_6
0x4006660	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4971	gui.c	FUNCTION_81	ELSE_3	IF_6
0x4006664	    0x8b80b0000000	            mov eax, dword [rax + 0xb0] 	      4971	gui.c	FUNCTION_81	ELSE_3	IF_6
0x400666a	            0x85c0	                           test eax, eax	      4971	gui.c	FUNCTION_81	ELSE_3	IF_6
0x400666c	            0x7e48	                           jle 0x40066b6	      4971	gui.c	FUNCTION_81	ELSE_3	IF_6
0x400666e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4971	gui.c	FUNCTION_81	ELSE_3	IF_6
0x4006672	    0x8b90ac000000	            mov edx, dword [rax + 0xac] 	      4971	gui.c	FUNCTION_81	ELSE_3	IF_6
0x4006678	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      4971	gui.c	FUNCTION_81	ELSE_3	IF_6
0x400667b	            0x39c2	                            cmp edx, eax	      4971	gui.c	FUNCTION_81	ELSE_3	IF_6
0x400667d	            0x7537	                           jne 0x40066b6	      4971	gui.c	FUNCTION_81	ELSE_3	IF_6
0x400667f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x4006683	    0x8b90a0000000	            mov edx, dword [rax + 0xa0] 	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x4006689	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x400668c	            0x39c2	                            cmp edx, eax	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x400668e	            0x7510	                           jne 0x40066a0	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x4006690	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x4006694	          0x4889c7	                            mov rdi, rax	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x4006697	      0xe800000000	                          call 0x400669c	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x400669c	            0x85c0	                           test eax, eax	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x400669e	            0x7516	                           jne 0x40066b6	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x40066a0	    0x8b0500000000	            mov eax, dword [0x040066a6] 	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x40066a6	            0x85c0	                           test eax, eax	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x40066a8	            0x750c	                           jne 0x40066b6	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x40066aa	      0xbf0c000000	                            mov edi, 0xc	      4973	gui.c	FUNCTION_81	ELSE_3	IF_6
0x40066af	      0xe800000000	                          call 0x40066b4	      4973	gui.c	FUNCTION_81	ELSE_3	IF_6
0x40066b4	            0xeb4c	                           jmp 0x4006702	      4973	gui.c	FUNCTION_81	ELSE_3	IF_6
0x40066b6	    0x8b0500000000	            mov eax, dword [0x040066bc] 	      4974	gui.c	FUNCTION_81	ELSE_4	IF_7
0x40066bc	          0x83e008	                              and eax, 8	      4974	gui.c	FUNCTION_81	ELSE_4	IF_7
0x40066bf	            0x85c0	                           test eax, eax	      4974	gui.c	FUNCTION_81	ELSE_4	IF_7
0x40066c1	            0x7535	                           jne 0x40066f8	      4974	gui.c	FUNCTION_81	ELSE_4	IF_7
0x40066c3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4974	gui.c	FUNCTION_81	ELSE_4	IF_7
0x40066c7	    0x8b80a4000000	            mov eax, dword [rax + 0xa4] 	      4974	gui.c	FUNCTION_81	ELSE_4	IF_7
0x40066cd	            0x85c0	                           test eax, eax	      4974	gui.c	FUNCTION_81	ELSE_4	IF_7
0x40066cf	            0x7e27	                           jle 0x40066f8	      4974	gui.c	FUNCTION_81	ELSE_4	IF_7
0x40066d1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4975	gui.c	FUNCTION_81	ELSE_4	IF_7
0x40066d5	    0x8b90a0000000	            mov edx, dword [rax + 0xa0] 	      4975	gui.c	FUNCTION_81	ELSE_4	IF_7
0x40066db	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      4975	gui.c	FUNCTION_81	ELSE_4	IF_7
0x40066de	            0x39c2	                            cmp edx, eax	      4975	gui.c	FUNCTION_81	ELSE_4	IF_7
0x40066e0	            0x7516	                           jne 0x40066f8	      4975	gui.c	FUNCTION_81	ELSE_4	IF_7
0x40066e2	    0x8b0500000000	            mov eax, dword [0x040066e8] 	      4975	gui.c	FUNCTION_81	ELSE_4	IF_7
0x40066e8	            0x85c0	                           test eax, eax	      4975	gui.c	FUNCTION_81	ELSE_4	IF_7
0x40066ea	            0x750c	                           jne 0x40066f8	      4975	gui.c	FUNCTION_81	ELSE_4	IF_7
0x40066ec	      0xbf0a000000	                            mov edi, 0xa	      4976	gui.c	FUNCTION_81	ELSE_4	IF_7
0x40066f1	      0xe800000000	                          call 0x40066f6	      4976	gui.c	FUNCTION_81	ELSE_4	IF_7
0x40066f6	            0xeb0a	                           jmp 0x4006702	      4976	gui.c	FUNCTION_81	ELSE_4	IF_7
0x40066f8	      0xbffeffffff	                     mov edi, 0xfffffffe	      4978	gui.c	FUNCTION_81	CALL_11
0x40066fd	      0xe800000000	                          call 0x4006702	      4978	gui.c	FUNCTION_81	CALL_11
0x4006702	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4980	gui.c	FUNCTION_81
0x4006706	        0x488b4df8	                mov rcx, qword [rbp - 8]	      4981	gui.c	FUNCTION_81
0x400670a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      4981	gui.c	FUNCTION_81
0x4006713	            0x7405	                            je 0x400671a	      4981	gui.c	FUNCTION_81
0x4006715	      0xe800000000	                          call 0x400671a	      4981	gui.c	FUNCTION_81
0x400671a	              0xc9	                                   leave	      4981	gui.c	FUNCTION_81
0x400671b	              0xc3	                                     ret	      4981	gui.c	FUNCTION_81
gui_do_fork	IF,12:functions,0:ELSE,3:CALL,24:SWITCH,0:WHILE,0:FOR,0:DO,0	103
0x4000213	              0x55	                                push rbp	       211	gui.c	FUNCTION_3
0x4000214	          0x4889e5	                            mov rbp, rsp	       211	gui.c	FUNCTION_3
0x4000217	        0x4883ec20	                           sub rsp, 0x20	       211	gui.c	FUNCTION_3
0x400021b	    0x64488b042528	                mov rax, qword fs:[0x28]	       211	gui.c	FUNCTION_3
0x4000224	        0x488945f8	                mov qword [rbp - 8], rax	       211	gui.c	FUNCTION_3
0x4000228	            0x31c0	                            xor eax, eax	       211	gui.c	FUNCTION_3
0x400022a	    0xc745e8ffffff	     mov dword [rbp - 0x18], 0xffffffff 	       216	gui.c	FUNCTION_3
0x4000231	        0x488d45f0	                   lea rax, [rbp - 0x10]	       221	gui.c	FUNCTION_3	CALL_1
0x4000235	          0x4889c7	                            mov rdi, rax	       221	gui.c	FUNCTION_3	CALL_1
0x4000238	      0xe800000000	                          call 0x400023d	       221	gui.c	FUNCTION_3	CALL_1
0x400023d	          0xc1e81f	                           shr eax, 0x1f	       221	gui.c	FUNCTION_3	CALL_1
0x4000240	           0xfb6c0	                           movzx eax, al	       221	gui.c	FUNCTION_3	CALL_1
0x4000243	          0x8945e4	             mov dword [rbp - 0x1c], eax	       221	gui.c	FUNCTION_3	CALL_1
0x4000246	      0xe800000000	                          call 0x400024b	       222	gui.c	FUNCTION_3	CALL_2
0x400024b	          0x8945e8	             mov dword [rbp - 0x18], eax	       222	gui.c	FUNCTION_3	CALL_2
0x400024e	        0x837de800	               cmp dword [rbp - 0x18], 0	       223	gui.c	FUNCTION_3	IF_1
0x4000252	            0x7917	                           jns 0x400026b	       223	gui.c	FUNCTION_3	IF_1
0x4000254	      0xbf00000000	                              mov edi, 0	       225	gui.c	FUNCTION_3	IF_1	CALL_4
0x4000259	      0xe800000000	                          call 0x400025e	       225	gui.c	FUNCTION_3	IF_1	CALL_4
0x400025e	          0x4889c7	                            mov rdi, rax	       225	gui.c	FUNCTION_3	IF_1	CALL_4
0x4000261	      0xe800000000	                          call 0x4000266	       225	gui.c	FUNCTION_3	IF_1	CALL_4
0x4000266	      0xe920010000	                           jmp 0x400038b	       226	gui.c	FUNCTION_3	IF_1
0x400026b	        0x837de800	               cmp dword [rbp - 0x18], 0	       228	gui.c	FUNCTION_3	ELSE_1	IF_2
0x400026f	     0xf8e90000000	                           jle 0x4000305	       228	gui.c	FUNCTION_3	ELSE_1	IF_2
0x4000275	        0x837de400	               cmp dword [rbp - 0x1c], 0	       233	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3
0x4000279	            0x7557	                           jne 0x40002d2	       233	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3
0x400027b	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       237	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	CALL_5
0x400027e	            0x89c7	                            mov edi, eax	       237	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	CALL_5
0x4000280	      0xe800000000	                          call 0x4000285	       237	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	CALL_5
0x4000285	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       238	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	CALL_6
0x4000288	            0x89c7	                            mov edi, eax	       238	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	CALL_6
0x400028a	      0xe812010000	            call sym.gui_read_child_pipe	       238	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	CALL_6
0x400028f	          0x8945ec	             mov dword [rbp - 0x14], eax	       238	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	CALL_6
0x4000292	        0x837dec02	               cmp dword [rbp - 0x14], 2	       239	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	IF_4
0x4000296	            0x752d	                           jne 0x40002c5	       239	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	IF_4
0x4000298	        0x488d4de0	                   lea rcx, [rbp - 0x20]	       247	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	IF_4	CALL_8
0x400029c	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       247	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	IF_4	CALL_8
0x400029f	      0xba00000000	                              mov edx, 0	       247	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	IF_4	CALL_8
0x40002a4	          0x4889ce	                            mov rsi, rcx	       247	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	IF_4	CALL_8
0x40002a7	            0x89c7	                            mov edi, eax	       247	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	IF_4	CALL_8
0x40002a9	      0xe800000000	                          call 0x40002ae	       247	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	IF_4	CALL_8
0x40002ae	      0xbf00000000	                              mov edi, 0	       249	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	IF_4	CALL_10
0x40002b3	      0xe800000000	                          call 0x40002b8	       249	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	IF_4	CALL_10
0x40002b8	          0x4889c7	                            mov rdi, rax	       249	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	IF_4	CALL_10
0x40002bb	      0xe800000000	                          call 0x40002c0	       249	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	IF_4	CALL_10
0x40002c0	      0xe9c6000000	                           jmp 0x400038b	       250	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	IF_4
0x40002c5	        0x837dec00	               cmp dword [rbp - 0x14], 0	       252	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	ELSE_2	IF_5
0x40002c9	            0x7507	                           jne 0x40002d2	       252	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	ELSE_2	IF_5
0x40002cb	    0xc745e4010000	               mov dword [rbp - 0x1c], 1	       254	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	ELSE_2	IF_5
0x40002d2	        0x837de400	               cmp dword [rbp - 0x1c], 0	       259	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_6
0x40002d6	            0x740f	                            je 0x40002e7	       259	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_6
0x40002d8	      0xbe01000000	                              mov esi, 1	       260	gui.c	FUNCTION_3	ELSE_1	IF_2	CALL_11
0x40002dd	      0xbf2c010000	                          mov edi, 0x12c	       260	gui.c	FUNCTION_3	ELSE_1	IF_2	CALL_11
0x40002e2	      0xe800000000	                          call 0x40002e7	       260	gui.c	FUNCTION_3	ELSE_1	IF_2	CALL_11
0x40002e7	    0x8b0500000000	            mov eax, dword [0x040002ed] 	       264	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_7
0x40002ed	            0x85c0	                           test eax, eax	       264	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_7
0x40002ef	            0x740a	                            je 0x40002fb	       264	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_7
0x40002f1	      0xbf00000000	                              mov edi, 0	       265	gui.c	FUNCTION_3	ELSE_1	IF_2	CALL_12
0x40002f6	      0xe800000000	                          call 0x40002fb	       265	gui.c	FUNCTION_3	ELSE_1	IF_2	CALL_12
0x40002fb	      0xbf00000000	                              mov edi, 0	       271	gui.c	FUNCTION_3	ELSE_1	IF_2	CALL_13
0x4000300	      0xe800000000	                          call 0x4000305	       271	gui.c	FUNCTION_3	ELSE_1	IF_2	CALL_13
0x4000305	      0xe800000000	                          call 0x400030a	       277	gui.c	FUNCTION_3	IF_8	CALL_14
0x400030a	          0x83f801	                              cmp eax, 1	       277	gui.c	FUNCTION_3	IF_8	CALL_14
0x400030d	            0x740a	                            je 0x4000319	       277	gui.c	FUNCTION_3	IF_8	CALL_14
0x400030f	      0xbf01000000	                              mov edi, 1	       278	gui.c	FUNCTION_3	CALL_15
0x4000314	      0xe800000000	                          call 0x4000319	       278	gui.c	FUNCTION_3	CALL_15
0x4000319	      0xe800000000	                          call 0x400031e	       287	gui.c	FUNCTION_3	CALL_16
0x400031e	        0x837de400	               cmp dword [rbp - 0x1c], 0	       292	gui.c	FUNCTION_3	IF_9
0x4000322	            0x750a	                           jne 0x400032e	       292	gui.c	FUNCTION_3	IF_9
0x4000324	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       293	gui.c	FUNCTION_3	CALL_18
0x4000327	            0x89c7	                            mov edi, eax	       293	gui.c	FUNCTION_3	CALL_18
0x4000329	      0xe800000000	                          call 0x400032e	       293	gui.c	FUNCTION_3	CALL_18
0x400032e	      0xe82ffeffff	              call sym.gui_attempt_start	       301	gui.c	FUNCTION_3	CALL_20
0x4000333	        0x837de400	               cmp dword [rbp - 0x1c], 0	       304	gui.c	FUNCTION_3	IF_10
0x4000337	            0x753e	                           jne 0x4000377	       304	gui.c	FUNCTION_3	IF_10
0x4000339	    0x8b0500000000	            mov eax, dword [0x0400033f] 	       306	gui.c	FUNCTION_3	IF_10	IF_11
0x400033f	            0x85c0	                           test eax, eax	       306	gui.c	FUNCTION_3	IF_10	IF_11
0x4000341	            0x7416	                            je 0x4000359	       306	gui.c	FUNCTION_3	IF_10	IF_11
0x4000343	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       307	gui.c	FUNCTION_3	IF_10	CALL_21
0x4000346	      0xba03000000	                              mov edx, 3	       307	gui.c	FUNCTION_3	IF_10	CALL_21
0x400034b	      0xbe00000000	                              mov esi, 0	       307	gui.c	FUNCTION_3	IF_10	CALL_21
0x4000350	            0x89c7	                            mov edi, eax	       307	gui.c	FUNCTION_3	IF_10	CALL_21
0x4000352	      0xe800000000	                          call 0x4000357	       307	gui.c	FUNCTION_3	IF_10	CALL_21
0x4000357	            0xeb14	                           jmp 0x400036d	       307	gui.c	FUNCTION_3	IF_10	CALL_21
0x4000359	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       309	gui.c	FUNCTION_3	IF_10	CALL_22
0x400035c	      0xba05000000	                              mov edx, 5	       309	gui.c	FUNCTION_3	IF_10	CALL_22
0x4000361	      0xbe00000000	                              mov esi, 0	       309	gui.c	FUNCTION_3	IF_10	CALL_22
0x4000366	            0x89c7	                            mov edi, eax	       309	gui.c	FUNCTION_3	IF_10	CALL_22
0x4000368	      0xe800000000	                          call 0x400036d	       309	gui.c	FUNCTION_3	IF_10	CALL_22
0x400036d	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       310	gui.c	FUNCTION_3	IF_10	CALL_23
0x4000370	            0x89c7	                            mov edi, eax	       310	gui.c	FUNCTION_3	IF_10	CALL_23
0x4000372	      0xe800000000	                          call 0x4000377	       310	gui.c	FUNCTION_3	IF_10	CALL_23
0x4000377	    0x8b0500000000	            mov eax, dword [0x0400037d] 	       314	gui.c	FUNCTION_3	IF_12
0x400037d	            0x85c0	                           test eax, eax	       314	gui.c	FUNCTION_3	IF_12
0x400037f	            0x750a	                           jne 0x400038b	       314	gui.c	FUNCTION_3	IF_12
0x4000381	      0xbf01000000	                              mov edi, 1	       315	gui.c	FUNCTION_3	CALL_24
0x4000386	      0xe800000000	                          call 0x400038b	       315	gui.c	FUNCTION_3	CALL_24
0x400038b	        0x488b45f8	                mov rax, qword [rbp - 8]	       316	gui.c	FUNCTION_3
0x400038f	    0x644833042528	                xor rax, qword fs:[0x28]	       316	gui.c	FUNCTION_3
0x4000398	            0x7405	                            je 0x400039f	       316	gui.c	FUNCTION_3
0x400039a	      0xe800000000	                          call 0x400039f	       316	gui.c	FUNCTION_3
0x400039f	              0xc9	                                   leave	       316	gui.c	FUNCTION_3
0x40003a0	              0xc3	                                     ret	       316	gui.c	FUNCTION_3
gui_update_scrollbars	IF,25:functions,0:ELSE,1:CALL,13:SWITCH,0:WHILE,0:FOR,1:DO,0	320
0x4005171	              0x55	                                push rbp	      4179	gui.c	FUNCTION_65
0x4005172	          0x4889e5	                            mov rbp, rsp	      4179	gui.c	FUNCTION_65
0x4005175	        0x4883ec50	                           sub rsp, 0x50	      4179	gui.c	FUNCTION_65
0x4005179	          0x897dbc	             mov dword [rbp - 0x44], edi	      4179	gui.c	FUNCTION_65
0x400517c	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      4188	gui.c	FUNCTION_65	CALL_1
0x400517f	            0x89c7	                            mov edi, eax	      4188	gui.c	FUNCTION_65	CALL_1
0x4005181	      0xe8c30a0000	     call sym.gui_update_horiz_scrollbar	      4188	gui.c	FUNCTION_65	CALL_1
0x4005186	    0x8b0500000000	            mov eax, dword [0x0400518c] 	      4193	gui.c	FUNCTION_65	IF_1
0x400518c	            0x85c0	                           test eax, eax	      4193	gui.c	FUNCTION_65	IF_1
0x400518e	            0x750e	                           jne 0x400519e	      4193	gui.c	FUNCTION_65	IF_1
0x4005190	    0x8b0500000000	            mov eax, dword [0x04005196] 	      4193	gui.c	FUNCTION_65	IF_1
0x4005196	            0x85c0	                           test eax, eax	      4193	gui.c	FUNCTION_65	IF_1
0x4005198	     0xf84da040000	                            je 0x4005678	      4193	gui.c	FUNCTION_65	IF_1
0x400519e	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      4202	gui.c	FUNCTION_65	IF_2
0x40051a2	     0xf85a8000000	                           jne 0x4005250	      4202	gui.c	FUNCTION_65	IF_2
0x40051a8	    0x8b0500000000	            mov eax, dword [0x040051ae] 	      4202	gui.c	FUNCTION_65	IF_2
0x40051ae	            0x85c0	                           test eax, eax	      4202	gui.c	FUNCTION_65	IF_2
0x40051b0	            0x740f	                            je 0x40051c1	      4202	gui.c	FUNCTION_65	IF_2
0x40051b2	    0x8b0500000000	            mov eax, dword [0x040051b8] 	      4202	gui.c	FUNCTION_65	IF_2
0x40051b8	          0x83f801	                              cmp eax, 1	      4202	gui.c	FUNCTION_65	IF_2
0x40051bb	     0xf858f000000	                           jne 0x4005250	      4202	gui.c	FUNCTION_65	IF_2
0x40051c1	    0x8b0500000000	            mov eax, dword [0x040051c7] 	      4203	gui.c	FUNCTION_65	IF_2
0x40051c7	            0x85c0	                           test eax, eax	      4203	gui.c	FUNCTION_65	IF_2
0x40051c9	     0xf8481000000	                            je 0x4005250	      4203	gui.c	FUNCTION_65	IF_2
0x40051cf	    0x8b0500000000	            mov eax, dword [0x040051d5] 	      4204	gui.c	FUNCTION_65	IF_2
0x40051d5	            0x85c0	                           test eax, eax	      4204	gui.c	FUNCTION_65	IF_2
0x40051d7	            0x7477	                            je 0x4005250	      4204	gui.c	FUNCTION_65	IF_2
0x40051d9	    0x8b0500000000	            mov eax, dword [0x040051df] 	      4210	gui.c	FUNCTION_65	IF_2
0x40051df	      0xba01000000	                              mov edx, 1	      4210	gui.c	FUNCTION_65	IF_2
0x40051e4	            0x29c2	                            sub edx, eax	      4210	gui.c	FUNCTION_65	IF_2
0x40051e6	            0x89d0	                            mov eax, edx	      4210	gui.c	FUNCTION_65	IF_2
0x40051e8	          0x8945d4	             mov dword [rbp - 0x2c], eax	      4210	gui.c	FUNCTION_65	IF_2
0x40051eb	    0x488b05000000	            mov rax, qword [0x040051f2] 	      4211	gui.c	FUNCTION_65	IF_2	IF_3
0x40051f2	          0x4885c0	                           test rax, rax	      4211	gui.c	FUNCTION_65	IF_2	IF_3
0x40051f5	            0x7459	                            je 0x4005250	      4211	gui.c	FUNCTION_65	IF_2	IF_3
0x40051f7	    0x488b05000000	            mov rax, qword [0x040051fe] 	      4216	gui.c	FUNCTION_65	IF_2	IF_3
0x40051fe	    0x488b88b81800	          mov rcx, qword [rax + 0x18b8] 	      4212	gui.c	FUNCTION_65	IF_2	IF_3	CALL_2
0x4005205	    0x488b05000000	            mov rax, qword [0x0400520c] 	      4215	gui.c	FUNCTION_65	IF_2	IF_3
0x400520c	    0x488bb8b01800	          mov rdi, qword [rax + 0x18b0] 	      4212	gui.c	FUNCTION_65	IF_2	IF_3	CALL_2
0x4005213	    0x488b05000000	            mov rax, qword [0x0400521a] 	      4214	gui.c	FUNCTION_65	IF_2	IF_3
0x400521a	    0x488bb0a81800	          mov rsi, qword [rax + 0x18a8] 	      4212	gui.c	FUNCTION_65	IF_2	IF_3	CALL_2
0x4005221	    0x4c8b05000000	              mov r8, qword [0x04005228]	      4213	gui.c	FUNCTION_65	IF_2	IF_3
0x4005228	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      4212	gui.c	FUNCTION_65	IF_2	IF_3	CALL_2
0x400522b	          0x4863d0	                         movsxd rdx, eax	      4212	gui.c	FUNCTION_65	IF_2	IF_3	CALL_2
0x400522e	          0x4889d0	                            mov rax, rdx	      4212	gui.c	FUNCTION_65	IF_2	IF_3	CALL_2
0x4005231	        0x48c1e002	                              shl rax, 2	      4212	gui.c	FUNCTION_65	IF_2	IF_3	CALL_2
0x4005235	          0x4801d0	                            add rax, rdx	      4212	gui.c	FUNCTION_65	IF_2	IF_3	CALL_2
0x4005238	        0x48c1e004	                              shl rax, 4	      4212	gui.c	FUNCTION_65	IF_2	IF_3	CALL_2
0x400523c	    0x480590180000	                         add rax, 0x1890	      4212	gui.c	FUNCTION_65	IF_2	IF_3	CALL_2
0x4005242	          0x4c01c0	                             add rax, r8	      4212	gui.c	FUNCTION_65	IF_2	IF_3	CALL_2
0x4005245	          0x4889fa	                            mov rdx, rdi	      4212	gui.c	FUNCTION_65	IF_2	IF_3	CALL_2
0x4005248	          0x4889c7	                            mov rdi, rax	      4212	gui.c	FUNCTION_65	IF_2	IF_3	CALL_2
0x400524b	      0xe800000000	                          call 0x4005250	      4212	gui.c	FUNCTION_65	IF_2	IF_3	CALL_2
0x4005250	    0x8b0500000000	            mov eax, dword [0x04005256] 	      4220	gui.c	FUNCTION_65
0x4005256	          0x83c001	                              add eax, 1	      4220	gui.c	FUNCTION_65
0x4005259	    0x890500000000	            mov dword [0x0400525f], eax 	      4220	gui.c	FUNCTION_65
0x400525f	    0x488b05000000	            mov rax, qword [0x04005266] 	      4222	gui.c	FUNCTION_65	FOR_1	CALL_3
0x4005266	        0x488945d8	             mov qword [rbp - 0x28], rax	      4222	gui.c	FUNCTION_65	FOR_1	CALL_3
0x400526a	      0xe9df030000	                           jmp 0x400564e	      4222	gui.c	FUNCTION_65	FOR_1	CALL_3
0x400526f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4224	gui.c	FUNCTION_65	FOR_1	IF_4
0x4005273	        0x488b4008	                mov rax, qword [rax + 8]	      4224	gui.c	FUNCTION_65	FOR_1	IF_4
0x4005277	          0x4885c0	                           test rax, rax	      4224	gui.c	FUNCTION_65	FOR_1	IF_4
0x400527a	     0xf84bb030000	                            je 0x400563b	      4224	gui.c	FUNCTION_65	FOR_1	IF_4
0x4005280	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      4227	gui.c	FUNCTION_65	FOR_1	IF_5
0x4005284	            0x7526	                           jne 0x40052ac	      4227	gui.c	FUNCTION_65	FOR_1	IF_5
0x4005286	    0x8b0500000000	            mov eax, dword [0x0400528c] 	      4227	gui.c	FUNCTION_65	FOR_1	IF_5
0x400528c	            0x85c0	                           test eax, eax	      4227	gui.c	FUNCTION_65	FOR_1	IF_5
0x400528e	            0x740b	                            je 0x400529b	      4227	gui.c	FUNCTION_65	FOR_1	IF_5
0x4005290	    0x8b0500000000	            mov eax, dword [0x04005296] 	      4228	gui.c	FUNCTION_65	FOR_1	IF_5
0x4005296	          0x83f801	                              cmp eax, 1	      4228	gui.c	FUNCTION_65	FOR_1	IF_5
0x4005299	            0x7511	                           jne 0x40052ac	      4228	gui.c	FUNCTION_65	FOR_1	IF_5
0x400529b	    0x488b05000000	            mov rax, qword [0x040052a2] 	      4229	gui.c	FUNCTION_65	FOR_1	IF_5
0x40052a2	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      4229	gui.c	FUNCTION_65	FOR_1	IF_5
0x40052a6	     0xf8492030000	                            je 0x400563e	      4229	gui.c	FUNCTION_65	FOR_1	IF_5
0x40052ac	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4235	gui.c	FUNCTION_65	FOR_1
0x40052b0	        0x488b4008	                mov rax, qword [rax + 8]	      4235	gui.c	FUNCTION_65	FOR_1
0x40052b4	          0x488b10	                    mov rdx, qword [rax]	      4235	gui.c	FUNCTION_65	FOR_1
0x40052b7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4235	gui.c	FUNCTION_65	FOR_1
0x40052bb	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      4235	gui.c	FUNCTION_65	FOR_1
0x40052c1	            0x4898	                                    cdqe	      4235	gui.c	FUNCTION_65	FOR_1
0x40052c3	          0x4801d0	                            add rax, rdx	      4235	gui.c	FUNCTION_65	FOR_1
0x40052c6	        0x4883e802	                              sub rax, 2	      4235	gui.c	FUNCTION_65	FOR_1
0x40052ca	        0x488945f0	             mov qword [rbp - 0x10], rax	      4235	gui.c	FUNCTION_65	FOR_1
0x40052ce	      0x48837df000	               cmp qword [rbp - 0x10], 0	      4237	gui.c	FUNCTION_65	FOR_1	IF_6
0x40052d3	            0x7908	                           jns 0x40052dd	      4237	gui.c	FUNCTION_65	FOR_1	IF_6
0x40052d5	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      4238	gui.c	FUNCTION_65	FOR_1	IF_6
0x40052dd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4239	gui.c	FUNCTION_65	FOR_1
0x40052e1	        0x488b4078	            mov rax, qword [rax + 0x78] 	      4239	gui.c	FUNCTION_65	FOR_1
0x40052e5	        0x4883e801	                              sub rax, 1	      4239	gui.c	FUNCTION_65	FOR_1
0x40052e9	        0x488945e0	             mov qword [rbp - 0x20], rax	      4239	gui.c	FUNCTION_65	FOR_1
0x40052ed	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4240	gui.c	FUNCTION_65	FOR_1
0x40052f1	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      4240	gui.c	FUNCTION_65	FOR_1
0x40052f7	            0x4898	                                    cdqe	      4240	gui.c	FUNCTION_65	FOR_1
0x40052f9	        0x488945e8	             mov qword [rbp - 0x18], rax	      4240	gui.c	FUNCTION_65	FOR_1
0x40052fd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4245	gui.c	FUNCTION_65	FOR_1	IF_8
0x4005301	        0x4883c001	                              add rax, 1	      4245	gui.c	FUNCTION_65	FOR_1	IF_8
0x4005305	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      4245	gui.c	FUNCTION_65	FOR_1	IF_8
0x4005309	            0x7d0c	                           jge 0x4005317	      4245	gui.c	FUNCTION_65	FOR_1	IF_8
0x400530b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4246	gui.c	FUNCTION_65	FOR_1	IF_8
0x400530f	        0x4883c001	                              add rax, 1	      4246	gui.c	FUNCTION_65	FOR_1	IF_8
0x4005313	        0x488945e8	             mov qword [rbp - 0x18], rax	      4246	gui.c	FUNCTION_65	FOR_1	IF_8
0x4005317	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4247	gui.c	FUNCTION_65	FOR_1	IF_9
0x400531b	        0x482b45e8	             sub rax, qword [rbp - 0x18]	      4247	gui.c	FUNCTION_65	FOR_1	IF_9
0x400531f	        0x4883c001	                              add rax, 1	      4247	gui.c	FUNCTION_65	FOR_1	IF_9
0x4005323	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      4247	gui.c	FUNCTION_65	FOR_1	IF_9
0x4005327	            0x7d10	                           jge 0x4005339	      4247	gui.c	FUNCTION_65	FOR_1	IF_9
0x4005329	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4248	gui.c	FUNCTION_65	FOR_1	IF_9
0x400532d	        0x482b45e8	             sub rax, qword [rbp - 0x18]	      4248	gui.c	FUNCTION_65	FOR_1	IF_9
0x4005331	        0x4883c001	                              add rax, 1	      4248	gui.c	FUNCTION_65	FOR_1	IF_9
0x4005335	        0x488945e0	             mov qword [rbp - 0x20], rax	      4248	gui.c	FUNCTION_65	FOR_1	IF_9
0x4005339	      0x48837de000	               cmp qword [rbp - 0x20], 0	      4250	gui.c	FUNCTION_65	FOR_1	IF_10
0x400533e	            0x7908	                           jns 0x4005348	      4250	gui.c	FUNCTION_65	FOR_1	IF_10
0x4005340	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      4251	gui.c	FUNCTION_65	FOR_1	IF_10
0x4005348	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4258	gui.c	FUNCTION_65	FOR_1
0x400534c	    0x480590180000	                         add rax, 0x1890	      4258	gui.c	FUNCTION_65	FOR_1
0x4005352	        0x488945f8	                mov qword [rbp - 8], rax	      4258	gui.c	FUNCTION_65	FOR_1
0x4005356	      0x48837de800	               cmp qword [rbp - 0x18], 0	      4264	gui.c	FUNCTION_65	FOR_1	IF_11
0x400535b	            0x7e15	                           jle 0x4005372	      4264	gui.c	FUNCTION_65	FOR_1	IF_11
0x400535d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4264	gui.c	FUNCTION_65	FOR_1	IF_11
0x4005361	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	      4264	gui.c	FUNCTION_65	FOR_1	IF_11
0x4005368	        0x4883e802	                              sub rax, 2	      4264	gui.c	FUNCTION_65	FOR_1	IF_11
0x400536c	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      4264	gui.c	FUNCTION_65	FOR_1	IF_11
0x4005370	            0x7e54	                           jle 0x40053c6	      4264	gui.c	FUNCTION_65	FOR_1	IF_11
0x4005372	        0x488b45f8	                mov rax, qword [rbp - 8]	      4270	gui.c	FUNCTION_65	FOR_1	IF_11
0x4005376	    0xc74034000000	               mov dword [rax + 0x34], 0	      4270	gui.c	FUNCTION_65	FOR_1	IF_11
0x400537d	    0x8b0500000000	            mov eax, dword [0x04005383] 	      4271	gui.c	FUNCTION_65	FOR_1	IF_11	IF_12
0x4005383	            0x85c0	                           test eax, eax	      4271	gui.c	FUNCTION_65	FOR_1	IF_11	IF_12
0x4005385	            0x7416	                            je 0x400539d	      4271	gui.c	FUNCTION_65	FOR_1	IF_11	IF_12
0x4005387	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4272	gui.c	FUNCTION_65	FOR_1	IF_11	CALL_4
0x400538b	      0xba00000000	                              mov edx, 0	      4272	gui.c	FUNCTION_65	FOR_1	IF_11	CALL_4
0x4005390	      0xbe00000000	                              mov esi, 0	      4272	gui.c	FUNCTION_65	FOR_1	IF_11	CALL_4
0x4005395	          0x4889c7	                            mov rdi, rax	      4272	gui.c	FUNCTION_65	FOR_1	IF_11	CALL_4
0x4005398	      0xe8de020000	               call sym.gui_do_scrollbar	      4272	gui.c	FUNCTION_65	FOR_1	IF_11	CALL_4
0x400539d	    0x8b0500000000	            mov eax, dword [0x040053a3] 	      4273	gui.c	FUNCTION_65	FOR_1	IF_11	IF_13
0x40053a3	            0x85c0	                           test eax, eax	      4273	gui.c	FUNCTION_65	FOR_1	IF_11	IF_13
0x40053a5	     0xf8496020000	                            je 0x4005641	      4273	gui.c	FUNCTION_65	FOR_1	IF_11	IF_13
0x40053ab	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4274	gui.c	FUNCTION_65	FOR_1	IF_11	CALL_5
0x40053af	      0xba00000000	                              mov edx, 0	      4274	gui.c	FUNCTION_65	FOR_1	IF_11	CALL_5
0x40053b4	      0xbe01000000	                              mov esi, 1	      4274	gui.c	FUNCTION_65	FOR_1	IF_11	CALL_5
0x40053b9	          0x4889c7	                            mov rdi, rax	      4274	gui.c	FUNCTION_65	FOR_1	IF_11	CALL_5
0x40053bc	      0xe8ba020000	               call sym.gui_do_scrollbar	      4274	gui.c	FUNCTION_65	FOR_1	IF_11	CALL_5
0x40053c1	      0xe97b020000	                           jmp 0x4005641	      4275	gui.c	FUNCTION_65	FOR_1	IF_11
0x40053c6	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      4277	gui.c	FUNCTION_65	FOR_1	IF_14
0x40053ca	            0x756b	                           jne 0x4005437	      4277	gui.c	FUNCTION_65	FOR_1	IF_14
0x40053cc	        0x488b45f8	                mov rax, qword [rbp - 8]	      4277	gui.c	FUNCTION_65	FOR_1	IF_14
0x40053d0	          0x8b5034	            mov edx, dword [rax + 0x34] 	      4277	gui.c	FUNCTION_65	FOR_1	IF_14
0x40053d3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4277	gui.c	FUNCTION_65	FOR_1	IF_14
0x40053d7	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      4277	gui.c	FUNCTION_65	FOR_1	IF_14
0x40053dd	            0x39c2	                            cmp edx, eax	      4277	gui.c	FUNCTION_65	FOR_1	IF_14
0x40053df	            0x7556	                           jne 0x4005437	      4277	gui.c	FUNCTION_65	FOR_1	IF_14
0x40053e1	        0x488b45f8	                mov rax, qword [rbp - 8]	      4278	gui.c	FUNCTION_65	FOR_1	IF_14
0x40053e5	          0x8b5030	            mov edx, dword [rax + 0x30] 	      4278	gui.c	FUNCTION_65	FOR_1	IF_14
0x40053e8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4278	gui.c	FUNCTION_65	FOR_1	IF_14
0x40053ec	    0x8b809c000000	            mov eax, dword [rax + 0x9c] 	      4278	gui.c	FUNCTION_65	FOR_1	IF_14
0x40053f2	            0x39c2	                            cmp edx, eax	      4278	gui.c	FUNCTION_65	FOR_1	IF_14
0x40053f4	            0x7541	                           jne 0x4005437	      4278	gui.c	FUNCTION_65	FOR_1	IF_14
0x40053f6	        0x488b45f8	                mov rax, qword [rbp - 8]	      4279	gui.c	FUNCTION_65	FOR_1	IF_14
0x40053fa	          0x8b503c	            mov edx, dword [rax + 0x3c] 	      4279	gui.c	FUNCTION_65	FOR_1	IF_14
0x40053fd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4279	gui.c	FUNCTION_65	FOR_1	IF_14
0x4005401	    0x8b80a4000000	            mov eax, dword [rax + 0xa4] 	      4279	gui.c	FUNCTION_65	FOR_1	IF_14
0x4005407	            0x39c2	                            cmp edx, eax	      4279	gui.c	FUNCTION_65	FOR_1	IF_14
0x4005409	            0x752c	                           jne 0x4005437	      4279	gui.c	FUNCTION_65	FOR_1	IF_14
0x400540b	        0x488b45f8	                mov rax, qword [rbp - 8]	      4280	gui.c	FUNCTION_65	FOR_1	IF_14
0x400540f	          0x8b5038	            mov edx, dword [rax + 0x38] 	      4280	gui.c	FUNCTION_65	FOR_1	IF_14
0x4005412	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4280	gui.c	FUNCTION_65	FOR_1	IF_14
0x4005416	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      4280	gui.c	FUNCTION_65	FOR_1	IF_14
0x400541c	            0x39c2	                            cmp edx, eax	      4280	gui.c	FUNCTION_65	FOR_1	IF_14
0x400541e	            0x7517	                           jne 0x4005437	      4280	gui.c	FUNCTION_65	FOR_1	IF_14
0x4005420	    0x488b15000000	            mov rdx, qword [0x04005427] 	      4281	gui.c	FUNCTION_65	FOR_1	IF_14
0x4005427	    0x488b05000000	            mov rax, qword [0x0400542e] 	      4281	gui.c	FUNCTION_65	FOR_1	IF_14
0x400542e	          0x4839c2	                            cmp rdx, rax	      4281	gui.c	FUNCTION_65	FOR_1	IF_14
0x4005431	     0xf8429010000	                            je 0x4005560	      4281	gui.c	FUNCTION_65	FOR_1	IF_14
0x4005437	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4285	gui.c	FUNCTION_65	FOR_1	IF_14
0x400543b	    0x8b90a0000000	            mov edx, dword [rax + 0xa0] 	      4285	gui.c	FUNCTION_65	FOR_1	IF_14
0x4005441	        0x488b45f8	                mov rax, qword [rbp - 8]	      4285	gui.c	FUNCTION_65	FOR_1	IF_14
0x4005445	          0x895034	             mov dword [rax + 0x34], edx	      4285	gui.c	FUNCTION_65	FOR_1	IF_14
0x4005448	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4286	gui.c	FUNCTION_65	FOR_1	IF_14
0x400544c	    0x8b909c000000	            mov edx, dword [rax + 0x9c] 	      4286	gui.c	FUNCTION_65	FOR_1	IF_14
0x4005452	        0x488b45f8	                mov rax, qword [rbp - 8]	      4286	gui.c	FUNCTION_65	FOR_1	IF_14
0x4005456	          0x895030	             mov dword [rax + 0x30], edx	      4286	gui.c	FUNCTION_65	FOR_1	IF_14
0x4005459	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4287	gui.c	FUNCTION_65	FOR_1	IF_14
0x400545d	    0x8b90a4000000	            mov edx, dword [rax + 0xa4] 	      4287	gui.c	FUNCTION_65	FOR_1	IF_14
0x4005463	        0x488b45f8	                mov rax, qword [rbp - 8]	      4287	gui.c	FUNCTION_65	FOR_1	IF_14
0x4005467	          0x89503c	             mov dword [rax + 0x3c], edx	      4287	gui.c	FUNCTION_65	FOR_1	IF_14
0x400546a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4288	gui.c	FUNCTION_65	FOR_1	IF_14
0x400546e	    0x8b90ac000000	            mov edx, dword [rax + 0xac] 	      4288	gui.c	FUNCTION_65	FOR_1	IF_14
0x4005474	        0x488b45f8	                mov rax, qword [rbp - 8]	      4288	gui.c	FUNCTION_65	FOR_1	IF_14
0x4005478	          0x895038	             mov dword [rax + 0x38], edx	      4288	gui.c	FUNCTION_65	FOR_1	IF_14
0x400547b	        0x488b45f8	                mov rax, qword [rbp - 8]	      4291	gui.c	FUNCTION_65	FOR_1	IF_14
0x400547f	          0x8b5034	            mov edx, dword [rax + 0x34] 	      4291	gui.c	FUNCTION_65	FOR_1	IF_14
0x4005482	        0x488b45f8	                mov rax, qword [rbp - 8]	      4291	gui.c	FUNCTION_65	FOR_1	IF_14
0x4005486	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      4291	gui.c	FUNCTION_65	FOR_1	IF_14
0x4005489	             0x1c2	                            add edx, eax	      4291	gui.c	FUNCTION_65	FOR_1	IF_14
0x400548b	    0x8b0500000000	            mov eax, dword [0x04005491] 	      4291	gui.c	FUNCTION_65	FOR_1	IF_14
0x4005491	           0xfafc2	                           imul eax, edx	      4291	gui.c	FUNCTION_65	FOR_1	IF_14
0x4005494	          0x8945cc	             mov dword [rbp - 0x34], eax	      4291	gui.c	FUNCTION_65	FOR_1	IF_14
0x4005497	        0x488b45f8	                mov rax, qword [rbp - 8]	      4292	gui.c	FUNCTION_65	FOR_1	IF_14
0x400549b	          0x8b5030	            mov edx, dword [rax + 0x30] 	      4292	gui.c	FUNCTION_65	FOR_1	IF_14
0x400549e	    0x8b0500000000	            mov eax, dword [0x040054a4] 	      4292	gui.c	FUNCTION_65	FOR_1	IF_14
0x40054a4	           0xfafd0	                           imul edx, eax	      4292	gui.c	FUNCTION_65	FOR_1	IF_14
0x40054a7	    0x8b0500000000	            mov eax, dword [0x040054ad] 	      4292	gui.c	FUNCTION_65	FOR_1	IF_14
0x40054ad	             0x1d0	                            add eax, edx	      4292	gui.c	FUNCTION_65	FOR_1	IF_14
0x40054af	          0x8945d0	             mov dword [rbp - 0x30], eax	      4292	gui.c	FUNCTION_65	FOR_1	IF_14
0x40054b2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4314	gui.c	FUNCTION_65	FOR_1	IF_14	IF_18
0x40054b6	    0x8b809c000000	            mov eax, dword [rax + 0x9c] 	      4314	gui.c	FUNCTION_65	FOR_1	IF_14	IF_18
0x40054bc	            0x85c0	                           test eax, eax	      4314	gui.c	FUNCTION_65	FOR_1	IF_14	IF_18
0x40054be	            0x7512	                           jne 0x40054d2	      4314	gui.c	FUNCTION_65	FOR_1	IF_14	IF_18
0x40054c0	    0x8b0500000000	            mov eax, dword [0x040054c6] 	      4317	gui.c	FUNCTION_65	FOR_1	IF_14	IF_18
0x40054c6	           0x145cc	             add dword [rbp - 0x34], eax	      4317	gui.c	FUNCTION_65	FOR_1	IF_14	IF_18
0x40054c9	    0x8b0500000000	            mov eax, dword [0x040054cf] 	      4318	gui.c	FUNCTION_65	FOR_1	IF_14	IF_18
0x40054cf	          0x2945d0	             sub dword [rbp - 0x30], eax	      4318	gui.c	FUNCTION_65	FOR_1	IF_14	IF_18
0x40054d2	    0x8b0500000000	            mov eax, dword [0x040054d8] 	      4320	gui.c	FUNCTION_65	FOR_1	IF_14	IF_19
0x40054d8	            0x85c0	                           test eax, eax	      4320	gui.c	FUNCTION_65	FOR_1	IF_14	IF_19
0x40054da	            0x743d	                            je 0x4005519	      4320	gui.c	FUNCTION_65	FOR_1	IF_14	IF_19
0x40054dc	    0x8b0d00000000	            mov ecx, dword [0x040054e2] 	      4322	gui.c	FUNCTION_65	FOR_1	IF_14	IF_19	CALL_8
0x40054e2	    0x8b0500000000	            mov eax, dword [0x040054e8] 	      4322	gui.c	FUNCTION_65	FOR_1	IF_14	IF_19	CALL_8
0x40054e8	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      4322	gui.c	FUNCTION_65	FOR_1	IF_14	IF_19	CALL_8
0x40054ec	    0x488dba901800	                 lea rdi, [rdx + 0x1890]	      4322	gui.c	FUNCTION_65	FOR_1	IF_14	IF_19	CALL_8
0x40054f3	          0x8b75cc	             mov esi, dword [rbp - 0x34]	      4322	gui.c	FUNCTION_65	FOR_1	IF_14	IF_19	CALL_8
0x40054f6	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      4322	gui.c	FUNCTION_65	FOR_1	IF_14	IF_19	CALL_8
0x40054f9	          0x4189f0	                            mov r8d, esi	      4322	gui.c	FUNCTION_65	FOR_1	IF_14	IF_19	CALL_8
0x40054fc	            0x89c6	                            mov esi, eax	      4322	gui.c	FUNCTION_65	FOR_1	IF_14	IF_19	CALL_8
0x40054fe	      0xe800000000	                          call 0x4005503	      4322	gui.c	FUNCTION_65	FOR_1	IF_14	IF_19	CALL_8
0x4005503	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4325	gui.c	FUNCTION_65	FOR_1	IF_14	IF_19	CALL_9
0x4005507	      0xba01000000	                              mov edx, 1	      4325	gui.c	FUNCTION_65	FOR_1	IF_14	IF_19	CALL_9
0x400550c	      0xbe00000000	                              mov esi, 0	      4325	gui.c	FUNCTION_65	FOR_1	IF_14	IF_19	CALL_9
0x4005511	          0x4889c7	                            mov rdi, rax	      4325	gui.c	FUNCTION_65	FOR_1	IF_14	IF_19	CALL_9
0x4005514	      0xe862010000	               call sym.gui_do_scrollbar	      4325	gui.c	FUNCTION_65	FOR_1	IF_14	IF_19	CALL_9
0x4005519	    0x8b0500000000	            mov eax, dword [0x0400551f] 	      4327	gui.c	FUNCTION_65	FOR_1	IF_14	IF_20
0x400551f	            0x85c0	                           test eax, eax	      4327	gui.c	FUNCTION_65	FOR_1	IF_14	IF_20
0x4005521	            0x743d	                            je 0x4005560	      4327	gui.c	FUNCTION_65	FOR_1	IF_14	IF_20
0x4005523	    0x8b0d00000000	            mov ecx, dword [0x04005529] 	      4329	gui.c	FUNCTION_65	FOR_1	IF_14	IF_20	CALL_10
0x4005529	    0x8b0500000000	            mov eax, dword [0x0400552f] 	      4329	gui.c	FUNCTION_65	FOR_1	IF_14	IF_20	CALL_10
0x400552f	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      4329	gui.c	FUNCTION_65	FOR_1	IF_14	IF_20	CALL_10
0x4005533	    0x488dbae01800	                 lea rdi, [rdx + 0x18e0]	      4329	gui.c	FUNCTION_65	FOR_1	IF_14	IF_20	CALL_10
0x400553a	          0x8b75cc	             mov esi, dword [rbp - 0x34]	      4329	gui.c	FUNCTION_65	FOR_1	IF_14	IF_20	CALL_10
0x400553d	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      4329	gui.c	FUNCTION_65	FOR_1	IF_14	IF_20	CALL_10
0x4005540	          0x4189f0	                            mov r8d, esi	      4329	gui.c	FUNCTION_65	FOR_1	IF_14	IF_20	CALL_10
0x4005543	            0x89c6	                            mov esi, eax	      4329	gui.c	FUNCTION_65	FOR_1	IF_14	IF_20	CALL_10
0x4005545	      0xe800000000	                          call 0x400554a	      4329	gui.c	FUNCTION_65	FOR_1	IF_14	IF_20	CALL_10
0x400554a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4332	gui.c	FUNCTION_65	FOR_1	IF_14	IF_20	CALL_11
0x400554e	      0xba01000000	                              mov edx, 1	      4332	gui.c	FUNCTION_65	FOR_1	IF_14	IF_20	CALL_11
0x4005553	      0xbe01000000	                              mov esi, 1	      4332	gui.c	FUNCTION_65	FOR_1	IF_14	IF_20	CALL_11
0x4005558	          0x4889c7	                            mov rdi, rax	      4332	gui.c	FUNCTION_65	FOR_1	IF_14	IF_20	CALL_11
0x400555b	      0xe81b010000	               call sym.gui_do_scrollbar	      4332	gui.c	FUNCTION_65	FOR_1	IF_14	IF_20	CALL_11
0x4005560	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      4347	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23
0x4005564	            0x752e	                           jne 0x4005594	      4347	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23
0x4005566	        0x488b45f8	                mov rax, qword [rbp - 8]	      4347	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23
0x400556a	        0x488b4018	            mov rax, qword [rax + 0x18] 	      4347	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23
0x400556e	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      4347	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23
0x4005572	            0x7520	                           jne 0x4005594	      4347	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23
0x4005574	        0x488b45f8	                mov rax, qword [rbp - 8]	      4347	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23
0x4005578	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4347	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23
0x400557c	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      4347	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23
0x4005580	            0x7512	                           jne 0x4005594	      4347	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23
0x4005582	        0x488b45f8	                mov rax, qword [rbp - 8]	      4347	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23
0x4005586	        0x488b4028	            mov rax, qword [rax + 0x28] 	      4347	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23
0x400558a	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      4347	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23
0x400558e	     0xf84ae000000	                            je 0x4005642	      4347	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23
0x4005594	        0x488b45f8	                mov rax, qword [rbp - 8]	      4351	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23
0x4005598	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      4351	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23
0x400559c	        0x48895018	             mov qword [rax + 0x18], rdx	      4351	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23
0x40055a0	        0x488b45f8	                mov rax, qword [rbp - 8]	      4355	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23
0x40055a4	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      4355	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23
0x40055a8	        0x48895020	             mov qword [rax + 0x20], rdx	      4355	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23
0x40055ac	        0x488b45f8	                mov rax, qword [rbp - 8]	      4356	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23
0x40055b0	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      4356	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23
0x40055b4	        0x48895028	             mov qword [rax + 0x28], rdx	      4356	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23
0x40055b8	    0x8b0500000000	            mov eax, dword [0x040055be] 	      4357	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_24
0x40055be	            0x85c0	                           test eax, eax	      4357	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_24
0x40055c0	            0x7436	                            je 0x40055f8	      4357	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_24
0x40055c2	    0x8b0500000000	            mov eax, dword [0x040055c8] 	      4358	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_24
0x40055c8	            0x85c0	                           test eax, eax	      4358	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_24
0x40055ca	            0x750d	                           jne 0x40055d9	      4358	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_24
0x40055cc	    0x488b05000000	            mov rax, qword [0x040055d3] 	      4358	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_24
0x40055d3	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      4358	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_24
0x40055d7	            0x741f	                            je 0x40055f8	      4358	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_24
0x40055d9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4359	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_24	CALL_12
0x40055dd	    0x488db8901800	                 lea rdi, [rax + 0x1890]	      4359	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_24	CALL_12
0x40055e4	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      4359	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_24	CALL_12
0x40055e8	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      4359	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_24	CALL_12
0x40055ec	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4359	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_24	CALL_12
0x40055f0	          0x4889c6	                            mov rsi, rax	      4359	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_24	CALL_12
0x40055f3	      0xe800000000	                          call 0x40055f8	      4359	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_24	CALL_12
0x40055f8	    0x8b0500000000	            mov eax, dword [0x040055fe] 	      4361	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_25
0x40055fe	            0x85c0	                           test eax, eax	      4361	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_25
0x4005600	            0x7440	                            je 0x4005642	      4361	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_25
0x4005602	    0x8b0500000000	            mov eax, dword [0x04005608] 	      4362	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_25
0x4005608	          0x83f801	                              cmp eax, 1	      4362	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_25
0x400560b	            0x750d	                           jne 0x400561a	      4362	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_25
0x400560d	    0x488b05000000	            mov rax, qword [0x04005614] 	      4362	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_25
0x4005614	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      4362	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_25
0x4005618	            0x7428	                            je 0x4005642	      4362	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_25
0x400561a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4363	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_25	CALL_13
0x400561e	    0x488db8e01800	                 lea rdi, [rax + 0x18e0]	      4363	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_25	CALL_13
0x4005625	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      4363	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_25	CALL_13
0x4005629	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      4363	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_25	CALL_13
0x400562d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4363	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_25	CALL_13
0x4005631	          0x4889c6	                            mov rsi, rax	      4363	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_25	CALL_13
0x4005634	      0xe800000000	                          call 0x4005639	      4363	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_25	CALL_13
0x4005639	            0xeb07	                           jmp 0x4005642	      4363	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_25	CALL_13
0x400563b	              0x90	                                     nop	      4225	gui.c	FUNCTION_65	FOR_1	IF_4
0x400563c	            0xeb04	                           jmp 0x4005642	      4225	gui.c	FUNCTION_65	FOR_1	IF_4
0x400563e	              0x90	                                     nop	      4230	gui.c	FUNCTION_65	FOR_1	IF_5
0x400563f	            0xeb01	                           jmp 0x4005642	      4230	gui.c	FUNCTION_65	FOR_1	IF_5
0x4005641	              0x90	                                     nop	      4275	gui.c	FUNCTION_65	FOR_1	IF_11
0x4005642	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4222	gui.c	FUNCTION_65	FOR_1	CALL_3
0x4005646	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4222	gui.c	FUNCTION_65	FOR_1	CALL_3
0x400564a	        0x488945d8	             mov qword [rbp - 0x28], rax	      4222	gui.c	FUNCTION_65	FOR_1	CALL_3
0x400564e	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      4222	gui.c	FUNCTION_65	FOR_1	CALL_3
0x4005653	     0xf8516fcffff	                           jne 0x400526f	      4222	gui.c	FUNCTION_65	FOR_1	CALL_3
0x4005659	    0x488b05000000	            mov rax, qword [0x04005660] 	      4367	gui.c	FUNCTION_65
0x4005660	    0x488905000000	            mov qword [0x04005667], rax 	      4367	gui.c	FUNCTION_65
0x4005667	    0x8b0500000000	            mov eax, dword [0x0400566d] 	      4368	gui.c	FUNCTION_65
0x400566d	          0x83e801	                              sub eax, 1	      4368	gui.c	FUNCTION_65
0x4005670	    0x890500000000	            mov dword [0x04005676], eax 	      4368	gui.c	FUNCTION_65
0x4005676	            0xeb01	                           jmp 0x4005679	      4368	gui.c	FUNCTION_65
0x4005678	              0x90	                                     nop	      4194	gui.c	FUNCTION_65	IF_1
0x4005679	              0xc9	                                   leave	      4369	gui.c	FUNCTION_65
0x400567a	              0xc3	                                     ret	      4369	gui.c	FUNCTION_65
gui_disable_flush	IF,0:functions,0:ELSE,0:CALL,0:SWITCH,0:WHILE,0:FOR,0:DO,0	8
0x40023c9	              0x55	                                push rbp	      2015	gui.c	FUNCTION_33
0x40023ca	          0x4889e5	                            mov rbp, rsp	      2015	gui.c	FUNCTION_33
0x40023cd	    0x8b0500000000	            mov eax, dword [0x040023d3] 	      2016	gui.c	FUNCTION_33
0x40023d3	          0x83c001	                              add eax, 1	      2016	gui.c	FUNCTION_33
0x40023d6	    0x890500000000	            mov dword [0x040023dc], eax 	      2016	gui.c	FUNCTION_33
0x40023dc	              0x90	                                     nop	      2017	gui.c	FUNCTION_33
0x40023dd	              0x5d	                                 pop rbp	      2017	gui.c	FUNCTION_33
0x40023de	              0xc3	                                     ret	      2017	gui.c	FUNCTION_33
gui_position_menu	IF,1:functions,0:ELSE,0:CALL,1:SWITCH,0:WHILE,0:FOR,0:DO,0	5
0x4001744	              0x55	                                push rbp	      1323	gui.c	FUNCTION_16
0x4001745	          0x4889e5	                            mov rbp, rsp	      1323	gui.c	FUNCTION_16
0x4001748	              0x90	                                     nop	      1328	gui.c	FUNCTION_16
0x4001749	              0x5d	                                 pop rbp	      1328	gui.c	FUNCTION_16
0x400174a	              0xc3	                                     ret	      1328	gui.c	FUNCTION_16
gui_do_scroll	IF,12:functions,0:ELSE,1:CALL,14:SWITCH,0:WHILE,0:FOR,1:DO,0	166
0x40057d0	              0x55	                                push rbp	      4422	gui.c	FUNCTION_67
0x40057d1	          0x4889e5	                            mov rbp, rsp	      4422	gui.c	FUNCTION_67
0x40057d4	        0x4883ec40	                           sub rsp, 0x40	      4422	gui.c	FUNCTION_67
0x40057d8	    0x488b05000000	            mov rax, qword [0x040057df] 	      4432	gui.c	FUNCTION_67	FOR_1	CALL_1
0x40057df	        0x488945d0	             mov qword [rbp - 0x30], rax	      4432	gui.c	FUNCTION_67	FOR_1	CALL_1
0x40057e3	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	      4432	gui.c	FUNCTION_67	FOR_1	CALL_1
0x40057ea	            0xeb17	                           jmp 0x4005803	      4432	gui.c	FUNCTION_67	FOR_1	CALL_1
0x40057ec	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      4433	gui.c	FUNCTION_67	FOR_1	IF_1
0x40057f1	            0x741d	                            je 0x4005810	      4433	gui.c	FUNCTION_67	FOR_1	IF_1
0x40057f3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4432	gui.c	FUNCTION_67	FOR_1	CALL_1
0x40057f7	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4432	gui.c	FUNCTION_67	FOR_1	CALL_1
0x40057fb	        0x488945d0	             mov qword [rbp - 0x30], rax	      4432	gui.c	FUNCTION_67	FOR_1	CALL_1
0x40057ff	        0x8345c401	               add dword [rbp - 0x3c], 1	      4432	gui.c	FUNCTION_67	FOR_1	CALL_1
0x4005803	    0x8b0500000000	            mov eax, dword [0x04005809] 	      4432	gui.c	FUNCTION_67	FOR_1	CALL_1
0x4005809	          0x3945c4	            cmp dword [rbp - 0x3c], eax 	      4432	gui.c	FUNCTION_67	FOR_1	CALL_1
0x400580c	            0x7cde	                            jl 0x40057ec	      4432	gui.c	FUNCTION_67	FOR_1	CALL_1
0x400580e	            0xeb01	                           jmp 0x4005811	      4432	gui.c	FUNCTION_67	FOR_1	CALL_1
0x4005810	              0x90	                                     nop	      4434	gui.c	FUNCTION_67	FOR_1	IF_1
0x4005811	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      4435	gui.c	FUNCTION_67	IF_2
0x4005816	            0x750a	                           jne 0x4005822	      4435	gui.c	FUNCTION_67	IF_2
0x4005818	      0xb800000000	                              mov eax, 0	      4437	gui.c	FUNCTION_67	IF_2
0x400581d	      0xe942020000	                           jmp 0x4005a64	      4437	gui.c	FUNCTION_67	IF_2
0x4005822	    0x488b05000000	            mov rax, qword [0x04005829] 	      4442	gui.c	FUNCTION_67
0x4005829	        0x488d5001	                      lea rdx, [rax + 1]	      4442	gui.c	FUNCTION_67
0x400582d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4442	gui.c	FUNCTION_67
0x4005831	        0x488b4078	            mov rax, qword [rax + 0x78] 	      4442	gui.c	FUNCTION_67
0x4005835	          0x4829c2	                            sub rdx, rax	      4442	gui.c	FUNCTION_67
0x4005838	          0x4889d0	                            mov rax, rdx	      4442	gui.c	FUNCTION_67
0x400583b	        0x488945d8	             mov qword [rbp - 0x28], rax	      4442	gui.c	FUNCTION_67
0x400583f	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      4443	gui.c	FUNCTION_67	IF_3
0x4005844	            0x750a	                           jne 0x4005850	      4443	gui.c	FUNCTION_67	IF_3
0x4005846	      0xb800000000	                              mov eax, 0	      4444	gui.c	FUNCTION_67	IF_3
0x400584b	      0xe914020000	                           jmp 0x4005a64	      4444	gui.c	FUNCTION_67	IF_3
0x4005850	    0x488b05000000	            mov rax, qword [0x04005857] 	      4446	gui.c	FUNCTION_67
0x4005857	        0x488945e0	             mov qword [rbp - 0x20], rax	      4446	gui.c	FUNCTION_67
0x400585b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4447	gui.c	FUNCTION_67
0x400585f	        0x488b4078	            mov rax, qword [rax + 0x78] 	      4447	gui.c	FUNCTION_67
0x4005863	        0x488945e8	             mov qword [rbp - 0x18], rax	      4447	gui.c	FUNCTION_67
0x4005867	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4449	gui.c	FUNCTION_67
0x400586b	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      4449	gui.c	FUNCTION_67
0x4005871	          0x8945cc	             mov dword [rbp - 0x34], eax	      4449	gui.c	FUNCTION_67
0x4005874	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4451	gui.c	FUNCTION_67
0x4005878	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      4451	gui.c	FUNCTION_67
0x400587c	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4451	gui.c	FUNCTION_67
0x4005880	        0x488945f0	             mov qword [rbp - 0x10], rax	      4451	gui.c	FUNCTION_67
0x4005884	        0x488955f8	                mov qword [rbp - 8], rdx	      4451	gui.c	FUNCTION_67
0x4005888	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4452	gui.c	FUNCTION_67
0x400588c	    0x488905000000	            mov qword [0x04005893], rax 	      4452	gui.c	FUNCTION_67
0x4005893	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4453	gui.c	FUNCTION_67
0x4005897	        0x488b4008	                mov rax, qword [rax + 8]	      4453	gui.c	FUNCTION_67
0x400589b	    0x488905000000	            mov qword [0x040058a2], rax 	      4453	gui.c	FUNCTION_67
0x40058a2	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      4454	gui.c	FUNCTION_67	IF_4
0x40058a7	            0x7923	                           jns 0x40058cc	      4454	gui.c	FUNCTION_67	IF_4
0x40058a9	    0x488b05000000	            mov rax, qword [0x040058b0] 	      4455	gui.c	FUNCTION_67	CALL_2
0x40058b0	          0x4885c0	                           test rax, rax	      4455	gui.c	FUNCTION_67	CALL_2
0x40058b3	           0xf94c0	                                 sete al	      4455	gui.c	FUNCTION_67	CALL_2
0x40058b6	           0xfb6c0	                           movzx eax, al	      4455	gui.c	FUNCTION_67	CALL_2
0x40058b9	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      4455	gui.c	FUNCTION_67	CALL_2
0x40058bd	          0x48f7da	                                 neg rdx	      4455	gui.c	FUNCTION_67	CALL_2
0x40058c0	            0x89c6	                            mov esi, eax	      4455	gui.c	FUNCTION_67	CALL_2
0x40058c2	          0x4889d7	                            mov rdi, rdx	      4455	gui.c	FUNCTION_67	CALL_2
0x40058c5	      0xe800000000	                          call 0x40058ca	      4455	gui.c	FUNCTION_67	CALL_2
0x40058ca	            0xeb1e	                           jmp 0x40058ea	      4455	gui.c	FUNCTION_67	CALL_2
0x40058cc	    0x488b05000000	            mov rax, qword [0x040058d3] 	      4457	gui.c	FUNCTION_67	CALL_3
0x40058d3	          0x4885c0	                           test rax, rax	      4457	gui.c	FUNCTION_67	CALL_3
0x40058d6	           0xf94c0	                                 sete al	      4457	gui.c	FUNCTION_67	CALL_3
0x40058d9	           0xfb6d0	                           movzx edx, al	      4457	gui.c	FUNCTION_67	CALL_3
0x40058dc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4457	gui.c	FUNCTION_67	CALL_3
0x40058e0	            0x89d6	                            mov esi, edx	      4457	gui.c	FUNCTION_67	CALL_3
0x40058e2	          0x4889c7	                            mov rdi, rax	      4457	gui.c	FUNCTION_67	CALL_3
0x40058e5	      0xe800000000	                          call 0x40058ea	      4457	gui.c	FUNCTION_67	CALL_3
0x40058ea	    0x8b0500000000	            mov eax, dword [0x040058f0] 	      4461	gui.c	FUNCTION_67	IF_5
0x40058f0	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      4461	gui.c	FUNCTION_67	IF_5
0x40058f3	            0x750b	                           jne 0x4005900	      4461	gui.c	FUNCTION_67	IF_5
0x40058f5	    0x48c705000000	               mov qword [0x04005900], 0	      4462	gui.c	FUNCTION_67	IF_5
0x4005900	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4464	gui.c	FUNCTION_67	IF_6
0x4005904	        0x488b4078	            mov rax, qword [rax + 0x78] 	      4464	gui.c	FUNCTION_67	IF_6
0x4005908	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      4464	gui.c	FUNCTION_67	IF_6
0x400590c	            0x750f	                           jne 0x400591d	      4464	gui.c	FUNCTION_67	IF_6
0x400590e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4466	gui.c	FUNCTION_67	IF_6
0x4005912	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      4466	gui.c	FUNCTION_67	IF_6
0x4005918	          0x3b45cc	             cmp eax, dword [rbp - 0x34]	      4466	gui.c	FUNCTION_67	IF_6
0x400591b	            0x7448	                            je 0x4005965	      4466	gui.c	FUNCTION_67	IF_6
0x400591d	    0x488b05000000	            mov rax, qword [0x04005924] 	      4470	gui.c	FUNCTION_67	IF_6	IF_7
0x4005924	          0x4885c0	                           test rax, rax	      4470	gui.c	FUNCTION_67	IF_6	IF_7
0x4005927	            0x740a	                            je 0x4005933	      4470	gui.c	FUNCTION_67	IF_6	IF_7
0x4005929	      0xe800000000	                          call 0x400592e	      4472	gui.c	FUNCTION_67	IF_6	IF_7	CALL_4
0x400592e	      0xe800000000	                          call 0x4005933	      4473	gui.c	FUNCTION_67	IF_6	IF_7	CALL_5
0x4005933	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      4475	gui.c	FUNCTION_67	IF_6	IF_8
0x4005937	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4475	gui.c	FUNCTION_67	IF_6	IF_8
0x400593b	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4475	gui.c	FUNCTION_67	IF_6	IF_8
0x400593f	          0x4839c2	                            cmp rdx, rax	      4475	gui.c	FUNCTION_67	IF_6	IF_8
0x4005942	            0x740e	                            je 0x4005952	      4475	gui.c	FUNCTION_67	IF_6	IF_8
0x4005944	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4476	gui.c	FUNCTION_67	IF_6	CALL_6
0x4005948	          0x8b4048	            mov eax, dword [rax + 0x48] 	      4476	gui.c	FUNCTION_67	IF_6	CALL_6
0x400594b	            0x89c7	                            mov edi, eax	      4476	gui.c	FUNCTION_67	IF_6	CALL_6
0x400594d	      0xe800000000	                          call 0x4005952	      4476	gui.c	FUNCTION_67	IF_6	CALL_6
0x4005952	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4477	gui.c	FUNCTION_67	IF_6
0x4005956	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      4477	gui.c	FUNCTION_67	IF_6
0x400595a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4477	gui.c	FUNCTION_67	IF_6
0x400595e	    0x488990500500	            mov qword [rax + 0x550], rdx	      4477	gui.c	FUNCTION_67	IF_6
0x4005965	      0xe800000000	                          call 0x400596a	      4481	gui.c	FUNCTION_67	CALL_7
0x400596a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4483	gui.c	FUNCTION_67
0x400596e	    0x488905000000	            mov qword [0x04005975], rax 	      4483	gui.c	FUNCTION_67
0x4005975	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4484	gui.c	FUNCTION_67
0x4005979	        0x488b4008	                mov rax, qword [rax + 8]	      4484	gui.c	FUNCTION_67
0x400597d	    0x488905000000	            mov qword [0x04005984], rax 	      4484	gui.c	FUNCTION_67
0x4005984	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4490	gui.c	FUNCTION_67	IF_9
0x4005988	        0x488b4078	            mov rax, qword [rax + 0x78] 	      4490	gui.c	FUNCTION_67	IF_9
0x400598c	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      4490	gui.c	FUNCTION_67	IF_9
0x4005990	            0x751d	                           jne 0x40059af	      4490	gui.c	FUNCTION_67	IF_9
0x4005992	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4491	gui.c	FUNCTION_67	IF_9
0x4005996	    0x8b8028010000	           mov eax, dword [rax + 0x128] 	      4491	gui.c	FUNCTION_67	IF_9
0x400599c	            0x85c0	                           test eax, eax	      4491	gui.c	FUNCTION_67	IF_9
0x400599e	            0x750f	                           jne 0x40059af	      4491	gui.c	FUNCTION_67	IF_9
0x40059a0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4493	gui.c	FUNCTION_67	IF_9
0x40059a4	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      4493	gui.c	FUNCTION_67	IF_9
0x40059aa	          0x3b45cc	             cmp eax, dword [rbp - 0x34]	      4493	gui.c	FUNCTION_67	IF_9
0x40059ad	            0x7457	                            je 0x4005a06	      4493	gui.c	FUNCTION_67	IF_9
0x40059af	    0xc745c80a0000	             mov dword [rbp - 0x38], 0xa	      4497	gui.c	FUNCTION_67	IF_9
0x40059b6	      0xe800000000	                          call 0x40059bb	      4500	gui.c	FUNCTION_67	IF_9	IF_10	CALL_8
0x40059bb	            0x85c0	                           test eax, eax	      4500	gui.c	FUNCTION_67	IF_9	IF_10	CALL_8
0x40059bd	            0x7415	                            je 0x40059d4	      4500	gui.c	FUNCTION_67	IF_9	IF_10	CALL_8
0x40059bf	    0xc745c8280000	           mov dword [rbp - 0x38], 0x28 	      4502	gui.c	FUNCTION_67	IF_9	IF_10
0x40059c6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4503	gui.c	FUNCTION_67	IF_9	IF_10
0x40059ca	    0xc780f8000000	               mov dword [rax + 0xf8], 0	      4503	gui.c	FUNCTION_67	IF_9	IF_10
0x40059d4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4508	gui.c	FUNCTION_67	IF_9	IF_11
0x40059d8	    0x8b8028010000	           mov eax, dword [rax + 0x128] 	      4508	gui.c	FUNCTION_67	IF_9	IF_11
0x40059de	          0x3b45c8	             cmp eax, dword [rbp - 0x38]	      4508	gui.c	FUNCTION_67	IF_9	IF_11
0x40059e1	            0x7d0d	                           jge 0x40059f0	      4508	gui.c	FUNCTION_67	IF_9	IF_11
0x40059e3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4509	gui.c	FUNCTION_67	IF_9	IF_11
0x40059e7	          0x8b55c8	             mov edx, dword [rbp - 0x38]	      4509	gui.c	FUNCTION_67	IF_9	IF_11
0x40059ea	    0x899028010000	            mov dword [rax + 0x128], edx	      4509	gui.c	FUNCTION_67	IF_9	IF_11
0x40059f0	      0xe800000000	                          call 0x40059f5	      4510	gui.c	FUNCTION_67	IF_9	CALL_9
0x40059f5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4511	gui.c	FUNCTION_67	IF_9	CALL_10
0x40059f9	          0x4889c7	                            mov rdi, rax	      4511	gui.c	FUNCTION_67	IF_9	CALL_10
0x40059fc	      0xe800000000	                          call 0x4005a01	      4511	gui.c	FUNCTION_67	IF_9	CALL_10
0x4005a01	      0xe800000000	                          call 0x4005a06	      4512	gui.c	FUNCTION_67	IF_9	CALL_11
0x4005a06	      0xe800000000	                          call 0x4005a0b	      4517	gui.c	FUNCTION_67	IF_12	CALL_12
0x4005a0b	            0x85c0	                           test eax, eax	      4517	gui.c	FUNCTION_67	IF_12	CALL_12
0x4005a0d	            0x7405	                            je 0x4005a14	      4517	gui.c	FUNCTION_67	IF_12	CALL_12
0x4005a0f	      0xe800000000	                          call 0x4005a14	      4518	gui.c	FUNCTION_67	CALL_13
0x4005a14	    0x488b05000000	            mov rax, qword [0x04005a1b] 	      4521	gui.c	FUNCTION_67	CALL_14
0x4005a1b	        0x483945d0	            cmp qword [rbp - 0x30], rax 	      4521	gui.c	FUNCTION_67	CALL_14
0x4005a1f	            0x753d	                           jne 0x4005a5e	      4521	gui.c	FUNCTION_67	CALL_14
0x4005a21	    0x488b05000000	            mov rax, qword [0x04005a28] 	      4521	gui.c	FUNCTION_67	CALL_14
0x4005a28	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      4521	gui.c	FUNCTION_67	CALL_14
0x4005a2c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4521	gui.c	FUNCTION_67	CALL_14
0x4005a30	          0x4839c2	                            cmp rdx, rax	      4521	gui.c	FUNCTION_67	CALL_14
0x4005a33	            0x7522	                           jne 0x4005a57	      4521	gui.c	FUNCTION_67	CALL_14
0x4005a35	    0x488b05000000	            mov rax, qword [0x04005a3c] 	      4521	gui.c	FUNCTION_67	CALL_14
0x4005a3c	          0x8b5040	            mov edx, dword [rax + 0x40] 	      4521	gui.c	FUNCTION_67	CALL_14
0x4005a3f	          0x8b45f8	                mov eax, dword [rbp - 8]	      4521	gui.c	FUNCTION_67	CALL_14
0x4005a42	            0x39c2	                            cmp edx, eax	      4521	gui.c	FUNCTION_67	CALL_14
0x4005a44	            0x7511	                           jne 0x4005a57	      4521	gui.c	FUNCTION_67	CALL_14
0x4005a46	    0x488b05000000	            mov rax, qword [0x04005a4d] 	      4521	gui.c	FUNCTION_67	CALL_14
0x4005a4d	          0x8b5044	            mov edx, dword [rax + 0x44] 	      4521	gui.c	FUNCTION_67	CALL_14
0x4005a50	          0x8b45fc	                mov eax, dword [rbp - 4]	      4521	gui.c	FUNCTION_67	CALL_14
0x4005a53	            0x39c2	                            cmp edx, eax	      4521	gui.c	FUNCTION_67	CALL_14
0x4005a55	            0x7407	                            je 0x4005a5e	      4521	gui.c	FUNCTION_67	CALL_14
0x4005a57	      0xb801000000	                              mov eax, 1	      4521	gui.c	FUNCTION_67	CALL_14
0x4005a5c	            0xeb05	                           jmp 0x4005a63	      4521	gui.c	FUNCTION_67	CALL_14
0x4005a5e	      0xb800000000	                              mov eax, 0	      4521	gui.c	FUNCTION_67	CALL_14
0x4005a63	              0x90	                                     nop	      4521	gui.c	FUNCTION_67	CALL_14
0x4005a64	              0xc9	                                   leave	      4522	gui.c	FUNCTION_67
0x4005a65	              0xc3	                                     ret	      4522	gui.c	FUNCTION_67
gui_redraw	IF,1:functions,0:ELSE,0:CALL,6:SWITCH,0:WHILE,0:FOR,0:DO,0	62
0x4002e24	              0x55	                                push rbp	      2674	gui.c	FUNCTION_41
0x4002e25	          0x4889e5	                            mov rbp, rsp	      2674	gui.c	FUNCTION_41
0x4002e28	        0x4883ec20	                           sub rsp, 0x20	      2674	gui.c	FUNCTION_41
0x4002e2c	          0x897dec	             mov dword [rbp - 0x14], edi	      2674	gui.c	FUNCTION_41
0x4002e2f	          0x8975e8	             mov dword [rbp - 0x18], esi	      2674	gui.c	FUNCTION_41
0x4002e32	          0x8955e4	             mov dword [rbp - 0x1c], edx	      2674	gui.c	FUNCTION_41
0x4002e35	          0x894de0	             mov dword [rbp - 0x20], ecx	      2674	gui.c	FUNCTION_41
0x4002e38	    0x8b0500000000	            mov eax, dword [0x04002e3e] 	      2677	gui.c	FUNCTION_41	CALL_1
0x4002e3e	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      2677	gui.c	FUNCTION_41	CALL_1
0x4002e41	            0x29c2	                            sub edx, eax	      2677	gui.c	FUNCTION_41	CALL_1
0x4002e43	            0x89d0	                            mov eax, edx	      2677	gui.c	FUNCTION_41	CALL_1
0x4002e45	    0x8b3d00000000	            mov edi, dword [0x04002e4b] 	      2677	gui.c	FUNCTION_41	CALL_1
0x4002e4b	              0x99	                                     cdq	      2677	gui.c	FUNCTION_41	CALL_1
0x4002e4c	            0xf7ff	                                idiv edi	      2677	gui.c	FUNCTION_41	CALL_1
0x4002e4e	          0x8945f0	             mov dword [rbp - 0x10], eax	      2677	gui.c	FUNCTION_41	CALL_1
0x4002e51	    0x8b0500000000	            mov eax, dword [0x04002e57] 	      2678	gui.c	FUNCTION_41	CALL_2
0x4002e57	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      2678	gui.c	FUNCTION_41	CALL_2
0x4002e5a	            0x29c2	                            sub edx, eax	      2678	gui.c	FUNCTION_41	CALL_2
0x4002e5c	            0x89d0	                            mov eax, edx	      2678	gui.c	FUNCTION_41	CALL_2
0x4002e5e	    0x8b0d00000000	            mov ecx, dword [0x04002e64] 	      2678	gui.c	FUNCTION_41	CALL_2
0x4002e64	              0x99	                                     cdq	      2678	gui.c	FUNCTION_41	CALL_2
0x4002e65	            0xf7f9	                                idiv ecx	      2678	gui.c	FUNCTION_41	CALL_2
0x4002e67	          0x8945f4	              mov dword [rbp - 0xc], eax	      2678	gui.c	FUNCTION_41	CALL_2
0x4002e6a	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      2679	gui.c	FUNCTION_41	CALL_3
0x4002e6d	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      2679	gui.c	FUNCTION_41	CALL_3
0x4002e70	             0x1d0	                            add eax, edx	      2679	gui.c	FUNCTION_41	CALL_3
0x4002e72	          0x8d50ff	                      lea edx, [rax - 1]	      2679	gui.c	FUNCTION_41	CALL_3
0x4002e75	    0x8b0500000000	            mov eax, dword [0x04002e7b] 	      2679	gui.c	FUNCTION_41	CALL_3
0x4002e7b	            0x29c2	                            sub edx, eax	      2679	gui.c	FUNCTION_41	CALL_3
0x4002e7d	            0x89d0	                            mov eax, edx	      2679	gui.c	FUNCTION_41	CALL_3
0x4002e7f	    0x8b3500000000	            mov esi, dword [0x04002e85] 	      2679	gui.c	FUNCTION_41	CALL_3
0x4002e85	              0x99	                                     cdq	      2679	gui.c	FUNCTION_41	CALL_3
0x4002e86	            0xf7fe	                                idiv esi	      2679	gui.c	FUNCTION_41	CALL_3
0x4002e88	          0x8945f8	                mov dword [rbp - 8], eax	      2679	gui.c	FUNCTION_41	CALL_3
0x4002e8b	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      2680	gui.c	FUNCTION_41	CALL_4
0x4002e8e	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      2680	gui.c	FUNCTION_41	CALL_4
0x4002e91	             0x1d0	                            add eax, edx	      2680	gui.c	FUNCTION_41	CALL_4
0x4002e93	          0x8d50ff	                      lea edx, [rax - 1]	      2680	gui.c	FUNCTION_41	CALL_4
0x4002e96	    0x8b0500000000	            mov eax, dword [0x04002e9c] 	      2680	gui.c	FUNCTION_41	CALL_4
0x4002e9c	            0x29c2	                            sub edx, eax	      2680	gui.c	FUNCTION_41	CALL_4
0x4002e9e	            0x89d0	                            mov eax, edx	      2680	gui.c	FUNCTION_41	CALL_4
0x4002ea0	    0x8b3d00000000	            mov edi, dword [0x04002ea6] 	      2680	gui.c	FUNCTION_41	CALL_4
0x4002ea6	              0x99	                                     cdq	      2680	gui.c	FUNCTION_41	CALL_4
0x4002ea7	            0xf7ff	                                idiv edi	      2680	gui.c	FUNCTION_41	CALL_4
0x4002ea9	          0x8945fc	                mov dword [rbp - 4], eax	      2680	gui.c	FUNCTION_41	CALL_4
0x4002eac	          0x8b4dfc	                mov ecx, dword [rbp - 4]	      2682	gui.c	FUNCTION_41	CALL_5
0x4002eaf	          0x8b55f8	                mov edx, dword [rbp - 8]	      2682	gui.c	FUNCTION_41	CALL_5
0x4002eb2	          0x8b75f4	              mov esi, dword [rbp - 0xc]	      2682	gui.c	FUNCTION_41	CALL_5
0x4002eb5	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      2682	gui.c	FUNCTION_41	CALL_5
0x4002eb8	    0x41b810000000	                           mov r8d, 0x10	      2682	gui.c	FUNCTION_41	CALL_5
0x4002ebe	            0x89c7	                            mov edi, eax	      2682	gui.c	FUNCTION_41	CALL_5
0x4002ec0	      0xe800000000	                          call 0x4002ec5	      2682	gui.c	FUNCTION_41	CALL_5
0x4002ec5	    0x8b1500000000	            mov edx, dword [0x04002ecb] 	      2691	gui.c	FUNCTION_41	IF_1
0x4002ecb	    0x8b0500000000	            mov eax, dword [0x04002ed1] 	      2691	gui.c	FUNCTION_41	IF_1
0x4002ed1	            0x39c2	                            cmp edx, eax	      2691	gui.c	FUNCTION_41	IF_1
0x4002ed3	            0x750f	                           jne 0x4002ee4	      2691	gui.c	FUNCTION_41	IF_1
0x4002ed5	      0xbe01000000	                              mov esi, 1	      2692	gui.c	FUNCTION_41	CALL_6
0x4002eda	      0xbf01000000	                              mov edi, 1	      2692	gui.c	FUNCTION_41	CALL_6
0x4002edf	      0xe800000000	                          call 0x4002ee4	      2692	gui.c	FUNCTION_41	CALL_6
0x4002ee4	              0x90	                                     nop	      2693	gui.c	FUNCTION_41
0x4002ee5	              0xc9	                                   leave	      2693	gui.c	FUNCTION_41
0x4002ee6	              0xc3	                                     ret	      2693	gui.c	FUNCTION_41
gui_may_flush	IF,1:functions,0:ELSE,0:CALL,1:SWITCH,0:WHILE,0:FOR,0:DO,0	9
0x40023f5	              0x55	                                push rbp	      2033	gui.c	FUNCTION_35
0x40023f6	          0x4889e5	                            mov rbp, rsp	      2033	gui.c	FUNCTION_35
0x40023f9	    0x8b0500000000	            mov eax, dword [0x040023ff] 	      2034	gui.c	FUNCTION_35	IF_1
0x40023ff	            0x85c0	                           test eax, eax	      2034	gui.c	FUNCTION_35	IF_1
0x4002401	            0x7505	                           jne 0x4002408	      2034	gui.c	FUNCTION_35	IF_1
0x4002403	      0xe800000000	                          call 0x4002408	      2035	gui.c	FUNCTION_35	CALL_1
0x4002408	              0x90	                                     nop	      2036	gui.c	FUNCTION_35
0x4002409	              0x5d	                                 pop rbp	      2036	gui.c	FUNCTION_35
0x400240a	              0xc3	                                     ret	      2036	gui.c	FUNCTION_35
gui_find_bitmap	IF,2:functions,0:ELSE,0:CALL,3:SWITCH,0:WHILE,0:FOR,0:DO,0	41
0x400684e	              0x55	                                push rbp	      5045	gui.c	FUNCTION_84
0x400684f	          0x4889e5	                            mov rbp, rsp	      5045	gui.c	FUNCTION_84
0x4006852	        0x4883ec20	                           sub rsp, 0x20	      5045	gui.c	FUNCTION_84
0x4006856	        0x48897df8	                mov qword [rbp - 8], rdi	      5045	gui.c	FUNCTION_84
0x400685a	        0x488975f0	             mov qword [rbp - 0x10], rsi	      5045	gui.c	FUNCTION_84
0x400685e	        0x488955e8	             mov qword [rbp - 0x18], rdx	      5045	gui.c	FUNCTION_84
0x4006862	        0x488b45f8	                mov rax, qword [rbp - 8]	      5046	gui.c	FUNCTION_84	IF_1	CALL_1
0x4006866	          0x4889c7	                            mov rdi, rax	      5046	gui.c	FUNCTION_84	IF_1	CALL_1
0x4006869	      0xe800000000	                          call 0x400686e	      5046	gui.c	FUNCTION_84	IF_1	CALL_1
0x400686e	    0x483df20f0000	                          cmp rax, 0xff2	      5046	gui.c	FUNCTION_84	IF_1	CALL_1
0x4006874	            0x7607	                           jbe 0x400687d	      5046	gui.c	FUNCTION_84	IF_1	CALL_1
0x4006876	      0xb800000000	                              mov eax, 0	      5047	gui.c	FUNCTION_84	IF_1
0x400687b	            0xeb61	                           jmp 0x40068de	      5047	gui.c	FUNCTION_84	IF_1
0x400687d	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      5048	gui.c	FUNCTION_84	CALL_2
0x4006881	        0x488b55f8	                mov rdx, qword [rbp - 8]	      5048	gui.c	FUNCTION_84	CALL_2
0x4006885	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5048	gui.c	FUNCTION_84	CALL_2
0x4006889	          0x4989c8	                             mov r8, rcx	      5048	gui.c	FUNCTION_84	CALL_2
0x400688c	          0x4889d1	                            mov rcx, rdx	      5048	gui.c	FUNCTION_84	CALL_2
0x400688f	      0xba00000000	                              mov edx, 0	      5048	gui.c	FUNCTION_84	CALL_2
0x4006894	      0xbe00100000	                         mov esi, 0x1000	      5048	gui.c	FUNCTION_84	CALL_2
0x4006899	          0x4889c7	                            mov rdi, rax	      5048	gui.c	FUNCTION_84	CALL_2
0x400689c	      0xb800000000	                              mov eax, 0	      5048	gui.c	FUNCTION_84	CALL_2
0x40068a1	      0xe800000000	                          call 0x40068a6	      5048	gui.c	FUNCTION_84	CALL_2
0x40068a6	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      5049	gui.c	FUNCTION_84	IF_2	CALL_3
0x40068aa	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5049	gui.c	FUNCTION_84	IF_2	CALL_3
0x40068ae	          0x4889d1	                            mov rcx, rdx	      5049	gui.c	FUNCTION_84	IF_2	CALL_3
0x40068b1	      0xba00000000	                              mov edx, 0	      5049	gui.c	FUNCTION_84	IF_2	CALL_3
0x40068b6	      0xbe00000000	                              mov esi, 0	      5049	gui.c	FUNCTION_84	IF_2	CALL_3
0x40068bb	          0x4889c7	                            mov rdi, rax	      5049	gui.c	FUNCTION_84	IF_2	CALL_3
0x40068be	      0xe800000000	                          call 0x40068c3	      5049	gui.c	FUNCTION_84	IF_2	CALL_3
0x40068c3	            0x85c0	                           test eax, eax	      5049	gui.c	FUNCTION_84	IF_2	CALL_3
0x40068c5	            0x740b	                            je 0x40068d2	      5049	gui.c	FUNCTION_84	IF_2	CALL_3
0x40068c7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5050	gui.c	FUNCTION_84	IF_2
0x40068cb	           0xfb600	                   movzx eax, byte [rax]	      5050	gui.c	FUNCTION_84	IF_2
0x40068ce	            0x84c0	                             test al, al	      5050	gui.c	FUNCTION_84	IF_2
0x40068d0	            0x7507	                           jne 0x40068d9	      5050	gui.c	FUNCTION_84	IF_2
0x40068d2	      0xb800000000	                              mov eax, 0	      5051	gui.c	FUNCTION_84	IF_2
0x40068d7	            0xeb05	                           jmp 0x40068de	      5051	gui.c	FUNCTION_84	IF_2
0x40068d9	      0xb801000000	                              mov eax, 1	      5052	gui.c	FUNCTION_84
0x40068de	              0xc9	                                   leave	      5053	gui.c	FUNCTION_84
0x40068df	              0xc3	                                     ret	      5053	gui.c	FUNCTION_84
gui_delete_lines	IF,5:functions,0:ELSE,2:CALL,2:SWITCH,0:WHILE,0:FOR,0:DO,0	55
0x40032bb	              0x55	                                push rbp	      2867	gui.c	FUNCTION_43
0x40032bc	          0x4889e5	                            mov rbp, rsp	      2867	gui.c	FUNCTION_43
0x40032bf	        0x4883ec10	                           sub rsp, 0x10	      2867	gui.c	FUNCTION_43
0x40032c3	          0x897dfc	                mov dword [rbp - 4], edi	      2867	gui.c	FUNCTION_43
0x40032c6	          0x8975f8	                mov dword [rbp - 8], esi	      2867	gui.c	FUNCTION_43
0x40032c9	        0x837df800	                  cmp dword [rbp - 8], 0	      2868	gui.c	FUNCTION_43	IF_1
0x40032cd	     0xf8ea6000000	                           jle 0x4003379	      2868	gui.c	FUNCTION_43	IF_1
0x40032d3	          0x8b55fc	                mov edx, dword [rbp - 4]	      2871	gui.c	FUNCTION_43	IF_2
0x40032d6	          0x8b45f8	                mov eax, dword [rbp - 8]	      2871	gui.c	FUNCTION_43	IF_2
0x40032d9	             0x1c2	                            add edx, eax	      2871	gui.c	FUNCTION_43	IF_2
0x40032db	    0x8b0500000000	            mov eax, dword [0x040032e1] 	      2871	gui.c	FUNCTION_43	IF_2
0x40032e1	            0x39c2	                            cmp edx, eax	      2871	gui.c	FUNCTION_43	IF_2
0x40032e3	            0x7e1e	                           jle 0x4003303	      2871	gui.c	FUNCTION_43	IF_2
0x40032e5	    0x8b0d00000000	            mov ecx, dword [0x040032eb] 	      2873	gui.c	FUNCTION_43	IF_2	CALL_1
0x40032eb	    0x8b1500000000	            mov edx, dword [0x040032f1] 	      2873	gui.c	FUNCTION_43	IF_2	CALL_1
0x40032f1	    0x8b3500000000	            mov esi, dword [0x040032f7] 	      2873	gui.c	FUNCTION_43	IF_2	CALL_1
0x40032f7	          0x8b45fc	                mov eax, dword [rbp - 4]	      2873	gui.c	FUNCTION_43	IF_2	CALL_1
0x40032fa	            0x89c7	                            mov edi, eax	      2873	gui.c	FUNCTION_43	IF_2	CALL_1
0x40032fc	      0xe800000000	                          call 0x4003301	      2873	gui.c	FUNCTION_43	IF_2	CALL_1
0x4003301	            0xeb77	                           jmp 0x400337a	      2873	gui.c	FUNCTION_43	IF_2	CALL_1
0x4003303	          0x8b55f8	                mov edx, dword [rbp - 8]	      2877	gui.c	FUNCTION_43	ELSE_1	CALL_2
0x4003306	          0x8b45fc	                mov eax, dword [rbp - 4]	      2877	gui.c	FUNCTION_43	ELSE_1	CALL_2
0x4003309	            0x89d6	                            mov esi, edx	      2877	gui.c	FUNCTION_43	ELSE_1	CALL_2
0x400330b	            0x89c7	                            mov edi, eax	      2877	gui.c	FUNCTION_43	ELSE_1	CALL_2
0x400330d	      0xe800000000	                          call 0x4003312	      2877	gui.c	FUNCTION_43	ELSE_1	CALL_2
0x4003312	    0x8b0500000000	            mov eax, dword [0x04003318] 	      2881	gui.c	FUNCTION_43	ELSE_1	IF_3
0x4003318	          0x3b45fc	                cmp eax, dword [rbp - 4]	      2881	gui.c	FUNCTION_43	ELSE_1	IF_3
0x400331b	            0x7c5d	                            jl 0x400337a	      2881	gui.c	FUNCTION_43	ELSE_1	IF_3
0x400331d	    0x8b1500000000	            mov edx, dword [0x04003323] 	      2882	gui.c	FUNCTION_43	ELSE_1	IF_3
0x4003323	    0x8b0500000000	            mov eax, dword [0x04003329] 	      2882	gui.c	FUNCTION_43	ELSE_1	IF_3
0x4003329	            0x39c2	                            cmp edx, eax	      2882	gui.c	FUNCTION_43	ELSE_1	IF_3
0x400332b	            0x7c4d	                            jl 0x400337a	      2882	gui.c	FUNCTION_43	ELSE_1	IF_3
0x400332d	    0x8b1500000000	            mov edx, dword [0x04003333] 	      2883	gui.c	FUNCTION_43	ELSE_1	IF_3
0x4003333	    0x8b0500000000	            mov eax, dword [0x04003339] 	      2883	gui.c	FUNCTION_43	ELSE_1	IF_3
0x4003339	            0x39c2	                            cmp edx, eax	      2883	gui.c	FUNCTION_43	ELSE_1	IF_3
0x400333b	            0x7f3d	                            jg 0x400337a	      2883	gui.c	FUNCTION_43	ELSE_1	IF_3
0x400333d	    0x8b0500000000	            mov eax, dword [0x04003343] 	      2885	gui.c	FUNCTION_43	ELSE_1	IF_3	IF_4
0x4003343	          0x8b4dfc	                mov ecx, dword [rbp - 4]	      2885	gui.c	FUNCTION_43	ELSE_1	IF_3	IF_4
0x4003346	          0x8b55f8	                mov edx, dword [rbp - 8]	      2885	gui.c	FUNCTION_43	ELSE_1	IF_3	IF_4
0x4003349	             0x1ca	                            add edx, ecx	      2885	gui.c	FUNCTION_43	ELSE_1	IF_3	IF_4
0x400334b	            0x39d0	                            cmp eax, edx	      2885	gui.c	FUNCTION_43	ELSE_1	IF_3	IF_4
0x400334d	            0x7d09	                           jge 0x4003358	      2885	gui.c	FUNCTION_43	ELSE_1	IF_3	IF_4
0x400334f	    0xc60500000000	                mov byte [0x04003356], 0	      2886	gui.c	FUNCTION_43	ELSE_1	IF_3	IF_4
0x4003356	            0xeb22	                           jmp 0x400337a	      2886	gui.c	FUNCTION_43	ELSE_1	IF_3	IF_4
0x4003358	    0x8b1500000000	            mov edx, dword [0x0400335e] 	      2887	gui.c	FUNCTION_43	ELSE_1	IF_3	ELSE_2	IF_5
0x400335e	    0x8b0500000000	            mov eax, dword [0x04003364] 	      2887	gui.c	FUNCTION_43	ELSE_1	IF_3	ELSE_2	IF_5
0x4003364	            0x39c2	                            cmp edx, eax	      2887	gui.c	FUNCTION_43	ELSE_1	IF_3	ELSE_2	IF_5
0x4003366	            0x7f12	                            jg 0x400337a	      2887	gui.c	FUNCTION_43	ELSE_1	IF_3	ELSE_2	IF_5
0x4003368	    0x8b0500000000	            mov eax, dword [0x0400336e] 	      2888	gui.c	FUNCTION_43	ELSE_1	IF_3	ELSE_2	IF_5
0x400336e	          0x2b45f8	                sub eax, dword [rbp - 8]	      2888	gui.c	FUNCTION_43	ELSE_1	IF_3	ELSE_2	IF_5
0x4003371	    0x890500000000	            mov dword [0x04003377], eax 	      2888	gui.c	FUNCTION_43	ELSE_1	IF_3	ELSE_2	IF_5
0x4003377	            0xeb01	                           jmp 0x400337a	      2888	gui.c	FUNCTION_43	ELSE_1	IF_3	ELSE_2	IF_5
0x4003379	              0x90	                                     nop	      2869	gui.c	FUNCTION_43	IF_1
0x400337a	              0xc9	                                   leave	      2891	gui.c	FUNCTION_43
0x400337b	              0xc3	                                     ret	      2891	gui.c	FUNCTION_43
gui_get_lightness	IF,0:functions,0:ELSE,0:CALL,1:SWITCH,0:WHILE,0:FOR,0:DO,0	32
0x40060da	              0x55	                                push rbp	      4784	gui.c	FUNCTION_76
0x40060db	          0x4889e5	                            mov rbp, rsp	      4784	gui.c	FUNCTION_76
0x40060de	        0x4883ec20	                           sub rsp, 0x20	      4784	gui.c	FUNCTION_76
0x40060e2	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4784	gui.c	FUNCTION_76
0x40060e6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4785	gui.c	FUNCTION_76	CALL_1
0x40060ea	          0x4889c7	                            mov rdi, rax	      4785	gui.c	FUNCTION_76	CALL_1
0x40060ed	      0xe800000000	                          call 0x40060f2	      4785	gui.c	FUNCTION_76	CALL_1
0x40060f2	        0x488945f8	                mov qword [rbp - 8], rax	      4785	gui.c	FUNCTION_76	CALL_1
0x40060f6	        0x488b45f8	                mov rax, qword [rbp - 8]	      4787	gui.c	FUNCTION_76
0x40060fa	        0x48c1e810	                           shr rax, 0x10	      4787	gui.c	FUNCTION_76
0x40060fe	           0xfb6c0	                           movzx eax, al	      4787	gui.c	FUNCTION_76
0x4006101	    0x69d02b010000	                    imul edx, eax, 0x12b	      4787	gui.c	FUNCTION_76
0x4006107	        0x488b45f8	                mov rax, qword [rbp - 8]	      4788	gui.c	FUNCTION_76
0x400610b	        0x48c1e808	                              shr rax, 8	      4788	gui.c	FUNCTION_76
0x400610f	           0xfb6c0	                           movzx eax, al	      4787	gui.c	FUNCTION_76
0x4006112	    0x69c04b020000	                    imul eax, eax, 0x24b	      4787	gui.c	FUNCTION_76
0x4006118	             0x1c2	                            add edx, eax	      4787	gui.c	FUNCTION_76
0x400611a	        0x488b45f8	                mov rax, qword [rbp - 8]	      4787	gui.c	FUNCTION_76
0x400611e	           0xfb6c0	                           movzx eax, al	      4787	gui.c	FUNCTION_76
0x4006121	          0x6bc072	                     imul eax, eax, 0x72	      4787	gui.c	FUNCTION_76
0x4006124	             0x1d0	                            add eax, edx	      4787	gui.c	FUNCTION_76
0x4006126	            0x89c1	                            mov ecx, eax	      4787	gui.c	FUNCTION_76
0x4006128	      0xbad34d6210	                     mov edx, 0x10624dd3	      4787	gui.c	FUNCTION_76
0x400612d	            0x89c8	                            mov eax, ecx	      4787	gui.c	FUNCTION_76
0x400612f	            0xf7ea	                                imul edx	      4787	gui.c	FUNCTION_76
0x4006131	          0xc1fa06	                              sar edx, 6	      4787	gui.c	FUNCTION_76
0x4006134	            0x89c8	                            mov eax, ecx	      4787	gui.c	FUNCTION_76
0x4006136	          0xc1f81f	                           sar eax, 0x1f	      4787	gui.c	FUNCTION_76
0x4006139	            0x29c2	                            sub edx, eax	      4787	gui.c	FUNCTION_76
0x400613b	            0x89d0	                            mov eax, edx	      4787	gui.c	FUNCTION_76
0x400613d	              0xc9	                                   leave	      4790	gui.c	FUNCTION_76
0x400613e	              0xc3	                                     ret	      4790	gui.c	FUNCTION_76
gui_create_scrollbar	IF,0:functions,0:ELSE,0:CALL,1:SWITCH,0:WHILE,0:FOR,0:DO,0	42
0x4004b58	              0x55	                                push rbp	      3905	gui.c	FUNCTION_61
0x4004b59	          0x4889e5	                            mov rbp, rsp	      3905	gui.c	FUNCTION_61
0x4004b5c	        0x4883ec20	                           sub rsp, 0x20	      3905	gui.c	FUNCTION_61
0x4004b60	        0x48897df8	                mov qword [rbp - 8], rdi	      3905	gui.c	FUNCTION_61
0x4004b64	          0x8975f4	              mov dword [rbp - 0xc], esi	      3905	gui.c	FUNCTION_61
0x4004b67	        0x488955e8	             mov qword [rbp - 0x18], rdx	      3905	gui.c	FUNCTION_61
0x4004b6b	    0x8b0500000000	            mov eax, dword [0x04004b71] 	      3908	gui.c	FUNCTION_61
0x4004b71	          0x8d5001	                      lea edx, [rax + 1]	      3908	gui.c	FUNCTION_61
0x4004b74	    0x891500000000	            mov dword [0x04004b7a], edx 	      3908	gui.c	FUNCTION_61
0x4004b7a	          0x4863d0	                         movsxd rdx, eax	      3908	gui.c	FUNCTION_61
0x4004b7d	        0x488b45f8	                mov rax, qword [rbp - 8]	      3908	gui.c	FUNCTION_61
0x4004b81	          0x488910	                    mov qword [rax], rdx	      3908	gui.c	FUNCTION_61
0x4004b84	        0x488b45f8	                mov rax, qword [rbp - 8]	      3909	gui.c	FUNCTION_61
0x4004b88	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3909	gui.c	FUNCTION_61
0x4004b8c	        0x48895008	                mov qword [rax + 8], rdx	      3909	gui.c	FUNCTION_61
0x4004b90	        0x488b45f8	                mov rax, qword [rbp - 8]	      3910	gui.c	FUNCTION_61
0x4004b94	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      3910	gui.c	FUNCTION_61
0x4004b97	          0x895010	             mov dword [rax + 0x10], edx	      3910	gui.c	FUNCTION_61
0x4004b9a	        0x488b45f8	                mov rax, qword [rbp - 8]	      3911	gui.c	FUNCTION_61
0x4004b9e	    0x48c740180000	               mov qword [rax + 0x18], 0	      3911	gui.c	FUNCTION_61
0x4004ba6	        0x488b45f8	                mov rax, qword [rbp - 8]	      3915	gui.c	FUNCTION_61
0x4004baa	    0x48c740200100	               mov qword [rax + 0x20], 1	      3915	gui.c	FUNCTION_61
0x4004bb2	        0x488b45f8	                mov rax, qword [rbp - 8]	      3916	gui.c	FUNCTION_61
0x4004bb6	    0x48c740280100	               mov qword [rax + 0x28], 1	      3916	gui.c	FUNCTION_61
0x4004bbe	        0x488b45f8	                mov rax, qword [rbp - 8]	      3917	gui.c	FUNCTION_61
0x4004bc2	    0xc74030000000	               mov dword [rax + 0x30], 0	      3917	gui.c	FUNCTION_61
0x4004bc9	        0x488b45f8	                mov rax, qword [rbp - 8]	      3918	gui.c	FUNCTION_61
0x4004bcd	    0xc74034000000	               mov dword [rax + 0x34], 0	      3918	gui.c	FUNCTION_61
0x4004bd4	        0x488b45f8	                mov rax, qword [rbp - 8]	      3919	gui.c	FUNCTION_61
0x4004bd8	    0xc74038000000	               mov dword [rax + 0x38], 0	      3919	gui.c	FUNCTION_61
0x4004bdf	        0x488b45f8	                mov rax, qword [rbp - 8]	      3920	gui.c	FUNCTION_61
0x4004be3	    0xc7403c000000	               mov dword [rax + 0x3c], 0	      3920	gui.c	FUNCTION_61
0x4004bea	      0x48837de800	               cmp qword [rbp - 0x18], 0	      3921	gui.c	FUNCTION_61	CALL_1
0x4004bef	           0xf94c0	                                 sete al	      3921	gui.c	FUNCTION_61	CALL_1
0x4004bf2	           0xfb6d0	                           movzx edx, al	      3921	gui.c	FUNCTION_61	CALL_1
0x4004bf5	        0x488b45f8	                mov rax, qword [rbp - 8]	      3921	gui.c	FUNCTION_61	CALL_1
0x4004bf9	            0x89d6	                            mov esi, edx	      3921	gui.c	FUNCTION_61	CALL_1
0x4004bfb	          0x4889c7	                            mov rdi, rax	      3921	gui.c	FUNCTION_61	CALL_1
0x4004bfe	      0xe800000000	                          call 0x4004c03	      3921	gui.c	FUNCTION_61	CALL_1
0x4004c03	              0x90	                                     nop	      3922	gui.c	FUNCTION_61
0x4004c04	              0xc9	                                   leave	      3922	gui.c	FUNCTION_61
0x4004c05	              0xc3	                                     ret	      3922	gui.c	FUNCTION_61
gui_stop_highlight	IF,1:functions,0:ELSE,1:CALL,0:SWITCH,0:WHILE,0:FOR,0:DO,0	15
0x4001e23	              0x55	                                push rbp	      1722	gui.c	ELSE_1	FUNCTION_27
0x4001e24	          0x4889e5	                            mov rbp, rsp	      1722	gui.c	ELSE_1	FUNCTION_27
0x4001e27	          0x897dfc	                mov dword [rbp - 4], edi	      1722	gui.c	ELSE_1	FUNCTION_27
0x4001e2a	    0x817dfcff0000	               cmp dword [rbp - 4], 0xff	      1723	gui.c	ELSE_1	FUNCTION_27	IF_1
0x4001e31	            0x7e0c	                           jle 0x4001e3f	      1723	gui.c	ELSE_1	FUNCTION_27	IF_1
0x4001e33	    0xc70500000000	               mov dword [0x04001e3d], 0	      1724	gui.c	ELSE_1	FUNCTION_27	IF_1
0x4001e3d	            0xeb13	                           jmp 0x4001e52	      1727	gui.c	FUNCTION_27	ELSE_1
0x4001e3f	    0x8b0500000000	            mov eax, dword [0x04001e45] 	      1726	gui.c	FUNCTION_27
0x4001e45	          0x8b55fc	                mov edx, dword [rbp - 4]	      1726	gui.c	FUNCTION_27
0x4001e48	            0xf7d2	                                 not edx	      1726	gui.c	FUNCTION_27
0x4001e4a	            0x21d0	                            and eax, edx	      1726	gui.c	FUNCTION_27
0x4001e4c	    0x890500000000	            mov dword [0x04001e52], eax 	      1726	gui.c	FUNCTION_27
0x4001e52	              0x90	                                     nop	      1727	gui.c	FUNCTION_27	ELSE_1
0x4001e53	              0x5d	                                 pop rbp	      1727	gui.c	FUNCTION_27	ELSE_1
0x4001e54	              0xc3	                                     ret	      1727	gui.c	FUNCTION_27	ELSE_1
gui_xy2colrow	IF,0:functions,0:ELSE,0:CALL,5:SWITCH,0:WHILE,0:FOR,0:DO,0	37
0x4003e5a	              0x55	                                push rbp	      3395	gui.c	ELSE_9	FUNCTION_51
0x4003e5b	          0x4889e5	                            mov rbp, rsp	      3395	gui.c	ELSE_9	FUNCTION_51
0x4003e5e	        0x4883ec20	                           sub rsp, 0x20	      3395	gui.c	ELSE_9	FUNCTION_51
0x4003e62	          0x897dec	             mov dword [rbp - 0x14], edi	      3395	gui.c	ELSE_9	FUNCTION_51
0x4003e65	          0x8975e8	             mov dword [rbp - 0x18], esi	      3395	gui.c	ELSE_9	FUNCTION_51
0x4003e68	        0x488955e0	             mov qword [rbp - 0x20], rdx	      3395	gui.c	ELSE_9	FUNCTION_51
0x4003e6c	    0x8b0500000000	            mov eax, dword [0x04003e72] 	      3396	gui.c	ELSE_9	FUNCTION_51	CALL_2
0x4003e72	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      3396	gui.c	ELSE_9	FUNCTION_51	CALL_2
0x4003e75	            0x29c2	                            sub edx, eax	      3396	gui.c	ELSE_9	FUNCTION_51	CALL_2
0x4003e77	            0x89d0	                            mov eax, edx	      3396	gui.c	ELSE_9	FUNCTION_51	CALL_2
0x4003e79	    0x8b0d00000000	            mov ecx, dword [0x04003e7f] 	      3396	gui.c	ELSE_9	FUNCTION_51	CALL_2
0x4003e7f	              0x99	                                     cdq	      3396	gui.c	ELSE_9	FUNCTION_51	CALL_2
0x4003e80	            0xf7f9	                                idiv ecx	      3396	gui.c	ELSE_9	FUNCTION_51	CALL_2
0x4003e82	            0x89c7	                            mov edi, eax	      3396	gui.c	ELSE_9	FUNCTION_51	CALL_2
0x4003e84	      0xe800000000	                          call 0x4003e89	      3396	gui.c	ELSE_9	FUNCTION_51	CALL_2
0x4003e89	          0x8945f8	                mov dword [rbp - 8], eax	      3396	gui.c	ELSE_9	FUNCTION_51	CALL_2
0x4003e8c	    0x8b0500000000	            mov eax, dword [0x04003e92] 	      3397	gui.c	ELSE_9	FUNCTION_51	CALL_4
0x4003e92	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      3397	gui.c	ELSE_9	FUNCTION_51	CALL_4
0x4003e95	            0x29c2	                            sub edx, eax	      3397	gui.c	ELSE_9	FUNCTION_51	CALL_4
0x4003e97	            0x89d0	                            mov eax, edx	      3397	gui.c	ELSE_9	FUNCTION_51	CALL_4
0x4003e99	    0x8b0d00000000	            mov ecx, dword [0x04003e9f] 	      3397	gui.c	ELSE_9	FUNCTION_51	CALL_4
0x4003e9f	              0x99	                                     cdq	      3397	gui.c	ELSE_9	FUNCTION_51	CALL_4
0x4003ea0	            0xf7f9	                                idiv ecx	      3397	gui.c	ELSE_9	FUNCTION_51	CALL_4
0x4003ea2	            0x89c7	                            mov edi, eax	      3397	gui.c	ELSE_9	FUNCTION_51	CALL_4
0x4003ea4	      0xe800000000	                          call 0x4003ea9	      3397	gui.c	ELSE_9	FUNCTION_51	CALL_4
0x4003ea9	          0x8945fc	                mov dword [rbp - 4], eax	      3397	gui.c	ELSE_9	FUNCTION_51	CALL_4
0x4003eac	          0x8b55fc	                mov edx, dword [rbp - 4]	      3400	gui.c	ELSE_9	FUNCTION_51	CALL_5
0x4003eaf	          0x8b45f8	                mov eax, dword [rbp - 8]	      3400	gui.c	ELSE_9	FUNCTION_51	CALL_5
0x4003eb2	            0x89d6	                            mov esi, edx	      3400	gui.c	ELSE_9	FUNCTION_51	CALL_5
0x4003eb4	            0x89c7	                            mov edi, eax	      3400	gui.c	ELSE_9	FUNCTION_51	CALL_5
0x4003eb6	      0xe800000000	                          call 0x4003ebb	      3400	gui.c	ELSE_9	FUNCTION_51	CALL_5
0x4003ebb	            0x89c2	                            mov edx, eax	      3400	gui.c	ELSE_9	FUNCTION_51	CALL_5
0x4003ebd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3400	gui.c	ELSE_9	FUNCTION_51	CALL_5
0x4003ec1	            0x8910	                    mov dword [rax], edx	      3400	gui.c	ELSE_9	FUNCTION_51	CALL_5
0x4003ec3	          0x8b45fc	                mov eax, dword [rbp - 4]	      3404	gui.c	ELSE_9	FUNCTION_51
0x4003ec6	              0xc9	                                   leave	      3405	gui.c	ELSE_9	FUNCTION_51
0x4003ec7	              0xc3	                                     ret	      3405	gui.c	ELSE_9	FUNCTION_51
gui_prepare	IF,0:functions,0:ELSE,0:CALL,1:SWITCH,0:WHILE,0:FOR,0:DO,0	15
0x4000432	              0x55	                                push rbp	       352	gui.c	FUNCTION_5
0x4000433	          0x4889e5	                            mov rbp, rsp	       352	gui.c	FUNCTION_5
0x4000436	        0x4883ec10	                           sub rsp, 0x10	       352	gui.c	FUNCTION_5
0x400043a	        0x48897df8	                mov qword [rbp - 8], rdi	       352	gui.c	FUNCTION_5
0x400043e	        0x488975f0	             mov qword [rbp - 0x10], rsi	       352	gui.c	FUNCTION_5
0x4000442	    0xc70500000000	               mov dword [0x0400044c], 0	       353	gui.c	FUNCTION_5
0x400044c	    0xc70500000000	               mov dword [0x04000456], 0	       354	gui.c	FUNCTION_5
0x4000456	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       355	gui.c	FUNCTION_5	CALL_1
0x400045a	        0x488b45f8	                mov rax, qword [rbp - 8]	       355	gui.c	FUNCTION_5	CALL_1
0x400045e	          0x4889d6	                            mov rsi, rdx	       355	gui.c	FUNCTION_5	CALL_1
0x4000461	          0x4889c7	                            mov rdi, rax	       355	gui.c	FUNCTION_5	CALL_1
0x4000464	      0xe800000000	                          call 0x4000469	       355	gui.c	FUNCTION_5	CALL_1
0x4000469	              0x90	                                     nop	       356	gui.c	FUNCTION_5
0x400046a	              0xc9	                                   leave	       356	gui.c	FUNCTION_5
0x400046b	              0xc3	                                     ret	       356	gui.c	FUNCTION_5
gui_wait_for_chars	IF,7:functions,0:ELSE,1:CALL,16:SWITCH,0:WHILE,0:FOR,0:DO,0	86
0x400348f	              0x55	                                push rbp	      2957	gui.c	FUNCTION_47
0x4003490	          0x4889e5	                            mov rbp, rsp	      2957	gui.c	FUNCTION_47
0x4003493	        0x4883ec40	                           sub rsp, 0x40	      2957	gui.c	FUNCTION_47
0x4003497	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      2957	gui.c	FUNCTION_47
0x400349b	          0x8975c4	             mov dword [rbp - 0x3c], esi	      2957	gui.c	FUNCTION_47
0x400349e	    0x64488b042528	                mov rax, qword fs:[0x28]	      2957	gui.c	FUNCTION_47
0x40034a7	        0x488945f8	                mov qword [rbp - 8], rax	      2957	gui.c	FUNCTION_47
0x40034ab	            0x31c0	                            xor eax, eax	      2957	gui.c	FUNCTION_47
0x40034ad	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      2968	gui.c	FUNCTION_47	IF_1
0x40034b2	            0x740a	                            je 0x40034be	      2968	gui.c	FUNCTION_47	IF_1
0x40034b4	      0xbf00000000	                              mov edi, 0	      2969	gui.c	FUNCTION_47	CALL_1
0x40034b9	      0xe800000000	                          call 0x40034be	      2969	gui.c	FUNCTION_47	CALL_1
0x40034be	      0xe800000000	                          call 0x40034c3	      2972	gui.c	FUNCTION_47	CALL_2
0x40034c3	      0xe800000000	                          call 0x40034c8	      2973	gui.c	FUNCTION_47	IF_2	CALL_3
0x40034c8	            0x85c0	                           test eax, eax	      2973	gui.c	FUNCTION_47	IF_2	CALL_3
0x40034ca	            0x740a	                            je 0x40034d6	      2973	gui.c	FUNCTION_47	IF_2	CALL_3
0x40034cc	      0xb801000000	                              mov eax, 1	      2974	gui.c	FUNCTION_47	IF_2
0x40034d1	      0xe902010000	                           jmp 0x40035d8	      2974	gui.c	FUNCTION_47	IF_2
0x40034d6	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      2975	gui.c	FUNCTION_47	IF_3
0x40034db	            0x750a	                           jne 0x40034e7	      2975	gui.c	FUNCTION_47	IF_3
0x40034dd	      0xb800000000	                              mov eax, 0	      2976	gui.c	FUNCTION_47	IF_3
0x40034e2	      0xe9f1000000	                           jmp 0x40035d8	      2976	gui.c	FUNCTION_47	IF_3
0x40034e7	      0xe800000000	                          call 0x40034ec	      2979	gui.c	FUNCTION_47	CALL_4
0x40034ec	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      2981	gui.c	FUNCTION_47	IF_4
0x40034f1	            0x7e26	                           jle 0x4003519	      2981	gui.c	FUNCTION_47	IF_4
0x40034f3	      0xe800000000	                          call 0x40034f8	      2985	gui.c	FUNCTION_47	IF_4	CALL_5
0x40034f8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2986	gui.c	FUNCTION_47	IF_4	CALL_6
0x40034fc	          0x4889c7	                            mov rdi, rax	      2986	gui.c	FUNCTION_47	IF_4	CALL_6
0x40034ff	      0xe862ffffff	    call sym.gui_wait_for_chars_or_timer	      2986	gui.c	FUNCTION_47	IF_4	CALL_6
0x4003504	          0x8945dc	             mov dword [rbp - 0x24], eax	      2986	gui.c	FUNCTION_47	IF_4	CALL_6
0x4003507	      0xbf01000000	                              mov edi, 1	      2987	gui.c	FUNCTION_47	IF_4	CALL_7
0x400350c	      0xe800000000	                          call 0x4003511	      2987	gui.c	FUNCTION_47	IF_4	CALL_7
0x4003511	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2988	gui.c	FUNCTION_47	IF_4
0x4003514	      0xe9bf000000	                           jmp 0x40035d8	      2988	gui.c	FUNCTION_47	IF_4
0x4003519	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2992	gui.c	FUNCTION_47	CALL_8
0x400351d	      0xbe00000000	                              mov esi, 0	      2992	gui.c	FUNCTION_47	CALL_8
0x4003522	          0x4889c7	                            mov rdi, rax	      2992	gui.c	FUNCTION_47	CALL_8
0x4003525	      0xe800000000	                          call 0x400352a	      2992	gui.c	FUNCTION_47	CALL_8
0x400352a	      0xe800000000	                          call 0x400352f	      2998	gui.c	FUNCTION_47	CALL_9
0x400352f	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      3000	gui.c	FUNCTION_47
0x4003536	    0x488b05000000	            mov rax, qword [0x0400353d] 	      3006	gui.c	FUNCTION_47	IF_5	CALL_10
0x400353d	          0x4889c7	                            mov rdi, rax	      3006	gui.c	FUNCTION_47	IF_5	CALL_10
0x4003540	      0xe821ffffff	    call sym.gui_wait_for_chars_or_timer	      3006	gui.c	FUNCTION_47	IF_5	CALL_10
0x4003545	          0x83f801	                              cmp eax, 1	      3006	gui.c	FUNCTION_47	IF_5	CALL_10
0x4003548	            0x7509	                           jne 0x4003553	      3006	gui.c	FUNCTION_47	IF_5	CALL_10
0x400354a	    0xc745dc010000	               mov dword [rbp - 0x24], 1	      3007	gui.c	FUNCTION_47	IF_5
0x4003551	            0xeb53	                           jmp 0x40035a6	      3007	gui.c	FUNCTION_47	IF_5
0x4003553	      0xe800000000	                          call 0x4003558	      3008	gui.c	FUNCTION_47	ELSE_1	IF_6	CALL_11
0x4003558	            0x85c0	                           test eax, eax	      3008	gui.c	FUNCTION_47	ELSE_1	IF_6	CALL_11
0x400355a	            0x744a	                            je 0x40035a6	      3008	gui.c	FUNCTION_47	ELSE_1	IF_6	CALL_11
0x400355c	        0x488d45e0	                   lea rax, [rbp - 0x20]	      3010	gui.c	FUNCTION_47	ELSE_1	IF_6	CALL_12
0x4003560	          0x4889c7	                            mov rdi, rax	      3010	gui.c	FUNCTION_47	ELSE_1	IF_6	CALL_12
0x4003563	      0xe800000000	                          call 0x4003568	      3010	gui.c	FUNCTION_47	ELSE_1	IF_6	CALL_12
0x4003568	          0x4889c2	                            mov rdx, rax	      3010	gui.c	FUNCTION_47	ELSE_1	IF_6	CALL_12
0x400356b	    0x488b05000000	            mov rax, qword [0x04003572] 	      3010	gui.c	FUNCTION_47	ELSE_1	IF_6	CALL_12
0x4003572	          0x4839c2	                            cmp rdx, rax	      3010	gui.c	FUNCTION_47	ELSE_1	IF_6	CALL_12
0x4003575	            0x7c2f	                            jl 0x40035a6	      3010	gui.c	FUNCTION_47	ELSE_1	IF_6	CALL_12
0x4003577	    0x8b0500000000	            mov eax, dword [0x0400357d] 	      3012	gui.c	FUNCTION_47	ELSE_1	IF_6
0x400357d	          0x3b45c4	             cmp eax, dword [rbp - 0x3c]	      3012	gui.c	FUNCTION_47	ELSE_1	IF_6
0x4003580	            0x7524	                           jne 0x40035a6	      3012	gui.c	FUNCTION_47	ELSE_1	IF_6
0x4003582	        0xc645f09b	            mov byte [rbp - 0x10], 0x9b 	      3017	gui.c	FUNCTION_47	ELSE_1	IF_6
0x4003586	        0xc645f1fd	              mov byte [rbp - 0xf], 0xfd	      3018	gui.c	FUNCTION_47	ELSE_1	IF_6
0x400358a	        0xc645f260	              mov byte [rbp - 0xe], 0x60	      3019	gui.c	FUNCTION_47	ELSE_1	IF_6
0x400358e	        0x488d45f0	                   lea rax, [rbp - 0x10]	      3020	gui.c	FUNCTION_47	ELSE_1	IF_6	CALL_13
0x4003592	      0xbe03000000	                              mov esi, 3	      3020	gui.c	FUNCTION_47	ELSE_1	IF_6	CALL_13
0x4003597	          0x4889c7	                            mov rdi, rax	      3020	gui.c	FUNCTION_47	ELSE_1	IF_6	CALL_13
0x400359a	      0xe800000000	                          call 0x400359f	      3020	gui.c	FUNCTION_47	ELSE_1	IF_6	CALL_13
0x400359f	    0xc745dc010000	               mov dword [rbp - 0x24], 1	      3022	gui.c	FUNCTION_47	ELSE_1	IF_6
0x40035a6	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      3025	gui.c	FUNCTION_47	IF_7
0x40035aa	            0x751f	                           jne 0x40035cb	      3025	gui.c	FUNCTION_47	IF_7
0x40035ac	    0x8b0500000000	            mov eax, dword [0x040035b2] 	      3025	gui.c	FUNCTION_47	IF_7
0x40035b2	          0x3b45c4	             cmp eax, dword [rbp - 0x3c]	      3025	gui.c	FUNCTION_47	IF_7
0x40035b5	            0x7514	                           jne 0x40035cb	      3025	gui.c	FUNCTION_47	IF_7
0x40035b7	      0xe800000000	                          call 0x40035bc	      3028	gui.c	FUNCTION_47	IF_7	CALL_14
0x40035bc	    0x48c7c7ffffff	             mov rdi, 0xffffffffffffffff	      3029	gui.c	FUNCTION_47	IF_7	CALL_15
0x40035c3	      0xe89efeffff	    call sym.gui_wait_for_chars_or_timer	      3029	gui.c	FUNCTION_47	IF_7	CALL_15
0x40035c8	          0x8945dc	             mov dword [rbp - 0x24], eax	      3029	gui.c	FUNCTION_47	IF_7	CALL_15
0x40035cb	      0xbf01000000	                              mov edi, 1	      3032	gui.c	FUNCTION_47	CALL_16
0x40035d0	      0xe800000000	                          call 0x40035d5	      3032	gui.c	FUNCTION_47	CALL_16
0x40035d5	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3033	gui.c	FUNCTION_47
0x40035d8	        0x488b4df8	                mov rcx, qword [rbp - 8]	      3034	gui.c	FUNCTION_47
0x40035dc	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3034	gui.c	FUNCTION_47
0x40035e5	            0x7405	                            je 0x40035ec	      3034	gui.c	FUNCTION_47
0x40035e7	      0xe800000000	                          call 0x40035ec	      3034	gui.c	FUNCTION_47
0x40035ec	              0xc9	                                   leave	      3034	gui.c	FUNCTION_47
0x40035ed	              0xc3	                                     ret	      3034	gui.c	FUNCTION_47
gui_update_tabline	IF,4:functions,0:ELSE,0:CALL,6:SWITCH,0:WHILE,0:FOR,0:DO,0	42
0x400444c	              0x55	                                push rbp	      3705	gui.c	FUNCTION_56
0x400444d	          0x4889e5	                            mov rbp, rsp	      3705	gui.c	FUNCTION_56
0x4004450	        0x4883ec10	                           sub rsp, 0x10	      3705	gui.c	FUNCTION_56
0x4004454	      0xe8b0ffffff	                call sym.gui_has_tabline	      3706	gui.c	FUNCTION_56	CALL_1
0x4004459	          0x8945f8	                mov dword [rbp - 8], eax	      3706	gui.c	FUNCTION_56	CALL_1
0x400445c	      0xe800000000	                          call 0x4004461	      3707	gui.c	FUNCTION_56	CALL_2
0x4004461	          0x8945fc	                mov dword [rbp - 4], eax	      3707	gui.c	FUNCTION_56	CALL_2
0x4004464	    0x8b0500000000	            mov eax, dword [0x0400446a] 	      3709	gui.c	FUNCTION_56	IF_1
0x400446a	            0x85c0	                           test eax, eax	      3709	gui.c	FUNCTION_56	IF_1
0x400446c	            0x7560	                           jne 0x40044ce	      3709	gui.c	FUNCTION_56	IF_1
0x400446e	    0x8b0500000000	            mov eax, dword [0x04004474] 	      3709	gui.c	FUNCTION_56	IF_1
0x4004474	            0x85c0	                           test eax, eax	      3709	gui.c	FUNCTION_56	IF_1
0x4004476	            0x7556	                           jne 0x40044ce	      3709	gui.c	FUNCTION_56	IF_1
0x4004478	      0xe800000000	                          call 0x400447d	      3713	gui.c	FUNCTION_56	IF_1	CALL_3
0x400447d	        0x837df800	                  cmp dword [rbp - 8], 0	      3715	gui.c	FUNCTION_56	IF_1	IF_2
0x4004481	           0xf94c2	                                 sete dl	      3715	gui.c	FUNCTION_56	IF_1	IF_2
0x4004484	        0x837dfc00	                  cmp dword [rbp - 4], 0	      3715	gui.c	FUNCTION_56	IF_1	IF_2
0x4004488	           0xf94c0	                                 sete al	      3715	gui.c	FUNCTION_56	IF_1	IF_2
0x400448b	            0x31d0	                            xor eax, edx	      3715	gui.c	FUNCTION_56	IF_1	IF_2
0x400448d	            0x84c0	                             test al, al	      3715	gui.c	FUNCTION_56	IF_1	IF_2
0x400448f	            0x740a	                            je 0x400449b	      3715	gui.c	FUNCTION_56	IF_1	IF_2
0x4004491	          0x8b45f8	                mov eax, dword [rbp - 8]	      3716	gui.c	FUNCTION_56	IF_1	CALL_4
0x4004494	            0x89c7	                            mov edi, eax	      3716	gui.c	FUNCTION_56	IF_1	CALL_4
0x4004496	      0xe800000000	                          call 0x400449b	      3716	gui.c	FUNCTION_56	IF_1	CALL_4
0x400449b	        0x837df800	                  cmp dword [rbp - 8], 0	      3717	gui.c	FUNCTION_56	IF_1	IF_3
0x400449f	            0x7405	                            je 0x40044a6	      3717	gui.c	FUNCTION_56	IF_1	IF_3
0x40044a1	      0xe800000000	                          call 0x40044a6	      3718	gui.c	FUNCTION_56	IF_1	CALL_5
0x40044a6	        0x837df800	                  cmp dword [rbp - 8], 0	      3722	gui.c	FUNCTION_56	IF_1	IF_4
0x40044aa	           0xf94c2	                                 sete dl	      3722	gui.c	FUNCTION_56	IF_1	IF_4
0x40044ad	        0x837dfc00	                  cmp dword [rbp - 4], 0	      3722	gui.c	FUNCTION_56	IF_1	IF_4
0x40044b1	           0xf94c0	                                 sete al	      3722	gui.c	FUNCTION_56	IF_1	IF_4
0x40044b4	            0x31d0	                            xor eax, edx	      3722	gui.c	FUNCTION_56	IF_1	IF_4
0x40044b6	            0x84c0	                             test al, al	      3722	gui.c	FUNCTION_56	IF_1	IF_4
0x40044b8	            0x7414	                            je 0x40044ce	      3722	gui.c	FUNCTION_56	IF_1	IF_4
0x40044ba	          0x8b45f8	                mov eax, dword [rbp - 8]	      3723	gui.c	FUNCTION_56	IF_1	CALL_6
0x40044bd	      0xba01000000	                              mov edx, 1	      3723	gui.c	FUNCTION_56	IF_1	CALL_6
0x40044c2	            0x89c6	                            mov esi, eax	      3723	gui.c	FUNCTION_56	IF_1	CALL_6
0x40044c4	      0xbf00000000	                              mov edi, 0	      3723	gui.c	FUNCTION_56	IF_1	CALL_6
0x40044c9	      0xe800000000	                          call 0x40044ce	      3723	gui.c	FUNCTION_56	IF_1	CALL_6
0x40044ce	              0x90	                                     nop	      3725	gui.c	FUNCTION_56
0x40044cf	              0xc9	                                   leave	      3725	gui.c	FUNCTION_56
0x40044d0	              0xc3	                                     ret	      3725	gui.c	FUNCTION_56
get_tabline_label	IF,8:functions,0:ELSE,1:CALL,16:SWITCH,0:WHILE,0:FOR,1:DO,0	251
0x40044d1	              0x55	                                push rbp	      3734	gui.c	FUNCTION_57
0x40044d2	          0x4889e5	                            mov rbp, rsp	      3734	gui.c	FUNCTION_57
0x40044d5	            0x4155	                                push r13	      3734	gui.c	FUNCTION_57
0x40044d7	            0x4154	                                push r12	      3734	gui.c	FUNCTION_57
0x40044d9	              0x53	                                push rbx	      3734	gui.c	FUNCTION_57
0x40044da	    0x4881ec581000	                         sub rsp, 0x1058	      3734	gui.c	FUNCTION_57
0x40044e1	    0x4889bd98efff	           mov qword [rbp - 0x1068], rdi	      3734	gui.c	FUNCTION_57
0x40044e8	    0x89b594efffff	           mov dword [rbp - 0x106c], esi	      3734	gui.c	FUNCTION_57
0x40044ee	    0x64488b042528	                mov rax, qword fs:[0x28]	      3734	gui.c	FUNCTION_57
0x40044f7	        0x488945d8	             mov qword [rbp - 0x28], rax	      3734	gui.c	FUNCTION_57
0x40044fb	            0x31c0	                            xor eax, eax	      3734	gui.c	FUNCTION_57
0x40044fd	    0xc785a0efffff	             mov dword [rbp - 0x1060], 0	      3735	gui.c	FUNCTION_57
0x4004507	    0x83bd94efffff	             cmp dword [rbp - 0x106c], 0	      3742	gui.c	FUNCTION_57
0x400450e	            0x7407	                            je 0x4004517	      3742	gui.c	FUNCTION_57
0x4004510	      0xb800000000	                              mov eax, 0	      3742	gui.c	FUNCTION_57
0x4004515	            0xeb05	                           jmp 0x400451c	      3742	gui.c	FUNCTION_57
0x4004517	      0xb800000000	                              mov eax, 0	      3742	gui.c	FUNCTION_57
0x400451c	    0x488985b8efff	           mov qword [rbp - 0x1048], rax	      3742	gui.c	FUNCTION_57
0x4004523	    0x488b85b8efff	           mov rax, qword [rbp - 0x1048]	      3743	gui.c	FUNCTION_57	IF_1
0x400452a	          0x488b00	                    mov rax, qword [rax]	      3743	gui.c	FUNCTION_57	IF_1
0x400452d	           0xfb600	                   movzx eax, byte [rax]	      3743	gui.c	FUNCTION_57	IF_1
0x4004530	            0x84c0	                             test al, al	      3743	gui.c	FUNCTION_57	IF_1
0x4004532	     0xf843c020000	                            je 0x4004774	      3743	gui.c	FUNCTION_57	IF_1
0x4004538	    0xc785a8efffff	             mov dword [rbp - 0x1058], 0	      3745	gui.c	FUNCTION_57	IF_1
0x4004542	    0x8b0500000000	            mov eax, dword [0x04004548] 	      3746	gui.c	FUNCTION_57	IF_1
0x4004548	    0x8985acefffff	           mov dword [rbp - 0x1054], eax	      3746	gui.c	FUNCTION_57	IF_1
0x400454e	    0x83bd94efffff	             cmp dword [rbp - 0x106c], 0	      3749	gui.c	FUNCTION_57	IF_1
0x4004555	            0x7407	                            je 0x400455e	      3749	gui.c	FUNCTION_57	IF_1
0x4004557	      0xb800000000	                              mov eax, 0	      3749	gui.c	FUNCTION_57	IF_1
0x400455c	            0xeb05	                           jmp 0x4004563	      3749	gui.c	FUNCTION_57	IF_1
0x400455e	      0xb800000000	                              mov eax, 0	      3749	gui.c	FUNCTION_57	IF_1
0x4004563	    0x488985c0efff	           mov qword [rbp - 0x1040], rax	      3749	gui.c	FUNCTION_57	IF_1
0x400456a	    0xc70500000000	               mov dword [0x04004574], 0	      3752	gui.c	FUNCTION_57	IF_1
0x4004574	    0x488b8598efff	           mov rax, qword [rbp - 0x1068]	      3754	gui.c	FUNCTION_57	IF_1	CALL_1
0x400457b	          0x4889c7	                            mov rdi, rax	      3754	gui.c	FUNCTION_57	IF_1	CALL_1
0x400457e	      0xe800000000	                          call 0x4004583	      3754	gui.c	FUNCTION_57	IF_1	CALL_1
0x4004583	            0x4898	                                    cdqe	      3754	gui.c	FUNCTION_57	IF_1	CALL_1
0x4004585	    0x488905000000	            mov qword [0x0400458c], rax 	      3754	gui.c	FUNCTION_57	IF_1	CALL_1
0x400458c	    0x488b05000000	            mov rax, qword [0x04004593] 	      3756	gui.c	FUNCTION_57	IF_1	CALL_2
0x4004593	          0x4889c6	                            mov rsi, rax	      3756	gui.c	FUNCTION_57	IF_1	CALL_2
0x4004596	      0xbf09000000	                              mov edi, 9	      3756	gui.c	FUNCTION_57	IF_1	CALL_2
0x400459b	      0xe800000000	                          call 0x40045a0	      3756	gui.c	FUNCTION_57	IF_1	CALL_2
0x40045a0	    0x488b85c0efff	           mov rax, qword [rbp - 0x1040]	      3757	gui.c	FUNCTION_57	IF_1	CALL_3
0x40045a7	      0xbe00000000	                              mov esi, 0	      3757	gui.c	FUNCTION_57	IF_1	CALL_3
0x40045ac	          0x4889c7	                            mov rdi, rax	      3757	gui.c	FUNCTION_57	IF_1	CALL_3
0x40045af	      0xe800000000	                          call 0x40045b4	      3757	gui.c	FUNCTION_57	IF_1	CALL_3
0x40045b4	    0x8985a8efffff	           mov dword [rbp - 0x1058], eax	      3757	gui.c	FUNCTION_57	IF_1	CALL_3
0x40045ba	    0x488b05000000	            mov rax, qword [0x040045c1] 	      3760	gui.c	FUNCTION_57	IF_1
0x40045c1	    0x488b15000000	            mov rdx, qword [0x040045c8] 	      3760	gui.c	FUNCTION_57	IF_1
0x40045c8	        0x48895020	             mov qword [rax + 0x20], rdx	      3760	gui.c	FUNCTION_57	IF_1
0x40045cc	    0x488b05000000	            mov rax, qword [0x040045d3] 	      3761	gui.c	FUNCTION_57	IF_1
0x40045d3	    0x488b15000000	            mov rdx, qword [0x040045da] 	      3761	gui.c	FUNCTION_57	IF_1
0x40045da	        0x48895028	             mov qword [rax + 0x28], rdx	      3761	gui.c	FUNCTION_57	IF_1
0x40045de	    0x488b05000000	            mov rax, qword [0x040045e5] 	      3762	gui.c	FUNCTION_57	IF_1
0x40045e5	    0x488b15000000	            mov rdx, qword [0x040045ec] 	      3762	gui.c	FUNCTION_57	IF_1
0x40045ec	        0x48895010	             mov qword [rax + 0x10], rdx	      3762	gui.c	FUNCTION_57	IF_1
0x40045f0	    0x488b05000000	            mov rax, qword [0x040045f7] 	      3763	gui.c	FUNCTION_57	IF_1
0x40045f7	    0x488985c8efff	           mov qword [rbp - 0x1038], rax	      3763	gui.c	FUNCTION_57	IF_1
0x40045fe	    0x488b8598efff	           mov rax, qword [rbp - 0x1068]	      3764	gui.c	FUNCTION_57	IF_1
0x4004605	    0x488905000000	            mov qword [0x0400460c], rax 	      3764	gui.c	FUNCTION_57	IF_1
0x400460c	    0x488b05000000	            mov rax, qword [0x04004613] 	      3765	gui.c	FUNCTION_57	IF_1
0x4004613	        0x488b4008	                mov rax, qword [rax + 8]	      3765	gui.c	FUNCTION_57	IF_1
0x4004617	    0x488905000000	            mov qword [0x0400461e], rax 	      3765	gui.c	FUNCTION_57	IF_1
0x400461e	    0x488b05000000	            mov rax, qword [0x04004625] 	      3766	gui.c	FUNCTION_57	IF_1
0x4004625	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3766	gui.c	FUNCTION_57	IF_1
0x4004629	    0x488905000000	            mov qword [0x04004630], rax 	      3766	gui.c	FUNCTION_57	IF_1
0x4004630	    0x488b05000000	            mov rax, qword [0x04004637] 	      3767	gui.c	FUNCTION_57	IF_1
0x4004637	        0x488b4028	            mov rax, qword [rax + 0x28] 	      3767	gui.c	FUNCTION_57	IF_1
0x400463b	    0x488905000000	            mov qword [0x04004642], rax 	      3767	gui.c	FUNCTION_57	IF_1
0x4004642	    0x488b05000000	            mov rax, qword [0x04004649] 	      3768	gui.c	FUNCTION_57	IF_1
0x4004649	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3768	gui.c	FUNCTION_57	IF_1
0x400464d	    0x488905000000	            mov qword [0x04004654], rax 	      3768	gui.c	FUNCTION_57	IF_1
0x4004654	    0x488b05000000	            mov rax, qword [0x0400465b] 	      3769	gui.c	FUNCTION_57	IF_1
0x400465b	        0x488b4008	                mov rax, qword [rax + 8]	      3769	gui.c	FUNCTION_57	IF_1
0x400465f	    0x488905000000	            mov qword [0x04004666], rax 	      3769	gui.c	FUNCTION_57	IF_1
0x4004666	    0x488b05000000	            mov rax, qword [0x0400466d] 	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x400466d	            0x89c7	                            mov edi, eax	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x400466f	    0x488b85b8efff	           mov rax, qword [rbp - 0x1048]	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x4004676	          0x488b10	                    mov rdx, qword [rax]	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x4004679	    0x488b05000000	            mov rax, qword [0x04004680] 	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x4004680	    0x8b8da8efffff	           mov ecx, dword [rbp - 0x1058]	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x4004686	    0x488db5d0efff	                 lea rsi, [rbp - 0x1030]	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x400468d	        0x4883ec08	                              sub rsp, 8	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x4004691	            0x6a00	                                  push 0	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x4004693	            0x6a00	                                  push 0	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x4004695	              0x57	                                push rdi	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x4004696	    0x41b900000000	                              mov r9d, 0	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x400469c	          0x4189c8	                            mov r8d, ecx	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x400469f	          0x4889d1	                            mov rcx, rdx	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x40046a2	      0xba00100000	                         mov edx, 0x1000	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x40046a7	          0x4889c7	                            mov rdi, rax	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x40046aa	      0xe800000000	                          call 0x40046af	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x40046af	        0x4883c420	                           add rsp, 0x20	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x40046b3	    0x488b05000000	            mov rax, qword [0x040046ba] 	      3774	gui.c	FUNCTION_57	IF_1	CALL_5
0x40046ba	    0x488d95d0efff	                 lea rdx, [rbp - 0x1030]	      3774	gui.c	FUNCTION_57	IF_1	CALL_5
0x40046c1	          0x4889d6	                            mov rsi, rdx	      3774	gui.c	FUNCTION_57	IF_1	CALL_5
0x40046c4	          0x4889c7	                            mov rdi, rax	      3774	gui.c	FUNCTION_57	IF_1	CALL_5
0x40046c7	      0xe800000000	                          call 0x40046cc	      3774	gui.c	FUNCTION_57	IF_1	CALL_5
0x40046cc	    0x488b85c8efff	           mov rax, qword [rbp - 0x1038]	      3777	gui.c	FUNCTION_57	IF_1
0x40046d3	    0x488905000000	            mov qword [0x040046da], rax 	      3777	gui.c	FUNCTION_57	IF_1
0x40046da	    0x488b05000000	            mov rax, qword [0x040046e1] 	      3778	gui.c	FUNCTION_57	IF_1
0x40046e1	        0x488b4008	                mov rax, qword [rax + 8]	      3778	gui.c	FUNCTION_57	IF_1
0x40046e5	    0x488905000000	            mov qword [0x040046ec], rax 	      3778	gui.c	FUNCTION_57	IF_1
0x40046ec	    0x488b05000000	            mov rax, qword [0x040046f3] 	      3779	gui.c	FUNCTION_57	IF_1
0x40046f3	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3779	gui.c	FUNCTION_57	IF_1
0x40046f7	    0x488905000000	            mov qword [0x040046fe], rax 	      3779	gui.c	FUNCTION_57	IF_1
0x40046fe	    0x488b05000000	            mov rax, qword [0x04004705] 	      3780	gui.c	FUNCTION_57	IF_1
0x4004705	        0x488b4028	            mov rax, qword [rax + 0x28] 	      3780	gui.c	FUNCTION_57	IF_1
0x4004709	    0x488905000000	            mov qword [0x04004710], rax 	      3780	gui.c	FUNCTION_57	IF_1
0x4004710	    0x488b05000000	            mov rax, qword [0x04004717] 	      3781	gui.c	FUNCTION_57	IF_1
0x4004717	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3781	gui.c	FUNCTION_57	IF_1
0x400471b	    0x488905000000	            mov qword [0x04004722], rax 	      3781	gui.c	FUNCTION_57	IF_1
0x4004722	    0x488b05000000	            mov rax, qword [0x04004729] 	      3782	gui.c	FUNCTION_57	IF_1
0x4004729	        0x488b4008	                mov rax, qword [rax + 8]	      3782	gui.c	FUNCTION_57	IF_1
0x400472d	    0x488905000000	            mov qword [0x04004734], rax 	      3782	gui.c	FUNCTION_57	IF_1
0x4004734	    0x8b0500000000	            mov eax, dword [0x0400473a] 	      3784	gui.c	FUNCTION_57	IF_1	IF_2
0x400473a	            0x85c0	                           test eax, eax	      3784	gui.c	FUNCTION_57	IF_1	IF_2
0x400473c	            0x7424	                            je 0x4004762	      3784	gui.c	FUNCTION_57	IF_1	IF_2
0x400473e	    0x488b85c0efff	           mov rax, qword [rbp - 0x1040]	      3785	gui.c	FUNCTION_57	IF_1	IF_2	CALL_6
0x4004745	    0x41b8fbffffff	                     mov r8d, 0xfffffffb	      3785	gui.c	FUNCTION_57	IF_1	IF_2	CALL_6
0x400474b	      0xb901000000	                              mov ecx, 1	      3785	gui.c	FUNCTION_57	IF_1	IF_2	CALL_6
0x4004750	      0xba00000000	                              mov edx, 0	      3785	gui.c	FUNCTION_57	IF_1	IF_2	CALL_6
0x4004755	      0xbeffffffff	                     mov esi, 0xffffffff	      3785	gui.c	FUNCTION_57	IF_1	IF_2	CALL_6
0x400475a	          0x4889c7	                            mov rdi, rax	      3785	gui.c	FUNCTION_57	IF_1	IF_2	CALL_6
0x400475d	      0xe800000000	                          call 0x4004762	      3785	gui.c	FUNCTION_57	IF_1	IF_2	CALL_6
0x4004762	    0x8b0500000000	            mov eax, dword [0x04004768] 	      3787	gui.c	FUNCTION_57	IF_1
0x4004768	     0xb85acefffff	            or eax, dword [rbp - 0x1054]	      3787	gui.c	FUNCTION_57	IF_1
0x400476e	    0x890500000000	            mov dword [0x04004774], eax 	      3787	gui.c	FUNCTION_57	IF_1
0x4004774	    0x488b85b8efff	           mov rax, qword [rbp - 0x1048]	      3792	gui.c	FUNCTION_57	IF_3
0x400477b	          0x488b00	                    mov rax, qword [rax]	      3792	gui.c	FUNCTION_57	IF_3
0x400477e	           0xfb600	                   movzx eax, byte [rax]	      3792	gui.c	FUNCTION_57	IF_3
0x4004781	            0x84c0	                             test al, al	      3792	gui.c	FUNCTION_57	IF_3
0x4004783	            0x7412	                            je 0x4004797	      3792	gui.c	FUNCTION_57	IF_3
0x4004785	    0x488b05000000	            mov rax, qword [0x0400478c] 	      3792	gui.c	FUNCTION_57	IF_3
0x400478c	           0xfb600	                   movzx eax, byte [rax]	      3792	gui.c	FUNCTION_57	IF_3
0x400478f	            0x84c0	                             test al, al	      3792	gui.c	FUNCTION_57	IF_3
0x4004791	     0xf85ee010000	                           jne 0x4004985	      3792	gui.c	FUNCTION_57	IF_3
0x4004797	    0x488b05000000	            mov rax, qword [0x0400479e] 	      3795	gui.c	FUNCTION_57	IF_3	CALL_7
0x400479e	    0x48398598efff	          cmp qword [rbp - 0x1068], rax 	      3795	gui.c	FUNCTION_57	IF_3	CALL_7
0x40047a5	            0x7411	                            je 0x40047b8	      3795	gui.c	FUNCTION_57	IF_3	CALL_7
0x40047a7	    0x488b8598efff	           mov rax, qword [rbp - 0x1068]	      3795	gui.c	FUNCTION_57	IF_3	CALL_7
0x40047ae	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3795	gui.c	FUNCTION_57	IF_3	CALL_7
0x40047b2	        0x488b4008	                mov rax, qword [rax + 8]	      3795	gui.c	FUNCTION_57	IF_3	CALL_7
0x40047b6	            0xeb07	                           jmp 0x40047bf	      3795	gui.c	FUNCTION_57	IF_3	CALL_7
0x40047b8	    0x488b05000000	            mov rax, qword [0x040047bf] 	      3795	gui.c	FUNCTION_57	IF_3	CALL_7
0x40047bf	          0x4889c7	                            mov rdi, rax	      3795	gui.c	FUNCTION_57	IF_3	CALL_7
0x40047c2	      0xe800000000	                          call 0x40047c7	      3795	gui.c	FUNCTION_57	IF_3	CALL_7
0x40047c7	    0x83bd94efffff	             cmp dword [rbp - 0x106c], 0	      3796	gui.c	FUNCTION_57	IF_3	IF_4
0x40047ce	            0x750f	                           jne 0x40047df	      3796	gui.c	FUNCTION_57	IF_3	IF_4
0x40047d0	    0x488b05000000	            mov rax, qword [0x040047d7] 	      3797	gui.c	FUNCTION_57	IF_3	CALL_8
0x40047d7	          0x4889c7	                            mov rdi, rax	      3797	gui.c	FUNCTION_57	IF_3	CALL_8
0x40047da	      0xe800000000	                          call 0x40047df	      3797	gui.c	FUNCTION_57	IF_3	CALL_8
0x40047df	    0x488b05000000	            mov rax, qword [0x040047e6] 	      3799	gui.c	FUNCTION_57	IF_3
0x40047e6	    0x48398598efff	          cmp qword [rbp - 0x1068], rax 	      3799	gui.c	FUNCTION_57	IF_3
0x40047ed	            0x740d	                            je 0x40047fc	      3799	gui.c	FUNCTION_57	IF_3
0x40047ef	    0x488b8598efff	           mov rax, qword [rbp - 0x1068]	      3799	gui.c	FUNCTION_57	IF_3
0x40047f6	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3799	gui.c	FUNCTION_57	IF_3
0x40047fa	            0xeb07	                           jmp 0x4004803	      3799	gui.c	FUNCTION_57	IF_3
0x40047fc	    0x488b05000000	            mov rax, qword [0x04004803] 	      3799	gui.c	FUNCTION_57	IF_3
0x4004803	    0x488985b0efff	           mov qword [rbp - 0x1050], rax	      3799	gui.c	FUNCTION_57	IF_3
0x400480a	    0xc785a4efffff	             mov dword [rbp - 0x105c], 0	      3800	gui.c	FUNCTION_57	IF_3	FOR_1
0x4004814	            0xeb3a	                           jmp 0x4004850	      3800	gui.c	FUNCTION_57	IF_3	FOR_1
0x4004816	    0x488b85b0efff	           mov rax, qword [rbp - 0x1050]	      3801	gui.c	FUNCTION_57	IF_3	FOR_1	IF_5	CALL_9
0x400481d	        0x488b4008	                mov rax, qword [rax + 8]	      3801	gui.c	FUNCTION_57	IF_3	FOR_1	IF_5	CALL_9
0x4004821	          0x4889c7	                            mov rdi, rax	      3801	gui.c	FUNCTION_57	IF_3	FOR_1	IF_5	CALL_9
0x4004824	      0xe800000000	                          call 0x4004829	      3801	gui.c	FUNCTION_57	IF_3	FOR_1	IF_5	CALL_9
0x4004829	            0x85c0	                           test eax, eax	      3801	gui.c	FUNCTION_57	IF_3	FOR_1	IF_5	CALL_9
0x400482b	            0x740a	                            je 0x4004837	      3801	gui.c	FUNCTION_57	IF_3	FOR_1	IF_5	CALL_9
0x400482d	    0xc785a0efffff	             mov dword [rbp - 0x1060], 1	      3802	gui.c	FUNCTION_57	IF_3	FOR_1	IF_5
0x4004837	    0x488b85b0efff	           mov rax, qword [rbp - 0x1050]	      3800	gui.c	FUNCTION_57	IF_3	FOR_1
0x400483e	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3800	gui.c	FUNCTION_57	IF_3	FOR_1
0x4004842	    0x488985b0efff	           mov qword [rbp - 0x1050], rax	      3800	gui.c	FUNCTION_57	IF_3	FOR_1
0x4004849	    0x8385a4efffff	             add dword [rbp - 0x105c], 1	      3800	gui.c	FUNCTION_57	IF_3	FOR_1
0x4004850	    0x4883bdb0efff	             cmp qword [rbp - 0x1050], 0	      3800	gui.c	FUNCTION_57	IF_3	FOR_1
0x4004858	            0x75bc	                           jne 0x4004816	      3800	gui.c	FUNCTION_57	IF_3	FOR_1
0x400485a	    0x83bda0efffff	             cmp dword [rbp - 0x1060], 0	      3803	gui.c	FUNCTION_57	IF_3	IF_6
0x4004861	            0x750d	                           jne 0x4004870	      3803	gui.c	FUNCTION_57	IF_3	IF_6
0x4004863	    0x83bda4efffff	            cmp dword [rbp - 0x105c], 1 	      3803	gui.c	FUNCTION_57	IF_3	IF_6
0x400486a	     0xf8e15010000	                           jle 0x4004985	      3803	gui.c	FUNCTION_57	IF_3	IF_6
0x4004870	    0x83bda4efffff	            cmp dword [rbp - 0x105c], 1 	      3805	gui.c	FUNCTION_57	IF_3	IF_6	IF_7
0x4004877	            0x7e28	                           jle 0x40048a1	      3805	gui.c	FUNCTION_57	IF_3	IF_6	IF_7
0x4004879	    0x8b95a4efffff	           mov edx, dword [rbp - 0x105c]	      3806	gui.c	FUNCTION_57	IF_3	IF_6	CALL_10
0x400487f	    0x488d85d0efff	                 lea rax, [rbp - 0x1030]	      3806	gui.c	FUNCTION_57	IF_3	IF_6	CALL_10
0x4004886	            0x89d1	                            mov ecx, edx	      3806	gui.c	FUNCTION_57	IF_3	IF_6	CALL_10
0x4004888	      0xba00000000	                              mov edx, 0	      3806	gui.c	FUNCTION_57	IF_3	IF_6	CALL_10
0x400488d	      0xbe28000000	                           mov esi, 0x28	      3806	gui.c	FUNCTION_57	IF_3	IF_6	CALL_10
0x4004892	          0x4889c7	                            mov rdi, rax	      3806	gui.c	FUNCTION_57	IF_3	IF_6	CALL_10
0x4004895	      0xb800000000	                              mov eax, 0	      3806	gui.c	FUNCTION_57	IF_3	IF_6	CALL_10
0x400489a	      0xe800000000	                          call 0x400489f	      3806	gui.c	FUNCTION_57	IF_3	IF_6	CALL_10
0x400489f	            0xeb07	                           jmp 0x40048a8	      3806	gui.c	FUNCTION_57	IF_3	IF_6	CALL_10
0x40048a1	    0xc685d0efffff	              mov byte [rbp - 0x1030], 0	      3808	gui.c	FUNCTION_57	IF_3	IF_6	ELSE_1
0x40048a8	    0x83bda0efffff	             cmp dword [rbp - 0x1060], 0	      3809	gui.c	FUNCTION_57	IF_3	IF_6	IF_8
0x40048af	            0x7434	                            je 0x40048e5	      3809	gui.c	FUNCTION_57	IF_3	IF_6	IF_8
0x40048b1	    0x488d85d0efff	                 lea rax, [rbp - 0x1030]	      3810	gui.c	FUNCTION_57	IF_3	IF_6	CALL_11
0x40048b8	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      3810	gui.c	FUNCTION_57	IF_3	IF_6	CALL_11
0x40048bf	          0x4889c2	                            mov rdx, rax	      3810	gui.c	FUNCTION_57	IF_3	IF_6	CALL_11
0x40048c2	      0xb800000000	                              mov eax, 0	      3810	gui.c	FUNCTION_57	IF_3	IF_6	CALL_11
0x40048c7	          0x4889d7	                            mov rdi, rdx	      3810	gui.c	FUNCTION_57	IF_3	IF_6	CALL_11
0x40048ca	            0xf2ae	              repne scasb al, byte [rdi]	      3810	gui.c	FUNCTION_57	IF_3	IF_6	CALL_11
0x40048cc	          0x4889c8	                            mov rax, rcx	      3810	gui.c	FUNCTION_57	IF_3	IF_6	CALL_11
0x40048cf	          0x48f7d0	                                 not rax	      3810	gui.c	FUNCTION_57	IF_3	IF_6	CALL_11
0x40048d2	        0x488d50ff	                      lea rdx, [rax - 1]	      3810	gui.c	FUNCTION_57	IF_3	IF_6	CALL_11
0x40048d6	    0x488d85d0efff	                 lea rax, [rbp - 0x1030]	      3810	gui.c	FUNCTION_57	IF_3	IF_6	CALL_11
0x40048dd	          0x4801d0	                            add rax, rdx	      3810	gui.c	FUNCTION_57	IF_3	IF_6	CALL_11
0x40048e0	      0x66c7002b00	                    mov word [rax], 0x2b	      3810	gui.c	FUNCTION_57	IF_3	IF_6	CALL_11
0x40048e5	    0x488d85d0efff	                 lea rax, [rbp - 0x1030]	      3811	gui.c	FUNCTION_57	IF_3	IF_6	CALL_12
0x40048ec	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      3811	gui.c	FUNCTION_57	IF_3	IF_6	CALL_12
0x40048f3	          0x4889c2	                            mov rdx, rax	      3811	gui.c	FUNCTION_57	IF_3	IF_6	CALL_12
0x40048f6	      0xb800000000	                              mov eax, 0	      3811	gui.c	FUNCTION_57	IF_3	IF_6	CALL_12
0x40048fb	          0x4889d7	                            mov rdi, rdx	      3811	gui.c	FUNCTION_57	IF_3	IF_6	CALL_12
0x40048fe	            0xf2ae	              repne scasb al, byte [rdi]	      3811	gui.c	FUNCTION_57	IF_3	IF_6	CALL_12
0x4004900	          0x4889c8	                            mov rax, rcx	      3811	gui.c	FUNCTION_57	IF_3	IF_6	CALL_12
0x4004903	          0x48f7d0	                                 not rax	      3811	gui.c	FUNCTION_57	IF_3	IF_6	CALL_12
0x4004906	        0x488d50ff	                      lea rdx, [rax - 1]	      3811	gui.c	FUNCTION_57	IF_3	IF_6	CALL_12
0x400490a	    0x488d85d0efff	                 lea rax, [rbp - 0x1030]	      3811	gui.c	FUNCTION_57	IF_3	IF_6	CALL_12
0x4004911	          0x4801d0	                            add rax, rdx	      3811	gui.c	FUNCTION_57	IF_3	IF_6	CALL_12
0x4004914	      0x66c7002000	                    mov word [rax], 0x20	      3811	gui.c	FUNCTION_57	IF_3	IF_6	CALL_12
0x4004919	    0x488b05000000	            mov rax, qword [0x04004920] 	      3812	gui.c	FUNCTION_57	IF_3	IF_6	CALL_14
0x4004920	          0x4889c7	                            mov rdi, rax	      3812	gui.c	FUNCTION_57	IF_3	IF_6	CALL_14
0x4004923	      0xe800000000	                          call 0x4004928	      3812	gui.c	FUNCTION_57	IF_3	IF_6	CALL_14
0x4004928	        0x4c8d6001	                      lea r12, [rax + 1]	      3812	gui.c	FUNCTION_57	IF_3	IF_6	CALL_14
0x400492c	    0x488b1d000000	            mov rbx, qword [0x04004933] 	      3812	gui.c	FUNCTION_57	IF_3	IF_6	CALL_14
0x4004933	    0x4c8b2d000000	            mov r13, qword [0x0400493a] 	      3812	gui.c	FUNCTION_57	IF_3	IF_6	CALL_14
0x400493a	    0x488d85d0efff	                 lea rax, [rbp - 0x1030]	      3812	gui.c	FUNCTION_57	IF_3	IF_6	CALL_14
0x4004941	          0x4889c7	                            mov rdi, rax	      3812	gui.c	FUNCTION_57	IF_3	IF_6	CALL_14
0x4004944	      0xe800000000	                          call 0x4004949	      3812	gui.c	FUNCTION_57	IF_3	IF_6	CALL_14
0x4004949	          0x4c01e8	                            add rax, r13	      3812	gui.c	FUNCTION_57	IF_3	IF_6	CALL_14
0x400494c	          0x4c89e2	                            mov rdx, r12	      3812	gui.c	FUNCTION_57	IF_3	IF_6	CALL_14
0x400494f	          0x4889de	                            mov rsi, rbx	      3812	gui.c	FUNCTION_57	IF_3	IF_6	CALL_14
0x4004952	          0x4889c7	                            mov rdi, rax	      3812	gui.c	FUNCTION_57	IF_3	IF_6	CALL_14
0x4004955	      0xe800000000	                          call 0x400495a	      3812	gui.c	FUNCTION_57	IF_3	IF_6	CALL_14
0x400495a	    0x488d85d0efff	                 lea rax, [rbp - 0x1030]	      3813	gui.c	FUNCTION_57	IF_3	IF_6	CALL_16
0x4004961	          0x4889c7	                            mov rdi, rax	      3813	gui.c	FUNCTION_57	IF_3	IF_6	CALL_16
0x4004964	      0xe800000000	                          call 0x4004969	      3813	gui.c	FUNCTION_57	IF_3	IF_6	CALL_16
0x4004969	          0x4889c2	                            mov rdx, rax	      3813	gui.c	FUNCTION_57	IF_3	IF_6	CALL_16
0x400496c	    0x488b05000000	            mov rax, qword [0x04004973] 	      3813	gui.c	FUNCTION_57	IF_3	IF_6	CALL_16
0x4004973	    0x488d8dd0efff	                 lea rcx, [rbp - 0x1030]	      3813	gui.c	FUNCTION_57	IF_3	IF_6	CALL_16
0x400497a	          0x4889ce	                            mov rsi, rcx	      3813	gui.c	FUNCTION_57	IF_3	IF_6	CALL_16
0x400497d	          0x4889c7	                            mov rdi, rax	      3813	gui.c	FUNCTION_57	IF_3	IF_6	CALL_16
0x4004980	      0xe800000000	                          call 0x4004985	      3813	gui.c	FUNCTION_57	IF_3	IF_6	CALL_16
0x4004985	              0x90	                                     nop	      3816	gui.c	FUNCTION_57
0x4004986	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3816	gui.c	FUNCTION_57
0x400498a	    0x644833042528	                xor rax, qword fs:[0x28]	      3816	gui.c	FUNCTION_57
0x4004993	            0x7405	                            je 0x400499a	      3816	gui.c	FUNCTION_57
0x4004995	      0xe800000000	                          call 0x400499a	      3816	gui.c	FUNCTION_57
0x400499a	        0x488d65e8	                   lea rsp, [rbp - 0x18]	      3816	gui.c	FUNCTION_57
0x400499e	              0x5b	                                 pop rbx	      3816	gui.c	FUNCTION_57
0x400499f	            0x415c	                                 pop r12	      3816	gui.c	FUNCTION_57
0x40049a1	            0x415d	                                 pop r13	      3816	gui.c	FUNCTION_57
0x40049a3	              0x5d	                                 pop rbp	      3816	gui.c	FUNCTION_57
0x40049a4	              0xc3	                                     ret	      3816	gui.c	FUNCTION_57
gui_init_check	IF,2:functions,0:ELSE,0:CALL,5:SWITCH,0:WHILE,0:FOR,0:DO,0	58
0x400046c	              0x55	                                push rbp	       366	gui.c	FUNCTION_6
0x400046d	          0x4889e5	                            mov rbp, rsp	       366	gui.c	FUNCTION_6
0x4000470	    0x8b0500000000	            mov eax, dword [0x04000476] 	       369	gui.c	FUNCTION_6	IF_1
0x4000476	          0x83f802	                              cmp eax, 2	       369	gui.c	FUNCTION_6	IF_1
0x4000479	            0x7427	                            je 0x40004a2	       369	gui.c	FUNCTION_6	IF_1
0x400047b	    0x8b0500000000	            mov eax, dword [0x04000481] 	       371	gui.c	FUNCTION_6	IF_1	IF_2
0x4000481	            0x85c0	                           test eax, eax	       371	gui.c	FUNCTION_6	IF_1	IF_2
0x4000483	            0x7512	                           jne 0x4000497	       371	gui.c	FUNCTION_6	IF_1	IF_2
0x4000485	      0xbf00000000	                              mov edi, 0	       372	gui.c	FUNCTION_6	IF_1	CALL_2
0x400048a	      0xe800000000	                          call 0x400048f	       372	gui.c	FUNCTION_6	IF_1	CALL_2
0x400048f	          0x4889c7	                            mov rdi, rax	       372	gui.c	FUNCTION_6	IF_1	CALL_2
0x4000492	      0xe800000000	                          call 0x4000497	       372	gui.c	FUNCTION_6	IF_1	CALL_2
0x4000497	    0x8b0500000000	            mov eax, dword [0x0400049d] 	       373	gui.c	FUNCTION_6	IF_1
0x400049d	      0xe93c010000	                           jmp 0x40005de	       373	gui.c	FUNCTION_6	IF_1
0x40004a2	    0xc70500000000	               mov dword [0x040004ac], 0	       376	gui.c	FUNCTION_6
0x40004ac	    0xc70500000000	               mov dword [0x040004b6], 0	       377	gui.c	FUNCTION_6
0x40004b6	    0xc70500000000	               mov dword [0x040004c0], 1	       378	gui.c	FUNCTION_6
0x40004c0	    0xc70500000000	     mov dword [0x040004ca], 0xffffffff 	       379	gui.c	FUNCTION_6
0x40004ca	    0x48c705000000	               mov qword [0x040004d5], 0	       380	gui.c	FUNCTION_6
0x40004d5	    0xc70500000000	               mov dword [0x040004df], 0	       381	gui.c	FUNCTION_6
0x40004df	    0xc70500000000	               mov dword [0x040004e9], 0	       382	gui.c	FUNCTION_6
0x40004e9	    0xc70500000000	               mov dword [0x040004f3], 0	       383	gui.c	FUNCTION_6
0x40004f3	    0x488b05000000	            mov rax, qword [0x040004fa] 	       384	gui.c	FUNCTION_6
0x40004fa	    0x890500000000	            mov dword [0x04000500], eax 	       384	gui.c	FUNCTION_6
0x4000500	    0x488b05000000	            mov rax, qword [0x04000507] 	       385	gui.c	FUNCTION_6
0x4000507	    0x890500000000	            mov dword [0x0400050d], eax 	       385	gui.c	FUNCTION_6
0x400050d	    0xc60500000000	                mov byte [0x04000514], 0	       387	gui.c	FUNCTION_6
0x4000514	    0xc70500000000	               mov dword [0x0400051e], 0	       388	gui.c	FUNCTION_6
0x400051e	    0x488b05000000	            mov rax, qword [0x04000525] 	       389	gui.c	FUNCTION_6
0x4000525	          0x83e801	                              sub eax, 1	       389	gui.c	FUNCTION_6
0x4000528	    0x890500000000	            mov dword [0x0400052e], eax 	       389	gui.c	FUNCTION_6
0x400052e	    0xc70500000000	               mov dword [0x04000538], 0	       390	gui.c	FUNCTION_6
0x4000538	    0x488b05000000	            mov rax, qword [0x0400053f] 	       391	gui.c	FUNCTION_6
0x400053f	          0x83e801	                              sub eax, 1	       391	gui.c	FUNCTION_6
0x4000542	    0x890500000000	            mov dword [0x04000548], eax 	       391	gui.c	FUNCTION_6
0x4000548	    0xc70500000000	               mov dword [0x04000552], 0	       392	gui.c	FUNCTION_6
0x4000552	    0xc70500000000	               mov dword [0x0400055c], 1	       393	gui.c	FUNCTION_6
0x400055c	    0xc70500000000	               mov dword [0x04000566], 1	       394	gui.c	FUNCTION_6
0x4000566	    0xc70500000000	               mov dword [0x04000570], 0	       395	gui.c	FUNCTION_6
0x4000570	    0xc70500000000	               mov dword [0x0400057a], 0	       396	gui.c	FUNCTION_6
0x400057a	    0x48c705000000	               mov qword [0x04000585], 0	       398	gui.c	FUNCTION_6
0x4000585	    0x48c705000000	               mov qword [0x04000590], 0	       408	gui.c	FUNCTION_6
0x4000590	    0xc60500000000	                mov byte [0x04000597], 1	       424	gui.c	FUNCTION_6
0x4000597	    0xc70500000000	           mov dword [0x040005a1], 0x10 	       440	gui.c	FUNCTION_6
0x40005a1	    0x8b0500000000	            mov eax, dword [0x040005a7] 	       440	gui.c	FUNCTION_6
0x40005a7	    0x890500000000	            mov dword [0x040005ad], eax 	       440	gui.c	FUNCTION_6
0x40005ad	    0xc70500000000	     mov dword [0x040005b7], 0xffffffff 	       441	gui.c	FUNCTION_6
0x40005b7	    0x8b0500000000	            mov eax, dword [0x040005bd] 	       453	gui.c	FUNCTION_6	CALL_4
0x40005bd	            0x85c0	                           test eax, eax	       453	gui.c	FUNCTION_6	CALL_4
0x40005bf	            0x740c	                            je 0x40005cd	       453	gui.c	FUNCTION_6	CALL_4
0x40005c1	      0xbf01000000	                              mov edi, 1	       453	gui.c	FUNCTION_6	CALL_4
0x40005c6	      0xe800000000	                          call 0x40005cb	       453	gui.c	FUNCTION_6	CALL_4
0x40005cb	            0xeb05	                           jmp 0x40005d2	       453	gui.c	FUNCTION_6	CALL_4
0x40005cd	      0xe800000000	                          call 0x40005d2	       453	gui.c	FUNCTION_6	CALL_4
0x40005d2	    0x890500000000	            mov dword [0x040005d8], eax 	       453	gui.c	FUNCTION_6	CALL_4
0x40005d8	    0x8b0500000000	            mov eax, dword [0x040005de] 	       458	gui.c	FUNCTION_6
0x40005de	              0x5d	                                 pop rbp	       459	gui.c	FUNCTION_6
0x40005df	              0xc3	                                     ret	       459	gui.c	FUNCTION_6
gui_get_shellsize	IF,0:functions,0:ELSE,0:CALL,0:SWITCH,0:WHILE,0:FOR,0:DO,0	11
0x4001a50	              0x55	                                push rbp	      1555	gui.c	FUNCTION_22
0x4001a51	          0x4889e5	                            mov rbp, rsp	      1555	gui.c	FUNCTION_22
0x4001a54	    0x8b0500000000	            mov eax, dword [0x04001a5a] 	      1556	gui.c	FUNCTION_22
0x4001a5a	            0x4898	                                    cdqe	      1556	gui.c	FUNCTION_22
0x4001a5c	    0x488905000000	            mov qword [0x04001a63], rax 	      1556	gui.c	FUNCTION_22
0x4001a63	    0x8b0500000000	            mov eax, dword [0x04001a69] 	      1557	gui.c	FUNCTION_22
0x4001a69	            0x4898	                                    cdqe	      1557	gui.c	FUNCTION_22
0x4001a6b	    0x488905000000	            mov qword [0x04001a72], rax 	      1557	gui.c	FUNCTION_22
0x4001a72	      0xb801000000	                              mov eax, 1	      1558	gui.c	FUNCTION_22
0x4001a77	              0x5d	                                 pop rbp	      1559	gui.c	FUNCTION_22
0x4001a78	              0xc3	                                     ret	      1559	gui.c	FUNCTION_22
gui_redraw_block	IF,17:functions,0:ELSE,5:CALL,10:SWITCH,0:WHILE,1:FOR,4:DO,0	279
0x4002ee7	              0x55	                                push rbp	      2708	gui.c	FUNCTION_42
0x4002ee8	          0x4889e5	                            mov rbp, rsp	      2708	gui.c	FUNCTION_42
0x4002eeb	        0x4883ec60	                           sub rsp, 0x60	      2708	gui.c	FUNCTION_42
0x4002eef	          0x897dbc	             mov dword [rbp - 0x44], edi	      2708	gui.c	FUNCTION_42
0x4002ef2	          0x8975b8	             mov dword [rbp - 0x48], esi	      2708	gui.c	FUNCTION_42
0x4002ef5	          0x8955b4	             mov dword [rbp - 0x4c], edx	      2708	gui.c	FUNCTION_42
0x4002ef8	          0x894db0	             mov dword [rbp - 0x50], ecx	      2708	gui.c	FUNCTION_42
0x4002efb	        0x448945ac	             mov dword [rbp - 0x54], r8d	      2708	gui.c	FUNCTION_42
0x4002eff	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      2715	gui.c	FUNCTION_42
0x4002f06	    0x8b0500000000	            mov eax, dword [0x04002f0c] 	      2721	gui.c	FUNCTION_42	IF_1
0x4002f0c	            0x85c0	                           test eax, eax	      2721	gui.c	FUNCTION_42	IF_1
0x4002f0e	            0x740c	                            je 0x4002f1c	      2721	gui.c	FUNCTION_42	IF_1
0x4002f10	    0x488b05000000	            mov rax, qword [0x04002f17] 	      2721	gui.c	FUNCTION_42	IF_1
0x4002f17	          0x4885c0	                           test rax, rax	      2721	gui.c	FUNCTION_42	IF_1
0x4002f1a	            0x7508	                           jne 0x4002f24	      2721	gui.c	FUNCTION_42	IF_1
0x4002f1c	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      2722	gui.c	FUNCTION_42	IF_1
0x4002f1f	      0xe995030000	                           jmp 0x40032b9	      2722	gui.c	FUNCTION_42	IF_1
0x4002f24	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      2726	gui.c	FUNCTION_42	CALL_1
0x4002f27	            0x89c7	                            mov edi, eax	      2726	gui.c	FUNCTION_42	CALL_1
0x4002f29	      0xe800000000	                          call 0x4002f2e	      2726	gui.c	FUNCTION_42	CALL_1
0x4002f2e	          0x8945b8	             mov dword [rbp - 0x48], eax	      2726	gui.c	FUNCTION_42	CALL_1
0x4002f31	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      2727	gui.c	FUNCTION_42	CALL_2
0x4002f34	            0x89c7	                            mov edi, eax	      2727	gui.c	FUNCTION_42	CALL_2
0x4002f36	      0xe800000000	                          call 0x4002f3b	      2727	gui.c	FUNCTION_42	CALL_2
0x4002f3b	          0x8945b0	             mov dword [rbp - 0x50], eax	      2727	gui.c	FUNCTION_42	CALL_2
0x4002f3e	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      2728	gui.c	FUNCTION_42	CALL_3
0x4002f41	            0x89c7	                            mov edi, eax	      2728	gui.c	FUNCTION_42	CALL_3
0x4002f43	      0xe800000000	                          call 0x4002f48	      2728	gui.c	FUNCTION_42	CALL_3
0x4002f48	          0x8945bc	             mov dword [rbp - 0x44], eax	      2728	gui.c	FUNCTION_42	CALL_3
0x4002f4b	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      2729	gui.c	FUNCTION_42	CALL_4
0x4002f4e	            0x89c7	                            mov edi, eax	      2729	gui.c	FUNCTION_42	CALL_4
0x4002f50	      0xe800000000	                          call 0x4002f55	      2729	gui.c	FUNCTION_42	CALL_4
0x4002f55	          0x8945b4	             mov dword [rbp - 0x4c], eax	      2729	gui.c	FUNCTION_42	CALL_4
0x4002f58	    0x8b0500000000	            mov eax, dword [0x04002f5e] 	      2732	gui.c	FUNCTION_42
0x4002f5e	          0x8945e4	             mov dword [rbp - 0x1c], eax	      2732	gui.c	FUNCTION_42
0x4002f61	    0x8b0500000000	            mov eax, dword [0x04002f67] 	      2733	gui.c	FUNCTION_42
0x4002f67	          0x8945e8	             mov dword [rbp - 0x18], eax	      2733	gui.c	FUNCTION_42
0x4002f6a	    0x8b0500000000	            mov eax, dword [0x04002f70] 	      2734	gui.c	FUNCTION_42
0x4002f70	            0x4898	                                    cdqe	      2734	gui.c	FUNCTION_42
0x4002f72	        0x488945f8	                mov qword [rbp - 8], rax	      2734	gui.c	FUNCTION_42
0x4002f76	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      2736	gui.c	FUNCTION_42
0x4002f79	          0x8945ec	             mov dword [rbp - 0x14], eax	      2736	gui.c	FUNCTION_42
0x4002f7c	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      2737	gui.c	FUNCTION_42
0x4002f7f	          0x8945f0	             mov dword [rbp - 0x10], eax	      2737	gui.c	FUNCTION_42
0x4002f82	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      2740	gui.c	FUNCTION_42	FOR_1
0x4002f85	    0x890500000000	            mov dword [0x04002f8b], eax 	      2740	gui.c	FUNCTION_42	FOR_1
0x4002f8b	      0xe9fb020000	                           jmp 0x400328b	      2740	gui.c	FUNCTION_42	FOR_1
0x4002f90	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2745	gui.c	FUNCTION_42	FOR_1
0x4002f93	          0x8945b8	             mov dword [rbp - 0x48], eax	      2745	gui.c	FUNCTION_42	FOR_1
0x4002f96	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      2746	gui.c	FUNCTION_42	FOR_1
0x4002f99	          0x8945b0	             mov dword [rbp - 0x50], eax	      2746	gui.c	FUNCTION_42	FOR_1
0x4002f9c	    0x488b05000000	            mov rax, qword [0x04002fa3] 	      2747	gui.c	FUNCTION_42	FOR_1
0x4002fa3	    0x8b1500000000	            mov edx, dword [0x04002fa9] 	      2747	gui.c	FUNCTION_42	FOR_1
0x4002fa9	          0x4863d2	                         movsxd rdx, edx	      2747	gui.c	FUNCTION_42	FOR_1
0x4002fac	        0x48c1e202	                              shl rdx, 2	      2747	gui.c	FUNCTION_42	FOR_1
0x4002fb0	          0x4801d0	                            add rax, rdx	      2747	gui.c	FUNCTION_42	FOR_1
0x4002fb3	            0x8b00	                    mov eax, dword [rax]	      2747	gui.c	FUNCTION_42	FOR_1
0x4002fb5	          0x8945d0	             mov dword [rbp - 0x30], eax	      2747	gui.c	FUNCTION_42	FOR_1
0x4002fb8	    0x8b0500000000	            mov eax, dword [0x04002fbe] 	      2748	gui.c	FUNCTION_42	FOR_1	IF_2
0x4002fbe	            0x85c0	                           test eax, eax	      2748	gui.c	FUNCTION_42	FOR_1	IF_2
0x4002fc0	            0x7474	                            je 0x4003036	      2748	gui.c	FUNCTION_42	FOR_1	IF_2
0x4002fc2	        0x837db800	               cmp dword [rbp - 0x48], 0	      2750	gui.c	FUNCTION_42	FOR_1	IF_2	IF_3
0x4002fc6	            0x7e36	                           jle 0x4002ffe	      2750	gui.c	FUNCTION_42	FOR_1	IF_2	IF_3
0x4002fc8	    0x488b05000000	            mov rax, qword [0x04002fcf] 	      2751	gui.c	FUNCTION_42	FOR_1	IF_2	IF_3	CALL_5
0x4002fcf	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      2752	gui.c	FUNCTION_42	FOR_1	IF_2	IF_3
0x4002fd2	          0x4863ca	                         movsxd rcx, edx	      2752	gui.c	FUNCTION_42	FOR_1	IF_2	IF_3
0x4002fd5	          0x8b55b8	             mov edx, dword [rbp - 0x48]	      2752	gui.c	FUNCTION_42	FOR_1	IF_2	IF_3
0x4002fd8	          0x4863d2	                         movsxd rdx, edx	      2752	gui.c	FUNCTION_42	FOR_1	IF_2	IF_3
0x4002fdb	          0x4801ca	                            add rdx, rcx	      2752	gui.c	FUNCTION_42	FOR_1	IF_2	IF_3
0x4002fde	          0x4801c2	                            add rdx, rax	      2752	gui.c	FUNCTION_42	FOR_1	IF_2	IF_3
0x4002fe1	    0x488b0d000000	            mov rcx, qword [0x04002fe8] 	      2751	gui.c	FUNCTION_42	FOR_1	IF_2	IF_3	CALL_5
0x4002fe8	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      2751	gui.c	FUNCTION_42	FOR_1	IF_2	IF_3	CALL_5
0x4002feb	            0x4898	                                    cdqe	      2751	gui.c	FUNCTION_42	FOR_1	IF_2	IF_3	CALL_5
0x4002fed	          0x4801c8	                            add rax, rcx	      2751	gui.c	FUNCTION_42	FOR_1	IF_2	IF_3	CALL_5
0x4002ff0	          0x4889d6	                            mov rsi, rdx	      2751	gui.c	FUNCTION_42	FOR_1	IF_2	IF_3	CALL_5
0x4002ff3	          0x4889c7	                            mov rdi, rax	      2751	gui.c	FUNCTION_42	FOR_1	IF_2	IF_3	CALL_5
0x4002ff6	      0xe800000000	                          call 0x4002ffb	      2751	gui.c	FUNCTION_42	FOR_1	IF_2	IF_3	CALL_5
0x4002ffb	          0x2945b8	             sub dword [rbp - 0x48], eax	      2751	gui.c	FUNCTION_42	FOR_1	IF_2	IF_3	CALL_5
0x4002ffe	    0x488b05000000	            mov rax, qword [0x04003005] 	      2753	gui.c	FUNCTION_42	FOR_1	IF_2	CALL_6
0x4003005	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      2754	gui.c	FUNCTION_42	FOR_1	IF_2
0x4003008	          0x4863ca	                         movsxd rcx, edx	      2754	gui.c	FUNCTION_42	FOR_1	IF_2
0x400300b	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      2754	gui.c	FUNCTION_42	FOR_1	IF_2
0x400300e	          0x4863d2	                         movsxd rdx, edx	      2754	gui.c	FUNCTION_42	FOR_1	IF_2
0x4003011	          0x4801ca	                            add rdx, rcx	      2754	gui.c	FUNCTION_42	FOR_1	IF_2
0x4003014	          0x4801c2	                            add rdx, rax	      2754	gui.c	FUNCTION_42	FOR_1	IF_2
0x4003017	    0x488b0d000000	            mov rcx, qword [0x0400301e] 	      2753	gui.c	FUNCTION_42	FOR_1	IF_2	CALL_6
0x400301e	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      2753	gui.c	FUNCTION_42	FOR_1	IF_2	CALL_6
0x4003021	            0x4898	                                    cdqe	      2753	gui.c	FUNCTION_42	FOR_1	IF_2	CALL_6
0x4003023	          0x4801c8	                            add rax, rcx	      2753	gui.c	FUNCTION_42	FOR_1	IF_2	CALL_6
0x4003026	          0x4889d6	                            mov rsi, rdx	      2753	gui.c	FUNCTION_42	FOR_1	IF_2	CALL_6
0x4003029	          0x4889c7	                            mov rdi, rax	      2753	gui.c	FUNCTION_42	FOR_1	IF_2	CALL_6
0x400302c	      0xe800000000	                          call 0x4003031	      2753	gui.c	FUNCTION_42	FOR_1	IF_2	CALL_6
0x4003031	           0x145b0	             add dword [rbp - 0x50], eax	      2753	gui.c	FUNCTION_42	FOR_1	IF_2	CALL_6
0x4003034	            0xeb62	                           jmp 0x4003098	      2753	gui.c	FUNCTION_42	FOR_1	IF_2	CALL_6
0x4003036	    0x8b0500000000	            mov eax, dword [0x0400303c] 	      2756	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4
0x400303c	            0x85c0	                           test eax, eax	      2756	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4
0x400303e	            0x7458	                            je 0x4003098	      2756	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4
0x4003040	    0x488b15000000	            mov rdx, qword [0x04003047] 	      2758	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_5
0x4003047	          0x8b4dd0	             mov ecx, dword [rbp - 0x30]	      2758	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_5
0x400304a	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      2758	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_5
0x400304d	             0x1c8	                            add eax, ecx	      2758	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_5
0x400304f	            0x4898	                                    cdqe	      2758	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_5
0x4003051	          0x4801d0	                            add rax, rdx	      2758	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_5
0x4003054	           0xfb600	                   movzx eax, byte [rax]	      2758	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_5
0x4003057	            0x84c0	                             test al, al	      2758	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_5
0x4003059	            0x7504	                           jne 0x400305f	      2758	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_5
0x400305b	        0x836db801	               sub dword [rbp - 0x48], 1	      2759	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_5
0x400305f	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      2761	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_6
0x4003062	          0x83c001	                              add eax, 1	      2761	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_6
0x4003065	          0x4863d0	                         movsxd rdx, eax	      2761	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_6
0x4003068	    0x488b05000000	            mov rax, qword [0x0400306f] 	      2761	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_6
0x400306f	          0x4839c2	                            cmp rdx, rax	      2761	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_6
0x4003072	            0x7d24	                           jge 0x4003098	      2761	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_6
0x4003074	    0x488b05000000	            mov rax, qword [0x0400307b] 	      2761	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_6
0x400307b	          0x8b4dd0	             mov ecx, dword [rbp - 0x30]	      2761	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_6
0x400307e	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      2761	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_6
0x4003081	             0x1ca	                            add edx, ecx	      2761	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_6
0x4003083	          0x4863d2	                         movsxd rdx, edx	      2761	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_6
0x4003086	        0x4883c201	                              add rdx, 1	      2761	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_6
0x400308a	          0x4801d0	                            add rax, rdx	      2761	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_6
0x400308d	           0xfb600	                   movzx eax, byte [rax]	      2761	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_6
0x4003090	            0x84c0	                             test al, al	      2761	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_6
0x4003092	            0x7504	                           jne 0x4003098	      2761	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_6
0x4003094	        0x8345b001	               add dword [rbp - 0x50], 1	      2762	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_6
0x4003098	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      2766	gui.c	FUNCTION_42	FOR_1
0x400309b	    0x890500000000	            mov dword [0x040030a1], eax 	      2766	gui.c	FUNCTION_42	FOR_1
0x40030a1	    0x488b05000000	            mov rax, qword [0x040030a8] 	      2767	gui.c	FUNCTION_42	FOR_1
0x40030a8	    0x8b1500000000	            mov edx, dword [0x040030ae] 	      2767	gui.c	FUNCTION_42	FOR_1
0x40030ae	          0x4863d2	                         movsxd rdx, edx	      2767	gui.c	FUNCTION_42	FOR_1
0x40030b1	        0x48c1e202	                              shl rdx, 2	      2767	gui.c	FUNCTION_42	FOR_1
0x40030b5	          0x4801d0	                            add rax, rdx	      2767	gui.c	FUNCTION_42	FOR_1
0x40030b8	            0x8b00	                    mov eax, dword [rax]	      2767	gui.c	FUNCTION_42	FOR_1
0x40030ba	    0x8b1500000000	            mov edx, dword [0x040030c0] 	      2767	gui.c	FUNCTION_42	FOR_1
0x40030c0	             0x1d0	                            add eax, edx	      2767	gui.c	FUNCTION_42	FOR_1
0x40030c2	          0x8945d0	             mov dword [rbp - 0x30], eax	      2767	gui.c	FUNCTION_42	FOR_1
0x40030c5	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      2768	gui.c	FUNCTION_42	FOR_1
0x40030c8	          0x2b45b8	             sub eax, dword [rbp - 0x48]	      2768	gui.c	FUNCTION_42	FOR_1
0x40030cb	          0x83c001	                              add eax, 1	      2768	gui.c	FUNCTION_42	FOR_1
0x40030ce	          0x8945d8	             mov dword [rbp - 0x28], eax	      2768	gui.c	FUNCTION_42	FOR_1
0x40030d1	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      2772	gui.c	FUNCTION_42	FOR_1	FOR_2
0x40030d8	            0xeb57	                           jmp 0x4003131	      2772	gui.c	FUNCTION_42	FOR_1	FOR_2
0x40030da	    0x488b05000000	            mov rax, qword [0x040030e1] 	      2773	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x40030e1	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      2773	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x40030e4	          0x83ea01	                              sub edx, 1	      2773	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x40030e7	          0x2b55dc	             sub edx, dword [rbp - 0x24]	      2773	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x40030ea	          0x4863d2	                         movsxd rdx, edx	      2773	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x40030ed	          0x4801d2	                            add rdx, rdx	      2773	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x40030f0	          0x4801d0	                            add rax, rdx	      2773	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x40030f3	           0xfb710	                   movzx edx, word [rax]	      2773	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x40030f6	    0x488b05000000	            mov rax, qword [0x040030fd] 	      2773	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x40030fd	          0x8b4dd0	             mov ecx, dword [rbp - 0x30]	      2773	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x4003100	          0x4863c9	                         movsxd rcx, ecx	      2773	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x4003103	          0x4801c9	                            add rcx, rcx	      2773	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x4003106	          0x4801c8	                            add rax, rcx	      2773	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x4003109	           0xfb700	                   movzx eax, word [rax]	      2773	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x400310c	          0x6639c2	                              cmp dx, ax	      2773	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x400310f	            0x7528	                           jne 0x4003139	      2773	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x4003111	    0x488b15000000	            mov rdx, qword [0x04003118] 	      2774	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x4003118	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      2774	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x400311b	          0x83e801	                              sub eax, 1	      2774	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x400311e	          0x2b45dc	             sub eax, dword [rbp - 0x24]	      2774	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x4003121	            0x4898	                                    cdqe	      2774	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x4003123	          0x4801d0	                            add rax, rdx	      2774	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x4003126	           0xfb600	                   movzx eax, byte [rax]	      2774	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x4003129	            0x3c20	                            cmp al, 0x20	      2774	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x400312b	            0x740c	                            je 0x4003139	      2774	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x400312d	        0x8345dc01	               add dword [rbp - 0x24], 1	      2772	gui.c	FUNCTION_42	FOR_1	FOR_2
0x4003131	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2772	gui.c	FUNCTION_42	FOR_1	FOR_2
0x4003134	          0x3b45b8	             cmp eax, dword [rbp - 0x48]	      2772	gui.c	FUNCTION_42	FOR_1	FOR_2
0x4003137	            0x7ca1	                            jl 0x40030da	      2772	gui.c	FUNCTION_42	FOR_1	FOR_2
0x4003139	        0x837db800	               cmp dword [rbp - 0x48], 0	      2777	gui.c	FUNCTION_42	FOR_1
0x400313d	            0x7e47	                           jle 0x4003186	      2777	gui.c	FUNCTION_42	FOR_1
0x400313f	    0x488b05000000	            mov rax, qword [0x04003146] 	      2776	gui.c	FUNCTION_42	FOR_1
0x4003146	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      2776	gui.c	FUNCTION_42	FOR_1
0x4003149	          0x4863d2	                         movsxd rdx, edx	      2776	gui.c	FUNCTION_42	FOR_1
0x400314c	          0x4801d2	                            add rdx, rdx	      2776	gui.c	FUNCTION_42	FOR_1
0x400314f	        0x4883ea02	                              sub rdx, 2	      2776	gui.c	FUNCTION_42	FOR_1
0x4003153	          0x4801d0	                            add rax, rdx	      2776	gui.c	FUNCTION_42	FOR_1
0x4003156	           0xfb700	                   movzx eax, word [rax]	      2776	gui.c	FUNCTION_42	FOR_1
0x4003159	          0x6685c0	                             test ax, ax	      2776	gui.c	FUNCTION_42	FOR_1
0x400315c	            0x7428	                            je 0x4003186	      2776	gui.c	FUNCTION_42	FOR_1
0x400315e	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      2776	gui.c	FUNCTION_42	FOR_1
0x4003162	            0x7522	                           jne 0x4003186	      2776	gui.c	FUNCTION_42	FOR_1
0x4003164	    0x488b05000000	            mov rax, qword [0x0400316b] 	      2777	gui.c	FUNCTION_42	FOR_1
0x400316b	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      2777	gui.c	FUNCTION_42	FOR_1
0x400316e	          0x4863d2	                         movsxd rdx, edx	      2777	gui.c	FUNCTION_42	FOR_1
0x4003171	        0x4883ea01	                              sub rdx, 1	      2777	gui.c	FUNCTION_42	FOR_1
0x4003175	          0x4801d0	                            add rax, rdx	      2777	gui.c	FUNCTION_42	FOR_1
0x4003178	           0xfb600	                   movzx eax, byte [rax]	      2777	gui.c	FUNCTION_42	FOR_1
0x400317b	            0x3c20	                            cmp al, 0x20	      2777	gui.c	FUNCTION_42	FOR_1
0x400317d	            0x7407	                            je 0x4003186	      2777	gui.c	FUNCTION_42	FOR_1
0x400317f	      0xb801000000	                              mov eax, 1	      2777	gui.c	FUNCTION_42	FOR_1
0x4003184	            0xeb05	                           jmp 0x400318b	      2777	gui.c	FUNCTION_42	FOR_1
0x4003186	      0xb800000000	                              mov eax, 0	      2777	gui.c	FUNCTION_42	FOR_1
0x400318b	          0x8945e0	             mov dword [rbp - 0x20], eax	      2776	gui.c	FUNCTION_42	FOR_1
0x400318e	      0xe9df000000	                           jmp 0x4003272	      2781	gui.c	FUNCTION_42	FOR_1	WHILE_1
0x4003193	    0x488b05000000	            mov rax, qword [0x0400319a] 	      2783	gui.c	FUNCTION_42	FOR_1	WHILE_1
0x400319a	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      2783	gui.c	FUNCTION_42	FOR_1	WHILE_1
0x400319d	          0x4863d2	                         movsxd rdx, edx	      2783	gui.c	FUNCTION_42	FOR_1	WHILE_1
0x40031a0	          0x4801d2	                            add rdx, rdx	      2783	gui.c	FUNCTION_42	FOR_1	WHILE_1
0x40031a3	          0x4801d0	                            add rax, rdx	      2783	gui.c	FUNCTION_42	FOR_1	WHILE_1
0x40031a6	           0xfb700	                   movzx eax, word [rax]	      2783	gui.c	FUNCTION_42	FOR_1	WHILE_1
0x40031a9	        0x668945ce	               mov word [rbp - 0x32], ax	      2783	gui.c	FUNCTION_42	FOR_1	WHILE_1
0x40031ad	         0xfb745ce	            movzx eax, word [rbp - 0x32]	      2784	gui.c	FUNCTION_42	FOR_1	WHILE_1
0x40031b1	    0x890500000000	            mov dword [0x040031b7], eax 	      2784	gui.c	FUNCTION_42	FOR_1	WHILE_1
0x40031b7	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      2807	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3
0x40031be	            0xeb4d	                           jmp 0x400320d	      2807	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3
0x40031c0	    0x8b0500000000	            mov eax, dword [0x040031c6] 	      2809	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3	IF_11
0x40031c6	            0x85c0	                           test eax, eax	      2809	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3	IF_11
0x40031c8	            0x741b	                            je 0x40031e5	      2809	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3	IF_11
0x40031ca	    0x488b15000000	            mov rdx, qword [0x040031d1] 	      2809	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3	IF_11
0x40031d1	          0x8b4dd0	             mov ecx, dword [rbp - 0x30]	      2809	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3	IF_11
0x40031d4	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      2809	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3	IF_11
0x40031d7	             0x1c8	                            add eax, ecx	      2809	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3	IF_11
0x40031d9	            0x4898	                                    cdqe	      2809	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3	IF_11
0x40031db	          0x4801d0	                            add rax, rdx	      2809	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3	IF_11
0x40031de	           0xfb600	                   movzx eax, byte [rax]	      2809	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3	IF_11
0x40031e1	            0x84c0	                             test al, al	      2809	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3	IF_11
0x40031e3	            0x7423	                            je 0x4003208	      2809	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3	IF_11
0x40031e5	    0x488b05000000	            mov rax, qword [0x040031ec] 	      2811	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3	IF_12
0x40031ec	          0x8b4dd0	             mov ecx, dword [rbp - 0x30]	      2811	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3	IF_12
0x40031ef	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      2811	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3	IF_12
0x40031f2	             0x1ca	                            add edx, ecx	      2811	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3	IF_12
0x40031f4	          0x4863d2	                         movsxd rdx, edx	      2811	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3	IF_12
0x40031f7	          0x4801d2	                            add rdx, rdx	      2811	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3	IF_12
0x40031fa	          0x4801d0	                            add rax, rdx	      2811	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3	IF_12
0x40031fd	           0xfb700	                   movzx eax, word [rax]	      2811	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3	IF_12
0x4003200	        0x663b45ce	               cmp ax, word [rbp - 0x32]	      2811	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3	IF_12
0x4003204	            0x7511	                           jne 0x4003217	      2811	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3	IF_12
0x4003206	            0xeb01	                           jmp 0x4003209	      2811	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3	IF_12
0x4003208	              0x90	                                     nop	      2810	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3	IF_11
0x4003209	        0x8345d401	               add dword [rbp - 0x2c], 1	      2807	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3
0x400320d	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      2807	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3
0x4003210	          0x3b45d8	             cmp eax, dword [rbp - 0x28]	      2807	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3
0x4003213	            0x7cab	                            jl 0x40031c0	      2807	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3
0x4003215	            0xeb01	                           jmp 0x4003218	      2807	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3
0x4003217	              0x90	                                     nop	      2812	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3	IF_12
0x4003218	          0x8b4ddc	             mov ecx, dword [rbp - 0x24]	      2815	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	CALL_9
0x400321b	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      2815	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	CALL_9
0x400321e	          0x8b75d4	             mov esi, dword [rbp - 0x2c]	      2815	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	CALL_9
0x4003221	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      2815	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	CALL_9
0x4003224	          0x4189c9	                            mov r9d, ecx	      2815	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	CALL_9
0x4003227	    0x41b800000000	                              mov r8d, 0	      2815	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	CALL_9
0x400322d	      0xb900000000	                              mov ecx, 0	      2815	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	CALL_9
0x4003232	            0x89c7	                            mov edi, eax	      2815	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	CALL_9
0x4003234	      0xe818f5ffff	                  call sym.gui_screenstr	      2815	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	CALL_9
0x4003239	          0x8945f4	              mov dword [rbp - 0xc], eax	      2815	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	CALL_9
0x400323c	        0x837df400	                cmp dword [rbp - 0xc], 0	      2840	gui.c	FUNCTION_42	FOR_1	WHILE_1	IF_17
0x4003240	            0x751d	                           jne 0x400325f	      2840	gui.c	FUNCTION_42	FOR_1	WHILE_1	IF_17
0x4003242	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2844	gui.c	FUNCTION_42	FOR_1	WHILE_1	IF_17
0x4003245	          0x2945d0	             sub dword [rbp - 0x30], eax	      2844	gui.c	FUNCTION_42	FOR_1	WHILE_1	IF_17
0x4003248	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2845	gui.c	FUNCTION_42	FOR_1	WHILE_1	IF_17
0x400324b	           0x145d8	             add dword [rbp - 0x28], eax	      2845	gui.c	FUNCTION_42	FOR_1	WHILE_1	IF_17
0x400324e	    0x8b0500000000	            mov eax, dword [0x04003254] 	      2846	gui.c	FUNCTION_42	FOR_1	WHILE_1	IF_17
0x4003254	          0x2b45dc	             sub eax, dword [rbp - 0x24]	      2846	gui.c	FUNCTION_42	FOR_1	WHILE_1	IF_17
0x4003257	    0x890500000000	            mov dword [0x0400325d], eax 	      2846	gui.c	FUNCTION_42	FOR_1	WHILE_1	IF_17
0x400325d	            0xeb0c	                           jmp 0x400326b	      2846	gui.c	FUNCTION_42	FOR_1	WHILE_1	IF_17
0x400325f	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      2850	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_5
0x4003262	           0x145d0	             add dword [rbp - 0x30], eax	      2850	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_5
0x4003265	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      2851	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_5
0x4003268	          0x2945d8	             sub dword [rbp - 0x28], eax	      2851	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_5
0x400326b	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      2853	gui.c	FUNCTION_42	FOR_1	WHILE_1
0x4003272	        0x837dd800	               cmp dword [rbp - 0x28], 0	      2781	gui.c	FUNCTION_42	FOR_1	WHILE_1
0x4003276	     0xf8f17ffffff	                            jg 0x4003193	      2781	gui.c	FUNCTION_42	FOR_1	WHILE_1
0x400327c	    0x8b0500000000	            mov eax, dword [0x04003282] 	      2740	gui.c	FUNCTION_42	FOR_1
0x4003282	          0x83c001	                              add eax, 1	      2740	gui.c	FUNCTION_42	FOR_1
0x4003285	    0x890500000000	            mov dword [0x0400328b], eax 	      2740	gui.c	FUNCTION_42	FOR_1
0x400328b	    0x8b0500000000	            mov eax, dword [0x04003291] 	      2740	gui.c	FUNCTION_42	FOR_1
0x4003291	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	      2740	gui.c	FUNCTION_42	FOR_1
0x4003294	     0xf8ef6fcffff	                           jle 0x4002f90	      2740	gui.c	FUNCTION_42	FOR_1
0x400329a	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      2858	gui.c	FUNCTION_42
0x400329d	    0x890500000000	            mov dword [0x040032a3], eax 	      2858	gui.c	FUNCTION_42
0x40032a3	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      2859	gui.c	FUNCTION_42
0x40032a6	    0x890500000000	            mov dword [0x040032ac], eax 	      2859	gui.c	FUNCTION_42
0x40032ac	        0x488b45f8	                mov rax, qword [rbp - 8]	      2860	gui.c	FUNCTION_42
0x40032b0	    0x890500000000	            mov dword [0x040032b6], eax 	      2860	gui.c	FUNCTION_42
0x40032b6	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      2862	gui.c	FUNCTION_42
0x40032b9	              0xc9	                                   leave	      2863	gui.c	FUNCTION_42
0x40032ba	              0xc3	                                     ret	      2863	gui.c	FUNCTION_42
gui_do_findrepl	IF,16:functions,0:ELSE,4:CALL,32:SWITCH,0:WHILE,0:FOR,0:DO,0	228
0x4006ed5	              0x55	                                push rbp	      5276	gui.c	FUNCTION_91
0x4006ed6	          0x4889e5	                            mov rbp, rsp	      5276	gui.c	FUNCTION_91
0x4006ed9	    0x4881ec200100	                          sub rsp, 0x120	      5276	gui.c	FUNCTION_91
0x4006ee0	    0x89bdfcfeffff	            mov dword [rbp - 0x104], edi	      5276	gui.c	FUNCTION_91
0x4006ee6	    0x4889b5f0feff	            mov qword [rbp - 0x110], rsi	      5276	gui.c	FUNCTION_91
0x4006eed	    0x488995e8feff	            mov qword [rbp - 0x118], rdx	      5276	gui.c	FUNCTION_91
0x4006ef4	    0x898df8feffff	            mov dword [rbp - 0x108], ecx	      5276	gui.c	FUNCTION_91
0x4006efa	    0x64488b042528	                mov rax, qword fs:[0x28]	      5276	gui.c	FUNCTION_91
0x4006f03	        0x488945f8	                mov qword [rbp - 8], rax	      5276	gui.c	FUNCTION_91
0x4006f07	            0x31c0	                            xor eax, eax	      5276	gui.c	FUNCTION_91
0x4006f09	    0x8b85fcfeffff	            mov eax, dword [rbp - 0x104]	      5279	gui.c	FUNCTION_91
0x4006f0f	          0x83e007	                              and eax, 7	      5279	gui.c	FUNCTION_91
0x4006f12	    0x89850cffffff	             mov dword [rbp - 0xf4], eax	      5279	gui.c	FUNCTION_91
0x4006f18	    0x8b0500000000	            mov eax, dword [0x04006f1e] 	      5282	gui.c	FUNCTION_91
0x4006f1e	    0x898510ffffff	             mov dword [rbp - 0xf0], eax	      5282	gui.c	FUNCTION_91
0x4006f24	    0x8b0500000000	            mov eax, dword [0x04006f2a] 	      5288	gui.c	FUNCTION_91	IF_1
0x4006f2a	            0x85c0	                           test eax, eax	      5288	gui.c	FUNCTION_91	IF_1
0x4006f2c	            0x750a	                           jne 0x4006f38	      5288	gui.c	FUNCTION_91	IF_1
0x4006f2e	    0x8b0500000000	            mov eax, dword [0x04006f34] 	      5288	gui.c	FUNCTION_91	IF_1
0x4006f34	            0x85c0	                           test eax, eax	      5288	gui.c	FUNCTION_91	IF_1
0x4006f36	            0x740a	                            je 0x4006f42	      5288	gui.c	FUNCTION_91	IF_1
0x4006f38	      0xb800000000	                              mov eax, 0	      5289	gui.c	FUNCTION_91	IF_1
0x4006f3d	      0xe9bb030000	                           jmp 0x40072fd	      5289	gui.c	FUNCTION_91	IF_1
0x4006f42	    0x83bd0cffffff	               cmp dword [rbp - 0xf4], 3	      5292	gui.c	FUNCTION_91	IF_2	CALL_1
0x4006f49	            0x7409	                            je 0x4006f54	      5292	gui.c	FUNCTION_91	IF_2	CALL_1
0x4006f4b	    0x83bd0cffffff	               cmp dword [rbp - 0xf4], 4	      5292	gui.c	FUNCTION_91	IF_2	CALL_1
0x4006f52	            0x7513	                           jne 0x4006f67	      5292	gui.c	FUNCTION_91	IF_2	CALL_1
0x4006f54	      0xe800000000	                          call 0x4006f59	      5292	gui.c	FUNCTION_91	IF_2	CALL_1
0x4006f59	            0x85c0	                           test eax, eax	      5292	gui.c	FUNCTION_91	IF_2	CALL_1
0x4006f5b	            0x740a	                            je 0x4006f67	      5292	gui.c	FUNCTION_91	IF_2	CALL_1
0x4006f5d	      0xb800000000	                              mov eax, 0	      5293	gui.c	FUNCTION_91	IF_2
0x4006f62	      0xe996030000	                           jmp 0x40072fd	      5293	gui.c	FUNCTION_91	IF_2
0x4006f67	    0xc70500000000	               mov dword [0x04006f71], 1	      5295	gui.c	FUNCTION_91
0x4006f71	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	      5297	gui.c	FUNCTION_91	CALL_2
0x4006f78	      0xba64000000	                           mov edx, 0x64	      5297	gui.c	FUNCTION_91	CALL_2
0x4006f7d	      0xbe01000000	                              mov esi, 1	      5297	gui.c	FUNCTION_91	CALL_2
0x4006f82	          0x4889c7	                            mov rdi, rax	      5297	gui.c	FUNCTION_91	CALL_2
0x4006f85	      0xe800000000	                          call 0x4006f8a	      5297	gui.c	FUNCTION_91	CALL_2
0x4006f8a	    0x83bd0cffffff	               cmp dword [rbp - 0xf4], 4	      5298	gui.c	FUNCTION_91	IF_3
0x4006f91	            0x7514	                           jne 0x4006fa7	      5298	gui.c	FUNCTION_91	IF_3
0x4006f93	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	      5299	gui.c	FUNCTION_91	CALL_3
0x4006f9a	      0xbe00000000	                              mov esi, 0	      5299	gui.c	FUNCTION_91	CALL_3
0x4006f9f	          0x4889c7	                            mov rdi, rax	      5299	gui.c	FUNCTION_91	CALL_3
0x4006fa2	      0xe800000000	                          call 0x4006fa7	      5299	gui.c	FUNCTION_91	CALL_3
0x4006fa7	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	      5301	gui.c	FUNCTION_91	CALL_4
0x4006fae	      0xbe00000000	                              mov esi, 0	      5301	gui.c	FUNCTION_91	CALL_4
0x4006fb3	          0x4889c7	                            mov rdi, rax	      5301	gui.c	FUNCTION_91	CALL_4
0x4006fb6	      0xe800000000	                          call 0x4006fbb	      5301	gui.c	FUNCTION_91	CALL_4
0x4006fbb	    0x8b85fcfeffff	            mov eax, dword [rbp - 0x104]	      5302	gui.c	FUNCTION_91	IF_4
0x4006fc1	          0x83e010	                           and eax, 0x10	      5302	gui.c	FUNCTION_91	IF_4
0x4006fc4	            0x85c0	                           test eax, eax	      5302	gui.c	FUNCTION_91	IF_4
0x4006fc6	            0x7416	                            je 0x4006fde	      5302	gui.c	FUNCTION_91	IF_4
0x4006fc8	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	      5303	gui.c	FUNCTION_91	CALL_5
0x4006fcf	      0xbe00000000	                              mov esi, 0	      5303	gui.c	FUNCTION_91	CALL_5
0x4006fd4	          0x4889c7	                            mov rdi, rax	      5303	gui.c	FUNCTION_91	CALL_5
0x4006fd7	      0xe800000000	                          call 0x4006fdc	      5303	gui.c	FUNCTION_91	CALL_5
0x4006fdc	            0xeb14	                           jmp 0x4006ff2	      5303	gui.c	FUNCTION_91	CALL_5
0x4006fde	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	      5305	gui.c	FUNCTION_91	CALL_6
0x4006fe5	      0xbe00000000	                              mov esi, 0	      5305	gui.c	FUNCTION_91	CALL_6
0x4006fea	          0x4889c7	                            mov rdi, rax	      5305	gui.c	FUNCTION_91	CALL_6
0x4006fed	      0xe800000000	                          call 0x4006ff2	      5305	gui.c	FUNCTION_91	CALL_6
0x4006ff2	    0x8b85fcfeffff	            mov eax, dword [rbp - 0x104]	      5306	gui.c	FUNCTION_91	IF_5
0x4006ff8	          0x83e008	                              and eax, 8	      5306	gui.c	FUNCTION_91	IF_5
0x4006ffb	            0x85c0	                           test eax, eax	      5306	gui.c	FUNCTION_91	IF_5
0x4006ffd	            0x7414	                            je 0x4007013	      5306	gui.c	FUNCTION_91	IF_5
0x4006fff	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	      5307	gui.c	FUNCTION_91	CALL_7
0x4007006	      0xbe00000000	                              mov esi, 0	      5307	gui.c	FUNCTION_91	CALL_7
0x400700b	          0x4889c7	                            mov rdi, rax	      5307	gui.c	FUNCTION_91	CALL_7
0x400700e	      0xe800000000	                          call 0x4007013	      5307	gui.c	FUNCTION_91	CALL_7
0x4007013	    0x83bd0cffffff	               cmp dword [rbp - 0xf4], 4	      5308	gui.c	FUNCTION_91	IF_6
0x400701a	            0x7409	                            je 0x4007025	      5308	gui.c	FUNCTION_91	IF_6
0x400701c	    0x83bdf8feffff	              cmp dword [rbp - 0x108], 0	      5308	gui.c	FUNCTION_91	IF_6
0x4007023	            0x7420	                            je 0x4007045	      5308	gui.c	FUNCTION_91	IF_6
0x4007025	    0x488b8df0feff	            mov rcx, qword [rbp - 0x110]	      5309	gui.c	FUNCTION_91	CALL_8
0x400702c	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	      5309	gui.c	FUNCTION_91	CALL_8
0x4007033	      0xba2f000000	                           mov edx, 0x2f	      5309	gui.c	FUNCTION_91	CALL_8
0x4007038	          0x4889ce	                            mov rsi, rcx	      5309	gui.c	FUNCTION_91	CALL_8
0x400703b	          0x4889c7	                            mov rdi, rax	      5309	gui.c	FUNCTION_91	CALL_8
0x400703e	      0xe8e4fdffff	                     call sym.concat_esc	      5309	gui.c	FUNCTION_91	CALL_8
0x4007043	            0xeb1e	                           jmp 0x4007063	      5309	gui.c	FUNCTION_91	CALL_8
0x4007045	    0x488b8df0feff	            mov rcx, qword [rbp - 0x110]	      5311	gui.c	FUNCTION_91	CALL_9
0x400704c	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	      5311	gui.c	FUNCTION_91	CALL_9
0x4007053	      0xba3f000000	                           mov edx, 0x3f	      5311	gui.c	FUNCTION_91	CALL_9
0x4007058	          0x4889ce	                            mov rsi, rcx	      5311	gui.c	FUNCTION_91	CALL_9
0x400705b	          0x4889c7	                            mov rdi, rax	      5311	gui.c	FUNCTION_91	CALL_9
0x400705e	      0xe8c4fdffff	                     call sym.concat_esc	      5311	gui.c	FUNCTION_91	CALL_9
0x4007063	    0x8b85fcfeffff	            mov eax, dword [rbp - 0x104]	      5312	gui.c	FUNCTION_91	IF_7
0x4007069	          0x83e008	                              and eax, 8	      5312	gui.c	FUNCTION_91	IF_7
0x400706c	            0x85c0	                           test eax, eax	      5312	gui.c	FUNCTION_91	IF_7
0x400706e	            0x7414	                            je 0x4007084	      5312	gui.c	FUNCTION_91	IF_7
0x4007070	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	      5313	gui.c	FUNCTION_91	CALL_10
0x4007077	      0xbe00000000	                              mov esi, 0	      5313	gui.c	FUNCTION_91	CALL_10
0x400707c	          0x4889c7	                            mov rdi, rax	      5313	gui.c	FUNCTION_91	CALL_10
0x400707f	      0xe800000000	                          call 0x4007084	      5313	gui.c	FUNCTION_91	CALL_10
0x4007084	    0x83bd0cffffff	               cmp dword [rbp - 0xf4], 4	      5315	gui.c	FUNCTION_91	IF_8
0x400708b	            0x7575	                           jne 0x4007102	      5315	gui.c	FUNCTION_91	IF_8
0x400708d	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	      5317	gui.c	FUNCTION_91	IF_8	CALL_11
0x4007094	      0xbe00000000	                              mov esi, 0	      5317	gui.c	FUNCTION_91	IF_8	CALL_11
0x4007099	          0x4889c7	                            mov rdi, rax	      5317	gui.c	FUNCTION_91	IF_8	CALL_11
0x400709c	      0xe800000000	                          call 0x40070a1	      5317	gui.c	FUNCTION_91	IF_8	CALL_11
0x40070a1	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      5319	gui.c	FUNCTION_91	IF_8	CALL_12
0x40070a8	      0xbe00000000	                              mov esi, 0	      5319	gui.c	FUNCTION_91	IF_8	CALL_12
0x40070ad	          0x4889c7	                            mov rdi, rax	      5319	gui.c	FUNCTION_91	IF_8	CALL_12
0x40070b0	      0xe800000000	                          call 0x40070b5	      5319	gui.c	FUNCTION_91	IF_8	CALL_12
0x40070b5	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      5319	gui.c	FUNCTION_91	IF_8	CALL_12
0x40070bc	    0x4883bd18ffff	               cmp qword [rbp - 0xe8], 0	      5320	gui.c	FUNCTION_91	IF_8	IF_9
0x40070c4	            0x7419	                            je 0x40070df	      5320	gui.c	FUNCTION_91	IF_8	IF_9
0x40070c6	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	      5321	gui.c	FUNCTION_91	IF_8	CALL_13
0x40070cd	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	      5321	gui.c	FUNCTION_91	IF_8	CALL_13
0x40070d4	          0x4889d6	                            mov rsi, rdx	      5321	gui.c	FUNCTION_91	IF_8	CALL_13
0x40070d7	          0x4889c7	                            mov rdi, rax	      5321	gui.c	FUNCTION_91	IF_8	CALL_13
0x40070da	      0xe800000000	                          call 0x40070df	      5321	gui.c	FUNCTION_91	IF_8	CALL_13
0x40070df	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      5322	gui.c	FUNCTION_91	IF_8	CALL_14
0x40070e6	          0x4889c7	                            mov rdi, rax	      5322	gui.c	FUNCTION_91	IF_8	CALL_14
0x40070e9	      0xe800000000	                          call 0x40070ee	      5322	gui.c	FUNCTION_91	IF_8	CALL_14
0x40070ee	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	      5323	gui.c	FUNCTION_91	IF_8	CALL_15
0x40070f5	      0xbe00000000	                              mov esi, 0	      5323	gui.c	FUNCTION_91	IF_8	CALL_15
0x40070fa	          0x4889c7	                            mov rdi, rax	      5323	gui.c	FUNCTION_91	IF_8	CALL_15
0x40070fd	      0xe800000000	                          call 0x4007102	      5323	gui.c	FUNCTION_91	IF_8	CALL_15
0x4007102	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	      5325	gui.c	FUNCTION_91	CALL_16
0x4007109	      0xbe00000000	                              mov esi, 0	      5325	gui.c	FUNCTION_91	CALL_16
0x400710e	          0x4889c7	                            mov rdi, rax	      5325	gui.c	FUNCTION_91	CALL_16
0x4007111	      0xe800000000	                          call 0x4007116	      5325	gui.c	FUNCTION_91	CALL_16
0x4007116	    0x83bd0cffffff	               cmp dword [rbp - 0xf4], 3	      5327	gui.c	FUNCTION_91	IF_10
0x400711d	     0xf85e1000000	                           jne 0x4007204	      5327	gui.c	FUNCTION_91	IF_10
0x4007123	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      5331	gui.c	FUNCTION_91	IF_10	CALL_17
0x400712a	      0xbe03000000	                              mov esi, 3	      5331	gui.c	FUNCTION_91	IF_10	CALL_17
0x400712f	          0x4889c7	                            mov rdi, rax	      5331	gui.c	FUNCTION_91	IF_10	CALL_17
0x4007132	      0xe800000000	                          call 0x4007137	      5331	gui.c	FUNCTION_91	IF_10	CALL_17
0x4007137	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      5331	gui.c	FUNCTION_91	IF_10	CALL_17
0x400713e	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      5332	gui.c	FUNCTION_91	IF_10
0x4007145	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5333	gui.c	FUNCTION_91	IF_10	IF_11
0x400714c	          0x4885c0	                           test rax, rax	      5333	gui.c	FUNCTION_91	IF_10	IF_11
0x400714f	     0xf84af000000	                            je 0x4007204	      5333	gui.c	FUNCTION_91	IF_10	IF_11
0x4007155	      0xe800000000	                          call 0x400715a	      5335	gui.c	FUNCTION_91	IF_10	IF_11	CALL_18
0x400715a	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      5335	gui.c	FUNCTION_91	IF_10	IF_11	CALL_18
0x4007161	    0x488b8d18ffff	             mov rcx, qword [rbp - 0xe8]	      5336	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	CALL_19
0x4007168	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	      5336	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	CALL_19
0x400716f	      0xba00000000	                              mov edx, 0	      5336	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	CALL_19
0x4007174	          0x4889ce	                            mov rsi, rcx	      5336	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	CALL_19
0x4007177	          0x4889c7	                            mov rdi, rax	      5336	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	CALL_19
0x400717a	      0xe800000000	                          call 0x400717f	      5336	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	CALL_19
0x400717f	            0x85c0	                           test eax, eax	      5336	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	CALL_19
0x4007181	            0x7460	                            je 0x40071e3	      5336	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	CALL_19
0x4007183	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5337	gui.c	FUNCTION_91	IF_10	IF_11	IF_12
0x400718a	    0x483b8518ffff	             cmp rax, qword [rbp - 0xe8]	      5337	gui.c	FUNCTION_91	IF_10	IF_11	IF_12
0x4007191	            0x7550	                           jne 0x40071e3	      5337	gui.c	FUNCTION_91	IF_10	IF_11	IF_12
0x4007193	      0xe800000000	                          call 0x4007198	      5341	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	CALL_20
0x4007198	      0xe800000000	                          call 0x400719d	      5343	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_21
0x400719d	          0x83f801	                              cmp eax, 1	      5343	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_21
0x40071a0	            0x7553	                           jne 0x40071f5	      5343	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_21
0x40071a2	      0xbf00000000	                              mov edi, 0	      5346	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_22
0x40071a7	      0xe800000000	                          call 0x40071ac	      5346	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_22
0x40071ac	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5348	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_23
0x40071b0	          0x4889c2	                            mov rdx, rax	      5348	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_23
0x40071b3	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5348	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_23
0x40071ba	          0x4829c2	                            sub rdx, rax	      5348	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_23
0x40071bd	          0x4889d0	                            mov rax, rdx	      5348	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_23
0x40071c0	      0xba00000000	                              mov edx, 0	      5348	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_23
0x40071c5	      0xbe00000000	                              mov esi, 0	      5348	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_23
0x40071ca	          0x4889c7	                            mov rdi, rax	      5348	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_23
0x40071cd	      0xe800000000	                          call 0x40071d2	      5348	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_23
0x40071d2	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      5350	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_24
0x40071d9	          0x4889c7	                            mov rdi, rax	      5350	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_24
0x40071dc	      0xe800000000	                          call 0x40071e1	      5350	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_24
0x40071e1	            0xeb12	                           jmp 0x40071f5	      5343	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_21
0x40071e3	      0xbf00000000	                              mov edi, 0	      5354	gui.c	FUNCTION_91	IF_10	IF_11	CALL_26
0x40071e8	      0xe800000000	                          call 0x40071ed	      5354	gui.c	FUNCTION_91	IF_10	IF_11	CALL_26
0x40071ed	          0x4889c7	                            mov rdi, rax	      5354	gui.c	FUNCTION_91	IF_10	IF_11	CALL_26
0x40071f0	      0xe800000000	                          call 0x40071f5	      5354	gui.c	FUNCTION_91	IF_10	IF_11	CALL_26
0x40071f5	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5355	gui.c	FUNCTION_91	IF_10	IF_11	CALL_27
0x40071fc	          0x4889c7	                            mov rdi, rax	      5355	gui.c	FUNCTION_91	IF_10	IF_11	CALL_27
0x40071ff	      0xe800000000	                          call 0x4007204	      5355	gui.c	FUNCTION_91	IF_10	IF_11	CALL_27
0x4007204	    0x83bd0cffffff	               cmp dword [rbp - 0xf4], 4	      5359	gui.c	FUNCTION_91	IF_14
0x400720b	            0x751b	                           jne 0x4007228	      5359	gui.c	FUNCTION_91	IF_14
0x400720d	      0xbf00000000	                              mov edi, 0	      5362	gui.c	FUNCTION_91	IF_14	CALL_28
0x4007212	      0xe800000000	                          call 0x4007217	      5362	gui.c	FUNCTION_91	IF_14	CALL_28
0x4007217	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      5363	gui.c	FUNCTION_91	IF_14	CALL_29
0x400721e	          0x4889c7	                            mov rdi, rax	      5363	gui.c	FUNCTION_91	IF_14	CALL_29
0x4007221	      0xe800000000	                          call 0x4007226	      5363	gui.c	FUNCTION_91	IF_14	CALL_29
0x4007226	            0xeb7c	                           jmp 0x40072a4	      5363	gui.c	FUNCTION_91	IF_14	CALL_29
0x4007228	    0xc78508ffffff	          mov dword [rbp - 0xf8], 0x20c 	      5367	gui.c	FUNCTION_91	ELSE_4
0x4007232	    0x83bd0cffffff	               cmp dword [rbp - 0xf4], 3	      5371	gui.c	FUNCTION_91	ELSE_4	IF_15
0x4007239	            0x750a	                           jne 0x4007245	      5371	gui.c	FUNCTION_91	ELSE_4	IF_15
0x400723b	    0x818508ffffff	           add dword [rbp - 0xf8], 0x100	      5372	gui.c	FUNCTION_91	ELSE_4	IF_15
0x4007245	    0x8b0500000000	            mov eax, dword [0x0400724b] 	      5373	gui.c	FUNCTION_91	ELSE_4
0x400724b	    0x898514ffffff	             mov dword [rbp - 0xec], eax	      5373	gui.c	FUNCTION_91	ELSE_4
0x4007251	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x4007258	    0x83bdf8feffff	              cmp dword [rbp - 0x108], 0	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x400725f	            0x7407	                            je 0x4007268	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x4007261	      0xbe2f000000	                           mov esi, 0x2f	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x4007266	            0xeb05	                           jmp 0x400726d	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x4007268	      0xbe3f000000	                           mov esi, 0x3f	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x400726d	    0x8b9508ffffff	             mov edx, dword [rbp - 0xf8]	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x4007273	        0x4883ec08	                              sub rsp, 8	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x4007277	            0x6a00	                                  push 0	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x4007279	    0x41b900000000	                              mov r9d, 0	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x400727f	          0x4189d0	                            mov r8d, edx	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x4007282	      0xb901000000	                              mov ecx, 1	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x4007287	          0x4889c2	                            mov rdx, rax	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x400728a	      0xbf00000000	                              mov edi, 0	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x400728f	      0xe800000000	                          call 0x4007294	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x4007294	        0x4883c410	                           add rsp, 0x10	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x4007298	    0x8b8514ffffff	             mov eax, dword [rbp - 0xec]	      5376	gui.c	FUNCTION_91	ELSE_4
0x400729e	    0x890500000000	            mov dword [0x040072a4], eax 	      5376	gui.c	FUNCTION_91	ELSE_4
0x40072a4	    0x8b8510ffffff	             mov eax, dword [rbp - 0xf0]	      5381	gui.c	FUNCTION_91
0x40072aa	    0x890500000000	            mov dword [0x040072b0], eax 	      5381	gui.c	FUNCTION_91
0x40072b0	    0x8b0500000000	            mov eax, dword [0x040072b6] 	      5383	gui.c	FUNCTION_91	IF_16
0x40072b6	          0x83e011	                           and eax, 0x11	      5383	gui.c	FUNCTION_91	IF_16
0x40072b9	            0x85c0	                           test eax, eax	      5383	gui.c	FUNCTION_91	IF_16
0x40072bb	            0x7419	                            je 0x40072d6	      5383	gui.c	FUNCTION_91	IF_16
0x40072bd	      0xe800000000	                          call 0x40072c2	      5385	gui.c	FUNCTION_91	IF_16	CALL_31
0x40072c2	    0xc70500000000	               mov dword [0x040072cc], 0	      5386	gui.c	FUNCTION_91	IF_16
0x40072cc	    0xc70500000000	               mov dword [0x040072d6], 0	      5387	gui.c	FUNCTION_91	IF_16
0x40072d6	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      5390	gui.c	FUNCTION_91	CALL_32
0x40072dd	          0x4889c7	                            mov rdi, rax	      5390	gui.c	FUNCTION_91	CALL_32
0x40072e0	      0xe800000000	                          call 0x40072e5	      5390	gui.c	FUNCTION_91	CALL_32
0x40072e5	    0xc70500000000	               mov dword [0x040072ef], 0	      5391	gui.c	FUNCTION_91
0x40072ef	    0x8b8520ffffff	             mov eax, dword [rbp - 0xe0]	      5392	gui.c	FUNCTION_91
0x40072f5	            0x85c0	                           test eax, eax	      5392	gui.c	FUNCTION_91
0x40072f7	           0xf9fc0	                                 setg al	      5392	gui.c	FUNCTION_91
0x40072fa	           0xfb6c0	                           movzx eax, al	      5392	gui.c	FUNCTION_91
0x40072fd	        0x488b4df8	                mov rcx, qword [rbp - 8]	      5393	gui.c	FUNCTION_91
0x4007301	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      5393	gui.c	FUNCTION_91
0x400730a	            0x7405	                            je 0x4007311	      5393	gui.c	FUNCTION_91
0x400730c	      0xe800000000	                          call 0x4007311	      5393	gui.c	FUNCTION_91
0x4007311	              0xc9	                                   leave	      5393	gui.c	FUNCTION_91
0x4007312	              0xc3	                                     ret	      5393	gui.c	FUNCTION_91
scroll_line_len	IF,2:functions,0:ELSE,0:CALL,3:SWITCH,0:WHILE,0:FOR,1:DO,0	41
0x4005a66	              0x55	                                push rbp	      4534	gui.c	FUNCTION_68
0x4005a67	          0x4889e5	                            mov rbp, rsp	      4534	gui.c	FUNCTION_68
0x4005a6a	        0x4883ec20	                           sub rsp, 0x20	      4534	gui.c	FUNCTION_68
0x4005a6e	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4534	gui.c	FUNCTION_68
0x4005a72	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4539	gui.c	FUNCTION_68	CALL_1
0x4005a76	          0x4889c7	                            mov rdi, rax	      4539	gui.c	FUNCTION_68	CALL_1
0x4005a79	      0xe800000000	                          call 0x4005a7e	      4539	gui.c	FUNCTION_68	CALL_1
0x4005a7e	        0x488945f8	                mov qword [rbp - 8], rax	      4539	gui.c	FUNCTION_68	CALL_1
0x4005a82	    0xc745f0000000	               mov dword [rbp - 0x10], 0	      4540	gui.c	FUNCTION_68
0x4005a89	        0x488b45f8	                mov rax, qword [rbp - 8]	      4541	gui.c	FUNCTION_68	IF_1
0x4005a8d	           0xfb600	                   movzx eax, byte [rax]	      4541	gui.c	FUNCTION_68	IF_1
0x4005a90	            0x84c0	                             test al, al	      4541	gui.c	FUNCTION_68	IF_1
0x4005a92	            0x744f	                            je 0x4005ae3	      4541	gui.c	FUNCTION_68	IF_1
0x4005a94	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      4544	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_2
0x4005a97	        0x488b45f8	                mov rax, qword [rbp - 8]	      4544	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_2
0x4005a9b	            0x89d6	                            mov esi, edx	      4544	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_2
0x4005a9d	          0x4889c7	                            mov rdi, rax	      4544	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_2
0x4005aa0	      0xe800000000	                          call 0x4005aa5	      4544	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_2
0x4005aa5	          0x8945f4	              mov dword [rbp - 0xc], eax	      4544	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_2
0x4005aa8	    0x8b0500000000	            mov eax, dword [0x04005aae] 	      4545	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_3
0x4005aae	            0x85c0	                           test eax, eax	      4545	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_3
0x4005ab0	            0x7412	                            je 0x4005ac4	      4545	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_3
0x4005ab2	    0x488b05000000	            mov rax, qword [0x04005ab9] 	      4545	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_3
0x4005ab9	        0x488b55f8	                mov rdx, qword [rbp - 8]	      4545	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_3
0x4005abd	          0x4889d7	                            mov rdi, rdx	      4545	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_3
0x4005ac0	            0xffd0	                                call rax	      4545	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_3
0x4005ac2	            0xeb05	                           jmp 0x4005ac9	      4545	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_3
0x4005ac4	      0xb801000000	                              mov eax, 1	      4545	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_3
0x4005ac9	            0x4898	                                    cdqe	      4545	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_3
0x4005acb	        0x480145f8	                add qword [rbp - 8], rax	      4545	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_3
0x4005acf	        0x488b45f8	                mov rax, qword [rbp - 8]	      4546	gui.c	FUNCTION_68	IF_1	FOR_1	IF_2
0x4005ad3	           0xfb600	                   movzx eax, byte [rax]	      4546	gui.c	FUNCTION_68	IF_1	FOR_1	IF_2
0x4005ad6	            0x84c0	                             test al, al	      4546	gui.c	FUNCTION_68	IF_1	FOR_1	IF_2
0x4005ad8	            0x7408	                            je 0x4005ae2	      4546	gui.c	FUNCTION_68	IF_1	FOR_1	IF_2
0x4005ada	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      4548	gui.c	FUNCTION_68	IF_1	FOR_1
0x4005add	           0x145f0	             add dword [rbp - 0x10], eax	      4548	gui.c	FUNCTION_68	IF_1	FOR_1
0x4005ae0	            0xebb2	                           jmp 0x4005a94	      4549	gui.c	FUNCTION_68	IF_1	FOR_1
0x4005ae2	              0x90	                                     nop	      4547	gui.c	FUNCTION_68	IF_1	FOR_1	IF_2
0x4005ae3	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      4550	gui.c	FUNCTION_68
0x4005ae6	              0xc9	                                   leave	      4551	gui.c	FUNCTION_68
0x4005ae7	              0xc3	                                     ret	      4551	gui.c	FUNCTION_68
gui_exit	IF,0:functions,0:ELSE,0:CALL,2:SWITCH,0:WHILE,0:FOR,0:DO,0	12
0x4000bb0	              0x55	                                push rbp	       797	gui.c	FUNCTION_8
0x4000bb1	          0x4889e5	                            mov rbp, rsp	       797	gui.c	FUNCTION_8
0x4000bb4	        0x4883ec10	                           sub rsp, 0x10	       797	gui.c	FUNCTION_8
0x4000bb8	          0x897dfc	                mov dword [rbp - 4], edi	       797	gui.c	FUNCTION_8
0x4000bbb	      0xe800000000	                          call 0x4000bc0	       800	gui.c	FUNCTION_8	CALL_1
0x4000bc0	    0xc70500000000	               mov dword [0x04000bca], 0	       801	gui.c	FUNCTION_8
0x4000bca	          0x8b45fc	                mov eax, dword [rbp - 4]	       802	gui.c	FUNCTION_8	CALL_2
0x4000bcd	            0x89c7	                            mov edi, eax	       802	gui.c	FUNCTION_8	CALL_2
0x4000bcf	      0xe800000000	                          call 0x4000bd4	       802	gui.c	FUNCTION_8	CALL_2
0x4000bd4	              0x90	                                     nop	       803	gui.c	FUNCTION_8
0x4000bd5	              0xc9	                                   leave	       803	gui.c	FUNCTION_8
0x4000bd6	              0xc3	                                     ret	       803	gui.c	FUNCTION_8
concat_esc	IF,2:functions,0:ELSE,0:CALL,3:SWITCH,0:WHILE,2:FOR,0:DO,0	52
0x4006e27	              0x55	                                push rbp	      5246	gui.c	FUNCTION_90
0x4006e28	          0x4889e5	                            mov rbp, rsp	      5246	gui.c	FUNCTION_90
0x4006e2b	        0x4883ec30	                           sub rsp, 0x30	      5246	gui.c	FUNCTION_90
0x4006e2f	        0x48897de8	             mov qword [rbp - 0x18], rdi	      5246	gui.c	FUNCTION_90
0x4006e33	        0x488975e0	             mov qword [rbp - 0x20], rsi	      5246	gui.c	FUNCTION_90
0x4006e37	          0x8955dc	             mov dword [rbp - 0x24], edx	      5246	gui.c	FUNCTION_90
0x4006e3a	      0xe984000000	                           jmp 0x4006ec3	      5247	gui.c	FUNCTION_90	WHILE_1
0x4006e3f	    0x488b05000000	            mov rax, qword [0x04006e46] 	      5250	gui.c	FUNCTION_90	WHILE_1
0x4006e46	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      5250	gui.c	FUNCTION_90	WHILE_1
0x4006e4a	          0x4889d7	                            mov rdi, rdx	      5250	gui.c	FUNCTION_90	WHILE_1
0x4006e4d	            0xffd0	                                call rax	      5250	gui.c	FUNCTION_90	WHILE_1
0x4006e4f	          0x8945fc	                mov dword [rbp - 4], eax	      5250	gui.c	FUNCTION_90	WHILE_1
0x4006e52	        0x837dfc01	                  cmp dword [rbp - 4], 1	      5252	gui.c	FUNCTION_90	WHILE_1	IF_1
0x4006e56	            0x7e2e	                           jle 0x4006e86	      5252	gui.c	FUNCTION_90	WHILE_1	IF_1
0x4006e58	            0xeb20	                           jmp 0x4006e7a	      5254	gui.c	FUNCTION_90	WHILE_1	IF_1	WHILE_2
0x4006e5a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5255	gui.c	FUNCTION_90	WHILE_1	IF_1	CALL_1
0x4006e5e	        0x488d5001	                      lea rdx, [rax + 1]	      5255	gui.c	FUNCTION_90	WHILE_1	IF_1	CALL_1
0x4006e62	        0x488955e0	             mov qword [rbp - 0x20], rdx	      5255	gui.c	FUNCTION_90	WHILE_1	IF_1	CALL_1
0x4006e66	           0xfb600	                   movzx eax, byte [rax]	      5255	gui.c	FUNCTION_90	WHILE_1	IF_1	CALL_1
0x4006e69	           0xfb6d0	                           movzx edx, al	      5255	gui.c	FUNCTION_90	WHILE_1	IF_1	CALL_1
0x4006e6c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5255	gui.c	FUNCTION_90	WHILE_1	IF_1	CALL_1
0x4006e70	            0x89d6	                            mov esi, edx	      5255	gui.c	FUNCTION_90	WHILE_1	IF_1	CALL_1
0x4006e72	          0x4889c7	                            mov rdi, rax	      5255	gui.c	FUNCTION_90	WHILE_1	IF_1	CALL_1
0x4006e75	      0xe800000000	                          call 0x4006e7a	      5255	gui.c	FUNCTION_90	WHILE_1	IF_1	CALL_1
0x4006e7a	        0x836dfc01	                  sub dword [rbp - 4], 1	      5254	gui.c	FUNCTION_90	WHILE_1	IF_1	WHILE_2
0x4006e7e	        0x837dfc00	                  cmp dword [rbp - 4], 0	      5254	gui.c	FUNCTION_90	WHILE_1	IF_1	WHILE_2
0x4006e82	            0x79d6	                           jns 0x4006e5a	      5254	gui.c	FUNCTION_90	WHILE_1	IF_1	WHILE_2
0x4006e84	            0xeb3d	                           jmp 0x4006ec3	      5256	gui.c	FUNCTION_90	WHILE_1	IF_1
0x4006e86	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5259	gui.c	FUNCTION_90	WHILE_1	IF_2
0x4006e8a	           0xfb600	                   movzx eax, byte [rax]	      5259	gui.c	FUNCTION_90	WHILE_1	IF_2
0x4006e8d	           0xfb6c0	                           movzx eax, al	      5259	gui.c	FUNCTION_90	WHILE_1	IF_2
0x4006e90	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	      5259	gui.c	FUNCTION_90	WHILE_1	IF_2
0x4006e93	            0x7511	                           jne 0x4006ea6	      5259	gui.c	FUNCTION_90	WHILE_1	IF_2
0x4006e95	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5260	gui.c	FUNCTION_90	WHILE_1	CALL_2
0x4006e99	      0xbe5c000000	                           mov esi, 0x5c	      5260	gui.c	FUNCTION_90	WHILE_1	CALL_2
0x4006e9e	          0x4889c7	                            mov rdi, rax	      5260	gui.c	FUNCTION_90	WHILE_1	CALL_2
0x4006ea1	      0xe800000000	                          call 0x4006ea6	      5260	gui.c	FUNCTION_90	WHILE_1	CALL_2
0x4006ea6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5261	gui.c	FUNCTION_90	WHILE_1	CALL_3
0x4006eaa	           0xfb600	                   movzx eax, byte [rax]	      5261	gui.c	FUNCTION_90	WHILE_1	CALL_3
0x4006ead	           0xfb6d0	                           movzx edx, al	      5261	gui.c	FUNCTION_90	WHILE_1	CALL_3
0x4006eb0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5261	gui.c	FUNCTION_90	WHILE_1	CALL_3
0x4006eb4	            0x89d6	                            mov esi, edx	      5261	gui.c	FUNCTION_90	WHILE_1	CALL_3
0x4006eb6	          0x4889c7	                            mov rdi, rax	      5261	gui.c	FUNCTION_90	WHILE_1	CALL_3
0x4006eb9	      0xe800000000	                          call 0x4006ebe	      5261	gui.c	FUNCTION_90	WHILE_1	CALL_3
0x4006ebe	      0x488345e001	               add qword [rbp - 0x20], 1	      5262	gui.c	FUNCTION_90	WHILE_1
0x4006ec3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5247	gui.c	FUNCTION_90	WHILE_1
0x4006ec7	           0xfb600	                   movzx eax, byte [rax]	      5247	gui.c	FUNCTION_90	WHILE_1
0x4006eca	            0x84c0	                             test al, al	      5247	gui.c	FUNCTION_90	WHILE_1
0x4006ecc	     0xf856dffffff	                           jne 0x4006e3f	      5247	gui.c	FUNCTION_90	WHILE_1
0x4006ed2	              0x90	                                     nop	      5264	gui.c	FUNCTION_90
0x4006ed3	              0xc9	                                   leave	      5264	gui.c	FUNCTION_90
0x4006ed4	              0xc3	                                     ret	      5264	gui.c	FUNCTION_90
gui_focus_change	IF,1:functions,0:ELSE,0:CALL,3:SWITCH,0:WHILE,0:FOR,0:DO,0	37
0x400613f	              0x55	                                push rbp	      4816	gui.c	FUNCTION_78
0x4006140	          0x4889e5	                            mov rbp, rsp	      4816	gui.c	FUNCTION_78
0x4006143	        0x4883ec20	                           sub rsp, 0x20	      4816	gui.c	FUNCTION_78
0x4006147	          0x897dec	             mov dword [rbp - 0x14], edi	      4816	gui.c	FUNCTION_78
0x400614a	    0x64488b042528	                mov rax, qword fs:[0x28]	      4816	gui.c	FUNCTION_78
0x4006153	        0x488945f8	                mov qword [rbp - 8], rax	      4816	gui.c	FUNCTION_78
0x4006157	            0x31c0	                            xor eax, eax	      4816	gui.c	FUNCTION_78
0x4006159	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      4822	gui.c	FUNCTION_78
0x400615c	    0x890500000000	            mov dword [0x04006162], eax 	      4822	gui.c	FUNCTION_78
0x4006162	      0xbe00000000	                              mov esi, 0	      4823	gui.c	FUNCTION_78	CALL_1
0x4006167	      0xbf01000000	                              mov edi, 1	      4823	gui.c	FUNCTION_78	CALL_1
0x400616c	      0xe800000000	                          call 0x4006171	      4823	gui.c	FUNCTION_78	CALL_1
0x4006171	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      4826	gui.c	FUNCTION_78	CALL_2
0x4006174	            0x89c7	                            mov edi, eax	      4826	gui.c	FUNCTION_78	CALL_2
0x4006176	      0xe800000000	                          call 0x400617b	      4826	gui.c	FUNCTION_78	CALL_2
0x400617b	    0x8b0500000000	            mov eax, dword [0x04006181] 	      4832	gui.c	FUNCTION_78	IF_1
0x4006181	            0x85c0	                           test eax, eax	      4832	gui.c	FUNCTION_78	IF_1
0x4006183	            0x752e	                           jne 0x40061b3	      4832	gui.c	FUNCTION_78	IF_1
0x4006185	        0xc645f09b	            mov byte [rbp - 0x10], 0x9b 	      4836	gui.c	FUNCTION_78	IF_1
0x4006189	        0xc645f1fd	              mov byte [rbp - 0xf], 0xfd	      4837	gui.c	FUNCTION_78	IF_1
0x400618d	        0x837dec00	               cmp dword [rbp - 0x14], 0	      4838	gui.c	FUNCTION_78	IF_1
0x4006191	            0x7407	                            je 0x400619a	      4838	gui.c	FUNCTION_78	IF_1
0x4006193	      0xb862000000	                           mov eax, 0x62	      4838	gui.c	FUNCTION_78	IF_1
0x4006198	            0xeb05	                           jmp 0x400619f	      4838	gui.c	FUNCTION_78	IF_1
0x400619a	      0xb863000000	                           mov eax, 0x63	      4838	gui.c	FUNCTION_78	IF_1
0x400619f	          0x8845f2	                mov byte [rbp - 0xe], al	      4838	gui.c	FUNCTION_78	IF_1
0x40061a2	        0x488d45f0	                   lea rax, [rbp - 0x10]	      4839	gui.c	FUNCTION_78	IF_1	CALL_3
0x40061a6	      0xbe03000000	                              mov esi, 3	      4839	gui.c	FUNCTION_78	IF_1	CALL_3
0x40061ab	          0x4889c7	                            mov rdi, rax	      4839	gui.c	FUNCTION_78	IF_1	CALL_3
0x40061ae	      0xe800000000	                          call 0x40061b3	      4839	gui.c	FUNCTION_78	IF_1	CALL_3
0x40061b3	              0x90	                                     nop	      4842	gui.c	FUNCTION_78
0x40061b4	        0x488b45f8	                mov rax, qword [rbp - 8]	      4842	gui.c	FUNCTION_78
0x40061b8	    0x644833042528	                xor rax, qword fs:[0x28]	      4842	gui.c	FUNCTION_78
0x40061c1	            0x7405	                            je 0x40061c8	      4842	gui.c	FUNCTION_78
0x40061c3	      0xe800000000	                          call 0x40061c8	      4842	gui.c	FUNCTION_78
0x40061c8	              0xc9	                                   leave	      4842	gui.c	FUNCTION_78
0x40061c9	              0xc3	                                     ret	      4842	gui.c	FUNCTION_78
gui_screenstr	IF,9:functions,0:ELSE,4:CALL,9:SWITCH,0:WHILE,0:FOR,2:DO,0	213
0x4002751	              0x55	                                push rbp	      2150	gui.c	FUNCTION_38
0x4002752	          0x4889e5	                            mov rbp, rsp	      2150	gui.c	FUNCTION_38
0x4002755	        0x4883ec40	                           sub rsp, 0x40	      2150	gui.c	FUNCTION_38
0x4002759	          0x897ddc	             mov dword [rbp - 0x24], edi	      2150	gui.c	FUNCTION_38
0x400275c	          0x8975d8	             mov dword [rbp - 0x28], esi	      2150	gui.c	FUNCTION_38
0x400275f	          0x8955d4	             mov dword [rbp - 0x2c], edx	      2150	gui.c	FUNCTION_38
0x4002762	        0x48894dc8	             mov qword [rbp - 0x38], rcx	      2150	gui.c	FUNCTION_38
0x4002766	        0x4c8945c0	              mov qword [rbp - 0x40], r8	      2150	gui.c	FUNCTION_38
0x400276a	        0x44894dd0	             mov dword [rbp - 0x30], r9d	      2150	gui.c	FUNCTION_38
0x400276e	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      2152	gui.c	FUNCTION_38
0x4002775	        0x837dd800	               cmp dword [rbp - 0x28], 0	      2156	gui.c	FUNCTION_38	IF_1
0x4002779	            0x7f0a	                            jg 0x4002785	      2156	gui.c	FUNCTION_38	IF_1
0x400277b	      0xb801000000	                              mov eax, 1	      2157	gui.c	FUNCTION_38	IF_1
0x4002780	      0xe99c020000	                           jmp 0x4002a21	      2157	gui.c	FUNCTION_38	IF_1
0x4002785	    0x8b0500000000	            mov eax, dword [0x0400278b] 	      2159	gui.c	FUNCTION_38	IF_2
0x400278b	            0x85c0	                           test eax, eax	      2159	gui.c	FUNCTION_38	IF_2
0x400278d	     0xf840f010000	                            je 0x40028a2	      2159	gui.c	FUNCTION_38	IF_2
0x4002793	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      2161	gui.c	FUNCTION_38	IF_2	CALL_1
0x4002796	            0x89d0	                            mov eax, edx	      2161	gui.c	FUNCTION_38	IF_2	CALL_1
0x4002798	          0xc1e002	                              shl eax, 2	      2161	gui.c	FUNCTION_38	IF_2	CALL_1
0x400279b	             0x1d0	                            add eax, edx	      2161	gui.c	FUNCTION_38	IF_2	CALL_1
0x400279d	          0xc1e002	                              shl eax, 2	      2161	gui.c	FUNCTION_38	IF_2	CALL_1
0x40027a0	             0x1d0	                            add eax, edx	      2161	gui.c	FUNCTION_38	IF_2	CALL_1
0x40027a2	          0x83c001	                              add eax, 1	      2161	gui.c	FUNCTION_38	IF_2	CALL_1
0x40027a5	            0x89c7	                            mov edi, eax	      2161	gui.c	FUNCTION_38	IF_2	CALL_1
0x40027a7	      0xe800000000	                          call 0x40027ac	      2161	gui.c	FUNCTION_38	IF_2	CALL_1
0x40027ac	        0x488945f8	                mov qword [rbp - 8], rax	      2161	gui.c	FUNCTION_38	IF_2	CALL_1
0x40027b0	      0x48837df800	                  cmp qword [rbp - 8], 0	      2162	gui.c	FUNCTION_38	IF_2	IF_3
0x40027b5	            0x750a	                           jne 0x40027c1	      2162	gui.c	FUNCTION_38	IF_2	IF_3
0x40027b7	      0xb801000000	                              mov eax, 1	      2163	gui.c	FUNCTION_38	IF_2	IF_3
0x40027bc	      0xe960020000	                           jmp 0x4002a21	      2163	gui.c	FUNCTION_38	IF_2	IF_3
0x40027c1	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2165	gui.c	FUNCTION_38	IF_2	FOR_1
0x40027c4	          0x8945f0	             mov dword [rbp - 0x10], eax	      2165	gui.c	FUNCTION_38	IF_2	FOR_1
0x40027c7	            0xeb7d	                           jmp 0x4002846	      2165	gui.c	FUNCTION_38	IF_2	FOR_1
0x40027c9	    0x488b15000000	            mov rdx, qword [0x040027d0] 	      2167	gui.c	FUNCTION_38	IF_2	FOR_1	IF_4
0x40027d0	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      2167	gui.c	FUNCTION_38	IF_2	FOR_1	IF_4
0x40027d3	            0x4898	                                    cdqe	      2167	gui.c	FUNCTION_38	IF_2	FOR_1	IF_4
0x40027d5	          0x4801d0	                            add rax, rdx	      2167	gui.c	FUNCTION_38	IF_2	FOR_1	IF_4
0x40027d8	           0xfb600	                   movzx eax, byte [rax]	      2167	gui.c	FUNCTION_38	IF_2	FOR_1	IF_4
0x40027db	            0x84c0	                             test al, al	      2167	gui.c	FUNCTION_38	IF_2	FOR_1	IF_4
0x40027dd	            0x7462	                            je 0x4002841	      2167	gui.c	FUNCTION_38	IF_2	FOR_1	IF_4
0x40027df	    0x488b05000000	            mov rax, qword [0x040027e6] 	      2170	gui.c	FUNCTION_38	IF_2	FOR_1	IF_5
0x40027e6	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      2170	gui.c	FUNCTION_38	IF_2	FOR_1	IF_5
0x40027e9	          0x4863d2	                         movsxd rdx, edx	      2170	gui.c	FUNCTION_38	IF_2	FOR_1	IF_5
0x40027ec	        0x48c1e202	                              shl rdx, 2	      2170	gui.c	FUNCTION_38	IF_2	FOR_1	IF_5
0x40027f0	          0x4801d0	                            add rax, rdx	      2170	gui.c	FUNCTION_38	IF_2	FOR_1	IF_5
0x40027f3	            0x8b00	                    mov eax, dword [rax]	      2170	gui.c	FUNCTION_38	IF_2	FOR_1	IF_5
0x40027f5	            0x85c0	                           test eax, eax	      2170	gui.c	FUNCTION_38	IF_2	FOR_1	IF_5
0x40027f7	            0x7529	                           jne 0x4002822	      2170	gui.c	FUNCTION_38	IF_2	FOR_1	IF_5
0x40027f9	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2171	gui.c	FUNCTION_38	IF_2	FOR_1	IF_5
0x40027fc	          0x8d5001	                      lea edx, [rax + 1]	      2171	gui.c	FUNCTION_38	IF_2	FOR_1	IF_5
0x40027ff	          0x8955ec	             mov dword [rbp - 0x14], edx	      2171	gui.c	FUNCTION_38	IF_2	FOR_1	IF_5
0x4002802	          0x4863d0	                         movsxd rdx, eax	      2171	gui.c	FUNCTION_38	IF_2	FOR_1	IF_5
0x4002805	        0x488b45f8	                mov rax, qword [rbp - 8]	      2171	gui.c	FUNCTION_38	IF_2	FOR_1	IF_5
0x4002809	          0x4801c2	                            add rdx, rax	      2171	gui.c	FUNCTION_38	IF_2	FOR_1	IF_5
0x400280c	    0x488b0d000000	            mov rcx, qword [0x04002813] 	      2171	gui.c	FUNCTION_38	IF_2	FOR_1	IF_5
0x4002813	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      2171	gui.c	FUNCTION_38	IF_2	FOR_1	IF_5
0x4002816	            0x4898	                                    cdqe	      2171	gui.c	FUNCTION_38	IF_2	FOR_1	IF_5
0x4002818	          0x4801c8	                            add rax, rcx	      2171	gui.c	FUNCTION_38	IF_2	FOR_1	IF_5
0x400281b	           0xfb600	                   movzx eax, byte [rax]	      2171	gui.c	FUNCTION_38	IF_2	FOR_1	IF_5
0x400281e	            0x8802	                      mov byte [rdx], al	      2171	gui.c	FUNCTION_38	IF_2	FOR_1	IF_5
0x4002820	            0xeb20	                           jmp 0x4002842	      2171	gui.c	FUNCTION_38	IF_2	FOR_1	IF_5
0x4002822	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2173	gui.c	FUNCTION_38	IF_2	FOR_1	CALL_2
0x4002825	          0x4863d0	                         movsxd rdx, eax	      2173	gui.c	FUNCTION_38	IF_2	FOR_1	CALL_2
0x4002828	        0x488b45f8	                mov rax, qword [rbp - 8]	      2173	gui.c	FUNCTION_38	IF_2	FOR_1	CALL_2
0x400282c	          0x4801c2	                            add rdx, rax	      2173	gui.c	FUNCTION_38	IF_2	FOR_1	CALL_2
0x400282f	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      2173	gui.c	FUNCTION_38	IF_2	FOR_1	CALL_2
0x4002832	          0x4889d6	                            mov rsi, rdx	      2173	gui.c	FUNCTION_38	IF_2	FOR_1	CALL_2
0x4002835	            0x89c7	                            mov edi, eax	      2173	gui.c	FUNCTION_38	IF_2	FOR_1	CALL_2
0x4002837	      0xe800000000	                          call 0x400283c	      2173	gui.c	FUNCTION_38	IF_2	FOR_1	CALL_2
0x400283c	           0x145ec	             add dword [rbp - 0x14], eax	      2173	gui.c	FUNCTION_38	IF_2	FOR_1	CALL_2
0x400283f	            0xeb01	                           jmp 0x4002842	      2173	gui.c	FUNCTION_38	IF_2	FOR_1	CALL_2
0x4002841	              0x90	                                     nop	      2168	gui.c	FUNCTION_38	IF_2	FOR_1	IF_4
0x4002842	        0x8345f001	               add dword [rbp - 0x10], 1	      2165	gui.c	FUNCTION_38	IF_2	FOR_1
0x4002846	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      2165	gui.c	FUNCTION_38	IF_2	FOR_1
0x4002849	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      2165	gui.c	FUNCTION_38	IF_2	FOR_1
0x400284c	             0x1d0	                            add eax, edx	      2165	gui.c	FUNCTION_38	IF_2	FOR_1
0x400284e	          0x3b45f0	             cmp eax, dword [rbp - 0x10]	      2165	gui.c	FUNCTION_38	IF_2	FOR_1
0x4002851	     0xf8f72ffffff	                            jg 0x40027c9	      2165	gui.c	FUNCTION_38	IF_2	FOR_1
0x4002857	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2176	gui.c	FUNCTION_38	IF_2
0x400285a	          0x4863d0	                         movsxd rdx, eax	      2176	gui.c	FUNCTION_38	IF_2
0x400285d	        0x488b45f8	                mov rax, qword [rbp - 8]	      2176	gui.c	FUNCTION_38	IF_2
0x4002861	          0x4801d0	                            add rax, rdx	      2176	gui.c	FUNCTION_38	IF_2
0x4002864	          0xc60000	                       mov byte [rax], 0	      2176	gui.c	FUNCTION_38	IF_2
0x4002867	        0x448b45d0	             mov r8d, dword [rbp - 0x30]	      2177	gui.c	FUNCTION_38	IF_2	CALL_3
0x400286b	        0x488b7dc0	             mov rdi, qword [rbp - 0x40]	      2177	gui.c	FUNCTION_38	IF_2	CALL_3
0x400286f	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      2177	gui.c	FUNCTION_38	IF_2	CALL_3
0x4002873	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      2177	gui.c	FUNCTION_38	IF_2	CALL_3
0x4002876	          0x8b75ec	             mov esi, dword [rbp - 0x14]	      2177	gui.c	FUNCTION_38	IF_2	CALL_3
0x4002879	        0x488b45f8	                mov rax, qword [rbp - 8]	      2177	gui.c	FUNCTION_38	IF_2	CALL_3
0x400287d	          0x4589c1	                            mov r9d, r8d	      2177	gui.c	FUNCTION_38	IF_2	CALL_3
0x4002880	          0x4989f8	                             mov r8, rdi	      2177	gui.c	FUNCTION_38	IF_2	CALL_3
0x4002883	          0x4889c7	                            mov rdi, rax	      2177	gui.c	FUNCTION_38	IF_2	CALL_3
0x4002886	      0xe800000000	                          call 0x400288b	      2177	gui.c	FUNCTION_38	IF_2	CALL_3
0x400288b	          0x8945f4	              mov dword [rbp - 0xc], eax	      2177	gui.c	FUNCTION_38	IF_2	CALL_3
0x400288e	        0x488b45f8	                mov rax, qword [rbp - 8]	      2178	gui.c	FUNCTION_38	IF_2	CALL_4
0x4002892	          0x4889c7	                            mov rdi, rax	      2178	gui.c	FUNCTION_38	IF_2	CALL_4
0x4002895	      0xe800000000	                          call 0x400289a	      2178	gui.c	FUNCTION_38	IF_2	CALL_4
0x400289a	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      2180	gui.c	FUNCTION_38	IF_2
0x400289d	      0xe97f010000	                           jmp 0x4002a21	      2180	gui.c	FUNCTION_38	IF_2
0x40028a2	    0x8b0500000000	            mov eax, dword [0x040028a8] 	      2182	gui.c	FUNCTION_38	ELSE_2	IF_6
0x40028a8	      0x3dcc260000	                         cmp eax, 0x26cc	      2182	gui.c	FUNCTION_38	ELSE_2	IF_6
0x40028ad	     0xf853f010000	                           jne 0x40029f2	      2182	gui.c	FUNCTION_38	ELSE_2	IF_6
0x40028b3	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      2184	gui.c	FUNCTION_38	ELSE_2	IF_6	CALL_5
0x40028b6	             0x1c0	                            add eax, eax	      2184	gui.c	FUNCTION_38	ELSE_2	IF_6	CALL_5
0x40028b8	          0x83c001	                              add eax, 1	      2184	gui.c	FUNCTION_38	ELSE_2	IF_6	CALL_5
0x40028bb	            0x89c7	                            mov edi, eax	      2184	gui.c	FUNCTION_38	ELSE_2	IF_6	CALL_5
0x40028bd	      0xe800000000	                          call 0x40028c2	      2184	gui.c	FUNCTION_38	ELSE_2	IF_6	CALL_5
0x40028c2	        0x488945f8	                mov qword [rbp - 8], rax	      2184	gui.c	FUNCTION_38	ELSE_2	IF_6	CALL_5
0x40028c6	      0x48837df800	                  cmp qword [rbp - 8], 0	      2185	gui.c	FUNCTION_38	ELSE_2	IF_6	IF_7
0x40028cb	            0x750a	                           jne 0x40028d7	      2185	gui.c	FUNCTION_38	ELSE_2	IF_6	IF_7
0x40028cd	      0xb801000000	                              mov eax, 1	      2186	gui.c	FUNCTION_38	ELSE_2	IF_6	IF_7
0x40028d2	      0xe94a010000	                           jmp 0x4002a21	      2186	gui.c	FUNCTION_38	ELSE_2	IF_6	IF_7
0x40028d7	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2188	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2
0x40028da	          0x8945f0	             mov dword [rbp - 0x10], eax	      2188	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2
0x40028dd	      0xe9b7000000	                           jmp 0x4002999	      2188	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2
0x40028e2	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2190	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2
0x40028e5	          0x8d5001	                      lea edx, [rax + 1]	      2190	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2
0x40028e8	          0x8955ec	             mov dword [rbp - 0x14], edx	      2190	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2
0x40028eb	          0x4863d0	                         movsxd rdx, eax	      2190	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2
0x40028ee	        0x488b45f8	                mov rax, qword [rbp - 8]	      2190	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2
0x40028f2	          0x4801c2	                            add rdx, rax	      2190	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2
0x40028f5	    0x488b0d000000	            mov rcx, qword [0x040028fc] 	      2190	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2
0x40028fc	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      2190	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2
0x40028ff	            0x4898	                                    cdqe	      2190	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2
0x4002901	          0x4801c8	                            add rax, rcx	      2190	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2
0x4002904	           0xfb600	                   movzx eax, byte [rax]	      2190	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2
0x4002907	            0x8802	                      mov byte [rdx], al	      2190	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2
0x4002909	    0x488b15000000	            mov rdx, qword [0x04002910] 	      2193	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	IF_8
0x4002910	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      2193	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	IF_8
0x4002913	            0x4898	                                    cdqe	      2193	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	IF_8
0x4002915	          0x4801d0	                            add rax, rdx	      2193	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	IF_8
0x4002918	           0xfb600	                   movzx eax, byte [rax]	      2193	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	IF_8
0x400291b	            0x3c8e	                            cmp al, 0x8e	      2193	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	IF_8
0x400291d	            0x7529	                           jne 0x4002948	      2193	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	IF_8
0x400291f	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2194	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	IF_8
0x4002922	          0x8d5001	                      lea edx, [rax + 1]	      2194	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	IF_8
0x4002925	          0x8955ec	             mov dword [rbp - 0x14], edx	      2194	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	IF_8
0x4002928	          0x4863d0	                         movsxd rdx, eax	      2194	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	IF_8
0x400292b	        0x488b45f8	                mov rax, qword [rbp - 8]	      2194	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	IF_8
0x400292f	          0x4801c2	                            add rdx, rax	      2194	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	IF_8
0x4002932	    0x488b0d000000	            mov rcx, qword [0x04002939] 	      2194	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	IF_8
0x4002939	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      2194	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	IF_8
0x400293c	            0x4898	                                    cdqe	      2194	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	IF_8
0x400293e	          0x4801c8	                            add rax, rcx	      2194	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	IF_8
0x4002941	           0xfb600	                   movzx eax, byte [rax]	      2194	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	IF_8
0x4002944	            0x8802	                      mov byte [rdx], al	      2194	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	IF_8
0x4002946	            0xeb4d	                           jmp 0x4002995	      2194	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	IF_8
0x4002948	    0x488b15000000	            mov rdx, qword [0x0400294f] 	      2195	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	ELSE_3	IF_9	CALL_6
0x400294f	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      2195	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	ELSE_3	IF_9	CALL_6
0x4002952	            0x4898	                                    cdqe	      2195	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	ELSE_3	IF_9	CALL_6
0x4002954	          0x4801d0	                            add rax, rdx	      2195	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	ELSE_3	IF_9	CALL_6
0x4002957	           0xfb600	                   movzx eax, byte [rax]	      2195	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	ELSE_3	IF_9	CALL_6
0x400295a	           0xfb6c0	                           movzx eax, al	      2195	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	ELSE_3	IF_9	CALL_6
0x400295d	            0x4898	                                    cdqe	      2195	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	ELSE_3	IF_9	CALL_6
0x400295f	     0xfb680000000	                   movzx eax, byte [rax]	      2195	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	ELSE_3	IF_9	CALL_6
0x4002966	            0x3c02	                               cmp al, 2	      2195	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	ELSE_3	IF_9	CALL_6
0x4002968	            0x752b	                           jne 0x4002995	      2195	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	ELSE_3	IF_9	CALL_6
0x400296a	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2196	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	ELSE_3	IF_9
0x400296d	          0x8d5001	                      lea edx, [rax + 1]	      2196	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	ELSE_3	IF_9
0x4002970	          0x8955ec	             mov dword [rbp - 0x14], edx	      2196	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	ELSE_3	IF_9
0x4002973	          0x4863d0	                         movsxd rdx, eax	      2196	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	ELSE_3	IF_9
0x4002976	        0x488b45f8	                mov rax, qword [rbp - 8]	      2196	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	ELSE_3	IF_9
0x400297a	          0x4801c2	                            add rdx, rax	      2196	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	ELSE_3	IF_9
0x400297d	    0x488b0d000000	            mov rcx, qword [0x04002984] 	      2196	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	ELSE_3	IF_9
0x4002984	        0x8345f001	               add dword [rbp - 0x10], 1	      2196	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	ELSE_3	IF_9
0x4002988	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      2196	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	ELSE_3	IF_9
0x400298b	            0x4898	                                    cdqe	      2196	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	ELSE_3	IF_9
0x400298d	          0x4801c8	                            add rax, rcx	      2196	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	ELSE_3	IF_9
0x4002990	           0xfb600	                   movzx eax, byte [rax]	      2196	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	ELSE_3	IF_9
0x4002993	            0x8802	                      mov byte [rdx], al	      2196	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	ELSE_3	IF_9
0x4002995	        0x8345f001	               add dword [rbp - 0x10], 1	      2188	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2
0x4002999	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      2188	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2
0x400299c	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      2188	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2
0x400299f	             0x1d0	                            add eax, edx	      2188	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2
0x40029a1	          0x3b45f0	             cmp eax, dword [rbp - 0x10]	      2188	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2
0x40029a4	     0xf8f38ffffff	                            jg 0x40028e2	      2188	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2
0x40029aa	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2199	gui.c	FUNCTION_38	ELSE_2	IF_6
0x40029ad	          0x4863d0	                         movsxd rdx, eax	      2199	gui.c	FUNCTION_38	ELSE_2	IF_6
0x40029b0	        0x488b45f8	                mov rax, qword [rbp - 8]	      2199	gui.c	FUNCTION_38	ELSE_2	IF_6
0x40029b4	          0x4801d0	                            add rax, rdx	      2199	gui.c	FUNCTION_38	ELSE_2	IF_6
0x40029b7	          0xc60000	                       mov byte [rax], 0	      2199	gui.c	FUNCTION_38	ELSE_2	IF_6
0x40029ba	        0x448b45d0	             mov r8d, dword [rbp - 0x30]	      2200	gui.c	FUNCTION_38	ELSE_2	IF_6	CALL_7
0x40029be	        0x488b7dc0	             mov rdi, qword [rbp - 0x40]	      2200	gui.c	FUNCTION_38	ELSE_2	IF_6	CALL_7
0x40029c2	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      2200	gui.c	FUNCTION_38	ELSE_2	IF_6	CALL_7
0x40029c6	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      2200	gui.c	FUNCTION_38	ELSE_2	IF_6	CALL_7
0x40029c9	          0x8b75ec	             mov esi, dword [rbp - 0x14]	      2200	gui.c	FUNCTION_38	ELSE_2	IF_6	CALL_7
0x40029cc	        0x488b45f8	                mov rax, qword [rbp - 8]	      2200	gui.c	FUNCTION_38	ELSE_2	IF_6	CALL_7
0x40029d0	          0x4589c1	                            mov r9d, r8d	      2200	gui.c	FUNCTION_38	ELSE_2	IF_6	CALL_7
0x40029d3	          0x4989f8	                             mov r8, rdi	      2200	gui.c	FUNCTION_38	ELSE_2	IF_6	CALL_7
0x40029d6	          0x4889c7	                            mov rdi, rax	      2200	gui.c	FUNCTION_38	ELSE_2	IF_6	CALL_7
0x40029d9	      0xe800000000	                          call 0x40029de	      2200	gui.c	FUNCTION_38	ELSE_2	IF_6	CALL_7
0x40029de	          0x8945f4	              mov dword [rbp - 0xc], eax	      2200	gui.c	FUNCTION_38	ELSE_2	IF_6	CALL_7
0x40029e1	        0x488b45f8	                mov rax, qword [rbp - 8]	      2201	gui.c	FUNCTION_38	ELSE_2	IF_6	CALL_8
0x40029e5	          0x4889c7	                            mov rdi, rax	      2201	gui.c	FUNCTION_38	ELSE_2	IF_6	CALL_8
0x40029e8	      0xe800000000	                          call 0x40029ed	      2201	gui.c	FUNCTION_38	ELSE_2	IF_6	CALL_8
0x40029ed	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      2203	gui.c	FUNCTION_38	ELSE_2	IF_6
0x40029f0	            0xeb2f	                           jmp 0x4002a21	      2203	gui.c	FUNCTION_38	ELSE_2	IF_6
0x40029f2	    0x488b15000000	            mov rdx, qword [0x040029f9] 	      2207	gui.c	FUNCTION_38	ELSE_4	CALL_9
0x40029f9	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2207	gui.c	FUNCTION_38	ELSE_4	CALL_9
0x40029fc	            0x4898	                                    cdqe	      2207	gui.c	FUNCTION_38	ELSE_4	CALL_9
0x40029fe	        0x488d3c02	                    lea rdi, [rdx + rax]	      2207	gui.c	FUNCTION_38	ELSE_4	CALL_9
0x4002a02	        0x448b45d0	             mov r8d, dword [rbp - 0x30]	      2207	gui.c	FUNCTION_38	ELSE_4	CALL_9
0x4002a06	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	      2207	gui.c	FUNCTION_38	ELSE_4	CALL_9
0x4002a0a	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      2207	gui.c	FUNCTION_38	ELSE_4	CALL_9
0x4002a0e	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      2207	gui.c	FUNCTION_38	ELSE_4	CALL_9
0x4002a11	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      2207	gui.c	FUNCTION_38	ELSE_4	CALL_9
0x4002a14	          0x4589c1	                            mov r9d, r8d	      2207	gui.c	FUNCTION_38	ELSE_4	CALL_9
0x4002a17	          0x4989f0	                             mov r8, rsi	      2207	gui.c	FUNCTION_38	ELSE_4	CALL_9
0x4002a1a	            0x89c6	                            mov esi, eax	      2207	gui.c	FUNCTION_38	ELSE_4	CALL_9
0x4002a1c	      0xe800000000	                          call 0x4002a21	      2207	gui.c	FUNCTION_38	ELSE_4	CALL_9
0x4002a21	              0xc9	                                   leave	      2210	gui.c	FUNCTION_38
0x4002a22	              0xc3	                                     ret	      2210	gui.c	FUNCTION_38
gui_undraw_cursor	IF,5:functions,0:ELSE,1:CALL,6:SWITCH,0:WHILE,0:FOR,0:DO,0	30
0x4002dad	              0x55	                                push rbp	      2629	gui.c	FUNCTION_40
0x4002dae	          0x4889e5	                            mov rbp, rsp	      2629	gui.c	FUNCTION_40
0x4002db1	     0xfb605000000	           movzx eax, byte [0x04002db8] 	      2630	gui.c	FUNCTION_40	IF_1
0x4002db8	            0x84c0	                             test al, al	      2630	gui.c	FUNCTION_40	IF_1
0x4002dba	            0x7465	                            je 0x4002e21	      2630	gui.c	FUNCTION_40	IF_1
0x4002dbc	    0x8b0d00000000	            mov ecx, dword [0x04002dc2] 	      2651	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_4
0x4002dc2	    0x8b1500000000	            mov edx, dword [0x04002dc8] 	      2651	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_4
0x4002dc8	    0x8b3500000000	            mov esi, dword [0x04002dce] 	      2651	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_4
0x4002dce	    0x8b0500000000	            mov eax, dword [0x04002dd4] 	      2651	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_4
0x4002dd4	    0x41b810000000	                           mov r8d, 0x10	      2651	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_4
0x4002dda	            0x89c7	                            mov edi, eax	      2651	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_4
0x4002ddc	      0xe800000000	                          call 0x4002de1	      2651	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_4
0x4002de1	            0x85c0	                           test eax, eax	      2651	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_4
0x4002de3	            0x7435	                            je 0x4002e1a	      2651	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_4
0x4002de5	    0x8b0500000000	            mov eax, dword [0x04002deb] 	      2653	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4
0x4002deb	            0x85c0	                           test eax, eax	      2653	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4
0x4002ded	            0x7e2b	                           jle 0x4002e1a	      2653	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4
0x4002def	    0x8b0500000000	            mov eax, dword [0x04002df5] 	      2655	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4
0x4002df5	          0x8d48ff	                      lea ecx, [rax - 1]	      2654	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_5
0x4002df8	    0x8b1500000000	            mov edx, dword [0x04002dfe] 	      2654	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_5
0x4002dfe	    0x8b0500000000	            mov eax, dword [0x04002e04] 	      2654	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_5
0x4002e04	          0x8d70ff	                      lea esi, [rax - 1]	      2654	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_5
0x4002e07	    0x8b0500000000	            mov eax, dword [0x04002e0d] 	      2654	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_5
0x4002e0d	    0x41b810000000	                           mov r8d, 0x10	      2654	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_5
0x4002e13	            0x89c7	                            mov edi, eax	      2654	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_5
0x4002e15	      0xe800000000	                          call 0x4002e1a	      2654	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_5
0x4002e1a	    0xc60500000000	                mov byte [0x04002e21], 0	      2664	gui.c	FUNCTION_40	IF_1
0x4002e21	              0x90	                                     nop	      2666	gui.c	FUNCTION_40
0x4002e22	              0x5d	                                 pop rbp	      2666	gui.c	FUNCTION_40
0x4002e23	              0xc3	                                     ret	      2666	gui.c	FUNCTION_40
gfp_setname	IF,1:functions,0:ELSE,1:CALL,2:SWITCH,0:WHILE,0:FOR,0:DO,0	23
0x4006803	              0x55	                                push rbp	      5030	gui.c	FUNCTION_83
0x4006804	          0x4889e5	                            mov rbp, rsp	      5030	gui.c	FUNCTION_83
0x4006807	        0x4883ec20	                           sub rsp, 0x20	      5030	gui.c	FUNCTION_83
0x400680b	        0x48897de8	             mov qword [rbp - 0x18], rdi	      5030	gui.c	FUNCTION_83
0x400680f	        0x488975e0	             mov qword [rbp - 0x20], rsi	      5030	gui.c	FUNCTION_83
0x4006813	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5031	gui.c	FUNCTION_83
0x4006817	        0x488945f8	                mov qword [rbp - 8], rax	      5031	gui.c	FUNCTION_83
0x400681b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5033	gui.c	FUNCTION_83	IF_1	CALL_1
0x400681f	          0x4889c7	                            mov rdi, rax	      5033	gui.c	FUNCTION_83	IF_1	CALL_1
0x4006822	      0xe800000000	                          call 0x4006827	      5033	gui.c	FUNCTION_83	IF_1	CALL_1
0x4006827	    0x483dff0f0000	                          cmp rax, 0xfff	      5033	gui.c	FUNCTION_83	IF_1	CALL_1
0x400682d	            0x7609	                           jbe 0x4006838	      5033	gui.c	FUNCTION_83	IF_1	CALL_1
0x400682f	        0x488b45f8	                mov rax, qword [rbp - 8]	      5034	gui.c	FUNCTION_83	IF_1
0x4006833	          0xc60000	                       mov byte [rax], 0	      5034	gui.c	FUNCTION_83	IF_1
0x4006836	            0xeb13	                           jmp 0x400684b	      5037	gui.c	FUNCTION_83
0x4006838	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      5036	gui.c	FUNCTION_83	CALL_2
0x400683c	        0x488b45f8	                mov rax, qword [rbp - 8]	      5036	gui.c	FUNCTION_83	CALL_2
0x4006840	          0x4889d6	                            mov rsi, rdx	      5036	gui.c	FUNCTION_83	CALL_2
0x4006843	          0x4889c7	                            mov rdi, rax	      5036	gui.c	FUNCTION_83	CALL_2
0x4006846	      0xe800000000	                          call 0x400684b	      5036	gui.c	FUNCTION_83	CALL_2
0x400684b	              0x90	                                     nop	      5037	gui.c	FUNCTION_83
0x400684c	              0xc9	                                   leave	      5037	gui.c	FUNCTION_83
0x400684d	              0xc3	                                     ret	      5037	gui.c	FUNCTION_83
gui_get_color	IF,2:functions,0:ELSE,0:CALL,3:SWITCH,0:WHILE,0:FOR,0:DO,0	29
0x4006074	              0x55	                                push rbp	      4763	gui.c	FUNCTION_75
0x4006075	          0x4889e5	                            mov rbp, rsp	      4763	gui.c	FUNCTION_75
0x4006078	        0x4883ec20	                           sub rsp, 0x20	      4763	gui.c	FUNCTION_75
0x400607c	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4763	gui.c	FUNCTION_75
0x4006080	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4766	gui.c	FUNCTION_75	IF_1
0x4006084	           0xfb600	                   movzx eax, byte [rax]	      4766	gui.c	FUNCTION_75	IF_1
0x4006087	            0x84c0	                             test al, al	      4766	gui.c	FUNCTION_75	IF_1
0x4006089	            0x7509	                           jne 0x4006094	      4766	gui.c	FUNCTION_75	IF_1
0x400608b	    0x48c7c099d4ff	             mov rax, 0xffffffffffffd499	      4767	gui.c	FUNCTION_75	IF_1
0x4006092	            0xeb44	                           jmp 0x40060d8	      4767	gui.c	FUNCTION_75	IF_1
0x4006094	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4768	gui.c	FUNCTION_75	CALL_1
0x4006098	          0x4889c7	                            mov rdi, rax	      4768	gui.c	FUNCTION_75	CALL_1
0x400609b	      0xe800000000	                          call 0x40060a0	      4768	gui.c	FUNCTION_75	CALL_1
0x40060a0	        0x488945f8	                mov qword [rbp - 8], rax	      4768	gui.c	FUNCTION_75	CALL_1
0x40060a4	    0x48817df899d4	 cmp qword [rbp - 8], 0xffffffffffffd499	      4770	gui.c	FUNCTION_75	IF_2
0x40060ac	            0x7526	                           jne 0x40060d4	      4770	gui.c	FUNCTION_75	IF_2
0x40060ae	    0x8b0500000000	            mov eax, dword [0x040060b4] 	      4772	gui.c	FUNCTION_75	IF_2
0x40060b4	            0x85c0	                           test eax, eax	      4772	gui.c	FUNCTION_75	IF_2
0x40060b6	            0x741c	                            je 0x40060d4	      4772	gui.c	FUNCTION_75	IF_2
0x40060b8	      0xbf00000000	                              mov edi, 0	      4775	gui.c	FUNCTION_75	CALL_3
0x40060bd	      0xe800000000	                          call 0x40060c2	      4775	gui.c	FUNCTION_75	CALL_3
0x40060c2	          0x4889c2	                            mov rdx, rax	      4775	gui.c	FUNCTION_75	CALL_3
0x40060c5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4775	gui.c	FUNCTION_75	CALL_3
0x40060c9	          0x4889c6	                            mov rsi, rax	      4775	gui.c	FUNCTION_75	CALL_3
0x40060cc	          0x4889d7	                            mov rdi, rdx	      4775	gui.c	FUNCTION_75	CALL_3
0x40060cf	      0xe800000000	                          call 0x40060d4	      4775	gui.c	FUNCTION_75	CALL_3
0x40060d4	        0x488b45f8	                mov rax, qword [rbp - 8]	      4776	gui.c	FUNCTION_75
0x40060d8	              0xc9	                                   leave	      4777	gui.c	FUNCTION_75
0x40060d9	              0xc3	                                     ret	      4777	gui.c	FUNCTION_75
gui_position_components	IF,6:functions,0:ELSE,0:CALL,8:SWITCH,0:WHILE,0:FOR,0:DO,0	61
0x400174b	              0x55	                                push rbp	      1337	gui.c	FUNCTION_17
0x400174c	          0x4889e5	                            mov rbp, rsp	      1337	gui.c	FUNCTION_17
0x400174f	        0x4883ec20	                           sub rsp, 0x20	      1337	gui.c	FUNCTION_17
0x4001753	          0x897dec	             mov dword [rbp - 0x14], edi	      1337	gui.c	FUNCTION_17
0x4001756	    0x8b0500000000	            mov eax, dword [0x0400175c] 	      1344	gui.c	FUNCTION_17
0x400175c	          0x83c001	                              add eax, 1	      1344	gui.c	FUNCTION_17
0x400175f	    0x890500000000	            mov dword [0x04001765], eax 	      1344	gui.c	FUNCTION_17
0x4001765	    0xc745f0000000	               mov dword [rbp - 0x10], 0	      1346	gui.c	FUNCTION_17
0x400176c	    0x8b0500000000	            mov eax, dword [0x04001772] 	      1347	gui.c	FUNCTION_17	IF_1
0x4001772	            0x85c0	                           test eax, eax	      1347	gui.c	FUNCTION_17	IF_1
0x4001774	            0x7409	                            je 0x400177f	      1347	gui.c	FUNCTION_17	IF_1
0x4001776	    0x8b0500000000	            mov eax, dword [0x0400177c] 	      1348	gui.c	FUNCTION_17	IF_1
0x400177c	           0x145f0	             add dword [rbp - 0x10], eax	      1348	gui.c	FUNCTION_17	IF_1
0x400177f	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      1350	gui.c	FUNCTION_17
0x4001786	    0x8b1500000000	            mov edx, dword [0x0400178c] 	      1378	gui.c	FUNCTION_17
0x400178c	    0x8b0500000000	            mov eax, dword [0x04001792] 	      1378	gui.c	FUNCTION_17
0x4001792	           0xfafc2	                           imul eax, edx	      1378	gui.c	FUNCTION_17
0x4001795	    0x8b1500000000	            mov edx, dword [0x0400179b] 	      1378	gui.c	FUNCTION_17
0x400179b	             0x1d2	                            add edx, edx	      1378	gui.c	FUNCTION_17
0x400179d	             0x1d0	                            add eax, edx	      1378	gui.c	FUNCTION_17
0x400179f	          0x8945f8	                mov dword [rbp - 8], eax	      1378	gui.c	FUNCTION_17
0x40017a2	    0x8b1500000000	            mov edx, dword [0x040017a8] 	      1379	gui.c	FUNCTION_17
0x40017a8	    0x8b0500000000	            mov eax, dword [0x040017ae] 	      1379	gui.c	FUNCTION_17
0x40017ae	           0xfafc2	                           imul eax, edx	      1379	gui.c	FUNCTION_17
0x40017b1	    0x8b1500000000	            mov edx, dword [0x040017b7] 	      1379	gui.c	FUNCTION_17
0x40017b7	             0x1d2	                            add edx, edx	      1379	gui.c	FUNCTION_17
0x40017b9	             0x1d0	                            add eax, edx	      1379	gui.c	FUNCTION_17
0x40017bb	          0x8945fc	                mov dword [rbp - 4], eax	      1379	gui.c	FUNCTION_17
0x40017be	          0x8b4dfc	                mov ecx, dword [rbp - 4]	      1381	gui.c	FUNCTION_17	CALL_5
0x40017c1	          0x8b55f8	                mov edx, dword [rbp - 8]	      1381	gui.c	FUNCTION_17	CALL_5
0x40017c4	          0x8b75f4	              mov esi, dword [rbp - 0xc]	      1381	gui.c	FUNCTION_17	CALL_5
0x40017c7	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1381	gui.c	FUNCTION_17	CALL_5
0x40017ca	            0x89c7	                            mov edi, eax	      1381	gui.c	FUNCTION_17	CALL_5
0x40017cc	      0xe800000000	                          call 0x40017d1	      1381	gui.c	FUNCTION_17	CALL_5
0x40017d1	      0xe800000000	                          call 0x40017d6	      1390	gui.c	FUNCTION_17	CALL_7
0x40017d6	    0x8b0500000000	            mov eax, dword [0x040017dc] 	      1392	gui.c	FUNCTION_17	IF_6
0x40017dc	            0x85c0	                           test eax, eax	      1392	gui.c	FUNCTION_17	IF_6
0x40017de	            0x7428	                            je 0x4001808	      1392	gui.c	FUNCTION_17	IF_6
0x40017e0	    0x8b0d00000000	            mov ecx, dword [0x040017e6] 	      1393	gui.c	FUNCTION_17	IF_6	CALL_8
0x40017e6	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1393	gui.c	FUNCTION_17	IF_6	CALL_8
0x40017e9	          0x8b45fc	                mov eax, dword [rbp - 4]	      1393	gui.c	FUNCTION_17	IF_6	CALL_8
0x40017ec	          0x8d3402	                    lea esi, [rdx + rax]	      1393	gui.c	FUNCTION_17	IF_6	CALL_8
0x40017ef	          0x8b55f8	                mov edx, dword [rbp - 8]	      1393	gui.c	FUNCTION_17	IF_6	CALL_8
0x40017f2	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1393	gui.c	FUNCTION_17	IF_6	CALL_8
0x40017f5	          0x4189c8	                            mov r8d, ecx	      1393	gui.c	FUNCTION_17	IF_6	CALL_8
0x40017f8	            0x89d1	                            mov ecx, edx	      1393	gui.c	FUNCTION_17	IF_6	CALL_8
0x40017fa	            0x89f2	                            mov edx, esi	      1393	gui.c	FUNCTION_17	IF_6	CALL_8
0x40017fc	            0x89c6	                            mov esi, eax	      1393	gui.c	FUNCTION_17	IF_6	CALL_8
0x40017fe	      0xbf00000000	                              mov edi, 0	      1393	gui.c	FUNCTION_17	IF_6	CALL_8
0x4001803	      0xe800000000	                          call 0x4001808	      1393	gui.c	FUNCTION_17	IF_6	CALL_8
0x4001808	    0xc70500000000	               mov dword [0x04001812], 0	      1398	gui.c	FUNCTION_17
0x4001812	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      1399	gui.c	FUNCTION_17
0x4001815	          0x8b45f8	                mov eax, dword [rbp - 8]	      1399	gui.c	FUNCTION_17
0x4001818	             0x1d0	                            add eax, edx	      1399	gui.c	FUNCTION_17
0x400181a	    0x890500000000	            mov dword [0x04001820], eax 	      1399	gui.c	FUNCTION_17
0x4001820	    0x8b0500000000	            mov eax, dword [0x04001826] 	      1401	gui.c	FUNCTION_17
0x4001826	          0x83e801	                              sub eax, 1	      1401	gui.c	FUNCTION_17
0x4001829	    0x890500000000	            mov dword [0x0400182f], eax 	      1401	gui.c	FUNCTION_17
0x400182f	              0x90	                                     nop	      1402	gui.c	FUNCTION_17
0x4001830	              0xc9	                                   leave	      1402	gui.c	FUNCTION_17
0x4001831	              0xc3	                                     ret	      1402	gui.c	FUNCTION_17
display_errors	IF,4:functions,0:ELSE,1:CALL,9:SWITCH,0:WHILE,0:FOR,1:DO,0	70
0x40068e0	              0x55	                                push rbp	      5078	gui.c	FUNCTION_86
0x40068e1	          0x4889e5	                            mov rbp, rsp	      5078	gui.c	FUNCTION_86
0x40068e4	              0x53	                                push rbx	      5078	gui.c	FUNCTION_86
0x40068e5	        0x4883ec18	                           sub rsp, 0x18	      5078	gui.c	FUNCTION_86
0x40068e9	      0xbf02000000	                              mov edi, 2	      5081	gui.c	FUNCTION_86	IF_1	CALL_1
0x40068ee	      0xe800000000	                          call 0x40068f3	      5081	gui.c	FUNCTION_86	IF_1	CALL_1
0x40068f3	            0x85c0	                           test eax, eax	      5081	gui.c	FUNCTION_86	IF_1	CALL_1
0x40068f5	            0x7414	                            je 0x400690b	      5081	gui.c	FUNCTION_86	IF_1	CALL_1
0x40068f7	    0x488b05000000	            mov rax, qword [0x040068fe] 	      5082	gui.c	FUNCTION_86	CALL_2
0x40068fe	          0x4889c7	                            mov rdi, rax	      5082	gui.c	FUNCTION_86	CALL_2
0x4006901	      0xe800000000	                          call 0x4006906	      5082	gui.c	FUNCTION_86	CALL_2
0x4006906	      0xe9eb000000	                           jmp 0x40069f6	      5098	gui.c	FUNCTION_86
0x400690b	    0x488b05000000	            mov rax, qword [0x04006912] 	      5083	gui.c	FUNCTION_86	ELSE_1	IF_2
0x4006912	          0x4885c0	                           test rax, rax	      5083	gui.c	FUNCTION_86	ELSE_1	IF_2
0x4006915	     0xf84db000000	                            je 0x40069f6	      5083	gui.c	FUNCTION_86	ELSE_1	IF_2
0x400691b	    0x488b05000000	            mov rax, qword [0x04006922] 	      5086	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1
0x4006922	        0x488945e8	             mov qword [rbp - 0x18], rax	      5086	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1
0x4006926	      0xe9b2000000	                           jmp 0x40069dd	      5086	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1
0x400692b	      0xe800000000	                          call 0x4006930	      5087	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x4006930	          0x488b10	                    mov rdx, qword [rax]	      5087	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x4006933	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5087	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x4006937	           0xfb600	                   movzx eax, byte [rax]	      5087	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x400693a	           0xfb6c0	                           movzx eax, al	      5087	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x400693d	          0x4801c0	                            add rax, rax	      5087	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x4006940	          0x4801d0	                            add rax, rdx	      5087	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x4006943	           0xfb700	                   movzx eax, word [rax]	      5087	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x4006946	           0xfb7c0	                           movzx eax, ax	      5087	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x4006949	      0x2500200000	                         and eax, 0x2000	      5087	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x400694e	            0x85c0	                           test eax, eax	      5087	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x4006950	     0xf8582000000	                           jne 0x40069d8	      5087	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x4006956	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5090	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	IF_4	CALL_4
0x400695a	          0x4889c7	                            mov rdi, rax	      5090	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	IF_4	CALL_4
0x400695d	      0xe800000000	                          call 0x4006962	      5090	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	IF_4	CALL_4
0x4006962	    0x483dd0070000	                          cmp rax, 0x7d0	      5090	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	IF_4	CALL_4
0x4006968	            0x7628	                           jbe 0x4006992	      5090	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	IF_4	CALL_4
0x400696a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5091	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_5
0x400696e	    0x4805c2070000	                          add rax, 0x7c2	      5091	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_5
0x4006974	    0x48b92e2e2e28	          movabs rcx, 0x6e757274282e2e2e	      5091	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_5
0x400697e	          0x488908	                    mov qword [rax], rcx	      5091	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_5
0x4006981	    0xc74008636174	        mov dword [rax + 8], 0x65746163 	      5091	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_5
0x4006988	    0x66c7400c6429	           mov word [rax + 0xc], 0x2964 	      5091	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_5
0x400698e	        0xc6400e00	                 mov byte [rax + 0xe], 0	      5091	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_5
0x4006992	      0xbf00000000	                              mov edi, 0	      5093	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_8
0x4006997	      0xe800000000	                          call 0x400699c	      5093	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_8
0x400699c	          0x4889c3	                            mov rbx, rax	      5093	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_8
0x400699f	      0xbf00000000	                              mov edi, 0	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x40069a4	      0xe800000000	                          call 0x40069a9	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x40069a9	          0x4889c6	                            mov rsi, rax	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x40069ac	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x40069b0	        0x4883ec08	                              sub rsp, 8	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x40069b4	            0x6a00	                                  push 0	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x40069b6	    0x41b900000000	                              mov r9d, 0	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x40069bc	    0x41b801000000	                              mov r8d, 1	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x40069c2	          0x4889d9	                            mov rcx, rbx	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x40069c5	          0x4889c2	                            mov rdx, rax	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x40069c8	      0xbf01000000	                              mov edi, 1	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x40069cd	      0xe800000000	                          call 0x40069d2	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x40069d2	        0x4883c410	                           add rsp, 0x10	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x40069d6	            0xeb14	                           jmp 0x40069ec	      5094	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3
0x40069d8	      0x488345e801	               add qword [rbp - 0x18], 1	      5086	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1
0x40069dd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5086	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1
0x40069e1	           0xfb600	                   movzx eax, byte [rax]	      5086	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1
0x40069e4	            0x84c0	                             test al, al	      5086	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1
0x40069e6	     0xf853fffffff	                           jne 0x400692b	      5086	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1
0x40069ec	      0xbf00000000	                              mov edi, 0	      5096	gui.c	FUNCTION_86	ELSE_1	IF_2	CALL_9
0x40069f1	      0xe800000000	                          call 0x40069f6	      5096	gui.c	FUNCTION_86	ELSE_1	IF_2	CALL_9
0x40069f6	              0x90	                                     nop	      5098	gui.c	FUNCTION_86
0x40069f7	        0x488b5df8	                mov rbx, qword [rbp - 8]	      5098	gui.c	FUNCTION_86
0x40069fb	              0xc9	                                   leave	      5098	gui.c	FUNCTION_86
0x40069fc	              0xc3	                                     ret	      5098	gui.c	FUNCTION_86
gui_set_cursor	IF,0:functions,0:ELSE,0:CALL,0:SWITCH,0:WHILE,0:FOR,0:DO,0	11
0x4000f22	              0x55	                                push rbp	      1028	gui.c	FUNCTION_13
0x4000f23	          0x4889e5	                            mov rbp, rsp	      1028	gui.c	FUNCTION_13
0x4000f26	          0x897dfc	                mov dword [rbp - 4], edi	      1028	gui.c	FUNCTION_13
0x4000f29	          0x8975f8	                mov dword [rbp - 8], esi	      1028	gui.c	FUNCTION_13
0x4000f2c	          0x8b45fc	                mov eax, dword [rbp - 4]	      1029	gui.c	FUNCTION_13
0x4000f2f	    0x890500000000	            mov dword [0x04000f35], eax 	      1029	gui.c	FUNCTION_13
0x4000f35	          0x8b45f8	                mov eax, dword [rbp - 8]	      1030	gui.c	FUNCTION_13
0x4000f38	    0x890500000000	            mov dword [0x04000f3e], eax 	      1030	gui.c	FUNCTION_13
0x4000f3e	              0x90	                                     nop	      1031	gui.c	FUNCTION_13
0x4000f3f	              0x5d	                                 pop rbp	      1031	gui.c	FUNCTION_13
0x4000f40	              0xc3	                                     ret	      1031	gui.c	FUNCTION_13
gui_init_font	IF,8:functions,0:ELSE,3:CALL,10:SWITCH,0:WHILE,1:FOR,0:DO,0	70
0x4000c86	              0x55	                                push rbp	       850	gui.c	FUNCTION_10
0x4000c87	          0x4889e5	                            mov rbp, rsp	       850	gui.c	FUNCTION_10
0x4000c8a	    0x4881ec700100	                          sub rsp, 0x170	       850	gui.c	FUNCTION_10
0x4000c91	    0x4889bd98feff	            mov qword [rbp - 0x168], rdi	       850	gui.c	FUNCTION_10
0x4000c98	    0x89b594feffff	            mov dword [rbp - 0x16c], esi	       850	gui.c	FUNCTION_10
0x4000c9e	    0x64488b042528	                mov rax, qword fs:[0x28]	       850	gui.c	FUNCTION_10
0x4000ca7	        0x488945f8	                mov qword [rbp - 8], rax	       850	gui.c	FUNCTION_10
0x4000cab	            0x31c0	                            xor eax, eax	       850	gui.c	FUNCTION_10
0x4000cad	    0xc785a8feffff	              mov dword [rbp - 0x158], 0	       853	gui.c	FUNCTION_10
0x4000cb7	    0xc785acfeffff	              mov dword [rbp - 0x154], 0	       854	gui.c	FUNCTION_10
0x4000cc1	    0x8b0500000000	            mov eax, dword [0x04000cc7] 	       856	gui.c	FUNCTION_10	IF_1
0x4000cc7	            0x85c0	                           test eax, eax	       856	gui.c	FUNCTION_10	IF_1
0x4000cc9	            0x750a	                           jne 0x4000cd5	       856	gui.c	FUNCTION_10	IF_1
0x4000ccb	      0xb800000000	                              mov eax, 0	       857	gui.c	FUNCTION_10	IF_1
0x4000cd0	      0xe9e2000000	                           jmp 0x4000db7	       857	gui.c	FUNCTION_10	IF_1
0x4000cd5	    0xc685b0feffff	               mov byte [rbp - 0x150], 0	       859	gui.c	FUNCTION_10
0x4000cdc	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	       860	gui.c	FUNCTION_10	IF_2
0x4000ce3	           0xfb600	                   movzx eax, byte [rax]	       860	gui.c	FUNCTION_10	IF_2
0x4000ce6	            0x84c0	                             test al, al	       860	gui.c	FUNCTION_10	IF_2
0x4000ce8	            0x7551	                           jne 0x4000d3b	       860	gui.c	FUNCTION_10	IF_2
0x4000cea	    0xc785a8feffff	              mov dword [rbp - 0x158], 1	       861	gui.c	FUNCTION_10	IF_2
0x4000cf4	            0xeb53	                           jmp 0x4000d49	       861	gui.c	FUNCTION_10	IF_2
0x4000cf6	    0x488db5b0feff	                  lea rsi, [rbp - 0x150]	       873	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1	CALL_2
0x4000cfd	    0x488d8598feff	                  lea rax, [rbp - 0x168]	       873	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1	CALL_2
0x4000d04	      0xb900000000	                              mov ecx, 0	       873	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1	CALL_2
0x4000d09	      0xba40010000	                          mov edx, 0x140	       873	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1	CALL_2
0x4000d0e	          0x4889c7	                            mov rdi, rax	       873	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1	CALL_2
0x4000d11	      0xe800000000	                          call 0x4000d16	       873	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1	CALL_2
0x4000d16	    0x488d85b0feff	                  lea rax, [rbp - 0x150]	       880	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1	IF_4	CALL_3
0x4000d1d	      0xbe00000000	                              mov esi, 0	       880	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1	IF_4	CALL_3
0x4000d22	          0x4889c7	                            mov rdi, rax	       880	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1	IF_4	CALL_3
0x4000d25	      0xe800000000	                          call 0x4000d2a	       880	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1	IF_4	CALL_3
0x4000d2a	          0x83f801	                              cmp eax, 1	       880	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1	IF_4	CALL_3
0x4000d2d	            0x750c	                           jne 0x4000d3b	       880	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1	IF_4	CALL_3
0x4000d2f	    0xc785acfeffff	              mov dword [rbp - 0x154], 1	       889	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1	IF_4
0x4000d39	            0xeb0e	                           jmp 0x4000d49	       890	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1	IF_4
0x4000d3b	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	       870	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1
0x4000d42	           0xfb600	                   movzx eax, byte [rax]	       870	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1
0x4000d45	            0x84c0	                             test al, al	       870	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1
0x4000d47	            0x75ad	                           jne 0x4000cf6	       870	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1
0x4000d49	    0x83bdacfeffff	              cmp dword [rbp - 0x154], 1	       895	gui.c	FUNCTION_10	IF_6
0x4000d50	            0x7442	                            je 0x4000d94	       895	gui.c	FUNCTION_10	IF_6
0x4000d52	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	       896	gui.c	FUNCTION_10	IF_6	CALL_6
0x4000d59	      0xbe00000000	                              mov esi, 0	       896	gui.c	FUNCTION_10	IF_6	CALL_6
0x4000d5e	          0x4889c7	                            mov rdi, rax	       896	gui.c	FUNCTION_10	IF_6	CALL_6
0x4000d61	      0xe800000000	                          call 0x4000d66	       896	gui.c	FUNCTION_10	IF_6	CALL_6
0x4000d66	            0x85c0	                           test eax, eax	       896	gui.c	FUNCTION_10	IF_6	CALL_6
0x4000d68	            0x742a	                            je 0x4000d94	       896	gui.c	FUNCTION_10	IF_6	CALL_6
0x4000d6a	    0x83bda8feffff	              cmp dword [rbp - 0x158], 0	       897	gui.c	FUNCTION_10	IF_6
0x4000d71	            0x750c	                           jne 0x4000d7f	       897	gui.c	FUNCTION_10	IF_6
0x4000d73	    0x488b05000000	            mov rax, qword [0x04000d7a] 	       897	gui.c	FUNCTION_10	IF_6
0x4000d7a	          0x4885c0	                           test rax, rax	       897	gui.c	FUNCTION_10	IF_6
0x4000d7d	            0x7515	                           jne 0x4000d94	       897	gui.c	FUNCTION_10	IF_6
0x4000d7f	      0xbe00000000	                              mov esi, 0	       904	gui.c	FUNCTION_10	IF_6	CALL_7
0x4000d84	      0xbf00000000	                              mov edi, 0	       904	gui.c	FUNCTION_10	IF_6	CALL_7
0x4000d89	      0xe800000000	                          call 0x4000d8e	       904	gui.c	FUNCTION_10	IF_6	CALL_7
0x4000d8e	    0x8985acfeffff	            mov dword [rbp - 0x154], eax	       904	gui.c	FUNCTION_10	IF_6	CALL_7
0x4000d94	    0x83bdacfeffff	              cmp dword [rbp - 0x154], 1	       907	gui.c	FUNCTION_10	IF_7
0x4000d9b	            0x7514	                           jne 0x4000db1	       907	gui.c	FUNCTION_10	IF_7
0x4000d9d	      0xba0f000000	                            mov edx, 0xf	       918	gui.c	FUNCTION_10	IF_7	CALL_10
0x4000da2	      0xbe01000000	                              mov esi, 1	       918	gui.c	FUNCTION_10	IF_7	CALL_10
0x4000da7	      0xbf01000000	                              mov edi, 1	       918	gui.c	FUNCTION_10	IF_7	CALL_10
0x4000dac	      0xe800000000	                          call 0x4000db1	       918	gui.c	FUNCTION_10	IF_7	CALL_10
0x4000db1	    0x8b85acfeffff	            mov eax, dword [rbp - 0x154]	       921	gui.c	FUNCTION_10
0x4000db7	        0x488b4df8	                mov rcx, qword [rbp - 8]	       922	gui.c	FUNCTION_10
0x4000dbb	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       922	gui.c	FUNCTION_10
0x4000dc4	            0x7405	                            je 0x4000dcb	       922	gui.c	FUNCTION_10
0x4000dc6	      0xe800000000	                          call 0x4000dcb	       922	gui.c	FUNCTION_10
0x4000dcb	              0xc9	                                   leave	       922	gui.c	FUNCTION_10
0x4000dcc	              0xc3	                                     ret	       922	gui.c	FUNCTION_10
gui_remove_scrollbars	IF,1:functions,1:ELSE,1:CALL,1:SWITCH,0:WHILE,0:FOR,1:DO,0	36
0x4004ad4	              0x55	                                push rbp	      3884	gui.c	FUNCTION_60
0x4004ad5	          0x4889e5	                            mov rbp, rsp	      3884	gui.c	FUNCTION_60
0x4004ad8	        0x4883ec10	                           sub rsp, 0x10	      3884	gui.c	FUNCTION_60
0x4004adc	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      3888	gui.c	FUNCTION_60	FOR_1
0x4004ae3	            0xeb6a	                           jmp 0x4004b4f	      3888	gui.c	FUNCTION_60	FOR_1
0x4004ae5	        0x837df402	                cmp dword [rbp - 0xc], 2	      3890	gui.c	FUNCTION_60	FOR_1	IF_1
0x4004ae9	            0x7511	                           jne 0x4004afc	      3890	gui.c	FUNCTION_60	FOR_1	IF_1
0x4004aeb	      0xbe00000000	                              mov esi, 0	      3891	gui.c	FUNCTION_60	FOR_1	CALL_1
0x4004af0	      0xbf00000000	                              mov edi, 0	      3891	gui.c	FUNCTION_60	FOR_1	CALL_1
0x4004af5	      0xe800000000	                          call 0x4004afa	      3891	gui.c	FUNCTION_60	FOR_1	CALL_1
0x4004afa	            0xeb36	                           jmp 0x4004b32	      3891	gui.c	FUNCTION_60	FOR_1	CALL_1
0x4004afc	    0x488b05000000	            mov rax, qword [0x04004b03] 	      3894	gui.c	FUNCTION_60	FOR_1	ELSE_1
0x4004b03	        0x488945f8	                mov qword [rbp - 8], rax	      3894	gui.c	FUNCTION_60	FOR_1	ELSE_1
0x4004b07	            0xeb22	                           jmp 0x4004b2b	      3894	gui.c	FUNCTION_60	FOR_1	ELSE_1
0x4004b09	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	      3896	gui.c	FUNCTION_60	FOR_1	ELSE_1	FUNCTION_1	CALL_1
0x4004b0c	        0x488b45f8	                mov rax, qword [rbp - 8]	      3896	gui.c	FUNCTION_60	FOR_1	ELSE_1	FUNCTION_1	CALL_1
0x4004b10	      0xba00000000	                              mov edx, 0	      3896	gui.c	FUNCTION_60	FOR_1	ELSE_1	FUNCTION_1	CALL_1
0x4004b15	            0x89ce	                            mov esi, ecx	      3896	gui.c	FUNCTION_60	FOR_1	ELSE_1	FUNCTION_1	CALL_1
0x4004b17	          0x4889c7	                            mov rdi, rax	      3896	gui.c	FUNCTION_60	FOR_1	ELSE_1	FUNCTION_1	CALL_1
0x4004b1a	      0xe85c0b0000	               call sym.gui_do_scrollbar	      3896	gui.c	FUNCTION_60	FOR_1	ELSE_1	FUNCTION_1	CALL_1
0x4004b1f	        0x488b45f8	                mov rax, qword [rbp - 8]	      3894	gui.c	FUNCTION_60	FOR_1	ELSE_1
0x4004b23	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3894	gui.c	FUNCTION_60	FOR_1	ELSE_1
0x4004b27	        0x488945f8	                mov qword [rbp - 8], rax	      3894	gui.c	FUNCTION_60	FOR_1	ELSE_1
0x4004b2b	      0x48837df800	                  cmp qword [rbp - 8], 0	      3894	gui.c	FUNCTION_60	FOR_1	ELSE_1
0x4004b30	            0x75d7	                           jne 0x4004b09	      3894	gui.c	FUNCTION_60	FOR_1	ELSE_1
0x4004b32	    0x488b05000000	            mov rax, qword [0x04004b39] 	      3899	gui.c	FUNCTION_60	FOR_1
0x4004b39	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      3899	gui.c	FUNCTION_60	FOR_1
0x4004b3c	          0x4863d2	                         movsxd rdx, edx	      3899	gui.c	FUNCTION_60	FOR_1
0x4004b3f	        0x4883c210	                           add rdx, 0x10	      3899	gui.c	FUNCTION_60	FOR_1
0x4004b43	    0xc7449008ffff	mov dword [rax + rdx*4 + 8], 0xffffffff 	      3899	gui.c	FUNCTION_60	FOR_1
0x4004b4b	        0x8345f401	                add dword [rbp - 0xc], 1	      3888	gui.c	FUNCTION_60	FOR_1
0x4004b4f	        0x837df402	                cmp dword [rbp - 0xc], 2	      3888	gui.c	FUNCTION_60	FOR_1
0x4004b53	            0x7e90	                           jle 0x4004ae5	      3888	gui.c	FUNCTION_60	FOR_1
0x4004b55	              0x90	                                     nop	      3901	gui.c	FUNCTION_60
0x4004b56	              0xc9	                                   leave	      3901	gui.c	FUNCTION_60
0x4004b57	              0xc3	                                     ret	      3901	gui.c	FUNCTION_60
gui_update_screen	IF,5:functions,0:ELSE,0:CALL,12:SWITCH,0:WHILE,0:FOR,0:DO,0	98
0x4006a3f	              0x55	                                push rbp	      5127	gui.c	FUNCTION_88
0x4006a40	          0x4889e5	                            mov rbp, rsp	      5127	gui.c	FUNCTION_88
0x4006a43	        0x4883ec20	                           sub rsp, 0x20	      5127	gui.c	FUNCTION_88
0x4006a47	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      5129	gui.c	FUNCTION_88
0x4006a4f	    0x48c745f80000	                  mov qword [rbp - 8], 0	      5130	gui.c	FUNCTION_88
0x4006a57	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      5131	gui.c	FUNCTION_88
0x4006a5e	      0xe800000000	                          call 0x4006a63	      5134	gui.c	FUNCTION_88	CALL_1
0x4006a63	      0xe800000000	                          call 0x4006a68	      5135	gui.c	FUNCTION_88	CALL_2
0x4006a68	    0x8b0500000000	            mov eax, dword [0x04006a6e] 	      5138	gui.c	FUNCTION_88	IF_1	CALL_3
0x4006a6e	            0x85c0	                           test eax, eax	      5138	gui.c	FUNCTION_88	IF_1	CALL_3
0x4006a70	     0xf85dc000000	                           jne 0x4006b52	      5138	gui.c	FUNCTION_88	IF_1	CALL_3
0x4006a76	      0xe800000000	                          call 0x4006a7b	      5138	gui.c	FUNCTION_88	IF_1	CALL_3
0x4006a7b	            0x85c0	                           test eax, eax	      5138	gui.c	FUNCTION_88	IF_1	CALL_3
0x4006a7d	            0x7517	                           jne 0x4006a96	      5138	gui.c	FUNCTION_88	IF_1	CALL_3
0x4006a7f	    0x488b05000000	            mov rax, qword [0x04006a86] 	      5140	gui.c	FUNCTION_88	IF_1
0x4006a86	    0x488b80a80200	           mov rax, qword [rax + 0x2a8] 	      5140	gui.c	FUNCTION_88	IF_1
0x4006a8d	          0x4885c0	                           test rax, rax	      5140	gui.c	FUNCTION_88	IF_1
0x4006a90	     0xf8ebc000000	                           jle 0x4006b52	      5140	gui.c	FUNCTION_88	IF_1
0x4006a96	    0x488b15000000	            mov rdx, qword [0x04006a9d] 	      5142	gui.c	FUNCTION_88	IF_1	CALL_4
0x4006a9d	    0x488b05000000	            mov rax, qword [0x04006aa4] 	      5142	gui.c	FUNCTION_88	IF_1	CALL_4
0x4006aa4	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5142	gui.c	FUNCTION_88	IF_1	CALL_4
0x4006aa8	          0x4839c2	                            cmp rdx, rax	      5142	gui.c	FUNCTION_88	IF_1	CALL_4
0x4006aab	            0x7528	                           jne 0x4006ad5	      5142	gui.c	FUNCTION_88	IF_1	CALL_4
0x4006aad	    0x8b1500000000	            mov edx, dword [0x04006ab3] 	      5142	gui.c	FUNCTION_88	IF_1	CALL_4
0x4006ab3	    0x488b05000000	            mov rax, qword [0x04006aba] 	      5142	gui.c	FUNCTION_88	IF_1	CALL_4
0x4006aba	          0x8b4040	            mov eax, dword [rax + 0x40] 	      5142	gui.c	FUNCTION_88	IF_1	CALL_4
0x4006abd	            0x39c2	                            cmp edx, eax	      5142	gui.c	FUNCTION_88	IF_1	CALL_4
0x4006abf	            0x7514	                           jne 0x4006ad5	      5142	gui.c	FUNCTION_88	IF_1	CALL_4
0x4006ac1	    0x8b1500000000	            mov edx, dword [0x04006ac7] 	      5142	gui.c	FUNCTION_88	IF_1	CALL_4
0x4006ac7	    0x488b05000000	            mov rax, qword [0x04006ace] 	      5142	gui.c	FUNCTION_88	IF_1	CALL_4
0x4006ace	          0x8b4044	            mov eax, dword [rax + 0x44] 	      5142	gui.c	FUNCTION_88	IF_1	CALL_4
0x4006ad1	            0x39c2	                            cmp edx, eax	      5142	gui.c	FUNCTION_88	IF_1	CALL_4
0x4006ad3	            0x747d	                            je 0x4006b52	      5142	gui.c	FUNCTION_88	IF_1	CALL_4
0x4006ad5	      0xe800000000	                          call 0x4006ada	      5144	gui.c	FUNCTION_88	IF_1	IF_2	CALL_5
0x4006ada	            0x85c0	                           test eax, eax	      5144	gui.c	FUNCTION_88	IF_1	IF_2	CALL_5
0x4006adc	            0x7423	                            je 0x4006b01	      5144	gui.c	FUNCTION_88	IF_1	IF_2	CALL_5
0x4006ade	    0x488b05000000	            mov rax, qword [0x04006ae5] 	      5145	gui.c	FUNCTION_88	IF_1	CALL_6
0x4006ae5	          0x4989c0	                             mov r8, rax	      5145	gui.c	FUNCTION_88	IF_1	CALL_6
0x4006ae8	      0xb900000000	                              mov ecx, 0	      5145	gui.c	FUNCTION_88	IF_1	CALL_6
0x4006aed	      0xba00000000	                              mov edx, 0	      5145	gui.c	FUNCTION_88	IF_1	CALL_6
0x4006af2	      0xbe00000000	                              mov esi, 0	      5145	gui.c	FUNCTION_88	IF_1	CALL_6
0x4006af7	      0xbf1e000000	                           mov edi, 0x1e	      5145	gui.c	FUNCTION_88	IF_1	CALL_6
0x4006afc	      0xe800000000	                          call 0x4006b01	      5145	gui.c	FUNCTION_88	IF_1	CALL_6
0x4006b01	    0x488b05000000	            mov rax, qword [0x04006b08] 	      5147	gui.c	FUNCTION_88	IF_1	IF_3
0x4006b08	    0x488b80a80200	           mov rax, qword [rax + 0x2a8] 	      5147	gui.c	FUNCTION_88	IF_1	IF_3
0x4006b0f	          0x4885c0	                           test rax, rax	      5147	gui.c	FUNCTION_88	IF_1	IF_3
0x4006b12	            0x7e21	                           jle 0x4006b35	      5147	gui.c	FUNCTION_88	IF_1	IF_3
0x4006b14	    0x488b05000000	            mov rax, qword [0x04006b1b] 	      5149	gui.c	FUNCTION_88	IF_1	IF_3
0x4006b1b	        0x488945f0	             mov qword [rbp - 0x10], rax	      5149	gui.c	FUNCTION_88	IF_1	IF_3
0x4006b1f	    0x488b05000000	            mov rax, qword [0x04006b26] 	      5150	gui.c	FUNCTION_88	IF_1	IF_3
0x4006b26	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5150	gui.c	FUNCTION_88	IF_1	IF_3
0x4006b2a	        0x488945f8	                mov qword [rbp - 8], rax	      5150	gui.c	FUNCTION_88	IF_1	IF_3
0x4006b2e	    0xc745ec010000	               mov dword [rbp - 0x14], 1	      5151	gui.c	FUNCTION_88	IF_1	IF_3
0x4006b35	    0x488b05000000	            mov rax, qword [0x04006b3c] 	      5154	gui.c	FUNCTION_88	IF_1
0x4006b3c	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      5154	gui.c	FUNCTION_88	IF_1
0x4006b40	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5154	gui.c	FUNCTION_88	IF_1
0x4006b44	    0x488905000000	            mov qword [0x04006b4b], rax 	      5154	gui.c	FUNCTION_88	IF_1
0x4006b4b	    0x488915000000	            mov qword [0x04006b52], rdx 	      5154	gui.c	FUNCTION_88	IF_1
0x4006b52	      0xbf00000000	                              mov edi, 0	      5157	gui.c	FUNCTION_88	CALL_7
0x4006b57	      0xe800000000	                          call 0x4006b5c	      5157	gui.c	FUNCTION_88	CALL_7
0x4006b5c	      0xe800000000	                          call 0x4006b61	      5158	gui.c	FUNCTION_88	CALL_8
0x4006b61	        0x837dec00	               cmp dword [rbp - 0x14], 0	      5160	gui.c	FUNCTION_88	IF_4
0x4006b65	            0x747a	                            je 0x4006be1	      5160	gui.c	FUNCTION_88	IF_4
0x4006b67	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5161	gui.c	FUNCTION_88	IF_4
0x4006b6b	        0x483b45f8	                cmp rax, qword [rbp - 8]	      5161	gui.c	FUNCTION_88	IF_4
0x4006b6f	            0x751d	                           jne 0x4006b8e	      5161	gui.c	FUNCTION_88	IF_4
0x4006b71	    0x488b05000000	            mov rax, qword [0x04006b78] 	      5162	gui.c	FUNCTION_88	IF_4	CALL_9
0x4006b78	          0x4889c7	                            mov rdi, rax	      5162	gui.c	FUNCTION_88	IF_4	CALL_9
0x4006b7b	      0xe800000000	                          call 0x4006b80	      5162	gui.c	FUNCTION_88	IF_4	CALL_9
0x4006b80	            0x85c0	                           test eax, eax	      5162	gui.c	FUNCTION_88	IF_4	CALL_9
0x4006b82	            0x750a	                           jne 0x4006b8e	      5162	gui.c	FUNCTION_88	IF_4	CALL_9
0x4006b84	    0x8b0500000000	            mov eax, dword [0x04006b8a] 	      5163	gui.c	FUNCTION_88	IF_4
0x4006b8a	            0x85c0	                           test eax, eax	      5163	gui.c	FUNCTION_88	IF_4
0x4006b8c	            0x7453	                            je 0x4006be1	      5163	gui.c	FUNCTION_88	IF_4
0x4006b8e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5165	gui.c	FUNCTION_88	IF_4	IF_5
0x4006b92	        0x483b45f8	                cmp rax, qword [rbp - 8]	      5165	gui.c	FUNCTION_88	IF_4	IF_5
0x4006b96	            0x7416	                            je 0x4006bae	      5165	gui.c	FUNCTION_88	IF_4	IF_5
0x4006b98	    0x488b05000000	            mov rax, qword [0x04006b9f] 	      5166	gui.c	FUNCTION_88	IF_4	CALL_10
0x4006b9f	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      5166	gui.c	FUNCTION_88	IF_4	CALL_10
0x4006ba3	          0x4889d6	                            mov rsi, rdx	      5166	gui.c	FUNCTION_88	IF_4	CALL_10
0x4006ba6	          0x4889c7	                            mov rdi, rax	      5166	gui.c	FUNCTION_88	IF_4	CALL_10
0x4006ba9	      0xe800000000	                          call 0x4006bae	      5166	gui.c	FUNCTION_88	IF_4	CALL_10
0x4006bae	    0x488b05000000	            mov rax, qword [0x04006bb5] 	      5167	gui.c	FUNCTION_88	IF_4	CALL_11
0x4006bb5	        0x488b55f8	                mov rdx, qword [rbp - 8]	      5167	gui.c	FUNCTION_88	IF_4	CALL_11
0x4006bb9	          0x4889d6	                            mov rsi, rdx	      5167	gui.c	FUNCTION_88	IF_4	CALL_11
0x4006bbc	          0x4889c7	                            mov rdi, rax	      5167	gui.c	FUNCTION_88	IF_4	CALL_11
0x4006bbf	      0xe800000000	                          call 0x4006bc4	      5167	gui.c	FUNCTION_88	IF_4	CALL_11
0x4006bc4	    0x488b05000000	            mov rax, qword [0x04006bcb] 	      5168	gui.c	FUNCTION_88	IF_4
0x4006bcb	    0x488b15000000	            mov rdx, qword [0x04006bd2] 	      5168	gui.c	FUNCTION_88	IF_4
0x4006bd2	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      5168	gui.c	FUNCTION_88	IF_4
0x4006bd8	          0x83e2ef	                     and edx, 0xffffffef	      5168	gui.c	FUNCTION_88	IF_4
0x4006bdb	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      5168	gui.c	FUNCTION_88	IF_4
0x4006be1	      0xbe00000000	                              mov esi, 0	      5171	gui.c	FUNCTION_88	CALL_12
0x4006be6	      0xbf01000000	                              mov edi, 1	      5171	gui.c	FUNCTION_88	CALL_12
0x4006beb	      0xe800000000	                          call 0x4006bf0	      5171	gui.c	FUNCTION_88	CALL_12
0x4006bf0	              0x90	                                     nop	      5172	gui.c	FUNCTION_88
0x4006bf1	              0xc9	                                   leave	      5172	gui.c	FUNCTION_88
0x4006bf2	              0xc3	                                     ret	      5172	gui.c	FUNCTION_88
gui_reset_scroll_region	IF,0:functions,0:ELSE,0:CALL,0:SWITCH,0:WHILE,0:FOR,0:DO,0	13
0x4001dbd	              0x55	                                push rbp	      1704	gui.c	FUNCTION_25
0x4001dbe	          0x4889e5	                            mov rbp, rsp	      1704	gui.c	FUNCTION_25
0x4001dc1	    0xc70500000000	               mov dword [0x04001dcb], 0	      1705	gui.c	FUNCTION_25
0x4001dcb	    0x8b0500000000	            mov eax, dword [0x04001dd1] 	      1706	gui.c	FUNCTION_25
0x4001dd1	          0x83e801	                              sub eax, 1	      1706	gui.c	FUNCTION_25
0x4001dd4	    0x890500000000	            mov dword [0x04001dda], eax 	      1706	gui.c	FUNCTION_25
0x4001dda	    0xc70500000000	               mov dword [0x04001de4], 0	      1707	gui.c	FUNCTION_25
0x4001de4	    0x8b0500000000	            mov eax, dword [0x04001dea] 	      1708	gui.c	FUNCTION_25
0x4001dea	          0x83e801	                              sub eax, 1	      1708	gui.c	FUNCTION_25
0x4001ded	    0x890500000000	            mov dword [0x04001df3], eax 	      1708	gui.c	FUNCTION_25
0x4001df3	              0x90	                                     nop	      1709	gui.c	FUNCTION_25
0x4001df4	              0x5d	                                 pop rbp	      1709	gui.c	FUNCTION_25
0x4001df5	              0xc3	                                     ret	      1709	gui.c	FUNCTION_25
gui_can_update_cursor	IF,0:functions,0:ELSE,0:CALL,0:SWITCH,0:WHILE,0:FOR,0:DO,0	6
0x40023b8	              0x55	                                push rbp	      2004	gui.c	FUNCTION_32
0x40023b9	          0x4889e5	                            mov rbp, rsp	      2004	gui.c	FUNCTION_32
0x40023bc	    0xc70500000000	               mov dword [0x040023c6], 1	      2005	gui.c	FUNCTION_32
0x40023c6	              0x90	                                     nop	      2008	gui.c	FUNCTION_32
0x40023c7	              0x5d	                                 pop rbp	      2008	gui.c	FUNCTION_32
0x40023c8	              0xc3	                                     ret	      2008	gui.c	FUNCTION_32
gui_start_highlight	IF,1:functions,0:ELSE,1:CALL,0:SWITCH,0:WHILE,0:FOR,0:DO,0	14
0x4001df6	              0x55	                                push rbp	      1713	gui.c	FUNCTION_26
0x4001df7	          0x4889e5	                            mov rbp, rsp	      1713	gui.c	FUNCTION_26
0x4001dfa	          0x897dfc	                mov dword [rbp - 4], edi	      1713	gui.c	FUNCTION_26
0x4001dfd	    0x817dfcff0000	               cmp dword [rbp - 4], 0xff	      1714	gui.c	FUNCTION_26	IF_1
0x4001e04	            0x7e0b	                           jle 0x4001e11	      1714	gui.c	FUNCTION_26	IF_1
0x4001e06	          0x8b45fc	                mov eax, dword [rbp - 4]	      1715	gui.c	FUNCTION_26	IF_1
0x4001e09	    0x890500000000	            mov dword [0x04001e0f], eax 	      1715	gui.c	FUNCTION_26	IF_1
0x4001e0f	            0xeb0f	                           jmp 0x4001e20	      1718	gui.c	FUNCTION_26	ELSE_1
0x4001e11	    0x8b0500000000	            mov eax, dword [0x04001e17] 	      1717	gui.c	FUNCTION_26	ELSE_1
0x4001e17	           0xb45fc	                 or eax, dword [rbp - 4]	      1717	gui.c	FUNCTION_26	ELSE_1
0x4001e1a	    0x890500000000	            mov dword [0x04001e20], eax 	      1717	gui.c	FUNCTION_26	ELSE_1
0x4001e20	              0x90	                                     nop	      1718	gui.c	FUNCTION_26	ELSE_1
0x4001e21	              0x5d	                                 pop rbp	      1718	gui.c	FUNCTION_26	ELSE_1
0x4001e22	              0xc3	                                     ret	      1718	gui.c	FUNCTION_26	ELSE_1
gui_get_wide_font	IF,5:functions,0:ELSE,1:CALL,6:SWITCH,0:WHILE,0:FOR,1:DO,0	74
0x4000dcd	              0x55	                                push rbp	       980	gui.c	FUNCTION_12
0x4000dce	          0x4889e5	                            mov rbp, rsp	       980	gui.c	FUNCTION_12
0x4000dd1	    0x4881ec600100	                          sub rsp, 0x160	       980	gui.c	FUNCTION_12
0x4000dd8	    0x64488b042528	                mov rax, qword fs:[0x28]	       980	gui.c	FUNCTION_12
0x4000de1	        0x488945f8	                mov qword [rbp - 8], rax	       980	gui.c	FUNCTION_12
0x4000de5	            0x31c0	                            xor eax, eax	       980	gui.c	FUNCTION_12
0x4000de7	    0x48c785a8feff	              mov qword [rbp - 0x158], 0	       981	gui.c	FUNCTION_12
0x4000df2	    0x8b0500000000	            mov eax, dword [0x04000df8] 	       985	gui.c	FUNCTION_12	IF_1
0x4000df8	            0x85c0	                           test eax, eax	       985	gui.c	FUNCTION_12	IF_1
0x4000dfa	            0x750a	                           jne 0x4000e06	       985	gui.c	FUNCTION_12	IF_1
0x4000dfc	      0xb801000000	                              mov eax, 1	       986	gui.c	FUNCTION_12	IF_1
0x4000e01	      0xe906010000	                           jmp 0x4000f0c	       986	gui.c	FUNCTION_12	IF_1
0x4000e06	    0x488b05000000	            mov rax, qword [0x04000e0d] 	       988	gui.c	FUNCTION_12	IF_2
0x4000e0d	          0x4885c0	                           test rax, rax	       988	gui.c	FUNCTION_12	IF_2
0x4000e10	     0xf8485000000	                            je 0x4000e9b	       988	gui.c	FUNCTION_12	IF_2
0x4000e16	    0x488b05000000	            mov rax, qword [0x04000e1d] 	       988	gui.c	FUNCTION_12	IF_2
0x4000e1d	           0xfb600	                   movzx eax, byte [rax]	       988	gui.c	FUNCTION_12	IF_2
0x4000e20	            0x84c0	                             test al, al	       988	gui.c	FUNCTION_12	IF_2
0x4000e22	            0x7477	                            je 0x4000e9b	       988	gui.c	FUNCTION_12	IF_2
0x4000e24	    0x488b05000000	            mov rax, qword [0x04000e2b] 	       990	gui.c	FUNCTION_12	IF_2	FOR_1
0x4000e2b	    0x488985a0feff	            mov qword [rbp - 0x160], rax	       990	gui.c	FUNCTION_12	IF_2	FOR_1
0x4000e32	            0xeb45	                           jmp 0x4000e79	       990	gui.c	FUNCTION_12	IF_2	FOR_1
0x4000e34	    0x488db5b0feff	                  lea rsi, [rbp - 0x150]	       993	gui.c	FUNCTION_12	IF_2	FOR_1	CALL_1
0x4000e3b	    0x488d85a0feff	                  lea rax, [rbp - 0x160]	       993	gui.c	FUNCTION_12	IF_2	FOR_1	CALL_1
0x4000e42	      0xb900000000	                              mov ecx, 0	       993	gui.c	FUNCTION_12	IF_2	FOR_1	CALL_1
0x4000e47	      0xba40010000	                          mov edx, 0x140	       993	gui.c	FUNCTION_12	IF_2	FOR_1	CALL_1
0x4000e4c	          0x4889c7	                            mov rdi, rax	       993	gui.c	FUNCTION_12	IF_2	FOR_1	CALL_1
0x4000e4f	      0xe800000000	                          call 0x4000e54	       993	gui.c	FUNCTION_12	IF_2	FOR_1	CALL_1
0x4000e54	    0x488d85b0feff	                  lea rax, [rbp - 0x150]	       994	gui.c	FUNCTION_12	IF_2	FOR_1	CALL_2
0x4000e5b	      0xbe00000000	                              mov esi, 0	       994	gui.c	FUNCTION_12	IF_2	FOR_1	CALL_2
0x4000e60	          0x4889c7	                            mov rdi, rax	       994	gui.c	FUNCTION_12	IF_2	FOR_1	CALL_2
0x4000e63	      0xe800000000	                          call 0x4000e68	       994	gui.c	FUNCTION_12	IF_2	FOR_1	CALL_2
0x4000e68	    0x488985a8feff	            mov qword [rbp - 0x158], rax	       994	gui.c	FUNCTION_12	IF_2	FOR_1	CALL_2
0x4000e6f	    0x4883bda8feff	              cmp qword [rbp - 0x158], 0	       995	gui.c	FUNCTION_12	IF_2	FOR_1	IF_3
0x4000e77	            0x7510	                           jne 0x4000e89	       995	gui.c	FUNCTION_12	IF_2	FOR_1	IF_3
0x4000e79	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	       990	gui.c	FUNCTION_12	IF_2	FOR_1
0x4000e80	           0xfb600	                   movzx eax, byte [rax]	       990	gui.c	FUNCTION_12	IF_2	FOR_1
0x4000e83	            0x84c0	                             test al, al	       990	gui.c	FUNCTION_12	IF_2	FOR_1
0x4000e85	            0x75ad	                           jne 0x4000e34	       990	gui.c	FUNCTION_12	IF_2	FOR_1
0x4000e87	            0xeb01	                           jmp 0x4000e8a	       990	gui.c	FUNCTION_12	IF_2	FOR_1
0x4000e89	              0x90	                                     nop	       996	gui.c	FUNCTION_12	IF_2	FOR_1	IF_3
0x4000e8a	    0x4883bda8feff	              cmp qword [rbp - 0x158], 0	       998	gui.c	FUNCTION_12	IF_2	IF_4
0x4000e92	            0x7507	                           jne 0x4000e9b	       998	gui.c	FUNCTION_12	IF_2	IF_4
0x4000e94	      0xb800000000	                              mov eax, 0	       999	gui.c	FUNCTION_12	IF_2	IF_4
0x4000e99	            0xeb71	                           jmp 0x4000f0c	       999	gui.c	FUNCTION_12	IF_2	IF_4
0x4000e9b	    0x488b05000000	            mov rax, qword [0x04000ea2] 	      1002	gui.c	FUNCTION_12	CALL_3
0x4000ea2	          0x4889c7	                            mov rdi, rax	      1002	gui.c	FUNCTION_12	CALL_3
0x4000ea5	      0xe800000000	                          call 0x4000eaa	      1002	gui.c	FUNCTION_12	CALL_3
0x4000eaa	    0x4883bda8feff	              cmp qword [rbp - 0x158], 0	      1005	gui.c	FUNCTION_12	IF_5
0x4000eb2	            0x7445	                            je 0x4000ef9	      1005	gui.c	FUNCTION_12	IF_5
0x4000eb4	    0x488b05000000	            mov rax, qword [0x04000ebb] 	      1005	gui.c	FUNCTION_12	IF_5
0x4000ebb	          0x4885c0	                           test rax, rax	      1005	gui.c	FUNCTION_12	IF_5
0x4000ebe	            0x7439	                            je 0x4000ef9	      1005	gui.c	FUNCTION_12	IF_5
0x4000ec0	    0x488b15000000	            mov rdx, qword [0x04000ec7] 	      1006	gui.c	FUNCTION_12	IF_5	CALL_4
0x4000ec7	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      1006	gui.c	FUNCTION_12	IF_5	CALL_4
0x4000ece	          0x4889d6	                            mov rsi, rdx	      1006	gui.c	FUNCTION_12	IF_5	CALL_4
0x4000ed1	          0x4889c7	                            mov rdi, rax	      1006	gui.c	FUNCTION_12	IF_5	CALL_4
0x4000ed4	      0xe800000000	                          call 0x4000ed9	      1006	gui.c	FUNCTION_12	IF_5	CALL_4
0x4000ed9	            0x85c0	                           test eax, eax	      1006	gui.c	FUNCTION_12	IF_5	CALL_4
0x4000edb	            0x741c	                            je 0x4000ef9	      1006	gui.c	FUNCTION_12	IF_5	CALL_4
0x4000edd	    0x48c705000000	               mov qword [0x04000ee8], 0	      1008	gui.c	FUNCTION_12	IF_5
0x4000ee8	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      1009	gui.c	FUNCTION_12	IF_5	CALL_5
0x4000eef	          0x4889c7	                            mov rdi, rax	      1009	gui.c	FUNCTION_12	IF_5	CALL_5
0x4000ef2	      0xe800000000	                          call 0x4000ef7	      1009	gui.c	FUNCTION_12	IF_5	CALL_5
0x4000ef7	            0xeb0e	                           jmp 0x4000f07	      1009	gui.c	FUNCTION_12	IF_5	CALL_5
0x4000ef9	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      1013	gui.c	FUNCTION_12	ELSE_1
0x4000f00	    0x488905000000	            mov qword [0x04000f07], rax 	      1013	gui.c	FUNCTION_12	ELSE_1
0x4000f07	      0xb801000000	                              mov eax, 1	      1022	gui.c	FUNCTION_12
0x4000f0c	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1023	gui.c	FUNCTION_12
0x4000f10	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1023	gui.c	FUNCTION_12
0x4000f19	            0x7405	                            je 0x4000f20	      1023	gui.c	FUNCTION_12
0x4000f1b	      0xe800000000	                          call 0x4000f20	      1023	gui.c	FUNCTION_12
0x4000f20	              0xc9	                                   leave	      1023	gui.c	FUNCTION_12
0x4000f21	              0xc3	                                     ret	      1023	gui.c	FUNCTION_12
gui_set_bg_color	IF,0:functions,0:ELSE,0:CALL,3:SWITCH,0:WHILE,0:FOR,0:DO,0	16
0x400603e	              0x55	                                push rbp	      4752	gui.c	FUNCTION_74
0x400603f	          0x4889e5	                            mov rbp, rsp	      4752	gui.c	FUNCTION_74
0x4006042	        0x4883ec10	                           sub rsp, 0x10	      4752	gui.c	FUNCTION_74
0x4006046	        0x48897df8	                mov qword [rbp - 8], rdi	      4752	gui.c	FUNCTION_74
0x400604a	        0x488b45f8	                mov rax, qword [rbp - 8]	      4753	gui.c	FUNCTION_74	CALL_1
0x400604e	          0x4889c7	                            mov rdi, rax	      4753	gui.c	FUNCTION_74	CALL_1
0x4006051	      0xe800000000	                          call 0x4006056	      4753	gui.c	FUNCTION_74	CALL_1
0x4006056	    0x488905000000	            mov qword [0x0400605d], rax 	      4753	gui.c	FUNCTION_74	CALL_1
0x400605d	        0x488b45f8	                mov rax, qword [rbp - 8]	      4754	gui.c	FUNCTION_74	CALL_3
0x4006061	          0x4889c7	                            mov rdi, rax	      4754	gui.c	FUNCTION_74	CALL_3
0x4006064	      0xe800000000	                          call 0x4006069	      4754	gui.c	FUNCTION_74	CALL_3
0x4006069	          0x4889c7	                            mov rdi, rax	      4754	gui.c	FUNCTION_74	CALL_3
0x400606c	      0xe800000000	                          call 0x4006071	      4754	gui.c	FUNCTION_74	CALL_3
0x4006071	              0x90	                                     nop	      4755	gui.c	FUNCTION_74
0x4006072	              0xc9	                                   leave	      4755	gui.c	FUNCTION_74
0x4006073	              0xc3	                                     ret	      4755	gui.c	FUNCTION_74
gui_find_longest_lnum	IF,3:functions,0:ELSE,2:CALL,4:SWITCH,0:WHILE,0:FOR,1:DO,0	87
0x4005ae8	              0x55	                                push rbp	      4563	gui.c	FUNCTION_69
0x4005ae9	          0x4889e5	                            mov rbp, rsp	      4563	gui.c	FUNCTION_69
0x4005aec	        0x4883ec20	                           sub rsp, 0x20	      4563	gui.c	FUNCTION_69
0x4005af0	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      4564	gui.c	FUNCTION_69
0x4005af8	    0x488b05000000	            mov rax, qword [0x04005aff] 	      4569	gui.c	FUNCTION_69	IF_1	CALL_1
0x4005aff	      0xbe68000000	                           mov esi, 0x68	      4569	gui.c	FUNCTION_69	IF_1	CALL_1
0x4005b04	          0x4889c7	                            mov rdi, rax	      4569	gui.c	FUNCTION_69	IF_1	CALL_1
0x4005b07	      0xe800000000	                          call 0x4005b0c	      4569	gui.c	FUNCTION_69	IF_1	CALL_1
0x4005b0c	          0x4885c0	                           test rax, rax	      4569	gui.c	FUNCTION_69	IF_1	CALL_1
0x4005b0f	     0xf851f010000	                           jne 0x4005c34	      4569	gui.c	FUNCTION_69	IF_1	CALL_1
0x4005b15	    0x488b05000000	            mov rax, qword [0x04005b1c] 	      4570	gui.c	FUNCTION_69	IF_1
0x4005b1c	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      4570	gui.c	FUNCTION_69	IF_1
0x4005b20	    0x488b05000000	            mov rax, qword [0x04005b27] 	      4570	gui.c	FUNCTION_69	IF_1
0x4005b27	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4570	gui.c	FUNCTION_69	IF_1
0x4005b2b	          0x4839c2	                            cmp rdx, rax	      4570	gui.c	FUNCTION_69	IF_1
0x4005b2e	     0xf8f00010000	                            jg 0x4005c34	      4570	gui.c	FUNCTION_69	IF_1
0x4005b34	    0x488b05000000	            mov rax, qword [0x04005b3b] 	      4571	gui.c	FUNCTION_69	IF_1
0x4005b3b	    0x488b90e80000	            mov rdx, qword [rax + 0xe8] 	      4571	gui.c	FUNCTION_69	IF_1
0x4005b42	    0x488b05000000	            mov rax, qword [0x04005b49] 	      4571	gui.c	FUNCTION_69	IF_1
0x4005b49	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4571	gui.c	FUNCTION_69	IF_1
0x4005b4d	          0x4839c2	                            cmp rdx, rax	      4571	gui.c	FUNCTION_69	IF_1
0x4005b50	     0xf8ede000000	                           jle 0x4005c34	      4571	gui.c	FUNCTION_69	IF_1
0x4005b56	    0x488b05000000	            mov rax, qword [0x04005b5d] 	      4572	gui.c	FUNCTION_69	IF_1
0x4005b5d	    0x488b90e80000	            mov rdx, qword [rax + 0xe8] 	      4572	gui.c	FUNCTION_69	IF_1
0x4005b64	    0x488b05000000	            mov rax, qword [0x04005b6b] 	      4572	gui.c	FUNCTION_69	IF_1
0x4005b6b	          0x488b00	                    mov rax, qword [rax]	      4572	gui.c	FUNCTION_69	IF_1
0x4005b6e	        0x4883c001	                              add rax, 1	      4572	gui.c	FUNCTION_69	IF_1
0x4005b72	          0x4839c2	                            cmp rdx, rax	      4572	gui.c	FUNCTION_69	IF_1
0x4005b75	     0xf8fb9000000	                            jg 0x4005c34	      4572	gui.c	FUNCTION_69	IF_1
0x4005b7b	    0x48c745f80000	                  mov qword [rbp - 8], 0	      4576	gui.c	FUNCTION_69	IF_1
0x4005b83	    0x488b05000000	            mov rax, qword [0x04005b8a] 	      4581	gui.c	FUNCTION_69	IF_1	FOR_1
0x4005b8a	        0x488b4078	            mov rax, qword [rax + 0x78] 	      4581	gui.c	FUNCTION_69	IF_1	FOR_1
0x4005b8e	        0x488945f0	             mov qword [rbp - 0x10], rax	      4581	gui.c	FUNCTION_69	IF_1	FOR_1
0x4005b92	      0xe983000000	                           jmp 0x4005c1a	      4581	gui.c	FUNCTION_69	IF_1	FOR_1
0x4005b97	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4583	gui.c	FUNCTION_69	IF_1	FOR_1	CALL_2
0x4005b9b	          0x4889c7	                            mov rdi, rax	      4583	gui.c	FUNCTION_69	IF_1	FOR_1	CALL_2
0x4005b9e	      0xe8c3feffff	                call sym.scroll_line_len	      4583	gui.c	FUNCTION_69	IF_1	FOR_1	CALL_2
0x4005ba3	          0x8945e4	             mov dword [rbp - 0x1c], eax	      4583	gui.c	FUNCTION_69	IF_1	FOR_1	CALL_2
0x4005ba6	        0x488b45f8	                mov rax, qword [rbp - 8]	      4584	gui.c	FUNCTION_69	IF_1	FOR_1	IF_2
0x4005baa	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      4584	gui.c	FUNCTION_69	IF_1	FOR_1	IF_2
0x4005bad	            0x7d13	                           jge 0x4005bc2	      4584	gui.c	FUNCTION_69	IF_1	FOR_1	IF_2
0x4005baf	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4586	gui.c	FUNCTION_69	IF_1	FOR_1	IF_2
0x4005bb2	            0x4898	                                    cdqe	      4586	gui.c	FUNCTION_69	IF_1	FOR_1	IF_2
0x4005bb4	        0x488945f8	                mov qword [rbp - 8], rax	      4586	gui.c	FUNCTION_69	IF_1	FOR_1	IF_2
0x4005bb8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4587	gui.c	FUNCTION_69	IF_1	FOR_1	IF_2
0x4005bbc	        0x488945e8	             mov qword [rbp - 0x18], rax	      4587	gui.c	FUNCTION_69	IF_1	FOR_1	IF_2
0x4005bc0	            0xeb53	                           jmp 0x4005c15	      4587	gui.c	FUNCTION_69	IF_1	FOR_1	IF_2
0x4005bc2	        0x488b45f8	                mov rax, qword [rbp - 8]	      4589	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3
0x4005bc6	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      4589	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3
0x4005bc9	            0x754a	                           jne 0x4005c15	      4589	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3
0x4005bcb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x4005bcf	            0x89c2	                            mov edx, eax	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x4005bd1	    0x488b05000000	            mov rax, qword [0x04005bd8] 	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x4005bd8	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x4005bdc	            0x29c2	                            sub edx, eax	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x4005bde	            0x89d0	                            mov eax, edx	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x4005be0	            0x89c2	                            mov edx, eax	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x4005be2	            0x89d0	                            mov eax, edx	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x4005be4	          0xc1f81f	                           sar eax, 0x1f	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x4005be7	            0x31c2	                            xor edx, eax	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x4005be9	            0x29c2	                            sub edx, eax	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x4005beb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4591	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_4
0x4005bef	            0x89c1	                            mov ecx, eax	      4591	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_4
0x4005bf1	    0x488b05000000	            mov rax, qword [0x04005bf8] 	      4591	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_4
0x4005bf8	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4591	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_4
0x4005bfc	            0x29c1	                            sub ecx, eax	      4591	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_4
0x4005bfe	            0x89c8	                            mov eax, ecx	      4591	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_4
0x4005c00	            0x89c1	                            mov ecx, eax	      4591	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_4
0x4005c02	          0xc1f91f	                           sar ecx, 0x1f	      4591	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_4
0x4005c05	            0x31c8	                            xor eax, ecx	      4591	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_4
0x4005c07	            0x29c8	                            sub eax, ecx	      4591	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_4
0x4005c09	            0x39c2	                            cmp edx, eax	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x4005c0b	            0x7d08	                           jge 0x4005c15	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x4005c0d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4592	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3
0x4005c11	        0x488945e8	             mov qword [rbp - 0x18], rax	      4592	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3
0x4005c15	      0x488345f001	               add qword [rbp - 0x10], 1	      4581	gui.c	FUNCTION_69	IF_1	FOR_1
0x4005c1a	    0x488b05000000	            mov rax, qword [0x04005c21] 	      4581	gui.c	FUNCTION_69	IF_1	FOR_1
0x4005c21	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	      4581	gui.c	FUNCTION_69	IF_1	FOR_1
0x4005c28	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      4581	gui.c	FUNCTION_69	IF_1	FOR_1
0x4005c2c	     0xf8f65ffffff	                            jg 0x4005b97	      4581	gui.c	FUNCTION_69	IF_1	FOR_1
0x4005c32	            0xeb0f	                           jmp 0x4005c43	      4573	gui.c	FUNCTION_69	IF_1
0x4005c34	    0x488b05000000	            mov rax, qword [0x04005c3b] 	      4597	gui.c	FUNCTION_69	ELSE_2
0x4005c3b	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4597	gui.c	FUNCTION_69	ELSE_2
0x4005c3f	        0x488945e8	             mov qword [rbp - 0x18], rax	      4597	gui.c	FUNCTION_69	ELSE_2
0x4005c43	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4599	gui.c	FUNCTION_69	ELSE_2
0x4005c47	              0xc9	                                   leave	      4600	gui.c	FUNCTION_69	ELSE_2
0x4005c48	              0xc3	                                     ret	      4600	gui.c	FUNCTION_69	ELSE_2
send_tabline_event	IF,2:functions,0:ELSE,0:CALL,5:SWITCH,0:WHILE,0:FOR,0:DO,0	47
0x40049a5	              0x55	                                push rbp	      3825	gui.c	FUNCTION_58
0x40049a6	          0x4889e5	                            mov rbp, rsp	      3825	gui.c	FUNCTION_58
0x40049a9	        0x4883ec20	                           sub rsp, 0x20	      3825	gui.c	FUNCTION_58
0x40049ad	          0x897dec	             mov dword [rbp - 0x14], edi	      3825	gui.c	FUNCTION_58
0x40049b0	    0x64488b042528	                mov rax, qword fs:[0x28]	      3825	gui.c	FUNCTION_58
0x40049b9	        0x488945f8	                mov qword [rbp - 8], rax	      3825	gui.c	FUNCTION_58
0x40049bd	            0x31c0	                            xor eax, eax	      3825	gui.c	FUNCTION_58
0x40049bf	    0x488b05000000	            mov rax, qword [0x040049c6] 	      3828	gui.c	FUNCTION_58	IF_1	CALL_1
0x40049c6	          0x4889c7	                            mov rdi, rax	      3828	gui.c	FUNCTION_58	IF_1	CALL_1
0x40049c9	      0xe800000000	                          call 0x40049ce	      3828	gui.c	FUNCTION_58	IF_1	CALL_1
0x40049ce	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      3828	gui.c	FUNCTION_58	IF_1	CALL_1
0x40049d1	            0x7507	                           jne 0x40049da	      3828	gui.c	FUNCTION_58	IF_1	CALL_1
0x40049d3	      0xb800000000	                              mov eax, 0	      3829	gui.c	FUNCTION_58	IF_1
0x40049d8	            0xeb6a	                           jmp 0x4004a44	      3829	gui.c	FUNCTION_58	IF_1
0x40049da	    0x8b0500000000	            mov eax, dword [0x040049e0] 	      3832	gui.c	FUNCTION_58	IF_2
0x40049e0	            0x85c0	                           test eax, eax	      3832	gui.c	FUNCTION_58	IF_2
0x40049e2	            0x750a	                           jne 0x40049ee	      3832	gui.c	FUNCTION_58	IF_2
0x40049e4	    0x8b0500000000	            mov eax, dword [0x040049ea] 	      3834	gui.c	FUNCTION_58	IF_2
0x40049ea	            0x85c0	                           test eax, eax	      3834	gui.c	FUNCTION_58	IF_2
0x40049ec	            0x741d	                            je 0x4004a0b	      3834	gui.c	FUNCTION_58	IF_2
0x40049ee	    0x488b05000000	            mov rax, qword [0x040049f5] 	      3839	gui.c	FUNCTION_58	IF_2	CALL_3
0x40049f5	          0x4889c7	                            mov rdi, rax	      3839	gui.c	FUNCTION_58	IF_2	CALL_3
0x40049f8	      0xe800000000	                          call 0x40049fd	      3839	gui.c	FUNCTION_58	IF_2	CALL_3
0x40049fd	            0x89c7	                            mov edi, eax	      3839	gui.c	FUNCTION_58	IF_2	CALL_3
0x40049ff	      0xe800000000	                          call 0x4004a04	      3839	gui.c	FUNCTION_58	IF_2	CALL_3
0x4004a04	      0xb800000000	                              mov eax, 0	      3840	gui.c	FUNCTION_58	IF_2
0x4004a09	            0xeb39	                           jmp 0x4004a44	      3840	gui.c	FUNCTION_58	IF_2
0x4004a0b	        0xc645f09b	            mov byte [rbp - 0x10], 0x9b 	      3843	gui.c	FUNCTION_58
0x4004a0f	        0xc645f1f0	              mov byte [rbp - 0xf], 0xf0	      3844	gui.c	FUNCTION_58
0x4004a13	        0xc645f258	              mov byte [rbp - 0xe], 0x58	      3845	gui.c	FUNCTION_58
0x4004a17	        0x488d45f0	                   lea rax, [rbp - 0x10]	      3846	gui.c	FUNCTION_58	CALL_4
0x4004a1b	      0xbe03000000	                              mov esi, 3	      3846	gui.c	FUNCTION_58	CALL_4
0x4004a20	          0x4889c7	                            mov rdi, rax	      3846	gui.c	FUNCTION_58	CALL_4
0x4004a23	      0xe800000000	                          call 0x4004a28	      3846	gui.c	FUNCTION_58	CALL_4
0x4004a28	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3847	gui.c	FUNCTION_58
0x4004a2b	          0x8845f0	               mov byte [rbp - 0x10], al	      3847	gui.c	FUNCTION_58
0x4004a2e	        0x488d45f0	                   lea rax, [rbp - 0x10]	      3848	gui.c	FUNCTION_58	CALL_5
0x4004a32	      0xbe01000000	                              mov esi, 1	      3848	gui.c	FUNCTION_58	CALL_5
0x4004a37	          0x4889c7	                            mov rdi, rax	      3848	gui.c	FUNCTION_58	CALL_5
0x4004a3a	      0xe800000000	                          call 0x4004a3f	      3848	gui.c	FUNCTION_58	CALL_5
0x4004a3f	      0xb801000000	                              mov eax, 1	      3849	gui.c	FUNCTION_58
0x4004a44	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3850	gui.c	FUNCTION_58
0x4004a48	    0x644833142528	                xor rdx, qword fs:[0x28]	      3850	gui.c	FUNCTION_58
0x4004a51	            0x7405	                            je 0x4004a58	      3850	gui.c	FUNCTION_58
0x4004a53	      0xe800000000	                          call 0x4004a58	      3850	gui.c	FUNCTION_58
0x4004a58	              0xc9	                                   leave	      3850	gui.c	FUNCTION_58
0x4004a59	              0xc3	                                     ret	      3850	gui.c	FUNCTION_58
gui_resize_shell	IF,6:functions,0:ELSE,1:CALL,9:SWITCH,0:WHILE,0:FOR,0:DO,0	96
0x4001893	              0x55	                                push rbp	      1470	gui.c	FUNCTION_20
0x4001894	          0x4889e5	                            mov rbp, rsp	      1470	gui.c	FUNCTION_20
0x4001897	        0x4883ec10	                           sub rsp, 0x10	      1470	gui.c	FUNCTION_20
0x400189b	          0x897dfc	                mov dword [rbp - 4], edi	      1470	gui.c	FUNCTION_20
0x400189e	          0x8975f8	                mov dword [rbp - 8], esi	      1470	gui.c	FUNCTION_20
0x40018a1	    0x8b0500000000	            mov eax, dword [0x040018a7] 	      1473	gui.c	FUNCTION_20	IF_1
0x40018a7	            0x85c0	                           test eax, eax	      1473	gui.c	FUNCTION_20	IF_1
0x40018a9	     0xf8478010000	                            je 0x4001a27	      1473	gui.c	FUNCTION_20	IF_1
0x40018af	    0x8b0500000000	            mov eax, dword [0x040018b5] 	      1480	gui.c	FUNCTION_20	IF_2
0x40018b5	            0x85c0	                           test eax, eax	      1480	gui.c	FUNCTION_20	IF_2
0x40018b7	            0x750a	                           jne 0x40018c3	      1480	gui.c	FUNCTION_20	IF_2
0x40018b9	    0x8b0500000000	            mov eax, dword [0x040018bf] 	      1480	gui.c	FUNCTION_20	IF_2
0x40018bf	            0x85c0	                           test eax, eax	      1480	gui.c	FUNCTION_20	IF_2
0x40018c1	            0x7417	                            je 0x40018da	      1480	gui.c	FUNCTION_20	IF_2
0x40018c3	          0x8b45fc	                mov eax, dword [rbp - 4]	      1482	gui.c	FUNCTION_20	IF_2
0x40018c6	    0x890500000000	            mov dword [0x040018cc], eax 	      1482	gui.c	FUNCTION_20	IF_2
0x40018cc	          0x8b45f8	                mov eax, dword [rbp - 8]	      1483	gui.c	FUNCTION_20	IF_2
0x40018cf	    0x890500000000	            mov dword [0x040018d5], eax 	      1483	gui.c	FUNCTION_20	IF_2
0x40018d5	      0xe94e010000	                           jmp 0x4001a28	      1484	gui.c	FUNCTION_20	IF_2
0x40018da	    0xc70500000000	               mov dword [0x040018e4], 0	      1488	gui.c	FUNCTION_20
0x40018e4	    0xc70500000000	               mov dword [0x040018ee], 0	      1489	gui.c	FUNCTION_20
0x40018ee	    0xc70500000000	               mov dword [0x040018f8], 1	      1490	gui.c	FUNCTION_20
0x40018f8	      0xe800000000	                          call 0x40018fd	      1493	gui.c	FUNCTION_20	CALL_1
0x40018fd	      0xe800000000	                          call 0x4001902	      1495	gui.c	FUNCTION_20	CALL_2
0x4001902	            0x89c2	                            mov edx, eax	      1495	gui.c	FUNCTION_20	CALL_2
0x4001904	          0x8b45fc	                mov eax, dword [rbp - 4]	      1495	gui.c	FUNCTION_20	CALL_2
0x4001907	            0x29d0	                            sub eax, edx	      1495	gui.c	FUNCTION_20	CALL_2
0x4001909	    0x8b0d00000000	            mov ecx, dword [0x0400190f] 	      1495	gui.c	FUNCTION_20	CALL_2
0x400190f	              0x99	                                     cdq	      1495	gui.c	FUNCTION_20	CALL_2
0x4001910	            0xf7f9	                                idiv ecx	      1495	gui.c	FUNCTION_20	CALL_2
0x4001912	    0x890500000000	            mov dword [0x04001918], eax 	      1495	gui.c	FUNCTION_20	CALL_2
0x4001918	      0xe800000000	                          call 0x400191d	      1496	gui.c	FUNCTION_20	CALL_3
0x400191d	            0x89c2	                            mov edx, eax	      1496	gui.c	FUNCTION_20	CALL_3
0x400191f	          0x8b45f8	                mov eax, dword [rbp - 8]	      1496	gui.c	FUNCTION_20	CALL_3
0x4001922	            0x29d0	                            sub eax, edx	      1496	gui.c	FUNCTION_20	CALL_3
0x4001924	    0x8b0d00000000	            mov ecx, dword [0x0400192a] 	      1496	gui.c	FUNCTION_20	CALL_3
0x400192a	              0x99	                                     cdq	      1496	gui.c	FUNCTION_20	CALL_3
0x400192b	            0xf7f9	                                idiv ecx	      1496	gui.c	FUNCTION_20	CALL_3
0x400192d	    0x890500000000	            mov dword [0x04001933], eax 	      1496	gui.c	FUNCTION_20	CALL_3
0x4001933	          0x8b45fc	                mov eax, dword [rbp - 4]	      1498	gui.c	FUNCTION_20	CALL_4
0x4001936	            0x89c7	                            mov edi, eax	      1498	gui.c	FUNCTION_20	CALL_4
0x4001938	      0xe80efeffff	        call sym.gui_position_components	      1498	gui.c	FUNCTION_20	CALL_4
0x400193d	      0xe800000000	                          call 0x4001942	      1499	gui.c	FUNCTION_20	CALL_5
0x4001942	    0x8b0500000000	            mov eax, dword [0x04001948] 	      1505	gui.c	FUNCTION_20	IF_3
0x4001948	      0x3d00030000	                          cmp eax, 0x300	      1505	gui.c	FUNCTION_20	IF_3
0x400194d	            0x740d	                            je 0x400195c	      1505	gui.c	FUNCTION_20	IF_3
0x400194f	    0x8b0500000000	            mov eax, dword [0x04001955] 	      1505	gui.c	FUNCTION_20	IF_3
0x4001955	      0x3d00080000	                          cmp eax, 0x800	      1505	gui.c	FUNCTION_20	IF_3
0x400195a	            0x750c	                           jne 0x4001968	      1505	gui.c	FUNCTION_20	IF_3
0x400195c	    0x8b0500000000	            mov eax, dword [0x04001962] 	      1506	gui.c	FUNCTION_20	IF_3
0x4001962	    0x890500000000	            mov dword [0x04001968], eax 	      1506	gui.c	FUNCTION_20	IF_3
0x4001968	    0x8b1500000000	            mov edx, dword [0x0400196e] 	      1510	gui.c	FUNCTION_20	IF_4
0x400196e	    0x8b0500000000	            mov eax, dword [0x04001974] 	      1510	gui.c	FUNCTION_20	IF_4
0x4001974	            0x39c2	                            cmp edx, eax	      1510	gui.c	FUNCTION_20	IF_4
0x4001976	            0x753a	                           jne 0x40019b2	      1510	gui.c	FUNCTION_20	IF_4
0x4001978	    0x8b1500000000	            mov edx, dword [0x0400197e] 	      1510	gui.c	FUNCTION_20	IF_4
0x400197e	    0x8b0500000000	            mov eax, dword [0x04001984] 	      1510	gui.c	FUNCTION_20	IF_4
0x4001984	            0x39c2	                            cmp edx, eax	      1510	gui.c	FUNCTION_20	IF_4
0x4001986	            0x752a	                           jne 0x40019b2	      1510	gui.c	FUNCTION_20	IF_4
0x4001988	    0x8b0500000000	            mov eax, dword [0x0400198e] 	      1511	gui.c	FUNCTION_20	IF_4
0x400198e	          0x4863d0	                         movsxd rdx, eax	      1511	gui.c	FUNCTION_20	IF_4
0x4001991	    0x488b05000000	            mov rax, qword [0x04001998] 	      1511	gui.c	FUNCTION_20	IF_4
0x4001998	          0x4839c2	                            cmp rdx, rax	      1511	gui.c	FUNCTION_20	IF_4
0x400199b	            0x7515	                           jne 0x40019b2	      1511	gui.c	FUNCTION_20	IF_4
0x400199d	    0x8b0500000000	            mov eax, dword [0x040019a3] 	      1511	gui.c	FUNCTION_20	IF_4
0x40019a3	          0x4863d0	                         movsxd rdx, eax	      1511	gui.c	FUNCTION_20	IF_4
0x40019a6	    0x488b05000000	            mov rax, qword [0x040019ad] 	      1511	gui.c	FUNCTION_20	IF_4
0x40019ad	          0x4839c2	                            cmp rdx, rax	      1511	gui.c	FUNCTION_20	IF_4
0x40019b0	            0x7405	                            je 0x40019b7	      1511	gui.c	FUNCTION_20	IF_4
0x40019b2	      0xe800000000	                          call 0x40019b7	      1512	gui.c	FUNCTION_20	CALL_6
0x40019b7	      0xbf01000000	                              mov edi, 1	      1514	gui.c	FUNCTION_20	CALL_7
0x40019bc	      0xe800000000	                          call 0x40019c1	      1514	gui.c	FUNCTION_20	CALL_7
0x40019c1	      0xbe01000000	                              mov esi, 1	      1515	gui.c	FUNCTION_20	CALL_8
0x40019c6	      0xbf00000000	                              mov edi, 0	      1515	gui.c	FUNCTION_20	CALL_8
0x40019cb	      0xe800000000	                          call 0x40019d0	      1515	gui.c	FUNCTION_20	CALL_8
0x40019d0	    0xc70500000000	               mov dword [0x040019da], 0	      1520	gui.c	FUNCTION_20
0x40019da	    0x8b0500000000	            mov eax, dword [0x040019e0] 	      1525	gui.c	FUNCTION_20	IF_5
0x40019e0	            0x85c0	                           test eax, eax	      1525	gui.c	FUNCTION_20	IF_5
0x40019e2	            0x7444	                            je 0x4001a28	      1525	gui.c	FUNCTION_20	IF_5
0x40019e4	    0x8b0500000000	            mov eax, dword [0x040019ea] 	      1527	gui.c	FUNCTION_20	IF_5	IF_6
0x40019ea	          0x3945fc	                cmp dword [rbp - 4], eax	      1527	gui.c	FUNCTION_20	IF_5	IF_6
0x40019ed	            0x7521	                           jne 0x4001a10	      1527	gui.c	FUNCTION_20	IF_5	IF_6
0x40019ef	    0x8b0500000000	            mov eax, dword [0x040019f5] 	      1527	gui.c	FUNCTION_20	IF_5	IF_6
0x40019f5	          0x3945f8	                cmp dword [rbp - 8], eax	      1527	gui.c	FUNCTION_20	IF_5	IF_6
0x40019f8	            0x7516	                           jne 0x4001a10	      1527	gui.c	FUNCTION_20	IF_5	IF_6
0x40019fa	    0xc70500000000	               mov dword [0x04001a04], 0	      1529	gui.c	FUNCTION_20	IF_5	IF_6
0x4001a04	    0xc70500000000	               mov dword [0x04001a0e], 0	      1530	gui.c	FUNCTION_20	IF_5	IF_6
0x4001a0e	            0xeb18	                           jmp 0x4001a28	      1530	gui.c	FUNCTION_20	IF_5	IF_6
0x4001a10	    0x8b0500000000	            mov eax, dword [0x04001a16] 	      1534	gui.c	FUNCTION_20	IF_5	ELSE_1
0x4001a16	          0x8945fc	                mov dword [rbp - 4], eax	      1534	gui.c	FUNCTION_20	IF_5	ELSE_1
0x4001a19	    0x8b0500000000	            mov eax, dword [0x04001a1f] 	      1535	gui.c	FUNCTION_20	IF_5	ELSE_1
0x4001a1f	          0x8945f8	                mov dword [rbp - 8], eax	      1535	gui.c	FUNCTION_20	IF_5	ELSE_1
0x4001a22	      0xe9b3feffff	                           jmp 0x40018da	      1536	gui.c	FUNCTION_20	IF_5	ELSE_1
0x4001a27	              0x90	                                     nop	      1474	gui.c	FUNCTION_20	IF_1
0x4001a28	              0xc9	                                   leave	      1539	gui.c	FUNCTION_20
0x4001a29	              0xc3	                                     ret	      1539	gui.c	FUNCTION_20
gui_shell_closed	IF,1:functions,0:ELSE,0:CALL,3:SWITCH,0:WHILE,0:FOR,0:DO,0	37
0x4000bd7	              0x55	                                push rbp	       816	gui.c	FUNCTION_9
0x4000bd8	          0x4889e5	                            mov rbp, rsp	       816	gui.c	FUNCTION_9
0x4000bdb	    0x4881ec000100	                          sub rsp, 0x100	       816	gui.c	FUNCTION_9
0x4000be2	    0x64488b042528	                mov rax, qword fs:[0x28]	       816	gui.c	FUNCTION_9
0x4000beb	        0x488945f8	                mov qword [rbp - 8], rax	       816	gui.c	FUNCTION_9
0x4000bef	            0x31c0	                            xor eax, eax	       816	gui.c	FUNCTION_9
0x4000bf1	    0x488d8500ffff	                  lea rax, [rbp - 0x100]	       819	gui.c	FUNCTION_9
0x4000bf8	      0xbe00000000	                              mov esi, 0	       819	gui.c	FUNCTION_9
0x4000bfd	      0xba1e000000	                           mov edx, 0x1e	       819	gui.c	FUNCTION_9
0x4000c02	          0x4889c7	                            mov rdi, rax	       819	gui.c	FUNCTION_9
0x4000c05	          0x4889d1	                            mov rcx, rdx	       819	gui.c	FUNCTION_9
0x4000c08	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	       819	gui.c	FUNCTION_9
0x4000c0b	    0xc70500000000	               mov dword [0x04000c15], 1	       822	gui.c	FUNCTION_9
0x4000c15	    0xc70500000000	               mov dword [0x04000c1f], 1	       824	gui.c	FUNCTION_9
0x4000c1f	    0xc70500000000	               mov dword [0x04000c29], 1	       827	gui.c	FUNCTION_9
0x4000c29	      0xbe00000000	                              mov esi, 0	       831	gui.c	FUNCTION_9	IF_1	CALL_1
0x4000c2e	      0xbf00000000	                              mov edi, 0	       831	gui.c	FUNCTION_9	IF_1	CALL_1
0x4000c33	      0xe800000000	                          call 0x4000c38	       831	gui.c	FUNCTION_9	IF_1	CALL_1
0x4000c38	            0x85c0	                           test eax, eax	       831	gui.c	FUNCTION_9	IF_1	CALL_1
0x4000c3a	            0x750a	                           jne 0x4000c46	       831	gui.c	FUNCTION_9	IF_1	CALL_1
0x4000c3c	      0xbf00000000	                              mov edi, 0	       832	gui.c	FUNCTION_9	CALL_2
0x4000c41	      0xe800000000	                          call 0x4000c46	       832	gui.c	FUNCTION_9	CALL_2
0x4000c46	    0xc70500000000	               mov dword [0x04000c50], 0	       834	gui.c	FUNCTION_9
0x4000c50	      0xbf00000000	                              mov edi, 0	       835	gui.c	FUNCTION_9
0x4000c55	    0x488d8500ffff	                  lea rax, [rbp - 0x100]	       835	gui.c	FUNCTION_9
0x4000c5c	      0xba1e000000	                           mov edx, 0x1e	       835	gui.c	FUNCTION_9
0x4000c61	          0x4889c6	                            mov rsi, rax	       835	gui.c	FUNCTION_9
0x4000c64	          0x4889d1	                            mov rcx, rdx	       835	gui.c	FUNCTION_9
0x4000c67	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	       835	gui.c	FUNCTION_9
0x4000c6a	      0xe800000000	                          call 0x4000c6f	       836	gui.c	FUNCTION_9	CALL_3
0x4000c6f	              0x90	                                     nop	       837	gui.c	FUNCTION_9
0x4000c70	        0x488b45f8	                mov rax, qword [rbp - 8]	       837	gui.c	FUNCTION_9
0x4000c74	    0x644833042528	                xor rax, qword fs:[0x28]	       837	gui.c	FUNCTION_9
0x4000c7d	            0x7405	                            je 0x4000c84	       837	gui.c	FUNCTION_9
0x4000c7f	      0xe800000000	                          call 0x4000c84	       837	gui.c	FUNCTION_9
0x4000c84	              0xc9	                                   leave	       837	gui.c	FUNCTION_9
0x4000c85	              0xc3	                                     ret	       837	gui.c	FUNCTION_9
fill_mouse_coord	IF,0:functions,0:ELSE,0:CALL,0:SWITCH,0:WHILE,0:FOR,0:DO,0	45
0x4003645	              0x55	                                push rbp	      3057	gui.c	FUNCTION_49
0x4003646	          0x4889e5	                            mov rbp, rsp	      3057	gui.c	FUNCTION_49
0x4003649	        0x48897df8	                mov qword [rbp - 8], rdi	      3057	gui.c	FUNCTION_49
0x400364d	          0x8975f4	              mov dword [rbp - 0xc], esi	      3057	gui.c	FUNCTION_49
0x4003650	          0x8955f0	             mov dword [rbp - 0x10], edx	      3057	gui.c	FUNCTION_49
0x4003653	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      3058	gui.c	FUNCTION_49
0x4003656	          0x8d507f	                   lea edx, [rax + 0x7f]	      3058	gui.c	FUNCTION_49
0x4003659	            0x85c0	                           test eax, eax	      3058	gui.c	FUNCTION_49
0x400365b	           0xf48c2	                          cmovs eax, edx	      3058	gui.c	FUNCTION_49
0x400365e	          0xc1f807	                              sar eax, 7	      3058	gui.c	FUNCTION_49
0x4003661	          0x8d5021	                   lea edx, [rax + 0x21]	      3058	gui.c	FUNCTION_49
0x4003664	        0x488b45f8	                mov rax, qword [rbp - 8]	      3058	gui.c	FUNCTION_49
0x4003668	            0x8810	                      mov byte [rax], dl	      3058	gui.c	FUNCTION_49
0x400366a	        0x488b45f8	                mov rax, qword [rbp - 8]	      3059	gui.c	FUNCTION_49
0x400366e	        0x488d4801	                      lea rcx, [rax + 1]	      3059	gui.c	FUNCTION_49
0x4003672	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      3059	gui.c	FUNCTION_49
0x4003675	              0x99	                                     cdq	      3059	gui.c	FUNCTION_49
0x4003676	          0xc1ea19	                           shr edx, 0x19	      3059	gui.c	FUNCTION_49
0x4003679	             0x1d0	                            add eax, edx	      3059	gui.c	FUNCTION_49
0x400367b	          0x83e07f	                           and eax, 0x7f	      3059	gui.c	FUNCTION_49
0x400367e	            0x29d0	                            sub eax, edx	      3059	gui.c	FUNCTION_49
0x4003680	          0x83c021	                           add eax, 0x21	      3059	gui.c	FUNCTION_49
0x4003683	            0x8801	                      mov byte [rcx], al	      3059	gui.c	FUNCTION_49
0x4003685	        0x488b45f8	                mov rax, qword [rbp - 8]	      3060	gui.c	FUNCTION_49
0x4003689	        0x488d5002	                      lea rdx, [rax + 2]	      3060	gui.c	FUNCTION_49
0x400368d	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      3060	gui.c	FUNCTION_49
0x4003690	          0x8d487f	                   lea ecx, [rax + 0x7f]	      3060	gui.c	FUNCTION_49
0x4003693	            0x85c0	                           test eax, eax	      3060	gui.c	FUNCTION_49
0x4003695	           0xf48c1	                          cmovs eax, ecx	      3060	gui.c	FUNCTION_49
0x4003698	          0xc1f807	                              sar eax, 7	      3060	gui.c	FUNCTION_49
0x400369b	          0x83c021	                           add eax, 0x21	      3060	gui.c	FUNCTION_49
0x400369e	            0x8802	                      mov byte [rdx], al	      3060	gui.c	FUNCTION_49
0x40036a0	        0x488b45f8	                mov rax, qword [rbp - 8]	      3061	gui.c	FUNCTION_49
0x40036a4	        0x488d4803	                      lea rcx, [rax + 3]	      3061	gui.c	FUNCTION_49
0x40036a8	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      3061	gui.c	FUNCTION_49
0x40036ab	              0x99	                                     cdq	      3061	gui.c	FUNCTION_49
0x40036ac	          0xc1ea19	                           shr edx, 0x19	      3061	gui.c	FUNCTION_49
0x40036af	             0x1d0	                            add eax, edx	      3061	gui.c	FUNCTION_49
0x40036b1	          0x83e07f	                           and eax, 0x7f	      3061	gui.c	FUNCTION_49
0x40036b4	            0x29d0	                            sub eax, edx	      3061	gui.c	FUNCTION_49
0x40036b6	          0x83c021	                           add eax, 0x21	      3061	gui.c	FUNCTION_49
0x40036b9	            0x8801	                      mov byte [rcx], al	      3061	gui.c	FUNCTION_49
0x40036bb	              0x90	                                     nop	      3062	gui.c	FUNCTION_49
0x40036bc	              0x5d	                                 pop rbp	      3062	gui.c	FUNCTION_49
0x40036bd	              0xc3	                                     ret	      3062	gui.c	FUNCTION_49
gui_check_pos	IF,3:functions,0:ELSE,0:CALL,0:SWITCH,0:WHILE,0:FOR,0:DO,0	28
0x4000f41	              0x55	                                push rbp	      1038	gui.c	FUNCTION_14
0x4000f42	          0x4889e5	                            mov rbp, rsp	      1038	gui.c	FUNCTION_14
0x4000f45	    0x8b1500000000	            mov edx, dword [0x04000f4b] 	      1039	gui.c	FUNCTION_14	IF_1
0x4000f4b	    0x8b0500000000	            mov eax, dword [0x04000f51] 	      1039	gui.c	FUNCTION_14	IF_1
0x4000f51	            0x39c2	                            cmp edx, eax	      1039	gui.c	FUNCTION_14	IF_1
0x4000f53	            0x7c0f	                            jl 0x4000f64	      1039	gui.c	FUNCTION_14	IF_1
0x4000f55	    0x8b0500000000	            mov eax, dword [0x04000f5b] 	      1040	gui.c	FUNCTION_14	IF_1
0x4000f5b	          0x83e801	                              sub eax, 1	      1040	gui.c	FUNCTION_14	IF_1
0x4000f5e	    0x890500000000	            mov dword [0x04000f64], eax 	      1040	gui.c	FUNCTION_14	IF_1
0x4000f64	    0x8b1500000000	            mov edx, dword [0x04000f6a] 	      1041	gui.c	FUNCTION_14	IF_2
0x4000f6a	    0x8b0500000000	            mov eax, dword [0x04000f70] 	      1041	gui.c	FUNCTION_14	IF_2
0x4000f70	            0x39c2	                            cmp edx, eax	      1041	gui.c	FUNCTION_14	IF_2
0x4000f72	            0x7c0f	                            jl 0x4000f83	      1041	gui.c	FUNCTION_14	IF_2
0x4000f74	    0x8b0500000000	            mov eax, dword [0x04000f7a] 	      1042	gui.c	FUNCTION_14	IF_2
0x4000f7a	          0x83e801	                              sub eax, 1	      1042	gui.c	FUNCTION_14	IF_2
0x4000f7d	    0x890500000000	            mov dword [0x04000f83], eax 	      1042	gui.c	FUNCTION_14	IF_2
0x4000f83	    0x8b1500000000	            mov edx, dword [0x04000f89] 	      1043	gui.c	FUNCTION_14	IF_3
0x4000f89	    0x8b0500000000	            mov eax, dword [0x04000f8f] 	      1043	gui.c	FUNCTION_14	IF_3
0x4000f8f	            0x39c2	                            cmp edx, eax	      1043	gui.c	FUNCTION_14	IF_3
0x4000f91	            0x7d10	                           jge 0x4000fa3	      1043	gui.c	FUNCTION_14	IF_3
0x4000f93	    0x8b1500000000	            mov edx, dword [0x04000f99] 	      1043	gui.c	FUNCTION_14	IF_3
0x4000f99	    0x8b0500000000	            mov eax, dword [0x04000f9f] 	      1043	gui.c	FUNCTION_14	IF_3
0x4000f9f	            0x39c2	                            cmp edx, eax	      1043	gui.c	FUNCTION_14	IF_3
0x4000fa1	            0x7c07	                            jl 0x4000faa	      1043	gui.c	FUNCTION_14	IF_3
0x4000fa3	    0xc60500000000	                mov byte [0x04000faa], 0	      1044	gui.c	FUNCTION_14	IF_3
0x4000faa	              0x90	                                     nop	      1045	gui.c	FUNCTION_14
0x4000fab	              0x5d	                                 pop rbp	      1045	gui.c	FUNCTION_14
0x4000fac	              0xc3	                                     ret	      1045	gui.c	FUNCTION_14
gui_mouse_correct	IF,4:functions,0:ELSE,0:CALL,8:SWITCH,0:WHILE,0:FOR,0:DO,0	96
0x40063d0	              0x55	                                push rbp	      4920	gui.c	FUNCTION_80
0x40063d1	          0x4889e5	                            mov rbp, rsp	      4920	gui.c	FUNCTION_80
0x40063d4	              0x53	                                push rbx	      4920	gui.c	FUNCTION_80
0x40063d5	        0x4883ec28	                           sub rsp, 0x28	      4920	gui.c	FUNCTION_80
0x40063d9	    0x64488b042528	                mov rax, qword fs:[0x28]	      4920	gui.c	FUNCTION_80
0x40063e2	        0x488945e8	             mov qword [rbp - 0x18], rax	      4920	gui.c	FUNCTION_80
0x40063e6	            0x31c0	                            xor eax, eax	      4920	gui.c	FUNCTION_80
0x40063e8	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      4922	gui.c	FUNCTION_80
0x40063f0	    0xc70500000000	               mov dword [0x040063fa], 0	      4924	gui.c	FUNCTION_80
0x40063fa	    0x8b0500000000	            mov eax, dword [0x04006400] 	      4926	gui.c	FUNCTION_80	IF_1
0x4006400	            0x85c0	                           test eax, eax	      4926	gui.c	FUNCTION_80	IF_1
0x4006402	     0xf8423010000	                            je 0x400652b	      4926	gui.c	FUNCTION_80	IF_1
0x4006408	    0x8b0500000000	            mov eax, dword [0x0400640e] 	      4926	gui.c	FUNCTION_80	IF_1
0x400640e	            0x85c0	                           test eax, eax	      4926	gui.c	FUNCTION_80	IF_1
0x4006410	     0xf8415010000	                            je 0x400652b	      4926	gui.c	FUNCTION_80	IF_1
0x4006416	        0x488d55dc	                   lea rdx, [rbp - 0x24]	      4929	gui.c	FUNCTION_80	CALL_1
0x400641a	        0x488d45d8	                   lea rax, [rbp - 0x28]	      4929	gui.c	FUNCTION_80	CALL_1
0x400641e	          0x4889d6	                            mov rsi, rdx	      4929	gui.c	FUNCTION_80	CALL_1
0x4006421	          0x4889c7	                            mov rdi, rax	      4929	gui.c	FUNCTION_80	CALL_1
0x4006424	      0xe800000000	                          call 0x4006429	      4929	gui.c	FUNCTION_80	CALL_1
0x4006429	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      4931	gui.c	FUNCTION_80	IF_2
0x400642c	            0x85c0	                           test eax, eax	      4931	gui.c	FUNCTION_80	IF_2
0x400642e	     0xf88fa000000	                            js 0x400652e	      4931	gui.c	FUNCTION_80	IF_2
0x4006434	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      4931	gui.c	FUNCTION_80	IF_2
0x4006437	          0x4863d0	                         movsxd rdx, eax	      4931	gui.c	FUNCTION_80	IF_2
0x400643a	    0x8b0500000000	            mov eax, dword [0x04006440] 	      4931	gui.c	FUNCTION_80	IF_2
0x4006440	          0x4863c8	                         movsxd rcx, eax	      4931	gui.c	FUNCTION_80	IF_2
0x4006443	    0x488b05000000	            mov rax, qword [0x0400644a] 	      4931	gui.c	FUNCTION_80	IF_2
0x400644a	        0x480fafc1	                           imul rax, rcx	      4931	gui.c	FUNCTION_80	IF_2
0x400644e	          0x4839c2	                            cmp rdx, rax	      4931	gui.c	FUNCTION_80	IF_2
0x4006451	     0xf8fd7000000	                            jg 0x400652e	      4931	gui.c	FUNCTION_80	IF_2
0x4006457	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      4933	gui.c	FUNCTION_80	IF_3	CALL_3
0x400645a	            0x85c0	                           test eax, eax	      4933	gui.c	FUNCTION_80	IF_3	CALL_3
0x400645c	            0x7834	                            js 0x4006492	      4933	gui.c	FUNCTION_80	IF_3	CALL_3
0x400645e	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      4933	gui.c	FUNCTION_80	IF_3	CALL_3
0x4006461	    0x8b0500000000	            mov eax, dword [0x04006467] 	      4933	gui.c	FUNCTION_80	IF_3	CALL_3
0x4006467	            0x29c2	                            sub edx, eax	      4933	gui.c	FUNCTION_80	IF_3	CALL_3
0x4006469	            0x89d0	                            mov eax, edx	      4933	gui.c	FUNCTION_80	IF_3	CALL_3
0x400646b	    0x8b1d00000000	            mov ebx, dword [0x04006471] 	      4933	gui.c	FUNCTION_80	IF_3	CALL_3
0x4006471	              0x99	                                     cdq	      4933	gui.c	FUNCTION_80	IF_3	CALL_3
0x4006472	            0xf7fb	                                idiv ebx	      4933	gui.c	FUNCTION_80	IF_3	CALL_3
0x4006474	            0x89c3	                            mov ebx, eax	      4933	gui.c	FUNCTION_80	IF_3	CALL_3
0x4006476	      0xe800000000	                          call 0x400647b	      4933	gui.c	FUNCTION_80	IF_3	CALL_3
0x400647b	            0x39c3	                            cmp ebx, eax	      4933	gui.c	FUNCTION_80	IF_3	CALL_3
0x400647d	            0x7c13	                            jl 0x4006492	      4933	gui.c	FUNCTION_80	IF_3	CALL_3
0x400647f	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      4934	gui.c	FUNCTION_80	CALL_4
0x4006482	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      4934	gui.c	FUNCTION_80	CALL_4
0x4006485	            0x89d6	                            mov esi, edx	      4934	gui.c	FUNCTION_80	CALL_4
0x4006487	            0x89c7	                            mov edi, eax	      4934	gui.c	FUNCTION_80	CALL_4
0x4006489	      0xe8bc000000	                         call sym.xy2win	      4934	gui.c	FUNCTION_80	CALL_4
0x400648e	        0x488945e0	             mov qword [rbp - 0x20], rax	      4934	gui.c	FUNCTION_80	CALL_4
0x4006492	    0x488b05000000	            mov rax, qword [0x04006499] 	      4935	gui.c	FUNCTION_80	IF_4
0x4006499	        0x483945e0	            cmp qword [rbp - 0x20], rax 	      4935	gui.c	FUNCTION_80	IF_4
0x400649d	     0xf848c000000	                            je 0x400652f	      4935	gui.c	FUNCTION_80	IF_4
0x40064a3	      0x48837de000	               cmp qword [rbp - 0x20], 0	      4935	gui.c	FUNCTION_80	IF_4
0x40064a8	     0xf8481000000	                            je 0x400652f	      4935	gui.c	FUNCTION_80	IF_4
0x40064ae	      0xe800000000	                          call 0x40064b3	      4937	gui.c	FUNCTION_80	IF_4	CALL_5
0x40064b3	    0x488b05000000	            mov rax, qword [0x040064ba] 	      4939	gui.c	FUNCTION_80	IF_4	CALL_8
0x40064ba	    0x8b909c000000	            mov edx, dword [rax + 0x9c] 	      4939	gui.c	FUNCTION_80	IF_4	CALL_8
0x40064c0	    0x488b05000000	            mov rax, qword [0x040064c7] 	      4939	gui.c	FUNCTION_80	IF_4	CALL_8
0x40064c7	    0x8b80a8010000	           mov eax, dword [rax + 0x1a8] 	      4939	gui.c	FUNCTION_80	IF_4	CALL_8
0x40064cd	             0x1c2	                            add edx, eax	      4939	gui.c	FUNCTION_80	IF_4	CALL_8
0x40064cf	    0x488b05000000	            mov rax, qword [0x040064d6] 	      4939	gui.c	FUNCTION_80	IF_4	CALL_8
0x40064d6	    0x8b80dc000000	            mov eax, dword [rax + 0xdc] 	      4939	gui.c	FUNCTION_80	IF_4	CALL_8
0x40064dc	             0x1c2	                            add edx, eax	      4939	gui.c	FUNCTION_80	IF_4	CALL_8
0x40064de	    0x8b0500000000	            mov eax, dword [0x040064e4] 	      4939	gui.c	FUNCTION_80	IF_4	CALL_8
0x40064e4	           0xfafd0	                           imul edx, eax	      4939	gui.c	FUNCTION_80	IF_4	CALL_8
0x40064e7	    0x8b0500000000	            mov eax, dword [0x040064ed] 	      4940	gui.c	FUNCTION_80	IF_4
0x40064ed	            0x89c1	                            mov ecx, eax	      4940	gui.c	FUNCTION_80	IF_4
0x40064ef	          0xc1e91f	                           shr ecx, 0x1f	      4940	gui.c	FUNCTION_80	IF_4
0x40064f2	             0x1c8	                            add eax, ecx	      4940	gui.c	FUNCTION_80	IF_4
0x40064f4	            0xd1f8	                              sar eax, 1	      4940	gui.c	FUNCTION_80	IF_4
0x40064f6	             0x1c2	                            add edx, eax	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x40064f8	    0x488b05000000	            mov rax, qword [0x040064ff] 	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x40064ff	    0x8b88a8000000	            mov ecx, dword [rax + 0xa8] 	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x4006505	    0x488b05000000	            mov rax, qword [0x0400650c] 	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x400650c	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x4006512	             0x1c1	                            add ecx, eax	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x4006514	    0x8b0500000000	            mov eax, dword [0x0400651a] 	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x400651a	           0xfafc1	                           imul eax, ecx	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x400651d	          0x83e803	                              sub eax, 3	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x4006520	            0x89d6	                            mov esi, edx	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x4006522	            0x89c7	                            mov edi, eax	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x4006524	      0xe800000000	                          call 0x4006529	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x4006529	            0xeb04	                           jmp 0x400652f	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x400652b	              0x90	                                     nop	      4927	gui.c	FUNCTION_80	IF_1
0x400652c	            0xeb01	                           jmp 0x400652f	      4927	gui.c	FUNCTION_80	IF_1
0x400652e	              0x90	                                     nop	      4932	gui.c	FUNCTION_80	IF_2
0x400652f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4942	gui.c	FUNCTION_80
0x4006533	    0x644833042528	                xor rax, qword fs:[0x28]	      4942	gui.c	FUNCTION_80
0x400653c	            0x7405	                            je 0x4006543	      4942	gui.c	FUNCTION_80
0x400653e	      0xe800000000	                          call 0x4006543	      4942	gui.c	FUNCTION_80
0x4006543	        0x4883c428	                           add rsp, 0x28	      4942	gui.c	FUNCTION_80
0x4006547	              0x5b	                                 pop rbx	      4942	gui.c	FUNCTION_80
0x4006548	              0x5d	                                 pop rbp	      4942	gui.c	FUNCTION_80
0x4006549	              0xc3	                                     ret	      4942	gui.c	FUNCTION_80
gui_outstr	IF,8:functions,0:ELSE,2:CALL,3:SWITCH,0:WHILE,1:FOR,1:DO,0	112
0x400240b	              0x55	                                push rbp	      2040	gui.c	FUNCTION_36
0x400240c	          0x4889e5	                            mov rbp, rsp	      2040	gui.c	FUNCTION_36
0x400240f	        0x4883ec20	                           sub rsp, 0x20	      2040	gui.c	FUNCTION_36
0x4002413	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2040	gui.c	FUNCTION_36
0x4002417	          0x8975e4	             mov dword [rbp - 0x1c], esi	      2040	gui.c	FUNCTION_36
0x400241a	        0x837de400	               cmp dword [rbp - 0x1c], 0	      2046	gui.c	FUNCTION_36	IF_1
0x400241e	     0xf848b010000	                            je 0x40025af	      2046	gui.c	FUNCTION_36	IF_1
0x4002424	        0x837de400	               cmp dword [rbp - 0x1c], 0	      2049	gui.c	FUNCTION_36	IF_2
0x4002428	     0xf8975010000	                           jns 0x40025a3	      2049	gui.c	FUNCTION_36	IF_2
0x400242e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2050	gui.c	FUNCTION_36	CALL_1
0x4002432	          0x4889c7	                            mov rdi, rax	      2050	gui.c	FUNCTION_36	CALL_1
0x4002435	      0xe800000000	                          call 0x400243a	      2050	gui.c	FUNCTION_36	CALL_1
0x400243a	          0x8945e4	             mov dword [rbp - 0x1c], eax	      2050	gui.c	FUNCTION_36	CALL_1
0x400243d	      0xe961010000	                           jmp 0x40025a3	      2052	gui.c	FUNCTION_36	WHILE_1
0x4002442	    0x8b0500000000	            mov eax, dword [0x04002448] 	      2055	gui.c	FUNCTION_36	WHILE_1	IF_3
0x4002448	            0x85c0	                           test eax, eax	      2055	gui.c	FUNCTION_36	WHILE_1	IF_3
0x400244a	            0x747d	                            je 0x40024c9	      2055	gui.c	FUNCTION_36	WHILE_1	IF_3
0x400244c	    0xc745fc000000	                  mov dword [rbp - 4], 0	      2058	gui.c	FUNCTION_36	WHILE_1	IF_3
0x4002453	    0xc745f8000000	                  mov dword [rbp - 8], 0	      2059	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x400245a	            0xeb52	                           jmp 0x40024ae	      2059	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x400245c	    0x488b05000000	            mov rax, qword [0x04002463] 	      2061	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x4002463	          0x8b55f8	                mov edx, dword [rbp - 8]	      2061	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x4002466	          0x4863ca	                         movsxd rcx, edx	      2061	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x4002469	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2061	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x400246d	          0x4801ca	                            add rdx, rcx	      2061	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x4002470	          0x4889d7	                            mov rdi, rdx	      2061	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x4002473	            0xffd0	                                call rax	      2061	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x4002475	           0x145fc	                add dword [rbp - 4], eax	      2061	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x4002478	    0x8b1500000000	            mov edx, dword [0x0400247e] 	      2062	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1	IF_4
0x400247e	          0x8b45fc	                mov eax, dword [rbp - 4]	      2062	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1	IF_4
0x4002481	             0x1d0	                            add eax, edx	      2062	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1	IF_4
0x4002483	          0x4863d0	                         movsxd rdx, eax	      2062	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1	IF_4
0x4002486	    0x488b05000000	            mov rax, qword [0x0400248d] 	      2062	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1	IF_4
0x400248d	          0x4839c2	                            cmp rdx, rax	      2062	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1	IF_4
0x4002490	            0x7f26	                            jg 0x40024b8	      2062	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1	IF_4
0x4002492	    0x488b05000000	            mov rax, qword [0x04002499] 	      2064	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x4002499	          0x8b55f8	                mov edx, dword [rbp - 8]	      2064	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x400249c	          0x4863ca	                         movsxd rcx, edx	      2064	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x400249f	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2064	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x40024a3	          0x4801ca	                            add rdx, rcx	      2064	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x40024a6	          0x4889d7	                            mov rdi, rdx	      2064	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x40024a9	            0xffd0	                                call rax	      2064	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x40024ab	           0x145f8	                add dword [rbp - 8], eax	      2064	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x40024ae	          0x8b45f8	                mov eax, dword [rbp - 8]	      2059	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x40024b1	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      2059	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x40024b4	            0x7ca6	                            jl 0x400245c	      2059	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x40024b6	            0xeb01	                           jmp 0x40024b9	      2059	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x40024b8	              0x90	                                     nop	      2063	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1	IF_4
0x40024b9	          0x8b45f8	                mov eax, dword [rbp - 8]	      2066	gui.c	FUNCTION_36	WHILE_1	IF_3	IF_5
0x40024bc	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      2066	gui.c	FUNCTION_36	WHILE_1	IF_3	IF_5
0x40024bf	            0x7e40	                           jle 0x4002501	      2066	gui.c	FUNCTION_36	WHILE_1	IF_3	IF_5
0x40024c1	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      2067	gui.c	FUNCTION_36	WHILE_1	IF_3	IF_5
0x40024c4	          0x8945f8	                mov dword [rbp - 8], eax	      2067	gui.c	FUNCTION_36	WHILE_1	IF_3	IF_5
0x40024c7	            0xeb38	                           jmp 0x4002501	      2067	gui.c	FUNCTION_36	WHILE_1	IF_3	IF_5
0x40024c9	    0x8b1500000000	            mov edx, dword [0x040024cf] 	      2071	gui.c	FUNCTION_36	WHILE_1	ELSE_1	IF_6
0x40024cf	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      2071	gui.c	FUNCTION_36	WHILE_1	ELSE_1	IF_6
0x40024d2	             0x1d0	                            add eax, edx	      2071	gui.c	FUNCTION_36	WHILE_1	ELSE_1	IF_6
0x40024d4	          0x4863d0	                         movsxd rdx, eax	      2071	gui.c	FUNCTION_36	WHILE_1	ELSE_1	IF_6
0x40024d7	    0x488b05000000	            mov rax, qword [0x040024de] 	      2071	gui.c	FUNCTION_36	WHILE_1	ELSE_1	IF_6
0x40024de	          0x4839c2	                            cmp rdx, rax	      2071	gui.c	FUNCTION_36	WHILE_1	ELSE_1	IF_6
0x40024e1	            0x7e18	                           jle 0x40024fb	      2071	gui.c	FUNCTION_36	WHILE_1	ELSE_1	IF_6
0x40024e3	    0x488b05000000	            mov rax, qword [0x040024ea] 	      2072	gui.c	FUNCTION_36	WHILE_1	ELSE_1	IF_6
0x40024ea	            0x89c2	                            mov edx, eax	      2072	gui.c	FUNCTION_36	WHILE_1	ELSE_1	IF_6
0x40024ec	    0x8b0500000000	            mov eax, dword [0x040024f2] 	      2072	gui.c	FUNCTION_36	WHILE_1	ELSE_1	IF_6
0x40024f2	            0x29c2	                            sub edx, eax	      2072	gui.c	FUNCTION_36	WHILE_1	ELSE_1	IF_6
0x40024f4	            0x89d0	                            mov eax, edx	      2072	gui.c	FUNCTION_36	WHILE_1	ELSE_1	IF_6
0x40024f6	          0x8945f8	                mov dword [rbp - 8], eax	      2072	gui.c	FUNCTION_36	WHILE_1	ELSE_1	IF_6
0x40024f9	            0xeb06	                           jmp 0x4002501	      2072	gui.c	FUNCTION_36	WHILE_1	ELSE_1	IF_6
0x40024fb	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      2074	gui.c	FUNCTION_36	WHILE_1	ELSE_2
0x40024fe	          0x8945f8	                mov dword [rbp - 8], eax	      2074	gui.c	FUNCTION_36	WHILE_1	ELSE_2
0x4002501	          0x8b75f8	                mov esi, dword [rbp - 8]	      2076	gui.c	FUNCTION_36	WHILE_1	CALL_2
0x4002504	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2076	gui.c	FUNCTION_36	WHILE_1	CALL_2
0x4002508	    0x41b900000000	                              mov r9d, 0	      2076	gui.c	FUNCTION_36	WHILE_1	CALL_2
0x400250e	    0x41b800000000	                              mov r8d, 0	      2076	gui.c	FUNCTION_36	WHILE_1	CALL_2
0x4002514	      0xb900000000	                              mov ecx, 0	      2076	gui.c	FUNCTION_36	WHILE_1	CALL_2
0x4002519	      0xba00000000	                              mov edx, 0	      2076	gui.c	FUNCTION_36	WHILE_1	CALL_2
0x400251e	          0x4889c7	                            mov rdi, rax	      2076	gui.c	FUNCTION_36	WHILE_1	CALL_2
0x4002521	      0xe800000000	                          call 0x4002526	      2076	gui.c	FUNCTION_36	WHILE_1	CALL_2
0x4002526	          0x8b45f8	                mov eax, dword [rbp - 8]	      2078	gui.c	FUNCTION_36	WHILE_1
0x4002529	            0x4898	                                    cdqe	      2078	gui.c	FUNCTION_36	WHILE_1
0x400252b	        0x480145e8	            add qword [rbp - 0x18], rax 	      2078	gui.c	FUNCTION_36	WHILE_1
0x400252f	          0x8b45f8	                mov eax, dword [rbp - 8]	      2079	gui.c	FUNCTION_36	WHILE_1
0x4002532	          0x2945e4	             sub dword [rbp - 0x1c], eax	      2079	gui.c	FUNCTION_36	WHILE_1
0x4002535	        0x837de400	               cmp dword [rbp - 0x1c], 0	      2082	gui.c	FUNCTION_36	WHILE_1	IF_7
0x4002539	            0x7e3a	                           jle 0x4002575	      2082	gui.c	FUNCTION_36	WHILE_1	IF_7
0x400253b	    0x8b0500000000	            mov eax, dword [0x04002541] 	      2082	gui.c	FUNCTION_36	WHILE_1	IF_7
0x4002541	          0x4863d0	                         movsxd rdx, eax	      2082	gui.c	FUNCTION_36	WHILE_1	IF_7
0x4002544	    0x488b05000000	            mov rax, qword [0x0400254b] 	      2082	gui.c	FUNCTION_36	WHILE_1	IF_7
0x400254b	          0x4839c2	                            cmp rdx, rax	      2082	gui.c	FUNCTION_36	WHILE_1	IF_7
0x400254e	            0x7d25	                           jge 0x4002575	      2082	gui.c	FUNCTION_36	WHILE_1	IF_7
0x4002550	    0x41b900000000	                              mov r9d, 0	      2083	gui.c	FUNCTION_36	WHILE_1	IF_7	CALL_3
0x4002556	    0x41b800000000	                              mov r8d, 0	      2083	gui.c	FUNCTION_36	WHILE_1	IF_7	CALL_3
0x400255c	      0xb900000000	                              mov ecx, 0	      2083	gui.c	FUNCTION_36	WHILE_1	IF_7	CALL_3
0x4002561	      0xba00000000	                              mov edx, 0	      2083	gui.c	FUNCTION_36	WHILE_1	IF_7	CALL_3
0x4002566	      0xbe01000000	                              mov esi, 1	      2083	gui.c	FUNCTION_36	WHILE_1	IF_7	CALL_3
0x400256b	      0xbf00000000	                              mov edi, 0	      2083	gui.c	FUNCTION_36	WHILE_1	IF_7	CALL_3
0x4002570	      0xe800000000	                          call 0x4002575	      2083	gui.c	FUNCTION_36	WHILE_1	IF_7	CALL_3
0x4002575	    0x8b0500000000	            mov eax, dword [0x0400257b] 	      2087	gui.c	FUNCTION_36	WHILE_1	IF_8
0x400257b	          0x4863d0	                         movsxd rdx, eax	      2087	gui.c	FUNCTION_36	WHILE_1	IF_8
0x400257e	    0x488b05000000	            mov rax, qword [0x04002585] 	      2087	gui.c	FUNCTION_36	WHILE_1	IF_8
0x4002585	          0x4839c2	                            cmp rdx, rax	      2087	gui.c	FUNCTION_36	WHILE_1	IF_8
0x4002588	            0x7c19	                            jl 0x40025a3	      2087	gui.c	FUNCTION_36	WHILE_1	IF_8
0x400258a	    0xc70500000000	               mov dword [0x04002594], 0	      2089	gui.c	FUNCTION_36	WHILE_1	IF_8
0x4002594	    0x8b0500000000	            mov eax, dword [0x0400259a] 	      2090	gui.c	FUNCTION_36	WHILE_1	IF_8
0x400259a	          0x83c001	                              add eax, 1	      2090	gui.c	FUNCTION_36	WHILE_1	IF_8
0x400259d	    0x890500000000	            mov dword [0x040025a3], eax 	      2090	gui.c	FUNCTION_36	WHILE_1	IF_8
0x40025a3	        0x837de400	               cmp dword [rbp - 0x1c], 0	      2052	gui.c	FUNCTION_36	WHILE_1
0x40025a7	     0xf8f95feffff	                            jg 0x4002442	      2052	gui.c	FUNCTION_36	WHILE_1
0x40025ad	            0xeb01	                           jmp 0x40025b0	      2052	gui.c	FUNCTION_36	WHILE_1
0x40025af	              0x90	                                     nop	      2047	gui.c	FUNCTION_36	IF_1
0x40025b0	              0xc9	                                   leave	      2093	gui.c	FUNCTION_36
0x40025b1	              0xc3	                                     ret	      2093	gui.c	FUNCTION_36
gui_wait_for_chars_3	IF,0:functions,0:ELSE,0:CALL,1:SWITCH,0:WHILE,0:FOR,0:DO,0	11
0x4003445	              0x55	                                push rbp	      2928	gui.c	FUNCTION_45
0x4003446	          0x4889e5	                            mov rbp, rsp	      2928	gui.c	FUNCTION_45
0x4003449	        0x4883ec20	                           sub rsp, 0x20	      2928	gui.c	FUNCTION_45
0x400344d	        0x48897df8	                mov qword [rbp - 8], rdi	      2928	gui.c	FUNCTION_45
0x4003451	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2928	gui.c	FUNCTION_45
0x4003455	          0x8955ec	             mov dword [rbp - 0x14], edx	      2928	gui.c	FUNCTION_45
0x4003458	        0x488b45f8	                mov rax, qword [rbp - 8]	      2929	gui.c	FUNCTION_45	CALL_1
0x400345c	          0x4889c7	                            mov rdi, rax	      2929	gui.c	FUNCTION_45	CALL_1
0x400345f	      0xe800000000	                          call 0x4003464	      2929	gui.c	FUNCTION_45	CALL_1
0x4003464	              0xc9	                                   leave	      2930	gui.c	FUNCTION_45
0x4003465	              0xc3	                                     ret	      2930	gui.c	FUNCTION_45
gui_find_scrollbar	IF,1:functions,1:ELSE,0:CALL,0:SWITCH,0:WHILE,0:FOR,0:DO,0	33
0x4004c06	              0x55	                                push rbp	      3929	gui.c	FUNCTION_62
0x4004c07	          0x4889e5	                            mov rbp, rsp	      3929	gui.c	FUNCTION_62
0x4004c0a	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3929	gui.c	FUNCTION_62
0x4004c0e	    0x488b05000000	            mov rax, qword [0x04004c15] 	      3932	gui.c	FUNCTION_62	IF_1
0x4004c15	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      3932	gui.c	FUNCTION_62	IF_1
0x4004c19	            0x7507	                           jne 0x4004c22	      3932	gui.c	FUNCTION_62	IF_1
0x4004c1b	      0xb800000000	                              mov eax, 0	      3933	gui.c	FUNCTION_62	IF_1
0x4004c20	            0xeb5f	                           jmp 0x4004c81	      3933	gui.c	FUNCTION_62	IF_1
0x4004c22	    0x488b05000000	            mov rax, qword [0x04004c29] 	      3934	gui.c	FUNCTION_62
0x4004c29	        0x488945f8	                mov qword [rbp - 8], rax	      3934	gui.c	FUNCTION_62
0x4004c2d	            0xeb46	                           jmp 0x4004c75	      3934	gui.c	FUNCTION_62
0x4004c2f	        0x488b45f8	                mov rax, qword [rbp - 8]	      3936	gui.c	FUNCTION_62	FUNCTION_1	IF_1
0x4004c33	    0x488b80901800	          mov rax, qword [rax + 0x1890] 	      3936	gui.c	FUNCTION_62	FUNCTION_1	IF_1
0x4004c3a	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      3936	gui.c	FUNCTION_62	FUNCTION_1	IF_1
0x4004c3e	            0x750c	                           jne 0x4004c4c	      3936	gui.c	FUNCTION_62	FUNCTION_1	IF_1
0x4004c40	        0x488b45f8	                mov rax, qword [rbp - 8]	      3937	gui.c	FUNCTION_62	FUNCTION_1	IF_1
0x4004c44	    0x480590180000	                         add rax, 0x1890	      3937	gui.c	FUNCTION_62	FUNCTION_1	IF_1
0x4004c4a	            0xeb35	                           jmp 0x4004c81	      3937	gui.c	FUNCTION_62	FUNCTION_1	IF_1
0x4004c4c	        0x488b45f8	                mov rax, qword [rbp - 8]	      3938	gui.c	FUNCTION_62	FUNCTION_1	IF_2
0x4004c50	    0x488b80e01800	          mov rax, qword [rax + 0x18e0] 	      3938	gui.c	FUNCTION_62	FUNCTION_1	IF_2
0x4004c57	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      3938	gui.c	FUNCTION_62	FUNCTION_1	IF_2
0x4004c5b	            0x750c	                           jne 0x4004c69	      3938	gui.c	FUNCTION_62	FUNCTION_1	IF_2
0x4004c5d	        0x488b45f8	                mov rax, qword [rbp - 8]	      3939	gui.c	FUNCTION_62	FUNCTION_1	IF_2
0x4004c61	    0x4805e0180000	                         add rax, 0x18e0	      3939	gui.c	FUNCTION_62	FUNCTION_1	IF_2
0x4004c67	            0xeb18	                           jmp 0x4004c81	      3939	gui.c	FUNCTION_62	FUNCTION_1	IF_2
0x4004c69	        0x488b45f8	                mov rax, qword [rbp - 8]	      3934	gui.c	FUNCTION_62
0x4004c6d	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3934	gui.c	FUNCTION_62
0x4004c71	        0x488945f8	                mov qword [rbp - 8], rax	      3934	gui.c	FUNCTION_62
0x4004c75	      0x48837df800	                  cmp qword [rbp - 8], 0	      3934	gui.c	FUNCTION_62
0x4004c7a	            0x75b3	                           jne 0x4004c2f	      3934	gui.c	FUNCTION_62
0x4004c7c	      0xb800000000	                              mov eax, 0	      3941	gui.c	FUNCTION_62
0x4004c81	              0x5d	                                 pop rbp	      3942	gui.c	FUNCTION_62
0x4004c82	              0xc3	                                     ret	      3942	gui.c	FUNCTION_62
gui_do_scrollbar	IF,5:functions,0:ELSE,2:CALL,1:SWITCH,0:WHILE,0:FOR,0:DO,0	94
0x400567b	              0x55	                                push rbp	      4381	gui.c	FUNCTION_66
0x400567c	          0x4889e5	                            mov rbp, rsp	      4381	gui.c	FUNCTION_66
0x400567f	        0x4883ec20	                           sub rsp, 0x20	      4381	gui.c	FUNCTION_66
0x4005683	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4381	gui.c	FUNCTION_66
0x4005687	          0x8975e4	             mov dword [rbp - 0x1c], esi	      4381	gui.c	FUNCTION_66
0x400568a	          0x8955e0	             mov dword [rbp - 0x20], edx	      4381	gui.c	FUNCTION_66
0x400568d	    0x488b05000000	            mov rax, qword [0x04005694] 	      4382	gui.c	FUNCTION_66
0x4005694	    0x8b90a8000000	            mov edx, dword [rax + 0xa8] 	      4382	gui.c	FUNCTION_66
0x400569a	    0x488b05000000	            mov rax, qword [0x040056a1] 	      4382	gui.c	FUNCTION_66
0x40056a1	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      4382	gui.c	FUNCTION_66
0x40056a7	            0x89c1	                            mov ecx, eax	      4382	gui.c	FUNCTION_66
0x40056a9	          0xc1e91f	                           shr ecx, 0x1f	      4382	gui.c	FUNCTION_66
0x40056ac	             0x1c8	                            add eax, ecx	      4382	gui.c	FUNCTION_66
0x40056ae	            0xd1f8	                              sar eax, 1	      4382	gui.c	FUNCTION_66
0x40056b0	             0x1d0	                            add eax, edx	      4382	gui.c	FUNCTION_66
0x40056b2	          0x8945f8	                mov dword [rbp - 8], eax	      4382	gui.c	FUNCTION_66
0x40056b5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4383	gui.c	FUNCTION_66
0x40056b9	    0x8b80a8000000	            mov eax, dword [rax + 0xa8] 	      4383	gui.c	FUNCTION_66
0x40056bf	          0x3b45f8	                cmp eax, dword [rbp - 8]	      4384	gui.c	FUNCTION_66
0x40056c2	            0x7f22	                            jg 0x40056e6	      4384	gui.c	FUNCTION_66
0x40056c4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4384	gui.c	FUNCTION_66
0x40056c8	    0x8b90a8000000	            mov edx, dword [rax + 0xa8] 	      4384	gui.c	FUNCTION_66
0x40056ce	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4384	gui.c	FUNCTION_66
0x40056d2	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      4384	gui.c	FUNCTION_66
0x40056d8	             0x1d0	                            add eax, edx	      4384	gui.c	FUNCTION_66
0x40056da	          0x3b45f8	                cmp eax, dword [rbp - 8]	      4384	gui.c	FUNCTION_66
0x40056dd	            0x7c07	                            jl 0x40056e6	      4384	gui.c	FUNCTION_66
0x40056df	      0xb801000000	                              mov eax, 1	      4384	gui.c	FUNCTION_66
0x40056e4	            0xeb05	                           jmp 0x40056eb	      4384	gui.c	FUNCTION_66
0x40056e6	      0xb800000000	                              mov eax, 0	      4384	gui.c	FUNCTION_66
0x40056eb	          0x8945fc	                mov dword [rbp - 4], eax	      4383	gui.c	FUNCTION_66
0x40056ee	    0x8b1500000000	            mov edx, dword [0x040056f4] 	      4388	gui.c	FUNCTION_66	IF_1
0x40056f4	    0x8b0500000000	            mov eax, dword [0x040056fa] 	      4388	gui.c	FUNCTION_66	IF_1
0x40056fa	            0x39c2	                            cmp edx, eax	      4388	gui.c	FUNCTION_66	IF_1
0x40056fc	            0x7416	                            je 0x4005714	      4388	gui.c	FUNCTION_66	IF_1
0x40056fe	        0x837dfc00	                  cmp dword [rbp - 4], 0	      4392	gui.c	FUNCTION_66	IF_1	IF_2
0x4005702	     0xf8596000000	                           jne 0x400579e	      4392	gui.c	FUNCTION_66	IF_1	IF_2
0x4005708	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      4393	gui.c	FUNCTION_66	IF_1	IF_2
0x400570f	      0xe98a000000	                           jmp 0x400579e	      4393	gui.c	FUNCTION_66	IF_1	IF_2
0x4005714	          0x8b45f8	                mov eax, dword [rbp - 8]	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x4005717	          0x4863d0	                         movsxd rdx, eax	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x400571a	    0x488b05000000	            mov rax, qword [0x04005721] 	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x4005721	          0x4889c1	                            mov rcx, rax	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x4005724	        0x48c1e93f	                           shr rcx, 0x3f	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x4005728	          0x4801c8	                            add rax, rcx	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x400572b	          0x48d1f8	                              sar rax, 1	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x400572e	          0x4839c2	                            cmp rdx, rax	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x4005731	            0x7e2b	                           jle 0x400575e	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x4005733	        0x837de400	               cmp dword [rbp - 0x1c], 0	      4402	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x4005737	            0x7511	                           jne 0x400574a	      4402	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x4005739	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4402	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x400573d	    0x8b80a8000000	            mov eax, dword [rax + 0xa8] 	      4402	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x4005743	            0x85c0	                           test eax, eax	      4402	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x4005745	           0xf95c0	                                setne al	      4402	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x4005748	            0xeb07	                           jmp 0x4005751	      4402	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x400574a	        0x837dfc00	                  cmp dword [rbp - 4], 0	      4402	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x400574e	           0xf94c0	                                 sete al	      4402	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x4005751	            0x84c0	                             test al, al	      4402	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x4005753	            0x7449	                            je 0x400579e	      4402	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x4005755	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      4403	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x400575c	            0xeb40	                           jmp 0x400579e	      4403	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x400575e	        0x837de401	               cmp dword [rbp - 0x1c], 1	      4407	gui.c	FUNCTION_66	ELSE_1	ELSE_2	IF_5
0x4005762	            0x7528	                           jne 0x400578c	      4407	gui.c	FUNCTION_66	ELSE_1	ELSE_2	IF_5
0x4005764	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4407	gui.c	FUNCTION_66	ELSE_1	ELSE_2	IF_5
0x4005768	    0x8b90a8000000	            mov edx, dword [rax + 0xa8] 	      4407	gui.c	FUNCTION_66	ELSE_1	ELSE_2	IF_5
0x400576e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4407	gui.c	FUNCTION_66	ELSE_1	ELSE_2	IF_5
0x4005772	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      4407	gui.c	FUNCTION_66	ELSE_1	ELSE_2	IF_5
0x4005778	             0x1d0	                            add eax, edx	      4407	gui.c	FUNCTION_66	ELSE_1	ELSE_2	IF_5
0x400577a	          0x4863d0	                         movsxd rdx, eax	      4407	gui.c	FUNCTION_66	ELSE_1	ELSE_2	IF_5
0x400577d	    0x488b05000000	            mov rax, qword [0x04005784] 	      4407	gui.c	FUNCTION_66	ELSE_1	ELSE_2	IF_5
0x4005784	          0x4839c2	                            cmp rdx, rax	      4407	gui.c	FUNCTION_66	ELSE_1	ELSE_2	IF_5
0x4005787	           0xf95c0	                                setne al	      4407	gui.c	FUNCTION_66	ELSE_1	ELSE_2	IF_5
0x400578a	            0xeb07	                           jmp 0x4005793	      4407	gui.c	FUNCTION_66	ELSE_1	ELSE_2	IF_5
0x400578c	        0x837dfc00	                  cmp dword [rbp - 4], 0	      4407	gui.c	FUNCTION_66	ELSE_1	ELSE_2	IF_5
0x4005790	           0xf94c0	                                 sete al	      4407	gui.c	FUNCTION_66	ELSE_1	ELSE_2	IF_5
0x4005793	            0x84c0	                             test al, al	      4407	gui.c	FUNCTION_66	ELSE_1	ELSE_2	IF_5
0x4005795	            0x7407	                            je 0x400579e	      4407	gui.c	FUNCTION_66	ELSE_1	ELSE_2	IF_5
0x4005797	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      4409	gui.c	FUNCTION_66	ELSE_1	ELSE_2	IF_5
0x400579e	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4412	gui.c	FUNCTION_66	CALL_1
0x40057a1	          0x4863d0	                         movsxd rdx, eax	      4412	gui.c	FUNCTION_66	CALL_1
0x40057a4	          0x4889d0	                            mov rax, rdx	      4412	gui.c	FUNCTION_66	CALL_1
0x40057a7	        0x48c1e002	                              shl rax, 2	      4412	gui.c	FUNCTION_66	CALL_1
0x40057ab	          0x4801d0	                            add rax, rdx	      4412	gui.c	FUNCTION_66	CALL_1
0x40057ae	        0x48c1e004	                              shl rax, 4	      4412	gui.c	FUNCTION_66	CALL_1
0x40057b2	    0x488d90901800	                 lea rdx, [rax + 0x1890]	      4412	gui.c	FUNCTION_66	CALL_1
0x40057b9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4412	gui.c	FUNCTION_66	CALL_1
0x40057bd	          0x4801c2	                            add rdx, rax	      4412	gui.c	FUNCTION_66	CALL_1
0x40057c0	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      4412	gui.c	FUNCTION_66	CALL_1
0x40057c3	            0x89c6	                            mov esi, eax	      4412	gui.c	FUNCTION_66	CALL_1
0x40057c5	          0x4889d7	                            mov rdi, rdx	      4412	gui.c	FUNCTION_66	CALL_1
0x40057c8	      0xe800000000	                          call 0x40057cd	      4412	gui.c	FUNCTION_66	CALL_1
0x40057cd	              0x90	                                     nop	      4413	gui.c	FUNCTION_66
0x40057ce	              0xc9	                                   leave	      4413	gui.c	FUNCTION_66
0x40057cf	              0xc3	                                     ret	      4413	gui.c	FUNCTION_66
gui_wingoto_xy	IF,2:functions,0:ELSE,0:CALL,4:SWITCH,0:WHILE,0:FOR,0:DO,0	51
0x4007313	              0x55	                                push rbp	      5409	gui.c	FUNCTION_92
0x4007314	          0x4889e5	                            mov rbp, rsp	      5409	gui.c	FUNCTION_92
0x4007317	        0x4883ec30	                           sub rsp, 0x30	      5409	gui.c	FUNCTION_92
0x400731b	          0x897ddc	             mov dword [rbp - 0x24], edi	      5409	gui.c	FUNCTION_92
0x400731e	          0x8975d8	             mov dword [rbp - 0x28], esi	      5409	gui.c	FUNCTION_92
0x4007321	    0x64488b042528	                mov rax, qword fs:[0x28]	      5409	gui.c	FUNCTION_92
0x400732a	        0x488945f8	                mov qword [rbp - 8], rax	      5409	gui.c	FUNCTION_92
0x400732e	            0x31c0	                            xor eax, eax	      5409	gui.c	FUNCTION_92
0x4007330	    0x8b0500000000	            mov eax, dword [0x04007336] 	      5410	gui.c	FUNCTION_92	CALL_1
0x4007336	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      5410	gui.c	FUNCTION_92	CALL_1
0x4007339	            0x29c2	                            sub edx, eax	      5410	gui.c	FUNCTION_92	CALL_1
0x400733b	            0x89d0	                            mov eax, edx	      5410	gui.c	FUNCTION_92	CALL_1
0x400733d	    0x8b0d00000000	            mov ecx, dword [0x04007343] 	      5410	gui.c	FUNCTION_92	CALL_1
0x4007343	              0x99	                                     cdq	      5410	gui.c	FUNCTION_92	CALL_1
0x4007344	            0xf7f9	                                idiv ecx	      5410	gui.c	FUNCTION_92	CALL_1
0x4007346	          0x8945e8	             mov dword [rbp - 0x18], eax	      5410	gui.c	FUNCTION_92	CALL_1
0x4007349	    0x8b0500000000	            mov eax, dword [0x0400734f] 	      5411	gui.c	FUNCTION_92	CALL_2
0x400734f	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      5411	gui.c	FUNCTION_92	CALL_2
0x4007352	            0x29c2	                            sub edx, eax	      5411	gui.c	FUNCTION_92	CALL_2
0x4007354	            0x89d0	                            mov eax, edx	      5411	gui.c	FUNCTION_92	CALL_2
0x4007356	    0x8b0d00000000	            mov ecx, dword [0x0400735c] 	      5411	gui.c	FUNCTION_92	CALL_2
0x400735c	              0x99	                                     cdq	      5411	gui.c	FUNCTION_92	CALL_2
0x400735d	            0xf7f9	                                idiv ecx	      5411	gui.c	FUNCTION_92	CALL_2
0x400735f	          0x8945ec	             mov dword [rbp - 0x14], eax	      5411	gui.c	FUNCTION_92	CALL_2
0x4007362	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      5414	gui.c	FUNCTION_92	IF_1
0x4007365	            0x85c0	                           test eax, eax	      5414	gui.c	FUNCTION_92	IF_1
0x4007367	            0x783e	                            js 0x40073a7	      5414	gui.c	FUNCTION_92	IF_1
0x4007369	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      5414	gui.c	FUNCTION_92	IF_1
0x400736c	            0x85c0	                           test eax, eax	      5414	gui.c	FUNCTION_92	IF_1
0x400736e	            0x7837	                            js 0x40073a7	      5414	gui.c	FUNCTION_92	IF_1
0x4007370	        0x488d55ec	                   lea rdx, [rbp - 0x14]	      5416	gui.c	FUNCTION_92	IF_1	CALL_3
0x4007374	        0x488d45e8	                   lea rax, [rbp - 0x18]	      5416	gui.c	FUNCTION_92	IF_1	CALL_3
0x4007378	          0x4889d6	                            mov rsi, rdx	      5416	gui.c	FUNCTION_92	IF_1	CALL_3
0x400737b	          0x4889c7	                            mov rdi, rax	      5416	gui.c	FUNCTION_92	IF_1	CALL_3
0x400737e	      0xe800000000	                          call 0x4007383	      5416	gui.c	FUNCTION_92	IF_1	CALL_3
0x4007383	        0x488945f0	             mov qword [rbp - 0x10], rax	      5416	gui.c	FUNCTION_92	IF_1	CALL_3
0x4007387	      0x48837df000	               cmp qword [rbp - 0x10], 0	      5417	gui.c	FUNCTION_92	IF_1	IF_2
0x400738c	            0x7419	                            je 0x40073a7	      5417	gui.c	FUNCTION_92	IF_1	IF_2
0x400738e	    0x488b05000000	            mov rax, qword [0x04007395] 	      5417	gui.c	FUNCTION_92	IF_1	IF_2
0x4007395	        0x483945f0	            cmp qword [rbp - 0x10], rax 	      5417	gui.c	FUNCTION_92	IF_1	IF_2
0x4007399	            0x740c	                            je 0x40073a7	      5417	gui.c	FUNCTION_92	IF_1	IF_2
0x400739b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5418	gui.c	FUNCTION_92	IF_1	CALL_4
0x400739f	          0x4889c7	                            mov rdi, rax	      5418	gui.c	FUNCTION_92	IF_1	CALL_4
0x40073a2	      0xe800000000	                          call 0x40073a7	      5418	gui.c	FUNCTION_92	IF_1	CALL_4
0x40073a7	              0x90	                                     nop	      5420	gui.c	FUNCTION_92
0x40073a8	        0x488b45f8	                mov rax, qword [rbp - 8]	      5420	gui.c	FUNCTION_92
0x40073ac	    0x644833042528	                xor rax, qword fs:[0x28]	      5420	gui.c	FUNCTION_92
0x40073b5	            0x7405	                            je 0x40073bc	      5420	gui.c	FUNCTION_92
0x40073b7	      0xe800000000	                          call 0x40073bc	      5420	gui.c	FUNCTION_92
0x40073bc	              0xc9	                                   leave	      5420	gui.c	FUNCTION_92
0x40073bd	              0xc3	                                     ret	      5420	gui.c	FUNCTION_92
gui_insert_lines	IF,5:functions,0:ELSE,2:CALL,2:SWITCH,0:WHILE,0:FOR,0:DO,0	56
0x400337c	              0x55	                                push rbp	      2895	gui.c	FUNCTION_44
0x400337d	          0x4889e5	                            mov rbp, rsp	      2895	gui.c	FUNCTION_44
0x4003380	        0x4883ec10	                           sub rsp, 0x10	      2895	gui.c	FUNCTION_44
0x4003384	          0x897dfc	                mov dword [rbp - 4], edi	      2895	gui.c	FUNCTION_44
0x4003387	          0x8975f8	                mov dword [rbp - 8], esi	      2895	gui.c	FUNCTION_44
0x400338a	        0x837df800	                  cmp dword [rbp - 8], 0	      2896	gui.c	FUNCTION_44	IF_1
0x400338e	     0xf8eae000000	                           jle 0x4003442	      2896	gui.c	FUNCTION_44	IF_1
0x4003394	          0x8b55fc	                mov edx, dword [rbp - 4]	      2899	gui.c	FUNCTION_44	IF_2
0x4003397	          0x8b45f8	                mov eax, dword [rbp - 8]	      2899	gui.c	FUNCTION_44	IF_2
0x400339a	             0x1c2	                            add edx, eax	      2899	gui.c	FUNCTION_44	IF_2
0x400339c	    0x8b0500000000	            mov eax, dword [0x040033a2] 	      2899	gui.c	FUNCTION_44	IF_2
0x40033a2	            0x39c2	                            cmp edx, eax	      2899	gui.c	FUNCTION_44	IF_2
0x40033a4	            0x7e1e	                           jle 0x40033c4	      2899	gui.c	FUNCTION_44	IF_2
0x40033a6	    0x8b0d00000000	            mov ecx, dword [0x040033ac] 	      2901	gui.c	FUNCTION_44	IF_2	CALL_1
0x40033ac	    0x8b1500000000	            mov edx, dword [0x040033b2] 	      2901	gui.c	FUNCTION_44	IF_2	CALL_1
0x40033b2	    0x8b3500000000	            mov esi, dword [0x040033b8] 	      2901	gui.c	FUNCTION_44	IF_2	CALL_1
0x40033b8	          0x8b45fc	                mov eax, dword [rbp - 4]	      2901	gui.c	FUNCTION_44	IF_2	CALL_1
0x40033bb	            0x89c7	                            mov edi, eax	      2901	gui.c	FUNCTION_44	IF_2	CALL_1
0x40033bd	      0xe800000000	                          call 0x40033c2	      2901	gui.c	FUNCTION_44	IF_2	CALL_1
0x40033c2	            0xeb7f	                           jmp 0x4003443	      2901	gui.c	FUNCTION_44	IF_2	CALL_1
0x40033c4	          0x8b55f8	                mov edx, dword [rbp - 8]	      2905	gui.c	FUNCTION_44	ELSE_1	CALL_2
0x40033c7	          0x8b45fc	                mov eax, dword [rbp - 4]	      2905	gui.c	FUNCTION_44	ELSE_1	CALL_2
0x40033ca	            0x89d6	                            mov esi, edx	      2905	gui.c	FUNCTION_44	ELSE_1	CALL_2
0x40033cc	            0x89c7	                            mov edi, eax	      2905	gui.c	FUNCTION_44	ELSE_1	CALL_2
0x40033ce	      0xe800000000	                          call 0x40033d3	      2905	gui.c	FUNCTION_44	ELSE_1	CALL_2
0x40033d3	    0x8b1500000000	            mov edx, dword [0x040033d9] 	      2907	gui.c	FUNCTION_44	ELSE_1	IF_3
0x40033d9	    0x8b0500000000	            mov eax, dword [0x040033df] 	      2907	gui.c	FUNCTION_44	ELSE_1	IF_3
0x40033df	            0x39c2	                            cmp edx, eax	      2907	gui.c	FUNCTION_44	ELSE_1	IF_3
0x40033e1	            0x7c60	                            jl 0x4003443	      2907	gui.c	FUNCTION_44	ELSE_1	IF_3
0x40033e3	    0x8b1500000000	            mov edx, dword [0x040033e9] 	      2908	gui.c	FUNCTION_44	ELSE_1	IF_3
0x40033e9	    0x8b0500000000	            mov eax, dword [0x040033ef] 	      2908	gui.c	FUNCTION_44	ELSE_1	IF_3
0x40033ef	            0x39c2	                            cmp edx, eax	      2908	gui.c	FUNCTION_44	ELSE_1	IF_3
0x40033f1	            0x7c50	                            jl 0x4003443	      2908	gui.c	FUNCTION_44	ELSE_1	IF_3
0x40033f3	    0x8b1500000000	            mov edx, dword [0x040033f9] 	      2909	gui.c	FUNCTION_44	ELSE_1	IF_3
0x40033f9	    0x8b0500000000	            mov eax, dword [0x040033ff] 	      2909	gui.c	FUNCTION_44	ELSE_1	IF_3
0x40033ff	            0x39c2	                            cmp edx, eax	      2909	gui.c	FUNCTION_44	ELSE_1	IF_3
0x4003401	            0x7f40	                            jg 0x4003443	      2909	gui.c	FUNCTION_44	ELSE_1	IF_3
0x4003403	    0x8b1500000000	            mov edx, dword [0x04003409] 	      2911	gui.c	FUNCTION_44	ELSE_1	IF_3	IF_4
0x4003409	    0x8b0500000000	            mov eax, dword [0x0400340f] 	      2911	gui.c	FUNCTION_44	ELSE_1	IF_3	IF_4
0x400340f	          0x2b45f8	                sub eax, dword [rbp - 8]	      2911	gui.c	FUNCTION_44	ELSE_1	IF_3	IF_4
0x4003412	            0x39c2	                            cmp edx, eax	      2911	gui.c	FUNCTION_44	ELSE_1	IF_3	IF_4
0x4003414	            0x7f13	                            jg 0x4003429	      2911	gui.c	FUNCTION_44	ELSE_1	IF_3	IF_4
0x4003416	    0x8b1500000000	            mov edx, dword [0x0400341c] 	      2912	gui.c	FUNCTION_44	ELSE_1	IF_3	IF_4
0x400341c	          0x8b45f8	                mov eax, dword [rbp - 8]	      2912	gui.c	FUNCTION_44	ELSE_1	IF_3	IF_4
0x400341f	             0x1d0	                            add eax, edx	      2912	gui.c	FUNCTION_44	ELSE_1	IF_3	IF_4
0x4003421	    0x890500000000	            mov dword [0x04003427], eax 	      2912	gui.c	FUNCTION_44	ELSE_1	IF_3	IF_4
0x4003427	            0xeb1a	                           jmp 0x4003443	      2912	gui.c	FUNCTION_44	ELSE_1	IF_3	IF_4
0x4003429	    0x8b1500000000	            mov edx, dword [0x0400342f] 	      2913	gui.c	FUNCTION_44	ELSE_1	IF_3	ELSE_2	IF_5
0x400342f	    0x8b0500000000	            mov eax, dword [0x04003435] 	      2913	gui.c	FUNCTION_44	ELSE_1	IF_3	ELSE_2	IF_5
0x4003435	            0x39c2	                            cmp edx, eax	      2913	gui.c	FUNCTION_44	ELSE_1	IF_3	ELSE_2	IF_5
0x4003437	            0x7f0a	                            jg 0x4003443	      2913	gui.c	FUNCTION_44	ELSE_1	IF_3	ELSE_2	IF_5
0x4003439	    0xc60500000000	                mov byte [0x04003440], 0	      2914	gui.c	FUNCTION_44	ELSE_1	IF_3	ELSE_2	IF_5
0x4003440	            0xeb01	                           jmp 0x4003443	      2914	gui.c	FUNCTION_44	ELSE_1	IF_3	ELSE_2	IF_5
0x4003442	              0x90	                                     nop	      2897	gui.c	FUNCTION_44	IF_1
0x4003443	              0xc9	                                   leave	      2917	gui.c	FUNCTION_44
0x4003444	              0xc3	                                     ret	      2917	gui.c	FUNCTION_44
gui_update_cursor_later	IF,0:functions,0:ELSE,0:CALL,2:SWITCH,0:WHILE,0:FOR,0:DO,0	7
0x4001ec1	              0x55	                                push rbp	      1757	gui.c	FUNCTION_29
0x4001ec2	          0x4889e5	                            mov rbp, rsp	      1757	gui.c	FUNCTION_29
0x4001ec5	      0xbf00000000	                              mov edi, 0	      1758	gui.c	FUNCTION_29	CALL_2
0x4001eca	      0xe800000000	                          call 0x4001ecf	      1758	gui.c	FUNCTION_29	CALL_2
0x4001ecf	              0x90	                                     nop	      1759	gui.c	FUNCTION_29
0x4001ed0	              0x5d	                                 pop rbp	      1759	gui.c	FUNCTION_29
0x4001ed1	              0xc3	                                     ret	      1759	gui.c	FUNCTION_29
gui_may_update_scrollbars	IF,1:functions,0:ELSE,0:CALL,3:SWITCH,0:WHILE,0:FOR,0:DO,0	17
0x4005133	              0x55	                                push rbp	      4166	gui.c	FUNCTION_64
0x4005134	          0x4889e5	                            mov rbp, rsp	      4166	gui.c	FUNCTION_64
0x4005137	    0x8b0500000000	            mov eax, dword [0x0400513d] 	      4167	gui.c	FUNCTION_64	IF_1
0x400513d	            0x85c0	                           test eax, eax	      4167	gui.c	FUNCTION_64	IF_1
0x400513f	            0x7423	                            je 0x4005164	      4167	gui.c	FUNCTION_64	IF_1
0x4005141	    0x8b0500000000	            mov eax, dword [0x04005147] 	      4167	gui.c	FUNCTION_64	IF_1
0x4005147	            0x85c0	                           test eax, eax	      4167	gui.c	FUNCTION_64	IF_1
0x4005149	            0x7519	                           jne 0x4005164	      4167	gui.c	FUNCTION_64	IF_1
0x400514b	      0xe800000000	                          call 0x4005150	      4169	gui.c	FUNCTION_64	IF_1	CALL_1
0x4005150	      0xbf00000000	                              mov edi, 0	      4170	gui.c	FUNCTION_64	IF_1	CALL_2
0x4005155	      0xe800000000	                          call 0x400515a	      4170	gui.c	FUNCTION_64	IF_1	CALL_2
0x400515a	      0xbf01000000	                              mov edi, 1	      4171	gui.c	FUNCTION_64	IF_1	CALL_3
0x400515f	      0xe800000000	                          call 0x4005164	      4171	gui.c	FUNCTION_64	IF_1	CALL_3
0x4005164	    0xc70500000000	               mov dword [0x0400516e], 1	      4173	gui.c	FUNCTION_64
0x400516e	              0x90	                                     nop	      4174	gui.c	FUNCTION_64
0x400516f	              0x5d	                                 pop rbp	      4174	gui.c	FUNCTION_64
0x4005170	              0xc3	                                     ret	      4174	gui.c	FUNCTION_64
gui_set_shellsize	IF,13:functions,0:ELSE,1:CALL,21:SWITCH,0:WHILE,0:FOR,0:DO,0	233
0x4001a79	              0x55	                                push rbp	      1573	gui.c	FUNCTION_23
0x4001a7a	          0x4889e5	                            mov rbp, rsp	      1573	gui.c	FUNCTION_23
0x4001a7d	        0x4883ec50	                           sub rsp, 0x50	      1573	gui.c	FUNCTION_23
0x4001a81	          0x897dbc	             mov dword [rbp - 0x44], edi	      1573	gui.c	FUNCTION_23
0x4001a84	          0x8975b8	             mov dword [rbp - 0x48], esi	      1573	gui.c	FUNCTION_23
0x4001a87	          0x8955b4	             mov dword [rbp - 0x4c], edx	      1573	gui.c	FUNCTION_23
0x4001a8a	    0x64488b042528	                mov rax, qword fs:[0x28]	      1573	gui.c	FUNCTION_23
0x4001a93	        0x488945f8	                mov qword [rbp - 8], rax	      1573	gui.c	FUNCTION_23
0x4001a97	            0x31c0	                            xor eax, eax	      1573	gui.c	FUNCTION_23
0x4001a99	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1583	gui.c	FUNCTION_23
0x4001a9c	          0x8945e0	             mov dword [rbp - 0x20], eax	      1583	gui.c	FUNCTION_23
0x4001a9f	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      1584	gui.c	FUNCTION_23
0x4001aa6	    0xc745d0ffffff	     mov dword [rbp - 0x30], 0xffffffff 	      1586	gui.c	FUNCTION_23
0x4001aad	    0xc745d4ffffff	     mov dword [rbp - 0x2c], 0xffffffff 	      1586	gui.c	FUNCTION_23
0x4001ab4	    0x8b0500000000	            mov eax, dword [0x04001aba] 	      1588	gui.c	FUNCTION_23	IF_1
0x4001aba	            0x85c0	                           test eax, eax	      1588	gui.c	FUNCTION_23	IF_1
0x4001abc	     0xf84d8020000	                            je 0x4001d9a	      1588	gui.c	FUNCTION_23	IF_1
0x4001ac2	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      1594	gui.c	FUNCTION_23	IF_2	CALL_1
0x4001ac6	            0x752c	                           jne 0x4001af4	      1594	gui.c	FUNCTION_23	IF_2	CALL_1
0x4001ac8	    0x488b05000000	            mov rax, qword [0x04001acf] 	      1594	gui.c	FUNCTION_23	IF_2	CALL_1
0x4001acf	      0xbe6b000000	                           mov esi, 0x6b	      1594	gui.c	FUNCTION_23	IF_2	CALL_1
0x4001ad4	          0x4889c7	                            mov rdi, rax	      1594	gui.c	FUNCTION_23	IF_2	CALL_1
0x4001ad7	      0xe800000000	                          call 0x4001adc	      1594	gui.c	FUNCTION_23	IF_2	CALL_1
0x4001adc	          0x4885c0	                           test rax, rax	      1594	gui.c	FUNCTION_23	IF_2	CALL_1
0x4001adf	            0x7509	                           jne 0x4001aea	      1594	gui.c	FUNCTION_23	IF_2	CALL_1
0x4001ae1	      0xe800000000	                          call 0x4001ae6	      1595	gui.c	FUNCTION_23	IF_2	CALL_2
0x4001ae6	            0x85c0	                           test eax, eax	      1595	gui.c	FUNCTION_23	IF_2	CALL_2
0x4001ae8	            0x740a	                            je 0x4001af4	      1595	gui.c	FUNCTION_23	IF_2	CALL_2
0x4001aea	      0xe800000000	                          call 0x4001aef	      1597	gui.c	FUNCTION_23	IF_2	CALL_3
0x4001aef	      0xe9a7020000	                           jmp 0x4001d9b	      1598	gui.c	FUNCTION_23	IF_2
0x4001af4	      0xe800000000	                          call 0x4001af9	      1602	gui.c	FUNCTION_23	CALL_4
0x4001af9	          0x8945e8	             mov dword [rbp - 0x18], eax	      1602	gui.c	FUNCTION_23	CALL_4
0x4001afc	      0xe800000000	                          call 0x4001b01	      1603	gui.c	FUNCTION_23	CALL_5
0x4001b01	          0x8945ec	             mov dword [rbp - 0x14], eax	      1603	gui.c	FUNCTION_23	CALL_5
0x4001b04	        0x837db800	               cmp dword [rbp - 0x48], 0	      1604	gui.c	FUNCTION_23	IF_3
0x4001b08	            0x7413	                            je 0x4001b1d	      1604	gui.c	FUNCTION_23	IF_3
0x4001b0a	        0x488d55d4	                   lea rdx, [rbp - 0x2c]	      1606	gui.c	FUNCTION_23	CALL_6
0x4001b0e	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1606	gui.c	FUNCTION_23	CALL_6
0x4001b12	          0x4889d6	                            mov rsi, rdx	      1606	gui.c	FUNCTION_23	CALL_6
0x4001b15	          0x4889c7	                            mov rdi, rax	      1606	gui.c	FUNCTION_23	CALL_6
0x4001b18	      0xe800000000	                          call 0x4001b1d	      1606	gui.c	FUNCTION_23	CALL_6
0x4001b1d	    0x8b0500000000	            mov eax, dword [0x04001b23] 	      1618	gui.c	FUNCTION_23	ELSE_1
0x4001b23	            0x89c2	                            mov edx, eax	      1618	gui.c	FUNCTION_23	ELSE_1
0x4001b25	    0x488b05000000	            mov rax, qword [0x04001b2c] 	      1618	gui.c	FUNCTION_23	ELSE_1
0x4001b2c	           0xfafd0	                           imul edx, eax	      1618	gui.c	FUNCTION_23	ELSE_1
0x4001b2f	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1618	gui.c	FUNCTION_23	ELSE_1
0x4001b32	             0x1d0	                            add eax, edx	      1618	gui.c	FUNCTION_23	ELSE_1
0x4001b34	          0x8945d8	             mov dword [rbp - 0x28], eax	      1618	gui.c	FUNCTION_23	ELSE_1
0x4001b37	    0x8b0500000000	            mov eax, dword [0x04001b3d] 	      1619	gui.c	FUNCTION_23	ELSE_1
0x4001b3d	            0x89c2	                            mov edx, eax	      1619	gui.c	FUNCTION_23	ELSE_1
0x4001b3f	    0x488b05000000	            mov rax, qword [0x04001b46] 	      1619	gui.c	FUNCTION_23	ELSE_1
0x4001b46	           0xfafd0	                           imul edx, eax	      1619	gui.c	FUNCTION_23	ELSE_1
0x4001b49	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1619	gui.c	FUNCTION_23	ELSE_1
0x4001b4c	             0x1d0	                            add eax, edx	      1619	gui.c	FUNCTION_23	ELSE_1
0x4001b4e	          0x8945dc	             mov dword [rbp - 0x24], eax	      1619	gui.c	FUNCTION_23	ELSE_1
0x4001b51	        0x837db800	               cmp dword [rbp - 0x48], 0	      1622	gui.c	FUNCTION_23	IF_5
0x4001b55	     0xf84f1000000	                            je 0x4001c4c	      1622	gui.c	FUNCTION_23	IF_5
0x4001b5b	        0x488d55cc	                   lea rdx, [rbp - 0x34]	      1624	gui.c	FUNCTION_23	IF_5	CALL_8
0x4001b5f	        0x488d45c8	                   lea rax, [rbp - 0x38]	      1624	gui.c	FUNCTION_23	IF_5	CALL_8
0x4001b63	          0x4889d6	                            mov rsi, rdx	      1624	gui.c	FUNCTION_23	IF_5	CALL_8
0x4001b66	          0x4889c7	                            mov rdi, rax	      1624	gui.c	FUNCTION_23	IF_5	CALL_8
0x4001b69	      0xe800000000	                          call 0x4001b6e	      1624	gui.c	FUNCTION_23	IF_5	CALL_8
0x4001b6e	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1625	gui.c	FUNCTION_23	IF_5	IF_6
0x4001b71	          0x83e002	                              and eax, 2	      1625	gui.c	FUNCTION_23	IF_5	IF_6
0x4001b74	            0x85c0	                           test eax, eax	      1625	gui.c	FUNCTION_23	IF_5	IF_6
0x4001b76	            0x7456	                            je 0x4001bce	      1625	gui.c	FUNCTION_23	IF_5	IF_6
0x4001b78	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      1625	gui.c	FUNCTION_23	IF_5	IF_6
0x4001b7b	          0x3945d8	            cmp dword [rbp - 0x28], eax 	      1625	gui.c	FUNCTION_23	IF_5	IF_6
0x4001b7e	            0x7e4e	                           jle 0x4001bce	      1625	gui.c	FUNCTION_23	IF_5	IF_6
0x4001b80	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      1627	gui.c	FUNCTION_23	IF_5	IF_6
0x4001b83	          0x2b45e8	             sub eax, dword [rbp - 0x18]	      1627	gui.c	FUNCTION_23	IF_5	IF_6
0x4001b86	    0x8b0d00000000	            mov ecx, dword [0x04001b8c] 	      1627	gui.c	FUNCTION_23	IF_5	IF_6
0x4001b8c	              0x99	                                     cdq	      1627	gui.c	FUNCTION_23	IF_5	IF_6
0x4001b8d	            0xf7f9	                                idiv ecx	      1627	gui.c	FUNCTION_23	IF_5	IF_6
0x4001b8f	            0x4898	                                    cdqe	      1627	gui.c	FUNCTION_23	IF_5	IF_6
0x4001b91	    0x488905000000	            mov qword [0x04001b98], rax 	      1627	gui.c	FUNCTION_23	IF_5	IF_6
0x4001b98	    0x488b05000000	            mov rax, qword [0x04001b9f] 	      1628	gui.c	FUNCTION_23	IF_5	IF_6	IF_7
0x4001b9f	        0x4883f80b	                            cmp rax, 0xb	      1628	gui.c	FUNCTION_23	IF_5	IF_6	IF_7
0x4001ba3	            0x7f0b	                            jg 0x4001bb0	      1628	gui.c	FUNCTION_23	IF_5	IF_6	IF_7
0x4001ba5	    0x48c705000000	            mov qword [0x04001bb0], 0xc 	      1629	gui.c	FUNCTION_23	IF_5	IF_6	IF_7
0x4001bb0	    0x8b0500000000	            mov eax, dword [0x04001bb6] 	      1630	gui.c	FUNCTION_23	IF_5	IF_6
0x4001bb6	            0x89c2	                            mov edx, eax	      1630	gui.c	FUNCTION_23	IF_5	IF_6
0x4001bb8	    0x488b05000000	            mov rax, qword [0x04001bbf] 	      1630	gui.c	FUNCTION_23	IF_5	IF_6
0x4001bbf	           0xfafd0	                           imul edx, eax	      1630	gui.c	FUNCTION_23	IF_5	IF_6
0x4001bc2	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1630	gui.c	FUNCTION_23	IF_5	IF_6
0x4001bc5	             0x1d0	                            add eax, edx	      1630	gui.c	FUNCTION_23	IF_5	IF_6
0x4001bc7	          0x8945d8	             mov dword [rbp - 0x28], eax	      1630	gui.c	FUNCTION_23	IF_5	IF_6
0x4001bca	        0x8345e401	               add dword [rbp - 0x1c], 1	      1632	gui.c	FUNCTION_23	IF_5	IF_6
0x4001bce	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1635	gui.c	FUNCTION_23	IF_5	IF_8
0x4001bd1	          0x83e001	                              and eax, 1	      1635	gui.c	FUNCTION_23	IF_5	IF_8
0x4001bd4	            0x85c0	                           test eax, eax	      1635	gui.c	FUNCTION_23	IF_5	IF_8
0x4001bd6	            0x7443	                            je 0x4001c1b	      1635	gui.c	FUNCTION_23	IF_5	IF_8
0x4001bd8	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1635	gui.c	FUNCTION_23	IF_5	IF_8
0x4001bdb	          0x3945dc	            cmp dword [rbp - 0x24], eax 	      1635	gui.c	FUNCTION_23	IF_5	IF_8
0x4001bde	            0x7e3b	                           jle 0x4001c1b	      1635	gui.c	FUNCTION_23	IF_5	IF_8
0x4001be0	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1637	gui.c	FUNCTION_23	IF_5	IF_8
0x4001be3	          0x2b45ec	             sub eax, dword [rbp - 0x14]	      1637	gui.c	FUNCTION_23	IF_5	IF_8
0x4001be6	    0x8b0d00000000	            mov ecx, dword [0x04001bec] 	      1637	gui.c	FUNCTION_23	IF_5	IF_8
0x4001bec	              0x99	                                     cdq	      1637	gui.c	FUNCTION_23	IF_5	IF_8
0x4001bed	            0xf7f9	                                idiv ecx	      1637	gui.c	FUNCTION_23	IF_5	IF_8
0x4001bef	            0x4898	                                    cdqe	      1637	gui.c	FUNCTION_23	IF_5	IF_8
0x4001bf1	    0x488905000000	            mov qword [0x04001bf8], rax 	      1637	gui.c	FUNCTION_23	IF_5	IF_8
0x4001bf8	      0xe800000000	                          call 0x4001bfd	      1638	gui.c	FUNCTION_23	IF_5	IF_8	CALL_9
0x4001bfd	    0x8b0500000000	            mov eax, dword [0x04001c03] 	      1639	gui.c	FUNCTION_23	IF_5	IF_8
0x4001c03	            0x89c2	                            mov edx, eax	      1639	gui.c	FUNCTION_23	IF_5	IF_8
0x4001c05	    0x488b05000000	            mov rax, qword [0x04001c0c] 	      1639	gui.c	FUNCTION_23	IF_5	IF_8
0x4001c0c	           0xfafd0	                           imul edx, eax	      1639	gui.c	FUNCTION_23	IF_5	IF_8
0x4001c0f	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1639	gui.c	FUNCTION_23	IF_5	IF_8
0x4001c12	             0x1d0	                            add eax, edx	      1639	gui.c	FUNCTION_23	IF_5	IF_8
0x4001c14	          0x8945dc	             mov dword [rbp - 0x24], eax	      1639	gui.c	FUNCTION_23	IF_5	IF_8
0x4001c17	        0x8345e401	               add dword [rbp - 0x1c], 1	      1641	gui.c	FUNCTION_23	IF_5	IF_8
0x4001c1b	        0x837de402	               cmp dword [rbp - 0x1c], 2	      1645	gui.c	FUNCTION_23	IF_5	IF_9
0x4001c1f	            0x7424	                            je 0x4001c45	      1645	gui.c	FUNCTION_23	IF_5	IF_9
0x4001c21	    0x8b1500000000	            mov edx, dword [0x04001c27] 	      1645	gui.c	FUNCTION_23	IF_5	IF_9
0x4001c27	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1645	gui.c	FUNCTION_23	IF_5	IF_9
0x4001c2a	             0x1c2	                            add edx, eax	      1645	gui.c	FUNCTION_23	IF_5	IF_9
0x4001c2c	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      1645	gui.c	FUNCTION_23	IF_5	IF_9
0x4001c2f	            0x39c2	                            cmp edx, eax	      1645	gui.c	FUNCTION_23	IF_5	IF_9
0x4001c31	            0x7c19	                            jl 0x4001c4c	      1645	gui.c	FUNCTION_23	IF_5	IF_9
0x4001c33	    0x8b1500000000	            mov edx, dword [0x04001c39] 	      1646	gui.c	FUNCTION_23	IF_5	IF_9
0x4001c39	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1646	gui.c	FUNCTION_23	IF_5	IF_9
0x4001c3c	             0x1c2	                            add edx, eax	      1646	gui.c	FUNCTION_23	IF_5	IF_9
0x4001c3e	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1646	gui.c	FUNCTION_23	IF_5	IF_9
0x4001c41	            0x39c2	                            cmp edx, eax	      1646	gui.c	FUNCTION_23	IF_5	IF_9
0x4001c43	            0x7c07	                            jl 0x4001c4c	      1646	gui.c	FUNCTION_23	IF_5	IF_9
0x4001c45	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      1648	gui.c	FUNCTION_23	IF_5	IF_9
0x4001c4c	      0xe800000000	                          call 0x4001c51	      1651	gui.c	FUNCTION_23	CALL_10
0x4001c51	    0x488b05000000	            mov rax, qword [0x04001c58] 	      1652	gui.c	FUNCTION_23
0x4001c58	    0x890500000000	            mov dword [0x04001c5e], eax 	      1652	gui.c	FUNCTION_23
0x4001c5e	    0x488b05000000	            mov rax, qword [0x04001c65] 	      1653	gui.c	FUNCTION_23
0x4001c65	    0x890500000000	            mov dword [0x04001c6b], eax 	      1653	gui.c	FUNCTION_23
0x4001c6b	    0x8b1500000000	            mov edx, dword [0x04001c71] 	      1655	gui.c	FUNCTION_23
0x4001c71	            0x89d0	                            mov eax, edx	      1655	gui.c	FUNCTION_23
0x4001c73	             0x1c0	                            add eax, eax	      1655	gui.c	FUNCTION_23
0x4001c75	             0x1d0	                            add eax, edx	      1655	gui.c	FUNCTION_23
0x4001c77	          0xc1e002	                              shl eax, 2	      1655	gui.c	FUNCTION_23
0x4001c7a	            0x89c2	                            mov edx, eax	      1655	gui.c	FUNCTION_23
0x4001c7c	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1655	gui.c	FUNCTION_23
0x4001c7f	             0x1d0	                            add eax, edx	      1655	gui.c	FUNCTION_23
0x4001c81	          0x8945f0	             mov dword [rbp - 0x10], eax	      1655	gui.c	FUNCTION_23
0x4001c84	    0x8b0500000000	            mov eax, dword [0x04001c8a] 	      1656	gui.c	FUNCTION_23
0x4001c8a	          0x8d1400	                    lea edx, [rax + rax]	      1656	gui.c	FUNCTION_23
0x4001c8d	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1656	gui.c	FUNCTION_23
0x4001c90	             0x1d0	                            add eax, edx	      1656	gui.c	FUNCTION_23
0x4001c92	          0x8945f4	              mov dword [rbp - 0xc], eax	      1656	gui.c	FUNCTION_23
0x4001c95	      0xe800000000	                          call 0x4001c9a	      1657	gui.c	FUNCTION_23	CALL_11
0x4001c9a	            0x89c2	                            mov edx, eax	      1657	gui.c	FUNCTION_23	CALL_11
0x4001c9c	    0x8b0500000000	            mov eax, dword [0x04001ca2] 	      1657	gui.c	FUNCTION_23	CALL_11
0x4001ca2	           0xfafc2	                           imul eax, edx	      1657	gui.c	FUNCTION_23	CALL_11
0x4001ca5	           0x145f4	              add dword [rbp - 0xc], eax	      1657	gui.c	FUNCTION_23	CALL_11
0x4001ca8	        0x837de000	               cmp dword [rbp - 0x20], 0	      1660	gui.c	FUNCTION_23	IF_10
0x4001cac	            0x7448	                            je 0x4001cf6	      1660	gui.c	FUNCTION_23	IF_10
0x4001cae	        0x488d55cc	                   lea rdx, [rbp - 0x34]	      1664	gui.c	FUNCTION_23	IF_10	CALL_12
0x4001cb2	        0x488d45c8	                   lea rax, [rbp - 0x38]	      1664	gui.c	FUNCTION_23	IF_10	CALL_12
0x4001cb6	          0x4889d6	                            mov rsi, rdx	      1664	gui.c	FUNCTION_23	IF_10	CALL_12
0x4001cb9	          0x4889c7	                            mov rdi, rax	      1664	gui.c	FUNCTION_23	IF_10	CALL_12
0x4001cbc	      0xe800000000	                          call 0x4001cc1	      1664	gui.c	FUNCTION_23	IF_10	CALL_12
0x4001cc1	    0x8b1500000000	            mov edx, dword [0x04001cc7] 	      1665	gui.c	FUNCTION_23	IF_10	IF_11
0x4001cc7	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1665	gui.c	FUNCTION_23	IF_10	IF_11
0x4001cca	             0x1c2	                            add edx, eax	      1665	gui.c	FUNCTION_23	IF_10	IF_11
0x4001ccc	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      1665	gui.c	FUNCTION_23	IF_10	IF_11
0x4001ccf	            0x39c2	                            cmp edx, eax	      1665	gui.c	FUNCTION_23	IF_10	IF_11
0x4001cd1	            0x7c15	                            jl 0x4001ce8	      1665	gui.c	FUNCTION_23	IF_10	IF_11
0x4001cd3	    0x8b0500000000	            mov eax, dword [0x04001cd9] 	      1666	gui.c	FUNCTION_23	IF_10	IF_11
0x4001cd9	          0x8d1400	                    lea edx, [rax + rax]	      1666	gui.c	FUNCTION_23	IF_10	IF_11
0x4001cdc	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1666	gui.c	FUNCTION_23	IF_10	IF_11
0x4001cdf	             0x1c2	                            add edx, eax	      1666	gui.c	FUNCTION_23	IF_10	IF_11
0x4001ce1	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1666	gui.c	FUNCTION_23	IF_10	IF_11
0x4001ce4	            0x39c2	                            cmp edx, eax	      1666	gui.c	FUNCTION_23	IF_10	IF_11
0x4001ce6	            0x7d0e	                           jge 0x4001cf6	      1666	gui.c	FUNCTION_23	IF_10	IF_11
0x4001ce8	      0xe800000000	                          call 0x4001ced	      1667	gui.c	FUNCTION_23	IF_10	IF_11	CALL_13
0x4001ced	            0x85c0	                           test eax, eax	      1667	gui.c	FUNCTION_23	IF_10	IF_11	CALL_13
0x4001cef	            0x7405	                            je 0x4001cf6	      1667	gui.c	FUNCTION_23	IF_10	IF_11	CALL_13
0x4001cf1	      0xe800000000	                          call 0x4001cf6	      1668	gui.c	FUNCTION_23	IF_10	CALL_14
0x4001cf6	        0x448b4dec	             mov r9d, dword [rbp - 0x14]	      1672	gui.c	FUNCTION_23	CALL_15
0x4001cfa	        0x448b45e8	             mov r8d, dword [rbp - 0x18]	      1672	gui.c	FUNCTION_23	CALL_15
0x4001cfe	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	      1672	gui.c	FUNCTION_23	CALL_15
0x4001d01	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      1672	gui.c	FUNCTION_23	CALL_15
0x4001d04	          0x8b75dc	             mov esi, dword [rbp - 0x24]	      1672	gui.c	FUNCTION_23	CALL_15
0x4001d07	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1672	gui.c	FUNCTION_23	CALL_15
0x4001d0a	        0x4883ec08	                              sub rsp, 8	      1672	gui.c	FUNCTION_23	CALL_15
0x4001d0e	          0x8b7db4	             mov edi, dword [rbp - 0x4c]	      1672	gui.c	FUNCTION_23	CALL_15
0x4001d11	              0x57	                                push rdi	      1672	gui.c	FUNCTION_23	CALL_15
0x4001d12	            0x89c7	                            mov edi, eax	      1672	gui.c	FUNCTION_23	CALL_15
0x4001d14	      0xe800000000	                          call 0x4001d19	      1672	gui.c	FUNCTION_23	CALL_15
0x4001d19	        0x4883c410	                           add rsp, 0x10	      1672	gui.c	FUNCTION_23	CALL_15
0x4001d1d	        0x837db800	               cmp dword [rbp - 0x48], 0	      1675	gui.c	FUNCTION_23	IF_12
0x4001d21	            0x745c	                            je 0x4001d7f	      1675	gui.c	FUNCTION_23	IF_12
0x4001d23	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1675	gui.c	FUNCTION_23	IF_12
0x4001d26	            0x85c0	                           test eax, eax	      1675	gui.c	FUNCTION_23	IF_12
0x4001d28	            0x7855	                            js 0x4001d7f	      1675	gui.c	FUNCTION_23	IF_12
0x4001d2a	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1675	gui.c	FUNCTION_23	IF_12
0x4001d2d	            0x85c0	                           test eax, eax	      1675	gui.c	FUNCTION_23	IF_12
0x4001d2f	            0x784e	                            js 0x4001d7f	      1675	gui.c	FUNCTION_23	IF_12
0x4001d31	      0xe800000000	                          call 0x4001d36	      1680	gui.c	FUNCTION_23	IF_12	CALL_16
0x4001d36	        0x488d55d4	                   lea rdx, [rbp - 0x2c]	      1681	gui.c	FUNCTION_23	IF_12	IF_13	CALL_17
0x4001d3a	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1681	gui.c	FUNCTION_23	IF_12	IF_13	CALL_17
0x4001d3e	          0x4889d6	                            mov rsi, rdx	      1681	gui.c	FUNCTION_23	IF_12	IF_13	CALL_17
0x4001d41	          0x4889c7	                            mov rdi, rax	      1681	gui.c	FUNCTION_23	IF_12	IF_13	CALL_17
0x4001d44	      0xe800000000	                          call 0x4001d49	      1681	gui.c	FUNCTION_23	IF_12	IF_13	CALL_17
0x4001d49	          0x83f801	                              cmp eax, 1	      1681	gui.c	FUNCTION_23	IF_12	IF_13	CALL_17
0x4001d4c	            0x7531	                           jne 0x4001d7f	      1681	gui.c	FUNCTION_23	IF_12	IF_13	CALL_17
0x4001d4e	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1681	gui.c	FUNCTION_23	IF_12	IF_13	CALL_17
0x4001d51	            0x85c0	                           test eax, eax	      1681	gui.c	FUNCTION_23	IF_12	IF_13	CALL_17
0x4001d53	            0x7807	                            js 0x4001d5c	      1681	gui.c	FUNCTION_23	IF_12	IF_13	CALL_17
0x4001d55	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1681	gui.c	FUNCTION_23	IF_12	IF_13	CALL_17
0x4001d58	            0x85c0	                           test eax, eax	      1681	gui.c	FUNCTION_23	IF_12	IF_13	CALL_17
0x4001d5a	            0x7923	                           jns 0x4001d7f	      1681	gui.c	FUNCTION_23	IF_12	IF_13	CALL_17
0x4001d5c	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1682	gui.c	FUNCTION_23	IF_12	CALL_18
0x4001d5f	      0xba00000000	                              mov edx, 0	      1682	gui.c	FUNCTION_23	IF_12	CALL_18
0x4001d64	            0x85c0	                           test eax, eax	      1682	gui.c	FUNCTION_23	IF_12	CALL_18
0x4001d66	           0xf49d0	                         cmovns edx, eax	      1682	gui.c	FUNCTION_23	IF_12	CALL_18
0x4001d69	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1682	gui.c	FUNCTION_23	IF_12	CALL_18
0x4001d6c	      0xb900000000	                              mov ecx, 0	      1682	gui.c	FUNCTION_23	IF_12	CALL_18
0x4001d71	            0x85c0	                           test eax, eax	      1682	gui.c	FUNCTION_23	IF_12	CALL_18
0x4001d73	           0xf48c1	                          cmovs eax, ecx	      1682	gui.c	FUNCTION_23	IF_12	CALL_18
0x4001d76	            0x89d6	                            mov esi, edx	      1682	gui.c	FUNCTION_23	IF_12	CALL_18
0x4001d78	            0x89c7	                            mov edi, eax	      1682	gui.c	FUNCTION_23	IF_12	CALL_18
0x4001d7a	      0xe800000000	                          call 0x4001d7f	      1682	gui.c	FUNCTION_23	IF_12	CALL_18
0x4001d7f	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1685	gui.c	FUNCTION_23	CALL_19
0x4001d82	            0x89c7	                            mov edi, eax	      1685	gui.c	FUNCTION_23	CALL_19
0x4001d84	      0xe8c2f9ffff	        call sym.gui_position_components	      1685	gui.c	FUNCTION_23	CALL_19
0x4001d89	      0xbf01000000	                              mov edi, 1	      1686	gui.c	FUNCTION_23	CALL_20
0x4001d8e	      0xe800000000	                          call 0x4001d93	      1686	gui.c	FUNCTION_23	CALL_20
0x4001d93	      0xe800000000	                          call 0x4001d98	      1687	gui.c	FUNCTION_23	CALL_21
0x4001d98	            0xeb01	                           jmp 0x4001d9b	      1687	gui.c	FUNCTION_23	CALL_21
0x4001d9a	              0x90	                                     nop	      1589	gui.c	FUNCTION_23	IF_1
0x4001d9b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1688	gui.c	FUNCTION_23
0x4001d9f	    0x644833042528	                xor rax, qword fs:[0x28]	      1688	gui.c	FUNCTION_23
0x4001da8	            0x7405	                            je 0x4001daf	      1688	gui.c	FUNCTION_23
0x4001daa	      0xe800000000	                          call 0x4001daf	      1688	gui.c	FUNCTION_23
0x4001daf	              0xc9	                                   leave	      1688	gui.c	FUNCTION_23
0x4001db0	              0xc3	                                     ret	      1688	gui.c	FUNCTION_23
gui_get_base_width	IF,2:functions,0:ELSE,0:CALL,0:SWITCH,0:WHILE,0:FOR,0:DO,0	18
0x4001832	              0x55	                                push rbp	      1409	gui.c	FUNCTION_18
0x4001833	          0x4889e5	                            mov rbp, rsp	      1409	gui.c	FUNCTION_18
0x4001836	    0x8b0500000000	            mov eax, dword [0x0400183c] 	      1412	gui.c	FUNCTION_18
0x400183c	             0x1c0	                            add eax, eax	      1412	gui.c	FUNCTION_18
0x400183e	          0x8945fc	                mov dword [rbp - 4], eax	      1412	gui.c	FUNCTION_18
0x4001841	    0x8b0500000000	            mov eax, dword [0x04001847] 	      1413	gui.c	FUNCTION_18	IF_1
0x4001847	            0x85c0	                           test eax, eax	      1413	gui.c	FUNCTION_18	IF_1
0x4001849	            0x7409	                            je 0x4001854	      1413	gui.c	FUNCTION_18	IF_1
0x400184b	    0x8b0500000000	            mov eax, dword [0x04001851] 	      1414	gui.c	FUNCTION_18	IF_1
0x4001851	           0x145fc	                add dword [rbp - 4], eax	      1414	gui.c	FUNCTION_18	IF_1
0x4001854	    0x8b0500000000	            mov eax, dword [0x0400185a] 	      1415	gui.c	FUNCTION_18	IF_2
0x400185a	            0x85c0	                           test eax, eax	      1415	gui.c	FUNCTION_18	IF_2
0x400185c	            0x7409	                            je 0x4001867	      1415	gui.c	FUNCTION_18	IF_2
0x400185e	    0x8b0500000000	            mov eax, dword [0x04001864] 	      1416	gui.c	FUNCTION_18	IF_2
0x4001864	           0x145fc	                add dword [rbp - 4], eax	      1416	gui.c	FUNCTION_18	IF_2
0x4001867	          0x8b45fc	                mov eax, dword [rbp - 4]	      1417	gui.c	FUNCTION_18
0x400186a	              0x5d	                                 pop rbp	      1418	gui.c	FUNCTION_18
0x400186b	              0xc3	                                     ret	      1418	gui.c	FUNCTION_18
gui_start	IF,4:functions,0:ELSE,1:CALL,15:SWITCH,0:WHILE,0:FOR,0:DO,0	72
0x4000040	              0x55	                                push rbp	        76	gui.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	        76	gui.c	FUNCTION_1
0x4000044	        0x4883ec10	                           sub rsp, 0x10	        76	gui.c	FUNCTION_1
0x4000048	    0x488b05000000	            mov rax, qword [0x0400004f] 	        80	gui.c	FUNCTION_1	CALL_1
0x400004f	          0x4889c7	                            mov rdi, rax	        80	gui.c	FUNCTION_1	CALL_1
0x4000052	      0xe800000000	                          call 0x4000057	        80	gui.c	FUNCTION_1	CALL_1
0x4000057	        0x488945f8	                mov qword [rbp - 8], rax	        80	gui.c	FUNCTION_1	CALL_1
0x400005b	      0xbf00000000	                              mov edi, 0	        82	gui.c	FUNCTION_1	CALL_2
0x4000060	      0xe800000000	                          call 0x4000065	        82	gui.c	FUNCTION_1	CALL_2
0x4000065	    0x8b0500000000	            mov eax, dword [0x0400006b] 	        83	gui.c	FUNCTION_1	IF_1
0x400006b	            0x85c0	                           test eax, eax	        83	gui.c	FUNCTION_1	IF_1
0x400006d	            0x7405	                            je 0x4000074	        83	gui.c	FUNCTION_1	IF_1
0x400006f	      0xe800000000	                          call 0x4000074	        84	gui.c	FUNCTION_1	CALL_3
0x4000074	    0xc70500000000	               mov dword [0x0400007e], 0	        85	gui.c	FUNCTION_1
0x400007e	    0x8b0500000000	            mov eax, dword [0x04000084] 	        87	gui.c	FUNCTION_1
0x4000084	          0x83c001	                              add eax, 1	        87	gui.c	FUNCTION_1
0x4000087	    0x890500000000	            mov dword [0x0400008d], eax 	        87	gui.c	FUNCTION_1
0x400008d	    0x8b0500000000	            mov eax, dword [0x04000093] 	        98	gui.c	FUNCTION_1	IF_2	CALL_4
0x4000093	            0x85c0	                           test eax, eax	        98	gui.c	FUNCTION_1	IF_2	CALL_4
0x4000095	            0x7434	                            je 0x40000cb	        98	gui.c	FUNCTION_1	IF_2	CALL_4
0x4000097	    0x488b05000000	            mov rax, qword [0x0400009e] 	        98	gui.c	FUNCTION_1	IF_2	CALL_4
0x400009e	      0xbe66000000	                           mov esi, 0x66	        98	gui.c	FUNCTION_1	IF_2	CALL_4
0x40000a3	          0x4889c7	                            mov rdi, rax	        98	gui.c	FUNCTION_1	IF_2	CALL_4
0x40000a6	      0xe800000000	                          call 0x40000ab	        98	gui.c	FUNCTION_1	IF_2	CALL_4
0x40000ab	          0x4885c0	                           test rax, rax	        98	gui.c	FUNCTION_1	IF_2	CALL_4
0x40000ae	            0x751b	                           jne 0x40000cb	        98	gui.c	FUNCTION_1	IF_2	CALL_4
0x40000b0	    0x8b0500000000	            mov eax, dword [0x040000b6] 	        98	gui.c	FUNCTION_1	IF_2	CALL_4
0x40000b6	          0x83f801	                              cmp eax, 1	        98	gui.c	FUNCTION_1	IF_2	CALL_4
0x40000b9	            0x7f10	                            jg 0x40000cb	        98	gui.c	FUNCTION_1	IF_2	CALL_4
0x40000bb	      0xe800000000	                          call 0x40000c0	       100	gui.c	FUNCTION_1	IF_2	CALL_5
0x40000c0	            0x85c0	                           test eax, eax	       100	gui.c	FUNCTION_1	IF_2	CALL_5
0x40000c2	            0x7507	                           jne 0x40000cb	       100	gui.c	FUNCTION_1	IF_2	CALL_5
0x40000c4	      0xe84a010000	                    call sym.gui_do_fork	       104	gui.c	FUNCTION_1	IF_2	CALL_6
0x40000c9	            0xeb19	                           jmp 0x40000e4	       104	gui.c	FUNCTION_1	IF_2	CALL_6
0x40000cb	      0xe800000000	                          call 0x40000d0	       112	gui.c	FUNCTION_1	ELSE_1	IF_3	CALL_7
0x40000d0	          0x83f801	                              cmp eax, 1	       112	gui.c	FUNCTION_1	ELSE_1	IF_3	CALL_7
0x40000d3	            0x740a	                            je 0x40000df	       112	gui.c	FUNCTION_1	ELSE_1	IF_3	CALL_7
0x40000d5	      0xbf01000000	                              mov edi, 1	       113	gui.c	FUNCTION_1	ELSE_1	CALL_8
0x40000da	      0xe800000000	                          call 0x40000df	       113	gui.c	FUNCTION_1	ELSE_1	CALL_8
0x40000df	      0xe87e000000	              call sym.gui_attempt_start	       115	gui.c	FUNCTION_1	ELSE_1	CALL_9
0x40000e4	    0x8b0500000000	            mov eax, dword [0x040000ea] 	       118	gui.c	FUNCTION_1	IF_4
0x40000ea	            0x85c0	                           test eax, eax	       118	gui.c	FUNCTION_1	IF_4
0x40000ec	            0x751b	                           jne 0x4000109	       118	gui.c	FUNCTION_1	IF_4
0x40000ee	        0x488b45f8	                mov rax, qword [rbp - 8]	       130	gui.c	FUNCTION_1	IF_4	CALL_10
0x40000f2	          0x4889c7	                            mov rdi, rax	       130	gui.c	FUNCTION_1	IF_4	CALL_10
0x40000f5	      0xe800000000	                          call 0x40000fa	       130	gui.c	FUNCTION_1	IF_4	CALL_10
0x40000fa	      0xbf02000000	                              mov edi, 2	       131	gui.c	FUNCTION_1	IF_4	CALL_11
0x40000ff	      0xe800000000	                          call 0x4000104	       131	gui.c	FUNCTION_1	IF_4	CALL_11
0x4000104	      0xe800000000	                          call 0x4000109	       133	gui.c	FUNCTION_1	IF_4	CALL_12
0x4000109	        0x488b45f8	                mov rax, qword [rbp - 8]	       137	gui.c	FUNCTION_1	CALL_13
0x400010d	          0x4889c7	                            mov rdi, rax	       137	gui.c	FUNCTION_1	CALL_13
0x4000110	      0xe800000000	                          call 0x4000115	       137	gui.c	FUNCTION_1	CALL_13
0x4000115	      0xe800000000	                          call 0x400011a	       141	gui.c	FUNCTION_1	CALL_14
0x400011a	    0x488b15000000	            mov rdx, qword [0x04000121] 	       142	gui.c	FUNCTION_1	CALL_15
0x4000121	    0x8b0500000000	            mov eax, dword [0x04000127] 	       142	gui.c	FUNCTION_1	CALL_15
0x4000127	            0x85c0	                           test eax, eax	       142	gui.c	FUNCTION_1	CALL_15
0x4000129	            0x7407	                            je 0x4000132	       142	gui.c	FUNCTION_1	CALL_15
0x400012b	      0xb837000000	                           mov eax, 0x37	       142	gui.c	FUNCTION_1	CALL_15
0x4000130	            0xeb05	                           jmp 0x4000137	       142	gui.c	FUNCTION_1	CALL_15
0x4000132	      0xb838000000	                           mov eax, 0x38	       142	gui.c	FUNCTION_1	CALL_15
0x4000137	          0x4989d0	                             mov r8, rdx	       142	gui.c	FUNCTION_1	CALL_15
0x400013a	      0xb900000000	                              mov ecx, 0	       142	gui.c	FUNCTION_1	CALL_15
0x400013f	      0xba00000000	                              mov edx, 0	       142	gui.c	FUNCTION_1	CALL_15
0x4000144	      0xbe00000000	                              mov esi, 0	       142	gui.c	FUNCTION_1	CALL_15
0x4000149	            0x89c7	                            mov edi, eax	       142	gui.c	FUNCTION_1	CALL_15
0x400014b	      0xe800000000	                          call 0x4000150	       142	gui.c	FUNCTION_1	CALL_15
0x4000150	    0x8b0500000000	            mov eax, dword [0x04000156] 	       144	gui.c	FUNCTION_1
0x4000156	          0x83e801	                              sub eax, 1	       144	gui.c	FUNCTION_1
0x4000159	    0x890500000000	            mov dword [0x0400015f], eax 	       144	gui.c	FUNCTION_1
0x400015f	              0x90	                                     nop	       145	gui.c	FUNCTION_1
0x4000160	              0xc9	                                   leave	       145	gui.c	FUNCTION_1
0x4000161	              0xc3	                                     ret	       145	gui.c	FUNCTION_1
gui_wait_for_chars_or_timer	IF,0:functions,0:ELSE,0:CALL,2:SWITCH,0:WHILE,0:FOR,0:DO,0	12
0x4003466	              0x55	                                push rbp	      2939	gui.c	FUNCTION_46
0x4003467	          0x4889e5	                            mov rbp, rsp	      2939	gui.c	FUNCTION_46
0x400346a	        0x4883ec10	                           sub rsp, 0x10	      2939	gui.c	FUNCTION_46
0x400346e	        0x48897df8	                mov qword [rbp - 8], rdi	      2939	gui.c	FUNCTION_46
0x4003472	        0x488b45f8	                mov rax, qword [rbp - 8]	      2941	gui.c	FUNCTION_46	CALL_1
0x4003476	      0xb900000000	                              mov ecx, 0	      2941	gui.c	FUNCTION_46	CALL_1
0x400347b	      0xba00000000	                              mov edx, 0	      2941	gui.c	FUNCTION_46	CALL_1
0x4003480	      0xbe00000000	                              mov esi, 0	      2941	gui.c	FUNCTION_46	CALL_1
0x4003485	          0x4889c7	                            mov rdi, rax	      2941	gui.c	FUNCTION_46	CALL_1
0x4003488	      0xe800000000	                          call 0x400348d	      2941	gui.c	FUNCTION_46	CALL_1
0x400348d	              0xc9	                                   leave	      2945	gui.c	FUNCTION_46
0x400348e	              0xc3	                                     ret	      2945	gui.c	FUNCTION_46
gui_enable_flush	IF,0:functions,0:ELSE,0:CALL,0:SWITCH,0:WHILE,0:FOR,0:DO,0	8
0x40023df	              0x55	                                push rbp	      2024	gui.c	FUNCTION_34
0x40023e0	          0x4889e5	                            mov rbp, rsp	      2024	gui.c	FUNCTION_34
0x40023e3	    0x8b0500000000	            mov eax, dword [0x040023e9] 	      2025	gui.c	FUNCTION_34
0x40023e9	          0x83e801	                              sub eax, 1	      2025	gui.c	FUNCTION_34
0x40023ec	    0x890500000000	            mov dword [0x040023f2], eax 	      2025	gui.c	FUNCTION_34
0x40023f2	              0x90	                                     nop	      2026	gui.c	FUNCTION_34
0x40023f3	              0x5d	                                 pop rbp	      2026	gui.c	FUNCTION_34
0x40023f4	              0xc3	                                     ret	      2026	gui.c	FUNCTION_34
gui_init	IF,25:functions,1:ELSE,1:CALL,68:SWITCH,0:WHILE,0:FOR,0:DO,0	316
0x40005e0	              0x55	                                push rbp	       466	gui.c	FUNCTION_7
0x40005e1	          0x4889e5	                            mov rbp, rsp	       466	gui.c	FUNCTION_7
0x40005e4	              0x53	                                push rbx	       466	gui.c	FUNCTION_7
0x40005e5	    0x4881ecb80000	                           sub rsp, 0xb8	       466	gui.c	FUNCTION_7
0x40005ec	    0x64488b042528	                mov rax, qword fs:[0x28]	       466	gui.c	FUNCTION_7
0x40005f5	        0x488945e8	             mov qword [rbp - 0x18], rax	       466	gui.c	FUNCTION_7
0x40005f9	            0x31c0	                            xor eax, eax	       466	gui.c	FUNCTION_7
0x40005fb	    0x8b0500000000	            mov eax, dword [0x04000601] 	       476	gui.c	FUNCTION_7	IF_1
0x4000601	            0x85c0	                           test eax, eax	       476	gui.c	FUNCTION_7	IF_1
0x4000603	     0xf858d020000	                           jne 0x4000896	       476	gui.c	FUNCTION_7	IF_1
0x4000609	    0x8b0500000000	            mov eax, dword [0x0400060f] 	       478	gui.c	FUNCTION_7	IF_1
0x400060f	          0x83c001	                              add eax, 1	       478	gui.c	FUNCTION_7	IF_1
0x4000612	    0x890500000000	            mov dword [0x04000618], eax 	       478	gui.c	FUNCTION_7	IF_1
0x4000618	      0xbf01000000	                              mov edi, 1	       480	gui.c	FUNCTION_7	IF_1	CALL_1
0x400061d	      0xe800000000	                          call 0x4000622	       480	gui.c	FUNCTION_7	IF_1	CALL_1
0x4000622	      0xe800000000	                          call 0x4000627	       483	gui.c	FUNCTION_7	IF_1	IF_2	CALL_2
0x4000627	            0x85c0	                           test eax, eax	       483	gui.c	FUNCTION_7	IF_1	IF_2	CALL_2
0x4000629	            0x751e	                           jne 0x4000649	       483	gui.c	FUNCTION_7	IF_1	IF_2	CALL_2
0x400062b	    0x8b0500000000	            mov eax, dword [0x04000631] 	       485	gui.c	FUNCTION_7	IF_1	IF_2
0x4000631	          0x83e801	                              sub eax, 1	       485	gui.c	FUNCTION_7	IF_1	IF_2
0x4000634	    0x890500000000	            mov dword [0x0400063a], eax 	       485	gui.c	FUNCTION_7	IF_1	IF_2
0x400063a	      0xbf00000000	                              mov edi, 0	       486	gui.c	FUNCTION_7	IF_1	IF_2	CALL_3
0x400063f	      0xe800000000	                          call 0x4000644	       486	gui.c	FUNCTION_7	IF_1	IF_2	CALL_3
0x4000644	      0xe949050000	                           jmp 0x4000b92	       487	gui.c	FUNCTION_7	IF_1	IF_2
0x4000649	      0xb900000000	                              mov ecx, 0	       494	gui.c	FUNCTION_7	IF_1	CALL_4
0x400064e	      0xba00000000	                              mov edx, 0	       494	gui.c	FUNCTION_7	IF_1	CALL_4
0x4000653	      0xbe00000000	                              mov esi, 0	       494	gui.c	FUNCTION_7	IF_1	CALL_4
0x4000658	      0xbf00000000	                              mov edi, 0	       494	gui.c	FUNCTION_7	IF_1	CALL_4
0x400065d	      0xe800000000	                          call 0x4000662	       494	gui.c	FUNCTION_7	IF_1	CALL_4
0x4000662	    0x488b05000000	            mov rax, qword [0x04000669] 	       500	gui.c	FUNCTION_7	IF_1	IF_3	CALL_5
0x4000669	      0xbe4d000000	                           mov esi, 0x4d	       500	gui.c	FUNCTION_7	IF_1	IF_3	CALL_5
0x400066e	          0x4889c7	                            mov rdi, rax	       500	gui.c	FUNCTION_7	IF_1	IF_3	CALL_5
0x4000671	      0xe800000000	                          call 0x4000676	       500	gui.c	FUNCTION_7	IF_1	IF_3	CALL_5
0x4000676	          0x4885c0	                           test rax, rax	       500	gui.c	FUNCTION_7	IF_1	IF_3	CALL_5
0x4000679	            0x7528	                           jne 0x40006a3	       500	gui.c	FUNCTION_7	IF_1	IF_3	CALL_5
0x400067b	    0xc70500000000	               mov dword [0x04000685], 1	       502	gui.c	FUNCTION_7	IF_1	IF_3
0x4000685	      0xba00000000	                              mov edx, 0	       503	gui.c	FUNCTION_7	IF_1	IF_3	CALL_6
0x400068a	      0xbe00000000	                              mov esi, 0	       503	gui.c	FUNCTION_7	IF_1	IF_3	CALL_6
0x400068f	      0xbf00000000	                              mov edi, 0	       503	gui.c	FUNCTION_7	IF_1	IF_3	CALL_6
0x4000694	      0xe800000000	                          call 0x4000699	       503	gui.c	FUNCTION_7	IF_1	IF_3	CALL_6
0x4000699	    0xc70500000000	               mov dword [0x040006a3], 0	       504	gui.c	FUNCTION_7	IF_1	IF_3
0x40006a3	      0xbf00000000	                              mov edi, 0	       512	gui.c	FUNCTION_7	IF_1	IF_4	CALL_7
0x40006a8	      0xe800000000	                          call 0x40006ad	       512	gui.c	FUNCTION_7	IF_1	IF_4	CALL_7
0x40006ad	            0x85c0	                           test eax, eax	       512	gui.c	FUNCTION_7	IF_1	IF_4	CALL_7
0x40006af	            0x751f	                           jne 0x40006d0	       512	gui.c	FUNCTION_7	IF_1	IF_4	CALL_7
0x40006b1	    0x41b8faffffff	                     mov r8d, 0xfffffffa	       513	gui.c	FUNCTION_7	IF_1	IF_4	CALL_8
0x40006b7	      0xb901000000	                              mov ecx, 1	       513	gui.c	FUNCTION_7	IF_1	IF_4	CALL_8
0x40006bc	      0xba00000000	                              mov edx, 0	       513	gui.c	FUNCTION_7	IF_1	IF_4	CALL_8
0x40006c1	      0xbeffffffff	                     mov esi, 0xffffffff	       513	gui.c	FUNCTION_7	IF_1	IF_4	CALL_8
0x40006c6	      0xbf00000000	                              mov edi, 0	       513	gui.c	FUNCTION_7	IF_1	IF_4	CALL_8
0x40006cb	      0xe800000000	                          call 0x40006d0	       513	gui.c	FUNCTION_7	IF_1	IF_4	CALL_8
0x40006d0	    0x488b05000000	            mov rax, qword [0x040006d7] 	       520	gui.c	FUNCTION_7	IF_1	IF_5
0x40006d7	          0x4885c0	                           test rax, rax	       520	gui.c	FUNCTION_7	IF_1	IF_5
0x40006da	            0x747b	                            je 0x4000757	       520	gui.c	FUNCTION_7	IF_1	IF_5
0x40006dc	    0x488b05000000	            mov rax, qword [0x040006e3] 	       522	gui.c	FUNCTION_7	IF_1	IF_5	IF_6	CALL_9
0x40006e3	      0xbe00000000	                              mov esi, 0	       522	gui.c	FUNCTION_7	IF_1	IF_5	IF_6	CALL_9
0x40006e8	          0x4889c7	                            mov rdi, rax	       522	gui.c	FUNCTION_7	IF_1	IF_5	IF_6	CALL_9
0x40006eb	      0xe800000000	                          call 0x40006f0	       522	gui.c	FUNCTION_7	IF_1	IF_5	IF_6	CALL_9
0x40006f0	            0x85c0	                           test eax, eax	       522	gui.c	FUNCTION_7	IF_1	IF_5	IF_6	CALL_9
0x40006f2	     0xf8471010000	                            je 0x4000869	       522	gui.c	FUNCTION_7	IF_1	IF_5	IF_6	CALL_9
0x40006f8	    0x488b05000000	            mov rax, qword [0x040006ff] 	       523	gui.c	FUNCTION_7	IF_1	IF_5	IF_6	CALL_10
0x40006ff	      0xbe00000000	                              mov esi, 0	       523	gui.c	FUNCTION_7	IF_1	IF_5	IF_6	CALL_10
0x4000704	          0x4889c7	                            mov rdi, rax	       523	gui.c	FUNCTION_7	IF_1	IF_5	IF_6	CALL_10
0x4000707	      0xe800000000	                          call 0x400070c	       523	gui.c	FUNCTION_7	IF_1	IF_5	IF_6	CALL_10
0x400070c	            0x85c0	                           test eax, eax	       523	gui.c	FUNCTION_7	IF_1	IF_5	IF_6	CALL_10
0x400070e	     0xf8455010000	                            je 0x4000869	       523	gui.c	FUNCTION_7	IF_1	IF_5	IF_6	CALL_10
0x4000714	    0x488b05000000	            mov rax, qword [0x0400071b] 	       524	gui.c	FUNCTION_7	IF_1	IF_5	IF_6	CALL_11
0x400071b	      0xba00000000	                              mov edx, 0	       524	gui.c	FUNCTION_7	IF_1	IF_5	IF_6	CALL_11
0x4000720	      0xbe00000000	                              mov esi, 0	       524	gui.c	FUNCTION_7	IF_1	IF_5	IF_6	CALL_11
0x4000725	          0x4889c7	                            mov rdi, rax	       524	gui.c	FUNCTION_7	IF_1	IF_5	IF_6	CALL_11
0x4000728	      0xe800000000	                          call 0x400072d	       524	gui.c	FUNCTION_7	IF_1	IF_5	IF_6	CALL_11
0x400072d	          0x83f801	                              cmp eax, 1	       524	gui.c	FUNCTION_7	IF_1	IF_5	IF_6	CALL_11
0x4000730	     0xf8433010000	                            je 0x4000869	       524	gui.c	FUNCTION_7	IF_1	IF_5	IF_6	CALL_11
0x4000736	    0x488b1d000000	            mov rbx, qword [0x0400073d] 	       525	gui.c	FUNCTION_7	IF_1	IF_5	CALL_13
0x400073d	      0xbf00000000	                              mov edi, 0	       525	gui.c	FUNCTION_7	IF_1	IF_5	CALL_13
0x4000742	      0xe800000000	                          call 0x4000747	       525	gui.c	FUNCTION_7	IF_1	IF_5	CALL_13
0x4000747	          0x4889de	                            mov rsi, rbx	       525	gui.c	FUNCTION_7	IF_1	IF_5	CALL_13
0x400074a	          0x4889c7	                            mov rdi, rax	       525	gui.c	FUNCTION_7	IF_1	IF_5	CALL_13
0x400074d	      0xe800000000	                          call 0x4000752	       525	gui.c	FUNCTION_7	IF_1	IF_5	CALL_13
0x4000752	      0xe912010000	                           jmp 0x4000869	       525	gui.c	FUNCTION_7	IF_1	IF_5	CALL_13
0x4000757	      0xba00000000	                              mov edx, 0	       533	gui.c	FUNCTION_7	IF_1	ELSE_1	CALL_14
0x400075c	      0xbe00000000	                              mov esi, 0	       533	gui.c	FUNCTION_7	IF_1	ELSE_1	CALL_14
0x4000761	      0xbf00000000	                              mov edi, 0	       533	gui.c	FUNCTION_7	IF_1	ELSE_1	CALL_14
0x4000766	      0xe800000000	                          call 0x400076b	       533	gui.c	FUNCTION_7	IF_1	ELSE_1	CALL_14
0x400076b	      0xbe00000000	                              mov esi, 0	       545	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_7	CALL_15
0x4000770	      0xbf00000000	                              mov edi, 0	       545	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_7	CALL_15
0x4000775	      0xe800000000	                          call 0x400077a	       545	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_7	CALL_15
0x400077a	            0x85c0	                           test eax, eax	       545	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_7	CALL_15
0x400077c	            0x752c	                           jne 0x40007aa	       545	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_7	CALL_15
0x400077e	      0xba02000000	                              mov edx, 2	       546	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_7	CALL_16
0x4000783	      0xbe01000000	                              mov esi, 1	       546	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_7	CALL_16
0x4000788	      0xbf00000000	                              mov edi, 0	       546	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_7	CALL_16
0x400078d	      0xe800000000	                          call 0x4000792	       546	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_7	CALL_16
0x4000792	            0x85c0	                           test eax, eax	       546	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_7	CALL_16
0x4000794	            0x7514	                           jne 0x40007aa	       546	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_7	CALL_16
0x4000796	      0xba02000000	                              mov edx, 2	       549	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_7	CALL_17
0x400079b	      0xbe01000000	                              mov esi, 1	       549	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_7	CALL_17
0x40007a0	      0xbf00000000	                              mov edi, 0	       549	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_7	CALL_17
0x40007a5	      0xe800000000	                          call 0x40007aa	       549	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_7	CALL_17
0x40007aa	    0x8b0500000000	            mov eax, dword [0x040007b0] 	       573	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8
0x40007b0	            0x85c0	                           test eax, eax	       573	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8
0x40007b2	     0xf84b1000000	                            je 0x4000869	       573	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8
0x40007b8	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       581	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_9	CALL_21
0x40007bf	          0x4889c6	                            mov rsi, rax	       581	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_9	CALL_21
0x40007c2	      0xbf00000000	                              mov edi, 0	       581	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_9	CALL_21
0x40007c7	      0xe800000000	                          call 0x40007cc	       581	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_9	CALL_21
0x40007cc	            0x85c0	                           test eax, eax	       581	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_9	CALL_21
0x40007ce	            0x750f	                           jne 0x40007df	       581	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_9	CALL_21
0x40007d0	    0x8b9d6cffffff	             mov ebx, dword [rbp - 0x94]	       581	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_9	CALL_21
0x40007d6	      0xe800000000	                          call 0x40007db	       581	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_9	CALL_21
0x40007db	            0x39c3	                            cmp ebx, eax	       581	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_9	CALL_21
0x40007dd	            0x740c	                            je 0x40007eb	       581	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_9	CALL_21
0x40007df	    0x8b0500000000	            mov eax, dword [0x040007e5] 	       582	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_9
0x40007e5	    0x890500000000	            mov dword [0x040007eb], eax 	       582	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_9
0x40007eb	      0xba00000000	                              mov edx, 0	       588	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_10	CALL_22
0x40007f0	      0xbe00000000	                              mov esi, 0	       588	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_10	CALL_22
0x40007f5	      0xbf00000000	                              mov edi, 0	       588	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_10	CALL_22
0x40007fa	      0xe800000000	                          call 0x40007ff	       588	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_10	CALL_22
0x40007ff	          0x83f801	                              cmp eax, 1	       588	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_10	CALL_22
0x4000802	            0x7446	                            je 0x400084a	       588	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_10	CALL_22
0x4000804	      0xba00000000	                              mov edx, 0	       591	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_10	CALL_23
0x4000809	      0xbe00000000	                              mov esi, 0	       591	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_10	CALL_23
0x400080e	      0xbf00000000	                              mov edi, 0	       591	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_10	CALL_23
0x4000813	      0xe800000000	                          call 0x4000818	       591	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_10	CALL_23
0x4000818	          0x83f801	                              cmp eax, 1	       591	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_10	CALL_23
0x400081b	            0x742d	                            je 0x400084a	       591	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_10	CALL_23
0x400081d	      0xba00000000	                              mov edx, 0	       595	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_10	CALL_24
0x4000822	      0xbe00000000	                              mov esi, 0	       595	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_10	CALL_24
0x4000827	      0xbf00000000	                              mov edi, 0	       595	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_10	CALL_24
0x400082c	      0xe800000000	                          call 0x4000831	       595	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_10	CALL_24
0x4000831	          0x83f801	                              cmp eax, 1	       595	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_10	CALL_24
0x4000834	            0x7414	                            je 0x400084a	       595	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_10	CALL_24
0x4000836	      0xba02000000	                              mov edx, 2	       607	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	CALL_27
0x400083b	      0xbe01000000	                              mov esi, 1	       607	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	CALL_27
0x4000840	      0xbf00000000	                              mov edi, 0	       607	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	CALL_27
0x4000845	      0xe800000000	                          call 0x400084a	       607	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	CALL_27
0x400084a	    0x8b0500000000	            mov eax, dword [0x04000850] 	       609	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_11
0x4000850	          0x83f802	                              cmp eax, 2	       609	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_11
0x4000853	            0x750a	                           jne 0x400085f	       609	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_11
0x4000855	    0xc70500000000	               mov dword [0x0400085f], 1	       610	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_11
0x400085f	    0xc70500000000	               mov dword [0x04000869], 0	       611	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8
0x4000869	    0x8b0500000000	            mov eax, dword [0x0400086f] 	       615	gui.c	FUNCTION_7	IF_1	IF_12
0x400086f	            0x85c0	                           test eax, eax	       615	gui.c	FUNCTION_7	IF_1	IF_12
0x4000871	            0x750a	                           jne 0x400087d	       615	gui.c	FUNCTION_7	IF_1	IF_12
0x4000873	    0x8b0500000000	            mov eax, dword [0x04000879] 	       615	gui.c	FUNCTION_7	IF_1	IF_12
0x4000879	            0x85c0	                           test eax, eax	       615	gui.c	FUNCTION_7	IF_1	IF_12
0x400087b	            0x740a	                            je 0x4000887	       615	gui.c	FUNCTION_7	IF_1	IF_12
0x400087d	      0xbf01000000	                              mov edi, 1	       616	gui.c	FUNCTION_7	IF_1	CALL_28
0x4000882	      0xe800000000	                          call 0x4000887	       616	gui.c	FUNCTION_7	IF_1	CALL_28
0x4000887	    0x8b0500000000	            mov eax, dword [0x0400088d] 	       618	gui.c	FUNCTION_7	IF_1
0x400088d	          0x83e801	                              sub eax, 1	       618	gui.c	FUNCTION_7	IF_1
0x4000890	    0x890500000000	            mov dword [0x04000896], eax 	       618	gui.c	FUNCTION_7	IF_1
0x4000896	    0x8b0500000000	            mov eax, dword [0x0400089c] 	       622	gui.c	FUNCTION_7	IF_13
0x400089c	            0x85c0	                           test eax, eax	       622	gui.c	FUNCTION_7	IF_13
0x400089e	     0xf85ea020000	                           jne 0x4000b8e	       622	gui.c	FUNCTION_7	IF_13
0x40008a4	    0xc70500000000	               mov dword [0x040008ae], 1	       628	gui.c	FUNCTION_7
0x40008ae	      0xe800000000	                          call 0x40008b3	       629	gui.c	FUNCTION_7	IF_14	CALL_29
0x40008b3	            0x85c0	                           test eax, eax	       629	gui.c	FUNCTION_7	IF_14	CALL_29
0x40008b5	     0xf84bc020000	                            je 0x4000b77	       629	gui.c	FUNCTION_7	IF_14	CALL_29
0x40008bb	    0xc70500000000	               mov dword [0x040008c5], 0	       634	gui.c	FUNCTION_7
0x40008c5	    0xc70500000000	               mov dword [0x040008cf], 0	       635	gui.c	FUNCTION_7
0x40008cf	      0xbf01000000	                              mov edi, 1	       636	gui.c	FUNCTION_7	CALL_30
0x40008d4	      0xe800000000	                          call 0x40008d9	       636	gui.c	FUNCTION_7	CALL_30
0x40008d9	    0xc70500000000	               mov dword [0x040008e3], 0	       637	gui.c	FUNCTION_7
0x40008e3	    0xc70500000000	               mov dword [0x040008ed], 0	       638	gui.c	FUNCTION_7
0x40008ed	    0x8b0500000000	            mov eax, dword [0x040008f3] 	       643	gui.c	FUNCTION_7	IF_15
0x40008f3	            0x85c0	                           test eax, eax	       643	gui.c	FUNCTION_7	IF_15
0x40008f5	            0x790a	                           jns 0x4000901	       643	gui.c	FUNCTION_7	IF_15
0x40008f7	    0xc70500000000	               mov dword [0x04000901], 0	       644	gui.c	FUNCTION_7	IF_15
0x4000901	    0x488b05000000	            mov rax, qword [0x04000908] 	       649	gui.c	FUNCTION_7	IF_16
0x4000908	          0x4885c0	                           test rax, rax	       649	gui.c	FUNCTION_7	IF_16
0x400090b	            0x741e	                            je 0x400092b	       649	gui.c	FUNCTION_7	IF_16
0x400090d	    0x488b05000000	            mov rax, qword [0x04000914] 	       650	gui.c	FUNCTION_7	CALL_31
0x4000914	      0xb900000000	                              mov ecx, 0	       650	gui.c	FUNCTION_7	CALL_31
0x4000919	          0x4889c2	                            mov rdx, rax	       650	gui.c	FUNCTION_7	CALL_31
0x400091c	      0xbe00000000	                              mov esi, 0	       650	gui.c	FUNCTION_7	CALL_31
0x4000921	      0xbf00000000	                              mov edi, 0	       650	gui.c	FUNCTION_7	CALL_31
0x4000926	      0xe800000000	                          call 0x400092b	       650	gui.c	FUNCTION_7	CALL_31
0x400092b	    0x488b05000000	            mov rax, qword [0x04000932] 	       656	gui.c	FUNCTION_7	IF_17	CALL_34
0x4000932	           0xfb600	                   movzx eax, byte [rax]	       656	gui.c	FUNCTION_7	IF_17	CALL_34
0x4000935	            0x84c0	                             test al, al	       656	gui.c	FUNCTION_7	IF_17	CALL_34
0x4000937	            0x7507	                           jne 0x4000940	       656	gui.c	FUNCTION_7	IF_17	CALL_34
0x4000939	      0xe800000000	                          call 0x400093e	       656	gui.c	FUNCTION_7	IF_17	CALL_34
0x400093e	            0xeb07	                           jmp 0x4000947	       656	gui.c	FUNCTION_7	IF_17	CALL_34
0x4000940	    0x488b05000000	            mov rax, qword [0x04000947] 	       656	gui.c	FUNCTION_7	IF_17	CALL_34
0x4000947	      0xbe00000000	                              mov esi, 0	       656	gui.c	FUNCTION_7	IF_17	CALL_34
0x400094c	          0x4889c7	                            mov rdi, rax	       656	gui.c	FUNCTION_7	IF_17	CALL_34
0x400094f	      0xe800000000	                          call 0x4000954	       656	gui.c	FUNCTION_7	IF_17	CALL_34
0x4000954	            0x85c0	                           test eax, eax	       651	gui.c	FUNCTION_7	IF_17
0x4000956	            0x7517	                           jne 0x400096f	       651	gui.c	FUNCTION_7	IF_17
0x4000958	      0xbf00000000	                              mov edi, 0	       659	gui.c	FUNCTION_7	IF_17	CALL_36
0x400095d	      0xe800000000	                          call 0x4000962	       659	gui.c	FUNCTION_7	IF_17	CALL_36
0x4000962	          0x4889c7	                            mov rdi, rax	       659	gui.c	FUNCTION_7	IF_17	CALL_36
0x4000965	      0xe800000000	                          call 0x400096a	       659	gui.c	FUNCTION_7	IF_17	CALL_36
0x400096a	      0xe909020000	                           jmp 0x4000b78	       660	gui.c	FUNCTION_7	IF_17
0x400096f	      0xe800000000	                          call 0x4000974	       663	gui.c	FUNCTION_7	IF_18	CALL_37
0x4000974	            0x85c0	                           test eax, eax	       663	gui.c	FUNCTION_7	IF_18	CALL_37
0x4000976	            0x7512	                           jne 0x400098a	       663	gui.c	FUNCTION_7	IF_18	CALL_37
0x4000978	      0xbf00000000	                              mov edi, 0	       664	gui.c	FUNCTION_7	CALL_39
0x400097d	      0xe800000000	                          call 0x4000982	       664	gui.c	FUNCTION_7	CALL_39
0x4000982	          0x4889c7	                            mov rdi, rax	       664	gui.c	FUNCTION_7	CALL_39
0x4000985	      0xe800000000	                          call 0x400098a	       664	gui.c	FUNCTION_7	CALL_39
0x400098a	    0x488b05000000	            mov rax, qword [0x04000991] 	       667	gui.c	FUNCTION_7
0x4000991	    0x890500000000	            mov dword [0x04000997], eax 	       667	gui.c	FUNCTION_7
0x4000997	    0x488b05000000	            mov rax, qword [0x0400099e] 	       668	gui.c	FUNCTION_7
0x400099e	    0x890500000000	            mov dword [0x040009a4], eax 	       668	gui.c	FUNCTION_7
0x40009a4	      0xe800000000	                          call 0x40009a9	       669	gui.c	FUNCTION_7	CALL_40
0x40009a9	    0x488b05000000	            mov rax, qword [0x040009b0] 	       672	gui.c	FUNCTION_7
0x40009b0	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       672	gui.c	FUNCTION_7
0x40009b7	            0xeb5c	                           jmp 0x4000a15	       672	gui.c	FUNCTION_7
0x40009b9	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       674	gui.c	FUNCTION_7	FUNCTION_1	CALL_1
0x40009c0	    0x488d88901800	                 lea rcx, [rax + 0x1890]	       674	gui.c	FUNCTION_7	FUNCTION_1	CALL_1
0x40009c7	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       674	gui.c	FUNCTION_7	FUNCTION_1	CALL_1
0x40009ce	          0x4889c2	                            mov rdx, rax	       674	gui.c	FUNCTION_7	FUNCTION_1	CALL_1
0x40009d1	      0xbe00000000	                              mov esi, 0	       674	gui.c	FUNCTION_7	FUNCTION_1	CALL_1
0x40009d6	          0x4889cf	                            mov rdi, rcx	       674	gui.c	FUNCTION_7	FUNCTION_1	CALL_1
0x40009d9	      0xe800000000	                          call 0x40009de	       674	gui.c	FUNCTION_7	FUNCTION_1	CALL_1
0x40009de	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       675	gui.c	FUNCTION_7	FUNCTION_1	CALL_2
0x40009e5	    0x488d88e01800	                 lea rcx, [rax + 0x18e0]	       675	gui.c	FUNCTION_7	FUNCTION_1	CALL_2
0x40009ec	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       675	gui.c	FUNCTION_7	FUNCTION_1	CALL_2
0x40009f3	          0x4889c2	                            mov rdx, rax	       675	gui.c	FUNCTION_7	FUNCTION_1	CALL_2
0x40009f6	      0xbe01000000	                              mov esi, 1	       675	gui.c	FUNCTION_7	FUNCTION_1	CALL_2
0x40009fb	          0x4889cf	                            mov rdi, rcx	       675	gui.c	FUNCTION_7	FUNCTION_1	CALL_2
0x40009fe	      0xe800000000	                          call 0x4000a03	       675	gui.c	FUNCTION_7	FUNCTION_1	CALL_2
0x4000a03	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       672	gui.c	FUNCTION_7
0x4000a0a	        0x488b4020	            mov rax, qword [rax + 0x20] 	       672	gui.c	FUNCTION_7
0x4000a0e	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       672	gui.c	FUNCTION_7
0x4000a15	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	       672	gui.c	FUNCTION_7
0x4000a1d	            0x759a	                           jne 0x40009b9	       672	gui.c	FUNCTION_7
0x4000a1f	      0xba00000000	                              mov edx, 0	       677	gui.c	FUNCTION_7	CALL_41
0x4000a24	      0xbe02000000	                              mov esi, 2	       677	gui.c	FUNCTION_7	CALL_41
0x4000a29	      0xbf00000000	                              mov edi, 0	       677	gui.c	FUNCTION_7	CALL_41
0x4000a2e	      0xe800000000	                          call 0x4000a33	       677	gui.c	FUNCTION_7	CALL_41
0x4000a33	    0x488b05000000	            mov rax, qword [0x04000a3a] 	       680	gui.c	FUNCTION_7	CALL_42
0x4000a3a	          0x4889c7	                            mov rdi, rax	       680	gui.c	FUNCTION_7	CALL_42
0x4000a3d	      0xe800000000	                          call 0x4000a42	       680	gui.c	FUNCTION_7	CALL_42
0x4000a42	      0xe800000000	                          call 0x4000a47	       687	gui.c	FUNCTION_7	CALL_44
0x4000a47	      0xbf00000000	                              mov edi, 0	       691	gui.c	FUNCTION_7	CALL_45
0x4000a4c	      0xe800000000	                          call 0x4000a51	       691	gui.c	FUNCTION_7	CALL_45
0x4000a51	    0xc70500000000	               mov dword [0x04000a5b], 1	       694	gui.c	FUNCTION_7
0x4000a5b	      0xe800000000	                          call 0x4000a60	       710	gui.c	FUNCTION_7	IF_20	CALL_48
0x4000a60	            0x85c0	                           test eax, eax	       710	gui.c	FUNCTION_7	IF_20	CALL_48
0x4000a62	     0xf8410010000	                            je 0x4000b78	       710	gui.c	FUNCTION_7	IF_20	CALL_48
0x4000a68	      0xe800000000	                          call 0x4000a6d	       713	gui.c	FUNCTION_7	IF_20	CALL_49
0x4000a6d	      0xe800000000	                          call 0x4000a72	       714	gui.c	FUNCTION_7	IF_20	CALL_50
0x4000a72	      0xe800000000	                          call 0x4000a77	       716	gui.c	FUNCTION_7	IF_20	CALL_51
0x4000a77	    0xc70500000000	               mov dword [0x04000a81], 0	       719	gui.c	FUNCTION_7	IF_20
0x4000a81	      0xe800000000	                          call 0x4000a86	       723	gui.c	FUNCTION_7	IF_20	CALL_52
0x4000a86	    0x488b05000000	            mov rax, qword [0x04000a8d] 	       728	gui.c	FUNCTION_7	IF_20	IF_21	CALL_53
0x4000a8d	      0xbe6d000000	                           mov esi, 0x6d	       728	gui.c	FUNCTION_7	IF_20	IF_21	CALL_53
0x4000a92	          0x4889c7	                            mov rdi, rax	       728	gui.c	FUNCTION_7	IF_20	IF_21	CALL_53
0x4000a95	      0xe800000000	                          call 0x4000a9a	       728	gui.c	FUNCTION_7	IF_20	IF_21	CALL_53
0x4000a9a	          0x4885c0	                           test rax, rax	       728	gui.c	FUNCTION_7	IF_20	IF_21	CALL_53
0x4000a9d	            0x752d	                           jne 0x4000acc	       728	gui.c	FUNCTION_7	IF_20	IF_21	CALL_53
0x4000a9f	    0x8b0500000000	            mov eax, dword [0x04000aa5] 	       730	gui.c	FUNCTION_7	IF_20	IF_21
0x4000aa5	          0x83e801	                              sub eax, 1	       730	gui.c	FUNCTION_7	IF_20	IF_21
0x4000aa8	    0x890500000000	            mov dword [0x04000aae], eax 	       730	gui.c	FUNCTION_7	IF_20	IF_21
0x4000aae	      0xbf00000000	                              mov edi, 0	       731	gui.c	FUNCTION_7	IF_20	IF_21	CALL_54
0x4000ab3	      0xe800000000	                          call 0x4000ab8	       731	gui.c	FUNCTION_7	IF_20	IF_21	CALL_54
0x4000ab8	    0x8b0500000000	            mov eax, dword [0x04000abe] 	       732	gui.c	FUNCTION_7	IF_20	IF_21
0x4000abe	          0x83c001	                              add eax, 1	       732	gui.c	FUNCTION_7	IF_20	IF_21
0x4000ac1	    0x890500000000	            mov dword [0x04000ac7], eax 	       732	gui.c	FUNCTION_7	IF_20	IF_21
0x4000ac7	      0xe800000000	                          call 0x4000acc	       733	gui.c	FUNCTION_7	IF_20	IF_21	CALL_55
0x4000acc	      0xba0f000000	                            mov edx, 0xf	       738	gui.c	FUNCTION_7	IF_20	CALL_56
0x4000ad1	      0xbe01000000	                              mov esi, 1	       738	gui.c	FUNCTION_7	IF_20	CALL_56
0x4000ad6	      0xbf01000000	                              mov edi, 1	       738	gui.c	FUNCTION_7	IF_20	CALL_56
0x4000adb	      0xe800000000	                          call 0x4000ae0	       738	gui.c	FUNCTION_7	IF_20	CALL_56
0x4000ae0	      0xe800000000	                          call 0x4000ae5	       742	gui.c	FUNCTION_7	IF_20	CALL_57
0x4000ae5	    0x488b05000000	            mov rax, qword [0x04000aec] 	       747	gui.c	FUNCTION_7	IF_20	IF_22
0x4000aec	          0x4885c0	                           test rax, rax	       747	gui.c	FUNCTION_7	IF_20	IF_22
0x4000aef	            0x740f	                            je 0x4000b00	       747	gui.c	FUNCTION_7	IF_20	IF_22
0x4000af1	    0x488b05000000	            mov rax, qword [0x04000af8] 	       748	gui.c	FUNCTION_7	IF_20	CALL_58
0x4000af8	          0x4889c7	                            mov rdi, rax	       748	gui.c	FUNCTION_7	IF_20	CALL_58
0x4000afb	      0xe800000000	                          call 0x4000b00	       748	gui.c	FUNCTION_7	IF_20	CALL_58
0x4000b00	    0xc70500000000	               mov dword [0x04000b0a], 0	       749	gui.c	FUNCTION_7	IF_20
0x4000b0a	    0x488b05000000	            mov rax, qword [0x04000b11] 	       751	gui.c	FUNCTION_7	IF_20	CALL_59
0x4000b11	      0xb900000000	                              mov ecx, 0	       751	gui.c	FUNCTION_7	IF_20	CALL_59
0x4000b16	      0xba00000000	                              mov edx, 0	       751	gui.c	FUNCTION_7	IF_20	CALL_59
0x4000b1b	      0xbe00000000	                              mov esi, 0	       751	gui.c	FUNCTION_7	IF_20	CALL_59
0x4000b20	          0x4889c7	                            mov rdi, rax	       751	gui.c	FUNCTION_7	IF_20	CALL_59
0x4000b23	      0xe800000000	                          call 0x4000b28	       751	gui.c	FUNCTION_7	IF_20	CALL_59
0x4000b28	    0x488905000000	            mov qword [0x04000b2f], rax 	       751	gui.c	FUNCTION_7	IF_20	CALL_59
0x4000b2f	    0x8b0500000000	            mov eax, dword [0x04000b35] 	       767	gui.c	FUNCTION_7	IF_20	IF_23
0x4000b35	            0x85c0	                           test eax, eax	       767	gui.c	FUNCTION_7	IF_20	IF_23
0x4000b37	            0x750f	                           jne 0x4000b48	       767	gui.c	FUNCTION_7	IF_20	IF_23
0x4000b39	    0x488b05000000	            mov rax, qword [0x04000b40] 	       768	gui.c	FUNCTION_7	IF_20	CALL_62
0x4000b40	          0x4889c7	                            mov rdi, rax	       768	gui.c	FUNCTION_7	IF_20	CALL_62
0x4000b43	      0xe800000000	                          call 0x4000b48	       768	gui.c	FUNCTION_7	IF_20	CALL_62
0x4000b48	      0xe800000000	                          call 0x4000b4d	       772	gui.c	FUNCTION_7	IF_20	IF_24	CALL_63
0x4000b4d	            0x85c0	                           test eax, eax	       772	gui.c	FUNCTION_7	IF_20	IF_24	CALL_63
0x4000b4f	            0x7512	                           jne 0x4000b63	       772	gui.c	FUNCTION_7	IF_20	IF_24	CALL_63
0x4000b51	      0xbf00000000	                              mov edi, 0	       773	gui.c	FUNCTION_7	IF_20	CALL_65
0x4000b56	      0xe800000000	                          call 0x4000b5b	       773	gui.c	FUNCTION_7	IF_20	CALL_65
0x4000b5b	          0x4889c7	                            mov rdi, rax	       773	gui.c	FUNCTION_7	IF_20	CALL_65
0x4000b5e	      0xe800000000	                          call 0x4000b63	       773	gui.c	FUNCTION_7	IF_20	CALL_65
0x4000b63	    0x488b05000000	            mov rax, qword [0x04000b6a] 	       777	gui.c	FUNCTION_7	IF_20	IF_25
0x4000b6a	        0x4883f801	                              cmp rax, 1	       777	gui.c	FUNCTION_7	IF_20	IF_25
0x4000b6e	            0x7421	                            je 0x4000b91	       777	gui.c	FUNCTION_7	IF_20	IF_25
0x4000b70	      0xe800000000	                          call 0x4000b75	       778	gui.c	FUNCTION_7	IF_20	CALL_66
0x4000b75	            0xeb1a	                           jmp 0x4000b91	       780	gui.c	FUNCTION_7	IF_20
0x4000b77	              0x90	                                     nop	       630	gui.c	FUNCTION_7	IF_14
0x4000b78	    0xc70500000000	               mov dword [0x04000b82], 0	       790	gui.c	FUNCTION_7
0x4000b82	      0xbf00000000	                              mov edi, 0	       791	gui.c	FUNCTION_7	CALL_68
0x4000b87	      0xe800000000	                          call 0x4000b8c	       791	gui.c	FUNCTION_7	CALL_68
0x4000b8c	            0xeb04	                           jmp 0x4000b92	       791	gui.c	FUNCTION_7	CALL_68
0x4000b8e	              0x90	                                     nop	       623	gui.c	FUNCTION_7	IF_13
0x4000b8f	            0xeb01	                           jmp 0x4000b92	       623	gui.c	FUNCTION_7	IF_13
0x4000b91	              0x90	                                     nop	       780	gui.c	FUNCTION_7	IF_20
0x4000b92	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       792	gui.c	FUNCTION_7
0x4000b96	    0x644833042528	                xor rax, qword fs:[0x28]	       792	gui.c	FUNCTION_7
0x4000b9f	            0x7405	                            je 0x4000ba6	       792	gui.c	FUNCTION_7
0x4000ba1	      0xe800000000	                          call 0x4000ba6	       792	gui.c	FUNCTION_7
0x4000ba6	    0x4881c4b80000	                           add rsp, 0xb8	       792	gui.c	FUNCTION_7
0x4000bad	              0x5b	                                 pop rbx	       792	gui.c	FUNCTION_7
0x4000bae	              0x5d	                                 pop rbp	       792	gui.c	FUNCTION_7
0x4000baf	              0xc3	                                     ret	       792	gui.c	FUNCTION_7
send_tabline_menu_event	IF,1:functions,0:ELSE,0:CALL,2:SWITCH,0:WHILE,0:FOR,0:DO,0	34
0x4004a5a	              0x55	                                push rbp	      3857	gui.c	FUNCTION_59
0x4004a5b	          0x4889e5	                            mov rbp, rsp	      3857	gui.c	FUNCTION_59
0x4004a5e	        0x4883ec20	                           sub rsp, 0x20	      3857	gui.c	FUNCTION_59
0x4004a62	          0x897dec	             mov dword [rbp - 0x14], edi	      3857	gui.c	FUNCTION_59
0x4004a65	          0x8975e8	             mov dword [rbp - 0x18], esi	      3857	gui.c	FUNCTION_59
0x4004a68	    0x64488b042528	                mov rax, qword fs:[0x28]	      3857	gui.c	FUNCTION_59
0x4004a71	        0x488945f8	                mov qword [rbp - 8], rax	      3857	gui.c	FUNCTION_59
0x4004a75	            0x31c0	                            xor eax, eax	      3857	gui.c	FUNCTION_59
0x4004a77	    0x8b0500000000	            mov eax, dword [0x04004a7d] 	      3861	gui.c	FUNCTION_59	IF_1
0x4004a7d	            0x85c0	                           test eax, eax	      3861	gui.c	FUNCTION_59	IF_1
0x4004a7f	            0x753c	                           jne 0x4004abd	      3861	gui.c	FUNCTION_59	IF_1
0x4004a81	        0xc645f09b	            mov byte [rbp - 0x10], 0x9b 	      3864	gui.c	FUNCTION_59
0x4004a85	        0xc645f1ef	              mov byte [rbp - 0xf], 0xef	      3865	gui.c	FUNCTION_59
0x4004a89	        0xc645f258	              mov byte [rbp - 0xe], 0x58	      3866	gui.c	FUNCTION_59
0x4004a8d	        0x488d45f0	                   lea rax, [rbp - 0x10]	      3867	gui.c	FUNCTION_59	CALL_1
0x4004a91	      0xbe03000000	                              mov esi, 3	      3867	gui.c	FUNCTION_59	CALL_1
0x4004a96	          0x4889c7	                            mov rdi, rax	      3867	gui.c	FUNCTION_59	CALL_1
0x4004a99	      0xe800000000	                          call 0x4004a9e	      3867	gui.c	FUNCTION_59	CALL_1
0x4004a9e	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3868	gui.c	FUNCTION_59
0x4004aa1	          0x8845f0	               mov byte [rbp - 0x10], al	      3868	gui.c	FUNCTION_59
0x4004aa4	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      3869	gui.c	FUNCTION_59
0x4004aa7	          0x8845f1	                mov byte [rbp - 0xf], al	      3869	gui.c	FUNCTION_59
0x4004aaa	        0x488d45f0	                   lea rax, [rbp - 0x10]	      3870	gui.c	FUNCTION_59	CALL_2
0x4004aae	      0xbe02000000	                              mov esi, 2	      3870	gui.c	FUNCTION_59	CALL_2
0x4004ab3	          0x4889c7	                            mov rdi, rax	      3870	gui.c	FUNCTION_59	CALL_2
0x4004ab6	      0xe800000000	                          call 0x4004abb	      3870	gui.c	FUNCTION_59	CALL_2
0x4004abb	            0xeb01	                           jmp 0x4004abe	      3870	gui.c	FUNCTION_59	CALL_2
0x4004abd	              0x90	                                     nop	      3862	gui.c	FUNCTION_59	IF_1
0x4004abe	        0x488b45f8	                mov rax, qword [rbp - 8]	      3871	gui.c	FUNCTION_59
0x4004ac2	    0x644833042528	                xor rax, qword fs:[0x28]	      3871	gui.c	FUNCTION_59
0x4004acb	            0x7405	                            je 0x4004ad2	      3871	gui.c	FUNCTION_59
0x4004acd	      0xe800000000	                          call 0x4004ad2	      3871	gui.c	FUNCTION_59
0x4004ad2	              0xc9	                                   leave	      3871	gui.c	FUNCTION_59
0x4004ad3	              0xc3	                                     ret	      3871	gui.c	FUNCTION_59
get_find_dialog_text	IF,7:functions,0:ELSE,1:CALL,10:SWITCH,0:WHILE,0:FOR,1:DO,0	166
0x4006bf3	              0x55	                                push rbp	      5188	gui.c	FUNCTION_89
0x4006bf4	          0x4889e5	                            mov rbp, rsp	      5188	gui.c	FUNCTION_89
0x4006bf7	        0x4883ec30	                           sub rsp, 0x30	      5188	gui.c	FUNCTION_89
0x4006bfb	        0x48897de8	             mov qword [rbp - 0x18], rdi	      5188	gui.c	FUNCTION_89
0x4006bff	        0x488975e0	             mov qword [rbp - 0x20], rsi	      5188	gui.c	FUNCTION_89
0x4006c03	        0x488955d8	             mov qword [rbp - 0x28], rdx	      5188	gui.c	FUNCTION_89
0x4006c07	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5191	gui.c	FUNCTION_89	IF_1
0x4006c0b	           0xfb600	                   movzx eax, byte [rax]	      5191	gui.c	FUNCTION_89	IF_1
0x4006c0e	            0x84c0	                             test al, al	      5191	gui.c	FUNCTION_89	IF_1
0x4006c10	            0x750b	                           jne 0x4006c1d	      5191	gui.c	FUNCTION_89	IF_1
0x4006c12	      0xe800000000	                          call 0x4006c17	      5192	gui.c	FUNCTION_89	CALL_1
0x4006c17	        0x488945f8	                mov qword [rbp - 8], rax	      5192	gui.c	FUNCTION_89	CALL_1
0x4006c1b	            0xeb08	                           jmp 0x4006c25	      5192	gui.c	FUNCTION_89	CALL_1
0x4006c1d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5194	gui.c	FUNCTION_89	ELSE_1
0x4006c21	        0x488945f8	                mov qword [rbp - 8], rax	      5194	gui.c	FUNCTION_89	ELSE_1
0x4006c25	      0x48837df800	                  cmp qword [rbp - 8], 0	      5195	gui.c	FUNCTION_89	ELSE_1	IF_2
0x4006c2a	     0xf84f1010000	                            je 0x4006e21	      5195	gui.c	FUNCTION_89	ELSE_1	IF_2
0x4006c30	        0x488b45f8	                mov rax, qword [rbp - 8]	      5197	gui.c	FUNCTION_89	ELSE_1	IF_2	CALL_2
0x4006c34	          0x4889c7	                            mov rdi, rax	      5197	gui.c	FUNCTION_89	ELSE_1	IF_2	CALL_2
0x4006c37	      0xe800000000	                          call 0x4006c3c	      5197	gui.c	FUNCTION_89	ELSE_1	IF_2	CALL_2
0x4006c3c	        0x488945f8	                mov qword [rbp - 8], rax	      5197	gui.c	FUNCTION_89	ELSE_1	IF_2	CALL_2
0x4006c40	      0x48837df800	                  cmp qword [rbp - 8], 0	      5198	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3
0x4006c45	     0xf84d6010000	                            je 0x4006e21	      5198	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3
0x4006c4b	        0x488b45f8	                mov rax, qword [rbp - 8]	      5200	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	CALL_3
0x4006c4f	          0x4889c7	                            mov rdi, rax	      5200	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	CALL_3
0x4006c52	      0xe800000000	                          call 0x4006c57	      5200	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	CALL_3
0x4006c57	          0x8945f0	             mov dword [rbp - 0x10], eax	      5200	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	CALL_3
0x4006c5a	        0x837df001	               cmp dword [rbp - 0x10], 1	      5204	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4	CALL_4
0x4006c5e	            0x7e3e	                           jle 0x4006c9e	      5204	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4	CALL_4
0x4006c60	        0x488b45f8	                mov rax, qword [rbp - 8]	      5204	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4	CALL_4
0x4006c64	      0xba02000000	                              mov edx, 2	      5204	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4	CALL_4
0x4006c69	      0xbe00000000	                              mov esi, 0	      5204	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4	CALL_4
0x4006c6e	          0x4889c7	                            mov rdi, rax	      5204	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4	CALL_4
0x4006c71	      0xe800000000	                          call 0x4006c76	      5204	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4	CALL_4
0x4006c76	            0x85c0	                           test eax, eax	      5204	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4	CALL_4
0x4006c78	            0x7524	                           jne 0x4006c9e	      5204	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4	CALL_4
0x4006c7a	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      5206	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4	CALL_5
0x4006c7d	          0x83e801	                              sub eax, 1	      5206	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4	CALL_5
0x4006c80	          0x4863d0	                         movsxd rdx, eax	      5206	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4	CALL_5
0x4006c83	        0x488b45f8	                mov rax, qword [rbp - 8]	      5206	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4	CALL_5
0x4006c87	        0x488d4802	                      lea rcx, [rax + 2]	      5206	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4	CALL_5
0x4006c8b	        0x488b45f8	                mov rax, qword [rbp - 8]	      5206	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4	CALL_5
0x4006c8f	          0x4889ce	                            mov rsi, rcx	      5206	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4	CALL_5
0x4006c92	          0x4889c7	                            mov rdi, rax	      5206	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4	CALL_5
0x4006c95	      0xe800000000	                          call 0x4006c9a	      5206	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4	CALL_5
0x4006c9a	        0x836df002	               sub dword [rbp - 0x10], 2	      5207	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4
0x4006c9e	        0x837df001	               cmp dword [rbp - 0x10], 1	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x4006ca2	            0x7e66	                           jle 0x4006d0a	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x4006ca4	        0x488b45f8	                mov rax, qword [rbp - 8]	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x4006ca8	           0xfb600	                   movzx eax, byte [rax]	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x4006cab	            0x3c5c	                            cmp al, 0x5c	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x4006cad	            0x755b	                           jne 0x4006d0a	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x4006caf	        0x488b45f8	                mov rax, qword [rbp - 8]	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x4006cb3	        0x4883c001	                              add rax, 1	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x4006cb7	           0xfb600	                   movzx eax, byte [rax]	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x4006cba	            0x3c63	                            cmp al, 0x63	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x4006cbc	            0x740f	                            je 0x4006ccd	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x4006cbe	        0x488b45f8	                mov rax, qword [rbp - 8]	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x4006cc2	        0x4883c001	                              add rax, 1	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x4006cc6	           0xfb600	                   movzx eax, byte [rax]	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x4006cc9	            0x3c43	                            cmp al, 0x43	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x4006ccb	            0x753d	                           jne 0x4006d0a	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x4006ccd	        0x488b45f8	                mov rax, qword [rbp - 8]	      5213	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x4006cd1	        0x4883c001	                              add rax, 1	      5213	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x4006cd5	           0xfb600	                   movzx eax, byte [rax]	      5213	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x4006cd8	            0x3c43	                            cmp al, 0x43	      5213	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x4006cda	           0xf94c0	                                 sete al	      5213	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x4006cdd	           0xfb6d0	                           movzx edx, al	      5213	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x4006ce0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5213	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x4006ce4	            0x8910	                    mov dword [rax], edx	      5213	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x4006ce6	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      5214	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5	CALL_6
0x4006ce9	          0x83e801	                              sub eax, 1	      5214	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5	CALL_6
0x4006cec	          0x4863d0	                         movsxd rdx, eax	      5214	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5	CALL_6
0x4006cef	        0x488b45f8	                mov rax, qword [rbp - 8]	      5214	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5	CALL_6
0x4006cf3	        0x488d4802	                      lea rcx, [rax + 2]	      5214	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5	CALL_6
0x4006cf7	        0x488b45f8	                mov rax, qword [rbp - 8]	      5214	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5	CALL_6
0x4006cfb	          0x4889ce	                            mov rsi, rcx	      5214	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5	CALL_6
0x4006cfe	          0x4889c7	                            mov rdi, rax	      5214	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5	CALL_6
0x4006d01	      0xe800000000	                          call 0x4006d06	      5214	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5	CALL_6
0x4006d06	        0x836df002	               sub dword [rbp - 0x10], 2	      5215	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x4006d0a	        0x837df003	               cmp dword [rbp - 0x10], 3	      5219	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6
0x4006d0e	            0x7e7d	                           jle 0x4006d8d	      5219	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6
0x4006d10	        0x488b45f8	                mov rax, qword [rbp - 8]	      5220	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_7
0x4006d14	      0xba02000000	                              mov edx, 2	      5220	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_7
0x4006d19	      0xbe00000000	                              mov esi, 0	      5220	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_7
0x4006d1e	          0x4889c7	                            mov rdi, rax	      5220	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_7
0x4006d21	      0xe800000000	                          call 0x4006d26	      5220	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_7
0x4006d26	            0x85c0	                           test eax, eax	      5220	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_7
0x4006d28	            0x7563	                           jne 0x4006d8d	      5220	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_7
0x4006d2a	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      5221	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_8
0x4006d2d	            0x4898	                                    cdqe	      5221	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_8
0x4006d2f	        0x488d50fe	                      lea rdx, [rax - 2]	      5221	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_8
0x4006d33	        0x488b45f8	                mov rax, qword [rbp - 8]	      5221	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_8
0x4006d37	          0x4801d0	                            add rax, rdx	      5221	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_8
0x4006d3a	      0xba02000000	                              mov edx, 2	      5221	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_8
0x4006d3f	      0xbe00000000	                              mov esi, 0	      5221	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_8
0x4006d44	          0x4889c7	                            mov rdi, rax	      5221	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_8
0x4006d47	      0xe800000000	                          call 0x4006d4c	      5221	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_8
0x4006d4c	            0x85c0	                           test eax, eax	      5221	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_8
0x4006d4e	            0x753d	                           jne 0x4006d8d	      5221	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_8
0x4006d50	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5223	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6
0x4006d54	    0xc70001000000	                      mov dword [rax], 1	      5223	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6
0x4006d5a	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      5224	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_9
0x4006d5d	          0x83e804	                              sub eax, 4	      5224	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_9
0x4006d60	          0x4863d0	                         movsxd rdx, eax	      5224	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_9
0x4006d63	        0x488b45f8	                mov rax, qword [rbp - 8]	      5224	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_9
0x4006d67	        0x488d4802	                      lea rcx, [rax + 2]	      5224	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_9
0x4006d6b	        0x488b45f8	                mov rax, qword [rbp - 8]	      5224	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_9
0x4006d6f	          0x4889ce	                            mov rsi, rcx	      5224	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_9
0x4006d72	          0x4889c7	                            mov rdi, rax	      5224	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_9
0x4006d75	      0xe800000000	                          call 0x4006d7a	      5224	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_9
0x4006d7a	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      5225	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6
0x4006d7d	            0x4898	                                    cdqe	      5225	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6
0x4006d7f	        0x488d50fc	                      lea rdx, [rax - 4]	      5225	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6
0x4006d83	        0x488b45f8	                mov rax, qword [rbp - 8]	      5225	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6
0x4006d87	          0x4801d0	                            add rax, rdx	      5225	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6
0x4006d8a	          0xc60000	                       mov byte [rax], 0	      5225	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6
0x4006d8d	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      5229	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1
0x4006d94	            0xeb7c	                           jmp 0x4006e12	      5229	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1
0x4006d96	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      5230	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x4006d99	          0x4863d0	                         movsxd rdx, eax	      5230	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x4006d9c	        0x488b45f8	                mov rax, qword [rbp - 8]	      5230	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x4006da0	          0x4801d0	                            add rax, rdx	      5230	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x4006da3	           0xfb600	                   movzx eax, byte [rax]	      5230	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x4006da6	            0x3c5c	                            cmp al, 0x5c	      5230	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x4006da8	            0x7564	                           jne 0x4006e0e	      5230	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x4006daa	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      5230	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x4006dad	            0x4898	                                    cdqe	      5230	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x4006daf	        0x488d5001	                      lea rdx, [rax + 1]	      5230	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x4006db3	        0x488b45f8	                mov rax, qword [rbp - 8]	      5230	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x4006db7	          0x4801d0	                            add rax, rdx	      5230	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x4006dba	           0xfb600	                   movzx eax, byte [rax]	      5230	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x4006dbd	            0x3c2f	                            cmp al, 0x2f	      5230	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x4006dbf	            0x7417	                            je 0x4006dd8	      5230	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x4006dc1	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      5231	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x4006dc4	            0x4898	                                    cdqe	      5231	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x4006dc6	        0x488d5001	                      lea rdx, [rax + 1]	      5231	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x4006dca	        0x488b45f8	                mov rax, qword [rbp - 8]	      5231	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x4006dce	          0x4801d0	                            add rax, rdx	      5231	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x4006dd1	           0xfb600	                   movzx eax, byte [rax]	      5231	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x4006dd4	            0x3c3f	                            cmp al, 0x3f	      5231	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x4006dd6	            0x7536	                           jne 0x4006e0e	      5231	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x4006dd8	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      5233	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7	CALL_10
0x4006ddb	          0x2b45f4	              sub eax, dword [rbp - 0xc]	      5233	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7	CALL_10
0x4006dde	            0x4898	                                    cdqe	      5233	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7	CALL_10
0x4006de0	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      5233	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7	CALL_10
0x4006de3	          0x4863d2	                         movsxd rdx, edx	      5233	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7	CALL_10
0x4006de6	        0x488d4a01	                      lea rcx, [rdx + 1]	      5233	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7	CALL_10
0x4006dea	        0x488b55f8	                mov rdx, qword [rbp - 8]	      5233	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7	CALL_10
0x4006dee	        0x488d3411	                    lea rsi, [rcx + rdx]	      5233	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7	CALL_10
0x4006df2	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      5233	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7	CALL_10
0x4006df5	          0x4863ca	                         movsxd rcx, edx	      5233	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7	CALL_10
0x4006df8	        0x488b55f8	                mov rdx, qword [rbp - 8]	      5233	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7	CALL_10
0x4006dfc	          0x4801d1	                            add rcx, rdx	      5233	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7	CALL_10
0x4006dff	          0x4889c2	                            mov rdx, rax	      5233	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7	CALL_10
0x4006e02	          0x4889cf	                            mov rdi, rcx	      5233	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7	CALL_10
0x4006e05	      0xe800000000	                          call 0x4006e0a	      5233	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7	CALL_10
0x4006e0a	        0x836df001	               sub dword [rbp - 0x10], 1	      5234	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x4006e0e	        0x8345f401	                add dword [rbp - 0xc], 1	      5229	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1
0x4006e12	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      5229	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1
0x4006e15	          0x83c001	                              add eax, 1	      5229	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1
0x4006e18	          0x3b45f0	             cmp eax, dword [rbp - 0x10]	      5229	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1
0x4006e1b	     0xf8c75ffffff	                            jl 0x4006d96	      5229	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1
0x4006e21	        0x488b45f8	                mov rax, qword [rbp - 8]	      5238	gui.c	FUNCTION_89
0x4006e25	              0xc9	                                   leave	      5239	gui.c	FUNCTION_89
0x4006e26	              0xc3	                                     ret	      5239	gui.c	FUNCTION_89
gui_check_colors	IF,2:functions,0:ELSE,0:CALL,2:SWITCH,0:WHILE,0:FOR,0:DO,0	23
0x4005fa9	              0x55	                                push rbp	      4734	gui.c	FUNCTION_72
0x4005faa	          0x4889e5	                            mov rbp, rsp	      4734	gui.c	FUNCTION_72
0x4005fad	    0x488b15000000	            mov rdx, qword [0x04005fb4] 	      4735	gui.c	FUNCTION_72	IF_1
0x4005fb4	    0x488b05000000	            mov rax, qword [0x04005fbb] 	      4735	gui.c	FUNCTION_72	IF_1
0x4005fbb	          0x4839c2	                            cmp rdx, rax	      4735	gui.c	FUNCTION_72	IF_1
0x4005fbe	            0x740f	                            je 0x4005fcf	      4735	gui.c	FUNCTION_72	IF_1
0x4005fc0	    0x488b05000000	            mov rax, qword [0x04005fc7] 	      4735	gui.c	FUNCTION_72	IF_1
0x4005fc7	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      4735	gui.c	FUNCTION_72	IF_1
0x4005fcd	            0x7536	                           jne 0x4006005	      4735	gui.c	FUNCTION_72	IF_1
0x4005fcf	      0xbf00000000	                              mov edi, 0	      4737	gui.c	FUNCTION_72	IF_1	CALL_1
0x4005fd4	      0xe865000000	               call sym.gui_set_bg_color	      4737	gui.c	FUNCTION_72	IF_1	CALL_1
0x4005fd9	    0x488b15000000	            mov rdx, qword [0x04005fe0] 	      4738	gui.c	FUNCTION_72	IF_1	IF_2
0x4005fe0	    0x488b05000000	            mov rax, qword [0x04005fe7] 	      4738	gui.c	FUNCTION_72	IF_1	IF_2
0x4005fe7	          0x4839c2	                            cmp rdx, rax	      4738	gui.c	FUNCTION_72	IF_1	IF_2
0x4005fea	            0x740f	                            je 0x4005ffb	      4738	gui.c	FUNCTION_72	IF_1	IF_2
0x4005fec	    0x488b05000000	            mov rax, qword [0x04005ff3] 	      4738	gui.c	FUNCTION_72	IF_1	IF_2
0x4005ff3	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      4738	gui.c	FUNCTION_72	IF_1	IF_2
0x4005ff9	            0x750a	                           jne 0x4006005	      4738	gui.c	FUNCTION_72	IF_1	IF_2
0x4005ffb	      0xbf00000000	                              mov edi, 0	      4739	gui.c	FUNCTION_72	IF_1	CALL_2
0x4006000	      0xe803000000	               call sym.gui_set_fg_color	      4739	gui.c	FUNCTION_72	IF_1	CALL_2
0x4006005	              0x90	                                     nop	      4741	gui.c	FUNCTION_72
0x4006006	              0x5d	                                 pop rbp	      4741	gui.c	FUNCTION_72
0x4006007	              0xc3	                                     ret	      4741	gui.c	FUNCTION_72
gui_update_horiz_scrollbar	IF,11:functions,0:ELSE,1:CALL,6:SWITCH,0:WHILE,0:FOR,0:DO,0	137
0x4005c49	              0x55	                                push rbp	      4604	gui.c	ELSE_2	FUNCTION_70
0x4005c4a	          0x4889e5	                            mov rbp, rsp	      4604	gui.c	ELSE_2	FUNCTION_70
0x4005c4d	        0x4883ec30	                           sub rsp, 0x30	      4604	gui.c	ELSE_2	FUNCTION_70
0x4005c51	          0x897ddc	             mov dword [rbp - 0x24], edi	      4604	gui.c	ELSE_2	FUNCTION_70
0x4005c54	    0x8b0500000000	            mov eax, dword [0x04005c5a] 	      4607	gui.c	ELSE_2	FUNCTION_70	IF_1
0x4005c5a	            0x85c0	                           test eax, eax	      4607	gui.c	ELSE_2	FUNCTION_70	IF_1
0x4005c5c	     0xf8416020000	                            je 0x4005e78	      4607	gui.c	ELSE_2	FUNCTION_70	IF_1
0x4005c62	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      4610	gui.c	ELSE_2	FUNCTION_70	IF_2
0x4005c66	            0x750f	                           jne 0x4005c77	      4610	gui.c	ELSE_2	FUNCTION_70	IF_2
0x4005c68	    0x8b0500000000	            mov eax, dword [0x04005c6e] 	      4610	gui.c	ELSE_2	FUNCTION_70	IF_2
0x4005c6e	          0x83f802	                              cmp eax, 2	      4610	gui.c	ELSE_2	FUNCTION_70	IF_2
0x4005c71	     0xf8404020000	                            je 0x4005e7b	      4610	gui.c	ELSE_2	FUNCTION_70	IF_2
0x4005c77	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      4613	gui.c	ELSE_2	FUNCTION_70	IF_3
0x4005c7b	            0x751f	                           jne 0x4005c9c	      4613	gui.c	ELSE_2	FUNCTION_70	IF_3
0x4005c7d	    0x488b05000000	            mov rax, qword [0x04005c84] 	      4613	gui.c	ELSE_2	FUNCTION_70	IF_3
0x4005c84	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      4613	gui.c	ELSE_2	FUNCTION_70	IF_3
0x4005c8a	            0x85c0	                           test eax, eax	      4613	gui.c	ELSE_2	FUNCTION_70	IF_3
0x4005c8c	            0x740e	                            je 0x4005c9c	      4613	gui.c	ELSE_2	FUNCTION_70	IF_3
0x4005c8e	    0x8b0500000000	            mov eax, dword [0x04005c94] 	      4613	gui.c	ELSE_2	FUNCTION_70	IF_3
0x4005c94	            0x85c0	                           test eax, eax	      4613	gui.c	ELSE_2	FUNCTION_70	IF_3
0x4005c96	     0xf85e2010000	                           jne 0x4005e7e	      4613	gui.c	ELSE_2	FUNCTION_70	IF_3
0x4005c9c	    0x488b05000000	            mov rax, qword [0x04005ca3] 	      4620	gui.c	ELSE_2	FUNCTION_70	IF_4
0x4005ca3	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      4620	gui.c	ELSE_2	FUNCTION_70	IF_4
0x4005ca7	    0x488b05000000	            mov rax, qword [0x04005cae] 	      4620	gui.c	ELSE_2	FUNCTION_70	IF_4
0x4005cae	          0x488b00	                    mov rax, qword [rax]	      4620	gui.c	ELSE_2	FUNCTION_70	IF_4
0x4005cb1	          0x4839c2	                            cmp rdx, rax	      4620	gui.c	ELSE_2	FUNCTION_70	IF_4
0x4005cb4	            0x7e10	                           jle 0x4005cc6	      4620	gui.c	ELSE_2	FUNCTION_70	IF_4
0x4005cb6	    0x48c705000000	mov qword [0x04005cc1], 0xffffffffffffffff 	      4622	gui.c	ELSE_2	FUNCTION_70	IF_4
0x4005cc1	      0xe9bc010000	                           jmp 0x4005e82	      4623	gui.c	ELSE_2	FUNCTION_70	IF_4
0x4005cc6	    0x488b05000000	            mov rax, qword [0x04005ccd] 	      4626	gui.c	ELSE_2	FUNCTION_70
0x4005ccd	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      4626	gui.c	ELSE_2	FUNCTION_70
0x4005cd3	            0x4898	                                    cdqe	      4626	gui.c	ELSE_2	FUNCTION_70
0x4005cd5	        0x488945f0	             mov qword [rbp - 0x10], rax	      4626	gui.c	ELSE_2	FUNCTION_70
0x4005cd9	    0x488b05000000	            mov rax, qword [0x04005ce0] 	      4627	gui.c	ELSE_2	FUNCTION_70	IF_5
0x4005ce0	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      4627	gui.c	ELSE_2	FUNCTION_70	IF_5
0x4005ce6	            0x85c0	                           test eax, eax	      4627	gui.c	ELSE_2	FUNCTION_70	IF_5
0x4005ce8	            0x7423	                            je 0x4005d0d	      4627	gui.c	ELSE_2	FUNCTION_70	IF_5
0x4005cea	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      4629	gui.c	ELSE_2	FUNCTION_70	IF_5
0x4005cf2	    0x488b05000000	            mov rax, qword [0x04005cf9] 	      4633	gui.c	ELSE_2	FUNCTION_70	IF_5
0x4005cf9	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      4633	gui.c	ELSE_2	FUNCTION_70	IF_5
0x4005cff	          0x83e801	                              sub eax, 1	      4633	gui.c	ELSE_2	FUNCTION_70	IF_5
0x4005d02	            0x4898	                                    cdqe	      4633	gui.c	ELSE_2	FUNCTION_70	IF_5
0x4005d04	        0x488945f8	                mov qword [rbp - 8], rax	      4633	gui.c	ELSE_2	FUNCTION_70	IF_5
0x4005d08	      0xe991000000	                           jmp 0x4005d9e	      4633	gui.c	ELSE_2	FUNCTION_70	IF_5
0x4005d0d	    0x488b05000000	            mov rax, qword [0x04005d14] 	      4638	gui.c	ELSE_2	FUNCTION_70	ELSE_1
0x4005d14	    0x8b8094000000	            mov eax, dword [rax + 0x94] 	      4638	gui.c	ELSE_2	FUNCTION_70	ELSE_1
0x4005d1a	            0x4898	                                    cdqe	      4638	gui.c	ELSE_2	FUNCTION_70	ELSE_1
0x4005d1c	        0x488945e8	             mov qword [rbp - 0x18], rax	      4638	gui.c	ELSE_2	FUNCTION_70	ELSE_1
0x4005d20	      0xe8c3fdffff	          call sym.gui_find_longest_lnum	      4640	gui.c	ELSE_2	FUNCTION_70	ELSE_1	CALL_1
0x4005d25	    0x488905000000	            mov qword [0x04005d2c], rax 	      4640	gui.c	ELSE_2	FUNCTION_70	ELSE_1	CALL_1
0x4005d2c	    0x488b05000000	            mov rax, qword [0x04005d33] 	      4641	gui.c	ELSE_2	FUNCTION_70	ELSE_1	CALL_2
0x4005d33	          0x4889c7	                            mov rdi, rax	      4641	gui.c	ELSE_2	FUNCTION_70	ELSE_1	CALL_2
0x4005d36	      0xe82bfdffff	                call sym.scroll_line_len	      4641	gui.c	ELSE_2	FUNCTION_70	ELSE_1	CALL_2
0x4005d3b	            0x4898	                                    cdqe	      4641	gui.c	ELSE_2	FUNCTION_70	ELSE_1	CALL_2
0x4005d3d	        0x488945f8	                mov qword [rbp - 8], rax	      4641	gui.c	ELSE_2	FUNCTION_70	ELSE_1	CALL_2
0x4005d41	      0xe800000000	                          call 0x4005d46	      4644	gui.c	ELSE_2	FUNCTION_70	ELSE_1	IF_6	CALL_3
0x4005d46	            0x85c0	                           test eax, eax	      4644	gui.c	ELSE_2	FUNCTION_70	ELSE_1	IF_6	CALL_3
0x4005d48	            0x7428	                            je 0x4005d72	      4644	gui.c	ELSE_2	FUNCTION_70	ELSE_1	IF_6	CALL_3
0x4005d4a	    0x488b05000000	            mov rax, qword [0x04005d51] 	      4647	gui.c	ELSE_2	FUNCTION_70	ELSE_1	IF_6	IF_7
0x4005d51	    0x8b80d8000000	            mov eax, dword [rax + 0xd8] 	      4647	gui.c	ELSE_2	FUNCTION_70	ELSE_1	IF_6	IF_7
0x4005d57	        0x488b55f8	                mov rdx, qword [rbp - 8]	      4647	gui.c	ELSE_2	FUNCTION_70	ELSE_1	IF_6	IF_7
0x4005d5b	            0x39d0	                            cmp eax, edx	      4647	gui.c	ELSE_2	FUNCTION_70	ELSE_1	IF_6	IF_7
0x4005d5d	            0x7c13	                            jl 0x4005d72	      4647	gui.c	ELSE_2	FUNCTION_70	ELSE_1	IF_6	IF_7
0x4005d5f	    0x488b05000000	            mov rax, qword [0x04005d66] 	      4648	gui.c	ELSE_2	FUNCTION_70	ELSE_1	IF_6	IF_7
0x4005d66	    0x8b80d8000000	            mov eax, dword [rax + 0xd8] 	      4648	gui.c	ELSE_2	FUNCTION_70	ELSE_1	IF_6	IF_7
0x4005d6c	            0x4898	                                    cdqe	      4648	gui.c	ELSE_2	FUNCTION_70	ELSE_1	IF_6	IF_7
0x4005d6e	        0x488945f8	                mov qword [rbp - 8], rax	      4648	gui.c	ELSE_2	FUNCTION_70	ELSE_1	IF_6	IF_7
0x4005d72	    0x488b05000000	            mov rax, qword [0x04005d79] 	      4653	gui.c	ELSE_2	FUNCTION_70	ELSE_1
0x4005d79	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      4653	gui.c	ELSE_2	FUNCTION_70	ELSE_1
0x4005d7f	          0x83e801	                              sub eax, 1	      4653	gui.c	ELSE_2	FUNCTION_70	ELSE_1
0x4005d82	            0x4898	                                    cdqe	      4653	gui.c	ELSE_2	FUNCTION_70	ELSE_1
0x4005d84	        0x480145f8	                add qword [rbp - 8], rax	      4653	gui.c	ELSE_2	FUNCTION_70	ELSE_1
0x4005d88	      0xe800000000	                          call 0x4005d8d	      4657	gui.c	ELSE_2	FUNCTION_70	ELSE_1	CALL_4
0x4005d8d	            0x4898	                                    cdqe	      4657	gui.c	ELSE_2	FUNCTION_70	ELSE_1	CALL_4
0x4005d8f	        0x482945f0	             sub qword [rbp - 0x10], rax	      4657	gui.c	ELSE_2	FUNCTION_70	ELSE_1	CALL_4
0x4005d93	      0xe800000000	                          call 0x4005d98	      4659	gui.c	ELSE_2	FUNCTION_70	ELSE_1	CALL_5
0x4005d98	            0x4898	                                    cdqe	      4659	gui.c	ELSE_2	FUNCTION_70	ELSE_1	CALL_5
0x4005d9a	        0x482945f8	                sub qword [rbp - 8], rax	      4659	gui.c	ELSE_2	FUNCTION_70	ELSE_1	CALL_5
0x4005d9e	        0x488b45f8	                mov rax, qword [rbp - 8]	      4664	gui.c	ELSE_2	FUNCTION_70	IF_8
0x4005da2	        0x482b45f0	             sub rax, qword [rbp - 0x10]	      4664	gui.c	ELSE_2	FUNCTION_70	IF_8
0x4005da6	        0x4883c001	                              add rax, 1	      4664	gui.c	ELSE_2	FUNCTION_70	IF_8
0x4005daa	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      4664	gui.c	ELSE_2	FUNCTION_70	IF_8
0x4005dae	            0x7d10	                           jge 0x4005dc0	      4664	gui.c	ELSE_2	FUNCTION_70	IF_8
0x4005db0	        0x488b45f8	                mov rax, qword [rbp - 8]	      4665	gui.c	ELSE_2	FUNCTION_70	IF_8
0x4005db4	        0x482b45f0	             sub rax, qword [rbp - 0x10]	      4665	gui.c	ELSE_2	FUNCTION_70	IF_8
0x4005db8	        0x4883c001	                              add rax, 1	      4665	gui.c	ELSE_2	FUNCTION_70	IF_8
0x4005dbc	        0x488945e8	             mov qword [rbp - 0x18], rax	      4665	gui.c	ELSE_2	FUNCTION_70	IF_8
0x4005dc0	    0x488b05000000	            mov rax, qword [0x04005dc7] 	      4669	gui.c	ELSE_2	FUNCTION_70	IF_9
0x4005dc7	    0x8b8054020000	           mov eax, dword [rax + 0x254] 	      4669	gui.c	ELSE_2	FUNCTION_70	IF_9
0x4005dcd	            0x85c0	                           test eax, eax	      4669	gui.c	ELSE_2	FUNCTION_70	IF_9
0x4005dcf	            0x742b	                            je 0x4005dfc	      4669	gui.c	ELSE_2	FUNCTION_70	IF_9
0x4005dd1	        0x488b45f8	                mov rax, qword [rbp - 8]	      4671	gui.c	ELSE_2	FUNCTION_70	IF_9
0x4005dd5	        0x4883c001	                              add rax, 1	      4671	gui.c	ELSE_2	FUNCTION_70	IF_9
0x4005dd9	        0x482b45f0	             sub rax, qword [rbp - 0x10]	      4671	gui.c	ELSE_2	FUNCTION_70	IF_9
0x4005ddd	        0x482b45e8	             sub rax, qword [rbp - 0x18]	      4671	gui.c	ELSE_2	FUNCTION_70	IF_9
0x4005de1	        0x488945e8	             mov qword [rbp - 0x18], rax	      4671	gui.c	ELSE_2	FUNCTION_70	IF_9
0x4005de5	      0x48837de800	               cmp qword [rbp - 0x18], 0	      4672	gui.c	ELSE_2	FUNCTION_70	IF_9	IF_10
0x4005dea	            0x7910	                           jns 0x4005dfc	      4672	gui.c	ELSE_2	FUNCTION_70	IF_9	IF_10
0x4005dec	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4674	gui.c	ELSE_2	FUNCTION_70	IF_9	IF_10
0x4005df0	        0x480145f0	            add qword [rbp - 0x10], rax 	      4674	gui.c	ELSE_2	FUNCTION_70	IF_9	IF_10
0x4005df4	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      4675	gui.c	ELSE_2	FUNCTION_70	IF_9	IF_10
0x4005dfc	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      4679	gui.c	ELSE_2	FUNCTION_70	IF_11
0x4005e00	            0x7527	                           jne 0x4005e29	      4679	gui.c	ELSE_2	FUNCTION_70	IF_11
0x4005e02	    0x488b05000000	            mov rax, qword [0x04005e09] 	      4679	gui.c	ELSE_2	FUNCTION_70	IF_11
0x4005e09	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      4679	gui.c	ELSE_2	FUNCTION_70	IF_11
0x4005e0d	            0x751a	                           jne 0x4005e29	      4679	gui.c	ELSE_2	FUNCTION_70	IF_11
0x4005e0f	    0x488b05000000	            mov rax, qword [0x04005e16] 	      4679	gui.c	ELSE_2	FUNCTION_70	IF_11
0x4005e16	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      4679	gui.c	ELSE_2	FUNCTION_70	IF_11
0x4005e1a	            0x750d	                           jne 0x4005e29	      4679	gui.c	ELSE_2	FUNCTION_70	IF_11
0x4005e1c	    0x488b05000000	            mov rax, qword [0x04005e23] 	      4680	gui.c	ELSE_2	FUNCTION_70	IF_11
0x4005e23	        0x483b45f8	                cmp rax, qword [rbp - 8]	      4680	gui.c	ELSE_2	FUNCTION_70	IF_11
0x4005e27	            0x7458	                            je 0x4005e81	      4680	gui.c	ELSE_2	FUNCTION_70	IF_11
0x4005e29	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4683	gui.c	ELSE_2	FUNCTION_70
0x4005e2d	    0x488905000000	            mov qword [0x04005e34], rax 	      4683	gui.c	ELSE_2	FUNCTION_70
0x4005e34	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4684	gui.c	ELSE_2	FUNCTION_70
0x4005e38	    0x488905000000	            mov qword [0x04005e3f], rax 	      4684	gui.c	ELSE_2	FUNCTION_70
0x4005e3f	        0x488b45f8	                mov rax, qword [rbp - 8]	      4685	gui.c	ELSE_2	FUNCTION_70
0x4005e43	    0x488905000000	            mov qword [0x04005e4a], rax 	      4685	gui.c	ELSE_2	FUNCTION_70
0x4005e4a	    0x488b05000000	            mov rax, qword [0x04005e51] 	      4686	gui.c	ELSE_2	FUNCTION_70
0x4005e51	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      4686	gui.c	ELSE_2	FUNCTION_70
0x4005e57	    0x890500000000	            mov dword [0x04005e5d], eax 	      4686	gui.c	ELSE_2	FUNCTION_70
0x4005e5d	        0x488b4df8	                mov rcx, qword [rbp - 8]	      4688	gui.c	ELSE_2	FUNCTION_70	CALL_6
0x4005e61	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      4688	gui.c	ELSE_2	FUNCTION_70	CALL_6
0x4005e65	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4688	gui.c	ELSE_2	FUNCTION_70	CALL_6
0x4005e69	          0x4889c6	                            mov rsi, rax	      4688	gui.c	ELSE_2	FUNCTION_70	CALL_6
0x4005e6c	      0xbf00000000	                              mov edi, 0	      4688	gui.c	ELSE_2	FUNCTION_70	CALL_6
0x4005e71	      0xe800000000	                          call 0x4005e76	      4688	gui.c	ELSE_2	FUNCTION_70	CALL_6
0x4005e76	            0xeb0a	                           jmp 0x4005e82	      4688	gui.c	ELSE_2	FUNCTION_70	CALL_6
0x4005e78	              0x90	                                     nop	      4608	gui.c	ELSE_2	FUNCTION_70	IF_1
0x4005e79	            0xeb07	                           jmp 0x4005e82	      4608	gui.c	ELSE_2	FUNCTION_70	IF_1
0x4005e7b	              0x90	                                     nop	      4611	gui.c	ELSE_2	FUNCTION_70	IF_2
0x4005e7c	            0xeb04	                           jmp 0x4005e82	      4611	gui.c	ELSE_2	FUNCTION_70	IF_2
0x4005e7e	              0x90	                                     nop	      4614	gui.c	ELSE_2	FUNCTION_70	IF_3
0x4005e7f	            0xeb01	                           jmp 0x4005e82	      4614	gui.c	ELSE_2	FUNCTION_70	IF_3
0x4005e81	              0x90	                                     nop	      4681	gui.c	ELSE_2	FUNCTION_70	IF_11
0x4005e82	              0xc9	                                   leave	      4689	gui.c	ELSE_2	FUNCTION_70
0x4005e83	              0xc3	                                     ret	      4689	gui.c	ELSE_2	FUNCTION_70
gui_dont_update_cursor	IF,2:functions,0:ELSE,0:CALL,1:SWITCH,0:WHILE,0:FOR,0:DO,0	14
0x400238b	              0x55	                                push rbp	      1992	gui.c	FUNCTION_31
0x400238c	          0x4889e5	                            mov rbp, rsp	      1992	gui.c	FUNCTION_31
0x400238f	        0x4883ec10	                           sub rsp, 0x10	      1992	gui.c	FUNCTION_31
0x4002393	          0x897dfc	                mov dword [rbp - 4], edi	      1992	gui.c	FUNCTION_31
0x4002396	    0x8b0500000000	            mov eax, dword [0x0400239c] 	      1993	gui.c	FUNCTION_31	IF_1
0x400239c	            0x85c0	                           test eax, eax	      1993	gui.c	FUNCTION_31	IF_1
0x400239e	            0x7415	                            je 0x40023b5	      1993	gui.c	FUNCTION_31	IF_1
0x40023a0	        0x837dfc00	                  cmp dword [rbp - 4], 0	      1996	gui.c	FUNCTION_31	IF_1	IF_2
0x40023a4	            0x7405	                            je 0x40023ab	      1996	gui.c	FUNCTION_31	IF_1	IF_2
0x40023a6	      0xe800000000	                          call 0x40023ab	      1997	gui.c	FUNCTION_31	IF_1	CALL_1
0x40023ab	    0xc70500000000	               mov dword [0x040023b5], 0	      1998	gui.c	FUNCTION_31	IF_1
0x40023b5	              0x90	                                     nop	      2000	gui.c	FUNCTION_31
0x40023b6	              0xc9	                                   leave	      2000	gui.c	FUNCTION_31
0x40023b7	              0xc3	                                     ret	      2000	gui.c	FUNCTION_31
gui_handle_drop	IF,11:functions,0:ELSE,4:CALL,27:SWITCH,0:WHILE,0:FOR,1:DO,0	166
0x40073be	              0x55	                                push rbp	      5435	gui.c	FUNCTION_93
0x40073bf	          0x4889e5	                            mov rbp, rsp	      5435	gui.c	FUNCTION_93
0x40073c2	        0x4883ec30	                           sub rsp, 0x30	      5435	gui.c	FUNCTION_93
0x40073c6	          0x897dec	             mov dword [rbp - 0x14], edi	      5435	gui.c	FUNCTION_93
0x40073c9	          0x8975e8	             mov dword [rbp - 0x18], esi	      5435	gui.c	FUNCTION_93
0x40073cc	          0x8955e4	             mov dword [rbp - 0x1c], edx	      5435	gui.c	FUNCTION_93
0x40073cf	        0x48894dd8	             mov qword [rbp - 0x28], rcx	      5435	gui.c	FUNCTION_93
0x40073d3	        0x448945e0	             mov dword [rbp - 0x20], r8d	      5435	gui.c	FUNCTION_93
0x40073d7	    0x8b0500000000	            mov eax, dword [0x040073dd] 	      5445	gui.c	FUNCTION_93	IF_1
0x40073dd	            0x85c0	                           test eax, eax	      5445	gui.c	FUNCTION_93	IF_1
0x40073df	     0xf8542020000	                           jne 0x4007627	      5445	gui.c	FUNCTION_93	IF_1
0x40073e5	    0xc70500000000	               mov dword [0x040073ef], 1	      5447	gui.c	FUNCTION_93
0x40073ef	    0x8b0500000000	            mov eax, dword [0x040073f5] 	      5453	gui.c	FUNCTION_93	IF_2
0x40073f5	          0x83e008	                              and eax, 8	      5453	gui.c	FUNCTION_93	IF_2
0x40073f8	            0x85c0	                           test eax, eax	      5453	gui.c	FUNCTION_93	IF_2
0x40073fa	     0xf84e9000000	                            je 0x40074e9	      5453	gui.c	FUNCTION_93	IF_2
0x4007400	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      5455	gui.c	FUNCTION_93	IF_2	CALL_1
0x4007403	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5455	gui.c	FUNCTION_93	IF_2	CALL_1
0x4007407	            0x89d6	                            mov esi, edx	      5455	gui.c	FUNCTION_93	IF_2	CALL_1
0x4007409	          0x4889c7	                            mov rdi, rax	      5455	gui.c	FUNCTION_93	IF_2	CALL_1
0x400740c	      0xe800000000	                          call 0x4007411	      5455	gui.c	FUNCTION_93	IF_2	CALL_1
0x4007411	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      5456	gui.c	FUNCTION_93	IF_2	FOR_1
0x4007418	      0xe9af000000	                           jmp 0x40074cc	      5456	gui.c	FUNCTION_93	IF_2	FOR_1
0x400741d	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      5458	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3
0x4007420	            0x4898	                                    cdqe	      5458	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3
0x4007422	    0x488d14c50000	                        lea rdx, [rax*8]	      5458	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3
0x400742a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5458	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3
0x400742e	          0x4801d0	                            add rax, rdx	      5458	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3
0x4007431	          0x488b00	                    mov rax, qword [rax]	      5458	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3
0x4007434	          0x4885c0	                           test rax, rax	      5458	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3
0x4007437	     0xf848b000000	                            je 0x40074c8	      5458	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3
0x400743d	        0x837df400	                cmp dword [rbp - 0xc], 0	      5460	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	IF_4
0x4007441	            0x7e0f	                           jle 0x4007452	      5460	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	IF_4
0x4007443	      0xbe01000000	                              mov esi, 1	      5461	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_2
0x4007448	      0xbf00000000	                              mov edi, 0	      5461	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_2
0x400744d	      0xe800000000	                          call 0x4007452	      5461	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_2
0x4007452	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      5469	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_4
0x4007455	            0x4898	                                    cdqe	      5469	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_4
0x4007457	    0x488d14c50000	                        lea rdx, [rax*8]	      5469	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_4
0x400745f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5469	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_4
0x4007463	          0x4801d0	                            add rax, rdx	      5469	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_4
0x4007466	          0x488b00	                    mov rax, qword [rax]	      5469	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_4
0x4007469	      0xbe00000000	                              mov esi, 0	      5469	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_4
0x400746e	          0x4889c7	                            mov rdi, rax	      5469	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_4
0x4007471	      0xe800000000	                          call 0x4007476	      5469	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_4
0x4007476	        0x488945f8	                mov qword [rbp - 8], rax	      5469	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_4
0x400747a	      0x48837df800	                  cmp qword [rbp - 8], 0	      5471	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	IF_5
0x400747f	            0x741c	                            je 0x400749d	      5471	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	IF_5
0x4007481	        0x488b45f8	                mov rax, qword [rbp - 8]	      5472	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_6
0x4007485	          0x4889c7	                            mov rdi, rax	      5472	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_6
0x4007488	      0xe800000000	                          call 0x400748d	      5472	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_6
0x400748d	            0x89c2	                            mov edx, eax	      5472	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_6
0x400748f	        0x488b45f8	                mov rax, qword [rbp - 8]	      5472	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_6
0x4007493	            0x89d6	                            mov esi, edx	      5472	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_6
0x4007495	          0x4889c7	                            mov rdi, rax	      5472	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_6
0x4007498	      0xe800000000	                          call 0x400749d	      5472	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_6
0x400749d	        0x488b45f8	                mov rax, qword [rbp - 8]	      5473	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_7
0x40074a1	          0x4889c7	                            mov rdi, rax	      5473	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_7
0x40074a4	      0xe800000000	                          call 0x40074a9	      5473	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_7
0x40074a9	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      5474	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_8
0x40074ac	            0x4898	                                    cdqe	      5474	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_8
0x40074ae	    0x488d14c50000	                        lea rdx, [rax*8]	      5474	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_8
0x40074b6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5474	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_8
0x40074ba	          0x4801d0	                            add rax, rdx	      5474	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_8
0x40074bd	          0x488b00	                    mov rax, qword [rax]	      5474	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_8
0x40074c0	          0x4889c7	                            mov rdi, rax	      5474	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_8
0x40074c3	      0xe800000000	                          call 0x40074c8	      5474	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_8
0x40074c8	        0x8345f401	                add dword [rbp - 0xc], 1	      5456	gui.c	FUNCTION_93	IF_2	FOR_1
0x40074cc	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      5456	gui.c	FUNCTION_93	IF_2	FOR_1
0x40074cf	          0x3b45e0	             cmp eax, dword [rbp - 0x20]	      5456	gui.c	FUNCTION_93	IF_2	FOR_1
0x40074d2	     0xf8c45ffffff	                            jl 0x400741d	      5456	gui.c	FUNCTION_93	IF_2	FOR_1
0x40074d8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5477	gui.c	FUNCTION_93	IF_2	CALL_9
0x40074dc	          0x4889c7	                            mov rdi, rax	      5477	gui.c	FUNCTION_93	IF_2	CALL_9
0x40074df	      0xe800000000	                          call 0x40074e4	      5477	gui.c	FUNCTION_93	IF_2	CALL_9
0x40074e4	      0xe932010000	                           jmp 0x400761b	      5477	gui.c	FUNCTION_93	IF_2	CALL_9
0x40074e9	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      5483	gui.c	FUNCTION_93	ELSE_1	CALL_10
0x40074ec	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      5483	gui.c	FUNCTION_93	ELSE_1	CALL_10
0x40074ef	            0x89d6	                            mov esi, edx	      5483	gui.c	FUNCTION_93	ELSE_1	CALL_10
0x40074f1	            0x89c7	                            mov edi, eax	      5483	gui.c	FUNCTION_93	ELSE_1	CALL_10
0x40074f3	      0xe81bfeffff	                 call sym.gui_wingoto_xy	      5483	gui.c	FUNCTION_93	ELSE_1	CALL_10
0x40074f8	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      5484	gui.c	FUNCTION_93	ELSE_1	CALL_11
0x40074fb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5484	gui.c	FUNCTION_93	ELSE_1	CALL_11
0x40074ff	            0x89d6	                            mov esi, edx	      5484	gui.c	FUNCTION_93	ELSE_1	CALL_11
0x4007501	          0x4889c7	                            mov rdi, rax	      5484	gui.c	FUNCTION_93	ELSE_1	CALL_11
0x4007504	      0xe800000000	                          call 0x4007509	      5484	gui.c	FUNCTION_93	ELSE_1	CALL_11
0x4007509	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      5487	gui.c	FUNCTION_93	ELSE_1	IF_6
0x400750c	          0x83e004	                              and eax, 4	      5487	gui.c	FUNCTION_93	ELSE_1	IF_6
0x400750f	            0x85c0	                           test eax, eax	      5487	gui.c	FUNCTION_93	ELSE_1	IF_6
0x4007511	            0x7415	                            je 0x4007528	      5487	gui.c	FUNCTION_93	ELSE_1	IF_6
0x4007513	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5488	gui.c	FUNCTION_93	ELSE_1	CALL_12
0x4007517	          0x488b00	                    mov rax, qword [rax]	      5488	gui.c	FUNCTION_93	ELSE_1	CALL_12
0x400751a	          0x4889c7	                            mov rdi, rax	      5488	gui.c	FUNCTION_93	ELSE_1	CALL_12
0x400751d	      0xe800000000	                          call 0x4007522	      5488	gui.c	FUNCTION_93	ELSE_1	CALL_12
0x4007522	        0x488945f8	                mov qword [rbp - 8], rax	      5488	gui.c	FUNCTION_93	ELSE_1	CALL_12
0x4007526	            0xeb08	                           jmp 0x4007530	      5488	gui.c	FUNCTION_93	ELSE_1	CALL_12
0x4007528	    0x48c745f80000	                  mov qword [rbp - 8], 0	      5490	gui.c	FUNCTION_93	ELSE_1	ELSE_2
0x4007530	        0x837de001	               cmp dword [rbp - 0x20], 1	      5495	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7
0x4007534	            0x753a	                           jne 0x4007570	      5495	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7
0x4007536	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      5495	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7
0x4007539	          0x83e004	                              and eax, 4	      5495	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7
0x400753c	            0x85c0	                           test eax, eax	      5495	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7
0x400753e	            0x7430	                            je 0x4007570	      5495	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7
0x4007540	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5496	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7	CALL_13
0x4007544	          0x488b00	                    mov rax, qword [rax]	      5496	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7	CALL_13
0x4007547	          0x4889c7	                            mov rdi, rax	      5496	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7	CALL_13
0x400754a	      0xe800000000	                          call 0x400754f	      5496	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7	CALL_13
0x400754f	            0x85c0	                           test eax, eax	      5496	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7	CALL_13
0x4007551	            0x741d	                            je 0x4007570	      5496	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7	CALL_13
0x4007553	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5498	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7	CALL_14
0x4007557	          0x488b00	                    mov rax, qword [rax]	      5498	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7	CALL_14
0x400755a	          0x4889c7	                            mov rdi, rax	      5498	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7	CALL_14
0x400755d	      0xe800000000	                          call 0x4007562	      5498	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7	CALL_14
0x4007562	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5499	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7	CALL_15
0x4007566	          0x4889c7	                            mov rdi, rax	      5499	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7	CALL_15
0x4007569	      0xe800000000	                          call 0x400756e	      5499	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7	CALL_15
0x400756e	            0xeb1f	                           jmp 0x400758f	      5499	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7	CALL_15
0x4007570	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      5502	gui.c	FUNCTION_93	ELSE_1	CALL_16
0x4007573	          0x83e010	                           and eax, 0x10	      5502	gui.c	FUNCTION_93	ELSE_1	CALL_16
0x4007576	            0x85c0	                           test eax, eax	      5502	gui.c	FUNCTION_93	ELSE_1	CALL_16
0x4007578	           0xf95c0	                                setne al	      5502	gui.c	FUNCTION_93	ELSE_1	CALL_16
0x400757b	           0xfb6d0	                           movzx edx, al	      5502	gui.c	FUNCTION_93	ELSE_1	CALL_16
0x400757e	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      5502	gui.c	FUNCTION_93	ELSE_1	CALL_16
0x4007582	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      5502	gui.c	FUNCTION_93	ELSE_1	CALL_16
0x4007585	          0x4889ce	                            mov rsi, rcx	      5502	gui.c	FUNCTION_93	ELSE_1	CALL_16
0x4007588	            0x89c7	                            mov edi, eax	      5502	gui.c	FUNCTION_93	ELSE_1	CALL_16
0x400758a	      0xe800000000	                          call 0x400758f	      5502	gui.c	FUNCTION_93	ELSE_1	CALL_16
0x400758f	      0x48837df800	                  cmp qword [rbp - 8], 0	      5507	gui.c	FUNCTION_93	ELSE_1	IF_8
0x4007594	            0x7458	                            je 0x40075ee	      5507	gui.c	FUNCTION_93	ELSE_1	IF_8
0x4007596	        0x488b45f8	                mov rax, qword [rbp - 8]	      5509	gui.c	FUNCTION_93	ELSE_1	IF_8	IF_9	CALL_17
0x400759a	          0x4889c7	                            mov rdi, rax	      5509	gui.c	FUNCTION_93	ELSE_1	IF_8	IF_9	CALL_17
0x400759d	      0xe800000000	                          call 0x40075a2	      5509	gui.c	FUNCTION_93	ELSE_1	IF_8	IF_9	CALL_17
0x40075a2	            0x85c0	                           test eax, eax	      5509	gui.c	FUNCTION_93	ELSE_1	IF_8	IF_9	CALL_17
0x40075a4	            0x741c	                            je 0x40075c2	      5509	gui.c	FUNCTION_93	ELSE_1	IF_8	IF_9	CALL_17
0x40075a6	        0x488b45f8	                mov rax, qword [rbp - 8]	      5511	gui.c	FUNCTION_93	ELSE_1	IF_8	IF_9	IF_10	CALL_18
0x40075aa	          0x4889c7	                            mov rdi, rax	      5511	gui.c	FUNCTION_93	ELSE_1	IF_8	IF_9	IF_10	CALL_18
0x40075ad	      0xe800000000	                          call 0x40075b2	      5511	gui.c	FUNCTION_93	ELSE_1	IF_8	IF_9	IF_10	CALL_18
0x40075b2	            0x85c0	                           test eax, eax	      5511	gui.c	FUNCTION_93	ELSE_1	IF_8	IF_9	IF_10	CALL_18
0x40075b4	            0x752c	                           jne 0x40075e2	      5511	gui.c	FUNCTION_93	ELSE_1	IF_8	IF_9	IF_10	CALL_18
0x40075b6	      0xbf01000000	                              mov edi, 1	      5512	gui.c	FUNCTION_93	ELSE_1	IF_8	IF_9	CALL_19
0x40075bb	      0xe800000000	                          call 0x40075c0	      5512	gui.c	FUNCTION_93	ELSE_1	IF_8	IF_9	CALL_19
0x40075c0	            0xeb20	                           jmp 0x40075e2	      5512	gui.c	FUNCTION_93	ELSE_1	IF_8	IF_9	CALL_19
0x40075c2	        0x488b45f8	                mov rax, qword [rbp - 8]	      5514	gui.c	FUNCTION_93	ELSE_1	IF_8	ELSE_4	IF_11	CALL_20
0x40075c6	      0xbe00000000	                              mov esi, 0	      5514	gui.c	FUNCTION_93	ELSE_1	IF_8	ELSE_4	IF_11	CALL_20
0x40075cb	          0x4889c7	                            mov rdi, rax	      5514	gui.c	FUNCTION_93	ELSE_1	IF_8	ELSE_4	IF_11	CALL_20
0x40075ce	      0xe800000000	                          call 0x40075d3	      5514	gui.c	FUNCTION_93	ELSE_1	IF_8	ELSE_4	IF_11	CALL_20
0x40075d3	          0x83f801	                              cmp eax, 1	      5514	gui.c	FUNCTION_93	ELSE_1	IF_8	ELSE_4	IF_11	CALL_20
0x40075d6	            0x750a	                           jne 0x40075e2	      5514	gui.c	FUNCTION_93	ELSE_1	IF_8	ELSE_4	IF_11	CALL_20
0x40075d8	      0xbf01000000	                              mov edi, 1	      5515	gui.c	FUNCTION_93	ELSE_1	IF_8	ELSE_4	IF_11
0x40075dd	      0xe800000000	                          call 0x40075e2	      5515	gui.c	FUNCTION_93	ELSE_1	IF_8	ELSE_4	IF_11
0x40075e2	        0x488b45f8	                mov rax, qword [rbp - 8]	      5516	gui.c	FUNCTION_93	ELSE_1	IF_8	CALL_22
0x40075e6	          0x4889c7	                            mov rdi, rax	      5516	gui.c	FUNCTION_93	ELSE_1	IF_8	CALL_22
0x40075e9	      0xe800000000	                          call 0x40075ee	      5516	gui.c	FUNCTION_93	ELSE_1	IF_8	CALL_22
0x40075ee	      0xbf28000000	                           mov edi, 0x28	      5520	gui.c	FUNCTION_93	ELSE_1	CALL_23
0x40075f3	      0xe800000000	                          call 0x40075f8	      5520	gui.c	FUNCTION_93	ELSE_1	CALL_23
0x40075f8	      0xbf00000000	                              mov edi, 0	      5522	gui.c	FUNCTION_93	ELSE_1	CALL_24
0x40075fd	      0xe800000000	                          call 0x4007602	      5522	gui.c	FUNCTION_93	ELSE_1	CALL_24
0x4007602	      0xe800000000	                          call 0x4007607	      5525	gui.c	FUNCTION_93	ELSE_1	CALL_25
0x4007607	      0xe800000000	                          call 0x400760c	      5527	gui.c	FUNCTION_93	ELSE_1	CALL_26
0x400760c	      0xbe00000000	                              mov esi, 0	      5528	gui.c	FUNCTION_93	ELSE_1	CALL_27
0x4007611	      0xbf00000000	                              mov edi, 0	      5528	gui.c	FUNCTION_93	ELSE_1	CALL_27
0x4007616	      0xe800000000	                          call 0x400761b	      5528	gui.c	FUNCTION_93	ELSE_1	CALL_27
0x400761b	    0xc70500000000	               mov dword [0x04007625], 0	      5531	gui.c	FUNCTION_93
0x4007625	            0xeb01	                           jmp 0x4007628	      5531	gui.c	FUNCTION_93
0x4007627	              0x90	                                     nop	      5446	gui.c	FUNCTION_93	IF_1
0x4007628	              0xc9	                                   leave	      5532	gui.c	FUNCTION_93
0x4007629	              0xc3	                                     ret	      5532	gui.c	FUNCTION_93
gui_do_horiz_scroll	IF,5:functions,0:ELSE,1:CALL,5:SWITCH,0:WHILE,0:FOR,0:DO,0	67
0x4005e84	              0x55	                                push rbp	      4696	gui.c	FUNCTION_71
0x4005e85	          0x4889e5	                            mov rbp, rsp	      4696	gui.c	FUNCTION_71
0x4005e88	              0x53	                                push rbx	      4696	gui.c	FUNCTION_71
0x4005e89	        0x4883ec18	                           sub rsp, 0x18	      4696	gui.c	FUNCTION_71
0x4005e8d	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4696	gui.c	FUNCTION_71
0x4005e91	          0x8975e4	             mov dword [rbp - 0x1c], esi	      4696	gui.c	FUNCTION_71
0x4005e94	    0x488b05000000	            mov rax, qword [0x04005e9b] 	      4698	gui.c	FUNCTION_71	IF_1
0x4005e9b	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      4698	gui.c	FUNCTION_71	IF_1
0x4005ea1	            0x85c0	                           test eax, eax	      4698	gui.c	FUNCTION_71	IF_1
0x4005ea3	            0x740a	                            je 0x4005eaf	      4698	gui.c	FUNCTION_71	IF_1
0x4005ea5	      0xb800000000	                              mov eax, 0	      4699	gui.c	FUNCTION_71	IF_1
0x4005eaa	      0xe9f3000000	                           jmp 0x4005fa2	      4699	gui.c	FUNCTION_71	IF_1
0x4005eaf	    0x488b05000000	            mov rax, qword [0x04005eb6] 	      4701	gui.c	FUNCTION_71	IF_2
0x4005eb6	    0x8b8094000000	            mov eax, dword [rax + 0x94] 	      4701	gui.c	FUNCTION_71	IF_2
0x4005ebc	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      4701	gui.c	FUNCTION_71	IF_2
0x4005ec0	            0x39d0	                            cmp eax, edx	      4701	gui.c	FUNCTION_71	IF_2
0x4005ec2	            0x750a	                           jne 0x4005ece	      4701	gui.c	FUNCTION_71	IF_2
0x4005ec4	      0xb800000000	                              mov eax, 0	      4702	gui.c	FUNCTION_71	IF_2
0x4005ec9	      0xe9d4000000	                           jmp 0x4005fa2	      4702	gui.c	FUNCTION_71	IF_2
0x4005ece	    0x488b05000000	            mov rax, qword [0x04005ed5] 	      4704	gui.c	FUNCTION_71
0x4005ed5	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      4704	gui.c	FUNCTION_71
0x4005ed9	    0x899094000000	             mov dword [rax + 0x94], edx	      4704	gui.c	FUNCTION_71
0x4005edf	    0x488b05000000	            mov rax, qword [0x04005ee6] 	      4708	gui.c	FUNCTION_71	IF_3	CALL_1
0x4005ee6	      0xbe68000000	                           mov esi, 0x68	      4708	gui.c	FUNCTION_71	IF_3	CALL_1
0x4005eeb	          0x4889c7	                            mov rdi, rax	      4708	gui.c	FUNCTION_71	IF_3	CALL_1
0x4005eee	      0xe800000000	                          call 0x4005ef3	      4708	gui.c	FUNCTION_71	IF_3	CALL_1
0x4005ef3	          0x4885c0	                           test rax, rax	      4708	gui.c	FUNCTION_71	IF_3	CALL_1
0x4005ef6	     0xf85a1000000	                           jne 0x4005f9d	      4708	gui.c	FUNCTION_71	IF_3	CALL_1
0x4005efc	      0xe800000000	                          call 0x4005f01	      4709	gui.c	FUNCTION_71	IF_3	CALL_2
0x4005f01	            0x85c0	                           test eax, eax	      4709	gui.c	FUNCTION_71	IF_3	CALL_2
0x4005f03	     0xf8594000000	                           jne 0x4005f9d	      4709	gui.c	FUNCTION_71	IF_3	CALL_2
0x4005f09	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4710	gui.c	FUNCTION_71	IF_3	CALL_3
0x4005f0d	            0x89c3	                            mov ebx, eax	      4710	gui.c	FUNCTION_71	IF_3	CALL_3
0x4005f0f	    0x488b05000000	            mov rax, qword [0x04005f16] 	      4710	gui.c	FUNCTION_71	IF_3	CALL_3
0x4005f16	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4710	gui.c	FUNCTION_71	IF_3	CALL_3
0x4005f1a	          0x4889c7	                            mov rdi, rax	      4710	gui.c	FUNCTION_71	IF_3	CALL_3
0x4005f1d	      0xe844fbffff	                call sym.scroll_line_len	      4710	gui.c	FUNCTION_71	IF_3	CALL_3
0x4005f22	            0x39c3	                            cmp ebx, eax	      4710	gui.c	FUNCTION_71	IF_3	CALL_3
0x4005f24	            0x7e77	                           jle 0x4005f9d	      4710	gui.c	FUNCTION_71	IF_3	CALL_3
0x4005f26	        0x837de400	               cmp dword [rbp - 0x1c], 0	      4712	gui.c	FUNCTION_71	IF_3	IF_4
0x4005f2a	            0x7420	                            je 0x4005f4c	      4712	gui.c	FUNCTION_71	IF_3	IF_4
0x4005f2c	    0x488b1d000000	            mov rbx, qword [0x04005f33] 	      4714	gui.c	FUNCTION_71	IF_3	IF_4	CALL_4
0x4005f33	      0xe8b0fbffff	          call sym.gui_find_longest_lnum	      4714	gui.c	FUNCTION_71	IF_3	IF_4	CALL_4
0x4005f38	        0x48894338	             mov qword [rbx + 0x38], rax	      4714	gui.c	FUNCTION_71	IF_3	IF_4	CALL_4
0x4005f3c	    0x488b05000000	            mov rax, qword [0x04005f43] 	      4715	gui.c	FUNCTION_71	IF_3	IF_4
0x4005f43	    0xc74040000000	               mov dword [rax + 0x40], 0	      4715	gui.c	FUNCTION_71	IF_3	IF_4
0x4005f4a	            0xeb51	                           jmp 0x4005f9d	      4715	gui.c	FUNCTION_71	IF_3	IF_4
0x4005f4c	    0x488b05000000	            mov rax, qword [0x04005f53] 	      4718	gui.c	FUNCTION_71	IF_3	ELSE_1	IF_5
0x4005f53	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      4718	gui.c	FUNCTION_71	IF_3	ELSE_1	IF_5
0x4005f57	    0x488b05000000	            mov rax, qword [0x04005f5e] 	      4718	gui.c	FUNCTION_71	IF_3	ELSE_1	IF_5
0x4005f5e	          0x4839c2	                            cmp rdx, rax	      4718	gui.c	FUNCTION_71	IF_3	ELSE_1	IF_5
0x4005f61	            0x7f3a	                            jg 0x4005f9d	      4718	gui.c	FUNCTION_71	IF_3	ELSE_1	IF_5
0x4005f63	    0x488b05000000	            mov rax, qword [0x04005f6a] 	      4719	gui.c	FUNCTION_71	IF_3	ELSE_1	IF_5
0x4005f6a	    0x488b90e80000	            mov rdx, qword [rax + 0xe8] 	      4719	gui.c	FUNCTION_71	IF_3	ELSE_1	IF_5
0x4005f71	    0x488b05000000	            mov rax, qword [0x04005f78] 	      4719	gui.c	FUNCTION_71	IF_3	ELSE_1	IF_5
0x4005f78	          0x4839c2	                            cmp rdx, rax	      4719	gui.c	FUNCTION_71	IF_3	ELSE_1	IF_5
0x4005f7b	            0x7e20	                           jle 0x4005f9d	      4719	gui.c	FUNCTION_71	IF_3	ELSE_1	IF_5
0x4005f7d	    0x488b05000000	            mov rax, qword [0x04005f84] 	      4721	gui.c	FUNCTION_71	IF_3	ELSE_1	IF_5
0x4005f84	    0x488b15000000	            mov rdx, qword [0x04005f8b] 	      4721	gui.c	FUNCTION_71	IF_3	ELSE_1	IF_5
0x4005f8b	        0x48895038	             mov qword [rax + 0x38], rdx	      4721	gui.c	FUNCTION_71	IF_3	ELSE_1	IF_5
0x4005f8f	    0x488b05000000	            mov rax, qword [0x04005f96] 	      4722	gui.c	FUNCTION_71	IF_3	ELSE_1	IF_5
0x4005f96	    0xc74040000000	               mov dword [rax + 0x40], 0	      4722	gui.c	FUNCTION_71	IF_3	ELSE_1	IF_5
0x4005f9d	      0xe800000000	                          call 0x4005fa2	      4726	gui.c	FUNCTION_71	CALL_5
0x4005fa2	        0x4883c418	                           add rsp, 0x18	      4727	gui.c	FUNCTION_71
0x4005fa6	              0x5b	                                 pop rbx	      4727	gui.c	FUNCTION_71
0x4005fa7	              0x5d	                                 pop rbp	      4727	gui.c	FUNCTION_71
0x4005fa8	              0xc3	                                     ret	      4727	gui.c	FUNCTION_71
gui_outstr_nowrap	IF,54:functions,0:ELSE,20:CALL,28:SWITCH,0:WHILE,0:FOR,1:DO,0	246
0x4002a23	              0x55	                                push rbp	      2234	gui.c	FUNCTION_39
0x4002a24	          0x4889e5	                            mov rbp, rsp	      2234	gui.c	FUNCTION_39
0x4002a27	        0x4883ec70	                           sub rsp, 0x70	      2234	gui.c	FUNCTION_39
0x4002a2b	        0x48897db8	             mov qword [rbp - 0x48], rdi	      2234	gui.c	FUNCTION_39
0x4002a2f	          0x8975b4	             mov dword [rbp - 0x4c], esi	      2234	gui.c	FUNCTION_39
0x4002a32	          0x8955b0	             mov dword [rbp - 0x50], edx	      2234	gui.c	FUNCTION_39
0x4002a35	        0x48894da8	             mov qword [rbp - 0x58], rcx	      2234	gui.c	FUNCTION_39
0x4002a39	        0x4c8945a0	              mov qword [rbp - 0x60], r8	      2234	gui.c	FUNCTION_39
0x4002a3d	        0x44894d9c	             mov dword [rbp - 0x64], r9d	      2234	gui.c	FUNCTION_39
0x4002a41	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      2249	gui.c	FUNCTION_39
0x4002a49	    0x8b0500000000	            mov eax, dword [0x04002a4f] 	      2251	gui.c	FUNCTION_39
0x4002a4f	          0x8945c4	             mov dword [rbp - 0x3c], eax	      2251	gui.c	FUNCTION_39
0x4002a52	    0xc745c8000000	               mov dword [rbp - 0x38], 0	      2253	gui.c	FUNCTION_39
0x4002a59	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      2255	gui.c	FUNCTION_39
0x4002a60	        0x837db400	               cmp dword [rbp - 0x4c], 0	      2259	gui.c	FUNCTION_39	IF_1
0x4002a64	            0x790f	                           jns 0x4002a75	      2259	gui.c	FUNCTION_39	IF_1
0x4002a66	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2260	gui.c	FUNCTION_39	CALL_1
0x4002a6a	          0x4889c7	                            mov rdi, rax	      2260	gui.c	FUNCTION_39	CALL_1
0x4002a6d	      0xe800000000	                          call 0x4002a72	      2260	gui.c	FUNCTION_39	CALL_1
0x4002a72	          0x8945b4	             mov dword [rbp - 0x4c], eax	      2260	gui.c	FUNCTION_39	CALL_1
0x4002a75	        0x837db400	               cmp dword [rbp - 0x4c], 0	      2261	gui.c	FUNCTION_39	IF_2
0x4002a79	            0x750a	                           jne 0x4002a85	      2261	gui.c	FUNCTION_39	IF_2
0x4002a7b	      0xb801000000	                              mov eax, 1	      2262	gui.c	FUNCTION_39	IF_2
0x4002a80	      0xe926030000	                           jmp 0x4002dab	      2262	gui.c	FUNCTION_39	IF_2
0x4002a85	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2265	gui.c	FUNCTION_39	IF_3
0x4002a89	           0xfb600	                   movzx eax, byte [rax]	      2265	gui.c	FUNCTION_39	IF_3
0x4002a8c	            0x3c01	                               cmp al, 1	      2265	gui.c	FUNCTION_39	IF_3
0x4002a8e	            0x740b	                            je 0x4002a9b	      2265	gui.c	FUNCTION_39	IF_3
0x4002a90	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2267	gui.c	FUNCTION_39	IF_3
0x4002a94	           0xfb600	                   movzx eax, byte [rax]	      2267	gui.c	FUNCTION_39	IF_3
0x4002a97	            0x3c02	                               cmp al, 2	      2267	gui.c	FUNCTION_39	IF_3
0x4002a99	            0x7542	                           jne 0x4002add	      2267	gui.c	FUNCTION_39	IF_3
0x4002a9b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2272	gui.c	FUNCTION_39	IF_3	IF_4
0x4002a9f	           0xfb600	                   movzx eax, byte [rax]	      2272	gui.c	FUNCTION_39	IF_3	IF_4
0x4002aa2	            0x3c02	                               cmp al, 2	      2272	gui.c	FUNCTION_39	IF_3	IF_4
0x4002aa4	            0x7507	                           jne 0x4002aad	      2272	gui.c	FUNCTION_39	IF_3	IF_4
0x4002aa6	    0xc745cc010000	               mov dword [rbp - 0x34], 1	      2273	gui.c	FUNCTION_39	IF_3	IF_4
0x4002aad	    0x48c745b80000	               mov qword [rbp - 0x48], 0	      2276	gui.c	FUNCTION_39	IF_3
0x4002ab5	        0x837db401	               cmp dword [rbp - 0x4c], 1	      2277	gui.c	FUNCTION_39	IF_3	IF_5
0x4002ab9	            0x750a	                           jne 0x4002ac5	      2277	gui.c	FUNCTION_39	IF_3	IF_5
0x4002abb	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      2277	gui.c	FUNCTION_39	IF_3	IF_5
0x4002abf	            0x7e04	                           jle 0x4002ac5	      2277	gui.c	FUNCTION_39	IF_3	IF_5
0x4002ac1	        0x836dc401	               sub dword [rbp - 0x3c], 1	      2278	gui.c	FUNCTION_39	IF_3	IF_5
0x4002ac5	    0xc745b4020000	               mov dword [rbp - 0x4c], 2	      2279	gui.c	FUNCTION_39	IF_3
0x4002acc	    0xc745c8010000	               mov dword [rbp - 0x38], 1	      2280	gui.c	FUNCTION_39	IF_3
0x4002ad3	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      2281	gui.c	FUNCTION_39	IF_3
0x4002adb	            0xeb4c	                           jmp 0x4002b29	      2281	gui.c	FUNCTION_39	IF_3
0x4002add	    0x8b0500000000	            mov eax, dword [0x04002ae3] 	      2285	gui.c	FUNCTION_39	ELSE_1	IF_6
0x4002ae3	      0x3dff000000	                           cmp eax, 0xff	      2285	gui.c	FUNCTION_39	ELSE_1	IF_6
0x4002ae8	            0x7e33	                           jle 0x4002b1d	      2285	gui.c	FUNCTION_39	ELSE_1	IF_6
0x4002aea	    0x8b0500000000	            mov eax, dword [0x04002af0] 	      2287	gui.c	FUNCTION_39	ELSE_1	IF_6	CALL_2
0x4002af0	            0x89c7	                            mov edi, eax	      2287	gui.c	FUNCTION_39	ELSE_1	IF_6	CALL_2
0x4002af2	      0xe800000000	                          call 0x4002af7	      2287	gui.c	FUNCTION_39	ELSE_1	IF_6	CALL_2
0x4002af7	        0x488945f0	             mov qword [rbp - 0x10], rax	      2287	gui.c	FUNCTION_39	ELSE_1	IF_6	CALL_2
0x4002afb	      0x48837df000	               cmp qword [rbp - 0x10], 0	      2288	gui.c	FUNCTION_39	ELSE_1	IF_6	IF_7
0x4002b00	            0x750a	                           jne 0x4002b0c	      2288	gui.c	FUNCTION_39	ELSE_1	IF_6	IF_7
0x4002b02	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      2289	gui.c	FUNCTION_39	ELSE_1	IF_6	IF_7
0x4002b0a	            0xeb1d	                           jmp 0x4002b29	      2289	gui.c	FUNCTION_39	ELSE_1	IF_6	IF_7
0x4002b0c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2291	gui.c	FUNCTION_39	ELSE_1	IF_6	ELSE_2
0x4002b10	           0xfb700	                   movzx eax, word [rax]	      2291	gui.c	FUNCTION_39	ELSE_1	IF_6	ELSE_2
0x4002b13	        0x480fbfc0	                           movsx rax, ax	      2291	gui.c	FUNCTION_39	ELSE_1	IF_6	ELSE_2
0x4002b17	        0x488945d0	             mov qword [rbp - 0x30], rax	      2291	gui.c	FUNCTION_39	ELSE_1	IF_6	ELSE_2
0x4002b1b	            0xeb0c	                           jmp 0x4002b29	      2291	gui.c	FUNCTION_39	ELSE_1	IF_6	ELSE_2
0x4002b1d	    0x8b0500000000	            mov eax, dword [0x04002b23] 	      2294	gui.c	FUNCTION_39	ELSE_3
0x4002b23	            0x4898	                                    cdqe	      2294	gui.c	FUNCTION_39	ELSE_3
0x4002b25	        0x488945d0	             mov qword [rbp - 0x30], rax	      2294	gui.c	FUNCTION_39	ELSE_3
0x4002b29	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2295	gui.c	FUNCTION_39
0x4002b2d	        0x488945f8	                mov qword [rbp - 8], rax	      2295	gui.c	FUNCTION_39
0x4002b31	    0xc745c0000000	               mov dword [rbp - 0x40], 0	      2360	gui.c	FUNCTION_39
0x4002b38	    0x488b05000000	            mov rax, qword [0x04002b3f] 	      2363	gui.c	FUNCTION_39
0x4002b3f	        0x488945e0	             mov qword [rbp - 0x20], rax	      2363	gui.c	FUNCTION_39
0x4002b43	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      2364	gui.c	FUNCTION_39	IF_20
0x4002b46	          0x83e004	                              and eax, 4	      2364	gui.c	FUNCTION_39	IF_20
0x4002b49	            0x85c0	                           test eax, eax	      2364	gui.c	FUNCTION_39	IF_20
0x4002b4b	            0x7428	                            je 0x4002b75	      2364	gui.c	FUNCTION_39	IF_20
0x4002b4d	    0x8b0500000000	            mov eax, dword [0x04002b53] 	      2364	gui.c	FUNCTION_39	IF_20
0x4002b53	            0x85c0	                           test eax, eax	      2364	gui.c	FUNCTION_39	IF_20
0x4002b55	            0x741e	                            je 0x4002b75	      2364	gui.c	FUNCTION_39	IF_20
0x4002b57	        0x834dc020	             or dword [rbp - 0x40], 0x20	      2366	gui.c	FUNCTION_39	IF_20
0x4002b5b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2367	gui.c	FUNCTION_39	IF_20
0x4002b5f	        0x488945d8	             mov qword [rbp - 0x28], rax	      2367	gui.c	FUNCTION_39	IF_20
0x4002b63	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2368	gui.c	FUNCTION_39	IF_20
0x4002b67	        0x488945e0	             mov qword [rbp - 0x20], rax	      2368	gui.c	FUNCTION_39	IF_20
0x4002b6b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2369	gui.c	FUNCTION_39	IF_20
0x4002b6f	        0x488945e8	             mov qword [rbp - 0x18], rax	      2369	gui.c	FUNCTION_39	IF_20
0x4002b73	            0xeb7c	                           jmp 0x4002bf1	      2369	gui.c	FUNCTION_39	IF_20
0x4002b75	      0x48837df000	               cmp qword [rbp - 0x10], 0	      2371	gui.c	FUNCTION_39	ELSE_15	IF_21
0x4002b7a	            0x7462	                            je 0x4002bde	      2371	gui.c	FUNCTION_39	ELSE_15	IF_21
0x4002b7c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2373	gui.c	FUNCTION_39	ELSE_15	IF_21
0x4002b80	        0x488b4008	                mov rax, qword [rax + 8]	      2373	gui.c	FUNCTION_39	ELSE_15	IF_21
0x4002b84	        0x488945d8	             mov qword [rbp - 0x28], rax	      2373	gui.c	FUNCTION_39	ELSE_15	IF_21
0x4002b88	    0x48817dd899d4	cmp qword [rbp - 0x28], 0xffffffffffffd499	      2374	gui.c	FUNCTION_39	ELSE_15	IF_21	IF_22
0x4002b90	            0x750b	                           jne 0x4002b9d	      2374	gui.c	FUNCTION_39	ELSE_15	IF_21	IF_22
0x4002b92	    0x488b05000000	            mov rax, qword [0x04002b99] 	      2375	gui.c	FUNCTION_39	ELSE_15	IF_21	IF_22
0x4002b99	        0x488945d8	             mov qword [rbp - 0x28], rax	      2375	gui.c	FUNCTION_39	ELSE_15	IF_21	IF_22
0x4002b9d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2376	gui.c	FUNCTION_39	ELSE_15	IF_21
0x4002ba1	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2376	gui.c	FUNCTION_39	ELSE_15	IF_21
0x4002ba5	        0x488945e0	             mov qword [rbp - 0x20], rax	      2376	gui.c	FUNCTION_39	ELSE_15	IF_21
0x4002ba9	    0x48817de099d4	cmp qword [rbp - 0x20], 0xffffffffffffd499	      2377	gui.c	FUNCTION_39	ELSE_15	IF_21	IF_23
0x4002bb1	            0x750b	                           jne 0x4002bbe	      2377	gui.c	FUNCTION_39	ELSE_15	IF_21	IF_23
0x4002bb3	    0x488b05000000	            mov rax, qword [0x04002bba] 	      2378	gui.c	FUNCTION_39	ELSE_15	IF_21	IF_23
0x4002bba	        0x488945e0	             mov qword [rbp - 0x20], rax	      2378	gui.c	FUNCTION_39	ELSE_15	IF_21	IF_23
0x4002bbe	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2379	gui.c	FUNCTION_39	ELSE_15	IF_21
0x4002bc2	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2379	gui.c	FUNCTION_39	ELSE_15	IF_21
0x4002bc6	        0x488945e8	             mov qword [rbp - 0x18], rax	      2379	gui.c	FUNCTION_39	ELSE_15	IF_21
0x4002bca	    0x48817de899d4	cmp qword [rbp - 0x18], 0xffffffffffffd499	      2380	gui.c	FUNCTION_39	ELSE_15	IF_21	IF_24
0x4002bd2	            0x751d	                           jne 0x4002bf1	      2380	gui.c	FUNCTION_39	ELSE_15	IF_21	IF_24
0x4002bd4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2381	gui.c	FUNCTION_39	ELSE_15	IF_21	IF_24
0x4002bd8	        0x488945e8	             mov qword [rbp - 0x18], rax	      2381	gui.c	FUNCTION_39	ELSE_15	IF_21	IF_24
0x4002bdc	            0xeb13	                           jmp 0x4002bf1	      2381	gui.c	FUNCTION_39	ELSE_15	IF_21	IF_24
0x4002bde	    0x488b05000000	            mov rax, qword [0x04002be5] 	      2385	gui.c	FUNCTION_39	ELSE_16
0x4002be5	        0x488945d8	             mov qword [rbp - 0x28], rax	      2385	gui.c	FUNCTION_39	ELSE_16
0x4002be9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2386	gui.c	FUNCTION_39	ELSE_16
0x4002bed	        0x488945e8	             mov qword [rbp - 0x18], rax	      2386	gui.c	FUNCTION_39	ELSE_16
0x4002bf1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2389	gui.c	FUNCTION_39	IF_25
0x4002bf5	          0x83e021	                           and eax, 0x21	      2389	gui.c	FUNCTION_39	IF_25
0x4002bf8	          0x4885c0	                           test rax, rax	      2389	gui.c	FUNCTION_39	IF_25
0x4002bfb	            0x741a	                            je 0x4002c17	      2389	gui.c	FUNCTION_39	IF_25
0x4002bfd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2394	gui.c	FUNCTION_39	IF_25	CALL_6
0x4002c01	          0x4889c7	                            mov rdi, rax	      2394	gui.c	FUNCTION_39	IF_25	CALL_6
0x4002c04	      0xe800000000	                          call 0x4002c09	      2394	gui.c	FUNCTION_39	IF_25	CALL_6
0x4002c09	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2395	gui.c	FUNCTION_39	IF_25	CALL_7
0x4002c0d	          0x4889c7	                            mov rdi, rax	      2395	gui.c	FUNCTION_39	IF_25	CALL_7
0x4002c10	      0xe800000000	                          call 0x4002c15	      2395	gui.c	FUNCTION_39	IF_25	CALL_7
0x4002c15	            0xeb18	                           jmp 0x4002c2f	      2395	gui.c	FUNCTION_39	IF_25	CALL_7
0x4002c17	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2403	gui.c	FUNCTION_39	ELSE_17	CALL_9
0x4002c1b	          0x4889c7	                            mov rdi, rax	      2403	gui.c	FUNCTION_39	ELSE_17	CALL_9
0x4002c1e	      0xe800000000	                          call 0x4002c23	      2403	gui.c	FUNCTION_39	ELSE_17	CALL_9
0x4002c23	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2404	gui.c	FUNCTION_39	ELSE_17	CALL_10
0x4002c27	          0x4889c7	                            mov rdi, rax	      2404	gui.c	FUNCTION_39	ELSE_17	CALL_10
0x4002c2a	      0xe800000000	                          call 0x4002c2f	      2404	gui.c	FUNCTION_39	ELSE_17	CALL_10
0x4002c2f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2407	gui.c	FUNCTION_39	CALL_11
0x4002c33	          0x4889c7	                            mov rdi, rax	      2407	gui.c	FUNCTION_39	CALL_11
0x4002c36	      0xe800000000	                          call 0x4002c3b	      2407	gui.c	FUNCTION_39	CALL_11
0x4002c3b	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      2410	gui.c	FUNCTION_39	IF_26
0x4002c3e	          0x83e010	                           and eax, 0x10	      2410	gui.c	FUNCTION_39	IF_26
0x4002c41	            0x85c0	                           test eax, eax	      2410	gui.c	FUNCTION_39	IF_26
0x4002c43	            0x7515	                           jne 0x4002c5a	      2410	gui.c	FUNCTION_39	IF_26
0x4002c45	    0x8b1500000000	            mov edx, dword [0x04002c4b] 	      2411	gui.c	FUNCTION_39	CALL_12
0x4002c4b	    0x8b0500000000	            mov eax, dword [0x04002c51] 	      2411	gui.c	FUNCTION_39	CALL_12
0x4002c51	            0x89d6	                            mov esi, edx	      2411	gui.c	FUNCTION_39	CALL_12
0x4002c53	            0x89c7	                            mov edi, eax	      2411	gui.c	FUNCTION_39	CALL_12
0x4002c55	      0xe800000000	                          call 0x4002c5a	      2411	gui.c	FUNCTION_39	CALL_12
0x4002c5a	        0x488b45f8	                mov rax, qword [rbp - 8]	      2415	gui.c	FUNCTION_39	IF_27
0x4002c5e	          0x83e022	                           and eax, 0x22	      2415	gui.c	FUNCTION_39	IF_27
0x4002c61	          0x4885c0	                           test rax, rax	      2415	gui.c	FUNCTION_39	IF_27
0x4002c64	            0x7404	                            je 0x4002c6a	      2415	gui.c	FUNCTION_39	IF_27
0x4002c66	        0x834dc002	                or dword [rbp - 0x40], 2	      2416	gui.c	FUNCTION_39	IF_27
0x4002c6a	        0x837d9c00	               cmp dword [rbp - 0x64], 0	      2423	gui.c	FUNCTION_39	IF_28
0x4002c6e	            0x7420	                            je 0x4002c90	      2423	gui.c	FUNCTION_39	IF_28
0x4002c70	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      2423	gui.c	FUNCTION_39	IF_28
0x4002c73	          0x83e002	                              and eax, 2	      2423	gui.c	FUNCTION_39	IF_28
0x4002c76	            0x85c0	                           test eax, eax	      2423	gui.c	FUNCTION_39	IF_28
0x4002c78	            0x750c	                           jne 0x4002c86	      2423	gui.c	FUNCTION_39	IF_28
0x4002c7a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2423	gui.c	FUNCTION_39	IF_28
0x4002c7e	          0x83e004	                              and eax, 4	      2423	gui.c	FUNCTION_39	IF_28
0x4002c81	          0x4885c0	                           test rax, rax	      2423	gui.c	FUNCTION_39	IF_28
0x4002c84	            0x740a	                            je 0x4002c90	      2423	gui.c	FUNCTION_39	IF_28
0x4002c86	      0xb800000000	                              mov eax, 0	      2424	gui.c	FUNCTION_39	IF_28
0x4002c8b	      0xe91b010000	                           jmp 0x4002dab	      2424	gui.c	FUNCTION_39	IF_28
0x4002c90	        0x488b45f8	                mov rax, qword [rbp - 8]	      2429	gui.c	FUNCTION_39	IF_29
0x4002c94	          0x83e004	                              and eax, 4	      2429	gui.c	FUNCTION_39	IF_29
0x4002c97	          0x4885c0	                           test rax, rax	      2429	gui.c	FUNCTION_39	IF_29
0x4002c9a	            0x7404	                            je 0x4002ca0	      2429	gui.c	FUNCTION_39	IF_29
0x4002c9c	        0x834dc010	             or dword [rbp - 0x40], 0x10	      2430	gui.c	FUNCTION_39	IF_29
0x4002ca0	        0x488b45f8	                mov rax, qword [rbp - 8]	      2433	gui.c	FUNCTION_39	IF_30
0x4002ca4	          0x83e008	                              and eax, 8	      2433	gui.c	FUNCTION_39	IF_30
0x4002ca7	          0x4885c0	                           test rax, rax	      2433	gui.c	FUNCTION_39	IF_30
0x4002caa	            0x7404	                            je 0x4002cb0	      2433	gui.c	FUNCTION_39	IF_30
0x4002cac	        0x834dc004	                or dword [rbp - 0x40], 4	      2434	gui.c	FUNCTION_39	IF_30
0x4002cb0	        0x488b45f8	                mov rax, qword [rbp - 8]	      2442	gui.c	FUNCTION_39	IF_32
0x4002cb4	          0x83e010	                           and eax, 0x10	      2442	gui.c	FUNCTION_39	IF_32
0x4002cb7	          0x4885c0	                           test rax, rax	      2442	gui.c	FUNCTION_39	IF_32
0x4002cba	            0x7404	                            je 0x4002cc0	      2442	gui.c	FUNCTION_39	IF_32
0x4002cbc	        0x834dc008	                or dword [rbp - 0x40], 8	      2443	gui.c	FUNCTION_39	IF_32
0x4002cc0	        0x488b45f8	                mov rax, qword [rbp - 8]	      2446	gui.c	FUNCTION_39	IF_33
0x4002cc4	      0x2580000000	                           and eax, 0x80	      2446	gui.c	FUNCTION_39	IF_33
0x4002cc9	          0x4885c0	                           test rax, rax	      2446	gui.c	FUNCTION_39	IF_33
0x4002ccc	            0x7404	                            je 0x4002cd2	      2446	gui.c	FUNCTION_39	IF_33
0x4002cce	        0x834dc040	            or dword [rbp - 0x40], 0x40 	      2447	gui.c	FUNCTION_39	IF_33
0x4002cd2	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      2450	gui.c	FUNCTION_39	IF_34
0x4002cd5	          0x83e008	                              and eax, 8	      2450	gui.c	FUNCTION_39	IF_34
0x4002cd8	            0x85c0	                           test eax, eax	      2450	gui.c	FUNCTION_39	IF_34
0x4002cda	            0x7404	                            je 0x4002ce0	      2450	gui.c	FUNCTION_39	IF_34
0x4002cdc	        0x834dc001	                or dword [rbp - 0x40], 1	      2451	gui.c	FUNCTION_39	IF_34
0x4002ce0	    0x8b0500000000	            mov eax, dword [0x04002ce6] 	      2458	gui.c	FUNCTION_39	CALL_13
0x4002ce6	          0x8b7dc0	             mov edi, dword [rbp - 0x40]	      2458	gui.c	FUNCTION_39	CALL_13
0x4002ce9	          0x8b4db4	             mov ecx, dword [rbp - 0x4c]	      2458	gui.c	FUNCTION_39	CALL_13
0x4002cec	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      2458	gui.c	FUNCTION_39	CALL_13
0x4002cf0	          0x8b75c4	             mov esi, dword [rbp - 0x3c]	      2458	gui.c	FUNCTION_39	CALL_13
0x4002cf3	          0x4189f8	                            mov r8d, edi	      2458	gui.c	FUNCTION_39	CALL_13
0x4002cf6	            0x89c7	                            mov edi, eax	      2458	gui.c	FUNCTION_39	CALL_13
0x4002cf8	      0xe800000000	                          call 0x4002cfd	      2458	gui.c	FUNCTION_39	CALL_13
0x4002cfd	          0x8945b4	             mov dword [rbp - 0x4c], eax	      2458	gui.c	FUNCTION_39	CALL_13
0x4002d00	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      2593	gui.c	FUNCTION_39	IF_49
0x4002d03	          0x83e00c	                            and eax, 0xc	      2593	gui.c	FUNCTION_39	IF_49
0x4002d06	            0x85c0	                           test eax, eax	      2593	gui.c	FUNCTION_39	IF_49
0x4002d08	            0x750e	                           jne 0x4002d18	      2593	gui.c	FUNCTION_39	IF_49
0x4002d0a	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      2594	gui.c	FUNCTION_39	IF_49
0x4002d0d	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      2594	gui.c	FUNCTION_39	IF_49
0x4002d10	             0x1d0	                            add eax, edx	      2594	gui.c	FUNCTION_39	IF_49
0x4002d12	    0x890500000000	            mov dword [0x04002d18], eax 	      2594	gui.c	FUNCTION_39	IF_49
0x4002d18	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      2597	gui.c	FUNCTION_39	IF_50
0x4002d1b	          0x83e010	                           and eax, 0x10	      2597	gui.c	FUNCTION_39	IF_50
0x4002d1e	            0x85c0	                           test eax, eax	      2597	gui.c	FUNCTION_39	IF_50
0x4002d20	            0x7415	                            je 0x4002d37	      2597	gui.c	FUNCTION_39	IF_50
0x4002d22	    0x8b0500000000	            mov eax, dword [0x04002d28] 	      2598	gui.c	FUNCTION_39	CALL_26
0x4002d28	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      2598	gui.c	FUNCTION_39	CALL_26
0x4002d2b	          0x8b4dc4	             mov ecx, dword [rbp - 0x3c]	      2598	gui.c	FUNCTION_39	CALL_26
0x4002d2e	            0x89ce	                            mov esi, ecx	      2598	gui.c	FUNCTION_39	CALL_26
0x4002d30	            0x89c7	                            mov edi, eax	      2598	gui.c	FUNCTION_39	CALL_26
0x4002d32	      0xe800000000	                          call 0x4002d37	      2598	gui.c	FUNCTION_39	CALL_26
0x4002d37	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      2600	gui.c	FUNCTION_39	IF_51
0x4002d3a	          0x83e00c	                            and eax, 0xc	      2600	gui.c	FUNCTION_39	IF_51
0x4002d3d	            0x85c0	                           test eax, eax	      2600	gui.c	FUNCTION_39	IF_51
0x4002d3f	            0x7534	                           jne 0x4002d75	      2600	gui.c	FUNCTION_39	IF_51
0x4002d41	    0x8b1500000000	            mov edx, dword [0x04002d47] 	      2603	gui.c	FUNCTION_39	IF_51	IF_52
0x4002d47	    0x8b0500000000	            mov eax, dword [0x04002d4d] 	      2603	gui.c	FUNCTION_39	IF_51	IF_52
0x4002d4d	            0x39c2	                            cmp edx, eax	      2603	gui.c	FUNCTION_39	IF_51	IF_52
0x4002d4f	            0x7524	                           jne 0x4002d75	      2603	gui.c	FUNCTION_39	IF_51	IF_52
0x4002d51	    0x8b0500000000	            mov eax, dword [0x04002d57] 	      2604	gui.c	FUNCTION_39	IF_51	IF_52
0x4002d57	          0x3b45c4	             cmp eax, dword [rbp - 0x3c]	      2604	gui.c	FUNCTION_39	IF_51	IF_52
0x4002d5a	            0x7c19	                            jl 0x4002d75	      2604	gui.c	FUNCTION_39	IF_51	IF_52
0x4002d5c	    0x8b0500000000	            mov eax, dword [0x04002d62] 	      2605	gui.c	FUNCTION_39	IF_51	IF_52
0x4002d62	          0x8b4dc4	             mov ecx, dword [rbp - 0x3c]	      2605	gui.c	FUNCTION_39	IF_51	IF_52
0x4002d65	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      2605	gui.c	FUNCTION_39	IF_51	IF_52
0x4002d68	             0x1ca	                            add edx, ecx	      2605	gui.c	FUNCTION_39	IF_51	IF_52
0x4002d6a	            0x39d0	                            cmp eax, edx	      2605	gui.c	FUNCTION_39	IF_51	IF_52
0x4002d6c	            0x7d07	                           jge 0x4002d75	      2605	gui.c	FUNCTION_39	IF_51	IF_52
0x4002d6e	    0xc60500000000	                mov byte [0x04002d75], 0	      2606	gui.c	FUNCTION_39	IF_51	IF_52
0x4002d75	        0x837dc800	               cmp dword [rbp - 0x38], 0	      2610	gui.c	FUNCTION_39	IF_53
0x4002d79	            0x7418	                            je 0x4002d93	      2610	gui.c	FUNCTION_39	IF_53
0x4002d7b	    0x8b1500000000	            mov edx, dword [0x04002d81] 	      2612	gui.c	FUNCTION_39	CALL_27
0x4002d81	    0x8b0500000000	            mov eax, dword [0x04002d87] 	      2612	gui.c	FUNCTION_39	CALL_27
0x4002d87	          0x8b4dc4	             mov ecx, dword [rbp - 0x3c]	      2612	gui.c	FUNCTION_39	CALL_27
0x4002d8a	            0x89ce	                            mov esi, ecx	      2612	gui.c	FUNCTION_39	CALL_27
0x4002d8c	            0x89c7	                            mov edi, eax	      2612	gui.c	FUNCTION_39	CALL_27
0x4002d8e	      0xe800000000	                          call 0x4002d93	      2612	gui.c	FUNCTION_39	CALL_27
0x4002d93	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      2615	gui.c	FUNCTION_39	IF_54
0x4002d97	            0x740d	                            je 0x4002da6	      2615	gui.c	FUNCTION_39	IF_54
0x4002d99	    0x8b0500000000	            mov eax, dword [0x04002d9f] 	      2616	gui.c	FUNCTION_39	CALL_28
0x4002d9f	            0x89c7	                            mov edi, eax	      2616	gui.c	FUNCTION_39	CALL_28
0x4002da1	      0xe800000000	                          call 0x4002da6	      2616	gui.c	FUNCTION_39	CALL_28
0x4002da6	      0xb801000000	                              mov eax, 1	      2620	gui.c	FUNCTION_39
0x4002dab	              0xc9	                                   leave	      2621	gui.c	FUNCTION_39
0x4002dac	              0xc3	                                     ret	      2621	gui.c	FUNCTION_39
