var_redir_stop	FOR,0:SWITCH,0:DO,0:IF,4:functions,0:WHILE,0:CALL,7:ELSE,0	69
0x4009875	        0x4883ec28	                           sub rsp, 0x28	       542	eval.c	FUNCTION_8
0x4009879	    0x64488b042528	                mov rax, qword fs:[0x28]	       542	eval.c	FUNCTION_8
0x4009882	      0x4889442418	             mov qword [rsp + 0x18], rax	       542	eval.c	FUNCTION_8
0x4009887	            0x31c0	                            xor eax, eax	       542	eval.c	FUNCTION_8
0x4009889	    0x488b05000000	            mov rax, qword [0x04009890] 	       545	eval.c	FUNCTION_8	IF_1
0x4009890	    0x483d00000000	                              cmp rax, 0	       545	eval.c	FUNCTION_8	IF_1
0x4009896	            0x7510	                           jne 0x40098a8	       545	eval.c	FUNCTION_8	IF_1
0x4009898	    0x48c705000000	               mov qword [0x040098a3], 0	       547	eval.c	FUNCTION_8	IF_1
0x40098a3	      0xe90e010000	                           jmp 0x40099b6	       547	eval.c	FUNCTION_8	IF_1
0x40098a8	          0x4885c0	                           test rax, rax	       551	eval.c	FUNCTION_8	IF_2
0x40098ab	     0xf84d9000000	                            je 0x400998a	       551	eval.c	FUNCTION_8	IF_2
0x40098b1	    0x48833d000000	               cmp qword [0x040098b9], 0	       554	eval.c	FUNCTION_8	IF_2	IF_3
0x40098b9	     0xf84e9000000	                            je 0x40099a8	       554	eval.c	FUNCTION_8	IF_2	IF_3
0x40098bf	      0xbe00000000	                              mov esi, 0	       556	eval.c	FUNCTION_8	IF_2	IF_3	CALL_1
0x40098c4	      0xbf00000000	                              mov edi, 0	       556	eval.c	FUNCTION_8	IF_2	IF_3	CALL_1
0x40098c9	      0xe800000000	                          call 0x40098ce	       556	eval.c	FUNCTION_8	IF_2	IF_3	CALL_1
0x40098ce	    0xc70424020000	                      mov dword [rsp], 2	       557	eval.c	FUNCTION_8	IF_2	IF_3
0x40098d5	    0x488b05000000	            mov rax, qword [0x040098dc] 	       558	eval.c	FUNCTION_8	IF_2	IF_3
0x40098dc	      0x4889442408	                mov qword [rsp + 8], rax	       558	eval.c	FUNCTION_8	IF_2	IF_3
0x40098e1	        0x4883ec08	                              sub rsp, 8	       561	eval.c	FUNCTION_8	IF_2	IF_3	CALL_2
0x40098e5	            0x6a02	                                  push 2	       561	eval.c	FUNCTION_8	IF_2	IF_3	CALL_2
0x40098e7	    0x41b900000000	                              mov r9d, 0	       561	eval.c	FUNCTION_8	IF_2	IF_3	CALL_2
0x40098ed	    0x41b800000000	                              mov r8d, 0	       561	eval.c	FUNCTION_8	IF_2	IF_3	CALL_2
0x40098f3	      0xb900000000	                              mov ecx, 0	       561	eval.c	FUNCTION_8	IF_2	IF_3	CALL_2
0x40098f8	    0x488b15000000	            mov rdx, qword [0x040098ff] 	       561	eval.c	FUNCTION_8	IF_2	IF_3	CALL_2
0x40098ff	      0xbe00000000	                              mov esi, 0	       561	eval.c	FUNCTION_8	IF_2	IF_3	CALL_2
0x4009904	    0x488b3d000000	            mov rdi, qword [0x0400990b] 	       561	eval.c	FUNCTION_8	IF_2	IF_3	CALL_2
0x400990b	      0xe800000000	                          call 0x4009910	       561	eval.c	FUNCTION_8	IF_2	IF_3	CALL_2
0x4009910	    0x488905000000	            mov qword [0x04009917], rax 	       561	eval.c	FUNCTION_8	IF_2	IF_3	CALL_2
0x4009917	        0x4883c410	                           add rsp, 0x10	       563	eval.c	FUNCTION_8	IF_2	IF_3	IF_4
0x400991b	          0x4885c0	                           test rax, rax	       563	eval.c	FUNCTION_8	IF_2	IF_3	IF_4
0x400991e	            0x7423	                            je 0x4009943	       563	eval.c	FUNCTION_8	IF_2	IF_3	IF_4
0x4009920	    0x488b3d000000	            mov rdi, qword [0x04009927] 	       563	eval.c	FUNCTION_8	IF_2	IF_3	IF_4
0x4009927	        0x48833f00	                      cmp qword [rdi], 0	       563	eval.c	FUNCTION_8	IF_2	IF_3	IF_4
0x400992b	            0x7416	                            je 0x4009943	       563	eval.c	FUNCTION_8	IF_2	IF_3	IF_4
0x400992d	    0x41b800000000	                              mov r8d, 0	       564	eval.c	FUNCTION_8	IF_2	IF_3	CALL_3
0x4009933	      0xb900000000	                              mov ecx, 0	       564	eval.c	FUNCTION_8	IF_2	IF_3	CALL_3
0x4009938	          0x4889e2	                            mov rdx, rsp	       564	eval.c	FUNCTION_8	IF_2	IF_3	CALL_3
0x400993b	          0x4889c6	                            mov rsi, rax	       564	eval.c	FUNCTION_8	IF_2	IF_3	CALL_3
0x400993e	      0xe863beffff	                   call sym.set_var_lval	       564	eval.c	FUNCTION_8	IF_2	IF_3	CALL_3
0x4009943	    0x488b3d000000	            mov rdi, qword [0x0400994a] 	       565	eval.c	FUNCTION_8	IF_2	IF_3	CALL_4
0x400994a	      0xe800000000	                          call 0x400994f	       565	eval.c	FUNCTION_8	IF_2	IF_3	CALL_4
0x400994f	    0x488b3d000000	            mov rdi, qword [0x04009956] 	       569	eval.c	FUNCTION_8	IF_2	CALL_5
0x4009956	          0x4885ff	                           test rdi, rdi	       569	eval.c	FUNCTION_8	IF_2	CALL_5
0x4009959	            0x7410	                            je 0x400996b	       569	eval.c	FUNCTION_8	IF_2	CALL_5
0x400995b	      0xe800000000	                          call 0x4009960	       569	eval.c	FUNCTION_8	IF_2	CALL_5
0x4009960	    0x48c705000000	               mov qword [0x0400996b], 0	       569	eval.c	FUNCTION_8	IF_2	CALL_5
0x400996b	    0x488b05000000	            mov rax, qword [0x04009972] 	       571	eval.c	FUNCTION_8	IF_2	CALL_6
0x4009972	          0x4885c0	                           test rax, rax	       571	eval.c	FUNCTION_8	IF_2	CALL_6
0x4009975	            0x7413	                            je 0x400998a	       571	eval.c	FUNCTION_8	IF_2	CALL_6
0x4009977	          0x4889c7	                            mov rdi, rax	       571	eval.c	FUNCTION_8	IF_2	CALL_6
0x400997a	      0xe800000000	                          call 0x400997f	       571	eval.c	FUNCTION_8	IF_2	CALL_6
0x400997f	    0x48c705000000	               mov qword [0x0400998a], 0	       571	eval.c	FUNCTION_8	IF_2	CALL_6
0x400998a	    0x488b3d000000	            mov rdi, qword [0x04009991] 	       573	eval.c	FUNCTION_8	CALL_7
0x4009991	          0x4885ff	                           test rdi, rdi	       573	eval.c	FUNCTION_8	CALL_7
0x4009994	            0x7420	                            je 0x40099b6	       573	eval.c	FUNCTION_8	CALL_7
0x4009996	      0xe800000000	                          call 0x400999b	       573	eval.c	FUNCTION_8	CALL_7
0x400999b	    0x48c705000000	               mov qword [0x040099a6], 0	       573	eval.c	FUNCTION_8	CALL_7
0x40099a6	            0xeb0e	                           jmp 0x40099b6	       573	eval.c	FUNCTION_8	CALL_7
0x40099a8	    0x488b3d000000	            mov rdi, qword [0x040099af] 	       569	eval.c	FUNCTION_8	IF_2	CALL_5
0x40099af	          0x4885ff	                           test rdi, rdi	       569	eval.c	FUNCTION_8	IF_2	CALL_5
0x40099b2	            0x75a7	                           jne 0x400995b	       569	eval.c	FUNCTION_8	IF_2	CALL_5
0x40099b4	            0xebc1	                           jmp 0x4009977	       569	eval.c	FUNCTION_8	IF_2	CALL_5
0x40099b6	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       574	eval.c	FUNCTION_8
0x40099bb	    0x644833042528	                xor rax, qword fs:[0x28]	       574	eval.c	FUNCTION_8
0x40099c4	            0x7405	                            je 0x40099cb	       574	eval.c	FUNCTION_8
0x40099c6	      0xe800000000	                          call 0x40099cb	       574	eval.c	FUNCTION_8
0x40099cb	        0x4883c428	                           add rsp, 0x28	       574	eval.c	FUNCTION_8
0x40099cf	              0xc3	                                     ret	       574	eval.c	FUNCTION_8
tv2string	FOR,0:SWITCH,0:DO,0:IF,0:functions,0:WHILE,0:CALL,1:ELSE,0	7
0x40038e9	        0x4883ec10	                           sub rsp, 0x10	      5758	eval.c	FUNCTION_89
0x40038ed	            0x6a00	                                  push 0	      5759	eval.c	FUNCTION_89	CALL_1
0x40038ef	    0x41b901000000	                              mov r9d, 1	      5759	eval.c	FUNCTION_89	CALL_1
0x40038f5	    0x41b800000000	                              mov r8d, 0	      5759	eval.c	FUNCTION_89	CALL_1
0x40038fb	      0xe800000000	                          call 0x4003900	      5759	eval.c	FUNCTION_89	CALL_1
0x4003900	        0x4883c418	                           add rsp, 0x18	      5760	eval.c	FUNCTION_89
0x4003904	              0xc3	                                     ret	      5760	eval.c	FUNCTION_89
restore_vimvar	FOR,0:SWITCH,0:DO,0:IF,2:functions,0:WHILE,0:CALL,4:ELSE,1	31
0x40002c3	          0x4863c7	                         movsxd rax, edi	       924	eval.c	FUNCTION_22
0x40002c6	    0x488d14c50000	                        lea rdx, [rax*8]	       924	eval.c	FUNCTION_22
0x40002ce	        0x48c1e006	                              shl rax, 6	       924	eval.c	FUNCTION_22
0x40002d2	          0x4829d0	                            sub rax, rdx	       924	eval.c	FUNCTION_22
0x40002d5	          0x488b16	                    mov rdx, qword [rsi]	       924	eval.c	FUNCTION_22
0x40002d8	        0x488b7608	                mov rsi, qword [rsi + 8]	       924	eval.c	FUNCTION_22
0x40002dc	    0x488990000000	                    mov qword [rax], rdx	       924	eval.c	FUNCTION_22
0x40002e3	    0x4889b0000000	                    mov qword [rax], rsi	       924	eval.c	FUNCTION_22
0x40002ea	            0x85d2	                           test edx, edx	       925	eval.c	FUNCTION_22	IF_1
0x40002ec	            0x7556	                           jne 0x4000344	       925	eval.c	FUNCTION_22	IF_1
0x40002ee	        0x4883ec08	                              sub rsp, 8	       921	eval.c	FUNCTION_22
0x40002f2	          0x4863ff	                         movsxd rdi, edi	       927	eval.c	FUNCTION_22	IF_1	CALL_1
0x40002f5	    0x488d04fd0000	                        lea rax, [rdi*8]	       927	eval.c	FUNCTION_22	IF_1	CALL_1
0x40002fd	        0x48c1e706	                              shl rdi, 6	       927	eval.c	FUNCTION_22	IF_1	CALL_1
0x4000301	          0x4829c7	                            sub rdi, rax	       927	eval.c	FUNCTION_22	IF_1	CALL_1
0x4000304	    0x488db7000000	                          lea rsi, [rdi]	       927	eval.c	FUNCTION_22	IF_1	CALL_1
0x400030b	      0xbf00000000	                              mov edi, 0	       927	eval.c	FUNCTION_22	IF_1	CALL_1
0x4000310	      0xe800000000	                          call 0x4000315	       927	eval.c	FUNCTION_22	IF_1	CALL_1
0x4000315	        0x488b5008	                mov rdx, qword [rax + 8]	       928	eval.c	FUNCTION_22	IF_1	IF_2	CALL_2
0x4000319	    0x4881fa000000	                              cmp rdx, 0	       928	eval.c	FUNCTION_22	IF_1	IF_2	CALL_2
0x4000320	            0x7405	                            je 0x4000327	       928	eval.c	FUNCTION_22	IF_1	IF_2	CALL_2
0x4000322	          0x4885d2	                           test rdx, rdx	       928	eval.c	FUNCTION_22	IF_1	IF_2	CALL_2
0x4000325	            0x750c	                           jne 0x4000333	       928	eval.c	FUNCTION_22	IF_1	IF_2	CALL_2
0x4000327	      0xbf00000000	                              mov edi, 0	       929	eval.c	FUNCTION_22	IF_1	CALL_3
0x400032c	      0xe800000000	                          call 0x4000331	       929	eval.c	FUNCTION_22	IF_1	CALL_3
0x4000331	            0xeb0d	                           jmp 0x4000340	       929	eval.c	FUNCTION_22	IF_1	CALL_3
0x4000333	          0x4889c6	                            mov rsi, rax	       931	eval.c	FUNCTION_22	IF_1	CALL_4
0x4000336	      0xbf00000000	                              mov edi, 0	       931	eval.c	FUNCTION_22	IF_1	CALL_4
0x400033b	      0xe800000000	                          call 0x4000340	       931	eval.c	FUNCTION_22	IF_1	CALL_4
0x4000340	        0x4883c408	                              add rsp, 8	       933	eval.c	FUNCTION_22
0x4000344	            0xf3c3	                                     ret	       933	eval.c	FUNCTION_22
assert_exception	FOR,0:SWITCH,0:DO,0:IF,2:functions,0:WHILE,0:CALL,10:ELSE,1	52
0x4006c0a	              0x53	                                push rbx	      9007	eval.c	FUNCTION_176
0x4006c0b	        0x4883ec20	                           sub rsp, 0x20	      9007	eval.c	FUNCTION_176
0x4006c0f	          0x4889fb	                            mov rbx, rdi	      9007	eval.c	FUNCTION_176
0x4006c12	    0x64488b042528	                mov rax, qword fs:[0x28]	      9007	eval.c	FUNCTION_176
0x4006c1b	      0x4889442418	             mov qword [rsp + 0x18], rax	      9007	eval.c	FUNCTION_176
0x4006c20	            0x31c0	                            xor eax, eax	      9007	eval.c	FUNCTION_176
0x4006c22	      0xe800000000	                          call 0x4006c27	      9009	eval.c	FUNCTION_176	CALL_1
0x4006c27	    0x488b3d000000	            mov rdi, qword [0x04006c2e] 	      9011	eval.c	FUNCTION_176	IF_1
0x4006c2e	          0x4885ff	                           test rdi, rdi	      9011	eval.c	FUNCTION_176	IF_1
0x4006c31	            0x752c	                           jne 0x4006c5f	      9011	eval.c	FUNCTION_176	IF_1
0x4006c33	          0x4889e7	                            mov rdi, rsp	      9013	eval.c	FUNCTION_176	IF_1	CALL_2
0x4006c36	      0xe800000000	                          call 0x4006c3b	      9013	eval.c	FUNCTION_176	IF_1	CALL_2
0x4006c3b	      0xbe00000000	                              mov esi, 0	      9014	eval.c	FUNCTION_176	IF_1	CALL_3
0x4006c40	          0x4889e7	                            mov rdi, rsp	      9014	eval.c	FUNCTION_176	IF_1	CALL_3
0x4006c43	      0xe800000000	                          call 0x4006c48	      9014	eval.c	FUNCTION_176	IF_1	CALL_3
0x4006c48	          0x4889e7	                            mov rdi, rsp	      9015	eval.c	FUNCTION_176	IF_1	CALL_4
0x4006c4b	      0xe800000000	                          call 0x4006c50	      9015	eval.c	FUNCTION_176	IF_1	CALL_4
0x4006c50	          0x4889e7	                            mov rdi, rsp	      9016	eval.c	FUNCTION_176	IF_1	CALL_5
0x4006c53	      0xe800000000	                          call 0x4006c58	      9016	eval.c	FUNCTION_176	IF_1	CALL_5
0x4006c58	      0xba01000000	                              mov edx, 1	      9017	eval.c	FUNCTION_176	IF_1
0x4006c5d	            0xeb5b	                           jmp 0x4006cba	      9017	eval.c	FUNCTION_176	IF_1
0x4006c5f	          0x4885c0	                           test rax, rax	      9019	eval.c	FUNCTION_176	ELSE_1	IF_2
0x4006c62	            0x7451	                            je 0x4006cb5	      9019	eval.c	FUNCTION_176	ELSE_1	IF_2
0x4006c64	          0x4889c6	                            mov rsi, rax	      9020	eval.c	FUNCTION_176	ELSE_1	IF_2	CALL_6
0x4006c67	      0xe800000000	                          call 0x4006c6c	      9020	eval.c	FUNCTION_176	ELSE_1	IF_2	CALL_6
0x4006c6c	      0xba00000000	                              mov edx, 0	      9029	eval.c	FUNCTION_176
0x4006c71	          0x4885c0	                           test rax, rax	      9020	eval.c	FUNCTION_176	ELSE_1	IF_2	CALL_6
0x4006c74	            0x7544	                           jne 0x4006cba	      9020	eval.c	FUNCTION_176	ELSE_1	IF_2	CALL_6
0x4006c76	          0x4889e7	                            mov rdi, rsp	      9022	eval.c	FUNCTION_176	ELSE_1	IF_2	CALL_7
0x4006c79	      0xe800000000	                          call 0x4006c7e	      9022	eval.c	FUNCTION_176	ELSE_1	IF_2	CALL_7
0x4006c7e	        0x488d7310	                   lea rsi, [rbx + 0x10]	      9023	eval.c	FUNCTION_176	ELSE_1	IF_2	CALL_8
0x4006c82	    0x41b904000000	                              mov r9d, 4	      9023	eval.c	FUNCTION_176	ELSE_1	IF_2	CALL_8
0x4006c88	    0x41b800000000	                              mov r8d, 0	      9023	eval.c	FUNCTION_176	ELSE_1	IF_2	CALL_8
0x4006c8e	          0x4889d9	                            mov rcx, rbx	      9023	eval.c	FUNCTION_176	ELSE_1	IF_2	CALL_8
0x4006c91	      0xba00000000	                              mov edx, 0	      9023	eval.c	FUNCTION_176	ELSE_1	IF_2	CALL_8
0x4006c96	          0x4889e7	                            mov rdi, rsp	      9023	eval.c	FUNCTION_176	ELSE_1	IF_2	CALL_8
0x4006c99	      0xe800000000	                          call 0x4006c9e	      9023	eval.c	FUNCTION_176	ELSE_1	IF_2	CALL_8
0x4006c9e	          0x4889e7	                            mov rdi, rsp	      9025	eval.c	FUNCTION_176	ELSE_1	IF_2	CALL_9
0x4006ca1	      0xe800000000	                          call 0x4006ca6	      9025	eval.c	FUNCTION_176	ELSE_1	IF_2	CALL_9
0x4006ca6	          0x4889e7	                            mov rdi, rsp	      9026	eval.c	FUNCTION_176	ELSE_1	IF_2	CALL_10
0x4006ca9	      0xe800000000	                          call 0x4006cae	      9026	eval.c	FUNCTION_176	ELSE_1	IF_2	CALL_10
0x4006cae	      0xba01000000	                              mov edx, 1	      9027	eval.c	FUNCTION_176	ELSE_1	IF_2
0x4006cb3	            0xeb05	                           jmp 0x4006cba	      9027	eval.c	FUNCTION_176	ELSE_1	IF_2
0x4006cb5	      0xba00000000	                              mov edx, 0	      9029	eval.c	FUNCTION_176
0x4006cba	            0x89d0	                            mov eax, edx	      9030	eval.c	FUNCTION_176
0x4006cbc	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      9030	eval.c	FUNCTION_176
0x4006cc1	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      9030	eval.c	FUNCTION_176
0x4006cca	            0x7405	                            je 0x4006cd1	      9030	eval.c	FUNCTION_176
0x4006ccc	      0xe800000000	                          call 0x4006cd1	      9030	eval.c	FUNCTION_176
0x4006cd1	        0x4883c420	                           add rsp, 0x20	      9030	eval.c	FUNCTION_176
0x4006cd5	              0x5b	                                 pop rbx	      9030	eval.c	FUNCTION_176
0x4006cd6	              0xc3	                                     ret	      9030	eval.c	FUNCTION_176
assert_error	FOR,0:SWITCH,0:DO,0:IF,1:functions,0:WHILE,0:CALL,3:ELSE,0	16
0x40063b0	              0x53	                                push rbx	      8809	eval.c	FUNCTION_169
0x40063b1	          0x4889fb	                            mov rbx, rdi	      8809	eval.c	FUNCTION_169
0x40063b4	    0x833d00000000	               cmp dword [0x040063bb], 5	      8812	eval.c	FUNCTION_169	IF_1
0x40063bb	            0x750a	                           jne 0x40063c7	      8812	eval.c	FUNCTION_169	IF_1
0x40063bd	    0x48833d000000	               cmp qword [0x040063c5], 0	      8812	eval.c	FUNCTION_169	IF_1
0x40063c5	            0x7512	                           jne 0x40063d9	      8812	eval.c	FUNCTION_169	IF_1
0x40063c7	      0xe800000000	                          call 0x40063cc	      8814	eval.c	FUNCTION_169	CALL_2
0x40063cc	          0x4889c6	                            mov rsi, rax	      8814	eval.c	FUNCTION_169	CALL_2
0x40063cf	      0xbf40000000	                           mov edi, 0x40	      8814	eval.c	FUNCTION_169	CALL_2
0x40063d4	      0xe800000000	                          call 0x40063d9	      8814	eval.c	FUNCTION_169	CALL_2
0x40063d9	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	      8815	eval.c	FUNCTION_169	CALL_3
0x40063dd	            0x8b13	                    mov edx, dword [rbx]	      8815	eval.c	FUNCTION_169	CALL_3
0x40063df	    0x488b3d000000	            mov rdi, qword [0x040063e6] 	      8815	eval.c	FUNCTION_169	CALL_3
0x40063e6	      0xe800000000	                          call 0x40063eb	      8815	eval.c	FUNCTION_169	CALL_3
0x40063eb	              0x5b	                                 pop rbx	      8816	eval.c	FUNCTION_169
0x40063ec	              0xc3	                                     ret	      8816	eval.c	FUNCTION_169
eval_init	FOR,1:SWITCH,0:DO,0:IF,5:functions,0:WHILE,0:CALL,34:ELSE,2	101
0x4004141	            0x4155	                                push r13	       286	eval.c	FUNCTION_3
0x4004143	            0x4154	                                push r12	       286	eval.c	FUNCTION_3
0x4004145	              0x55	                                push rbp	       286	eval.c	FUNCTION_3
0x4004146	              0x53	                                push rbx	       286	eval.c	FUNCTION_3
0x4004147	        0x4883ec08	                              sub rsp, 8	       286	eval.c	FUNCTION_3
0x400414b	      0xba02000000	                              mov edx, 2	       290	eval.c	FUNCTION_3	CALL_1
0x4004150	      0xbe00000000	                              mov esi, 0	       290	eval.c	FUNCTION_3	CALL_1
0x4004155	      0xbf00000000	                              mov edi, 0	       290	eval.c	FUNCTION_3	CALL_1
0x400415a	      0xe800000000	                          call 0x400415f	       290	eval.c	FUNCTION_3	CALL_1
0x400415f	      0xba01000000	                              mov edx, 1	       291	eval.c	FUNCTION_3	CALL_2
0x4004164	      0xbe00000000	                              mov esi, 0	       291	eval.c	FUNCTION_3	CALL_2
0x4004169	      0xbf00000000	                              mov edi, 0	       291	eval.c	FUNCTION_3	CALL_2
0x400416e	      0xe800000000	                          call 0x4004173	       291	eval.c	FUNCTION_3	CALL_2
0x4004173	    0xc60500000000	                mov byte [0x0400417a], 2	       292	eval.c	FUNCTION_3
0x400417a	      0xbf00000000	                              mov edi, 0	       293	eval.c	FUNCTION_3	CALL_3
0x400417f	      0xe800000000	                          call 0x4004184	       293	eval.c	FUNCTION_3	CALL_3
0x4004184	      0xe800000000	                          call 0x4004189	       294	eval.c	FUNCTION_3	CALL_4
0x4004189	      0xbd00000000	                              mov ebp, 0	       294	eval.c	FUNCTION_3	CALL_4
0x400418e	    0x41bc00000000	                             mov r12d, 0	       294	eval.c	FUNCTION_3	CALL_4
0x4004194	    0x49c7c5ffffff	             mov r13, 0xffffffffffffffff	       299	eval.c	FUNCTION_3	FOR_1	IF_1	CALL_5
0x400419b	          0x4889eb	                            mov rbx, rbp	       299	eval.c	FUNCTION_3	FOR_1	IF_1	CALL_5
0x400419e	        0x488b7de7	             mov rdi, qword [rbp - 0x19]	       299	eval.c	FUNCTION_3	FOR_1	IF_1	CALL_5
0x40041a2	      0xb800000000	                              mov eax, 0	       299	eval.c	FUNCTION_3	FOR_1	IF_1	CALL_5
0x40041a7	          0x4c89e9	                            mov rcx, r13	       299	eval.c	FUNCTION_3	FOR_1	IF_1	CALL_5
0x40041aa	            0xf2ae	              repne scasb al, byte [rdi]	       299	eval.c	FUNCTION_3	FOR_1	IF_1	CALL_5
0x40041ac	          0x4889c8	                            mov rax, rcx	       299	eval.c	FUNCTION_3	FOR_1	IF_1	CALL_5
0x40041af	          0x48f7d0	                                 not rax	       299	eval.c	FUNCTION_3	FOR_1	IF_1	CALL_5
0x40041b2	        0x4883e801	                              sub rax, 1	       299	eval.c	FUNCTION_3	FOR_1	IF_1	CALL_5
0x40041b6	        0x4883f810	                           cmp rax, 0x10	       299	eval.c	FUNCTION_3	FOR_1	IF_1	CALL_5
0x40041ba	            0x7614	                           jbe 0x40041d0	       299	eval.c	FUNCTION_3	FOR_1	IF_1	CALL_5
0x40041bc	      0xbf00000000	                              mov edi, 0	       301	eval.c	FUNCTION_3	FOR_1	IF_1	CALL_6
0x40041c1	      0xe800000000	                          call 0x40041c6	       301	eval.c	FUNCTION_3	FOR_1	IF_1	CALL_6
0x40041c6	      0xbf01000000	                              mov edi, 1	       302	eval.c	FUNCTION_3	FOR_1	IF_1	CALL_7
0x40041cb	      0xe800000000	                          call 0x40041d0	       302	eval.c	FUNCTION_3	FOR_1	IF_1	CALL_7
0x40041d0	        0x488b73e7	             mov rsi, qword [rbx - 0x19]	       110	string3.h	FUNCTION_197	CALL_3
0x40041d4	      0xba11000000	                           mov edx, 0x11	       110	string3.h	FUNCTION_197	CALL_3
0x40041d9	          0x4889df	                            mov rdi, rbx	       110	string3.h	FUNCTION_197	CALL_3
0x40041dc	      0xe800000000	                          call 0x40041e1	       110	string3.h	FUNCTION_197	CALL_3
0x40041e1	         0xfb64317	           movzx eax, byte [rbx + 0x17] 	       305	eval.c	FUNCTION_3	FOR_1	IF_2
0x40041e5	            0xa802	                              test al, 2	       305	eval.c	FUNCTION_3	FOR_1	IF_2
0x40041e7	            0x7406	                            je 0x40041ef	       305	eval.c	FUNCTION_3	FOR_1	IF_2
0x40041e9	        0xc643ff05	                   mov byte [rbx - 1], 5	       306	eval.c	FUNCTION_3	FOR_1	IF_2
0x40041ed	            0xeb10	                           jmp 0x40041ff	       306	eval.c	FUNCTION_3	FOR_1	IF_2
0x40041ef	          0x83e004	                              and eax, 4	       307	eval.c	FUNCTION_3	FOR_1	ELSE_1	IF_3
0x40041f2	            0x3c01	                               cmp al, 1	       308	eval.c	FUNCTION_3	FOR_1	ELSE_1	IF_3
0x40041f4	            0x19c0	                            sbb eax, eax	       308	eval.c	FUNCTION_3	FOR_1	ELSE_1	IF_3
0x40041f6	          0x83e0fe	                     and eax, 0xfffffffe	       308	eval.c	FUNCTION_3	FOR_1	ELSE_1	IF_3
0x40041f9	          0x83c006	                              add eax, 6	       308	eval.c	FUNCTION_3	FOR_1	ELSE_1	IF_3
0x40041fc	          0x8843ff	                  mov byte [rbx - 1], al	       308	eval.c	FUNCTION_3	FOR_1	ELSE_1	IF_3
0x40041ff	        0x837bef00	               cmp dword [rbx - 0x11], 0	       313	eval.c	FUNCTION_3	FOR_1	IF_4
0x4004203	            0x740d	                            je 0x4004212	       313	eval.c	FUNCTION_3	FOR_1	IF_4
0x4004205	          0x4889de	                            mov rsi, rbx	       314	eval.c	FUNCTION_3	FOR_1	CALL_9
0x4004208	      0xbf00000000	                              mov edi, 0	       314	eval.c	FUNCTION_3	FOR_1	CALL_9
0x400420d	      0xe800000000	                          call 0x4004212	       314	eval.c	FUNCTION_3	FOR_1	CALL_9
0x4004212	        0xf6431701	               test byte [rbx + 0x17], 1	       315	eval.c	FUNCTION_3	FOR_1	IF_5
0x4004216	            0x740d	                            je 0x4004225	       315	eval.c	FUNCTION_3	FOR_1	IF_5
0x4004218	          0x4889de	                            mov rsi, rbx	       317	eval.c	FUNCTION_3	FOR_1	CALL_10
0x400421b	      0xbf00000000	                              mov edi, 0	       317	eval.c	FUNCTION_3	FOR_1	CALL_10
0x4004220	      0xe800000000	                          call 0x4004225	       317	eval.c	FUNCTION_3	FOR_1	CALL_10
0x4004225	        0x4883c538	                           add rbp, 0x38	       317	eval.c	FUNCTION_3	FOR_1	CALL_10
0x4004229	          0x4c39e5	                            cmp rbp, r12	       296	eval.c	FUNCTION_3	FOR_1
0x400422c	     0xf8569ffffff	                           jne 0x400419b	       296	eval.c	FUNCTION_3	FOR_1
0x4004232	    0x48c705000000	          mov qword [0x0400423d], 0x320 	       319	eval.c	FUNCTION_3
0x400423d	    0x48c705000000	               mov qword [0x04004248], 1	      6385	eval.c	FUNCTION_102
0x4004248	    0x48c705000000	               mov qword [0x04004253], 1	      6385	eval.c	FUNCTION_102
0x4004253	      0xbf02000000	                              mov edi, 2	       323	eval.c	FUNCTION_3	CALL_14
0x4004258	      0xe800000000	                          call 0x400425d	       323	eval.c	FUNCTION_3	CALL_14
0x400425d	          0x4889c6	                            mov rsi, rax	       323	eval.c	FUNCTION_3	CALL_14
0x4004260	      0xbf3c000000	                           mov edi, 0x3c	       323	eval.c	FUNCTION_3	CALL_14
0x4004265	      0xe800000000	                          call 0x400426a	       323	eval.c	FUNCTION_3	CALL_14
0x400426a	      0xe800000000	                          call 0x400426f	       324	eval.c	FUNCTION_3	CALL_16
0x400426f	          0x4889c6	                            mov rsi, rax	       324	eval.c	FUNCTION_3	CALL_16
0x4004272	      0xbf40000000	                           mov edi, 0x40	       324	eval.c	FUNCTION_3	CALL_16
0x4004277	      0xe800000000	                          call 0x400427c	       324	eval.c	FUNCTION_3	CALL_16
0x400427c	      0xbf02000000	                              mov edi, 2	       325	eval.c	FUNCTION_3	CALL_18
0x4004281	      0xe800000000	                          call 0x4004286	       325	eval.c	FUNCTION_3	CALL_18
0x4004286	          0x4889c6	                            mov rsi, rax	       325	eval.c	FUNCTION_3	CALL_18
0x4004289	      0xbf56000000	                           mov edi, 0x56	       325	eval.c	FUNCTION_3	CALL_18
0x400428e	      0xe800000000	                          call 0x4004293	       325	eval.c	FUNCTION_3	CALL_18
0x4004293	    0x48c705000000	               mov qword [0x0400429e], 0	      6385	eval.c	FUNCTION_102
0x400429e	    0x48c705000000	               mov qword [0x040042a9], 1	      6385	eval.c	FUNCTION_102
0x40042a9	    0x48c705000000	               mov qword [0x040042b4], 2	      6385	eval.c	FUNCTION_102
0x40042b4	    0x48c705000000	               mov qword [0x040042bf], 3	      6385	eval.c	FUNCTION_102
0x40042bf	    0x48c705000000	               mov qword [0x040042ca], 0	      6385	eval.c	FUNCTION_102
0x40042ca	    0x48c705000000	               mov qword [0x040042d5], 1	      6385	eval.c	FUNCTION_102
0x40042d5	    0x48c705000000	               mov qword [0x040042e0], 2	      6385	eval.c	FUNCTION_102
0x40042e0	    0x48c705000000	               mov qword [0x040042eb], 3	      6385	eval.c	FUNCTION_102
0x40042eb	    0x48c705000000	               mov qword [0x040042f6], 4	      6385	eval.c	FUNCTION_102
0x40042f6	    0x48c705000000	               mov qword [0x04004301], 5	      6385	eval.c	FUNCTION_102
0x4004301	    0x48c705000000	               mov qword [0x0400430c], 6	      6385	eval.c	FUNCTION_102
0x400430c	    0x48c705000000	               mov qword [0x04004317], 7	      6385	eval.c	FUNCTION_102
0x4004317	    0x48c705000000	               mov qword [0x04004322], 8	      6385	eval.c	FUNCTION_102
0x4004322	    0x48c705000000	               mov qword [0x0400432d], 9	      6385	eval.c	FUNCTION_102
0x400432d	      0xbf00000000	                              mov edi, 0	       343	eval.c	FUNCTION_3	CALL_33
0x4004332	      0xe800000000	                          call 0x4004337	       343	eval.c	FUNCTION_3	CALL_33
0x4004337	        0x4883c408	                              add rsp, 8	       351	eval.c	FUNCTION_3
0x400433b	              0x5b	                                 pop rbx	       351	eval.c	FUNCTION_3
0x400433c	              0x5d	                                 pop rbp	       351	eval.c	FUNCTION_3
0x400433d	            0x415c	                                 pop r12	       351	eval.c	FUNCTION_3
0x400433f	            0x415d	                                 pop r13	       351	eval.c	FUNCTION_3
0x4004341	              0xc3	                                     ret	       351	eval.c	FUNCTION_3
free_tv	FOR,0:SWITCH,1:DO,0:IF,1:functions,0:WHILE,0:CALL,8:ELSE,0	31
0x4002771	          0x4885ff	                           test rdi, rdi	      6847	eval.c	FUNCTION_121	IF_1
0x4002774	            0x7464	                            je 0x40027da	      6847	eval.c	FUNCTION_121	IF_1
0x4002776	              0x53	                                push rbx	      6846	eval.c	FUNCTION_121
0x4002777	          0x4889fb	                            mov rbx, rdi	      6846	eval.c	FUNCTION_121
0x400277a	          0x833f0a	                    cmp dword [rdi], 0xa	      6849	eval.c	FUNCTION_121	IF_1	SWITCH_1
0x400277d	            0x7752	                            ja 0x40027d1	      6849	eval.c	FUNCTION_121	IF_1	SWITCH_1
0x400277f	            0x8b07	                    mov eax, dword [rdi]	      6849	eval.c	FUNCTION_121	IF_1	SWITCH_1
0x4002781	    0xff24c5000000	                       jmp qword [rax*8]	      6849	eval.c	FUNCTION_121	IF_1	SWITCH_1
0x4002788	        0x488b7f08	                mov rdi, qword [rdi + 8]	      6852	eval.c	FUNCTION_121	IF_1	SWITCH_1	CALL_1
0x400278c	      0xe800000000	                          call 0x4002791	      6852	eval.c	FUNCTION_121	IF_1	SWITCH_1	CALL_1
0x4002791	        0x488b7b08	                mov rdi, qword [rbx + 8]	      6855	eval.c	FUNCTION_121	IF_1	SWITCH_1	CALL_2
0x4002795	      0xe800000000	                          call 0x400279a	      6855	eval.c	FUNCTION_121	IF_1	SWITCH_1	CALL_2
0x400279a	            0xeb35	                           jmp 0x40027d1	      6856	eval.c	FUNCTION_121	IF_1	SWITCH_1
0x400279c	        0x488b7f08	                mov rdi, qword [rdi + 8]	      6858	eval.c	FUNCTION_121	IF_1	SWITCH_1	CALL_3
0x40027a0	      0xe800000000	                          call 0x40027a5	      6858	eval.c	FUNCTION_121	IF_1	SWITCH_1	CALL_3
0x40027a5	            0xeb2a	                           jmp 0x40027d1	      6859	eval.c	FUNCTION_121	IF_1	SWITCH_1
0x40027a7	        0x488b7f08	                mov rdi, qword [rdi + 8]	      6861	eval.c	FUNCTION_121	IF_1	SWITCH_1	CALL_4
0x40027ab	      0xe800000000	                          call 0x40027b0	      6861	eval.c	FUNCTION_121	IF_1	SWITCH_1	CALL_4
0x40027b0	            0xeb1f	                           jmp 0x40027d1	      6862	eval.c	FUNCTION_121	IF_1	SWITCH_1
0x40027b2	        0x488b7f08	                mov rdi, qword [rdi + 8]	      6864	eval.c	FUNCTION_121	IF_1	SWITCH_1	CALL_5
0x40027b6	      0xe800000000	                          call 0x40027bb	      6864	eval.c	FUNCTION_121	IF_1	SWITCH_1	CALL_5
0x40027bb	            0xeb14	                           jmp 0x40027d1	      6865	eval.c	FUNCTION_121	IF_1	SWITCH_1
0x40027bd	        0x488b7f08	                mov rdi, qword [rdi + 8]	      6868	eval.c	FUNCTION_121	IF_1	SWITCH_1	CALL_6
0x40027c1	      0xe800000000	                          call 0x40027c6	      6868	eval.c	FUNCTION_121	IF_1	SWITCH_1	CALL_6
0x40027c6	            0xeb09	                           jmp 0x40027d1	      6869	eval.c	FUNCTION_121	IF_1	SWITCH_1
0x40027c8	        0x488b7f08	                mov rdi, qword [rdi + 8]	      6873	eval.c	FUNCTION_121	IF_1	SWITCH_1	CALL_7
0x40027cc	      0xe800000000	                          call 0x40027d1	      6873	eval.c	FUNCTION_121	IF_1	SWITCH_1	CALL_7
0x40027d1	          0x4889df	                            mov rdi, rbx	      6882	eval.c	FUNCTION_121	IF_1	CALL_8
0x40027d4	      0xe800000000	                          call 0x40027d9	      6882	eval.c	FUNCTION_121	IF_1	CALL_8
0x40027d9	              0x5b	                                 pop rbx	      6884	eval.c	FUNCTION_121
0x40027da	            0xf3c3	                                     ret	      6884	eval.c	FUNCTION_121
assert_equalfile	FOR,1:SWITCH,0:DO,0:IF,8:functions,0:WHILE,0:CALL,18:ELSE,4	120
0x40063ed	            0x4155	                                push r13	      8838	eval.c	FUNCTION_171
0x40063ef	            0x4154	                                push r12	      8838	eval.c	FUNCTION_171
0x40063f1	              0x55	                                push rbp	      8838	eval.c	FUNCTION_171
0x40063f2	              0x53	                                push rbx	      8838	eval.c	FUNCTION_171
0x40063f3	    0x4881ecc80000	                           sub rsp, 0xc8	      8838	eval.c	FUNCTION_171
0x40063fa	          0x4889fb	                            mov rbx, rdi	      8838	eval.c	FUNCTION_171
0x40063fd	    0x64488b042528	                mov rax, qword fs:[0x28]	      8838	eval.c	FUNCTION_171
0x4006406	    0x48898424b800	             mov qword [rsp + 0xb8], rax	      8838	eval.c	FUNCTION_171
0x400640e	            0x31c0	                            xor eax, eax	      8838	eval.c	FUNCTION_171
0x4006410	      0x488d742420	                   lea rsi, [rsp + 0x20]	      8841	eval.c	FUNCTION_171	CALL_1
0x4006415	      0xe800000000	                          call 0x400641a	      8841	eval.c	FUNCTION_171	CALL_1
0x400641a	          0x4889c5	                            mov rbp, rax	      8841	eval.c	FUNCTION_171	CALL_1
0x400641d	        0x488d7b10	                   lea rdi, [rbx + 0x10]	      8842	eval.c	FUNCTION_171	CALL_2
0x4006421	      0x488d742470	                   lea rsi, [rsp + 0x70]	      8842	eval.c	FUNCTION_171	CALL_2
0x4006426	      0xe800000000	                          call 0x400642b	      8842	eval.c	FUNCTION_171	CALL_2
0x400642b	          0x4885ed	                           test rbp, rbp	      8847	eval.c	FUNCTION_171	IF_1
0x400642e	     0xf849a010000	                            je 0x40065ce	      8847	eval.c	FUNCTION_171	IF_1
0x4006434	          0x4889c3	                            mov rbx, rax	      8847	eval.c	FUNCTION_171	IF_1
0x4006437	          0x4885c0	                           test rax, rax	      8847	eval.c	FUNCTION_171	IF_1
0x400643a	     0xf848e010000	                            je 0x40065ce	      8847	eval.c	FUNCTION_171	IF_1
0x4006440	    0x488b05000000	            mov rax, qword [0x04006447] 	      8850	eval.c	FUNCTION_171
0x4006447	          0xc60000	                       mov byte [rax], 0	      8850	eval.c	FUNCTION_171
0x400644a	      0xbe00000000	                              mov esi, 0	      8851	eval.c	FUNCTION_171	CALL_3
0x400644f	          0x4889ef	                            mov rdi, rbp	      8851	eval.c	FUNCTION_171	CALL_3
0x4006452	      0xe800000000	                          call 0x4006457	      8851	eval.c	FUNCTION_171	CALL_3
0x4006457	          0x4989c4	                            mov r12, rax	      8851	eval.c	FUNCTION_171	CALL_3
0x400645a	          0x4885c0	                           test rax, rax	      8852	eval.c	FUNCTION_171	IF_2
0x400645d	            0x7523	                           jne 0x4006482	      8852	eval.c	FUNCTION_171	IF_2
0x400645f	          0x4889e9	                            mov rcx, rbp	      8854	eval.c	FUNCTION_171	IF_2	CALL_4
0x4006462	      0xba00000000	                              mov edx, 0	      8854	eval.c	FUNCTION_171	IF_2	CALL_4
0x4006467	      0xbe01040000	                          mov esi, 0x401	      8854	eval.c	FUNCTION_171	IF_2	CALL_4
0x400646c	    0x488b3d000000	            mov rdi, qword [0x04006473] 	      8854	eval.c	FUNCTION_171	IF_2	CALL_4
0x4006473	      0xb800000000	                              mov eax, 0	      8854	eval.c	FUNCTION_171	IF_2	CALL_4
0x4006478	      0xe800000000	                          call 0x400647d	      8854	eval.c	FUNCTION_171	IF_2	CALL_4
0x400647d	      0xe90d010000	                           jmp 0x400658f	      8854	eval.c	FUNCTION_171	IF_2	CALL_4
0x4006482	      0xbe00000000	                              mov esi, 0	      8858	eval.c	FUNCTION_171	ELSE_1	CALL_5
0x4006487	          0x4889df	                            mov rdi, rbx	      8858	eval.c	FUNCTION_171	ELSE_1	CALL_5
0x400648a	      0xe800000000	                          call 0x400648f	      8858	eval.c	FUNCTION_171	ELSE_1	CALL_5
0x400648f	          0x4989c5	                            mov r13, rax	      8858	eval.c	FUNCTION_171	ELSE_1	CALL_5
0x4006492	      0xbd00000000	                              mov ebp, 0	      8858	eval.c	FUNCTION_171	ELSE_1	CALL_5
0x4006497	          0x4885c0	                           test rax, rax	      8859	eval.c	FUNCTION_171	ELSE_1	IF_3
0x400649a	            0x752b	                           jne 0x40064c7	      8859	eval.c	FUNCTION_171	ELSE_1	IF_3
0x400649c	          0x4c89e7	                            mov rdi, r12	      8861	eval.c	FUNCTION_171	ELSE_1	IF_3	CALL_6
0x400649f	      0xe800000000	                          call 0x40064a4	      8861	eval.c	FUNCTION_171	ELSE_1	IF_3	CALL_6
0x40064a4	          0x4889d9	                            mov rcx, rbx	      8862	eval.c	FUNCTION_171	ELSE_1	IF_3	CALL_7
0x40064a7	      0xba00000000	                              mov edx, 0	      8862	eval.c	FUNCTION_171	ELSE_1	IF_3	CALL_7
0x40064ac	      0xbe01040000	                          mov esi, 0x401	      8862	eval.c	FUNCTION_171	ELSE_1	IF_3	CALL_7
0x40064b1	    0x488b3d000000	            mov rdi, qword [0x040064b8] 	      8862	eval.c	FUNCTION_171	ELSE_1	IF_3	CALL_7
0x40064b8	      0xb800000000	                              mov eax, 0	      8862	eval.c	FUNCTION_171	ELSE_1	IF_3	CALL_7
0x40064bd	      0xe800000000	                          call 0x40064c2	      8862	eval.c	FUNCTION_171	ELSE_1	IF_3	CALL_7
0x40064c2	      0xe9c8000000	                           jmp 0x400658f	      8862	eval.c	FUNCTION_171	ELSE_1	IF_3	CALL_7
0x40064c7	          0x4c89e7	                            mov rdi, r12	      8871	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1	CALL_8
0x40064ca	      0xe800000000	                          call 0x40064cf	      8871	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1	CALL_8
0x40064cf	            0x89c3	                            mov ebx, eax	      8871	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1	CALL_8
0x40064d1	          0x4c89ef	                            mov rdi, r13	      8872	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1	CALL_9
0x40064d4	      0xe800000000	                          call 0x40064d9	      8872	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1	CALL_9
0x40064d9	          0x83fbff	             cmp ebx, 0xffffffffffffffff	      8873	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1	IF_4
0x40064dc	            0x753a	                           jne 0x4006518	      8873	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1	IF_4
0x40064de	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      8875	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1	IF_4	IF_5
0x40064e1	     0xf8498000000	                            je 0x400657f	      8875	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1	IF_4	IF_5
0x40064e7	    0x488b05000000	            mov rax, qword [0x040064ee] 	       110	string3.h	FUNCTION_197	CALL_3
0x40064ee	    0x48b966697273	          movabs rcx, 0x6966207473726966	       110	string3.h	FUNCTION_197	CALL_3
0x40064f8	          0x488908	                    mov qword [rax], rcx	       110	string3.h	FUNCTION_197	CALL_3
0x40064fb	    0x48b96c652069	          movabs rcx, 0x687320736920656c	       110	string3.h	FUNCTION_197	CALL_3
0x4006505	        0x48894808	                mov qword [rax + 8], rcx	       110	string3.h	FUNCTION_197	CALL_3
0x4006509	    0xc740106f7274	     mov dword [rax + 0x10], 0x6574726f 	       110	string3.h	FUNCTION_197	CALL_3
0x4006510	    0x66c740147200	            mov word [rax + 0x14], 0x72 	       110	string3.h	FUNCTION_197	CALL_3
0x4006516	            0xeb67	                           jmp 0x400657f	       110	string3.h	FUNCTION_197	CALL_3
0x4006518	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      8879	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1	ELSE_3	IF_6
0x400651b	            0x7535	                           jne 0x4006552	      8879	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1	ELSE_3	IF_6
0x400651d	    0x488b05000000	            mov rax, qword [0x04006524] 	       110	string3.h	FUNCTION_197	CALL_3
0x4006524	    0x48ba7365636f	          movabs rdx, 0x6620646e6f636573	       110	string3.h	FUNCTION_197	CALL_3
0x400652e	          0x488910	                    mov qword [rax], rdx	       110	string3.h	FUNCTION_197	CALL_3
0x4006531	    0x48ba696c6520	          movabs rdx, 0x7320736920656c69	       110	string3.h	FUNCTION_197	CALL_3
0x400653b	        0x48895008	                mov qword [rax + 8], rdx	       110	string3.h	FUNCTION_197	CALL_3
0x400653f	    0xc74010686f72	     mov dword [rax + 0x10], 0x74726f68 	       110	string3.h	FUNCTION_197	CALL_3
0x4006546	    0x66c740146572	          mov word [rax + 0x14], 0x7265 	       110	string3.h	FUNCTION_197	CALL_3
0x400654c	        0xc6401600	                mov byte [rax + 0x16], 0	       110	string3.h	FUNCTION_197	CALL_3
0x4006550	            0xeb2d	                           jmp 0x400657f	       110	string3.h	FUNCTION_197	CALL_3
0x4006552	            0x39c3	                            cmp ebx, eax	      8884	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_7
0x4006554	            0x7420	                            je 0x4006576	      8884	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_7
0x4006556	          0x4889e9	                            mov rcx, rbp	      8886	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_7	CALL_12
0x4006559	      0xba00000000	                              mov edx, 0	      8886	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_7	CALL_12
0x400655e	      0xbe01040000	                          mov esi, 0x401	      8886	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_7	CALL_12
0x4006563	    0x488b3d000000	            mov rdi, qword [0x0400656a] 	      8886	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_7	CALL_12
0x400656a	      0xb800000000	                              mov eax, 0	      8886	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_7	CALL_12
0x400656f	      0xe800000000	                          call 0x4006574	      8886	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_7	CALL_12
0x4006574	            0xeb09	                           jmp 0x400657f	      8888	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_7
0x4006576	        0x4883c501	                              add rbp, 1	      8890	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1
0x400657a	      0xe948ffffff	                           jmp 0x40064c7	      8891	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1
0x400657f	          0x4c89e7	                            mov rdi, r12	      8892	eval.c	FUNCTION_171	ELSE_1	ELSE_2	CALL_13
0x4006582	      0xe800000000	                          call 0x4006587	      8892	eval.c	FUNCTION_171	ELSE_1	ELSE_2	CALL_13
0x4006587	          0x4c89ef	                            mov rdi, r13	      8893	eval.c	FUNCTION_171	ELSE_1	ELSE_2	CALL_14
0x400658a	      0xe800000000	                          call 0x400658f	      8893	eval.c	FUNCTION_171	ELSE_1	ELSE_2	CALL_14
0x400658f	      0xb800000000	                              mov eax, 0	      8904	eval.c	FUNCTION_171
0x4006594	    0x488b15000000	            mov rdx, qword [0x0400659b] 	      8896	eval.c	FUNCTION_171	IF_8
0x400659b	          0x803a00	                       cmp byte [rdx], 0	      8896	eval.c	FUNCTION_171	IF_8
0x400659e	            0x7433	                            je 0x40065d3	      8896	eval.c	FUNCTION_171	IF_8
0x40065a0	          0x4889e7	                            mov rdi, rsp	      8898	eval.c	FUNCTION_171	IF_8	CALL_15
0x40065a3	      0xe800000000	                          call 0x40065a8	      8898	eval.c	FUNCTION_171	IF_8	CALL_15
0x40065a8	    0x488b35000000	            mov rsi, qword [0x040065af] 	      8899	eval.c	FUNCTION_171	IF_8	CALL_16
0x40065af	          0x4889e7	                            mov rdi, rsp	      8899	eval.c	FUNCTION_171	IF_8	CALL_16
0x40065b2	      0xe800000000	                          call 0x40065b7	      8899	eval.c	FUNCTION_171	IF_8	CALL_16
0x40065b7	          0x4889e7	                            mov rdi, rsp	      8900	eval.c	FUNCTION_171	IF_8	CALL_17
0x40065ba	      0xe800000000	                          call 0x40065bf	      8900	eval.c	FUNCTION_171	IF_8	CALL_17
0x40065bf	          0x4889e7	                            mov rdi, rsp	      8901	eval.c	FUNCTION_171	IF_8	CALL_18
0x40065c2	      0xe800000000	                          call 0x40065c7	      8901	eval.c	FUNCTION_171	IF_8	CALL_18
0x40065c7	      0xb801000000	                              mov eax, 1	      8902	eval.c	FUNCTION_171	IF_8
0x40065cc	            0xeb05	                           jmp 0x40065d3	      8902	eval.c	FUNCTION_171	IF_8
0x40065ce	      0xb800000000	                              mov eax, 0	      8848	eval.c	FUNCTION_171	IF_1
0x40065d3	    0x488b8c24b800	            mov rcx, qword [rsp + 0xb8] 	      8905	eval.c	FUNCTION_171
0x40065db	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      8905	eval.c	FUNCTION_171
0x40065e4	            0x7405	                            je 0x40065eb	      8905	eval.c	FUNCTION_171
0x40065e6	      0xe800000000	                          call 0x40065eb	      8905	eval.c	FUNCTION_171
0x40065eb	    0x4881c4c80000	                           add rsp, 0xc8	      8905	eval.c	FUNCTION_171
0x40065f2	              0x5b	                                 pop rbx	      8905	eval.c	FUNCTION_171
0x40065f3	              0x5d	                                 pop rbp	      8905	eval.c	FUNCTION_171
0x40065f4	            0x415c	                                 pop r12	      8905	eval.c	FUNCTION_171
0x40065f6	            0x415d	                                 pop r13	      8905	eval.c	FUNCTION_171
0x40065f8	              0xc3	                                     ret	      8905	eval.c	FUNCTION_171
find_tabwin	FOR,0:SWITCH,0:DO,0:IF,4:functions,0:WHILE,0:CALL,3:ELSE,2	25
0x4004d3f	    0x488b05000000	            mov rax, qword [0x04004d46] 	      8270	eval.c	FUNCTION_156	ELSE_2
0x4004d46	          0x833f00	                      cmp dword [rdi], 0	      8255	eval.c	FUNCTION_156	IF_1
0x4004d49	            0x7445	                            je 0x4004d90	      8255	eval.c	FUNCTION_156	IF_1
0x4004d4b	              0x53	                                push rbx	      8250	eval.c	FUNCTION_156
0x4004d4c	          0x4889f2	                            mov rdx, rsi	      8250	eval.c	FUNCTION_156
0x4004d4f	          0x4889fb	                            mov rbx, rdi	      8250	eval.c	FUNCTION_156
0x4004d52	    0x488b35000000	            mov rsi, qword [0x04004d59] 	      8264	eval.c	FUNCTION_156	IF_1	ELSE_1
0x4004d59	          0x833a00	                      cmp dword [rdx], 0	      8257	eval.c	FUNCTION_156	IF_1	IF_2
0x4004d5c	            0x741d	                            je 0x4004d7b	      8257	eval.c	FUNCTION_156	IF_1	IF_2
0x4004d5e	          0x4889d7	                            mov rdi, rdx	      8259	eval.c	FUNCTION_156	IF_1	IF_2	CALL_1
0x4004d61	      0xe800000000	                          call 0x4004d66	      8259	eval.c	FUNCTION_156	IF_1	IF_2	CALL_1
0x4004d66	          0x4889c7	                            mov rdi, rax	      8259	eval.c	FUNCTION_156	IF_1	IF_2	CALL_1
0x4004d69	      0xb800000000	                              mov eax, 0	      8251	eval.c	FUNCTION_156
0x4004d6e	          0x4885ff	                           test rdi, rdi	      8260	eval.c	FUNCTION_156	IF_1	IF_2	IF_3
0x4004d71	            0x781c	                            js 0x4004d8f	      8260	eval.c	FUNCTION_156	IF_1	IF_2	IF_3
0x4004d73	      0xe800000000	                          call 0x4004d78	      8261	eval.c	FUNCTION_156	IF_1	IF_2	CALL_2
0x4004d78	          0x4889c6	                            mov rsi, rax	      8261	eval.c	FUNCTION_156	IF_1	IF_2	CALL_2
0x4004d7b	          0x4885f6	                           test rsi, rsi	      8266	eval.c	FUNCTION_156	IF_1	IF_4
0x4004d7e	            0x740a	                            je 0x4004d8a	      8266	eval.c	FUNCTION_156	IF_1	IF_4
0x4004d80	          0x4889df	                            mov rdi, rbx	      8267	eval.c	FUNCTION_156	IF_1	CALL_3
0x4004d83	      0xe800000000	                          call 0x4004d88	      8267	eval.c	FUNCTION_156	IF_1	CALL_3
0x4004d88	            0xeb05	                           jmp 0x4004d8f	      8267	eval.c	FUNCTION_156	IF_1	CALL_3
0x4004d8a	      0xb800000000	                              mov eax, 0	      8251	eval.c	FUNCTION_156
0x4004d8f	              0x5b	                                 pop rbx	      8273	eval.c	FUNCTION_156	ELSE_2
0x4004d90	            0xf3c3	                                     ret	      8273	eval.c	FUNCTION_156	ELSE_2
check_vars	FOR,0:SWITCH,0:DO,0:IF,3:functions,0:WHILE,0:CALL,4:ELSE,0	43
0x40052df	            0x4155	                                push r13	      6688	eval.c	FUNCTION_117
0x40052e1	            0x4154	                                push r12	      6688	eval.c	FUNCTION_117
0x40052e3	              0x55	                                push rbp	      6688	eval.c	FUNCTION_117
0x40052e4	              0x53	                                push rbx	      6688	eval.c	FUNCTION_117
0x40052e5	        0x4883ec18	                           sub rsp, 0x18	      6688	eval.c	FUNCTION_117
0x40052e9	    0x64488b042528	                mov rax, qword fs:[0x28]	      6688	eval.c	FUNCTION_117
0x40052f2	      0x4889442408	                mov qword [rsp + 8], rax	      6688	eval.c	FUNCTION_117
0x40052f7	            0x31c0	                            xor eax, eax	      6688	eval.c	FUNCTION_117
0x40052f9	    0x48833d000000	               cmp qword [0x04005301], 0	      6693	eval.c	FUNCTION_117	IF_1
0x4005301	            0x7457	                            je 0x400535a	      6693	eval.c	FUNCTION_117	IF_1
0x4005303	          0x4889fd	                            mov rbp, rdi	      6693	eval.c	FUNCTION_117	IF_1
0x4005306	          0x4863f6	                         movsxd rsi, esi	      6697	eval.c	FUNCTION_117
0x4005309	        0x488d1c37	                    lea rbx, [rdi + rsi]	      6697	eval.c	FUNCTION_117
0x400530d	        0x440fb62b	                  movzx r13d, byte [rbx]	      6697	eval.c	FUNCTION_117
0x4005311	          0xc60300	                       mov byte [rbx], 0	      6698	eval.c	FUNCTION_117
0x4005314	          0x4889e6	                            mov rsi, rsp	      6700	eval.c	FUNCTION_117	CALL_1
0x4005317	      0xe800000000	                          call 0x400531c	      6700	eval.c	FUNCTION_117	CALL_1
0x400531c	          0x4989c4	                            mov r12, rax	      6700	eval.c	FUNCTION_117	CALL_1
0x400531f	      0xe800000000	                          call 0x4005324	      6701	eval.c	FUNCTION_117	IF_2	CALL_3
0x4005324	          0x4939c4	                            cmp r12, rax	      6701	eval.c	FUNCTION_117	IF_2	CALL_3
0x4005327	            0x740a	                            je 0x4005333	      6701	eval.c	FUNCTION_117	IF_2	CALL_3
0x4005329	      0xe800000000	                          call 0x400532e	      6701	eval.c	FUNCTION_117	IF_2	CALL_3
0x400532e	          0x4939c4	                            cmp r12, rax	      6701	eval.c	FUNCTION_117	IF_2	CALL_3
0x4005331	            0x7524	                           jne 0x4005357	      6701	eval.c	FUNCTION_117	IF_2	CALL_3
0x4005333	      0xba01000000	                              mov edx, 1	      6703	eval.c	FUNCTION_117	IF_2	IF_3	CALL_4
0x4005338	      0xbe00000000	                              mov esi, 0	      6703	eval.c	FUNCTION_117	IF_2	IF_3	CALL_4
0x400533d	          0x4889ef	                            mov rdi, rbp	      6703	eval.c	FUNCTION_117	IF_2	IF_3	CALL_4
0x4005340	      0xe800000000	                          call 0x4005345	      6703	eval.c	FUNCTION_117	IF_2	IF_3	CALL_4
0x4005345	          0x4885c0	                           test rax, rax	      6703	eval.c	FUNCTION_117	IF_2	IF_3	CALL_4
0x4005348	            0x740d	                            je 0x4005357	      6703	eval.c	FUNCTION_117	IF_2	IF_3	CALL_4
0x400534a	    0x488b05000000	            mov rax, qword [0x04005351] 	      6704	eval.c	FUNCTION_117	IF_2	IF_3
0x4005351	    0xc70001000000	                      mov dword [rax], 1	      6704	eval.c	FUNCTION_117	IF_2	IF_3
0x4005357	          0x44882b	                    mov byte [rbx], r13b	      6707	eval.c	FUNCTION_117
0x400535a	      0x488b442408	                mov rax, qword [rsp + 8]	      6708	eval.c	FUNCTION_117
0x400535f	    0x644833042528	                xor rax, qword fs:[0x28]	      6708	eval.c	FUNCTION_117
0x4005368	            0x7405	                            je 0x400536f	      6708	eval.c	FUNCTION_117
0x400536a	      0xe800000000	                          call 0x400536f	      6708	eval.c	FUNCTION_117
0x400536f	        0x4883c418	                           add rsp, 0x18	      6708	eval.c	FUNCTION_117
0x4005373	              0x5b	                                 pop rbx	      6708	eval.c	FUNCTION_117
0x4005374	              0x5d	                                 pop rbp	      6708	eval.c	FUNCTION_117
0x4005375	            0x415c	                                 pop r12	      6708	eval.c	FUNCTION_117
0x4005377	            0x415d	                                 pop r13	      6708	eval.c	FUNCTION_117
0x4005379	              0xc3	                                     ret	      6708	eval.c	FUNCTION_117
find_var	FOR,0:SWITCH,0:DO,0:IF,3:functions,0:WHILE,0:CALL,3:ELSE,0	44
0x4005252	            0x4154	                                push r12	      7190	eval.c	FUNCTION_131
0x4005254	              0x55	                                push rbp	      7190	eval.c	FUNCTION_131
0x4005255	              0x53	                                push rbx	      7190	eval.c	FUNCTION_131
0x4005256	        0x4883ec10	                           sub rsp, 0x10	      7190	eval.c	FUNCTION_131
0x400525a	          0x4989fc	                            mov r12, rdi	      7190	eval.c	FUNCTION_131
0x400525d	          0x4889f5	                            mov rbp, rsi	      7190	eval.c	FUNCTION_131
0x4005260	            0x89d3	                            mov ebx, edx	      7190	eval.c	FUNCTION_131
0x4005262	    0x64488b042528	                mov rax, qword fs:[0x28]	      7190	eval.c	FUNCTION_131
0x400526b	      0x4889442408	                mov qword [rsp + 8], rax	      7190	eval.c	FUNCTION_131
0x4005270	            0x31c0	                            xor eax, eax	      7190	eval.c	FUNCTION_131
0x4005272	          0x4889e6	                            mov rsi, rsp	      7195	eval.c	FUNCTION_131	CALL_1
0x4005275	      0xe800000000	                          call 0x400527a	      7195	eval.c	FUNCTION_131	CALL_1
0x400527a	          0x4885ed	                           test rbp, rbp	      7196	eval.c	FUNCTION_131	IF_1
0x400527d	            0x7404	                            je 0x4005283	      7196	eval.c	FUNCTION_131	IF_1
0x400527f	        0x48894500	                    mov qword [rbp], rax	      7197	eval.c	FUNCTION_131	IF_1
0x4005283	          0x4885c0	                           test rax, rax	      7198	eval.c	FUNCTION_131	IF_2
0x4005286	            0x7434	                            je 0x40052bc	      7198	eval.c	FUNCTION_131	IF_2
0x4005288	            0x85db	                           test ebx, ebx	      7200	eval.c	FUNCTION_131	CALL_2
0x400528a	           0xf95c3	                                setne bl	      7200	eval.c	FUNCTION_131	CALL_2
0x400528d	          0x4885ed	                           test rbp, rbp	      7200	eval.c	FUNCTION_131	CALL_2
0x4005290	           0xf95c2	                                setne dl	      7200	eval.c	FUNCTION_131	CALL_2
0x4005293	             0x9d3	                             or ebx, edx	      7200	eval.c	FUNCTION_131	CALL_2
0x4005295	           0xfb6db	                           movzx ebx, bl	      7200	eval.c	FUNCTION_131	CALL_2
0x4005298	      0x410fb63424	                   movzx esi, byte [r12]	      7200	eval.c	FUNCTION_131	CALL_2
0x400529d	            0x89d9	                            mov ecx, ebx	      7200	eval.c	FUNCTION_131	CALL_2
0x400529f	        0x488b1424	                    mov rdx, qword [rsp]	      7200	eval.c	FUNCTION_131	CALL_2
0x40052a3	          0x4889c7	                            mov rdi, rax	      7200	eval.c	FUNCTION_131	CALL_2
0x40052a6	      0xe800000000	                          call 0x40052ab	      7200	eval.c	FUNCTION_131	CALL_2
0x40052ab	          0x4885c0	                           test rax, rax	      7201	eval.c	FUNCTION_131	IF_3
0x40052ae	            0x7511	                           jne 0x40052c1	      7201	eval.c	FUNCTION_131	IF_3
0x40052b0	            0x89de	                            mov esi, ebx	      7205	eval.c	FUNCTION_131	CALL_3
0x40052b2	          0x4c89e7	                            mov rdi, r12	      7205	eval.c	FUNCTION_131	CALL_3
0x40052b5	      0xe800000000	                          call 0x40052ba	      7205	eval.c	FUNCTION_131	CALL_3
0x40052ba	            0xeb05	                           jmp 0x40052c1	      7205	eval.c	FUNCTION_131	CALL_3
0x40052bc	      0xb800000000	                              mov eax, 0	      7199	eval.c	FUNCTION_131	IF_2
0x40052c1	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      7206	eval.c	FUNCTION_131
0x40052c6	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      7206	eval.c	FUNCTION_131
0x40052cf	            0x7405	                            je 0x40052d6	      7206	eval.c	FUNCTION_131
0x40052d1	      0xe800000000	                          call 0x40052d6	      7206	eval.c	FUNCTION_131
0x40052d6	        0x4883c410	                           add rsp, 0x10	      7206	eval.c	FUNCTION_131
0x40052da	              0x5b	                                 pop rbx	      7206	eval.c	FUNCTION_131
0x40052db	              0x5d	                                 pop rbp	      7206	eval.c	FUNCTION_131
0x40052dc	            0x415c	                                 pop r12	      7206	eval.c	FUNCTION_131
0x40052de	              0xc3	                                     ret	      7206	eval.c	FUNCTION_131
next_for_item	FOR,0:SWITCH,0:DO,0:IF,1:functions,0:WHILE,0:CALL,1:ELSE,1	21
0x400a488	        0x488b4f08	                mov rcx, qword [rdi + 8]	      2570	eval.c	FUNCTION_49
0x400a48c	      0xb800000000	                              mov eax, 0	      2572	eval.c	FUNCTION_49	IF_1
0x400a491	          0x4885c9	                           test rcx, rcx	      2571	eval.c	FUNCTION_49	IF_1
0x400a494	            0x743b	                            je 0x400a4d1	      2571	eval.c	FUNCTION_49	IF_1
0x400a496	        0x4883ec08	                              sub rsp, 8	      2565	eval.c	FUNCTION_49
0x400a49a	          0x4889fa	                            mov rdx, rdi	      2565	eval.c	FUNCTION_49
0x400a49d	          0x4889f7	                            mov rdi, rsi	      2565	eval.c	FUNCTION_49
0x400a4a0	          0x4889d0	                            mov rax, rdx	      2565	eval.c	FUNCTION_49
0x400a4a3	          0x488b11	                    mov rdx, qword [rcx]	      2575	eval.c	FUNCTION_49	ELSE_1
0x400a4a6	        0x48895008	                mov qword [rax + 8], rdx	      2575	eval.c	FUNCTION_49	ELSE_1
0x400a4aa	        0x488d7110	                   lea rsi, [rcx + 0x10]	      2576	eval.c	FUNCTION_49	ELSE_1	CALL_1
0x400a4ae	    0x41b900000000	                              mov r9d, 0	      2576	eval.c	FUNCTION_49	ELSE_1	CALL_1
0x400a4b4	        0x448b4004	                mov r8d, dword [rax + 4]	      2576	eval.c	FUNCTION_49	ELSE_1	CALL_1
0x400a4b8	            0x8b08	                    mov ecx, dword [rax]	      2576	eval.c	FUNCTION_49	ELSE_1	CALL_1
0x400a4ba	      0xba01000000	                              mov edx, 1	      2576	eval.c	FUNCTION_49	ELSE_1	CALL_1
0x400a4bf	      0xe8cbfdffff	                    call sym.ex_let_vars	      2576	eval.c	FUNCTION_49	ELSE_1	CALL_1
0x400a4c4	          0x83f801	                              cmp eax, 1	      2576	eval.c	FUNCTION_49	ELSE_1	CALL_1
0x400a4c7	           0xf94c0	                                 sete al	      2576	eval.c	FUNCTION_49	ELSE_1	CALL_1
0x400a4ca	           0xfb6c0	                           movzx eax, al	      2576	eval.c	FUNCTION_49	ELSE_1	CALL_1
0x400a4cd	        0x4883c408	                              add rsp, 8	      2580	eval.c	FUNCTION_49
0x400a4d1	            0xf3c3	                                     ret	      2580	eval.c	FUNCTION_49
echo_string_core	FOR,1:SWITCH,1:DO,0:IF,17:functions,0:WHILE,0:CALL,28:ELSE,6	268
0x400334c	            0x4156	                                push r14	      5549	eval.c	FUNCTION_87
0x400334e	            0x4155	                                push r13	      5549	eval.c	FUNCTION_87
0x4003350	            0x4154	                                push r12	      5549	eval.c	FUNCTION_87
0x4003352	              0x55	                                push rbp	      5549	eval.c	FUNCTION_87
0x4003353	              0x53	                                push rbx	      5549	eval.c	FUNCTION_87
0x4003354	        0x4883ec40	                           sub rsp, 0x40	      5549	eval.c	FUNCTION_87
0x4003358	          0x4989f4	                            mov r12, rsi	      5549	eval.c	FUNCTION_87
0x400335b	    0x64488b042528	                mov rax, qword fs:[0x28]	      5549	eval.c	FUNCTION_87
0x4003364	      0x4889442438	             mov qword [rsp + 0x38], rax	      5549	eval.c	FUNCTION_87
0x4003369	            0x31c0	                            xor eax, eax	      5549	eval.c	FUNCTION_87
0x400336b	    0x8b0500000000	            mov eax, dword [0x04003371] 	      5553	eval.c	FUNCTION_87	IF_1
0x4003371	          0x83f863	                           cmp eax, 0x63	      5553	eval.c	FUNCTION_87	IF_1
0x4003374	            0x7e41	                           jle 0x40033b7	      5553	eval.c	FUNCTION_87	IF_1
0x4003376	    0x833d00000000	               cmp dword [0x0400337d], 0	      5555	eval.c	FUNCTION_87	IF_1	IF_2
0x400337d	            0x7526	                           jne 0x40033a5	      5555	eval.c	FUNCTION_87	IF_1	IF_2
0x400337f	    0xc70500000000	               mov dword [0x04003389], 1	      5560	eval.c	FUNCTION_87	IF_1	IF_2
0x4003389	      0xba05000000	                              mov edx, 5	      5561	eval.c	FUNCTION_87	IF_1	IF_2	CALL_2
0x400338e	      0xbe00000000	                              mov esi, 0	      5561	eval.c	FUNCTION_87	IF_1	IF_2	CALL_2
0x4003393	      0xbf00000000	                              mov edi, 0	      5561	eval.c	FUNCTION_87	IF_1	IF_2	CALL_2
0x4003398	      0xe800000000	                          call 0x400339d	      5561	eval.c	FUNCTION_87	IF_1	IF_2	CALL_2
0x400339d	          0x4889c7	                            mov rdi, rax	      5561	eval.c	FUNCTION_87	IF_1	IF_2	CALL_2
0x40033a0	      0xe800000000	                          call 0x40033a5	      5561	eval.c	FUNCTION_87	IF_1	IF_2	CALL_2
0x40033a5	    0x49c704240000	                      mov qword [r12], 0	      5563	eval.c	FUNCTION_87	IF_1
0x40033ad	      0xb800000000	                              mov eax, 0	      5564	eval.c	FUNCTION_87	IF_1
0x40033b2	      0xe980030000	                           jmp 0x4003737	      5564	eval.c	FUNCTION_87	IF_1
0x40033b7	          0x4889fd	                            mov rbp, rdi	      5564	eval.c	FUNCTION_87	IF_1
0x40033ba	          0x4889d3	                            mov rbx, rdx	      5564	eval.c	FUNCTION_87	IF_1
0x40033bd	          0x4189cd	                           mov r13d, ecx	      5564	eval.c	FUNCTION_87	IF_1
0x40033c0	          0x4589ce	                           mov r14d, r9d	      5564	eval.c	FUNCTION_87	IF_1
0x40033c3	          0x83c001	                              add eax, 1	      5566	eval.c	FUNCTION_87
0x40033c6	    0x890500000000	            mov dword [0x040033cc], eax 	      5566	eval.c	FUNCTION_87
0x40033cc	          0x833f0a	                    cmp dword [rdi], 0xa	      5568	eval.c	FUNCTION_87	SWITCH_1
0x40033cf	     0xf873d030000	                            ja 0x4003712	      5568	eval.c	FUNCTION_87	SWITCH_1
0x40033d5	            0x8b07	                    mov eax, dword [rdi]	      5568	eval.c	FUNCTION_87	SWITCH_1
0x40033d7	    0xff24c5000000	                       jmp qword [rax*8]	      5568	eval.c	FUNCTION_87	SWITCH_1
0x40033de	          0x4585c0	                           test r8d, r8d	      5571	eval.c	FUNCTION_87	SWITCH_1	IF_3
0x40033e1	            0x7423	                            je 0x4003406	      5571	eval.c	FUNCTION_87	SWITCH_1	IF_3
0x40033e3	      0x837c247000	               cmp dword [rsp + 0x70], 0	      5571	eval.c	FUNCTION_87	SWITCH_1	IF_3
0x40033e8	            0x751c	                           jne 0x4003406	      5571	eval.c	FUNCTION_87	SWITCH_1	IF_3
0x40033ea	    0x48c706000000	                      mov qword [rsi], 0	      5573	eval.c	FUNCTION_87	SWITCH_1	IF_3
0x40033f1	        0x488b5f08	                mov rbx, qword [rdi + 8]	      5574	eval.c	FUNCTION_87	SWITCH_1	IF_3
0x40033f5	          0x4885db	                           test rbx, rbx	      5576	eval.c	FUNCTION_87	SWITCH_1	IF_3	IF_4
0x40033f8	      0xb800000000	                              mov eax, 0	      5576	eval.c	FUNCTION_87	SWITCH_1	IF_3	IF_4
0x40033fd	        0x480f44d8	                          cmove rbx, rax	      5576	eval.c	FUNCTION_87	SWITCH_1	IF_3	IF_4
0x4003401	      0xe911030000	                           jmp 0x4003717	      5576	eval.c	FUNCTION_87	SWITCH_1	IF_3	IF_4
0x4003406	        0x488b7d08	                mov rdi, qword [rbp + 8]	      5580	eval.c	FUNCTION_87	SWITCH_1	ELSE_1	CALL_3
0x400340a	      0xbe00000000	                              mov esi, 0	      5580	eval.c	FUNCTION_87	SWITCH_1	ELSE_1	CALL_3
0x400340f	      0xe800000000	                          call 0x4003414	      5580	eval.c	FUNCTION_87	SWITCH_1	ELSE_1	CALL_3
0x4003414	          0x4889c3	                            mov rbx, rax	      5580	eval.c	FUNCTION_87	SWITCH_1	ELSE_1	CALL_3
0x4003417	        0x49890424	                    mov qword [r12], rax	      5580	eval.c	FUNCTION_87	SWITCH_1	ELSE_1	CALL_3
0x400341b	      0xe9f7020000	                           jmp 0x4003717	      5580	eval.c	FUNCTION_87	SWITCH_1	ELSE_1	CALL_3
0x4003420	          0x4585c0	                           test r8d, r8d	      5586	eval.c	FUNCTION_87	SWITCH_1	IF_5
0x4003423	            0x7410	                            je 0x4003435	      5586	eval.c	FUNCTION_87	SWITCH_1	IF_5
0x4003425	    0x48c706000000	                      mov qword [rsi], 0	      5588	eval.c	FUNCTION_87	SWITCH_1	IF_5
0x400342c	        0x488b5f08	                mov rbx, qword [rdi + 8]	      5589	eval.c	FUNCTION_87	SWITCH_1	IF_5
0x4003430	      0xe9e2020000	                           jmp 0x4003717	      5589	eval.c	FUNCTION_87	SWITCH_1	IF_5
0x4003435	        0x488b7f08	                mov rdi, qword [rdi + 8]	      5593	eval.c	FUNCTION_87	SWITCH_1	ELSE_2	CALL_4
0x4003439	      0xbe01000000	                              mov esi, 1	      5593	eval.c	FUNCTION_87	SWITCH_1	ELSE_2	CALL_4
0x400343e	      0xe800000000	                          call 0x4003443	      5593	eval.c	FUNCTION_87	SWITCH_1	ELSE_2	CALL_4
0x4003443	          0x4889c3	                            mov rbx, rax	      5593	eval.c	FUNCTION_87	SWITCH_1	ELSE_2	CALL_4
0x4003446	        0x49890424	                    mov qword [r12], rax	      5593	eval.c	FUNCTION_87	SWITCH_1	ELSE_2	CALL_4
0x400344a	      0xe9c8020000	                           jmp 0x4003717	      5593	eval.c	FUNCTION_87	SWITCH_1	ELSE_2	CALL_4
0x400344f	        0x4c8b7708	                mov r14, qword [rdi + 8]	      5600	eval.c	FUNCTION_87	SWITCH_1
0x4003453	          0x4d85f6	                           test r14, r14	      5601	eval.c	FUNCTION_87	SWITCH_1	CALL_5
0x4003456	            0x741d	                            je 0x4003475	      5601	eval.c	FUNCTION_87	SWITCH_1	CALL_5
0x4003458	        0x498b7e08	                mov rdi, qword [r14 + 8]	      4862	eval.c	FUNCTION_75	IF_1
0x400345c	          0x4885ff	                           test rdi, rdi	      4862	eval.c	FUNCTION_75	IF_1
0x400345f	     0xf85e4020000	                           jne 0x4003749	      4862	eval.c	FUNCTION_75	IF_1
0x4003465	        0x498b4610	            mov rax, qword [r14 + 0x10] 	      4864	eval.c	FUNCTION_75
0x4003469	    0x488db8d80000	                   lea rdi, [rax + 0xd8]	      4864	eval.c	FUNCTION_75
0x4003470	      0xe9d4020000	                           jmp 0x4003749	      4864	eval.c	FUNCTION_75
0x4003475	      0xbe00000000	                              mov esi, 0	      5601	eval.c	FUNCTION_87	SWITCH_1	CALL_5
0x400347a	      0xbf00000000	                              mov edi, 0	      5601	eval.c	FUNCTION_87	SWITCH_1	CALL_5
0x400347f	      0xe800000000	                          call 0x4003484	      5601	eval.c	FUNCTION_87	SWITCH_1	CALL_5
0x4003484	          0x4889c5	                            mov rbp, rax	      5601	eval.c	FUNCTION_87	SWITCH_1	CALL_5
0x4003487	      0xba64000000	                           mov edx, 0x64	      5607	eval.c	FUNCTION_87	SWITCH_1	CALL_7
0x400348c	      0xbe01000000	                              mov esi, 1	      5607	eval.c	FUNCTION_87	SWITCH_1	CALL_7
0x4003491	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      5607	eval.c	FUNCTION_87	SWITCH_1	CALL_7
0x4003496	      0xe800000000	                          call 0x400349b	      5607	eval.c	FUNCTION_87	SWITCH_1	CALL_7
0x400349b	      0xbe00000000	                              mov esi, 0	      5608	eval.c	FUNCTION_87	SWITCH_1	CALL_8
0x40034a0	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      5608	eval.c	FUNCTION_87	SWITCH_1	CALL_8
0x40034a5	      0xe800000000	                          call 0x40034aa	      5608	eval.c	FUNCTION_87	SWITCH_1	CALL_8
0x40034aa	          0x4885ed	                           test rbp, rbp	      5609	eval.c	FUNCTION_87	SWITCH_1	IF_6
0x40034ad	     0xf84f4000000	                            je 0x40035a7	      5609	eval.c	FUNCTION_87	SWITCH_1	IF_6
0x40034b3	          0x4889ee	                            mov rsi, rbp	      5611	eval.c	FUNCTION_87	SWITCH_1	IF_6	CALL_9
0x40034b6	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      5611	eval.c	FUNCTION_87	SWITCH_1	IF_6	CALL_9
0x40034bb	      0xe800000000	                          call 0x40034c0	      5611	eval.c	FUNCTION_87	SWITCH_1	IF_6	CALL_9
0x40034c0	          0x4889ef	                            mov rdi, rbp	      5612	eval.c	FUNCTION_87	SWITCH_1	IF_6	CALL_10
0x40034c3	      0xe800000000	                          call 0x40034c8	      5612	eval.c	FUNCTION_87	SWITCH_1	IF_6	CALL_10
0x40034c8	          0x4d85f6	                           test r14, r14	      5614	eval.c	FUNCTION_87	SWITCH_1	IF_7
0x40034cb	     0xf84d6000000	                            je 0x40035a7	      5614	eval.c	FUNCTION_87	SWITCH_1	IF_7
0x40034d1	      0x41837e1c00	               cmp dword [r14 + 0x1c], 0	      5614	eval.c	FUNCTION_87	SWITCH_1	IF_7
0x40034d6	     0xf8eab020000	                           jle 0x4003787	      5614	eval.c	FUNCTION_87	SWITCH_1	IF_7
0x40034dc	      0xbe00000000	                              mov esi, 0	      5616	eval.c	FUNCTION_87	SWITCH_1	IF_7	CALL_11
0x40034e1	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      5616	eval.c	FUNCTION_87	SWITCH_1	IF_7	CALL_11
0x40034e6	      0xe800000000	                          call 0x40034eb	      5616	eval.c	FUNCTION_87	SWITCH_1	IF_7	CALL_11
0x40034eb	      0xbd00000000	                              mov ebp, 0	      5617	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1
0x40034f0	      0x41837e1c00	               cmp dword [r14 + 0x1c], 0	      5617	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1
0x40034f5	            0x7f15	                            jg 0x400350c	      5617	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1
0x40034f7	            0xeb4e	                           jmp 0x4003547	      5617	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1
0x40034f9	            0x85ed	                           test ebp, ebp	      5619	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1	IF_8
0x40034fb	            0x7e0f	                           jle 0x400350c	      5619	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1	IF_8
0x40034fd	      0xbe00000000	                              mov esi, 0	      5620	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1	CALL_12
0x4003502	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      5620	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1	CALL_12
0x4003507	      0xe800000000	                          call 0x400350c	      5620	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1	CALL_12
0x400350c	          0x4863fd	                         movsxd rdi, ebp	      5621	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1	CALL_13
0x400350f	        0x48c1e704	                              shl rdi, 4	      5621	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1	CALL_13
0x4003513	        0x49037e20	             add rdi, qword [r14 + 0x20]	      5621	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1	CALL_13
0x4003517	          0x4489e9	                           mov ecx, r13d	      5621	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1	CALL_13
0x400351a	          0x4889da	                            mov rdx, rbx	      5621	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1	CALL_13
0x400351d	      0x488d742408	                      lea rsi, [rsp + 8]	      5621	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1	CALL_13
0x4003522	      0xe800000000	                          call 0x4003527	      5621	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1	CALL_13
0x4003527	          0x4889c6	                            mov rsi, rax	      5621	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1	CALL_13
0x400352a	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      5621	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1	CALL_13
0x400352f	      0xe800000000	                          call 0x4003534	      5621	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1	CALL_13
0x4003534	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5623	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1	CALL_15
0x4003539	      0xe800000000	                          call 0x400353e	      5623	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1	CALL_15
0x400353e	          0x83c501	                              add ebp, 1	      5617	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1
0x4003541	        0x41396e1c	            cmp dword [r14 + 0x1c], ebp 	      5617	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1
0x4003545	            0x7fb2	                            jg 0x40034f9	      5617	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1
0x4003547	      0xbe00000000	                              mov esi, 0	      5625	eval.c	FUNCTION_87	SWITCH_1	IF_7	CALL_16
0x400354c	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      5625	eval.c	FUNCTION_87	SWITCH_1	IF_7	CALL_16
0x4003551	      0xe800000000	                          call 0x4003556	      5625	eval.c	FUNCTION_87	SWITCH_1	IF_7	CALL_16
0x4003556	      0xe92c020000	                           jmp 0x4003787	      5625	eval.c	FUNCTION_87	SWITCH_1	IF_7	CALL_16
0x400355b	      0xbe00000000	                              mov esi, 0	      5631	eval.c	FUNCTION_87	SWITCH_1	IF_9	CALL_17
0x4003560	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      5631	eval.c	FUNCTION_87	SWITCH_1	IF_9	CALL_17
0x4003565	      0xe800000000	                          call 0x400356a	      5631	eval.c	FUNCTION_87	SWITCH_1	IF_9	CALL_17
0x400356a	    0xc74424100600	               mov dword [rsp + 0x10], 6	      5632	eval.c	FUNCTION_87	SWITCH_1	IF_9
0x4003572	        0x498b4628	            mov rax, qword [r14 + 0x28] 	      5633	eval.c	FUNCTION_87	SWITCH_1	IF_9
0x4003576	      0x4889442418	             mov qword [rsp + 0x18], rax	      5633	eval.c	FUNCTION_87	SWITCH_1	IF_9
0x400357b	          0x4489e9	                           mov ecx, r13d	      5634	eval.c	FUNCTION_87	SWITCH_1	IF_9	CALL_19
0x400357e	          0x4889da	                            mov rdx, rbx	      5634	eval.c	FUNCTION_87	SWITCH_1	IF_9	CALL_19
0x4003581	      0x488d742408	                      lea rsi, [rsp + 8]	      5634	eval.c	FUNCTION_87	SWITCH_1	IF_9	CALL_19
0x4003586	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5634	eval.c	FUNCTION_87	SWITCH_1	IF_9	CALL_19
0x400358b	      0xe800000000	                          call 0x4003590	      5634	eval.c	FUNCTION_87	SWITCH_1	IF_9	CALL_19
0x4003590	          0x4889c6	                            mov rsi, rax	      5634	eval.c	FUNCTION_87	SWITCH_1	IF_9	CALL_19
0x4003593	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      5634	eval.c	FUNCTION_87	SWITCH_1	IF_9	CALL_19
0x4003598	      0xe800000000	                          call 0x400359d	      5634	eval.c	FUNCTION_87	SWITCH_1	IF_9	CALL_19
0x400359d	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5635	eval.c	FUNCTION_87	SWITCH_1	IF_9	CALL_20
0x40035a2	      0xe800000000	                          call 0x40035a7	      5635	eval.c	FUNCTION_87	SWITCH_1	IF_9	CALL_20
0x40035a7	      0xbe00000000	                              mov esi, 0	      5637	eval.c	FUNCTION_87	SWITCH_1	CALL_21
0x40035ac	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      5637	eval.c	FUNCTION_87	SWITCH_1	CALL_21
0x40035b1	      0xe800000000	                          call 0x40035b6	      5637	eval.c	FUNCTION_87	SWITCH_1	CALL_21
0x40035b6	      0x488b5c2430	            mov rbx, qword [rsp + 0x30] 	      5639	eval.c	FUNCTION_87	SWITCH_1
0x40035bb	        0x49891c24	                    mov qword [r12], rbx	      5639	eval.c	FUNCTION_87	SWITCH_1
0x40035bf	      0xe953010000	                           jmp 0x4003717	      5639	eval.c	FUNCTION_87	SWITCH_1
0x40035c4	        0x488b4708	                mov rax, qword [rdi + 8]	      5645	eval.c	FUNCTION_87	SWITCH_1	IF_10
0x40035c8	          0x4885c0	                           test rax, rax	      5645	eval.c	FUNCTION_87	SWITCH_1	IF_10
0x40035cb	            0x7511	                           jne 0x40035de	      5645	eval.c	FUNCTION_87	SWITCH_1	IF_10
0x40035cd	    0x48c706000000	                      mov qword [rsi], 0	      5647	eval.c	FUNCTION_87	SWITCH_1	IF_10
0x40035d4	      0xbb00000000	                              mov ebx, 0	      5648	eval.c	FUNCTION_87	SWITCH_1	IF_10
0x40035d9	      0xe939010000	                           jmp 0x4003717	      5648	eval.c	FUNCTION_87	SWITCH_1	IF_10
0x40035de	            0x85c9	                           test ecx, ecx	      5650	eval.c	FUNCTION_87	SWITCH_1	ELSE_3	IF_11
0x40035e0	            0x741c	                            je 0x40035fe	      5650	eval.c	FUNCTION_87	SWITCH_1	ELSE_3	IF_11
0x40035e2	          0x3b4844	            cmp ecx, dword [rax + 0x44] 	      5650	eval.c	FUNCTION_87	SWITCH_1	ELSE_3	IF_11
0x40035e5	            0x7517	                           jne 0x40035fe	      5650	eval.c	FUNCTION_87	SWITCH_1	ELSE_3	IF_11
0x40035e7	        0x83783c00	               cmp dword [rax + 0x3c], 0	      5651	eval.c	FUNCTION_87	SWITCH_1	ELSE_3	IF_11
0x40035eb	            0x7e11	                           jle 0x40035fe	      5651	eval.c	FUNCTION_87	SWITCH_1	ELSE_3	IF_11
0x40035ed	    0x48c706000000	                      mov qword [rsi], 0	      5653	eval.c	FUNCTION_87	SWITCH_1	ELSE_3	IF_11
0x40035f4	      0xbb00000000	                              mov ebx, 0	      5654	eval.c	FUNCTION_87	SWITCH_1	ELSE_3	IF_11
0x40035f9	      0xe919010000	                           jmp 0x4003717	      5654	eval.c	FUNCTION_87	SWITCH_1	ELSE_3	IF_11
0x40035fe	          0x8b5844	            mov ebx, dword [rax + 0x44] 	      5658	eval.c	FUNCTION_87	SWITCH_1	ELSE_4
0x4003601	        0x44896844	            mov dword [rax + 0x44], r13d	      5660	eval.c	FUNCTION_87	SWITCH_1	ELSE_4
0x4003605	          0x4489f2	                           mov edx, r14d	      5661	eval.c	FUNCTION_87	SWITCH_1	ELSE_4	CALL_22
0x4003608	          0x4489ee	                           mov esi, r13d	      5661	eval.c	FUNCTION_87	SWITCH_1	ELSE_4	CALL_22
0x400360b	          0x4889ef	                            mov rdi, rbp	      5661	eval.c	FUNCTION_87	SWITCH_1	ELSE_4	CALL_22
0x400360e	      0xe800000000	                          call 0x4003613	      5661	eval.c	FUNCTION_87	SWITCH_1	ELSE_4	CALL_22
0x4003613	        0x49890424	                    mov qword [r12], rax	      5661	eval.c	FUNCTION_87	SWITCH_1	ELSE_4	CALL_22
0x4003617	          0x4585f6	                         test r14d, r14d	      5662	eval.c	FUNCTION_87	SWITCH_1	ELSE_4	IF_12
0x400361a	            0x7407	                            je 0x4003623	      5662	eval.c	FUNCTION_87	SWITCH_1	ELSE_4	IF_12
0x400361c	        0x488b4508	                mov rax, qword [rbp + 8]	      5663	eval.c	FUNCTION_87	SWITCH_1	ELSE_4	IF_12
0x4003620	          0x895844	             mov dword [rax + 0x44], ebx	      5663	eval.c	FUNCTION_87	SWITCH_1	ELSE_4	IF_12
0x4003623	        0x498b1c24	                    mov rbx, qword [r12]	      5664	eval.c	FUNCTION_87	SWITCH_1	ELSE_4
0x4003627	      0xe9eb000000	                           jmp 0x4003717	      5664	eval.c	FUNCTION_87	SWITCH_1	ELSE_4
0x400362c	        0x488b4708	                mov rax, qword [rdi + 8]	      5669	eval.c	FUNCTION_87	SWITCH_1	IF_13
0x4003630	          0x4885c0	                           test rax, rax	      5669	eval.c	FUNCTION_87	SWITCH_1	IF_13
0x4003633	            0x7511	                           jne 0x4003646	      5669	eval.c	FUNCTION_87	SWITCH_1	IF_13
0x4003635	    0x48c706000000	                      mov qword [rsi], 0	      5671	eval.c	FUNCTION_87	SWITCH_1	IF_13
0x400363c	      0xbb00000000	                              mov ebx, 0	      5672	eval.c	FUNCTION_87	SWITCH_1	IF_13
0x4003641	      0xe9d1000000	                           jmp 0x4003717	      5672	eval.c	FUNCTION_87	SWITCH_1	IF_13
0x4003646	            0x85c9	                           test ecx, ecx	      5674	eval.c	FUNCTION_87	SWITCH_1	ELSE_5	IF_14
0x4003648	            0x741d	                            je 0x4003667	      5674	eval.c	FUNCTION_87	SWITCH_1	ELSE_5	IF_14
0x400364a	          0x3b4808	                cmp ecx, dword [rax + 8]	      5674	eval.c	FUNCTION_87	SWITCH_1	ELSE_5	IF_14
0x400364d	            0x7518	                           jne 0x4003667	      5674	eval.c	FUNCTION_87	SWITCH_1	ELSE_5	IF_14
0x400364f	      0x4883781800	               cmp qword [rax + 0x18], 0	      5675	eval.c	FUNCTION_87	SWITCH_1	ELSE_5	IF_14
0x4003654	            0x7411	                            je 0x4003667	      5675	eval.c	FUNCTION_87	SWITCH_1	ELSE_5	IF_14
0x4003656	    0x48c706000000	                      mov qword [rsi], 0	      5677	eval.c	FUNCTION_87	SWITCH_1	ELSE_5	IF_14
0x400365d	      0xbb00000000	                              mov ebx, 0	      5678	eval.c	FUNCTION_87	SWITCH_1	ELSE_5	IF_14
0x4003662	      0xe9b0000000	                           jmp 0x4003717	      5678	eval.c	FUNCTION_87	SWITCH_1	ELSE_5	IF_14
0x4003667	          0x8b5808	                mov ebx, dword [rax + 8]	      5682	eval.c	FUNCTION_87	SWITCH_1	ELSE_6
0x400366a	        0x44896808	               mov dword [rax + 8], r13d	      5683	eval.c	FUNCTION_87	SWITCH_1	ELSE_6
0x400366e	          0x4489f2	                           mov edx, r14d	      5684	eval.c	FUNCTION_87	SWITCH_1	ELSE_6	CALL_23
0x4003671	          0x4489ee	                           mov esi, r13d	      5684	eval.c	FUNCTION_87	SWITCH_1	ELSE_6	CALL_23
0x4003674	          0x4889ef	                            mov rdi, rbp	      5684	eval.c	FUNCTION_87	SWITCH_1	ELSE_6	CALL_23
0x4003677	      0xe800000000	                          call 0x400367c	      5684	eval.c	FUNCTION_87	SWITCH_1	ELSE_6	CALL_23
0x400367c	        0x49890424	                    mov qword [r12], rax	      5684	eval.c	FUNCTION_87	SWITCH_1	ELSE_6	CALL_23
0x4003680	          0x4585f6	                         test r14d, r14d	      5685	eval.c	FUNCTION_87	SWITCH_1	ELSE_6	IF_15
0x4003683	            0x7407	                            je 0x400368c	      5685	eval.c	FUNCTION_87	SWITCH_1	ELSE_6	IF_15
0x4003685	        0x488b4508	                mov rax, qword [rbp + 8]	      5686	eval.c	FUNCTION_87	SWITCH_1	ELSE_6	IF_15
0x4003689	          0x895808	                mov dword [rax + 8], ebx	      5686	eval.c	FUNCTION_87	SWITCH_1	ELSE_6	IF_15
0x400368c	        0x498b1c24	                    mov rbx, qword [r12]	      5687	eval.c	FUNCTION_87	SWITCH_1	ELSE_6
0x4003690	      0xe982000000	                           jmp 0x4003717	      5687	eval.c	FUNCTION_87	SWITCH_1	ELSE_6
0x4003695	    0x48c706000000	                      mov qword [rsi], 0	      5693	eval.c	FUNCTION_87	SWITCH_1
0x400369c	          0x4889d6	                            mov rsi, rdx	      5694	eval.c	FUNCTION_87	SWITCH_1	CALL_24
0x400369f	      0xe800000000	                          call 0x40036a4	      5694	eval.c	FUNCTION_87	SWITCH_1	CALL_24
0x40036a4	          0x4889c3	                            mov rbx, rax	      5694	eval.c	FUNCTION_87	SWITCH_1	CALL_24
0x40036a7	            0xeb6e	                           jmp 0x4003717	      5695	eval.c	FUNCTION_87	SWITCH_1
0x40036a9	    0x48c706000000	                      mov qword [rsi], 0	      5699	eval.c	FUNCTION_87	SWITCH_1
0x40036b0	          0x4889d6	                            mov rsi, rdx	      5700	eval.c	FUNCTION_87	SWITCH_1	CALL_25
0x40036b3	      0xe800000000	                          call 0x40036b8	      5700	eval.c	FUNCTION_87	SWITCH_1	CALL_25
0x40036b8	          0x4889c3	                            mov rbx, rax	      5700	eval.c	FUNCTION_87	SWITCH_1	CALL_25
0x40036bb	      0x837c247000	               cmp dword [rsp + 0x70], 0	      5701	eval.c	FUNCTION_87	SWITCH_1	IF_16
0x40036c0	            0x7455	                            je 0x4003717	      5701	eval.c	FUNCTION_87	SWITCH_1	IF_16
0x40036c2	      0xbe00000000	                              mov esi, 0	      5703	eval.c	FUNCTION_87	SWITCH_1	IF_16	CALL_26
0x40036c7	          0x4889c7	                            mov rdi, rax	      5703	eval.c	FUNCTION_87	SWITCH_1	IF_16	CALL_26
0x40036ca	      0xe800000000	                          call 0x40036cf	      5703	eval.c	FUNCTION_87	SWITCH_1	IF_16	CALL_26
0x40036cf	          0x4889c3	                            mov rbx, rax	      5703	eval.c	FUNCTION_87	SWITCH_1	IF_16	CALL_26
0x40036d2	        0x49890424	                    mov qword [r12], rax	      5703	eval.c	FUNCTION_87	SWITCH_1	IF_16	CALL_26
0x40036d6	            0xeb3f	                           jmp 0x4003717	      5703	eval.c	FUNCTION_87	SWITCH_1	IF_16	CALL_26
0x40036d8	    0x48c706000000	                      mov qword [rsi], 0	      5710	eval.c	FUNCTION_87	SWITCH_1
0x40036df	      0xf20f104708	            movsd xmm0, qword [rdi + 8] 	      5711	eval.c	FUNCTION_87	SWITCH_1	CALL_27
0x40036e4	      0xba00000000	                              mov edx, 0	      5711	eval.c	FUNCTION_87	SWITCH_1	CALL_27
0x40036e9	      0xbe41000000	                           mov esi, 0x41	      5711	eval.c	FUNCTION_87	SWITCH_1	CALL_27
0x40036ee	          0x4889df	                            mov rdi, rbx	      5711	eval.c	FUNCTION_87	SWITCH_1	CALL_27
0x40036f1	      0xb801000000	                              mov eax, 1	      5711	eval.c	FUNCTION_87	SWITCH_1	CALL_27
0x40036f6	      0xe800000000	                          call 0x40036fb	      5711	eval.c	FUNCTION_87	SWITCH_1	CALL_27
0x40036fb	            0xeb1a	                           jmp 0x4003717	      5713	eval.c	FUNCTION_87	SWITCH_1
0x40036fd	    0x48c706000000	                      mov qword [rsi], 0	      5717	eval.c	FUNCTION_87	SWITCH_1
0x4003704	        0x488b7f08	                mov rdi, qword [rdi + 8]	      5718	eval.c	FUNCTION_87	SWITCH_1	CALL_28
0x4003708	      0xe86ccbffff	           call sym.get_var_special_name	      5718	eval.c	FUNCTION_87	SWITCH_1	CALL_28
0x400370d	          0x4889c3	                            mov rbx, rax	      5718	eval.c	FUNCTION_87	SWITCH_1	CALL_28
0x4003710	            0xeb05	                           jmp 0x4003717	      5719	eval.c	FUNCTION_87	SWITCH_1
0x4003712	      0xbb00000000	                              mov ebx, 0	      5551	eval.c	FUNCTION_87
0x4003717	    0x8b0500000000	            mov eax, dword [0x0400371d] 	      5722	eval.c	FUNCTION_87	IF_17
0x400371d	          0x8d50ff	                      lea edx, [rax - 1]	      5722	eval.c	FUNCTION_87	IF_17
0x4003720	    0x891500000000	            mov dword [0x04003726], edx 	      5722	eval.c	FUNCTION_87	IF_17
0x4003726	          0x4889d8	                            mov rax, rbx	      5724	eval.c	FUNCTION_87
0x4003729	            0x85d2	                           test edx, edx	      5722	eval.c	FUNCTION_87	IF_17
0x400372b	            0x750a	                           jne 0x4003737	      5722	eval.c	FUNCTION_87	IF_17
0x400372d	    0xc70500000000	               mov dword [0x04003737], 0	      5723	eval.c	FUNCTION_87	IF_17
0x4003737	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	      5725	eval.c	FUNCTION_87
0x400373c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      5725	eval.c	FUNCTION_87
0x4003745	            0x7455	                            je 0x400379c	      5725	eval.c	FUNCTION_87
0x4003747	            0xeb4e	                           jmp 0x4003797	      5725	eval.c	FUNCTION_87
0x4003749	      0xbe00000000	                              mov esi, 0	      5601	eval.c	FUNCTION_87	SWITCH_1	CALL_5
0x400374e	      0xe800000000	                          call 0x4003753	      5601	eval.c	FUNCTION_87	SWITCH_1	CALL_5
0x4003753	          0x4889c5	                            mov rbp, rax	      5601	eval.c	FUNCTION_87	SWITCH_1	CALL_5
0x4003756	      0xba64000000	                           mov edx, 0x64	      5607	eval.c	FUNCTION_87	SWITCH_1	CALL_7
0x400375b	      0xbe01000000	                              mov esi, 1	      5607	eval.c	FUNCTION_87	SWITCH_1	CALL_7
0x4003760	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      5607	eval.c	FUNCTION_87	SWITCH_1	CALL_7
0x4003765	      0xe800000000	                          call 0x400376a	      5607	eval.c	FUNCTION_87	SWITCH_1	CALL_7
0x400376a	      0xbe00000000	                              mov esi, 0	      5608	eval.c	FUNCTION_87	SWITCH_1	CALL_8
0x400376f	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      5608	eval.c	FUNCTION_87	SWITCH_1	CALL_8
0x4003774	      0xe800000000	                          call 0x4003779	      5608	eval.c	FUNCTION_87	SWITCH_1	CALL_8
0x4003779	          0x4885ed	                           test rbp, rbp	      5609	eval.c	FUNCTION_87	SWITCH_1	IF_6
0x400377c	     0xf8531fdffff	                           jne 0x40034b3	      5609	eval.c	FUNCTION_87	SWITCH_1	IF_6
0x4003782	      0xe94afdffff	                           jmp 0x40034d1	      5609	eval.c	FUNCTION_87	SWITCH_1	IF_6
0x4003787	      0x49837e2800	               cmp qword [r14 + 0x28], 0	      5627	eval.c	FUNCTION_87	SWITCH_1	IF_9
0x400378c	     0xf85c9fdffff	                           jne 0x400355b	      5627	eval.c	FUNCTION_87	SWITCH_1	IF_9
0x4003792	      0xe910feffff	                           jmp 0x40035a7	      5627	eval.c	FUNCTION_87	SWITCH_1	IF_9
0x4003797	      0xe800000000	                          call 0x400379c	      5725	eval.c	FUNCTION_87
0x400379c	        0x4883c440	                           add rsp, 0x40	      5725	eval.c	FUNCTION_87
0x40037a0	              0x5b	                                 pop rbx	      5725	eval.c	FUNCTION_87
0x40037a1	              0x5d	                                 pop rbp	      5725	eval.c	FUNCTION_87
0x40037a2	            0x415c	                                 pop r12	      5725	eval.c	FUNCTION_87
0x40037a4	            0x415d	                                 pop r13	      5725	eval.c	FUNCTION_87
0x40037a6	            0x415e	                                 pop r14	      5725	eval.c	FUNCTION_87
0x40037a8	              0xc3	                                     ret	      5725	eval.c	FUNCTION_87
tv_equal	FOR,0:SWITCH,1:DO,0:IF,4:functions,0:WHILE,0:CALL,7:ELSE,0	257
0x4002f66	            0x4156	                                push r14	      4962	eval.c	FUNCTION_79
0x4002f68	            0x4155	                                push r13	      4962	eval.c	FUNCTION_79
0x4002f6a	            0x4154	                                push r12	      4962	eval.c	FUNCTION_79
0x4002f6c	              0x55	                                push rbp	      4962	eval.c	FUNCTION_79
0x4002f6d	              0x53	                                push rbx	      4962	eval.c	FUNCTION_79
0x4002f6e	    0x4881eca00000	                           sub rsp, 0xa0	      4962	eval.c	FUNCTION_79
0x4002f75	          0x4989fc	                            mov r12, rdi	      4962	eval.c	FUNCTION_79
0x4002f78	          0x4889f5	                            mov rbp, rsi	      4962	eval.c	FUNCTION_79
0x4002f7b	          0x4189d5	                           mov r13d, edx	      4962	eval.c	FUNCTION_79
0x4002f7e	    0x64488b042528	                mov rax, qword fs:[0x28]	      4962	eval.c	FUNCTION_79
0x4002f87	    0x488984249800	             mov qword [rsp + 0x98], rax	      4962	eval.c	FUNCTION_79
0x4002f8f	            0x31c0	                            xor eax, eax	      4962	eval.c	FUNCTION_79
0x4002f91	            0x85c9	                           test ecx, ecx	      4974	eval.c	FUNCTION_79	IF_1
0x4002f93	            0x750a	                           jne 0x4002f9f	      4974	eval.c	FUNCTION_79	IF_1
0x4002f95	    0xc70500000000	          mov dword [0x04002f9f], 0x3e8 	      4975	eval.c	FUNCTION_79	IF_1
0x4002f9f	    0x8b1500000000	            mov edx, dword [0x04002fa5] 	      4976	eval.c	FUNCTION_79	IF_2
0x4002fa5	    0x8b0500000000	            mov eax, dword [0x04002fab] 	      4976	eval.c	FUNCTION_79	IF_2
0x4002fab	            0x39c2	                            cmp edx, eax	      4976	eval.c	FUNCTION_79	IF_2
0x4002fad	            0x7c13	                            jl 0x4002fc2	      4976	eval.c	FUNCTION_79	IF_2
0x4002faf	          0x83e801	                              sub eax, 1	      4978	eval.c	FUNCTION_79	IF_2
0x4002fb2	    0x890500000000	            mov dword [0x04002fb8], eax 	      4978	eval.c	FUNCTION_79	IF_2
0x4002fb8	      0xb801000000	                              mov eax, 1	      4979	eval.c	FUNCTION_79	IF_2
0x4002fbd	      0xe9ff020000	                           jmp 0x40032c1	      4979	eval.c	FUNCTION_79	IF_2
0x4002fc2	        0x418b1c24	                    mov ebx, dword [r12]	      4984	eval.c	FUNCTION_79	IF_3
0x4002fc6	          0x83fb03	                              cmp ebx, 3	      4984	eval.c	FUNCTION_79	IF_3
0x4002fc9	     0xf8433030000	                            je 0x4003302	      4984	eval.c	FUNCTION_79	IF_3
0x4002fcf	          0x83fb04	                              cmp ebx, 4	      4985	eval.c	FUNCTION_79	IF_3
0x4002fd2	     0xf85bc010000	                           jne 0x4003194	      4985	eval.c	FUNCTION_79	IF_3
0x4002fd8	      0xb800000000	                              mov eax, 0	      4996	eval.c	FUNCTION_79	IF_4
0x4002fdd	    0x49837c240800	                  cmp qword [r12 + 8], 0	      4985	eval.c	FUNCTION_79	IF_3
0x4002fe3	     0xf84d8020000	                            je 0x40032c1	      4985	eval.c	FUNCTION_79	IF_3
0x4002fe9	      0xe9f6020000	                           jmp 0x40032e4	      4985	eval.c	FUNCTION_79	IF_3
0x4002fee	        0x4183fe04	                             cmp r14d, 4	      4987	eval.c	FUNCTION_79	IF_3
0x4002ff2	     0xf859c010000	                           jne 0x4003194	      4987	eval.c	FUNCTION_79	IF_3
0x4002ff8	      0x48837d0800	                  cmp qword [rbp + 8], 0	      4987	eval.c	FUNCTION_79	IF_3
0x4002ffd	     0xf8491010000	                            je 0x4003194	      4987	eval.c	FUNCTION_79	IF_3
0x4003003	          0x83c201	                              add edx, 1	      4989	eval.c	FUNCTION_79	IF_3
0x4003006	    0x891500000000	            mov dword [0x0400300c], edx 	      4989	eval.c	FUNCTION_79	IF_3
0x400300c	          0x83fb03	                              cmp ebx, 3	      4912	eval.c	FUNCTION_78	CALL_1
0x400300f	            0x750d	                           jne 0x400301e	      4912	eval.c	FUNCTION_78	CALL_1
0x4003011	    0x41be04000000	                             mov r14d, 4	      4912	eval.c	FUNCTION_78	CALL_1
0x4003017	      0x498b7c2408	                mov rdi, qword [r12 + 8]	      4912	eval.c	FUNCTION_78	CALL_1
0x400301c	            0xeb1f	                           jmp 0x400303d	      4912	eval.c	FUNCTION_78	CALL_1
0x400301e	    0x41be04000000	                             mov r14d, 4	      4912	eval.c	FUNCTION_78	CALL_1
0x4003024	      0x498b442408	                mov rax, qword [r12 + 8]	      4912	eval.c	FUNCTION_78	CALL_1
0x4003029	        0x488b7808	                mov rdi, qword [rax + 8]	      4862	eval.c	FUNCTION_75	IF_1
0x400302d	          0x4885ff	                           test rdi, rdi	      4862	eval.c	FUNCTION_75	IF_1
0x4003030	            0x7510	                           jne 0x4003042	      4862	eval.c	FUNCTION_75	IF_1
0x4003032	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      4864	eval.c	FUNCTION_75
0x4003036	    0x4881c7d80000	                           add rdi, 0xd8	      4864	eval.c	FUNCTION_75
0x400303d	          0x4885ff	                           test rdi, rdi	      4913	eval.c	FUNCTION_78	IF_1
0x4003040	            0x740c	                            je 0x400304e	      4913	eval.c	FUNCTION_78	IF_1
0x4003042	          0x803f00	                       cmp byte [rdi], 0	      4914	eval.c	FUNCTION_78	IF_1
0x4003045	      0xb800000000	                              mov eax, 0	      4914	eval.c	FUNCTION_78	IF_1
0x400304a	        0x480f44f8	                          cmove rdi, rax	      4914	eval.c	FUNCTION_78	IF_1
0x400304e	        0x4183fe03	                             cmp r14d, 3	      4916	eval.c	FUNCTION_78	CALL_2
0x4003052	            0x7506	                           jne 0x400305a	      4916	eval.c	FUNCTION_78	CALL_2
0x4003054	        0x488b7508	                mov rsi, qword [rbp + 8]	      4916	eval.c	FUNCTION_78	CALL_2
0x4003058	            0xeb18	                           jmp 0x4003072	      4916	eval.c	FUNCTION_78	CALL_2
0x400305a	        0x488b4508	                mov rax, qword [rbp + 8]	      4916	eval.c	FUNCTION_78	CALL_2
0x400305e	        0x488b7008	                mov rsi, qword [rax + 8]	      4862	eval.c	FUNCTION_75	IF_1
0x4003062	          0x4885f6	                           test rsi, rsi	      4862	eval.c	FUNCTION_75	IF_1
0x4003065	            0x7510	                           jne 0x4003077	      4862	eval.c	FUNCTION_75	IF_1
0x4003067	        0x488b7010	            mov rsi, qword [rax + 0x10] 	      4864	eval.c	FUNCTION_75
0x400306b	    0x4881c6d80000	                           add rsi, 0xd8	      4864	eval.c	FUNCTION_75
0x4003072	          0x4885f6	                           test rsi, rsi	      4917	eval.c	FUNCTION_78	IF_2
0x4003075	            0x7416	                            je 0x400308d	      4917	eval.c	FUNCTION_78	IF_2
0x4003077	          0x803e00	                       cmp byte [rsi], 0	      4917	eval.c	FUNCTION_78	IF_2
0x400307a	            0x740c	                            je 0x4003088	      4917	eval.c	FUNCTION_78	IF_2
0x400307c	          0x4885ff	                           test rdi, rdi	      4919	eval.c	FUNCTION_78	IF_3
0x400307f	            0x740c	                            je 0x400308d	      4919	eval.c	FUNCTION_78	IF_3
0x4003081	          0x4885f6	                           test rsi, rsi	      4919	eval.c	FUNCTION_78	IF_3
0x4003084	            0x7517	                           jne 0x400309d	      4919	eval.c	FUNCTION_78	IF_3
0x4003086	            0xeb05	                           jmp 0x400308d	      4919	eval.c	FUNCTION_78	IF_3
0x4003088	      0xbe00000000	                              mov esi, 0	      4917	eval.c	FUNCTION_78	IF_2
0x400308d	      0xb800000000	                              mov eax, 0	      4922	eval.c	FUNCTION_78	IF_3	IF_4
0x4003092	          0x4839f7	                            cmp rdi, rsi	      4921	eval.c	FUNCTION_78	IF_3	IF_4
0x4003095	     0xf85ed000000	                           jne 0x4003188	      4921	eval.c	FUNCTION_78	IF_3	IF_4
0x400309b	            0xeb14	                           jmp 0x40030b1	      4921	eval.c	FUNCTION_78	IF_3	IF_4
0x400309d	      0xe800000000	                          call 0x40030a2	      4924	eval.c	FUNCTION_78	ELSE_1	IF_5	CALL_3
0x40030a2	            0x89c2	                            mov edx, eax	      4924	eval.c	FUNCTION_78	ELSE_1	IF_5	CALL_3
0x40030a4	      0xb800000000	                              mov eax, 0	      4925	eval.c	FUNCTION_78	ELSE_1	IF_5
0x40030a9	            0x85d2	                           test edx, edx	      4924	eval.c	FUNCTION_78	ELSE_1	IF_5	CALL_3
0x40030ab	     0xf85d7000000	                           jne 0x4003188	      4924	eval.c	FUNCTION_78	ELSE_1	IF_5	CALL_3
0x40030b1	      0xbf00000000	                              mov edi, 0	      4928	eval.c	FUNCTION_78
0x40030b6	          0x83fb03	                              cmp ebx, 3	      4928	eval.c	FUNCTION_78
0x40030b9	            0x7409	                            je 0x40030c4	      4928	eval.c	FUNCTION_78
0x40030bb	      0x498b442408	                mov rax, qword [r12 + 8]	      4928	eval.c	FUNCTION_78
0x40030c0	        0x488b7828	            mov rdi, qword [rax + 0x28] 	      4928	eval.c	FUNCTION_78
0x40030c4	        0x4183fe03	                             cmp r14d, 3	      4929	eval.c	FUNCTION_78
0x40030c8	            0x7414	                            je 0x40030de	      4929	eval.c	FUNCTION_78
0x40030ca	        0x488b4508	                mov rax, qword [rbp + 8]	      4929	eval.c	FUNCTION_78
0x40030ce	        0x488b7028	            mov rsi, qword [rax + 0x28] 	      4929	eval.c	FUNCTION_78
0x40030d2	          0x4885ff	                           test rdi, rdi	      4930	eval.c	FUNCTION_78	IF_6
0x40030d5	            0x740c	                            je 0x40030e3	      4930	eval.c	FUNCTION_78	IF_6
0x40030d7	          0x4885f6	                           test rsi, rsi	      4930	eval.c	FUNCTION_78	IF_6
0x40030da	            0x7517	                           jne 0x40030f3	      4930	eval.c	FUNCTION_78	IF_6
0x40030dc	            0xeb05	                           jmp 0x40030e3	      4930	eval.c	FUNCTION_78	IF_6
0x40030de	      0xbe00000000	                              mov esi, 0	      4929	eval.c	FUNCTION_78
0x40030e3	      0xb800000000	                              mov eax, 0	      4933	eval.c	FUNCTION_78	IF_6	IF_7
0x40030e8	          0x4839f7	                            cmp rdi, rsi	      4932	eval.c	FUNCTION_78	IF_6	IF_7
0x40030eb	     0xf8597000000	                           jne 0x4003188	      4932	eval.c	FUNCTION_78	IF_6	IF_7
0x40030f1	            0xeb15	                           jmp 0x4003108	      4932	eval.c	FUNCTION_78	IF_6	IF_7
0x40030f3	      0xb901000000	                              mov ecx, 1	      4935	eval.c	FUNCTION_78	ELSE_2	IF_8	CALL_4
0x40030f8	          0x4489ea	                           mov edx, r13d	      4935	eval.c	FUNCTION_78	ELSE_2	IF_8	CALL_4
0x40030fb	      0xe800000000	                          call 0x4003100	      4935	eval.c	FUNCTION_78	ELSE_2	IF_8	CALL_4
0x4003100	            0x85c0	                           test eax, eax	      4935	eval.c	FUNCTION_78	ELSE_2	IF_8	CALL_4
0x4003102	     0xf8480000000	                            je 0x4003188	      4935	eval.c	FUNCTION_78	ELSE_2	IF_8	CALL_4
0x4003108	      0x41833c2403	                      cmp dword [r12], 3	      4939	eval.c	FUNCTION_78
0x400310d	     0xf84fb010000	                            je 0x400330e	      4939	eval.c	FUNCTION_78
0x4003113	      0x498b442408	                mov rax, qword [r12 + 8]	      4939	eval.c	FUNCTION_78
0x4003118	          0x8b501c	            mov edx, dword [rax + 0x1c] 	      4939	eval.c	FUNCTION_78
0x400311b	      0xb900000000	                              mov ecx, 0	      4940	eval.c	FUNCTION_78
0x4003120	        0x837d0003	                      cmp dword [rbp], 3	      4940	eval.c	FUNCTION_78
0x4003124	            0x7407	                            je 0x400312d	      4940	eval.c	FUNCTION_78
0x4003126	        0x488b4508	                mov rax, qword [rbp + 8]	      4940	eval.c	FUNCTION_78
0x400312a	          0x8b481c	            mov ecx, dword [rax + 0x1c] 	      4940	eval.c	FUNCTION_78
0x400312d	      0xb800000000	                              mov eax, 0	      4942	eval.c	FUNCTION_78	IF_9
0x4003132	            0x39d1	                            cmp ecx, edx	      4941	eval.c	FUNCTION_78	IF_9
0x4003134	            0x7552	                           jne 0x4003188	      4941	eval.c	FUNCTION_78	IF_9
0x4003136	            0x85d2	                           test edx, edx	      4943	eval.c	FUNCTION_78	FOR_1
0x4003138	            0x7e49	                           jle 0x4003183	      4943	eval.c	FUNCTION_78	FOR_1
0x400313a	        0x448d72ff	                     lea r14d, [rdx - 1]	      4943	eval.c	FUNCTION_78	FOR_1
0x400313e	        0x4983c601	                              add r14, 1	      4943	eval.c	FUNCTION_78	FOR_1
0x4003142	        0x49c1e604	                              shl r14, 4	      4943	eval.c	FUNCTION_78	FOR_1
0x4003146	      0xbb00000000	                              mov ebx, 0	      4943	eval.c	FUNCTION_78	FOR_1
0x400314b	        0x488b4508	                mov rax, qword [rbp + 8]	      4945	eval.c	FUNCTION_78	FOR_1	IF_10
0x400314f	          0x4889de	                            mov rsi, rbx	      4944	eval.c	FUNCTION_78	FOR_1	IF_10	CALL_5
0x4003152	        0x48037020	             add rsi, qword [rax + 0x20]	      4944	eval.c	FUNCTION_78	FOR_1	IF_10	CALL_5
0x4003156	      0x498b442408	                mov rax, qword [r12 + 8]	      4944	eval.c	FUNCTION_78	FOR_1	IF_10	CALL_5
0x400315b	          0x4889df	                            mov rdi, rbx	      4944	eval.c	FUNCTION_78	FOR_1	IF_10	CALL_5
0x400315e	        0x48037820	             add rdi, qword [rax + 0x20]	      4944	eval.c	FUNCTION_78	FOR_1	IF_10	CALL_5
0x4003162	      0xb901000000	                              mov ecx, 1	      4944	eval.c	FUNCTION_78	FOR_1	IF_10	CALL_5
0x4003167	          0x4489ea	                           mov edx, r13d	      4944	eval.c	FUNCTION_78	FOR_1	IF_10	CALL_5
0x400316a	      0xe800000000	                          call 0x400316f	      4944	eval.c	FUNCTION_78	FOR_1	IF_10	CALL_5
0x400316f	            0x85c0	                           test eax, eax	      4944	eval.c	FUNCTION_78	FOR_1	IF_10	CALL_5
0x4003171	            0x7415	                            je 0x4003188	      4944	eval.c	FUNCTION_78	FOR_1	IF_10	CALL_5
0x4003173	        0x4883c310	                           add rbx, 0x10	      4944	eval.c	FUNCTION_78	FOR_1	IF_10	CALL_5
0x4003177	          0x4939de	                            cmp r14, rbx	      4943	eval.c	FUNCTION_78	FOR_1
0x400317a	            0x75cf	                           jne 0x400314b	      4943	eval.c	FUNCTION_78	FOR_1
0x400317c	      0xb801000000	                              mov eax, 1	      4948	eval.c	FUNCTION_78
0x4003181	            0xeb05	                           jmp 0x4003188	      4948	eval.c	FUNCTION_78
0x4003183	      0xb801000000	                              mov eax, 1	      4948	eval.c	FUNCTION_78
0x4003188	    0x832d00000000	               sub dword [0x0400318f], 1	      4991	eval.c	FUNCTION_79	IF_3
0x400318f	      0xe92d010000	                           jmp 0x40032c1	      4992	eval.c	FUNCTION_79	IF_3
0x4003194	      0xb800000000	                              mov eax, 0	      4996	eval.c	FUNCTION_79	IF_4
0x4003199	          0x3b5d00	                    cmp ebx, dword [rbp]	      4995	eval.c	FUNCTION_79	IF_4
0x400319c	     0xf851f010000	                           jne 0x40032c1	      4995	eval.c	FUNCTION_79	IF_4
0x40031a2	          0x83fb0a	                            cmp ebx, 0xa	      4998	eval.c	FUNCTION_79	SWITCH_1
0x40031a5	     0xf8711010000	                            ja 0x40032bc	      4998	eval.c	FUNCTION_79	SWITCH_1
0x40031ab	            0x89db	                            mov ebx, ebx	      4998	eval.c	FUNCTION_79	SWITCH_1
0x40031ad	    0xff24dd000000	                       jmp qword [rbx*8]	      4998	eval.c	FUNCTION_79	SWITCH_1
0x40031b4	          0x83c201	                              add edx, 1	      5001	eval.c	FUNCTION_79	SWITCH_1
0x40031b7	    0x891500000000	            mov dword [0x040031bd], edx 	      5001	eval.c	FUNCTION_79	SWITCH_1
0x40031bd	        0x488b7508	                mov rsi, qword [rbp + 8]	      5002	eval.c	FUNCTION_79	SWITCH_1	CALL_2
0x40031c1	      0x498b7c2408	                mov rdi, qword [r12 + 8]	      5002	eval.c	FUNCTION_79	SWITCH_1	CALL_2
0x40031c6	      0xb901000000	                              mov ecx, 1	      5002	eval.c	FUNCTION_79	SWITCH_1	CALL_2
0x40031cb	          0x4489ea	                           mov edx, r13d	      5002	eval.c	FUNCTION_79	SWITCH_1	CALL_2
0x40031ce	      0xe800000000	                          call 0x40031d3	      5002	eval.c	FUNCTION_79	SWITCH_1	CALL_2
0x40031d3	    0x832d00000000	               sub dword [0x040031da], 1	      5003	eval.c	FUNCTION_79	SWITCH_1
0x40031da	      0xe9e2000000	                           jmp 0x40032c1	      5004	eval.c	FUNCTION_79	SWITCH_1
0x40031df	          0x83c201	                              add edx, 1	      5007	eval.c	FUNCTION_79	SWITCH_1
0x40031e2	    0x891500000000	            mov dword [0x040031e8], edx 	      5007	eval.c	FUNCTION_79	SWITCH_1
0x40031e8	        0x488b7508	                mov rsi, qword [rbp + 8]	      5008	eval.c	FUNCTION_79	SWITCH_1	CALL_3
0x40031ec	      0x498b7c2408	                mov rdi, qword [r12 + 8]	      5008	eval.c	FUNCTION_79	SWITCH_1	CALL_3
0x40031f1	      0xb901000000	                              mov ecx, 1	      5008	eval.c	FUNCTION_79	SWITCH_1	CALL_3
0x40031f6	          0x4489ea	                           mov edx, r13d	      5008	eval.c	FUNCTION_79	SWITCH_1	CALL_3
0x40031f9	      0xe800000000	                          call 0x40031fe	      5008	eval.c	FUNCTION_79	SWITCH_1	CALL_3
0x40031fe	    0x832d00000000	               sub dword [0x04003205], 1	      5009	eval.c	FUNCTION_79	SWITCH_1
0x4003205	      0xe9b7000000	                           jmp 0x40032c1	      5010	eval.c	FUNCTION_79	SWITCH_1
0x400320a	        0x488b4508	                mov rax, qword [rbp + 8]	      5013	eval.c	FUNCTION_79	SWITCH_1
0x400320e	      0x4939442408	                cmp qword [r12 + 8], rax	      5013	eval.c	FUNCTION_79	SWITCH_1
0x4003213	           0xf94c0	                                 sete al	      5013	eval.c	FUNCTION_79	SWITCH_1
0x4003216	           0xfb6c0	                           movzx eax, al	      5013	eval.c	FUNCTION_79	SWITCH_1
0x4003219	      0xe9a3000000	                           jmp 0x40032c1	      5013	eval.c	FUNCTION_79	SWITCH_1
0x400321e	          0x4889e6	                            mov rsi, rsp	      5016	eval.c	FUNCTION_79	SWITCH_1	CALL_4
0x4003221	          0x4c89e7	                            mov rdi, r12	      5016	eval.c	FUNCTION_79	SWITCH_1	CALL_4
0x4003224	      0xe800000000	                          call 0x4003229	      5016	eval.c	FUNCTION_79	SWITCH_1	CALL_4
0x4003229	          0x4889c3	                            mov rbx, rax	      5016	eval.c	FUNCTION_79	SWITCH_1	CALL_4
0x400322c	      0x488d742450	                   lea rsi, [rsp + 0x50]	      5017	eval.c	FUNCTION_79	SWITCH_1	CALL_5
0x4003231	          0x4889ef	                            mov rdi, rbp	      5017	eval.c	FUNCTION_79	SWITCH_1	CALL_5
0x4003234	      0xe800000000	                          call 0x4003239	      5017	eval.c	FUNCTION_79	SWITCH_1	CALL_5
0x4003239	          0x4585ed	                         test r13d, r13d	      5018	eval.c	FUNCTION_79	SWITCH_1	CALL_7
0x400323c	            0x741a	                            je 0x4003258	      5018	eval.c	FUNCTION_79	SWITCH_1	CALL_7
0x400323e	      0xbaffffff7f	                     mov edx, 0x7fffffff	      5018	eval.c	FUNCTION_79	SWITCH_1	CALL_7
0x4003243	          0x4889c6	                            mov rsi, rax	      5018	eval.c	FUNCTION_79	SWITCH_1	CALL_7
0x4003246	          0x4889df	                            mov rdi, rbx	      5018	eval.c	FUNCTION_79	SWITCH_1	CALL_7
0x4003249	      0xe800000000	                          call 0x400324e	      5018	eval.c	FUNCTION_79	SWITCH_1	CALL_7
0x400324e	            0x85c0	                           test eax, eax	      5018	eval.c	FUNCTION_79	SWITCH_1	CALL_7
0x4003250	           0xf94c0	                                 sete al	      5018	eval.c	FUNCTION_79	SWITCH_1	CALL_7
0x4003253	           0xfb6c0	                           movzx eax, al	      5018	eval.c	FUNCTION_79	SWITCH_1	CALL_7
0x4003256	            0xeb69	                           jmp 0x40032c1	      5018	eval.c	FUNCTION_79	SWITCH_1	CALL_7
0x4003258	          0x4889c6	                            mov rsi, rax	      5018	eval.c	FUNCTION_79	SWITCH_1	CALL_7
0x400325b	          0x4889df	                            mov rdi, rbx	      5018	eval.c	FUNCTION_79	SWITCH_1	CALL_7
0x400325e	      0xe800000000	                          call 0x4003263	      5018	eval.c	FUNCTION_79	SWITCH_1	CALL_7
0x4003263	            0x85c0	                           test eax, eax	      5018	eval.c	FUNCTION_79	SWITCH_1	CALL_7
0x4003265	           0xf94c0	                                 sete al	      5018	eval.c	FUNCTION_79	SWITCH_1	CALL_7
0x4003268	           0xfb6c0	                           movzx eax, al	      5018	eval.c	FUNCTION_79	SWITCH_1	CALL_7
0x400326b	            0xeb54	                           jmp 0x40032c1	      5018	eval.c	FUNCTION_79	SWITCH_1	CALL_7
0x400326d	        0x488b4508	                mov rax, qword [rbp + 8]	      5021	eval.c	FUNCTION_79	SWITCH_1
0x4003271	      0x4939442408	                cmp qword [r12 + 8], rax	      5021	eval.c	FUNCTION_79	SWITCH_1
0x4003276	           0xf94c0	                                 sete al	      5021	eval.c	FUNCTION_79	SWITCH_1
0x4003279	           0xfb6c0	                           movzx eax, al	      5021	eval.c	FUNCTION_79	SWITCH_1
0x400327c	            0xeb43	                           jmp 0x40032c1	      5021	eval.c	FUNCTION_79	SWITCH_1
0x400327e	    0xf2410f104424	            movsd xmm0, qword [r12 + 8] 	      5025	eval.c	FUNCTION_79	SWITCH_1
0x4003285	      0x660f2e4508	           ucomisd xmm0, qword [rbp + 8]	      5025	eval.c	FUNCTION_79	SWITCH_1
0x400328a	           0xf9bc0	                                setnp al	      5025	eval.c	FUNCTION_79	SWITCH_1
0x400328d	           0xfb6c0	                           movzx eax, al	      5025	eval.c	FUNCTION_79	SWITCH_1
0x4003290	      0xba00000000	                              mov edx, 0	      5025	eval.c	FUNCTION_79	SWITCH_1
0x4003295	           0xf45c2	                         cmovne eax, edx	      5025	eval.c	FUNCTION_79	SWITCH_1
0x4003298	            0xeb27	                           jmp 0x40032c1	      5025	eval.c	FUNCTION_79	SWITCH_1
0x400329a	        0x488b4508	                mov rax, qword [rbp + 8]	      5029	eval.c	FUNCTION_79	SWITCH_1
0x400329e	      0x4939442408	                cmp qword [r12 + 8], rax	      5029	eval.c	FUNCTION_79	SWITCH_1
0x40032a3	           0xf94c0	                                 sete al	      5029	eval.c	FUNCTION_79	SWITCH_1
0x40032a6	           0xfb6c0	                           movzx eax, al	      5029	eval.c	FUNCTION_79	SWITCH_1
0x40032a9	            0xeb16	                           jmp 0x40032c1	      5029	eval.c	FUNCTION_79	SWITCH_1
0x40032ab	        0x488b4508	                mov rax, qword [rbp + 8]	      5033	eval.c	FUNCTION_79	SWITCH_1
0x40032af	      0x4939442408	                cmp qword [r12 + 8], rax	      5033	eval.c	FUNCTION_79	SWITCH_1
0x40032b4	           0xf94c0	                                 sete al	      5033	eval.c	FUNCTION_79	SWITCH_1
0x40032b7	           0xfb6c0	                           movzx eax, al	      5033	eval.c	FUNCTION_79	SWITCH_1
0x40032ba	            0xeb05	                           jmp 0x40032c1	      5033	eval.c	FUNCTION_79	SWITCH_1
0x40032bc	      0xb800000000	                              mov eax, 0	      5043	eval.c	FUNCTION_79
0x40032c1	    0x488bb4249800	            mov rsi, qword [rsp + 0x98] 	      5044	eval.c	FUNCTION_79
0x40032c9	    0x644833342528	                xor rsi, qword fs:[0x28]	      5044	eval.c	FUNCTION_79
0x40032d2	            0x7468	                            je 0x400333c	      5044	eval.c	FUNCTION_79
0x40032d4	            0xeb61	                           jmp 0x4003337	      5044	eval.c	FUNCTION_79
0x40032d6	          0x83c201	                              add edx, 1	      4989	eval.c	FUNCTION_79	IF_3
0x40032d9	    0x891500000000	            mov dword [0x040032df], edx 	      4989	eval.c	FUNCTION_79	IF_3
0x40032df	      0xe940fdffff	                           jmp 0x4003024	      4989	eval.c	FUNCTION_79	IF_3
0x40032e4	        0x448b7500	                   mov r14d, dword [rbp]	      4986	eval.c	FUNCTION_79	IF_3
0x40032e8	        0x4183fe03	                             cmp r14d, 3	      4986	eval.c	FUNCTION_79	IF_3
0x40032ec	     0xf85fcfcffff	                           jne 0x4002fee	      4986	eval.c	FUNCTION_79	IF_3
0x40032f2	            0xebe2	                           jmp 0x40032d6	      4986	eval.c	FUNCTION_79	IF_3
0x40032f4	          0x83c201	                              add edx, 1	      4989	eval.c	FUNCTION_79	IF_3
0x40032f7	    0x891500000000	            mov dword [0x040032fd], edx 	      4989	eval.c	FUNCTION_79	IF_3
0x40032fd	      0xe915fdffff	                           jmp 0x4003017	      4989	eval.c	FUNCTION_79	IF_3
0x4003302	        0x448b7500	                   mov r14d, dword [rbp]	      4986	eval.c	FUNCTION_79	IF_3
0x4003306	        0x4183fe03	                             cmp r14d, 3	      4986	eval.c	FUNCTION_79	IF_3
0x400330a	            0x751b	                           jne 0x4003327	      4986	eval.c	FUNCTION_79	IF_3
0x400330c	            0xebe6	                           jmp 0x40032f4	      4986	eval.c	FUNCTION_79	IF_3
0x400330e	      0xba00000000	                              mov edx, 0	      4939	eval.c	FUNCTION_78
0x4003313	      0xb801000000	                              mov eax, 1	      4948	eval.c	FUNCTION_78
0x4003318	        0x837d0003	                      cmp dword [rbp], 3	      4940	eval.c	FUNCTION_78
0x400331c	     0xf8466feffff	                            je 0x4003188	      4940	eval.c	FUNCTION_78
0x4003322	      0xe9fffdffff	                           jmp 0x4003126	      4940	eval.c	FUNCTION_78
0x4003327	      0xb800000000	                              mov eax, 0	      4996	eval.c	FUNCTION_79	IF_4
0x400332c	        0x4183fe04	                             cmp r14d, 4	      4987	eval.c	FUNCTION_79	IF_3
0x4003330	            0x758f	                           jne 0x40032c1	      4987	eval.c	FUNCTION_79	IF_3
0x4003332	      0xe9c1fcffff	                           jmp 0x4002ff8	      4987	eval.c	FUNCTION_79	IF_3
0x4003337	      0xe800000000	                          call 0x400333c	      5044	eval.c	FUNCTION_79
0x400333c	    0x4881c4a00000	                           add rsp, 0xa0	      5044	eval.c	FUNCTION_79
0x4003343	              0x5b	                                 pop rbx	      5044	eval.c	FUNCTION_79
0x4003344	              0x5d	                                 pop rbp	      5044	eval.c	FUNCTION_79
0x4003345	            0x415c	                                 pop r12	      5044	eval.c	FUNCTION_79
0x4003347	            0x415d	                                 pop r13	      5044	eval.c	FUNCTION_79
0x4003349	            0x415e	                                 pop r14	      5044	eval.c	FUNCTION_79
0x400334b	              0xc3	                                     ret	      5044	eval.c	FUNCTION_79
script_autoload	FOR,1:SWITCH,0:DO,0:IF,5:functions,0:WHILE,0:CALL,6:ELSE,1	79
0x4004e35	            0x4157	                                push r15	      8485	eval.c	FUNCTION_161
0x4004e37	            0x4156	                                push r14	      8485	eval.c	FUNCTION_161
0x4004e39	            0x4155	                                push r13	      8485	eval.c	FUNCTION_161
0x4004e3b	            0x4154	                                push r12	      8485	eval.c	FUNCTION_161
0x4004e3d	              0x55	                                push rbp	      8485	eval.c	FUNCTION_161
0x4004e3e	              0x53	                                push rbx	      8485	eval.c	FUNCTION_161
0x4004e3f	        0x4883ec08	                              sub rsp, 8	      8485	eval.c	FUNCTION_161
0x4004e43	          0x4889fb	                            mov rbx, rdi	      8485	eval.c	FUNCTION_161
0x4004e46	          0x4189f7	                           mov r15d, esi	      8485	eval.c	FUNCTION_161
0x4004e49	      0xbe23000000	                           mov esi, 0x23	      8492	eval.c	FUNCTION_161	CALL_1
0x4004e4e	      0xe800000000	                          call 0x4004e53	      8492	eval.c	FUNCTION_161	CALL_1
0x4004e53	          0x4885c0	                           test rax, rax	      8493	eval.c	FUNCTION_161	IF_1
0x4004e56	     0xf84cf000000	                            je 0x4004f2b	      8493	eval.c	FUNCTION_161	IF_1
0x4004e5c	          0x4839c3	                            cmp rbx, rax	      8493	eval.c	FUNCTION_161	IF_1
0x4004e5f	     0xf84c6000000	                            je 0x4004f2b	      8493	eval.c	FUNCTION_161	IF_1
0x4004e65	          0x4889df	                            mov rdi, rbx	      8496	eval.c	FUNCTION_161	CALL_2
0x4004e68	      0xe800000000	                          call 0x4004e6d	      8496	eval.c	FUNCTION_161	CALL_2
0x4004e6d	          0x4989c6	                            mov r14, rax	      8496	eval.c	FUNCTION_161	CALL_2
0x4004e70	    0x448b25000000	           mov r12d, dword [0x04004e77] 	      8500	eval.c	FUNCTION_161	FOR_1
0x4004e77	          0x4585e4	                         test r12d, r12d	      8500	eval.c	FUNCTION_161	FOR_1
0x4004e7a	            0x7e45	                           jle 0x4004ec1	      8500	eval.c	FUNCTION_161	FOR_1
0x4004e7c	    0x488b1d000000	            mov rbx, qword [0x04004e83] 	      8500	eval.c	FUNCTION_161	FOR_1
0x4004e83	      0xbd00000000	                              mov ebp, 0	      8501	eval.c	FUNCTION_161	FOR_1	IF_2	CALL_3
0x4004e88	        0x4c8d6809	                      lea r13, [rax + 9]	      8501	eval.c	FUNCTION_161	FOR_1	IF_2	CALL_3
0x4004e8c	          0x488b03	                    mov rax, qword [rbx]	      8501	eval.c	FUNCTION_161	FOR_1	IF_2	CALL_3
0x4004e8f	        0x488d7809	                      lea rdi, [rax + 9]	      8501	eval.c	FUNCTION_161	FOR_1	IF_2	CALL_3
0x4004e93	          0x4c89ee	                            mov rsi, r13	      8501	eval.c	FUNCTION_161	FOR_1	IF_2	CALL_3
0x4004e96	      0xe800000000	                          call 0x4004e9b	      8501	eval.c	FUNCTION_161	FOR_1	IF_2	CALL_3
0x4004e9b	            0x85c0	                           test eax, eax	      8501	eval.c	FUNCTION_161	FOR_1	IF_2	CALL_3
0x4004e9d	            0x740e	                            je 0x4004ead	      8501	eval.c	FUNCTION_161	FOR_1	IF_2	CALL_3
0x4004e9f	          0x83c501	                              add ebp, 1	      8500	eval.c	FUNCTION_161	FOR_1
0x4004ea2	        0x4883c308	                              add rbx, 8	      8500	eval.c	FUNCTION_161	FOR_1
0x4004ea6	          0x4439e5	                           cmp ebp, r12d	      8500	eval.c	FUNCTION_161	FOR_1
0x4004ea9	            0x75e1	                           jne 0x4004e8c	      8500	eval.c	FUNCTION_161	FOR_1
0x4004eab	            0xeb1e	                           jmp 0x4004ecb	      8500	eval.c	FUNCTION_161	FOR_1
0x4004ead	          0x4139ec	                           cmp r12d, ebp	      8503	eval.c	FUNCTION_161	IF_3
0x4004eb0	            0x7e14	                           jle 0x4004ec6	      8503	eval.c	FUNCTION_161	IF_3
0x4004eb2	          0x4d89f5	                            mov r13, r14	      8496	eval.c	FUNCTION_161	CALL_2
0x4004eb5	      0xbb00000000	                              mov ebx, 0	      8504	eval.c	FUNCTION_161	IF_3
0x4004eba	          0x4585ff	                         test r15d, r15d	      8503	eval.c	FUNCTION_161	IF_3
0x4004ebd	            0x7460	                            je 0x4004f1f	      8503	eval.c	FUNCTION_161	IF_3
0x4004ebf	            0xeb05	                           jmp 0x4004ec6	      8503	eval.c	FUNCTION_161	IF_3
0x4004ec1	      0xbd00000000	                              mov ebp, 0	      8500	eval.c	FUNCTION_161	FOR_1
0x4004ec6	          0x4139ec	                           cmp r12d, ebp	      8508	eval.c	FUNCTION_161	ELSE_1	IF_4	CALL_4
0x4004ec9	            0x753b	                           jne 0x4004f06	      8508	eval.c	FUNCTION_161	ELSE_1	IF_4	CALL_4
0x4004ecb	      0xbe01000000	                              mov esi, 1	      8508	eval.c	FUNCTION_161	ELSE_1	IF_4	CALL_4
0x4004ed0	      0xbf00000000	                              mov edi, 0	      8508	eval.c	FUNCTION_161	ELSE_1	IF_4	CALL_4
0x4004ed5	      0xe800000000	                          call 0x4004eda	      8508	eval.c	FUNCTION_161	ELSE_1	IF_4	CALL_4
0x4004eda	          0x4d89f5	                            mov r13, r14	      8496	eval.c	FUNCTION_161	CALL_2
0x4004edd	          0x83f801	                              cmp eax, 1	      8508	eval.c	FUNCTION_161	ELSE_1	IF_4	CALL_4
0x4004ee0	            0x7527	                           jne 0x4004f09	      8508	eval.c	FUNCTION_161	ELSE_1	IF_4	CALL_4
0x4004ee2	    0x8b0500000000	            mov eax, dword [0x04004ee8] 	      8510	eval.c	FUNCTION_161	ELSE_1	IF_4
0x4004ee8	          0x8d5001	                      lea edx, [rax + 1]	      8510	eval.c	FUNCTION_161	ELSE_1	IF_4
0x4004eeb	    0x891500000000	            mov dword [0x04004ef1], edx 	      8510	eval.c	FUNCTION_161	ELSE_1	IF_4
0x4004ef1	            0x4898	                                    cdqe	      8510	eval.c	FUNCTION_161	ELSE_1	IF_4
0x4004ef3	    0x488b15000000	            mov rdx, qword [0x04004efa] 	      8510	eval.c	FUNCTION_161	ELSE_1	IF_4
0x4004efa	        0x4c8934c2	            mov qword [rdx + rax*8], r14	      8510	eval.c	FUNCTION_161	ELSE_1	IF_4
0x4004efe	    0x41bd00000000	                             mov r13d, 0	      8511	eval.c	FUNCTION_161	ELSE_1	IF_4
0x4004f04	            0xeb03	                           jmp 0x4004f09	      8511	eval.c	FUNCTION_161	ELSE_1	IF_4
0x4004f06	          0x4d89f5	                            mov r13, r14	      8496	eval.c	FUNCTION_161	CALL_2
0x4004f09	      0xbe00000000	                              mov esi, 0	      8515	eval.c	FUNCTION_161	ELSE_1	IF_5	CALL_5
0x4004f0e	          0x4c89f7	                            mov rdi, r14	      8515	eval.c	FUNCTION_161	ELSE_1	IF_5	CALL_5
0x4004f11	      0xe800000000	                          call 0x4004f16	      8515	eval.c	FUNCTION_161	ELSE_1	IF_5	CALL_5
0x4004f16	          0x83f801	                              cmp eax, 1	      8504	eval.c	FUNCTION_161	IF_3
0x4004f19	           0xf94c3	                                 sete bl	      8504	eval.c	FUNCTION_161	IF_3
0x4004f1c	           0xfb6db	                           movzx ebx, bl	      8504	eval.c	FUNCTION_161	IF_3
0x4004f1f	          0x4c89ef	                            mov rdi, r13	      8519	eval.c	FUNCTION_161	CALL_6
0x4004f22	      0xe800000000	                          call 0x4004f27	      8519	eval.c	FUNCTION_161	CALL_6
0x4004f27	            0x89d8	                            mov eax, ebx	      8520	eval.c	FUNCTION_161
0x4004f29	            0xeb05	                           jmp 0x4004f30	      8520	eval.c	FUNCTION_161
0x4004f2b	      0xb800000000	                              mov eax, 0	      8494	eval.c	FUNCTION_161	IF_1
0x4004f30	        0x4883c408	                              add rsp, 8	      8521	eval.c	FUNCTION_161
0x4004f34	              0x5b	                                 pop rbx	      8521	eval.c	FUNCTION_161
0x4004f35	              0x5d	                                 pop rbp	      8521	eval.c	FUNCTION_161
0x4004f36	            0x415c	                                 pop r12	      8521	eval.c	FUNCTION_161
0x4004f38	            0x415d	                                 pop r13	      8521	eval.c	FUNCTION_161
0x4004f3a	            0x415e	                                 pop r14	      8521	eval.c	FUNCTION_161
0x4004f3c	            0x415f	                                 pop r15	      8521	eval.c	FUNCTION_161
0x4004f3e	              0xc3	                                     ret	      8521	eval.c	FUNCTION_161
getwinvar	FOR,0:SWITCH,0:DO,0:IF,10:functions,0:WHILE,0:CALL,12:ELSE,3	122
0x4005d56	            0x4157	                                push r15	      8283	eval.c	ELSE_2	FUNCTION_157
0x4005d58	            0x4156	                                push r14	      8283	eval.c	ELSE_2	FUNCTION_157
0x4005d5a	            0x4155	                                push r13	      8283	eval.c	ELSE_2	FUNCTION_157
0x4005d5c	            0x4154	                                push r12	      8283	eval.c	ELSE_2	FUNCTION_157
0x4005d5e	              0x55	                                push rbp	      8283	eval.c	ELSE_2	FUNCTION_157
0x4005d5f	              0x53	                                push rbx	      8283	eval.c	ELSE_2	FUNCTION_157
0x4005d60	        0x4883ec28	                           sub rsp, 0x28	      8283	eval.c	ELSE_2	FUNCTION_157
0x4005d64	          0x4889fd	                            mov rbp, rdi	      8283	eval.c	ELSE_2	FUNCTION_157
0x4005d67	          0x4989f4	                            mov r12, rsi	      8283	eval.c	ELSE_2	FUNCTION_157
0x4005d6a	            0x89d3	                            mov ebx, edx	      8283	eval.c	ELSE_2	FUNCTION_157
0x4005d6c	    0x64488b042528	                mov rax, qword fs:[0x28]	      8283	eval.c	ELSE_2	FUNCTION_157
0x4005d75	      0x4889442418	             mov qword [rsp + 0x18], rax	      8283	eval.c	ELSE_2	FUNCTION_157
0x4005d7a	            0x31c0	                            xor eax, eax	      8283	eval.c	ELSE_2	FUNCTION_157
0x4005d7c	    0x4c8b2d000000	            mov r13, qword [0x04005d83] 	      8296	eval.c	ELSE_2	FUNCTION_157	ELSE_1
0x4005d83	          0x83fa01	                              cmp edx, 1	      8293	eval.c	ELSE_2	FUNCTION_157	IF_1
0x4005d86	            0x7514	                           jne 0x4005d9c	      8293	eval.c	ELSE_2	FUNCTION_157	IF_1
0x4005d88	      0xbe00000000	                              mov esi, 0	      8294	eval.c	ELSE_2	FUNCTION_157	CALL_2
0x4005d8d	      0xe800000000	                          call 0x4005d92	      8294	eval.c	ELSE_2	FUNCTION_157	CALL_2
0x4005d92	            0x89c7	                            mov edi, eax	      8294	eval.c	ELSE_2	FUNCTION_157	CALL_2
0x4005d94	      0xe800000000	                          call 0x4005d99	      8294	eval.c	ELSE_2	FUNCTION_157	CALL_2
0x4005d99	          0x4989c5	                            mov r13, rax	      8294	eval.c	ELSE_2	FUNCTION_157	CALL_2
0x4005d9c	          0x4863db	                         movsxd rbx, ebx	      8297	eval.c	ELSE_2	FUNCTION_157	CALL_3
0x4005d9f	        0x48c1e304	                              shl rbx, 4	      8297	eval.c	ELSE_2	FUNCTION_157	CALL_3
0x4005da3	      0x488d7c1d00	                    lea rdi, [rbp + rbx]	      8297	eval.c	ELSE_2	FUNCTION_157	CALL_3
0x4005da8	          0x4c89ee	                            mov rsi, r13	      8297	eval.c	ELSE_2	FUNCTION_157	CALL_3
0x4005dab	      0xe800000000	                          call 0x4005db0	      8297	eval.c	ELSE_2	FUNCTION_157	CALL_3
0x4005db0	          0x4989c6	                            mov r14, rax	      8297	eval.c	ELSE_2	FUNCTION_157	CALL_3
0x4005db3	      0x488d7c1d10	            lea rdi, [rbp + rbx + 0x10] 	      8298	eval.c	ELSE_2	FUNCTION_157	CALL_4
0x4005db8	      0xe800000000	                          call 0x4005dbd	      8298	eval.c	ELSE_2	FUNCTION_157	CALL_4
0x4005dbd	        0x48890424	                    mov qword [rsp], rax	      8298	eval.c	ELSE_2	FUNCTION_157	CALL_4
0x4005dc1	    0x830500000000	               add dword [0x04005dc8], 1	      8299	eval.c	ELSE_2	FUNCTION_157
0x4005dc8	    0x41c704240200	                      mov dword [r12], 2	      8301	eval.c	ELSE_2	FUNCTION_157
0x4005dd0	    0x49c744240800	                  mov qword [r12 + 8], 0	      8302	eval.c	ELSE_2	FUNCTION_157
0x4005dd9	          0x4d85f6	                           test r14, r14	      8304	eval.c	ELSE_2	FUNCTION_157	IF_2
0x4005ddc	     0xf84fd000000	                            je 0x4005edf	      8304	eval.c	ELSE_2	FUNCTION_157	IF_2
0x4005de2	          0x4885c0	                           test rax, rax	      8304	eval.c	ELSE_2	FUNCTION_157	IF_2
0x4005de5	     0xf84f4000000	                            je 0x4005edf	      8304	eval.c	ELSE_2	FUNCTION_157	IF_2
0x4005deb	    0x41bf01000000	                             mov r15d, 1	      8309	eval.c	ELSE_2	FUNCTION_157	IF_2
0x4005df1	    0x4c3b2d000000	            cmp r13, qword [0x04005df8] 	      8309	eval.c	ELSE_2	FUNCTION_157	IF_2
0x4005df8	            0x7514	                           jne 0x4005e0e	      8309	eval.c	ELSE_2	FUNCTION_157	IF_2
0x4005dfa	    0x488b05000000	            mov rax, qword [0x04005e01] 	      8309	eval.c	ELSE_2	FUNCTION_157	IF_2
0x4005e01	          0x4939c6	                            cmp r14, rax	      8309	eval.c	ELSE_2	FUNCTION_157	IF_2
0x4005e04	        0x410f95c7	                              setne r15b	      8309	eval.c	ELSE_2	FUNCTION_157	IF_2
0x4005e08	        0x450fb6ff	                        movzx r15d, r15b	      8309	eval.c	ELSE_2	FUNCTION_157	IF_2
0x4005e0c	            0x742a	                            je 0x4005e38	      8310	eval.c	ELSE_2	FUNCTION_157	IF_2	IF_3
0x4005e0e	    0x41b801000000	                              mov r8d, 1	      8311	eval.c	ELSE_2	FUNCTION_157	IF_2	IF_3	CALL_5
0x4005e14	          0x4c89e9	                            mov rcx, r13	      8311	eval.c	ELSE_2	FUNCTION_157	IF_2	IF_3	CALL_5
0x4005e17	          0x4c89f2	                            mov rdx, r14	      8311	eval.c	ELSE_2	FUNCTION_157	IF_2	IF_3	CALL_5
0x4005e1a	      0x488d742410	                   lea rsi, [rsp + 0x10]	      8311	eval.c	ELSE_2	FUNCTION_157	IF_2	IF_3	CALL_5
0x4005e1f	      0x488d7c2408	                      lea rdi, [rsp + 8]	      8311	eval.c	ELSE_2	FUNCTION_157	IF_2	IF_3	CALL_5
0x4005e24	      0xe800000000	                          call 0x4005e29	      8311	eval.c	ELSE_2	FUNCTION_157	IF_2	IF_3	CALL_5
0x4005e29	    0x41bd00000000	                             mov r13d, 0	      8288	eval.c	ELSE_2	FUNCTION_157
0x4005e2f	          0x83f801	                              cmp eax, 1	      8311	eval.c	ELSE_2	FUNCTION_157	IF_2	IF_3	CALL_5
0x4005e32	     0xf858e000000	                           jne 0x4005ec6	      8311	eval.c	ELSE_2	FUNCTION_157	IF_2	IF_3	CALL_5
0x4005e38	        0x488b1424	                    mov rdx, qword [rsp]	      8313	eval.c	ELSE_2	FUNCTION_157	IF_2	IF_3	IF_4
0x4005e3c	          0x803a26	                    cmp byte [rdx], 0x26	      8313	eval.c	ELSE_2	FUNCTION_157	IF_2	IF_3	IF_4
0x4005e3f	            0x754b	                           jne 0x4005e8c	      8313	eval.c	ELSE_2	FUNCTION_157	IF_2	IF_3	IF_4
0x4005e41	        0x807a0100	                   cmp byte [rdx + 1], 0	      8315	eval.c	ELSE_2	FUNCTION_157	IF_2	IF_3	IF_4	IF_5
0x4005e45	            0x7523	                           jne 0x4005e6a	      8315	eval.c	ELSE_2	FUNCTION_157	IF_2	IF_3	IF_4	IF_5
0x4005e47	      0xbf00000000	                              mov edi, 0	      8318	eval.c	ELSE_2	FUNCTION_157	IF_2	IF_3	IF_4	IF_5	CALL_6
0x4005e4c	      0xe800000000	                          call 0x4005e51	      8318	eval.c	ELSE_2	FUNCTION_157	IF_2	IF_3	IF_4	IF_5	CALL_6
0x4005e51	          0x4885c0	                           test rax, rax	      8320	eval.c	ELSE_2	FUNCTION_157	IF_2	IF_3	IF_4	IF_5	IF_6
0x4005e54	     0xf84b7000000	                            je 0x4005f11	      8320	eval.c	ELSE_2	FUNCTION_157	IF_2	IF_3	IF_4	IF_5	IF_6
0x4005e5a	          0x4889c6	                            mov rsi, rax	      8322	eval.c	ELSE_2	FUNCTION_157	IF_2	IF_3	IF_4	IF_5	IF_6	CALL_7
0x4005e5d	          0x4c89e7	                            mov rdi, r12	      8322	eval.c	ELSE_2	FUNCTION_157	IF_2	IF_3	IF_4	IF_5	IF_6	CALL_7
0x4005e60	      0xe800000000	                          call 0x4005e65	      8322	eval.c	ELSE_2	FUNCTION_157	IF_2	IF_3	IF_4	IF_5	IF_6	CALL_7
0x4005e65	      0xe9a0000000	                           jmp 0x4005f0a	      8322	eval.c	ELSE_2	FUNCTION_157	IF_2	IF_3	IF_4	IF_5	IF_6	CALL_7
0x4005e6a	      0xba01000000	                              mov edx, 1	      8326	eval.c	FUNCTION_157	IF_2	IF_3	IF_4	IF_7	CALL_8
0x4005e6f	          0x4c89e6	                            mov rsi, r12	      8326	eval.c	FUNCTION_157	IF_2	IF_3	IF_4	IF_7	CALL_8
0x4005e72	          0x4889e7	                            mov rdi, rsp	      8326	eval.c	FUNCTION_157	IF_2	IF_3	IF_4	IF_7	CALL_8
0x4005e75	      0xe800000000	                          call 0x4005e7a	      8326	eval.c	FUNCTION_157	IF_2	IF_3	IF_4	IF_7	CALL_8
0x4005e7a	          0x83f801	                              cmp eax, 1	      8288	eval.c	ELSE_2	FUNCTION_157
0x4005e7d	        0x410f94c5	                               sete r13b	      8288	eval.c	ELSE_2	FUNCTION_157
0x4005e81	        0x450fb6ed	                        movzx r13d, r13b	      8288	eval.c	ELSE_2	FUNCTION_157
0x4005e85	          0x4585ff	                         test r15d, r15d	      8344	eval.c	FUNCTION_157	IF_2	ELSE_2	IF_9
0x4005e88	            0x7450	                            je 0x4005eda	      8344	eval.c	FUNCTION_157	IF_2	ELSE_2	IF_9
0x4005e8a	            0xeb3a	                           jmp 0x4005ec6	      8344	eval.c	FUNCTION_157	IF_2	ELSE_2	IF_9
0x4005e8c	    0x498bbe700500	           mov rdi, qword [r14 + 0x570] 	      8334	eval.c	FUNCTION_157	IF_2	IF_3	ELSE_2	ELSE_3	CALL_9
0x4005e93	        0x4883c710	                           add rdi, 0x10	      8334	eval.c	FUNCTION_157	IF_2	IF_3	ELSE_2	ELSE_3	CALL_9
0x4005e97	      0xb900000000	                              mov ecx, 0	      8334	eval.c	FUNCTION_157	IF_2	IF_3	ELSE_2	ELSE_3	CALL_9
0x4005e9c	      0xbe77000000	                           mov esi, 0x77	      8334	eval.c	FUNCTION_157	IF_2	IF_3	ELSE_2	ELSE_3	CALL_9
0x4005ea1	      0xe800000000	                          call 0x4005ea6	      8334	eval.c	FUNCTION_157	IF_2	IF_3	ELSE_2	ELSE_3	CALL_9
0x4005ea6	          0x4885c0	                           test rax, rax	      8336	eval.c	FUNCTION_157	IF_2	IF_3	ELSE_2	ELSE_3	IF_8
0x4005ea9	            0x7466	                            je 0x4005f11	      8336	eval.c	FUNCTION_157	IF_2	IF_3	ELSE_2	ELSE_3	IF_8
0x4005eab	          0x4c89e6	                            mov rsi, r12	      8338	eval.c	FUNCTION_157	IF_2	IF_3	ELSE_2	ELSE_3	IF_8	CALL_10
0x4005eae	          0x4889c7	                            mov rdi, rax	      8338	eval.c	FUNCTION_157	IF_2	IF_3	ELSE_2	ELSE_3	IF_8	CALL_10
0x4005eb1	      0xe800000000	                          call 0x4005eb6	      8338	eval.c	FUNCTION_157	IF_2	IF_3	ELSE_2	ELSE_3	IF_8	CALL_10
0x4005eb6	            0xeb52	                           jmp 0x4005f0a	      8338	eval.c	FUNCTION_157	IF_2	IF_3	ELSE_2	ELSE_3	IF_8	CALL_10
0x4005eb8	    0x41bd01000000	                             mov r13d, 1	      8344	eval.c	FUNCTION_157	IF_2	ELSE_2	IF_9
0x4005ebe	            0xeb06	                           jmp 0x4005ec6	      8344	eval.c	FUNCTION_157	IF_2	ELSE_2	IF_9
0x4005ec0	    0x41bd00000000	                             mov r13d, 0	      8344	eval.c	FUNCTION_157	IF_2	ELSE_2	IF_9
0x4005ec6	      0xba01000000	                              mov edx, 1	      8346	eval.c	FUNCTION_157	IF_2	ELSE_2	CALL_11
0x4005ecb	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      8346	eval.c	FUNCTION_157	IF_2	ELSE_2	CALL_11
0x4005ed0	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      8346	eval.c	FUNCTION_157	IF_2	ELSE_2	CALL_11
0x4005ed5	      0xe800000000	                          call 0x4005eda	      8346	eval.c	FUNCTION_157	IF_2	ELSE_2	CALL_11
0x4005eda	          0x4585ed	                         test r13d, r13d	      8349	eval.c	FUNCTION_157	ELSE_2	IF_10
0x4005edd	            0x7512	                           jne 0x4005ef1	      8349	eval.c	FUNCTION_157	ELSE_2	IF_10
0x4005edf	      0x488d7c1d20	            lea rdi, [rbp + rbx + 0x20] 	      8349	eval.c	FUNCTION_157	ELSE_2	IF_10
0x4005ee4	          0x833f00	                      cmp dword [rdi], 0	      8349	eval.c	FUNCTION_157	ELSE_2	IF_10
0x4005ee7	            0x7408	                            je 0x4005ef1	      8349	eval.c	FUNCTION_157	ELSE_2	IF_10
0x4005ee9	          0x4c89e6	                            mov rsi, r12	      8351	eval.c	FUNCTION_157	ELSE_2	CALL_12
0x4005eec	      0xe800000000	                          call 0x4005ef1	      8351	eval.c	FUNCTION_157	ELSE_2	CALL_12
0x4005ef1	    0x832d00000000	               sub dword [0x04005ef8], 1	      8353	eval.c	FUNCTION_157	ELSE_2
0x4005ef8	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      8354	eval.c	FUNCTION_157	ELSE_2
0x4005efd	    0x644833042528	                xor rax, qword fs:[0x28]	      8354	eval.c	FUNCTION_157	ELSE_2
0x4005f06	            0x7415	                            je 0x4005f1d	      8354	eval.c	FUNCTION_157	ELSE_2
0x4005f08	            0xeb0e	                           jmp 0x4005f18	      8354	eval.c	FUNCTION_157	ELSE_2
0x4005f0a	          0x4585ff	                         test r15d, r15d	      8344	eval.c	FUNCTION_157	IF_2	ELSE_2	IF_9
0x4005f0d	            0x74e2	                            je 0x4005ef1	      8344	eval.c	FUNCTION_157	IF_2	ELSE_2	IF_9
0x4005f0f	            0xeba7	                           jmp 0x4005eb8	      8344	eval.c	FUNCTION_157	IF_2	ELSE_2	IF_9
0x4005f11	          0x4585ff	                         test r15d, r15d	      8344	eval.c	FUNCTION_157	IF_2	ELSE_2	IF_9
0x4005f14	            0x74c9	                            je 0x4005edf	      8344	eval.c	FUNCTION_157	IF_2	ELSE_2	IF_9
0x4005f16	            0xeba8	                           jmp 0x4005ec0	      8344	eval.c	FUNCTION_157	IF_2	ELSE_2	IF_9
0x4005f18	      0xe800000000	                          call 0x4005f1d	      8354	eval.c	FUNCTION_157	ELSE_2
0x4005f1d	        0x4883c428	                           add rsp, 0x28	      8354	eval.c	FUNCTION_157	ELSE_2
0x4005f21	              0x5b	                                 pop rbx	      8354	eval.c	FUNCTION_157	ELSE_2
0x4005f22	              0x5d	                                 pop rbp	      8354	eval.c	FUNCTION_157	ELSE_2
0x4005f23	            0x415c	                                 pop r12	      8354	eval.c	FUNCTION_157	ELSE_2
0x4005f25	            0x415d	                                 pop r13	      8354	eval.c	FUNCTION_157	ELSE_2
0x4005f27	            0x415e	                                 pop r14	      8354	eval.c	FUNCTION_157	ELSE_2
0x4005f29	            0x415f	                                 pop r15	      8354	eval.c	FUNCTION_157	ELSE_2
0x4005f2b	              0xc3	                                     ret	      8354	eval.c	FUNCTION_157	ELSE_2
get_id_len	FOR,1:SWITCH,0:DO,0:IF,3:functions,0:WHILE,0:CALL,3:ELSE,0	41
0x4001b96	            0x4154	                                push r12	      6103	eval.c	FUNCTION_96
0x4001b98	              0x55	                                push rbp	      6103	eval.c	FUNCTION_96
0x4001b99	              0x53	                                push rbx	      6103	eval.c	FUNCTION_96
0x4001b9a	          0x4989fc	                            mov r12, rdi	      6103	eval.c	FUNCTION_96
0x4001b9d	          0x488b1f	                    mov rbx, qword [rdi]	      6108	eval.c	FUNCTION_96	FOR_1	CALL_1
0x4001ba0	            0xeb32	                           jmp 0x4001bd4	      6108	eval.c	FUNCTION_96	FOR_1	CALL_1
0x4001ba2	        0x4080fd3a	                           cmp bpl, 0x3a	      6110	eval.c	FUNCTION_96	FOR_1	IF_1
0x4001ba6	            0x7528	                           jne 0x4001bd0	      6110	eval.c	FUNCTION_96	FOR_1	IF_1
0x4001ba8	        0x498b1424	                    mov rdx, qword [r12]	      6114	eval.c	FUNCTION_96	FOR_1	IF_1
0x4001bac	          0x4889d8	                            mov rax, rbx	      6114	eval.c	FUNCTION_96	FOR_1	IF_1
0x4001baf	          0x4829d0	                            sub rax, rdx	      6114	eval.c	FUNCTION_96	FOR_1	IF_1
0x4001bb2	          0x83f801	                              cmp eax, 1	      6115	eval.c	FUNCTION_96	FOR_1	IF_1	IF_2	CALL_2
0x4001bb5	            0x7514	                           jne 0x4001bcb	      6115	eval.c	FUNCTION_96	FOR_1	IF_1	IF_2	CALL_2
0x4001bb7	           0xfb632	                   movzx esi, byte [rdx]	      6115	eval.c	FUNCTION_96	FOR_1	IF_1	IF_2	CALL_2
0x4001bba	      0xbf00000000	                              mov edi, 0	      6115	eval.c	FUNCTION_96	FOR_1	IF_1	IF_2	CALL_2
0x4001bbf	      0xe800000000	                          call 0x4001bc4	      6115	eval.c	FUNCTION_96	FOR_1	IF_1	IF_2	CALL_2
0x4001bc4	          0x4885c0	                           test rax, rax	      6115	eval.c	FUNCTION_96	FOR_1	IF_1	IF_2	CALL_2
0x4001bc7	            0x7507	                           jne 0x4001bd0	      6115	eval.c	FUNCTION_96	FOR_1	IF_1	IF_2	CALL_2
0x4001bc9	            0xeb19	                           jmp 0x4001be4	      6115	eval.c	FUNCTION_96	FOR_1	IF_1	IF_2	CALL_2
0x4001bcb	          0x83f801	                              cmp eax, 1	      6116	eval.c	FUNCTION_96	FOR_1	IF_1	IF_2
0x4001bce	            0x7f14	                            jg 0x4001be4	      6116	eval.c	FUNCTION_96	FOR_1	IF_1	IF_2
0x4001bd0	        0x4883c301	                              add rbx, 1	      6108	eval.c	FUNCTION_96	FOR_1	CALL_1
0x4001bd4	           0xfb62b	                   movzx ebp, byte [rbx]	      6108	eval.c	FUNCTION_96	FOR_1	CALL_1
0x4001bd7	        0x400fb6fd	                          movzx edi, bpl	      6108	eval.c	FUNCTION_96	FOR_1	CALL_1
0x4001bdb	      0xe800000000	                          call 0x4001be0	      6108	eval.c	FUNCTION_96	FOR_1	CALL_1
0x4001be0	            0x85c0	                           test eax, eax	      6108	eval.c	FUNCTION_96	FOR_1	CALL_1
0x4001be2	            0x75be	                           jne 0x4001ba2	      6108	eval.c	FUNCTION_96	FOR_1	CALL_1
0x4001be4	        0x498b1424	                    mov rdx, qword [r12]	      6120	eval.c	FUNCTION_96	IF_3
0x4001be8	      0xb800000000	                              mov eax, 0	      6121	eval.c	FUNCTION_96	IF_3
0x4001bed	          0x4839d3	                            cmp rbx, rdx	      6120	eval.c	FUNCTION_96	IF_3
0x4001bf0	            0x7414	                            je 0x4001c06	      6120	eval.c	FUNCTION_96	IF_3
0x4001bf2	          0x4889dd	                            mov rbp, rbx	      6123	eval.c	FUNCTION_96
0x4001bf5	          0x4829d5	                            sub rbp, rdx	      6123	eval.c	FUNCTION_96
0x4001bf8	          0x4889df	                            mov rdi, rbx	      6124	eval.c	FUNCTION_96	CALL_3
0x4001bfb	      0xe800000000	                          call 0x4001c00	      6124	eval.c	FUNCTION_96	CALL_3
0x4001c00	        0x49890424	                    mov qword [r12], rax	      6124	eval.c	FUNCTION_96	CALL_3
0x4001c04	            0x89e8	                            mov eax, ebp	      6126	eval.c	FUNCTION_96
0x4001c06	              0x5b	                                 pop rbx	      6127	eval.c	FUNCTION_96
0x4001c07	              0x5d	                                 pop rbp	      6127	eval.c	FUNCTION_96
0x4001c08	            0x415c	                                 pop r12	      6127	eval.c	FUNCTION_96
0x4001c0a	              0xc3	                                     ret	      6127	eval.c	FUNCTION_96
set_vim_var_char	FOR,0:SWITCH,0:DO,0:IF,1:functions,0:WHILE,0:CALL,1:ELSE,1	23
0x4002892	        0x4883ec28	                           sub rsp, 0x28	      6433	eval.c	FUNCTION_107
0x4002896	    0x64488b042528	                mov rax, qword fs:[0x28]	      6433	eval.c	FUNCTION_107
0x400289f	      0x4889442418	             mov qword [rsp + 0x18], rax	      6433	eval.c	FUNCTION_107
0x40028a4	            0x31c0	                            xor eax, eax	      6433	eval.c	FUNCTION_107
0x40028a6	    0x833d00000000	               cmp dword [0x040028ad], 0	      6437	eval.c	FUNCTION_107	IF_1
0x40028ad	            0x7411	                            je 0x40028c0	      6437	eval.c	FUNCTION_107	IF_1
0x40028af	          0x4889e6	                            mov rsi, rsp	      6438	eval.c	FUNCTION_107	IF_1
0x40028b2	    0xff1500000000	                 call qword [0x040028b8]	      6438	eval.c	FUNCTION_107	IF_1
0x40028b8	            0x4898	                                    cdqe	      6438	eval.c	FUNCTION_107	IF_1
0x40028ba	        0xc6040400	                 mov byte [rsp + rax], 0	      6438	eval.c	FUNCTION_107	IF_1
0x40028be	            0xeb09	                           jmp 0x40028c9	      6438	eval.c	FUNCTION_107	IF_1
0x40028c0	        0x40883c24	                     mov byte [rsp], dil	      6442	eval.c	FUNCTION_107	ELSE_1
0x40028c4	      0xc644240100	                   mov byte [rsp + 1], 0	      6443	eval.c	FUNCTION_107	ELSE_1
0x40028c9	      0xbaffffffff	                     mov edx, 0xffffffff	      6445	eval.c	FUNCTION_107	CALL_1
0x40028ce	          0x4889e6	                            mov rsi, rsp	      6445	eval.c	FUNCTION_107	CALL_1
0x40028d1	      0xbf31000000	                           mov edi, 0x31	      6445	eval.c	FUNCTION_107	CALL_1
0x40028d6	      0xe800000000	                          call 0x40028db	      6445	eval.c	FUNCTION_107	CALL_1
0x40028db	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      6446	eval.c	FUNCTION_107
0x40028e0	    0x644833042528	                xor rax, qword fs:[0x28]	      6446	eval.c	FUNCTION_107
0x40028e9	            0x7405	                            je 0x40028f0	      6446	eval.c	FUNCTION_107
0x40028eb	      0xe800000000	                          call 0x40028f0	      6446	eval.c	FUNCTION_107
0x40028f0	        0x4883c428	                           add rsp, 0x28	      6446	eval.c	FUNCTION_107
0x40028f4	              0xc3	                                     ret	      6446	eval.c	FUNCTION_107
get_tv_number	FOR,0:SWITCH,0:DO,0:IF,0:functions,0:WHILE,0:CALL,1:ELSE,0	13
0x4002beb	        0x4883ec18	                           sub rsp, 0x18	      6961	eval.c	FUNCTION_124
0x4002bef	    0x64488b042528	                mov rax, qword fs:[0x28]	      6961	eval.c	FUNCTION_124
0x4002bf8	      0x4889442408	                mov qword [rsp + 8], rax	      6961	eval.c	FUNCTION_124
0x4002bfd	            0x31c0	                            xor eax, eax	      6961	eval.c	FUNCTION_124
0x4002bff	    0xc74424040000	                  mov dword [rsp + 4], 0	      6962	eval.c	FUNCTION_124
0x4002c07	      0x488d742404	                      lea rsi, [rsp + 4]	      6964	eval.c	FUNCTION_124	CALL_1
0x4002c0c	      0xe800000000	                          call 0x4002c11	      6964	eval.c	FUNCTION_124	CALL_1
0x4002c11	      0x488b542408	                mov rdx, qword [rsp + 8]	      6965	eval.c	FUNCTION_124
0x4002c16	    0x644833142528	                xor rdx, qword fs:[0x28]	      6965	eval.c	FUNCTION_124
0x4002c1f	            0x7405	                            je 0x4002c26	      6965	eval.c	FUNCTION_124
0x4002c21	      0xe800000000	                          call 0x4002c26	      6965	eval.c	FUNCTION_124
0x4002c26	        0x4883c418	                           add rsp, 0x18	      6965	eval.c	FUNCTION_124
0x4002c2a	              0xc3	                                     ret	      6965	eval.c	FUNCTION_124
assert_bool	FOR,0:SWITCH,0:DO,0:IF,2:functions,0:WHILE,0:CALL,5:ELSE,0	57
0x4006b3a	              0x55	                                push rbp	      8971	eval.c	FUNCTION_174
0x4006b3b	              0x53	                                push rbx	      8971	eval.c	FUNCTION_174
0x4006b3c	        0x4883ec38	                           sub rsp, 0x38	      8971	eval.c	FUNCTION_174
0x4006b40	          0x4889fb	                            mov rbx, rdi	      8971	eval.c	FUNCTION_174
0x4006b43	            0x89f5	                            mov ebp, esi	      8971	eval.c	FUNCTION_174
0x4006b45	    0x64488b042528	                mov rax, qword fs:[0x28]	      8971	eval.c	FUNCTION_174
0x4006b4e	      0x4889442428	             mov qword [rsp + 0x28], rax	      8971	eval.c	FUNCTION_174
0x4006b53	            0x31c0	                            xor eax, eax	      8971	eval.c	FUNCTION_174
0x4006b55	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      8972	eval.c	FUNCTION_174
0x4006b5d	            0x8b07	                    mov eax, dword [rdi]	      8975	eval.c	FUNCTION_174	IF_1
0x4006b5f	          0x83f808	                              cmp eax, 8	      8975	eval.c	FUNCTION_174	IF_1
0x4006b62	            0x7510	                           jne 0x4006b74	      8975	eval.c	FUNCTION_174	IF_1
0x4006b64	            0x85f6	                           test esi, esi	      8976	eval.c	FUNCTION_174	IF_1
0x4006b66	           0xf95c0	                                setne al	      8976	eval.c	FUNCTION_174	IF_1
0x4006b69	           0xfb6c0	                           movzx eax, al	      8976	eval.c	FUNCTION_174	IF_1
0x4006b6c	        0x48394708	                cmp qword [rdi + 8], rax	      8976	eval.c	FUNCTION_174	IF_1
0x4006b70	            0x7526	                           jne 0x4006b98	      8976	eval.c	FUNCTION_174	IF_1
0x4006b72	            0xeb75	                           jmp 0x4006be9	      8976	eval.c	FUNCTION_174	IF_1
0x4006b74	          0x83f801	                              cmp eax, 1	      8978	eval.c	FUNCTION_174	IF_2
0x4006b77	            0x751f	                           jne 0x4006b98	      8978	eval.c	FUNCTION_174	IF_2
0x4006b79	      0x488d74240c	                    lea rsi, [rsp + 0xc]	      8979	eval.c	FUNCTION_174	IF_2	CALL_1
0x4006b7e	      0xe800000000	                          call 0x4006b83	      8979	eval.c	FUNCTION_174	IF_2	CALL_1
0x4006b83	          0x4885c0	                           test rax, rax	      8979	eval.c	FUNCTION_174	IF_2	CALL_1
0x4006b86	           0xf94c0	                                 sete al	      8979	eval.c	FUNCTION_174	IF_2	CALL_1
0x4006b89	           0xfb6c0	                           movzx eax, al	      8979	eval.c	FUNCTION_174	IF_2	CALL_1
0x4006b8c	            0x39c5	                            cmp ebp, eax	      8979	eval.c	FUNCTION_174	IF_2	CALL_1
0x4006b8e	            0x7408	                            je 0x4006b98	      8979	eval.c	FUNCTION_174	IF_2	CALL_1
0x4006b90	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      8980	eval.c	FUNCTION_174	IF_2
0x4006b94	            0x85c0	                           test eax, eax	      8980	eval.c	FUNCTION_174	IF_2
0x4006b96	            0x7456	                            je 0x4006bee	      8980	eval.c	FUNCTION_174	IF_2
0x4006b98	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      8982	eval.c	FUNCTION_174	IF_2	CALL_2
0x4006b9d	      0xe800000000	                          call 0x4006ba2	      8982	eval.c	FUNCTION_174	IF_2	CALL_2
0x4006ba2	            0x85ed	                           test ebp, ebp	      8983	eval.c	FUNCTION_174	IF_2	CALL_3
0x4006ba4	      0xba00000000	                              mov edx, 0	      8983	eval.c	FUNCTION_174	IF_2	CALL_3
0x4006ba9	      0xb800000000	                              mov eax, 0	      8983	eval.c	FUNCTION_174	IF_2	CALL_3
0x4006bae	        0x480f45d0	                         cmovne rdx, rax	      8983	eval.c	FUNCTION_174	IF_2	CALL_3
0x4006bb2	        0x488d7310	                   lea rsi, [rbx + 0x10]	      8983	eval.c	FUNCTION_174	IF_2	CALL_3
0x4006bb6	    0x41b904000000	                              mov r9d, 4	      8983	eval.c	FUNCTION_174	IF_2	CALL_3
0x4006bbc	          0x4989d8	                             mov r8, rbx	      8983	eval.c	FUNCTION_174	IF_2	CALL_3
0x4006bbf	      0xb900000000	                              mov ecx, 0	      8983	eval.c	FUNCTION_174	IF_2	CALL_3
0x4006bc4	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      8983	eval.c	FUNCTION_174	IF_2	CALL_3
0x4006bc9	      0xe800000000	                          call 0x4006bce	      8983	eval.c	FUNCTION_174	IF_2	CALL_3
0x4006bce	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      8986	eval.c	FUNCTION_174	IF_2	CALL_4
0x4006bd3	      0xe800000000	                          call 0x4006bd8	      8986	eval.c	FUNCTION_174	IF_2	CALL_4
0x4006bd8	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      8987	eval.c	FUNCTION_174	IF_2	CALL_5
0x4006bdd	      0xe800000000	                          call 0x4006be2	      8987	eval.c	FUNCTION_174	IF_2	CALL_5
0x4006be2	      0xb801000000	                              mov eax, 1	      8988	eval.c	FUNCTION_174	IF_2
0x4006be7	            0xeb05	                           jmp 0x4006bee	      8988	eval.c	FUNCTION_174	IF_2
0x4006be9	      0xb800000000	                              mov eax, 0	      8977	eval.c	FUNCTION_174	IF_1
0x4006bee	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      8991	eval.c	FUNCTION_174
0x4006bf3	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      8991	eval.c	FUNCTION_174
0x4006bfc	            0x7405	                            je 0x4006c03	      8991	eval.c	FUNCTION_174
0x4006bfe	      0xe800000000	                          call 0x4006c03	      8991	eval.c	FUNCTION_174
0x4006c03	        0x4883c438	                           add rsp, 0x38	      8991	eval.c	FUNCTION_174
0x4006c07	              0x5b	                                 pop rbx	      8991	eval.c	FUNCTION_174
0x4006c08	              0x5d	                                 pop rbp	      8991	eval.c	FUNCTION_174
0x4006c09	              0xc3	                                     ret	      8991	eval.c	FUNCTION_174
get_vim_var_dict	FOR,0:SWITCH,0:DO,0:IF,0:functions,0:WHILE,0:CALL,0:ELSE,0	6
0x4001feb	          0x4863ff	                         movsxd rdi, edi	      6425	eval.c	FUNCTION_106
0x4001fee	    0x488d04fd0000	                        lea rax, [rdi*8]	      6425	eval.c	FUNCTION_106
0x4001ff6	        0x48c1e706	                              shl rdi, 6	      6425	eval.c	FUNCTION_106
0x4001ffa	          0x4829c7	                            sub rdi, rax	      6425	eval.c	FUNCTION_106
0x4001ffd	    0x488b87000000	                    mov rax, qword [rdi]	      6425	eval.c	FUNCTION_106
0x4002004	              0xc3	                                     ret	      6426	eval.c	FUNCTION_106
string_quote	FOR,2:SWITCH,0:DO,0:IF,7:functions,0:WHILE,0:CALL,5:ELSE,1	120
0x4001784	            0x4154	                                push r12	      5769	eval.c	FUNCTION_90
0x4001786	              0x55	                                push rbp	      5769	eval.c	FUNCTION_90
0x4001787	              0x53	                                push rbx	      5769	eval.c	FUNCTION_90
0x4001788	        0x4883ec20	                           sub rsp, 0x20	      5769	eval.c	FUNCTION_90
0x400178c	          0x4889fd	                            mov rbp, rdi	      5769	eval.c	FUNCTION_90
0x400178f	          0x4189f4	                           mov r12d, esi	      5769	eval.c	FUNCTION_90
0x4001792	    0x64488b042528	                mov rax, qword fs:[0x28]	      5769	eval.c	FUNCTION_90
0x400179b	      0x4889442418	             mov qword [rsp + 0x18], rax	      5769	eval.c	FUNCTION_90
0x40017a0	            0x31c0	                            xor eax, eax	      5769	eval.c	FUNCTION_90
0x40017a2	          0x83fe01	                              cmp esi, 1	      5773	eval.c	FUNCTION_90
0x40017a5	            0x19db	                            sbb ebx, ebx	      5773	eval.c	FUNCTION_90
0x40017a7	          0x83e3f6	                     and ebx, 0xfffffff6	      5773	eval.c	FUNCTION_90
0x40017aa	          0x83c30d	                            add ebx, 0xd	      5773	eval.c	FUNCTION_90
0x40017ad	          0x4885ff	                           test rdi, rdi	      5774	eval.c	FUNCTION_90	IF_1
0x40017b0	            0x7454	                            je 0x4001806	      5774	eval.c	FUNCTION_90	IF_1
0x40017b2	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      5776	eval.c	FUNCTION_90	IF_1	CALL_1
0x40017b9	            0xf2ae	              repne scasb al, byte [rdi]	      5776	eval.c	FUNCTION_90	IF_1	CALL_1
0x40017bb	          0x48f7d1	                                 not rcx	      5776	eval.c	FUNCTION_90	IF_1	CALL_1
0x40017be	        0x8d5c0bff	                lea ebx, [rbx + rcx - 1]	      5776	eval.c	FUNCTION_90	IF_1	CALL_1
0x40017c2	      0x48896c2408	                mov qword [rsp + 8], rbp	      5777	eval.c	FUNCTION_90	IF_1	FOR_1	CALL_2
0x40017c7	         0xfb64500	                   movzx eax, byte [rbp]	      5777	eval.c	FUNCTION_90	IF_1	FOR_1	CALL_2
0x40017cb	            0x84c0	                             test al, al	      5777	eval.c	FUNCTION_90	IF_1	FOR_1	CALL_2
0x40017cd	            0x7437	                            je 0x4001806	      5777	eval.c	FUNCTION_90	IF_1	FOR_1	CALL_2
0x40017cf	          0x4889ef	                            mov rdi, rbp	      5777	eval.c	FUNCTION_90	IF_1	FOR_1	CALL_2
0x40017d2	            0x3c27	                            cmp al, 0x27	      5779	eval.c	FUNCTION_90	IF_1	FOR_1	IF_2
0x40017d4	           0xf94c0	                                 sete al	      5779	eval.c	FUNCTION_90	IF_1	FOR_1	IF_2
0x40017d7	           0xfb6c0	                           movzx eax, al	      5779	eval.c	FUNCTION_90	IF_1	FOR_1	IF_2
0x40017da	             0x1c3	                            add ebx, eax	      5779	eval.c	FUNCTION_90	IF_1	FOR_1	IF_2
0x40017dc	      0xb801000000	                              mov eax, 1	      5777	eval.c	FUNCTION_90	IF_1	FOR_1	CALL_2
0x40017e1	    0x833d00000000	               cmp dword [0x040017e8], 0	      5777	eval.c	FUNCTION_90	IF_1	FOR_1	CALL_2
0x40017e8	            0x7406	                            je 0x40017f0	      5777	eval.c	FUNCTION_90	IF_1	FOR_1	CALL_2
0x40017ea	    0xff1500000000	                 call qword [0x040017f0]	      5777	eval.c	FUNCTION_90	IF_1	FOR_1	CALL_2
0x40017f0	            0x4898	                                    cdqe	      5777	eval.c	FUNCTION_90	IF_1	FOR_1	CALL_2
0x40017f2	      0x4803442408	                add rax, qword [rsp + 8]	      5777	eval.c	FUNCTION_90	IF_1	FOR_1	CALL_2
0x40017f7	          0x4889c7	                            mov rdi, rax	      5777	eval.c	FUNCTION_90	IF_1	FOR_1	CALL_2
0x40017fa	      0x4889442408	                mov qword [rsp + 8], rax	      5777	eval.c	FUNCTION_90	IF_1	FOR_1	CALL_2
0x40017ff	           0xfb600	                   movzx eax, byte [rax]	      5777	eval.c	FUNCTION_90	IF_1	FOR_1	CALL_2
0x4001802	            0x84c0	                             test al, al	      5777	eval.c	FUNCTION_90	IF_1	FOR_1	CALL_2
0x4001804	            0x75cc	                           jne 0x40017d2	      5777	eval.c	FUNCTION_90	IF_1	FOR_1	CALL_2
0x4001806	            0x89df	                            mov edi, ebx	      5781	eval.c	FUNCTION_90	CALL_3
0x4001808	      0xe800000000	                          call 0x400180d	      5781	eval.c	FUNCTION_90	CALL_3
0x400180d	          0x4889c3	                            mov rbx, rax	      5781	eval.c	FUNCTION_90	CALL_3
0x4001810	      0x4889442410	             mov qword [rsp + 0x10], rax	      5781	eval.c	FUNCTION_90	CALL_3
0x4001815	          0x4885c0	                           test rax, rax	      5782	eval.c	FUNCTION_90	IF_3
0x4001818	     0xf84db000000	                            je 0x40018f9	      5782	eval.c	FUNCTION_90	IF_3
0x400181e	          0x4585e4	                         test r12d, r12d	      5784	eval.c	FUNCTION_90	IF_3	IF_4
0x4001821	            0x742f	                            je 0x4001852	      5784	eval.c	FUNCTION_90	IF_3	IF_4
0x4001823	    0x48b866756e63	          movabs rax, 0x6e6f6974636e7566	       110	string3.h	FUNCTION_197	CALL_3
0x400182d	          0x488903	                    mov qword [rbx], rax	       110	string3.h	FUNCTION_197	CALL_3
0x4001830	    0x66c743082827	              mov word [rbx + 8], 0x2728	       110	string3.h	FUNCTION_197	CALL_3
0x4001836	        0xc6430a00	                 mov byte [rbx + 0xa], 0	       110	string3.h	FUNCTION_197	CALL_3
0x400183a	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5787	eval.c	FUNCTION_90	IF_3	IF_4
0x400183f	        0x488d500a	                    lea rdx, [rax + 0xa]	      5787	eval.c	FUNCTION_90	IF_3	IF_4
0x4001843	      0x4889542410	             mov qword [rsp + 0x10], rdx	      5787	eval.c	FUNCTION_90	IF_3	IF_4
0x4001848	          0x4885ed	                           test rbp, rbp	      5791	eval.c	FUNCTION_90	IF_3	IF_5
0x400184b	            0x751a	                           jne 0x4001867	      5791	eval.c	FUNCTION_90	IF_3	IF_5
0x400184d	      0xe9bc000000	                           jmp 0x400190e	      5791	eval.c	FUNCTION_90	IF_3	IF_5
0x4001852	        0x488d4001	                      lea rax, [rax + 1]	      5790	eval.c	FUNCTION_90	IF_3	ELSE_1
0x4001856	      0x4889442410	             mov qword [rsp + 0x10], rax	      5790	eval.c	FUNCTION_90	IF_3	ELSE_1
0x400185b	          0xc60327	                    mov byte [rbx], 0x27	      5790	eval.c	FUNCTION_90	IF_3	ELSE_1
0x400185e	          0x4885ed	                           test rbp, rbp	      5791	eval.c	FUNCTION_90	IF_3	IF_5
0x4001861	     0xf84b6000000	                            je 0x400191d	      5791	eval.c	FUNCTION_90	IF_3	IF_5
0x4001867	      0x48896c2408	                mov qword [rsp + 8], rbp	      5792	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2
0x400186c	            0xeb50	                           jmp 0x40018be	      5792	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2
0x400186e	            0x3c27	                            cmp al, 0x27	      5794	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	IF_6
0x4001870	            0x7511	                           jne 0x4001883	      5794	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	IF_6
0x4001872	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5795	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	IF_6
0x4001877	        0x488d5001	                      lea rdx, [rax + 1]	      5795	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	IF_6
0x400187b	      0x4889542410	             mov qword [rsp + 0x10], rdx	      5795	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	IF_6
0x4001880	          0xc60027	                    mov byte [rax], 0x27	      5795	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	IF_6
0x4001883	    0x833d00000000	               cmp dword [0x0400188a], 0	      5796	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	CALL_5
0x400188a	            0x7411	                            je 0x400189d	      5796	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	CALL_5
0x400188c	      0x488d742410	                   lea rsi, [rsp + 0x10]	      5796	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	CALL_5
0x4001891	      0x488d7c2408	                      lea rdi, [rsp + 8]	      5796	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	CALL_5
0x4001896	      0xe800000000	                          call 0x400189b	      5796	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	CALL_5
0x400189b	            0xeb21	                           jmp 0x40018be	      5796	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	CALL_5
0x400189d	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5796	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	CALL_5
0x40018a2	        0x488d5001	                      lea rdx, [rax + 1]	      5796	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	CALL_5
0x40018a6	      0x4889542410	             mov qword [rsp + 0x10], rdx	      5796	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	CALL_5
0x40018ab	      0x488b542408	                mov rdx, qword [rsp + 8]	      5796	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	CALL_5
0x40018b0	        0x488d4a01	                      lea rcx, [rdx + 1]	      5796	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	CALL_5
0x40018b4	      0x48894c2408	                mov qword [rsp + 8], rcx	      5796	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	CALL_5
0x40018b9	           0xfb612	                   movzx edx, byte [rdx]	      5796	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	CALL_5
0x40018bc	            0x8810	                      mov byte [rax], dl	      5796	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	CALL_5
0x40018be	      0x488b442408	                mov rax, qword [rsp + 8]	      5792	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2
0x40018c3	           0xfb600	                   movzx eax, byte [rax]	      5792	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2
0x40018c6	            0x84c0	                             test al, al	      5792	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2
0x40018c8	            0x75a4	                           jne 0x400186e	      5792	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2
0x40018ca	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5798	eval.c	FUNCTION_90	IF_3
0x40018cf	        0x488d5001	                      lea rdx, [rax + 1]	      5798	eval.c	FUNCTION_90	IF_3
0x40018d3	      0x4889542410	             mov qword [rsp + 0x10], rdx	      5798	eval.c	FUNCTION_90	IF_3
0x40018d8	          0xc60027	                    mov byte [rax], 0x27	      5798	eval.c	FUNCTION_90	IF_3
0x40018db	          0x4585e4	                         test r12d, r12d	      5799	eval.c	FUNCTION_90	IF_3	IF_7
0x40018de	            0x7411	                            je 0x40018f1	      5799	eval.c	FUNCTION_90	IF_3	IF_7
0x40018e0	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5800	eval.c	FUNCTION_90	IF_3	IF_7
0x40018e5	        0x488d5001	                      lea rdx, [rax + 1]	      5800	eval.c	FUNCTION_90	IF_3	IF_7
0x40018e9	      0x4889542410	             mov qword [rsp + 0x10], rdx	      5800	eval.c	FUNCTION_90	IF_3	IF_7
0x40018ee	          0xc60029	                    mov byte [rax], 0x29	      5800	eval.c	FUNCTION_90	IF_3	IF_7
0x40018f1	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5801	eval.c	FUNCTION_90	IF_3
0x40018f6	          0xc60000	                       mov byte [rax], 0	      5801	eval.c	FUNCTION_90	IF_3
0x40018f9	          0x4889d8	                            mov rax, rbx	      5804	eval.c	FUNCTION_90
0x40018fc	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      5804	eval.c	FUNCTION_90
0x4001901	    0x644833342528	                xor rsi, qword fs:[0x28]	      5804	eval.c	FUNCTION_90
0x400190a	            0x7429	                            je 0x4001935	      5804	eval.c	FUNCTION_90
0x400190c	            0xeb22	                           jmp 0x4001930	      5804	eval.c	FUNCTION_90
0x400190e	        0x488d500b	                    lea rdx, [rax + 0xb]	      5798	eval.c	FUNCTION_90	IF_3
0x4001912	      0x4889542410	             mov qword [rsp + 0x10], rdx	      5798	eval.c	FUNCTION_90	IF_3
0x4001917	        0xc6400a27	              mov byte [rax + 0xa], 0x27	      5798	eval.c	FUNCTION_90	IF_3
0x400191b	            0xebc3	                           jmp 0x40018e0	      5798	eval.c	FUNCTION_90	IF_3
0x400191d	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5798	eval.c	FUNCTION_90	IF_3
0x4001922	        0x488d5001	                      lea rdx, [rax + 1]	      5798	eval.c	FUNCTION_90	IF_3
0x4001926	      0x4889542410	             mov qword [rsp + 0x10], rdx	      5798	eval.c	FUNCTION_90	IF_3
0x400192b	          0xc60027	                    mov byte [rax], 0x27	      5798	eval.c	FUNCTION_90	IF_3
0x400192e	            0xebc1	                           jmp 0x40018f1	      5798	eval.c	FUNCTION_90	IF_3
0x4001930	      0xe800000000	                          call 0x4001935	      5804	eval.c	FUNCTION_90
0x4001935	        0x4883c420	                           add rsp, 0x20	      5804	eval.c	FUNCTION_90
0x4001939	              0x5b	                                 pop rbx	      5804	eval.c	FUNCTION_90
0x400193a	              0x5d	                                 pop rbp	      5804	eval.c	FUNCTION_90
0x400193b	            0x415c	                                 pop r12	      5804	eval.c	FUNCTION_90
0x400193d	              0xc3	                                     ret	      5804	eval.c	FUNCTION_90
cat_prefix_varname	FOR,0:SWITCH,0:DO,0:IF,2:functions,0:WHILE,0:CALL,4:ELSE,0	41
0x4000346	            0x4155	                                push r13	      3107	eval.c	FUNCTION_60
0x4000348	            0x4154	                                push r12	      3107	eval.c	FUNCTION_60
0x400034a	              0x55	                                push rbp	      3107	eval.c	FUNCTION_60
0x400034b	              0x53	                                push rbx	      3107	eval.c	FUNCTION_60
0x400034c	        0x4883ec08	                              sub rsp, 8	      3107	eval.c	FUNCTION_60
0x4000350	          0x4189fc	                           mov r12d, edi	      3107	eval.c	FUNCTION_60
0x4000353	          0x4889f5	                            mov rbp, rsi	      3107	eval.c	FUNCTION_60
0x4000356	      0xb800000000	                              mov eax, 0	      3110	eval.c	FUNCTION_60	CALL_1
0x400035b	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      3110	eval.c	FUNCTION_60	CALL_1
0x4000362	          0x4889f7	                            mov rdi, rsi	      3110	eval.c	FUNCTION_60	CALL_1
0x4000365	            0xf2ae	              repne scasb al, byte [rdi]	      3110	eval.c	FUNCTION_60	CALL_1
0x4000367	          0x48f7d1	                                 not rcx	      3110	eval.c	FUNCTION_60	CALL_1
0x400036a	        0x488d59ff	                      lea rbx, [rcx - 1]	      3110	eval.c	FUNCTION_60	CALL_1
0x400036e	          0x8d4303	                      lea eax, [rbx + 3]	      3111	eval.c	FUNCTION_60	IF_1
0x4000371	    0x3b0500000000	            cmp eax, dword [0x04000377] 	      3111	eval.c	FUNCTION_60	IF_1
0x4000377	            0x7e37	                           jle 0x40003b0	      3111	eval.c	FUNCTION_60	IF_1
0x4000379	    0x488b3d000000	            mov rdi, qword [0x04000380] 	      3113	eval.c	FUNCTION_60	IF_1	CALL_2
0x4000380	      0xe800000000	                          call 0x4000385	      3113	eval.c	FUNCTION_60	IF_1	CALL_2
0x4000385	          0x83c30d	                            add ebx, 0xd	      3114	eval.c	FUNCTION_60	IF_1
0x4000388	            0x89df	                            mov edi, ebx	      3115	eval.c	FUNCTION_60	IF_1	CALL_3
0x400038a	      0xe800000000	                          call 0x400038f	      3115	eval.c	FUNCTION_60	IF_1	CALL_3
0x400038f	          0x4989c5	                            mov r13, rax	      3115	eval.c	FUNCTION_60	IF_1	CALL_3
0x4000392	    0x488905000000	            mov qword [0x04000399], rax 	      3115	eval.c	FUNCTION_60	IF_1	CALL_3
0x4000399	          0x4885c0	                           test rax, rax	      3116	eval.c	FUNCTION_60	IF_1	IF_2
0x400039c	            0x750c	                           jne 0x40003aa	      3116	eval.c	FUNCTION_60	IF_1	IF_2
0x400039e	    0xc70500000000	               mov dword [0x040003a8], 0	      3118	eval.c	FUNCTION_60	IF_1	IF_2
0x40003a8	            0xeb22	                           jmp 0x40003cc	      3119	eval.c	FUNCTION_60	IF_1	IF_2
0x40003aa	    0x891d00000000	            mov dword [0x040003b0], ebx 	      3121	eval.c	FUNCTION_60	IF_1
0x40003b0	    0x4c8b2d000000	            mov r13, qword [0x040003b7] 	      3123	eval.c	FUNCTION_60
0x40003b7	        0x45886500	                    mov byte [r13], r12b	      3123	eval.c	FUNCTION_60
0x40003bb	      0x41c645013a	                mov byte [r13 + 1], 0x3a	      3124	eval.c	FUNCTION_60
0x40003c0	        0x498d7d02	                      lea rdi, [r13 + 2]	       110	string3.h	FUNCTION_197	CALL_3
0x40003c4	          0x4889ee	                            mov rsi, rbp	       110	string3.h	FUNCTION_197	CALL_3
0x40003c7	      0xe800000000	                          call 0x40003cc	       110	string3.h	FUNCTION_197	CALL_3
0x40003cc	          0x4c89e8	                            mov rax, r13	      3127	eval.c	FUNCTION_60
0x40003cf	        0x4883c408	                              add rsp, 8	      3127	eval.c	FUNCTION_60
0x40003d3	              0x5b	                                 pop rbx	      3127	eval.c	FUNCTION_60
0x40003d4	              0x5d	                                 pop rbp	      3127	eval.c	FUNCTION_60
0x40003d5	            0x415c	                                 pop r12	      3127	eval.c	FUNCTION_60
0x40003d7	            0x415d	                                 pop r13	      3127	eval.c	FUNCTION_60
0x40003d9	              0xc3	                                     ret	      3127	eval.c	FUNCTION_60
set_cmdarg	FOR,0:SWITCH,0:DO,0:IF,16:functions,0:WHILE,0:CALL,16:ELSE,6	154
0x400205a	            0x4154	                                push r12	      6569	eval.c	FUNCTION_115
0x400205c	              0x55	                                push rbp	      6569	eval.c	FUNCTION_115
0x400205d	              0x53	                                push rbx	      6569	eval.c	FUNCTION_115
0x400205e	    0x4c8b25000000	            mov r12, qword [0x04002065] 	      6574	eval.c	FUNCTION_115
0x4002065	          0x4885ff	                           test rdi, rdi	      6575	eval.c	FUNCTION_115	IF_1
0x4002068	            0x751c	                           jne 0x4002086	      6575	eval.c	FUNCTION_115	IF_1
0x400206a	          0x4889f5	                            mov rbp, rsi	      6575	eval.c	FUNCTION_115	IF_1
0x400206d	          0x4c89e7	                            mov rdi, r12	      6577	eval.c	FUNCTION_115	IF_1	CALL_1
0x4002070	      0xe800000000	                          call 0x4002075	      6577	eval.c	FUNCTION_115	IF_1	CALL_1
0x4002075	    0x48892d000000	            mov qword [0x0400207c], rbp 	      6578	eval.c	FUNCTION_115	IF_1
0x400207c	      0xb800000000	                              mov eax, 0	      6579	eval.c	FUNCTION_115	IF_1
0x4002081	      0xe935020000	                           jmp 0x40022bb	      6579	eval.c	FUNCTION_115	IF_1
0x4002086	          0x4889fb	                            mov rbx, rdi	      6579	eval.c	FUNCTION_115	IF_1
0x4002089	          0x8b4778	            mov eax, dword [rdi + 0x78] 	      6582	eval.c	FUNCTION_115	IF_2
0x400208c	      0xba06000000	                              mov edx, 6	      6583	eval.c	FUNCTION_115	IF_2
0x4002091	          0x83f801	                              cmp eax, 1	      6582	eval.c	FUNCTION_115	IF_2
0x4002094	            0x740c	                            je 0x40020a2	      6582	eval.c	FUNCTION_115	IF_2
0x4002096	          0x83f802	                              cmp eax, 2	      6587	eval.c	FUNCTION_115	ELSE_2
0x4002099	           0xf94c2	                                 sete dl	      6587	eval.c	FUNCTION_115	ELSE_2
0x400209c	           0xfb6d2	                           movzx edx, dl	      6587	eval.c	FUNCTION_115	ELSE_2
0x400209f	          0xc1e203	                              shl edx, 3	      6587	eval.c	FUNCTION_115	ELSE_2
0x40020a2	          0x8d4207	                      lea eax, [rdx + 7]	      6590	eval.c	FUNCTION_115	IF_4
0x40020a5	        0x837b7c00	               cmp dword [rbx + 0x7c], 0	      6590	eval.c	FUNCTION_115	IF_4
0x40020a9	           0xf45d0	                         cmovne edx, eax	      6590	eval.c	FUNCTION_115	IF_4
0x40020ac	          0x8d420a	                    lea eax, [rdx + 0xa]	      6593	eval.c	FUNCTION_115	IF_5
0x40020af	    0x83bb80000000	               cmp dword [rbx + 0x80], 0	      6593	eval.c	FUNCTION_115	IF_5
0x40020b6	           0xf45d0	                         cmovne edx, eax	      6593	eval.c	FUNCTION_115	IF_5
0x40020b9	    0x8bbb84000000	            mov edi, dword [rbx + 0x84] 	      6595	eval.c	FUNCTION_115	IF_6
0x40020bf	            0x85ff	                           test edi, edi	      6595	eval.c	FUNCTION_115	IF_6
0x40020c1	            0x741c	                            je 0x40020df	      6595	eval.c	FUNCTION_115	IF_6
0x40020c3	          0x4863ff	                         movsxd rdi, edi	      6596	eval.c	FUNCTION_115	CALL_2
0x40020c6	        0x48037b10	             add rdi, qword [rbx + 0x10]	      6596	eval.c	FUNCTION_115	CALL_2
0x40020ca	      0xb800000000	                              mov eax, 0	      6596	eval.c	FUNCTION_115	CALL_2
0x40020cf	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      6596	eval.c	FUNCTION_115	CALL_2
0x40020d6	            0xf2ae	              repne scasb al, byte [rdi]	      6596	eval.c	FUNCTION_115	CALL_2
0x40020d8	          0x48f7d1	                                 not rcx	      6596	eval.c	FUNCTION_115	CALL_2
0x40020db	        0x8d540a06	                lea edx, [rdx + rcx + 6]	      6596	eval.c	FUNCTION_115	CALL_2
0x40020df	          0x8d420b	                    lea eax, [rdx + 0xb]	      6598	eval.c	FUNCTION_115	IF_7
0x40020e2	    0x83bb88000000	               cmp dword [rbx + 0x88], 0	      6598	eval.c	FUNCTION_115	IF_7
0x40020e9	           0xf45d0	                         cmovne edx, eax	      6598	eval.c	FUNCTION_115	IF_7
0x40020ec	          0x8d7a01	                      lea edi, [rdx + 1]	      6601	eval.c	FUNCTION_115	CALL_3
0x40020ef	      0xe800000000	                          call 0x40020f4	      6601	eval.c	FUNCTION_115	CALL_3
0x40020f4	          0x4889c5	                            mov rbp, rax	      6601	eval.c	FUNCTION_115	CALL_3
0x40020f7	          0x4885c0	                           test rax, rax	      6602	eval.c	FUNCTION_115	IF_8
0x40020fa	     0xf84b6010000	                            je 0x40022b6	      6602	eval.c	FUNCTION_115	IF_8
0x4002100	          0x8b4378	            mov eax, dword [rbx + 0x78] 	      6605	eval.c	FUNCTION_115	IF_9
0x4002103	          0x83f801	                              cmp eax, 1	      6605	eval.c	FUNCTION_115	IF_9
0x4002106	            0x7513	                           jne 0x400211b	      6605	eval.c	FUNCTION_115	IF_9
0x4002108	    0xc74500202b2b	             mov dword [rbp], 0x622b2b20	        33	stdio2.h	FUNCTION_203	CALL_2
0x400210f	    0x66c74504696e	              mov word [rbp + 4], 0x6e69	        33	stdio2.h	FUNCTION_203	CALL_2
0x4002115	        0xc6450600	                   mov byte [rbp + 6], 0	        33	stdio2.h	FUNCTION_203	CALL_2
0x4002119	            0xeb1d	                           jmp 0x4002138	        33	stdio2.h	FUNCTION_203	CALL_2
0x400211b	          0x83f802	                              cmp eax, 2	      6607	eval.c	FUNCTION_115	ELSE_3	IF_10
0x400211e	            0x7514	                           jne 0x4002134	      6607	eval.c	FUNCTION_115	ELSE_3	IF_10
0x4002120	    0x48b8202b2b6e	          movabs rax, 0x6e69626f6e2b2b20	        33	stdio2.h	FUNCTION_203	CALL_2
0x400212a	        0x48894500	                    mov qword [rbp], rax	        33	stdio2.h	FUNCTION_203	CALL_2
0x400212e	        0xc6450800	                   mov byte [rbp + 8], 0	        33	stdio2.h	FUNCTION_203	CALL_2
0x4002132	            0xeb04	                           jmp 0x4002138	        33	stdio2.h	FUNCTION_203	CALL_2
0x4002134	        0xc6450000	                       mov byte [rbp], 0	      6610	eval.c	FUNCTION_115	ELSE_4
0x4002138	        0x837b7c00	               cmp dword [rbx + 0x7c], 0	      6612	eval.c	FUNCTION_115	IF_11
0x400213c	            0x7423	                            je 0x4002161	      6612	eval.c	FUNCTION_115	IF_11
0x400213e	      0xb800000000	                              mov eax, 0	       148	string3.h	FUNCTION_201	CALL_3
0x4002143	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       148	string3.h	FUNCTION_201	CALL_3
0x400214a	          0x4889ef	                            mov rdi, rbp	       148	string3.h	FUNCTION_201	CALL_3
0x400214d	            0xf2ae	              repne scasb al, byte [rdi]	       148	string3.h	FUNCTION_201	CALL_3
0x400214f	          0x48f7d1	                                 not rcx	       148	string3.h	FUNCTION_201	CALL_3
0x4002152	    0x48b8202b2b65	            movabs rax, 0x746964652b2b20	       148	string3.h	FUNCTION_201	CALL_3
0x400215c	      0x4889440dff	          mov qword [rbp + rcx - 1], rax	       148	string3.h	FUNCTION_201	CALL_3
0x4002161	    0x8b8380000000	            mov eax, dword [rbx + 0x80] 	      6615	eval.c	FUNCTION_115	IF_12
0x4002167	            0x85c0	                           test eax, eax	      6615	eval.c	FUNCTION_115	IF_12
0x4002169	            0x7450	                            je 0x40021bb	      6615	eval.c	FUNCTION_115	IF_12
0x400216b	    0x41b800000000	                              mov r8d, 0	      6616	eval.c	FUNCTION_115	IF_12	CALL_8
0x4002171	          0x83f875	                           cmp eax, 0x75	      6616	eval.c	FUNCTION_115	IF_12	CALL_8
0x4002174	            0x7412	                            je 0x4002188	      6616	eval.c	FUNCTION_115	IF_12	CALL_8
0x4002176	          0x83f864	                           cmp eax, 0x64	      6619	eval.c	FUNCTION_115	IF_12
0x4002179	    0x41b800000000	                              mov r8d, 0	      6619	eval.c	FUNCTION_115	IF_12
0x400217f	      0xb800000000	                              mov eax, 0	      6619	eval.c	FUNCTION_115	IF_12
0x4002184	        0x4c0f44c0	                           cmove r8, rax	      6619	eval.c	FUNCTION_115	IF_12
0x4002188	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	      6616	eval.c	FUNCTION_115	IF_12	CALL_8
0x400218f	      0xb800000000	                              mov eax, 0	      6616	eval.c	FUNCTION_115	IF_12	CALL_8
0x4002194	          0x4889d1	                            mov rcx, rdx	      6616	eval.c	FUNCTION_115	IF_12	CALL_8
0x4002197	          0x4889ef	                            mov rdi, rbp	      6616	eval.c	FUNCTION_115	IF_12	CALL_8
0x400219a	            0xf2ae	              repne scasb al, byte [rdi]	      6616	eval.c	FUNCTION_115	IF_12	CALL_8
0x400219c	          0x4889c8	                            mov rax, rcx	      6616	eval.c	FUNCTION_115	IF_12	CALL_8
0x400219f	          0x48f7d0	                                 not rax	      6616	eval.c	FUNCTION_115	IF_12	CALL_8
0x40021a2	      0x488d7c05ff	                lea rdi, [rbp + rax - 1]	        33	stdio2.h	FUNCTION_203	CALL_2
0x40021a7	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_203	CALL_2
0x40021ac	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_203	CALL_2
0x40021b1	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_203	CALL_2
0x40021b6	      0xe800000000	                          call 0x40021bb	        33	stdio2.h	FUNCTION_203	CALL_2
0x40021bb	    0x448b83840000	            mov r8d, dword [rbx + 0x84] 	      6621	eval.c	FUNCTION_115	IF_13
0x40021c2	          0x4585c0	                           test r8d, r8d	      6621	eval.c	FUNCTION_115	IF_13
0x40021c5	            0x743a	                            je 0x4002201	      6621	eval.c	FUNCTION_115	IF_13
0x40021c7	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	      6622	eval.c	FUNCTION_115	IF_13	CALL_10
0x40021ce	      0xb800000000	                              mov eax, 0	      6622	eval.c	FUNCTION_115	IF_13	CALL_10
0x40021d3	          0x4889d1	                            mov rcx, rdx	      6622	eval.c	FUNCTION_115	IF_13	CALL_10
0x40021d6	          0x4889ef	                            mov rdi, rbp	      6622	eval.c	FUNCTION_115	IF_13	CALL_10
0x40021d9	            0xf2ae	              repne scasb al, byte [rdi]	      6622	eval.c	FUNCTION_115	IF_13	CALL_10
0x40021db	          0x4889c8	                            mov rax, rcx	      6622	eval.c	FUNCTION_115	IF_13	CALL_10
0x40021de	          0x48f7d0	                                 not rax	      6622	eval.c	FUNCTION_115	IF_13	CALL_10
0x40021e1	          0x4d63c0	                          movsxd r8, r8d	        33	stdio2.h	FUNCTION_203	CALL_2
0x40021e4	      0x488d7c05ff	                lea rdi, [rbp + rax - 1]	        33	stdio2.h	FUNCTION_203	CALL_2
0x40021e9	        0x4c034310	              add r8, qword [rbx + 0x10]	        33	stdio2.h	FUNCTION_203	CALL_2
0x40021ed	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_203	CALL_2
0x40021f2	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_203	CALL_2
0x40021f7	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_203	CALL_2
0x40021fc	      0xe800000000	                          call 0x4002201	        33	stdio2.h	FUNCTION_203	CALL_2
0x4002201	    0x448b83880000	            mov r8d, dword [rbx + 0x88] 	      6624	eval.c	FUNCTION_115	IF_14
0x4002208	        0x4183f8ff	             cmp r8d, 0xffffffffffffffff	      6624	eval.c	FUNCTION_115	IF_14
0x400220c	            0x752f	                           jne 0x400223d	      6624	eval.c	FUNCTION_115	IF_14
0x400220e	      0xb800000000	                              mov eax, 0	      6625	eval.c	FUNCTION_115	CALL_12
0x4002213	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      6625	eval.c	FUNCTION_115	CALL_12
0x400221a	          0x4889ef	                            mov rdi, rbp	      6625	eval.c	FUNCTION_115	CALL_12
0x400221d	            0xf2ae	              repne scasb al, byte [rdi]	      6625	eval.c	FUNCTION_115	CALL_12
0x400221f	          0x48f7d1	                                 not rcx	      6625	eval.c	FUNCTION_115	CALL_12
0x4002222	      0x488d440dff	                lea rax, [rbp + rcx - 1]	       110	string3.h	FUNCTION_197	CALL_3
0x4002227	    0x48be202b2b62	          movabs rsi, 0x6b3d6461622b2b20	       110	string3.h	FUNCTION_197	CALL_3
0x4002231	          0x488930	                    mov qword [rax], rsi	       110	string3.h	FUNCTION_197	CALL_3
0x4002234	    0xc74008656570	          mov dword [rax + 8], 0x706565 	       110	string3.h	FUNCTION_197	CALL_3
0x400223b	            0xeb6d	                           jmp 0x40022aa	       110	string3.h	FUNCTION_197	CALL_3
0x400223d	        0x4183f8fe	             cmp r8d, 0xfffffffffffffffe	      6626	eval.c	FUNCTION_115	ELSE_5	IF_15
0x4002241	            0x752f	                           jne 0x4002272	      6626	eval.c	FUNCTION_115	ELSE_5	IF_15
0x4002243	      0xb800000000	                              mov eax, 0	      6627	eval.c	FUNCTION_115	ELSE_5	IF_15
0x4002248	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      6627	eval.c	FUNCTION_115	ELSE_5	IF_15
0x400224f	          0x4889ef	                            mov rdi, rbp	      6627	eval.c	FUNCTION_115	ELSE_5	IF_15
0x4002252	            0xf2ae	              repne scasb al, byte [rdi]	      6627	eval.c	FUNCTION_115	ELSE_5	IF_15
0x4002254	          0x48f7d1	                                 not rcx	      6627	eval.c	FUNCTION_115	ELSE_5	IF_15
0x4002257	      0x488d440dff	                lea rax, [rbp + rcx - 1]	       110	string3.h	FUNCTION_197	CALL_3
0x400225c	    0x48be202b2b62	          movabs rsi, 0x643d6461622b2b20	       110	string3.h	FUNCTION_197	CALL_3
0x4002266	          0x488930	                    mov qword [rax], rsi	       110	string3.h	FUNCTION_197	CALL_3
0x4002269	    0xc74008726f70	          mov dword [rax + 8], 0x706f72 	       110	string3.h	FUNCTION_197	CALL_3
0x4002270	            0xeb38	                           jmp 0x40022aa	       110	string3.h	FUNCTION_197	CALL_3
0x4002272	          0x4585c0	                           test r8d, r8d	      6628	eval.c	FUNCTION_115	ELSE_6	IF_16
0x4002275	            0x7433	                            je 0x40022aa	      6628	eval.c	FUNCTION_115	ELSE_6	IF_16
0x4002277	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	      6629	eval.c	FUNCTION_115	ELSE_6	IF_16
0x400227e	      0xb800000000	                              mov eax, 0	      6629	eval.c	FUNCTION_115	ELSE_6	IF_16
0x4002283	          0x4889d1	                            mov rcx, rdx	      6629	eval.c	FUNCTION_115	ELSE_6	IF_16
0x4002286	          0x4889ef	                            mov rdi, rbp	      6629	eval.c	FUNCTION_115	ELSE_6	IF_16
0x4002289	            0xf2ae	              repne scasb al, byte [rdi]	      6629	eval.c	FUNCTION_115	ELSE_6	IF_16
0x400228b	          0x4889c8	                            mov rax, rcx	      6629	eval.c	FUNCTION_115	ELSE_6	IF_16
0x400228e	          0x48f7d0	                                 not rax	      6629	eval.c	FUNCTION_115	ELSE_6	IF_16
0x4002291	      0x488d7c05ff	                lea rdi, [rbp + rax - 1]	        33	stdio2.h	FUNCTION_203	CALL_2
0x4002296	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_203	CALL_2
0x400229b	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_203	CALL_2
0x40022a0	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_203	CALL_2
0x40022a5	      0xe800000000	                          call 0x40022aa	        33	stdio2.h	FUNCTION_203	CALL_2
0x40022aa	    0x48892d000000	            mov qword [0x040022b1], rbp 	      6631	eval.c	FUNCTION_115
0x40022b1	          0x4c89e0	                            mov rax, r12	      6632	eval.c	FUNCTION_115
0x40022b4	            0xeb05	                           jmp 0x40022bb	      6632	eval.c	FUNCTION_115
0x40022b6	      0xb800000000	                              mov eax, 0	      6603	eval.c	FUNCTION_115	IF_8
0x40022bb	              0x5b	                                 pop rbx	      6633	eval.c	FUNCTION_115
0x40022bc	              0x5d	                                 pop rbp	      6633	eval.c	FUNCTION_115
0x40022bd	            0x415c	                                 pop r12	      6633	eval.c	FUNCTION_115
0x40022bf	              0xc3	                                     ret	      6633	eval.c	FUNCTION_115
assert_match_common	FOR,0:SWITCH,0:DO,0:IF,2:functions,0:WHILE,0:CALL,9:ELSE,1	64
0x4006a47	            0x4155	                                push r13	      8909	eval.c	FUNCTION_172
0x4006a49	            0x4154	                                push r12	      8909	eval.c	FUNCTION_172
0x4006a4b	              0x55	                                push rbp	      8909	eval.c	FUNCTION_172
0x4006a4c	              0x53	                                push rbx	      8909	eval.c	FUNCTION_172
0x4006a4d	    0x4881ecc80000	                           sub rsp, 0xc8	      8909	eval.c	FUNCTION_172
0x4006a54	          0x4889fb	                            mov rbx, rdi	      8909	eval.c	FUNCTION_172
0x4006a57	          0x4189f5	                           mov r13d, esi	      8909	eval.c	FUNCTION_172
0x4006a5a	    0x64488b042528	                mov rax, qword fs:[0x28]	      8909	eval.c	FUNCTION_172
0x4006a63	    0x48898424b800	             mov qword [rsp + 0xb8], rax	      8909	eval.c	FUNCTION_172
0x4006a6b	            0x31c0	                            xor eax, eax	      8909	eval.c	FUNCTION_172
0x4006a6d	      0x488d742420	                   lea rsi, [rsp + 0x20]	      8913	eval.c	FUNCTION_172	CALL_1
0x4006a72	      0xe800000000	                          call 0x4006a77	      8913	eval.c	FUNCTION_172	CALL_1
0x4006a77	          0x4889c5	                            mov rbp, rax	      8913	eval.c	FUNCTION_172	CALL_1
0x4006a7a	        0x4c8d6310	                   lea r12, [rbx + 0x10]	      8914	eval.c	FUNCTION_172	CALL_2
0x4006a7e	      0x488d742470	                   lea rsi, [rsp + 0x70]	      8914	eval.c	FUNCTION_172	CALL_2
0x4006a83	          0x4c89e7	                            mov rdi, r12	      8914	eval.c	FUNCTION_172	CALL_2
0x4006a86	      0xe800000000	                          call 0x4006a8b	      8914	eval.c	FUNCTION_172	CALL_2
0x4006a8b	          0x4885ed	                           test rbp, rbp	      8916	eval.c	FUNCTION_172	IF_1
0x4006a8e	            0x7405	                            je 0x4006a95	      8916	eval.c	FUNCTION_172	IF_1
0x4006a90	          0x4885c0	                           test rax, rax	      8916	eval.c	FUNCTION_172	IF_1
0x4006a93	            0x7523	                           jne 0x4006ab8	      8916	eval.c	FUNCTION_172	IF_1
0x4006a95	      0xba05000000	                              mov edx, 5	      8917	eval.c	FUNCTION_172	CALL_4
0x4006a9a	      0xbe00000000	                              mov esi, 0	      8917	eval.c	FUNCTION_172	CALL_4
0x4006a9f	      0xbf00000000	                              mov edi, 0	      8917	eval.c	FUNCTION_172	CALL_4
0x4006aa4	      0xe800000000	                          call 0x4006aa9	      8917	eval.c	FUNCTION_172	CALL_4
0x4006aa9	          0x4889c7	                            mov rdi, rax	      8917	eval.c	FUNCTION_172	CALL_4
0x4006aac	      0xe800000000	                          call 0x4006ab1	      8917	eval.c	FUNCTION_172	CALL_4
0x4006ab1	      0xba00000000	                              mov edx, 0	      8927	eval.c	FUNCTION_172
0x4006ab6	            0xeb5a	                           jmp 0x4006b12	      8927	eval.c	FUNCTION_172
0x4006ab8	      0xba00000000	                              mov edx, 0	      8918	eval.c	FUNCTION_172	ELSE_1	IF_2	CALL_5
0x4006abd	          0x4889c6	                            mov rsi, rax	      8918	eval.c	FUNCTION_172	ELSE_1	IF_2	CALL_5
0x4006ac0	          0x4889ef	                            mov rdi, rbp	      8918	eval.c	FUNCTION_172	ELSE_1	IF_2	CALL_5
0x4006ac3	      0xe8749bffff	                  call sym.pattern_match	      8918	eval.c	FUNCTION_172	ELSE_1	IF_2	CALL_5
0x4006ac8	        0x4183fd02	                             cmp r13d, 2	      8918	eval.c	FUNCTION_172	ELSE_1	IF_2	CALL_5
0x4006acc	           0xf94c1	                                 sete cl	      8918	eval.c	FUNCTION_172	ELSE_1	IF_2	CALL_5
0x4006acf	           0xfb6c9	                           movzx ecx, cl	      8918	eval.c	FUNCTION_172	ELSE_1	IF_2	CALL_5
0x4006ad2	      0xba00000000	                              mov edx, 0	      8927	eval.c	FUNCTION_172
0x4006ad7	            0x39c8	                            cmp eax, ecx	      8918	eval.c	FUNCTION_172	ELSE_1	IF_2	CALL_5
0x4006ad9	            0x7437	                            je 0x4006b12	      8918	eval.c	FUNCTION_172	ELSE_1	IF_2	CALL_5
0x4006adb	          0x4889e7	                            mov rdi, rsp	      8920	eval.c	FUNCTION_172	ELSE_1	IF_2	CALL_6
0x4006ade	      0xe800000000	                          call 0x4006ae3	      8920	eval.c	FUNCTION_172	ELSE_1	IF_2	CALL_6
0x4006ae3	        0x488d7320	                   lea rsi, [rbx + 0x20]	      8921	eval.c	FUNCTION_172	ELSE_1	IF_2	CALL_7
0x4006ae7	          0x4589e9	                           mov r9d, r13d	      8921	eval.c	FUNCTION_172	ELSE_1	IF_2	CALL_7
0x4006aea	          0x4d89e0	                             mov r8, r12	      8921	eval.c	FUNCTION_172	ELSE_1	IF_2	CALL_7
0x4006aed	          0x4889d9	                            mov rcx, rbx	      8921	eval.c	FUNCTION_172	ELSE_1	IF_2	CALL_7
0x4006af0	      0xba00000000	                              mov edx, 0	      8921	eval.c	FUNCTION_172	ELSE_1	IF_2	CALL_7
0x4006af5	          0x4889e7	                            mov rdi, rsp	      8921	eval.c	FUNCTION_172	ELSE_1	IF_2	CALL_7
0x4006af8	      0xe800000000	                          call 0x4006afd	      8921	eval.c	FUNCTION_172	ELSE_1	IF_2	CALL_7
0x4006afd	          0x4889e7	                            mov rdi, rsp	      8923	eval.c	FUNCTION_172	ELSE_1	IF_2	CALL_8
0x4006b00	      0xe800000000	                          call 0x4006b05	      8923	eval.c	FUNCTION_172	ELSE_1	IF_2	CALL_8
0x4006b05	          0x4889e7	                            mov rdi, rsp	      8924	eval.c	FUNCTION_172	ELSE_1	IF_2	CALL_9
0x4006b08	      0xe800000000	                          call 0x4006b0d	      8924	eval.c	FUNCTION_172	ELSE_1	IF_2	CALL_9
0x4006b0d	      0xba01000000	                              mov edx, 1	      8925	eval.c	FUNCTION_172	ELSE_1	IF_2
0x4006b12	            0x89d0	                            mov eax, edx	      8928	eval.c	FUNCTION_172
0x4006b14	    0x488b8c24b800	            mov rcx, qword [rsp + 0xb8] 	      8928	eval.c	FUNCTION_172
0x4006b1c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      8928	eval.c	FUNCTION_172
0x4006b25	            0x7405	                            je 0x4006b2c	      8928	eval.c	FUNCTION_172
0x4006b27	      0xe800000000	                          call 0x4006b2c	      8928	eval.c	FUNCTION_172
0x4006b2c	    0x4881c4c80000	                           add rsp, 0xc8	      8928	eval.c	FUNCTION_172
0x4006b33	              0x5b	                                 pop rbx	      8928	eval.c	FUNCTION_172
0x4006b34	              0x5d	                                 pop rbp	      8928	eval.c	FUNCTION_172
0x4006b35	            0x415c	                                 pop r12	      8928	eval.c	FUNCTION_172
0x4006b37	            0x415d	                                 pop r13	      8928	eval.c	FUNCTION_172
0x4006b39	              0xc3	                                     ret	      8928	eval.c	FUNCTION_172
call_func_retlist	FOR,0:SWITCH,0:DO,0:IF,2:functions,0:WHILE,0:CALL,2:ELSE,0	23
0x40025f3	        0x4883ec28	                           sub rsp, 0x28	      1158	eval.c	FUNCTION_29
0x40025f7	    0x64488b042528	                mov rax, qword fs:[0x28]	      1158	eval.c	FUNCTION_29
0x4002600	      0x4889442418	             mov qword [rsp + 0x18], rax	      1158	eval.c	FUNCTION_29
0x4002605	            0x31c0	                            xor eax, eax	      1158	eval.c	FUNCTION_29
0x4002607	          0x4989e1	                             mov r9, rsp	      1162	eval.c	FUNCTION_29	IF_1	CALL_1
0x400260a	    0x41b801000000	                              mov r8d, 1	      1162	eval.c	FUNCTION_29	IF_1	CALL_1
0x4002610	      0xe800000000	                          call 0x4002615	      1162	eval.c	FUNCTION_29	IF_1	CALL_1
0x4002615	            0x85c0	                           test eax, eax	      1162	eval.c	FUNCTION_29	IF_1	CALL_1
0x4002617	            0x741a	                            je 0x4002633	      1162	eval.c	FUNCTION_29	IF_1	CALL_1
0x4002619	      0x488b442408	                mov rax, qword [rsp + 8]	      1171	eval.c	FUNCTION_29
0x400261e	        0x833c2405	                      cmp dword [rsp], 5	      1165	eval.c	FUNCTION_29	IF_2
0x4002622	            0x7414	                            je 0x4002638	      1165	eval.c	FUNCTION_29	IF_2
0x4002624	          0x4889e7	                            mov rdi, rsp	      1167	eval.c	FUNCTION_29	IF_2	CALL_2
0x4002627	      0xe800000000	                          call 0x400262c	      1167	eval.c	FUNCTION_29	IF_2	CALL_2
0x400262c	      0xb800000000	                              mov eax, 0	      1168	eval.c	FUNCTION_29	IF_2
0x4002631	            0xeb05	                           jmp 0x4002638	      1168	eval.c	FUNCTION_29	IF_2
0x4002633	      0xb800000000	                              mov eax, 0	      1163	eval.c	FUNCTION_29	IF_1
0x4002638	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      1172	eval.c	FUNCTION_29
0x400263d	    0x644833142528	                xor rdx, qword fs:[0x28]	      1172	eval.c	FUNCTION_29
0x4002646	            0x7405	                            je 0x400264d	      1172	eval.c	FUNCTION_29
0x4002648	      0xe800000000	                          call 0x400264d	      1172	eval.c	FUNCTION_29
0x400264d	        0x4883c428	                           add rsp, 0x28	      1172	eval.c	FUNCTION_29
0x4002651	              0xc3	                                     ret	      1172	eval.c	FUNCTION_29
clear_tv	FOR,0:SWITCH,1:DO,0:IF,1:functions,0:WHILE,0:CALL,7:ELSE,0	42
0x40022d3	          0x4885ff	                           test rdi, rdi	      6892	eval.c	FUNCTION_122	IF_1
0x40022d6	     0xf84b1000000	                            je 0x400238d	      6892	eval.c	FUNCTION_122	IF_1
0x40022dc	              0x53	                                push rbx	      6891	eval.c	FUNCTION_122
0x40022dd	          0x4889fb	                            mov rbx, rdi	      6891	eval.c	FUNCTION_122
0x40022e0	          0x833f0a	                    cmp dword [rdi], 0xa	      6894	eval.c	FUNCTION_122	IF_1	SWITCH_1
0x40022e3	     0xf879f000000	                            ja 0x4002388	      6894	eval.c	FUNCTION_122	IF_1	SWITCH_1
0x40022e9	            0x8b07	                    mov eax, dword [rdi]	      6894	eval.c	FUNCTION_122	IF_1	SWITCH_1
0x40022eb	    0xff24c5000000	                       jmp qword [rax*8]	      6894	eval.c	FUNCTION_122	IF_1	SWITCH_1
0x40022f2	        0x488b7f08	                mov rdi, qword [rdi + 8]	      6897	eval.c	FUNCTION_122	IF_1	SWITCH_1	CALL_1
0x40022f6	      0xe800000000	                          call 0x40022fb	      6897	eval.c	FUNCTION_122	IF_1	SWITCH_1	CALL_1
0x40022fb	        0x488b7b08	                mov rdi, qword [rbx + 8]	      6900	eval.c	FUNCTION_122	IF_1	SWITCH_1	CALL_2
0x40022ff	          0x4885ff	                           test rdi, rdi	      6900	eval.c	FUNCTION_122	IF_1	SWITCH_1	CALL_2
0x4002302	     0xf8480000000	                            je 0x4002388	      6900	eval.c	FUNCTION_122	IF_1	SWITCH_1	CALL_2
0x4002308	      0xe800000000	                          call 0x400230d	      6900	eval.c	FUNCTION_122	IF_1	SWITCH_1	CALL_2
0x400230d	    0x48c743080000	                  mov qword [rbx + 8], 0	      6900	eval.c	FUNCTION_122	IF_1	SWITCH_1	CALL_2
0x4002315	            0xeb71	                           jmp 0x4002388	      6900	eval.c	FUNCTION_122	IF_1	SWITCH_1	CALL_2
0x4002317	        0x488b7f08	                mov rdi, qword [rdi + 8]	      6903	eval.c	FUNCTION_122	IF_1	SWITCH_1	CALL_3
0x400231b	      0xe800000000	                          call 0x4002320	      6903	eval.c	FUNCTION_122	IF_1	SWITCH_1	CALL_3
0x4002320	    0x48c743080000	                  mov qword [rbx + 8], 0	      6904	eval.c	FUNCTION_122	IF_1	SWITCH_1
0x4002328	            0xeb5e	                           jmp 0x4002388	      6905	eval.c	FUNCTION_122	IF_1	SWITCH_1
0x400232a	        0x488b7f08	                mov rdi, qword [rdi + 8]	      6907	eval.c	FUNCTION_122	IF_1	SWITCH_1	CALL_4
0x400232e	      0xe800000000	                          call 0x4002333	      6907	eval.c	FUNCTION_122	IF_1	SWITCH_1	CALL_4
0x4002333	    0x48c743080000	                  mov qword [rbx + 8], 0	      6908	eval.c	FUNCTION_122	IF_1	SWITCH_1
0x400233b	            0xeb4b	                           jmp 0x4002388	      6909	eval.c	FUNCTION_122	IF_1	SWITCH_1
0x400233d	        0x488b7f08	                mov rdi, qword [rdi + 8]	      6911	eval.c	FUNCTION_122	IF_1	SWITCH_1	CALL_5
0x4002341	      0xe800000000	                          call 0x4002346	      6911	eval.c	FUNCTION_122	IF_1	SWITCH_1	CALL_5
0x4002346	    0x48c743080000	                  mov qword [rbx + 8], 0	      6912	eval.c	FUNCTION_122	IF_1	SWITCH_1
0x400234e	            0xeb38	                           jmp 0x4002388	      6913	eval.c	FUNCTION_122	IF_1	SWITCH_1
0x4002350	    0x48c747080000	                  mov qword [rdi + 8], 0	      6916	eval.c	FUNCTION_122	IF_1	SWITCH_1
0x4002358	            0xeb2e	                           jmp 0x4002388	      6917	eval.c	FUNCTION_122	IF_1	SWITCH_1
0x400235a	    0x48c747080000	                  mov qword [rdi + 8], 0	      6920	eval.c	FUNCTION_122	IF_1	SWITCH_1
0x4002362	            0xeb24	                           jmp 0x4002388	      6921	eval.c	FUNCTION_122	IF_1	SWITCH_1
0x4002364	        0x488b7f08	                mov rdi, qword [rdi + 8]	      6925	eval.c	FUNCTION_122	IF_1	SWITCH_1	CALL_6
0x4002368	      0xe800000000	                          call 0x400236d	      6925	eval.c	FUNCTION_122	IF_1	SWITCH_1	CALL_6
0x400236d	    0x48c743080000	                  mov qword [rbx + 8], 0	      6926	eval.c	FUNCTION_122	IF_1	SWITCH_1
0x4002375	            0xeb11	                           jmp 0x4002388	      6928	eval.c	FUNCTION_122	IF_1	SWITCH_1
0x4002377	        0x488b7f08	                mov rdi, qword [rdi + 8]	      6931	eval.c	FUNCTION_122	IF_1	SWITCH_1	CALL_7
0x400237b	      0xe800000000	                          call 0x4002380	      6931	eval.c	FUNCTION_122	IF_1	SWITCH_1	CALL_7
0x4002380	    0x48c743080000	                  mov qword [rbx + 8], 0	      6932	eval.c	FUNCTION_122	IF_1	SWITCH_1
0x4002388	        0xc6430400	                   mov byte [rbx + 4], 0	      6937	eval.c	FUNCTION_122	IF_1
0x400238c	              0x5b	                                 pop rbx	      6939	eval.c	FUNCTION_122
0x400238d	            0xf3c3	                                     ret	      6939	eval.c	FUNCTION_122
eval_isnamec1	FOR,0:SWITCH,0:DO,0:IF,0:functions,0:WHILE,0:CALL,1:ELSE,0	10
0x4001c0b	            0x89f8	                            mov eax, edi	      6376	eval.c	FUNCTION_101	CALL_1
0x4001c0d	          0x83e0df	                     and eax, 0xffffffdf	      6376	eval.c	FUNCTION_101	CALL_1
0x4001c10	          0x83e841	                           sub eax, 0x41	      6376	eval.c	FUNCTION_101	CALL_1
0x4001c13	          0x83f819	                           cmp eax, 0x19	      6376	eval.c	FUNCTION_101	CALL_1
0x4001c16	           0xf96c2	                                setbe dl	      6376	eval.c	FUNCTION_101	CALL_1
0x4001c19	          0x83ff5f	                           cmp edi, 0x5f	      6376	eval.c	FUNCTION_101	CALL_1
0x4001c1c	           0xf94c0	                                 sete al	      6376	eval.c	FUNCTION_101	CALL_1
0x4001c1f	             0x9d0	                             or eax, edx	      6376	eval.c	FUNCTION_101	CALL_1
0x4001c21	           0xfb6c0	                           movzx eax, al	      6376	eval.c	FUNCTION_101	CALL_1
0x4001c24	              0xc3	                                     ret	      6377	eval.c	FUNCTION_101
find_option_end	FOR,0:SWITCH,0:DO,0:IF,4:functions,0:WHILE,1:CALL,2:ELSE,3	49
0x4000040	          0x488b17	                    mov rdx, qword [rdi]	      8426	eval.c	FUNCTION_159
0x4000043	        0x488d4201	                      lea rax, [rdx + 1]	      8428	eval.c	FUNCTION_159
0x4000047	         0xfb64a01	               movzx ecx, byte [rdx + 1]	      8429	eval.c	FUNCTION_159	IF_1
0x400004b	          0x80f967	                            cmp cl, 0x67	      8429	eval.c	FUNCTION_159	IF_1
0x400004e	            0x7512	                           jne 0x4000062	      8429	eval.c	FUNCTION_159	IF_1
0x4000050	        0x807a023a	                cmp byte [rdx + 2], 0x3a	      8429	eval.c	FUNCTION_159	IF_1
0x4000054	            0x7523	                           jne 0x4000079	      8429	eval.c	FUNCTION_159	IF_1
0x4000056	    0xc70602000000	                      mov dword [rsi], 2	      8431	eval.c	FUNCTION_159	IF_1
0x400005c	        0x488d4203	                      lea rax, [rdx + 3]	      8432	eval.c	FUNCTION_159	IF_1
0x4000060	            0xeb1d	                           jmp 0x400007f	      8432	eval.c	FUNCTION_159	IF_1
0x4000062	          0x80f96c	                            cmp cl, 0x6c	      8434	eval.c	FUNCTION_159	ELSE_1	IF_2
0x4000065	            0x7512	                           jne 0x4000079	      8434	eval.c	FUNCTION_159	ELSE_1	IF_2
0x4000067	        0x807a023a	                cmp byte [rdx + 2], 0x3a	      8434	eval.c	FUNCTION_159	ELSE_1	IF_2
0x400006b	            0x750c	                           jne 0x4000079	      8434	eval.c	FUNCTION_159	ELSE_1	IF_2
0x400006d	    0xc70604000000	                      mov dword [rsi], 4	      8436	eval.c	FUNCTION_159	ELSE_1	IF_2
0x4000073	        0x488d4203	                      lea rax, [rdx + 3]	      8437	eval.c	FUNCTION_159	ELSE_1	IF_2
0x4000077	            0xeb06	                           jmp 0x400007f	      8437	eval.c	FUNCTION_159	ELSE_1	IF_2
0x4000079	    0xc70600000000	                      mov dword [rsi], 0	      8440	eval.c	FUNCTION_159	ELSE_2
0x400007f	           0xfb610	                   movzx edx, byte [rax]	      8442	eval.c	FUNCTION_159	IF_3	CALL_1
0x4000082	          0x83e2df	                     and edx, 0xffffffdf	      8442	eval.c	FUNCTION_159	IF_3	CALL_1
0x4000085	          0x83ea41	                           sub edx, 0x41	      8442	eval.c	FUNCTION_159	IF_3	CALL_1
0x4000088	          0x80fa19	                            cmp dl, 0x19	      8442	eval.c	FUNCTION_159	IF_3	CALL_1
0x400008b	            0x7743	                            ja 0x40000d0	      8442	eval.c	FUNCTION_159	IF_3	CALL_1
0x400008d	          0x488907	                    mov qword [rdi], rax	      8444	eval.c	FUNCTION_159
0x4000090	           0xfb610	                   movzx edx, byte [rax]	      8446	eval.c	FUNCTION_159	IF_4
0x4000093	          0x80fa74	                            cmp dl, 0x74	      8446	eval.c	FUNCTION_159	IF_4
0x4000096	            0x740d	                            je 0x40000a5	      8446	eval.c	FUNCTION_159	IF_4
0x4000098	          0x83e2df	                     and edx, 0xffffffdf	      8449	eval.c	FUNCTION_159	ELSE_3	WHILE_1	CALL_2
0x400009b	          0x83ea41	                           sub edx, 0x41	      8449	eval.c	FUNCTION_159	ELSE_3	WHILE_1	CALL_2
0x400009e	          0x80fa19	                            cmp dl, 0x19	      8449	eval.c	FUNCTION_159	ELSE_3	WHILE_1	CALL_2
0x40000a1	            0x7619	                           jbe 0x40000bc	      8449	eval.c	FUNCTION_159	ELSE_3	WHILE_1	CALL_2
0x40000a3	            0xf3c3	                                     ret	      8449	eval.c	FUNCTION_159	ELSE_3	WHILE_1	CALL_2
0x40000a5	        0x8078015f	                cmp byte [rax + 1], 0x5f	      8446	eval.c	FUNCTION_159	IF_4
0x40000a9	            0x7511	                           jne 0x40000bc	      8446	eval.c	FUNCTION_159	IF_4
0x40000ab	        0x80780200	                   cmp byte [rax + 2], 0	      8446	eval.c	FUNCTION_159	IF_4
0x40000af	            0x740b	                            je 0x40000bc	      8446	eval.c	FUNCTION_159	IF_4
0x40000b1	        0x80780300	                   cmp byte [rax + 3], 0	      8446	eval.c	FUNCTION_159	IF_4
0x40000b5	            0x7405	                            je 0x40000bc	      8446	eval.c	FUNCTION_159	IF_4
0x40000b7	        0x4883c004	                              add rax, 4	      8447	eval.c	FUNCTION_159	IF_4
0x40000bb	              0xc3	                                     ret	      8447	eval.c	FUNCTION_159	IF_4
0x40000bc	        0x4883c001	                              add rax, 1	      8450	eval.c	FUNCTION_159	ELSE_3	WHILE_1
0x40000c0	           0xfb610	                   movzx edx, byte [rax]	      8449	eval.c	FUNCTION_159	ELSE_3	WHILE_1	CALL_2
0x40000c3	          0x83e2df	                     and edx, 0xffffffdf	      8449	eval.c	FUNCTION_159	ELSE_3	WHILE_1	CALL_2
0x40000c6	          0x83ea41	                           sub edx, 0x41	      8449	eval.c	FUNCTION_159	ELSE_3	WHILE_1	CALL_2
0x40000c9	          0x80fa19	                            cmp dl, 0x19	      8449	eval.c	FUNCTION_159	ELSE_3	WHILE_1	CALL_2
0x40000cc	            0x76ee	                           jbe 0x40000bc	      8449	eval.c	FUNCTION_159	ELSE_3	WHILE_1	CALL_2
0x40000ce	            0xf3c3	                                     ret	      8449	eval.c	FUNCTION_159	ELSE_3	WHILE_1	CALL_2
0x40000d0	      0xb800000000	                              mov eax, 0	      8443	eval.c	FUNCTION_159	IF_3
0x40000d5	              0xc3	                                     ret	      8452	eval.c	FUNCTION_159
get_tv_float	FOR,0:SWITCH,1:DO,0:IF,0:functions,0:WHILE,0:CALL,15:ELSE,0	73
0x4002c2b	        0x4883ec08	                              sub rsp, 8	      7023	eval.c	ELSE_1	FUNCTION_126
0x4002c2f	        0x660fefc0	                         pxor xmm0, xmm0	      7060	eval.c	ELSE_1	FUNCTION_126
0x4002c33	          0x833f0a	                    cmp dword [rdi], 0xa	      7024	eval.c	ELSE_1	FUNCTION_126	SWITCH_1
0x4002c36	     0xf8729010000	                            ja 0x4002d65	      7024	eval.c	ELSE_1	FUNCTION_126	SWITCH_1
0x4002c3c	            0x8b07	                    mov eax, dword [rdi]	      7024	eval.c	ELSE_1	FUNCTION_126	SWITCH_1
0x4002c3e	    0xff24c5000000	                       jmp qword [rax*8]	      7024	eval.c	ELSE_1	FUNCTION_126	SWITCH_1
0x4002c45	        0x660fefc0	                         pxor xmm0, xmm0	      7027	eval.c	ELSE_1	FUNCTION_126	SWITCH_1
0x4002c49	    0xf2480f2a4708	          cvtsi2sd xmm0, qword [rdi + 8]	      7027	eval.c	ELSE_1	FUNCTION_126	SWITCH_1
0x4002c4f	      0xe911010000	                           jmp 0x4002d65	      7027	eval.c	ELSE_1	FUNCTION_126	SWITCH_1
0x4002c54	      0xf20f104708	            movsd xmm0, qword [rdi + 8] 	      7029	eval.c	ELSE_1	FUNCTION_126	SWITCH_1
0x4002c59	      0xe907010000	                           jmp 0x4002d65	      7029	eval.c	ELSE_1	FUNCTION_126	SWITCH_1
0x4002c5e	      0xba05000000	                              mov edx, 5	      7032	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_2
0x4002c63	      0xbe00000000	                              mov esi, 0	      7032	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_2
0x4002c68	      0xbf00000000	                              mov edi, 0	      7032	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_2
0x4002c6d	      0xe800000000	                          call 0x4002c72	      7032	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_2
0x4002c72	          0x4889c7	                            mov rdi, rax	      7032	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_2
0x4002c75	      0xe800000000	                          call 0x4002c7a	      7032	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_2
0x4002c7a	        0x660fefc0	                         pxor xmm0, xmm0	      7060	eval.c	ELSE_1	FUNCTION_126
0x4002c7e	      0xe9e2000000	                           jmp 0x4002d65	      7033	eval.c	ELSE_1	FUNCTION_126	SWITCH_1
0x4002c83	      0xba05000000	                              mov edx, 5	      7035	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_4
0x4002c88	      0xbe00000000	                              mov esi, 0	      7035	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_4
0x4002c8d	      0xbf00000000	                              mov edi, 0	      7035	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_4
0x4002c92	      0xe800000000	                          call 0x4002c97	      7035	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_4
0x4002c97	          0x4889c7	                            mov rdi, rax	      7035	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_4
0x4002c9a	      0xe800000000	                          call 0x4002c9f	      7035	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_4
0x4002c9f	        0x660fefc0	                         pxor xmm0, xmm0	      7060	eval.c	ELSE_1	FUNCTION_126
0x4002ca3	      0xe9bd000000	                           jmp 0x4002d65	      7036	eval.c	ELSE_1	FUNCTION_126	SWITCH_1
0x4002ca8	      0xba05000000	                              mov edx, 5	      7038	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_6
0x4002cad	      0xbe00000000	                              mov esi, 0	      7038	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_6
0x4002cb2	      0xbf00000000	                              mov edi, 0	      7038	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_6
0x4002cb7	      0xe800000000	                          call 0x4002cbc	      7038	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_6
0x4002cbc	          0x4889c7	                            mov rdi, rax	      7038	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_6
0x4002cbf	      0xe800000000	                          call 0x4002cc4	      7038	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_6
0x4002cc4	        0x660fefc0	                         pxor xmm0, xmm0	      7060	eval.c	ELSE_1	FUNCTION_126
0x4002cc8	      0xe998000000	                           jmp 0x4002d65	      7039	eval.c	ELSE_1	FUNCTION_126	SWITCH_1
0x4002ccd	      0xba05000000	                              mov edx, 5	      7041	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_8
0x4002cd2	      0xbe00000000	                              mov esi, 0	      7041	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_8
0x4002cd7	      0xbf00000000	                              mov edi, 0	      7041	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_8
0x4002cdc	      0xe800000000	                          call 0x4002ce1	      7041	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_8
0x4002ce1	          0x4889c7	                            mov rdi, rax	      7041	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_8
0x4002ce4	      0xe800000000	                          call 0x4002ce9	      7041	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_8
0x4002ce9	        0x660fefc0	                         pxor xmm0, xmm0	      7060	eval.c	ELSE_1	FUNCTION_126
0x4002ced	            0xeb76	                           jmp 0x4002d65	      7042	eval.c	ELSE_1	FUNCTION_126	SWITCH_1
0x4002cef	      0xba05000000	                              mov edx, 5	      7044	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_10
0x4002cf4	      0xbe00000000	                              mov esi, 0	      7044	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_10
0x4002cf9	      0xbf00000000	                              mov edi, 0	      7044	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_10
0x4002cfe	      0xe800000000	                          call 0x4002d03	      7044	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_10
0x4002d03	          0x4889c7	                            mov rdi, rax	      7044	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_10
0x4002d06	      0xe800000000	                          call 0x4002d0b	      7044	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_10
0x4002d0b	        0x660fefc0	                         pxor xmm0, xmm0	      7060	eval.c	ELSE_1	FUNCTION_126
0x4002d0f	            0xeb54	                           jmp 0x4002d65	      7045	eval.c	ELSE_1	FUNCTION_126	SWITCH_1
0x4002d11	      0xba05000000	                              mov edx, 5	      7048	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_12
0x4002d16	      0xbe00000000	                              mov esi, 0	      7048	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_12
0x4002d1b	      0xbf00000000	                              mov edi, 0	      7048	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_12
0x4002d20	      0xe800000000	                          call 0x4002d25	      7048	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_12
0x4002d25	          0x4889c7	                            mov rdi, rax	      7048	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_12
0x4002d28	      0xe800000000	                          call 0x4002d2d	      7048	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_12
0x4002d2d	        0x660fefc0	                         pxor xmm0, xmm0	      7060	eval.c	ELSE_1	FUNCTION_126
0x4002d31	            0xeb32	                           jmp 0x4002d65	      7049	eval.c	ELSE_1	FUNCTION_126	SWITCH_1
0x4002d33	      0xba05000000	                              mov edx, 5	      7053	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_14
0x4002d38	      0xbe00000000	                              mov esi, 0	      7053	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_14
0x4002d3d	      0xbf00000000	                              mov edi, 0	      7053	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_14
0x4002d42	      0xe800000000	                          call 0x4002d47	      7053	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_14
0x4002d47	          0x4889c7	                            mov rdi, rax	      7053	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_14
0x4002d4a	      0xe800000000	                          call 0x4002d4f	      7053	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_14
0x4002d4f	        0x660fefc0	                         pxor xmm0, xmm0	      7060	eval.c	ELSE_1	FUNCTION_126
0x4002d53	            0xeb10	                           jmp 0x4002d65	      7054	eval.c	ELSE_1	FUNCTION_126	SWITCH_1
0x4002d55	      0xbf00000000	                              mov edi, 0	      7057	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_15
0x4002d5a	      0xe800000000	                          call 0x4002d5f	      7057	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_15
0x4002d5f	        0x660fefc0	                         pxor xmm0, xmm0	      7060	eval.c	ELSE_1	FUNCTION_126
0x4002d63	            0xeb00	                           jmp 0x4002d65	      7058	eval.c	ELSE_1	FUNCTION_126	SWITCH_1
0x4002d65	        0x4883c408	                              add rsp, 8	      7061	eval.c	ELSE_1	FUNCTION_126
0x4002d69	              0xc3	                                     ret	      7061	eval.c	ELSE_1	FUNCTION_126
ex_execute	FOR,0:SWITCH,0:DO,0:IF,13:functions,0:WHILE,1:CALL,19:ELSE,2	148
0x400cf05	            0x4155	                                push r13	      8125	eval.c	FUNCTION_154
0x400cf07	            0x4154	                                push r12	      8125	eval.c	FUNCTION_154
0x400cf09	              0x55	                                push rbp	      8125	eval.c	FUNCTION_154
0x400cf0a	              0x53	                                push rbx	      8125	eval.c	FUNCTION_154
0x400cf0b	        0x4883ec48	                           sub rsp, 0x48	      8125	eval.c	FUNCTION_154
0x400cf0f	          0x4889fd	                            mov rbp, rdi	      8125	eval.c	FUNCTION_154
0x400cf12	    0x64488b042528	                mov rax, qword fs:[0x28]	      8125	eval.c	FUNCTION_154
0x400cf1b	      0x4889442438	             mov qword [rsp + 0x38], rax	      8125	eval.c	FUNCTION_154
0x400cf20	            0x31c0	                            xor eax, eax	      8125	eval.c	FUNCTION_154
0x400cf22	          0x488b07	                    mov rax, qword [rdi]	      8126	eval.c	FUNCTION_154
0x400cf25	      0x4889442408	                mov qword [rsp + 8], rax	      8126	eval.c	FUNCTION_154
0x400cf2a	      0xba50000000	                           mov edx, 0x50	      8134	eval.c	FUNCTION_154	CALL_1
0x400cf2f	      0xbe01000000	                              mov esi, 1	      8134	eval.c	FUNCTION_154	CALL_1
0x400cf34	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      8134	eval.c	FUNCTION_154	CALL_1
0x400cf39	      0xe800000000	                          call 0x400cf3e	      8134	eval.c	FUNCTION_154	CALL_1
0x400cf3e	        0x837d3000	               cmp dword [rbp + 0x30], 0	      8136	eval.c	FUNCTION_154	IF_1
0x400cf42	            0x7407	                            je 0x400cf4b	      8136	eval.c	FUNCTION_154	IF_1
0x400cf44	    0x830500000000	               add dword [0x0400cf4b], 1	      8137	eval.c	FUNCTION_154	IF_1
0x400cf4b	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      8138	eval.c	FUNCTION_154	WHILE_1
0x400cf50	           0xfb603	                   movzx eax, byte [rbx]	      8138	eval.c	FUNCTION_154	WHILE_1
0x400cf53	            0x84c0	                             test al, al	      8138	eval.c	FUNCTION_154	WHILE_1
0x400cf55	           0xf95c1	                                setne cl	      8138	eval.c	FUNCTION_154	WHILE_1
0x400cf58	            0x3c7c	                            cmp al, 0x7c	      8138	eval.c	FUNCTION_154	WHILE_1
0x400cf5a	           0xf95c2	                                setne dl	      8138	eval.c	FUNCTION_154	WHILE_1
0x400cf5d	            0x84d1	                             test cl, dl	      8138	eval.c	FUNCTION_154	WHILE_1
0x400cf5f	     0xf84cb010000	                            je 0x400d130	      8138	eval.c	FUNCTION_154	WHILE_1
0x400cf65	            0x3c0a	                             cmp al, 0xa	      8138	eval.c	FUNCTION_154	WHILE_1
0x400cf67	     0xf84c3010000	                            je 0x400d130	      8138	eval.c	FUNCTION_154	WHILE_1
0x400cf6d	    0x49c7c4ffffff	             mov r12, 0xffffffffffffffff	      8157	eval.c	FUNCTION_154	WHILE_1	IF_4	CALL_7
0x400cf74	        0x837d3000	               cmp dword [rbp + 0x30], 0	      8141	eval.c	FUNCTION_154	WHILE_1	IF_2	CALL_2
0x400cf78	           0xf94c2	                                 sete dl	      8141	eval.c	FUNCTION_154	WHILE_1	IF_2	CALL_2
0x400cf7b	           0xfb6d2	                           movzx edx, dl	      8141	eval.c	FUNCTION_154	WHILE_1	IF_2	CALL_2
0x400cf7e	      0x488d742410	                   lea rsi, [rsp + 0x10]	      8141	eval.c	FUNCTION_154	WHILE_1	IF_2	CALL_2
0x400cf83	      0x488d7c2408	                      lea rdi, [rsp + 8]	      8141	eval.c	FUNCTION_154	WHILE_1	IF_2	CALL_2
0x400cf88	      0xe800000000	                          call 0x400cf8d	      8141	eval.c	FUNCTION_154	WHILE_1	IF_2	CALL_2
0x400cf8d	            0x85c0	                           test eax, eax	      8141	eval.c	FUNCTION_154	WHILE_1	IF_2	CALL_2
0x400cf8f	            0x7531	                           jne 0x400cfc2	      8141	eval.c	FUNCTION_154	WHILE_1	IF_2	CALL_2
0x400cf91	      0xe800000000	                          call 0x400cf96	      8148	eval.c	FUNCTION_154	WHILE_1	IF_2	IF_3	CALL_3
0x400cf96	            0x85c0	                           test eax, eax	      8148	eval.c	FUNCTION_154	WHILE_1	IF_2	IF_3	CALL_3
0x400cf98	     0xf855b010000	                           jne 0x400d0f9	      8148	eval.c	FUNCTION_154	WHILE_1	IF_2	IF_3	CALL_3
0x400cf9e	      0xba05000000	                              mov edx, 5	      8149	eval.c	FUNCTION_154	WHILE_1	IF_2	CALL_5
0x400cfa3	      0xbe00000000	                              mov esi, 0	      8149	eval.c	FUNCTION_154	WHILE_1	IF_2	CALL_5
0x400cfa8	      0xbf00000000	                              mov edi, 0	      8149	eval.c	FUNCTION_154	WHILE_1	IF_2	CALL_5
0x400cfad	      0xe800000000	                          call 0x400cfb2	      8149	eval.c	FUNCTION_154	WHILE_1	IF_2	CALL_5
0x400cfb2	          0x4889de	                            mov rsi, rbx	      8149	eval.c	FUNCTION_154	WHILE_1	IF_2	CALL_5
0x400cfb5	          0x4889c7	                            mov rdi, rax	      8149	eval.c	FUNCTION_154	WHILE_1	IF_2	CALL_5
0x400cfb8	      0xe800000000	                          call 0x400cfbd	      8149	eval.c	FUNCTION_154	WHILE_1	IF_2	CALL_5
0x400cfbd	      0xe937010000	                           jmp 0x400d0f9	      8149	eval.c	FUNCTION_154	WHILE_1	IF_2	CALL_5
0x400cfc2	        0x837d3000	               cmp dword [rbp + 0x30], 0	      8154	eval.c	FUNCTION_154	WHILE_1	IF_4
0x400cfc6	            0x7574	                           jne 0x400d03c	      8154	eval.c	FUNCTION_154	WHILE_1	IF_4
0x400cfc8	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      8156	eval.c	FUNCTION_154	WHILE_1	IF_4	CALL_6
0x400cfcd	      0xe800000000	                          call 0x400cfd2	      8156	eval.c	FUNCTION_154	WHILE_1	IF_4	CALL_6
0x400cfd2	          0x4989c5	                            mov r13, rax	      8156	eval.c	FUNCTION_154	WHILE_1	IF_4	CALL_6
0x400cfd5	      0xb800000000	                              mov eax, 0	      8157	eval.c	FUNCTION_154	WHILE_1	IF_4	CALL_7
0x400cfda	          0x4c89e1	                            mov rcx, r12	      8157	eval.c	FUNCTION_154	WHILE_1	IF_4	CALL_7
0x400cfdd	          0x4c89ef	                            mov rdi, r13	      8157	eval.c	FUNCTION_154	WHILE_1	IF_4	CALL_7
0x400cfe0	            0xf2ae	              repne scasb al, byte [rdi]	      8157	eval.c	FUNCTION_154	WHILE_1	IF_4	CALL_7
0x400cfe2	          0x4889c8	                            mov rax, rcx	      8157	eval.c	FUNCTION_154	WHILE_1	IF_4	CALL_7
0x400cfe5	          0x48f7d0	                                 not rax	      8157	eval.c	FUNCTION_154	WHILE_1	IF_4	CALL_7
0x400cfe8	        0x488d58ff	                      lea rbx, [rax - 1]	      8157	eval.c	FUNCTION_154	WHILE_1	IF_4	CALL_7
0x400cfec	          0x8d7302	                      lea esi, [rbx + 2]	      8158	eval.c	FUNCTION_154	WHILE_1	IF_4	IF_5	CALL_8
0x400cfef	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      8158	eval.c	FUNCTION_154	WHILE_1	IF_4	IF_5	CALL_8
0x400cff4	      0xe800000000	                          call 0x400cff9	      8158	eval.c	FUNCTION_154	WHILE_1	IF_4	IF_5	CALL_8
0x400cff9	            0x85c0	                           test eax, eax	      8158	eval.c	FUNCTION_154	WHILE_1	IF_4	IF_5	CALL_8
0x400cffb	            0x750f	                           jne 0x400d00c	      8158	eval.c	FUNCTION_154	WHILE_1	IF_4	IF_5	CALL_8
0x400cffd	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      8160	eval.c	FUNCTION_154	WHILE_1	IF_4	IF_5	CALL_9
0x400d002	      0xe800000000	                          call 0x400d007	      8160	eval.c	FUNCTION_154	WHILE_1	IF_4	IF_5	CALL_9
0x400d007	      0xe9ed000000	                           jmp 0x400d0f9	      8162	eval.c	FUNCTION_154	WHILE_1	IF_4	IF_5
0x400d00c	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      8164	eval.c	FUNCTION_154	WHILE_1	IF_4	IF_6
0x400d010	            0x85c0	                           test eax, eax	      8164	eval.c	FUNCTION_154	WHILE_1	IF_4	IF_6
0x400d012	            0x7412	                            je 0x400d026	      8164	eval.c	FUNCTION_154	WHILE_1	IF_4	IF_6
0x400d014	          0x8d5001	                      lea edx, [rax + 1]	      8165	eval.c	FUNCTION_154	WHILE_1	IF_4	IF_6
0x400d017	        0x89542420	             mov dword [rsp + 0x20], edx	      8165	eval.c	FUNCTION_154	WHILE_1	IF_4	IF_6
0x400d01b	            0x4898	                                    cdqe	      8165	eval.c	FUNCTION_154	WHILE_1	IF_4	IF_6
0x400d01d	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	      8165	eval.c	FUNCTION_154	WHILE_1	IF_4	IF_6
0x400d022	        0xc6040220	              mov byte [rdx + rax], 0x20	      8165	eval.c	FUNCTION_154	WHILE_1	IF_4	IF_6
0x400d026	      0x48637c2420	         movsxd rdi, dword [rsp + 0x20] 	       110	string3.h	FUNCTION_197	CALL_3
0x400d02b	      0x48037c2430	             add rdi, qword [rsp + 0x30]	       110	string3.h	FUNCTION_197	CALL_3
0x400d030	          0x4c89ee	                            mov rsi, r13	       110	string3.h	FUNCTION_197	CALL_3
0x400d033	      0xe800000000	                          call 0x400d038	       110	string3.h	FUNCTION_197	CALL_3
0x400d038	         0x15c2420	             add dword [rsp + 0x20], ebx	      8167	eval.c	FUNCTION_154	WHILE_1	IF_4
0x400d03c	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      8170	eval.c	FUNCTION_154	WHILE_1	CALL_11
0x400d041	      0xe800000000	                          call 0x400d046	      8170	eval.c	FUNCTION_154	WHILE_1	CALL_11
0x400d046	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      8171	eval.c	FUNCTION_154	WHILE_1	CALL_12
0x400d04b	      0xe800000000	                          call 0x400d050	      8171	eval.c	FUNCTION_154	WHILE_1	CALL_12
0x400d050	          0x4889c3	                            mov rbx, rax	      8171	eval.c	FUNCTION_154	WHILE_1	CALL_12
0x400d053	      0x4889442408	                mov qword [rsp + 8], rax	      8171	eval.c	FUNCTION_154	WHILE_1	CALL_12
0x400d058	           0xfb600	                   movzx eax, byte [rax]	      8138	eval.c	FUNCTION_154	WHILE_1
0x400d05b	            0x84c0	                             test al, al	      8138	eval.c	FUNCTION_154	WHILE_1
0x400d05d	           0xf95c1	                                setne cl	      8138	eval.c	FUNCTION_154	WHILE_1
0x400d060	            0x3c7c	                            cmp al, 0x7c	      8138	eval.c	FUNCTION_154	WHILE_1
0x400d062	           0xf95c2	                                setne dl	      8138	eval.c	FUNCTION_154	WHILE_1
0x400d065	            0x84d1	                             test cl, dl	      8138	eval.c	FUNCTION_154	WHILE_1
0x400d067	     0xf84c3000000	                            je 0x400d130	      8138	eval.c	FUNCTION_154	WHILE_1
0x400d06d	            0x3c0a	                             cmp al, 0xa	      8138	eval.c	FUNCTION_154	WHILE_1
0x400d06f	     0xf85fffeffff	                           jne 0x400cf74	      8138	eval.c	FUNCTION_154	WHILE_1
0x400d075	      0xe9b6000000	                           jmp 0x400d130	      8138	eval.c	FUNCTION_154	WHILE_1
0x400d07a	          0x8b4520	            mov eax, dword [rbp + 0x20] 	      8176	eval.c	FUNCTION_154	IF_7	IF_8
0x400d07d	          0x83e0fd	                     and eax, 0xfffffffd	      8176	eval.c	FUNCTION_154	IF_7	IF_8
0x400d080	      0x3d80000000	                           cmp eax, 0x80	      8176	eval.c	FUNCTION_154	IF_7	IF_8
0x400d085	            0x7505	                           jne 0x400d08c	      8176	eval.c	FUNCTION_154	IF_7	IF_8
0x400d087	      0xe800000000	                          call 0x400d08c	      8181	eval.c	FUNCTION_154	IF_7	IF_8	CALL_13
0x400d08c	          0x8b4520	            mov eax, dword [rbp + 0x20] 	      8184	eval.c	FUNCTION_154	IF_7	IF_9
0x400d08f	      0x3d82000000	                           cmp eax, 0x82	      8184	eval.c	FUNCTION_154	IF_7	IF_9
0x400d094	            0x7517	                           jne 0x400d0ad	      8184	eval.c	FUNCTION_154	IF_7	IF_9
0x400d096	    0x8b3500000000	            mov esi, dword [0x0400d09c] 	      8186	eval.c	FUNCTION_154	IF_7	IF_9	CALL_14
0x400d09c	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      8186	eval.c	FUNCTION_154	IF_7	IF_9	CALL_14
0x400d0a1	      0xe800000000	                          call 0x400d0a6	      8186	eval.c	FUNCTION_154	IF_7	IF_9	CALL_14
0x400d0a6	      0xe800000000	                          call 0x400d0ab	      8187	eval.c	FUNCTION_154	IF_7	IF_9	CALL_15
0x400d0ab	            0xeb4c	                           jmp 0x400d0f9	      8187	eval.c	FUNCTION_154	IF_7	IF_9	CALL_15
0x400d0ad	      0x3d80000000	                           cmp eax, 0x80	      8189	eval.c	FUNCTION_154	IF_7	ELSE_1	IF_10
0x400d0b2	            0x7521	                           jne 0x400d0d5	      8189	eval.c	FUNCTION_154	IF_7	ELSE_1	IF_10
0x400d0b4	    0x8b1d00000000	            mov ebx, dword [0x0400d0ba] 	      8192	eval.c	FUNCTION_154	IF_7	ELSE_1	IF_10
0x400d0ba	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      8193	eval.c	FUNCTION_154	IF_7	ELSE_1	IF_10	CALL_16
0x400d0bf	      0xe800000000	                          call 0x400d0c4	      8193	eval.c	FUNCTION_154	IF_7	ELSE_1	IF_10	CALL_16
0x400d0c4	    0x833d00000000	               cmp dword [0x0400d0cb], 0	      8194	eval.c	FUNCTION_154	IF_7	ELSE_1	IF_10	IF_11
0x400d0cb	            0x752c	                           jne 0x400d0f9	      8194	eval.c	FUNCTION_154	IF_7	ELSE_1	IF_10	IF_11
0x400d0cd	    0x891d00000000	            mov dword [0x0400d0d3], ebx 	      8195	eval.c	FUNCTION_154	IF_7	ELSE_1	IF_10	IF_11
0x400d0d3	            0xeb24	                           jmp 0x400d0f9	      8195	eval.c	FUNCTION_154	IF_7	ELSE_1	IF_10	IF_11
0x400d0d5	      0x3d8e000000	                           cmp eax, 0x8e	      8197	eval.c	FUNCTION_154	IF_7	ELSE_2	IF_12
0x400d0da	            0x751d	                           jne 0x400d0f9	      8197	eval.c	FUNCTION_154	IF_7	ELSE_2	IF_12
0x400d0dc	    0x488b95a00000	            mov rdx, qword [rbp + 0xa0] 	      8198	eval.c	FUNCTION_154	IF_7	ELSE_2	IF_12	CALL_17
0x400d0e3	    0x488bb5980000	            mov rsi, qword [rbp + 0x98] 	      8198	eval.c	FUNCTION_154	IF_7	ELSE_2	IF_12	CALL_17
0x400d0ea	      0xb903000000	                              mov ecx, 3	      8198	eval.c	FUNCTION_154	IF_7	ELSE_2	IF_12	CALL_17
0x400d0ef	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      8198	eval.c	FUNCTION_154	IF_7	ELSE_2	IF_12	CALL_17
0x400d0f4	      0xe800000000	                          call 0x400d0f9	      8198	eval.c	FUNCTION_154	IF_7	ELSE_2	IF_12	CALL_17
0x400d0f9	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      8202	eval.c	FUNCTION_154	CALL_18
0x400d0fe	      0xe800000000	                          call 0x400d103	      8202	eval.c	FUNCTION_154	CALL_18
0x400d103	        0x837d3000	               cmp dword [rbp + 0x30], 0	      8204	eval.c	FUNCTION_154	IF_13
0x400d107	            0x7407	                            je 0x400d110	      8204	eval.c	FUNCTION_154	IF_13
0x400d109	    0x832d00000000	               sub dword [0x0400d110], 1	      8205	eval.c	FUNCTION_154	IF_13
0x400d110	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      8207	eval.c	FUNCTION_154	CALL_19
0x400d115	      0xe800000000	                          call 0x400d11a	      8207	eval.c	FUNCTION_154	CALL_19
0x400d11a	        0x48894508	                mov qword [rbp + 8], rax	      8207	eval.c	FUNCTION_154	CALL_19
0x400d11e	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      8208	eval.c	FUNCTION_154
0x400d123	    0x644833042528	                xor rax, qword fs:[0x28]	      8208	eval.c	FUNCTION_154
0x400d12c	            0x7415	                            je 0x400d143	      8208	eval.c	FUNCTION_154
0x400d12e	            0xeb0e	                           jmp 0x400d13e	      8208	eval.c	FUNCTION_154
0x400d130	    0x48837c243000	               cmp qword [rsp + 0x30], 0	      8174	eval.c	FUNCTION_154	IF_7
0x400d136	     0xf853effffff	                           jne 0x400d07a	      8174	eval.c	FUNCTION_154	IF_7
0x400d13c	            0xebbb	                           jmp 0x400d0f9	      8174	eval.c	FUNCTION_154	IF_7
0x400d13e	      0xe800000000	                          call 0x400d143	      8208	eval.c	FUNCTION_154
0x400d143	        0x4883c448	                           add rsp, 0x48	      8208	eval.c	FUNCTION_154
0x400d147	              0x5b	                                 pop rbx	      8208	eval.c	FUNCTION_154
0x400d148	              0x5d	                                 pop rbp	      8208	eval.c	FUNCTION_154
0x400d149	            0x415c	                                 pop r12	      8208	eval.c	FUNCTION_154
0x400d14b	            0x415d	                                 pop r13	      8208	eval.c	FUNCTION_154
0x400d14d	              0xc3	                                     ret	      8208	eval.c	FUNCTION_154
set_vcount	FOR,0:SWITCH,0:DO,0:IF,1:functions,0:WHILE,0:CALL,0:ELSE,0	7
0x4002005	            0x85d2	                           test edx, edx	      6458	eval.c	FUNCTION_108	IF_1
0x4002007	            0x740e	                            je 0x4002017	      6458	eval.c	FUNCTION_108	IF_1
0x4002009	    0x488b05000000	            mov rax, qword [0x04002010] 	      6459	eval.c	FUNCTION_108	IF_1
0x4002010	    0x488905000000	            mov qword [0x04002017], rax 	      6459	eval.c	FUNCTION_108	IF_1
0x4002017	    0x48893d000000	            mov qword [0x0400201e], rdi 	      6460	eval.c	FUNCTION_108
0x400201e	    0x488935000000	            mov qword [0x04002025], rsi 	      6461	eval.c	FUNCTION_108
0x4002025	              0xc3	                                     ret	      6461	eval.c	FUNCTION_108
store_session_globals	FOR,2:SWITCH,0:DO,0:IF,9:functions,0:WHILE,0:CALL,12:ELSE,2	117
0x4006087	            0x4156	                                push r14	      8682	eval.c	FUNCTION_165
0x4006089	            0x4155	                                push r13	      8682	eval.c	FUNCTION_165
0x400608b	            0x4154	                                push r12	      8682	eval.c	FUNCTION_165
0x400608d	              0x55	                                push rbp	      8682	eval.c	FUNCTION_165
0x400608e	              0x53	                                push rbx	      8682	eval.c	FUNCTION_165
0x400608f	    0x488b05000000	            mov rax, qword [0x04006096] 	      8688	eval.c	FUNCTION_165
0x4006096	    0x488b2d000000	            mov rbp, qword [0x0400609d] 	      8689	eval.c	FUNCTION_165	FOR_1
0x400609d	            0x85c0	                           test eax, eax	      8689	eval.c	FUNCTION_165	FOR_1
0x400609f	     0xf8e67010000	                           jle 0x400620c	      8689	eval.c	FUNCTION_165	FOR_1
0x40060a5	          0x4189c4	                           mov r12d, eax	      8689	eval.c	FUNCTION_165	FOR_1
0x40060a8	          0x4989fe	                            mov r14, rdi	      8689	eval.c	FUNCTION_165	FOR_1
0x40060ab	        0x488b5d08	                mov rbx, qword [rbp + 8]	      8691	eval.c	FUNCTION_165	FOR_1	IF_1	CALL_1
0x40060af	    0x4881fb000000	                              cmp rbx, 0	      8691	eval.c	FUNCTION_165	FOR_1	IF_1	CALL_1
0x40060b6	     0xf843c010000	                            je 0x40061f8	      8691	eval.c	FUNCTION_165	FOR_1	IF_1	CALL_1
0x40060bc	          0x4885db	                           test rbx, rbx	      8691	eval.c	FUNCTION_165	FOR_1	IF_1	CALL_1
0x40060bf	     0xf8433010000	                            je 0x40061f8	      8691	eval.c	FUNCTION_165	FOR_1	IF_1	CALL_1
0x40060c5	        0x4183ec01	                             sub r12d, 1	      8693	eval.c	FUNCTION_165	FOR_1	IF_1
0x40060c9	        0x448b6bef	            mov r13d, dword [rbx - 0x11]	      8695	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2
0x40060cd	        0x418d45ff	                      lea eax, [r13 - 1]	      8695	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2
0x40060d1	          0x83f801	                              cmp eax, 1	      8695	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2
0x40060d4	     0xf87bc000000	                            ja 0x4006196	      8695	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2
0x40060da	          0x4889df	                            mov rdi, rbx	      8697	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	CALL_3
0x40060dd	      0xe8f49fffff	                    call sym.var_flavour	      8697	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	CALL_3
0x40060e2	          0x83f801	                              cmp eax, 1	      8697	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	CALL_3
0x40060e5	     0xf85ab000000	                           jne 0x4006196	      8697	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	CALL_3
0x40060eb	        0x488d7bef	                   lea rdi, [rbx - 0x11]	      8701	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	CALL_5
0x40060ef	      0xe800000000	                          call 0x40060f4	      8701	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	CALL_5
0x40060f4	      0xbe00000000	                              mov esi, 0	      8701	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	CALL_5
0x40060f9	          0x4889c7	                            mov rdi, rax	      8701	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	CALL_5
0x40060fc	      0xe800000000	                          call 0x4006101	      8701	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	CALL_5
0x4006101	          0x4989c5	                            mov r13, rax	      8701	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	CALL_5
0x4006104	          0x4885c0	                           test rax, rax	      8703	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	IF_3
0x4006107	     0xf8406010000	                            je 0x4006213	      8703	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	IF_3
0x400610d	           0xfb600	                   movzx eax, byte [rax]	      8705	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	FOR_2
0x4006110	            0x84c0	                             test al, al	      8705	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	FOR_2
0x4006112	            0x741e	                            je 0x4006132	      8705	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	FOR_2
0x4006114	          0x4c89ea	                            mov rdx, r13	      8705	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	FOR_2
0x4006117	            0x3c0a	                             cmp al, 0xa	      8706	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	FOR_2	IF_4
0x4006119	            0x7505	                           jne 0x4006120	      8706	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	FOR_2	IF_4
0x400611b	          0xc6026e	                    mov byte [rdx], 0x6e	      8707	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	FOR_2	IF_4
0x400611e	            0xeb07	                           jmp 0x4006127	      8707	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	FOR_2	IF_4
0x4006120	            0x3c0d	                             cmp al, 0xd	      8708	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	ELSE_1	IF_5
0x4006122	            0x7503	                           jne 0x4006127	      8708	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	ELSE_1	IF_5
0x4006124	          0xc60272	                    mov byte [rdx], 0x72	      8709	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	ELSE_1	IF_5
0x4006127	        0x4883c201	                              add rdx, 1	      8705	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	FOR_2
0x400612b	           0xfb602	                   movzx eax, byte [rdx]	      8705	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	FOR_2
0x400612e	            0x84c0	                             test al, al	      8705	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	FOR_2
0x4006130	            0x75e5	                           jne 0x4006117	      8705	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	FOR_2
0x4006132	        0x837bef02	               cmp dword [rbx - 0x11], 2	      8710	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	IF_6	CALL_6
0x4006136	        0x410f94c0	                                sete r8b	      8710	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	IF_6	CALL_6
0x400613a	        0x450fb6c0	                          movzx r8d, r8b	      8710	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	IF_6	CALL_6
0x400613e	      0x478d440020	               lea r8d, [r8 + r8 + 0x20]	      8710	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	IF_6	CALL_6
0x4006143	        0x4883ec08	                              sub rsp, 8	        97	stdio2.h	FUNCTION_207	CALL_1
0x4006147	            0x4150	                                 push r8	        97	stdio2.h	FUNCTION_207	CALL_1
0x4006149	          0x4d89e9	                             mov r9, r13	        97	stdio2.h	FUNCTION_207	CALL_1
0x400614c	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	FUNCTION_207	CALL_1
0x400614f	      0xba00000000	                              mov edx, 0	        97	stdio2.h	FUNCTION_207	CALL_1
0x4006154	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	FUNCTION_207	CALL_1
0x4006159	          0x4c89f7	                            mov rdi, r14	        97	stdio2.h	FUNCTION_207	CALL_1
0x400615c	      0xb800000000	                              mov eax, 0	        97	stdio2.h	FUNCTION_207	CALL_1
0x4006161	      0xe800000000	                          call 0x4006166	        97	stdio2.h	FUNCTION_207	CALL_1
0x4006166	        0x4883c410	                           add rsp, 0x10	      8710	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	IF_6	CALL_6
0x400616a	            0x85c0	                           test eax, eax	      8710	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	IF_6	CALL_6
0x400616c	            0x780c	                            js 0x400617a	      8710	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	IF_6	CALL_6
0x400616e	          0x4c89f7	                            mov rdi, r14	      8717	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	IF_6	CALL_7
0x4006171	      0xe800000000	                          call 0x4006176	      8717	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	IF_6	CALL_7
0x4006176	            0x85c0	                           test eax, eax	      8717	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	IF_6	CALL_7
0x4006178	            0x7512	                           jne 0x400618c	      8717	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	IF_6	CALL_7
0x400617a	          0x4c89ef	                            mov rdi, r13	      8719	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	IF_6	CALL_8
0x400617d	      0xe800000000	                          call 0x4006182	      8719	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	IF_6	CALL_8
0x4006182	      0xb800000000	                              mov eax, 0	      8720	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	IF_6
0x4006187	      0xe993000000	                           jmp 0x400621f	      8720	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	IF_6
0x400618c	          0x4c89ef	                            mov rdi, r13	      8722	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	CALL_9
0x400618f	      0xe800000000	                          call 0x4006194	      8722	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	CALL_9
0x4006194	            0xeb62	                           jmp 0x40061f8	      8722	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	CALL_9
0x4006196	        0x4183fd07	                             cmp r13d, 7	      8725	eval.c	FUNCTION_165	FOR_1	IF_1	ELSE_2	IF_7
0x400619a	            0x755c	                           jne 0x40061f8	      8725	eval.c	FUNCTION_165	FOR_1	IF_1	ELSE_2	IF_7
0x400619c	          0x4889df	                            mov rdi, rbx	      8726	eval.c	FUNCTION_165	FOR_1	IF_1	ELSE_2	IF_7	CALL_10
0x400619f	      0xe8329fffff	                    call sym.var_flavour	      8726	eval.c	FUNCTION_165	FOR_1	IF_1	ELSE_2	IF_7	CALL_10
0x40061a4	          0x83f801	                              cmp eax, 1	      8726	eval.c	FUNCTION_165	FOR_1	IF_1	ELSE_2	IF_7	CALL_10
0x40061a7	            0x754f	                           jne 0x40061f8	      8726	eval.c	FUNCTION_165	FOR_1	IF_1	ELSE_2	IF_7	CALL_10
0x40061a9	      0xf20f1043f7	             movsd xmm0, qword [rbx - 9]	      8728	eval.c	FUNCTION_165	FOR_1	IF_1	ELSE_2	IF_7
0x40061ae	        0x660fefc9	                         pxor xmm1, xmm1	      8731	eval.c	FUNCTION_165	FOR_1	IF_1	ELSE_2	IF_7	IF_8
0x40061b2	    0x41b820000000	                           mov r8d, 0x20	      8729	eval.c	FUNCTION_165	FOR_1	IF_1	ELSE_2	IF_7
0x40061b8	        0x660f2ec8	                      ucomisd xmm1, xmm0	      8731	eval.c	FUNCTION_165	FOR_1	IF_1	ELSE_2	IF_7	IF_8
0x40061bc	            0x7610	                           jbe 0x40061ce	      8731	eval.c	FUNCTION_165	FOR_1	IF_1	ELSE_2	IF_7	IF_8
0x40061be	    0x660f57050000	        xorpd xmm0, xmmword [0x040061c6]	      8733	eval.c	FUNCTION_165	FOR_1	IF_1	ELSE_2	IF_7	IF_8
0x40061c6	    0x41b82d000000	                           mov r8d, 0x2d	      8734	eval.c	FUNCTION_165	FOR_1	IF_1	ELSE_2	IF_7	IF_8
0x40061cc	            0xeb00	                           jmp 0x40061ce	      8734	eval.c	FUNCTION_165	FOR_1	IF_1	ELSE_2	IF_7	IF_8
0x40061ce	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	FUNCTION_207	CALL_1
0x40061d1	      0xba00000000	                              mov edx, 0	        97	stdio2.h	FUNCTION_207	CALL_1
0x40061d6	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	FUNCTION_207	CALL_1
0x40061db	          0x4c89f7	                            mov rdi, r14	        97	stdio2.h	FUNCTION_207	CALL_1
0x40061de	      0xb801000000	                              mov eax, 1	        97	stdio2.h	FUNCTION_207	CALL_1
0x40061e3	      0xe800000000	                          call 0x40061e8	        97	stdio2.h	FUNCTION_207	CALL_1
0x40061e8	            0x85c0	                           test eax, eax	      8736	eval.c	FUNCTION_165	FOR_1	IF_1	ELSE_2	IF_7	IF_9	CALL_11
0x40061ea	            0x782e	                            js 0x400621a	      8736	eval.c	FUNCTION_165	FOR_1	IF_1	ELSE_2	IF_7	IF_9	CALL_11
0x40061ec	          0x4c89f7	                            mov rdi, r14	      8738	eval.c	FUNCTION_165	FOR_1	IF_1	ELSE_2	IF_7	IF_9	CALL_12
0x40061ef	      0xe800000000	                          call 0x40061f4	      8738	eval.c	FUNCTION_165	FOR_1	IF_1	ELSE_2	IF_7	IF_9	CALL_12
0x40061f4	            0x85c0	                           test eax, eax	      8738	eval.c	FUNCTION_165	FOR_1	IF_1	ELSE_2	IF_7	IF_9	CALL_12
0x40061f6	            0x7427	                            je 0x400621f	      8738	eval.c	FUNCTION_165	FOR_1	IF_1	ELSE_2	IF_7	IF_9	CALL_12
0x40061f8	        0x4883c510	                           add rbp, 0x10	      8689	eval.c	FUNCTION_165	FOR_1
0x40061fc	          0x4585e4	                         test r12d, r12d	      8689	eval.c	FUNCTION_165	FOR_1
0x40061ff	     0xf8fa6feffff	                            jg 0x40060ab	      8689	eval.c	FUNCTION_165	FOR_1
0x4006205	      0xb801000000	                              mov eax, 1	      8744	eval.c	FUNCTION_165
0x400620a	            0xeb13	                           jmp 0x400621f	      8744	eval.c	FUNCTION_165
0x400620c	      0xb801000000	                              mov eax, 1	      8744	eval.c	FUNCTION_165
0x4006211	            0xeb0c	                           jmp 0x400621f	      8744	eval.c	FUNCTION_165
0x4006213	      0xb801000000	                              mov eax, 1	      8744	eval.c	FUNCTION_165
0x4006218	            0xeb05	                           jmp 0x400621f	      8744	eval.c	FUNCTION_165
0x400621a	      0xb800000000	                              mov eax, 0	      8739	eval.c	FUNCTION_165	FOR_1	IF_1	ELSE_2	IF_7	IF_9
0x400621f	              0x5b	                                 pop rbx	      8745	eval.c	FUNCTION_165
0x4006220	              0x5d	                                 pop rbp	      8745	eval.c	FUNCTION_165
0x4006221	            0x415c	                                 pop r12	      8745	eval.c	FUNCTION_165
0x4006223	            0x415d	                                 pop r13	      8745	eval.c	FUNCTION_165
0x4006225	            0x415e	                                 pop r14	      8745	eval.c	FUNCTION_165
0x4006227	              0xc3	                                     ret	      8745	eval.c	FUNCTION_165
assert_fails	FOR,0:SWITCH,0:DO,0:IF,3:functions,0:WHILE,0:CALL,14:ELSE,1	77
0x4006cd7	            0x4154	                                push r12	      9060	eval.c	FUNCTION_178
0x4006cd9	              0x55	                                push rbp	      9060	eval.c	FUNCTION_178
0x4006cda	              0x53	                                push rbx	      9060	eval.c	FUNCTION_178
0x4006cdb	        0x4883ec70	                           sub rsp, 0x70	      9060	eval.c	FUNCTION_178
0x4006cdf	          0x4889fb	                            mov rbx, rdi	      9060	eval.c	FUNCTION_178
0x4006ce2	    0x64488b042528	                mov rax, qword fs:[0x28]	      9060	eval.c	FUNCTION_178
0x4006ceb	      0x4889442468	             mov qword [rsp + 0x68], rax	      9060	eval.c	FUNCTION_178
0x4006cf0	            0x31c0	                            xor eax, eax	      9060	eval.c	FUNCTION_178
0x4006cf2	      0xe800000000	                          call 0x4006cf7	      9061	eval.c	FUNCTION_178	CALL_1
0x4006cf7	          0x4889c5	                            mov rbp, rax	      9061	eval.c	FUNCTION_178	CALL_1
0x4006cfa	    0xc70500000000	               mov dword [0x04006d04], 0	      9065	eval.c	FUNCTION_178
0x4006d04	    0xc70500000000	               mov dword [0x04006d0e], 1	      9066	eval.c	FUNCTION_178
0x4006d0e	    0xc70500000000	               mov dword [0x04006d18], 1	      9067	eval.c	FUNCTION_178
0x4006d18	          0x4889c7	                            mov rdi, rax	      9068	eval.c	FUNCTION_178	CALL_2
0x4006d1b	      0xe800000000	                          call 0x4006d20	      9068	eval.c	FUNCTION_178	CALL_2
0x4006d20	    0x833d00000000	               cmp dword [0x04006d27], 0	      9069	eval.c	FUNCTION_178	IF_1
0x4006d27	            0x7537	                           jne 0x4006d60	      9069	eval.c	FUNCTION_178	IF_1
0x4006d29	          0x4889e7	                            mov rdi, rsp	      9071	eval.c	FUNCTION_178	IF_1	CALL_3
0x4006d2c	      0xe800000000	                          call 0x4006d31	      9071	eval.c	FUNCTION_178	IF_1	CALL_3
0x4006d31	      0xbe00000000	                              mov esi, 0	      9072	eval.c	FUNCTION_178	IF_1	CALL_4
0x4006d36	          0x4889e7	                            mov rdi, rsp	      9072	eval.c	FUNCTION_178	IF_1	CALL_4
0x4006d39	      0xe800000000	                          call 0x4006d3e	      9072	eval.c	FUNCTION_178	IF_1	CALL_4
0x4006d3e	          0x4889ee	                            mov rsi, rbp	      9073	eval.c	FUNCTION_178	IF_1	CALL_5
0x4006d41	          0x4889e7	                            mov rdi, rsp	      9073	eval.c	FUNCTION_178	IF_1	CALL_5
0x4006d44	      0xe800000000	                          call 0x4006d49	      9073	eval.c	FUNCTION_178	IF_1	CALL_5
0x4006d49	          0x4889e7	                            mov rdi, rsp	      9074	eval.c	FUNCTION_178	IF_1	CALL_6
0x4006d4c	      0xe800000000	                          call 0x4006d51	      9074	eval.c	FUNCTION_178	IF_1	CALL_6
0x4006d51	          0x4889e7	                            mov rdi, rsp	      9075	eval.c	FUNCTION_178	IF_1	CALL_7
0x4006d54	      0xe800000000	                          call 0x4006d59	      9075	eval.c	FUNCTION_178	IF_1	CALL_7
0x4006d59	      0xbd01000000	                              mov ebp, 1	      9076	eval.c	FUNCTION_178	IF_1
0x4006d5e	            0xeb72	                           jmp 0x4006dd2	      9076	eval.c	FUNCTION_178	IF_1
0x4006d60	      0xbd00000000	                              mov ebp, 0	      9063	eval.c	FUNCTION_178
0x4006d65	        0x837b1000	               cmp dword [rbx + 0x10], 0	      9078	eval.c	FUNCTION_178	ELSE_1	IF_2
0x4006d69	            0x7467	                            je 0x4006dd2	      9078	eval.c	FUNCTION_178	ELSE_1	IF_2
0x4006d6b	        0x4c8d6310	                   lea r12, [rbx + 0x10]	      9081	eval.c	FUNCTION_178	ELSE_1	IF_2	CALL_8
0x4006d6f	      0x488d742420	                   lea rsi, [rsp + 0x20]	      9081	eval.c	FUNCTION_178	ELSE_1	IF_2	CALL_8
0x4006d74	          0x4c89e7	                            mov rdi, r12	      9081	eval.c	FUNCTION_178	ELSE_1	IF_2	CALL_8
0x4006d77	      0xe800000000	                          call 0x4006d7c	      9081	eval.c	FUNCTION_178	ELSE_1	IF_2	CALL_8
0x4006d7c	          0x4885c0	                           test rax, rax	      9083	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3
0x4006d7f	            0x7414	                            je 0x4006d95	      9083	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3
0x4006d81	          0x4889c6	                            mov rsi, rax	      9084	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3	CALL_9
0x4006d84	    0x488b3d000000	            mov rdi, qword [0x04006d8b] 	      9084	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3	CALL_9
0x4006d8b	      0xe800000000	                          call 0x4006d90	      9084	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3	CALL_9
0x4006d90	          0x4885c0	                           test rax, rax	      9084	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3	CALL_9
0x4006d93	            0x753d	                           jne 0x4006dd2	      9084	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3	CALL_9
0x4006d95	          0x4889e7	                            mov rdi, rsp	      9086	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3	CALL_10
0x4006d98	      0xe800000000	                          call 0x4006d9d	      9086	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3	CALL_10
0x4006d9d	        0x488d7320	                   lea rsi, [rbx + 0x20]	      9087	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3	CALL_11
0x4006da1	    0x41b904000000	                              mov r9d, 4	      9087	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3	CALL_11
0x4006da7	    0x41b800000000	                              mov r8d, 0	      9087	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3	CALL_11
0x4006dad	          0x4c89e1	                            mov rcx, r12	      9087	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3	CALL_11
0x4006db0	      0xba00000000	                              mov edx, 0	      9087	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3	CALL_11
0x4006db5	          0x4889e7	                            mov rdi, rsp	      9087	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3	CALL_11
0x4006db8	      0xe800000000	                          call 0x4006dbd	      9087	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3	CALL_11
0x4006dbd	          0x4889e7	                            mov rdi, rsp	      9089	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3	CALL_12
0x4006dc0	      0xe800000000	                          call 0x4006dc5	      9089	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3	CALL_12
0x4006dc5	          0x4889e7	                            mov rdi, rsp	      9090	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3	CALL_13
0x4006dc8	      0xe800000000	                          call 0x4006dcd	      9090	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3	CALL_13
0x4006dcd	      0xbd01000000	                              mov ebp, 1	      9091	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3
0x4006dd2	    0xc70500000000	               mov dword [0x04006ddc], 0	      9095	eval.c	FUNCTION_178
0x4006ddc	    0xc70500000000	               mov dword [0x04006de6], 0	      9096	eval.c	FUNCTION_178
0x4006de6	    0xc70500000000	               mov dword [0x04006df0], 0	      9097	eval.c	FUNCTION_178
0x4006df0	    0xc70500000000	               mov dword [0x04006dfa], 0	      9098	eval.c	FUNCTION_178
0x4006dfa	      0xba00000000	                              mov edx, 0	      9099	eval.c	FUNCTION_178	CALL_14
0x4006dff	      0xbe00000000	                              mov esi, 0	      9099	eval.c	FUNCTION_178	CALL_14
0x4006e04	      0xbf03000000	                              mov edi, 3	      9099	eval.c	FUNCTION_178	CALL_14
0x4006e09	      0xe800000000	                          call 0x4006e0e	      9099	eval.c	FUNCTION_178	CALL_14
0x4006e0e	            0x89e8	                            mov eax, ebp	      9101	eval.c	FUNCTION_178
0x4006e10	      0x488b4c2468	            mov rcx, qword [rsp + 0x68] 	      9101	eval.c	FUNCTION_178
0x4006e15	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      9101	eval.c	FUNCTION_178
0x4006e1e	            0x7405	                            je 0x4006e25	      9101	eval.c	FUNCTION_178
0x4006e20	      0xe800000000	                          call 0x4006e25	      9101	eval.c	FUNCTION_178
0x4006e25	        0x4883c470	                           add rsp, 0x70	      9101	eval.c	FUNCTION_178
0x4006e29	              0x5b	                                 pop rbx	      9101	eval.c	FUNCTION_178
0x4006e2a	              0x5d	                                 pop rbp	      9101	eval.c	FUNCTION_178
0x4006e2b	            0x415c	                                 pop r12	      9101	eval.c	FUNCTION_178
0x4006e2d	              0xc3	                                     ret	      9101	eval.c	FUNCTION_178
partial_unref	FOR,0:SWITCH,0:DO,0:IF,1:functions,0:WHILE,0:CALL,1:ELSE,0	40
0x40026f1	          0x4885ff	                           test rdi, rdi	      4893	eval.c	FUNCTION_77	IF_1
0x40026f4	            0x7479	                            je 0x400276f	      4893	eval.c	FUNCTION_77	IF_1
0x40026f6	            0x8b07	                    mov eax, dword [rdi]	      4893	eval.c	FUNCTION_77	IF_1
0x40026f8	          0x83e801	                              sub eax, 1	      4893	eval.c	FUNCTION_77	IF_1
0x40026fb	            0x8907	                    mov dword [rdi], eax	      4893	eval.c	FUNCTION_77	IF_1
0x40026fd	            0x85c0	                           test eax, eax	      4893	eval.c	FUNCTION_77	IF_1
0x40026ff	            0x7f6e	                            jg 0x400276f	      4893	eval.c	FUNCTION_77	IF_1
0x4002701	              0x55	                                push rbp	      4892	eval.c	FUNCTION_77
0x4002702	              0x53	                                push rbx	      4892	eval.c	FUNCTION_77
0x4002703	        0x4883ec08	                              sub rsp, 8	      4892	eval.c	FUNCTION_77
0x4002707	          0x4889fb	                            mov rbx, rdi	      4892	eval.c	FUNCTION_77
0x400270a	        0x837f1c00	               cmp dword [rdi + 0x1c], 0	      4872	eval.c	FUNCTION_76	FOR_1
0x400270e	            0x7e1d	                           jle 0x400272d	      4872	eval.c	FUNCTION_76	FOR_1
0x4002710	      0xbd00000000	                              mov ebp, 0	      4872	eval.c	FUNCTION_76	FOR_1
0x4002715	          0x4863fd	                         movsxd rdi, ebp	      4873	eval.c	FUNCTION_76	CALL_1
0x4002718	        0x48c1e704	                              shl rdi, 4	      4873	eval.c	FUNCTION_76	CALL_1
0x400271c	        0x48037b20	             add rdi, qword [rbx + 0x20]	      4873	eval.c	FUNCTION_76	CALL_1
0x4002720	      0xe800000000	                          call 0x4002725	      4873	eval.c	FUNCTION_76	CALL_1
0x4002725	          0x83c501	                              add ebp, 1	      4872	eval.c	FUNCTION_76	FOR_1
0x4002728	          0x3b6b1c	            cmp ebp, dword [rbx + 0x1c] 	      4872	eval.c	FUNCTION_76	FOR_1
0x400272b	            0x7ce8	                            jl 0x4002715	      4872	eval.c	FUNCTION_76	FOR_1
0x400272d	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      4874	eval.c	FUNCTION_76	CALL_2
0x4002731	      0xe800000000	                          call 0x4002736	      4874	eval.c	FUNCTION_76	CALL_2
0x4002736	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	      4875	eval.c	FUNCTION_76	CALL_3
0x400273a	      0xe800000000	                          call 0x400273f	      4875	eval.c	FUNCTION_76	CALL_3
0x400273f	        0x488b7b08	                mov rdi, qword [rbx + 8]	      4876	eval.c	FUNCTION_76	IF_1
0x4002743	          0x4885ff	                           test rdi, rdi	      4876	eval.c	FUNCTION_76	IF_1
0x4002746	            0x7410	                            je 0x4002758	      4876	eval.c	FUNCTION_76	IF_1
0x4002748	      0xe800000000	                          call 0x400274d	      4878	eval.c	FUNCTION_76	IF_1	CALL_4
0x400274d	        0x488b7b08	                mov rdi, qword [rbx + 8]	      4879	eval.c	FUNCTION_76	IF_1	CALL_5
0x4002751	      0xe800000000	                          call 0x4002756	      4879	eval.c	FUNCTION_76	IF_1	CALL_5
0x4002756	            0xeb09	                           jmp 0x4002761	      4879	eval.c	FUNCTION_76	IF_1	CALL_5
0x4002758	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      4882	eval.c	FUNCTION_76	CALL_6
0x400275c	      0xe800000000	                          call 0x4002761	      4882	eval.c	FUNCTION_76	CALL_6
0x4002761	          0x4889df	                            mov rdi, rbx	      4883	eval.c	FUNCTION_76	CALL_7
0x4002764	      0xe800000000	                          call 0x4002769	      4883	eval.c	FUNCTION_76	CALL_7
0x4002769	        0x4883c408	                              add rsp, 8	      4895	eval.c	FUNCTION_77
0x400276d	              0x5b	                                 pop rbx	      4895	eval.c	FUNCTION_77
0x400276e	              0x5d	                                 pop rbp	      4895	eval.c	FUNCTION_77
0x400276f	            0xf3c3	                                     ret	      4895	eval.c	FUNCTION_77
set_context_for_expression	FOR,1:SWITCH,0:DO,0:IF,18:functions,0:WHILE,4:CALL,6:ELSE,12	175
0x4000724	            0x4156	                                push r14	      2605	eval.c	FUNCTION_51
0x4000726	            0x4155	                                push r13	      2605	eval.c	FUNCTION_51
0x4000728	            0x4154	                                push r12	      2605	eval.c	FUNCTION_51
0x400072a	              0x55	                                push rbp	      2605	eval.c	FUNCTION_51
0x400072b	              0x53	                                push rbx	      2605	eval.c	FUNCTION_51
0x400072c	          0x4889fd	                            mov rbp, rdi	      2605	eval.c	FUNCTION_51
0x400072f	          0x4889f3	                            mov rbx, rsi	      2605	eval.c	FUNCTION_51
0x4000732	          0x4189d4	                           mov r12d, edx	      2605	eval.c	FUNCTION_51
0x4000735	    0x81fadb000000	                           cmp edx, 0xdb	      2610	eval.c	FUNCTION_51	IF_1
0x400073b	            0x757f	                           jne 0x40007bc	      2610	eval.c	FUNCTION_51	IF_1
0x400073d	    0xc7070f000000	                    mov dword [rdi], 0xf	      2612	eval.c	FUNCTION_51	IF_1
0x4000743	      0xbe00000000	                              mov esi, 0	      2613	eval.c	FUNCTION_51	IF_1	IF_2	CALL_1
0x4000748	          0x4889df	                            mov rdi, rbx	      2613	eval.c	FUNCTION_51	IF_1	IF_2	CALL_1
0x400074b	      0xe800000000	                          call 0x4000750	      2613	eval.c	FUNCTION_51	IF_1	IF_2	CALL_1
0x4000750	          0x4885c0	                           test rax, rax	      2613	eval.c	FUNCTION_51	IF_1	IF_2	CALL_1
0x4000753	            0x7576	                           jne 0x40007cb	      2613	eval.c	FUNCTION_51	IF_1	IF_2	CALL_1
0x4000755	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      2616	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	CALL_2
0x400075c	          0x4889df	                            mov rdi, rbx	      2616	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	CALL_2
0x400075f	            0xf2ae	              repne scasb al, byte [rdi]	      2616	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	CALL_2
0x4000761	          0x4889c8	                            mov rax, rcx	      2616	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	CALL_2
0x4000764	          0x48f7d0	                                 not rax	      2616	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	CALL_2
0x4000767	      0x4c8d6403ff	                lea r12, [rbx + rax - 1]	      2616	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	CALL_2
0x400076c	          0x4c39e3	                            cmp rbx, r12	      2616	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	CALL_2
0x400076f	     0xf8720020000	                            ja 0x4000995	      2616	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	CALL_2
0x4000775	        0x4c896508	                mov qword [rbp + 8], r12	      2618	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1
0x4000779	      0xb801000000	                              mov eax, 1	      2619	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	CALL_3
0x400077e	    0x833d00000000	               cmp dword [0x04000785], 0	      2619	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	CALL_3
0x4000785	            0x7411	                            je 0x4000798	      2619	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	CALL_3
0x4000787	      0x498d7424ff	                      lea rsi, [r12 - 1]	      2619	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	CALL_3
0x400078c	          0x4889df	                            mov rdi, rbx	      2619	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	CALL_3
0x400078f	    0xff1500000000	                 call qword [0x04000795]	      2619	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	CALL_3
0x4000795	          0x83c001	                              add eax, 1	      2619	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	CALL_3
0x4000798	            0x4898	                                    cdqe	      2619	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	CALL_3
0x400079a	          0x4929c4	                            sub r12, rax	      2619	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	CALL_3
0x400079d	      0x410fb60424	                   movzx eax, byte [r12]	      2620	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	IF_3	CALL_4
0x40007a2	            0x3c20	                            cmp al, 0x20	      2620	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	IF_3	CALL_4
0x40007a4	     0xf84eb010000	                            je 0x4000995	      2620	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	IF_3	CALL_4
0x40007aa	            0x3c09	                               cmp al, 9	      2620	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	IF_3	CALL_4
0x40007ac	     0xf84e3010000	                            je 0x4000995	      2620	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	IF_3	CALL_4
0x40007b2	          0x4c39e3	                            cmp rbx, r12	      2616	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	CALL_2
0x40007b5	            0x76be	                           jbe 0x4000775	      2616	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	CALL_2
0x40007b7	      0xe9d9010000	                           jmp 0x4000995	      2616	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	CALL_2
0x40007bc	          0x83fa32	                           cmp edx, 0x32	      2628	eval.c	FUNCTION_51	ELSE_1
0x40007bf	           0xf95c0	                                setne al	      2628	eval.c	FUNCTION_51	ELSE_1
0x40007c2	           0xfb6c0	                           movzx eax, al	      2628	eval.c	FUNCTION_51	ELSE_1
0x40007c5	        0x8d440012	            lea eax, [rax + rax + 0x12] 	      2628	eval.c	FUNCTION_51	ELSE_1
0x40007c9	            0x8907	                    mov dword [rdi], eax	      2627	eval.c	FUNCTION_51	ELSE_1
0x40007cb	    0x41bd00000000	                             mov r13d, 0	      2706	eval.c	FUNCTION_51	ELSE_1	WHILE_1
0x40007d1	      0xe9a1010000	                           jmp 0x4000977	      2706	eval.c	FUNCTION_51	ELSE_1	WHILE_1
0x40007d6	        0x440fb630	                  movzx r14d, byte [rax]	      2632	eval.c	FUNCTION_51	ELSE_1	WHILE_1
0x40007da	        0x4183fe26	                          cmp r14d, 0x26	      2633	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4
0x40007de	            0x7566	                           jne 0x4000846	      2633	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4
0x40007e0	         0xfb65001	               movzx edx, byte [rax + 1]	      2635	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4
0x40007e4	          0x83fa26	                           cmp edx, 0x26	      2636	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	IF_5
0x40007e7	            0x7528	                           jne 0x4000811	      2636	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	IF_5
0x40007e9	        0x4883c001	                              add rax, 1	      2638	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	IF_5
0x40007ed	        0x48894508	                mov qword [rbp + 8], rax	      2638	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	IF_5
0x40007f1	    0x4181fcdb0000	                          cmp r12d, 0xdb	      2640	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	IF_5
0x40007f8	            0x750a	                           jne 0x4000804	      2640	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	IF_5
0x40007fa	      0xb800000000	                              mov eax, 0	      2640	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	IF_5
0x40007ff	          0x4585ed	                         test r13d, r13d	      2640	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	IF_5
0x4000802	            0x7405	                            je 0x4000809	      2640	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	IF_5
0x4000804	      0xb814000000	                           mov eax, 0x14	      2640	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	IF_5
0x4000809	          0x894500	                    mov dword [rbp], eax	      2639	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	IF_5
0x400080c	      0xe943010000	                           jmp 0x4000954	      2639	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	IF_5
0x4000811	          0x83fa20	                           cmp edx, 0x20	      2642	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	ELSE_2	IF_6
0x4000814	     0xf8445010000	                            je 0x400095f	      2642	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	ELSE_2	IF_6
0x400081a	    0xc74500040000	                      mov dword [rbp], 4	      2644	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	ELSE_2	IF_6
0x4000821	          0x83fa6c	                           cmp edx, 0x6c	      2645	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	ELSE_2	IF_6	IF_7
0x4000824	            0x7409	                            je 0x400082f	      2645	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	ELSE_2	IF_6	IF_7
0x4000826	          0x83fa67	                           cmp edx, 0x67	      2645	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	ELSE_2	IF_6	IF_7
0x4000829	     0xf8525010000	                           jne 0x4000954	      2645	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	ELSE_2	IF_6	IF_7
0x400082f	        0x8078023a	                cmp byte [rax + 2], 0x3a	      2645	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	ELSE_2	IF_6	IF_7
0x4000833	     0xf851b010000	                           jne 0x4000954	      2645	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	ELSE_2	IF_6	IF_7
0x4000839	        0x4883c002	                              add rax, 2	      2646	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	ELSE_2	IF_6	IF_7
0x400083d	        0x48894508	                mov qword [rbp + 8], rax	      2646	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	ELSE_2	IF_6	IF_7
0x4000841	      0xe90e010000	                           jmp 0x4000954	      2646	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	ELSE_2	IF_6	IF_7
0x4000846	        0x4183fe24	                          cmp r14d, 0x24	      2650	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_3	IF_8
0x400084a	            0x750c	                           jne 0x4000858	      2650	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_3	IF_8
0x400084c	    0xc745001a0000	                   mov dword [rbp], 0x1a	      2653	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_3	IF_8
0x4000853	      0xe9fc000000	                           jmp 0x4000954	      2653	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_3	IF_8
0x4000858	        0x4183fe3d	                          cmp r14d, 0x3d	      2655	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_4	IF_9
0x400085c	            0x7512	                           jne 0x4000870	      2655	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_4	IF_9
0x400085e	    0xc74500140000	                   mov dword [rbp], 0x14	      2658	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_4	IF_9
0x4000865	    0x41bd01000000	                             mov r13d, 1	      2657	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_4	IF_9
0x400086b	      0xe9e4000000	                           jmp 0x4000954	      2657	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_4	IF_9
0x4000870	        0x4183fe23	                          cmp r14d, 0x23	      2660	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_5	IF_10
0x4000874	            0x750b	                           jne 0x4000881	      2660	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_5	IF_10
0x4000876	        0x837d0014	                   cmp dword [rbp], 0x14	      2661	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_5	IF_10
0x400087a	            0x750b	                           jne 0x4000887	      2661	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_5	IF_10
0x400087c	      0xe910010000	                           jmp 0x4000991	      2661	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_5	IF_10
0x4000881	        0x4183fe3c	                          cmp r14d, 0x3c	      2666	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_6	IF_11
0x4000885	            0x751c	                           jne 0x40008a3	      2666	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_6	IF_11
0x4000887	        0x837d0012	                   cmp dword [rbp], 0x12	      2667	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_6	IF_11
0x400088b	            0x7516	                           jne 0x40008a3	      2667	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_6	IF_11
0x400088d	      0xbe28000000	                           mov esi, 0x28	      2668	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_6	IF_11	CALL_6
0x4000892	          0x4889c7	                            mov rdi, rax	      2668	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_6	IF_11	CALL_6
0x4000895	      0xe800000000	                          call 0x400089a	      2668	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_6	IF_11	CALL_6
0x400089a	          0x4885c0	                           test rax, rax	      2668	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_6	IF_11	CALL_6
0x400089d	     0xf84ee000000	                            je 0x4000991	      2668	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_6	IF_11	CALL_6
0x40008a3	    0x4181fcdb0000	                          cmp r12d, 0xdb	      2673	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12
0x40008aa	            0x7509	                           jne 0x40008b5	      2673	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12
0x40008ac	          0x4585ed	                         test r13d, r13d	      2673	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12
0x40008af	     0xf8498000000	                            je 0x400094d	      2673	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12
0x40008b5	        0x4183fe22	                          cmp r14d, 0x22	      2675	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	IF_13
0x40008b9	            0x7537	                           jne 0x40008f2	      2675	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	IF_13
0x40008bb	            0xeb13	                           jmp 0x40008d0	      2675	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	IF_13
0x40008bd	          0x83f85c	                           cmp eax, 0x5c	      2678	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	IF_13	WHILE_2	IF_14
0x40008c0	            0x750e	                           jne 0x40008d0	      2678	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	IF_13	WHILE_2	IF_14
0x40008c2	        0x807a0200	                   cmp byte [rdx + 2], 0	      2678	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	IF_13	WHILE_2	IF_14
0x40008c6	            0x7408	                            je 0x40008d0	      2678	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	IF_13	WHILE_2	IF_14
0x40008c8	        0x4883c202	                              add rdx, 2	      2679	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	IF_13	WHILE_2	IF_14
0x40008cc	        0x48895508	                mov qword [rbp + 8], rdx	      2679	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	IF_13	WHILE_2	IF_14
0x40008d0	        0x488b5508	                mov rdx, qword [rbp + 8]	      2677	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	IF_13	WHILE_2
0x40008d4	        0x488d4201	                      lea rax, [rdx + 1]	      2677	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	IF_13	WHILE_2
0x40008d8	        0x48894508	                mov qword [rbp + 8], rax	      2677	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	IF_13	WHILE_2
0x40008dc	         0xfb64201	               movzx eax, byte [rdx + 1]	      2677	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	IF_13	WHILE_2
0x40008e0	            0x85c0	                           test eax, eax	      2677	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	IF_13	WHILE_2
0x40008e2	            0x7405	                            je 0x40008e9	      2677	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	IF_13	WHILE_2
0x40008e4	          0x83f822	                           cmp eax, 0x22	      2677	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	IF_13	WHILE_2
0x40008e7	            0x75d4	                           jne 0x40008bd	      2677	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	IF_13	WHILE_2
0x40008e9	    0xc74500000000	                      mov dword [rbp], 0	      2680	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	IF_13
0x40008f0	            0xeb62	                           jmp 0x4000954	      2680	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	IF_13
0x40008f2	        0x4183fe27	                          cmp r14d, 0x27	      2682	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_8	IF_15
0x40008f6	            0x7522	                           jne 0x400091a	      2682	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_8	IF_15
0x40008f8	        0x488b4508	                mov rax, qword [rbp + 8]	      2685	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_8	IF_15	WHILE_3
0x40008fc	        0x488d5001	                      lea rdx, [rax + 1]	      2685	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_8	IF_15	WHILE_3
0x4000900	        0x48895508	                mov qword [rbp + 8], rdx	      2685	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_8	IF_15	WHILE_3
0x4000904	         0xfb64001	               movzx eax, byte [rax + 1]	      2685	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_8	IF_15	WHILE_3
0x4000908	          0x83f827	                           cmp eax, 0x27	      2685	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_8	IF_15	WHILE_3
0x400090b	            0x7404	                            je 0x4000911	      2685	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_8	IF_15	WHILE_3
0x400090d	            0x85c0	                           test eax, eax	      2685	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_8	IF_15	WHILE_3
0x400090f	            0x75e7	                           jne 0x40008f8	      2685	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_8	IF_15	WHILE_3
0x4000911	    0xc74500000000	                      mov dword [rbp], 0	      2687	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_8	IF_15
0x4000918	            0xeb3a	                           jmp 0x4000954	      2687	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_8	IF_15
0x400091a	        0x4183fe7c	                          cmp r14d, 0x7c	      2689	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_9	IF_16
0x400091e	            0x7524	                           jne 0x4000944	      2689	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_9	IF_16
0x4000920	        0x488b4508	                mov rax, qword [rbp + 8]	      2691	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_9	IF_16	IF_17
0x4000924	        0x8078017c	                cmp byte [rax + 1], 0x7c	      2691	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_9	IF_16	IF_17
0x4000928	            0x7511	                           jne 0x400093b	      2691	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_9	IF_16	IF_17
0x400092a	        0x4883c001	                              add rax, 1	      2693	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_9	IF_16	IF_17
0x400092e	        0x48894508	                mov qword [rbp + 8], rax	      2693	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_9	IF_16	IF_17
0x4000932	    0xc74500140000	                   mov dword [rbp], 0x14	      2694	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_9	IF_16	IF_17
0x4000939	            0xeb19	                           jmp 0x4000954	      2694	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_9	IF_16	IF_17
0x400093b	    0xc74500010000	                      mov dword [rbp], 1	      2697	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_9	IF_16	ELSE_10
0x4000942	            0xeb10	                           jmp 0x4000954	      2697	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_9	IF_16	ELSE_10
0x4000944	    0xc74500140000	                   mov dword [rbp], 0x14	      2700	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_11
0x400094b	            0xeb07	                           jmp 0x4000954	      2700	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_11
0x400094d	    0xc74500140000	                   mov dword [rbp], 0x14	      2705	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_12
0x4000954	        0x488b5d08	                mov rbx, qword [rbp + 8]	      2706	eval.c	FUNCTION_51	ELSE_1	WHILE_1
0x4000958	          0x803b00	                       cmp byte [rbx], 0	      2707	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_18
0x400095b	            0x741a	                            je 0x4000977	      2707	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_18
0x400095d	            0xeb03	                           jmp 0x4000962	      2707	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_18
0x400095f	          0x4889c3	                            mov rbx, rax	      2706	eval.c	FUNCTION_51	ELSE_1	WHILE_1
0x4000962	        0x4883c301	                              add rbx, 1	      2708	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_18	WHILE_4
0x4000966	           0xfb603	                   movzx eax, byte [rbx]	      2708	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_18	WHILE_4
0x4000969	            0x85c0	                           test eax, eax	      2708	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_18	WHILE_4
0x400096b	            0x740a	                            je 0x4000977	      2708	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_18	WHILE_4
0x400096d	          0x83f820	                           cmp eax, 0x20	      2708	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_18	WHILE_4
0x4000970	            0x74f0	                            je 0x4000962	      2708	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_18	WHILE_4
0x4000972	          0x83f809	                              cmp eax, 9	      2708	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_18	WHILE_4
0x4000975	            0x74eb	                            je 0x4000962	      2708	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_18	WHILE_4
0x4000977	      0xbe00000000	                              mov esi, 0	      2629	eval.c	FUNCTION_51	ELSE_1	WHILE_1	CALL_5
0x400097c	          0x4889df	                            mov rdi, rbx	      2629	eval.c	FUNCTION_51	ELSE_1	WHILE_1	CALL_5
0x400097f	      0xe800000000	                          call 0x4000984	      2629	eval.c	FUNCTION_51	ELSE_1	WHILE_1	CALL_5
0x4000984	        0x48894508	                mov qword [rbp + 8], rax	      2629	eval.c	FUNCTION_51	ELSE_1	WHILE_1	CALL_5
0x4000988	          0x4885c0	                           test rax, rax	      2629	eval.c	FUNCTION_51	ELSE_1	WHILE_1	CALL_5
0x400098b	     0xf8545feffff	                           jne 0x40007d6	      2629	eval.c	FUNCTION_51	ELSE_1	WHILE_1	CALL_5
0x4000991	        0x48895d08	                mov qword [rbp + 8], rbx	      2711	eval.c	FUNCTION_51
0x4000995	              0x5b	                                 pop rbx	      2712	eval.c	FUNCTION_51
0x4000996	              0x5d	                                 pop rbp	      2712	eval.c	FUNCTION_51
0x4000997	            0x415c	                                 pop r12	      2712	eval.c	FUNCTION_51
0x4000999	            0x415d	                                 pop r13	      2712	eval.c	FUNCTION_51
0x400099b	            0x415e	                                 pop r14	      2712	eval.c	FUNCTION_51
0x400099d	              0xc3	                                     ret	      2712	eval.c	FUNCTION_51
set_ref_in_list	FOR,2:SWITCH,0:DO,0:IF,2:functions,0:WHILE,0:CALL,2:ELSE,0	55
0x40016d6	            0x4155	                                push r13	      5314	eval.c	FUNCTION_84
0x40016d8	            0x4154	                                push r12	      5314	eval.c	FUNCTION_84
0x40016da	              0x55	                                push rbp	      5314	eval.c	FUNCTION_84
0x40016db	              0x53	                                push rbx	      5314	eval.c	FUNCTION_84
0x40016dc	        0x4883ec18	                           sub rsp, 0x18	      5314	eval.c	FUNCTION_84
0x40016e0	          0x4889fb	                            mov rbx, rdi	      5314	eval.c	FUNCTION_84
0x40016e3	          0x4189f5	                           mov r13d, esi	      5314	eval.c	FUNCTION_84
0x40016e6	          0x4989d4	                            mov r12, rdx	      5314	eval.c	FUNCTION_84
0x40016e9	    0x64488b042528	                mov rax, qword fs:[0x28]	      5314	eval.c	FUNCTION_84
0x40016f2	      0x4889442408	                mov qword [rsp + 8], rax	      5314	eval.c	FUNCTION_84
0x40016f7	            0x31c0	                            xor eax, eax	      5314	eval.c	FUNCTION_84
0x40016f9	    0x48c704240000	                      mov qword [rsp], 0	      5318	eval.c	FUNCTION_84
0x4001701	      0xbd00000000	                              mov ebp, 0	      5316	eval.c	FUNCTION_84
0x4001706	            0x85ed	                           test ebp, ebp	      5324	eval.c	FUNCTION_84	FOR_1	IF_1
0x4001708	            0x753d	                           jne 0x4001747	      5324	eval.c	FUNCTION_84	FOR_1	IF_1
0x400170a	          0x488b1b	                    mov rbx, qword [rbx]	      5328	eval.c	FUNCTION_84	FOR_1	IF_1	FOR_2
0x400170d	          0x4885db	                           test rbx, rbx	      5328	eval.c	FUNCTION_84	FOR_1	IF_1	FOR_2
0x4001710	            0x7506	                           jne 0x4001718	      5328	eval.c	FUNCTION_84	FOR_1	IF_1	FOR_2
0x4001712	            0xeb33	                           jmp 0x4001747	      5328	eval.c	FUNCTION_84	FOR_1	IF_1	FOR_2
0x4001714	            0x85c0	                           test eax, eax	      5329	eval.c	FUNCTION_84	FOR_1	IF_1	FOR_2	CALL_1
0x4001716	            0x752a	                           jne 0x4001742	      5329	eval.c	FUNCTION_84	FOR_1	IF_1	FOR_2	CALL_1
0x4001718	        0x488d7b10	                   lea rdi, [rbx + 0x10]	      5329	eval.c	FUNCTION_84	FOR_1	IF_1	FOR_2	CALL_1
0x400171c	          0x4889e1	                            mov rcx, rsp	      5329	eval.c	FUNCTION_84	FOR_1	IF_1	FOR_2	CALL_1
0x400171f	          0x4c89e2	                            mov rdx, r12	      5329	eval.c	FUNCTION_84	FOR_1	IF_1	FOR_2	CALL_1
0x4001722	          0x4489ee	                           mov esi, r13d	      5329	eval.c	FUNCTION_84	FOR_1	IF_1	FOR_2	CALL_1
0x4001725	      0xe800000000	                          call 0x400172a	      5329	eval.c	FUNCTION_84	FOR_1	IF_1	FOR_2	CALL_1
0x400172a	          0x488b1b	                    mov rbx, qword [rbx]	      5328	eval.c	FUNCTION_84	FOR_1	IF_1	FOR_2
0x400172d	            0x85c0	                           test eax, eax	      5328	eval.c	FUNCTION_84	FOR_1	IF_1	FOR_2
0x400172f	            0x7505	                           jne 0x4001736	      5328	eval.c	FUNCTION_84	FOR_1	IF_1	FOR_2
0x4001731	          0x4885db	                           test rbx, rbx	      5328	eval.c	FUNCTION_84	FOR_1	IF_1	FOR_2
0x4001734	            0x75de	                           jne 0x4001714	      5328	eval.c	FUNCTION_84	FOR_1	IF_1	FOR_2
0x4001736	            0x85c0	                           test eax, eax	      5329	eval.c	FUNCTION_84	FOR_1	IF_1	FOR_2	CALL_1
0x4001738	        0x400f95c5	                               setne bpl	      5329	eval.c	FUNCTION_84	FOR_1	IF_1	FOR_2	CALL_1
0x400173c	        0x400fb6ed	                          movzx ebp, bpl	      5329	eval.c	FUNCTION_84	FOR_1	IF_1	FOR_2	CALL_1
0x4001740	            0xeb05	                           jmp 0x4001747	      5329	eval.c	FUNCTION_84	FOR_1	IF_1	FOR_2	CALL_1
0x4001742	      0xbd01000000	                              mov ebp, 1	      5329	eval.c	FUNCTION_84	FOR_1	IF_1	FOR_2	CALL_1
0x4001747	        0x488b3c24	                    mov rdi, qword [rsp]	      5331	eval.c	FUNCTION_84	FOR_1	IF_2
0x400174b	          0x4885ff	                           test rdi, rdi	      5331	eval.c	FUNCTION_84	FOR_1	IF_2
0x400174e	            0x7412	                            je 0x4001762	      5331	eval.c	FUNCTION_84	FOR_1	IF_2
0x4001750	          0x488b1f	                    mov rbx, qword [rdi]	      5335	eval.c	FUNCTION_84	FOR_1
0x4001753	        0x488b4708	                mov rax, qword [rdi + 8]	      5337	eval.c	FUNCTION_84	FOR_1
0x4001757	        0x48890424	                    mov qword [rsp], rax	      5337	eval.c	FUNCTION_84	FOR_1
0x400175b	      0xe800000000	                          call 0x4001760	      5338	eval.c	FUNCTION_84	FOR_1	CALL_2
0x4001760	            0xeba4	                           jmp 0x4001706	      5339	eval.c	FUNCTION_84	FOR_1
0x4001762	            0x89e8	                            mov eax, ebp	      5342	eval.c	FUNCTION_84
0x4001764	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      5342	eval.c	FUNCTION_84
0x4001769	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      5342	eval.c	FUNCTION_84
0x4001772	            0x7405	                            je 0x4001779	      5342	eval.c	FUNCTION_84
0x4001774	      0xe800000000	                          call 0x4001779	      5342	eval.c	FUNCTION_84
0x4001779	        0x4883c418	                           add rsp, 0x18	      5342	eval.c	FUNCTION_84
0x400177d	              0x5b	                                 pop rbx	      5342	eval.c	FUNCTION_84
0x400177e	              0x5d	                                 pop rbp	      5342	eval.c	FUNCTION_84
0x400177f	            0x415c	                                 pop r12	      5342	eval.c	FUNCTION_84
0x4001781	            0x415d	                                 pop r13	      5342	eval.c	FUNCTION_84
0x4001783	              0xc3	                                     ret	      5342	eval.c	FUNCTION_84
call_func_retnr	FOR,0:SWITCH,0:DO,0:IF,1:functions,0:WHILE,0:CALL,3:ELSE,0	26
0x4002b84	              0x53	                                push rbx	      1105	eval.c	FUNCTION_27
0x4002b85	        0x4883ec20	                           sub rsp, 0x20	      1105	eval.c	FUNCTION_27
0x4002b89	    0x64488b042528	                mov rax, qword fs:[0x28]	      1105	eval.c	FUNCTION_27
0x4002b92	      0x4889442418	             mov qword [rsp + 0x18], rax	      1105	eval.c	FUNCTION_27
0x4002b97	            0x31c0	                            xor eax, eax	      1105	eval.c	FUNCTION_27
0x4002b99	          0x4989e1	                             mov r9, rsp	      1110	eval.c	FUNCTION_27	IF_1	CALL_1
0x4002b9c	    0x41b801000000	                              mov r8d, 1	      1110	eval.c	FUNCTION_27	IF_1	CALL_1
0x4002ba2	      0xe800000000	                          call 0x4002ba7	      1110	eval.c	FUNCTION_27	IF_1	CALL_1
0x4002ba7	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	      1111	eval.c	FUNCTION_27	IF_1
0x4002bae	            0x85c0	                           test eax, eax	      1110	eval.c	FUNCTION_27	IF_1	CALL_1
0x4002bb0	            0x741b	                            je 0x4002bcd	      1110	eval.c	FUNCTION_27	IF_1	CALL_1
0x4002bb2	      0xbe00000000	                              mov esi, 0	      1113	eval.c	FUNCTION_27	CALL_2
0x4002bb7	          0x4889e7	                            mov rdi, rsp	      1113	eval.c	FUNCTION_27	CALL_2
0x4002bba	      0xe800000000	                          call 0x4002bbf	      1113	eval.c	FUNCTION_27	CALL_2
0x4002bbf	          0x4889c3	                            mov rbx, rax	      1113	eval.c	FUNCTION_27	CALL_2
0x4002bc2	          0x4889e7	                            mov rdi, rsp	      1114	eval.c	FUNCTION_27	CALL_3
0x4002bc5	      0xe800000000	                          call 0x4002bca	      1114	eval.c	FUNCTION_27	CALL_3
0x4002bca	          0x4889da	                            mov rdx, rbx	      1115	eval.c	FUNCTION_27
0x4002bcd	          0x4889d0	                            mov rax, rdx	      1116	eval.c	FUNCTION_27
0x4002bd0	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	      1116	eval.c	FUNCTION_27
0x4002bd5	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1116	eval.c	FUNCTION_27
0x4002bde	            0x7405	                            je 0x4002be5	      1116	eval.c	FUNCTION_27
0x4002be0	      0xe800000000	                          call 0x4002be5	      1116	eval.c	FUNCTION_27
0x4002be5	        0x4883c420	                           add rsp, 0x20	      1116	eval.c	FUNCTION_27
0x4002be9	              0x5b	                                 pop rbx	      1116	eval.c	FUNCTION_27
0x4002bea	              0xc3	                                     ret	      1116	eval.c	FUNCTION_27
garbage_collect	FOR,1:SWITCH,0:DO,0:IF,4:functions,0:WHILE,0:CALL,29:ELSE,1	256
0x400133a	            0x4155	                                push r13	      5084	eval.c	FUNCTION_81
0x400133c	            0x4154	                                push r12	      5084	eval.c	FUNCTION_81
0x400133e	              0x55	                                push rbp	      5084	eval.c	FUNCTION_81
0x400133f	              0x53	                                push rbx	      5084	eval.c	FUNCTION_81
0x4001340	        0x4883ec08	                              sub rsp, 8	      5084	eval.c	FUNCTION_81
0x4001344	          0x4189fd	                           mov r13d, edi	      5084	eval.c	FUNCTION_81
0x4001347	            0x85ff	                           test edi, edi	      5093	eval.c	FUNCTION_81	IF_1
0x4001349	            0x751e	                           jne 0x4001369	      5093	eval.c	FUNCTION_81	IF_1
0x400134b	    0xc70500000000	               mov dword [0x04001355], 0	      5096	eval.c	FUNCTION_81	IF_1
0x4001355	    0xc70500000000	               mov dword [0x0400135f], 0	      5097	eval.c	FUNCTION_81	IF_1
0x400135f	    0xc70500000000	               mov dword [0x04001369], 0	      5098	eval.c	FUNCTION_81	IF_1
0x4001369	      0xe800000000	                          call 0x400136e	      5103	eval.c	FUNCTION_81	CALL_1
0x400136e	          0x4189c4	                           mov r12d, eax	      5103	eval.c	FUNCTION_81	CALL_1
0x4001371	            0x89c7	                            mov edi, eax	      5113	eval.c	FUNCTION_81	CALL_2
0x4001373	      0xe800000000	                          call 0x4001378	      5113	eval.c	FUNCTION_81	CALL_2
0x4001378	            0x85c0	                           test eax, eax	      5113	eval.c	FUNCTION_81	CALL_2
0x400137a	           0xf95c0	                                setne al	      5113	eval.c	FUNCTION_81	CALL_2
0x400137d	           0xfb6c0	                           movzx eax, al	      5113	eval.c	FUNCTION_81	CALL_2
0x4001380	    0x833d00000000	               cmp dword [0x04001387], 0	      5116	eval.c	FUNCTION_81	FOR_1
0x4001387	            0x7e43	                           jle 0x40013cc	      5116	eval.c	FUNCTION_81	FOR_1
0x4001389	      0xbb01000000	                              mov ebx, 1	      5116	eval.c	FUNCTION_81	FOR_1
0x400138e	            0x85c0	                           test eax, eax	      5117	eval.c	FUNCTION_81	CALL_4
0x4001390	            0x752a	                           jne 0x40013bc	      5117	eval.c	FUNCTION_81	CALL_4
0x4001392	          0x4863c3	                         movsxd rax, ebx	      5117	eval.c	FUNCTION_81	CALL_4
0x4001395	    0x488b15000000	            mov rdx, qword [0x0400139c] 	      5117	eval.c	FUNCTION_81	CALL_4
0x400139c	      0x488b7cc2f8	        mov rdi, qword [rdx + rax*8 - 8]	      5117	eval.c	FUNCTION_81	CALL_4
0x40013a1	        0x4883c728	                           add rdi, 0x28	      5117	eval.c	FUNCTION_81	CALL_4
0x40013a5	      0xba00000000	                              mov edx, 0	      5117	eval.c	FUNCTION_81	CALL_4
0x40013aa	          0x4489e6	                           mov esi, r12d	      5117	eval.c	FUNCTION_81	CALL_4
0x40013ad	      0xe800000000	                          call 0x40013b2	      5117	eval.c	FUNCTION_81	CALL_4
0x40013b2	            0x85c0	                           test eax, eax	      5117	eval.c	FUNCTION_81	CALL_4
0x40013b4	           0xf95c0	                                setne al	      5117	eval.c	FUNCTION_81	CALL_4
0x40013b7	           0xfb6c0	                           movzx eax, al	      5117	eval.c	FUNCTION_81	CALL_4
0x40013ba	            0xeb05	                           jmp 0x40013c1	      5117	eval.c	FUNCTION_81	CALL_4
0x40013bc	      0xb801000000	                              mov eax, 1	      5117	eval.c	FUNCTION_81	CALL_4
0x40013c1	          0x83c301	                              add ebx, 1	      5116	eval.c	FUNCTION_81	FOR_1
0x40013c4	    0x391d00000000	            cmp dword [0x040013ca], ebx 	      5116	eval.c	FUNCTION_81	FOR_1
0x40013ca	            0x7dc2	                           jge 0x400138e	      5116	eval.c	FUNCTION_81	FOR_1
0x40013cc	    0x488b1d000000	            mov rbx, qword [0x040013d3] 	      5120	eval.c	FUNCTION_81	CALL_5
0x40013d3	          0x4885db	                           test rbx, rbx	      5120	eval.c	FUNCTION_81	CALL_5
0x40013d6	            0x7435	                            je 0x400140d	      5120	eval.c	FUNCTION_81	CALL_5
0x40013d8	            0x85c0	                           test eax, eax	      5121	eval.c	FUNCTION_81	CALL_6
0x40013da	            0x7523	                           jne 0x40013ff	      5121	eval.c	FUNCTION_81	CALL_6
0x40013dc	    0x488dbb181700	                 lea rdi, [rbx + 0x1718]	      5121	eval.c	FUNCTION_81	CALL_6
0x40013e3	      0xb900000000	                              mov ecx, 0	      5121	eval.c	FUNCTION_81	CALL_6
0x40013e8	      0xba00000000	                              mov edx, 0	      5121	eval.c	FUNCTION_81	CALL_6
0x40013ed	          0x4489e6	                           mov esi, r12d	      5121	eval.c	FUNCTION_81	CALL_6
0x40013f0	      0xe800000000	                          call 0x40013f5	      5121	eval.c	FUNCTION_81	CALL_6
0x40013f5	            0x85c0	                           test eax, eax	      5121	eval.c	FUNCTION_81	CALL_6
0x40013f7	           0xf95c0	                                setne al	      5121	eval.c	FUNCTION_81	CALL_6
0x40013fa	           0xfb6c0	                           movzx eax, al	      5121	eval.c	FUNCTION_81	CALL_6
0x40013fd	            0xeb05	                           jmp 0x4001404	      5121	eval.c	FUNCTION_81	CALL_6
0x40013ff	      0xb801000000	                              mov eax, 1	      5121	eval.c	FUNCTION_81	CALL_6
0x4001404	        0x488b5b68	            mov rbx, qword [rbx + 0x68] 	      5120	eval.c	FUNCTION_81	CALL_5
0x4001408	          0x4885db	                           test rbx, rbx	      5120	eval.c	FUNCTION_81	CALL_5
0x400140b	            0x75cb	                           jne 0x40013d8	      5120	eval.c	FUNCTION_81	CALL_5
0x400140d	    0x488b2d000000	            mov rbp, qword [0x04001414] 	      5125	eval.c	FUNCTION_81	CALL_7
0x4001414	          0x4885ed	                           test rbp, rbp	      5125	eval.c	FUNCTION_81	CALL_7
0x4001417	     0xf8497020000	                            je 0x40016b4	      5125	eval.c	FUNCTION_81	CALL_7
0x400141d	    0x48392d000000	            cmp qword [0x04001424], rbp 	      5125	eval.c	FUNCTION_81	CALL_7
0x4001424	            0x7406	                            je 0x400142c	      5125	eval.c	FUNCTION_81	CALL_7
0x4001426	        0x488b5d20	            mov rbx, qword [rbp + 0x20] 	      5125	eval.c	FUNCTION_81	CALL_7
0x400142a	            0xeb07	                           jmp 0x4001433	      5125	eval.c	FUNCTION_81	CALL_7
0x400142c	    0x488b1d000000	            mov rbx, qword [0x04001433] 	      5125	eval.c	FUNCTION_81	CALL_7
0x4001433	          0x4885db	                           test rbx, rbx	      5125	eval.c	FUNCTION_81	CALL_7
0x4001436	            0x7435	                            je 0x400146d	      5125	eval.c	FUNCTION_81	CALL_7
0x4001438	            0x85c0	                           test eax, eax	      5126	eval.c	FUNCTION_81	CALL_8
0x400143a	            0x7523	                           jne 0x400145f	      5126	eval.c	FUNCTION_81	CALL_8
0x400143c	    0x488dbb580500	                  lea rdi, [rbx + 0x558]	      5126	eval.c	FUNCTION_81	CALL_8
0x4001443	      0xb900000000	                              mov ecx, 0	      5126	eval.c	FUNCTION_81	CALL_8
0x4001448	      0xba00000000	                              mov edx, 0	      5126	eval.c	FUNCTION_81	CALL_8
0x400144d	          0x4489e6	                           mov esi, r12d	      5126	eval.c	FUNCTION_81	CALL_8
0x4001450	      0xe800000000	                          call 0x4001455	      5126	eval.c	FUNCTION_81	CALL_8
0x4001455	            0x85c0	                           test eax, eax	      5126	eval.c	FUNCTION_81	CALL_8
0x4001457	           0xf95c0	                                setne al	      5126	eval.c	FUNCTION_81	CALL_8
0x400145a	           0xfb6c0	                           movzx eax, al	      5126	eval.c	FUNCTION_81	CALL_8
0x400145d	            0xeb05	                           jmp 0x4001464	      5126	eval.c	FUNCTION_81	CALL_8
0x400145f	      0xb801000000	                              mov eax, 1	      5126	eval.c	FUNCTION_81	CALL_8
0x4001464	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      5125	eval.c	FUNCTION_81	CALL_7
0x4001468	          0x4885db	                           test rbx, rbx	      5125	eval.c	FUNCTION_81	CALL_7
0x400146b	            0x75cb	                           jne 0x4001438	      5125	eval.c	FUNCTION_81	CALL_7
0x400146d	        0x488b6d00	                    mov rbp, qword [rbp]	      5125	eval.c	FUNCTION_81	CALL_7
0x4001471	          0x4885ed	                           test rbp, rbp	      5125	eval.c	FUNCTION_81	CALL_7
0x4001474	            0x75a7	                           jne 0x400141d	      5125	eval.c	FUNCTION_81	CALL_7
0x4001476	    0x488b15000000	            mov rdx, qword [0x0400147d] 	      5128	eval.c	FUNCTION_81	IF_2
0x400147d	          0x4885d2	                           test rdx, rdx	      5128	eval.c	FUNCTION_81	IF_2
0x4001480	            0x742c	                            je 0x40014ae	      5128	eval.c	FUNCTION_81	IF_2
0x4001482	            0x85c0	                           test eax, eax	      5129	eval.c	FUNCTION_81	IF_2	CALL_9
0x4001484	            0x7523	                           jne 0x40014a9	      5129	eval.c	FUNCTION_81	IF_2	CALL_9
0x4001486	    0x488dba580500	                  lea rdi, [rdx + 0x558]	      5129	eval.c	FUNCTION_81	IF_2	CALL_9
0x400148d	      0xb900000000	                              mov ecx, 0	      5129	eval.c	FUNCTION_81	IF_2	CALL_9
0x4001492	      0xba00000000	                              mov edx, 0	      5129	eval.c	FUNCTION_81	IF_2	CALL_9
0x4001497	          0x4489e6	                           mov esi, r12d	      5129	eval.c	FUNCTION_81	IF_2	CALL_9
0x400149a	      0xe800000000	                          call 0x400149f	      5129	eval.c	FUNCTION_81	IF_2	CALL_9
0x400149f	            0x85c0	                           test eax, eax	      5129	eval.c	FUNCTION_81	IF_2	CALL_9
0x40014a1	           0xf95c0	                                setne al	      5129	eval.c	FUNCTION_81	IF_2	CALL_9
0x40014a4	           0xfb6c0	                           movzx eax, al	      5129	eval.c	FUNCTION_81	IF_2	CALL_9
0x40014a7	            0xeb05	                           jmp 0x40014ae	      5129	eval.c	FUNCTION_81	IF_2	CALL_9
0x40014a9	      0xb801000000	                              mov eax, 1	      5129	eval.c	FUNCTION_81	IF_2	CALL_9
0x40014ae	    0x488b1d000000	            mov rbx, qword [0x040014b5] 	      5133	eval.c	FUNCTION_81	CALL_10
0x40014b5	          0x4885db	                           test rbx, rbx	      5133	eval.c	FUNCTION_81	CALL_10
0x40014b8	            0x7434	                            je 0x40014ee	      5133	eval.c	FUNCTION_81	CALL_10
0x40014ba	            0x85c0	                           test eax, eax	      5134	eval.c	FUNCTION_81	CALL_11
0x40014bc	            0x7523	                           jne 0x40014e1	      5134	eval.c	FUNCTION_81	CALL_11
0x40014be	    0x488dbbb80000	                   lea rdi, [rbx + 0xb8]	      5134	eval.c	FUNCTION_81	CALL_11
0x40014c5	      0xb900000000	                              mov ecx, 0	      5134	eval.c	FUNCTION_81	CALL_11
0x40014ca	      0xba00000000	                              mov edx, 0	      5134	eval.c	FUNCTION_81	CALL_11
0x40014cf	          0x4489e6	                           mov esi, r12d	      5134	eval.c	FUNCTION_81	CALL_11
0x40014d2	      0xe800000000	                          call 0x40014d7	      5134	eval.c	FUNCTION_81	CALL_11
0x40014d7	            0x85c0	                           test eax, eax	      5134	eval.c	FUNCTION_81	CALL_11
0x40014d9	           0xf95c0	                                setne al	      5134	eval.c	FUNCTION_81	CALL_11
0x40014dc	           0xfb6c0	                           movzx eax, al	      5134	eval.c	FUNCTION_81	CALL_11
0x40014df	            0xeb05	                           jmp 0x40014e6	      5134	eval.c	FUNCTION_81	CALL_11
0x40014e1	      0xb801000000	                              mov eax, 1	      5134	eval.c	FUNCTION_81	CALL_11
0x40014e6	          0x488b1b	                    mov rbx, qword [rbx]	      5133	eval.c	FUNCTION_81	CALL_10
0x40014e9	          0x4885db	                           test rbx, rbx	      5133	eval.c	FUNCTION_81	CALL_10
0x40014ec	            0x75cc	                           jne 0x40014ba	      5133	eval.c	FUNCTION_81	CALL_10
0x40014ee	      0xba01000000	                              mov edx, 1	      5146	eval.c	FUNCTION_81	CALL_15
0x40014f3	            0x85c0	                           test eax, eax	      5137	eval.c	FUNCTION_81	CALL_12
0x40014f5	            0x753e	                           jne 0x4001535	      5137	eval.c	FUNCTION_81	CALL_12
0x40014f7	      0xba00000000	                              mov edx, 0	      5137	eval.c	FUNCTION_81	CALL_12
0x40014fc	          0x4489e6	                           mov esi, r12d	      5137	eval.c	FUNCTION_81	CALL_12
0x40014ff	      0xbf00000000	                              mov edi, 0	      5137	eval.c	FUNCTION_81	CALL_12
0x4001504	      0xe800000000	                          call 0x4001509	      5137	eval.c	FUNCTION_81	CALL_12
0x4001509	            0x85c0	                           test eax, eax	      5140	eval.c	FUNCTION_81	CALL_13
0x400150b	            0x754d	                           jne 0x400155a	      5140	eval.c	FUNCTION_81	CALL_13
0x400150d	          0x4489e7	                           mov edi, r12d	      5140	eval.c	FUNCTION_81	CALL_13
0x4001510	      0xe800000000	                          call 0x4001515	      5140	eval.c	FUNCTION_81	CALL_13
0x4001515	            0x85c0	                           test eax, eax	      5143	eval.c	FUNCTION_81	CALL_14
0x4001517	            0x755c	                           jne 0x4001575	      5143	eval.c	FUNCTION_81	CALL_14
0x4001519	          0x4489e7	                           mov edi, r12d	      5143	eval.c	FUNCTION_81	CALL_14
0x400151c	      0xe800000000	                          call 0x4001521	      5143	eval.c	FUNCTION_81	CALL_14
0x4001521	            0x85c0	                           test eax, eax	      5146	eval.c	FUNCTION_81	CALL_15
0x4001523	            0x756b	                           jne 0x4001590	      5146	eval.c	FUNCTION_81	CALL_15
0x4001525	          0x4489e7	                           mov edi, r12d	      5146	eval.c	FUNCTION_81	CALL_15
0x4001528	      0xe800000000	                          call 0x400152d	      5146	eval.c	FUNCTION_81	CALL_15
0x400152d	            0x85c0	                           test eax, eax	      5146	eval.c	FUNCTION_81	CALL_15
0x400152f	           0xf95c2	                                setne dl	      5146	eval.c	FUNCTION_81	CALL_15
0x4001532	           0xfb6d2	                           movzx edx, dl	      5146	eval.c	FUNCTION_81	CALL_15
0x4001535	      0xb801000000	                              mov eax, 1	      5168	eval.c	FUNCTION_81	CALL_22
0x400153a	            0x85d2	                           test edx, edx	      5149	eval.c	FUNCTION_81	CALL_16
0x400153c	            0x756b	                           jne 0x40015a9	      5149	eval.c	FUNCTION_81	CALL_16
0x400153e	      0xba00000000	                              mov edx, 0	      5149	eval.c	FUNCTION_81	CALL_16
0x4001543	          0x4489e6	                           mov esi, r12d	      5149	eval.c	FUNCTION_81	CALL_16
0x4001546	      0xbf00000000	                              mov edi, 0	      5149	eval.c	FUNCTION_81	CALL_16
0x400154b	      0xe800000000	                          call 0x4001550	      5149	eval.c	FUNCTION_81	CALL_16
0x4001550	            0x85c0	                           test eax, eax	      5149	eval.c	FUNCTION_81	CALL_16
0x4001552	           0xf95c0	                                setne al	      5149	eval.c	FUNCTION_81	CALL_16
0x4001555	           0xfb6c0	                           movzx eax, al	      5149	eval.c	FUNCTION_81	CALL_16
0x4001558	            0xeb05	                           jmp 0x400155f	      5149	eval.c	FUNCTION_81	CALL_16
0x400155a	      0xb801000000	                              mov eax, 1	      5149	eval.c	FUNCTION_81	CALL_16
0x400155f	            0x85c0	                           test eax, eax	      5164	eval.c	FUNCTION_81	CALL_20
0x4001561	            0x7560	                           jne 0x40015c3	      5164	eval.c	FUNCTION_81	CALL_20
0x4001563	          0x4489e7	                           mov edi, r12d	      5164	eval.c	FUNCTION_81	CALL_20
0x4001566	      0xe800000000	                          call 0x400156b	      5164	eval.c	FUNCTION_81	CALL_20
0x400156b	            0x85c0	                           test eax, eax	      5164	eval.c	FUNCTION_81	CALL_20
0x400156d	           0xf95c0	                                setne al	      5164	eval.c	FUNCTION_81	CALL_20
0x4001570	           0xfb6c0	                           movzx eax, al	      5164	eval.c	FUNCTION_81	CALL_20
0x4001573	            0xeb05	                           jmp 0x400157a	      5164	eval.c	FUNCTION_81	CALL_20
0x4001575	      0xb801000000	                              mov eax, 1	      5164	eval.c	FUNCTION_81	CALL_20
0x400157a	            0x85c0	                           test eax, eax	      5165	eval.c	FUNCTION_81	CALL_21
0x400157c	            0x7564	                           jne 0x40015e2	      5165	eval.c	FUNCTION_81	CALL_21
0x400157e	          0x4489e7	                           mov edi, r12d	      5165	eval.c	FUNCTION_81	CALL_21
0x4001581	      0xe800000000	                          call 0x4001586	      5165	eval.c	FUNCTION_81	CALL_21
0x4001586	            0x85c0	                           test eax, eax	      5165	eval.c	FUNCTION_81	CALL_21
0x4001588	           0xf95c0	                                setne al	      5165	eval.c	FUNCTION_81	CALL_21
0x400158b	           0xfb6c0	                           movzx eax, al	      5165	eval.c	FUNCTION_81	CALL_21
0x400158e	            0xeb05	                           jmp 0x4001595	      5165	eval.c	FUNCTION_81	CALL_21
0x4001590	      0xb801000000	                              mov eax, 1	      5165	eval.c	FUNCTION_81	CALL_21
0x4001595	            0x85c0	                           test eax, eax	      5168	eval.c	FUNCTION_81	CALL_22
0x4001597	            0x7568	                           jne 0x4001601	      5168	eval.c	FUNCTION_81	CALL_22
0x4001599	          0x4489e7	                           mov edi, r12d	      5168	eval.c	FUNCTION_81	CALL_22
0x400159c	      0xe800000000	                          call 0x40015a1	      5168	eval.c	FUNCTION_81	CALL_22
0x40015a1	            0x85c0	                           test eax, eax	      5168	eval.c	FUNCTION_81	CALL_22
0x40015a3	           0xf95c0	                                setne al	      5168	eval.c	FUNCTION_81	CALL_22
0x40015a6	           0xfb6c0	                           movzx eax, al	      5168	eval.c	FUNCTION_81	CALL_22
0x40015a9	            0x85c0	                           test eax, eax	      5172	eval.c	FUNCTION_81	CALL_23
0x40015ab	     0xf85d6000000	                           jne 0x4001687	      5172	eval.c	FUNCTION_81	CALL_23
0x40015b1	          0x4489e7	                           mov edi, r12d	      5172	eval.c	FUNCTION_81	CALL_23
0x40015b4	      0xe800000000	                          call 0x40015b9	      5172	eval.c	FUNCTION_81	CALL_23
0x40015b9	            0x85c0	                           test eax, eax	      5172	eval.c	FUNCTION_81	CALL_23
0x40015bb	           0xf95c0	                                setne al	      5172	eval.c	FUNCTION_81	CALL_23
0x40015be	           0xfb6c0	                           movzx eax, al	      5172	eval.c	FUNCTION_81	CALL_23
0x40015c1	            0xeb05	                           jmp 0x40015c8	      5172	eval.c	FUNCTION_81	CALL_23
0x40015c3	      0xb801000000	                              mov eax, 1	      5172	eval.c	FUNCTION_81	CALL_23
0x40015c8	            0x85c0	                           test eax, eax	      5176	eval.c	FUNCTION_81	CALL_24
0x40015ca	     0xf85b7000000	                           jne 0x4001687	      5176	eval.c	FUNCTION_81	CALL_24
0x40015d0	          0x4489e7	                           mov edi, r12d	      5176	eval.c	FUNCTION_81	CALL_24
0x40015d3	      0xe800000000	                          call 0x40015d8	      5176	eval.c	FUNCTION_81	CALL_24
0x40015d8	            0x85c0	                           test eax, eax	      5176	eval.c	FUNCTION_81	CALL_24
0x40015da	           0xf95c0	                                setne al	      5176	eval.c	FUNCTION_81	CALL_24
0x40015dd	           0xfb6c0	                           movzx eax, al	      5176	eval.c	FUNCTION_81	CALL_24
0x40015e0	            0xeb05	                           jmp 0x40015e7	      5176	eval.c	FUNCTION_81	CALL_24
0x40015e2	      0xb801000000	                              mov eax, 1	      5176	eval.c	FUNCTION_81	CALL_24
0x40015e7	            0x85c0	                           test eax, eax	      5180	eval.c	FUNCTION_81	CALL_25
0x40015e9	     0xf8598000000	                           jne 0x4001687	      5180	eval.c	FUNCTION_81	CALL_25
0x40015ef	          0x4489e7	                           mov edi, r12d	      5180	eval.c	FUNCTION_81	CALL_25
0x40015f2	      0xe800000000	                          call 0x40015f7	      5180	eval.c	FUNCTION_81	CALL_25
0x40015f7	            0x85c0	                           test eax, eax	      5180	eval.c	FUNCTION_81	CALL_25
0x40015f9	           0xf95c0	                                setne al	      5180	eval.c	FUNCTION_81	CALL_25
0x40015fc	           0xfb6c0	                           movzx eax, al	      5180	eval.c	FUNCTION_81	CALL_25
0x40015ff	            0xeb05	                           jmp 0x4001606	      5180	eval.c	FUNCTION_81	CALL_25
0x4001601	      0xb801000000	                              mov eax, 1	      5180	eval.c	FUNCTION_81	CALL_25
0x4001606	            0x85c0	                           test eax, eax	      5183	eval.c	FUNCTION_81	IF_3
0x4001608	            0x757d	                           jne 0x4001687	      5183	eval.c	FUNCTION_81	IF_3
0x400160a	    0xc70500000000	               mov dword [0x04001614], 1	      5215	eval.c	FUNCTION_82
0x4001614	          0x4489e7	                           mov edi, r12d	      5223	eval.c	FUNCTION_82	CALL_1
0x4001617	      0xe800000000	                          call 0x400161c	      5223	eval.c	FUNCTION_82	CALL_1
0x400161c	            0x89c3	                            mov ebx, eax	      5223	eval.c	FUNCTION_82	CALL_1
0x400161e	          0x4489e7	                           mov edi, r12d	      5226	eval.c	FUNCTION_82	CALL_2
0x4001621	      0xe800000000	                          call 0x4001626	      5226	eval.c	FUNCTION_82	CALL_2
0x4001626	             0x9c3	                             or ebx, eax	      5226	eval.c	FUNCTION_82	CALL_2
0x4001628	      0xbefeffffff	                     mov esi, 0xfffffffe	      5232	eval.c	FUNCTION_82	CALL_3
0x400162d	          0x4489e7	                           mov edi, r12d	      5232	eval.c	FUNCTION_82	CALL_3
0x4001630	      0xe800000000	                          call 0x4001635	      5232	eval.c	FUNCTION_82	CALL_3
0x4001635	             0x9c3	                             or ebx, eax	      5232	eval.c	FUNCTION_82	CALL_3
0x4001637	      0xbefeffffff	                     mov esi, 0xfffffffe	      5235	eval.c	FUNCTION_82	CALL_4
0x400163c	          0x4489e7	                           mov edi, r12d	      5235	eval.c	FUNCTION_82	CALL_4
0x400163f	      0xe800000000	                          call 0x4001644	      5235	eval.c	FUNCTION_82	CALL_4
0x4001644	             0x9c3	                             or ebx, eax	      5235	eval.c	FUNCTION_82	CALL_4
0x4001646	          0x4489e7	                           mov edi, r12d	      5241	eval.c	FUNCTION_82	CALL_5
0x4001649	      0xe800000000	                          call 0x400164e	      5241	eval.c	FUNCTION_82	CALL_5
0x400164e	          0x4489e7	                           mov edi, r12d	      5242	eval.c	FUNCTION_82	CALL_6
0x4001651	      0xe800000000	                          call 0x4001656	      5242	eval.c	FUNCTION_82	CALL_6
0x4001656	      0xbefeffffff	                     mov esi, 0xfffffffe	      5248	eval.c	FUNCTION_82	CALL_7
0x400165b	          0x4489e7	                           mov edi, r12d	      5248	eval.c	FUNCTION_82	CALL_7
0x400165e	      0xe800000000	                          call 0x4001663	      5248	eval.c	FUNCTION_82	CALL_7
0x4001663	      0xbefeffffff	                     mov esi, 0xfffffffe	      5251	eval.c	FUNCTION_82	CALL_8
0x4001668	          0x4489e7	                           mov edi, r12d	      5251	eval.c	FUNCTION_82	CALL_8
0x400166b	      0xe800000000	                          call 0x4001670	      5251	eval.c	FUNCTION_82	CALL_8
0x4001670	    0xc70500000000	               mov dword [0x0400167a], 0	      5254	eval.c	FUNCTION_82
0x400167a	          0x4489ee	                           mov esi, r13d	      5194	eval.c	FUNCTION_81	IF_3	CALL_27
0x400167d	          0x4489e7	                           mov edi, r12d	      5194	eval.c	FUNCTION_81	IF_3	CALL_27
0x4001680	      0xe800000000	                          call 0x4001685	      5194	eval.c	FUNCTION_81	IF_3	CALL_27
0x4001685	            0xeb42	                           jmp 0x40016c9	      5194	eval.c	FUNCTION_81	IF_3	CALL_27
0x4001687	      0xbb00000000	                              mov ebx, 0	      5090	eval.c	FUNCTION_81
0x400168c	    0x48833d000000	               cmp qword [0x04001694], 0	      5196	eval.c	FUNCTION_81	ELSE_1	IF_4
0x4001694	            0x7e33	                           jle 0x40016c9	      5196	eval.c	FUNCTION_81	ELSE_1	IF_4
0x4001696	      0xba05000000	                              mov edx, 5	      5198	eval.c	FUNCTION_81	ELSE_1	IF_4	CALL_29
0x400169b	      0xbe00000000	                              mov esi, 0	      5198	eval.c	FUNCTION_81	ELSE_1	IF_4	CALL_29
0x40016a0	      0xbf00000000	                              mov edi, 0	      5198	eval.c	FUNCTION_81	ELSE_1	IF_4	CALL_29
0x40016a5	      0xe800000000	                          call 0x40016aa	      5198	eval.c	FUNCTION_81	ELSE_1	IF_4	CALL_29
0x40016aa	          0x4889c7	                            mov rdi, rax	      5198	eval.c	FUNCTION_81	ELSE_1	IF_4	CALL_29
0x40016ad	      0xe800000000	                          call 0x40016b2	      5198	eval.c	FUNCTION_81	ELSE_1	IF_4	CALL_29
0x40016b2	            0xeb15	                           jmp 0x40016c9	      5198	eval.c	FUNCTION_81	ELSE_1	IF_4	CALL_29
0x40016b4	    0x488b15000000	            mov rdx, qword [0x040016bb] 	      5128	eval.c	FUNCTION_81	IF_2
0x40016bb	          0x4885d2	                           test rdx, rdx	      5128	eval.c	FUNCTION_81	IF_2
0x40016be	     0xf85befdffff	                           jne 0x4001482	      5128	eval.c	FUNCTION_81	IF_2
0x40016c4	      0xe925feffff	                           jmp 0x40014ee	      5128	eval.c	FUNCTION_81	IF_2
0x40016c9	            0x89d8	                            mov eax, ebx	      5202	eval.c	FUNCTION_81
0x40016cb	        0x4883c408	                              add rsp, 8	      5202	eval.c	FUNCTION_81
0x40016cf	              0x5b	                                 pop rbx	      5202	eval.c	FUNCTION_81
0x40016d0	              0x5d	                                 pop rbp	      5202	eval.c	FUNCTION_81
0x40016d1	            0x415c	                                 pop r12	      5202	eval.c	FUNCTION_81
0x40016d3	            0x415d	                                 pop r13	      5202	eval.c	FUNCTION_81
0x40016d5	              0xc3	                                     ret	      5202	eval.c	FUNCTION_81
eval_isnamec	FOR,0:SWITCH,0:DO,0:IF,0:functions,0:WHILE,0:CALL,1:ELSE,0	16
0x4001b60	            0x89fa	                            mov edx, edi	      6366	eval.c	FUNCTION_100	CALL_1
0x4001b62	          0x83e2df	                     and edx, 0xffffffdf	      6366	eval.c	FUNCTION_100	CALL_1
0x4001b65	          0x83ea41	                           sub edx, 0x41	      6366	eval.c	FUNCTION_100	CALL_1
0x4001b68	      0xb801000000	                              mov eax, 1	      6366	eval.c	FUNCTION_100	CALL_1
0x4001b6d	          0x83fa19	                           cmp edx, 0x19	      6366	eval.c	FUNCTION_100	CALL_1
0x4001b70	            0x7622	                           jbe 0x4001b94	      6366	eval.c	FUNCTION_100	CALL_1
0x4001b72	          0x8d4fdd	                   lea ecx, [rdi - 0x23]	      6366	eval.c	FUNCTION_100	CALL_1
0x4001b75	          0x83f93c	                           cmp ecx, 0x3c	      6366	eval.c	FUNCTION_100	CALL_1
0x4001b78	            0x7714	                            ja 0x4001b8e	      6366	eval.c	FUNCTION_100	CALL_1
0x4001b7a	    0x48b801e0ff00	          movabs rax, 0x1000000000ffe001	      6366	eval.c	FUNCTION_100	CALL_1
0x4001b84	          0x48d3e8	                             shr rax, cl	      6366	eval.c	FUNCTION_100	CALL_1
0x4001b87	        0x4883f001	                              xor rax, 1	      6366	eval.c	FUNCTION_100	CALL_1
0x4001b8b	          0x83e001	                              and eax, 1	      6366	eval.c	FUNCTION_100	CALL_1
0x4001b8e	          0x83f001	                              xor eax, 1	      6366	eval.c	FUNCTION_100	CALL_1
0x4001b91	           0xfb6c0	                           movzx eax, al	      6366	eval.c	FUNCTION_100	CALL_1
0x4001b94	            0xf3c3	                                     ret	      6367	eval.c	FUNCTION_100
get_var_special_name	FOR,0:SWITCH,1:DO,0:IF,0:functions,0:WHILE,0:CALL,1:ELSE,0	23
0x4000279	        0x4883ec08	                              sub rsp, 8	      5516	eval.c	FUNCTION_86
0x400027d	          0x83ff01	                              cmp edi, 1	      5517	eval.c	FUNCTION_86	SWITCH_1
0x4000280	            0x7426	                            je 0x40002a8	      5517	eval.c	FUNCTION_86	SWITCH_1
0x4000282	          0x83ff01	                              cmp edi, 1	      5517	eval.c	FUNCTION_86	SWITCH_1
0x4000285	            0x7f0b	                            jg 0x4000292	      5517	eval.c	FUNCTION_86	SWITCH_1
0x4000287	      0xb800000000	                              mov eax, 0	      5519	eval.c	FUNCTION_86	SWITCH_1
0x400028c	            0x85ff	                           test edi, edi	      5517	eval.c	FUNCTION_86	SWITCH_1
0x400028e	            0x742e	                            je 0x40002be	      5517	eval.c	FUNCTION_86	SWITCH_1
0x4000290	            0xeb1d	                           jmp 0x40002af	      5517	eval.c	FUNCTION_86	SWITCH_1
0x4000292	      0xb800000000	                              mov eax, 0	      5521	eval.c	FUNCTION_86	SWITCH_1
0x4000297	          0x83ff02	                              cmp edi, 2	      5517	eval.c	FUNCTION_86	SWITCH_1
0x400029a	            0x7422	                            je 0x40002be	      5517	eval.c	FUNCTION_86	SWITCH_1
0x400029c	      0xb800000000	                              mov eax, 0	      5522	eval.c	FUNCTION_86	SWITCH_1
0x40002a1	          0x83ff03	                              cmp edi, 3	      5517	eval.c	FUNCTION_86	SWITCH_1
0x40002a4	            0x7418	                            je 0x40002be	      5517	eval.c	FUNCTION_86	SWITCH_1
0x40002a6	            0xeb07	                           jmp 0x40002af	      5517	eval.c	FUNCTION_86	SWITCH_1
0x40002a8	      0xb800000000	                              mov eax, 0	      5520	eval.c	FUNCTION_86	SWITCH_1
0x40002ad	            0xeb0f	                           jmp 0x40002be	      5520	eval.c	FUNCTION_86	SWITCH_1
0x40002af	      0xbf00000000	                              mov edi, 0	      5524	eval.c	FUNCTION_86	CALL_1
0x40002b4	      0xe800000000	                          call 0x40002b9	      5524	eval.c	FUNCTION_86	CALL_1
0x40002b9	      0xb800000000	                              mov eax, 0	      5525	eval.c	FUNCTION_86
0x40002be	        0x4883c408	                              add rsp, 8	      5526	eval.c	FUNCTION_86
0x40002c2	              0xc3	                                     ret	      5526	eval.c	FUNCTION_86
valid_varname	FOR,1:SWITCH,0:DO,0:IF,1:functions,0:WHILE,0:CALL,4:ELSE,0	45
0x4004639	            0x4155	                                push r13	      7700	eval.c	FUNCTION_147
0x400463b	            0x4154	                                push r12	      7700	eval.c	FUNCTION_147
0x400463d	              0x55	                                push rbp	      7700	eval.c	FUNCTION_147
0x400463e	              0x53	                                push rbx	      7700	eval.c	FUNCTION_147
0x400463f	        0x4883ec08	                              sub rsp, 8	      7700	eval.c	FUNCTION_147
0x4004643	           0xfb61f	                   movzx ebx, byte [rdi]	      7703	eval.c	FUNCTION_147	FOR_1
0x4004646	            0x84db	                             test bl, bl	      7703	eval.c	FUNCTION_147	FOR_1
0x4004648	            0x745f	                            je 0x40046a9	      7703	eval.c	FUNCTION_147	FOR_1
0x400464a	          0x4989fd	                            mov r13, rdi	      7703	eval.c	FUNCTION_147	FOR_1
0x400464d	          0x4889fd	                            mov rbp, rdi	      7703	eval.c	FUNCTION_147	FOR_1
0x4004650	           0xfb6fb	                           movzx edi, bl	      7704	eval.c	FUNCTION_147	FOR_1	IF_1	CALL_2
0x4004653	      0xe800000000	                          call 0x4004658	      7704	eval.c	FUNCTION_147	FOR_1	IF_1	CALL_2
0x4004658	          0x4189c4	                           mov r12d, eax	      7704	eval.c	FUNCTION_147	FOR_1	IF_1	CALL_2
0x400465b	            0x85c0	                           test eax, eax	      7704	eval.c	FUNCTION_147	FOR_1	IF_1	CALL_2
0x400465d	            0x7536	                           jne 0x4004695	      7704	eval.c	FUNCTION_147	FOR_1	IF_1	CALL_2
0x400465f	          0x4939ed	                            cmp r13, rbp	      7704	eval.c	FUNCTION_147	FOR_1	IF_1	CALL_2
0x4004662	            0x740b	                            je 0x400466f	      7704	eval.c	FUNCTION_147	FOR_1	IF_1	CALL_2
0x4004664	           0xfb6c3	                           movzx eax, bl	      7704	eval.c	FUNCTION_147	FOR_1	IF_1	CALL_2
0x4004667	          0x83e830	                           sub eax, 0x30	      7704	eval.c	FUNCTION_147	FOR_1	IF_1	CALL_2
0x400466a	          0x83f809	                              cmp eax, 9	      7704	eval.c	FUNCTION_147	FOR_1	IF_1	CALL_2
0x400466d	            0x7626	                           jbe 0x4004695	      7704	eval.c	FUNCTION_147	FOR_1	IF_1	CALL_2
0x400466f	          0x80fb23	                            cmp bl, 0x23	      7705	eval.c	FUNCTION_147	FOR_1	IF_1
0x4004672	            0x7421	                            je 0x4004695	      7705	eval.c	FUNCTION_147	FOR_1	IF_1
0x4004674	      0xba05000000	                              mov edx, 5	      7707	eval.c	FUNCTION_147	FOR_1	IF_1	CALL_4
0x4004679	      0xbe00000000	                              mov esi, 0	      7707	eval.c	FUNCTION_147	FOR_1	IF_1	CALL_4
0x400467e	      0xbf00000000	                              mov edi, 0	      7707	eval.c	FUNCTION_147	FOR_1	IF_1	CALL_4
0x4004683	      0xe800000000	                          call 0x4004688	      7707	eval.c	FUNCTION_147	FOR_1	IF_1	CALL_4
0x4004688	          0x4c89ee	                            mov rsi, r13	      7707	eval.c	FUNCTION_147	FOR_1	IF_1	CALL_4
0x400468b	          0x4889c7	                            mov rdi, rax	      7707	eval.c	FUNCTION_147	FOR_1	IF_1	CALL_4
0x400468e	      0xe800000000	                          call 0x4004693	      7707	eval.c	FUNCTION_147	FOR_1	IF_1	CALL_4
0x4004693	            0xeb1a	                           jmp 0x40046af	      7708	eval.c	FUNCTION_147	FOR_1	IF_1
0x4004695	        0x4883c501	                              add rbp, 1	      7703	eval.c	FUNCTION_147	FOR_1
0x4004699	         0xfb65d00	                   movzx ebx, byte [rbp]	      7703	eval.c	FUNCTION_147	FOR_1
0x400469d	            0x84db	                             test bl, bl	      7703	eval.c	FUNCTION_147	FOR_1
0x400469f	            0x75af	                           jne 0x4004650	      7703	eval.c	FUNCTION_147	FOR_1
0x40046a1	    0x41bc01000000	                             mov r12d, 1	      7710	eval.c	FUNCTION_147
0x40046a7	            0xeb06	                           jmp 0x40046af	      7710	eval.c	FUNCTION_147
0x40046a9	    0x41bc01000000	                             mov r12d, 1	      7710	eval.c	FUNCTION_147
0x40046af	          0x4489e0	                           mov eax, r12d	      7711	eval.c	FUNCTION_147
0x40046b2	        0x4883c408	                              add rsp, 8	      7711	eval.c	FUNCTION_147
0x40046b6	              0x5b	                                 pop rbx	      7711	eval.c	FUNCTION_147
0x40046b7	              0x5d	                                 pop rbp	      7711	eval.c	FUNCTION_147
0x40046b8	            0x415c	                                 pop r12	      7711	eval.c	FUNCTION_147
0x40046ba	            0x415d	                                 pop r13	      7711	eval.c	FUNCTION_147
0x40046bc	              0xc3	                                     ret	      7711	eval.c	FUNCTION_147
unref_var_dict	FOR,0:SWITCH,0:DO,0:IF,0:functions,0:WHILE,0:CALL,1:ELSE,0	5
0x40043f5	        0x4883ec08	                              sub rsp, 8	      7390	eval.c	FUNCTION_137
0x40043f9	    0x816f049e8601	            sub dword [rdi + 4], 0x1869e	      7393	eval.c	FUNCTION_137
0x4004400	      0xe800000000	                          call 0x4004405	      7394	eval.c	FUNCTION_137	CALL_1
0x4004405	        0x4883c408	                              add rsp, 8	      7395	eval.c	FUNCTION_137
0x4004409	              0xc3	                                     ret	      7395	eval.c	FUNCTION_137
get_tv_number_chk	FOR,0:SWITCH,1:DO,0:IF,2:functions,0:WHILE,0:CALL,14:ELSE,1	88
0x4002a09	              0x53	                                push rbx	      6969	eval.c	FUNCTION_125
0x4002a0a	        0x4883ec10	                           sub rsp, 0x10	      6969	eval.c	FUNCTION_125
0x4002a0e	          0x4889f3	                            mov rbx, rsi	      6969	eval.c	FUNCTION_125
0x4002a11	    0x64488b042528	                mov rax, qword fs:[0x28]	      6969	eval.c	FUNCTION_125
0x4002a1a	      0x4889442408	                mov qword [rsp + 8], rax	      6969	eval.c	FUNCTION_125
0x4002a1f	            0x31c0	                            xor eax, eax	      6969	eval.c	FUNCTION_125
0x4002a21	    0x48c704240000	                      mov qword [rsp], 0	      6970	eval.c	FUNCTION_125
0x4002a29	          0x833f0a	                    cmp dword [rdi], 0xa	      6972	eval.c	FUNCTION_125	SWITCH_1
0x4002a2c	     0xf871e010000	                            ja 0x4002b50	      6972	eval.c	FUNCTION_125	SWITCH_1
0x4002a32	            0x8b07	                    mov eax, dword [rdi]	      6972	eval.c	FUNCTION_125	SWITCH_1
0x4002a34	    0xff24c5000000	                       jmp qword [rax*8]	      6972	eval.c	FUNCTION_125	SWITCH_1
0x4002a3b	        0x488b4708	                mov rax, qword [rdi + 8]	      6975	eval.c	FUNCTION_125	SWITCH_1
0x4002a3f	      0xe925010000	                           jmp 0x4002b69	      6975	eval.c	FUNCTION_125	SWITCH_1
0x4002a44	      0xba05000000	                              mov edx, 5	      6978	eval.c	FUNCTION_125	SWITCH_1	CALL_2
0x4002a49	      0xbe00000000	                              mov esi, 0	      6978	eval.c	FUNCTION_125	SWITCH_1	CALL_2
0x4002a4e	      0xbf00000000	                              mov edi, 0	      6978	eval.c	FUNCTION_125	SWITCH_1	CALL_2
0x4002a53	      0xe800000000	                          call 0x4002a58	      6978	eval.c	FUNCTION_125	SWITCH_1	CALL_2
0x4002a58	          0x4889c7	                            mov rdi, rax	      6978	eval.c	FUNCTION_125	SWITCH_1	CALL_2
0x4002a5b	      0xe800000000	                          call 0x4002a60	      6978	eval.c	FUNCTION_125	SWITCH_1	CALL_2
0x4002a60	      0xe9eb000000	                           jmp 0x4002b50	      6979	eval.c	FUNCTION_125	SWITCH_1
0x4002a65	      0xba05000000	                              mov edx, 5	      6983	eval.c	FUNCTION_125	SWITCH_1	CALL_4
0x4002a6a	      0xbe00000000	                              mov esi, 0	      6983	eval.c	FUNCTION_125	SWITCH_1	CALL_4
0x4002a6f	      0xbf00000000	                              mov edi, 0	      6983	eval.c	FUNCTION_125	SWITCH_1	CALL_4
0x4002a74	      0xe800000000	                          call 0x4002a79	      6983	eval.c	FUNCTION_125	SWITCH_1	CALL_4
0x4002a79	          0x4889c7	                            mov rdi, rax	      6983	eval.c	FUNCTION_125	SWITCH_1	CALL_4
0x4002a7c	      0xe800000000	                          call 0x4002a81	      6983	eval.c	FUNCTION_125	SWITCH_1	CALL_4
0x4002a81	      0xe9ca000000	                           jmp 0x4002b50	      6984	eval.c	FUNCTION_125	SWITCH_1
0x4002a86	        0x488b7f08	                mov rdi, qword [rdi + 8]	      6986	eval.c	FUNCTION_125	SWITCH_1	IF_1
0x4002a8a	          0x4885ff	                           test rdi, rdi	      6986	eval.c	FUNCTION_125	SWITCH_1	IF_1
0x4002a8d	            0x7429	                            je 0x4002ab8	      6986	eval.c	FUNCTION_125	SWITCH_1	IF_1
0x4002a8f	        0x4883ec08	                              sub rsp, 8	      6987	eval.c	FUNCTION_125	SWITCH_1	IF_1	CALL_5
0x4002a93	            0x6a00	                                  push 0	      6987	eval.c	FUNCTION_125	SWITCH_1	IF_1	CALL_5
0x4002a95	    0x41b900000000	                              mov r9d, 0	      6987	eval.c	FUNCTION_125	SWITCH_1	IF_1	CALL_5
0x4002a9b	      0x4c8d442410	                    lea r8, [rsp + 0x10]	      6987	eval.c	FUNCTION_125	SWITCH_1	IF_1	CALL_5
0x4002aa0	      0xb907000000	                              mov ecx, 7	      6987	eval.c	FUNCTION_125	SWITCH_1	IF_1	CALL_5
0x4002aa5	      0xba00000000	                              mov edx, 0	      6987	eval.c	FUNCTION_125	SWITCH_1	IF_1	CALL_5
0x4002aaa	      0xbe00000000	                              mov esi, 0	      6987	eval.c	FUNCTION_125	SWITCH_1	IF_1	CALL_5
0x4002aaf	      0xe800000000	                          call 0x4002ab4	      6987	eval.c	FUNCTION_125	SWITCH_1	IF_1	CALL_5
0x4002ab4	        0x4883c410	                           add rsp, 0x10	      6987	eval.c	FUNCTION_125	SWITCH_1	IF_1	CALL_5
0x4002ab8	        0x488b0424	                    mov rax, qword [rsp]	      6989	eval.c	FUNCTION_125	SWITCH_1
0x4002abc	      0xe9a8000000	                           jmp 0x4002b69	      6989	eval.c	FUNCTION_125	SWITCH_1
0x4002ac1	      0xba05000000	                              mov edx, 5	      6991	eval.c	FUNCTION_125	SWITCH_1	CALL_7
0x4002ac6	      0xbe00000000	                              mov esi, 0	      6991	eval.c	FUNCTION_125	SWITCH_1	CALL_7
0x4002acb	      0xbf00000000	                              mov edi, 0	      6991	eval.c	FUNCTION_125	SWITCH_1	CALL_7
0x4002ad0	      0xe800000000	                          call 0x4002ad5	      6991	eval.c	FUNCTION_125	SWITCH_1	CALL_7
0x4002ad5	          0x4889c7	                            mov rdi, rax	      6991	eval.c	FUNCTION_125	SWITCH_1	CALL_7
0x4002ad8	      0xe800000000	                          call 0x4002add	      6991	eval.c	FUNCTION_125	SWITCH_1	CALL_7
0x4002add	            0xeb71	                           jmp 0x4002b50	      6992	eval.c	FUNCTION_125	SWITCH_1
0x4002adf	      0xba05000000	                              mov edx, 5	      6994	eval.c	FUNCTION_125	SWITCH_1	CALL_9
0x4002ae4	      0xbe00000000	                              mov esi, 0	      6994	eval.c	FUNCTION_125	SWITCH_1	CALL_9
0x4002ae9	      0xbf00000000	                              mov edi, 0	      6994	eval.c	FUNCTION_125	SWITCH_1	CALL_9
0x4002aee	      0xe800000000	                          call 0x4002af3	      6994	eval.c	FUNCTION_125	SWITCH_1	CALL_9
0x4002af3	          0x4889c7	                            mov rdi, rax	      6994	eval.c	FUNCTION_125	SWITCH_1	CALL_9
0x4002af6	      0xe800000000	                          call 0x4002afb	      6994	eval.c	FUNCTION_125	SWITCH_1	CALL_9
0x4002afb	            0xeb53	                           jmp 0x4002b50	      6995	eval.c	FUNCTION_125	SWITCH_1
0x4002afd	      0x48837f0801	                  cmp qword [rdi + 8], 1	      6997	eval.c	FUNCTION_125	SWITCH_1
0x4002b02	           0xf94c0	                                 sete al	      6997	eval.c	FUNCTION_125	SWITCH_1
0x4002b05	           0xfb6c0	                           movzx eax, al	      6997	eval.c	FUNCTION_125	SWITCH_1
0x4002b08	            0xeb5f	                           jmp 0x4002b69	      6997	eval.c	FUNCTION_125	SWITCH_1
0x4002b0a	      0xba05000000	                              mov edx, 5	      7001	eval.c	FUNCTION_125	SWITCH_1	CALL_11
0x4002b0f	      0xbe00000000	                              mov esi, 0	      7001	eval.c	FUNCTION_125	SWITCH_1	CALL_11
0x4002b14	      0xbf00000000	                              mov edi, 0	      7001	eval.c	FUNCTION_125	SWITCH_1	CALL_11
0x4002b19	      0xe800000000	                          call 0x4002b1e	      7001	eval.c	FUNCTION_125	SWITCH_1	CALL_11
0x4002b1e	          0x4889c7	                            mov rdi, rax	      7001	eval.c	FUNCTION_125	SWITCH_1	CALL_11
0x4002b21	      0xe800000000	                          call 0x4002b26	      7001	eval.c	FUNCTION_125	SWITCH_1	CALL_11
0x4002b26	            0xeb28	                           jmp 0x4002b50	      7002	eval.c	FUNCTION_125	SWITCH_1
0x4002b28	      0xba05000000	                              mov edx, 5	      7006	eval.c	FUNCTION_125	SWITCH_1	CALL_13
0x4002b2d	      0xbe00000000	                              mov esi, 0	      7006	eval.c	FUNCTION_125	SWITCH_1	CALL_13
0x4002b32	      0xbf00000000	                              mov edi, 0	      7006	eval.c	FUNCTION_125	SWITCH_1	CALL_13
0x4002b37	      0xe800000000	                          call 0x4002b3c	      7006	eval.c	FUNCTION_125	SWITCH_1	CALL_13
0x4002b3c	          0x4889c7	                            mov rdi, rax	      7006	eval.c	FUNCTION_125	SWITCH_1	CALL_13
0x4002b3f	      0xe800000000	                          call 0x4002b44	      7006	eval.c	FUNCTION_125	SWITCH_1	CALL_13
0x4002b44	            0xeb0a	                           jmp 0x4002b50	      7007	eval.c	FUNCTION_125	SWITCH_1
0x4002b46	      0xbf00000000	                              mov edi, 0	      7010	eval.c	FUNCTION_125	SWITCH_1	CALL_14
0x4002b4b	      0xe800000000	                          call 0x4002b50	      7010	eval.c	FUNCTION_125	SWITCH_1	CALL_14
0x4002b50	          0x4885db	                           test rbx, rbx	      7013	eval.c	FUNCTION_125	IF_2
0x4002b53	            0x750a	                           jne 0x4002b5f	      7013	eval.c	FUNCTION_125	IF_2
0x4002b55	    0x48c70424ffff	     mov qword [rsp], 0xffffffffffffffff	      7014	eval.c	FUNCTION_125	IF_2
0x4002b5d	            0xeb06	                           jmp 0x4002b65	      7014	eval.c	FUNCTION_125	IF_2
0x4002b5f	    0xc70301000000	                      mov dword [rbx], 1	      7016	eval.c	FUNCTION_125	ELSE_1
0x4002b65	        0x488b0424	                    mov rax, qword [rsp]	      7017	eval.c	FUNCTION_125	ELSE_1
0x4002b69	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      7018	eval.c	FUNCTION_125	ELSE_1
0x4002b6e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      7018	eval.c	FUNCTION_125	ELSE_1
0x4002b77	            0x7405	                            je 0x4002b7e	      7018	eval.c	FUNCTION_125	ELSE_1
0x4002b79	      0xe800000000	                          call 0x4002b7e	      7018	eval.c	FUNCTION_125	ELSE_1
0x4002b7e	        0x4883c410	                           add rsp, 0x10	      7018	eval.c	FUNCTION_125	ELSE_1
0x4002b82	              0x5b	                                 pop rbx	      7018	eval.c	FUNCTION_125	ELSE_1
0x4002b83	              0xc3	                                     ret	      7018	eval.c	FUNCTION_125	ELSE_1
vars_clear_ext	FOR,1:SWITCH,0:DO,0:IF,3:functions,0:WHILE,0:CALL,6:ELSE,0	39
0x400440a	            0x4156	                                push r14	      7413	eval.c	FUNCTION_139
0x400440c	            0x4155	                                push r13	      7413	eval.c	FUNCTION_139
0x400440e	            0x4154	                                push r12	      7413	eval.c	FUNCTION_139
0x4004410	              0x55	                                push rbp	      7413	eval.c	FUNCTION_139
0x4004411	              0x53	                                push rbx	      7413	eval.c	FUNCTION_139
0x4004412	          0x4989fe	                            mov r14, rdi	      7413	eval.c	FUNCTION_139
0x4004415	          0x4189f5	                           mov r13d, esi	      7413	eval.c	FUNCTION_139
0x4004418	      0xe800000000	                          call 0x400441d	      7418	eval.c	FUNCTION_139	CALL_1
0x400441d	        0x498b4608	                mov rax, qword [r14 + 8]	      7419	eval.c	FUNCTION_139
0x4004421	          0x4189c4	                           mov r12d, eax	      7419	eval.c	FUNCTION_139
0x4004424	        0x498b6e20	            mov rbp, qword [r14 + 0x20] 	      7420	eval.c	FUNCTION_139	FOR_1
0x4004428	            0x85c0	                           test eax, eax	      7420	eval.c	FUNCTION_139	FOR_1
0x400442a	            0x7e3c	                           jle 0x4004468	      7420	eval.c	FUNCTION_139	FOR_1
0x400442c	        0x488b5d08	                mov rbx, qword [rbp + 8]	      7422	eval.c	FUNCTION_139	FOR_1	IF_1	CALL_2
0x4004430	    0x4881fb000000	                              cmp rbx, 0	      7422	eval.c	FUNCTION_139	FOR_1	IF_1	CALL_2
0x4004437	            0x7426	                            je 0x400445f	      7422	eval.c	FUNCTION_139	FOR_1	IF_1	CALL_2
0x4004439	          0x4885db	                           test rbx, rbx	      7422	eval.c	FUNCTION_139	FOR_1	IF_1	CALL_2
0x400443c	            0x7421	                            je 0x400445f	      7422	eval.c	FUNCTION_139	FOR_1	IF_1	CALL_2
0x400443e	        0x4183ec01	                             sub r12d, 1	      7424	eval.c	FUNCTION_139	FOR_1	IF_1
0x4004442	          0x4585ed	                         test r13d, r13d	      7430	eval.c	FUNCTION_139	FOR_1	IF_1	IF_2
0x4004445	            0x7409	                            je 0x4004450	      7430	eval.c	FUNCTION_139	FOR_1	IF_1	IF_2
0x4004447	        0x488d7bef	                   lea rdi, [rbx - 0x11]	      7431	eval.c	FUNCTION_139	FOR_1	IF_1	CALL_4
0x400444b	      0xe800000000	                          call 0x4004450	      7431	eval.c	FUNCTION_139	FOR_1	IF_1	CALL_4
0x4004450	        0xf643ff10	               test byte [rbx - 1], 0x10	      7432	eval.c	FUNCTION_139	FOR_1	IF_1	IF_3
0x4004454	            0x7409	                            je 0x400445f	      7432	eval.c	FUNCTION_139	FOR_1	IF_1	IF_3
0x4004456	        0x488d7bef	                   lea rdi, [rbx - 0x11]	      7433	eval.c	FUNCTION_139	FOR_1	IF_1	CALL_5
0x400445a	      0xe800000000	                          call 0x400445f	      7433	eval.c	FUNCTION_139	FOR_1	IF_1	CALL_5
0x400445f	        0x4883c510	                           add rbp, 0x10	      7420	eval.c	FUNCTION_139	FOR_1
0x4004463	          0x4585e4	                         test r12d, r12d	      7420	eval.c	FUNCTION_139	FOR_1
0x4004466	            0x7fc4	                            jg 0x400442c	      7420	eval.c	FUNCTION_139	FOR_1
0x4004468	          0x4c89f7	                            mov rdi, r14	      7436	eval.c	FUNCTION_139	CALL_6
0x400446b	      0xe800000000	                          call 0x4004470	      7436	eval.c	FUNCTION_139	CALL_6
0x4004470	    0x49c746080000	                  mov qword [r14 + 8], 0	      7437	eval.c	FUNCTION_139
0x4004478	              0x5b	                                 pop rbx	      7438	eval.c	FUNCTION_139
0x4004479	              0x5d	                                 pop rbp	      7438	eval.c	FUNCTION_139
0x400447a	            0x415c	                                 pop r12	      7438	eval.c	FUNCTION_139
0x400447c	            0x415d	                                 pop r13	      7438	eval.c	FUNCTION_139
0x400447e	            0x415e	                                 pop r14	      7438	eval.c	FUNCTION_139
0x4004480	              0xc3	                                     ret	      7438	eval.c	FUNCTION_139
init_var_dict	FOR,0:SWITCH,0:DO,0:IF,0:functions,0:WHILE,0:CALL,1:ELSE,0	21
0x40040fa	            0x4154	                                push r12	      7372	eval.c	FUNCTION_136
0x40040fc	              0x55	                                push rbp	      7372	eval.c	FUNCTION_136
0x40040fd	              0x53	                                push rbx	      7372	eval.c	FUNCTION_136
0x40040fe	          0x4889fb	                            mov rbx, rdi	      7372	eval.c	FUNCTION_136
0x4004101	          0x4889f5	                            mov rbp, rsi	      7372	eval.c	FUNCTION_136
0x4004104	          0x4189d4	                           mov r12d, edx	      7372	eval.c	FUNCTION_136
0x4004107	        0x488d7f10	                   lea rdi, [rdi + 0x10]	      7373	eval.c	FUNCTION_136	CALL_1
0x400410b	      0xe800000000	                          call 0x4004110	      7373	eval.c	FUNCTION_136	CALL_1
0x4004110	          0xc60300	                       mov byte [rbx], 0	      7374	eval.c	FUNCTION_136
0x4004113	        0x44886301	                mov byte [rbx + 1], r12b	      7375	eval.c	FUNCTION_136
0x4004117	    0xc743049f8601	           mov dword [rbx + 4], 0x1869f 	      7376	eval.c	FUNCTION_136
0x400411e	    0xc74308000000	                  mov dword [rbx + 8], 0	      7377	eval.c	FUNCTION_136
0x4004125	        0x48895d08	                mov qword [rbp + 8], rbx	      7378	eval.c	FUNCTION_136
0x4004129	    0xc74500060000	                      mov dword [rbp], 6	      7379	eval.c	FUNCTION_136
0x4004130	        0xc6450402	                   mov byte [rbp + 4], 2	      7380	eval.c	FUNCTION_136
0x4004134	        0xc6451005	                mov byte [rbp + 0x10], 5	      7381	eval.c	FUNCTION_136
0x4004138	        0xc6451100	                mov byte [rbp + 0x11], 0	      7382	eval.c	FUNCTION_136
0x400413c	              0x5b	                                 pop rbx	      7383	eval.c	FUNCTION_136
0x400413d	              0x5d	                                 pop rbp	      7383	eval.c	FUNCTION_136
0x400413e	            0x415c	                                 pop r12	      7383	eval.c	FUNCTION_136
0x4004140	              0xc3	                                     ret	      7383	eval.c	FUNCTION_136
vars_clear	FOR,0:SWITCH,0:DO,0:IF,0:functions,0:WHILE,0:CALL,1:ELSE,0	5
0x4004481	        0x4883ec08	                              sub rsp, 8	      7404	eval.c	FUNCTION_138
0x4004485	      0xbe01000000	                              mov esi, 1	      7405	eval.c	FUNCTION_138	CALL_1
0x400448a	      0xe800000000	                          call 0x400448f	      7405	eval.c	FUNCTION_138	CALL_1
0x400448f	        0x4883c408	                              add rsp, 8	      7406	eval.c	FUNCTION_138
0x4004493	              0xc3	                                     ret	      7406	eval.c	FUNCTION_138
tv_op	FOR,0:SWITCH,1:DO,0:IF,12:functions,0:WHILE,0:CALL,13:ELSE,6	147
0x40039eb	            0x4155	                                push r13	      2386	eval.c	FUNCTION_47
0x40039ed	            0x4154	                                push r12	      2386	eval.c	FUNCTION_47
0x40039ef	              0x55	                                push rbp	      2386	eval.c	FUNCTION_47
0x40039f0	              0x53	                                push rbx	      2386	eval.c	FUNCTION_47
0x40039f1	        0x4883ec58	                           sub rsp, 0x58	      2386	eval.c	FUNCTION_47
0x40039f5	          0x4889d3	                            mov rbx, rdx	      2386	eval.c	FUNCTION_47
0x40039f8	    0x64488b042528	                mov rax, qword fs:[0x28]	      2386	eval.c	FUNCTION_47
0x4003a01	      0x4889442448	             mov qword [rsp + 0x48], rax	      2386	eval.c	FUNCTION_47
0x4003a06	            0x31c0	                            xor eax, eax	      2386	eval.c	FUNCTION_47
0x4003a08	            0x8b06	                    mov eax, dword [rsi]	      2392	eval.c	FUNCTION_47	IF_1
0x4003a0a	          0x8d50fa	                      lea edx, [rax - 6]	      2393	eval.c	FUNCTION_47	IF_1
0x4003a0d	    0xf7c2fdffffff	                    test edx, 0xfffffffd	      2393	eval.c	FUNCTION_47	IF_1
0x4003a13	     0xf84cb010000	                            je 0x4003be4	      2393	eval.c	FUNCTION_47	IF_1
0x4003a19	          0x4989fc	                            mov r12, rdi	      2393	eval.c	FUNCTION_47	IF_1
0x4003a1c	          0x4889f5	                            mov rbp, rsi	      2393	eval.c	FUNCTION_47	IF_1
0x4003a1f	          0x83f803	                              cmp eax, 3	      2393	eval.c	FUNCTION_47	IF_1
0x4003a22	     0xf84bc010000	                            je 0x4003be4	      2393	eval.c	FUNCTION_47	IF_1
0x4003a28	            0x8b17	                    mov edx, dword [rdi]	      2395	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x4003a2a	          0x83fa05	                              cmp edx, 5	      2395	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x4003a2d	            0x7420	                            je 0x4003a4f	      2395	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x4003a2f	          0x83fa05	                              cmp edx, 5	      2395	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x4003a32	            0x770d	                            ja 0x4003a41	      2395	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x4003a34	          0x83ea01	                              sub edx, 1	      2395	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x4003a37	          0x83fa01	                              cmp edx, 1	      2395	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x4003a3a	            0x7658	                           jbe 0x4003a94	      2395	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x4003a3c	      0xe9a3010000	                           jmp 0x4003be4	      2395	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x4003a41	          0x83fa07	                              cmp edx, 7	      2395	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x4003a44	     0xf8438010000	                            je 0x4003b82	      2395	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x4003a4a	      0xe995010000	                           jmp 0x4003be4	      2395	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x4003a4f	          0x803b2b	                    cmp byte [rbx], 0x2b	      2407	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_2
0x4003a52	     0xf858c010000	                           jne 0x4003be4	      2407	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_2
0x4003a58	          0x83f805	                              cmp eax, 5	      2407	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_2
0x4003a5b	     0xf8583010000	                           jne 0x4003be4	      2407	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_2
0x4003a61	        0x488b7f08	                mov rdi, qword [rdi + 8]	      2410	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_3
0x4003a65	          0x4885ff	                           test rdi, rdi	      2410	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_3
0x4003a68	     0xf849c010000	                            je 0x4003c0a	      2410	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_3
0x4003a6e	        0x488b7608	                mov rsi, qword [rsi + 8]	      2410	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_3
0x4003a72	      0xb801000000	                              mov eax, 1	      2412	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x4003a77	          0x4885f6	                           test rsi, rsi	      2410	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_3
0x4003a7a	     0xf848f010000	                            je 0x4003c0f	      2410	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_3
0x4003a80	      0xba00000000	                              mov edx, 0	      2411	eval.c	FUNCTION_47	IF_1	SWITCH_1	CALL_1
0x4003a85	      0xe800000000	                          call 0x4003a8a	      2411	eval.c	FUNCTION_47	IF_1	SWITCH_1	CALL_1
0x4003a8a	      0xb801000000	                              mov eax, 1	      2412	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x4003a8f	      0xe97b010000	                           jmp 0x4003c0f	      2412	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x4003a94	          0x83f805	                              cmp eax, 5	      2416	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_4
0x4003a97	     0xf8447010000	                            je 0x4003be4	      2416	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_4
0x4003a9d	           0xfb60b	                   movzx ecx, byte [rbx]	      2418	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5
0x4003aa0	          0x8d51d5	                   lea edx, [rcx - 0x2b]	      2418	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5
0x4003aa3	          0xf6c2fd	                           test dl, 0xfd	      2418	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5
0x4003aa6	     0xf858d000000	                           jne 0x4003b39	      2418	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5
0x4003aac	      0xe800000000	                          call 0x4003ab1	      2421	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	CALL_2
0x4003ab1	          0x4989c5	                            mov r13, rax	      2421	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	CALL_2
0x4003ab4	        0x837d0007	                      cmp dword [rbp], 7	      2423	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	IF_6
0x4003ab8	            0x7543	                           jne 0x4003afd	      2423	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	IF_6
0x4003aba	        0x660fefc0	                         pxor xmm0, xmm0	      2425	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	IF_6
0x4003abe	      0xf2480f2ac0	                      cvtsi2sd xmm0, rax	      2425	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	IF_6
0x4003ac3	          0x803b2b	                    cmp byte [rbx], 0x2b	      2427	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	IF_6	IF_7
0x4003ac6	            0x750c	                           jne 0x4003ad4	      2427	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	IF_6	IF_7
0x4003ac8	      0xf20f584508	             addsd xmm0, qword [rbp + 8]	      2428	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	IF_6	IF_7
0x4003acd	      0x66480f7ec3	                          movq rbx, xmm0	      2428	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	IF_6	IF_7
0x4003ad2	            0xeb0a	                           jmp 0x4003ade	      2428	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	IF_6	IF_7
0x4003ad4	      0xf20f5c4508	             subsd xmm0, qword [rbp + 8]	      2430	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	IF_6	ELSE_1
0x4003ad9	      0x66480f7ec3	                          movq rbx, xmm0	      2430	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	IF_6	ELSE_1
0x4003ade	          0x4c89e7	                            mov rdi, r12	      2431	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	IF_6	CALL_3
0x4003ae1	      0xe800000000	                          call 0x4003ae6	      2431	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	IF_6	CALL_3
0x4003ae6	    0x41c704240700	                      mov dword [r12], 7	      2432	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	IF_6
0x4003aee	      0x49895c2408	                mov qword [r12 + 8], rbx	      2433	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	IF_6
0x4003af3	      0xb801000000	                              mov eax, 1	      2459	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x4003af8	      0xe912010000	                           jmp 0x4003c0f	      2459	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x4003afd	          0x803b2b	                    cmp byte [rbx], 0x2b	      2438	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	ELSE_2	IF_8
0x4003b00	            0x750d	                           jne 0x4003b0f	      2438	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	ELSE_2	IF_8
0x4003b02	          0x4889ef	                            mov rdi, rbp	      2439	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	ELSE_2	CALL_4
0x4003b05	      0xe800000000	                          call 0x4003b0a	      2439	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	ELSE_2	CALL_4
0x4003b0a	          0x4901c5	                            add r13, rax	      2439	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	ELSE_2	CALL_4
0x4003b0d	            0xeb0b	                           jmp 0x4003b1a	      2439	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	ELSE_2	CALL_4
0x4003b0f	          0x4889ef	                            mov rdi, rbp	      2441	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	ELSE_2	CALL_5
0x4003b12	      0xe800000000	                          call 0x4003b17	      2441	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	ELSE_2	CALL_5
0x4003b17	          0x4929c5	                            sub r13, rax	      2441	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	ELSE_2	CALL_5
0x4003b1a	          0x4c89e7	                            mov rdi, r12	      2442	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	ELSE_2	CALL_6
0x4003b1d	      0xe800000000	                          call 0x4003b22	      2442	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	ELSE_2	CALL_6
0x4003b22	    0x41c704240100	                      mov dword [r12], 1	      2443	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	ELSE_2
0x4003b2a	      0x4d896c2408	                mov qword [r12 + 8], r13	      2444	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	ELSE_2
0x4003b2f	      0xb801000000	                              mov eax, 1	      2459	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x4003b34	      0xe9d6000000	                           jmp 0x4003c0f	      2459	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x4003b39	          0x83f807	                              cmp eax, 7	      2449	eval.c	FUNCTION_47	IF_1	SWITCH_1	ELSE_4	IF_9
0x4003b3c	     0xf84a2000000	                            je 0x4003be4	      2449	eval.c	FUNCTION_47	IF_1	SWITCH_1	ELSE_4	IF_9
0x4003b42	      0xe800000000	                          call 0x4003b47	      2453	eval.c	FUNCTION_47	IF_1	SWITCH_1	ELSE_4	CALL_7
0x4003b47	          0x4889c3	                            mov rbx, rax	      2453	eval.c	FUNCTION_47	IF_1	SWITCH_1	ELSE_4	CALL_7
0x4003b4a	          0x4889e6	                            mov rsi, rsp	      2454	eval.c	FUNCTION_47	IF_1	SWITCH_1	ELSE_4	CALL_9
0x4003b4d	          0x4889ef	                            mov rdi, rbp	      2454	eval.c	FUNCTION_47	IF_1	SWITCH_1	ELSE_4	CALL_9
0x4003b50	      0xe800000000	                          call 0x4003b55	      2454	eval.c	FUNCTION_47	IF_1	SWITCH_1	ELSE_4	CALL_9
0x4003b55	          0x4889c6	                            mov rsi, rax	      2454	eval.c	FUNCTION_47	IF_1	SWITCH_1	ELSE_4	CALL_9
0x4003b58	          0x4889df	                            mov rdi, rbx	      2454	eval.c	FUNCTION_47	IF_1	SWITCH_1	ELSE_4	CALL_9
0x4003b5b	      0xe800000000	                          call 0x4003b60	      2454	eval.c	FUNCTION_47	IF_1	SWITCH_1	ELSE_4	CALL_9
0x4003b60	          0x4889c3	                            mov rbx, rax	      2454	eval.c	FUNCTION_47	IF_1	SWITCH_1	ELSE_4	CALL_9
0x4003b63	          0x4c89e7	                            mov rdi, r12	      2455	eval.c	FUNCTION_47	IF_1	SWITCH_1	ELSE_4	CALL_10
0x4003b66	      0xe800000000	                          call 0x4003b6b	      2455	eval.c	FUNCTION_47	IF_1	SWITCH_1	ELSE_4	CALL_10
0x4003b6b	    0x41c704240200	                      mov dword [r12], 2	      2456	eval.c	FUNCTION_47	IF_1	SWITCH_1	ELSE_4
0x4003b73	      0x49895c2408	                mov qword [r12 + 8], rbx	      2457	eval.c	FUNCTION_47	IF_1	SWITCH_1	ELSE_4
0x4003b78	      0xb801000000	                              mov eax, 1	      2459	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x4003b7d	      0xe98d000000	                           jmp 0x4003c0f	      2459	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x4003b82	          0x803b2e	                    cmp byte [rbx], 0x2e	      2466	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_10
0x4003b85	            0x745d	                            je 0x4003be4	      2466	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_10
0x4003b87	          0x8d50ff	                      lea edx, [rax - 1]	      2468	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_10
0x4003b8a	          0x83fa01	                              cmp edx, 1	      2468	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_10
0x4003b8d	            0x7605	                           jbe 0x4003b94	      2468	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_10
0x4003b8f	          0x83f807	                              cmp eax, 7	      2468	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_10
0x4003b92	            0x7550	                           jne 0x4003be4	      2468	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_10
0x4003b94	          0x83f807	                              cmp eax, 7	      2470	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_11
0x4003b97	            0x7507	                           jne 0x4003ba0	      2470	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_11
0x4003b99	      0xf20f104508	            movsd xmm0, qword [rbp + 8] 	      2471	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_11
0x4003b9e	            0xeb11	                           jmp 0x4003bb1	      2471	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_11
0x4003ba0	          0x4889ef	                            mov rdi, rbp	      2473	eval.c	FUNCTION_47	IF_1	SWITCH_1	CALL_11
0x4003ba3	      0xe800000000	                          call 0x4003ba8	      2473	eval.c	FUNCTION_47	IF_1	SWITCH_1	CALL_11
0x4003ba8	        0x660fefc0	                         pxor xmm0, xmm0	      2473	eval.c	FUNCTION_47	IF_1	SWITCH_1	CALL_11
0x4003bac	      0xf2480f2ac0	                      cvtsi2sd xmm0, rax	      2473	eval.c	FUNCTION_47	IF_1	SWITCH_1	CALL_11
0x4003bb1	          0x803b2b	                    cmp byte [rbx], 0x2b	      2474	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_12
0x4003bb4	            0x7515	                           jne 0x4003bcb	      2474	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_12
0x4003bb6	    0xf2410f584424	             addsd xmm0, qword [r12 + 8]	      2475	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_12
0x4003bbd	    0xf2410f114424	             movsd qword [r12 + 8], xmm0	      2475	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_12
0x4003bc4	      0xb801000000	                              mov eax, 1	      2480	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x4003bc9	            0xeb44	                           jmp 0x4003c0f	      2480	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x4003bcb	    0xf2410f104c24	            movsd xmm1, qword [r12 + 8] 	      2477	eval.c	FUNCTION_47	IF_1	SWITCH_1	ELSE_6
0x4003bd2	        0xf20f5cc8	                        subsd xmm1, xmm0	      2477	eval.c	FUNCTION_47	IF_1	SWITCH_1	ELSE_6
0x4003bd6	    0xf2410f114c24	             movsd qword [r12 + 8], xmm1	      2477	eval.c	FUNCTION_47	IF_1	SWITCH_1	ELSE_6
0x4003bdd	      0xb801000000	                              mov eax, 1	      2480	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x4003be2	            0xeb2b	                           jmp 0x4003c0f	      2480	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x4003be4	      0xba05000000	                              mov edx, 5	      2484	eval.c	FUNCTION_47	CALL_13
0x4003be9	      0xbe00000000	                              mov esi, 0	      2484	eval.c	FUNCTION_47	CALL_13
0x4003bee	      0xbf00000000	                              mov edi, 0	      2484	eval.c	FUNCTION_47	CALL_13
0x4003bf3	      0xe800000000	                          call 0x4003bf8	      2484	eval.c	FUNCTION_47	CALL_13
0x4003bf8	          0x4889de	                            mov rsi, rbx	      2484	eval.c	FUNCTION_47	CALL_13
0x4003bfb	          0x4889c7	                            mov rdi, rax	      2484	eval.c	FUNCTION_47	CALL_13
0x4003bfe	      0xe800000000	                          call 0x4003c03	      2484	eval.c	FUNCTION_47	CALL_13
0x4003c03	      0xb800000000	                              mov eax, 0	      2485	eval.c	FUNCTION_47
0x4003c08	            0xeb05	                           jmp 0x4003c0f	      2485	eval.c	FUNCTION_47
0x4003c0a	      0xb801000000	                              mov eax, 1	      2412	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x4003c0f	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	      2486	eval.c	FUNCTION_47
0x4003c14	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2486	eval.c	FUNCTION_47
0x4003c1d	            0x7405	                            je 0x4003c24	      2486	eval.c	FUNCTION_47
0x4003c1f	      0xe800000000	                          call 0x4003c24	      2486	eval.c	FUNCTION_47
0x4003c24	        0x4883c458	                           add rsp, 0x58	      2486	eval.c	FUNCTION_47
0x4003c28	              0x5b	                                 pop rbx	      2486	eval.c	FUNCTION_47
0x4003c29	              0x5d	                                 pop rbp	      2486	eval.c	FUNCTION_47
0x4003c2a	            0x415c	                                 pop r12	      2486	eval.c	FUNCTION_47
0x4003c2c	            0x415d	                                 pop r13	      2486	eval.c	FUNCTION_47
0x4003c2e	              0xc3	                                     ret	      2486	eval.c	FUNCTION_47
assert_beeps	FOR,0:SWITCH,0:DO,0:IF,1:functions,0:WHILE,0:CALL,7:ELSE,0	37
0x400678e	              0x53	                                push rbx	      9034	eval.c	FUNCTION_177
0x400678f	        0x4883ec20	                           sub rsp, 0x20	      9034	eval.c	FUNCTION_177
0x4006793	    0x64488b042528	                mov rax, qword fs:[0x28]	      9034	eval.c	FUNCTION_177
0x400679c	      0x4889442418	             mov qword [rsp + 0x18], rax	      9034	eval.c	FUNCTION_177
0x40067a1	            0x31c0	                            xor eax, eax	      9034	eval.c	FUNCTION_177
0x40067a3	      0xe800000000	                          call 0x40067a8	      9035	eval.c	FUNCTION_177	CALL_1
0x40067a8	          0x4889c3	                            mov rbx, rax	      9035	eval.c	FUNCTION_177	CALL_1
0x40067ab	    0xc70500000000	               mov dword [0x040067b5], 0	      9039	eval.c	FUNCTION_177
0x40067b5	    0xc70500000000	               mov dword [0x040067bf], 1	      9040	eval.c	FUNCTION_177
0x40067bf	    0xc70500000000	               mov dword [0x040067c9], 0	      9041	eval.c	FUNCTION_177
0x40067c9	          0x4889c7	                            mov rdi, rax	      9042	eval.c	FUNCTION_177	CALL_2
0x40067cc	      0xe800000000	                          call 0x40067d1	      9042	eval.c	FUNCTION_177	CALL_2
0x40067d1	      0xb800000000	                              mov eax, 0	      9037	eval.c	FUNCTION_177
0x40067d6	    0x833d00000000	               cmp dword [0x040067dd], 0	      9043	eval.c	FUNCTION_177	IF_1
0x40067dd	            0x7535	                           jne 0x4006814	      9043	eval.c	FUNCTION_177	IF_1
0x40067df	          0x4889e7	                            mov rdi, rsp	      9045	eval.c	FUNCTION_177	IF_1	CALL_3
0x40067e2	      0xe800000000	                          call 0x40067e7	      9045	eval.c	FUNCTION_177	IF_1	CALL_3
0x40067e7	      0xbe00000000	                              mov esi, 0	      9046	eval.c	FUNCTION_177	IF_1	CALL_4
0x40067ec	          0x4889e7	                            mov rdi, rsp	      9046	eval.c	FUNCTION_177	IF_1	CALL_4
0x40067ef	      0xe800000000	                          call 0x40067f4	      9046	eval.c	FUNCTION_177	IF_1	CALL_4
0x40067f4	          0x4889de	                            mov rsi, rbx	      9047	eval.c	FUNCTION_177	IF_1	CALL_5
0x40067f7	          0x4889e7	                            mov rdi, rsp	      9047	eval.c	FUNCTION_177	IF_1	CALL_5
0x40067fa	      0xe800000000	                          call 0x40067ff	      9047	eval.c	FUNCTION_177	IF_1	CALL_5
0x40067ff	          0x4889e7	                            mov rdi, rsp	      9048	eval.c	FUNCTION_177	IF_1	CALL_6
0x4006802	      0xe800000000	                          call 0x4006807	      9048	eval.c	FUNCTION_177	IF_1	CALL_6
0x4006807	          0x4889e7	                            mov rdi, rsp	      9049	eval.c	FUNCTION_177	IF_1	CALL_7
0x400680a	      0xe800000000	                          call 0x400680f	      9049	eval.c	FUNCTION_177	IF_1	CALL_7
0x400680f	      0xb801000000	                              mov eax, 1	      9050	eval.c	FUNCTION_177	IF_1
0x4006814	    0xc70500000000	               mov dword [0x0400681e], 0	      9053	eval.c	FUNCTION_177
0x400681e	    0xc70500000000	               mov dword [0x04006828], 0	      9054	eval.c	FUNCTION_177
0x4006828	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      9056	eval.c	FUNCTION_177
0x400682d	    0x644833142528	                xor rdx, qword fs:[0x28]	      9056	eval.c	FUNCTION_177
0x4006836	            0x7405	                            je 0x400683d	      9056	eval.c	FUNCTION_177
0x4006838	      0xe800000000	                          call 0x400683d	      9056	eval.c	FUNCTION_177
0x400683d	        0x4883c420	                           add rsp, 0x20	      9056	eval.c	FUNCTION_177
0x4006841	              0x5b	                                 pop rbx	      9056	eval.c	FUNCTION_177
0x4006842	              0xc3	                                     ret	      9056	eval.c	FUNCTION_177
skip_var_list	FOR,1:SWITCH,0:DO,0:IF,6:functions,0:WHILE,0:CALL,10:ELSE,3	68
0x4001ea7	            0x4155	                                push r13	      1418	eval.c	FUNCTION_33
0x4001ea9	            0x4154	                                push r12	      1418	eval.c	FUNCTION_33
0x4001eab	              0x55	                                push rbp	      1418	eval.c	FUNCTION_33
0x4001eac	              0x53	                                push rbx	      1418	eval.c	FUNCTION_33
0x4001ead	        0x4883ec08	                              sub rsp, 8	      1418	eval.c	FUNCTION_33
0x4001eb1	          0x4889fb	                            mov rbx, rdi	      1418	eval.c	FUNCTION_33
0x4001eb4	          0x4889f5	                            mov rbp, rsi	      1418	eval.c	FUNCTION_33
0x4001eb7	          0x4989d4	                            mov r12, rdx	      1418	eval.c	FUNCTION_33
0x4001eba	          0x803f5b	                    cmp byte [rdi], 0x5b	      1421	eval.c	FUNCTION_33	IF_1
0x4001ebd	     0xf85ca000000	                           jne 0x4001f8d	      1421	eval.c	FUNCTION_33	IF_1
0x4001ec3	        0x488d7b01	                      lea rdi, [rbx + 1]	      1427	eval.c	FUNCTION_33	IF_1	FOR_1	CALL_1
0x4001ec7	      0xe800000000	                          call 0x4001ecc	      1427	eval.c	FUNCTION_33	IF_1	FOR_1	CALL_1
0x4001ecc	          0x4889c3	                            mov rbx, rax	      1427	eval.c	FUNCTION_33	IF_1	FOR_1	CALL_1
0x4001ecf	          0x4889c7	                            mov rdi, rax	      1428	eval.c	FUNCTION_33	IF_1	FOR_1	CALL_2
0x4001ed2	      0xe88bffffff	                   call sym.skip_var_one	      1428	eval.c	FUNCTION_33	IF_1	FOR_1	CALL_2
0x4001ed7	          0x4989c5	                            mov r13, rax	      1428	eval.c	FUNCTION_33	IF_1	FOR_1	CALL_2
0x4001eda	          0x4839c3	                            cmp rbx, rax	      1429	eval.c	FUNCTION_33	IF_1	FOR_1	IF_2
0x4001edd	            0x7529	                           jne 0x4001f08	      1429	eval.c	FUNCTION_33	IF_1	FOR_1	IF_2
0x4001edf	      0xba05000000	                              mov edx, 5	      1431	eval.c	FUNCTION_33	IF_1	FOR_1	IF_2	CALL_4
0x4001ee4	      0xbe00000000	                              mov esi, 0	      1431	eval.c	FUNCTION_33	IF_1	FOR_1	IF_2	CALL_4
0x4001ee9	      0xbf00000000	                              mov edi, 0	      1431	eval.c	FUNCTION_33	IF_1	FOR_1	IF_2	CALL_4
0x4001eee	      0xe800000000	                          call 0x4001ef3	      1431	eval.c	FUNCTION_33	IF_1	FOR_1	IF_2	CALL_4
0x4001ef3	          0x4c89ee	                            mov rsi, r13	      1431	eval.c	FUNCTION_33	IF_1	FOR_1	IF_2	CALL_4
0x4001ef6	          0x4889c7	                            mov rdi, rax	      1431	eval.c	FUNCTION_33	IF_1	FOR_1	IF_2	CALL_4
0x4001ef9	      0xe800000000	                          call 0x4001efe	      1431	eval.c	FUNCTION_33	IF_1	FOR_1	IF_2	CALL_4
0x4001efe	      0xb800000000	                              mov eax, 0	      1432	eval.c	FUNCTION_33	IF_1	FOR_1	IF_2
0x4001f03	      0xe98a000000	                           jmp 0x4001f92	      1432	eval.c	FUNCTION_33	IF_1	FOR_1	IF_2
0x4001f08	        0x83450001	                      add dword [rbp], 1	      1434	eval.c	FUNCTION_33	IF_1	FOR_1
0x4001f0c	          0x4889c7	                            mov rdi, rax	      1436	eval.c	FUNCTION_33	IF_1	FOR_1	CALL_5
0x4001f0f	      0xe800000000	                          call 0x4001f14	      1436	eval.c	FUNCTION_33	IF_1	FOR_1	CALL_5
0x4001f14	          0x4889c3	                            mov rbx, rax	      1436	eval.c	FUNCTION_33	IF_1	FOR_1	CALL_5
0x4001f17	           0xfb600	                   movzx eax, byte [rax]	      1437	eval.c	FUNCTION_33	IF_1	FOR_1	IF_3
0x4001f1a	            0x3c5d	                            cmp al, 0x5d	      1437	eval.c	FUNCTION_33	IF_1	FOR_1	IF_3
0x4001f1c	            0x7469	                            je 0x4001f87	      1437	eval.c	FUNCTION_33	IF_1	FOR_1	IF_3
0x4001f1e	            0x3c3b	                            cmp al, 0x3b	      1439	eval.c	FUNCTION_33	IF_1	FOR_1	ELSE_1	IF_4
0x4001f20	            0x7537	                           jne 0x4001f59	      1439	eval.c	FUNCTION_33	IF_1	FOR_1	ELSE_1	IF_4
0x4001f22	      0x41833c2401	                      cmp dword [r12], 1	      1441	eval.c	FUNCTION_33	IF_1	FOR_1	ELSE_1	IF_4	IF_5
0x4001f27	            0x7523	                           jne 0x4001f4c	      1441	eval.c	FUNCTION_33	IF_1	FOR_1	ELSE_1	IF_4	IF_5
0x4001f29	      0xba05000000	                              mov edx, 5	      1443	eval.c	FUNCTION_33	IF_1	FOR_1	ELSE_1	IF_4	IF_5	CALL_7
0x4001f2e	      0xbe00000000	                              mov esi, 0	      1443	eval.c	FUNCTION_33	IF_1	FOR_1	ELSE_1	IF_4	IF_5	CALL_7
0x4001f33	      0xbf00000000	                              mov edi, 0	      1443	eval.c	FUNCTION_33	IF_1	FOR_1	ELSE_1	IF_4	IF_5	CALL_7
0x4001f38	      0xe800000000	                          call 0x4001f3d	      1443	eval.c	FUNCTION_33	IF_1	FOR_1	ELSE_1	IF_4	IF_5	CALL_7
0x4001f3d	          0x4889c7	                            mov rdi, rax	      1443	eval.c	FUNCTION_33	IF_1	FOR_1	ELSE_1	IF_4	IF_5	CALL_7
0x4001f40	      0xe800000000	                          call 0x4001f45	      1443	eval.c	FUNCTION_33	IF_1	FOR_1	ELSE_1	IF_4	IF_5	CALL_7
0x4001f45	      0xb800000000	                              mov eax, 0	      1444	eval.c	FUNCTION_33	IF_1	FOR_1	ELSE_1	IF_4	IF_5
0x4001f4a	            0xeb46	                           jmp 0x4001f92	      1444	eval.c	FUNCTION_33	IF_1	FOR_1	ELSE_1	IF_4	IF_5
0x4001f4c	    0x41c704240100	                      mov dword [r12], 1	      1446	eval.c	FUNCTION_33	IF_1	FOR_1	ELSE_1	IF_4
0x4001f54	      0xe96affffff	                           jmp 0x4001ec3	      1446	eval.c	FUNCTION_33	IF_1	FOR_1	ELSE_1	IF_4
0x4001f59	            0x3c2c	                            cmp al, 0x2c	      1448	eval.c	FUNCTION_33	IF_1	FOR_1	ELSE_2	IF_6
0x4001f5b	     0xf8462ffffff	                            je 0x4001ec3	      1448	eval.c	FUNCTION_33	IF_1	FOR_1	ELSE_2	IF_6
0x4001f61	      0xba05000000	                              mov edx, 5	      1450	eval.c	FUNCTION_33	IF_1	FOR_1	ELSE_2	IF_6	CALL_9
0x4001f66	      0xbe00000000	                              mov esi, 0	      1450	eval.c	FUNCTION_33	IF_1	FOR_1	ELSE_2	IF_6	CALL_9
0x4001f6b	      0xbf00000000	                              mov edi, 0	      1450	eval.c	FUNCTION_33	IF_1	FOR_1	ELSE_2	IF_6	CALL_9
0x4001f70	      0xe800000000	                          call 0x4001f75	      1450	eval.c	FUNCTION_33	IF_1	FOR_1	ELSE_2	IF_6	CALL_9
0x4001f75	          0x4889de	                            mov rsi, rbx	      1450	eval.c	FUNCTION_33	IF_1	FOR_1	ELSE_2	IF_6	CALL_9
0x4001f78	          0x4889c7	                            mov rdi, rax	      1450	eval.c	FUNCTION_33	IF_1	FOR_1	ELSE_2	IF_6	CALL_9
0x4001f7b	      0xe800000000	                          call 0x4001f80	      1450	eval.c	FUNCTION_33	IF_1	FOR_1	ELSE_2	IF_6	CALL_9
0x4001f80	      0xb800000000	                              mov eax, 0	      1451	eval.c	FUNCTION_33	IF_1	FOR_1	ELSE_2	IF_6
0x4001f85	            0xeb0b	                           jmp 0x4001f92	      1451	eval.c	FUNCTION_33	IF_1	FOR_1	ELSE_2	IF_6
0x4001f87	        0x488d4301	                      lea rax, [rbx + 1]	      1454	eval.c	FUNCTION_33	IF_1
0x4001f8b	            0xeb05	                           jmp 0x4001f92	      1454	eval.c	FUNCTION_33	IF_1
0x4001f8d	      0xe8d0feffff	                   call sym.skip_var_one	      1457	eval.c	FUNCTION_33	CALL_10
0x4001f92	        0x4883c408	                              add rsp, 8	      1458	eval.c	FUNCTION_33
0x4001f96	              0x5b	                                 pop rbx	      1458	eval.c	FUNCTION_33
0x4001f97	              0x5d	                                 pop rbp	      1458	eval.c	FUNCTION_33
0x4001f98	            0x415c	                                 pop r12	      1458	eval.c	FUNCTION_33
0x4001f9a	            0x415d	                                 pop r13	      1458	eval.c	FUNCTION_33
0x4001f9c	              0xc3	                                     ret	      1458	eval.c	FUNCTION_33
skip_var_one	FOR,0:SWITCH,0:DO,0:IF,1:functions,0:WHILE,0:CALL,1:ELSE,0	20
0x4001e62	        0x4883ec08	                              sub rsp, 8	      1466	eval.c	FUNCTION_34
0x4001e66	          0x4889f8	                            mov rax, rdi	      1466	eval.c	FUNCTION_34
0x4001e69	           0xfb617	                   movzx edx, byte [rdi]	      1467	eval.c	FUNCTION_34	IF_1
0x4001e6c	          0x80fa40	                            cmp dl, 0x40	      1467	eval.c	FUNCTION_34	IF_1
0x4001e6f	            0x750c	                           jne 0x4001e7d	      1467	eval.c	FUNCTION_34	IF_1
0x4001e71	        0x807f0100	                   cmp byte [rdi + 1], 0	      1467	eval.c	FUNCTION_34	IF_1
0x4001e75	            0x7417	                            je 0x4001e8e	      1467	eval.c	FUNCTION_34	IF_1
0x4001e77	        0x4883c002	                              add rax, 2	      1468	eval.c	FUNCTION_34	IF_1
0x4001e7b	            0xeb25	                           jmp 0x4001ea2	      1468	eval.c	FUNCTION_34	IF_1
0x4001e7d	          0x83e2fd	                     and edx, 0xfffffffd	      1469	eval.c	FUNCTION_34	CALL_1
0x4001e80	          0x80fa24	                            cmp dl, 0x24	      1469	eval.c	FUNCTION_34	CALL_1
0x4001e83	        0x400f94c7	                                sete dil	      1469	eval.c	FUNCTION_34	CALL_1
0x4001e87	        0x400fb6ff	                          movzx edi, dil	      1469	eval.c	FUNCTION_34	CALL_1
0x4001e8b	          0x4801c7	                            add rdi, rax	      1469	eval.c	FUNCTION_34	CALL_1
0x4001e8e	      0xb903000000	                              mov ecx, 3	      1469	eval.c	FUNCTION_34	CALL_1
0x4001e93	      0xba00000000	                              mov edx, 0	      1469	eval.c	FUNCTION_34	CALL_1
0x4001e98	      0xbe00000000	                              mov esi, 0	      1469	eval.c	FUNCTION_34	CALL_1
0x4001e9d	      0xe800000000	                          call 0x4001ea2	      1469	eval.c	FUNCTION_34	CALL_1
0x4001ea2	        0x4883c408	                              add rsp, 8	      1471	eval.c	FUNCTION_34
0x4001ea6	              0xc3	                                     ret	      1471	eval.c	FUNCTION_34
ga_concat_esc	FOR,1:SWITCH,1:DO,0:IF,2:functions,0:WHILE,0:CALL,11:ELSE,1	90
0x40004ff	              0x55	                                push rbp	      9109	eval.c	FUNCTION_179
0x4000500	              0x53	                                push rbx	      9109	eval.c	FUNCTION_179
0x4000501	        0x4883ec58	                           sub rsp, 0x58	      9109	eval.c	FUNCTION_179
0x4000505	          0x4889fd	                            mov rbp, rdi	      9109	eval.c	FUNCTION_179
0x4000508	    0x64488b042528	                mov rax, qword fs:[0x28]	      9109	eval.c	FUNCTION_179
0x4000511	      0x4889442448	             mov qword [rsp + 0x48], rax	      9109	eval.c	FUNCTION_179
0x4000516	            0x31c0	                            xor eax, eax	      9109	eval.c	FUNCTION_179
0x4000518	          0x4885f6	                           test rsi, rsi	      9113	eval.c	FUNCTION_179	IF_1
0x400051b	            0x740f	                            je 0x400052c	      9113	eval.c	FUNCTION_179	IF_1
0x400051d	          0x4889f3	                            mov rbx, rsi	      9113	eval.c	FUNCTION_179	IF_1
0x4000520	           0xfb60e	                   movzx ecx, byte [rsi]	      9119	eval.c	FUNCTION_179	FOR_1
0x4000523	            0x84c9	                             test cl, cl	      9119	eval.c	FUNCTION_179	FOR_1
0x4000525	            0x7514	                           jne 0x400053b	      9119	eval.c	FUNCTION_179	FOR_1
0x4000527	      0xe9f4000000	                           jmp 0x4000620	      9119	eval.c	FUNCTION_179	FOR_1
0x400052c	      0xbe00000000	                              mov esi, 0	      9115	eval.c	FUNCTION_179	IF_1	CALL_1
0x4000531	      0xe800000000	                          call 0x4000536	      9115	eval.c	FUNCTION_179	IF_1	CALL_1
0x4000536	      0xe9e5000000	                           jmp 0x4000620	      9115	eval.c	FUNCTION_179	IF_1	CALL_1
0x400053b	          0x80f90c	                             cmp cl, 0xc	      9120	eval.c	FUNCTION_179	FOR_1	SWITCH_1
0x400053e	            0x744f	                            je 0x400058f	      9120	eval.c	FUNCTION_179	FOR_1	SWITCH_1
0x4000540	          0x80f90c	                             cmp cl, 0xc	      9120	eval.c	FUNCTION_179	FOR_1	SWITCH_1
0x4000543	            0x7715	                            ja 0x400055a	      9120	eval.c	FUNCTION_179	FOR_1	SWITCH_1
0x4000545	          0x80f909	                               cmp cl, 9	      9120	eval.c	FUNCTION_179	FOR_1	SWITCH_1
0x4000548	            0x7463	                            je 0x40005ad	      9120	eval.c	FUNCTION_179	FOR_1	SWITCH_1
0x400054a	          0x80f90a	                             cmp cl, 0xa	      9120	eval.c	FUNCTION_179	FOR_1	SWITCH_1
0x400054d	            0x744f	                            je 0x400059e	      9120	eval.c	FUNCTION_179	FOR_1	SWITCH_1
0x400054f	          0x80f908	                               cmp cl, 8	      9120	eval.c	FUNCTION_179	FOR_1	SWITCH_1
0x4000552	     0xf8582000000	                           jne 0x40005da	      9120	eval.c	FUNCTION_179	FOR_1	SWITCH_1
0x4000558	            0xeb11	                           jmp 0x400056b	      9120	eval.c	FUNCTION_179	FOR_1	SWITCH_1
0x400055a	          0x80f91b	                            cmp cl, 0x1b	      9120	eval.c	FUNCTION_179	FOR_1	SWITCH_1
0x400055d	            0x741e	                            je 0x400057d	      9120	eval.c	FUNCTION_179	FOR_1	SWITCH_1
0x400055f	          0x80f95c	                            cmp cl, 0x5c	      9120	eval.c	FUNCTION_179	FOR_1	SWITCH_1
0x4000562	            0x7467	                            je 0x40005cb	      9120	eval.c	FUNCTION_179	FOR_1	SWITCH_1
0x4000564	          0x80f90d	                             cmp cl, 0xd	      9120	eval.c	FUNCTION_179	FOR_1	SWITCH_1
0x4000567	            0x7571	                           jne 0x40005da	      9120	eval.c	FUNCTION_179	FOR_1	SWITCH_1
0x4000569	            0xeb51	                           jmp 0x40005bc	      9120	eval.c	FUNCTION_179	FOR_1	SWITCH_1
0x400056b	      0xbe00000000	                              mov esi, 0	      9122	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_2
0x4000570	          0x4889ef	                            mov rdi, rbp	      9122	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_2
0x4000573	      0xe800000000	                          call 0x4000578	      9122	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_2
0x4000578	      0xe994000000	                           jmp 0x4000611	      9122	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_2
0x400057d	      0xbe00000000	                              mov esi, 0	      9123	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_3
0x4000582	          0x4889ef	                            mov rdi, rbp	      9123	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_3
0x4000585	      0xe800000000	                          call 0x400058a	      9123	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_3
0x400058a	      0xe982000000	                           jmp 0x4000611	      9123	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_3
0x400058f	      0xbe00000000	                              mov esi, 0	      9124	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_4
0x4000594	          0x4889ef	                            mov rdi, rbp	      9124	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_4
0x4000597	      0xe800000000	                          call 0x400059c	      9124	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_4
0x400059c	            0xeb73	                           jmp 0x4000611	      9124	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_4
0x400059e	      0xbe00000000	                              mov esi, 0	      9125	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_5
0x40005a3	          0x4889ef	                            mov rdi, rbp	      9125	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_5
0x40005a6	      0xe800000000	                          call 0x40005ab	      9125	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_5
0x40005ab	            0xeb64	                           jmp 0x4000611	      9125	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_5
0x40005ad	      0xbe00000000	                              mov esi, 0	      9126	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_6
0x40005b2	          0x4889ef	                            mov rdi, rbp	      9126	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_6
0x40005b5	      0xe800000000	                          call 0x40005ba	      9126	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_6
0x40005ba	            0xeb55	                           jmp 0x4000611	      9126	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_6
0x40005bc	      0xbe00000000	                              mov esi, 0	      9127	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_7
0x40005c1	          0x4889ef	                            mov rdi, rbp	      9127	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_7
0x40005c4	      0xe800000000	                          call 0x40005c9	      9127	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_7
0x40005c9	            0xeb46	                           jmp 0x4000611	      9127	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_7
0x40005cb	      0xbe00000000	                              mov esi, 0	      9128	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_8
0x40005d0	          0x4889ef	                            mov rdi, rbp	      9128	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_8
0x40005d3	      0xe800000000	                          call 0x40005d8	      9128	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_8
0x40005d8	            0xeb37	                           jmp 0x4000611	      9128	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_8
0x40005da	          0x80f91f	                            cmp cl, 0x1f	      9130	eval.c	FUNCTION_179	FOR_1	SWITCH_1	IF_2
0x40005dd	            0x7727	                            ja 0x4000606	      9130	eval.c	FUNCTION_179	FOR_1	SWITCH_1	IF_2
0x40005df	           0xfb6c9	                           movzx ecx, cl	      9132	eval.c	FUNCTION_179	FOR_1	SWITCH_1	IF_2	CALL_9
0x40005e2	      0xba00000000	                              mov edx, 0	      9132	eval.c	FUNCTION_179	FOR_1	SWITCH_1	IF_2	CALL_9
0x40005e7	      0xbe41000000	                           mov esi, 0x41	      9132	eval.c	FUNCTION_179	FOR_1	SWITCH_1	IF_2	CALL_9
0x40005ec	          0x4889e7	                            mov rdi, rsp	      9132	eval.c	FUNCTION_179	FOR_1	SWITCH_1	IF_2	CALL_9
0x40005ef	      0xb800000000	                              mov eax, 0	      9132	eval.c	FUNCTION_179	FOR_1	SWITCH_1	IF_2	CALL_9
0x40005f4	      0xe800000000	                          call 0x40005f9	      9132	eval.c	FUNCTION_179	FOR_1	SWITCH_1	IF_2	CALL_9
0x40005f9	          0x4889e6	                            mov rsi, rsp	      9133	eval.c	FUNCTION_179	FOR_1	SWITCH_1	IF_2	CALL_10
0x40005fc	          0x4889ef	                            mov rdi, rbp	      9133	eval.c	FUNCTION_179	FOR_1	SWITCH_1	IF_2	CALL_10
0x40005ff	      0xe800000000	                          call 0x4000604	      9133	eval.c	FUNCTION_179	FOR_1	SWITCH_1	IF_2	CALL_10
0x4000604	            0xeb0b	                           jmp 0x4000611	      9133	eval.c	FUNCTION_179	FOR_1	SWITCH_1	IF_2	CALL_10
0x4000606	           0xfb6f1	                           movzx esi, cl	      9136	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_11
0x4000609	          0x4889ef	                            mov rdi, rbp	      9136	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_11
0x400060c	      0xe800000000	                          call 0x4000611	      9136	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_11
0x4000611	        0x4883c301	                              add rbx, 1	      9119	eval.c	FUNCTION_179	FOR_1
0x4000615	           0xfb60b	                   movzx ecx, byte [rbx]	      9119	eval.c	FUNCTION_179	FOR_1
0x4000618	            0x84c9	                             test cl, cl	      9119	eval.c	FUNCTION_179	FOR_1
0x400061a	     0xf851bffffff	                           jne 0x400053b	      9119	eval.c	FUNCTION_179	FOR_1
0x4000620	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      9139	eval.c	FUNCTION_179
0x4000625	    0x644833042528	                xor rax, qword fs:[0x28]	      9139	eval.c	FUNCTION_179
0x400062e	            0x7405	                            je 0x4000635	      9139	eval.c	FUNCTION_179
0x4000630	      0xe800000000	                          call 0x4000635	      9139	eval.c	FUNCTION_179
0x4000635	        0x4883c458	                           add rsp, 0x58	      9139	eval.c	FUNCTION_179
0x4000639	              0x5b	                                 pop rbx	      9139	eval.c	FUNCTION_179
0x400063a	              0x5d	                                 pop rbp	      9139	eval.c	FUNCTION_179
0x400063b	              0xc3	                                     ret	      9139	eval.c	FUNCTION_179
set_vim_var_dict	FOR,0:SWITCH,0:DO,0:IF,1:functions,0:WHILE,0:CALL,2:ELSE,0	21
0x40029a3	              0x55	                                push rbp	      6501	eval.c	FUNCTION_111
0x40029a4	              0x53	                                push rbx	      6501	eval.c	FUNCTION_111
0x40029a5	        0x4883ec08	                              sub rsp, 8	      6501	eval.c	FUNCTION_111
0x40029a9	          0x4889f5	                            mov rbp, rsi	      6501	eval.c	FUNCTION_111
0x40029ac	          0x4863df	                         movsxd rbx, edi	      6502	eval.c	FUNCTION_111	CALL_1
0x40029af	    0x488d04dd0000	                        lea rax, [rbx*8]	      6502	eval.c	FUNCTION_111	CALL_1
0x40029b7	        0x48c1e306	                              shl rbx, 6	      6502	eval.c	FUNCTION_111	CALL_1
0x40029bb	          0x4829c3	                            sub rbx, rax	      6502	eval.c	FUNCTION_111	CALL_1
0x40029be	    0x488dbb000000	                          lea rdi, [rbx]	      6502	eval.c	FUNCTION_111	CALL_1
0x40029c5	      0xe800000000	                          call 0x40029ca	      6502	eval.c	FUNCTION_111	CALL_1
0x40029ca	    0xc78300000000	                      mov dword [rbx], 6	      6503	eval.c	FUNCTION_111
0x40029d4	    0x4889ab000000	                    mov qword [rbx], rbp	      6504	eval.c	FUNCTION_111
0x40029db	          0x4885ed	                           test rbp, rbp	      6505	eval.c	FUNCTION_111	IF_1
0x40029de	            0x740c	                            je 0x40029ec	      6505	eval.c	FUNCTION_111	IF_1
0x40029e0	        0x83450401	                  add dword [rbp + 4], 1	      6507	eval.c	FUNCTION_111	IF_1
0x40029e4	          0x4889ef	                            mov rdi, rbp	      6508	eval.c	FUNCTION_111	IF_1	CALL_2
0x40029e7	      0xe800000000	                          call 0x40029ec	      6508	eval.c	FUNCTION_111	IF_1	CALL_2
0x40029ec	        0x4883c408	                              add rsp, 8	      6510	eval.c	FUNCTION_111
0x40029f0	              0x5b	                                 pop rbx	      6510	eval.c	FUNCTION_111
0x40029f1	              0x5d	                                 pop rbp	      6510	eval.c	FUNCTION_111
0x40029f2	              0xc3	                                     ret	      6510	eval.c	FUNCTION_111
list_hashtable_vars	FOR,1:SWITCH,0:DO,0:IF,2:functions,0:WHILE,0:CALL,3:ELSE,0	67
0x40037c5	            0x4157	                                push r15	      1483	eval.c	FUNCTION_35
0x40037c7	            0x4156	                                push r14	      1483	eval.c	FUNCTION_35
0x40037c9	            0x4155	                                push r13	      1483	eval.c	FUNCTION_35
0x40037cb	            0x4154	                                push r12	      1483	eval.c	FUNCTION_35
0x40037cd	              0x55	                                push rbp	      1483	eval.c	FUNCTION_35
0x40037ce	              0x53	                                push rbx	      1483	eval.c	FUNCTION_35
0x40037cf	        0x4883ec68	                           sub rsp, 0x68	      1483	eval.c	FUNCTION_35
0x40037d3	    0x64488b042528	                mov rax, qword fs:[0x28]	      1483	eval.c	FUNCTION_35
0x40037dc	      0x4889442458	             mov qword [rsp + 0x58], rax	      1483	eval.c	FUNCTION_35
0x40037e1	            0x31c0	                            xor eax, eax	      1483	eval.c	FUNCTION_35
0x40037e3	        0x488b4708	                mov rax, qword [rdi + 8]	      1488	eval.c	FUNCTION_35
0x40037e7	        0x488b6f20	            mov rbp, qword [rdi + 0x20] 	      1489	eval.c	FUNCTION_35	FOR_1
0x40037eb	            0x85c0	                           test eax, eax	      1489	eval.c	FUNCTION_35	FOR_1
0x40037ed	     0xf8e92000000	                           jle 0x4003885	      1489	eval.c	FUNCTION_35	FOR_1
0x40037f3	          0x4989f6	                            mov r14, rsi	      1489	eval.c	FUNCTION_35	FOR_1
0x40037f6	          0x4189d5	                           mov r13d, edx	      1489	eval.c	FUNCTION_35	FOR_1
0x40037f9	          0x4989cf	                            mov r15, rcx	      1489	eval.c	FUNCTION_35	FOR_1
0x40037fc	          0x4189c4	                           mov r12d, eax	      1489	eval.c	FUNCTION_35	FOR_1
0x40037ff	    0x8b0500000000	            mov eax, dword [0x04003805] 	      1489	eval.c	FUNCTION_35	FOR_1
0x4003805	            0x85c0	                           test eax, eax	      1489	eval.c	FUNCTION_35	FOR_1
0x4003807	            0x757c	                           jne 0x4003885	      1489	eval.c	FUNCTION_35	FOR_1
0x4003809	        0x488b5d08	                mov rbx, qword [rbp + 8]	      1491	eval.c	FUNCTION_35	FOR_1	IF_1	CALL_1
0x400380d	    0x4881fb000000	                              cmp rbx, 0	      1491	eval.c	FUNCTION_35	FOR_1	IF_1	CALL_1
0x4003814	            0x745c	                            je 0x4003872	      1491	eval.c	FUNCTION_35	FOR_1	IF_1	CALL_1
0x4003816	          0x4885db	                           test rbx, rbx	      1491	eval.c	FUNCTION_35	FOR_1	IF_1	CALL_1
0x4003819	            0x7457	                            je 0x4003872	      1491	eval.c	FUNCTION_35	FOR_1	IF_1	CALL_1
0x400381b	        0x4183ec01	                             sub r12d, 1	      1493	eval.c	FUNCTION_35	FOR_1	IF_1
0x400381f	          0x4585ed	                         test r13d, r13d	      1495	eval.c	FUNCTION_35	FOR_1	IF_1	IF_2
0x4003822	            0x750d	                           jne 0x4003831	      1495	eval.c	FUNCTION_35	FOR_1	IF_1	IF_2
0x4003824	        0x837bef02	               cmp dword [rbx - 0x11], 2	      1495	eval.c	FUNCTION_35	FOR_1	IF_1	IF_2
0x4003828	            0x7507	                           jne 0x4003831	      1495	eval.c	FUNCTION_35	FOR_1	IF_1	IF_2
0x400382a	      0x48837bf700	                  cmp qword [rbx - 9], 0	      1496	eval.c	FUNCTION_35	FOR_1	IF_1	IF_2
0x400382f	            0x7441	                            je 0x4003872	      1496	eval.c	FUNCTION_35	FOR_1	IF_1	IF_2
0x4003831	      0xe800000000	                          call 0x4003836	      7464	eval.c	FUNCTION_141	CALL_2
0x4003836	        0x488d7bef	                   lea rdi, [rbx - 0x11]	      7464	eval.c	FUNCTION_141	CALL_2
0x400383a	            0x89c1	                            mov ecx, eax	      7464	eval.c	FUNCTION_141	CALL_2
0x400383c	      0x488d542410	                   lea rdx, [rsp + 0x10]	      7464	eval.c	FUNCTION_141	CALL_2
0x4003841	      0x488d742408	                      lea rsi, [rsp + 8]	      7464	eval.c	FUNCTION_141	CALL_2
0x4003846	      0xe800000000	                          call 0x400384b	      7464	eval.c	FUNCTION_141	CALL_2
0x400384b	          0x4885c0	                           test rax, rax	      7465	eval.c	FUNCTION_141	CALL_3
0x400384e	      0xb900000000	                              mov ecx, 0	      7465	eval.c	FUNCTION_141	CALL_3
0x4003853	        0x480f45c8	                         cmovne rcx, rax	      7465	eval.c	FUNCTION_141	CALL_3
0x4003857	          0x8b53ef	             mov edx, dword [rbx - 0x11]	      7465	eval.c	FUNCTION_141	CALL_3
0x400385a	          0x4d89f8	                             mov r8, r15	      7465	eval.c	FUNCTION_141	CALL_3
0x400385d	          0x4889de	                            mov rsi, rbx	      7465	eval.c	FUNCTION_141	CALL_3
0x4003860	          0x4c89f7	                            mov rdi, r14	      7465	eval.c	FUNCTION_141	CALL_3
0x4003863	      0xe872cbffff	                 call sym.list_one_var_a	      7465	eval.c	FUNCTION_141	CALL_3
0x4003868	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      7467	eval.c	FUNCTION_141	CALL_4
0x400386d	      0xe800000000	                          call 0x4003872	      7467	eval.c	FUNCTION_141	CALL_4
0x4003872	        0x4883c510	                           add rbp, 0x10	      1489	eval.c	FUNCTION_35	FOR_1
0x4003876	          0x4585e4	                         test r12d, r12d	      1489	eval.c	FUNCTION_35	FOR_1
0x4003879	            0x7e0a	                           jle 0x4003885	      1489	eval.c	FUNCTION_35	FOR_1
0x400387b	    0x8b0500000000	            mov eax, dword [0x04003881] 	      1489	eval.c	FUNCTION_35	FOR_1
0x4003881	            0x85c0	                           test eax, eax	      1489	eval.c	FUNCTION_35	FOR_1
0x4003883	            0x7484	                            je 0x4003809	      1489	eval.c	FUNCTION_35	FOR_1
0x4003885	      0x488b442458	            mov rax, qword [rsp + 0x58] 	      1500	eval.c	FUNCTION_35
0x400388a	    0x644833042528	                xor rax, qword fs:[0x28]	      1500	eval.c	FUNCTION_35
0x4003893	            0x7405	                            je 0x400389a	      1500	eval.c	FUNCTION_35
0x4003895	      0xe800000000	                          call 0x400389a	      1500	eval.c	FUNCTION_35
0x400389a	        0x4883c468	                           add rsp, 0x68	      1500	eval.c	FUNCTION_35
0x400389e	              0x5b	                                 pop rbx	      1500	eval.c	FUNCTION_35
0x400389f	              0x5d	                                 pop rbp	      1500	eval.c	FUNCTION_35
0x40038a0	            0x415c	                                 pop r12	      1500	eval.c	FUNCTION_35
0x40038a2	            0x415d	                                 pop r13	      1500	eval.c	FUNCTION_35
0x40038a4	            0x415e	                                 pop r14	      1500	eval.c	FUNCTION_35
0x40038a6	            0x415f	                                 pop r15	      1500	eval.c	FUNCTION_35
0x40038a8	              0xc3	                                     ret	      1500	eval.c	FUNCTION_35
typval_tostring	FOR,0:SWITCH,0:DO,0:IF,2:functions,0:WHILE,0:CALL,3:ELSE,0	27
0x400d14e	        0x4883ec68	                           sub rsp, 0x68	      9396	eval.c	FUNCTION_182
0x400d152	    0x64488b042528	                mov rax, qword fs:[0x28]	      9396	eval.c	FUNCTION_182
0x400d15b	      0x4889442458	             mov qword [rsp + 0x58], rax	      9396	eval.c	FUNCTION_182
0x400d160	            0x31c0	                            xor eax, eax	      9396	eval.c	FUNCTION_182
0x400d162	          0x4885ff	                           test rdi, rdi	      9401	eval.c	FUNCTION_182	IF_1
0x400d165	            0x750c	                           jne 0x400d173	      9401	eval.c	FUNCTION_182	IF_1
0x400d167	      0xbf00000000	                              mov edi, 0	      9402	eval.c	FUNCTION_182	CALL_1
0x400d16c	      0xe800000000	                          call 0x400d171	      9402	eval.c	FUNCTION_182	CALL_1
0x400d171	            0xeb30	                           jmp 0x400d1a3	      9402	eval.c	FUNCTION_182	CALL_1
0x400d173	      0xb900000000	                              mov ecx, 0	      9403	eval.c	FUNCTION_182	CALL_2
0x400d178	      0x488d542410	                   lea rdx, [rsp + 0x10]	      9403	eval.c	FUNCTION_182	CALL_2
0x400d17d	      0x488d742408	                      lea rsi, [rsp + 8]	      9403	eval.c	FUNCTION_182	CALL_2
0x400d182	      0xe800000000	                          call 0x400d187	      9403	eval.c	FUNCTION_182	CALL_2
0x400d187	          0x4889c7	                            mov rdi, rax	      9403	eval.c	FUNCTION_182	CALL_2
0x400d18a	          0x4885c0	                           test rax, rax	      9405	eval.c	FUNCTION_182	IF_2
0x400d18d	            0x740f	                            je 0x400d19e	      9405	eval.c	FUNCTION_182	IF_2
0x400d18f	    0x48837c240800	                  cmp qword [rsp + 8], 0	      9405	eval.c	FUNCTION_182	IF_2
0x400d195	            0x750c	                           jne 0x400d1a3	      9405	eval.c	FUNCTION_182	IF_2
0x400d197	      0xe800000000	                          call 0x400d19c	      9406	eval.c	FUNCTION_182	CALL_3
0x400d19c	            0xeb05	                           jmp 0x400d1a3	      9406	eval.c	FUNCTION_182	CALL_3
0x400d19e	      0xb800000000	                              mov eax, 0	      9403	eval.c	FUNCTION_182	CALL_2
0x400d1a3	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	      9408	eval.c	FUNCTION_182
0x400d1a8	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      9408	eval.c	FUNCTION_182
0x400d1b1	            0x7405	                            je 0x400d1b8	      9408	eval.c	FUNCTION_182
0x400d1b3	      0xe800000000	                          call 0x400d1b8	      9408	eval.c	FUNCTION_182
0x400d1b8	        0x4883c468	                           add rsp, 0x68	      9408	eval.c	FUNCTION_182
0x400d1bc	              0xc3	                                     ret	      9408	eval.c	FUNCTION_182
reset_v_option_vars	FOR,0:SWITCH,0:DO,0:IF,0:functions,0:WHILE,0:CALL,3:ELSE,0	15
0x4006280	        0x4883ec08	                              sub rsp, 8	      8774	eval.c	FUNCTION_167
0x4006284	      0xbaffffffff	                     mov edx, 0xffffffff	      8775	eval.c	FUNCTION_167	CALL_1
0x4006289	      0xbe00000000	                              mov esi, 0	      8775	eval.c	FUNCTION_167	CALL_1
0x400628e	      0xbf3d000000	                           mov edi, 0x3d	      8775	eval.c	FUNCTION_167	CALL_1
0x4006293	      0xe800000000	                          call 0x4006298	      8775	eval.c	FUNCTION_167	CALL_1
0x4006298	      0xbaffffffff	                     mov edx, 0xffffffff	      8776	eval.c	FUNCTION_167	CALL_2
0x400629d	      0xbe00000000	                              mov esi, 0	      8776	eval.c	FUNCTION_167	CALL_2
0x40062a2	      0xbf3e000000	                           mov edi, 0x3e	      8776	eval.c	FUNCTION_167	CALL_2
0x40062a7	      0xe800000000	                          call 0x40062ac	      8776	eval.c	FUNCTION_167	CALL_2
0x40062ac	      0xbaffffffff	                     mov edx, 0xffffffff	      8777	eval.c	FUNCTION_167	CALL_3
0x40062b1	      0xbe00000000	                              mov esi, 0	      8777	eval.c	FUNCTION_167	CALL_3
0x40062b6	      0xbf3f000000	                           mov edi, 0x3f	      8777	eval.c	FUNCTION_167	CALL_3
0x40062bb	      0xe800000000	                          call 0x40062c0	      8777	eval.c	FUNCTION_167	CALL_3
0x40062c0	        0x4883c408	                              add rsp, 8	      8778	eval.c	FUNCTION_167
0x40062c4	              0xc3	                                     ret	      8778	eval.c	FUNCTION_167
v_throwpoint	FOR,0:SWITCH,0:DO,0:IF,1:functions,0:WHILE,0:CALL,0:ELSE,0	7
0x4002040	          0x4885ff	                           test rdi, rdi	      6554	eval.c	FUNCTION_114	IF_1
0x4002043	            0x7508	                           jne 0x400204d	      6554	eval.c	FUNCTION_114	IF_1
0x4002045	    0x488b05000000	            mov rax, qword [0x0400204c] 	      6555	eval.c	FUNCTION_114	IF_1
0x400204c	              0xc3	                                     ret	      6555	eval.c	FUNCTION_114	IF_1
0x400204d	    0x48893d000000	            mov qword [0x04002054], rdi 	      6557	eval.c	FUNCTION_114
0x4002054	      0xb800000000	                              mov eax, 0	      6558	eval.c	FUNCTION_114
0x4002059	              0xc3	                                     ret	      6559	eval.c	FUNCTION_114
eval_expr_to_bool	FOR,0:SWITCH,0:DO,0:IF,1:functions,0:WHILE,0:CALL,3:ELSE,0	30
0x4007c82	              0x53	                                push rbx	       745	eval.c	FUNCTION_15
0x4007c83	        0x4883ec20	                           sub rsp, 0x20	       745	eval.c	FUNCTION_15
0x4007c87	          0x4889f3	                            mov rbx, rsi	       745	eval.c	FUNCTION_15
0x4007c8a	    0x64488b042528	                mov rax, qword fs:[0x28]	       745	eval.c	FUNCTION_15
0x4007c93	      0x4889442418	             mov qword [rsp + 0x18], rax	       745	eval.c	FUNCTION_15
0x4007c98	            0x31c0	                            xor eax, eax	       745	eval.c	FUNCTION_15
0x4007c9a	          0x4889e1	                            mov rcx, rsp	       749	eval.c	FUNCTION_15	IF_1	CALL_1
0x4007c9d	      0xba00000000	                              mov edx, 0	       749	eval.c	FUNCTION_15	IF_1	CALL_1
0x4007ca2	      0xbe00000000	                              mov esi, 0	       749	eval.c	FUNCTION_15	IF_1	CALL_1
0x4007ca7	      0xe817feffff	               call sym.eval_expr_typval	       749	eval.c	FUNCTION_15	IF_1	CALL_1
0x4007cac	            0x85c0	                           test eax, eax	       749	eval.c	FUNCTION_15	IF_1	CALL_1
0x4007cae	            0x7508	                           jne 0x4007cb8	       749	eval.c	FUNCTION_15	IF_1	CALL_1
0x4007cb0	    0xc70301000000	                      mov dword [rbx], 1	       751	eval.c	FUNCTION_15	IF_1
0x4007cb6	            0xeb1e	                           jmp 0x4007cd6	       752	eval.c	FUNCTION_15	IF_1
0x4007cb8	          0x4889de	                            mov rsi, rbx	       754	eval.c	FUNCTION_15	CALL_2
0x4007cbb	          0x4889e7	                            mov rdi, rsp	       754	eval.c	FUNCTION_15	CALL_2
0x4007cbe	      0xe800000000	                          call 0x4007cc3	       754	eval.c	FUNCTION_15	CALL_2
0x4007cc3	          0x4885c0	                           test rax, rax	       754	eval.c	FUNCTION_15	CALL_2
0x4007cc6	           0xf95c3	                                setne bl	       754	eval.c	FUNCTION_15	CALL_2
0x4007cc9	           0xfb6db	                           movzx ebx, bl	       754	eval.c	FUNCTION_15	CALL_2
0x4007ccc	          0x4889e7	                            mov rdi, rsp	       755	eval.c	FUNCTION_15	CALL_3
0x4007ccf	      0xe800000000	                          call 0x4007cd4	       755	eval.c	FUNCTION_15	CALL_3
0x4007cd4	            0x89d8	                            mov eax, ebx	       756	eval.c	FUNCTION_15
0x4007cd6	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       757	eval.c	FUNCTION_15
0x4007cdb	    0x644833142528	                xor rdx, qword fs:[0x28]	       757	eval.c	FUNCTION_15
0x4007ce4	            0x7405	                            je 0x4007ceb	       757	eval.c	FUNCTION_15
0x4007ce6	      0xe800000000	                          call 0x4007ceb	       757	eval.c	FUNCTION_15
0x4007ceb	        0x4883c420	                           add rsp, 0x20	       757	eval.c	FUNCTION_15
0x4007cef	              0x5b	                                 pop rbx	       757	eval.c	FUNCTION_15
0x4007cf0	              0xc3	                                     ret	       757	eval.c	FUNCTION_15
init_tv	FOR,0:SWITCH,0:DO,0:IF,1:functions,0:WHILE,0:CALL,1:ELSE,0	5
0x40029f3	          0x4885ff	                           test rdi, rdi	      6947	eval.c	FUNCTION_123	IF_1
0x40029f6	            0x740f	                            je 0x4002a07	      6947	eval.c	FUNCTION_123	IF_1
0x40029f8	    0x48c707000000	                      mov qword [rdi], 0	        90	string3.h	FUNCTION_194	CALL_6
0x40029ff	    0x48c747080000	                  mov qword [rdi + 8], 0	        90	string3.h	FUNCTION_194	CALL_6
0x4002a07	            0xf3c3	                                     ret	        90	string3.h	FUNCTION_194	CALL_6
ex_let_vars	FOR,0:SWITCH,0:DO,0:IF,10:functions,0:WHILE,2:CALL,17:ELSE,1	136
0x400a28f	            0x4156	                                push r14	      1323	eval.c	FUNCTION_32
0x400a291	            0x4155	                                push r13	      1323	eval.c	FUNCTION_32
0x400a293	            0x4154	                                push r12	      1323	eval.c	FUNCTION_32
0x400a295	              0x55	                                push rbp	      1323	eval.c	FUNCTION_32
0x400a296	              0x53	                                push rbx	      1323	eval.c	FUNCTION_32
0x400a297	        0x4883ec20	                           sub rsp, 0x20	      1323	eval.c	FUNCTION_32
0x400a29b	          0x4889fb	                            mov rbx, rdi	      1323	eval.c	FUNCTION_32
0x400a29e	          0x4d89cc	                             mov r12, r9	      1323	eval.c	FUNCTION_32
0x400a2a1	    0x64488b042528	                mov rax, qword fs:[0x28]	      1323	eval.c	FUNCTION_32
0x400a2aa	      0x4889442418	             mov qword [rsp + 0x18], rax	      1323	eval.c	FUNCTION_32
0x400a2af	            0x31c0	                            xor eax, eax	      1323	eval.c	FUNCTION_32
0x400a2b1	          0x803f5b	                    cmp byte [rdi], 0x5b	      1330	eval.c	FUNCTION_32	IF_1
0x400a2b4	            0x7419	                            je 0x400a2cf	      1330	eval.c	FUNCTION_32	IF_1
0x400a2b6	          0x4d89c8	                              mov r8, r9	      1335	eval.c	FUNCTION_32	IF_1	IF_2	CALL_1
0x400a2b9	          0x4c89c9	                             mov rcx, r9	      1335	eval.c	FUNCTION_32	IF_1	IF_2	CALL_1
0x400a2bc	      0xe887f9ffff	                     call sym.ex_let_one	      1335	eval.c	FUNCTION_32	IF_1	IF_2	CALL_1
0x400a2c1	          0x4885c0	                           test rax, rax	      1336	eval.c	FUNCTION_32	IF_1	IF_2
0x400a2c4	           0xf95c0	                                setne al	      1336	eval.c	FUNCTION_32	IF_1	IF_2
0x400a2c7	           0xfb6c0	                           movzx eax, al	      1336	eval.c	FUNCTION_32	IF_1	IF_2
0x400a2ca	      0xe997010000	                           jmp 0x400a466	      1336	eval.c	FUNCTION_32	IF_1	IF_2
0x400a2cf	          0x4189cd	                           mov r13d, ecx	      1336	eval.c	FUNCTION_32	IF_1	IF_2
0x400a2d2	          0x4489c5	                            mov ebp, r8d	      1336	eval.c	FUNCTION_32	IF_1	IF_2
0x400a2d5	          0x833e05	                      cmp dword [rsi], 5	      1343	eval.c	FUNCTION_32	IF_3
0x400a2d8	            0x7509	                           jne 0x400a2e3	      1343	eval.c	FUNCTION_32	IF_3
0x400a2da	        0x4c8b7608	                mov r14, qword [rsi + 8]	      1343	eval.c	FUNCTION_32	IF_3
0x400a2de	          0x4d85f6	                           test r14, r14	      1343	eval.c	FUNCTION_32	IF_3
0x400a2e1	            0x7526	                           jne 0x400a309	      1343	eval.c	FUNCTION_32	IF_3
0x400a2e3	      0xba05000000	                              mov edx, 5	      1345	eval.c	FUNCTION_32	IF_3	CALL_3
0x400a2e8	      0xbe00000000	                              mov esi, 0	      1345	eval.c	FUNCTION_32	IF_3	CALL_3
0x400a2ed	      0xbf00000000	                              mov edi, 0	      1345	eval.c	FUNCTION_32	IF_3	CALL_3
0x400a2f2	      0xe800000000	                          call 0x400a2f7	      1345	eval.c	FUNCTION_32	IF_3	CALL_3
0x400a2f7	          0x4889c7	                            mov rdi, rax	      1345	eval.c	FUNCTION_32	IF_3	CALL_3
0x400a2fa	      0xe800000000	                          call 0x400a2ff	      1345	eval.c	FUNCTION_32	IF_3	CALL_3
0x400a2ff	      0xb800000000	                              mov eax, 0	      1346	eval.c	FUNCTION_32	IF_3
0x400a304	      0xe95d010000	                           jmp 0x400a466	      1346	eval.c	FUNCTION_32	IF_3
0x400a309	          0x4c89f7	                            mov rdi, r14	      1349	eval.c	FUNCTION_32	CALL_4
0x400a30c	      0xe800000000	                          call 0x400a311	      1349	eval.c	FUNCTION_32	CALL_4
0x400a311	          0x4585ed	                         test r13d, r13d	      1350	eval.c	FUNCTION_32	IF_4
0x400a314	            0x752a	                           jne 0x400a340	      1350	eval.c	FUNCTION_32	IF_4
0x400a316	            0x39c5	                            cmp ebp, eax	      1350	eval.c	FUNCTION_32	IF_4
0x400a318	            0x7d26	                           jge 0x400a340	      1350	eval.c	FUNCTION_32	IF_4
0x400a31a	      0xba05000000	                              mov edx, 5	      1352	eval.c	FUNCTION_32	IF_4	CALL_6
0x400a31f	      0xbe00000000	                              mov esi, 0	      1352	eval.c	FUNCTION_32	IF_4	CALL_6
0x400a324	      0xbf00000000	                              mov edi, 0	      1352	eval.c	FUNCTION_32	IF_4	CALL_6
0x400a329	      0xe800000000	                          call 0x400a32e	      1352	eval.c	FUNCTION_32	IF_4	CALL_6
0x400a32e	          0x4889c7	                            mov rdi, rax	      1352	eval.c	FUNCTION_32	IF_4	CALL_6
0x400a331	      0xe800000000	                          call 0x400a336	      1352	eval.c	FUNCTION_32	IF_4	CALL_6
0x400a336	      0xb800000000	                              mov eax, 0	      1353	eval.c	FUNCTION_32	IF_4
0x400a33b	      0xe926010000	                           jmp 0x400a466	      1353	eval.c	FUNCTION_32	IF_4
0x400a340	          0x4429ed	                           sub ebp, r13d	      1355	eval.c	FUNCTION_32	IF_5
0x400a343	            0x39e8	                            cmp eax, ebp	      1355	eval.c	FUNCTION_32	IF_5
0x400a345	            0x7d26	                           jge 0x400a36d	      1355	eval.c	FUNCTION_32	IF_5
0x400a347	      0xba05000000	                              mov edx, 5	      1357	eval.c	FUNCTION_32	IF_5	CALL_8
0x400a34c	      0xbe00000000	                              mov esi, 0	      1357	eval.c	FUNCTION_32	IF_5	CALL_8
0x400a351	      0xbf00000000	                              mov edi, 0	      1357	eval.c	FUNCTION_32	IF_5	CALL_8
0x400a356	      0xe800000000	                          call 0x400a35b	      1357	eval.c	FUNCTION_32	IF_5	CALL_8
0x400a35b	          0x4889c7	                            mov rdi, rax	      1357	eval.c	FUNCTION_32	IF_5	CALL_8
0x400a35e	      0xe800000000	                          call 0x400a363	      1357	eval.c	FUNCTION_32	IF_5	CALL_8
0x400a363	      0xb800000000	                              mov eax, 0	      1358	eval.c	FUNCTION_32	IF_5
0x400a368	      0xe9f9000000	                           jmp 0x400a466	      1358	eval.c	FUNCTION_32	IF_5
0x400a36d	          0x498b2e	                    mov rbp, qword [r14]	      1361	eval.c	FUNCTION_32
0x400a370	      0xe9d5000000	                           jmp 0x400a44a	      1362	eval.c	FUNCTION_32	WHILE_1
0x400a375	        0x488d7b01	                      lea rdi, [rbx + 1]	      1364	eval.c	FUNCTION_32	WHILE_1	CALL_9
0x400a379	      0xe800000000	                          call 0x400a37e	      1364	eval.c	FUNCTION_32	WHILE_1	CALL_9
0x400a37e	        0x488d7510	                   lea rsi, [rbp + 0x10]	      1365	eval.c	FUNCTION_32	WHILE_1	CALL_10
0x400a382	          0x4d89e0	                             mov r8, r12	      1365	eval.c	FUNCTION_32	WHILE_1	CALL_10
0x400a385	      0xb900000000	                              mov ecx, 0	      1365	eval.c	FUNCTION_32	WHILE_1	CALL_10
0x400a38a	      0xba01000000	                              mov edx, 1	      1365	eval.c	FUNCTION_32	WHILE_1	CALL_10
0x400a38f	          0x4889c7	                            mov rdi, rax	      1365	eval.c	FUNCTION_32	WHILE_1	CALL_10
0x400a392	      0xe8b1f8ffff	                     call sym.ex_let_one	      1365	eval.c	FUNCTION_32	WHILE_1	CALL_10
0x400a397	        0x488b6d00	                    mov rbp, qword [rbp]	      1366	eval.c	FUNCTION_32	WHILE_1
0x400a39b	          0x4885c0	                           test rax, rax	      1367	eval.c	FUNCTION_32	WHILE_1	IF_6
0x400a39e	     0xf84b6000000	                            je 0x400a45a	      1367	eval.c	FUNCTION_32	WHILE_1	IF_6
0x400a3a4	          0x4889c7	                            mov rdi, rax	      1370	eval.c	FUNCTION_32	WHILE_1	CALL_11
0x400a3a7	      0xe800000000	                          call 0x400a3ac	      1370	eval.c	FUNCTION_32	WHILE_1	CALL_11
0x400a3ac	          0x4889c3	                            mov rbx, rax	      1370	eval.c	FUNCTION_32	WHILE_1	CALL_11
0x400a3af	           0xfb600	                   movzx eax, byte [rax]	      1371	eval.c	FUNCTION_32	WHILE_1	IF_7
0x400a3b2	            0x3c3b	                            cmp al, 0x3b	      1371	eval.c	FUNCTION_32	WHILE_1	IF_7
0x400a3b4	            0x757b	                           jne 0x400a431	      1371	eval.c	FUNCTION_32	WHILE_1	IF_7
0x400a3b6	      0xe800000000	                          call 0x400a3bb	      1375	eval.c	FUNCTION_32	WHILE_1	IF_7	CALL_12
0x400a3bb	          0x4989c5	                            mov r13, rax	      1375	eval.c	FUNCTION_32	WHILE_1	IF_7	CALL_12
0x400a3be	          0x4885c0	                           test rax, rax	      1376	eval.c	FUNCTION_32	WHILE_1	IF_7	IF_8
0x400a3c1	     0xf849a000000	                            je 0x400a461	      1376	eval.c	FUNCTION_32	WHILE_1	IF_7	IF_8
0x400a3c7	          0x4885ed	                           test rbp, rbp	      1378	eval.c	FUNCTION_32	WHILE_1	IF_7	WHILE_2
0x400a3ca	            0x7415	                            je 0x400a3e1	      1378	eval.c	FUNCTION_32	WHILE_1	IF_7	WHILE_2
0x400a3cc	        0x488d7510	                   lea rsi, [rbp + 0x10]	      1380	eval.c	FUNCTION_32	WHILE_1	IF_7	WHILE_2	CALL_13
0x400a3d0	          0x4c89ef	                            mov rdi, r13	      1380	eval.c	FUNCTION_32	WHILE_1	IF_7	WHILE_2	CALL_13
0x400a3d3	      0xe800000000	                          call 0x400a3d8	      1380	eval.c	FUNCTION_32	WHILE_1	IF_7	WHILE_2	CALL_13
0x400a3d8	        0x488b6d00	                    mov rbp, qword [rbp]	      1381	eval.c	FUNCTION_32	WHILE_1	IF_7	WHILE_2
0x400a3dc	          0x4885ed	                           test rbp, rbp	      1378	eval.c	FUNCTION_32	WHILE_1	IF_7	WHILE_2
0x400a3df	            0x75eb	                           jne 0x400a3cc	      1378	eval.c	FUNCTION_32	WHILE_1	IF_7	WHILE_2
0x400a3e1	    0xc70424050000	                      mov dword [rsp], 5	      1384	eval.c	FUNCTION_32	WHILE_1	IF_7
0x400a3e8	      0xc644240400	                   mov byte [rsp + 4], 0	      1385	eval.c	FUNCTION_32	WHILE_1	IF_7
0x400a3ed	      0x4c896c2408	                mov qword [rsp + 8], r13	      1386	eval.c	FUNCTION_32	WHILE_1	IF_7
0x400a3f2	    0x41c745380100	               mov dword [r13 + 0x38], 1	      1387	eval.c	FUNCTION_32	WHILE_1	IF_7
0x400a3fa	        0x488d7b01	                      lea rdi, [rbx + 1]	      1389	eval.c	FUNCTION_32	WHILE_1	IF_7	CALL_15
0x400a3fe	      0xe800000000	                          call 0x400a403	      1389	eval.c	FUNCTION_32	WHILE_1	IF_7	CALL_15
0x400a403	          0x4d89e0	                             mov r8, r12	      1389	eval.c	FUNCTION_32	WHILE_1	IF_7	CALL_15
0x400a406	      0xb900000000	                              mov ecx, 0	      1389	eval.c	FUNCTION_32	WHILE_1	IF_7	CALL_15
0x400a40b	      0xba00000000	                              mov edx, 0	      1389	eval.c	FUNCTION_32	WHILE_1	IF_7	CALL_15
0x400a410	          0x4889e6	                            mov rsi, rsp	      1389	eval.c	FUNCTION_32	WHILE_1	IF_7	CALL_15
0x400a413	          0x4889c7	                            mov rdi, rax	      1389	eval.c	FUNCTION_32	WHILE_1	IF_7	CALL_15
0x400a416	      0xe82df8ffff	                     call sym.ex_let_one	      1389	eval.c	FUNCTION_32	WHILE_1	IF_7	CALL_15
0x400a41b	          0x4889c3	                            mov rbx, rax	      1389	eval.c	FUNCTION_32	WHILE_1	IF_7	CALL_15
0x400a41e	          0x4889e7	                            mov rdi, rsp	      1391	eval.c	FUNCTION_32	WHILE_1	IF_7	CALL_16
0x400a421	      0xe800000000	                          call 0x400a426	      1391	eval.c	FUNCTION_32	WHILE_1	IF_7	CALL_16
0x400a426	          0x4885db	                           test rbx, rbx	      1336	eval.c	FUNCTION_32	IF_1	IF_2
0x400a429	           0xf95c0	                                setne al	      1336	eval.c	FUNCTION_32	IF_1	IF_2
0x400a42c	           0xfb6c0	                           movzx eax, al	      1336	eval.c	FUNCTION_32	IF_1	IF_2
0x400a42f	            0xeb35	                           jmp 0x400a466	      1336	eval.c	FUNCTION_32	IF_1	IF_2
0x400a431	            0x3c2c	                            cmp al, 0x2c	      1396	eval.c	FUNCTION_32	WHILE_1	ELSE_1	IF_10
0x400a433	            0x7415	                            je 0x400a44a	      1396	eval.c	FUNCTION_32	WHILE_1	ELSE_1	IF_10
0x400a435	            0x3c5d	                            cmp al, 0x5d	      1396	eval.c	FUNCTION_32	WHILE_1	ELSE_1	IF_10
0x400a437	            0x7411	                            je 0x400a44a	      1396	eval.c	FUNCTION_32	WHILE_1	ELSE_1	IF_10
0x400a439	      0xbf00000000	                              mov edi, 0	      1398	eval.c	FUNCTION_32	WHILE_1	ELSE_1	IF_10	CALL_17
0x400a43e	      0xe800000000	                          call 0x400a443	      1398	eval.c	FUNCTION_32	WHILE_1	ELSE_1	IF_10	CALL_17
0x400a443	      0xb800000000	                              mov eax, 0	      1399	eval.c	FUNCTION_32	WHILE_1	ELSE_1	IF_10
0x400a448	            0xeb1c	                           jmp 0x400a466	      1399	eval.c	FUNCTION_32	WHILE_1	ELSE_1	IF_10
0x400a44a	          0x803b5d	                    cmp byte [rbx], 0x5d	      1362	eval.c	FUNCTION_32	WHILE_1
0x400a44d	     0xf8522ffffff	                           jne 0x400a375	      1362	eval.c	FUNCTION_32	WHILE_1
0x400a453	      0xb801000000	                              mov eax, 1	      1403	eval.c	FUNCTION_32
0x400a458	            0xeb0c	                           jmp 0x400a466	      1403	eval.c	FUNCTION_32
0x400a45a	      0xb800000000	                              mov eax, 0	      1368	eval.c	FUNCTION_32	WHILE_1	IF_6
0x400a45f	            0xeb05	                           jmp 0x400a466	      1368	eval.c	FUNCTION_32	WHILE_1	IF_6
0x400a461	      0xb800000000	                              mov eax, 0	      1377	eval.c	FUNCTION_32	WHILE_1	IF_7	IF_8
0x400a466	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1404	eval.c	FUNCTION_32
0x400a46b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1404	eval.c	FUNCTION_32
0x400a474	            0x7405	                            je 0x400a47b	      1404	eval.c	FUNCTION_32
0x400a476	      0xe800000000	                          call 0x400a47b	      1404	eval.c	FUNCTION_32
0x400a47b	        0x4883c420	                           add rsp, 0x20	      1404	eval.c	FUNCTION_32
0x400a47f	              0x5b	                                 pop rbx	      1404	eval.c	FUNCTION_32
0x400a480	              0x5d	                                 pop rbp	      1404	eval.c	FUNCTION_32
0x400a481	            0x415c	                                 pop r12	      1404	eval.c	FUNCTION_32
0x400a483	            0x415d	                                 pop r13	      1404	eval.c	FUNCTION_32
0x400a485	            0x415e	                                 pop r14	      1404	eval.c	FUNCTION_32
0x400a487	              0xc3	                                     ret	      1404	eval.c	FUNCTION_32
v_exception	FOR,0:SWITCH,0:DO,0:IF,1:functions,0:WHILE,0:CALL,0:ELSE,0	7
0x4002026	          0x4885ff	                           test rdi, rdi	      6538	eval.c	FUNCTION_113	IF_1
0x4002029	            0x7508	                           jne 0x4002033	      6538	eval.c	FUNCTION_113	IF_1
0x400202b	    0x488b05000000	            mov rax, qword [0x04002032] 	      6539	eval.c	FUNCTION_113	IF_1
0x4002032	              0xc3	                                     ret	      6539	eval.c	FUNCTION_113	IF_1
0x4002033	    0x48893d000000	            mov qword [0x0400203a], rdi 	      6541	eval.c	FUNCTION_113
0x400203a	      0xb800000000	                              mov eax, 0	      6542	eval.c	FUNCTION_113
0x400203f	              0xc3	                                     ret	      6543	eval.c	FUNCTION_113
autoload_name	FOR,0:SWITCH,0:DO,0:IF,1:functions,0:WHILE,1:CALL,7:ELSE,0	45
0x4004d92	              0x55	                                push rbp	      8460	eval.c	FUNCTION_160
0x4004d93	              0x53	                                push rbx	      8460	eval.c	FUNCTION_160
0x4004d94	        0x4883ec08	                              sub rsp, 8	      8460	eval.c	FUNCTION_160
0x4004d98	          0x4889fd	                            mov rbp, rdi	      8460	eval.c	FUNCTION_160
0x4004d9b	      0xb800000000	                              mov eax, 0	      8465	eval.c	FUNCTION_160	CALL_2
0x4004da0	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      8465	eval.c	FUNCTION_160	CALL_2
0x4004da7	            0xf2ae	              repne scasb al, byte [rdi]	      8465	eval.c	FUNCTION_160	CALL_2
0x4004da9	          0x48f7d1	                                 not rcx	      8465	eval.c	FUNCTION_160	CALL_2
0x4004dac	          0x8d790d	                    lea edi, [rcx + 0xd]	      8465	eval.c	FUNCTION_160	CALL_2
0x4004daf	      0xe800000000	                          call 0x4004db4	      8465	eval.c	FUNCTION_160	CALL_2
0x4004db4	          0x4885c0	                           test rax, rax	      8466	eval.c	FUNCTION_160	IF_1
0x4004db7	            0x7470	                            je 0x4004e29	      8466	eval.c	FUNCTION_160	IF_1
0x4004db9	          0x4889c3	                            mov rbx, rax	      8466	eval.c	FUNCTION_160	IF_1
0x4004dbc	    0x48b86175746f	          movabs rax, 0x64616f6c6f747561	       110	string3.h	FUNCTION_197	CALL_3
0x4004dc6	          0x488903	                    mov qword [rbx], rax	       110	string3.h	FUNCTION_197	CALL_3
0x4004dc9	    0x66c743082f00	                mov word [rbx + 8], 0x2f	       110	string3.h	FUNCTION_197	CALL_3
0x4004dcf	          0x4889ee	                            mov rsi, rbp	       148	string3.h	FUNCTION_201	CALL_3
0x4004dd2	          0x4889df	                            mov rdi, rbx	       148	string3.h	FUNCTION_201	CALL_3
0x4004dd5	      0xe800000000	                          call 0x4004dda	       148	string3.h	FUNCTION_201	CALL_3
0x4004dda	      0xbe23000000	                           mov esi, 0x23	      8470	eval.c	FUNCTION_160	CALL_5
0x4004ddf	          0x4889df	                            mov rdi, rbx	      8470	eval.c	FUNCTION_160	CALL_5
0x4004de2	      0xe800000000	                          call 0x4004de7	      8470	eval.c	FUNCTION_160	CALL_5
0x4004de7	          0xc60000	                       mov byte [rax], 0	      8470	eval.c	FUNCTION_160	CALL_5
0x4004dea	      0xb800000000	                              mov eax, 0	       148	string3.h	FUNCTION_201	CALL_3
0x4004def	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       148	string3.h	FUNCTION_201	CALL_3
0x4004df6	          0x4889df	                            mov rdi, rbx	       148	string3.h	FUNCTION_201	CALL_3
0x4004df9	            0xf2ae	              repne scasb al, byte [rdi]	       148	string3.h	FUNCTION_201	CALL_3
0x4004dfb	          0x48f7d1	                                 not rcx	       148	string3.h	FUNCTION_201	CALL_3
0x4004dfe	      0x488d440bff	                lea rax, [rbx + rcx - 1]	       148	string3.h	FUNCTION_201	CALL_3
0x4004e03	    0xc7002e76696d	            mov dword [rax], 0x6d69762e 	       148	string3.h	FUNCTION_201	CALL_3
0x4004e09	        0xc6400400	                   mov byte [rax + 4], 0	       148	string3.h	FUNCTION_201	CALL_3
0x4004e0d	            0xeb03	                           jmp 0x4004e12	       148	string3.h	FUNCTION_201	CALL_3
0x4004e0f	          0xc6002f	                    mov byte [rax], 0x2f	      8473	eval.c	FUNCTION_160	WHILE_1
0x4004e12	      0xbe23000000	                           mov esi, 0x23	      8472	eval.c	FUNCTION_160	WHILE_1	CALL_7
0x4004e17	          0x4889df	                            mov rdi, rbx	      8472	eval.c	FUNCTION_160	WHILE_1	CALL_7
0x4004e1a	      0xe800000000	                          call 0x4004e1f	      8472	eval.c	FUNCTION_160	WHILE_1	CALL_7
0x4004e1f	          0x4885c0	                           test rax, rax	      8472	eval.c	FUNCTION_160	WHILE_1	CALL_7
0x4004e22	            0x75eb	                           jne 0x4004e0f	      8472	eval.c	FUNCTION_160	WHILE_1	CALL_7
0x4004e24	          0x4889d8	                            mov rax, rbx	      8474	eval.c	FUNCTION_160
0x4004e27	            0xeb05	                           jmp 0x4004e2e	      8474	eval.c	FUNCTION_160
0x4004e29	      0xb800000000	                              mov eax, 0	      8467	eval.c	FUNCTION_160	IF_1
0x4004e2e	        0x4883c408	                              add rsp, 8	      8475	eval.c	FUNCTION_160
0x4004e32	              0x5b	                                 pop rbx	      8475	eval.c	FUNCTION_160
0x4004e33	              0x5d	                                 pop rbp	      8475	eval.c	FUNCTION_160
0x4004e34	              0xc3	                                     ret	      8475	eval.c	FUNCTION_160
write_viminfo_varlist	FOR,1:SWITCH,1:DO,0:IF,4:functions,0:WHILE,0:CALL,10:ELSE,0	85
0x4005f2c	            0x4156	                                push r14	      8629	eval.c	FUNCTION_164
0x4005f2e	            0x4155	                                push r13	      8629	eval.c	FUNCTION_164
0x4005f30	            0x4154	                                push r12	      8629	eval.c	FUNCTION_164
0x4005f32	              0x55	                                push rbp	      8629	eval.c	FUNCTION_164
0x4005f33	              0x53	                                push rbx	      8629	eval.c	FUNCTION_164
0x4005f34	        0x4883ec60	                           sub rsp, 0x60	      8629	eval.c	FUNCTION_164
0x4005f38	          0x4989fd	                            mov r13, rdi	      8629	eval.c	FUNCTION_164
0x4005f3b	    0x64488b042528	                mov rax, qword fs:[0x28]	      8629	eval.c	FUNCTION_164
0x4005f44	      0x4889442458	             mov qword [rsp + 0x58], rax	      8629	eval.c	FUNCTION_164
0x4005f49	            0x31c0	                            xor eax, eax	      8629	eval.c	FUNCTION_164
0x4005f4b	      0xbf21000000	                           mov edi, 0x21	      8638	eval.c	FUNCTION_164	IF_1	CALL_1
0x4005f50	      0xe800000000	                          call 0x4005f55	      8638	eval.c	FUNCTION_164	IF_1	CALL_1
0x4005f55	          0x4885c0	                           test rax, rax	      8638	eval.c	FUNCTION_164	IF_1	CALL_1
0x4005f58	     0xf8407010000	                            je 0x4006065	      8638	eval.c	FUNCTION_164	IF_1	CALL_1
0x4005f5e	      0xba05000000	                              mov edx, 5	      8641	eval.c	FUNCTION_164	CALL_3
0x4005f63	      0xbe00000000	                              mov esi, 0	      8641	eval.c	FUNCTION_164	CALL_3
0x4005f68	      0xbf00000000	                              mov edi, 0	      8641	eval.c	FUNCTION_164	CALL_3
0x4005f6d	      0xe800000000	                          call 0x4005f72	      8641	eval.c	FUNCTION_164	CALL_3
0x4005f72	          0x4c89ee	                            mov rsi, r13	      8641	eval.c	FUNCTION_164	CALL_3
0x4005f75	          0x4889c7	                            mov rdi, rax	      8641	eval.c	FUNCTION_164	CALL_3
0x4005f78	      0xe800000000	                          call 0x4005f7d	      8641	eval.c	FUNCTION_164	CALL_3
0x4005f7d	    0x488b05000000	            mov rax, qword [0x04005f84] 	      8643	eval.c	FUNCTION_164
0x4005f84	          0x4189c4	                           mov r12d, eax	      8643	eval.c	FUNCTION_164
0x4005f87	    0x488b2d000000	            mov rbp, qword [0x04005f8e] 	      8644	eval.c	FUNCTION_164	FOR_1
0x4005f8e	            0x85c0	                           test eax, eax	      8644	eval.c	FUNCTION_164	FOR_1
0x4005f90	     0xf8ecf000000	                           jle 0x4006065	      8644	eval.c	FUNCTION_164	FOR_1
0x4005f96	    0x41be00000000	                             mov r14d, 0	      8644	eval.c	FUNCTION_164	FOR_1
0x4005f9c	        0x488b5d08	                mov rbx, qword [rbp + 8]	      8646	eval.c	FUNCTION_164	FOR_1	IF_2	CALL_4
0x4005fa0	    0x4881fb000000	                              cmp rbx, 0	      8646	eval.c	FUNCTION_164	FOR_1	IF_2	CALL_4
0x4005fa7	     0xf84ab000000	                            je 0x4006058	      8646	eval.c	FUNCTION_164	FOR_1	IF_2	CALL_4
0x4005fad	          0x4885db	                           test rbx, rbx	      8646	eval.c	FUNCTION_164	FOR_1	IF_2	CALL_4
0x4005fb0	     0xf84a2000000	                            je 0x4006058	      8646	eval.c	FUNCTION_164	FOR_1	IF_2	CALL_4
0x4005fb6	        0x4183ec01	                             sub r12d, 1	      8648	eval.c	FUNCTION_164	FOR_1	IF_2
0x4005fba	          0x4889df	                            mov rdi, rbx	      8650	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	CALL_6
0x4005fbd	      0xe814a1ffff	                    call sym.var_flavour	      8650	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	CALL_6
0x4005fc2	          0x83f802	                              cmp eax, 2	      8650	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	CALL_6
0x4005fc5	     0xf858d000000	                           jne 0x4006058	      8650	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	CALL_6
0x4005fcb	        0x837bef0a	            cmp dword [rbx - 0x11], 0xa 	      8652	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	SWITCH_1
0x4005fcf	            0x7738	                            ja 0x4006009	      8652	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	SWITCH_1
0x4005fd1	          0x8b43ef	             mov eax, dword [rbx - 0x11]	      8652	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	SWITCH_1
0x4005fd4	    0xff24c5000000	                       jmp qword [rax*8]	      8652	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	SWITCH_1
0x4005fdb	    0x41be00000000	                             mov r14d, 0	      8654	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	SWITCH_1
0x4005fe1	            0xeb26	                           jmp 0x4006009	      8654	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	SWITCH_1
0x4005fe3	    0x41be00000000	                             mov r14d, 0	      8655	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	SWITCH_1
0x4005fe9	            0xeb1e	                           jmp 0x4006009	      8655	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	SWITCH_1
0x4005feb	    0x41be00000000	                             mov r14d, 0	      8656	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	SWITCH_1
0x4005ff1	            0xeb16	                           jmp 0x4006009	      8656	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	SWITCH_1
0x4005ff3	    0x41be00000000	                             mov r14d, 0	      8657	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	SWITCH_1
0x4005ff9	            0xeb0e	                           jmp 0x4006009	      8657	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	SWITCH_1
0x4005ffb	    0x41be00000000	                             mov r14d, 0	      8658	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	SWITCH_1
0x4006001	            0xeb06	                           jmp 0x4006009	      8658	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	SWITCH_1
0x4006003	    0x41be00000000	                             mov r14d, 0	      8659	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	SWITCH_1
0x4006009	          0x4d89f0	                             mov r8, r14	        97	stdio2.h	FUNCTION_207	CALL_1
0x400600c	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	FUNCTION_207	CALL_1
0x400600f	      0xba00000000	                              mov edx, 0	        97	stdio2.h	FUNCTION_207	CALL_1
0x4006014	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	FUNCTION_207	CALL_1
0x4006019	          0x4c89ef	                            mov rdi, r13	        97	stdio2.h	FUNCTION_207	CALL_1
0x400601c	      0xb800000000	                              mov eax, 0	        97	stdio2.h	FUNCTION_207	CALL_1
0x4006021	      0xe800000000	                          call 0x4006026	        97	stdio2.h	FUNCTION_207	CALL_1
0x4006026	        0x488d7bef	                   lea rdi, [rbx - 0x11]	      8669	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	CALL_8
0x400602a	      0xb900000000	                              mov ecx, 0	      8669	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	CALL_8
0x400602f	      0x488d542410	                   lea rdx, [rsp + 0x10]	      8669	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	CALL_8
0x4006034	      0x488d742408	                      lea rsi, [rsp + 8]	      8669	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	CALL_8
0x4006039	      0xe800000000	                          call 0x400603e	      8669	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	CALL_8
0x400603e	          0x4885c0	                           test rax, rax	      8670	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	IF_4
0x4006041	            0x740b	                            je 0x400604e	      8670	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	IF_4
0x4006043	          0x4889c6	                            mov rsi, rax	      8671	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	CALL_9
0x4006046	          0x4c89ef	                            mov rdi, r13	      8671	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	CALL_9
0x4006049	      0xe800000000	                          call 0x400604e	      8671	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	CALL_9
0x400604e	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      8672	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	CALL_10
0x4006053	      0xe800000000	                          call 0x4006058	      8672	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	CALL_10
0x4006058	        0x4883c510	                           add rbp, 0x10	      8644	eval.c	FUNCTION_164	FOR_1
0x400605c	          0x4585e4	                         test r12d, r12d	      8644	eval.c	FUNCTION_164	FOR_1
0x400605f	     0xf8f37ffffff	                            jg 0x4005f9c	      8644	eval.c	FUNCTION_164	FOR_1
0x4006065	      0x488b442458	            mov rax, qword [rsp + 0x58] 	      8676	eval.c	FUNCTION_164
0x400606a	    0x644833042528	                xor rax, qword fs:[0x28]	      8676	eval.c	FUNCTION_164
0x4006073	            0x7405	                            je 0x400607a	      8676	eval.c	FUNCTION_164
0x4006075	      0xe800000000	                          call 0x400607a	      8676	eval.c	FUNCTION_164
0x400607a	        0x4883c460	                           add rsp, 0x60	      8676	eval.c	FUNCTION_164
0x400607e	              0x5b	                                 pop rbx	      8676	eval.c	FUNCTION_164
0x400607f	              0x5d	                                 pop rbp	      8676	eval.c	FUNCTION_164
0x4006080	            0x415c	                                 pop r12	      8676	eval.c	FUNCTION_164
0x4006082	            0x415d	                                 pop r13	      8676	eval.c	FUNCTION_164
0x4006084	            0x415e	                                 pop r14	      8676	eval.c	FUNCTION_164
0x4006086	              0xc3	                                     ret	      8676	eval.c	FUNCTION_164
list_script_vars	FOR,0:SWITCH,0:DO,0:IF,1:functions,0:WHILE,0:CALL,2:ELSE,0	16
0x40038a9	    0x8b0500000000	            mov eax, dword [0x040038af] 	      1556	eval.c	FUNCTION_41	IF_1
0x40038af	            0x85c0	                           test eax, eax	      1556	eval.c	FUNCTION_41	IF_1
0x40038b1	            0x7e34	                           jle 0x40038e7	      1556	eval.c	FUNCTION_41	IF_1
0x40038b3	    0x3b0500000000	            cmp eax, dword [0x040038b9] 	      1556	eval.c	FUNCTION_41	IF_1
0x40038b9	            0x7f2c	                            jg 0x40038e7	      1556	eval.c	FUNCTION_41	IF_1
0x40038bb	        0x4883ec08	                              sub rsp, 8	      1555	eval.c	FUNCTION_41
0x40038bf	          0x4889f9	                            mov rcx, rdi	      1555	eval.c	FUNCTION_41
0x40038c2	            0x4898	                                    cdqe	      1557	eval.c	FUNCTION_41	IF_1	CALL_2
0x40038c4	    0x488b15000000	            mov rdx, qword [0x040038cb] 	      1557	eval.c	FUNCTION_41	IF_1	CALL_2
0x40038cb	      0x488b7cc2f8	        mov rdi, qword [rdx + rax*8 - 8]	      1557	eval.c	FUNCTION_41	IF_1	CALL_2
0x40038d0	        0x4883c728	                           add rdi, 0x28	      1557	eval.c	FUNCTION_41	IF_1	CALL_2
0x40038d4	      0xba00000000	                              mov edx, 0	      1557	eval.c	FUNCTION_41	IF_1	CALL_2
0x40038d9	      0xbe00000000	                              mov esi, 0	      1557	eval.c	FUNCTION_41	IF_1	CALL_2
0x40038de	      0xe800000000	                          call 0x40038e3	      1557	eval.c	FUNCTION_41	IF_1	CALL_2
0x40038e3	        0x4883c408	                              add rsp, 8	      1559	eval.c	FUNCTION_41
0x40038e7	            0xf3c3	                                     ret	      1559	eval.c	FUNCTION_41
assert_inrange	FOR,0:SWITCH,0:DO,0:IF,3:functions,0:WHILE,0:CALL,11:ELSE,1	71
0x40065f9	            0x4155	                                push r13	      8932	eval.c	FUNCTION_173
0x40065fb	            0x4154	                                push r12	      8932	eval.c	FUNCTION_173
0x40065fd	              0x55	                                push rbp	      8932	eval.c	FUNCTION_173
0x40065fe	              0x53	                                push rbx	      8932	eval.c	FUNCTION_173
0x40065ff	    0x4881ec580100	                          sub rsp, 0x158	      8932	eval.c	FUNCTION_173
0x4006606	          0x4889fb	                            mov rbx, rdi	      8932	eval.c	FUNCTION_173
0x4006609	    0x64488b042528	                mov rax, qword fs:[0x28]	      8932	eval.c	FUNCTION_173
0x4006612	    0x488984244801	            mov qword [rsp + 0x148], rax	      8932	eval.c	FUNCTION_173
0x400661a	            0x31c0	                            xor eax, eax	      8932	eval.c	FUNCTION_173
0x400661c	    0xc74424040000	                  mov dword [rsp + 4], 0	      8934	eval.c	FUNCTION_173
0x4006624	      0x488d742404	                      lea rsi, [rsp + 4]	      8935	eval.c	FUNCTION_173	CALL_1
0x4006629	      0xe800000000	                          call 0x400662e	      8935	eval.c	FUNCTION_173	CALL_1
0x400662e	          0x4989c4	                            mov r12, rax	      8935	eval.c	FUNCTION_173	CALL_1
0x4006631	        0x488d7b10	                   lea rdi, [rbx + 0x10]	      8936	eval.c	FUNCTION_173	CALL_2
0x4006635	      0x488d742404	                      lea rsi, [rsp + 4]	      8936	eval.c	FUNCTION_173	CALL_2
0x400663a	      0xe800000000	                          call 0x400663f	      8936	eval.c	FUNCTION_173	CALL_2
0x400663f	          0x4989c5	                            mov r13, rax	      8936	eval.c	FUNCTION_173	CALL_2
0x4006642	        0x488d7b20	                   lea rdi, [rbx + 0x20]	      8937	eval.c	FUNCTION_173	CALL_3
0x4006646	      0x488d742404	                      lea rsi, [rsp + 4]	      8937	eval.c	FUNCTION_173	CALL_3
0x400664b	      0xe800000000	                          call 0x4006650	      8937	eval.c	FUNCTION_173	CALL_3
0x4006650	          0x4889c5	                            mov rbp, rax	      8937	eval.c	FUNCTION_173	CALL_3
0x4006653	        0x8b442404	                mov eax, dword [rsp + 4]	      8942	eval.c	FUNCTION_173	IF_1
0x4006657	            0x85c0	                           test eax, eax	      8942	eval.c	FUNCTION_173	IF_1
0x4006659	     0xf85a1000000	                           jne 0x4006700	      8942	eval.c	FUNCTION_173	IF_1
0x400665f	          0x4939ec	                            cmp r12, rbp	      8944	eval.c	FUNCTION_173	IF_2
0x4006662	            0x7f09	                            jg 0x400666d	      8944	eval.c	FUNCTION_173	IF_2
0x4006664	          0x4939ed	                            cmp r13, rbp	      8944	eval.c	FUNCTION_173	IF_2
0x4006667	     0xf8d98000000	                           jge 0x4006705	      8944	eval.c	FUNCTION_173	IF_2
0x400666d	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      8946	eval.c	FUNCTION_173	IF_2	CALL_4
0x4006672	      0xe800000000	                          call 0x4006677	      8946	eval.c	FUNCTION_173	IF_2	CALL_4
0x4006677	        0x837b3000	               cmp dword [rbx + 0x30], 0	      8947	eval.c	FUNCTION_173	IF_2	IF_3
0x400667b	            0x7431	                            je 0x40066ae	      8947	eval.c	FUNCTION_173	IF_2	IF_3
0x400667d	        0x488d7b30	                   lea rdi, [rbx + 0x30]	      8949	eval.c	FUNCTION_173	IF_2	IF_3	CALL_6
0x4006681	      0xb900000000	                              mov ecx, 0	      8949	eval.c	FUNCTION_173	IF_2	IF_3	CALL_6
0x4006686	      0x488d542430	                   lea rdx, [rsp + 0x30]	      8949	eval.c	FUNCTION_173	IF_2	IF_3	CALL_6
0x400668b	      0x488d742408	                      lea rsi, [rsp + 8]	      8949	eval.c	FUNCTION_173	IF_2	IF_3	CALL_6
0x4006690	      0xe800000000	                          call 0x4006695	      8949	eval.c	FUNCTION_173	IF_2	IF_3	CALL_6
0x4006695	          0x4889c6	                            mov rsi, rax	      8949	eval.c	FUNCTION_173	IF_2	IF_3	CALL_6
0x4006698	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      8949	eval.c	FUNCTION_173	IF_2	IF_3	CALL_6
0x400669d	      0xe800000000	                          call 0x40066a2	      8949	eval.c	FUNCTION_173	IF_2	IF_3	CALL_6
0x40066a2	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      8950	eval.c	FUNCTION_173	IF_2	IF_3	CALL_7
0x40066a7	      0xe800000000	                          call 0x40066ac	      8950	eval.c	FUNCTION_173	IF_2	IF_3	CALL_7
0x40066ac	            0xeb37	                           jmp 0x40066e5	      8950	eval.c	FUNCTION_173	IF_2	IF_3	CALL_7
0x40066ae	          0x4989e9	                             mov r9, rbp	      8954	eval.c	FUNCTION_173	IF_2	ELSE_1	CALL_8
0x40066b1	          0x4d89e8	                             mov r8, r13	      8954	eval.c	FUNCTION_173	IF_2	ELSE_1	CALL_8
0x40066b4	          0x4c89e1	                            mov rcx, r12	      8954	eval.c	FUNCTION_173	IF_2	ELSE_1	CALL_8
0x40066b7	      0xba00000000	                              mov edx, 0	      8954	eval.c	FUNCTION_173	IF_2	ELSE_1	CALL_8
0x40066bc	      0xbec8000000	                           mov esi, 0xc8	      8954	eval.c	FUNCTION_173	IF_2	ELSE_1	CALL_8
0x40066c1	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	      8954	eval.c	FUNCTION_173	IF_2	ELSE_1	CALL_8
0x40066c9	      0xb800000000	                              mov eax, 0	      8954	eval.c	FUNCTION_173	IF_2	ELSE_1	CALL_8
0x40066ce	      0xe800000000	                          call 0x40066d3	      8954	eval.c	FUNCTION_173	IF_2	ELSE_1	CALL_8
0x40066d3	    0x488db4248000	                   lea rsi, [rsp + 0x80]	      8956	eval.c	FUNCTION_173	IF_2	ELSE_1	CALL_9
0x40066db	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      8956	eval.c	FUNCTION_173	IF_2	ELSE_1	CALL_9
0x40066e0	      0xe800000000	                          call 0x40066e5	      8956	eval.c	FUNCTION_173	IF_2	ELSE_1	CALL_9
0x40066e5	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      8958	eval.c	FUNCTION_173	IF_2	CALL_10
0x40066ea	      0xe800000000	                          call 0x40066ef	      8958	eval.c	FUNCTION_173	IF_2	CALL_10
0x40066ef	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      8959	eval.c	FUNCTION_173	IF_2	CALL_11
0x40066f4	      0xe800000000	                          call 0x40066f9	      8959	eval.c	FUNCTION_173	IF_2	CALL_11
0x40066f9	      0xb801000000	                              mov eax, 1	      8960	eval.c	FUNCTION_173	IF_2
0x40066fe	            0xeb05	                           jmp 0x4006705	      8960	eval.c	FUNCTION_173	IF_2
0x4006700	      0xb800000000	                              mov eax, 0	      8943	eval.c	FUNCTION_173	IF_1
0x4006705	    0x488b94244801	           mov rdx, qword [rsp + 0x148] 	      8963	eval.c	FUNCTION_173
0x400670d	    0x644833142528	                xor rdx, qword fs:[0x28]	      8963	eval.c	FUNCTION_173
0x4006716	            0x7405	                            je 0x400671d	      8963	eval.c	FUNCTION_173
0x4006718	      0xe800000000	                          call 0x400671d	      8963	eval.c	FUNCTION_173
0x400671d	    0x4881c4580100	                          add rsp, 0x158	      8963	eval.c	FUNCTION_173
0x4006724	              0x5b	                                 pop rbx	      8963	eval.c	FUNCTION_173
0x4006725	              0x5d	                                 pop rbp	      8963	eval.c	FUNCTION_173
0x4006726	            0x415c	                                 pop r12	      8963	eval.c	FUNCTION_173
0x4006728	            0x415d	                                 pop r13	      8963	eval.c	FUNCTION_173
0x400672a	              0xc3	                                     ret	      8963	eval.c	FUNCTION_173
get_user_input	FOR,0:SWITCH,0:DO,0:IF,10:functions,0:WHILE,0:CALL,17:ELSE,1	170
0x40049af	            0x4157	                                push r15	      7909	eval.c	FUNCTION_151
0x40049b1	            0x4156	                                push r14	      7909	eval.c	FUNCTION_151
0x40049b3	            0x4155	                                push r13	      7909	eval.c	FUNCTION_151
0x40049b5	            0x4154	                                push r12	      7909	eval.c	FUNCTION_151
0x40049b7	              0x55	                                push rbp	      7909	eval.c	FUNCTION_151
0x40049b8	              0x53	                                push rbx	      7909	eval.c	FUNCTION_151
0x40049b9	    0x4881ec880000	                           sub rsp, 0x88	      7909	eval.c	FUNCTION_151
0x40049c0	          0x4989fd	                            mov r13, rdi	      7909	eval.c	FUNCTION_151
0x40049c3	          0x4889f3	                            mov rbx, rsi	      7909	eval.c	FUNCTION_151
0x40049c6	        0x89542404	                mov dword [rsp + 4], edx	      7909	eval.c	FUNCTION_151
0x40049ca	        0x894c2408	                mov dword [rsp + 8], ecx	      7909	eval.c	FUNCTION_151
0x40049ce	    0x64488b042528	                mov rax, qword fs:[0x28]	      7909	eval.c	FUNCTION_151
0x40049d7	      0x4889442478	             mov qword [rsp + 0x78], rax	      7909	eval.c	FUNCTION_151
0x40049dc	            0x31c0	                            xor eax, eax	      7909	eval.c	FUNCTION_151
0x40049de	      0xe800000000	                          call 0x40049e3	      7910	eval.c	FUNCTION_151	CALL_1
0x40049e3	          0x4889c5	                            mov rbp, rax	      7910	eval.c	FUNCTION_151	CALL_1
0x40049e6	    0x448b35000000	           mov r14d, dword [0x040049ed] 	      7914	eval.c	FUNCTION_151
0x40049ed	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      7916	eval.c	FUNCTION_151
0x40049f5	    0x48c744242000	               mov qword [rsp + 0x20], 0	      7917	eval.c	FUNCTION_151
0x40049fe	    0xc70302000000	                      mov dword [rbx], 2	      7919	eval.c	FUNCTION_151
0x4004a04	    0x48c743080000	                  mov qword [rbx + 8], 0	      7920	eval.c	FUNCTION_151
0x4004a0c	      0xe800000000	                          call 0x4004a11	      7925	eval.c	FUNCTION_151	IF_1	CALL_3
0x4004a11	            0x85c0	                           test eax, eax	      7925	eval.c	FUNCTION_151	IF_1	CALL_3
0x4004a13	            0x740d	                            je 0x4004a22	      7925	eval.c	FUNCTION_151	IF_1	CALL_3
0x4004a15	      0xe800000000	                          call 0x4004a1a	      7925	eval.c	FUNCTION_151	IF_1	CALL_3
0x4004a1a	            0x85c0	                           test eax, eax	      7925	eval.c	FUNCTION_151	IF_1	CALL_3
0x4004a1c	     0xf8468020000	                            je 0x4004c8a	      7925	eval.c	FUNCTION_151	IF_1	CALL_3
0x4004a22	    0xc70500000000	               mov dword [0x04004a2c], 0	      7929	eval.c	FUNCTION_151
0x4004a2c	          0x4885ed	                           test rbp, rbp	      7930	eval.c	FUNCTION_151	IF_2
0x4004a2f	     0xf8497010000	                            je 0x4004bcc	      7930	eval.c	FUNCTION_151	IF_2
0x4004a35	      0xbe0a000000	                            mov esi, 0xa	      7934	eval.c	FUNCTION_151	IF_2	CALL_4
0x4004a3a	          0x4889ef	                            mov rdi, rbp	      7934	eval.c	FUNCTION_151	IF_2	CALL_4
0x4004a3d	      0xe800000000	                          call 0x4004a42	      7934	eval.c	FUNCTION_151	IF_2	CALL_4
0x4004a42	          0x4989c4	                            mov r12, rax	      7934	eval.c	FUNCTION_151	IF_2	CALL_4
0x4004a45	          0x4989ef	                            mov r15, rbp	      7936	eval.c	FUNCTION_151	IF_2	IF_3
0x4004a48	          0x4885c0	                           test rax, rax	      7935	eval.c	FUNCTION_151	IF_2	IF_3
0x4004a4b	            0x7443	                            je 0x4004a90	      7935	eval.c	FUNCTION_151	IF_2	IF_3
0x4004a4d	        0x4c8d7801	                      lea r15, [rax + 1]	      7939	eval.c	FUNCTION_151	IF_2	ELSE_1
0x4004a51	         0xfb64001	               movzx eax, byte [rax + 1]	      7940	eval.c	FUNCTION_151	IF_2	ELSE_1
0x4004a55	        0x8844240f	                mov byte [rsp + 0xf], al	      7940	eval.c	FUNCTION_151	IF_2	ELSE_1
0x4004a59	    0x41c644240100	                   mov byte [r12 + 1], 0	      7941	eval.c	FUNCTION_151	IF_2	ELSE_1
0x4004a5f	      0xe800000000	                          call 0x4004a64	      7942	eval.c	FUNCTION_151	IF_2	ELSE_1	CALL_5
0x4004a64	      0xe800000000	                          call 0x4004a69	      7943	eval.c	FUNCTION_151	IF_2	ELSE_1	CALL_6
0x4004a69	    0x8b3500000000	            mov esi, dword [0x04004a6f] 	      7944	eval.c	FUNCTION_151	IF_2	ELSE_1	CALL_7
0x4004a6f	          0x4889ef	                            mov rdi, rbp	      7944	eval.c	FUNCTION_151	IF_2	ELSE_1	CALL_7
0x4004a72	      0xe800000000	                          call 0x4004a77	      7944	eval.c	FUNCTION_151	IF_2	ELSE_1	CALL_7
0x4004a77	    0xc70500000000	               mov dword [0x04004a81], 0	      7945	eval.c	FUNCTION_151	IF_2	ELSE_1
0x4004a81	      0xe800000000	                          call 0x4004a86	      7946	eval.c	FUNCTION_151	IF_2	ELSE_1	CALL_8
0x4004a86	       0xfb644240f	            movzx eax, byte [rsp + 0xf] 	      7947	eval.c	FUNCTION_151	IF_2	ELSE_1
0x4004a8b	      0x4188442401	                  mov byte [r12 + 1], al	      7947	eval.c	FUNCTION_151	IF_2	ELSE_1
0x4004a90	    0x8b0500000000	            mov eax, dword [0x04004a96] 	      7949	eval.c	FUNCTION_151	IF_2
0x4004a96	    0x890500000000	            mov dword [0x04004a9c], eax 	      7949	eval.c	FUNCTION_151	IF_2
0x4004a9c	      0x41837d1000	               cmp dword [r13 + 0x10], 0	      7951	eval.c	FUNCTION_151	IF_2	IF_4
0x4004aa1	     0xf8496000000	                            je 0x4004b3d	      7951	eval.c	FUNCTION_151	IF_2	IF_4
0x4004aa7	        0x498d7d10	                   lea rdi, [r13 + 0x10]	      7953	eval.c	FUNCTION_151	IF_2	IF_4	CALL_9
0x4004aab	      0x488d742430	                   lea rsi, [rsp + 0x30]	      7953	eval.c	FUNCTION_151	IF_2	IF_4	CALL_9
0x4004ab0	      0xe800000000	                          call 0x4004ab5	      7953	eval.c	FUNCTION_151	IF_2	IF_4	CALL_9
0x4004ab5	          0x4889c5	                            mov rbp, rax	      7953	eval.c	FUNCTION_151	IF_2	IF_4	CALL_9
0x4004ab8	          0x4885c0	                           test rax, rax	      7954	eval.c	FUNCTION_151	IF_2	IF_4	IF_5
0x4004abb	     0xf8425010000	                            je 0x4004be6	      7954	eval.c	FUNCTION_151	IF_2	IF_4	IF_5
0x4004ac1	          0x4889c7	                            mov rdi, rax	      7955	eval.c	FUNCTION_151	IF_2	IF_4	CALL_10
0x4004ac4	      0xe800000000	                          call 0x4004ac9	      7955	eval.c	FUNCTION_151	IF_2	IF_4	CALL_10
0x4004ac9	      0x837c240400	                  cmp dword [rsp + 4], 0	      7957	eval.c	FUNCTION_151	IF_2	IF_4	IF_6
0x4004ace	     0xf8504010000	                           jne 0x4004bd8	      7957	eval.c	FUNCTION_151	IF_2	IF_4	IF_6
0x4004ad4	      0x41837d2000	               cmp dword [r13 + 0x20], 0	      7957	eval.c	FUNCTION_151	IF_2	IF_4	IF_6
0x4004ad9	     0xf8400010000	                            je 0x4004bdf	      7957	eval.c	FUNCTION_151	IF_2	IF_4	IF_6
0x4004adf	    0x48c743080000	                  mov qword [rbx + 8], 0	      7964	eval.c	FUNCTION_151	IF_2	IF_4	IF_6
0x4004ae7	        0x498d7d20	                   lea rdi, [r13 + 0x20]	      7966	eval.c	FUNCTION_151	IF_2	IF_4	IF_6	CALL_11
0x4004aeb	      0x488d742430	                   lea rsi, [rsp + 0x30]	      7966	eval.c	FUNCTION_151	IF_2	IF_4	IF_6	CALL_11
0x4004af0	      0xe800000000	                          call 0x4004af5	      7966	eval.c	FUNCTION_151	IF_2	IF_4	IF_6	CALL_11
0x4004af5	          0x4989c1	                             mov r9, rax	      7966	eval.c	FUNCTION_151	IF_2	IF_4	IF_6	CALL_11
0x4004af8	          0x4885c0	                           test rax, rax	      7967	eval.c	FUNCTION_151	IF_2	IF_4	IF_6	IF_7
0x4004afb	     0xf8489010000	                            je 0x4004c8a	      7967	eval.c	FUNCTION_151	IF_2	IF_4	IF_6	IF_7
0x4004b01	      0xb800000000	                              mov eax, 0	      7970	eval.c	FUNCTION_151	IF_2	IF_4	IF_6	CALL_12
0x4004b06	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      7970	eval.c	FUNCTION_151	IF_2	IF_4	IF_6	CALL_12
0x4004b0d	          0x4c89cf	                             mov rdi, r9	      7970	eval.c	FUNCTION_151	IF_2	IF_4	IF_6	CALL_12
0x4004b10	            0xf2ae	              repne scasb al, byte [rdi]	      7970	eval.c	FUNCTION_151	IF_2	IF_4	IF_6	CALL_12
0x4004b12	          0x48f7d1	                                 not rcx	      7970	eval.c	FUNCTION_151	IF_2	IF_4	IF_6	CALL_12
0x4004b15	        0x488d71ff	                      lea rsi, [rcx - 1]	      7970	eval.c	FUNCTION_151	IF_2	IF_4	IF_6	CALL_12
0x4004b19	      0x4c8d442420	                    lea r8, [rsp + 0x20]	      7972	eval.c	FUNCTION_151	IF_2	IF_4	IF_6	IF_8	CALL_13
0x4004b1e	      0x488d4c2428	                   lea rcx, [rsp + 0x28]	      7972	eval.c	FUNCTION_151	IF_2	IF_4	IF_6	IF_8	CALL_13
0x4004b23	      0x488d54241c	                   lea rdx, [rsp + 0x1c]	      7972	eval.c	FUNCTION_151	IF_2	IF_4	IF_6	IF_8	CALL_13
0x4004b28	          0x4c89cf	                             mov rdi, r9	      7972	eval.c	FUNCTION_151	IF_2	IF_4	IF_6	IF_8	CALL_13
0x4004b2b	      0xe800000000	                          call 0x4004b30	      7972	eval.c	FUNCTION_151	IF_2	IF_4	IF_6	IF_8	CALL_13
0x4004b30	            0x85c0	                           test eax, eax	      7972	eval.c	FUNCTION_151	IF_2	IF_4	IF_6	IF_8	CALL_13
0x4004b32	     0xf8452010000	                            je 0x4004c8a	      7972	eval.c	FUNCTION_151	IF_2	IF_4	IF_6	IF_8	CALL_13
0x4004b38	      0xe9a2000000	                           jmp 0x4004bdf	      7972	eval.c	FUNCTION_151	IF_2	IF_4	IF_6	IF_8	CALL_13
0x4004b3d	    0x8b2d00000000	            mov ebp, dword [0x04004b43] 	      7980	eval.c	FUNCTION_151	IF_2	IF_9
0x4004b43	    0xc70500000000	               mov dword [0x04004b4d], 0	      7981	eval.c	FUNCTION_151	IF_2	IF_9
0x4004b4d	      0x4c8b442420	              mov r8, qword [rsp + 0x20]	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x4004b52	        0x8b4c241c	            mov ecx, dword [rsp + 0x1c] 	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x4004b56	    0x8b1500000000	            mov edx, dword [0x04004b5c] 	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x4004b5c	      0x837c240801	                  cmp dword [rsp + 8], 1	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x4004b61	            0x19ff	                            sbb edi, edi	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x4004b63	          0x83e740	                           and edi, 0x40	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x4004b66	          0x4c89fe	                            mov rsi, r15	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x4004b69	      0xe800000000	                          call 0x4004b6e	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x4004b6e	        0x48894308	                mov qword [rbx + 8], rax	      7982	eval.c	FUNCTION_151	IF_2	IF_9
0x4004b72	    0x892d00000000	            mov dword [0x04004b78], ebp 	      7985	eval.c	FUNCTION_151	IF_2	IF_9
0x4004b78	      0x837c240400	                  cmp dword [rsp + 4], 0	      7987	eval.c	FUNCTION_151	IF_2	IF_10
0x4004b7d	            0x742f	                            je 0x4004bae	      7987	eval.c	FUNCTION_151	IF_2	IF_10
0x4004b7f	      0x48837b0800	                  cmp qword [rbx + 8], 0	      7987	eval.c	FUNCTION_151	IF_2	IF_10
0x4004b84	            0x7528	                           jne 0x4004bae	      7987	eval.c	FUNCTION_151	IF_2	IF_10
0x4004b86	      0x41837d1000	               cmp dword [r13 + 0x10], 0	      7988	eval.c	FUNCTION_151	IF_2	IF_10
0x4004b8b	            0x7421	                            je 0x4004bae	      7988	eval.c	FUNCTION_151	IF_2	IF_10
0x4004b8d	      0x41837d2000	               cmp dword [r13 + 0x20], 0	      7989	eval.c	FUNCTION_151	IF_2	IF_10
0x4004b92	            0x741a	                            je 0x4004bae	      7989	eval.c	FUNCTION_151	IF_2	IF_10
0x4004b94	        0x498d7d20	                   lea rdi, [r13 + 0x20]	      7990	eval.c	FUNCTION_151	IF_2	IF_10	CALL_16
0x4004b98	      0x488d742430	                   lea rsi, [rsp + 0x30]	      7990	eval.c	FUNCTION_151	IF_2	IF_10	CALL_16
0x4004b9d	      0xe800000000	                          call 0x4004ba2	      7990	eval.c	FUNCTION_151	IF_2	IF_10	CALL_16
0x4004ba2	          0x4889c7	                            mov rdi, rax	      7990	eval.c	FUNCTION_151	IF_2	IF_10	CALL_16
0x4004ba5	      0xe800000000	                          call 0x4004baa	      7990	eval.c	FUNCTION_151	IF_2	IF_10	CALL_16
0x4004baa	        0x48894308	                mov qword [rbx + 8], rax	      7990	eval.c	FUNCTION_151	IF_2	IF_10	CALL_16
0x4004bae	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      7993	eval.c	FUNCTION_151	IF_2	CALL_17
0x4004bb3	      0xe800000000	                          call 0x4004bb8	      7993	eval.c	FUNCTION_151	IF_2	CALL_17
0x4004bb8	    0xc70500000000	               mov dword [0x04004bc2], 0	      7996	eval.c	FUNCTION_151	IF_2
0x4004bc2	    0xc70500000000	               mov dword [0x04004bcc], 0	      7997	eval.c	FUNCTION_151	IF_2
0x4004bcc	    0x448935000000	           mov dword [0x04004bd3], r14d 	      7999	eval.c	FUNCTION_151
0x4004bd3	      0xe9b2000000	                           jmp 0x4004c8a	      7999	eval.c	FUNCTION_151
0x4004bd8	          0x4885ed	                           test rbp, rbp	      7978	eval.c	FUNCTION_151	IF_2	IF_9
0x4004bdb	            0x757c	                           jne 0x4004c59	      7978	eval.c	FUNCTION_151	IF_2	IF_9
0x4004bdd	            0xeba0	                           jmp 0x4004b7f	      7978	eval.c	FUNCTION_151	IF_2	IF_9
0x4004bdf	          0x4885ed	                           test rbp, rbp	      7978	eval.c	FUNCTION_151	IF_2	IF_9
0x4004be2	            0x74ca	                            je 0x4004bae	      7978	eval.c	FUNCTION_151	IF_2	IF_9
0x4004be4	            0xeb26	                           jmp 0x4004c0c	      7978	eval.c	FUNCTION_151	IF_2	IF_9
0x4004be6	      0x837c240400	                  cmp dword [rsp + 4], 0	      7957	eval.c	FUNCTION_151	IF_2	IF_4	IF_6
0x4004beb	     0xf84e3feffff	                            je 0x4004ad4	      7957	eval.c	FUNCTION_151	IF_2	IF_4	IF_6
0x4004bf1	            0xeb8c	                           jmp 0x4004b7f	      7957	eval.c	FUNCTION_151	IF_2	IF_4	IF_6
0x4004bf3	          0x4c89fe	                            mov rsi, r15	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x4004bf6	      0xbf00000000	                              mov edi, 0	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x4004bfb	      0xe800000000	                          call 0x4004c00	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x4004c00	        0x48894308	                mov qword [rbx + 8], rax	      7982	eval.c	FUNCTION_151	IF_2	IF_9
0x4004c04	    0x892d00000000	            mov dword [0x04004c0a], ebp 	      7985	eval.c	FUNCTION_151	IF_2	IF_9
0x4004c0a	            0xeba2	                           jmp 0x4004bae	      7985	eval.c	FUNCTION_151	IF_2	IF_9
0x4004c0c	    0x8b2d00000000	            mov ebp, dword [0x04004c12] 	      7980	eval.c	FUNCTION_151	IF_2	IF_9
0x4004c12	    0xc70500000000	               mov dword [0x04004c1c], 0	      7981	eval.c	FUNCTION_151	IF_2	IF_9
0x4004c1c	      0x4c8b442420	              mov r8, qword [rsp + 0x20]	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x4004c21	        0x8b4c241c	            mov ecx, dword [rsp + 0x1c] 	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x4004c25	    0x8b1500000000	            mov edx, dword [0x04004c2b] 	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x4004c2b	      0xbf40000000	                           mov edi, 0x40	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x4004c30	      0x837c240800	                  cmp dword [rsp + 8], 0	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x4004c35	     0xf842bffffff	                            je 0x4004b66	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x4004c3b	            0xebb6	                           jmp 0x4004bf3	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x4004c3d	          0x4c89fe	                            mov rsi, r15	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x4004c40	      0xbf00000000	                              mov edi, 0	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x4004c45	      0xe800000000	                          call 0x4004c4a	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x4004c4a	        0x48894308	                mov qword [rbx + 8], rax	      7982	eval.c	FUNCTION_151	IF_2	IF_9
0x4004c4e	    0x892d00000000	            mov dword [0x04004c54], ebp 	      7985	eval.c	FUNCTION_151	IF_2	IF_9
0x4004c54	      0xe926ffffff	                           jmp 0x4004b7f	      7985	eval.c	FUNCTION_151	IF_2	IF_9
0x4004c59	    0x8b2d00000000	            mov ebp, dword [0x04004c5f] 	      7980	eval.c	FUNCTION_151	IF_2	IF_9
0x4004c5f	    0xc70500000000	               mov dword [0x04004c69], 0	      7981	eval.c	FUNCTION_151	IF_2	IF_9
0x4004c69	      0x4c8b442420	              mov r8, qword [rsp + 0x20]	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x4004c6e	        0x8b4c241c	            mov ecx, dword [rsp + 0x1c] 	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x4004c72	    0x8b1500000000	            mov edx, dword [0x04004c78] 	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x4004c78	      0xbf40000000	                           mov edi, 0x40	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x4004c7d	      0x837c240800	                  cmp dword [rsp + 8], 0	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x4004c82	     0xf84defeffff	                            je 0x4004b66	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x4004c88	            0xebb3	                           jmp 0x4004c3d	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x4004c8a	      0x488b442478	            mov rax, qword [rsp + 0x78] 	      8000	eval.c	FUNCTION_151
0x4004c8f	    0x644833042528	                xor rax, qword fs:[0x28]	      8000	eval.c	FUNCTION_151
0x4004c98	            0x7405	                            je 0x4004c9f	      8000	eval.c	FUNCTION_151
0x4004c9a	      0xe800000000	                          call 0x4004c9f	      8000	eval.c	FUNCTION_151
0x4004c9f	    0x4881c4880000	                           add rsp, 0x88	      8000	eval.c	FUNCTION_151
0x4004ca6	              0x5b	                                 pop rbx	      8000	eval.c	FUNCTION_151
0x4004ca7	              0x5d	                                 pop rbp	      8000	eval.c	FUNCTION_151
0x4004ca8	            0x415c	                                 pop r12	      8000	eval.c	FUNCTION_151
0x4004caa	            0x415d	                                 pop r13	      8000	eval.c	FUNCTION_151
0x4004cac	            0x415e	                                 pop r14	      8000	eval.c	FUNCTION_151
0x4004cae	            0x415f	                                 pop r15	      8000	eval.c	FUNCTION_151
0x4004cb0	              0xc3	                                     ret	      8000	eval.c	FUNCTION_151
var_exists	FOR,0:SWITCH,0:DO,0:IF,5:functions,0:WHILE,0:CALL,5:ELSE,0	54
0x400d1bd	              0x55	                                push rbp	      9412	eval.c	FUNCTION_183
0x400d1be	              0x53	                                push rbx	      9412	eval.c	FUNCTION_183
0x400d1bf	        0x4883ec48	                           sub rsp, 0x48	      9412	eval.c	FUNCTION_183
0x400d1c3	      0x48897c2408	                mov qword [rsp + 8], rdi	      9412	eval.c	FUNCTION_183
0x400d1c8	    0x64488b0c2528	                mov rcx, qword fs:[0x28]	      9412	eval.c	FUNCTION_183
0x400d1d1	      0x48894c2438	             mov qword [rsp + 0x38], rcx	      9412	eval.c	FUNCTION_183
0x400d1d6	            0x31c9	                            xor ecx, ecx	      9412	eval.c	FUNCTION_183
0x400d1d8	          0x4889fd	                            mov rbp, rdi	      9420	eval.c	FUNCTION_183
0x400d1db	      0xba01000000	                              mov edx, 1	      9421	eval.c	FUNCTION_183	CALL_1
0x400d1e0	      0x488d742418	                   lea rsi, [rsp + 0x18]	      9421	eval.c	FUNCTION_183	CALL_1
0x400d1e5	      0x488d7c2408	                      lea rdi, [rsp + 8]	      9421	eval.c	FUNCTION_183	CALL_1
0x400d1ea	      0xe800000000	                          call 0x400d1ef	      9421	eval.c	FUNCTION_183	CALL_1
0x400d1ef	      0xbb00000000	                              mov ebx, 0	      9417	eval.c	FUNCTION_183
0x400d1f4	            0x85c0	                           test eax, eax	      9422	eval.c	FUNCTION_183	IF_1
0x400d1f6	            0x7e62	                           jle 0x400d25a	      9422	eval.c	FUNCTION_183	IF_1
0x400d1f8	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      9424	eval.c	FUNCTION_183	IF_1	IF_2
0x400d1fd	          0x4885ff	                           test rdi, rdi	      9420	eval.c	FUNCTION_183
0x400d200	        0x480f44fd	                          cmove rdi, rbp	      9420	eval.c	FUNCTION_183
0x400d204	    0x41b901000000	                              mov r9d, 1	      9426	eval.c	FUNCTION_183	IF_1	CALL_2
0x400d20a	    0x41b800000000	                              mov r8d, 0	      9426	eval.c	FUNCTION_183	IF_1	CALL_2
0x400d210	      0xb900000000	                              mov ecx, 0	      9426	eval.c	FUNCTION_183	IF_1	CALL_2
0x400d215	      0x488d542420	                   lea rdx, [rsp + 0x20]	      9426	eval.c	FUNCTION_183	IF_1	CALL_2
0x400d21a	            0x89c6	                            mov esi, eax	      9426	eval.c	FUNCTION_183	IF_1	CALL_2
0x400d21c	      0xe800000000	                          call 0x400d221	      9426	eval.c	FUNCTION_183	IF_1	CALL_2
0x400d221	          0x83f801	                              cmp eax, 1	      9426	eval.c	FUNCTION_183	IF_1	CALL_2
0x400d224	           0xf94c3	                                 sete bl	      9426	eval.c	FUNCTION_183	IF_1	CALL_2
0x400d227	           0xfb6db	                           movzx ebx, bl	      9426	eval.c	FUNCTION_183	IF_1	CALL_2
0x400d22a	            0x752e	                           jne 0x400d25a	      9427	eval.c	FUNCTION_183	IF_1	IF_3
0x400d22c	      0xb900000000	                              mov ecx, 0	      9430	eval.c	FUNCTION_183	IF_1	IF_3	CALL_3
0x400d231	      0xba01000000	                              mov edx, 1	      9430	eval.c	FUNCTION_183	IF_1	IF_3	CALL_3
0x400d236	      0x488d742420	                   lea rsi, [rsp + 0x20]	      9430	eval.c	FUNCTION_183	IF_1	IF_3	CALL_3
0x400d23b	      0x488d7c2408	                      lea rdi, [rsp + 8]	      9430	eval.c	FUNCTION_183	IF_1	IF_3	CALL_3
0x400d240	      0xe800000000	                          call 0x400d245	      9430	eval.c	FUNCTION_183	IF_1	IF_3	CALL_3
0x400d245	          0x83f801	                              cmp eax, 1	      9430	eval.c	FUNCTION_183	IF_1	IF_3	CALL_3
0x400d248	           0xf94c3	                                 sete bl	      9430	eval.c	FUNCTION_183	IF_1	IF_3	CALL_3
0x400d24b	           0xfb6db	                           movzx ebx, bl	      9430	eval.c	FUNCTION_183	IF_1	IF_3	CALL_3
0x400d24e	            0x750a	                           jne 0x400d25a	      9431	eval.c	FUNCTION_183	IF_1	IF_3	IF_4
0x400d250	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      9432	eval.c	FUNCTION_183	IF_1	IF_3	CALL_4
0x400d255	      0xe800000000	                          call 0x400d25a	      9432	eval.c	FUNCTION_183	IF_1	IF_3	CALL_4
0x400d25a	      0x488b442408	                mov rax, qword [rsp + 8]	      9435	eval.c	FUNCTION_183	IF_5
0x400d25f	          0x803800	                       cmp byte [rax], 0	      9436	eval.c	FUNCTION_183	IF_5
0x400d262	      0xb800000000	                              mov eax, 0	      9436	eval.c	FUNCTION_183	IF_5
0x400d267	           0xf45d8	                         cmovne ebx, eax	      9436	eval.c	FUNCTION_183	IF_5
0x400d26a	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      9438	eval.c	FUNCTION_183	CALL_5
0x400d26f	      0xe800000000	                          call 0x400d274	      9438	eval.c	FUNCTION_183	CALL_5
0x400d274	            0x89d8	                            mov eax, ebx	      9440	eval.c	FUNCTION_183
0x400d276	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	      9440	eval.c	FUNCTION_183
0x400d27b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      9440	eval.c	FUNCTION_183
0x400d284	            0x7405	                            je 0x400d28b	      9440	eval.c	FUNCTION_183
0x400d286	      0xe800000000	                          call 0x400d28b	      9440	eval.c	FUNCTION_183
0x400d28b	        0x4883c448	                           add rsp, 0x48	      9440	eval.c	FUNCTION_183
0x400d28f	              0x5b	                                 pop rbx	      9440	eval.c	FUNCTION_183
0x400d290	              0x5d	                                 pop rbp	      9440	eval.c	FUNCTION_183
0x400d291	              0xc3	                                     ret	      9440	eval.c	FUNCTION_183
eval_to_string_skip	FOR,0:SWITCH,0:DO,0:IF,3:functions,0:WHILE,0:CALL,4:ELSE,1	40
0x4008487	              0x53	                                push rbx	       769	eval.c	FUNCTION_16
0x4008488	        0x4883ec20	                           sub rsp, 0x20	       769	eval.c	FUNCTION_16
0x400848c	    0x64488b042528	                mov rax, qword fs:[0x28]	       769	eval.c	FUNCTION_16
0x4008495	      0x4889442418	             mov qword [rsp + 0x18], rax	       769	eval.c	FUNCTION_16
0x400849a	            0x31c0	                            xor eax, eax	       769	eval.c	FUNCTION_16
0x400849c	            0x85d2	                           test edx, edx	       773	eval.c	FUNCTION_16	IF_1
0x400849e	            0x745c	                            je 0x40084fc	       773	eval.c	FUNCTION_16	IF_1
0x40084a0	    0x830500000000	               add dword [0x040084a7], 1	       774	eval.c	FUNCTION_16	IF_1
0x40084a7	      0xb900000000	                              mov ecx, 0	       775	eval.c	FUNCTION_16	IF_2	CALL_1
0x40084ac	          0x4889f2	                            mov rdx, rsi	       775	eval.c	FUNCTION_16	IF_2	CALL_1
0x40084af	          0x4889e6	                            mov rsi, rsp	       775	eval.c	FUNCTION_16	IF_2	CALL_1
0x40084b2	      0xe800000000	                          call 0x40084b7	       775	eval.c	FUNCTION_16	IF_2	CALL_1
0x40084b7	    0x832d00000000	               sub dword [0x040084be], 1	       783	eval.c	FUNCTION_16	IF_3
0x40084be	      0xbb00000000	                              mov ebx, 0	       776	eval.c	FUNCTION_16	IF_2
0x40084c3	            0xeb22	                           jmp 0x40084e7	       776	eval.c	FUNCTION_16	IF_2
0x40084c5	          0x4889e7	                            mov rdi, rsp	       779	eval.c	FUNCTION_16	ELSE_1	CALL_3
0x40084c8	      0xe800000000	                          call 0x40084cd	       779	eval.c	FUNCTION_16	ELSE_1	CALL_3
0x40084cd	          0x4889c7	                            mov rdi, rax	       779	eval.c	FUNCTION_16	ELSE_1	CALL_3
0x40084d0	      0xe800000000	                          call 0x40084d5	       779	eval.c	FUNCTION_16	ELSE_1	CALL_3
0x40084d5	          0x4889c3	                            mov rbx, rax	       779	eval.c	FUNCTION_16	ELSE_1	CALL_3
0x40084d8	          0x4889e7	                            mov rdi, rsp	       780	eval.c	FUNCTION_16	ELSE_1	CALL_4
0x40084db	      0xe800000000	                          call 0x40084e0	       780	eval.c	FUNCTION_16	ELSE_1	CALL_4
0x40084e0	            0xeb05	                           jmp 0x40084e7	       780	eval.c	FUNCTION_16	ELSE_1	CALL_4
0x40084e2	      0xbb00000000	                              mov ebx, 0	       776	eval.c	FUNCTION_16	IF_2
0x40084e7	          0x4889d8	                            mov rax, rbx	       786	eval.c	FUNCTION_16
0x40084ea	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       786	eval.c	FUNCTION_16
0x40084ef	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       786	eval.c	FUNCTION_16
0x40084f8	            0x741d	                            je 0x4008517	       786	eval.c	FUNCTION_16
0x40084fa	            0xeb16	                           jmp 0x4008512	       786	eval.c	FUNCTION_16
0x40084fc	      0xb901000000	                              mov ecx, 1	       775	eval.c	FUNCTION_16	IF_2	CALL_1
0x4008501	          0x4889f2	                            mov rdx, rsi	       775	eval.c	FUNCTION_16	IF_2	CALL_1
0x4008504	          0x4889e6	                            mov rsi, rsp	       775	eval.c	FUNCTION_16	IF_2	CALL_1
0x4008507	      0xe800000000	                          call 0x400850c	       775	eval.c	FUNCTION_16	IF_2	CALL_1
0x400850c	            0x85c0	                           test eax, eax	       775	eval.c	FUNCTION_16	IF_2	CALL_1
0x400850e	            0x75b5	                           jne 0x40084c5	       775	eval.c	FUNCTION_16	IF_2	CALL_1
0x4008510	            0xebd0	                           jmp 0x40084e2	       775	eval.c	FUNCTION_16	IF_2	CALL_1
0x4008512	      0xe800000000	                          call 0x4008517	       786	eval.c	FUNCTION_16
0x4008517	        0x4883c420	                           add rsp, 0x20	       786	eval.c	FUNCTION_16
0x400851b	              0x5b	                                 pop rbx	       786	eval.c	FUNCTION_16
0x400851c	              0xc3	                                     ret	       786	eval.c	FUNCTION_16
prepare_vimvar	FOR,0:SWITCH,0:DO,0:IF,1:functions,0:WHILE,0:CALL,1:ELSE,0	20
0x4000109	          0x4863c7	                         movsxd rax, edi	       910	eval.c	FUNCTION_21
0x400010c	    0x488d14c50000	                        lea rdx, [rax*8]	       910	eval.c	FUNCTION_21
0x4000114	        0x48c1e006	                              shl rax, 6	       910	eval.c	FUNCTION_21
0x4000118	          0x4829d0	                            sub rax, rdx	       910	eval.c	FUNCTION_21
0x400011b	    0x4c8b88000000	                     mov r9, qword [rax]	       910	eval.c	FUNCTION_21
0x4000122	    0x4c8b90000000	                    mov r10, qword [rax]	       910	eval.c	FUNCTION_21
0x4000129	    0x480500000000	                              add rax, 0	       910	eval.c	FUNCTION_21
0x400012f	          0x4c890e	                     mov qword [rsi], r9	       910	eval.c	FUNCTION_21
0x4000132	        0x4c895608	                mov qword [rsi + 8], r10	       910	eval.c	FUNCTION_21
0x4000136	        0x83780800	                  cmp dword [rax + 8], 0	       911	eval.c	FUNCTION_21	IF_1
0x400013a	            0x7523	                           jne 0x400015f	       911	eval.c	FUNCTION_21	IF_1
0x400013c	        0x4883ec08	                              sub rsp, 8	       909	eval.c	FUNCTION_21
0x4000140	          0x4863ff	                         movsxd rdi, edi	       912	eval.c	FUNCTION_21	CALL_1
0x4000143	        0x48c1e706	                              shl rdi, 6	       912	eval.c	FUNCTION_21	CALL_1
0x4000147	          0x4829d7	                            sub rdi, rdx	       912	eval.c	FUNCTION_21	CALL_1
0x400014a	    0x488db7000000	                          lea rsi, [rdi]	       912	eval.c	FUNCTION_21	CALL_1
0x4000151	      0xbf00000000	                              mov edi, 0	       912	eval.c	FUNCTION_21	CALL_1
0x4000156	      0xe800000000	                          call 0x400015b	       912	eval.c	FUNCTION_21	CALL_1
0x400015b	        0x4883c408	                              add rsp, 8	       913	eval.c	FUNCTION_21
0x400015f	            0xf3c3	                                     ret	       913	eval.c	FUNCTION_21
get_env_len	FOR,1:SWITCH,0:DO,0:IF,1:functions,0:WHILE,0:CALL,1:ELSE,0	21
0x40004c9	              0x55	                                push rbp	      6082	eval.c	FUNCTION_95
0x40004ca	              0x53	                                push rbx	      6082	eval.c	FUNCTION_95
0x40004cb	        0x4883ec08	                              sub rsp, 8	      6082	eval.c	FUNCTION_95
0x40004cf	          0x4889fd	                            mov rbp, rdi	      6082	eval.c	FUNCTION_95
0x40004d2	          0x488b1f	                    mov rbx, qword [rdi]	      6086	eval.c	FUNCTION_95	FOR_1	CALL_1
0x40004d5	            0xeb04	                           jmp 0x40004db	      6086	eval.c	FUNCTION_95	FOR_1	CALL_1
0x40004d7	        0x4883c301	                              add rbx, 1	      6086	eval.c	FUNCTION_95	FOR_1	CALL_1
0x40004db	           0xfb63b	                   movzx edi, byte [rbx]	      6086	eval.c	FUNCTION_95	FOR_1	CALL_1
0x40004de	      0xe800000000	                          call 0x40004e3	      6086	eval.c	FUNCTION_95	FOR_1	CALL_1
0x40004e3	            0x85c0	                           test eax, eax	      6086	eval.c	FUNCTION_95	FOR_1	CALL_1
0x40004e5	            0x75f0	                           jne 0x40004d7	      6086	eval.c	FUNCTION_95	FOR_1	CALL_1
0x40004e7	        0x488b5500	                    mov rdx, qword [rbp]	      6088	eval.c	FUNCTION_95	IF_1
0x40004eb	          0x4839d3	                            cmp rbx, rdx	      6088	eval.c	FUNCTION_95	IF_1
0x40004ee	            0x7408	                            je 0x40004f8	      6088	eval.c	FUNCTION_95	IF_1
0x40004f0	        0x48895d00	                    mov qword [rbp], rbx	      6092	eval.c	FUNCTION_95
0x40004f4	            0x89d8	                            mov eax, ebx	      6093	eval.c	FUNCTION_95
0x40004f6	            0x29d0	                            sub eax, edx	      6093	eval.c	FUNCTION_95
0x40004f8	        0x4883c408	                              add rsp, 8	      6094	eval.c	FUNCTION_95
0x40004fc	              0x5b	                                 pop rbx	      6094	eval.c	FUNCTION_95
0x40004fd	              0x5d	                                 pop rbp	      6094	eval.c	FUNCTION_95
0x40004fe	              0xc3	                                     ret	      6094	eval.c	FUNCTION_95
new_script_vars	FOR,1:SWITCH,0:DO,0:IF,2:functions,0:WHILE,1:CALL,6:ELSE,0	50
0x4004342	              0x55	                                push rbp	      7337	eval.c	FUNCTION_135
0x4004343	              0x53	                                push rbx	      7337	eval.c	FUNCTION_135
0x4004344	        0x4883ec08	                              sub rsp, 8	      7337	eval.c	FUNCTION_135
0x4004348	            0x89fb	                            mov ebx, edi	      7337	eval.c	FUNCTION_135
0x400434a	            0x89fe	                            mov esi, edi	      7342	eval.c	FUNCTION_135	IF_1	CALL_1
0x400434c	    0x2b3500000000	             sub esi, dword [0x04004352]	      7342	eval.c	FUNCTION_135	IF_1	CALL_1
0x4004352	      0xbf00000000	                              mov edi, 0	      7342	eval.c	FUNCTION_135	IF_1	CALL_1
0x4004357	      0xe800000000	                          call 0x400435c	      7342	eval.c	FUNCTION_135	IF_1	CALL_1
0x400435c	          0x83f801	                              cmp eax, 1	      7342	eval.c	FUNCTION_135	IF_1	CALL_1
0x400435f	     0xf8589000000	                           jne 0x40043ee	      7342	eval.c	FUNCTION_135	IF_1	CALL_1
0x4004365	    0x8b0500000000	            mov eax, dword [0x0400436b] 	      7347	eval.c	FUNCTION_135	IF_1	FOR_1
0x400436b	            0x85c0	                           test eax, eax	      7347	eval.c	FUNCTION_135	IF_1	FOR_1
0x400436d	            0x7e38	                           jle 0x40043a7	      7347	eval.c	FUNCTION_135	IF_1	FOR_1
0x400436f	      0xba01000000	                              mov edx, 1	      7347	eval.c	FUNCTION_135	IF_1	FOR_1
0x4004374	          0x4863ca	                         movsxd rcx, edx	      7349	eval.c	FUNCTION_135	IF_1	FOR_1	CALL_2
0x4004377	    0x488b35000000	            mov rsi, qword [0x0400437e] 	      7349	eval.c	FUNCTION_135	IF_1	FOR_1	CALL_2
0x400437e	      0x488d4ccef8	              lea rcx, [rsi + rcx*8 - 8]	      7349	eval.c	FUNCTION_135	IF_1	FOR_1	CALL_2
0x4004383	          0x488b31	                    mov rsi, qword [rcx]	      7349	eval.c	FUNCTION_135	IF_1	FOR_1	CALL_2
0x4004386	      0x48837e280f	            cmp qword [rsi + 0x28], 0xf 	      7350	eval.c	FUNCTION_135	IF_1	FOR_1	IF_2
0x400438b	            0x7508	                           jne 0x4004395	      7350	eval.c	FUNCTION_135	IF_1	FOR_1	IF_2
0x400438d	        0x488d7e50	                   lea rdi, [rsi + 0x50]	      7351	eval.c	FUNCTION_135	IF_1	FOR_1	IF_2
0x4004391	        0x48897e48	             mov qword [rsi + 0x48], rdi	      7351	eval.c	FUNCTION_135	IF_1	FOR_1	IF_2
0x4004395	          0x488b09	                    mov rcx, qword [rcx]	      7352	eval.c	FUNCTION_135	IF_1	FOR_1	CALL_3
0x4004398	        0x488d7118	                   lea rsi, [rcx + 0x18]	      7353	eval.c	FUNCTION_135	IF_1	FOR_1
0x400439c	        0x48897108	                mov qword [rcx + 8], rsi	      7353	eval.c	FUNCTION_135	IF_1	FOR_1
0x40043a0	          0x83c201	                              add edx, 1	      7347	eval.c	FUNCTION_135	IF_1	FOR_1
0x40043a3	            0x39c2	                            cmp edx, eax	      7347	eval.c	FUNCTION_135	IF_1	FOR_1
0x40043a5	            0x7ecd	                           jle 0x4004374	      7347	eval.c	FUNCTION_135	IF_1	FOR_1
0x40043a7	            0x39c3	                            cmp ebx, eax	      7356	eval.c	FUNCTION_135	IF_1	WHILE_1
0x40043a9	            0x7e43	                           jle 0x40043ee	      7356	eval.c	FUNCTION_135	IF_1	WHILE_1
0x40043ab	          0x83c001	                              add eax, 1	      7358	eval.c	FUNCTION_135	IF_1	WHILE_1	CALL_4
0x40043ae	            0x4898	                                    cdqe	      7358	eval.c	FUNCTION_135	IF_1	WHILE_1	CALL_4
0x40043b0	    0x488b15000000	            mov rdx, qword [0x040043b7] 	      7358	eval.c	FUNCTION_135	IF_1	WHILE_1	CALL_4
0x40043b7	      0x488d6cc2f8	              lea rbp, [rdx + rax*8 - 8]	      7358	eval.c	FUNCTION_135	IF_1	WHILE_1	CALL_4
0x40043bc	      0xbf68010000	                          mov edi, 0x168	      7359	eval.c	FUNCTION_135	IF_1	WHILE_1	CALL_5
0x40043c1	      0xe800000000	                          call 0x40043c6	      7359	eval.c	FUNCTION_135	IF_1	WHILE_1	CALL_5
0x40043c6	        0x48894500	                    mov qword [rbp], rax	      7358	eval.c	FUNCTION_135	IF_1	WHILE_1	CALL_4
0x40043ca	        0x488d7818	                   lea rdi, [rax + 0x18]	      7360	eval.c	FUNCTION_135	IF_1	WHILE_1	CALL_6
0x40043ce	      0xba01000000	                              mov edx, 1	      7360	eval.c	FUNCTION_135	IF_1	WHILE_1	CALL_6
0x40043d3	          0x4889c6	                            mov rsi, rax	      7360	eval.c	FUNCTION_135	IF_1	WHILE_1	CALL_6
0x40043d6	      0xe800000000	                          call 0x40043db	      7360	eval.c	FUNCTION_135	IF_1	WHILE_1	CALL_6
0x40043db	    0x8b0500000000	            mov eax, dword [0x040043e1] 	      7361	eval.c	FUNCTION_135	IF_1	WHILE_1
0x40043e1	          0x83c001	                              add eax, 1	      7361	eval.c	FUNCTION_135	IF_1	WHILE_1
0x40043e4	    0x890500000000	            mov dword [0x040043ea], eax 	      7361	eval.c	FUNCTION_135	IF_1	WHILE_1
0x40043ea	            0x39c3	                            cmp ebx, eax	      7356	eval.c	FUNCTION_135	IF_1	WHILE_1
0x40043ec	            0x7fbd	                            jg 0x40043ab	      7356	eval.c	FUNCTION_135	IF_1	WHILE_1
0x40043ee	        0x4883c408	                              add rsp, 8	      7364	eval.c	FUNCTION_135
0x40043f2	              0x5b	                                 pop rbx	      7364	eval.c	FUNCTION_135
0x40043f3	              0x5d	                                 pop rbp	      7364	eval.c	FUNCTION_135
0x40043f4	              0xc3	                                     ret	      7364	eval.c	FUNCTION_135
eval0	FOR,0:SWITCH,0:DO,0:IF,4:functions,0:WHILE,0:CALL,8:ELSE,0	58
0x4007fa2	            0x4155	                                push r13	      3258	eval.c	FUNCTION_63
0x4007fa4	            0x4154	                                push r12	      3258	eval.c	FUNCTION_63
0x4007fa6	              0x55	                                push rbp	      3258	eval.c	FUNCTION_63
0x4007fa7	              0x53	                                push rbx	      3258	eval.c	FUNCTION_63
0x4007fa8	        0x4883ec18	                           sub rsp, 0x18	      3258	eval.c	FUNCTION_63
0x4007fac	          0x4989fd	                            mov r13, rdi	      3258	eval.c	FUNCTION_63
0x4007faf	          0x4989f4	                            mov r12, rsi	      3258	eval.c	FUNCTION_63
0x4007fb2	          0x4889d5	                            mov rbp, rdx	      3258	eval.c	FUNCTION_63
0x4007fb5	            0x89cb	                            mov ebx, ecx	      3258	eval.c	FUNCTION_63
0x4007fb7	    0x64488b042528	                mov rax, qword fs:[0x28]	      3258	eval.c	FUNCTION_63
0x4007fc0	      0x4889442408	                mov qword [rsp + 8], rax	      3258	eval.c	FUNCTION_63
0x4007fc5	            0x31c0	                            xor eax, eax	      3258	eval.c	FUNCTION_63
0x4007fc7	      0xe800000000	                          call 0x4007fcc	      3262	eval.c	FUNCTION_63	CALL_1
0x4007fcc	        0x48890424	                    mov qword [rsp], rax	      3262	eval.c	FUNCTION_63	CALL_1
0x4007fd0	            0x89da	                            mov edx, ebx	      3263	eval.c	FUNCTION_63	CALL_2
0x4007fd2	          0x4c89e6	                            mov rsi, r12	      3263	eval.c	FUNCTION_63	CALL_2
0x4007fd5	          0x4889e7	                            mov rdi, rsp	      3263	eval.c	FUNCTION_63	CALL_2
0x4007fd8	      0xe800000000	                          call 0x4007fdd	      3263	eval.c	FUNCTION_63	CALL_2
0x4007fdd	            0x85c0	                           test eax, eax	      3264	eval.c	FUNCTION_63	IF_1	CALL_3
0x4007fdf	            0x7414	                            je 0x4007ff5	      3264	eval.c	FUNCTION_63	IF_1	CALL_3
0x4007fe1	            0x89c3	                            mov ebx, eax	      3264	eval.c	FUNCTION_63	IF_1	CALL_3
0x4007fe3	        0x488b0424	                    mov rax, qword [rsp]	      3264	eval.c	FUNCTION_63	IF_1	CALL_3
0x4007fe7	           0xfb638	                   movzx edi, byte [rax]	      3264	eval.c	FUNCTION_63	IF_1	CALL_3
0x4007fea	      0xe800000000	                          call 0x4007fef	      3264	eval.c	FUNCTION_63	IF_1	CALL_3
0x4007fef	            0x85c0	                           test eax, eax	      3264	eval.c	FUNCTION_63	IF_1	CALL_3
0x4007ff1	            0x7455	                            je 0x4008048	      3264	eval.c	FUNCTION_63	IF_1	CALL_3
0x4007ff3	            0xeb2d	                           jmp 0x4008022	      3264	eval.c	FUNCTION_63	IF_1	CALL_3
0x4007ff5	      0xe800000000	                          call 0x4007ffa	      3273	eval.c	FUNCTION_63	IF_1	IF_3	CALL_5
0x4007ffa	      0xbb00000000	                              mov ebx, 0	      3275	eval.c	FUNCTION_63	IF_1
0x4007fff	            0x85c0	                           test eax, eax	      3273	eval.c	FUNCTION_63	IF_1	IF_3	CALL_5
0x4008001	            0x751f	                           jne 0x4008022	      3273	eval.c	FUNCTION_63	IF_1	IF_3	CALL_5
0x4008003	      0xba05000000	                              mov edx, 5	      3274	eval.c	FUNCTION_63	IF_1	CALL_7
0x4008008	      0xbe00000000	                              mov esi, 0	      3274	eval.c	FUNCTION_63	IF_1	CALL_7
0x400800d	      0xbf00000000	                              mov edi, 0	      3274	eval.c	FUNCTION_63	IF_1	CALL_7
0x4008012	      0xe800000000	                          call 0x4008017	      3274	eval.c	FUNCTION_63	IF_1	CALL_7
0x4008017	          0x4c89ee	                            mov rsi, r13	      3274	eval.c	FUNCTION_63	IF_1	CALL_7
0x400801a	          0x4889c7	                            mov rdi, rax	      3274	eval.c	FUNCTION_63	IF_1	CALL_7
0x400801d	      0xe800000000	                          call 0x4008022	      3274	eval.c	FUNCTION_63	IF_1	CALL_7
0x4008022	          0x4885ed	                           test rbp, rbp	      3277	eval.c	FUNCTION_63	IF_4
0x4008025	            0x740d	                            je 0x4008034	      3277	eval.c	FUNCTION_63	IF_4
0x4008027	        0x488b3c24	                    mov rdi, qword [rsp]	      3278	eval.c	FUNCTION_63	CALL_8
0x400802b	      0xe800000000	                          call 0x4008030	      3278	eval.c	FUNCTION_63	CALL_8
0x4008030	        0x48894500	                    mov qword [rbp], rax	      3278	eval.c	FUNCTION_63	CALL_8
0x4008034	            0x89d8	                            mov eax, ebx	      3281	eval.c	FUNCTION_63
0x4008036	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      3281	eval.c	FUNCTION_63
0x400803b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3281	eval.c	FUNCTION_63
0x4008044	            0x7411	                            je 0x4008057	      3281	eval.c	FUNCTION_63
0x4008046	            0xeb0a	                           jmp 0x4008052	      3281	eval.c	FUNCTION_63
0x4008048	          0x4c89e7	                            mov rdi, r12	      3267	eval.c	FUNCTION_63	IF_1	CALL_4
0x400804b	      0xe800000000	                          call 0x4008050	      3267	eval.c	FUNCTION_63	IF_1	CALL_4
0x4008050	            0xeba3	                           jmp 0x4007ff5	      3267	eval.c	FUNCTION_63	IF_1	CALL_4
0x4008052	      0xe800000000	                          call 0x4008057	      3281	eval.c	FUNCTION_63
0x4008057	        0x4883c418	                           add rsp, 0x18	      3281	eval.c	FUNCTION_63
0x400805b	              0x5b	                                 pop rbx	      3281	eval.c	FUNCTION_63
0x400805c	              0x5d	                                 pop rbp	      3281	eval.c	FUNCTION_63
0x400805d	            0x415c	                                 pop r12	      3281	eval.c	FUNCTION_63
0x400805f	            0x415d	                                 pop r13	      3281	eval.c	FUNCTION_63
0x4008061	              0xc3	                                     ret	      3281	eval.c	FUNCTION_63
find_var_ht	FOR,0:SWITCH,0:DO,0:IF,14:functions,0:WHILE,0:CALL,8:ELSE,0	102
0x4003f76	           0xfb607	                   movzx eax, byte [rdi]	      7270	eval.c	FUNCTION_133	IF_1
0x4003f79	            0x84c0	                             test al, al	      7270	eval.c	FUNCTION_133	IF_1
0x4003f7b	     0xf8452010000	                            je 0x40040d3	      7270	eval.c	FUNCTION_133	IF_1
0x4003f81	              0x55	                                push rbp	      7266	eval.c	FUNCTION_133
0x4003f82	              0x53	                                push rbx	      7266	eval.c	FUNCTION_133
0x4003f83	        0x4883ec08	                              sub rsp, 8	      7266	eval.c	FUNCTION_133
0x4003f87	          0x4889fb	                            mov rbx, rdi	      7266	eval.c	FUNCTION_133
0x4003f8a	        0x807f013a	                cmp byte [rdi + 1], 0x3a	      7272	eval.c	FUNCTION_133	IF_2
0x4003f8e	            0x7451	                            je 0x4003fe1	      7272	eval.c	FUNCTION_133	IF_2
0x4003f90	            0x3c3a	                            cmp al, 0x3a	      7275	eval.c	FUNCTION_133	IF_2	IF_3
0x4003f92	     0xf8441010000	                            je 0x40040d9	      7275	eval.c	FUNCTION_133	IF_2	IF_3
0x4003f98	            0x3c23	                            cmp al, 0x23	      7275	eval.c	FUNCTION_133	IF_2	IF_3
0x4003f9a	     0xf8439010000	                            je 0x40040d9	      7275	eval.c	FUNCTION_133	IF_2	IF_3
0x4003fa0	          0x48893e	                    mov qword [rsi], rdi	      7277	eval.c	FUNCTION_133	IF_2
0x4003fa3	          0x4889fe	                            mov rsi, rdi	      7280	eval.c	FUNCTION_133	IF_2	CALL_1
0x4003fa6	      0xbf00000000	                              mov edi, 0	      7280	eval.c	FUNCTION_133	IF_2	CALL_1
0x4003fab	      0xe800000000	                          call 0x4003fb0	      7280	eval.c	FUNCTION_133	IF_2	CALL_1
0x4003fb0	        0x488b5008	                mov rdx, qword [rax + 8]	      7281	eval.c	FUNCTION_133	IF_2	IF_4	CALL_2
0x4003fb4	    0x4881fa000000	                              cmp rdx, 0	      7281	eval.c	FUNCTION_133	IF_2	IF_4	CALL_2
0x4003fbb	            0x740e	                            je 0x4003fcb	      7281	eval.c	FUNCTION_133	IF_2	IF_4	CALL_2
0x4003fbd	      0xb800000000	                              mov eax, 0	      7282	eval.c	FUNCTION_133	IF_2	IF_4
0x4003fc2	          0x4885d2	                           test rdx, rdx	      7281	eval.c	FUNCTION_133	IF_2	IF_4	CALL_2
0x4003fc5	     0xf8528010000	                           jne 0x40040f3	      7281	eval.c	FUNCTION_133	IF_2	IF_4	CALL_2
0x4003fcb	      0xe800000000	                          call 0x4003fd0	      7284	eval.c	FUNCTION_133	IF_2	CALL_3
0x4003fd0	          0x4885c0	                           test rax, rax	      7287	eval.c	FUNCTION_133	IF_2
0x4003fd3	      0xba00000000	                              mov edx, 0	      7287	eval.c	FUNCTION_133	IF_2
0x4003fd8	        0x480f44c2	                          cmove rax, rdx	      7287	eval.c	FUNCTION_133	IF_2
0x4003fdc	      0xe912010000	                           jmp 0x40040f3	      7287	eval.c	FUNCTION_133	IF_2
0x4003fe1	        0x488d6f02	                      lea rbp, [rdi + 2]	      7289	eval.c	FUNCTION_133
0x4003fe5	          0x48892e	                    mov qword [rsi], rbp	      7289	eval.c	FUNCTION_133
0x4003fe8	      0xb800000000	                              mov eax, 0	      7291	eval.c	FUNCTION_133	IF_6
0x4003fed	          0x803f67	                    cmp byte [rdi], 0x67	      7290	eval.c	FUNCTION_133	IF_6
0x4003ff0	     0xf84fd000000	                            je 0x40040f3	      7290	eval.c	FUNCTION_133	IF_6
0x4003ff6	      0xbe3a000000	                           mov esi, 0x3a	      7294	eval.c	FUNCTION_133	IF_7	CALL_4
0x4003ffb	          0x4889ef	                            mov rdi, rbp	      7294	eval.c	FUNCTION_133	IF_7	CALL_4
0x4003ffe	      0xe800000000	                          call 0x4004003	      7294	eval.c	FUNCTION_133	IF_7	CALL_4
0x4004003	          0x4889c2	                            mov rdx, rax	      7294	eval.c	FUNCTION_133	IF_7	CALL_4
0x4004006	      0xb800000000	                              mov eax, 0	      7296	eval.c	FUNCTION_133	IF_7
0x400400b	          0x4885d2	                           test rdx, rdx	      7294	eval.c	FUNCTION_133	IF_7	CALL_4
0x400400e	     0xf85df000000	                           jne 0x40040f3	      7294	eval.c	FUNCTION_133	IF_7	CALL_4
0x4004014	      0xbe23000000	                           mov esi, 0x23	      7295	eval.c	FUNCTION_133	IF_7	CALL_5
0x4004019	          0x4889ef	                            mov rdi, rbp	      7295	eval.c	FUNCTION_133	IF_7	CALL_5
0x400401c	      0xe800000000	                          call 0x4004021	      7295	eval.c	FUNCTION_133	IF_7	CALL_5
0x4004021	          0x4889c2	                            mov rdx, rax	      7295	eval.c	FUNCTION_133	IF_7	CALL_5
0x4004024	      0xb800000000	                              mov eax, 0	      7296	eval.c	FUNCTION_133	IF_7
0x4004029	          0x4885d2	                           test rdx, rdx	      7295	eval.c	FUNCTION_133	IF_7	CALL_5
0x400402c	     0xf85c1000000	                           jne 0x40040f3	      7295	eval.c	FUNCTION_133	IF_7	CALL_5
0x4004032	           0xfb613	                   movzx edx, byte [rbx]	      7297	eval.c	FUNCTION_133	IF_8
0x4004035	          0x80fa62	                            cmp dl, 0x62	      7297	eval.c	FUNCTION_133	IF_8
0x4004038	            0x7517	                           jne 0x4004051	      7297	eval.c	FUNCTION_133	IF_8
0x400403a	    0x488b05000000	            mov rax, qword [0x04004041] 	      7298	eval.c	FUNCTION_133	IF_8
0x4004041	    0x488b80301700	          mov rax, qword [rax + 0x1730] 	      7298	eval.c	FUNCTION_133	IF_8
0x4004048	        0x4883c010	                           add rax, 0x10	      7298	eval.c	FUNCTION_133	IF_8
0x400404c	      0xe9a2000000	                           jmp 0x40040f3	      7298	eval.c	FUNCTION_133	IF_8
0x4004051	          0x80fa77	                            cmp dl, 0x77	      7299	eval.c	FUNCTION_133	IF_9
0x4004054	            0x7517	                           jne 0x400406d	      7299	eval.c	FUNCTION_133	IF_9
0x4004056	    0x488b05000000	            mov rax, qword [0x0400405d] 	      7300	eval.c	FUNCTION_133	IF_9
0x400405d	    0x488b80700500	           mov rax, qword [rax + 0x570] 	      7300	eval.c	FUNCTION_133	IF_9
0x4004064	        0x4883c010	                           add rax, 0x10	      7300	eval.c	FUNCTION_133	IF_9
0x4004068	      0xe986000000	                           jmp 0x40040f3	      7300	eval.c	FUNCTION_133	IF_9
0x400406d	          0x80fa74	                            cmp dl, 0x74	      7301	eval.c	FUNCTION_133	IF_10
0x4004070	            0x7514	                           jne 0x4004086	      7301	eval.c	FUNCTION_133	IF_10
0x4004072	    0x488b05000000	            mov rax, qword [0x04004079] 	      7302	eval.c	FUNCTION_133	IF_10
0x4004079	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	      7302	eval.c	FUNCTION_133	IF_10
0x4004080	        0x4883c010	                           add rax, 0x10	      7302	eval.c	FUNCTION_133	IF_10
0x4004084	            0xeb6d	                           jmp 0x40040f3	      7302	eval.c	FUNCTION_133	IF_10
0x4004086	          0x80fa76	                            cmp dl, 0x76	      7303	eval.c	FUNCTION_133	IF_11
0x4004089	            0x7455	                            je 0x40040e0	      7303	eval.c	FUNCTION_133	IF_11
0x400408b	          0x80fa61	                            cmp dl, 0x61	      7305	eval.c	FUNCTION_133	IF_12
0x400408e	            0x7507	                           jne 0x4004097	      7305	eval.c	FUNCTION_133	IF_12
0x4004090	      0xe800000000	                          call 0x4004095	      7306	eval.c	FUNCTION_133	CALL_6
0x4004095	            0xeb5c	                           jmp 0x40040f3	      7306	eval.c	FUNCTION_133	CALL_6
0x4004097	          0x80fa6c	                            cmp dl, 0x6c	      7307	eval.c	FUNCTION_133	IF_13
0x400409a	            0x7507	                           jne 0x40040a3	      7307	eval.c	FUNCTION_133	IF_13
0x400409c	      0xe800000000	                          call 0x40040a1	      7308	eval.c	FUNCTION_133	CALL_7
0x40040a1	            0xeb50	                           jmp 0x40040f3	      7308	eval.c	FUNCTION_133	CALL_7
0x40040a3	      0xb800000000	                              mov eax, 0	      7312	eval.c	FUNCTION_133
0x40040a8	          0x80fa73	                            cmp dl, 0x73	      7309	eval.c	FUNCTION_133	IF_14
0x40040ab	            0x7546	                           jne 0x40040f3	      7309	eval.c	FUNCTION_133	IF_14
0x40040ad	    0x8b0500000000	            mov eax, dword [0x040040b3] 	      7310	eval.c	FUNCTION_133	IF_14
0x40040b3	            0x85c0	                           test eax, eax	      7310	eval.c	FUNCTION_133	IF_14
0x40040b5	            0x7e30	                           jle 0x40040e7	      7310	eval.c	FUNCTION_133	IF_14
0x40040b7	    0x3b0500000000	            cmp eax, dword [0x040040bd] 	      7310	eval.c	FUNCTION_133	IF_14
0x40040bd	            0x7f2f	                            jg 0x40040ee	      7310	eval.c	FUNCTION_133	IF_14
0x40040bf	            0x4898	                                    cdqe	      7311	eval.c	FUNCTION_133	CALL_8
0x40040c1	    0x488b15000000	            mov rdx, qword [0x040040c8] 	      7311	eval.c	FUNCTION_133	CALL_8
0x40040c8	      0x488b44c2f8	        mov rax, qword [rdx + rax*8 - 8]	      7311	eval.c	FUNCTION_133	CALL_8
0x40040cd	        0x4883c028	                           add rax, 0x28	      7311	eval.c	FUNCTION_133	CALL_8
0x40040d1	            0xeb20	                           jmp 0x40040f3	      7311	eval.c	FUNCTION_133	CALL_8
0x40040d3	      0xb800000000	                              mov eax, 0	      7271	eval.c	FUNCTION_133	IF_1
0x40040d8	              0xc3	                                     ret	      7313	eval.c	FUNCTION_133
0x40040d9	      0xb800000000	                              mov eax, 0	      7276	eval.c	FUNCTION_133	IF_2	IF_3
0x40040de	            0xeb13	                           jmp 0x40040f3	      7276	eval.c	FUNCTION_133	IF_2	IF_3
0x40040e0	      0xb800000000	                              mov eax, 0	      7304	eval.c	FUNCTION_133	IF_11
0x40040e5	            0xeb0c	                           jmp 0x40040f3	      7304	eval.c	FUNCTION_133	IF_11
0x40040e7	      0xb800000000	                              mov eax, 0	      7312	eval.c	FUNCTION_133
0x40040ec	            0xeb05	                           jmp 0x40040f3	      7312	eval.c	FUNCTION_133
0x40040ee	      0xb800000000	                              mov eax, 0	      7312	eval.c	FUNCTION_133
0x40040f3	        0x4883c408	                              add rsp, 8	      7313	eval.c	FUNCTION_133
0x40040f7	              0x5b	                                 pop rbx	      7313	eval.c	FUNCTION_133
0x40040f8	              0x5d	                                 pop rbp	      7313	eval.c	FUNCTION_133
0x40040f9	              0xc3	                                     ret	      7313	eval.c	FUNCTION_133
eval_expr_typval	FOR,0:SWITCH,0:DO,0:IF,9:functions,0:WHILE,0:CALL,10:ELSE,2	120
0x4007ac3	              0x53	                                push rbx	       697	eval.c	FUNCTION_14
0x4007ac4	        0x4883ec60	                           sub rsp, 0x60	       697	eval.c	FUNCTION_14
0x4007ac8	          0x4889cb	                            mov rbx, rcx	       697	eval.c	FUNCTION_14
0x4007acb	    0x64488b042528	                mov rax, qword fs:[0x28]	       697	eval.c	FUNCTION_14
0x4007ad4	      0x4889442458	             mov qword [rsp + 0x58], rax	       697	eval.c	FUNCTION_14
0x4007ad9	            0x31c0	                            xor eax, eax	       697	eval.c	FUNCTION_14
0x4007adb	            0x8b07	                    mov eax, dword [rdi]	       702	eval.c	FUNCTION_14	IF_1
0x4007add	          0x83f803	                              cmp eax, 3	       702	eval.c	FUNCTION_14	IF_1
0x4007ae0	            0x7570	                           jne 0x4007b52	       702	eval.c	FUNCTION_14	IF_1
0x4007ae2	        0x4c8b5708	                mov r10, qword [rdi + 8]	       704	eval.c	FUNCTION_14	IF_1
0x4007ae6	      0x4c89542408	                mov qword [rsp + 8], r10	       704	eval.c	FUNCTION_14	IF_1
0x4007aeb	          0x4d85d2	                           test r10, r10	       705	eval.c	FUNCTION_14	IF_1	IF_2
0x4007aee	     0xf8462010000	                            je 0x4007c56	       705	eval.c	FUNCTION_14	IF_1	IF_2
0x4007af4	      0xb800000000	                              mov eax, 0	       706	eval.c	FUNCTION_14	IF_1	IF_2
0x4007af9	        0x41803a00	                       cmp byte [r10], 0	       705	eval.c	FUNCTION_14	IF_1	IF_2
0x4007afd	     0xf8458010000	                            je 0x4007c5b	       705	eval.c	FUNCTION_14	IF_1	IF_2
0x4007b03	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       707	eval.c	FUNCTION_14	IF_1	IF_3	CALL_2
0x4007b0a	          0x4c89d7	                            mov rdi, r10	       707	eval.c	FUNCTION_14	IF_1	IF_3	CALL_2
0x4007b0d	            0xf2ae	              repne scasb al, byte [rdi]	       707	eval.c	FUNCTION_14	IF_1	IF_3	CALL_2
0x4007b0f	          0x4889c8	                            mov rax, rcx	       707	eval.c	FUNCTION_14	IF_1	IF_3	CALL_2
0x4007b12	          0x48f7d0	                                 not rax	       707	eval.c	FUNCTION_14	IF_1	IF_3	CALL_2
0x4007b15	        0x4883e801	                              sub rax, 1	       707	eval.c	FUNCTION_14	IF_1	IF_3	CALL_2
0x4007b19	            0x6a00	                                  push 0	       707	eval.c	FUNCTION_14	IF_1	IF_3	CALL_2
0x4007b1b	            0x6a00	                                  push 0	       707	eval.c	FUNCTION_14	IF_1	IF_3	CALL_2
0x4007b1d	            0x6a01	                                  push 1	       707	eval.c	FUNCTION_14	IF_1	IF_3	CALL_2
0x4007b1f	      0x488d4c241c	                   lea rcx, [rsp + 0x1c]	       707	eval.c	FUNCTION_14	IF_1	IF_3	CALL_2
0x4007b24	              0x51	                                push rcx	       707	eval.c	FUNCTION_14	IF_1	IF_3	CALL_2
0x4007b25	            0x6a00	                                  push 0	       707	eval.c	FUNCTION_14	IF_1	IF_3	CALL_2
0x4007b27	            0x6a00	                                  push 0	       707	eval.c	FUNCTION_14	IF_1	IF_3	CALL_2
0x4007b29	    0x41b900000000	                              mov r9d, 0	       707	eval.c	FUNCTION_14	IF_1	IF_3	CALL_2
0x4007b2f	          0x4989f0	                             mov r8, rsi	       707	eval.c	FUNCTION_14	IF_1	IF_3	CALL_2
0x4007b32	            0x89d1	                            mov ecx, edx	       707	eval.c	FUNCTION_14	IF_1	IF_3	CALL_2
0x4007b34	          0x4889da	                            mov rdx, rbx	       707	eval.c	FUNCTION_14	IF_1	IF_3	CALL_2
0x4007b37	            0x89c6	                            mov esi, eax	       707	eval.c	FUNCTION_14	IF_1	IF_3	CALL_2
0x4007b39	          0x4c89d7	                            mov rdi, r10	       707	eval.c	FUNCTION_14	IF_1	IF_3	CALL_2
0x4007b3c	      0xe800000000	                          call 0x4007b41	       707	eval.c	FUNCTION_14	IF_1	IF_3	CALL_2
0x4007b41	        0x4883c430	                           add rsp, 0x30	       706	eval.c	FUNCTION_14	IF_1	IF_2
0x4007b45	            0x85c0	                           test eax, eax	       706	eval.c	FUNCTION_14	IF_1	IF_2
0x4007b47	           0xf95c0	                                setne al	       706	eval.c	FUNCTION_14	IF_1	IF_2
0x4007b4a	           0xfb6c0	                           movzx eax, al	       706	eval.c	FUNCTION_14	IF_1	IF_2
0x4007b4d	      0xe909010000	                           jmp 0x4007c5b	       706	eval.c	FUNCTION_14	IF_1	IF_2
0x4007b52	          0x83f804	                              cmp eax, 4	       711	eval.c	FUNCTION_14	ELSE_1	IF_4
0x4007b55	     0xf858a000000	                           jne 0x4007be5	       711	eval.c	FUNCTION_14	ELSE_1	IF_4
0x4007b5b	        0x4c8b4708	                 mov r8, qword [rdi + 8]	       713	eval.c	FUNCTION_14	ELSE_1	IF_4
0x4007b5f	        0x4d8b5008	                 mov r10, qword [r8 + 8]	      4862	eval.c	FUNCTION_75	IF_1
0x4007b63	          0x4d85d2	                           test r10, r10	      4862	eval.c	FUNCTION_75	IF_1
0x4007b66	     0xf8501010000	                           jne 0x4007c6d	      4862	eval.c	FUNCTION_75	IF_1
0x4007b6c	        0x498b4010	              mov rax, qword [r8 + 0x10]	      4864	eval.c	FUNCTION_75
0x4007b70	    0x4c8d90d80000	                   lea r10, [rax + 0xd8]	      4864	eval.c	FUNCTION_75
0x4007b77	      0x4c89542408	                mov qword [rsp + 8], r10	       715	eval.c	FUNCTION_14	ELSE_1	IF_4	CALL_3
0x4007b7c	      0xb800000000	                              mov eax, 0	       717	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_5
0x4007b81	          0x4d85d2	                           test r10, r10	       716	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_5
0x4007b84	     0xf84d1000000	                            je 0x4007c5b	       716	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_5
0x4007b8a	      0xb800000000	                              mov eax, 0	       717	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_5
0x4007b8f	        0x41803a00	                       cmp byte [r10], 0	       716	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_5
0x4007b93	     0xf84c2000000	                            je 0x4007c5b	       716	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_5
0x4007b99	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4007ba0	          0x4c89d7	                            mov rdi, r10	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4007ba3	            0xf2ae	              repne scasb al, byte [rdi]	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4007ba5	          0x4889c8	                            mov rax, rcx	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4007ba8	          0x48f7d0	                                 not rax	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4007bab	        0x4883e801	                              sub rax, 1	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4007baf	            0x6a00	                                  push 0	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4007bb1	            0x4150	                                 push r8	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4007bb3	            0x6a01	                                  push 1	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4007bb5	      0x488d4c241c	                   lea rcx, [rsp + 0x1c]	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4007bba	              0x51	                                push rcx	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4007bbb	            0x6a00	                                  push 0	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4007bbd	            0x6a00	                                  push 0	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4007bbf	    0x41b900000000	                              mov r9d, 0	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4007bc5	          0x4989f0	                             mov r8, rsi	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4007bc8	            0x89d1	                            mov ecx, edx	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4007bca	          0x4889da	                            mov rdx, rbx	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4007bcd	            0x89c6	                            mov esi, eax	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4007bcf	          0x4c89d7	                            mov rdi, r10	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4007bd2	      0xe800000000	                          call 0x4007bd7	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4007bd7	        0x4883c430	                           add rsp, 0x30	       706	eval.c	FUNCTION_14	IF_1	IF_2
0x4007bdb	            0x85c0	                           test eax, eax	       706	eval.c	FUNCTION_14	IF_1	IF_2
0x4007bdd	           0xf95c0	                                setne al	       706	eval.c	FUNCTION_14	IF_1	IF_2
0x4007be0	           0xfb6c0	                           movzx eax, al	       706	eval.c	FUNCTION_14	IF_1	IF_2
0x4007be3	            0xeb76	                           jmp 0x4007c5b	       706	eval.c	FUNCTION_14	IF_1	IF_2
0x4007be5	      0x488d742410	                   lea rsi, [rsp + 0x10]	       724	eval.c	FUNCTION_14	ELSE_2	CALL_6
0x4007bea	      0xe800000000	                          call 0x4007bef	       724	eval.c	FUNCTION_14	ELSE_2	CALL_6
0x4007bef	          0x4889c7	                            mov rdi, rax	       724	eval.c	FUNCTION_14	ELSE_2	CALL_6
0x4007bf2	      0x4889442408	                mov qword [rsp + 8], rax	       724	eval.c	FUNCTION_14	ELSE_2	CALL_6
0x4007bf7	      0xb800000000	                              mov eax, 0	       726	eval.c	FUNCTION_14	ELSE_2	IF_7
0x4007bfc	          0x4885ff	                           test rdi, rdi	       725	eval.c	FUNCTION_14	ELSE_2	IF_7
0x4007bff	            0x745a	                            je 0x4007c5b	       725	eval.c	FUNCTION_14	ELSE_2	IF_7
0x4007c01	      0xe800000000	                          call 0x4007c06	       727	eval.c	FUNCTION_14	ELSE_2	CALL_7
0x4007c06	      0x4889442408	                mov qword [rsp + 8], rax	       727	eval.c	FUNCTION_14	ELSE_2	CALL_7
0x4007c0b	      0xba01000000	                              mov edx, 1	       728	eval.c	FUNCTION_14	ELSE_2	IF_8	CALL_8
0x4007c10	          0x4889de	                            mov rsi, rbx	       728	eval.c	FUNCTION_14	ELSE_2	IF_8	CALL_8
0x4007c13	      0x488d7c2408	                      lea rdi, [rsp + 8]	       728	eval.c	FUNCTION_14	ELSE_2	IF_8	CALL_8
0x4007c18	      0xe800000000	                          call 0x4007c1d	       728	eval.c	FUNCTION_14	ELSE_2	IF_8	CALL_8
0x4007c1d	            0x85c0	                           test eax, eax	       728	eval.c	FUNCTION_14	ELSE_2	IF_8	CALL_8
0x4007c1f	            0x743a	                            je 0x4007c5b	       728	eval.c	FUNCTION_14	ELSE_2	IF_8	CALL_8
0x4007c21	      0x488b5c2408	                mov rbx, qword [rsp + 8]	       730	eval.c	FUNCTION_14	ELSE_2	IF_9
0x4007c26	      0xb801000000	                              mov eax, 1	       736	eval.c	FUNCTION_14
0x4007c2b	          0x803b00	                       cmp byte [rbx], 0	       730	eval.c	FUNCTION_14	ELSE_2	IF_9
0x4007c2e	            0x742b	                            je 0x4007c5b	       730	eval.c	FUNCTION_14	ELSE_2	IF_9
0x4007c30	      0xba05000000	                              mov edx, 5	       732	eval.c	FUNCTION_14	ELSE_2	IF_9	CALL_10
0x4007c35	      0xbe00000000	                              mov esi, 0	       732	eval.c	FUNCTION_14	ELSE_2	IF_9	CALL_10
0x4007c3a	      0xbf00000000	                              mov edi, 0	       732	eval.c	FUNCTION_14	ELSE_2	IF_9	CALL_10
0x4007c3f	      0xe800000000	                          call 0x4007c44	       732	eval.c	FUNCTION_14	ELSE_2	IF_9	CALL_10
0x4007c44	          0x4889de	                            mov rsi, rbx	       732	eval.c	FUNCTION_14	ELSE_2	IF_9	CALL_10
0x4007c47	          0x4889c7	                            mov rdi, rax	       732	eval.c	FUNCTION_14	ELSE_2	IF_9	CALL_10
0x4007c4a	      0xe800000000	                          call 0x4007c4f	       732	eval.c	FUNCTION_14	ELSE_2	IF_9	CALL_10
0x4007c4f	      0xb800000000	                              mov eax, 0	       733	eval.c	FUNCTION_14	ELSE_2	IF_9
0x4007c54	            0xeb05	                           jmp 0x4007c5b	       733	eval.c	FUNCTION_14	ELSE_2	IF_9
0x4007c56	      0xb800000000	                              mov eax, 0	       706	eval.c	FUNCTION_14	IF_1	IF_2
0x4007c5b	      0x488b5c2458	            mov rbx, qword [rsp + 0x58] 	       737	eval.c	FUNCTION_14
0x4007c60	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       737	eval.c	FUNCTION_14
0x4007c69	            0x7411	                            je 0x4007c7c	       737	eval.c	FUNCTION_14
0x4007c6b	            0xeb0a	                           jmp 0x4007c77	       737	eval.c	FUNCTION_14
0x4007c6d	      0x4c89542408	                mov qword [rsp + 8], r10	       715	eval.c	FUNCTION_14	ELSE_1	IF_4	CALL_3
0x4007c72	      0xe913ffffff	                           jmp 0x4007b8a	       715	eval.c	FUNCTION_14	ELSE_1	IF_4	CALL_3
0x4007c77	      0xe800000000	                          call 0x4007c7c	       737	eval.c	FUNCTION_14
0x4007c7c	        0x4883c460	                           add rsp, 0x60	       737	eval.c	FUNCTION_14
0x4007c80	              0x5b	                                 pop rbx	       737	eval.c	FUNCTION_14
0x4007c81	              0xc3	                                     ret	       737	eval.c	FUNCTION_14
ex_echo	FOR,1:SWITCH,0:DO,0:IF,14:functions,0:WHILE,1:CALL,19:ELSE,4	170
0x400cc72	            0x4155	                                push r13	      8009	eval.c	FUNCTION_152
0x400cc74	            0x4154	                                push r12	      8009	eval.c	FUNCTION_152
0x400cc76	              0x55	                                push rbp	      8009	eval.c	FUNCTION_152
0x400cc77	              0x53	                                push rbx	      8009	eval.c	FUNCTION_152
0x400cc78	        0x4883ec78	                           sub rsp, 0x78	      8009	eval.c	FUNCTION_152
0x400cc7c	          0x4989fc	                            mov r12, rdi	      8009	eval.c	FUNCTION_152
0x400cc7f	    0x64488b042528	                mov rax, qword fs:[0x28]	      8009	eval.c	FUNCTION_152
0x400cc88	      0x4889442468	             mov qword [rsp + 0x68], rax	      8009	eval.c	FUNCTION_152
0x400cc8d	            0x31c0	                            xor eax, eax	      8009	eval.c	FUNCTION_152
0x400cc8f	          0x488b1f	                    mov rbx, qword [rdi]	      8010	eval.c	FUNCTION_152
0x400cc92	        0x48891c24	                    mov qword [rsp], rbx	      8010	eval.c	FUNCTION_152
0x400cc96	        0x837f3000	               cmp dword [rdi + 0x30], 0	      8018	eval.c	FUNCTION_152	IF_1
0x400cc9a	            0x7407	                            je 0x400cca3	      8018	eval.c	FUNCTION_152	IF_1
0x400cc9c	    0x830500000000	               add dword [0x0400cca3], 1	      8019	eval.c	FUNCTION_152	IF_1
0x400cca3	           0xfb603	                   movzx eax, byte [rbx]	      8020	eval.c	FUNCTION_152	WHILE_1
0x400cca6	            0x84c0	                             test al, al	      8020	eval.c	FUNCTION_152	WHILE_1
0x400cca8	           0xf95c1	                                setne cl	      8020	eval.c	FUNCTION_152	WHILE_1
0x400ccab	            0x3c7c	                            cmp al, 0x7c	      8020	eval.c	FUNCTION_152	WHILE_1
0x400ccad	           0xf95c2	                                setne dl	      8020	eval.c	FUNCTION_152	WHILE_1
0x400ccb0	            0x84d1	                             test cl, dl	      8020	eval.c	FUNCTION_152	WHILE_1
0x400ccb2	     0xf8416020000	                            je 0x400cece	      8020	eval.c	FUNCTION_152	WHILE_1
0x400ccb8	            0x3c0a	                             cmp al, 0xa	      8020	eval.c	FUNCTION_152	WHILE_1
0x400ccba	     0xf840e020000	                            je 0x400cece	      8020	eval.c	FUNCTION_152	WHILE_1
0x400ccc0	    0x8b0500000000	            mov eax, dword [0x0400ccc6] 	      8020	eval.c	FUNCTION_152	WHILE_1
0x400ccc6	            0x85c0	                           test eax, eax	      8020	eval.c	FUNCTION_152	WHILE_1
0x400ccc8	     0xf8500020000	                           jne 0x400cece	      8020	eval.c	FUNCTION_152	WHILE_1
0x400ccce	    0x41bd01000000	                             mov r13d, 1	      8020	eval.c	FUNCTION_152	WHILE_1
0x400ccd4	      0xbd01000000	                              mov ebp, 1	      8020	eval.c	FUNCTION_152	WHILE_1
0x400ccd9	    0x892d00000000	            mov dword [0x0400ccdf], ebp 	      8024	eval.c	FUNCTION_152	WHILE_1
0x400ccdf	    0x41837c243000	               cmp dword [r12 + 0x30], 0	      8027	eval.c	FUNCTION_152	WHILE_1	IF_2	CALL_1
0x400cce5	           0xf94c2	                                 sete dl	      8027	eval.c	FUNCTION_152	WHILE_1	IF_2	CALL_1
0x400cce8	           0xfb6d2	                           movzx edx, dl	      8027	eval.c	FUNCTION_152	WHILE_1	IF_2	CALL_1
0x400cceb	      0x488d742410	                   lea rsi, [rsp + 0x10]	      8027	eval.c	FUNCTION_152	WHILE_1	IF_2	CALL_1
0x400ccf0	          0x4889e7	                            mov rdi, rsp	      8027	eval.c	FUNCTION_152	WHILE_1	IF_2	CALL_1
0x400ccf3	      0xe800000000	                          call 0x400ccf8	      8027	eval.c	FUNCTION_152	WHILE_1	IF_2	CALL_1
0x400ccf8	            0x85c0	                           test eax, eax	      8027	eval.c	FUNCTION_152	WHILE_1	IF_2	CALL_1
0x400ccfa	            0x7537	                           jne 0x400cd33	      8027	eval.c	FUNCTION_152	WHILE_1	IF_2	CALL_1
0x400ccfc	      0xe800000000	                          call 0x400cd01	      8034	eval.c	FUNCTION_152	WHILE_1	IF_2	IF_3	CALL_2
0x400cd01	            0x85c0	                           test eax, eax	      8034	eval.c	FUNCTION_152	WHILE_1	IF_2	IF_3	CALL_2
0x400cd03	            0x751f	                           jne 0x400cd24	      8034	eval.c	FUNCTION_152	WHILE_1	IF_2	IF_3	CALL_2
0x400cd05	      0xba05000000	                              mov edx, 5	      8035	eval.c	FUNCTION_152	WHILE_1	IF_2	CALL_4
0x400cd0a	      0xbe00000000	                              mov esi, 0	      8035	eval.c	FUNCTION_152	WHILE_1	IF_2	CALL_4
0x400cd0f	      0xbf00000000	                              mov edi, 0	      8035	eval.c	FUNCTION_152	WHILE_1	IF_2	CALL_4
0x400cd14	      0xe800000000	                          call 0x400cd19	      8035	eval.c	FUNCTION_152	WHILE_1	IF_2	CALL_4
0x400cd19	          0x4889de	                            mov rsi, rbx	      8035	eval.c	FUNCTION_152	WHILE_1	IF_2	CALL_4
0x400cd1c	          0x4889c7	                            mov rdi, rax	      8035	eval.c	FUNCTION_152	WHILE_1	IF_2	CALL_4
0x400cd1f	      0xe800000000	                          call 0x400cd24	      8035	eval.c	FUNCTION_152	WHILE_1	IF_2	CALL_4
0x400cd24	    0xc70500000000	               mov dword [0x0400cd2e], 0	      8036	eval.c	FUNCTION_152	WHILE_1	IF_2
0x400cd2e	      0xe964010000	                           jmp 0x400ce97	      8037	eval.c	FUNCTION_152	WHILE_1	IF_2
0x400cd33	    0xc70500000000	               mov dword [0x0400cd3d], 0	      8039	eval.c	FUNCTION_152	WHILE_1
0x400cd3d	    0x41837c243000	               cmp dword [r12 + 0x30], 0	      8041	eval.c	FUNCTION_152	WHILE_1	IF_4
0x400cd43	     0xf8511010000	                           jne 0x400ce5a	      8041	eval.c	FUNCTION_152	WHILE_1	IF_4
0x400cd49	          0x4585ed	                         test r13d, r13d	      8043	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_5
0x400cd4c	            0x7414	                            je 0x400cd62	      8043	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_5
0x400cd4e	    0x41837c24207f	           cmp dword [r12 + 0x20], 0x7f 	      8048	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_5	IF_6
0x400cd54	            0x7524	                           jne 0x400cd7a	      8048	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_5	IF_6
0x400cd56	      0xe800000000	                          call 0x400cd5b	      8053	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_5	IF_6	CALL_5
0x400cd5b	      0xe800000000	                          call 0x400cd60	      8054	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_5	IF_6	CALL_6
0x400cd60	            0xeb18	                           jmp 0x400cd7a	      8054	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_5	IF_6	CALL_6
0x400cd62	    0x41837c24207f	           cmp dword [r12 + 0x20], 0x7f 	      8057	eval.c	FUNCTION_152	WHILE_1	IF_4	ELSE_1	IF_7
0x400cd68	            0x7510	                           jne 0x400cd7a	      8057	eval.c	FUNCTION_152	WHILE_1	IF_4	ELSE_1	IF_7
0x400cd6a	    0x8b3500000000	            mov esi, dword [0x0400cd70] 	      8058	eval.c	FUNCTION_152	WHILE_1	IF_4	ELSE_1	IF_7
0x400cd70	      0xbf00000000	                              mov edi, 0	      8058	eval.c	FUNCTION_152	WHILE_1	IF_4	ELSE_1	IF_7
0x400cd75	      0xe800000000	                          call 0x400cd7a	      8058	eval.c	FUNCTION_152	WHILE_1	IF_4	ELSE_1	IF_7
0x400cd7a	      0xe800000000	                          call 0x400cd7f	      8059	eval.c	FUNCTION_152	WHILE_1	IF_4	CALL_9
0x400cd7f	            0x89c1	                            mov ecx, eax	      8059	eval.c	FUNCTION_152	WHILE_1	IF_4	CALL_9
0x400cd81	      0x488d542420	                   lea rdx, [rsp + 0x20]	      8059	eval.c	FUNCTION_152	WHILE_1	IF_4	CALL_9
0x400cd86	      0x488d742408	                      lea rsi, [rsp + 8]	      8059	eval.c	FUNCTION_152	WHILE_1	IF_4	CALL_9
0x400cd8b	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      8059	eval.c	FUNCTION_152	WHILE_1	IF_4	CALL_9
0x400cd90	      0xe800000000	                          call 0x400cd95	      8059	eval.c	FUNCTION_152	WHILE_1	IF_4	CALL_9
0x400cd95	          0x4889c3	                            mov rbx, rax	      8059	eval.c	FUNCTION_152	WHILE_1	IF_4	CALL_9
0x400cd98	          0x4885c0	                           test rax, rax	      8060	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8
0x400cd9b	     0xf84a9000000	                            je 0x400ce4a	      8060	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8
0x400cda1	           0xfb600	                   movzx eax, byte [rax]	      8061	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1
0x400cda4	            0x84c0	                             test al, al	      8061	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1
0x400cda6	     0xf849e000000	                            je 0x400ce4a	      8061	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1
0x400cdac	    0x8b1500000000	            mov edx, dword [0x0400cdb2] 	      8061	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1
0x400cdb2	            0x85d2	                           test edx, edx	      8061	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1
0x400cdb4	     0xf8590000000	                           jne 0x400ce4a	      8061	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1
0x400cdba	          0x8d50f7	                      lea edx, [rax - 9]	      8063	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	IF_9
0x400cdbd	          0x80fa01	                               cmp dl, 1	      8063	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	IF_9
0x400cdc0	            0x7604	                           jbe 0x400cdc6	      8063	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	IF_9
0x400cdc2	            0x3c0d	                             cmp al, 0xd	      8063	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	IF_9
0x400cdc4	            0x7525	                           jne 0x400cdeb	      8063	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	IF_9
0x400cdc6	            0x85ed	                           test ebp, ebp	      8065	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	IF_9	IF_10
0x400cdc8	            0x740e	                            je 0x400cdd8	      8065	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	IF_9	IF_10
0x400cdca	            0x3c09	                               cmp al, 9	      8065	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	IF_9	IF_10
0x400cdcc	            0x740a	                            je 0x400cdd8	      8065	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	IF_9	IF_10
0x400cdce	      0xe800000000	                          call 0x400cdd3	      8068	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	IF_9	IF_10	CALL_10
0x400cdd3	      0xbd00000000	                              mov ebp, 0	      8069	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	IF_9	IF_10
0x400cdd8	           0xfb63b	                   movzx edi, byte [rbx]	      8071	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	IF_9	CALL_11
0x400cddb	    0x8b3500000000	            mov esi, dword [0x0400cde1] 	      8071	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	IF_9	CALL_11
0x400cde1	      0xe800000000	                          call 0x400cde6	      8071	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	IF_9	CALL_11
0x400cde6	          0x4889d8	                            mov rax, rbx	      8071	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	IF_9	CALL_11
0x400cde9	            0xeb45	                           jmp 0x400ce30	      8071	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	IF_9	CALL_11
0x400cdeb	    0x833d00000000	               cmp dword [0x0400cdf2], 0	      8076	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	ELSE_2	IF_11
0x400cdf2	            0x7426	                            je 0x400ce1a	      8076	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	ELSE_2	IF_11
0x400cdf4	          0x4889df	                            mov rdi, rbx	      8078	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	ELSE_2	IF_11
0x400cdf7	    0xff1500000000	                 call qword [0x0400cdfd]	      8078	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	ELSE_2	IF_11
0x400cdfd	          0x4189c5	                           mov r13d, eax	      8078	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	ELSE_2	IF_11
0x400ce00	    0x8b1500000000	            mov edx, dword [0x0400ce06] 	      8080	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	ELSE_2	IF_11	CALL_12
0x400ce06	            0x89c6	                            mov esi, eax	      8080	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	ELSE_2	IF_11	CALL_12
0x400ce08	          0x4889df	                            mov rdi, rbx	      8080	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	ELSE_2	IF_11	CALL_12
0x400ce0b	      0xe800000000	                          call 0x400ce10	      8080	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	ELSE_2	IF_11	CALL_12
0x400ce10	          0x4d63ed	                        movsxd r13, r13d	      8081	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	ELSE_2	IF_11
0x400ce13	      0x4a8d442bff	                lea rax, [rbx + r13 - 1]	      8081	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	ELSE_2	IF_11
0x400ce18	            0xeb16	                           jmp 0x400ce30	      8081	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	ELSE_2	IF_11
0x400ce1a	    0x8b1500000000	            mov edx, dword [0x0400ce20] 	      8085	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	ELSE_2	CALL_13
0x400ce20	      0xbe01000000	                              mov esi, 1	      8085	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	ELSE_2	CALL_13
0x400ce25	          0x4889df	                            mov rdi, rbx	      8085	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	ELSE_2	CALL_13
0x400ce28	      0xe800000000	                          call 0x400ce2d	      8085	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	ELSE_2	CALL_13
0x400ce2d	          0x4889d8	                            mov rax, rbx	      8085	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	ELSE_2	CALL_13
0x400ce30	        0x488d5801	                      lea rbx, [rax + 1]	      8061	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1
0x400ce34	         0xfb64001	               movzx eax, byte [rax + 1]	      8061	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1
0x400ce38	            0x84c0	                             test al, al	      8061	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1
0x400ce3a	            0x740e	                            je 0x400ce4a	      8061	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1
0x400ce3c	    0x8b1500000000	            mov edx, dword [0x0400ce42] 	      8061	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1
0x400ce42	            0x85d2	                           test edx, edx	      8061	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1
0x400ce44	     0xf8470ffffff	                            je 0x400cdba	      8061	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1
0x400ce4a	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      8088	eval.c	FUNCTION_152	WHILE_1	IF_4	CALL_14
0x400ce4f	      0xe800000000	                          call 0x400ce54	      8088	eval.c	FUNCTION_152	WHILE_1	IF_4	CALL_14
0x400ce54	    0x41bd00000000	                             mov r13d, 0	      8088	eval.c	FUNCTION_152	WHILE_1	IF_4	CALL_14
0x400ce5a	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      8090	eval.c	FUNCTION_152	WHILE_1	CALL_15
0x400ce5f	      0xe800000000	                          call 0x400ce64	      8090	eval.c	FUNCTION_152	WHILE_1	CALL_15
0x400ce64	        0x488b3c24	                    mov rdi, qword [rsp]	      8091	eval.c	FUNCTION_152	WHILE_1	CALL_16
0x400ce68	      0xe800000000	                          call 0x400ce6d	      8091	eval.c	FUNCTION_152	WHILE_1	CALL_16
0x400ce6d	          0x4889c3	                            mov rbx, rax	      8091	eval.c	FUNCTION_152	WHILE_1	CALL_16
0x400ce70	        0x48890424	                    mov qword [rsp], rax	      8091	eval.c	FUNCTION_152	WHILE_1	CALL_16
0x400ce74	           0xfb600	                   movzx eax, byte [rax]	      8020	eval.c	FUNCTION_152	WHILE_1
0x400ce77	            0x84c0	                             test al, al	      8020	eval.c	FUNCTION_152	WHILE_1
0x400ce79	           0xf95c1	                                setne cl	      8020	eval.c	FUNCTION_152	WHILE_1
0x400ce7c	            0x3c7c	                            cmp al, 0x7c	      8020	eval.c	FUNCTION_152	WHILE_1
0x400ce7e	           0xf95c2	                                setne dl	      8020	eval.c	FUNCTION_152	WHILE_1
0x400ce81	            0x84d1	                             test cl, dl	      8020	eval.c	FUNCTION_152	WHILE_1
0x400ce83	            0x7412	                            je 0x400ce97	      8020	eval.c	FUNCTION_152	WHILE_1
0x400ce85	            0x3c0a	                             cmp al, 0xa	      8020	eval.c	FUNCTION_152	WHILE_1
0x400ce87	            0x740e	                            je 0x400ce97	      8020	eval.c	FUNCTION_152	WHILE_1
0x400ce89	    0x8b0500000000	            mov eax, dword [0x0400ce8f] 	      8020	eval.c	FUNCTION_152	WHILE_1
0x400ce8f	            0x85c0	                           test eax, eax	      8020	eval.c	FUNCTION_152	WHILE_1
0x400ce91	     0xf8442feffff	                            je 0x400ccd9	      8020	eval.c	FUNCTION_152	WHILE_1
0x400ce97	        0x488b3c24	                    mov rdi, qword [rsp]	      8093	eval.c	FUNCTION_152	CALL_17
0x400ce9b	      0xe800000000	                          call 0x400cea0	      8093	eval.c	FUNCTION_152	CALL_17
0x400cea0	      0x4989442408	                mov qword [r12 + 8], rax	      8093	eval.c	FUNCTION_152	CALL_17
0x400cea5	    0x41837c243000	               cmp dword [r12 + 0x30], 0	      8095	eval.c	FUNCTION_152	IF_12
0x400ceab	            0x7409	                            je 0x400ceb6	      8095	eval.c	FUNCTION_152	IF_12
0x400cead	    0x832d00000000	               sub dword [0x0400ceb4], 1	      8096	eval.c	FUNCTION_152	IF_12
0x400ceb4	            0xeb2f	                           jmp 0x400cee5	      8096	eval.c	FUNCTION_152	IF_12
0x400ceb6	            0x85ed	                           test ebp, ebp	      8100	eval.c	FUNCTION_152	ELSE_4	IF_13
0x400ceb8	            0x7405	                            je 0x400cebf	      8100	eval.c	FUNCTION_152	ELSE_4	IF_13
0x400ceba	      0xe800000000	                          call 0x400cebf	      8101	eval.c	FUNCTION_152	ELSE_4	CALL_18
0x400cebf	    0x41837c24207f	           cmp dword [r12 + 0x20], 0x7f 	      8102	eval.c	FUNCTION_152	ELSE_4	IF_14
0x400cec5	            0x751e	                           jne 0x400cee5	      8102	eval.c	FUNCTION_152	ELSE_4	IF_14
0x400cec7	      0xe800000000	                          call 0x400cecc	      8103	eval.c	FUNCTION_152	ELSE_4	CALL_19
0x400cecc	            0xeb17	                           jmp 0x400cee5	      8105	eval.c	FUNCTION_152
0x400cece	          0x4889df	                            mov rdi, rbx	      8093	eval.c	FUNCTION_152	CALL_17
0x400ced1	      0xe800000000	                          call 0x400ced6	      8093	eval.c	FUNCTION_152	CALL_17
0x400ced6	      0x4989442408	                mov qword [r12 + 8], rax	      8093	eval.c	FUNCTION_152	CALL_17
0x400cedb	    0x41837c243000	               cmp dword [r12 + 0x30], 0	      8095	eval.c	FUNCTION_152	IF_12
0x400cee1	            0x74d7	                            je 0x400ceba	      8095	eval.c	FUNCTION_152	IF_12
0x400cee3	            0xebc8	                           jmp 0x400cead	      8095	eval.c	FUNCTION_152	IF_12
0x400cee5	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      8105	eval.c	FUNCTION_152
0x400ceea	    0x644833042528	                xor rax, qword fs:[0x28]	      8105	eval.c	FUNCTION_152
0x400cef3	            0x7405	                            je 0x400cefa	      8105	eval.c	FUNCTION_152
0x400cef5	      0xe800000000	                          call 0x400cefa	      8105	eval.c	FUNCTION_152
0x400cefa	        0x4883c478	                           add rsp, 0x78	      8105	eval.c	FUNCTION_152
0x400cefe	              0x5b	                                 pop rbx	      8105	eval.c	FUNCTION_152
0x400ceff	              0x5d	                                 pop rbp	      8105	eval.c	FUNCTION_152
0x400cf00	            0x415c	                                 pop r12	      8105	eval.c	FUNCTION_152
0x400cf02	            0x415d	                                 pop r13	      8105	eval.c	FUNCTION_152
0x400cf04	              0xc3	                                     ret	      8105	eval.c	FUNCTION_152
fill_assert_error	FOR,0:SWITCH,0:DO,0:IF,7:functions,0:WHILE,0:CALL,17:ELSE,5	99
0x4006843	            0x4156	                                push r14	      9152	eval.c	FUNCTION_180
0x4006845	            0x4155	                                push r13	      9152	eval.c	FUNCTION_180
0x4006847	            0x4154	                                push r12	      9152	eval.c	FUNCTION_180
0x4006849	              0x55	                                push rbp	      9152	eval.c	FUNCTION_180
0x400684a	              0x53	                                push rbx	      9152	eval.c	FUNCTION_180
0x400684b	        0x4883ec60	                           sub rsp, 0x60	      9152	eval.c	FUNCTION_180
0x400684f	          0x4889fd	                            mov rbp, rdi	      9152	eval.c	FUNCTION_180
0x4006852	          0x4989d4	                            mov r12, rdx	      9152	eval.c	FUNCTION_180
0x4006855	          0x4989ce	                            mov r14, rcx	      9152	eval.c	FUNCTION_180
0x4006858	          0x4d89c5	                             mov r13, r8	      9152	eval.c	FUNCTION_180
0x400685b	          0x4489cb	                            mov ebx, r9d	      9152	eval.c	FUNCTION_180
0x400685e	    0x64488b042528	                mov rax, qword fs:[0x28]	      9152	eval.c	FUNCTION_180
0x4006867	      0x4889442458	             mov qword [rsp + 0x58], rax	      9152	eval.c	FUNCTION_180
0x400686c	            0x31c0	                            xor eax, eax	      9152	eval.c	FUNCTION_180
0x400686e	          0x833e00	                      cmp dword [rsi], 0	      9156	eval.c	FUNCTION_180	IF_1
0x4006871	            0x7439	                            je 0x40068ac	      9156	eval.c	FUNCTION_180	IF_1
0x4006873	          0x4889f7	                            mov rdi, rsi	      9156	eval.c	FUNCTION_180	IF_1
0x4006876	      0xb900000000	                              mov ecx, 0	      9158	eval.c	FUNCTION_180	IF_1	CALL_2
0x400687b	      0x488d542410	                   lea rdx, [rsp + 0x10]	      9158	eval.c	FUNCTION_180	IF_1	CALL_2
0x4006880	      0x488d742408	                      lea rsi, [rsp + 8]	      9158	eval.c	FUNCTION_180	IF_1	CALL_2
0x4006885	      0xe800000000	                          call 0x400688a	      9158	eval.c	FUNCTION_180	IF_1	CALL_2
0x400688a	          0x4889c6	                            mov rsi, rax	      9158	eval.c	FUNCTION_180	IF_1	CALL_2
0x400688d	          0x4889ef	                            mov rdi, rbp	      9158	eval.c	FUNCTION_180	IF_1	CALL_2
0x4006890	      0xe800000000	                          call 0x4006895	      9158	eval.c	FUNCTION_180	IF_1	CALL_2
0x4006895	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      9159	eval.c	FUNCTION_180	IF_1	CALL_3
0x400689a	      0xe800000000	                          call 0x400689f	      9159	eval.c	FUNCTION_180	IF_1	CALL_3
0x400689f	      0xbe00000000	                              mov esi, 0	      9160	eval.c	FUNCTION_180	IF_1	CALL_4
0x40068a4	          0x4889ef	                            mov rdi, rbp	      9160	eval.c	FUNCTION_180	IF_1	CALL_4
0x40068a7	      0xe800000000	                          call 0x40068ac	      9160	eval.c	FUNCTION_180	IF_1	CALL_4
0x40068ac	          0x8d43fe	                      lea eax, [rbx - 2]	      9163	eval.c	FUNCTION_180	IF_2
0x40068af	          0x83f801	                              cmp eax, 1	      9163	eval.c	FUNCTION_180	IF_2
0x40068b2	            0x770f	                            ja 0x40068c3	      9163	eval.c	FUNCTION_180	IF_2
0x40068b4	      0xbe00000000	                              mov esi, 0	      9164	eval.c	FUNCTION_180	CALL_5
0x40068b9	          0x4889ef	                            mov rdi, rbp	      9164	eval.c	FUNCTION_180	CALL_5
0x40068bc	      0xe800000000	                          call 0x40068c1	      9164	eval.c	FUNCTION_180	CALL_5
0x40068c1	            0xeb21	                           jmp 0x40068e4	      9164	eval.c	FUNCTION_180	CALL_5
0x40068c3	          0x83fb01	                              cmp ebx, 1	      9165	eval.c	FUNCTION_180	ELSE_1	IF_3
0x40068c6	            0x750f	                           jne 0x40068d7	      9165	eval.c	FUNCTION_180	ELSE_1	IF_3
0x40068c8	      0xbe00000000	                              mov esi, 0	      9166	eval.c	FUNCTION_180	ELSE_1	IF_3
0x40068cd	          0x4889ef	                            mov rdi, rbp	      9166	eval.c	FUNCTION_180	ELSE_1	IF_3
0x40068d0	      0xe800000000	                          call 0x40068d5	      9166	eval.c	FUNCTION_180	ELSE_1	IF_3
0x40068d5	            0xeb0d	                           jmp 0x40068e4	      9166	eval.c	FUNCTION_180	ELSE_1	IF_3
0x40068d7	      0xbe00000000	                              mov esi, 0	      9168	eval.c	FUNCTION_180	CALL_7
0x40068dc	          0x4889ef	                            mov rdi, rbp	      9168	eval.c	FUNCTION_180	CALL_7
0x40068df	      0xe800000000	                          call 0x40068e4	      9168	eval.c	FUNCTION_180	CALL_7
0x40068e4	          0x4d85e4	                           test r12, r12	      9169	eval.c	FUNCTION_180	IF_4
0x40068e7	            0x752e	                           jne 0x4006917	      9169	eval.c	FUNCTION_180	IF_4
0x40068e9	      0xb900000000	                              mov ecx, 0	      9171	eval.c	FUNCTION_180	IF_4	CALL_9
0x40068ee	      0x488d542410	                   lea rdx, [rsp + 0x10]	      9171	eval.c	FUNCTION_180	IF_4	CALL_9
0x40068f3	      0x488d742408	                      lea rsi, [rsp + 8]	      9171	eval.c	FUNCTION_180	IF_4	CALL_9
0x40068f8	          0x4c89f7	                            mov rdi, r14	      9171	eval.c	FUNCTION_180	IF_4	CALL_9
0x40068fb	      0xe800000000	                          call 0x4006900	      9171	eval.c	FUNCTION_180	IF_4	CALL_9
0x4006900	          0x4889c6	                            mov rsi, rax	      9171	eval.c	FUNCTION_180	IF_4	CALL_9
0x4006903	          0x4889ef	                            mov rdi, rbp	      9171	eval.c	FUNCTION_180	IF_4	CALL_9
0x4006906	      0xe8f49bffff	                  call sym.ga_concat_esc	      9171	eval.c	FUNCTION_180	IF_4	CALL_9
0x400690b	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      9172	eval.c	FUNCTION_180	IF_4	CALL_10
0x4006910	      0xe800000000	                          call 0x4006915	      9172	eval.c	FUNCTION_180	IF_4	CALL_10
0x4006915	            0xeb0b	                           jmp 0x4006922	      9172	eval.c	FUNCTION_180	IF_4	CALL_10
0x4006917	          0x4c89e6	                            mov rsi, r12	      9175	eval.c	FUNCTION_180	CALL_11
0x400691a	          0x4889ef	                            mov rdi, rbp	      9175	eval.c	FUNCTION_180	CALL_11
0x400691d	      0xe8dd9bffff	                  call sym.ga_concat_esc	      9175	eval.c	FUNCTION_180	CALL_11
0x4006922	          0x83fb01	                              cmp ebx, 1	      9176	eval.c	FUNCTION_180	IF_5
0x4006925	            0x7461	                            je 0x4006988	      9176	eval.c	FUNCTION_180	IF_5
0x4006927	          0x83fb02	                              cmp ebx, 2	      9178	eval.c	FUNCTION_180	IF_5	IF_6
0x400692a	            0x750f	                           jne 0x400693b	      9178	eval.c	FUNCTION_180	IF_5	IF_6
0x400692c	      0xbe00000000	                              mov esi, 0	      9179	eval.c	FUNCTION_180	IF_5	CALL_12
0x4006931	          0x4889ef	                            mov rdi, rbp	      9179	eval.c	FUNCTION_180	IF_5	CALL_12
0x4006934	      0xe800000000	                          call 0x4006939	      9179	eval.c	FUNCTION_180	IF_5	CALL_12
0x4006939	            0xeb21	                           jmp 0x400695c	      9179	eval.c	FUNCTION_180	IF_5	CALL_12
0x400693b	          0x83fb03	                              cmp ebx, 3	      9180	eval.c	FUNCTION_180	IF_5	ELSE_4	IF_7
0x400693e	            0x750f	                           jne 0x400694f	      9180	eval.c	FUNCTION_180	IF_5	ELSE_4	IF_7
0x4006940	      0xbe00000000	                              mov esi, 0	      9181	eval.c	FUNCTION_180	IF_5	ELSE_4	IF_7
0x4006945	          0x4889ef	                            mov rdi, rbp	      9181	eval.c	FUNCTION_180	IF_5	ELSE_4	IF_7
0x4006948	      0xe800000000	                          call 0x400694d	      9181	eval.c	FUNCTION_180	IF_5	ELSE_4	IF_7
0x400694d	            0xeb0d	                           jmp 0x400695c	      9181	eval.c	FUNCTION_180	IF_5	ELSE_4	IF_7
0x400694f	      0xbe00000000	                              mov esi, 0	      9183	eval.c	FUNCTION_180	IF_5	CALL_14
0x4006954	          0x4889ef	                            mov rdi, rbp	      9183	eval.c	FUNCTION_180	IF_5	CALL_14
0x4006957	      0xe800000000	                          call 0x400695c	      9183	eval.c	FUNCTION_180	IF_5	CALL_14
0x400695c	      0xb900000000	                              mov ecx, 0	      9184	eval.c	FUNCTION_180	IF_5	CALL_16
0x4006961	      0x488d542410	                   lea rdx, [rsp + 0x10]	      9184	eval.c	FUNCTION_180	IF_5	CALL_16
0x4006966	      0x488d742408	                      lea rsi, [rsp + 8]	      9184	eval.c	FUNCTION_180	IF_5	CALL_16
0x400696b	          0x4c89ef	                            mov rdi, r13	      9184	eval.c	FUNCTION_180	IF_5	CALL_16
0x400696e	      0xe800000000	                          call 0x4006973	      9184	eval.c	FUNCTION_180	IF_5	CALL_16
0x4006973	          0x4889c6	                            mov rsi, rax	      9184	eval.c	FUNCTION_180	IF_5	CALL_16
0x4006976	          0x4889ef	                            mov rdi, rbp	      9184	eval.c	FUNCTION_180	IF_5	CALL_16
0x4006979	      0xe8819bffff	                  call sym.ga_concat_esc	      9184	eval.c	FUNCTION_180	IF_5	CALL_16
0x400697e	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      9185	eval.c	FUNCTION_180	IF_5	CALL_17
0x4006983	      0xe800000000	                          call 0x4006988	      9185	eval.c	FUNCTION_180	IF_5	CALL_17
0x4006988	      0x488b442458	            mov rax, qword [rsp + 0x58] 	      9187	eval.c	FUNCTION_180
0x400698d	    0x644833042528	                xor rax, qword fs:[0x28]	      9187	eval.c	FUNCTION_180
0x4006996	            0x7405	                            je 0x400699d	      9187	eval.c	FUNCTION_180
0x4006998	      0xe800000000	                          call 0x400699d	      9187	eval.c	FUNCTION_180
0x400699d	        0x4883c460	                           add rsp, 0x60	      9187	eval.c	FUNCTION_180
0x40069a1	              0x5b	                                 pop rbx	      9187	eval.c	FUNCTION_180
0x40069a2	              0x5d	                                 pop rbp	      9187	eval.c	FUNCTION_180
0x40069a3	            0x415c	                                 pop r12	      9187	eval.c	FUNCTION_180
0x40069a5	            0x415d	                                 pop r13	      9187	eval.c	FUNCTION_180
0x40069a7	            0x415e	                                 pop r14	      9187	eval.c	FUNCTION_180
0x40069a9	              0xc3	                                     ret	      9187	eval.c	FUNCTION_180
pattern_match	FOR,0:SWITCH,0:DO,0:IF,1:functions,0:WHILE,0:CALL,3:ELSE,0	38
0x400063c	            0x4155	                                push r13	      3220	eval.c	FUNCTION_62
0x400063e	            0x4154	                                push r12	      3220	eval.c	FUNCTION_62
0x4000640	              0x55	                                push rbp	      3220	eval.c	FUNCTION_62
0x4000641	              0x53	                                push rbx	      3220	eval.c	FUNCTION_62
0x4000642	    0x4881ecc80000	                           sub rsp, 0xc8	      3220	eval.c	FUNCTION_62
0x4000649	          0x4989f4	                            mov r12, rsi	      3220	eval.c	FUNCTION_62
0x400064c	          0x4189d5	                           mov r13d, edx	      3220	eval.c	FUNCTION_62
0x400064f	    0x64488b042528	                mov rax, qword fs:[0x28]	      3220	eval.c	FUNCTION_62
0x4000658	    0x48898424b800	             mov qword [rsp + 0xb8], rax	      3220	eval.c	FUNCTION_62
0x4000660	            0x31c0	                            xor eax, eax	      3220	eval.c	FUNCTION_62
0x4000662	    0x488b2d000000	            mov rbp, qword [0x04000669] 	      3226	eval.c	FUNCTION_62
0x4000669	    0x48c705000000	               mov qword [0x04000674], 0	      3227	eval.c	FUNCTION_62
0x4000674	      0xbe03000000	                              mov esi, 3	      3228	eval.c	FUNCTION_62	CALL_1
0x4000679	      0xe800000000	                          call 0x400067e	      3228	eval.c	FUNCTION_62	CALL_1
0x400067e	        0x48890424	                    mov qword [rsp], rax	      3228	eval.c	FUNCTION_62	CALL_1
0x4000682	      0xbb00000000	                              mov ebx, 0	      3221	eval.c	FUNCTION_62
0x4000687	          0x4885c0	                           test rax, rax	      3229	eval.c	FUNCTION_62	IF_1
0x400068a	            0x7423	                            je 0x40006af	      3229	eval.c	FUNCTION_62	IF_1
0x400068c	    0x4489ac24a800	            mov dword [rsp + 0xa8], r13d	      3231	eval.c	FUNCTION_62	IF_1
0x4000694	      0xba00000000	                              mov edx, 0	      3232	eval.c	FUNCTION_62	IF_1	CALL_2
0x4000699	          0x4c89e6	                            mov rsi, r12	      3232	eval.c	FUNCTION_62	IF_1	CALL_2
0x400069c	          0x4889e7	                            mov rdi, rsp	      3232	eval.c	FUNCTION_62	IF_1	CALL_2
0x400069f	      0xe800000000	                          call 0x40006a4	      3232	eval.c	FUNCTION_62	IF_1	CALL_2
0x40006a4	            0x89c3	                            mov ebx, eax	      3232	eval.c	FUNCTION_62	IF_1	CALL_2
0x40006a6	        0x488b3c24	                    mov rdi, qword [rsp]	      3233	eval.c	FUNCTION_62	IF_1	CALL_3
0x40006aa	      0xe800000000	                          call 0x40006af	      3233	eval.c	FUNCTION_62	IF_1	CALL_3
0x40006af	    0x48892d000000	            mov qword [0x040006b6], rbp 	      3235	eval.c	FUNCTION_62
0x40006b6	            0x89d8	                            mov eax, ebx	      3237	eval.c	FUNCTION_62
0x40006b8	    0x488b8c24b800	            mov rcx, qword [rsp + 0xb8] 	      3237	eval.c	FUNCTION_62
0x40006c0	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3237	eval.c	FUNCTION_62
0x40006c9	            0x7405	                            je 0x40006d0	      3237	eval.c	FUNCTION_62
0x40006cb	      0xe800000000	                          call 0x40006d0	      3237	eval.c	FUNCTION_62
0x40006d0	    0x4881c4c80000	                           add rsp, 0xc8	      3237	eval.c	FUNCTION_62
0x40006d7	              0x5b	                                 pop rbx	      3237	eval.c	FUNCTION_62
0x40006d8	              0x5d	                                 pop rbp	      3237	eval.c	FUNCTION_62
0x40006d9	            0x415c	                                 pop r12	      3237	eval.c	FUNCTION_62
0x40006db	            0x415d	                                 pop r13	      3237	eval.c	FUNCTION_62
0x40006dd	              0xc3	                                     ret	      3237	eval.c	FUNCTION_62
set_ref_in_ht	FOR,2:SWITCH,0:DO,0:IF,3:functions,0:WHILE,0:CALL,4:ELSE,0	62
0x400126e	            0x4156	                                push r14	      5267	eval.c	FUNCTION_83
0x4001270	            0x4155	                                push r13	      5267	eval.c	FUNCTION_83
0x4001272	            0x4154	                                push r12	      5267	eval.c	FUNCTION_83
0x4001274	              0x55	                                push rbp	      5267	eval.c	FUNCTION_83
0x4001275	              0x53	                                push rbx	      5267	eval.c	FUNCTION_83
0x4001276	        0x4883ec10	                           sub rsp, 0x10	      5267	eval.c	FUNCTION_83
0x400127a	          0x4889fb	                            mov rbx, rdi	      5267	eval.c	FUNCTION_83
0x400127d	          0x4189f5	                           mov r13d, esi	      5267	eval.c	FUNCTION_83
0x4001280	          0x4989d4	                            mov r12, rdx	      5267	eval.c	FUNCTION_83
0x4001283	    0x64488b042528	                mov rax, qword fs:[0x28]	      5267	eval.c	FUNCTION_83
0x400128c	      0x4889442408	                mov qword [rsp + 8], rax	      5267	eval.c	FUNCTION_83
0x4001291	            0x31c0	                            xor eax, eax	      5267	eval.c	FUNCTION_83
0x4001293	    0x48c704240000	                      mov qword [rsp], 0	      5272	eval.c	FUNCTION_83
0x400129b	    0x41be00000000	                             mov r14d, 0	      5269	eval.c	FUNCTION_83
0x40012a1	          0x4585f6	                         test r14d, r14d	      5278	eval.c	FUNCTION_83	FOR_1	IF_1
0x40012a4	            0x7554	                           jne 0x40012fa	      5278	eval.c	FUNCTION_83	FOR_1	IF_1
0x40012a6	        0x488b4308	                mov rax, qword [rbx + 8]	      5283	eval.c	FUNCTION_83	FOR_1	IF_1
0x40012aa	            0x89c5	                            mov ebp, eax	      5283	eval.c	FUNCTION_83	FOR_1	IF_1
0x40012ac	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      5284	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2
0x40012b0	            0x85c0	                           test eax, eax	      5284	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2
0x40012b2	            0x7e46	                           jle 0x40012fa	      5284	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2
0x40012b4	        0x488b7b08	                mov rdi, qword [rbx + 8]	      5285	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2	IF_2	CALL_1
0x40012b8	    0x4881ff000000	                              cmp rdi, 0	      5285	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2	IF_2	CALL_1
0x40012bf	            0x7431	                            je 0x40012f2	      5285	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2	IF_2	CALL_1
0x40012c1	          0x4885ff	                           test rdi, rdi	      5285	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2	IF_2	CALL_1
0x40012c4	            0x742c	                            je 0x40012f2	      5285	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2	IF_2	CALL_1
0x40012c6	          0x83ed01	                              sub ebp, 1	      5287	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2	IF_2
0x40012c9	          0x4585f6	                         test r14d, r14d	      5288	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2	IF_2	CALL_3
0x40012cc	            0x751e	                           jne 0x40012ec	      5288	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2	IF_2	CALL_3
0x40012ce	        0x4883ef11	                           sub rdi, 0x11	      5288	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2	IF_2	CALL_3
0x40012d2	          0x4c89e1	                            mov rcx, r12	      5288	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2	IF_2	CALL_3
0x40012d5	          0x4889e2	                            mov rdx, rsp	      5288	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2	IF_2	CALL_3
0x40012d8	          0x4489ee	                           mov esi, r13d	      5288	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2	IF_2	CALL_3
0x40012db	      0xe800000000	                          call 0x40012e0	      5288	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2	IF_2	CALL_3
0x40012e0	            0x85c0	                           test eax, eax	      5288	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2	IF_2	CALL_3
0x40012e2	        0x410f95c6	                              setne r14b	      5288	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2	IF_2	CALL_3
0x40012e6	        0x450fb6f6	                        movzx r14d, r14b	      5288	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2	IF_2	CALL_3
0x40012ea	            0xeb06	                           jmp 0x40012f2	      5288	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2	IF_2	CALL_3
0x40012ec	    0x41be01000000	                             mov r14d, 1	      5288	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2	IF_2	CALL_3
0x40012f2	        0x4883c310	                           add rbx, 0x10	      5284	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2
0x40012f6	            0x85ed	                           test ebp, ebp	      5284	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2
0x40012f8	            0x7fba	                            jg 0x40012b4	      5284	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2
0x40012fa	        0x488b3c24	                    mov rdi, qword [rsp]	      5293	eval.c	FUNCTION_83	FOR_1	IF_3
0x40012fe	          0x4885ff	                           test rdi, rdi	      5293	eval.c	FUNCTION_83	FOR_1	IF_3
0x4001301	            0x7412	                            je 0x4001315	      5293	eval.c	FUNCTION_83	FOR_1	IF_3
0x4001303	          0x488b1f	                    mov rbx, qword [rdi]	      5297	eval.c	FUNCTION_83	FOR_1
0x4001306	        0x488b4708	                mov rax, qword [rdi + 8]	      5299	eval.c	FUNCTION_83	FOR_1
0x400130a	        0x48890424	                    mov qword [rsp], rax	      5299	eval.c	FUNCTION_83	FOR_1
0x400130e	      0xe800000000	                          call 0x4001313	      5300	eval.c	FUNCTION_83	FOR_1	CALL_4
0x4001313	            0xeb8c	                           jmp 0x40012a1	      5301	eval.c	FUNCTION_83	FOR_1
0x4001315	          0x4489f0	                           mov eax, r14d	      5304	eval.c	FUNCTION_83
0x4001318	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      5304	eval.c	FUNCTION_83
0x400131d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      5304	eval.c	FUNCTION_83
0x4001326	            0x7405	                            je 0x400132d	      5304	eval.c	FUNCTION_83
0x4001328	      0xe800000000	                          call 0x400132d	      5304	eval.c	FUNCTION_83
0x400132d	        0x4883c410	                           add rsp, 0x10	      5304	eval.c	FUNCTION_83
0x4001331	              0x5b	                                 pop rbx	      5304	eval.c	FUNCTION_83
0x4001332	              0x5d	                                 pop rbp	      5304	eval.c	FUNCTION_83
0x4001333	            0x415c	                                 pop r12	      5304	eval.c	FUNCTION_83
0x4001335	            0x415d	                                 pop r13	      5304	eval.c	FUNCTION_83
0x4001337	            0x415e	                                 pop r14	      5304	eval.c	FUNCTION_83
0x4001339	              0xc3	                                     ret	      5304	eval.c	FUNCTION_83
eval1	FOR,0:SWITCH,0:DO,0:IF,11:functions,0:WHILE,0:CALL,11:ELSE,0	164
0x4007855	            0x4157	                                push r15	      3296	eval.c	FUNCTION_64
0x4007857	            0x4156	                                push r14	      3296	eval.c	FUNCTION_64
0x4007859	            0x4155	                                push r13	      3296	eval.c	FUNCTION_64
0x400785b	            0x4154	                                push r12	      3296	eval.c	FUNCTION_64
0x400785d	              0x55	                                push rbp	      3296	eval.c	FUNCTION_64
0x400785e	              0x53	                                push rbx	      3296	eval.c	FUNCTION_64
0x400785f	        0x4883ec38	                           sub rsp, 0x38	      3296	eval.c	FUNCTION_64
0x4007863	          0x4889fd	                            mov rbp, rdi	      3296	eval.c	FUNCTION_64
0x4007866	          0x4989f5	                            mov r13, rsi	      3296	eval.c	FUNCTION_64
0x4007869	          0x4189d6	                           mov r14d, edx	      3296	eval.c	FUNCTION_64
0x400786c	    0x64488b042528	                mov rax, qword fs:[0x28]	      3296	eval.c	FUNCTION_64
0x4007875	      0x4889442428	             mov qword [rsp + 0x28], rax	      3296	eval.c	FUNCTION_64
0x400787a	            0x31c0	                            xor eax, eax	      3296	eval.c	FUNCTION_64
0x400787c	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      3370	eval.c	FUNCTION_65
0x4007884	      0xe87ffeffff	                          call sym.eval3	      3375	eval.c	FUNCTION_65	IF_1	CALL_1
0x4007889	            0x85c0	                           test eax, eax	      3375	eval.c	FUNCTION_65	IF_1	CALL_1
0x400788b	     0xf8417020000	                            je 0x4007aa8	      3375	eval.c	FUNCTION_65	IF_1	CALL_1
0x4007891	    0x41bf01000000	                             mov r15d, 1	      3375	eval.c	FUNCTION_65	IF_1	CALL_1
0x4007897	    0x41bc00000000	                             mov r12d, 0	      3375	eval.c	FUNCTION_65	IF_1	CALL_1
0x400789d	      0xe9b7000000	                           jmp 0x4007959	      3375	eval.c	FUNCTION_65	IF_1	CALL_1
0x40078a2	          0x4585f6	                         test r14d, r14d	      3385	eval.c	FUNCTION_65	WHILE_1	IF_2
0x40078a5	           0xf95c3	                                setne bl	      3385	eval.c	FUNCTION_65	WHILE_1	IF_2
0x40078a8	          0x4585ff	                         test r15d, r15d	      3385	eval.c	FUNCTION_65	WHILE_1	IF_2
0x40078ab	            0x7436	                            je 0x40078e3	      3385	eval.c	FUNCTION_65	WHILE_1	IF_2
0x40078ad	            0x84db	                             test bl, bl	      3385	eval.c	FUNCTION_65	WHILE_1	IF_2
0x40078af	            0x7432	                            je 0x40078e3	      3385	eval.c	FUNCTION_65	WHILE_1	IF_2
0x40078b1	      0x488d74240c	                    lea rsi, [rsp + 0xc]	      3387	eval.c	FUNCTION_65	WHILE_1	IF_2	IF_3	CALL_2
0x40078b6	          0x4c89ef	                            mov rdi, r13	      3387	eval.c	FUNCTION_65	WHILE_1	IF_2	IF_3	CALL_2
0x40078b9	      0xe800000000	                          call 0x40078be	      3387	eval.c	FUNCTION_65	WHILE_1	IF_2	IF_3	CALL_2
0x40078be	          0x4885c0	                           test rax, rax	      3388	eval.c	FUNCTION_65	WHILE_1	IF_2	IF_3
0x40078c1	      0xb801000000	                              mov eax, 1	      3388	eval.c	FUNCTION_65	WHILE_1	IF_2	IF_3
0x40078c6	        0x4c0f45e0	                         cmovne r12, rax	      3388	eval.c	FUNCTION_65	WHILE_1	IF_2	IF_3
0x40078ca	          0x4c89ef	                            mov rdi, r13	      3389	eval.c	FUNCTION_65	WHILE_1	IF_2	CALL_3
0x40078cd	      0xe800000000	                          call 0x40078d2	      3389	eval.c	FUNCTION_65	WHILE_1	IF_2	CALL_3
0x40078d2	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      3390	eval.c	FUNCTION_65	WHILE_1	IF_2	IF_4
0x40078d7	     0xf85cb010000	                           jne 0x4007aa8	      3390	eval.c	FUNCTION_65	WHILE_1	IF_2	IF_4
0x40078dd	    0x41bf00000000	                             mov r15d, 0	      3392	eval.c	FUNCTION_65	WHILE_1	IF_2
0x40078e3	        0x488b4500	                    mov rax, qword [rbp]	      3398	eval.c	FUNCTION_65	WHILE_1	CALL_4
0x40078e7	        0x488d7802	                      lea rdi, [rax + 2]	      3398	eval.c	FUNCTION_65	WHILE_1	CALL_4
0x40078eb	      0xe800000000	                          call 0x40078f0	      3398	eval.c	FUNCTION_65	WHILE_1	CALL_4
0x40078f0	        0x48894500	                    mov qword [rbp], rax	      3398	eval.c	FUNCTION_65	WHILE_1	CALL_4
0x40078f4	          0x4d85e4	                           test r12, r12	      3399	eval.c	FUNCTION_65	WHILE_1	IF_5	CALL_5
0x40078f7	           0xf94c0	                                 sete al	      3399	eval.c	FUNCTION_65	WHILE_1	IF_5	CALL_5
0x40078fa	            0x21c3	                            and ebx, eax	      3399	eval.c	FUNCTION_65	WHILE_1	IF_5	CALL_5
0x40078fc	           0xfb6d3	                           movzx edx, bl	      3399	eval.c	FUNCTION_65	WHILE_1	IF_5	CALL_5
0x40078ff	      0x488d742410	                   lea rsi, [rsp + 0x10]	      3399	eval.c	FUNCTION_65	WHILE_1	IF_5	CALL_5
0x4007904	          0x4889ef	                            mov rdi, rbp	      3399	eval.c	FUNCTION_65	WHILE_1	IF_5	CALL_5
0x4007907	      0xe8fcfdffff	                          call sym.eval3	      3399	eval.c	FUNCTION_65	WHILE_1	IF_5	CALL_5
0x400790c	            0x85c0	                           test eax, eax	      3399	eval.c	FUNCTION_65	WHILE_1	IF_5	CALL_5
0x400790e	     0xf8494010000	                            je 0x4007aa8	      3399	eval.c	FUNCTION_65	WHILE_1	IF_5	CALL_5
0x4007914	            0x84db	                             test bl, bl	      3405	eval.c	FUNCTION_65	WHILE_1	IF_6
0x4007916	            0x7430	                            je 0x4007948	      3405	eval.c	FUNCTION_65	WHILE_1	IF_6
0x4007918	      0x488d74240c	                    lea rsi, [rsp + 0xc]	      3407	eval.c	FUNCTION_65	WHILE_1	IF_6	IF_7	CALL_6
0x400791d	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      3407	eval.c	FUNCTION_65	WHILE_1	IF_6	IF_7	CALL_6
0x4007922	      0xe800000000	                          call 0x4007927	      3407	eval.c	FUNCTION_65	WHILE_1	IF_6	IF_7	CALL_6
0x4007927	          0x4885c0	                           test rax, rax	      3408	eval.c	FUNCTION_65	WHILE_1	IF_6	IF_7
0x400792a	      0xb801000000	                              mov eax, 1	      3408	eval.c	FUNCTION_65	WHILE_1	IF_6	IF_7
0x400792f	        0x4c0f45e0	                         cmovne r12, rax	      3408	eval.c	FUNCTION_65	WHILE_1	IF_6	IF_7
0x4007933	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      3409	eval.c	FUNCTION_65	WHILE_1	IF_6	CALL_7
0x4007938	      0xe800000000	                          call 0x400793d	      3409	eval.c	FUNCTION_65	WHILE_1	IF_6	CALL_7
0x400793d	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      3410	eval.c	FUNCTION_65	WHILE_1	IF_6	IF_8
0x4007942	     0xf8560010000	                           jne 0x4007aa8	      3410	eval.c	FUNCTION_65	WHILE_1	IF_6	IF_8
0x4007948	          0x4585f6	                         test r14d, r14d	      3413	eval.c	FUNCTION_65	WHILE_1	IF_9
0x400794b	            0x740c	                            je 0x4007959	      3413	eval.c	FUNCTION_65	WHILE_1	IF_9
0x400794d	    0x41c745000100	                      mov dword [r13], 1	      3415	eval.c	FUNCTION_65	WHILE_1	IF_9
0x4007955	        0x4d896508	                mov qword [r13 + 8], r12	      3416	eval.c	FUNCTION_65	WHILE_1	IF_9
0x4007959	        0x488b4500	                    mov rax, qword [rbp]	      3383	eval.c	FUNCTION_65	WHILE_1
0x400795d	          0x80387c	                    cmp byte [rax], 0x7c	      3383	eval.c	FUNCTION_65	WHILE_1
0x4007960	     0xf8533010000	                           jne 0x4007a99	      3383	eval.c	FUNCTION_65	WHILE_1
0x4007966	        0x8078017c	                cmp byte [rax + 1], 0x7c	      3383	eval.c	FUNCTION_65	WHILE_1
0x400796a	     0xf8432ffffff	                            je 0x40078a2	      3383	eval.c	FUNCTION_65	WHILE_1
0x4007970	      0xe924010000	                           jmp 0x4007a99	      3383	eval.c	FUNCTION_65	WHILE_1
0x4007975	          0x4585f6	                         test r14d, r14d	      3309	eval.c	FUNCTION_64	IF_2	IF_3
0x4007978	            0x743d	                            je 0x40079b7	      3309	eval.c	FUNCTION_64	IF_2	IF_3
0x400797a	    0xc74424100000	               mov dword [rsp + 0x10], 0	      3311	eval.c	FUNCTION_64	IF_2	IF_3
0x4007982	      0x488d742410	                   lea rsi, [rsp + 0x10]	      3313	eval.c	FUNCTION_64	IF_2	IF_3	IF_4	CALL_2
0x4007987	          0x4c89ef	                            mov rdi, r13	      3313	eval.c	FUNCTION_64	IF_2	IF_3	IF_4	CALL_2
0x400798a	      0xe800000000	                          call 0x400798f	      3313	eval.c	FUNCTION_64	IF_2	IF_3	IF_4	CALL_2
0x400798f	          0x4889c3	                            mov rbx, rax	      3313	eval.c	FUNCTION_64	IF_2	IF_3	IF_4	CALL_2
0x4007992	          0x4c89ef	                            mov rdi, r13	      3315	eval.c	FUNCTION_64	IF_2	IF_3	CALL_3
0x4007995	      0xe800000000	                          call 0x400799a	      3315	eval.c	FUNCTION_64	IF_2	IF_3	CALL_3
0x400799a	          0x4885db	                           test rbx, rbx	      3308	eval.c	FUNCTION_64	IF_2
0x400799d	        0x410f95c4	                              setne r12b	      3308	eval.c	FUNCTION_64	IF_2
0x40079a1	        0x450fb6e4	                        movzx r12d, r12b	      3308	eval.c	FUNCTION_64	IF_2
0x40079a5	      0xbb00000000	                              mov ebx, 0	      3317	eval.c	FUNCTION_64	IF_2	IF_3	IF_5
0x40079aa	      0x837c241000	               cmp dword [rsp + 0x10], 0	      3316	eval.c	FUNCTION_64	IF_2	IF_3	IF_5
0x40079af	     0xf85d0000000	                           jne 0x4007a85	      3316	eval.c	FUNCTION_64	IF_2	IF_3	IF_5
0x40079b5	            0xeb06	                           jmp 0x40079bd	      3316	eval.c	FUNCTION_64	IF_2	IF_3	IF_5
0x40079b7	    0x41bc00000000	                             mov r12d, 0	      3308	eval.c	FUNCTION_64	IF_2
0x40079bd	        0x488b4500	                    mov rax, qword [rbp]	      3323	eval.c	FUNCTION_64	IF_2	CALL_4
0x40079c1	        0x488d7801	                      lea rdi, [rax + 1]	      3323	eval.c	FUNCTION_64	IF_2	CALL_4
0x40079c5	      0xe800000000	                          call 0x40079ca	      3323	eval.c	FUNCTION_64	IF_2	CALL_4
0x40079ca	        0x48894500	                    mov qword [rbp], rax	      3323	eval.c	FUNCTION_64	IF_2	CALL_4
0x40079ce	          0x4585f6	                         test r14d, r14d	      3324	eval.c	FUNCTION_64	IF_2	IF_6	CALL_5
0x40079d1	        0x410f95c6	                              setne r14b	      3324	eval.c	FUNCTION_64	IF_2	IF_6	CALL_5
0x40079d5	          0x4589f7	                          mov r15d, r14d	      3324	eval.c	FUNCTION_64	IF_2	IF_6	CALL_5
0x40079d8	          0x4521e7	                          and r15d, r12d	      3324	eval.c	FUNCTION_64	IF_2	IF_6	CALL_5
0x40079db	        0x410fb6d7	                         movzx edx, r15b	      3324	eval.c	FUNCTION_64	IF_2	IF_6	CALL_5
0x40079df	          0x4c89ee	                            mov rsi, r13	      3324	eval.c	FUNCTION_64	IF_2	IF_6	CALL_5
0x40079e2	          0x4889ef	                            mov rdi, rbp	      3324	eval.c	FUNCTION_64	IF_2	IF_6	CALL_5
0x40079e5	      0xe800000000	                          call 0x40079ea	      3324	eval.c	FUNCTION_64	IF_2	IF_6	CALL_5
0x40079ea	            0x89c3	                            mov ebx, eax	      3324	eval.c	FUNCTION_64	IF_2	IF_6	CALL_5
0x40079ec	            0x85c0	                           test eax, eax	      3324	eval.c	FUNCTION_64	IF_2	IF_6	CALL_5
0x40079ee	     0xf8491000000	                            je 0x4007a85	      3324	eval.c	FUNCTION_64	IF_2	IF_6	CALL_5
0x40079f4	        0x488b4500	                    mov rax, qword [rbp]	      3330	eval.c	FUNCTION_64	IF_2	IF_7
0x40079f8	          0x80383a	                    cmp byte [rax], 0x3a	      3330	eval.c	FUNCTION_64	IF_2	IF_7
0x40079fb	            0x7430	                            je 0x4007a2d	      3330	eval.c	FUNCTION_64	IF_2	IF_7
0x40079fd	      0xba05000000	                              mov edx, 5	      3332	eval.c	FUNCTION_64	IF_2	IF_7	CALL_7
0x4007a02	      0xbe00000000	                              mov esi, 0	      3332	eval.c	FUNCTION_64	IF_2	IF_7	CALL_7
0x4007a07	      0xbf00000000	                              mov edi, 0	      3332	eval.c	FUNCTION_64	IF_2	IF_7	CALL_7
0x4007a0c	      0xe800000000	                          call 0x4007a11	      3332	eval.c	FUNCTION_64	IF_2	IF_7	CALL_7
0x4007a11	          0x4889c7	                            mov rdi, rax	      3332	eval.c	FUNCTION_64	IF_2	IF_7	CALL_7
0x4007a14	      0xe800000000	                          call 0x4007a19	      3332	eval.c	FUNCTION_64	IF_2	IF_7	CALL_7
0x4007a19	      0xbb00000000	                              mov ebx, 0	      3335	eval.c	FUNCTION_64	IF_2	IF_7
0x4007a1e	          0x4584ff	                         test r15b, r15b	      3333	eval.c	FUNCTION_64	IF_2	IF_7	IF_8
0x4007a21	            0x7462	                            je 0x4007a85	      3333	eval.c	FUNCTION_64	IF_2	IF_7	IF_8
0x4007a23	          0x4c89ef	                            mov rdi, r13	      3334	eval.c	FUNCTION_64	IF_2	IF_7	CALL_8
0x4007a26	      0xe800000000	                          call 0x4007a2b	      3334	eval.c	FUNCTION_64	IF_2	IF_7	CALL_8
0x4007a2b	            0xeb58	                           jmp 0x4007a85	      3334	eval.c	FUNCTION_64	IF_2	IF_7	CALL_8
0x4007a2d	        0x488d7801	                      lea rdi, [rax + 1]	      3341	eval.c	FUNCTION_64	IF_2	CALL_9
0x4007a31	      0xe800000000	                          call 0x4007a36	      3341	eval.c	FUNCTION_64	IF_2	CALL_9
0x4007a36	        0x48894500	                    mov qword [rbp], rax	      3341	eval.c	FUNCTION_64	IF_2	CALL_9
0x4007a3a	          0x4585e4	                         test r12d, r12d	      3342	eval.c	FUNCTION_64	IF_2	IF_9	CALL_10
0x4007a3d	           0xf94c0	                                 sete al	      3342	eval.c	FUNCTION_64	IF_2	IF_9	CALL_10
0x4007a40	          0x4121c6	                           and r14d, eax	      3342	eval.c	FUNCTION_64	IF_2	IF_9	CALL_10
0x4007a43	        0x410fb6d6	                         movzx edx, r14b	      3342	eval.c	FUNCTION_64	IF_2	IF_9	CALL_10
0x4007a47	      0x488d742410	                   lea rsi, [rsp + 0x10]	      3342	eval.c	FUNCTION_64	IF_2	IF_9	CALL_10
0x4007a4c	          0x4889ef	                            mov rdi, rbp	      3342	eval.c	FUNCTION_64	IF_2	IF_9	CALL_10
0x4007a4f	      0xe800000000	                          call 0x4007a54	      3342	eval.c	FUNCTION_64	IF_2	IF_9	CALL_10
0x4007a54	            0x89c3	                            mov ebx, eax	      3342	eval.c	FUNCTION_64	IF_2	IF_9	CALL_10
0x4007a56	            0x85c0	                           test eax, eax	      3342	eval.c	FUNCTION_64	IF_2	IF_9	CALL_10
0x4007a58	            0x750f	                           jne 0x4007a69	      3342	eval.c	FUNCTION_64	IF_2	IF_9	CALL_10
0x4007a5a	          0x4584ff	                         test r15b, r15b	      3344	eval.c	FUNCTION_64	IF_2	IF_9	IF_10
0x4007a5d	            0x7426	                            je 0x4007a85	      3344	eval.c	FUNCTION_64	IF_2	IF_9	IF_10
0x4007a5f	          0x4c89ef	                            mov rdi, r13	      3345	eval.c	FUNCTION_64	IF_2	IF_9	CALL_11
0x4007a62	      0xe800000000	                          call 0x4007a67	      3345	eval.c	FUNCTION_64	IF_2	IF_9	CALL_11
0x4007a67	            0xeb1c	                           jmp 0x4007a85	      3345	eval.c	FUNCTION_64	IF_2	IF_9	CALL_11
0x4007a69	      0xbb01000000	                              mov ebx, 1	      3352	eval.c	FUNCTION_64
0x4007a6e	          0x4584f6	                         test r14b, r14b	      3348	eval.c	FUNCTION_64	IF_2	IF_11
0x4007a71	            0x7412	                            je 0x4007a85	      3348	eval.c	FUNCTION_64	IF_2	IF_11
0x4007a73	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      3349	eval.c	FUNCTION_64	IF_2	IF_11
0x4007a78	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      3349	eval.c	FUNCTION_64	IF_2	IF_11
0x4007a7d	        0x49894500	                    mov qword [r13], rax	      3349	eval.c	FUNCTION_64	IF_2	IF_11
0x4007a81	        0x49895508	                mov qword [r13 + 8], rdx	      3349	eval.c	FUNCTION_64	IF_2	IF_11
0x4007a85	            0x89d8	                            mov eax, ebx	      3353	eval.c	FUNCTION_64
0x4007a87	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      3353	eval.c	FUNCTION_64
0x4007a8c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3353	eval.c	FUNCTION_64
0x4007a95	            0x741d	                            je 0x4007ab4	      3353	eval.c	FUNCTION_64
0x4007a97	            0xeb16	                           jmp 0x4007aaf	      3353	eval.c	FUNCTION_64
0x4007a99	      0xbb01000000	                              mov ebx, 1	      3352	eval.c	FUNCTION_64
0x4007a9e	          0x80383f	                    cmp byte [rax], 0x3f	      3306	eval.c	FUNCTION_64	IF_2
0x4007aa1	            0x75e2	                           jne 0x4007a85	      3306	eval.c	FUNCTION_64	IF_2
0x4007aa3	      0xe9cdfeffff	                           jmp 0x4007975	      3306	eval.c	FUNCTION_64	IF_2
0x4007aa8	      0xbb00000000	                              mov ebx, 0	      3304	eval.c	FUNCTION_64	IF_1
0x4007aad	            0xebd6	                           jmp 0x4007a85	      3304	eval.c	FUNCTION_64	IF_1
0x4007aaf	      0xe800000000	                          call 0x4007ab4	      3353	eval.c	FUNCTION_64
0x4007ab4	        0x4883c438	                           add rsp, 0x38	      3353	eval.c	FUNCTION_64
0x4007ab8	              0x5b	                                 pop rbx	      3353	eval.c	FUNCTION_64
0x4007ab9	              0x5d	                                 pop rbp	      3353	eval.c	FUNCTION_64
0x4007aba	            0x415c	                                 pop r12	      3353	eval.c	FUNCTION_64
0x4007abc	            0x415d	                                 pop r13	      3353	eval.c	FUNCTION_64
0x4007abe	            0x415e	                                 pop r14	      3353	eval.c	FUNCTION_64
0x4007ac0	            0x415f	                                 pop r15	      3353	eval.c	FUNCTION_64
0x4007ac2	              0xc3	                                     ret	      3353	eval.c	FUNCTION_64
eval_spell_expr	FOR,0:SWITCH,0:DO,0:IF,4:functions,0:WHILE,0:CALL,5:ELSE,1	44
0x4007ed5	              0x53	                                push rbx	       943	eval.c	FUNCTION_23
0x4007ed6	        0x4883ec40	                           sub rsp, 0x40	       943	eval.c	FUNCTION_23
0x4007eda	          0x4889fb	                            mov rbx, rdi	       943	eval.c	FUNCTION_23
0x4007edd	    0x64488b042528	                mov rax, qword fs:[0x28]	       943	eval.c	FUNCTION_23
0x4007ee6	      0x4889442438	             mov qword [rsp + 0x38], rax	       943	eval.c	FUNCTION_23
0x4007eeb	            0x31c0	                            xor eax, eax	       943	eval.c	FUNCTION_23
0x4007eed	          0x4889f7	                            mov rdi, rsi	       947	eval.c	FUNCTION_23	CALL_1
0x4007ef0	      0xe800000000	                          call 0x4007ef5	       947	eval.c	FUNCTION_23	CALL_1
0x4007ef5	      0x4889442408	                mov qword [rsp + 8], rax	       947	eval.c	FUNCTION_23	CALL_1
0x4007efa	      0x488d742410	                   lea rsi, [rsp + 0x10]	       950	eval.c	FUNCTION_23	CALL_2
0x4007eff	      0xbf22000000	                           mov edi, 0x22	       950	eval.c	FUNCTION_23	CALL_2
0x4007f04	      0xe80082ffff	                 call sym.prepare_vimvar	       950	eval.c	FUNCTION_23	CALL_2
0x4007f09	    0xc70500000000	               mov dword [0x04007f13], 2	       951	eval.c	FUNCTION_23
0x4007f13	    0x48891d000000	            mov qword [0x04007f1a], rbx 	       952	eval.c	FUNCTION_23
0x4007f1a	    0x48833d000000	               cmp qword [0x04007f22], 0	       953	eval.c	FUNCTION_23	IF_1
0x4007f22	            0x7507	                           jne 0x4007f2b	       953	eval.c	FUNCTION_23	IF_1
0x4007f24	    0x830500000000	               add dword [0x04007f2b], 1	       954	eval.c	FUNCTION_23	IF_1
0x4007f2b	      0xba01000000	                              mov edx, 1	       956	eval.c	FUNCTION_23	IF_2	CALL_3
0x4007f30	      0x488d742420	                   lea rsi, [rsp + 0x20]	       956	eval.c	FUNCTION_23	IF_2	CALL_3
0x4007f35	      0x488d7c2408	                      lea rdi, [rsp + 8]	       956	eval.c	FUNCTION_23	IF_2	CALL_3
0x4007f3a	      0xe800000000	                          call 0x4007f3f	       956	eval.c	FUNCTION_23	IF_2	CALL_3
0x4007f3f	      0xbb00000000	                              mov ebx, 0	       946	eval.c	FUNCTION_23
0x4007f44	          0x83f801	                              cmp eax, 1	       956	eval.c	FUNCTION_23	IF_2	CALL_3
0x4007f47	            0x751b	                           jne 0x4007f64	       956	eval.c	FUNCTION_23	IF_2	CALL_3
0x4007f49	      0x488b5c2428	            mov rbx, qword [rsp + 0x28] 	       961	eval.c	FUNCTION_23	IF_2	ELSE_1
0x4007f4e	      0x837c242005	               cmp dword [rsp + 0x20], 5	       958	eval.c	FUNCTION_23	IF_2	IF_3
0x4007f53	            0x740f	                            je 0x4007f64	       958	eval.c	FUNCTION_23	IF_2	IF_3
0x4007f55	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       959	eval.c	FUNCTION_23	IF_2	CALL_4
0x4007f5a	      0xe800000000	                          call 0x4007f5f	       959	eval.c	FUNCTION_23	IF_2	CALL_4
0x4007f5f	      0xbb00000000	                              mov ebx, 0	       946	eval.c	FUNCTION_23
0x4007f64	    0x48833d000000	               cmp qword [0x04007f6c], 0	       964	eval.c	FUNCTION_23	IF_4
0x4007f6c	            0x7507	                           jne 0x4007f75	       964	eval.c	FUNCTION_23	IF_4
0x4007f6e	    0x832d00000000	               sub dword [0x04007f75], 1	       965	eval.c	FUNCTION_23	IF_4
0x4007f75	      0x488d742410	                   lea rsi, [rsp + 0x10]	       966	eval.c	FUNCTION_23	CALL_5
0x4007f7a	      0xbf22000000	                           mov edi, 0x22	       966	eval.c	FUNCTION_23	CALL_5
0x4007f7f	      0xe83f83ffff	                 call sym.restore_vimvar	       966	eval.c	FUNCTION_23	CALL_5
0x4007f84	          0x4889d8	                            mov rax, rbx	       969	eval.c	FUNCTION_23
0x4007f87	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	       969	eval.c	FUNCTION_23
0x4007f8c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       969	eval.c	FUNCTION_23
0x4007f95	            0x7405	                            je 0x4007f9c	       969	eval.c	FUNCTION_23
0x4007f97	      0xe800000000	                          call 0x4007f9c	       969	eval.c	FUNCTION_23
0x4007f9c	        0x4883c440	                           add rsp, 0x40	       969	eval.c	FUNCTION_23
0x4007fa0	              0x5b	                                 pop rbx	       969	eval.c	FUNCTION_23
0x4007fa1	              0xc3	                                     ret	       969	eval.c	FUNCTION_23
get_lval	FOR,1:SWITCH,0:DO,0:IF,54:functions,0:WHILE,1:CALL,74:ELSE,10	602
0x4008ef0	            0x4157	                                push r15	      1892	eval.c	FUNCTION_44
0x4008ef2	            0x4156	                                push r14	      1892	eval.c	FUNCTION_44
0x4008ef4	            0x4155	                                push r13	      1892	eval.c	FUNCTION_44
0x4008ef6	            0x4154	                                push r12	      1892	eval.c	FUNCTION_44
0x4008ef8	              0x55	                                push rbp	      1892	eval.c	FUNCTION_44
0x4008ef9	              0x53	                                push rbx	      1892	eval.c	FUNCTION_44
0x4008efa	        0x4883ec68	                           sub rsp, 0x68	      1892	eval.c	FUNCTION_44
0x4008efe	          0x4989fe	                            mov r14, rdi	      1892	eval.c	FUNCTION_44
0x4008f01	          0x4889d3	                            mov rbx, rdx	      1892	eval.c	FUNCTION_44
0x4008f04	          0x890c24	                    mov dword [rsp], ecx	      1892	eval.c	FUNCTION_44
0x4008f07	    0x64488b042528	                mov rax, qword fs:[0x28]	      1892	eval.c	FUNCTION_44
0x4008f10	      0x4889442458	             mov qword [rsp + 0x58], rax	      1892	eval.c	FUNCTION_44
0x4008f15	            0x31c0	                            xor eax, eax	      1892	eval.c	FUNCTION_44
0x4008f17	    0x48c702000000	                      mov qword [rdx], 0	        90	string3.h	FUNCTION_194	CALL_6
0x4008f1e	    0x48c742580000	               mov qword [rdx + 0x58], 0	        90	string3.h	FUNCTION_194	CALL_6
0x4008f26	        0x488d7a08	                      lea rdi, [rdx + 8]	        90	string3.h	FUNCTION_194	CALL_6
0x4008f2a	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_194	CALL_6
0x4008f2e	          0x4889d1	                            mov rcx, rdx	        90	string3.h	FUNCTION_194	CALL_6
0x4008f31	          0x4829f9	                            sub rcx, rdi	        90	string3.h	FUNCTION_194	CALL_6
0x4008f34	          0x83c160	                           add ecx, 0x60	        90	string3.h	FUNCTION_194	CALL_6
0x4008f37	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_194	CALL_6
0x4008f3a	            0x89c9	                            mov ecx, ecx	        90	string3.h	FUNCTION_194	CALL_6
0x4008f3c	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_194	CALL_6
0x4008f3f	          0x4585c0	                           test r8d, r8d	      1909	eval.c	FUNCTION_44	IF_1
0x4008f42	            0x7427	                            je 0x4008f6b	      1909	eval.c	FUNCTION_44	IF_1
0x4008f44	          0x4c8932	                    mov qword [rdx], r14	      1912	eval.c	FUNCTION_44	IF_1
0x4008f47	    0x8b8c24a00000	            mov ecx, dword [rsp + 0xa0] 	      1913	eval.c	FUNCTION_44	IF_1	CALL_2
0x4008f4e	          0x83c901	                               or ecx, 1	      1913	eval.c	FUNCTION_44	IF_1	CALL_2
0x4008f51	      0xba00000000	                              mov edx, 0	      1913	eval.c	FUNCTION_44	IF_1	CALL_2
0x4008f56	      0xbe00000000	                              mov esi, 0	      1913	eval.c	FUNCTION_44	IF_1	CALL_2
0x4008f5b	          0x4c89f7	                            mov rdi, r14	      1913	eval.c	FUNCTION_44	IF_1	CALL_2
0x4008f5e	      0xe800000000	                          call 0x4008f63	      1913	eval.c	FUNCTION_44	IF_1	CALL_2
0x4008f63	          0x4889c5	                            mov rbp, rax	      1913	eval.c	FUNCTION_44	IF_1	CALL_2
0x4008f66	      0xe980080000	                           jmp 0x40097eb	      1913	eval.c	FUNCTION_44	IF_1	CALL_2
0x4008f6b	          0x4989f7	                            mov r15, rsi	      1913	eval.c	FUNCTION_44	IF_1	CALL_2
0x4008f6e	          0x4589cd	                           mov r13d, r9d	      1913	eval.c	FUNCTION_44	IF_1	CALL_2
0x4008f71	          0x4489c8	                            mov eax, r9d	      1904	eval.c	FUNCTION_44
0x4008f74	          0x83e002	                              and eax, 2	      1904	eval.c	FUNCTION_44
0x4008f77	        0x89442404	                mov dword [rsp + 4], eax	      1904	eval.c	FUNCTION_44
0x4008f7b	    0x8b8c24a00000	            mov ecx, dword [rsp + 0xa0] 	      1917	eval.c	FUNCTION_44	CALL_3
0x4008f82	      0x488d542420	                   lea rdx, [rsp + 0x20]	      1917	eval.c	FUNCTION_44	CALL_3
0x4008f87	      0x488d742418	                   lea rsi, [rsp + 0x18]	      1917	eval.c	FUNCTION_44	CALL_3
0x4008f8c	          0x4c89f7	                            mov rdi, r14	      1917	eval.c	FUNCTION_44	CALL_3
0x4008f8f	      0xe800000000	                          call 0x4008f94	      1917	eval.c	FUNCTION_44	CALL_3
0x4008f94	      0x4889442410	             mov qword [rsp + 0x10], rax	      1917	eval.c	FUNCTION_44	CALL_3
0x4008f99	    0x48837c241800	               cmp qword [rsp + 0x18], 0	      1918	eval.c	FUNCTION_44	IF_2
0x4008f9f	     0xf84b8000000	                            je 0x400905d	      1918	eval.c	FUNCTION_44	IF_2
0x4008fa5	        0x833c2400	                      cmp dword [rsp], 0	      1921	eval.c	FUNCTION_44	IF_2	IF_3	CALL_5
0x4008fa9	            0x744d	                            je 0x4008ff8	      1921	eval.c	FUNCTION_44	IF_2	IF_3	CALL_5
0x4008fab	           0xfb600	                   movzx eax, byte [rax]	      1921	eval.c	FUNCTION_44	IF_2	IF_3	CALL_5
0x4008fae	            0x3c20	                            cmp al, 0x20	      1921	eval.c	FUNCTION_44	IF_2	IF_3	CALL_5
0x4008fb0	            0x7446	                            je 0x4008ff8	      1921	eval.c	FUNCTION_44	IF_2	IF_3	CALL_5
0x4008fb2	            0x3c09	                               cmp al, 9	      1921	eval.c	FUNCTION_44	IF_2	IF_3	CALL_5
0x4008fb4	            0x7442	                            je 0x4008ff8	      1921	eval.c	FUNCTION_44	IF_2	IF_3	CALL_5
0x4008fb6	           0xfb6f8	                           movzx edi, al	      1921	eval.c	FUNCTION_44	IF_2	IF_3	CALL_5
0x4008fb9	      0xe800000000	                          call 0x4008fbe	      1921	eval.c	FUNCTION_44	IF_2	IF_3	CALL_5
0x4008fbe	            0x85c0	                           test eax, eax	      1921	eval.c	FUNCTION_44	IF_2	IF_3	CALL_5
0x4008fc0	            0x7536	                           jne 0x4008ff8	      1921	eval.c	FUNCTION_44	IF_2	IF_3	CALL_5
0x4008fc2	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1922	eval.c	FUNCTION_44	IF_2	IF_3
0x4008fc7	           0xfb600	                   movzx eax, byte [rax]	      1922	eval.c	FUNCTION_44	IF_2	IF_3
0x4008fca	            0x3c2e	                            cmp al, 0x2e	      1922	eval.c	FUNCTION_44	IF_2	IF_3
0x4008fcc	            0x742a	                            je 0x4008ff8	      1922	eval.c	FUNCTION_44	IF_2	IF_3
0x4008fce	            0x3c5b	                            cmp al, 0x5b	      1922	eval.c	FUNCTION_44	IF_2	IF_3
0x4008fd0	            0x7426	                            je 0x4008ff8	      1922	eval.c	FUNCTION_44	IF_2	IF_3
0x4008fd2	      0xba05000000	                              mov edx, 5	      1924	eval.c	FUNCTION_44	IF_2	IF_3	CALL_7
0x4008fd7	      0xbe00000000	                              mov esi, 0	      1924	eval.c	FUNCTION_44	IF_2	IF_3	CALL_7
0x4008fdc	      0xbf00000000	                              mov edi, 0	      1924	eval.c	FUNCTION_44	IF_2	IF_3	CALL_7
0x4008fe1	      0xe800000000	                          call 0x4008fe6	      1924	eval.c	FUNCTION_44	IF_2	IF_3	CALL_7
0x4008fe6	          0x4889c7	                            mov rdi, rax	      1924	eval.c	FUNCTION_44	IF_2	IF_3	CALL_7
0x4008fe9	      0xe800000000	                          call 0x4008fee	      1924	eval.c	FUNCTION_44	IF_2	IF_3	CALL_7
0x4008fee	      0xbd00000000	                              mov ebp, 0	      1925	eval.c	FUNCTION_44	IF_2	IF_3
0x4008ff3	      0xe9f3070000	                           jmp 0x40097eb	      1925	eval.c	FUNCTION_44	IF_2	IF_3
0x4008ff8	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      1928	eval.c	FUNCTION_44	IF_2	CALL_8
0x4008ffd	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      1928	eval.c	FUNCTION_44	IF_2	CALL_8
0x4009002	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      1928	eval.c	FUNCTION_44	IF_2	CALL_8
0x4009007	          0x4c89f7	                            mov rdi, r14	      1928	eval.c	FUNCTION_44	IF_2	CALL_8
0x400900a	      0xe8aff6ffff	             call sym.make_expanded_name	      1928	eval.c	FUNCTION_44	IF_2	CALL_8
0x400900f	          0x4889c5	                            mov rbp, rax	      1928	eval.c	FUNCTION_44	IF_2	CALL_8
0x4009012	        0x48894308	                mov qword [rbx + 8], rax	      1928	eval.c	FUNCTION_44	IF_2	CALL_8
0x4009016	          0x4885c0	                           test rax, rax	      1929	eval.c	FUNCTION_44	IF_2	IF_4
0x4009019	            0x7539	                           jne 0x4009054	      1929	eval.c	FUNCTION_44	IF_2	IF_4
0x400901b	      0xe800000000	                          call 0x4009020	      1934	eval.c	FUNCTION_44	IF_2	IF_4	IF_5	CALL_9
0x4009020	         0xb442404	                 or eax, dword [rsp + 4]	      1934	eval.c	FUNCTION_44	IF_2	IF_4	IF_5	CALL_9
0x4009024	            0x752e	                           jne 0x4009054	      1934	eval.c	FUNCTION_44	IF_2	IF_4	IF_5	CALL_9
0x4009026	    0xc70500000000	               mov dword [0x04009030], 1	      1936	eval.c	FUNCTION_44	IF_2	IF_4	IF_5
0x4009030	      0xba05000000	                              mov edx, 5	      1937	eval.c	FUNCTION_44	IF_2	IF_4	IF_5	CALL_11
0x4009035	      0xbe00000000	                              mov esi, 0	      1937	eval.c	FUNCTION_44	IF_2	IF_4	IF_5	CALL_11
0x400903a	      0xbf00000000	                              mov edi, 0	      1937	eval.c	FUNCTION_44	IF_2	IF_4	IF_5	CALL_11
0x400903f	      0xe800000000	                          call 0x4009044	      1937	eval.c	FUNCTION_44	IF_2	IF_4	IF_5	CALL_11
0x4009044	          0x4c89f6	                            mov rsi, r14	      1937	eval.c	FUNCTION_44	IF_2	IF_4	IF_5	CALL_11
0x4009047	          0x4889c7	                            mov rdi, rax	      1937	eval.c	FUNCTION_44	IF_2	IF_4	IF_5	CALL_11
0x400904a	      0xe800000000	                          call 0x400904f	      1937	eval.c	FUNCTION_44	IF_2	IF_4	IF_5	CALL_11
0x400904f	      0xe997070000	                           jmp 0x40097eb	      1938	eval.c	FUNCTION_44	IF_2	IF_4	IF_5
0x4009054	        0x488b4308	                mov rax, qword [rbx + 8]	      1941	eval.c	FUNCTION_44	IF_2
0x4009058	          0x488903	                    mov qword [rbx], rax	      1941	eval.c	FUNCTION_44	IF_2
0x400905b	            0xeb03	                           jmp 0x4009060	      1941	eval.c	FUNCTION_44	IF_2
0x400905d	          0x4c8933	                    mov qword [rbx], r14	      1944	eval.c	FUNCTION_44	ELSE_1
0x4009060	      0x488b6c2410	            mov rbp, qword [rsp + 0x10] 	      1947	eval.c	FUNCTION_44	IF_6
0x4009065	      0x440fb66500	                  movzx r12d, byte [rbp]	      1947	eval.c	FUNCTION_44	IF_6
0x400906a	        0x4180fc5b	                          cmp r12b, 0x5b	      1947	eval.c	FUNCTION_44	IF_6
0x400906e	            0x740a	                            je 0x400907a	      1947	eval.c	FUNCTION_44	IF_6
0x4009070	        0x4180fc2e	                          cmp r12b, 0x2e	      1947	eval.c	FUNCTION_44	IF_6
0x4009074	     0xf8571070000	                           jne 0x40097eb	      1947	eval.c	FUNCTION_44	IF_6
0x400907a	        0x48833b00	                      cmp qword [rbx], 0	      1947	eval.c	FUNCTION_44	IF_6
0x400907e	     0xf8467070000	                            je 0x40097eb	      1947	eval.c	FUNCTION_44	IF_6
0x4009084	        0xc6450000	                       mov byte [rbp], 0	      1951	eval.c	FUNCTION_44
0x4009088	          0x4489ea	                           mov edx, r13d	      1954	eval.c	FUNCTION_44	CALL_12
0x400908b	          0x83e204	                              and edx, 4	      1954	eval.c	FUNCTION_44	CALL_12
0x400908e	        0x4183e510	                          and r13d, 0x10	      1954	eval.c	FUNCTION_44	CALL_12
0x4009092	      0x44896c2408	               mov dword [rsp + 8], r13d	      1954	eval.c	FUNCTION_44	CALL_12
0x4009097	      0x488d442428	                   lea rax, [rsp + 0x28]	      1954	eval.c	FUNCTION_44	CALL_12
0x400909c	          0x4585ed	                         test r13d, r13d	      1954	eval.c	FUNCTION_44	CALL_12
0x400909f	      0xbe00000000	                              mov esi, 0	      1954	eval.c	FUNCTION_44	CALL_12
0x40090a4	        0x480f44f0	                          cmove rsi, rax	      1954	eval.c	FUNCTION_44	CALL_12
0x40090a8	          0x488b3b	                    mov rdi, qword [rbx]	      1954	eval.c	FUNCTION_44	CALL_12
0x40090ab	      0xe800000000	                          call 0x40090b0	      1954	eval.c	FUNCTION_44	CALL_12
0x40090b0	          0x4889c5	                            mov rbp, rax	      1954	eval.c	FUNCTION_44	CALL_12
0x40090b3	          0x4885c0	                           test rax, rax	      1956	eval.c	FUNCTION_44	IF_7
0x40090b6	            0x7529	                           jne 0x40090e1	      1956	eval.c	FUNCTION_44	IF_7
0x40090b8	      0x837c240400	                  cmp dword [rsp + 4], 0	      1956	eval.c	FUNCTION_44	IF_7
0x40090bd	            0x7522	                           jne 0x40090e1	      1956	eval.c	FUNCTION_44	IF_7
0x40090bf	          0x4c8b2b	                    mov r13, qword [rbx]	      1957	eval.c	FUNCTION_44	CALL_14
0x40090c2	      0xba05000000	                              mov edx, 5	      1957	eval.c	FUNCTION_44	CALL_14
0x40090c7	      0xbe00000000	                              mov esi, 0	      1957	eval.c	FUNCTION_44	CALL_14
0x40090cc	      0xbf00000000	                              mov edi, 0	      1957	eval.c	FUNCTION_44	CALL_14
0x40090d1	      0xe800000000	                          call 0x40090d6	      1957	eval.c	FUNCTION_44	CALL_14
0x40090d6	          0x4c89ee	                            mov rsi, r13	      1957	eval.c	FUNCTION_44	CALL_14
0x40090d9	          0x4889c7	                            mov rdi, rax	      1957	eval.c	FUNCTION_44	CALL_14
0x40090dc	      0xe800000000	                          call 0x40090e1	      1957	eval.c	FUNCTION_44	CALL_14
0x40090e1	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1958	eval.c	FUNCTION_44
0x40090e6	          0x448820	                    mov byte [rax], r12b	      1958	eval.c	FUNCTION_44
0x40090e9	          0x4885ed	                           test rbp, rbp	      1959	eval.c	FUNCTION_44	IF_8
0x40090ec	     0xf84e6060000	                            je 0x40097d8	      1959	eval.c	FUNCTION_44	IF_8
0x40090f2	        0x48896b10	             mov qword [rbx + 0x10], rbp	      1965	eval.c	FUNCTION_44
0x40090f6	    0xc74424300000	               mov dword [rsp + 0x30], 0	      1966	eval.c	FUNCTION_44
0x40090fe	    0xc74424400000	               mov dword [rsp + 0x40], 0	      1967	eval.c	FUNCTION_44
0x4009106	    0x41bd00000000	                             mov r13d, 0	      1899	eval.c	FUNCTION_44
0x400910c	      0xe995060000	                           jmp 0x40097a6	      1968	eval.c	FUNCTION_44	WHILE_1
0x4009111	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      1970	eval.c	FUNCTION_44	WHILE_1	IF_9
0x4009115	            0x8b0a	                    mov ecx, dword [rdx]	      1970	eval.c	FUNCTION_44	WHILE_1	IF_9
0x4009117	          0x83f905	                              cmp ecx, 5	      1970	eval.c	FUNCTION_44	WHILE_1	IF_9
0x400911a	            0x750d	                           jne 0x4009129	      1970	eval.c	FUNCTION_44	WHILE_1	IF_9
0x400911c	      0x48837a0800	                  cmp qword [rdx + 8], 0	      1970	eval.c	FUNCTION_44	WHILE_1	IF_9
0x4009121	     0xf85e9060000	                           jne 0x4009810	      1970	eval.c	FUNCTION_44	WHILE_1	IF_9
0x4009127	            0xeb0c	                           jmp 0x4009135	      1970	eval.c	FUNCTION_44	WHILE_1	IF_9
0x4009129	          0x83f906	                              cmp ecx, 6	      1971	eval.c	FUNCTION_44	WHILE_1	IF_9
0x400912c	            0x7507	                           jne 0x4009135	      1971	eval.c	FUNCTION_44	WHILE_1	IF_9
0x400912e	      0x48837a0800	                  cmp qword [rdx + 8], 0	      1971	eval.c	FUNCTION_44	WHILE_1	IF_9
0x4009133	            0x7531	                           jne 0x4009166	      1971	eval.c	FUNCTION_44	WHILE_1	IF_9
0x4009135	      0xbd00000000	                              mov ebp, 0	      1976	eval.c	FUNCTION_44	WHILE_1	IF_9
0x400913a	      0x837c240400	                  cmp dword [rsp + 4], 0	      1974	eval.c	FUNCTION_44	WHILE_1	IF_9	IF_10
0x400913f	     0xf85a6060000	                           jne 0x40097eb	      1974	eval.c	FUNCTION_44	WHILE_1	IF_9	IF_10
0x4009145	      0xba05000000	                              mov edx, 5	      1975	eval.c	FUNCTION_44	WHILE_1	IF_9	CALL_16
0x400914a	      0xbe00000000	                              mov esi, 0	      1975	eval.c	FUNCTION_44	WHILE_1	IF_9	CALL_16
0x400914f	      0xbf00000000	                              mov edi, 0	      1975	eval.c	FUNCTION_44	WHILE_1	IF_9	CALL_16
0x4009154	      0xe800000000	                          call 0x4009159	      1975	eval.c	FUNCTION_44	WHILE_1	IF_9	CALL_16
0x4009159	          0x4889c7	                            mov rdi, rax	      1975	eval.c	FUNCTION_44	WHILE_1	IF_9	CALL_16
0x400915c	      0xe800000000	                          call 0x4009161	      1975	eval.c	FUNCTION_44	WHILE_1	IF_9	CALL_16
0x4009161	      0xe985060000	                           jmp 0x40097eb	      1975	eval.c	FUNCTION_44	WHILE_1	IF_9	CALL_16
0x4009166	        0x837b2800	               cmp dword [rbx + 0x28], 0	      1978	eval.c	FUNCTION_44	WHILE_1	IF_11
0x400916a	            0x7431	                            je 0x400919d	      1978	eval.c	FUNCTION_44	WHILE_1	IF_11
0x400916c	      0xbd00000000	                              mov ebp, 0	      1982	eval.c	FUNCTION_44	WHILE_1	IF_11
0x4009171	      0x837c240400	                  cmp dword [rsp + 4], 0	      1980	eval.c	FUNCTION_44	WHILE_1	IF_11	IF_12
0x4009176	     0xf856f060000	                           jne 0x40097eb	      1980	eval.c	FUNCTION_44	WHILE_1	IF_11	IF_12
0x400917c	      0xba05000000	                              mov edx, 5	      1981	eval.c	FUNCTION_44	WHILE_1	IF_11	CALL_18
0x4009181	      0xbe00000000	                              mov esi, 0	      1981	eval.c	FUNCTION_44	WHILE_1	IF_11	CALL_18
0x4009186	      0xbf00000000	                              mov edi, 0	      1981	eval.c	FUNCTION_44	WHILE_1	IF_11	CALL_18
0x400918b	      0xe800000000	                          call 0x4009190	      1981	eval.c	FUNCTION_44	WHILE_1	IF_11	CALL_18
0x4009190	          0x4889c7	                            mov rdi, rax	      1981	eval.c	FUNCTION_44	WHILE_1	IF_11	CALL_18
0x4009193	      0xe800000000	                          call 0x4009198	      1981	eval.c	FUNCTION_44	WHILE_1	IF_11	CALL_18
0x4009198	      0xe94e060000	                           jmp 0x40097eb	      1981	eval.c	FUNCTION_44	WHILE_1	IF_11	CALL_18
0x400919d	        0x4c8d6701	                      lea r12, [rdi + 1]	      1988	eval.c	FUNCTION_44	WHILE_1	IF_13
0x40091a1	      0xbd00000000	                              mov ebp, 0	      1989	eval.c	FUNCTION_44	WHILE_1	IF_13	FOR_1	CALL_19
0x40091a6	            0x3c2e	                            cmp al, 0x2e	      1986	eval.c	FUNCTION_44	WHILE_1	IF_13
0x40091a8	            0x7405	                            je 0x40091af	      1986	eval.c	FUNCTION_44	WHILE_1	IF_13
0x40091aa	            0xeb75	                           jmp 0x4009221	      1986	eval.c	FUNCTION_44	WHILE_1	IF_13
0x40091ac	          0x83c501	                              add ebp, 1	      1989	eval.c	FUNCTION_44	WHILE_1	IF_13	FOR_1	CALL_19
0x40091af	          0x4863c5	                         movsxd rax, ebp	      1989	eval.c	FUNCTION_44	WHILE_1	IF_13	FOR_1	CALL_19
0x40091b2	          0x4c01e0	                            add rax, r12	      1989	eval.c	FUNCTION_44	WHILE_1	IF_13	FOR_1	CALL_19
0x40091b5	           0xfb608	                   movzx ecx, byte [rax]	      1989	eval.c	FUNCTION_44	WHILE_1	IF_13	FOR_1	CALL_19
0x40091b8	            0x89ca	                            mov edx, ecx	      1989	eval.c	FUNCTION_44	WHILE_1	IF_13	FOR_1	CALL_19
0x40091ba	          0x83e2df	                     and edx, 0xffffffdf	      1989	eval.c	FUNCTION_44	WHILE_1	IF_13	FOR_1	CALL_19
0x40091bd	          0x83ea41	                           sub edx, 0x41	      1989	eval.c	FUNCTION_44	WHILE_1	IF_13	FOR_1	CALL_19
0x40091c0	          0x80fa19	                            cmp dl, 0x19	      1989	eval.c	FUNCTION_44	WHILE_1	IF_13	FOR_1	CALL_19
0x40091c3	            0x76e7	                           jbe 0x40091ac	      1989	eval.c	FUNCTION_44	WHILE_1	IF_13	FOR_1	CALL_19
0x40091c5	           0xfb6d1	                           movzx edx, cl	      1989	eval.c	FUNCTION_44	WHILE_1	IF_13	FOR_1	CALL_19
0x40091c8	          0x83ea30	                           sub edx, 0x30	      1989	eval.c	FUNCTION_44	WHILE_1	IF_13	FOR_1	CALL_19
0x40091cb	          0x83fa09	                              cmp edx, 9	      1989	eval.c	FUNCTION_44	WHILE_1	IF_13	FOR_1	CALL_19
0x40091ce	            0x76dc	                           jbe 0x40091ac	      1989	eval.c	FUNCTION_44	WHILE_1	IF_13	FOR_1	CALL_19
0x40091d0	          0x80f95f	                            cmp cl, 0x5f	      1989	eval.c	FUNCTION_44	WHILE_1	IF_13	FOR_1	CALL_19
0x40091d3	            0x74d7	                            je 0x40091ac	      1989	eval.c	FUNCTION_44	WHILE_1	IF_13	FOR_1	CALL_19
0x40091d5	            0x85ed	                           test ebp, ebp	      1991	eval.c	FUNCTION_44	WHILE_1	IF_13	IF_14
0x40091d7	            0x7531	                           jne 0x400920a	      1991	eval.c	FUNCTION_44	WHILE_1	IF_13	IF_14
0x40091d9	      0xbd00000000	                              mov ebp, 0	      1995	eval.c	FUNCTION_44	WHILE_1	IF_13	IF_14
0x40091de	      0x837c240400	                  cmp dword [rsp + 4], 0	      1993	eval.c	FUNCTION_44	WHILE_1	IF_13	IF_14	IF_15
0x40091e3	     0xf8502060000	                           jne 0x40097eb	      1993	eval.c	FUNCTION_44	WHILE_1	IF_13	IF_14	IF_15
0x40091e9	      0xba05000000	                              mov edx, 5	      1994	eval.c	FUNCTION_44	WHILE_1	IF_13	IF_14	CALL_21
0x40091ee	      0xbe00000000	                              mov esi, 0	      1994	eval.c	FUNCTION_44	WHILE_1	IF_13	IF_14	CALL_21
0x40091f3	      0xbf00000000	                              mov edi, 0	      1994	eval.c	FUNCTION_44	WHILE_1	IF_13	IF_14	CALL_21
0x40091f8	      0xe800000000	                          call 0x40091fd	      1994	eval.c	FUNCTION_44	WHILE_1	IF_13	IF_14	CALL_21
0x40091fd	          0x4889c7	                            mov rdi, rax	      1994	eval.c	FUNCTION_44	WHILE_1	IF_13	IF_14	CALL_21
0x4009200	      0xe800000000	                          call 0x4009205	      1994	eval.c	FUNCTION_44	WHILE_1	IF_13	IF_14	CALL_21
0x4009205	      0xe9e1050000	                           jmp 0x40097eb	      1994	eval.c	FUNCTION_44	WHILE_1	IF_13	IF_14	CALL_21
0x400920a	      0x4889442410	             mov qword [rsp + 0x10], rax	      1997	eval.c	FUNCTION_44	WHILE_1	IF_13
0x400920f	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      2073	eval.c	FUNCTION_44	WHILE_1	IF_29
0x4009213	          0x833806	                      cmp dword [rax], 6	      2073	eval.c	FUNCTION_44	WHILE_1	IF_29
0x4009216	     0xf84ed010000	                            je 0x4009409	      2073	eval.c	FUNCTION_44	WHILE_1	IF_29
0x400921c	      0xe9ea030000	                           jmp 0x400960b	      2073	eval.c	FUNCTION_44	WHILE_1	IF_29
0x4009221	        0x4883c701	                              add rdi, 1	      2002	eval.c	FUNCTION_44	WHILE_1	ELSE_2	CALL_22
0x4009225	      0xe800000000	                          call 0x400922a	      2002	eval.c	FUNCTION_44	WHILE_1	ELSE_2	CALL_22
0x400922a	      0x4889442410	             mov qword [rsp + 0x10], rax	      2002	eval.c	FUNCTION_44	WHILE_1	ELSE_2	CALL_22
0x400922f	          0x80383a	                    cmp byte [rax], 0x3a	      2003	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_16
0x4009232	            0x7453	                            je 0x4009287	      2003	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_16
0x4009234	      0xba01000000	                              mov edx, 1	      2008	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_3	IF_17	CALL_23
0x4009239	      0x488d742430	                   lea rsi, [rsp + 0x30]	      2008	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_3	IF_17	CALL_23
0x400923e	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2008	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_3	IF_17	CALL_23
0x4009243	      0xe800000000	                          call 0x4009248	      2008	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_3	IF_17	CALL_23
0x4009248	            0x85c0	                           test eax, eax	      2008	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_3	IF_17	CALL_23
0x400924a	     0xf848f050000	                            je 0x40097df	      2008	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_3	IF_17	CALL_23
0x4009250	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      2010	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_3	IF_18	CALL_24
0x4009255	      0xe800000000	                          call 0x400925a	      2010	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_3	IF_18	CALL_24
0x400925a	          0x4889c5	                            mov rbp, rax	      2010	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_3	IF_18	CALL_24
0x400925d	          0x4885c0	                           test rax, rax	      2010	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_3	IF_18	CALL_24
0x4009260	            0x750f	                           jne 0x4009271	      2010	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_3	IF_18	CALL_24
0x4009262	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      2013	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_3	IF_18	CALL_25
0x4009267	      0xe800000000	                          call 0x400926c	      2013	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_3	IF_18	CALL_25
0x400926c	      0xe97a050000	                           jmp 0x40097eb	      2014	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_3	IF_18
0x4009271	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      2019	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19
0x4009276	          0x80383a	                    cmp byte [rax], 0x3a	      2019	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19
0x4009279	     0xf851a010000	                           jne 0x4009399	      2019	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19
0x400927f	    0x41bd00000000	                             mov r13d, 0	      2007	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_3
0x4009285	            0xeb06	                           jmp 0x400928d	      2007	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_3
0x4009287	    0x41bd01000000	                             mov r13d, 1	      2004	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_16
0x400928d	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      2021	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_20
0x4009291	          0x833a06	                      cmp dword [rdx], 6	      2021	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_20
0x4009294	            0x7537	                           jne 0x40092cd	      2021	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_20
0x4009296	      0x837c240400	                  cmp dword [rsp + 4], 0	      2023	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_20	IF_21
0x400929b	            0x751c	                           jne 0x40092b9	      2023	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_20	IF_21
0x400929d	      0xba05000000	                              mov edx, 5	      2024	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_20	CALL_27
0x40092a2	      0xbe00000000	                              mov esi, 0	      2024	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_20	CALL_27
0x40092a7	      0xbf00000000	                              mov edi, 0	      2024	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_20	CALL_27
0x40092ac	      0xe800000000	                          call 0x40092b1	      2024	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_20	CALL_27
0x40092b1	          0x4889c7	                            mov rdi, rax	      2024	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_20	CALL_27
0x40092b4	      0xe800000000	                          call 0x40092b9	      2024	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_20	CALL_27
0x40092b9	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      2025	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_20	CALL_28
0x40092be	      0xe800000000	                          call 0x40092c3	      2025	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_20	CALL_28
0x40092c3	      0xbd00000000	                              mov ebp, 0	      2026	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_20
0x40092c8	      0xe91e050000	                           jmp 0x40097eb	      2026	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_20
0x40092cd	          0x4d85ff	                           test r15, r15	      2028	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_22
0x40092d0	            0x7444	                            je 0x4009316	      2028	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_22
0x40092d2	        0x41833f05	                      cmp dword [r15], 5	      2028	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_22
0x40092d6	            0x7507	                           jne 0x40092df	      2028	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_22
0x40092d8	      0x49837f0800	                  cmp qword [r15 + 8], 0	      2029	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_22
0x40092dd	            0x7537	                           jne 0x4009316	      2029	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_22
0x40092df	      0x837c240400	                  cmp dword [rsp + 4], 0	      2031	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_22	IF_23
0x40092e4	            0x751c	                           jne 0x4009302	      2031	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_22	IF_23
0x40092e6	      0xba05000000	                              mov edx, 5	      2032	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_22	CALL_30
0x40092eb	      0xbe00000000	                              mov esi, 0	      2032	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_22	CALL_30
0x40092f0	      0xbf00000000	                              mov edi, 0	      2032	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_22	CALL_30
0x40092f5	      0xe800000000	                          call 0x40092fa	      2032	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_22	CALL_30
0x40092fa	          0x4889c7	                            mov rdi, rax	      2032	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_22	CALL_30
0x40092fd	      0xe800000000	                          call 0x4009302	      2032	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_22	CALL_30
0x4009302	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      2033	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_22	CALL_31
0x4009307	      0xe800000000	                          call 0x400930c	      2033	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_22	CALL_31
0x400930c	      0xbd00000000	                              mov ebp, 0	      2034	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_22
0x4009311	      0xe9d5040000	                           jmp 0x40097eb	      2034	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_22
0x4009316	        0x488d7801	                      lea rdi, [rax + 1]	      2036	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	CALL_32
0x400931a	      0xe800000000	                          call 0x400931f	      2036	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	CALL_32
0x400931f	      0x4889442410	             mov qword [rsp + 0x10], rax	      2036	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	CALL_32
0x4009324	          0x80385d	                    cmp byte [rax], 0x5d	      2037	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_24
0x4009327	            0x7509	                           jne 0x4009332	      2037	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_24
0x4009329	    0xc74340010000	               mov dword [rbx + 0x40], 1	      2038	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_24
0x4009330	            0xeb5e	                           jmp 0x4009390	      2038	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_24
0x4009332	    0xc74340000000	               mov dword [rbx + 0x40], 0	      2041	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	ELSE_4
0x4009339	      0xba01000000	                              mov edx, 1	      2042	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	ELSE_4	IF_25	CALL_33
0x400933e	      0x488d742440	                   lea rsi, [rsp + 0x40]	      2042	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	ELSE_4	IF_25	CALL_33
0x4009343	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2042	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	ELSE_4	IF_25	CALL_33
0x4009348	      0xe800000000	                          call 0x400934d	      2042	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	ELSE_4	IF_25	CALL_33
0x400934d	            0x85c0	                           test eax, eax	      2042	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	ELSE_4	IF_25	CALL_33
0x400934f	            0x7514	                           jne 0x4009365	      2042	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	ELSE_4	IF_25	CALL_33
0x4009351	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      2044	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	ELSE_4	IF_25	CALL_34
0x4009356	      0xe800000000	                          call 0x400935b	      2044	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	ELSE_4	IF_25	CALL_34
0x400935b	      0xbd00000000	                              mov ebp, 0	      2045	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	ELSE_4	IF_25
0x4009360	      0xe986040000	                           jmp 0x40097eb	      2045	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	ELSE_4	IF_25
0x4009365	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      2047	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	ELSE_4	IF_26	CALL_35
0x400936a	      0xe800000000	                          call 0x400936f	      2047	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	ELSE_4	IF_26	CALL_35
0x400936f	          0x4889c5	                            mov rbp, rax	      2047	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	ELSE_4	IF_26	CALL_35
0x4009372	          0x4885c0	                           test rax, rax	      2047	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	ELSE_4	IF_26	CALL_35
0x4009375	            0x7519	                           jne 0x4009390	      2047	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	ELSE_4	IF_26	CALL_35
0x4009377	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      2050	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	ELSE_4	IF_26	CALL_36
0x400937c	      0xe800000000	                          call 0x4009381	      2050	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	ELSE_4	IF_26	CALL_36
0x4009381	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      2051	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	ELSE_4	IF_26	CALL_37
0x4009386	      0xe800000000	                          call 0x400938b	      2051	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	ELSE_4	IF_26	CALL_37
0x400938b	      0xe95b040000	                           jmp 0x40097eb	      2052	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	ELSE_4	IF_26
0x4009390	    0xc74328010000	               mov dword [rbx + 0x28], 1	      2055	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19
0x4009397	            0xeb0d	                           jmp 0x40093a6	      2055	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19
0x4009399	    0xc74328000000	               mov dword [rbx + 0x28], 0	      2058	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_5
0x40093a0	    0x41bd00000000	                             mov r13d, 0	      2007	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_3
0x40093a6	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      2060	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_5	IF_27
0x40093ab	          0x80385d	                    cmp byte [rax], 0x5d	      2060	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_5	IF_27
0x40093ae	            0x7441	                            je 0x40093f1	      2060	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_5	IF_27
0x40093b0	      0x837c240400	                  cmp dword [rsp + 4], 0	      2062	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_5	IF_27	IF_28
0x40093b5	            0x751c	                           jne 0x40093d3	      2062	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_5	IF_27	IF_28
0x40093b7	      0xba05000000	                              mov edx, 5	      2063	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_5	IF_27	CALL_39
0x40093bc	      0xbe00000000	                              mov esi, 0	      2063	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_5	IF_27	CALL_39
0x40093c1	      0xbf00000000	                              mov edi, 0	      2063	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_5	IF_27	CALL_39
0x40093c6	      0xe800000000	                          call 0x40093cb	      2063	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_5	IF_27	CALL_39
0x40093cb	          0x4889c7	                            mov rdi, rax	      2063	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_5	IF_27	CALL_39
0x40093ce	      0xe800000000	                          call 0x40093d3	      2063	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_5	IF_27	CALL_39
0x40093d3	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      2064	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_5	IF_27	CALL_40
0x40093d8	      0xe800000000	                          call 0x40093dd	      2064	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_5	IF_27	CALL_40
0x40093dd	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      2065	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_5	IF_27	CALL_41
0x40093e2	      0xe800000000	                          call 0x40093e7	      2065	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_5	IF_27	CALL_41
0x40093e7	      0xbd00000000	                              mov ebp, 0	      2066	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_5	IF_27
0x40093ec	      0xe9fa030000	                           jmp 0x40097eb	      2066	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_5	IF_27
0x40093f1	        0x4883c001	                              add rax, 1	      2070	eval.c	FUNCTION_44	WHILE_1	ELSE_2
0x40093f5	      0x4889442410	             mov qword [rsp + 0x10], rax	      2070	eval.c	FUNCTION_44	WHILE_1	ELSE_2
0x40093fa	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      2073	eval.c	FUNCTION_44	WHILE_1	IF_29
0x40093fe	          0x833806	                      cmp dword [rax], 6	      2073	eval.c	FUNCTION_44	WHILE_1	IF_29
0x4009401	     0xf8504020000	                           jne 0x400960b	      2073	eval.c	FUNCTION_44	WHILE_1	IF_29
0x4009407	            0xeb07	                           jmp 0x4009410	      2073	eval.c	FUNCTION_44	WHILE_1	IF_29
0x4009409	          0x83fdff	             cmp ebp, 0xffffffffffffffff	      2075	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_30
0x400940c	            0x752d	                           jne 0x400943b	      2075	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_30
0x400940e	            0xeb05	                           jmp 0x4009415	      2075	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_30
0x4009410	      0xbdffffffff	                     mov ebp, 0xffffffff	      1985	eval.c	FUNCTION_44	WHILE_1
0x4009415	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      2078	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_30	CALL_42
0x400941a	      0xe800000000	                          call 0x400941f	      2078	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_30	CALL_42
0x400941f	          0x4989c4	                            mov r12, rax	      2078	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_30	CALL_42
0x4009422	          0x4885c0	                           test rax, rax	      2079	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_30	IF_31
0x4009425	            0x7514	                           jne 0x400943b	      2079	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_30	IF_31
0x4009427	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      2081	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_30	IF_31	CALL_43
0x400942c	      0xe800000000	                          call 0x4009431	      2081	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_30	IF_31	CALL_43
0x4009431	      0xbd00000000	                              mov ebp, 0	      2082	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_30	IF_31
0x4009436	      0xe9b0030000	                           jmp 0x40097eb	      2082	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_30	IF_31
0x400943b	    0x48c743200000	               mov qword [rbx + 0x20], 0	      2085	eval.c	FUNCTION_44	WHILE_1	IF_29
0x4009443	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      2086	eval.c	FUNCTION_44	WHILE_1	IF_29
0x4009447	        0x488b7808	                mov rdi, qword [rax + 8]	      2086	eval.c	FUNCTION_44	WHILE_1	IF_29
0x400944b	        0x48897b48	             mov qword [rbx + 0x48], rdi	      2086	eval.c	FUNCTION_44	WHILE_1	IF_29
0x400944f	            0x89ea	                            mov edx, ebp	      2087	eval.c	FUNCTION_44	WHILE_1	IF_29	CALL_44
0x4009451	          0x4c89e6	                            mov rsi, r12	      2087	eval.c	FUNCTION_44	WHILE_1	IF_29	CALL_44
0x4009454	      0xe800000000	                          call 0x4009459	      2087	eval.c	FUNCTION_44	WHILE_1	IF_29	CALL_44
0x4009459	        0x48894350	             mov qword [rbx + 0x50], rax	      2087	eval.c	FUNCTION_44	WHILE_1	IF_29	CALL_44
0x400945d	          0x4d85ff	                           test r15, r15	      2092	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32
0x4009460	     0xf8484000000	                            je 0x40094ea	      2092	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32
0x4009466	        0x488b4348	            mov rax, qword [rbx + 0x48] 	      2092	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32
0x400946a	        0x80780100	                   cmp byte [rax + 1], 0	      2092	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32
0x400946e	            0x747a	                            je 0x40094ea	      2092	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32
0x4009470	          0x83fdff	             cmp ebp, 0xffffffffffffffff	      2097	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	IF_33
0x4009473	     0xf84d0030000	                            je 0x4009849	      2097	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	IF_33
0x4009479	          0x4863c5	                         movsxd rax, ebp	      2099	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	IF_33
0x400947c	          0x4c01e0	                            add rax, r12	      2099	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	IF_33
0x400947f	           0xfb630	                   movzx esi, byte [rax]	      2099	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	IF_33
0x4009482	        0x8974240c	              mov dword [rsp + 0xc], esi	      2099	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	IF_33
0x4009486	          0xc60000	                       mov byte [rax], 0	      2100	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	IF_33
0x4009489	        0x488b4348	            mov rax, qword [rbx + 0x48] 	      2104	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32
0x400948d	        0x80780102	                   cmp byte [rax + 1], 2	      2107	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_46
0x4009491	     0xf8588030000	                           jne 0x400981f	      2107	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_46
0x4009497	        0x41833f03	                      cmp dword [r15], 3	      2105	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32
0x400949b	            0x751d	                           jne 0x40094ba	      2105	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32
0x400949d	      0x48837b5000	               cmp qword [rbx + 0x50], 0	      2106	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_45
0x40094a2	        0x400f94c6	                                sete sil	      2106	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_45
0x40094a6	        0x400fb6f6	                          movzx esi, sil	      2106	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_45
0x40094aa	          0x4c89e7	                            mov rdi, r12	      2106	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_45
0x40094ad	      0xe800000000	                          call 0x40094b2	      2106	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_45
0x40094b2	            0x85c0	                           test eax, eax	      2106	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_45
0x40094b4	     0xf8546030000	                           jne 0x4009800	      2106	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_45
0x40094ba	          0x4c89e7	                            mov rdi, r12	      2107	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_46
0x40094bd	      0xe800000000	                          call 0x40094c2	      2107	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_46
0x40094c2	            0x85c0	                           test eax, eax	      2107	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_46
0x40094c4	           0xf94c0	                                 sete al	      2107	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_46
0x40094c7	           0xfb6c0	                           movzx eax, al	      2107	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_46
0x40094ca	          0x83fdff	             cmp ebp, 0xffffffffffffffff	      2108	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	IF_34
0x40094cd	            0x7507	                           jne 0x40094d6	      2108	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	IF_34
0x40094cf	            0xeb11	                           jmp 0x40094e2	      2108	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	IF_34
0x40094d1	      0xb801000000	                              mov eax, 1	      2107	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_46
0x40094d6	          0x4863d5	                         movsxd rdx, ebp	      2109	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	IF_34
0x40094d9	       0xfb674240c	            movzx esi, byte [rsp + 0xc] 	      2109	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	IF_34
0x40094de	        0x41883414	               mov byte [r12 + rdx], sil	      2109	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	IF_34
0x40094e2	            0x85c0	                           test eax, eax	      2110	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	IF_35
0x40094e4	     0xf85fc020000	                           jne 0x40097e6	      2110	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	IF_35
0x40094ea	        0x488b4350	            mov rax, qword [rbx + 0x50] 	      2114	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36
0x40094ee	          0x4885c0	                           test rax, rax	      2114	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36
0x40094f1	     0xf85cd000000	                           jne 0x40095c4	      2114	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36
0x40094f7	    0x48817b480000	               cmp qword [rbx + 0x48], 0	      2117	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_37
0x40094ff	            0x7529	                           jne 0x400952a	      2117	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_37
0x4009501	      0xba05000000	                              mov edx, 5	      2119	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_37	CALL_48
0x4009506	      0xbe00000000	                              mov esi, 0	      2119	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_37	CALL_48
0x400950b	      0xbf00000000	                              mov edi, 0	      2119	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_37	CALL_48
0x4009510	      0xe800000000	                          call 0x4009515	      2119	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_37	CALL_48
0x4009515	          0x4c89f6	                            mov rsi, r14	      2119	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_37	CALL_48
0x4009518	          0x4889c7	                            mov rdi, rax	      2119	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_37	CALL_48
0x400951b	      0xe800000000	                          call 0x4009520	      2119	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_37	CALL_48
0x4009520	      0xbd00000000	                              mov ebp, 0	      2120	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_37
0x4009525	      0xe9c1020000	                           jmp 0x40097eb	      2120	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_37
0x400952a	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      2124	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_38
0x400952f	           0xfb600	                   movzx eax, byte [rax]	      2124	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_38
0x4009532	            0x3c5b	                            cmp al, 0x5b	      2124	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_38
0x4009534	           0xf94c2	                                 sete dl	      2124	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_38
0x4009537	            0x3c2e	                            cmp al, 0x2e	      2124	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_38
0x4009539	           0xf94c0	                                 sete al	      2124	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_38
0x400953c	             0x8c2	                               or dl, al	      2124	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_38
0x400953e	            0x7506	                           jne 0x4009546	      2124	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_38
0x4009540	        0x833c2400	                      cmp dword [rsp], 0	      2124	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_38
0x4009544	            0x743a	                            je 0x4009580	      2124	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_38
0x4009546	      0x837c240400	                  cmp dword [rsp + 4], 0	      2126	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_38	IF_39
0x400954b	            0x751f	                           jne 0x400956c	      2126	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_38	IF_39
0x400954d	      0xba05000000	                              mov edx, 5	      2127	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_38	CALL_50
0x4009552	      0xbe00000000	                              mov esi, 0	      2127	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_38	CALL_50
0x4009557	      0xbf00000000	                              mov edi, 0	      2127	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_38	CALL_50
0x400955c	      0xe800000000	                          call 0x4009561	      2127	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_38	CALL_50
0x4009561	          0x4c89e6	                            mov rsi, r12	      2127	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_38	CALL_50
0x4009564	          0x4889c7	                            mov rdi, rax	      2127	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_38	CALL_50
0x4009567	      0xe800000000	                          call 0x400956c	      2127	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_38	CALL_50
0x400956c	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      2128	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_38	CALL_51
0x4009571	      0xe800000000	                          call 0x4009576	      2128	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_38	CALL_51
0x4009576	      0xbd00000000	                              mov ebp, 0	      2129	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_38
0x400957b	      0xe96b020000	                           jmp 0x40097eb	      2129	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_38
0x4009580	          0x83fdff	             cmp ebp, 0xffffffffffffffff	      2131	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_40
0x4009583	            0x750e	                           jne 0x4009593	      2131	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_40
0x4009585	          0x4c89e7	                            mov rdi, r12	      2132	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	CALL_52
0x4009588	      0xe800000000	                          call 0x400958d	      2132	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	CALL_52
0x400958d	        0x48894358	             mov qword [rbx + 0x58], rax	      2132	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	CALL_52
0x4009591	            0xeb0e	                           jmp 0x40095a1	      2132	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	CALL_52
0x4009593	            0x89ee	                            mov esi, ebp	      2134	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	CALL_53
0x4009595	          0x4c89e7	                            mov rdi, r12	      2134	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	CALL_53
0x4009598	      0xe800000000	                          call 0x400959d	      2134	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	CALL_53
0x400959d	        0x48894358	             mov qword [rbx + 0x58], rax	      2134	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	CALL_53
0x40095a1	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      2135	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	CALL_54
0x40095a6	      0xe800000000	                          call 0x40095ab	      2135	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	CALL_54
0x40095ab	      0x48837b5800	               cmp qword [rbx + 0x58], 0	      2136	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_41
0x40095b0	     0xf8511020000	                           jne 0x40097c7	      2136	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_41
0x40095b6	    0x48c744241000	               mov qword [rsp + 0x10], 0	      2137	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_41
0x40095bf	      0xe903020000	                           jmp 0x40097c7	      2137	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_41
0x40095c4	      0x837c240800	                  cmp dword [rsp + 8], 0	      2141	eval.c	FUNCTION_44	WHILE_1	IF_29	ELSE_8	IF_42
0x40095c9	            0x7529	                           jne 0x40095f4	      2141	eval.c	FUNCTION_44	WHILE_1	IF_29	ELSE_8	IF_42
0x40095cb	         0xfb67810	           movzx edi, byte [rax + 0x10] 	      2142	eval.c	FUNCTION_44	WHILE_1	IF_29	ELSE_8	IF_42	CALL_55
0x40095cf	      0xba00000000	                              mov edx, 0	      2142	eval.c	FUNCTION_44	WHILE_1	IF_29	ELSE_8	IF_42	CALL_55
0x40095d4	          0x4c89f6	                            mov rsi, r14	      2142	eval.c	FUNCTION_44	WHILE_1	IF_29	ELSE_8	IF_42	CALL_55
0x40095d7	      0xe800000000	                          call 0x40095dc	      2142	eval.c	FUNCTION_44	WHILE_1	IF_29	ELSE_8	IF_42	CALL_55
0x40095dc	            0x85c0	                           test eax, eax	      2142	eval.c	FUNCTION_44	WHILE_1	IF_29	ELSE_8	IF_42	CALL_55
0x40095de	            0x7414	                            je 0x40095f4	      2142	eval.c	FUNCTION_44	WHILE_1	IF_29	ELSE_8	IF_42	CALL_55
0x40095e0	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      2144	eval.c	FUNCTION_44	WHILE_1	IF_29	ELSE_8	IF_42	CALL_56
0x40095e5	      0xe800000000	                          call 0x40095ea	      2144	eval.c	FUNCTION_44	WHILE_1	IF_29	ELSE_8	IF_42	CALL_56
0x40095ea	      0xbd00000000	                              mov ebp, 0	      2145	eval.c	FUNCTION_44	WHILE_1	IF_29	ELSE_8	IF_42
0x40095ef	      0xe9f7010000	                           jmp 0x40097eb	      2145	eval.c	FUNCTION_44	WHILE_1	IF_29	ELSE_8	IF_42
0x40095f4	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      2148	eval.c	FUNCTION_44	WHILE_1	IF_29	CALL_57
0x40095f9	      0xe800000000	                          call 0x40095fe	      2148	eval.c	FUNCTION_44	WHILE_1	IF_29	CALL_57
0x40095fe	        0x488b4350	            mov rax, qword [rbx + 0x50] 	      2149	eval.c	FUNCTION_44	WHILE_1	IF_29
0x4009602	        0x48894310	             mov qword [rbx + 0x10], rax	      2149	eval.c	FUNCTION_44	WHILE_1	IF_29
0x4009606	      0xe99b010000	                           jmp 0x40097a6	      2149	eval.c	FUNCTION_44	WHILE_1	IF_29
0x400960b	          0x4585ed	                         test r13d, r13d	      2156	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_43
0x400960e	            0x740a	                            je 0x400961a	      2156	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_43
0x4009610	    0x48c743300000	               mov qword [rbx + 0x30], 0	      2157	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_43
0x4009618	            0xeb0e	                           jmp 0x4009628	      2157	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_43
0x400961a	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      2160	eval.c	FUNCTION_44	WHILE_1	ELSE_9	CALL_58
0x400961f	      0xe800000000	                          call 0x4009624	      2160	eval.c	FUNCTION_44	WHILE_1	ELSE_9	CALL_58
0x4009624	        0x48894330	             mov qword [rbx + 0x30], rax	      2160	eval.c	FUNCTION_44	WHILE_1	ELSE_9	CALL_58
0x4009628	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      2161	eval.c	FUNCTION_44	WHILE_1	ELSE_9	CALL_59
0x400962d	      0xe800000000	                          call 0x4009632	      2161	eval.c	FUNCTION_44	WHILE_1	ELSE_9	CALL_59
0x4009632	    0x48c743480000	               mov qword [rbx + 0x48], 0	      2163	eval.c	FUNCTION_44	WHILE_1	ELSE_9
0x400963a	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      2164	eval.c	FUNCTION_44	WHILE_1	ELSE_9
0x400963e	        0x488b7808	                mov rdi, qword [rax + 8]	      2164	eval.c	FUNCTION_44	WHILE_1	ELSE_9
0x4009642	        0x48897b20	             mov qword [rbx + 0x20], rdi	      2164	eval.c	FUNCTION_44	WHILE_1	ELSE_9
0x4009646	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	      2165	eval.c	FUNCTION_44	WHILE_1	ELSE_9	CALL_60
0x400964a	      0xe800000000	                          call 0x400964f	      2165	eval.c	FUNCTION_44	WHILE_1	ELSE_9	CALL_60
0x400964f	        0x48894318	             mov qword [rbx + 0x18], rax	      2165	eval.c	FUNCTION_44	WHILE_1	ELSE_9	CALL_60
0x4009653	          0x4885c0	                           test rax, rax	      2166	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_44
0x4009656	            0x7568	                           jne 0x40096c0	      2166	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_44
0x4009658	      0x48837b3000	               cmp qword [rbx + 0x30], 0	      2168	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_44	IF_45
0x400965d	            0x791f	                           jns 0x400967e	      2168	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_44	IF_45
0x400965f	    0x48c743300000	               mov qword [rbx + 0x30], 0	      2170	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_44	IF_45
0x4009667	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      2171	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_44	IF_45	CALL_61
0x400966b	      0xbe00000000	                              mov esi, 0	      2171	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_44	IF_45	CALL_61
0x4009670	      0xe800000000	                          call 0x4009675	      2171	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_44	IF_45	CALL_61
0x4009675	        0x48894318	             mov qword [rbx + 0x18], rax	      2171	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_44	IF_45	CALL_61
0x4009679	          0x4885c0	                           test rax, rax	      2174	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_46
0x400967c	            0x7542	                           jne 0x40096c0	      2174	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_46
0x400967e	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      2176	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_46	CALL_62
0x4009683	      0xe800000000	                          call 0x4009688	      2176	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_46	CALL_62
0x4009688	      0xbd00000000	                              mov ebp, 0	      2179	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_46
0x400968d	      0x837c240400	                  cmp dword [rsp + 4], 0	      2177	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_46	IF_47
0x4009692	     0xf8553010000	                           jne 0x40097eb	      2177	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_46	IF_47
0x4009698	        0x488b5b30	            mov rbx, qword [rbx + 0x30] 	      2178	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_46	CALL_64
0x400969c	      0xba05000000	                              mov edx, 5	      2178	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_46	CALL_64
0x40096a1	      0xbe00000000	                              mov esi, 0	      2178	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_46	CALL_64
0x40096a6	      0xbf00000000	                              mov edi, 0	      2178	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_46	CALL_64
0x40096ab	      0xe800000000	                          call 0x40096b0	      2178	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_46	CALL_64
0x40096b0	          0x4889de	                            mov rsi, rbx	      2178	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_46	CALL_64
0x40096b3	          0x4889c7	                            mov rdi, rax	      2178	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_46	CALL_64
0x40096b6	      0xe800000000	                          call 0x40096bb	      2178	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_46	CALL_64
0x40096bb	      0xe92b010000	                           jmp 0x40097eb	      2178	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_46	CALL_64
0x40096c0	        0x837b2800	               cmp dword [rbx + 0x28], 0	      2188	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48
0x40096c4	     0xf84d0000000	                            je 0x400979a	      2188	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48
0x40096ca	        0x837b4000	               cmp dword [rbx + 0x40], 0	      2188	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48
0x40096ce	     0xf85c6000000	                           jne 0x400979a	      2188	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48
0x40096d4	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      2190	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	CALL_65
0x40096d9	      0xe800000000	                          call 0x40096de	      2190	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	CALL_65
0x40096de	        0x48894338	             mov qword [rbx + 0x38], rax	      2190	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	CALL_65
0x40096e2	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      2192	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	CALL_66
0x40096e7	      0xe800000000	                          call 0x40096ec	      2192	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	CALL_66
0x40096ec	        0x488b7338	            mov rsi, qword [rbx + 0x38] 	      2193	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_49
0x40096f0	          0x4885f6	                           test rsi, rsi	      2193	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_49
0x40096f3	            0x7956	                           jns 0x400974b	      2193	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_49
0x40096f5	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      2195	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_49	CALL_67
0x40096f9	      0xe800000000	                          call 0x40096fe	      2195	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_49	CALL_67
0x40096fe	          0x4885c0	                           test rax, rax	      2196	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_49	IF_50
0x4009701	            0x7538	                           jne 0x400973b	      2196	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_49	IF_50
0x4009703	      0xbd00000000	                              mov ebp, 0	      2200	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_49	IF_50
0x4009708	      0x837c240400	                  cmp dword [rsp + 4], 0	      2198	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_49	IF_50	IF_51
0x400970d	     0xf85d8000000	                           jne 0x40097eb	      2198	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_49	IF_50	IF_51
0x4009713	        0x488b5b38	            mov rbx, qword [rbx + 0x38] 	      2199	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_49	IF_50	CALL_69
0x4009717	      0xba05000000	                              mov edx, 5	      2199	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_49	IF_50	CALL_69
0x400971c	      0xbe00000000	                              mov esi, 0	      2199	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_49	IF_50	CALL_69
0x4009721	      0xbf00000000	                              mov edi, 0	      2199	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_49	IF_50	CALL_69
0x4009726	      0xe800000000	                          call 0x400972b	      2199	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_49	IF_50	CALL_69
0x400972b	          0x4889de	                            mov rsi, rbx	      2199	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_49	IF_50	CALL_69
0x400972e	          0x4889c7	                            mov rdi, rax	      2199	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_49	IF_50	CALL_69
0x4009731	      0xe800000000	                          call 0x4009736	      2199	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_49	IF_50	CALL_69
0x4009736	      0xe9b0000000	                           jmp 0x40097eb	      2199	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_49	IF_50	CALL_69
0x400973b	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      2202	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_49	CALL_70
0x400973f	          0x4889c6	                            mov rsi, rax	      2202	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_49	CALL_70
0x4009742	      0xe800000000	                          call 0x4009747	      2202	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_49	CALL_70
0x4009747	        0x48894338	             mov qword [rbx + 0x38], rax	      2202	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_49	CALL_70
0x400974b	      0x48837b3000	               cmp qword [rbx + 0x30], 0	      2206	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_52
0x4009750	            0x7911	                           jns 0x4009763	      2206	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_52
0x4009752	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	      2207	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	CALL_71
0x4009756	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      2207	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	CALL_71
0x400975a	      0xe800000000	                          call 0x400975f	      2207	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	CALL_71
0x400975f	        0x48894330	             mov qword [rbx + 0x30], rax	      2207	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	CALL_71
0x4009763	        0x4c8b6338	            mov r12, qword [rbx + 0x38] 	      2208	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_53
0x4009767	        0x4c3b6330	            cmp r12, qword [rbx + 0x30] 	      2208	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_53
0x400976b	            0x7d2d	                           jge 0x400979a	      2208	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_53
0x400976d	      0xbd00000000	                              mov ebp, 0	      2212	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_53
0x4009772	      0x837c240400	                  cmp dword [rsp + 4], 0	      2210	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_53	IF_54
0x4009777	            0x7572	                           jne 0x40097eb	      2210	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_53	IF_54
0x4009779	      0xba05000000	                              mov edx, 5	      2211	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_53	CALL_73
0x400977e	      0xbe00000000	                              mov esi, 0	      2211	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_53	CALL_73
0x4009783	      0xbf00000000	                              mov edi, 0	      2211	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_53	CALL_73
0x4009788	      0xe800000000	                          call 0x400978d	      2211	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_53	CALL_73
0x400978d	          0x4c89e6	                            mov rsi, r12	      2211	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_53	CALL_73
0x4009790	          0x4889c7	                            mov rdi, rax	      2211	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_53	CALL_73
0x4009793	      0xe800000000	                          call 0x4009798	      2211	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_53	CALL_73
0x4009798	            0xeb51	                           jmp 0x40097eb	      2211	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_53	CALL_73
0x400979a	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      2216	eval.c	FUNCTION_44	WHILE_1	ELSE_9
0x400979e	        0x4883c010	                           add rax, 0x10	      2216	eval.c	FUNCTION_44	WHILE_1	ELSE_9
0x40097a2	        0x48894310	             mov qword [rbx + 0x10], rax	      2216	eval.c	FUNCTION_44	WHILE_1	ELSE_9
0x40097a6	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1968	eval.c	FUNCTION_44	WHILE_1
0x40097ab	           0xfb607	                   movzx eax, byte [rdi]	      1968	eval.c	FUNCTION_44	WHILE_1
0x40097ae	            0x3c5b	                            cmp al, 0x5b	      1968	eval.c	FUNCTION_44	WHILE_1
0x40097b0	     0xf845bf9ffff	                            je 0x4009111	      1968	eval.c	FUNCTION_44	WHILE_1
0x40097b6	            0x3c2e	                            cmp al, 0x2e	      1968	eval.c	FUNCTION_44	WHILE_1
0x40097b8	            0x750d	                           jne 0x40097c7	      1968	eval.c	FUNCTION_44	WHILE_1
0x40097ba	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      1968	eval.c	FUNCTION_44	WHILE_1
0x40097be	          0x833a06	                      cmp dword [rdx], 6	      1968	eval.c	FUNCTION_44	WHILE_1
0x40097c1	     0xf8467f9ffff	                            je 0x400912e	      1968	eval.c	FUNCTION_44	WHILE_1
0x40097c7	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      2220	eval.c	FUNCTION_44	CALL_74
0x40097cc	      0xe800000000	                          call 0x40097d1	      2220	eval.c	FUNCTION_44	CALL_74
0x40097d1	      0x488b6c2410	            mov rbp, qword [rsp + 0x10] 	      2221	eval.c	FUNCTION_44
0x40097d6	            0xeb13	                           jmp 0x40097eb	      2221	eval.c	FUNCTION_44
0x40097d8	      0xbd00000000	                              mov ebp, 0	      1960	eval.c	FUNCTION_44	IF_8
0x40097dd	            0xeb0c	                           jmp 0x40097eb	      1960	eval.c	FUNCTION_44	IF_8
0x40097df	      0xbd00000000	                              mov ebp, 0	      2009	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_3	IF_17
0x40097e4	            0xeb05	                           jmp 0x40097eb	      2009	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_3	IF_17
0x40097e6	      0xbd00000000	                              mov ebp, 0	      2111	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	IF_35
0x40097eb	          0x4889e8	                            mov rax, rbp	      2222	eval.c	FUNCTION_44
0x40097ee	      0x488b742458	            mov rsi, qword [rsp + 0x58] 	      2222	eval.c	FUNCTION_44
0x40097f3	    0x644833342528	                xor rsi, qword fs:[0x28]	      2222	eval.c	FUNCTION_44
0x40097fc	            0x7468	                            je 0x4009866	      2222	eval.c	FUNCTION_44
0x40097fe	            0xeb61	                           jmp 0x4009861	      2222	eval.c	FUNCTION_44
0x4009800	          0x83fdff	             cmp ebp, 0xffffffffffffffff	      2108	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	IF_34
0x4009803	     0xf85c8fcffff	                           jne 0x40094d1	      2108	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	IF_34
0x4009809	      0xbd00000000	                              mov ebp, 0	      2111	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	IF_35
0x400980e	            0xebdb	                           jmp 0x40097eb	      2111	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	IF_35
0x4009810	        0x837b2800	               cmp dword [rbx + 0x28], 0	      1978	eval.c	FUNCTION_44	WHILE_1	IF_11
0x4009814	     0xf8407faffff	                            je 0x4009221	      1978	eval.c	FUNCTION_44	WHILE_1	IF_11
0x400981a	      0xe94df9ffff	                           jmp 0x400916c	      1978	eval.c	FUNCTION_44	WHILE_1	IF_11
0x400981f	          0x4c89e7	                            mov rdi, r12	      2107	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_46
0x4009822	      0xe800000000	                          call 0x4009827	      2107	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_46
0x4009827	            0x85c0	                           test eax, eax	      2107	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_46
0x4009829	           0xf94c0	                                 sete al	      2107	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_46
0x400982c	           0xfb6c0	                           movzx eax, al	      2107	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_46
0x400982f	      0xe9a2fcffff	                           jmp 0x40094d6	      2107	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_46
0x4009834	          0x4c89e7	                            mov rdi, r12	      2107	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_46
0x4009837	      0xe800000000	                          call 0x400983c	      2107	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_46
0x400983c	            0x85c0	                           test eax, eax	      2107	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_46
0x400983e	           0xf94c0	                                 sete al	      2107	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_46
0x4009841	           0xfb6c0	                           movzx eax, al	      2107	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_46
0x4009844	      0xe999fcffff	                           jmp 0x40094e2	      2107	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_46
0x4009849	        0x488b4348	            mov rax, qword [rbx + 0x48] 	      2104	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32
0x400984d	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      2103	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	ELSE_6
0x4009855	        0x80780102	                   cmp byte [rax + 1], 2	      2107	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_46
0x4009859	     0xf8438fcffff	                            je 0x4009497	      2107	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_46
0x400985f	            0xebd3	                           jmp 0x4009834	      2107	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_46
0x4009861	      0xe800000000	                          call 0x4009866	      2222	eval.c	FUNCTION_44
0x4009866	        0x4883c468	                           add rsp, 0x68	      2222	eval.c	FUNCTION_44
0x400986a	              0x5b	                                 pop rbx	      2222	eval.c	FUNCTION_44
0x400986b	              0x5d	                                 pop rbp	      2222	eval.c	FUNCTION_44
0x400986c	            0x415c	                                 pop r12	      2222	eval.c	FUNCTION_44
0x400986e	            0x415d	                                 pop r13	      2222	eval.c	FUNCTION_44
0x4009870	            0x415e	                                 pop r14	      2222	eval.c	FUNCTION_44
0x4009872	            0x415f	                                 pop r15	      2222	eval.c	FUNCTION_44
0x4009874	              0xc3	                                     ret	      2222	eval.c	FUNCTION_44
get_tv_string_buf	FOR,0:SWITCH,0:DO,0:IF,0:functions,0:WHILE,0:CALL,1:ELSE,0	7
0x4002f4c	        0x4883ec08	                              sub rsp, 8	      7084	eval.c	FUNCTION_128
0x4002f50	      0xe800000000	                          call 0x4002f55	      7085	eval.c	FUNCTION_128	CALL_1
0x4002f55	          0x4885c0	                           test rax, rax	      7087	eval.c	FUNCTION_128
0x4002f58	      0xba00000000	                              mov edx, 0	      7087	eval.c	FUNCTION_128
0x4002f5d	        0x480f44c2	                          cmove rax, rdx	      7087	eval.c	FUNCTION_128
0x4002f61	        0x4883c408	                              add rsp, 8	      7088	eval.c	FUNCTION_128
0x4002f65	              0xc3	                                     ret	      7088	eval.c	FUNCTION_128
skip_expr	FOR,0:SWITCH,0:DO,0:IF,0:functions,0:WHILE,0:CALL,2:ELSE,0	20
0x4007e01	              0x53	                                push rbx	       794	eval.c	FUNCTION_17
0x4007e02	        0x4883ec20	                           sub rsp, 0x20	       794	eval.c	FUNCTION_17
0x4007e06	          0x4889fb	                            mov rbx, rdi	       794	eval.c	FUNCTION_17
0x4007e09	    0x64488b042528	                mov rax, qword fs:[0x28]	       794	eval.c	FUNCTION_17
0x4007e12	      0x4889442418	             mov qword [rsp + 0x18], rax	       794	eval.c	FUNCTION_17
0x4007e17	            0x31c0	                            xor eax, eax	       794	eval.c	FUNCTION_17
0x4007e19	          0x488b3f	                    mov rdi, qword [rdi]	       797	eval.c	FUNCTION_17	CALL_1
0x4007e1c	      0xe800000000	                          call 0x4007e21	       797	eval.c	FUNCTION_17	CALL_1
0x4007e21	          0x488903	                    mov qword [rbx], rax	       797	eval.c	FUNCTION_17	CALL_1
0x4007e24	      0xba00000000	                              mov edx, 0	       798	eval.c	FUNCTION_17	CALL_2
0x4007e29	          0x4889e6	                            mov rsi, rsp	       798	eval.c	FUNCTION_17	CALL_2
0x4007e2c	          0x4889df	                            mov rdi, rbx	       798	eval.c	FUNCTION_17	CALL_2
0x4007e2f	      0xe800000000	                          call 0x4007e34	       798	eval.c	FUNCTION_17	CALL_2
0x4007e34	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       799	eval.c	FUNCTION_17
0x4007e39	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       799	eval.c	FUNCTION_17
0x4007e42	            0x7405	                            je 0x4007e49	       799	eval.c	FUNCTION_17
0x4007e44	      0xe800000000	                          call 0x4007e49	       799	eval.c	FUNCTION_17
0x4007e49	        0x4883c420	                           add rsp, 0x20	       799	eval.c	FUNCTION_17
0x4007e4d	              0x5b	                                 pop rbx	       799	eval.c	FUNCTION_17
0x4007e4e	              0xc3	                                     ret	       799	eval.c	FUNCTION_17
set_vim_var_list	FOR,0:SWITCH,0:DO,0:IF,1:functions,0:WHILE,0:CALL,1:ELSE,0	19
0x400295b	              0x55	                                push rbp	      6488	eval.c	FUNCTION_110
0x400295c	              0x53	                                push rbx	      6488	eval.c	FUNCTION_110
0x400295d	        0x4883ec08	                              sub rsp, 8	      6488	eval.c	FUNCTION_110
0x4002961	          0x4889f5	                            mov rbp, rsi	      6488	eval.c	FUNCTION_110
0x4002964	          0x4863df	                         movsxd rbx, edi	      6489	eval.c	FUNCTION_110	CALL_1
0x4002967	    0x488d04dd0000	                        lea rax, [rbx*8]	      6489	eval.c	FUNCTION_110	CALL_1
0x400296f	        0x48c1e306	                              shl rbx, 6	      6489	eval.c	FUNCTION_110	CALL_1
0x4002973	          0x4829c3	                            sub rbx, rax	      6489	eval.c	FUNCTION_110	CALL_1
0x4002976	    0x488dbb000000	                          lea rdi, [rbx]	      6489	eval.c	FUNCTION_110	CALL_1
0x400297d	      0xe800000000	                          call 0x4002982	      6489	eval.c	FUNCTION_110	CALL_1
0x4002982	    0xc78300000000	                      mov dword [rbx], 5	      6490	eval.c	FUNCTION_110
0x400298c	    0x4889ab000000	                    mov qword [rbx], rbp	      6491	eval.c	FUNCTION_110
0x4002993	          0x4885ed	                           test rbp, rbp	      6492	eval.c	FUNCTION_110	IF_1
0x4002996	            0x7404	                            je 0x400299c	      6492	eval.c	FUNCTION_110	IF_1
0x4002998	        0x83453801	               add dword [rbp + 0x38], 1	      6493	eval.c	FUNCTION_110	IF_1
0x400299c	        0x4883c408	                              add rsp, 8	      6494	eval.c	FUNCTION_110
0x40029a0	              0x5b	                                 pop rbx	      6494	eval.c	FUNCTION_110
0x40029a1	              0x5d	                                 pop rbp	      6494	eval.c	FUNCTION_110
0x40029a2	              0xc3	                                     ret	      6494	eval.c	FUNCTION_110
get_name_len	FOR,0:SWITCH,0:DO,0:IF,6:functions,0:WHILE,0:CALL,10:ELSE,0	106
0x400884c	            0x4157	                                push r15	      6144	eval.c	FUNCTION_97
0x400884e	            0x4156	                                push r14	      6144	eval.c	FUNCTION_97
0x4008850	            0x4155	                                push r13	      6144	eval.c	FUNCTION_97
0x4008852	            0x4154	                                push r12	      6144	eval.c	FUNCTION_97
0x4008854	              0x55	                                push rbp	      6144	eval.c	FUNCTION_97
0x4008855	              0x53	                                push rbx	      6144	eval.c	FUNCTION_97
0x4008856	        0x4883ec28	                           sub rsp, 0x28	      6144	eval.c	FUNCTION_97
0x400885a	          0x4889fb	                            mov rbx, rdi	      6144	eval.c	FUNCTION_97
0x400885d	          0x4989f4	                            mov r12, rsi	      6144	eval.c	FUNCTION_97
0x4008860	          0x4189d5	                           mov r13d, edx	      6144	eval.c	FUNCTION_97
0x4008863	          0x4189ce	                           mov r14d, ecx	      6144	eval.c	FUNCTION_97
0x4008866	    0x64488b042528	                mov rax, qword fs:[0x28]	      6144	eval.c	FUNCTION_97
0x400886f	      0x4889442418	             mov qword [rsp + 0x18], rax	      6144	eval.c	FUNCTION_97
0x4008874	            0x31c0	                            xor eax, eax	      6144	eval.c	FUNCTION_97
0x4008876	    0x48c706000000	                      mov qword [rsi], 0	      6150	eval.c	FUNCTION_97
0x400887d	          0x488b3f	                    mov rdi, qword [rdi]	      6152	eval.c	FUNCTION_97	IF_1
0x4008880	          0x803f80	                    cmp byte [rdi], 0x80	      6152	eval.c	FUNCTION_97	IF_1
0x4008883	            0x7523	                           jne 0x40088a8	      6152	eval.c	FUNCTION_97	IF_1
0x4008885	        0x807f01fd	                cmp byte [rdi + 1], 0xfd	      6152	eval.c	FUNCTION_97	IF_1
0x4008889	            0x751d	                           jne 0x40088a8	      6152	eval.c	FUNCTION_97	IF_1
0x400888b	        0x807f0252	                cmp byte [rdi + 2], 0x52	      6153	eval.c	FUNCTION_97	IF_1
0x400888f	            0x7517	                           jne 0x40088a8	      6153	eval.c	FUNCTION_97	IF_1
0x4008891	        0x4883c703	                              add rdi, 3	      6156	eval.c	FUNCTION_97	IF_1
0x4008895	          0x48893b	                    mov qword [rbx], rdi	      6156	eval.c	FUNCTION_97	IF_1
0x4008898	          0x4889df	                            mov rdi, rbx	      6157	eval.c	FUNCTION_97	IF_1	CALL_1
0x400889b	      0xe800000000	                          call 0x40088a0	      6157	eval.c	FUNCTION_97	IF_1	CALL_1
0x40088a0	          0x83c003	                              add eax, 3	      6157	eval.c	FUNCTION_97	IF_1	CALL_1
0x40088a3	      0xe9e5000000	                           jmp 0x400898d	      6157	eval.c	FUNCTION_97	IF_1	CALL_1
0x40088a8	      0xe800000000	                          call 0x40088ad	      6159	eval.c	FUNCTION_97	CALL_2
0x40088ad	            0x89c5	                            mov ebp, eax	      6159	eval.c	FUNCTION_97	CALL_2
0x40088af	      0xb902000000	                              mov ecx, 2	      6169	eval.c	FUNCTION_97	CALL_3
0x40088b4	            0x85c0	                           test eax, eax	      6160	eval.c	FUNCTION_97	IF_2
0x40088b6	            0x7e0a	                           jle 0x40088c2	      6160	eval.c	FUNCTION_97	IF_2
0x40088b8	            0x4898	                                    cdqe	      6163	eval.c	FUNCTION_97	IF_2
0x40088ba	          0x480103	                    add qword [rbx], rax	      6163	eval.c	FUNCTION_97	IF_2
0x40088bd	      0xb900000000	                              mov ecx, 0	      6169	eval.c	FUNCTION_97	CALL_3
0x40088c2	      0x488d542410	                   lea rdx, [rsp + 0x10]	      6169	eval.c	FUNCTION_97	CALL_3
0x40088c7	      0x488d742408	                      lea rsi, [rsp + 8]	      6169	eval.c	FUNCTION_97	CALL_3
0x40088cc	          0x488b3b	                    mov rdi, qword [rbx]	      6169	eval.c	FUNCTION_97	CALL_3
0x40088cf	      0xe800000000	                          call 0x40088d4	      6169	eval.c	FUNCTION_97	CALL_3
0x40088d4	          0x4989c7	                            mov r15, rax	      6169	eval.c	FUNCTION_97	CALL_3
0x40088d7	      0x488b742408	                mov rsi, qword [rsp + 8]	      6171	eval.c	FUNCTION_97	IF_3
0x40088dc	          0x4885f6	                           test rsi, rsi	      6171	eval.c	FUNCTION_97	IF_3
0x40088df	            0x7465	                            je 0x4008946	      6171	eval.c	FUNCTION_97	IF_3
0x40088e1	          0x4585ed	                         test r13d, r13d	      6175	eval.c	FUNCTION_97	IF_3	IF_4
0x40088e4	            0x7517	                           jne 0x40088fd	      6175	eval.c	FUNCTION_97	IF_3	IF_4
0x40088e6	          0x482b03	                    sub rax, qword [rbx]	      6177	eval.c	FUNCTION_97	IF_3	IF_4
0x40088e9	             0x1c5	                            add ebp, eax	      6177	eval.c	FUNCTION_97	IF_3	IF_4
0x40088eb	          0x4c89ff	                            mov rdi, r15	      6178	eval.c	FUNCTION_97	IF_3	IF_4	CALL_4
0x40088ee	      0xe800000000	                          call 0x40088f3	      6178	eval.c	FUNCTION_97	IF_3	IF_4	CALL_4
0x40088f3	          0x488903	                    mov qword [rbx], rax	      6178	eval.c	FUNCTION_97	IF_3	IF_4	CALL_4
0x40088f6	            0x89e8	                            mov eax, ebp	      6179	eval.c	FUNCTION_97	IF_3	IF_4
0x40088f8	      0xe990000000	                           jmp 0x400898d	      6179	eval.c	FUNCTION_97	IF_3	IF_4
0x40088fd	          0x4863ed	                         movsxd rbp, ebp	      6186	eval.c	FUNCTION_97	IF_3	CALL_5
0x4008900	          0x488b3b	                    mov rdi, qword [rbx]	      6186	eval.c	FUNCTION_97	IF_3	CALL_5
0x4008903	          0x4829ef	                            sub rdi, rbp	      6186	eval.c	FUNCTION_97	IF_3	CALL_5
0x4008906	          0x4889c1	                            mov rcx, rax	      6186	eval.c	FUNCTION_97	IF_3	CALL_5
0x4008909	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      6186	eval.c	FUNCTION_97	IF_3	CALL_5
0x400890e	      0xe8abfdffff	             call sym.make_expanded_name	      6186	eval.c	FUNCTION_97	IF_3	CALL_5
0x4008913	          0x4889c5	                            mov rbp, rax	      6186	eval.c	FUNCTION_97	IF_3	CALL_5
0x4008916	          0x4885c0	                           test rax, rax	      6187	eval.c	FUNCTION_97	IF_3	IF_5
0x4008919	            0x7468	                            je 0x4008983	      6187	eval.c	FUNCTION_97	IF_3	IF_5
0x400891b	        0x49890424	                    mov qword [r12], rax	      6189	eval.c	FUNCTION_97	IF_3
0x400891f	          0x4c89ff	                            mov rdi, r15	      6190	eval.c	FUNCTION_97	IF_3	CALL_6
0x4008922	      0xe800000000	                          call 0x4008927	      6190	eval.c	FUNCTION_97	IF_3	CALL_6
0x4008927	          0x488903	                    mov qword [rbx], rax	      6190	eval.c	FUNCTION_97	IF_3	CALL_6
0x400892a	      0xb800000000	                              mov eax, 0	      6191	eval.c	FUNCTION_97	IF_3	CALL_7
0x400892f	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      6191	eval.c	FUNCTION_97	IF_3	CALL_7
0x4008936	          0x4889ef	                            mov rdi, rbp	      6191	eval.c	FUNCTION_97	IF_3	CALL_7
0x4008939	            0xf2ae	              repne scasb al, byte [rdi]	      6191	eval.c	FUNCTION_97	IF_3	CALL_7
0x400893b	          0x4889c8	                            mov rax, rcx	      6191	eval.c	FUNCTION_97	IF_3	CALL_7
0x400893e	          0x48f7d0	                                 not rax	      6191	eval.c	FUNCTION_97	IF_3	CALL_7
0x4008941	          0x8d40ff	                      lea eax, [rax - 1]	      6191	eval.c	FUNCTION_97	IF_3	CALL_7
0x4008944	            0xeb47	                           jmp 0x400898d	      6191	eval.c	FUNCTION_97	IF_3	CALL_7
0x4008946	          0x4889df	                            mov rdi, rbx	      6194	eval.c	FUNCTION_97	CALL_8
0x4008949	      0xe800000000	                          call 0x400894e	      6194	eval.c	FUNCTION_97	CALL_8
0x400894e	      0x448d640500	                   lea r12d, [rbp + rax]	      6195	eval.c	FUNCTION_97	IF_6
0x4008953	             0x1c5	                            add ebp, eax	      6195	eval.c	FUNCTION_97	IF_6
0x4008955	            0x7533	                           jne 0x400898a	      6195	eval.c	FUNCTION_97	IF_6
0x4008957	          0x4585f6	                         test r14d, r14d	      6195	eval.c	FUNCTION_97	IF_6
0x400895a	            0x742e	                            je 0x400898a	      6195	eval.c	FUNCTION_97	IF_6
0x400895c	          0x488b1b	                    mov rbx, qword [rbx]	      6196	eval.c	FUNCTION_97	CALL_10
0x400895f	      0xba05000000	                              mov edx, 5	      6196	eval.c	FUNCTION_97	CALL_10
0x4008964	      0xbe00000000	                              mov esi, 0	      6196	eval.c	FUNCTION_97	CALL_10
0x4008969	      0xbf00000000	                              mov edi, 0	      6196	eval.c	FUNCTION_97	CALL_10
0x400896e	      0xe800000000	                          call 0x4008973	      6196	eval.c	FUNCTION_97	CALL_10
0x4008973	          0x4889de	                            mov rsi, rbx	      6196	eval.c	FUNCTION_97	CALL_10
0x4008976	          0x4889c7	                            mov rdi, rax	      6196	eval.c	FUNCTION_97	CALL_10
0x4008979	      0xe800000000	                          call 0x400897e	      6196	eval.c	FUNCTION_97	CALL_10
0x400897e	          0x4489e0	                           mov eax, r12d	      6198	eval.c	FUNCTION_97
0x4008981	            0xeb0a	                           jmp 0x400898d	      6198	eval.c	FUNCTION_97
0x4008983	      0xb8ffffffff	                     mov eax, 0xffffffff	      6188	eval.c	FUNCTION_97	IF_3	IF_5
0x4008988	            0xeb03	                           jmp 0x400898d	      6188	eval.c	FUNCTION_97	IF_3	IF_5
0x400898a	          0x4489e0	                           mov eax, r12d	      6198	eval.c	FUNCTION_97
0x400898d	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      6199	eval.c	FUNCTION_97
0x4008992	    0x644833142528	                xor rdx, qword fs:[0x28]	      6199	eval.c	FUNCTION_97
0x400899b	            0x7405	                            je 0x40089a2	      6199	eval.c	FUNCTION_97
0x400899d	      0xe800000000	                          call 0x40089a2	      6199	eval.c	FUNCTION_97
0x40089a2	        0x4883c428	                           add rsp, 0x28	      6199	eval.c	FUNCTION_97
0x40089a6	              0x5b	                                 pop rbx	      6199	eval.c	FUNCTION_97
0x40089a7	              0x5d	                                 pop rbp	      6199	eval.c	FUNCTION_97
0x40089a8	            0x415c	                                 pop r12	      6199	eval.c	FUNCTION_97
0x40089aa	            0x415d	                                 pop r13	      6199	eval.c	FUNCTION_97
0x40089ac	            0x415e	                                 pop r14	      6199	eval.c	FUNCTION_97
0x40089ae	            0x415f	                                 pop r15	      6199	eval.c	FUNCTION_97
0x40089b0	              0xc3	                                     ret	      6199	eval.c	FUNCTION_97
set_vim_var_string	FOR,0:SWITCH,0:DO,0:IF,2:functions,0:WHILE,0:CALL,3:ELSE,2	47
0x40027dc	            0x4155	                                push r13	      6472	eval.c	FUNCTION_109
0x40027de	            0x4154	                                push r12	      6472	eval.c	FUNCTION_109
0x40027e0	              0x55	                                push rbp	      6472	eval.c	FUNCTION_109
0x40027e1	              0x53	                                push rbx	      6472	eval.c	FUNCTION_109
0x40027e2	        0x4883ec08	                              sub rsp, 8	      6472	eval.c	FUNCTION_109
0x40027e6	            0x89fd	                            mov ebp, edi	      6472	eval.c	FUNCTION_109
0x40027e8	          0x4989f4	                            mov r12, rsi	      6472	eval.c	FUNCTION_109
0x40027eb	          0x4189d5	                           mov r13d, edx	      6472	eval.c	FUNCTION_109
0x40027ee	          0x4863df	                         movsxd rbx, edi	      6473	eval.c	FUNCTION_109	CALL_1
0x40027f1	    0x488d04dd0000	                        lea rax, [rbx*8]	      6473	eval.c	FUNCTION_109	CALL_1
0x40027f9	        0x48c1e306	                              shl rbx, 6	      6473	eval.c	FUNCTION_109	CALL_1
0x40027fd	          0x4829c3	                            sub rbx, rax	      6473	eval.c	FUNCTION_109	CALL_1
0x4002800	    0x488dbb000000	                          lea rdi, [rbx]	      6473	eval.c	FUNCTION_109	CALL_1
0x4002807	      0xe800000000	                          call 0x400280c	      6473	eval.c	FUNCTION_109	CALL_1
0x400280c	    0xc78300000000	                      mov dword [rbx], 2	      6474	eval.c	FUNCTION_109
0x4002816	          0x4d85e4	                           test r12, r12	      6475	eval.c	FUNCTION_109	IF_1
0x4002819	            0x751f	                           jne 0x400283a	      6475	eval.c	FUNCTION_109	IF_1
0x400281b	          0x4863ed	                         movsxd rbp, ebp	      6476	eval.c	FUNCTION_109	IF_1
0x400281e	    0x488d04ed0000	                        lea rax, [rbp*8]	      6476	eval.c	FUNCTION_109	IF_1
0x4002826	        0x48c1e506	                              shl rbp, 6	      6476	eval.c	FUNCTION_109	IF_1
0x400282a	          0x4829c5	                            sub rbp, rax	      6476	eval.c	FUNCTION_109	IF_1
0x400282d	    0x48c785000000	                      mov qword [rbp], 0	      6476	eval.c	FUNCTION_109	IF_1
0x4002838	            0xeb4d	                           jmp 0x4002887	      6476	eval.c	FUNCTION_109	IF_1
0x400283a	        0x4183fdff	            cmp r13d, 0xffffffffffffffff	      6477	eval.c	FUNCTION_109	ELSE_1	IF_2
0x400283e	            0x7523	                           jne 0x4002863	      6477	eval.c	FUNCTION_109	ELSE_1	IF_2
0x4002840	          0x4c89e7	                            mov rdi, r12	      6478	eval.c	FUNCTION_109	ELSE_1	IF_2
0x4002843	      0xe800000000	                          call 0x4002848	      6478	eval.c	FUNCTION_109	ELSE_1	IF_2
0x4002848	          0x4863ed	                         movsxd rbp, ebp	      6478	eval.c	FUNCTION_109	ELSE_1	IF_2
0x400284b	    0x488d14ed0000	                        lea rdx, [rbp*8]	      6478	eval.c	FUNCTION_109	ELSE_1	IF_2
0x4002853	        0x48c1e506	                              shl rbp, 6	      6478	eval.c	FUNCTION_109	ELSE_1	IF_2
0x4002857	          0x4829d5	                            sub rbp, rdx	      6478	eval.c	FUNCTION_109	ELSE_1	IF_2
0x400285a	    0x488985000000	                    mov qword [rbp], rax	      6478	eval.c	FUNCTION_109	ELSE_1	IF_2
0x4002861	            0xeb24	                           jmp 0x4002887	      6478	eval.c	FUNCTION_109	ELSE_1	IF_2
0x4002863	          0x4489ee	                           mov esi, r13d	      6480	eval.c	FUNCTION_109	CALL_3
0x4002866	          0x4c89e7	                            mov rdi, r12	      6480	eval.c	FUNCTION_109	CALL_3
0x4002869	      0xe800000000	                          call 0x400286e	      6480	eval.c	FUNCTION_109	CALL_3
0x400286e	          0x4863ed	                         movsxd rbp, ebp	      6480	eval.c	FUNCTION_109	CALL_3
0x4002871	    0x488d14ed0000	                        lea rdx, [rbp*8]	      6480	eval.c	FUNCTION_109	CALL_3
0x4002879	        0x48c1e506	                              shl rbp, 6	      6480	eval.c	FUNCTION_109	CALL_3
0x400287d	          0x4829d5	                            sub rbp, rdx	      6480	eval.c	FUNCTION_109	CALL_3
0x4002880	    0x488985000000	                    mov qword [rbp], rax	      6480	eval.c	FUNCTION_109	CALL_3
0x4002887	        0x4883c408	                              add rsp, 8	      6481	eval.c	FUNCTION_109
0x400288b	              0x5b	                                 pop rbx	      6481	eval.c	FUNCTION_109
0x400288c	              0x5d	                                 pop rbp	      6481	eval.c	FUNCTION_109
0x400288d	            0x415c	                                 pop r12	      6481	eval.c	FUNCTION_109
0x400288f	            0x415d	                                 pop r13	      6481	eval.c	FUNCTION_109
0x4002891	              0xc3	                                     ret	      6481	eval.c	FUNCTION_109
eval_charconvert	FOR,0:SWITCH,0:DO,0:IF,2:functions,0:WHILE,0:CALL,9:ELSE,0	63
0x4008118	            0x4154	                                push r12	       583	eval.c	FUNCTION_9
0x400811a	              0x55	                                push rbp	       583	eval.c	FUNCTION_9
0x400811b	              0x53	                                push rbx	       583	eval.c	FUNCTION_9
0x400811c	        0x4883ec10	                           sub rsp, 0x10	       583	eval.c	FUNCTION_9
0x4008120	          0x4989f4	                            mov r12, rsi	       583	eval.c	FUNCTION_9
0x4008123	          0x4889d5	                            mov rbp, rdx	       583	eval.c	FUNCTION_9
0x4008126	          0x4889cb	                            mov rbx, rcx	       583	eval.c	FUNCTION_9
0x4008129	    0x64488b042528	                mov rax, qword fs:[0x28]	       583	eval.c	FUNCTION_9
0x4008132	      0x4889442408	                mov qword [rsp + 8], rax	       583	eval.c	FUNCTION_9
0x4008137	            0x31c0	                            xor eax, eax	       583	eval.c	FUNCTION_9
0x4008139	    0xc74424040000	                  mov dword [rsp + 4], 0	       584	eval.c	FUNCTION_9
0x4008141	      0xbaffffffff	                     mov edx, 0xffffffff	       586	eval.c	FUNCTION_9	CALL_1
0x4008146	          0x4889fe	                            mov rsi, rdi	       586	eval.c	FUNCTION_9	CALL_1
0x4008149	      0xbf0f000000	                            mov edi, 0xf	       586	eval.c	FUNCTION_9	CALL_1
0x400814e	      0xe800000000	                          call 0x4008153	       586	eval.c	FUNCTION_9	CALL_1
0x4008153	      0xbaffffffff	                     mov edx, 0xffffffff	       587	eval.c	FUNCTION_9	CALL_2
0x4008158	          0x4c89e6	                            mov rsi, r12	       587	eval.c	FUNCTION_9	CALL_2
0x400815b	      0xbf10000000	                           mov edi, 0x10	       587	eval.c	FUNCTION_9	CALL_2
0x4008160	      0xe800000000	                          call 0x4008165	       587	eval.c	FUNCTION_9	CALL_2
0x4008165	      0xbaffffffff	                     mov edx, 0xffffffff	       588	eval.c	FUNCTION_9	CALL_3
0x400816a	          0x4889ee	                            mov rsi, rbp	       588	eval.c	FUNCTION_9	CALL_3
0x400816d	      0xbf11000000	                           mov edi, 0x11	       588	eval.c	FUNCTION_9	CALL_3
0x4008172	      0xe800000000	                          call 0x4008177	       588	eval.c	FUNCTION_9	CALL_3
0x4008177	      0xbaffffffff	                     mov edx, 0xffffffff	       589	eval.c	FUNCTION_9	CALL_4
0x400817c	          0x4889de	                            mov rsi, rbx	       589	eval.c	FUNCTION_9	CALL_4
0x400817f	      0xbf12000000	                           mov edi, 0x12	       589	eval.c	FUNCTION_9	CALL_4
0x4008184	      0xe800000000	                          call 0x4008189	       589	eval.c	FUNCTION_9	CALL_4
0x4008189	      0xb900000000	                              mov ecx, 0	       590	eval.c	FUNCTION_9	IF_1	CALL_5
0x400818e	      0xba00000000	                              mov edx, 0	       590	eval.c	FUNCTION_9	IF_1	CALL_5
0x4008193	      0x488d742404	                      lea rsi, [rsp + 4]	       590	eval.c	FUNCTION_9	IF_1	CALL_5
0x4008198	    0x488b3d000000	            mov rdi, qword [0x0400819f] 	       590	eval.c	FUNCTION_9	IF_1	CALL_5
0x400819f	      0xe800000000	                          call 0x40081a4	       590	eval.c	FUNCTION_9	IF_1	CALL_5
0x40081a4	            0x85c0	                           test eax, eax	       590	eval.c	FUNCTION_9	IF_1	CALL_5
0x40081a6	            0x7408	                            je 0x40081b0	       590	eval.c	FUNCTION_9	IF_1	CALL_5
0x40081a8	    0xc74424040100	                  mov dword [rsp + 4], 1	       591	eval.c	FUNCTION_9	IF_1
0x40081b0	      0xbaffffffff	                     mov edx, 0xffffffff	       592	eval.c	FUNCTION_9	CALL_6
0x40081b5	      0xbe00000000	                              mov esi, 0	       592	eval.c	FUNCTION_9	CALL_6
0x40081ba	      0xbf0f000000	                            mov edi, 0xf	       592	eval.c	FUNCTION_9	CALL_6
0x40081bf	      0xe800000000	                          call 0x40081c4	       592	eval.c	FUNCTION_9	CALL_6
0x40081c4	      0xbaffffffff	                     mov edx, 0xffffffff	       593	eval.c	FUNCTION_9	CALL_7
0x40081c9	      0xbe00000000	                              mov esi, 0	       593	eval.c	FUNCTION_9	CALL_7
0x40081ce	      0xbf10000000	                           mov edi, 0x10	       593	eval.c	FUNCTION_9	CALL_7
0x40081d3	      0xe800000000	                          call 0x40081d8	       593	eval.c	FUNCTION_9	CALL_7
0x40081d8	      0xbaffffffff	                     mov edx, 0xffffffff	       594	eval.c	FUNCTION_9	CALL_8
0x40081dd	      0xbe00000000	                              mov esi, 0	       594	eval.c	FUNCTION_9	CALL_8
0x40081e2	      0xbf11000000	                           mov edi, 0x11	       594	eval.c	FUNCTION_9	CALL_8
0x40081e7	      0xe800000000	                          call 0x40081ec	       594	eval.c	FUNCTION_9	CALL_8
0x40081ec	      0xbaffffffff	                     mov edx, 0xffffffff	       595	eval.c	FUNCTION_9	CALL_9
0x40081f1	      0xbe00000000	                              mov esi, 0	       595	eval.c	FUNCTION_9	CALL_9
0x40081f6	      0xbf12000000	                           mov edi, 0x12	       595	eval.c	FUNCTION_9	CALL_9
0x40081fb	      0xe800000000	                          call 0x4008200	       595	eval.c	FUNCTION_9	CALL_9
0x4008200	      0x837c240400	                  cmp dword [rsp + 4], 0	       598	eval.c	FUNCTION_9	IF_2
0x4008205	           0xf94c0	                                 sete al	       598	eval.c	FUNCTION_9	IF_2
0x4008208	           0xfb6c0	                           movzx eax, al	       598	eval.c	FUNCTION_9	IF_2
0x400820b	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       600	eval.c	FUNCTION_9
0x4008210	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       600	eval.c	FUNCTION_9
0x4008219	            0x7405	                            je 0x4008220	       600	eval.c	FUNCTION_9
0x400821b	      0xe800000000	                          call 0x4008220	       600	eval.c	FUNCTION_9
0x4008220	        0x4883c410	                           add rsp, 0x10	       600	eval.c	FUNCTION_9
0x4008224	              0x5b	                                 pop rbx	       600	eval.c	FUNCTION_9
0x4008225	              0x5d	                                 pop rbp	       600	eval.c	FUNCTION_9
0x4008226	            0x415c	                                 pop r12	       600	eval.c	FUNCTION_9
0x4008228	              0xc3	                                     ret	       600	eval.c	FUNCTION_9
eval_to_string_safe	FOR,0:SWITCH,0:DO,0:IF,2:functions,0:WHILE,0:CALL,3:ELSE,0	37
0x400863d	            0x4155	                                push r13	       860	eval.c	FUNCTION_19
0x400863f	            0x4154	                                push r12	       860	eval.c	FUNCTION_19
0x4008641	              0x55	                                push rbp	       860	eval.c	FUNCTION_19
0x4008642	              0x53	                                push rbx	       860	eval.c	FUNCTION_19
0x4008643	        0x4883ec08	                              sub rsp, 8	       860	eval.c	FUNCTION_19
0x4008647	          0x4889fb	                            mov rbx, rdi	       860	eval.c	FUNCTION_19
0x400864a	          0x4889f5	                            mov rbp, rsi	       860	eval.c	FUNCTION_19
0x400864d	          0x4189d5	                           mov r13d, edx	       860	eval.c	FUNCTION_19
0x4008650	      0xe800000000	                          call 0x4008655	       864	eval.c	FUNCTION_19	CALL_1
0x4008655	          0x4989c4	                            mov r12, rax	       864	eval.c	FUNCTION_19	CALL_1
0x4008658	          0x4585ed	                         test r13d, r13d	       865	eval.c	FUNCTION_19	IF_1
0x400865b	            0x742a	                            je 0x4008687	       865	eval.c	FUNCTION_19	IF_1
0x400865d	    0x830500000000	               add dword [0x04008664], 1	       866	eval.c	FUNCTION_19	IF_1
0x4008664	    0x830500000000	               add dword [0x0400866b], 1	       867	eval.c	FUNCTION_19
0x400866b	      0xba00000000	                              mov edx, 0	       868	eval.c	FUNCTION_19	CALL_2
0x4008670	          0x4889ee	                            mov rsi, rbp	       868	eval.c	FUNCTION_19	CALL_2
0x4008673	          0x4889df	                            mov rdi, rbx	       868	eval.c	FUNCTION_19	CALL_2
0x4008676	      0xe800000000	                          call 0x400867b	       868	eval.c	FUNCTION_19	CALL_2
0x400867b	          0x4889c3	                            mov rbx, rax	       868	eval.c	FUNCTION_19	CALL_2
0x400867e	    0x832d00000000	               sub dword [0x04008685], 1	       870	eval.c	FUNCTION_19	IF_2
0x4008685	            0xeb1a	                           jmp 0x40086a1	       870	eval.c	FUNCTION_19	IF_2
0x4008687	    0x830500000000	               add dword [0x0400868e], 1	       867	eval.c	FUNCTION_19
0x400868e	      0xba00000000	                              mov edx, 0	       868	eval.c	FUNCTION_19	CALL_2
0x4008693	          0x4889ee	                            mov rsi, rbp	       868	eval.c	FUNCTION_19	CALL_2
0x4008696	          0x4889df	                            mov rdi, rbx	       868	eval.c	FUNCTION_19	CALL_2
0x4008699	      0xe800000000	                          call 0x400869e	       868	eval.c	FUNCTION_19	CALL_2
0x400869e	          0x4889c3	                            mov rbx, rax	       868	eval.c	FUNCTION_19	CALL_2
0x40086a1	    0x832d00000000	               sub dword [0x040086a8], 1	       871	eval.c	FUNCTION_19
0x40086a8	          0x4c89e7	                            mov rdi, r12	       872	eval.c	FUNCTION_19	CALL_3
0x40086ab	      0xe800000000	                          call 0x40086b0	       872	eval.c	FUNCTION_19	CALL_3
0x40086b0	          0x4889d8	                            mov rax, rbx	       874	eval.c	FUNCTION_19
0x40086b3	        0x4883c408	                              add rsp, 8	       874	eval.c	FUNCTION_19
0x40086b7	              0x5b	                                 pop rbx	       874	eval.c	FUNCTION_19
0x40086b8	              0x5d	                                 pop rbp	       874	eval.c	FUNCTION_19
0x40086b9	            0x415c	                                 pop r12	       874	eval.c	FUNCTION_19
0x40086bb	            0x415d	                                 pop r13	       874	eval.c	FUNCTION_19
0x40086bd	              0xc3	                                     ret	       874	eval.c	FUNCTION_19
eval_to_string	FOR,0:SWITCH,0:DO,0:IF,5:functions,0:WHILE,0:CALL,10:ELSE,3	70
0x400851d	              0x53	                                push rbx	       812	eval.c	FUNCTION_18
0x400851e	        0x4883c480	             add rsp, 0xffffffffffffff80	       812	eval.c	FUNCTION_18
0x4008522	            0x89d3	                            mov ebx, edx	       812	eval.c	FUNCTION_18
0x4008524	    0x64488b042528	                mov rax, qword fs:[0x28]	       812	eval.c	FUNCTION_18
0x400852d	      0x4889442478	             mov qword [rsp + 0x78], rax	       812	eval.c	FUNCTION_18
0x4008532	            0x31c0	                            xor eax, eax	       812	eval.c	FUNCTION_18
0x4008534	      0xb901000000	                              mov ecx, 1	       820	eval.c	FUNCTION_18	IF_1	CALL_1
0x4008539	          0x4889f2	                            mov rdx, rsi	       820	eval.c	FUNCTION_18	IF_1	CALL_1
0x400853c	          0x4889e6	                            mov rsi, rsp	       820	eval.c	FUNCTION_18	IF_1	CALL_1
0x400853f	      0xe800000000	                          call 0x4008544	       820	eval.c	FUNCTION_18	IF_1	CALL_1
0x4008544	            0x85c0	                           test eax, eax	       820	eval.c	FUNCTION_18	IF_1	CALL_1
0x4008546	     0xf84ce000000	                            je 0x400861a	       820	eval.c	FUNCTION_18	IF_1	CALL_1
0x400854c	            0x85db	                           test ebx, ebx	       824	eval.c	FUNCTION_18	ELSE_1	IF_2
0x400854e	     0xf84a9000000	                            je 0x40085fd	       824	eval.c	FUNCTION_18	ELSE_1	IF_2
0x4008554	          0x8b0424	                    mov eax, dword [rsp]	       824	eval.c	FUNCTION_18	ELSE_1	IF_2
0x4008557	          0x83f805	                              cmp eax, 5	       824	eval.c	FUNCTION_18	ELSE_1	IF_2
0x400855a	            0x756e	                           jne 0x40085ca	       824	eval.c	FUNCTION_18	ELSE_1	IF_2
0x400855c	      0xba50000000	                           mov edx, 0x50	       826	eval.c	FUNCTION_18	ELSE_1	IF_2	CALL_2
0x4008561	      0xbe01000000	                              mov esi, 1	       826	eval.c	FUNCTION_18	ELSE_1	IF_2	CALL_2
0x4008566	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       826	eval.c	FUNCTION_18	ELSE_1	IF_2	CALL_2
0x400856b	      0xe800000000	                          call 0x4008570	       826	eval.c	FUNCTION_18	ELSE_1	IF_2	CALL_2
0x4008570	      0x488b742408	                mov rsi, qword [rsp + 8]	       827	eval.c	FUNCTION_18	ELSE_1	IF_2	IF_3
0x4008575	          0x4885f6	                           test rsi, rsi	       827	eval.c	FUNCTION_18	ELSE_1	IF_2	IF_3
0x4008578	            0x743a	                            je 0x40085b4	       827	eval.c	FUNCTION_18	ELSE_1	IF_2	IF_3
0x400857a	    0x41b900000000	                              mov r9d, 0	       829	eval.c	FUNCTION_18	ELSE_1	IF_2	IF_3	CALL_3
0x4008580	    0x41b800000000	                              mov r8d, 0	       829	eval.c	FUNCTION_18	ELSE_1	IF_2	IF_3	CALL_3
0x4008586	      0xb901000000	                              mov ecx, 1	       829	eval.c	FUNCTION_18	ELSE_1	IF_2	IF_3	CALL_3
0x400858b	      0xba00000000	                              mov edx, 0	       829	eval.c	FUNCTION_18	ELSE_1	IF_2	IF_3	CALL_3
0x4008590	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       829	eval.c	FUNCTION_18	ELSE_1	IF_2	IF_3	CALL_3
0x4008595	      0xe800000000	                          call 0x400859a	       829	eval.c	FUNCTION_18	ELSE_1	IF_2	IF_3	CALL_3
0x400859a	      0x488b442408	                mov rax, qword [rsp + 8]	       830	eval.c	FUNCTION_18	ELSE_1	IF_2	IF_3	IF_4
0x400859f	        0x83783c00	               cmp dword [rax + 0x3c], 0	       830	eval.c	FUNCTION_18	ELSE_1	IF_2	IF_3	IF_4
0x40085a3	            0x7e0f	                           jle 0x40085b4	       830	eval.c	FUNCTION_18	ELSE_1	IF_2	IF_3	IF_4
0x40085a5	      0xbe0a000000	                            mov esi, 0xa	       831	eval.c	FUNCTION_18	ELSE_1	IF_2	IF_3	CALL_4
0x40085aa	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       831	eval.c	FUNCTION_18	ELSE_1	IF_2	IF_3	CALL_4
0x40085af	      0xe800000000	                          call 0x40085b4	       831	eval.c	FUNCTION_18	ELSE_1	IF_2	IF_3	CALL_4
0x40085b4	      0xbe00000000	                              mov esi, 0	       833	eval.c	FUNCTION_18	ELSE_1	IF_2	CALL_5
0x40085b9	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       833	eval.c	FUNCTION_18	ELSE_1	IF_2	CALL_5
0x40085be	      0xe800000000	                          call 0x40085c3	       833	eval.c	FUNCTION_18	ELSE_1	IF_2	CALL_5
0x40085c3	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	       834	eval.c	FUNCTION_18	ELSE_1	IF_2
0x40085c8	            0xeb46	                           jmp 0x4008610	       834	eval.c	FUNCTION_18	ELSE_1	IF_2
0x40085ca	          0x83f807	                              cmp eax, 7	       837	eval.c	FUNCTION_18	ELSE_1	ELSE_2	IF_5
0x40085cd	            0x752e	                           jne 0x40085fd	       837	eval.c	FUNCTION_18	ELSE_1	ELSE_2	IF_5
0x40085cf	    0xf20f10442408	            movsd xmm0, qword [rsp + 8] 	       839	eval.c	FUNCTION_18	ELSE_1	ELSE_2	IF_5	CALL_6
0x40085d5	      0xba00000000	                              mov edx, 0	       839	eval.c	FUNCTION_18	ELSE_1	ELSE_2	IF_5	CALL_6
0x40085da	      0xbe41000000	                           mov esi, 0x41	       839	eval.c	FUNCTION_18	ELSE_1	ELSE_2	IF_5	CALL_6
0x40085df	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       839	eval.c	FUNCTION_18	ELSE_1	ELSE_2	IF_5	CALL_6
0x40085e4	      0xb801000000	                              mov eax, 1	       839	eval.c	FUNCTION_18	ELSE_1	ELSE_2	IF_5	CALL_6
0x40085e9	      0xe800000000	                          call 0x40085ee	       839	eval.c	FUNCTION_18	ELSE_1	ELSE_2	IF_5	CALL_6
0x40085ee	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       840	eval.c	FUNCTION_18	ELSE_1	ELSE_2	IF_5	CALL_7
0x40085f3	      0xe800000000	                          call 0x40085f8	       840	eval.c	FUNCTION_18	ELSE_1	ELSE_2	IF_5	CALL_7
0x40085f8	          0x4889c3	                            mov rbx, rax	       840	eval.c	FUNCTION_18	ELSE_1	ELSE_2	IF_5	CALL_7
0x40085fb	            0xeb13	                           jmp 0x4008610	       840	eval.c	FUNCTION_18	ELSE_1	ELSE_2	IF_5	CALL_7
0x40085fd	          0x4889e7	                            mov rdi, rsp	       844	eval.c	FUNCTION_18	ELSE_1	CALL_9
0x4008600	      0xe800000000	                          call 0x4008605	       844	eval.c	FUNCTION_18	ELSE_1	CALL_9
0x4008605	          0x4889c7	                            mov rdi, rax	       844	eval.c	FUNCTION_18	ELSE_1	CALL_9
0x4008608	      0xe800000000	                          call 0x400860d	       844	eval.c	FUNCTION_18	ELSE_1	CALL_9
0x400860d	          0x4889c3	                            mov rbx, rax	       844	eval.c	FUNCTION_18	ELSE_1	CALL_9
0x4008610	          0x4889e7	                            mov rdi, rsp	       845	eval.c	FUNCTION_18	ELSE_1	CALL_10
0x4008613	      0xe800000000	                          call 0x4008618	       845	eval.c	FUNCTION_18	ELSE_1	CALL_10
0x4008618	            0xeb05	                           jmp 0x400861f	       845	eval.c	FUNCTION_18	ELSE_1	CALL_10
0x400861a	      0xbb00000000	                              mov ebx, 0	       821	eval.c	FUNCTION_18	IF_1
0x400861f	          0x4889d8	                            mov rax, rbx	       849	eval.c	FUNCTION_18
0x4008622	      0x488b4c2478	            mov rcx, qword [rsp + 0x78] 	       849	eval.c	FUNCTION_18
0x4008627	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       849	eval.c	FUNCTION_18
0x4008630	            0x7405	                            je 0x4008637	       849	eval.c	FUNCTION_18
0x4008632	      0xe800000000	                          call 0x4008637	       849	eval.c	FUNCTION_18
0x4008637	        0x4883ec80	             sub rsp, 0xffffffffffffff80	       849	eval.c	FUNCTION_18
0x400863b	              0x5b	                                 pop rbx	       849	eval.c	FUNCTION_18
0x400863c	              0xc3	                                     ret	       849	eval.c	FUNCTION_18
last_set_msg	FOR,0:SWITCH,0:DO,0:IF,2:functions,0:WHILE,0:CALL,8:ELSE,0	24
0x4006228	            0x85ff	                           test edi, edi	      8757	eval.c	FUNCTION_166	IF_1
0x400622a	            0x7452	                            je 0x400627e	      8757	eval.c	FUNCTION_166	IF_1
0x400622c	              0x53	                                push rbx	      8754	eval.c	FUNCTION_166
0x400622d	      0xe800000000	                          call 0x4006232	      8759	eval.c	FUNCTION_166	IF_1	CALL_2
0x4006232	          0x4889c6	                            mov rsi, rax	      8759	eval.c	FUNCTION_166	IF_1	CALL_2
0x4006235	      0xbf00000000	                              mov edi, 0	      8759	eval.c	FUNCTION_166	IF_1	CALL_2
0x400623a	      0xe800000000	                          call 0x400623f	      8759	eval.c	FUNCTION_166	IF_1	CALL_2
0x400623f	          0x4889c3	                            mov rbx, rax	      8759	eval.c	FUNCTION_166	IF_1	CALL_2
0x4006242	          0x4885c0	                           test rax, rax	      8760	eval.c	FUNCTION_166	IF_1	IF_2
0x4006245	            0x7436	                            je 0x400627d	      8760	eval.c	FUNCTION_166	IF_1	IF_2
0x4006247	      0xe800000000	                          call 0x400624c	      8762	eval.c	FUNCTION_166	IF_1	IF_2	CALL_3
0x400624c	      0xba05000000	                              mov edx, 5	      8763	eval.c	FUNCTION_166	IF_1	IF_2	CALL_5
0x4006251	      0xbe00000000	                              mov esi, 0	      8763	eval.c	FUNCTION_166	IF_1	IF_2	CALL_5
0x4006256	      0xbf00000000	                              mov edi, 0	      8763	eval.c	FUNCTION_166	IF_1	IF_2	CALL_5
0x400625b	      0xe800000000	                          call 0x4006260	      8763	eval.c	FUNCTION_166	IF_1	IF_2	CALL_5
0x4006260	          0x4889c7	                            mov rdi, rax	      8763	eval.c	FUNCTION_166	IF_1	IF_2	CALL_5
0x4006263	      0xe800000000	                          call 0x4006268	      8763	eval.c	FUNCTION_166	IF_1	IF_2	CALL_5
0x4006268	          0x4889df	                            mov rdi, rbx	      8764	eval.c	FUNCTION_166	IF_1	IF_2	CALL_6
0x400626b	      0xe800000000	                          call 0x4006270	      8764	eval.c	FUNCTION_166	IF_1	IF_2	CALL_6
0x4006270	          0x4889df	                            mov rdi, rbx	      8765	eval.c	FUNCTION_166	IF_1	IF_2	CALL_7
0x4006273	      0xe800000000	                          call 0x4006278	      8765	eval.c	FUNCTION_166	IF_1	IF_2	CALL_7
0x4006278	      0xe800000000	                          call 0x400627d	      8766	eval.c	FUNCTION_166	IF_1	IF_2	CALL_8
0x400627d	              0x5b	                                 pop rbx	      8769	eval.c	FUNCTION_166
0x400627e	            0xf3c3	                                     ret	      8769	eval.c	FUNCTION_166
do_unlet	FOR,0:SWITCH,0:DO,0:IF,9:functions,0:WHILE,0:CALL,15:ELSE,2	126
0x400506b	            0x4157	                                push r15	      2870	eval.c	FUNCTION_56
0x400506d	            0x4156	                                push r14	      2870	eval.c	FUNCTION_56
0x400506f	            0x4155	                                push r13	      2870	eval.c	FUNCTION_56
0x4005071	            0x4154	                                push r12	      2870	eval.c	FUNCTION_56
0x4005073	              0x55	                                push rbp	      2870	eval.c	FUNCTION_56
0x4005074	              0x53	                                push rbx	      2870	eval.c	FUNCTION_56
0x4005075	        0x4883ec28	                           sub rsp, 0x28	      2870	eval.c	FUNCTION_56
0x4005079	          0x4889fb	                            mov rbx, rdi	      2870	eval.c	FUNCTION_56
0x400507c	          0x4189f4	                           mov r12d, esi	      2870	eval.c	FUNCTION_56
0x400507f	    0x64488b042528	                mov rax, qword fs:[0x28]	      2870	eval.c	FUNCTION_56
0x4005088	      0x4889442418	             mov qword [rsp + 0x18], rax	      2870	eval.c	FUNCTION_56
0x400508d	            0x31c0	                            xor eax, eax	      2870	eval.c	FUNCTION_56
0x400508f	      0x488d742410	                   lea rsi, [rsp + 0x10]	      2877	eval.c	FUNCTION_56	CALL_1
0x4005094	      0xe800000000	                          call 0x4005099	      2877	eval.c	FUNCTION_56	CALL_1
0x4005099	      0x4889442408	                mov qword [rsp + 8], rax	      2877	eval.c	FUNCTION_56	CALL_1
0x400509e	          0x4885c0	                           test rax, rax	      2878	eval.c	FUNCTION_56	IF_1
0x40050a1	     0xf8438010000	                            je 0x40051df	      2878	eval.c	FUNCTION_56	IF_1
0x40050a7	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      2878	eval.c	FUNCTION_56	IF_1
0x40050ac	          0x803a00	                       cmp byte [rdx], 0	      2878	eval.c	FUNCTION_56	IF_1
0x40050af	     0xf842a010000	                            je 0x40051df	      2878	eval.c	FUNCTION_56	IF_1
0x40050b5	          0x4889c7	                            mov rdi, rax	      2880	eval.c	FUNCTION_56	IF_1	CALL_2
0x40050b8	      0xe800000000	                          call 0x40050bd	      2880	eval.c	FUNCTION_56	IF_1	CALL_2
0x40050bd	          0x4989c7	                            mov r15, rax	      2880	eval.c	FUNCTION_56	IF_1	CALL_2
0x40050c0	          0x4885c0	                           test rax, rax	      2881	eval.c	FUNCTION_56	IF_1	IF_2
0x40050c3	            0x7553	                           jne 0x4005118	      2881	eval.c	FUNCTION_56	IF_1	IF_2
0x40050c5	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2883	eval.c	FUNCTION_56	IF_1	IF_2	IF_3
0x40050ca	    0x4881ff000000	                              cmp rdi, 0	      2883	eval.c	FUNCTION_56	IF_1	IF_2	IF_3
0x40050d1	     0xf8451010000	                            je 0x4005228	      2883	eval.c	FUNCTION_56	IF_1	IF_2	IF_3
0x40050d7	    0x4881ff000000	                              cmp rdi, 0	      2885	eval.c	FUNCTION_56	IF_1	IF_2	ELSE_1	IF_4
0x40050de	     0xf844f010000	                            je 0x4005233	      2885	eval.c	FUNCTION_56	IF_1	IF_2	ELSE_1	IF_4
0x40050e4	           0xfb633	                   movzx esi, byte [rbx]	      2889	eval.c	FUNCTION_56	IF_1	IF_2	ELSE_2	CALL_3
0x40050e7	      0xb900000000	                              mov ecx, 0	      2889	eval.c	FUNCTION_56	IF_1	IF_2	ELSE_2	CALL_3
0x40050ec	      0xba00000000	                              mov edx, 0	      2889	eval.c	FUNCTION_56	IF_1	IF_2	ELSE_2	CALL_3
0x40050f1	      0xe800000000	                          call 0x40050f6	      2889	eval.c	FUNCTION_56	IF_1	IF_2	ELSE_2	CALL_3
0x40050f6	          0x4885c0	                           test rax, rax	      2890	eval.c	FUNCTION_56	IF_1	IF_2	ELSE_2
0x40050f9	            0x7409	                            je 0x4005104	      2890	eval.c	FUNCTION_56	IF_1	IF_2	ELSE_2
0x40050fb	        0x4c8b7808	                mov r15, qword [rax + 8]	      2890	eval.c	FUNCTION_56	IF_1	IF_2	ELSE_2
0x40050ff	          0x4d85ff	                           test r15, r15	      2892	eval.c	FUNCTION_56	IF_1	IF_2	IF_5
0x4005102	            0x7514	                           jne 0x4005118	      2892	eval.c	FUNCTION_56	IF_1	IF_2	IF_5
0x4005104	      0xbf00000000	                              mov edi, 0	      2894	eval.c	FUNCTION_56	IF_1	IF_2	IF_5	CALL_4
0x4005109	      0xe800000000	                          call 0x400510e	      2894	eval.c	FUNCTION_56	IF_1	IF_2	IF_5	CALL_4
0x400510e	      0xbd00000000	                              mov ebp, 0	      2895	eval.c	FUNCTION_56	IF_1	IF_2	IF_5
0x4005113	      0xe9fc000000	                           jmp 0x4005214	      2895	eval.c	FUNCTION_56	IF_1	IF_2	IF_5
0x4005118	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      2898	eval.c	FUNCTION_56	IF_1	CALL_5
0x400511d	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2898	eval.c	FUNCTION_56	IF_1	CALL_5
0x4005122	      0xe800000000	                          call 0x4005127	      2898	eval.c	FUNCTION_56	IF_1	CALL_5
0x4005127	          0x4989c5	                            mov r13, rax	      2898	eval.c	FUNCTION_56	IF_1	CALL_5
0x400512a	        0x488b4008	                mov rax, qword [rax + 8]	      2899	eval.c	FUNCTION_56	IF_1	IF_6	CALL_6
0x400512e	    0x483d00000000	                              cmp rax, 0	      2899	eval.c	FUNCTION_56	IF_1	IF_6	CALL_6
0x4005134	            0x7405	                            je 0x400513b	      2899	eval.c	FUNCTION_56	IF_1	IF_6	CALL_6
0x4005136	          0x4885c0	                           test rax, rax	      2899	eval.c	FUNCTION_56	IF_1	IF_6	CALL_6
0x4005139	            0x7510	                           jne 0x400514b	      2899	eval.c	FUNCTION_56	IF_1	IF_6	CALL_6
0x400513b	      0x488d742408	                      lea rsi, [rsp + 8]	      2900	eval.c	FUNCTION_56	IF_1	CALL_7
0x4005140	          0x4889df	                            mov rdi, rbx	      2900	eval.c	FUNCTION_56	IF_1	CALL_7
0x4005143	      0xe800000000	                          call 0x4005148	      2900	eval.c	FUNCTION_56	IF_1	CALL_7
0x4005148	          0x4989c5	                            mov r13, rax	      2900	eval.c	FUNCTION_56	IF_1	CALL_7
0x400514b	          0x4d85ed	                           test r13, r13	      2901	eval.c	FUNCTION_56	IF_1	IF_7	CALL_8
0x400514e	     0xf848b000000	                            je 0x40051df	      2901	eval.c	FUNCTION_56	IF_1	IF_7	CALL_8
0x4005154	        0x4d8b7508	                mov r14, qword [r13 + 8]	      2901	eval.c	FUNCTION_56	IF_1	IF_7	CALL_8
0x4005158	    0x4981fe000000	                              cmp r14, 0	      2901	eval.c	FUNCTION_56	IF_1	IF_7	CALL_8
0x400515f	            0x747e	                            je 0x40051df	      2901	eval.c	FUNCTION_56	IF_1	IF_7	CALL_8
0x4005161	          0x4d85f6	                           test r14, r14	      2901	eval.c	FUNCTION_56	IF_1	IF_7	CALL_8
0x4005164	            0x7479	                            je 0x40051df	      2901	eval.c	FUNCTION_56	IF_1	IF_7	CALL_8
0x4005166	      0x410fb67eff	               movzx edi, byte [r14 - 1]	      2904	eval.c	FUNCTION_56	IF_1	IF_7	IF_8	CALL_10
0x400516b	      0xba00000000	                              mov edx, 0	      2904	eval.c	FUNCTION_56	IF_1	IF_7	IF_8	CALL_10
0x4005170	          0x4889de	                            mov rsi, rbx	      2904	eval.c	FUNCTION_56	IF_1	IF_7	IF_8	CALL_10
0x4005173	      0xe800000000	                          call 0x4005178	      2904	eval.c	FUNCTION_56	IF_1	IF_7	IF_8	CALL_10
0x4005178	            0x89c5	                            mov ebp, eax	      2904	eval.c	FUNCTION_56	IF_1	IF_7	IF_8	CALL_10
0x400517a	            0x85c0	                           test eax, eax	      2904	eval.c	FUNCTION_56	IF_1	IF_7	IF_8	CALL_10
0x400517c	     0xf858d000000	                           jne 0x400520f	      2904	eval.c	FUNCTION_56	IF_1	IF_7	IF_8	CALL_10
0x4005182	      0x410fb67eff	               movzx edi, byte [r14 - 1]	      2905	eval.c	FUNCTION_56	IF_1	IF_7	IF_8	CALL_11
0x4005187	      0xba00000000	                              mov edx, 0	      2905	eval.c	FUNCTION_56	IF_1	IF_7	IF_8	CALL_11
0x400518c	          0x4889de	                            mov rsi, rbx	      2905	eval.c	FUNCTION_56	IF_1	IF_7	IF_8	CALL_11
0x400518f	      0xe800000000	                          call 0x4005194	      2905	eval.c	FUNCTION_56	IF_1	IF_7	IF_8	CALL_11
0x4005194	          0x4189c4	                           mov r12d, eax	      2905	eval.c	FUNCTION_56	IF_1	IF_7	IF_8	CALL_11
0x4005197	            0x85c0	                           test eax, eax	      2905	eval.c	FUNCTION_56	IF_1	IF_7	IF_8	CALL_11
0x4005199	            0x7579	                           jne 0x4005214	      2905	eval.c	FUNCTION_56	IF_1	IF_7	IF_8	CALL_11
0x400519b	        0x410fbe3f	                   movsx edi, byte [r15]	      2906	eval.c	FUNCTION_56	IF_1	IF_7	IF_8	CALL_12
0x400519f	      0xba00000000	                              mov edx, 0	      2906	eval.c	FUNCTION_56	IF_1	IF_7	IF_8	CALL_12
0x40051a4	          0x4889de	                            mov rsi, rbx	      2906	eval.c	FUNCTION_56	IF_1	IF_7	IF_8	CALL_12
0x40051a7	      0xe800000000	                          call 0x40051ac	      2906	eval.c	FUNCTION_56	IF_1	IF_7	IF_8	CALL_12
0x40051ac	          0x4489e5	                           mov ebp, r12d	      2907	eval.c	FUNCTION_56	IF_1	IF_7	IF_8
0x40051af	            0x85c0	                           test eax, eax	      2906	eval.c	FUNCTION_56	IF_1	IF_7	IF_8	CALL_12
0x40051b1	            0x7561	                           jne 0x4005214	      2906	eval.c	FUNCTION_56	IF_1	IF_7	IF_8	CALL_12
0x40051b3	        0x498b5d08	                mov rbx, qword [r13 + 8]	      7447	eval.c	FUNCTION_140	CALL_1
0x40051b7	          0x4c89ee	                            mov rsi, r13	      7449	eval.c	FUNCTION_140	CALL_2
0x40051ba	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      7449	eval.c	FUNCTION_140	CALL_2
0x40051bf	      0xe800000000	                          call 0x40051c4	      7449	eval.c	FUNCTION_140	CALL_2
0x40051c4	        0x4883eb11	                           sub rbx, 0x11	      7450	eval.c	FUNCTION_140	CALL_3
0x40051c8	          0x4889df	                            mov rdi, rbx	      7450	eval.c	FUNCTION_140	CALL_3
0x40051cb	      0xe800000000	                          call 0x40051d0	      7450	eval.c	FUNCTION_140	CALL_3
0x40051d0	          0x4889df	                            mov rdi, rbx	      7451	eval.c	FUNCTION_140	CALL_4
0x40051d3	      0xe800000000	                          call 0x40051d8	      7451	eval.c	FUNCTION_140	CALL_4
0x40051d8	      0xbd01000000	                              mov ebp, 1	      2910	eval.c	FUNCTION_56	IF_1	IF_7
0x40051dd	            0xeb35	                           jmp 0x4005214	      2910	eval.c	FUNCTION_56	IF_1	IF_7
0x40051df	      0xbd01000000	                              mov ebp, 1	      2914	eval.c	FUNCTION_56	IF_9
0x40051e4	          0x4585e4	                         test r12d, r12d	      2913	eval.c	FUNCTION_56	IF_9
0x40051e7	            0x752b	                           jne 0x4005214	      2913	eval.c	FUNCTION_56	IF_9
0x40051e9	      0xba05000000	                              mov edx, 5	      2915	eval.c	FUNCTION_56	CALL_15
0x40051ee	      0xbe00000000	                              mov esi, 0	      2915	eval.c	FUNCTION_56	CALL_15
0x40051f3	      0xbf00000000	                              mov edi, 0	      2915	eval.c	FUNCTION_56	CALL_15
0x40051f8	      0xe800000000	                          call 0x40051fd	      2915	eval.c	FUNCTION_56	CALL_15
0x40051fd	          0x4889de	                            mov rsi, rbx	      2915	eval.c	FUNCTION_56	CALL_15
0x4005200	          0x4889c7	                            mov rdi, rax	      2915	eval.c	FUNCTION_56	CALL_15
0x4005203	      0xe800000000	                          call 0x4005208	      2915	eval.c	FUNCTION_56	CALL_15
0x4005208	      0xbd00000000	                              mov ebp, 0	      2916	eval.c	FUNCTION_56
0x400520d	            0xeb05	                           jmp 0x4005214	      2916	eval.c	FUNCTION_56
0x400520f	      0xbd00000000	                              mov ebp, 0	      2907	eval.c	FUNCTION_56	IF_1	IF_7	IF_8
0x4005214	            0x89e8	                            mov eax, ebp	      2917	eval.c	FUNCTION_56
0x4005216	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      2917	eval.c	FUNCTION_56
0x400521b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2917	eval.c	FUNCTION_56
0x4005224	            0x741d	                            je 0x4005243	      2917	eval.c	FUNCTION_56
0x4005226	            0xeb16	                           jmp 0x400523e	      2917	eval.c	FUNCTION_56
0x4005228	    0x41bf00000000	                             mov r15d, 0	      2884	eval.c	FUNCTION_56	IF_1	IF_2	IF_3
0x400522e	      0xe9e5feffff	                           jmp 0x4005118	      2884	eval.c	FUNCTION_56	IF_1	IF_2	IF_3
0x4005233	    0x41bf00000000	                             mov r15d, 0	      2886	eval.c	FUNCTION_56	IF_1	IF_2	ELSE_1	IF_4
0x4005239	      0xe9dafeffff	                           jmp 0x4005118	      2886	eval.c	FUNCTION_56	IF_1	IF_2	ELSE_1	IF_4
0x400523e	      0xe800000000	                          call 0x4005243	      2917	eval.c	FUNCTION_56
0x4005243	        0x4883c428	                           add rsp, 0x28	      2917	eval.c	FUNCTION_56
0x4005247	              0x5b	                                 pop rbx	      2917	eval.c	FUNCTION_56
0x4005248	              0x5d	                                 pop rbp	      2917	eval.c	FUNCTION_56
0x4005249	            0x415c	                                 pop r12	      2917	eval.c	FUNCTION_56
0x400524b	            0x415d	                                 pop r13	      2917	eval.c	FUNCTION_56
0x400524d	            0x415e	                                 pop r14	      2917	eval.c	FUNCTION_56
0x400524f	            0x415f	                                 pop r15	      2917	eval.c	FUNCTION_56
0x4005251	              0xc3	                                     ret	      2917	eval.c	FUNCTION_56
var_check_func_name	FOR,0:SWITCH,0:DO,0:IF,2:functions,0:WHILE,0:CALL,7:ELSE,0	61
0x4004572	              0x55	                                push rbp	      7672	eval.c	FUNCTION_146
0x4004573	              0x53	                                push rbx	      7672	eval.c	FUNCTION_146
0x4004574	        0x4883ec08	                              sub rsp, 8	      7672	eval.c	FUNCTION_146
0x4004578	          0x4889fb	                            mov rbx, rdi	      7672	eval.c	FUNCTION_146
0x400457b	            0x89f5	                            mov ebp, esi	      7672	eval.c	FUNCTION_146
0x400457d	           0xfb637	                   movzx esi, byte [rdi]	      7674	eval.c	FUNCTION_146	IF_1	CALL_1
0x4004580	      0xbf00000000	                              mov edi, 0	      7674	eval.c	FUNCTION_146	IF_1	CALL_1
0x4004585	      0xe800000000	                          call 0x400458a	      7674	eval.c	FUNCTION_146	IF_1	CALL_1
0x400458a	          0x4885c0	                           test rax, rax	      7674	eval.c	FUNCTION_146	IF_1	CALL_1
0x400458d	            0x740c	                            je 0x400459b	      7674	eval.c	FUNCTION_146	IF_1	CALL_1
0x400458f	        0x807b013a	                cmp byte [rbx + 1], 0x3a	      7674	eval.c	FUNCTION_146	IF_1	CALL_1
0x4004593	     0xf8594000000	                           jne 0x400462d	      7674	eval.c	FUNCTION_146	IF_1	CALL_1
0x4004599	            0xeb52	                           jmp 0x40045ed	      7674	eval.c	FUNCTION_146	IF_1	CALL_1
0x400459b	           0xfb603	                   movzx eax, byte [rbx]	      7675	eval.c	FUNCTION_146	IF_1	CALL_2
0x400459e	            0x84c0	                             test al, al	      7675	eval.c	FUNCTION_146	IF_1	CALL_2
0x40045a0	            0x7415	                            je 0x40045b7	      7675	eval.c	FUNCTION_146	IF_1	CALL_2
0x40045a2	        0x807b013a	                cmp byte [rbx + 1], 0x3a	      7675	eval.c	FUNCTION_146	IF_1	CALL_2
0x40045a6	            0x750f	                           jne 0x40045b7	      7675	eval.c	FUNCTION_146	IF_1	CALL_2
0x40045a8	         0xfb64302	               movzx eax, byte [rbx + 2]	      7675	eval.c	FUNCTION_146	IF_1	CALL_2
0x40045ac	          0x83e841	                           sub eax, 0x41	      7675	eval.c	FUNCTION_146	IF_1	CALL_2
0x40045af	          0x83f819	                           cmp eax, 0x19	      7675	eval.c	FUNCTION_146	IF_1	CALL_2
0x40045b2	           0xf97c0	                                 seta al	      7675	eval.c	FUNCTION_146	IF_1	CALL_2
0x40045b5	            0xeb0c	                           jmp 0x40045c3	      7675	eval.c	FUNCTION_146	IF_1	CALL_2
0x40045b7	           0xfb6c0	                           movzx eax, al	      7675	eval.c	FUNCTION_146	IF_1	CALL_2
0x40045ba	          0x83e841	                           sub eax, 0x41	      7675	eval.c	FUNCTION_146	IF_1	CALL_2
0x40045bd	          0x83f819	                           cmp eax, 0x19	      7675	eval.c	FUNCTION_146	IF_1	CALL_2
0x40045c0	           0xf97c0	                                 seta al	      7675	eval.c	FUNCTION_146	IF_1	CALL_2
0x40045c3	            0x84c0	                             test al, al	      7675	eval.c	FUNCTION_146	IF_1	CALL_2
0x40045c5	            0x7426	                            je 0x40045ed	      7675	eval.c	FUNCTION_146	IF_1	CALL_2
0x40045c7	      0xba05000000	                              mov edx, 5	      7678	eval.c	FUNCTION_146	IF_1	CALL_4
0x40045cc	      0xbe00000000	                              mov esi, 0	      7678	eval.c	FUNCTION_146	IF_1	CALL_4
0x40045d1	      0xbf00000000	                              mov edi, 0	      7678	eval.c	FUNCTION_146	IF_1	CALL_4
0x40045d6	      0xe800000000	                          call 0x40045db	      7678	eval.c	FUNCTION_146	IF_1	CALL_4
0x40045db	          0x4889de	                            mov rsi, rbx	      7678	eval.c	FUNCTION_146	IF_1	CALL_4
0x40045de	          0x4889c7	                            mov rdi, rax	      7678	eval.c	FUNCTION_146	IF_1	CALL_4
0x40045e1	      0xe800000000	                          call 0x40045e6	      7678	eval.c	FUNCTION_146	IF_1	CALL_4
0x40045e6	      0xb801000000	                              mov eax, 1	      7680	eval.c	FUNCTION_146	IF_1
0x40045eb	            0xeb45	                           jmp 0x4004632	      7680	eval.c	FUNCTION_146	IF_1
0x40045ed	      0xb800000000	                              mov eax, 0	      7691	eval.c	FUNCTION_146
0x40045f2	            0x85ed	                           test ebp, ebp	      7685	eval.c	FUNCTION_146	IF_2	CALL_5
0x40045f4	            0x743c	                            je 0x4004632	      7685	eval.c	FUNCTION_146	IF_2	CALL_5
0x40045f6	      0xbe00000000	                              mov esi, 0	      7685	eval.c	FUNCTION_146	IF_2	CALL_5
0x40045fb	          0x4889df	                            mov rdi, rbx	      7685	eval.c	FUNCTION_146	IF_2	CALL_5
0x40045fe	      0xe800000000	                          call 0x4004603	      7685	eval.c	FUNCTION_146	IF_2	CALL_5
0x4004603	            0x85c0	                           test eax, eax	      7685	eval.c	FUNCTION_146	IF_2	CALL_5
0x4004605	            0x742b	                            je 0x4004632	      7685	eval.c	FUNCTION_146	IF_2	CALL_5
0x4004607	      0xba05000000	                              mov edx, 5	      7687	eval.c	FUNCTION_146	IF_2	CALL_7
0x400460c	      0xbe00000000	                              mov esi, 0	      7687	eval.c	FUNCTION_146	IF_2	CALL_7
0x4004611	      0xbf00000000	                              mov edi, 0	      7687	eval.c	FUNCTION_146	IF_2	CALL_7
0x4004616	      0xe800000000	                          call 0x400461b	      7687	eval.c	FUNCTION_146	IF_2	CALL_7
0x400461b	          0x4889de	                            mov rsi, rbx	      7687	eval.c	FUNCTION_146	IF_2	CALL_7
0x400461e	          0x4889c7	                            mov rdi, rax	      7687	eval.c	FUNCTION_146	IF_2	CALL_7
0x4004621	      0xe800000000	                          call 0x4004626	      7687	eval.c	FUNCTION_146	IF_2	CALL_7
0x4004626	      0xb801000000	                              mov eax, 1	      7689	eval.c	FUNCTION_146	IF_2
0x400462b	            0xeb05	                           jmp 0x4004632	      7689	eval.c	FUNCTION_146	IF_2
0x400462d	           0xfb603	                   movzx eax, byte [rbx]	      7675	eval.c	FUNCTION_146	IF_1	CALL_2
0x4004630	            0xeb85	                           jmp 0x40045b7	      7675	eval.c	FUNCTION_146	IF_1	CALL_2
0x4004632	        0x4883c408	                              add rsp, 8	      7692	eval.c	FUNCTION_146
0x4004636	              0x5b	                                 pop rbx	      7692	eval.c	FUNCTION_146
0x4004637	              0x5d	                                 pop rbp	      7692	eval.c	FUNCTION_146
0x4004638	              0xc3	                                     ret	      7692	eval.c	FUNCTION_146
modify_fname	FOR,3:SWITCH,0:DO,0:IF,54:functions,0:WHILE,5:CALL,58:ELSE,9	537
0x400d53c	            0x4157	                                push r15	      9703	eval.c	FUNCTION_187
0x400d53e	            0x4156	                                push r14	      9703	eval.c	FUNCTION_187
0x400d540	            0x4155	                                push r13	      9703	eval.c	FUNCTION_187
0x400d542	            0x4154	                                push r12	      9703	eval.c	FUNCTION_187
0x400d544	              0x55	                                push rbp	      9703	eval.c	FUNCTION_187
0x400d545	              0x53	                                push rbx	      9703	eval.c	FUNCTION_187
0x400d546	    0x4881ec481000	                         sub rsp, 0x1048	      9703	eval.c	FUNCTION_187
0x400d54d	          0x4889fd	                            mov rbp, rdi	      9703	eval.c	FUNCTION_187
0x400d550	          0x4989f4	                            mov r12, rsi	      9703	eval.c	FUNCTION_187
0x400d553	          0x4889d3	                            mov rbx, rdx	      9703	eval.c	FUNCTION_187
0x400d556	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      9703	eval.c	FUNCTION_187
0x400d55b	          0x4d89c7	                             mov r15, r8	      9703	eval.c	FUNCTION_187
0x400d55e	    0x64488b042528	                mov rax, qword fs:[0x28]	      9703	eval.c	FUNCTION_187
0x400d567	    0x488984243810	          mov qword [rsp + 0x1038], rax 	      9703	eval.c	FUNCTION_187
0x400d56f	            0x31c0	                            xor eax, eax	      9703	eval.c	FUNCTION_187
0x400d571	    0xc74424100000	               mov dword [rsp + 0x10], 0	      9709	eval.c	FUNCTION_187
0x400d579	    0xc74424140000	               mov dword [rsp + 0x14], 0	      9704	eval.c	FUNCTION_187
0x400d581	        0x418b0424	                    mov eax, dword [r12]	      9717	eval.c	FUNCTION_187	IF_1
0x400d585	          0x4863d0	                         movsxd rdx, eax	      9717	eval.c	FUNCTION_187	IF_1
0x400d588	      0x807c15003a	              cmp byte [rbp + rdx], 0x3a	      9717	eval.c	FUNCTION_187	IF_1
0x400d58d	     0xf8581020000	                           jne 0x400d814	      9717	eval.c	FUNCTION_187	IF_1
0x400d593	      0x807c150170	         cmp byte [rbp + rdx + 1], 0x70 	      9717	eval.c	FUNCTION_187	IF_1
0x400d598	     0xf8576020000	                           jne 0x400d814	      9717	eval.c	FUNCTION_187	IF_1
0x400d59e	      0x834c241401	                or dword [rsp + 0x14], 1	      9721	eval.c	FUNCTION_187	IF_1
0x400d5a3	          0x83c002	                              add eax, 2	      9722	eval.c	FUNCTION_187	IF_1
0x400d5a6	        0x41890424	                    mov dword [r12], eax	      9722	eval.c	FUNCTION_187	IF_1
0x400d5aa	          0x488b3b	                    mov rdi, qword [rbx]	      9725	eval.c	FUNCTION_187	IF_1	IF_2
0x400d5ad	          0x803f7e	                    cmp byte [rdi], 0x7e	      9725	eval.c	FUNCTION_187	IF_1	IF_2
0x400d5b0	            0x7525	                           jne 0x400d5d7	      9725	eval.c	FUNCTION_187	IF_1	IF_2
0x400d5b2	      0xe800000000	                          call 0x400d5b7	      9736	eval.c	FUNCTION_187	IF_1	IF_2	CALL_1
0x400d5b7	          0x488903	                    mov qword [rbx], rax	      9736	eval.c	FUNCTION_187	IF_1	IF_2	CALL_1
0x400d5ba	      0x4c8b742418	            mov r14, qword [rsp + 0x18] 	      9737	eval.c	FUNCTION_187	IF_1	IF_2	CALL_2
0x400d5bf	          0x498b3e	                    mov rdi, qword [r14]	      9737	eval.c	FUNCTION_187	IF_1	IF_2	CALL_2
0x400d5c2	      0xe800000000	                          call 0x400d5c7	      9737	eval.c	FUNCTION_187	IF_1	IF_2	CALL_2
0x400d5c7	          0x488b03	                    mov rax, qword [rbx]	      9738	eval.c	FUNCTION_187	IF_1	IF_2
0x400d5ca	          0x498906	                    mov qword [r14], rax	      9738	eval.c	FUNCTION_187	IF_1	IF_2
0x400d5cd	        0x48833b00	                      cmp qword [rbx], 0	      9739	eval.c	FUNCTION_187	IF_1	IF_2	IF_3
0x400d5d1	     0xf8477060000	                            je 0x400dc4e	      9739	eval.c	FUNCTION_187	IF_1	IF_2	IF_3
0x400d5d7	          0x4c8b2b	                    mov r13, qword [rbx]	      9744	eval.c	FUNCTION_187	IF_1	FOR_1	CALL_3
0x400d5da	      0x410fb67d00	                   movzx edi, byte [r13]	      9744	eval.c	FUNCTION_187	IF_1	FOR_1	CALL_3
0x400d5df	          0x4084ff	                           test dil, dil	      9744	eval.c	FUNCTION_187	IF_1	FOR_1	CALL_3
0x400d5e2	            0x7474	                            je 0x400d658	      9744	eval.c	FUNCTION_187	IF_1	FOR_1	CALL_3
0x400d5e4	        0x400fb6ff	                          movzx edi, dil	      9746	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4	CALL_4
0x400d5e8	      0xe800000000	                          call 0x400d5ed	      9746	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4	CALL_4
0x400d5ed	            0x85c0	                           test eax, eax	      9746	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4	CALL_4
0x400d5ef	            0x7438	                            je 0x400d629	      9746	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4	CALL_4
0x400d5f1	      0x41807d012e	                cmp byte [r13 + 1], 0x2e	      9747	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4
0x400d5f6	            0x7531	                           jne 0x400d629	      9747	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4
0x400d5f8	      0x410fb64502	               movzx eax, byte [r13 + 2]	      9748	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4
0x400d5fd	            0x84c0	                             test al, al	      9748	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4
0x400d5ff	            0x7450	                            je 0x400d651	      9748	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4
0x400d601	           0xfb6f8	                           movzx edi, al	      9749	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4	CALL_5
0x400d604	      0xe800000000	                          call 0x400d609	      9749	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4	CALL_5
0x400d609	            0x85c0	                           test eax, eax	      9749	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4	CALL_5
0x400d60b	            0x7544	                           jne 0x400d651	      9749	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4	CALL_5
0x400d60d	      0x41807d022e	                cmp byte [r13 + 2], 0x2e	      9750	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4
0x400d612	            0x7515	                           jne 0x400d629	      9750	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4
0x400d614	      0x410fb64503	               movzx eax, byte [r13 + 3]	      9751	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4	CALL_6
0x400d619	            0x84c0	                             test al, al	      9751	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4	CALL_6
0x400d61b	            0x7434	                            je 0x400d651	      9751	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4	CALL_6
0x400d61d	           0xfb6f8	                           movzx edi, al	      9751	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4	CALL_6
0x400d620	      0xe800000000	                          call 0x400d625	      9751	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4	CALL_6
0x400d625	            0x85c0	                           test eax, eax	      9751	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4	CALL_6
0x400d627	            0x7528	                           jne 0x400d651	      9751	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4	CALL_6
0x400d629	      0xb801000000	                              mov eax, 1	      9744	eval.c	FUNCTION_187	IF_1	FOR_1	CALL_3
0x400d62e	    0x833d00000000	               cmp dword [0x0400d635], 0	      9744	eval.c	FUNCTION_187	IF_1	FOR_1	CALL_3
0x400d635	            0x7409	                            je 0x400d640	      9744	eval.c	FUNCTION_187	IF_1	FOR_1	CALL_3
0x400d637	          0x4c89ef	                            mov rdi, r13	      9744	eval.c	FUNCTION_187	IF_1	FOR_1	CALL_3
0x400d63a	    0xff1500000000	                 call qword [0x0400d640]	      9744	eval.c	FUNCTION_187	IF_1	FOR_1	CALL_3
0x400d640	            0x4898	                                    cdqe	      9744	eval.c	FUNCTION_187	IF_1	FOR_1	CALL_3
0x400d642	          0x4901c5	                            add r13, rax	      9744	eval.c	FUNCTION_187	IF_1	FOR_1	CALL_3
0x400d645	      0x410fb67d00	                   movzx edi, byte [r13]	      9744	eval.c	FUNCTION_187	IF_1	FOR_1	CALL_3
0x400d64a	          0x4084ff	                           test dil, dil	      9744	eval.c	FUNCTION_187	IF_1	FOR_1	CALL_3
0x400d64d	            0x7595	                           jne 0x400d5e4	      9744	eval.c	FUNCTION_187	IF_1	FOR_1	CALL_3
0x400d64f	            0xeb07	                           jmp 0x400d658	      9744	eval.c	FUNCTION_187	IF_1	FOR_1	CALL_3
0x400d651	      0x41807d0000	                       cmp byte [r13], 0	      9756	eval.c	FUNCTION_187	IF_1	IF_5	CALL_7
0x400d656	            0x750c	                           jne 0x400d664	      9756	eval.c	FUNCTION_187	IF_1	IF_5	CALL_7
0x400d658	          0x488b3b	                    mov rdi, qword [rbx]	      9756	eval.c	FUNCTION_187	IF_1	IF_5	CALL_7
0x400d65b	      0xe800000000	                          call 0x400d660	      9756	eval.c	FUNCTION_187	IF_1	IF_5	CALL_7
0x400d660	            0x85c0	                           test eax, eax	      9756	eval.c	FUNCTION_187	IF_1	IF_5	CALL_7
0x400d662	            0x7535	                           jne 0x400d699	      9756	eval.c	FUNCTION_187	IF_1	IF_5	CALL_7
0x400d664	      0x41807d0000	                       cmp byte [r13], 0	      9758	eval.c	FUNCTION_187	IF_1	IF_5	CALL_8
0x400d669	        0x400f95c6	                               setne sil	      9758	eval.c	FUNCTION_187	IF_1	IF_5	CALL_8
0x400d66d	        0x400fb6f6	                          movzx esi, sil	      9758	eval.c	FUNCTION_187	IF_1	IF_5	CALL_8
0x400d671	          0x488b3b	                    mov rdi, qword [rbx]	      9758	eval.c	FUNCTION_187	IF_1	IF_5	CALL_8
0x400d674	      0xe800000000	                          call 0x400d679	      9758	eval.c	FUNCTION_187	IF_1	IF_5	CALL_8
0x400d679	          0x488903	                    mov qword [rbx], rax	      9758	eval.c	FUNCTION_187	IF_1	IF_5	CALL_8
0x400d67c	      0x4c8b742418	            mov r14, qword [rsp + 0x18] 	      9759	eval.c	FUNCTION_187	IF_1	IF_5	CALL_9
0x400d681	          0x498b3e	                    mov rdi, qword [r14]	      9759	eval.c	FUNCTION_187	IF_1	IF_5	CALL_9
0x400d684	      0xe800000000	                          call 0x400d689	      9759	eval.c	FUNCTION_187	IF_1	IF_5	CALL_9
0x400d689	          0x488b03	                    mov rax, qword [rbx]	      9760	eval.c	FUNCTION_187	IF_1	IF_5
0x400d68c	          0x498906	                    mov qword [r14], rax	      9760	eval.c	FUNCTION_187	IF_1	IF_5
0x400d68f	        0x48833b00	                      cmp qword [rbx], 0	      9761	eval.c	FUNCTION_187	IF_1	IF_5	IF_6
0x400d693	     0xf84bc050000	                            je 0x400dc55	      9761	eval.c	FUNCTION_187	IF_1	IF_5	IF_6
0x400d699	          0x488b3b	                    mov rdi, qword [rbx]	      9787	eval.c	FUNCTION_187	IF_1	IF_10	CALL_15
0x400d69c	      0xe800000000	                          call 0x400d6a1	      9787	eval.c	FUNCTION_187	IF_1	IF_10	CALL_15
0x400d6a1	    0xc74424100100	               mov dword [rsp + 0x10], 1	      9719	eval.c	FUNCTION_187	IF_1
0x400d6a9	            0x85c0	                           test eax, eax	      9787	eval.c	FUNCTION_187	IF_1	IF_10	CALL_15
0x400d6ab	     0xf8463010000	                            je 0x400d814	      9787	eval.c	FUNCTION_187	IF_1	IF_10	CALL_15
0x400d6b1	          0x488b13	                    mov rdx, qword [rbx]	      9790	eval.c	FUNCTION_187	IF_1	IF_10	CALL_17
0x400d6b4	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      9790	eval.c	FUNCTION_187	IF_1	IF_10	CALL_17
0x400d6bb	          0x4889d7	                            mov rdi, rdx	      9790	eval.c	FUNCTION_187	IF_1	IF_10	CALL_17
0x400d6be	      0xb800000000	                              mov eax, 0	      9790	eval.c	FUNCTION_187	IF_1	IF_10	CALL_17
0x400d6c3	            0xf2ae	              repne scasb al, byte [rdi]	      9790	eval.c	FUNCTION_187	IF_1	IF_10	CALL_17
0x400d6c5	            0x89ce	                            mov esi, ecx	      9790	eval.c	FUNCTION_187	IF_1	IF_10	CALL_17
0x400d6c7	            0xf7de	                                 neg esi	      9790	eval.c	FUNCTION_187	IF_1	IF_10	CALL_17
0x400d6c9	          0x4889d7	                            mov rdi, rdx	      9790	eval.c	FUNCTION_187	IF_1	IF_10	CALL_17
0x400d6cc	      0xe800000000	                          call 0x400d6d1	      9790	eval.c	FUNCTION_187	IF_1	IF_10	CALL_17
0x400d6d1	          0x488903	                    mov qword [rbx], rax	      9790	eval.c	FUNCTION_187	IF_1	IF_10	CALL_17
0x400d6d4	      0x4c8b742418	            mov r14, qword [rsp + 0x18] 	      9791	eval.c	FUNCTION_187	IF_1	IF_10	CALL_18
0x400d6d9	          0x498b3e	                    mov rdi, qword [r14]	      9791	eval.c	FUNCTION_187	IF_1	IF_10	CALL_18
0x400d6dc	      0xe800000000	                          call 0x400d6e1	      9791	eval.c	FUNCTION_187	IF_1	IF_10	CALL_18
0x400d6e1	          0x488b03	                    mov rax, qword [rbx]	      9792	eval.c	FUNCTION_187	IF_1	IF_10
0x400d6e4	          0x498906	                    mov qword [r14], rax	      9792	eval.c	FUNCTION_187	IF_1	IF_10
0x400d6e7	          0x488b3b	                    mov rdi, qword [rbx]	      9793	eval.c	FUNCTION_187	IF_1	IF_10	IF_11
0x400d6ea	          0x4885ff	                           test rdi, rdi	      9793	eval.c	FUNCTION_187	IF_1	IF_10	IF_11
0x400d6ed	     0xf8469050000	                            je 0x400dc5c	      9793	eval.c	FUNCTION_187	IF_1	IF_10	IF_11
0x400d6f3	      0xe800000000	                          call 0x400d6f8	      9795	eval.c	FUNCTION_187	IF_1	IF_10	CALL_19
0x400d6f8	    0xc74424100100	               mov dword [rsp + 0x10], 1	      9719	eval.c	FUNCTION_187	IF_1
0x400d700	      0xe90f010000	                           jmp 0x400d814	      9719	eval.c	FUNCTION_187	IF_1
0x400d705	          0x83c002	                              add eax, 2	      9805	eval.c	FUNCTION_187	WHILE_1
0x400d708	        0x41890424	                    mov dword [r12], eax	      9805	eval.c	FUNCTION_187	WHILE_1
0x400d70c	        0x4183fd38	                          cmp r13d, 0x38	      9806	eval.c	FUNCTION_187	WHILE_1	IF_12
0x400d710	     0xf8512060000	                           jne 0x400dd28	      9806	eval.c	FUNCTION_187	WHILE_1	IF_12
0x400d716	      0xe9f9000000	                           jmp 0x400d814	      9806	eval.c	FUNCTION_187	WHILE_1	IF_12
0x400d71b	          0x488b3b	                    mov rdi, qword [rbx]	      9817	eval.c	FUNCTION_187	WHILE_1	IF_13	IF_14
0x400d71e	          0x803f7e	                    cmp byte [rdi], 0x7e	      9817	eval.c	FUNCTION_187	WHILE_1	IF_13	IF_14
0x400d721	            0x750f	                           jne 0x400d732	      9817	eval.c	FUNCTION_187	WHILE_1	IF_13	IF_14
0x400d723	      0xe800000000	                          call 0x400d728	      9818	eval.c	FUNCTION_187	WHILE_1	IF_13	CALL_20
0x400d728	          0x4989c6	                            mov r14, rax	      9818	eval.c	FUNCTION_187	WHILE_1	IF_13	CALL_20
0x400d72b	      0x4889442408	                mov qword [rsp + 8], rax	      9818	eval.c	FUNCTION_187	WHILE_1	IF_13	CALL_20
0x400d730	            0xeb23	                           jmp 0x400d755	      9818	eval.c	FUNCTION_187	WHILE_1	IF_13	CALL_20
0x400d732	      0xbe00000000	                              mov esi, 0	      9820	eval.c	FUNCTION_187	WHILE_1	IF_13	CALL_21
0x400d737	          0x488b3b	                    mov rdi, qword [rbx]	      9820	eval.c	FUNCTION_187	WHILE_1	IF_13	CALL_21
0x400d73a	      0xe800000000	                          call 0x400d73f	      9820	eval.c	FUNCTION_187	WHILE_1	IF_13	CALL_21
0x400d73f	          0x4989c6	                            mov r14, rax	      9820	eval.c	FUNCTION_187	WHILE_1	IF_13	CALL_21
0x400d742	      0x4889442408	                mov qword [rsp + 8], rax	      9820	eval.c	FUNCTION_187	WHILE_1	IF_13	CALL_21
0x400d747	            0xeb0c	                           jmp 0x400d755	      9820	eval.c	FUNCTION_187	WHILE_1	IF_13	CALL_21
0x400d749	          0x4c8b33	                    mov r14, qword [rbx]	      9823	eval.c	FUNCTION_187	WHILE_1	ELSE_3
0x400d74c	    0x48c744240800	                  mov qword [rsp + 8], 0	      9813	eval.c	FUNCTION_187	WHILE_1
0x400d755	    0xc74424100000	               mov dword [rsp + 0x10], 0	      9825	eval.c	FUNCTION_187	WHILE_1	ELSE_3
0x400d75d	          0x4d85f6	                           test r14, r14	      9827	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15
0x400d760	     0xf84ae000000	                            je 0x400d814	      9827	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15
0x400d766	        0x4183fd2e	                          cmp r13d, 0x2e	      9829	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16
0x400d76a	            0x754d	                           jne 0x400d7b9	      9829	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16
0x400d76c	      0xbe00100000	                         mov esi, 0x1000	      9831	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16	CALL_22
0x400d771	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      9831	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16	CALL_22
0x400d776	      0xe800000000	                          call 0x400d77b	      9831	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16	CALL_22
0x400d77b	      0x488d742430	                   lea rsi, [rsp + 0x30]	      9832	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16	CALL_23
0x400d780	          0x4c89f7	                            mov rdi, r14	      9832	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16	CALL_23
0x400d783	      0xe800000000	                          call 0x400d788	      9832	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16	CALL_23
0x400d788	          0x4885c0	                           test rax, rax	      9833	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16	IF_17
0x400d78b	            0x7475	                            je 0x400d802	      9833	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16	IF_17
0x400d78d	          0x488903	                    mov qword [rbx], rax	      9835	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16	IF_17
0x400d790	      0x4c8b742408	                mov r14, qword [rsp + 8]	      9836	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16	IF_17	IF_18
0x400d795	          0x4d85f6	                           test r14, r14	      9836	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16	IF_17	IF_18
0x400d798	            0x7468	                            je 0x400d802	      9836	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16	IF_17	IF_18
0x400d79a	      0x4c8b6c2418	            mov r13, qword [rsp + 0x18] 	      9838	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16	IF_17	IF_18	CALL_24
0x400d79f	        0x498b7d00	                    mov rdi, qword [r13]	      9838	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16	IF_17	IF_18	CALL_24
0x400d7a3	      0xe800000000	                          call 0x400d7a8	      9838	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16	IF_17	IF_18	CALL_24
0x400d7a8	          0x4c89e9	                            mov rcx, r13	      9839	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16	IF_17	IF_18
0x400d7ab	          0x4c8931	                    mov qword [rcx], r14	      9839	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16	IF_17	IF_18
0x400d7ae	    0x48c744240800	                  mov qword [rsp + 8], 0	      9840	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16	IF_17	IF_18
0x400d7b7	            0xeb49	                           jmp 0x400d802	      9840	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16	IF_17	IF_18
0x400d7b9	    0x41b801000000	                              mov r8d, 1	      9846	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	ELSE_4	CALL_25
0x400d7bf	      0xb900100000	                         mov ecx, 0x1000	      9846	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	ELSE_4	CALL_25
0x400d7c4	      0x488d542430	                   lea rdx, [rsp + 0x30]	      9846	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	ELSE_4	CALL_25
0x400d7c9	          0x4c89f6	                            mov rsi, r14	      9846	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	ELSE_4	CALL_25
0x400d7cc	      0xbf00000000	                              mov edi, 0	      9846	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	ELSE_4	CALL_25
0x400d7d1	      0xe800000000	                          call 0x400d7d6	      9846	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	ELSE_4	CALL_25
0x400d7d6	      0x807c24307e	            cmp byte [rsp + 0x30], 0x7e 	      9848	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	ELSE_4	IF_19
0x400d7db	            0x7525	                           jne 0x400d802	      9848	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	ELSE_4	IF_19
0x400d7dd	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      9850	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	ELSE_4	IF_19	CALL_26
0x400d7e2	      0xe800000000	                          call 0x400d7e7	      9850	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	ELSE_4	IF_19	CALL_26
0x400d7e7	          0x4989c5	                            mov r13, rax	      9850	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	ELSE_4	IF_19	CALL_26
0x400d7ea	          0x4885c0	                           test rax, rax	      9851	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	ELSE_4	IF_19	IF_20
0x400d7ed	            0x7413	                            je 0x400d802	      9851	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	ELSE_4	IF_19	IF_20
0x400d7ef	          0x488903	                    mov qword [rbx], rax	      9853	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	ELSE_4	IF_19	IF_20
0x400d7f2	      0x4c8b742418	            mov r14, qword [rsp + 0x18] 	      9854	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	ELSE_4	IF_19	IF_20	CALL_27
0x400d7f7	          0x498b3e	                    mov rdi, qword [r14]	      9854	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	ELSE_4	IF_19	IF_20	CALL_27
0x400d7fa	      0xe800000000	                          call 0x400d7ff	      9854	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	ELSE_4	IF_19	IF_20	CALL_27
0x400d7ff	          0x4d892e	                    mov qword [r14], r13	      9855	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	ELSE_4	IF_19	IF_20
0x400d802	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      9859	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	CALL_28
0x400d807	      0xe800000000	                          call 0x400d80c	      9859	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	CALL_28
0x400d80c	    0xc74424100000	               mov dword [rsp + 0x10], 0	      9825	eval.c	FUNCTION_187	WHILE_1	ELSE_3
0x400d814	        0x418b0424	                    mov eax, dword [r12]	      9802	eval.c	FUNCTION_187	WHILE_1
0x400d818	          0x4863d0	                         movsxd rdx, eax	      9802	eval.c	FUNCTION_187	WHILE_1
0x400d81b	      0x807c15003a	              cmp byte [rbp + rdx], 0x3a	      9802	eval.c	FUNCTION_187	WHILE_1
0x400d820	            0x7524	                           jne 0x400d846	      9802	eval.c	FUNCTION_187	WHILE_1
0x400d822	    0x440fb66c1501	       movzx r13d, byte [rbp + rdx + 1] 	      9803	eval.c	FUNCTION_187	WHILE_1
0x400d828	        0x4183fd2e	                          cmp r13d, 0x2e	      9803	eval.c	FUNCTION_187	WHILE_1
0x400d82c	     0xf845f040000	                            je 0x400dc91	      9803	eval.c	FUNCTION_187	WHILE_1
0x400d832	        0x4183fd7e	                          cmp r13d, 0x7e	      9803	eval.c	FUNCTION_187	WHILE_1
0x400d836	     0xf84c9feffff	                            je 0x400d705	      9803	eval.c	FUNCTION_187	WHILE_1
0x400d83c	        0x4183fd38	                          cmp r13d, 0x38	      9803	eval.c	FUNCTION_187	WHILE_1
0x400d840	     0xf84bffeffff	                            je 0x400d705	      9803	eval.c	FUNCTION_187	WHILE_1
0x400d846	          0x488b3b	                    mov rdi, qword [rbx]	      9863	eval.c	FUNCTION_187	CALL_29
0x400d849	      0xe800000000	                          call 0x400d84e	      9863	eval.c	FUNCTION_187	CALL_29
0x400d84e	          0x4989c5	                            mov r13, rax	      9863	eval.c	FUNCTION_187	CALL_29
0x400d851	          0x488b3b	                    mov rdi, qword [rbx]	      9864	eval.c	FUNCTION_187	CALL_30
0x400d854	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      9864	eval.c	FUNCTION_187	CALL_30
0x400d85b	      0xb800000000	                              mov eax, 0	      9864	eval.c	FUNCTION_187	CALL_30
0x400d860	            0xf2ae	              repne scasb al, byte [rdi]	      9864	eval.c	FUNCTION_187	CALL_30
0x400d862	          0x48f7d1	                                 not rcx	      9864	eval.c	FUNCTION_187	CALL_30
0x400d865	        0x488d41ff	                      lea rax, [rcx - 1]	      9864	eval.c	FUNCTION_187	CALL_30
0x400d869	          0x418907	                    mov dword [r15], eax	      9864	eval.c	FUNCTION_187	CALL_30
0x400d86c	      0xe9d9000000	                           jmp 0x400d94a	      9868	eval.c	FUNCTION_187	WHILE_2
0x400d871	      0x834c241402	                or dword [rsp + 0x14], 2	      9870	eval.c	FUNCTION_187	WHILE_2
0x400d876	          0x83c002	                              add eax, 2	      9871	eval.c	FUNCTION_187	WHILE_2
0x400d879	        0x41890424	                    mov dword [r12], eax	      9871	eval.c	FUNCTION_187	WHILE_2
0x400d87d	          0x488b3b	                    mov rdi, qword [rbx]	      9872	eval.c	FUNCTION_187	WHILE_2	CALL_31
0x400d880	      0xe800000000	                          call 0x400d885	      9872	eval.c	FUNCTION_187	WHILE_2	CALL_31
0x400d885	          0x4989c6	                            mov r14, rax	      9872	eval.c	FUNCTION_187	WHILE_2	CALL_31
0x400d888	          0x4939c5	                            cmp r13, rax	      9873	eval.c	FUNCTION_187	WHILE_2	WHILE_3	CALL_32
0x400d88b	            0x7731	                            ja 0x400d8be	      9873	eval.c	FUNCTION_187	WHILE_2	WHILE_3	CALL_32
0x400d88d	      0xe916040000	                           jmp 0x400dca8	      9873	eval.c	FUNCTION_187	WHILE_2	WHILE_3	CALL_32
0x400d892	      0xb801000000	                              mov eax, 1	      9874	eval.c	FUNCTION_187	WHILE_2	CALL_33
0x400d897	    0x833d00000000	               cmp dword [0x0400d89e], 0	      9874	eval.c	FUNCTION_187	WHILE_2	CALL_33
0x400d89e	            0x7410	                            je 0x400d8b0	      9874	eval.c	FUNCTION_187	WHILE_2	CALL_33
0x400d8a0	        0x498d75ff	                      lea rsi, [r13 - 1]	      9874	eval.c	FUNCTION_187	WHILE_2	CALL_33
0x400d8a4	          0x488b3b	                    mov rdi, qword [rbx]	      9874	eval.c	FUNCTION_187	WHILE_2	CALL_33
0x400d8a7	    0xff1500000000	                 call qword [0x0400d8ad]	      9874	eval.c	FUNCTION_187	WHILE_2	CALL_33
0x400d8ad	          0x83c001	                              add eax, 1	      9874	eval.c	FUNCTION_187	WHILE_2	CALL_33
0x400d8b0	            0x4898	                                    cdqe	      9874	eval.c	FUNCTION_187	WHILE_2	CALL_33
0x400d8b2	          0x4929c5	                            sub r13, rax	      9874	eval.c	FUNCTION_187	WHILE_2	CALL_33
0x400d8b5	          0x4d39ee	                            cmp r14, r13	      9873	eval.c	FUNCTION_187	WHILE_2	WHILE_3	CALL_32
0x400d8b8	     0xf83ea030000	                           jae 0x400dca8	      9873	eval.c	FUNCTION_187	WHILE_2	WHILE_3	CALL_32
0x400d8be	          0x4c89ee	                            mov rsi, r13	      9873	eval.c	FUNCTION_187	WHILE_2	WHILE_3	CALL_32
0x400d8c1	          0x4c89f7	                            mov rdi, r14	      9873	eval.c	FUNCTION_187	WHILE_2	WHILE_3	CALL_32
0x400d8c4	      0xe800000000	                          call 0x400d8c9	      9873	eval.c	FUNCTION_187	WHILE_2	WHILE_3	CALL_32
0x400d8c9	            0x85c0	                           test eax, eax	      9873	eval.c	FUNCTION_187	WHILE_2	WHILE_3	CALL_32
0x400d8cb	            0x75c5	                           jne 0x400d892	      9873	eval.c	FUNCTION_187	WHILE_2	WHILE_3	CALL_32
0x400d8cd	          0x4c89e8	                            mov rax, r13	      9875	eval.c	FUNCTION_187	WHILE_2
0x400d8d0	          0x482b03	                    sub rax, qword [rbx]	      9875	eval.c	FUNCTION_187	WHILE_2
0x400d8d3	          0x418907	                    mov dword [r15], eax	      9875	eval.c	FUNCTION_187	WHILE_2
0x400d8d6	            0x85c0	                           test eax, eax	      9880	eval.c	FUNCTION_187	WHILE_2	IF_22
0x400d8d8	            0x7407	                            je 0x400d8e1	      9880	eval.c	FUNCTION_187	WHILE_2	IF_22
0x400d8da	          0x4d39ee	                            cmp r14, r13	      9892	eval.c	FUNCTION_187	WHILE_2	ELSE_5	WHILE_4	CALL_36
0x400d8dd	            0x725c	                            jb 0x400d93b	      9892	eval.c	FUNCTION_187	WHILE_2	ELSE_5	WHILE_4	CALL_36
0x400d8df	            0xeb69	                           jmp 0x400d94a	      9892	eval.c	FUNCTION_187	WHILE_2	ELSE_5	WHILE_4	CALL_36
0x400d8e1	      0xbf00000000	                              mov edi, 0	      9883	eval.c	FUNCTION_187	WHILE_2	IF_22	CALL_34
0x400d8e6	      0xe800000000	                          call 0x400d8eb	      9883	eval.c	FUNCTION_187	WHILE_2	IF_22	CALL_34
0x400d8eb	          0x4989c5	                            mov r13, rax	      9883	eval.c	FUNCTION_187	WHILE_2	IF_22	CALL_34
0x400d8ee	          0x4885c0	                           test rax, rax	      9884	eval.c	FUNCTION_187	WHILE_2	IF_22	IF_23
0x400d8f1	     0xf846c030000	                            je 0x400dc63	      9884	eval.c	FUNCTION_187	WHILE_2	IF_22	IF_23
0x400d8f7	      0x4c8b742418	            mov r14, qword [rsp + 0x18] 	      9886	eval.c	FUNCTION_187	WHILE_2	IF_22	CALL_35
0x400d8fc	          0x498b3e	                    mov rdi, qword [r14]	      9886	eval.c	FUNCTION_187	WHILE_2	IF_22	CALL_35
0x400d8ff	      0xe800000000	                          call 0x400d904	      9886	eval.c	FUNCTION_187	WHILE_2	IF_22	CALL_35
0x400d904	          0x4c892b	                    mov qword [rbx], r13	      9887	eval.c	FUNCTION_187	WHILE_2	IF_22
0x400d907	          0x4d892e	                    mov qword [r14], r13	      9887	eval.c	FUNCTION_187	WHILE_2	IF_22
0x400d90a	    0x41c707010000	                      mov dword [r15], 1	      9888	eval.c	FUNCTION_187	WHILE_2	IF_22
0x400d911	            0xeb37	                           jmp 0x400d94a	      9888	eval.c	FUNCTION_187	WHILE_2	IF_22
0x400d913	      0xb801000000	                              mov eax, 1	      9893	eval.c	FUNCTION_187	WHILE_2	ELSE_5	CALL_37
0x400d918	    0x833d00000000	               cmp dword [0x0400d91f], 0	      9893	eval.c	FUNCTION_187	WHILE_2	ELSE_5	CALL_37
0x400d91f	            0x7410	                            je 0x400d931	      9893	eval.c	FUNCTION_187	WHILE_2	ELSE_5	CALL_37
0x400d921	        0x498d75ff	                      lea rsi, [r13 - 1]	      9893	eval.c	FUNCTION_187	WHILE_2	ELSE_5	CALL_37
0x400d925	          0x488b3b	                    mov rdi, qword [rbx]	      9893	eval.c	FUNCTION_187	WHILE_2	ELSE_5	CALL_37
0x400d928	    0xff1500000000	                 call qword [0x0400d92e]	      9893	eval.c	FUNCTION_187	WHILE_2	ELSE_5	CALL_37
0x400d92e	          0x83c001	                              add eax, 1	      9893	eval.c	FUNCTION_187	WHILE_2	ELSE_5	CALL_37
0x400d931	            0x4898	                                    cdqe	      9893	eval.c	FUNCTION_187	WHILE_2	ELSE_5	CALL_37
0x400d933	          0x4929c5	                            sub r13, rax	      9893	eval.c	FUNCTION_187	WHILE_2	ELSE_5	CALL_37
0x400d936	          0x4d39ee	                            cmp r14, r13	      9892	eval.c	FUNCTION_187	WHILE_2	ELSE_5	WHILE_4	CALL_36
0x400d939	            0x730f	                           jae 0x400d94a	      9892	eval.c	FUNCTION_187	WHILE_2	ELSE_5	WHILE_4	CALL_36
0x400d93b	          0x4c89ee	                            mov rsi, r13	      9892	eval.c	FUNCTION_187	WHILE_2	ELSE_5	WHILE_4	CALL_36
0x400d93e	          0x4c89f7	                            mov rdi, r14	      9892	eval.c	FUNCTION_187	WHILE_2	ELSE_5	WHILE_4	CALL_36
0x400d941	      0xe800000000	                          call 0x400d946	      9892	eval.c	FUNCTION_187	WHILE_2	ELSE_5	WHILE_4	CALL_36
0x400d946	            0x85c0	                           test eax, eax	      9892	eval.c	FUNCTION_187	WHILE_2	ELSE_5	WHILE_4	CALL_36
0x400d948	            0x74c9	                            je 0x400d913	      9892	eval.c	FUNCTION_187	WHILE_2	ELSE_5	WHILE_4	CALL_36
0x400d94a	        0x418b0424	                    mov eax, dword [r12]	      9868	eval.c	FUNCTION_187	WHILE_2
0x400d94e	          0x4863d0	                         movsxd rdx, eax	      9868	eval.c	FUNCTION_187	WHILE_2
0x400d951	      0x807c15003a	              cmp byte [rbp + rdx], 0x3a	      9868	eval.c	FUNCTION_187	WHILE_2
0x400d956	     0xf856b030000	                           jne 0x400dcc7	      9868	eval.c	FUNCTION_187	WHILE_2
0x400d95c	       0xfb64c1501	        movzx ecx, byte [rbp + rdx + 1] 	      9868	eval.c	FUNCTION_187	WHILE_2
0x400d961	          0x80f968	                            cmp cl, 0x68	      9868	eval.c	FUNCTION_187	WHILE_2
0x400d964	     0xf8407ffffff	                            je 0x400d871	      9868	eval.c	FUNCTION_187	WHILE_2
0x400d96a	          0x80f938	                            cmp cl, 0x38	      9898	eval.c	FUNCTION_187	IF_24
0x400d96d	            0x7517	                           jne 0x400d986	      9898	eval.c	FUNCTION_187	IF_24
0x400d96f	          0x8d5002	                      lea edx, [rax + 2]	      9900	eval.c	FUNCTION_187	IF_24
0x400d972	        0x41891424	                    mov dword [r12], edx	      9900	eval.c	FUNCTION_187	IF_24
0x400d976	            0x89d0	                            mov eax, edx	      9953	eval.c	FUNCTION_187	IF_33
0x400d978	          0x4863d2	                         movsxd rdx, edx	      9953	eval.c	FUNCTION_187	IF_33
0x400d97b	      0x807c15003a	              cmp byte [rbp + rdx], 0x3a	      9953	eval.c	FUNCTION_187	IF_33
0x400d980	     0xf8541030000	                           jne 0x400dcc7	      9953	eval.c	FUNCTION_187	IF_33
0x400d986	      0x807c150174	         cmp byte [rbp + rdx + 1], 0x74 	      9953	eval.c	FUNCTION_187	IF_33
0x400d98b	     0xf852d030000	                           jne 0x400dcbe	      9953	eval.c	FUNCTION_187	IF_33
0x400d991	          0x83c002	                              add eax, 2	      9955	eval.c	FUNCTION_187	IF_33
0x400d994	        0x41890424	                    mov dword [r12], eax	      9955	eval.c	FUNCTION_187	IF_33
0x400d998	          0x4c89e8	                            mov rax, r13	      9956	eval.c	FUNCTION_187	IF_33
0x400d99b	          0x482b03	                    sub rax, qword [rbx]	      9956	eval.c	FUNCTION_187	IF_33
0x400d99e	          0x412907	                    sub dword [r15], eax	      9956	eval.c	FUNCTION_187	IF_33
0x400d9a1	          0x4c892b	                    mov qword [rbx], r13	      9957	eval.c	FUNCTION_187	IF_33
0x400d9a4	        0x49630424	                 movsxd rax, dword [r12]	      9962	eval.c	FUNCTION_187	WHILE_5
0x400d9a8	      0x807c05003a	              cmp byte [rbp + rax], 0x3a	      9962	eval.c	FUNCTION_187	WHILE_5
0x400d9ad	     0xf85b0030000	                           jne 0x400dd63	      9962	eval.c	FUNCTION_187	WHILE_5
0x400d9b3	       0xfb6540501	        movzx edx, byte [rbp + rax + 1] 	      9963	eval.c	FUNCTION_187	WHILE_5
0x400d9b8	          0x80fa65	                            cmp dl, 0x65	      9963	eval.c	FUNCTION_187	WHILE_5
0x400d9bb	            0x7409	                            je 0x400d9c6	      9963	eval.c	FUNCTION_187	WHILE_5
0x400d9bd	          0x80fa72	                            cmp dl, 0x72	      9963	eval.c	FUNCTION_187	WHILE_5
0x400d9c0	     0xf8515030000	                           jne 0x400dcdb	      9963	eval.c	FUNCTION_187	WHILE_5
0x400d9c6	          0x80fa65	                            cmp dl, 0x65	      9969	eval.c	FUNCTION_187	WHILE_5	IF_34
0x400d9c9	            0x750e	                           jne 0x400d9d9	      9969	eval.c	FUNCTION_187	WHILE_5	IF_34
0x400d9cb	          0x488b03	                    mov rax, qword [rbx]	      9969	eval.c	FUNCTION_187	WHILE_5	IF_34
0x400d9ce	          0x4939c5	                            cmp r13, rax	      9969	eval.c	FUNCTION_187	WHILE_5	IF_34
0x400d9d1	            0x7306	                           jae 0x400d9d9	      9969	eval.c	FUNCTION_187	WHILE_5	IF_34
0x400d9d3	        0x4883e802	                              sub rax, 2	      9970	eval.c	FUNCTION_187	WHILE_5	IF_34
0x400d9d7	            0xeb0b	                           jmp 0x400d9e4	      9970	eval.c	FUNCTION_187	WHILE_5	IF_34
0x400d9d9	          0x496307	                 movsxd rax, dword [r15]	      9972	eval.c	FUNCTION_187	WHILE_5	ELSE_7
0x400d9dc	          0x488b0b	                    mov rcx, qword [rbx]	      9972	eval.c	FUNCTION_187	WHILE_5	ELSE_7
0x400d9df	      0x488d4401ff	                lea rax, [rcx + rax - 1]	      9972	eval.c	FUNCTION_187	WHILE_5	ELSE_7
0x400d9e4	          0x4939c5	                            cmp r13, rax	      9973	eval.c	FUNCTION_187	WHILE_5	FOR_2
0x400d9e7	     0xf8368030000	                           jae 0x400dd55	      9973	eval.c	FUNCTION_187	WHILE_5	FOR_2
0x400d9ed	          0x80382e	                    cmp byte [rax], 0x2e	      9974	eval.c	FUNCTION_187	WHILE_5	FOR_2	IF_35
0x400d9f0	            0x750e	                           jne 0x400da00	      9974	eval.c	FUNCTION_187	WHILE_5	FOR_2	IF_35
0x400d9f2	      0xe950030000	                           jmp 0x400dd47	      9974	eval.c	FUNCTION_187	WHILE_5	FOR_2	IF_35
0x400d9f7	          0x80382e	                    cmp byte [rax], 0x2e	      9974	eval.c	FUNCTION_187	WHILE_5	FOR_2	IF_35
0x400d9fa	     0xf84cd020000	                            je 0x400dccd	      9974	eval.c	FUNCTION_187	WHILE_5	FOR_2	IF_35
0x400da00	        0x4883e801	                              sub rax, 1	      9973	eval.c	FUNCTION_187	WHILE_5	FOR_2
0x400da04	          0x4939c5	                            cmp r13, rax	      9973	eval.c	FUNCTION_187	WHILE_5	FOR_2
0x400da07	            0x75ee	                           jne 0x400d9f7	      9973	eval.c	FUNCTION_187	WHILE_5	FOR_2
0x400da09	      0xe947030000	                           jmp 0x400dd55	      9973	eval.c	FUNCTION_187	WHILE_5	FOR_2
0x400da0e	        0x4883c001	                              add rax, 1	      9980	eval.c	FUNCTION_187	WHILE_5	IF_36	IF_37
0x400da12	          0x488b13	                    mov rdx, qword [rbx]	      9980	eval.c	FUNCTION_187	WHILE_5	IF_36	IF_37
0x400da15	          0x4829c2	                            sub rdx, rax	      9980	eval.c	FUNCTION_187	WHILE_5	IF_36	IF_37
0x400da18	          0x410117	                    add dword [r15], edx	      9980	eval.c	FUNCTION_187	WHILE_5	IF_36	IF_37
0x400da1b	          0x488903	                    mov qword [rbx], rax	      9981	eval.c	FUNCTION_187	WHILE_5	IF_36	IF_37
0x400da1e	            0xeb19	                           jmp 0x400da39	      9981	eval.c	FUNCTION_187	WHILE_5	IF_36	IF_37
0x400da20	          0x4c3b2b	                    cmp r13, qword [rbx]	      9992	eval.c	FUNCTION_187	WHILE_5	IF_36	ELSE_8	IF_40
0x400da23	            0x7214	                            jb 0x400da39	      9992	eval.c	FUNCTION_187	WHILE_5	IF_36	ELSE_8	IF_40
0x400da25	    0x41c707000000	                      mov dword [r15], 0	      9993	eval.c	FUNCTION_187	WHILE_5	IF_36	ELSE_8	IF_40
0x400da2c	            0xeb0b	                           jmp 0x400da39	      9993	eval.c	FUNCTION_187	WHILE_5	IF_36	ELSE_8	IF_40
0x400da2e	          0x4939c5	                            cmp r13, rax	      9997	eval.c	FUNCTION_187	WHILE_5	ELSE_9	IF_41
0x400da31	            0x7306	                           jae 0x400da39	      9997	eval.c	FUNCTION_187	WHILE_5	ELSE_9	IF_41
0x400da33	          0x482b03	                    sub rax, qword [rbx]	      9998	eval.c	FUNCTION_187	WHILE_5	ELSE_9	IF_41
0x400da36	          0x418907	                    mov dword [r15], eax	      9998	eval.c	FUNCTION_187	WHILE_5	ELSE_9	IF_41
0x400da39	        0x418b0424	                    mov eax, dword [r12]	     10000	eval.c	FUNCTION_187	WHILE_5
0x400da3d	          0x83c002	                              add eax, 2	     10000	eval.c	FUNCTION_187	WHILE_5
0x400da40	        0x41890424	                    mov dword [r12], eax	     10000	eval.c	FUNCTION_187	WHILE_5
0x400da44	            0x4898	                                    cdqe	      9962	eval.c	FUNCTION_187	WHILE_5
0x400da46	      0x807c05003a	              cmp byte [rbp + rax], 0x3a	      9962	eval.c	FUNCTION_187	WHILE_5
0x400da4b	     0xf8512030000	                           jne 0x400dd63	      9962	eval.c	FUNCTION_187	WHILE_5
0x400da51	       0xfb6540501	        movzx edx, byte [rbp + rax + 1] 	      9963	eval.c	FUNCTION_187	WHILE_5
0x400da56	          0x80fa65	                            cmp dl, 0x65	      9963	eval.c	FUNCTION_187	WHILE_5
0x400da59	     0xf8467ffffff	                            je 0x400d9c6	      9963	eval.c	FUNCTION_187	WHILE_5
0x400da5f	          0x80fa72	                            cmp dl, 0x72	      9963	eval.c	FUNCTION_187	WHILE_5
0x400da62	     0xf845effffff	                            je 0x400d9c6	      9963	eval.c	FUNCTION_187	WHILE_5
0x400da68	      0xe96e020000	                           jmp 0x400dcdb	      9963	eval.c	FUNCTION_187	WHILE_5
0x400da6d	          0x80fa67	                            cmp dl, 0x67	     10007	eval.c	FUNCTION_187	IF_42
0x400da70	     0xf8541010000	                           jne 0x400dbb7	     10007	eval.c	FUNCTION_187	IF_42
0x400da76	      0x807c050273	         cmp byte [rbp + rax + 2], 0x73 	     10007	eval.c	FUNCTION_187	IF_42
0x400da7b	     0xf846a020000	                            je 0x400dceb	     10007	eval.c	FUNCTION_187	IF_42
0x400da81	      0xe931010000	                           jmp 0x400dbb7	     10007	eval.c	FUNCTION_187	IF_42
0x400da86	        0x4c8d7001	                      lea r14, [rax + 1]	     10024	eval.c	FUNCTION_187	IF_42
0x400da8a	        0x440fb628	                  movzx r13d, byte [rax]	     10024	eval.c	FUNCTION_187	IF_42
0x400da8e	          0x4585ed	                         test r13d, r13d	     10025	eval.c	FUNCTION_187	IF_42	IF_44
0x400da91	     0xf8420010000	                            je 0x400dbb7	     10025	eval.c	FUNCTION_187	IF_42	IF_44
0x400da97	          0x4489ee	                           mov esi, r13d	     10028	eval.c	FUNCTION_187	IF_42	IF_44	CALL_45
0x400da9a	          0x4c89f7	                            mov rdi, r14	     10028	eval.c	FUNCTION_187	IF_42	IF_44	CALL_45
0x400da9d	      0xe800000000	                          call 0x400daa2	     10028	eval.c	FUNCTION_187	IF_42	IF_44	CALL_45
0x400daa2	          0x4885c0	                           test rax, rax	     10029	eval.c	FUNCTION_187	IF_42	IF_44	IF_45
0x400daa5	     0xf840c010000	                            je 0x400dbb7	     10029	eval.c	FUNCTION_187	IF_42	IF_44	IF_45
0x400daab	      0x4889442420	             mov qword [rsp + 0x20], rax	     10031	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	CALL_46
0x400dab0	          0x4889c6	                            mov rsi, rax	     10031	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	CALL_46
0x400dab3	          0x4c29f6	                            sub rsi, r14	     10031	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	CALL_46
0x400dab6	          0x4c89f7	                            mov rdi, r14	     10031	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	CALL_46
0x400dab9	      0xe800000000	                          call 0x400dabe	     10031	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	CALL_46
0x400dabe	      0x4889442408	                mov qword [rsp + 8], rax	     10032	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46
0x400dac3	          0x4885c0	                           test rax, rax	     10032	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46
0x400dac6	     0xf84eb000000	                            je 0x400dbb7	     10032	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46
0x400dacc	      0x4c8b742420	            mov r14, qword [rsp + 0x20] 	     10034	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46
0x400dad1	        0x4983c601	                              add r14, 1	     10034	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46
0x400dad5	          0x4489ee	                           mov esi, r13d	     10036	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	CALL_47
0x400dad8	          0x4c89f7	                            mov rdi, r14	     10036	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	CALL_47
0x400dadb	      0xe800000000	                          call 0x400dae0	     10036	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	CALL_47
0x400dae0	          0x4989c5	                            mov r13, rax	     10036	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	CALL_47
0x400dae3	          0x4885c0	                           test rax, rax	     10037	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47
0x400dae6	     0xf844c020000	                            je 0x400dd38	     10037	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47
0x400daec	          0x4889c6	                            mov rsi, rax	     10039	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	CALL_48
0x400daef	          0x4c29f6	                            sub rsi, r14	     10039	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	CALL_48
0x400daf2	          0x4c89f7	                            mov rdi, r14	     10039	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	CALL_48
0x400daf5	      0xe800000000	                          call 0x400dafa	     10039	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	CALL_48
0x400dafa	          0x4989c6	                            mov r14, rax	     10039	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	CALL_48
0x400dafd	          0x418b37	                    mov esi, dword [r15]	     10040	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	CALL_49
0x400db00	          0x488b3b	                    mov rdi, qword [rbx]	     10040	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	CALL_49
0x400db03	      0xe800000000	                          call 0x400db08	     10040	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	CALL_49
0x400db08	          0x4889c7	                            mov rdi, rax	     10040	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	CALL_49
0x400db0b	      0x4889442420	             mov qword [rsp + 0x20], rax	     10040	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	CALL_49
0x400db10	          0x4d85f6	                           test r14, r14	     10041	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48
0x400db13	            0x7477	                            je 0x400db8c	     10041	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48
0x400db15	          0x4885c0	                           test rax, rax	     10041	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48
0x400db18	            0x7472	                            je 0x400db8c	     10041	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48
0x400db1a	        0x498d4501	                      lea rax, [r13 + 1]	     10043	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48
0x400db1e	          0x4829e8	                            sub rax, rbp	     10043	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48
0x400db21	        0x41890424	                    mov dword [r12], eax	     10043	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48
0x400db25	      0x4c8b442428	              mov r8, qword [rsp + 0x28]	     10044	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48	CALL_50
0x400db2a	      0xb900000000	                              mov ecx, 0	     10044	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48	CALL_50
0x400db2f	          0x4c89f2	                            mov rdx, r14	     10044	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48	CALL_50
0x400db32	      0x488b742408	                mov rsi, qword [rsp + 8]	     10044	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48	CALL_50
0x400db37	      0xe800000000	                          call 0x400db3c	     10044	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48	CALL_50
0x400db3c	          0x4889c7	                            mov rdi, rax	     10044	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48	CALL_50
0x400db3f	    0x41bd00000000	                             mov r13d, 0	     10014	eval.c	FUNCTION_187	IF_42
0x400db45	          0x4885c0	                           test rax, rax	     10045	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48	IF_49
0x400db48	            0x7448	                            je 0x400db92	     10045	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48	IF_49
0x400db4a	          0x488903	                    mov qword [rbx], rax	     10047	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48	IF_49
0x400db4d	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	     10048	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48	IF_49	CALL_51
0x400db54	      0x4889442428	             mov qword [rsp + 0x28], rax	     10048	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48	IF_49	CALL_51
0x400db59	      0xb800000000	                              mov eax, 0	     10048	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48	IF_49	CALL_51
0x400db5e	            0xf2ae	              repne scasb al, byte [rdi]	     10048	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48	IF_49	CALL_51
0x400db60	          0x4889c8	                            mov rax, rcx	     10048	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48	IF_49	CALL_51
0x400db63	          0x48f7d0	                                 not rax	     10048	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48	IF_49	CALL_51
0x400db66	        0x4883e801	                              sub rax, 1	     10048	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48	IF_49	CALL_51
0x400db6a	          0x418907	                    mov dword [r15], eax	     10048	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48	IF_49	CALL_51
0x400db6d	      0x4c8b6c2418	            mov r13, qword [rsp + 0x18] 	     10049	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48	IF_49	CALL_52
0x400db72	        0x498b7d00	                    mov rdi, qword [r13]	     10049	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48	IF_49	CALL_52
0x400db76	      0xe800000000	                          call 0x400db7b	     10049	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48	IF_49	CALL_52
0x400db7b	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	     10050	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48	IF_49
0x400db80	        0x49897d00	                    mov qword [r13], rdi	     10050	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48	IF_49
0x400db84	    0x41bd01000000	                             mov r13d, 1	     10051	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48	IF_49
0x400db8a	            0xeb06	                           jmp 0x400db92	     10051	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48	IF_49
0x400db8c	    0x41bd00000000	                             mov r13d, 0	     10014	eval.c	FUNCTION_187	IF_42
0x400db92	          0x4c89f7	                            mov rdi, r14	     10054	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	CALL_53
0x400db95	      0xe800000000	                          call 0x400db9a	     10054	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	CALL_53
0x400db9a	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	     10055	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	CALL_54
0x400db9f	      0xe800000000	                          call 0x400dba4	     10055	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	CALL_54
0x400dba4	      0x488b7c2408	                mov rdi, qword [rsp + 8]	     10057	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	CALL_55
0x400dba9	      0xe800000000	                          call 0x400dbae	     10057	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	CALL_55
0x400dbae	          0x4585ed	                         test r13d, r13d	     10061	eval.c	FUNCTION_187	IF_42	IF_44	IF_50
0x400dbb1	     0xf85caf9ffff	                           jne 0x400d581	     10061	eval.c	FUNCTION_187	IF_42	IF_44	IF_50
0x400dbb7	        0x49631424	                 movsxd rdx, dword [r12]	     10066	eval.c	FUNCTION_187	IF_51
0x400dbbb	      0x807c15003a	              cmp byte [rbp + rdx], 0x3a	     10066	eval.c	FUNCTION_187	IF_51
0x400dbc0	     0xf85a4000000	                           jne 0x400dc6a	     10066	eval.c	FUNCTION_187	IF_51
0x400dbc6	        0x8b442414	            mov eax, dword [rsp + 0x14] 	     10066	eval.c	FUNCTION_187	IF_51
0x400dbca	      0x807c150153	         cmp byte [rbp + rdx + 1], 0x53 	     10066	eval.c	FUNCTION_187	IF_51
0x400dbcf	     0xf85a0000000	                           jne 0x400dc75	     10066	eval.c	FUNCTION_187	IF_51
0x400dbd5	          0x488b3b	                    mov rdi, qword [rbx]	     10069	eval.c	FUNCTION_187	IF_51
0x400dbd8	          0x496307	                 movsxd rax, dword [r15]	     10069	eval.c	FUNCTION_187	IF_51
0x400dbdb	          0x4801f8	                            add rax, rdi	     10069	eval.c	FUNCTION_187	IF_51
0x400dbde	        0x440fb628	                  movzx r13d, byte [rax]	     10069	eval.c	FUNCTION_187	IF_51
0x400dbe2	          0x4584ed	                         test r13b, r13b	     10070	eval.c	FUNCTION_187	IF_51	IF_52
0x400dbe5	     0xf8426010000	                            je 0x400dd11	     10070	eval.c	FUNCTION_187	IF_51	IF_52
0x400dbeb	          0xc60000	                       mov byte [rax], 0	     10071	eval.c	FUNCTION_187	IF_51	IF_52
0x400dbee	      0xba00000000	                              mov edx, 0	     10072	eval.c	FUNCTION_187	IF_51	CALL_56
0x400dbf3	      0xbe00000000	                              mov esi, 0	     10072	eval.c	FUNCTION_187	IF_51	CALL_56
0x400dbf8	          0x488b3b	                    mov rdi, qword [rbx]	     10072	eval.c	FUNCTION_187	IF_51	CALL_56
0x400dbfb	      0xe800000000	                          call 0x400dc00	     10072	eval.c	FUNCTION_187	IF_51	CALL_56
0x400dc00	          0x4889c5	                            mov rbp, rax	     10072	eval.c	FUNCTION_187	IF_51	CALL_56
0x400dc03	          0x496307	                 movsxd rax, dword [r15]	     10074	eval.c	FUNCTION_187	IF_51	IF_53
0x400dc06	          0x488b13	                    mov rdx, qword [rbx]	     10074	eval.c	FUNCTION_187	IF_51	IF_53
0x400dc09	        0x44882c02	              mov byte [rdx + rax], r13b	     10074	eval.c	FUNCTION_187	IF_51	IF_53
0x400dc0d	          0x4885ed	                           test rbp, rbp	     10075	eval.c	FUNCTION_187	IF_51	IF_54
0x400dc10	            0x745e	                            je 0x400dc70	     10075	eval.c	FUNCTION_187	IF_51	IF_54
0x400dc12	      0x4c8b742418	            mov r14, qword [rsp + 0x18] 	     10077	eval.c	FUNCTION_187	IF_51	CALL_57
0x400dc17	          0x498b3e	                    mov rdi, qword [r14]	     10077	eval.c	FUNCTION_187	IF_51	CALL_57
0x400dc1a	      0xe800000000	                          call 0x400dc1f	     10077	eval.c	FUNCTION_187	IF_51	CALL_57
0x400dc1f	          0x48892b	                    mov qword [rbx], rbp	     10078	eval.c	FUNCTION_187	IF_51
0x400dc22	          0x49892e	                    mov qword [r14], rbp	     10078	eval.c	FUNCTION_187	IF_51
0x400dc25	      0xb800000000	                              mov eax, 0	     10079	eval.c	FUNCTION_187	IF_51	CALL_58
0x400dc2a	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	     10079	eval.c	FUNCTION_187	IF_51	CALL_58
0x400dc31	          0x4889ef	                            mov rdi, rbp	     10079	eval.c	FUNCTION_187	IF_51	CALL_58
0x400dc34	            0xf2ae	              repne scasb al, byte [rdi]	     10079	eval.c	FUNCTION_187	IF_51	CALL_58
0x400dc36	          0x4889c8	                            mov rax, rcx	     10079	eval.c	FUNCTION_187	IF_51	CALL_58
0x400dc39	          0x48f7d0	                                 not rax	     10079	eval.c	FUNCTION_187	IF_51	CALL_58
0x400dc3c	        0x4883e801	                              sub rax, 1	     10079	eval.c	FUNCTION_187	IF_51	CALL_58
0x400dc40	          0x418907	                    mov dword [r15], eax	     10079	eval.c	FUNCTION_187	IF_51	CALL_58
0x400dc43	      0x4183042402	                      add dword [r12], 2	     10080	eval.c	FUNCTION_187	IF_51
0x400dc48	        0x8b442414	            mov eax, dword [rsp + 0x14] 	     10080	eval.c	FUNCTION_187	IF_51
0x400dc4c	            0xeb27	                           jmp 0x400dc75	     10080	eval.c	FUNCTION_187	IF_51
0x400dc4e	      0xb8ffffffff	                     mov eax, 0xffffffff	      9740	eval.c	FUNCTION_187	IF_1	IF_2	IF_3
0x400dc53	            0xeb20	                           jmp 0x400dc75	      9740	eval.c	FUNCTION_187	IF_1	IF_2	IF_3
0x400dc55	      0xb8ffffffff	                     mov eax, 0xffffffff	      9762	eval.c	FUNCTION_187	IF_1	IF_5	IF_6
0x400dc5a	            0xeb19	                           jmp 0x400dc75	      9762	eval.c	FUNCTION_187	IF_1	IF_5	IF_6
0x400dc5c	      0xb8ffffffff	                     mov eax, 0xffffffff	      9794	eval.c	FUNCTION_187	IF_1	IF_10	IF_11
0x400dc61	            0xeb12	                           jmp 0x400dc75	      9794	eval.c	FUNCTION_187	IF_1	IF_10	IF_11
0x400dc63	      0xb8ffffffff	                     mov eax, 0xffffffff	      9885	eval.c	FUNCTION_187	WHILE_2	IF_22	IF_23
0x400dc68	            0xeb0b	                           jmp 0x400dc75	      9885	eval.c	FUNCTION_187	WHILE_2	IF_22	IF_23
0x400dc6a	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      9885	eval.c	FUNCTION_187	WHILE_2	IF_22	IF_23
0x400dc6e	            0xeb05	                           jmp 0x400dc75	      9885	eval.c	FUNCTION_187	WHILE_2	IF_22	IF_23
0x400dc70	      0xb8ffffffff	                     mov eax, 0xffffffff	     10076	eval.c	FUNCTION_187	IF_51	IF_54
0x400dc75	    0x488b8c243810	          mov rcx, qword [rsp + 0x1038] 	     10084	eval.c	FUNCTION_187
0x400dc7d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	     10084	eval.c	FUNCTION_187
0x400dc86	     0xf84e5000000	                            je 0x400dd71	     10084	eval.c	FUNCTION_187
0x400dc8c	      0xe9db000000	                           jmp 0x400dd6c	     10084	eval.c	FUNCTION_187
0x400dc91	          0x83c002	                              add eax, 2	      9805	eval.c	FUNCTION_187	WHILE_1
0x400dc94	        0x41890424	                    mov dword [r12], eax	      9805	eval.c	FUNCTION_187	WHILE_1
0x400dc98	      0x837c241000	               cmp dword [rsp + 0x10], 0	      9815	eval.c	FUNCTION_187	WHILE_1	IF_13
0x400dc9d	     0xf8478faffff	                            je 0x400d71b	      9815	eval.c	FUNCTION_187	WHILE_1	IF_13
0x400dca3	      0xe9a1faffff	                           jmp 0x400d749	      9815	eval.c	FUNCTION_187	WHILE_1	IF_13
0x400dca8	          0x4c89e8	                            mov rax, r13	      9875	eval.c	FUNCTION_187	WHILE_2
0x400dcab	          0x482b03	                    sub rax, qword [rbx]	      9875	eval.c	FUNCTION_187	WHILE_2
0x400dcae	          0x418907	                    mov dword [r15], eax	      9875	eval.c	FUNCTION_187	WHILE_2
0x400dcb1	            0x85c0	                           test eax, eax	      9880	eval.c	FUNCTION_187	WHILE_2	IF_22
0x400dcb3	     0xf8428fcffff	                            je 0x400d8e1	      9880	eval.c	FUNCTION_187	WHILE_2	IF_22
0x400dcb9	      0xe98cfcffff	                           jmp 0x400d94a	      9880	eval.c	FUNCTION_187	WHILE_2	IF_22
0x400dcbe	        0x49630424	                 movsxd rax, dword [r12]	      9962	eval.c	FUNCTION_187	WHILE_5
0x400dcc2	      0xe9ecfcffff	                           jmp 0x400d9b3	      9962	eval.c	FUNCTION_187	WHILE_5
0x400dcc7	        0x8b442414	            mov eax, dword [rsp + 0x14] 	     10080	eval.c	FUNCTION_187	IF_51
0x400dccb	            0xeba8	                           jmp 0x400dc75	     10080	eval.c	FUNCTION_187	IF_51
0x400dccd	          0x80fa65	                            cmp dl, 0x65	      9976	eval.c	FUNCTION_187	WHILE_5	IF_36
0x400dcd0	     0xf8558fdffff	                           jne 0x400da2e	      9976	eval.c	FUNCTION_187	WHILE_5	IF_36
0x400dcd6	      0xe933fdffff	                           jmp 0x400da0e	      9976	eval.c	FUNCTION_187	WHILE_5	IF_36
0x400dcdb	       0xfb6540501	        movzx edx, byte [rbp + rax + 1] 	     10006	eval.c	FUNCTION_187	IF_42
0x400dce0	          0x80fa73	                            cmp dl, 0x73	     10006	eval.c	FUNCTION_187	IF_42
0x400dce3	     0xf8584fdffff	                           jne 0x400da6d	     10006	eval.c	FUNCTION_187	IF_42
0x400dce9	            0xeb13	                           jmp 0x400dcfe	     10006	eval.c	FUNCTION_187	IF_42
0x400dceb	      0x488d440503	                lea rax, [rbp + rax + 3]	     10021	eval.c	FUNCTION_187	IF_42	IF_43
0x400dcf0	    0x48c744242800	               mov qword [rsp + 0x28], 0	     10020	eval.c	FUNCTION_187	IF_42	IF_43
0x400dcf9	      0xe988fdffff	                           jmp 0x400da86	     10020	eval.c	FUNCTION_187	IF_42	IF_43
0x400dcfe	      0x488d440502	                lea rax, [rbp + rax + 2]	     10017	eval.c	FUNCTION_187	IF_42
0x400dd03	    0x48c744242800	               mov qword [rsp + 0x28], 0	     10016	eval.c	FUNCTION_187	IF_42
0x400dd0c	      0xe975fdffff	                           jmp 0x400da86	     10016	eval.c	FUNCTION_187	IF_42
0x400dd11	      0xba00000000	                              mov edx, 0	     10072	eval.c	FUNCTION_187	IF_51	CALL_56
0x400dd16	      0xbe00000000	                              mov esi, 0	     10072	eval.c	FUNCTION_187	IF_51	CALL_56
0x400dd1b	      0xe800000000	                          call 0x400dd20	     10072	eval.c	FUNCTION_187	IF_51	CALL_56
0x400dd20	          0x4889c5	                            mov rbp, rax	     10072	eval.c	FUNCTION_187	IF_51	CALL_56
0x400dd23	      0xe9e5feffff	                           jmp 0x400dc0d	     10072	eval.c	FUNCTION_187	IF_51	CALL_56
0x400dd28	      0x837c241000	               cmp dword [rsp + 0x10], 0	      9815	eval.c	FUNCTION_187	WHILE_1	IF_13
0x400dd2d	     0xf8516faffff	                           jne 0x400d749	      9815	eval.c	FUNCTION_187	WHILE_1	IF_13
0x400dd33	      0xe9faf9ffff	                           jmp 0x400d732	      9815	eval.c	FUNCTION_187	WHILE_1	IF_13
0x400dd38	      0x488b7c2408	                mov rdi, qword [rsp + 8]	     10057	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	CALL_55
0x400dd3d	      0xe800000000	                          call 0x400dd42	     10057	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	CALL_55
0x400dd42	      0xe970feffff	                           jmp 0x400dbb7	     10057	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	CALL_55
0x400dd47	          0x80fa65	                            cmp dl, 0x65	      9976	eval.c	FUNCTION_187	WHILE_5	IF_36
0x400dd4a	     0xf85e3fcffff	                           jne 0x400da33	      9976	eval.c	FUNCTION_187	WHILE_5	IF_36
0x400dd50	      0xe9b9fcffff	                           jmp 0x400da0e	      9976	eval.c	FUNCTION_187	WHILE_5	IF_36
0x400dd55	          0x80fa65	                            cmp dl, 0x65	      9976	eval.c	FUNCTION_187	WHILE_5	IF_36
0x400dd58	     0xf85dbfcffff	                           jne 0x400da39	      9976	eval.c	FUNCTION_187	WHILE_5	IF_36
0x400dd5e	      0xe9bdfcffff	                           jmp 0x400da20	      9976	eval.c	FUNCTION_187	WHILE_5	IF_36
0x400dd63	        0x8b442414	            mov eax, dword [rsp + 0x14] 	     10080	eval.c	FUNCTION_187	IF_51
0x400dd67	      0xe909ffffff	                           jmp 0x400dc75	     10080	eval.c	FUNCTION_187	IF_51
0x400dd6c	      0xe800000000	                          call 0x400dd71	     10084	eval.c	FUNCTION_187
0x400dd71	    0x4881c4481000	                         add rsp, 0x1048	     10084	eval.c	FUNCTION_187
0x400dd78	              0x5b	                                 pop rbx	     10084	eval.c	FUNCTION_187
0x400dd79	              0x5d	                                 pop rbp	     10084	eval.c	FUNCTION_187
0x400dd7a	            0x415c	                                 pop r12	     10084	eval.c	FUNCTION_187
0x400dd7c	            0x415d	                                 pop r13	     10084	eval.c	FUNCTION_187
0x400dd7e	            0x415e	                                 pop r14	     10084	eval.c	FUNCTION_187
0x400dd80	            0x415f	                                 pop r15	     10084	eval.c	FUNCTION_187
0x400dd82	              0xc3	                                     ret	     10084	eval.c	FUNCTION_187
alloc_tv	FOR,0:SWITCH,0:DO,0:IF,0:functions,0:WHILE,0:CALL,1:ELSE,0	5
0x40022c0	        0x4883ec08	                              sub rsp, 8	      6816	eval.c	FUNCTION_119
0x40022c4	      0xbf10000000	                           mov edi, 0x10	      6817	eval.c	FUNCTION_119	CALL_1
0x40022c9	      0xe800000000	                          call 0x40022ce	      6817	eval.c	FUNCTION_119	CALL_1
0x40022ce	        0x4883c408	                              add rsp, 8	      6818	eval.c	FUNCTION_119
0x40022d2	              0xc3	                                     ret	      6818	eval.c	FUNCTION_119
get_tv_string_chk	FOR,0:SWITCH,0:DO,0:IF,0:functions,0:WHILE,0:CALL,1:ELSE,0	5
0x4003c2f	        0x4883ec08	                              sub rsp, 8	      7095	eval.c	FUNCTION_129
0x4003c33	      0xbe00000000	                              mov esi, 0	      7098	eval.c	FUNCTION_129	CALL_1
0x4003c38	      0xe800000000	                          call 0x4003c3d	      7098	eval.c	FUNCTION_129	CALL_1
0x4003c3d	        0x4883c408	                              add rsp, 8	      7099	eval.c	FUNCTION_129
0x4003c41	              0xc3	                                     ret	      7099	eval.c	FUNCTION_129
string2float	FOR,0:SWITCH,0:DO,0:IF,3:functions,0:WHILE,0:CALL,4:ELSE,0	52
0x400193e	              0x55	                                push rbp	      5817	eval.c	FUNCTION_91
0x400193f	              0x53	                                push rbx	      5817	eval.c	FUNCTION_91
0x4001940	        0x4883ec18	                           sub rsp, 0x18	      5817	eval.c	FUNCTION_91
0x4001944	          0x4889fb	                            mov rbx, rdi	      5817	eval.c	FUNCTION_91
0x4001947	          0x4889f5	                            mov rbp, rsi	      5817	eval.c	FUNCTION_91
0x400194a	    0x64488b042528	                mov rax, qword fs:[0x28]	      5817	eval.c	FUNCTION_91
0x4001953	      0x4889442408	                mov qword [rsp + 8], rax	      5817	eval.c	FUNCTION_91
0x4001958	            0x31c0	                            xor eax, eax	      5817	eval.c	FUNCTION_91
0x400195a	        0x48893c24	                    mov qword [rsp], rdi	      5818	eval.c	FUNCTION_91
0x400195e	      0xba03000000	                              mov edx, 3	      5822	eval.c	FUNCTION_91	IF_1	CALL_1
0x4001963	      0xbe00000000	                              mov esi, 0	      5822	eval.c	FUNCTION_91	IF_1	CALL_1
0x4001968	      0xe800000000	                          call 0x400196d	      5822	eval.c	FUNCTION_91	IF_1	CALL_1
0x400196d	            0x85c0	                           test eax, eax	      5822	eval.c	FUNCTION_91	IF_1	CALL_1
0x400196f	            0x7514	                           jne 0x4001985	      5822	eval.c	FUNCTION_91	IF_1	CALL_1
0x4001971	    0xf20f100d0000	         movsd xmm1, qword [0x04001979] 	      5824	eval.c	FUNCTION_91	IF_1
0x4001979	      0xf20f114d00	                 movsd qword [rbp], xmm1	      5824	eval.c	FUNCTION_91	IF_1
0x400197e	      0xb803000000	                              mov eax, 3	      5825	eval.c	FUNCTION_91	IF_1
0x4001983	            0xeb69	                           jmp 0x40019ee	      5825	eval.c	FUNCTION_91	IF_1
0x4001985	      0xba03000000	                              mov edx, 3	      5827	eval.c	FUNCTION_91	IF_2	CALL_2
0x400198a	      0xbe00000000	                              mov esi, 0	      5827	eval.c	FUNCTION_91	IF_2	CALL_2
0x400198f	          0x4889df	                            mov rdi, rbx	      5827	eval.c	FUNCTION_91	IF_2	CALL_2
0x4001992	      0xe800000000	                          call 0x4001997	      5827	eval.c	FUNCTION_91	IF_2	CALL_2
0x4001997	            0x85c0	                           test eax, eax	      5827	eval.c	FUNCTION_91	IF_2	CALL_2
0x4001999	            0x7514	                           jne 0x40019af	      5827	eval.c	FUNCTION_91	IF_2	CALL_2
0x400199b	    0xf20f10150000	         movsd xmm2, qword [0x040019a3] 	      5829	eval.c	FUNCTION_91	IF_2
0x40019a3	      0xf20f115500	                 movsd qword [rbp], xmm2	      5829	eval.c	FUNCTION_91	IF_2
0x40019a8	      0xb804000000	                              mov eax, 4	      5830	eval.c	FUNCTION_91	IF_2
0x40019ad	            0xeb3f	                           jmp 0x40019ee	      5830	eval.c	FUNCTION_91	IF_2
0x40019af	      0xba03000000	                              mov edx, 3	      5832	eval.c	FUNCTION_91	IF_3	CALL_3
0x40019b4	      0xbe00000000	                              mov esi, 0	      5832	eval.c	FUNCTION_91	IF_3	CALL_3
0x40019b9	          0x4889df	                            mov rdi, rbx	      5832	eval.c	FUNCTION_91	IF_3	CALL_3
0x40019bc	      0xe800000000	                          call 0x40019c1	      5832	eval.c	FUNCTION_91	IF_3	CALL_3
0x40019c1	            0x85c0	                           test eax, eax	      5832	eval.c	FUNCTION_91	IF_3	CALL_3
0x40019c3	            0x7514	                           jne 0x40019d9	      5832	eval.c	FUNCTION_91	IF_3	CALL_3
0x40019c5	    0xf20f101d0000	         movsd xmm3, qword [0x040019cd] 	      5834	eval.c	FUNCTION_91	IF_3
0x40019cd	      0xf20f115d00	                 movsd qword [rbp], xmm3	      5834	eval.c	FUNCTION_91	IF_3
0x40019d2	      0xb803000000	                              mov eax, 3	      5835	eval.c	FUNCTION_91	IF_3
0x40019d7	            0xeb15	                           jmp 0x40019ee	      5835	eval.c	FUNCTION_91	IF_3
0x40019d9	          0x4889e6	                            mov rsi, rsp	      5837	eval.c	FUNCTION_91	CALL_4
0x40019dc	          0x4889df	                            mov rdi, rbx	      5837	eval.c	FUNCTION_91	CALL_4
0x40019df	      0xe800000000	                          call 0x40019e4	      5837	eval.c	FUNCTION_91	CALL_4
0x40019e4	      0xf20f114500	                 movsd qword [rbp], xmm0	      5838	eval.c	FUNCTION_91
0x40019e9	          0x8b0424	                    mov eax, dword [rsp]	      5839	eval.c	FUNCTION_91
0x40019ec	            0x29d8	                            sub eax, ebx	      5839	eval.c	FUNCTION_91
0x40019ee	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      5840	eval.c	FUNCTION_91
0x40019f3	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      5840	eval.c	FUNCTION_91
0x40019fc	            0x7405	                            je 0x4001a03	      5840	eval.c	FUNCTION_91
0x40019fe	      0xe800000000	                          call 0x4001a03	      5840	eval.c	FUNCTION_91
0x4001a03	        0x4883c418	                           add rsp, 0x18	      5840	eval.c	FUNCTION_91
0x4001a07	              0x5b	                                 pop rbx	      5840	eval.c	FUNCTION_91
0x4001a08	              0x5d	                                 pop rbp	      5840	eval.c	FUNCTION_91
0x4001a09	              0xc3	                                     ret	      5840	eval.c	FUNCTION_91
read_viminfo_varlist	FOR,0:SWITCH,1:DO,0:IF,9:functions,0:WHILE,0:CALL,15:ELSE,4	127
0x40089f9	            0x4154	                                push r12	      8556	eval.c	ELSE_1	FUNCTION_163
0x40089fb	              0x55	                                push rbp	      8556	eval.c	ELSE_1	FUNCTION_163
0x40089fc	              0x53	                                push rbx	      8556	eval.c	ELSE_1	FUNCTION_163
0x40089fd	        0x4883ec20	                           sub rsp, 0x20	      8556	eval.c	ELSE_1	FUNCTION_163
0x4008a01	          0x4889fb	                            mov rbx, rdi	      8556	eval.c	ELSE_1	FUNCTION_163
0x4008a04	    0x64488b042528	                mov rax, qword fs:[0x28]	      8556	eval.c	ELSE_1	FUNCTION_163
0x4008a0d	      0x4889442418	             mov qword [rsp + 0x18], rax	      8556	eval.c	ELSE_1	FUNCTION_163
0x4008a12	            0x31c0	                            xor eax, eax	      8556	eval.c	ELSE_1	FUNCTION_163
0x4008a14	            0x85f6	                           test esi, esi	      8562	eval.c	ELSE_1	FUNCTION_163	IF_1	CALL_1
0x4008a16	     0xf851e010000	                           jne 0x4008b3a	      8562	eval.c	ELSE_1	FUNCTION_163	IF_1	CALL_1
0x4008a1c	      0xbf21000000	                           mov edi, 0x21	      8562	eval.c	ELSE_1	FUNCTION_163	IF_1	CALL_1
0x4008a21	      0xe800000000	                          call 0x4008a26	      8562	eval.c	ELSE_1	FUNCTION_163	IF_1	CALL_1
0x4008a26	          0x4885c0	                           test rax, rax	      8562	eval.c	ELSE_1	FUNCTION_163	IF_1	CALL_1
0x4008a29	     0xf840b010000	                            je 0x4008b3a	      8562	eval.c	ELSE_1	FUNCTION_163	IF_1	CALL_1
0x4008a2f	          0x488b03	                    mov rax, qword [rbx]	      8564	eval.c	ELSE_1	FUNCTION_163	IF_1	CALL_2
0x4008a32	        0x488d7801	                      lea rdi, [rax + 1]	      8564	eval.c	ELSE_1	FUNCTION_163	IF_1	CALL_2
0x4008a36	      0xbe09000000	                              mov esi, 9	      8564	eval.c	ELSE_1	FUNCTION_163	IF_1	CALL_2
0x4008a3b	      0xe800000000	                          call 0x4008a40	      8564	eval.c	ELSE_1	FUNCTION_163	IF_1	CALL_2
0x4008a40	          0x4885c0	                           test rax, rax	      8565	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2
0x4008a43	     0xf84f1000000	                            je 0x4008b3a	      8565	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2
0x4008a49	        0x488d7801	                      lea rdi, [rax + 1]	      8567	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2
0x4008a4d	          0xc60000	                       mov byte [rax], 0	      8567	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2
0x4008a50	         0xfb64001	               movzx eax, byte [rax + 1]	      8568	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	SWITCH_1
0x4008a54	          0x83e844	                           sub eax, 0x44	      8568	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	SWITCH_1
0x4008a57	            0x3c14	                            cmp al, 0x14	      8568	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	SWITCH_1
0x4008a59	            0x7715	                            ja 0x4008a70	      8568	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	SWITCH_1
0x4008a5b	           0xfb6c0	                           movzx eax, al	      8568	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	SWITCH_1
0x4008a5e	    0xff24c5000000	                       jmp qword [rax*8]	      8568	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	SWITCH_1
0x4008a65	    0x41bc06000000	                             mov r12d, 6	      8574	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	SWITCH_1
0x4008a6b	      0xe967010000	                           jmp 0x4008bd7	      8574	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	SWITCH_1
0x4008a70	      0xbe09000000	                              mov esi, 9	      8579	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	CALL_3
0x4008a75	      0xe800000000	                          call 0x4008a7a	      8579	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	CALL_3
0x4008a7a	          0x4885c0	                           test rax, rax	      8580	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	IF_3
0x4008a7d	     0xf84b7000000	                            je 0x4008b3a	      8580	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	IF_3
0x4008a83	    0xc70424010000	                      mov dword [rsp], 1	      8582	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	IF_3
0x4008a8a	      0xbd01000000	                              mov ebp, 1	      8582	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	IF_3
0x4008a8f	        0x488d7801	                      lea rdi, [rax + 1]	       285	stdlib.h	FUNCTION_224	CALL_2
0x4008a93	      0xba0a000000	                            mov edx, 0xa	       285	stdlib.h	FUNCTION_224	CALL_2
0x4008a98	      0xbe00000000	                              mov esi, 0	       285	stdlib.h	FUNCTION_224	CALL_2
0x4008a9d	      0xe800000000	                          call 0x4008aa2	       285	stdlib.h	FUNCTION_224	CALL_2
0x4008aa2	      0x4889442408	                mov qword [rsp + 8], rax	      8591	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	CALL_6
0x4008aa7	          0x83ed05	                              sub ebp, 5	      8592	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	IF_6
0x4008aaa	          0x83fd01	                              cmp ebp, 1	      8592	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	IF_6
0x4008aad	            0x7743	                            ja 0x4008af2	      8592	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	IF_6
0x4008aaf	      0xbe00000000	                              mov esi, 0	      8594	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	IF_6	CALL_7
0x4008ab4	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      8594	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	IF_6	CALL_7
0x4008ab9	      0xe800000000	                          call 0x4008abe	      8594	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	IF_6	CALL_7
0x4008abe	          0x4889c5	                            mov rbp, rax	      8594	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	IF_6	CALL_7
0x4008ac1	          0x4885c0	                           test rax, rax	      8596	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	IF_6	IF_7
0x4008ac4	            0x7509	                           jne 0x4008acf	      8596	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	IF_6	IF_7
0x4008ac6	    0xc70424020000	                      mov dword [rsp], 2	      8599	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	IF_6	IF_7
0x4008acd	            0xeb23	                           jmp 0x4008af2	      8599	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	IF_6	IF_7
0x4008acf	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      8602	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	IF_6	ELSE_3	CALL_8
0x4008ad4	      0xe800000000	                          call 0x4008ad9	      8602	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	IF_6	ELSE_3	CALL_8
0x4008ad9	        0x488b4500	                    mov rax, qword [rbp]	      8603	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	IF_6	ELSE_3
0x4008add	        0x488b5508	                mov rdx, qword [rbp + 8]	      8603	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	IF_6	ELSE_3
0x4008ae1	        0x48890424	                    mov qword [rsp], rax	      8603	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	IF_6	ELSE_3
0x4008ae5	      0x4889542408	                mov qword [rsp + 8], rdx	      8603	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	IF_6	ELSE_3
0x4008aea	          0x4889ef	                            mov rdi, rbp	      8604	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	IF_6	ELSE_3	CALL_9
0x4008aed	      0xe800000000	                          call 0x4008af2	      8604	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	IF_6	ELSE_3	CALL_9
0x4008af2	      0xe800000000	                          call 0x4008af7	      8609	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	CALL_10
0x4008af7	          0x4889c5	                            mov rbp, rax	      8609	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	CALL_10
0x4008afa	          0x488b03	                    mov rax, qword [rbx]	      8610	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	CALL_11
0x4008afd	        0x488d7801	                      lea rdi, [rax + 1]	      8610	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	CALL_11
0x4008b01	      0xba00000000	                              mov edx, 0	      8610	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	CALL_11
0x4008b06	          0x4889e6	                            mov rsi, rsp	      8610	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	CALL_11
0x4008b09	      0xe800000000	                          call 0x4008b0e	      8610	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	CALL_11
0x4008b0e	          0x4889ef	                            mov rdi, rbp	      8611	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	CALL_12
0x4008b11	      0xe800000000	                          call 0x4008b16	      8611	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	CALL_12
0x4008b16	          0x8b0424	                    mov eax, dword [rsp]	      8613	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	IF_8
0x4008b19	          0x83f802	                              cmp eax, 2	      8613	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	IF_8
0x4008b1c	            0x750c	                           jne 0x4008b2a	      8613	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	IF_8
0x4008b1e	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      8614	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	CALL_13
0x4008b23	      0xe800000000	                          call 0x4008b28	      8614	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	CALL_13
0x4008b28	            0xeb10	                           jmp 0x4008b3a	      8614	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	CALL_13
0x4008b2a	          0x83e805	                              sub eax, 5	      8615	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	ELSE_4	IF_9
0x4008b2d	          0x83f801	                              cmp eax, 1	      8615	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	ELSE_4	IF_9
0x4008b30	            0x7708	                            ja 0x4008b3a	      8615	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	ELSE_4	IF_9
0x4008b32	          0x4889e7	                            mov rdi, rsp	      8616	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	ELSE_4	IF_9
0x4008b35	      0xe800000000	                          call 0x4008b3a	      8616	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	ELSE_4	IF_9
0x4008b3a	          0x4889df	                            mov rdi, rbx	      8621	eval.c	FUNCTION_163	ELSE_1	CALL_15
0x4008b3d	      0xe800000000	                          call 0x4008b42	      8621	eval.c	FUNCTION_163	ELSE_1	CALL_15
0x4008b42	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      8622	eval.c	FUNCTION_163	ELSE_1
0x4008b47	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      8622	eval.c	FUNCTION_163	ELSE_1
0x4008b50	     0xf849a000000	                            je 0x4008bf0	      8622	eval.c	FUNCTION_163	ELSE_1
0x4008b56	      0xe990000000	                           jmp 0x4008beb	      8622	eval.c	FUNCTION_163	ELSE_1
0x4008b5b	    0xc70424070000	                      mov dword [rsp], 7	      8582	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	IF_3
0x4008b62	        0x488d7801	                      lea rdi, [rax + 1]	      8588	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	CALL_5
0x4008b66	      0x488d742408	                      lea rsi, [rsp + 8]	      8588	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	CALL_5
0x4008b6b	      0xe800000000	                          call 0x4008b70	      8588	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	CALL_5
0x4008b70	            0xeb80	                           jmp 0x4008af2	      8588	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	CALL_5
0x4008b72	      0xbe09000000	                              mov esi, 9	      8579	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	CALL_3
0x4008b77	      0xe800000000	                          call 0x4008b7c	      8579	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	CALL_3
0x4008b7c	          0x4885c0	                           test rax, rax	      8580	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	IF_3
0x4008b7f	            0x75da	                           jne 0x4008b5b	      8580	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	IF_3
0x4008b81	            0xebb7	                           jmp 0x4008b3a	      8580	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	IF_3
0x4008b83	    0xc70424080000	                      mov dword [rsp], 8	      8582	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	IF_3
0x4008b8a	      0xbd08000000	                              mov ebp, 8	      8582	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	IF_3
0x4008b8f	      0xe9fbfeffff	                           jmp 0x4008a8f	      8582	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	IF_3
0x4008b94	      0xbe09000000	                              mov esi, 9	      8579	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	CALL_3
0x4008b99	      0xe800000000	                          call 0x4008b9e	      8579	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	CALL_3
0x4008b9e	          0x4885c0	                           test rax, rax	      8580	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	IF_3
0x4008ba1	            0x75e0	                           jne 0x4008b83	      8580	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	IF_3
0x4008ba3	            0xeb95	                           jmp 0x4008b3a	      8580	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	IF_3
0x4008ba5	          0x4489e5	                           mov ebp, r12d	      8582	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	IF_3
0x4008ba8	        0x44892424	                   mov dword [rsp], r12d	      8582	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	IF_3
0x4008bac	          0x482b03	                    sub rax, qword [rbx]	      8584	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	IF_3	IF_4	CALL_4
0x4008baf	          0x8d7001	                      lea esi, [rax + 1]	      8584	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	IF_3	IF_4	CALL_4
0x4008bb2	      0xba01000000	                              mov edx, 1	      8584	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	IF_3	IF_4	CALL_4
0x4008bb7	          0x4889df	                            mov rdi, rbx	      8584	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	IF_3	IF_4	CALL_4
0x4008bba	      0xe800000000	                          call 0x4008bbf	      8584	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	IF_3	IF_4	CALL_4
0x4008bbf	      0x4889442408	                mov qword [rsp + 8], rax	      8584	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	IF_3	IF_4	CALL_4
0x4008bc4	      0xe9defeffff	                           jmp 0x4008aa7	      8584	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	IF_3	IF_4	CALL_4
0x4008bc9	    0x41bc02000000	                             mov r12d, 2	      8570	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	SWITCH_1
0x4008bcf	            0xeb06	                           jmp 0x4008bd7	      8570	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	SWITCH_1
0x4008bd1	    0x41bc05000000	                             mov r12d, 5	      8575	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	SWITCH_1
0x4008bd7	      0xbe09000000	                              mov esi, 9	      8579	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	CALL_3
0x4008bdc	      0xe800000000	                          call 0x4008be1	      8579	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	CALL_3
0x4008be1	          0x4885c0	                           test rax, rax	      8580	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	IF_3
0x4008be4	            0x75bf	                           jne 0x4008ba5	      8580	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	IF_3
0x4008be6	      0xe94fffffff	                           jmp 0x4008b3a	      8580	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	IF_3
0x4008beb	      0xe800000000	                          call 0x4008bf0	      8622	eval.c	FUNCTION_163	ELSE_1
0x4008bf0	        0x4883c420	                           add rsp, 0x20	      8622	eval.c	FUNCTION_163	ELSE_1
0x4008bf4	              0x5b	                                 pop rbx	      8622	eval.c	FUNCTION_163	ELSE_1
0x4008bf5	              0x5d	                                 pop rbp	      8622	eval.c	FUNCTION_163	ELSE_1
0x4008bf6	            0x415c	                                 pop r12	      8622	eval.c	FUNCTION_163	ELSE_1
0x4008bf8	              0xc3	                                     ret	      8622	eval.c	FUNCTION_163	ELSE_1
item_copy	FOR,0:SWITCH,1:DO,0:IF,7:functions,0:WHILE,0:CALL,6:ELSE,4	76
0x4004891	              0x53	                                push rbx	      7834	eval.c	FUNCTION_150
0x4004892	    0x8b0500000000	            mov eax, dword [0x04004898] 	      7838	eval.c	FUNCTION_150	IF_1
0x4004898	          0x83f863	                           cmp eax, 0x63	      7838	eval.c	FUNCTION_150	IF_1
0x400489b	            0x7e26	                           jle 0x40048c3	      7838	eval.c	FUNCTION_150	IF_1
0x400489d	      0xba05000000	                              mov edx, 5	      7840	eval.c	FUNCTION_150	IF_1	CALL_2
0x40048a2	      0xbe00000000	                              mov esi, 0	      7840	eval.c	FUNCTION_150	IF_1	CALL_2
0x40048a7	      0xbf00000000	                              mov edi, 0	      7840	eval.c	FUNCTION_150	IF_1	CALL_2
0x40048ac	      0xe800000000	                          call 0x40048b1	      7840	eval.c	FUNCTION_150	IF_1	CALL_2
0x40048b1	          0x4889c7	                            mov rdi, rax	      7840	eval.c	FUNCTION_150	IF_1	CALL_2
0x40048b4	      0xe800000000	                          call 0x40048b9	      7840	eval.c	FUNCTION_150	IF_1	CALL_2
0x40048b9	      0xb800000000	                              mov eax, 0	      7841	eval.c	FUNCTION_150	IF_1
0x40048be	      0xe9ea000000	                           jmp 0x40049ad	      7841	eval.c	FUNCTION_150	IF_1
0x40048c3	          0x4889f3	                            mov rbx, rsi	      7841	eval.c	FUNCTION_150	IF_1
0x40048c6	            0x89d6	                            mov esi, edx	      7841	eval.c	FUNCTION_150	IF_1
0x40048c8	          0x83c001	                              add eax, 1	      7843	eval.c	FUNCTION_150
0x40048cb	    0x890500000000	            mov dword [0x040048d1], eax 	      7843	eval.c	FUNCTION_150
0x40048d1	          0x833f0a	                    cmp dword [rdi], 0xa	      7845	eval.c	FUNCTION_150	SWITCH_1
0x40048d4	     0xf87c7000000	                            ja 0x40049a1	      7845	eval.c	FUNCTION_150	SWITCH_1
0x40048da	            0x8b07	                    mov eax, dword [rdi]	      7845	eval.c	FUNCTION_150	SWITCH_1
0x40048dc	    0xff24c5000000	                       jmp qword [rax*8]	      7845	eval.c	FUNCTION_150	SWITCH_1
0x40048e3	          0x4889de	                            mov rsi, rbx	      7855	eval.c	FUNCTION_150	SWITCH_1	CALL_3
0x40048e6	      0xe800000000	                          call 0x40048eb	      7855	eval.c	FUNCTION_150	SWITCH_1	CALL_3
0x40048eb	      0xb801000000	                              mov eax, 1	      7836	eval.c	FUNCTION_150
0x40048f0	      0xe9b1000000	                           jmp 0x40049a6	      7856	eval.c	FUNCTION_150	SWITCH_1
0x40048f5	    0xc70305000000	                      mov dword [rbx], 5	      7858	eval.c	FUNCTION_150	SWITCH_1
0x40048fb	        0xc6430400	                   mov byte [rbx + 4], 0	      7859	eval.c	FUNCTION_150	SWITCH_1
0x40048ff	        0x488b7f08	                mov rdi, qword [rdi + 8]	      7860	eval.c	FUNCTION_150	SWITCH_1	IF_2
0x4004903	          0x4885ff	                           test rdi, rdi	      7860	eval.c	FUNCTION_150	SWITCH_1	IF_2
0x4004906	            0x750a	                           jne 0x4004912	      7860	eval.c	FUNCTION_150	SWITCH_1	IF_2
0x4004908	    0x48c743080000	                  mov qword [rbx + 8], 0	      7861	eval.c	FUNCTION_150	SWITCH_1	IF_2
0x4004910	            0xeb22	                           jmp 0x4004934	      7861	eval.c	FUNCTION_150	SWITCH_1	IF_2
0x4004912	            0x85c9	                           test ecx, ecx	      7862	eval.c	FUNCTION_150	SWITCH_1	ELSE_1	IF_3
0x4004914	            0x7413	                            je 0x4004929	      7862	eval.c	FUNCTION_150	SWITCH_1	ELSE_1	IF_3
0x4004916	          0x3b4f44	            cmp ecx, dword [rdi + 0x44] 	      7862	eval.c	FUNCTION_150	SWITCH_1	ELSE_1	IF_3
0x4004919	            0x750e	                           jne 0x4004929	      7862	eval.c	FUNCTION_150	SWITCH_1	ELSE_1	IF_3
0x400491b	        0x488b4720	            mov rax, qword [rdi + 0x20] 	      7865	eval.c	FUNCTION_150	SWITCH_1	ELSE_1	IF_3
0x400491f	        0x48894308	                mov qword [rbx + 8], rax	      7865	eval.c	FUNCTION_150	SWITCH_1	ELSE_1	IF_3
0x4004923	        0x83403801	               add dword [rax + 0x38], 1	      7866	eval.c	FUNCTION_150	SWITCH_1	ELSE_1	IF_3
0x4004927	            0xeb0b	                           jmp 0x4004934	      7866	eval.c	FUNCTION_150	SWITCH_1	ELSE_1	IF_3
0x4004929	            0x89ca	                            mov edx, ecx	      7869	eval.c	FUNCTION_150	SWITCH_1	CALL_4
0x400492b	      0xe800000000	                          call 0x4004930	      7869	eval.c	FUNCTION_150	SWITCH_1	CALL_4
0x4004930	        0x48894308	                mov qword [rbx + 8], rax	      7869	eval.c	FUNCTION_150	SWITCH_1	CALL_4
0x4004934	      0x48837b0800	                  cmp qword [rbx + 8], 0	      7836	eval.c	FUNCTION_150
0x4004939	           0xf95c0	                                setne al	      7836	eval.c	FUNCTION_150
0x400493c	           0xfb6c0	                           movzx eax, al	      7836	eval.c	FUNCTION_150
0x400493f	            0xeb65	                           jmp 0x40049a6	      7836	eval.c	FUNCTION_150
0x4004941	    0xc70306000000	                      mov dword [rbx], 6	      7874	eval.c	FUNCTION_150	SWITCH_1
0x4004947	        0xc6430400	                   mov byte [rbx + 4], 0	      7875	eval.c	FUNCTION_150	SWITCH_1
0x400494b	        0x488b7f08	                mov rdi, qword [rdi + 8]	      7876	eval.c	FUNCTION_150	SWITCH_1	IF_5
0x400494f	          0x4885ff	                           test rdi, rdi	      7876	eval.c	FUNCTION_150	SWITCH_1	IF_5
0x4004952	            0x750a	                           jne 0x400495e	      7876	eval.c	FUNCTION_150	SWITCH_1	IF_5
0x4004954	    0x48c743080000	                  mov qword [rbx + 8], 0	      7877	eval.c	FUNCTION_150	SWITCH_1	IF_5
0x400495c	            0xeb25	                           jmp 0x4004983	      7877	eval.c	FUNCTION_150	SWITCH_1	IF_5
0x400495e	            0x85c9	                           test ecx, ecx	      7878	eval.c	FUNCTION_150	SWITCH_1	ELSE_3	IF_6
0x4004960	            0x7416	                            je 0x4004978	      7878	eval.c	FUNCTION_150	SWITCH_1	ELSE_3	IF_6
0x4004962	          0x3b4f08	                cmp ecx, dword [rdi + 8]	      7878	eval.c	FUNCTION_150	SWITCH_1	ELSE_3	IF_6
0x4004965	            0x7511	                           jne 0x4004978	      7878	eval.c	FUNCTION_150	SWITCH_1	ELSE_3	IF_6
0x4004967	    0x488b87380100	           mov rax, qword [rdi + 0x138] 	      7881	eval.c	FUNCTION_150	SWITCH_1	ELSE_3	IF_6
0x400496e	        0x48894308	                mov qword [rbx + 8], rax	      7881	eval.c	FUNCTION_150	SWITCH_1	ELSE_3	IF_6
0x4004972	        0x83400401	                  add dword [rax + 4], 1	      7882	eval.c	FUNCTION_150	SWITCH_1	ELSE_3	IF_6
0x4004976	            0xeb0b	                           jmp 0x4004983	      7882	eval.c	FUNCTION_150	SWITCH_1	ELSE_3	IF_6
0x4004978	            0x89ca	                            mov edx, ecx	      7885	eval.c	FUNCTION_150	SWITCH_1	CALL_5
0x400497a	      0xe800000000	                          call 0x400497f	      7885	eval.c	FUNCTION_150	SWITCH_1	CALL_5
0x400497f	        0x48894308	                mov qword [rbx + 8], rax	      7885	eval.c	FUNCTION_150	SWITCH_1	CALL_5
0x4004983	      0x48837b0800	                  cmp qword [rbx + 8], 0	      7836	eval.c	FUNCTION_150
0x4004988	           0xf95c0	                                setne al	      7836	eval.c	FUNCTION_150
0x400498b	           0xfb6c0	                           movzx eax, al	      7836	eval.c	FUNCTION_150
0x400498e	            0xeb16	                           jmp 0x40049a6	      7836	eval.c	FUNCTION_150
0x4004990	      0xbf00000000	                              mov edi, 0	      7890	eval.c	FUNCTION_150	SWITCH_1	CALL_6
0x4004995	      0xe800000000	                          call 0x400499a	      7890	eval.c	FUNCTION_150	SWITCH_1	CALL_6
0x400499a	      0xb800000000	                              mov eax, 0	      7891	eval.c	FUNCTION_150	SWITCH_1
0x400499f	            0xeb05	                           jmp 0x40049a6	      7891	eval.c	FUNCTION_150	SWITCH_1
0x40049a1	      0xb801000000	                              mov eax, 1	      7836	eval.c	FUNCTION_150
0x40049a6	    0x832d00000000	               sub dword [0x040049ad], 1	      7893	eval.c	FUNCTION_150
0x40049ad	              0x5b	                                 pop rbx	      7895	eval.c	FUNCTION_150
0x40049ae	              0xc3	                                     ret	      7895	eval.c	FUNCTION_150
del_menutrans_vars	FOR,1:SWITCH,0:DO,0:IF,2:functions,0:WHILE,0:CALL,6:ELSE,0	47
0x4002652	            0x4154	                                push r12	      3070	eval.c	FUNCTION_59
0x4002654	              0x55	                                push rbp	      3070	eval.c	FUNCTION_59
0x4002655	              0x53	                                push rbx	      3070	eval.c	FUNCTION_59
0x4002656	      0xbf00000000	                              mov edi, 0	      3074	eval.c	FUNCTION_59	CALL_1
0x400265b	      0xe800000000	                          call 0x4002660	      3074	eval.c	FUNCTION_59	CALL_1
0x4002660	    0x488b05000000	            mov rax, qword [0x04002667] 	      3075	eval.c	FUNCTION_59
0x4002667	    0x488b2d000000	            mov rbp, qword [0x0400266e] 	      3076	eval.c	FUNCTION_59	FOR_1
0x400266e	            0x85c0	                           test eax, eax	      3076	eval.c	FUNCTION_59	FOR_1
0x4002670	            0x7e70	                           jle 0x40026e2	      3076	eval.c	FUNCTION_59	FOR_1
0x4002672	          0x4189c4	                           mov r12d, eax	      3076	eval.c	FUNCTION_59	FOR_1
0x4002675	    0x8b0500000000	            mov eax, dword [0x0400267b] 	      3076	eval.c	FUNCTION_59	FOR_1
0x400267b	            0x85c0	                           test eax, eax	      3076	eval.c	FUNCTION_59	FOR_1
0x400267d	            0x7563	                           jne 0x40026e2	      3076	eval.c	FUNCTION_59	FOR_1
0x400267f	        0x488b5d08	                mov rbx, qword [rbp + 8]	      3078	eval.c	FUNCTION_59	FOR_1	IF_1	CALL_2
0x4002683	    0x4881fb000000	                              cmp rbx, 0	      3078	eval.c	FUNCTION_59	FOR_1	IF_1	CALL_2
0x400268a	            0x7443	                            je 0x40026cf	      3078	eval.c	FUNCTION_59	FOR_1	IF_1	CALL_2
0x400268c	          0x4885db	                           test rbx, rbx	      3078	eval.c	FUNCTION_59	FOR_1	IF_1	CALL_2
0x400268f	            0x743e	                            je 0x40026cf	      3078	eval.c	FUNCTION_59	FOR_1	IF_1	CALL_2
0x4002691	        0x4183ec01	                             sub r12d, 1	      3080	eval.c	FUNCTION_59	FOR_1	IF_1
0x4002695	      0xbf00000000	                              mov edi, 0	      3081	eval.c	FUNCTION_59	FOR_1	IF_1	IF_2	CALL_4
0x400269a	      0xb90a000000	                            mov ecx, 0xa	      3081	eval.c	FUNCTION_59	FOR_1	IF_1	IF_2	CALL_4
0x400269f	          0x4889de	                            mov rsi, rbx	      3081	eval.c	FUNCTION_59	FOR_1	IF_1	IF_2	CALL_4
0x40026a2	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3081	eval.c	FUNCTION_59	FOR_1	IF_1	IF_2	CALL_4
0x40026a4	           0xf97c2	                                 seta dl	      3081	eval.c	FUNCTION_59	FOR_1	IF_1	IF_2	CALL_4
0x40026a7	           0xf92c0	                                 setb al	      3081	eval.c	FUNCTION_59	FOR_1	IF_1	IF_2	CALL_4
0x40026aa	            0x38c2	                              cmp dl, al	      3081	eval.c	FUNCTION_59	FOR_1	IF_1	IF_2	CALL_4
0x40026ac	            0x7521	                           jne 0x40026cf	      3081	eval.c	FUNCTION_59	FOR_1	IF_1	IF_2	CALL_4
0x40026ae	          0x4889ee	                            mov rsi, rbp	      7449	eval.c	FUNCTION_140	CALL_2
0x40026b1	      0xbf00000000	                              mov edi, 0	      7449	eval.c	FUNCTION_140	CALL_2
0x40026b6	      0xe800000000	                          call 0x40026bb	      7449	eval.c	FUNCTION_140	CALL_2
0x40026bb	        0x4883eb11	                           sub rbx, 0x11	      7450	eval.c	FUNCTION_140	CALL_3
0x40026bf	          0x4889df	                            mov rdi, rbx	      7450	eval.c	FUNCTION_140	CALL_3
0x40026c2	      0xe800000000	                          call 0x40026c7	      7450	eval.c	FUNCTION_140	CALL_3
0x40026c7	          0x4889df	                            mov rdi, rbx	      7451	eval.c	FUNCTION_140	CALL_4
0x40026ca	      0xe800000000	                          call 0x40026cf	      7451	eval.c	FUNCTION_140	CALL_4
0x40026cf	        0x4883c510	                           add rbp, 0x10	      3076	eval.c	FUNCTION_59	FOR_1
0x40026d3	          0x4585e4	                         test r12d, r12d	      3076	eval.c	FUNCTION_59	FOR_1
0x40026d6	            0x7e0a	                           jle 0x40026e2	      3076	eval.c	FUNCTION_59	FOR_1
0x40026d8	    0x8b0500000000	            mov eax, dword [0x040026de] 	      3076	eval.c	FUNCTION_59	FOR_1
0x40026de	            0x85c0	                           test eax, eax	      3076	eval.c	FUNCTION_59	FOR_1
0x40026e0	            0x749d	                            je 0x400267f	      3076	eval.c	FUNCTION_59	FOR_1
0x40026e2	      0xbf00000000	                              mov edi, 0	      3085	eval.c	FUNCTION_59	CALL_6
0x40026e7	      0xe800000000	                          call 0x40026ec	      3085	eval.c	FUNCTION_59	CALL_6
0x40026ec	              0x5b	                                 pop rbx	      3086	eval.c	FUNCTION_59
0x40026ed	              0x5d	                                 pop rbp	      3086	eval.c	FUNCTION_59
0x40026ee	            0x415c	                                 pop r12	      3086	eval.c	FUNCTION_59
0x40026f0	              0xc3	                                     ret	      3086	eval.c	FUNCTION_59
get_tv_string_buf_chk	FOR,0:SWITCH,1:DO,0:IF,3:functions,0:WHILE,0:CALL,19:ELSE,1	117
0x4002d6a	          0x833f0a	                    cmp dword [rdi], 0xa	      7104	eval.c	FUNCTION_130	SWITCH_1
0x4002d6d	     0xf87c7010000	                            ja 0x4002f3a	      7104	eval.c	FUNCTION_130	SWITCH_1
0x4002d73	              0x55	                                push rbp	      7103	eval.c	FUNCTION_130
0x4002d74	              0x53	                                push rbx	      7103	eval.c	FUNCTION_130
0x4002d75	        0x4883ec08	                              sub rsp, 8	      7103	eval.c	FUNCTION_130
0x4002d79	          0x4889f3	                            mov rbx, rsi	      7103	eval.c	FUNCTION_130
0x4002d7c	            0x8b07	                    mov eax, dword [rdi]	      7104	eval.c	FUNCTION_130	SWITCH_1
0x4002d7e	    0xff24c5000000	                       jmp qword [rax*8]	      7104	eval.c	FUNCTION_130	SWITCH_1
0x4002d85	        0x488b4f08	                mov rcx, qword [rdi + 8]	      7107	eval.c	FUNCTION_130	SWITCH_1	CALL_1
0x4002d89	      0xba00000000	                              mov edx, 0	      7107	eval.c	FUNCTION_130	SWITCH_1	CALL_1
0x4002d8e	      0xbe41000000	                           mov esi, 0x41	      7107	eval.c	FUNCTION_130	SWITCH_1	CALL_1
0x4002d93	          0x4889df	                            mov rdi, rbx	      7107	eval.c	FUNCTION_130	SWITCH_1	CALL_1
0x4002d96	      0xb800000000	                              mov eax, 0	      7107	eval.c	FUNCTION_130	SWITCH_1	CALL_1
0x4002d9b	      0xe800000000	                          call 0x4002da0	      7107	eval.c	FUNCTION_130	SWITCH_1	CALL_1
0x4002da0	          0x4889d8	                            mov rax, rbx	      7109	eval.c	FUNCTION_130	SWITCH_1
0x4002da3	      0xe99d010000	                           jmp 0x4002f45	      7109	eval.c	FUNCTION_130	SWITCH_1
0x4002da8	      0xba05000000	                              mov edx, 5	      7112	eval.c	FUNCTION_130	SWITCH_1	CALL_3
0x4002dad	      0xbe00000000	                              mov esi, 0	      7112	eval.c	FUNCTION_130	SWITCH_1	CALL_3
0x4002db2	      0xbf00000000	                              mov edi, 0	      7112	eval.c	FUNCTION_130	SWITCH_1	CALL_3
0x4002db7	      0xe800000000	                          call 0x4002dbc	      7112	eval.c	FUNCTION_130	SWITCH_1	CALL_3
0x4002dbc	          0x4889c7	                            mov rdi, rax	      7112	eval.c	FUNCTION_130	SWITCH_1	CALL_3
0x4002dbf	      0xe800000000	                          call 0x4002dc4	      7112	eval.c	FUNCTION_130	SWITCH_1	CALL_3
0x4002dc4	      0xb800000000	                              mov eax, 0	      7178	eval.c	FUNCTION_130
0x4002dc9	      0xe977010000	                           jmp 0x4002f45	      7113	eval.c	FUNCTION_130	SWITCH_1
0x4002dce	      0xba05000000	                              mov edx, 5	      7115	eval.c	FUNCTION_130	SWITCH_1	CALL_5
0x4002dd3	      0xbe00000000	                              mov esi, 0	      7115	eval.c	FUNCTION_130	SWITCH_1	CALL_5
0x4002dd8	      0xbf00000000	                              mov edi, 0	      7115	eval.c	FUNCTION_130	SWITCH_1	CALL_5
0x4002ddd	      0xe800000000	                          call 0x4002de2	      7115	eval.c	FUNCTION_130	SWITCH_1	CALL_5
0x4002de2	          0x4889c7	                            mov rdi, rax	      7115	eval.c	FUNCTION_130	SWITCH_1	CALL_5
0x4002de5	      0xe800000000	                          call 0x4002dea	      7115	eval.c	FUNCTION_130	SWITCH_1	CALL_5
0x4002dea	      0xb800000000	                              mov eax, 0	      7178	eval.c	FUNCTION_130
0x4002def	      0xe951010000	                           jmp 0x4002f45	      7116	eval.c	FUNCTION_130	SWITCH_1
0x4002df4	      0xba05000000	                              mov edx, 5	      7118	eval.c	FUNCTION_130	SWITCH_1	CALL_7
0x4002df9	      0xbe00000000	                              mov esi, 0	      7118	eval.c	FUNCTION_130	SWITCH_1	CALL_7
0x4002dfe	      0xbf00000000	                              mov edi, 0	      7118	eval.c	FUNCTION_130	SWITCH_1	CALL_7
0x4002e03	      0xe800000000	                          call 0x4002e08	      7118	eval.c	FUNCTION_130	SWITCH_1	CALL_7
0x4002e08	          0x4889c7	                            mov rdi, rax	      7118	eval.c	FUNCTION_130	SWITCH_1	CALL_7
0x4002e0b	      0xe800000000	                          call 0x4002e10	      7118	eval.c	FUNCTION_130	SWITCH_1	CALL_7
0x4002e10	      0xb800000000	                              mov eax, 0	      7178	eval.c	FUNCTION_130
0x4002e15	      0xe92b010000	                           jmp 0x4002f45	      7119	eval.c	FUNCTION_130	SWITCH_1
0x4002e1a	      0xba05000000	                              mov edx, 5	      7122	eval.c	FUNCTION_130	SWITCH_1	CALL_9
0x4002e1f	      0xbe00000000	                              mov esi, 0	      7122	eval.c	FUNCTION_130	SWITCH_1	CALL_9
0x4002e24	      0xbf00000000	                              mov edi, 0	      7122	eval.c	FUNCTION_130	SWITCH_1	CALL_9
0x4002e29	      0xe800000000	                          call 0x4002e2e	      7122	eval.c	FUNCTION_130	SWITCH_1	CALL_9
0x4002e2e	          0x4889c7	                            mov rdi, rax	      7122	eval.c	FUNCTION_130	SWITCH_1	CALL_9
0x4002e31	      0xe800000000	                          call 0x4002e36	      7122	eval.c	FUNCTION_130	SWITCH_1	CALL_9
0x4002e36	      0xb800000000	                              mov eax, 0	      7178	eval.c	FUNCTION_130
0x4002e3b	      0xe905010000	                           jmp 0x4002f45	      7123	eval.c	FUNCTION_130	SWITCH_1
0x4002e40	        0x488b4708	                mov rax, qword [rdi + 8]	      7126	eval.c	FUNCTION_130	SWITCH_1	IF_1
0x4002e44	          0x4885c0	                           test rax, rax	      7128	eval.c	FUNCTION_130	SWITCH_1
0x4002e47	      0xba00000000	                              mov edx, 0	      7128	eval.c	FUNCTION_130	SWITCH_1
0x4002e4c	        0x480f44c2	                          cmove rax, rdx	      7128	eval.c	FUNCTION_130	SWITCH_1
0x4002e50	      0xe9f0000000	                           jmp 0x4002f45	      7128	eval.c	FUNCTION_130	SWITCH_1
0x4002e55	        0x488b7f08	                mov rdi, qword [rdi + 8]	      7130	eval.c	FUNCTION_130	SWITCH_1	CALL_11
0x4002e59	      0xe81bd4ffff	           call sym.get_var_special_name	      7130	eval.c	FUNCTION_130	SWITCH_1	CALL_11
0x4002e5e	          0x4889c6	                            mov rsi, rax	       110	string3.h	FUNCTION_197	CALL_3
0x4002e61	          0x4889df	                            mov rdi, rbx	       110	string3.h	FUNCTION_197	CALL_3
0x4002e64	      0xe800000000	                          call 0x4002e69	       110	string3.h	FUNCTION_197	CALL_3
0x4002e69	          0x4889d8	                            mov rax, rbx	      7131	eval.c	FUNCTION_130	SWITCH_1
0x4002e6c	      0xe9d4000000	                           jmp 0x4002f45	      7131	eval.c	FUNCTION_130	SWITCH_1
0x4002e71	        0x488b4708	                mov rax, qword [rdi + 8]	      7135	eval.c	FUNCTION_130	SWITCH_1
0x4002e75	          0x4885c0	                           test rax, rax	      7138	eval.c	FUNCTION_130	SWITCH_1	IF_2
0x4002e78	     0xf84c2000000	                            je 0x4002f40	      7138	eval.c	FUNCTION_130	SWITCH_1	IF_2
0x4002e7e	          0x8b5028	            mov edx, dword [rax + 0x28] 	      7140	eval.c	FUNCTION_130	SWITCH_1
0x4002e81	    0x41b800000000	                              mov r8d, 0	      7141	eval.c	FUNCTION_130	SWITCH_1
0x4002e87	            0x85d2	                           test edx, edx	      7141	eval.c	FUNCTION_130	SWITCH_1
0x4002e89	            0x7412	                            je 0x4002e9d	      7141	eval.c	FUNCTION_130	SWITCH_1
0x4002e8b	          0x83fa01	                              cmp edx, 1	      7142	eval.c	FUNCTION_130	SWITCH_1
0x4002e8e	    0x41b800000000	                              mov r8d, 0	      7142	eval.c	FUNCTION_130	SWITCH_1
0x4002e94	      0xba00000000	                              mov edx, 0	      7142	eval.c	FUNCTION_130	SWITCH_1
0x4002e99	        0x4c0f47c2	                           cmova r8, rdx	      7142	eval.c	FUNCTION_130	SWITCH_1
0x4002e9d	        0x48634810	         movsxd rcx, dword [rax + 0x10] 	      7144	eval.c	FUNCTION_130	SWITCH_1	CALL_12
0x4002ea1	      0xba00000000	                              mov edx, 0	      7144	eval.c	FUNCTION_130	SWITCH_1	CALL_12
0x4002ea6	      0xbe41000000	                           mov esi, 0x41	      7144	eval.c	FUNCTION_130	SWITCH_1	CALL_12
0x4002eab	          0x4889df	                            mov rdi, rbx	      7144	eval.c	FUNCTION_130	SWITCH_1	CALL_12
0x4002eae	      0xb800000000	                              mov eax, 0	      7144	eval.c	FUNCTION_130	SWITCH_1	CALL_12
0x4002eb3	      0xe800000000	                          call 0x4002eb8	      7144	eval.c	FUNCTION_130	SWITCH_1	CALL_12
0x4002eb8	          0x4889d8	                            mov rax, rbx	      7155	eval.c	FUNCTION_130	SWITCH_1
0x4002ebb	      0xe985000000	                           jmp 0x4002f45	      7155	eval.c	FUNCTION_130	SWITCH_1
0x4002ec0	        0x488b6f08	                mov rbp, qword [rdi + 8]	      7162	eval.c	FUNCTION_130	SWITCH_1
0x4002ec4	      0xbeffffffff	                     mov esi, 0xffffffff	      7163	eval.c	FUNCTION_130	SWITCH_1	CALL_15
0x4002ec9	          0x4889ef	                            mov rdi, rbp	      7163	eval.c	FUNCTION_130	SWITCH_1	CALL_15
0x4002ecc	      0xe800000000	                          call 0x4002ed1	      7163	eval.c	FUNCTION_130	SWITCH_1	CALL_15
0x4002ed1	          0x4989c0	                             mov r8, rax	      7163	eval.c	FUNCTION_130	SWITCH_1	CALL_15
0x4002ed4	          0x4885ed	                           test rbp, rbp	      7165	eval.c	FUNCTION_130	SWITCH_1	IF_3
0x4002ed7	            0x751f	                           jne 0x4002ef8	      7165	eval.c	FUNCTION_130	SWITCH_1	IF_3
0x4002ed9	          0x4889c1	                            mov rcx, rax	      7166	eval.c	FUNCTION_130	SWITCH_1	CALL_16
0x4002edc	      0xba00000000	                              mov edx, 0	      7166	eval.c	FUNCTION_130	SWITCH_1	CALL_16
0x4002ee1	      0xbe41000000	                           mov esi, 0x41	      7166	eval.c	FUNCTION_130	SWITCH_1	CALL_16
0x4002ee6	          0x4889df	                            mov rdi, rbx	      7166	eval.c	FUNCTION_130	SWITCH_1	CALL_16
0x4002ee9	      0xb800000000	                              mov eax, 0	      7166	eval.c	FUNCTION_130	SWITCH_1	CALL_16
0x4002eee	      0xe800000000	                          call 0x4002ef3	      7166	eval.c	FUNCTION_130	SWITCH_1	CALL_16
0x4002ef3	          0x4889d8	                            mov rax, rbx	      7170	eval.c	FUNCTION_130	SWITCH_1
0x4002ef6	            0xeb4d	                           jmp 0x4002f45	      7170	eval.c	FUNCTION_130	SWITCH_1
0x4002ef8	          0x8b4d10	            mov ecx, dword [rbp + 0x10] 	      7168	eval.c	FUNCTION_130	SWITCH_1	ELSE_1	CALL_17
0x4002efb	      0xba00000000	                              mov edx, 0	      7168	eval.c	FUNCTION_130	SWITCH_1	ELSE_1	CALL_17
0x4002f00	      0xbe41000000	                           mov esi, 0x41	      7168	eval.c	FUNCTION_130	SWITCH_1	ELSE_1	CALL_17
0x4002f05	          0x4889df	                            mov rdi, rbx	      7168	eval.c	FUNCTION_130	SWITCH_1	ELSE_1	CALL_17
0x4002f08	      0xb800000000	                              mov eax, 0	      7168	eval.c	FUNCTION_130	SWITCH_1	ELSE_1	CALL_17
0x4002f0d	      0xe800000000	                          call 0x4002f12	      7168	eval.c	FUNCTION_130	SWITCH_1	ELSE_1	CALL_17
0x4002f12	          0x4889d8	                            mov rax, rbx	      7170	eval.c	FUNCTION_130	SWITCH_1
0x4002f15	            0xeb2e	                           jmp 0x4002f45	      7170	eval.c	FUNCTION_130	SWITCH_1
0x4002f17	      0xba05000000	                              mov edx, 5	      7175	eval.c	FUNCTION_130	SWITCH_1	CALL_19
0x4002f1c	      0xbe00000000	                              mov esi, 0	      7175	eval.c	FUNCTION_130	SWITCH_1	CALL_19
0x4002f21	      0xbf00000000	                              mov edi, 0	      7175	eval.c	FUNCTION_130	SWITCH_1	CALL_19
0x4002f26	      0xe800000000	                          call 0x4002f2b	      7175	eval.c	FUNCTION_130	SWITCH_1	CALL_19
0x4002f2b	          0x4889c7	                            mov rdi, rax	      7175	eval.c	FUNCTION_130	SWITCH_1	CALL_19
0x4002f2e	      0xe800000000	                          call 0x4002f33	      7175	eval.c	FUNCTION_130	SWITCH_1	CALL_19
0x4002f33	      0xb800000000	                              mov eax, 0	      7178	eval.c	FUNCTION_130
0x4002f38	            0xeb0b	                           jmp 0x4002f45	      7176	eval.c	FUNCTION_130	SWITCH_1
0x4002f3a	      0xb800000000	                              mov eax, 0	      7178	eval.c	FUNCTION_130
0x4002f3f	              0xc3	                                     ret	      7179	eval.c	FUNCTION_130
0x4002f40	      0xb800000000	                              mov eax, 0	      7139	eval.c	FUNCTION_130	SWITCH_1	IF_2
0x4002f45	        0x4883c408	                              add rsp, 8	      7179	eval.c	FUNCTION_130
0x4002f49	              0x5b	                                 pop rbx	      7179	eval.c	FUNCTION_130
0x4002f4a	              0x5d	                                 pop rbp	      7179	eval.c	FUNCTION_130
0x4002f4b	              0xc3	                                     ret	      7179	eval.c	FUNCTION_130
list2fpos	FOR,0:SWITCH,0:DO,0:IF,8:functions,0:WHILE,0:CALL,5:ELSE,1	91
0x4001a0a	            0x4155	                                push r13	      6028	eval.c	FUNCTION_94
0x4001a0c	            0x4154	                                push r12	      6028	eval.c	FUNCTION_94
0x4001a0e	              0x55	                                push rbp	      6028	eval.c	FUNCTION_94
0x4001a0f	              0x53	                                push rbx	      6028	eval.c	FUNCTION_94
0x4001a10	        0x4883ec08	                              sub rsp, 8	      6028	eval.c	FUNCTION_94
0x4001a14	        0x488b5f08	                mov rbx, qword [rdi + 8]	      6029	eval.c	FUNCTION_94
0x4001a18	          0x833f05	                      cmp dword [rdi], 5	      6036	eval.c	FUNCTION_94	IF_1
0x4001a1b	     0xf85ea000000	                           jne 0x4001b0b	      6036	eval.c	FUNCTION_94	IF_1
0x4001a21	          0x4885db	                           test rbx, rbx	      6036	eval.c	FUNCTION_94	IF_1
0x4001a24	     0xf84e1000000	                            je 0x4001b0b	      6036	eval.c	FUNCTION_94	IF_1
0x4001a2a	          0x4989cc	                            mov r12, rcx	      6036	eval.c	FUNCTION_94	IF_1
0x4001a2d	          0x4989d5	                            mov r13, rdx	      6036	eval.c	FUNCTION_94	IF_1
0x4001a30	          0x4889f5	                            mov rbp, rsi	      6036	eval.c	FUNCTION_94	IF_1
0x4001a33	          0x8b533c	            mov edx, dword [rbx + 0x3c] 	      6037	eval.c	FUNCTION_94	IF_1
0x4001a36	          0x4d85ed	                           test r13, r13	      6037	eval.c	FUNCTION_94	IF_1
0x4001a39	     0xf850c010000	                           jne 0x4001b4b	      6037	eval.c	FUNCTION_94	IF_1
0x4001a3f	      0xe9fb000000	                           jmp 0x4001b3f	      6037	eval.c	FUNCTION_94	IF_1
0x4001a44	      0xba00000000	                              mov edx, 0	      6043	eval.c	FUNCTION_94	IF_2	CALL_1
0x4001a49	      0xbe00000000	                              mov esi, 0	      6043	eval.c	FUNCTION_94	IF_2	CALL_1
0x4001a4e	          0x4889df	                            mov rdi, rbx	      6043	eval.c	FUNCTION_94	IF_2	CALL_1
0x4001a51	      0xe800000000	                          call 0x4001a56	      6043	eval.c	FUNCTION_94	IF_2	CALL_1
0x4001a56	          0x4885c0	                           test rax, rax	      6044	eval.c	FUNCTION_94	IF_2	IF_3
0x4001a59	     0xf88b3000000	                            js 0x4001b12	      6044	eval.c	FUNCTION_94	IF_2	IF_3
0x4001a5f	          0x4885c0	                           test rax, rax	      6046	eval.c	FUNCTION_94	IF_2	IF_4
0x4001a62	            0x750e	                           jne 0x4001a72	      6046	eval.c	FUNCTION_94	IF_2	IF_4
0x4001a64	    0x488b05000000	            mov rax, qword [0x04001a6b] 	      6047	eval.c	FUNCTION_94	IF_2	IF_4
0x4001a6b	    0x486380b80000	         movsxd rax, dword [rax + 0xb8] 	      6047	eval.c	FUNCTION_94	IF_2	IF_4
0x4001a72	        0x41894500	                    mov dword [r13], eax	      6048	eval.c	FUNCTION_94	IF_2
0x4001a76	    0x41bd01000000	                             mov r13d, 1	      6043	eval.c	FUNCTION_94	IF_2	CALL_1
0x4001a7c	      0xba00000000	                              mov edx, 0	      6051	eval.c	FUNCTION_94	CALL_2
0x4001a81	          0x4c89ee	                            mov rsi, r13	      6051	eval.c	FUNCTION_94	CALL_2
0x4001a84	          0x4889df	                            mov rdi, rbx	      6051	eval.c	FUNCTION_94	CALL_2
0x4001a87	      0xe800000000	                          call 0x4001a8c	      6051	eval.c	FUNCTION_94	CALL_2
0x4001a8c	          0x4889c2	                            mov rdx, rax	      6051	eval.c	FUNCTION_94	CALL_2
0x4001a8f	      0xb800000000	                              mov eax, 0	      6053	eval.c	FUNCTION_94	IF_5
0x4001a94	          0x4885d2	                           test rdx, rdx	      6052	eval.c	FUNCTION_94	IF_5
0x4001a97	     0xf88b8000000	                            js 0x4001b55	      6052	eval.c	FUNCTION_94	IF_5
0x4001a9d	        0x48895500	                    mov qword [rbp], rdx	      6054	eval.c	FUNCTION_94
0x4001aa1	        0x498d7501	                      lea rsi, [r13 + 1]	      6056	eval.c	FUNCTION_94	CALL_3
0x4001aa5	      0xba00000000	                              mov edx, 0	      6056	eval.c	FUNCTION_94	CALL_3
0x4001aaa	          0x4889df	                            mov rdi, rbx	      6056	eval.c	FUNCTION_94	CALL_3
0x4001aad	      0xe800000000	                          call 0x4001ab2	      6056	eval.c	FUNCTION_94	CALL_3
0x4001ab2	          0x4889c2	                            mov rdx, rax	      6056	eval.c	FUNCTION_94	CALL_3
0x4001ab5	      0xb800000000	                              mov eax, 0	      6058	eval.c	FUNCTION_94	IF_6
0x4001aba	          0x4885d2	                           test rdx, rdx	      6057	eval.c	FUNCTION_94	IF_6
0x4001abd	     0xf8892000000	                            js 0x4001b55	      6057	eval.c	FUNCTION_94	IF_6
0x4001ac3	          0x895508	                mov dword [rbp + 8], edx	      6059	eval.c	FUNCTION_94
0x4001ac6	        0x498d7502	                      lea rsi, [r13 + 2]	      6062	eval.c	FUNCTION_94	CALL_4
0x4001aca	      0xba00000000	                              mov edx, 0	      6062	eval.c	FUNCTION_94	CALL_4
0x4001acf	          0x4889df	                            mov rdi, rbx	      6062	eval.c	FUNCTION_94	CALL_4
0x4001ad2	      0xe800000000	                          call 0x4001ad7	      6062	eval.c	FUNCTION_94	CALL_4
0x4001ad7	          0x4885c0	                           test rax, rax	      6064	eval.c	FUNCTION_94	IF_7
0x4001ada	      0xba00000000	                              mov edx, 0	      6064	eval.c	FUNCTION_94	IF_7
0x4001adf	           0xf48c2	                          cmovs eax, edx	      6064	eval.c	FUNCTION_94	IF_7
0x4001ae2	          0x89450c	              mov dword [rbp + 0xc], eax	      6064	eval.c	FUNCTION_94	IF_7
0x4001ae5	      0xb801000000	                              mov eax, 1	      6072	eval.c	FUNCTION_94
0x4001aea	          0x4d85e4	                           test r12, r12	      6069	eval.c	FUNCTION_94	IF_8
0x4001aed	            0x7466	                            je 0x4001b55	      6069	eval.c	FUNCTION_94	IF_8
0x4001aef	        0x498d7503	                      lea rsi, [r13 + 3]	      6070	eval.c	FUNCTION_94	CALL_5
0x4001af3	      0xba00000000	                              mov edx, 0	      6070	eval.c	FUNCTION_94	CALL_5
0x4001af8	          0x4889df	                            mov rdi, rbx	      6070	eval.c	FUNCTION_94	CALL_5
0x4001afb	      0xe800000000	                          call 0x4001b00	      6070	eval.c	FUNCTION_94	CALL_5
0x4001b00	        0x41890424	                    mov dword [r12], eax	      6070	eval.c	FUNCTION_94	CALL_5
0x4001b04	      0xb801000000	                              mov eax, 1	      6072	eval.c	FUNCTION_94
0x4001b09	            0xeb4a	                           jmp 0x4001b55	      6072	eval.c	FUNCTION_94
0x4001b0b	      0xb800000000	                              mov eax, 0	      6039	eval.c	FUNCTION_94	IF_1
0x4001b10	            0xeb43	                           jmp 0x4001b55	      6039	eval.c	FUNCTION_94	IF_1
0x4001b12	      0xb800000000	                              mov eax, 0	      6045	eval.c	FUNCTION_94	IF_2	IF_3
0x4001b17	            0xeb3c	                           jmp 0x4001b55	      6045	eval.c	FUNCTION_94	IF_2	IF_3
0x4001b19	      0xb800000000	                              mov eax, 0	      6039	eval.c	FUNCTION_94	IF_1
0x4001b1e	    0x41bd00000000	                             mov r13d, 0	      6030	eval.c	FUNCTION_94
0x4001b24	          0x83fa04	                              cmp edx, 4	      6038	eval.c	FUNCTION_94	IF_1
0x4001b27	     0xf8e4fffffff	                           jle 0x4001a7c	      6038	eval.c	FUNCTION_94	IF_1
0x4001b2d	            0xeb26	                           jmp 0x4001b55	      6038	eval.c	FUNCTION_94	IF_1
0x4001b2f	      0xb800000000	                              mov eax, 0	      6039	eval.c	FUNCTION_94	IF_1
0x4001b34	          0x83fa05	                              cmp edx, 5	      6038	eval.c	FUNCTION_94	IF_1
0x4001b37	     0xf8e07ffffff	                           jle 0x4001a44	      6038	eval.c	FUNCTION_94	IF_1
0x4001b3d	            0xeb16	                           jmp 0x4001b55	      6038	eval.c	FUNCTION_94	IF_1
0x4001b3f	      0xb800000000	                              mov eax, 0	      6039	eval.c	FUNCTION_94	IF_1
0x4001b44	          0x83fa01	                              cmp edx, 1	      6037	eval.c	FUNCTION_94	IF_1
0x4001b47	            0x7fd0	                            jg 0x4001b19	      6037	eval.c	FUNCTION_94	IF_1
0x4001b49	            0xeb0a	                           jmp 0x4001b55	      6037	eval.c	FUNCTION_94	IF_1
0x4001b4b	      0xb800000000	                              mov eax, 0	      6039	eval.c	FUNCTION_94	IF_1
0x4001b50	          0x83fa02	                              cmp edx, 2	      6037	eval.c	FUNCTION_94	IF_1
0x4001b53	            0x7fda	                            jg 0x4001b2f	      6037	eval.c	FUNCTION_94	IF_1
0x4001b55	        0x4883c408	                              add rsp, 8	      6073	eval.c	FUNCTION_94
0x4001b59	              0x5b	                                 pop rbx	      6073	eval.c	FUNCTION_94
0x4001b5a	              0x5d	                                 pop rbp	      6073	eval.c	FUNCTION_94
0x4001b5b	            0x415c	                                 pop r12	      6073	eval.c	FUNCTION_94
0x4001b5d	            0x415d	                                 pop r13	      6073	eval.c	FUNCTION_94
0x4001b5f	              0xc3	                                     ret	      6073	eval.c	FUNCTION_94
ex_echohl	FOR,0:SWITCH,0:DO,0:IF,0:functions,0:WHILE,0:CALL,1:ELSE,0	6
0x4004cb1	        0x4883ec08	                              sub rsp, 8	      8112	eval.c	FUNCTION_153
0x4004cb5	          0x488b3f	                    mov rdi, qword [rdi]	      8113	eval.c	FUNCTION_153	CALL_1
0x4004cb8	      0xe800000000	                          call 0x4004cbd	      8113	eval.c	FUNCTION_153	CALL_1
0x4004cbd	    0x890500000000	            mov dword [0x04004cc3], eax 	      8113	eval.c	FUNCTION_153	CALL_1
0x4004cc3	        0x4883c408	                              add rsp, 8	      8114	eval.c	FUNCTION_153
0x4004cc7	              0xc3	                                     ret	      8114	eval.c	FUNCTION_153
eval_patch	FOR,0:SWITCH,0:DO,0:IF,0:functions,0:WHILE,0:CALL,7:ELSE,0	45
0x40083c2	              0x55	                                push rbp	       648	eval.c	FUNCTION_12
0x40083c3	              0x53	                                push rbx	       648	eval.c	FUNCTION_12
0x40083c4	        0x4883ec18	                           sub rsp, 0x18	       648	eval.c	FUNCTION_12
0x40083c8	          0x4889f5	                            mov rbp, rsi	       648	eval.c	FUNCTION_12
0x40083cb	          0x4889d3	                            mov rbx, rdx	       648	eval.c	FUNCTION_12
0x40083ce	    0x64488b042528	                mov rax, qword fs:[0x28]	       648	eval.c	FUNCTION_12
0x40083d7	      0x4889442408	                mov qword [rsp + 8], rax	       648	eval.c	FUNCTION_12
0x40083dc	            0x31c0	                            xor eax, eax	       648	eval.c	FUNCTION_12
0x40083de	      0xbaffffffff	                     mov edx, 0xffffffff	       651	eval.c	FUNCTION_12	CALL_1
0x40083e3	          0x4889fe	                            mov rsi, rdi	       651	eval.c	FUNCTION_12	CALL_1
0x40083e6	      0xbf11000000	                           mov edi, 0x11	       651	eval.c	FUNCTION_12	CALL_1
0x40083eb	      0xe800000000	                          call 0x40083f0	       651	eval.c	FUNCTION_12	CALL_1
0x40083f0	      0xbaffffffff	                     mov edx, 0xffffffff	       652	eval.c	FUNCTION_12	CALL_2
0x40083f5	          0x4889ee	                            mov rsi, rbp	       652	eval.c	FUNCTION_12	CALL_2
0x40083f8	      0xbf14000000	                           mov edi, 0x14	       652	eval.c	FUNCTION_12	CALL_2
0x40083fd	      0xe800000000	                          call 0x4008402	       652	eval.c	FUNCTION_12	CALL_2
0x4008402	      0xbaffffffff	                     mov edx, 0xffffffff	       653	eval.c	FUNCTION_12	CALL_3
0x4008407	          0x4889de	                            mov rsi, rbx	       653	eval.c	FUNCTION_12	CALL_3
0x400840a	      0xbf12000000	                           mov edi, 0x12	       653	eval.c	FUNCTION_12	CALL_3
0x400840f	      0xe800000000	                          call 0x4008414	       653	eval.c	FUNCTION_12	CALL_3
0x4008414	      0xb900000000	                              mov ecx, 0	       654	eval.c	FUNCTION_12	CALL_4
0x4008419	      0xba00000000	                              mov edx, 0	       654	eval.c	FUNCTION_12	CALL_4
0x400841e	      0x488d742404	                      lea rsi, [rsp + 4]	       654	eval.c	FUNCTION_12	CALL_4
0x4008423	    0x488b3d000000	            mov rdi, qword [0x0400842a] 	       654	eval.c	FUNCTION_12	CALL_4
0x400842a	      0xe800000000	                          call 0x400842f	       654	eval.c	FUNCTION_12	CALL_4
0x400842f	      0xbaffffffff	                     mov edx, 0xffffffff	       655	eval.c	FUNCTION_12	CALL_5
0x4008434	      0xbe00000000	                              mov esi, 0	       655	eval.c	FUNCTION_12	CALL_5
0x4008439	      0xbf11000000	                           mov edi, 0x11	       655	eval.c	FUNCTION_12	CALL_5
0x400843e	      0xe800000000	                          call 0x4008443	       655	eval.c	FUNCTION_12	CALL_5
0x4008443	      0xbaffffffff	                     mov edx, 0xffffffff	       656	eval.c	FUNCTION_12	CALL_6
0x4008448	      0xbe00000000	                              mov esi, 0	       656	eval.c	FUNCTION_12	CALL_6
0x400844d	      0xbf14000000	                           mov edi, 0x14	       656	eval.c	FUNCTION_12	CALL_6
0x4008452	      0xe800000000	                          call 0x4008457	       656	eval.c	FUNCTION_12	CALL_6
0x4008457	      0xbaffffffff	                     mov edx, 0xffffffff	       657	eval.c	FUNCTION_12	CALL_7
0x400845c	      0xbe00000000	                              mov esi, 0	       657	eval.c	FUNCTION_12	CALL_7
0x4008461	      0xbf12000000	                           mov edi, 0x12	       657	eval.c	FUNCTION_12	CALL_7
0x4008466	      0xe800000000	                          call 0x400846b	       657	eval.c	FUNCTION_12	CALL_7
0x400846b	      0x488b442408	                mov rax, qword [rsp + 8]	       658	eval.c	FUNCTION_12
0x4008470	    0x644833042528	                xor rax, qword fs:[0x28]	       658	eval.c	FUNCTION_12
0x4008479	            0x7405	                            je 0x4008480	       658	eval.c	FUNCTION_12
0x400847b	      0xe800000000	                          call 0x4008480	       658	eval.c	FUNCTION_12
0x4008480	        0x4883c418	                           add rsp, 0x18	       658	eval.c	FUNCTION_12
0x4008484	              0x5b	                                 pop rbx	       658	eval.c	FUNCTION_12
0x4008485	              0x5d	                                 pop rbp	       658	eval.c	FUNCTION_12
0x4008486	              0xc3	                                     ret	       658	eval.c	FUNCTION_12
eval7	FOR,0:SWITCH,1:DO,0:IF,32:functions,0:WHILE,2:CALL,39:ELSE,13	784
0x400b973	            0x4157	                                push r15	      3992	eval.c	ELSE_15	FUNCTION_70
0x400b975	            0x4156	                                push r14	      3992	eval.c	ELSE_15	FUNCTION_70
0x400b977	            0x4155	                                push r13	      3992	eval.c	ELSE_15	FUNCTION_70
0x400b979	            0x4154	                                push r12	      3992	eval.c	ELSE_15	FUNCTION_70
0x400b97b	              0x55	                                push rbp	      3992	eval.c	ELSE_15	FUNCTION_70
0x400b97c	              0x53	                                push rbx	      3992	eval.c	ELSE_15	FUNCTION_70
0x400b97d	        0x4883ec38	                           sub rsp, 0x38	      3992	eval.c	ELSE_15	FUNCTION_70
0x400b981	          0x4889fd	                            mov rbp, rdi	      3992	eval.c	ELSE_15	FUNCTION_70
0x400b984	          0x4989f5	                            mov r13, rsi	      3992	eval.c	ELSE_15	FUNCTION_70
0x400b987	          0x4189d7	                           mov r15d, edx	      3992	eval.c	ELSE_15	FUNCTION_70
0x400b98a	          0x4189ce	                           mov r14d, ecx	      3992	eval.c	ELSE_15	FUNCTION_70
0x400b98d	    0x64488b042528	                mov rax, qword fs:[0x28]	      3992	eval.c	ELSE_15	FUNCTION_70
0x400b996	      0x4889442428	             mov qword [rsp + 0x28], rax	      3992	eval.c	ELSE_15	FUNCTION_70
0x400b99b	            0x31c0	                            xor eax, eax	      3992	eval.c	ELSE_15	FUNCTION_70
0x400b99d	    0xc70600000000	                      mov dword [rsi], 0	      4004	eval.c	ELSE_15	FUNCTION_70
0x400b9a3	          0x4c8b27	                    mov r12, qword [rdi]	      4009	eval.c	ELSE_15	FUNCTION_70
0x400b9a6	      0x410fb60424	                   movzx eax, byte [r12]	      4010	eval.c	ELSE_15	FUNCTION_70	WHILE_1
0x400b9ab	          0x8d50d5	                   lea edx, [rax - 0x2b]	      4010	eval.c	ELSE_15	FUNCTION_70	WHILE_1
0x400b9ae	          0xf6c2fd	                           test dl, 0xfd	      4010	eval.c	ELSE_15	FUNCTION_70	WHILE_1
0x400b9b1	            0x7408	                            je 0x400b9bb	      4010	eval.c	ELSE_15	FUNCTION_70	WHILE_1
0x400b9b3	            0x3c21	                            cmp al, 0x21	      4010	eval.c	ELSE_15	FUNCTION_70	WHILE_1
0x400b9b5	     0xf850d0b0000	                           jne 0x400c4c8	      4010	eval.c	ELSE_15	FUNCTION_70	WHILE_1
0x400b9bb	          0x4c89e3	                            mov rbx, r12	      4010	eval.c	ELSE_15	FUNCTION_70	WHILE_1
0x400b9be	        0x488d7b01	                      lea rdi, [rbx + 1]	      4011	eval.c	ELSE_15	FUNCTION_70	CALL_1
0x400b9c2	      0xe800000000	                          call 0x400b9c7	      4011	eval.c	ELSE_15	FUNCTION_70	CALL_1
0x400b9c7	          0x4889c3	                            mov rbx, rax	      4011	eval.c	ELSE_15	FUNCTION_70	CALL_1
0x400b9ca	        0x48894500	                    mov qword [rbp], rax	      4011	eval.c	ELSE_15	FUNCTION_70	CALL_1
0x400b9ce	           0xfb600	                   movzx eax, byte [rax]	      4010	eval.c	ELSE_15	FUNCTION_70	WHILE_1
0x400b9d1	          0x8d50d5	                   lea edx, [rax - 0x2b]	      4010	eval.c	ELSE_15	FUNCTION_70	WHILE_1
0x400b9d4	          0xf6c2fd	                           test dl, 0xfd	      4010	eval.c	ELSE_15	FUNCTION_70	WHILE_1
0x400b9d7	            0x74e5	                            je 0x400b9be	      4010	eval.c	ELSE_15	FUNCTION_70	WHILE_1
0x400b9d9	            0x3c21	                            cmp al, 0x21	      4010	eval.c	ELSE_15	FUNCTION_70	WHILE_1
0x400b9db	            0x74e1	                            je 0x400b9be	      4010	eval.c	ELSE_15	FUNCTION_70	WHILE_1
0x400b9dd	      0xe9e90a0000	                           jmp 0x400c4cb	      4010	eval.c	ELSE_15	FUNCTION_70	WHILE_1
0x400b9e2	        0x488d7b01	                      lea rdi, [rbx + 1]	      4031	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_2
0x400b9e6	      0xe800000000	                          call 0x400b9eb	      4031	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_2
0x400b9eb	        0x48890424	                    mov qword [rsp], rax	      4031	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_2
0x400b9ef	          0x4585f6	                         test r14d, r14d	      4039	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	CALL_3
0x400b9f2	     0xf85a2000000	                           jne 0x400ba9a	      4039	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	CALL_3
0x400b9f8	          0x80382e	                    cmp byte [rax], 0x2e	      4039	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	CALL_3
0x400b9fb	     0xf8599000000	                           jne 0x400ba9a	      4039	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	CALL_3
0x400ba01	         0xfb67801	               movzx edi, byte [rax + 1]	      4039	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	CALL_3
0x400ba05	      0xe800000000	                          call 0x400ba0a	      4039	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	CALL_3
0x400ba0a	            0x85c0	                           test eax, eax	      4039	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	CALL_3
0x400ba0c	     0xf8488000000	                            je 0x400ba9a	      4039	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	CALL_3
0x400ba12	        0x488b3c24	                    mov rdi, qword [rsp]	      4042	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	CALL_4
0x400ba16	        0x4883c702	                              add rdi, 2	      4042	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	CALL_4
0x400ba1a	      0xe800000000	                          call 0x400ba1f	      4042	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	CALL_4
0x400ba1f	           0xfb610	                   movzx edx, byte [rax]	      4043	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_2
0x400ba22	          0x83e2df	                     and edx, 0xffffffdf	      4043	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_2
0x400ba25	          0x80fa45	                            cmp dl, 0x45	      4043	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_2
0x400ba28	     0xf85430b0000	                           jne 0x400c571	      4043	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_2
0x400ba2e	        0x4c8d7001	                      lea r14, [rax + 1]	      4045	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_2
0x400ba32	         0xfb64801	               movzx ecx, byte [rax + 1]	      4046	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_2	IF_3
0x400ba36	          0x8d51d5	                   lea edx, [rcx - 0x2b]	      4046	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_2	IF_3
0x400ba39	    0x81e2fd000000	                           and edx, 0xfd	      4046	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_2	IF_3
0x400ba3f	        0x4883c002	                              add rax, 2	      4047	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_2	IF_3
0x400ba43	            0x84d2	                             test dl, dl	      4047	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_2	IF_3
0x400ba45	        0x4c0f44f0	                          cmove r14, rax	      4047	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_2	IF_3
0x400ba49	        0x410fb63e	                   movzx edi, byte [r14]	      4048	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_2	IF_4	CALL_5
0x400ba4d	      0xe800000000	                          call 0x400ba52	      4048	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_2	IF_4	CALL_5
0x400ba52	            0x85c0	                           test eax, eax	      4048	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_2	IF_4	CALL_5
0x400ba54	            0x7444	                            je 0x400ba9a	      4048	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_2	IF_4	CALL_5
0x400ba56	        0x498d7e01	                      lea rdi, [r14 + 1]	      4051	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_2	CALL_6
0x400ba5a	      0xe800000000	                          call 0x400ba5f	      4051	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_2	CALL_6
0x400ba5f	      0xe90d0b0000	                           jmp 0x400c571	      4051	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_2	CALL_6
0x400ba64	      0x488d742420	                   lea rsi, [rsp + 0x20]	      4060	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_6	CALL_8
0x400ba69	        0x488b7d00	                    mov rdi, qword [rbp]	      4060	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_6	CALL_8
0x400ba6d	      0xe800000000	                          call 0x400ba72	      4060	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_6	CALL_8
0x400ba72	            0x4898	                                    cdqe	      4060	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_6	CALL_8
0x400ba74	        0x48014500	                    add qword [rbp], rax	      4060	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_6	CALL_8
0x400ba78	          0x4585ff	                         test r15d, r15d	      4061	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_6	IF_7
0x400ba7b	     0xf842e0b0000	                            je 0x400c5af	      4061	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_6	IF_7
0x400ba81	    0x41c745000700	                      mov dword [r13], 7	      4063	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_6	IF_7
0x400ba89	    0xf20f10442420	         movsd xmm0, qword [rsp + 0x20] 	      4064	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_6	IF_7
0x400ba8f	    0xf2410f114508	             movsd qword [r13 + 8], xmm0	      4064	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_6	IF_7
0x400ba95	      0xe9150b0000	                           jmp 0x400c5af	      4064	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_6	IF_7
0x400ba9a	        0x4883ec08	                              sub rsp, 8	      4070	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_2	CALL_9
0x400ba9e	            0x6a00	                                  push 0	      4070	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_2	CALL_9
0x400baa0	    0x41b900000000	                              mov r9d, 0	      4070	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_2	CALL_9
0x400baa6	      0x4c8d442430	                    lea r8, [rsp + 0x30]	      4070	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_2	CALL_9
0x400baab	      0xb907000000	                              mov ecx, 7	      4070	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_2	CALL_9
0x400bab0	      0x488d542420	                   lea rdx, [rsp + 0x20]	      4070	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_2	CALL_9
0x400bab5	      0xbe00000000	                              mov esi, 0	      4070	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_2	CALL_9
0x400baba	        0x488b7d00	                    mov rdi, qword [rbp]	      4070	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_2	CALL_9
0x400babe	      0xe800000000	                          call 0x400bac3	      4070	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_2	CALL_9
0x400bac3	      0x4863442420	         movsxd rax, dword [rsp + 0x20] 	      4071	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_2
0x400bac8	        0x48014500	                    add qword [rbp], rax	      4071	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_2
0x400bacc	        0x4883c410	                           add rsp, 0x10	      4072	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_2	IF_8
0x400bad0	          0x4585ff	                         test r15d, r15d	      4072	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_2	IF_8
0x400bad3	     0xf84d60a0000	                            je 0x400c5af	      4072	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_2	IF_8
0x400bad9	    0x41c745000100	                      mov dword [r13], 1	      4074	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_2	IF_8
0x400bae1	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4075	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_2	IF_8
0x400bae6	        0x49894508	                mov qword [r13 + 8], rax	      4075	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_2	IF_8
0x400baea	      0xe9c00a0000	                           jmp 0x400c5af	      4075	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_2	IF_8
0x400baef	        0x488d4301	                      lea rax, [rbx + 1]	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400baf3	      0x4889442418	             mov qword [rsp + 0x18], rax	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400baf8	         0xfb65301	               movzx edx, byte [rbx + 1]	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400bafc	            0x84d2	                             test dl, dl	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400bafe	            0x745e	                            je 0x400bb5e	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400bb00	          0x80fa22	                            cmp dl, 0x22	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400bb03	            0x7459	                            je 0x400bb5e	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400bb05	    0x41be00000000	                             mov r14d, 0	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400bb0b	          0x80fa5c	                            cmp dl, 0x5c	      4671	eval.c	FUNCTION_73	FOR_1	IF_1
0x400bb0e	            0x751b	                           jne 0x400bb2b	      4671	eval.c	FUNCTION_73	FOR_1	IF_1
0x400bb10	        0x80780100	                   cmp byte [rax + 1], 0	      4671	eval.c	FUNCTION_73	FOR_1	IF_1
0x400bb14	            0x7415	                            je 0x400bb2b	      4671	eval.c	FUNCTION_73	FOR_1	IF_1
0x400bb16	        0x488d5001	                      lea rdx, [rax + 1]	      4673	eval.c	FUNCTION_73	FOR_1	IF_1
0x400bb1a	      0x4889542418	             mov qword [rsp + 0x18], rdx	      4673	eval.c	FUNCTION_73	FOR_1	IF_1
0x400bb1f	        0x418d5602	                      lea edx, [r14 + 2]	      4677	eval.c	FUNCTION_73	FOR_1	IF_1	IF_2
0x400bb23	        0x8078013c	                cmp byte [rax + 1], 0x3c	      4677	eval.c	FUNCTION_73	FOR_1	IF_1	IF_2
0x400bb27	        0x440f44f2	                         cmove r14d, edx	      4677	eval.c	FUNCTION_73	FOR_1	IF_1	IF_2
0x400bb2b	      0xb801000000	                              mov eax, 1	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400bb30	    0x833d00000000	               cmp dword [0x0400bb37], 0	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400bb37	            0x740b	                            je 0x400bb44	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400bb39	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400bb3e	    0xff1500000000	                 call qword [0x0400bb44]	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400bb44	            0x4898	                                    cdqe	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400bb46	      0x4803442418	             add rax, qword [rsp + 0x18]	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400bb4b	      0x4889442418	             mov qword [rsp + 0x18], rax	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400bb50	           0xfb610	                   movzx edx, byte [rax]	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400bb53	            0x84d2	                             test dl, dl	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400bb55	            0x740d	                            je 0x400bb64	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400bb57	          0x80fa22	                            cmp dl, 0x22	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400bb5a	            0x75af	                           jne 0x400bb0b	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400bb5c	            0xeb06	                           jmp 0x400bb64	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400bb5e	    0x41be00000000	                             mov r14d, 0	      4664	eval.c	FUNCTION_73
0x400bb64	          0x80fa22	                            cmp dl, 0x22	      4681	eval.c	FUNCTION_73	IF_3
0x400bb67	            0x742e	                            je 0x400bb97	      4681	eval.c	FUNCTION_73	IF_3
0x400bb69	        0x4c8b7500	                    mov r14, qword [rbp]	      4683	eval.c	FUNCTION_73	IF_3	CALL_3
0x400bb6d	      0xba05000000	                              mov edx, 5	      4683	eval.c	FUNCTION_73	IF_3	CALL_3
0x400bb72	      0xbe00000000	                              mov esi, 0	      4683	eval.c	FUNCTION_73	IF_3	CALL_3
0x400bb77	      0xbf00000000	                              mov edi, 0	      4683	eval.c	FUNCTION_73	IF_3	CALL_3
0x400bb7c	      0xe800000000	                          call 0x400bb81	      4683	eval.c	FUNCTION_73	IF_3	CALL_3
0x400bb81	          0x4c89f6	                            mov rsi, r14	      4683	eval.c	FUNCTION_73	IF_3	CALL_3
0x400bb84	          0x4889c7	                            mov rdi, rax	      4683	eval.c	FUNCTION_73	IF_3	CALL_3
0x400bb87	      0xe800000000	                          call 0x400bb8c	      4683	eval.c	FUNCTION_73	IF_3	CALL_3
0x400bb8c	    0x41be00000000	                             mov r14d, 0	      4684	eval.c	FUNCTION_73	IF_3
0x400bb92	      0xe952060000	                           jmp 0x400c1e9	      4684	eval.c	FUNCTION_73	IF_3
0x400bb97	          0x4585ff	                         test r15d, r15d	      4688	eval.c	FUNCTION_73	IF_4
0x400bb9a	            0x7513	                           jne 0x400bbaf	      4688	eval.c	FUNCTION_73	IF_4
0x400bb9c	        0x4883c001	                              add rax, 1	      4690	eval.c	FUNCTION_73	IF_4
0x400bba0	        0x48894500	                    mov qword [rbp], rax	      4690	eval.c	FUNCTION_73	IF_4
0x400bba4	    0x41be01000000	                             mov r14d, 1	      4691	eval.c	FUNCTION_73	IF_4
0x400bbaa	      0xe93a060000	                           jmp 0x400c1e9	      4691	eval.c	FUNCTION_73	IF_4
0x400bbaf	        0x482b4500	                    sub rax, qword [rbp]	      4698	eval.c	FUNCTION_73	CALL_4
0x400bbb3	        0x418d3c06	                    lea edi, [r14 + rax]	      4698	eval.c	FUNCTION_73	CALL_4
0x400bbb7	      0xe800000000	                          call 0x400bbbc	      4698	eval.c	FUNCTION_73	CALL_4
0x400bbbc	      0x4889442420	             mov qword [rsp + 0x20], rax	      4698	eval.c	FUNCTION_73	CALL_4
0x400bbc1	          0x4885c0	                           test rax, rax	      4699	eval.c	FUNCTION_73	IF_5
0x400bbc4	     0xf8403030000	                            je 0x400becd	      4699	eval.c	FUNCTION_73	IF_5
0x400bbca	    0x41c745000200	                      mov dword [r13], 2	      4701	eval.c	FUNCTION_73
0x400bbd2	        0x49894508	                mov qword [r13 + 8], rax	      4702	eval.c	FUNCTION_73
0x400bbd6	        0x488b4500	                    mov rax, qword [rbp]	      4704	eval.c	FUNCTION_73	FOR_2
0x400bbda	        0x4883c001	                              add rax, 1	      4704	eval.c	FUNCTION_73	FOR_2
0x400bbde	      0x4889442418	             mov qword [rsp + 0x18], rax	      4704	eval.c	FUNCTION_73	FOR_2
0x400bbe3	      0xe9a2020000	                           jmp 0x400be8a	      4704	eval.c	FUNCTION_73	FOR_2
0x400bbe8	            0x3c5c	                            cmp al, 0x5c	      4706	eval.c	FUNCTION_73	FOR_2	IF_6
0x400bbea	     0xf8564020000	                           jne 0x400be54	      4706	eval.c	FUNCTION_73	FOR_2	IF_6
0x400bbf0	        0x488d4201	                      lea rax, [rdx + 1]	      4708	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400bbf4	      0x4889442418	             mov qword [rsp + 0x18], rax	      4708	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400bbf9	         0xfb64201	               movzx eax, byte [rdx + 1]	      4708	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400bbfd	          0x83e830	                           sub eax, 0x30	      4708	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400bc00	            0x3c48	                            cmp al, 0x48	      4708	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400bc02	     0xf870f020000	                            ja 0x400be17	      4708	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400bc08	           0xfb6c0	                           movzx eax, al	      4708	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400bc0b	    0xff24c5000000	                       jmp qword [rax*8]	      4708	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400bc12	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4710	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400bc17	        0x488d5001	                      lea rdx, [rax + 1]	      4710	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400bc1b	      0x4889542420	             mov qword [rsp + 0x20], rdx	      4710	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400bc20	          0xc60008	                       mov byte [rax], 8	      4710	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400bc23	    0x488344241801	               add qword [rsp + 0x18], 1	      4710	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400bc29	      0xe95c020000	                           jmp 0x400be8a	      4710	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400bc2e	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4711	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400bc33	        0x488d5001	                      lea rdx, [rax + 1]	      4711	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400bc37	      0x4889542420	             mov qword [rsp + 0x20], rdx	      4711	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400bc3c	          0xc6001b	                    mov byte [rax], 0x1b	      4711	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400bc3f	    0x488344241801	               add qword [rsp + 0x18], 1	      4711	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400bc45	      0xe940020000	                           jmp 0x400be8a	      4711	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400bc4a	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4712	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400bc4f	        0x488d5001	                      lea rdx, [rax + 1]	      4712	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400bc53	      0x4889542420	             mov qword [rsp + 0x20], rdx	      4712	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400bc58	          0xc6000c	                     mov byte [rax], 0xc	      4712	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400bc5b	    0x488344241801	               add qword [rsp + 0x18], 1	      4712	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400bc61	      0xe924020000	                           jmp 0x400be8a	      4712	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400bc66	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4713	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400bc6b	        0x488d5001	                      lea rdx, [rax + 1]	      4713	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400bc6f	      0x4889542420	             mov qword [rsp + 0x20], rdx	      4713	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400bc74	          0xc6000a	                     mov byte [rax], 0xa	      4713	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400bc77	    0x488344241801	               add qword [rsp + 0x18], 1	      4713	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400bc7d	      0xe908020000	                           jmp 0x400be8a	      4713	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400bc82	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4714	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400bc87	        0x488d5001	                      lea rdx, [rax + 1]	      4714	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400bc8b	      0x4889542420	             mov qword [rsp + 0x20], rdx	      4714	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400bc90	          0xc6000d	                     mov byte [rax], 0xd	      4714	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400bc93	    0x488344241801	               add qword [rsp + 0x18], 1	      4714	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400bc99	      0xe9ec010000	                           jmp 0x400be8a	      4714	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400bc9e	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4715	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400bca3	        0x488d5001	                      lea rdx, [rax + 1]	      4715	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400bca7	      0x4889542420	             mov qword [rsp + 0x20], rdx	      4715	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400bcac	          0xc60009	                       mov byte [rax], 9	      4715	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400bcaf	    0x488344241801	               add qword [rsp + 0x18], 1	      4715	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400bcb5	      0xe9d0010000	                           jmp 0x400be8a	      4715	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400bcba	         0xfb67a02	               movzx edi, byte [rdx + 2]	      4721	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	CALL_5
0x400bcbe	      0xe800000000	                          call 0x400bcc3	      4721	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	CALL_5
0x400bcc3	            0x85c0	                           test eax, eax	      4721	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	CALL_5
0x400bcc5	     0xf84bf010000	                            je 0x400be8a	      4721	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	CALL_5
0x400bccb	      0xe800000000	                          call 0x400bcd0	      4724	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	CALL_6
0x400bcd0	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      4724	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	CALL_6
0x400bcd5	           0xfb612	                   movzx edx, byte [rdx]	      4724	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	CALL_6
0x400bcd8	           0xfb6ca	                           movzx ecx, dl	      4724	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	CALL_6
0x400bcdb	          0x488b00	                    mov rax, qword [rax]	      4724	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	CALL_6
0x400bcde	          0x8b0488	            mov eax, dword [rax + rcx*4]	      4724	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	CALL_6
0x400bce1	            0x89c1	                            mov ecx, eax	      4724	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	CALL_6
0x400bce3	        0x8944240c	              mov dword [rsp + 0xc], eax	      4724	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	CALL_6
0x400bce7	      0xb802000000	                              mov eax, 2	      4727	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	IF_8
0x400bcec	          0x83f958	                           cmp ecx, 0x58	      4726	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	IF_8
0x400bcef	     0xf84eb070000	                            je 0x400c4e0	      4726	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	IF_8
0x400bcf5	          0x80fa75	                            cmp dl, 0x75	      4731	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_2
0x400bcf8	           0xf95c0	                                setne al	      4731	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_2
0x400bcfb	           0xfb6c0	                           movzx eax, al	      4731	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_2
0x400bcfe	    0x8d0485040000	                    lea eax, [rax*4 + 4]	      4731	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_2
0x400bd05	      0xe9d6070000	                           jmp 0x400c4e0	      4731	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_2
0x400bd0a	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4735	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_2	WHILE_1
0x400bd0f	        0x488d5001	                      lea rdx, [rax + 1]	      4735	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_2	WHILE_1
0x400bd13	      0x4889542418	             mov qword [rsp + 0x18], rdx	      4735	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_2	WHILE_1
0x400bd18	        0x41c1e604	                             shl r14d, 4	      4736	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_2	WHILE_1	CALL_8
0x400bd1c	         0xfb67801	               movzx edi, byte [rax + 1]	      4736	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_2	WHILE_1	CALL_8
0x400bd20	      0xe800000000	                          call 0x400bd25	      4736	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_2	WHILE_1	CALL_8
0x400bd25	          0x4101c6	                           add r14d, eax	      4736	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_2	WHILE_1	CALL_8
0x400bd28	        0x832c2401	                      sub dword [rsp], 1	      4733	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_2	WHILE_1	CALL_7
0x400bd2c	            0x7812	                            js 0x400bd40	      4733	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_2	WHILE_1	CALL_7
0x400bd2e	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4733	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_2	WHILE_1	CALL_7
0x400bd33	         0xfb67801	               movzx edi, byte [rax + 1]	      4733	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_2	WHILE_1	CALL_7
0x400bd37	      0xe800000000	                          call 0x400bd3c	      4733	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_2	WHILE_1	CALL_7
0x400bd3c	            0x85c0	                           test eax, eax	      4733	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_2	WHILE_1	CALL_7
0x400bd3e	            0x75ca	                           jne 0x400bd0a	      4733	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_2	WHILE_1	CALL_7
0x400bd40	    0x488344241801	               add qword [rsp + 0x18], 1	      4738	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7
0x400bd46	      0x837c240c58	            cmp dword [rsp + 0xc], 0x58 	      4742	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	IF_10
0x400bd4b	            0x741a	                            je 0x400bd67	      4742	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	IF_10
0x400bd4d	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      4743	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	IF_10
0x400bd52	          0x4489f7	                           mov edi, r14d	      4743	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	IF_10
0x400bd55	    0xff1500000000	                 call qword [0x0400bd5b]	      4743	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	IF_10
0x400bd5b	            0x4898	                                    cdqe	      4743	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	IF_10
0x400bd5d	      0x4801442420	            add qword [rsp + 0x20], rax 	      4743	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	IF_10
0x400bd62	      0xe923010000	                           jmp 0x400be8a	      4743	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	IF_10
0x400bd67	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4746	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_3
0x400bd6c	        0x488d5001	                      lea rdx, [rax + 1]	      4746	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_3
0x400bd70	      0x4889542420	             mov qword [rsp + 0x20], rdx	      4746	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_3
0x400bd75	          0x448830	                    mov byte [rax], r14b	      4746	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_3
0x400bd78	      0xe90d010000	                           jmp 0x400be8a	      4746	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_3
0x400bd7d	        0x488d4202	                      lea rax, [rdx + 2]	      4758	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3
0x400bd81	      0x4889442418	             mov qword [rsp + 0x18], rax	      4758	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3
0x400bd86	         0xfb64201	               movzx eax, byte [rdx + 1]	      4758	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3
0x400bd8a	          0x83e830	                           sub eax, 0x30	      4758	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3
0x400bd8d	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      4758	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3
0x400bd92	            0x8802	                      mov byte [rdx], al	      4758	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3
0x400bd94	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      4759	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11
0x400bd99	           0xfb602	                   movzx eax, byte [rdx]	      4759	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11
0x400bd9c	          0x83e830	                           sub eax, 0x30	      4759	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11
0x400bd9f	            0x3c07	                               cmp al, 7	      4759	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11
0x400bda1	            0x7743	                            ja 0x400bde6	      4759	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11
0x400bda3	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      4761	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11
0x400bda8	           0xfb601	                   movzx eax, byte [rcx]	      4761	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11
0x400bdab	        0x488d7201	                      lea rsi, [rdx + 1]	      4761	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11
0x400bdaf	      0x4889742418	             mov qword [rsp + 0x18], rsi	      4761	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11
0x400bdb4	           0xfb612	                   movzx edx, byte [rdx]	      4761	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11
0x400bdb7	        0x8d44c2d0	           lea eax, [rdx + rax*8 - 0x30]	      4761	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11
0x400bdbb	            0x8801	                      mov byte [rcx], al	      4761	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11
0x400bdbd	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      4762	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11	IF_12
0x400bdc2	           0xfb602	                   movzx eax, byte [rdx]	      4762	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11	IF_12
0x400bdc5	          0x83e830	                           sub eax, 0x30	      4762	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11	IF_12
0x400bdc8	            0x3c07	                               cmp al, 7	      4762	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11	IF_12
0x400bdca	            0x771a	                            ja 0x400bde6	      4762	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11	IF_12
0x400bdcc	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      4763	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11	IF_12
0x400bdd1	           0xfb601	                   movzx eax, byte [rcx]	      4763	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11	IF_12
0x400bdd4	        0x488d7201	                      lea rsi, [rdx + 1]	      4763	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11	IF_12
0x400bdd8	      0x4889742418	             mov qword [rsp + 0x18], rsi	      4763	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11	IF_12
0x400bddd	           0xfb612	                   movzx edx, byte [rdx]	      4763	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11	IF_12
0x400bde0	        0x8d44c2d0	           lea eax, [rdx + rax*8 - 0x30]	      4763	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11	IF_12
0x400bde4	            0x8801	                      mov byte [rcx], al	      4763	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11	IF_12
0x400bde6	    0x488344242001	               add qword [rsp + 0x20], 1	      4765	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400bdec	      0xe999000000	                           jmp 0x400be8a	      4765	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400bdf1	      0xb901000000	                              mov ecx, 1	      4769	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	CALL_9
0x400bdf6	      0xba01000000	                              mov edx, 1	      4769	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	CALL_9
0x400bdfb	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      4769	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	CALL_9
0x400be00	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	      4769	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	CALL_9
0x400be05	      0xe800000000	                          call 0x400be0a	      4769	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	CALL_9
0x400be0a	            0x85c0	                           test eax, eax	      4770	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_13
0x400be0c	            0x7409	                            je 0x400be17	      4770	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_13
0x400be0e	            0x4898	                                    cdqe	      4772	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_13
0x400be10	      0x4801442420	            add qword [rsp + 0x20], rax 	      4772	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_13
0x400be15	            0xeb73	                           jmp 0x400be8a	      4772	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_13
0x400be17	    0x833d00000000	               cmp dword [0x0400be1e], 0	      4777	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	CALL_10
0x400be1e	            0x7411	                            je 0x400be31	      4777	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	CALL_10
0x400be20	      0x488d742420	                   lea rsi, [rsp + 0x20]	      4777	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	CALL_10
0x400be25	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	      4777	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	CALL_10
0x400be2a	      0xe800000000	                          call 0x400be2f	      4777	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	CALL_10
0x400be2f	            0xeb59	                           jmp 0x400be8a	      4777	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	CALL_10
0x400be31	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4777	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	CALL_10
0x400be36	        0x488d5001	                      lea rdx, [rax + 1]	      4777	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	CALL_10
0x400be3a	      0x4889542420	             mov qword [rsp + 0x20], rdx	      4777	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	CALL_10
0x400be3f	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      4777	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	CALL_10
0x400be44	        0x488d4a01	                      lea rcx, [rdx + 1]	      4777	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	CALL_10
0x400be48	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      4777	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	CALL_10
0x400be4d	           0xfb612	                   movzx edx, byte [rdx]	      4777	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	CALL_10
0x400be50	            0x8810	                      mov byte [rax], dl	      4777	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	CALL_10
0x400be52	            0xeb36	                           jmp 0x400be8a	      4777	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	CALL_10
0x400be54	    0x833d00000000	               cmp dword [0x0400be5b], 0	      4782	eval.c	FUNCTION_73	FOR_2	CALL_11
0x400be5b	            0x7411	                            je 0x400be6e	      4782	eval.c	FUNCTION_73	FOR_2	CALL_11
0x400be5d	      0x488d742420	                   lea rsi, [rsp + 0x20]	      4782	eval.c	FUNCTION_73	FOR_2	CALL_11
0x400be62	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	      4782	eval.c	FUNCTION_73	FOR_2	CALL_11
0x400be67	      0xe800000000	                          call 0x400be6c	      4782	eval.c	FUNCTION_73	FOR_2	CALL_11
0x400be6c	            0xeb1c	                           jmp 0x400be8a	      4782	eval.c	FUNCTION_73	FOR_2	CALL_11
0x400be6e	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4782	eval.c	FUNCTION_73	FOR_2	CALL_11
0x400be73	        0x488d4801	                      lea rcx, [rax + 1]	      4782	eval.c	FUNCTION_73	FOR_2	CALL_11
0x400be77	      0x48894c2420	             mov qword [rsp + 0x20], rcx	      4782	eval.c	FUNCTION_73	FOR_2	CALL_11
0x400be7c	        0x488d4a01	                      lea rcx, [rdx + 1]	      4782	eval.c	FUNCTION_73	FOR_2	CALL_11
0x400be80	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      4782	eval.c	FUNCTION_73	FOR_2	CALL_11
0x400be85	           0xfb612	                   movzx edx, byte [rdx]	      4782	eval.c	FUNCTION_73	FOR_2	CALL_11
0x400be88	            0x8810	                      mov byte [rax], dl	      4782	eval.c	FUNCTION_73	FOR_2	CALL_11
0x400be8a	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      4704	eval.c	FUNCTION_73	FOR_2
0x400be8f	           0xfb602	                   movzx eax, byte [rdx]	      4704	eval.c	FUNCTION_73	FOR_2
0x400be92	            0x84c0	                             test al, al	      4704	eval.c	FUNCTION_73	FOR_2
0x400be94	            0x7408	                            je 0x400be9e	      4704	eval.c	FUNCTION_73	FOR_2
0x400be96	            0x3c22	                            cmp al, 0x22	      4704	eval.c	FUNCTION_73	FOR_2
0x400be98	     0xf854afdffff	                           jne 0x400bbe8	      4704	eval.c	FUNCTION_73	FOR_2
0x400be9e	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4785	eval.c	FUNCTION_73
0x400bea3	          0xc60000	                       mov byte [rax], 0	      4785	eval.c	FUNCTION_73
0x400bea6	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4786	eval.c	FUNCTION_73	IF_14
0x400beab	          0x803800	                       cmp byte [rax], 0	      4786	eval.c	FUNCTION_73	IF_14
0x400beae	            0x7409	                            je 0x400beb9	      4786	eval.c	FUNCTION_73	IF_14
0x400beb0	        0x4883c001	                              add rax, 1	      4787	eval.c	FUNCTION_73	IF_14
0x400beb4	      0x4889442418	             mov qword [rsp + 0x18], rax	      4787	eval.c	FUNCTION_73	IF_14
0x400beb9	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4788	eval.c	FUNCTION_73
0x400bebe	        0x48894500	                    mov qword [rbp], rax	      4788	eval.c	FUNCTION_73
0x400bec2	    0x41be01000000	                             mov r14d, 1	      4790	eval.c	FUNCTION_73
0x400bec8	      0xe91c030000	                           jmp 0x400c1e9	      4790	eval.c	FUNCTION_73
0x400becd	    0x41be00000000	                             mov r14d, 0	      4700	eval.c	FUNCTION_73	IF_5
0x400bed3	      0xe911030000	                           jmp 0x400c1e9	      4085	eval.c	ELSE_15	FUNCTION_70	SWITCH_1
0x400bed8	        0x488d4301	                      lea rax, [rbx + 1]	      4807	eval.c	FUNCTION_74	FOR_1	CALL_1
0x400bedc	      0x4889442418	             mov qword [rsp + 0x18], rax	      4807	eval.c	FUNCTION_74	FOR_1	CALL_1
0x400bee1	         0xfb65301	               movzx edx, byte [rbx + 1]	      4807	eval.c	FUNCTION_74	FOR_1	CALL_1
0x400bee5	            0x84d2	                             test dl, dl	      4807	eval.c	FUNCTION_74	FOR_1	CALL_1
0x400bee7	     0xf8404060000	                            je 0x400c4f1	      4807	eval.c	FUNCTION_74	FOR_1	CALL_1
0x400beed	    0x41be00000000	                             mov r14d, 0	      4807	eval.c	FUNCTION_74	FOR_1	CALL_1
0x400bef3	          0x80fa27	                            cmp dl, 0x27	      4809	eval.c	FUNCTION_74	FOR_1	IF_1
0x400bef6	            0x7517	                           jne 0x400bf0f	      4809	eval.c	FUNCTION_74	FOR_1	IF_1
0x400bef8	        0x80780127	                cmp byte [rax + 1], 0x27	      4811	eval.c	FUNCTION_74	FOR_1	IF_1	IF_2
0x400befc	     0xf851d060000	                           jne 0x400c51f	      4811	eval.c	FUNCTION_74	FOR_1	IF_1	IF_2
0x400bf02	        0x4183c601	                             add r14d, 1	      4813	eval.c	FUNCTION_74	FOR_1	IF_1
0x400bf06	        0x4883c001	                              add rax, 1	      4814	eval.c	FUNCTION_74	FOR_1	IF_1
0x400bf0a	      0x4889442418	             mov qword [rsp + 0x18], rax	      4814	eval.c	FUNCTION_74	FOR_1	IF_1
0x400bf0f	      0xb801000000	                              mov eax, 1	      4807	eval.c	FUNCTION_74	FOR_1	CALL_1
0x400bf14	    0x833d00000000	               cmp dword [0x0400bf1b], 0	      4807	eval.c	FUNCTION_74	FOR_1	CALL_1
0x400bf1b	            0x740b	                            je 0x400bf28	      4807	eval.c	FUNCTION_74	FOR_1	CALL_1
0x400bf1d	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      4807	eval.c	FUNCTION_74	FOR_1	CALL_1
0x400bf22	    0xff1500000000	                 call qword [0x0400bf28]	      4807	eval.c	FUNCTION_74	FOR_1	CALL_1
0x400bf28	            0x4898	                                    cdqe	      4807	eval.c	FUNCTION_74	FOR_1	CALL_1
0x400bf2a	      0x4803442418	             add rax, qword [rsp + 0x18]	      4807	eval.c	FUNCTION_74	FOR_1	CALL_1
0x400bf2f	      0x4889442418	             mov qword [rsp + 0x18], rax	      4807	eval.c	FUNCTION_74	FOR_1	CALL_1
0x400bf34	           0xfb610	                   movzx edx, byte [rax]	      4807	eval.c	FUNCTION_74	FOR_1	CALL_1
0x400bf37	            0x84d2	                             test dl, dl	      4807	eval.c	FUNCTION_74	FOR_1	CALL_1
0x400bf39	            0x75b8	                           jne 0x400bef3	      4807	eval.c	FUNCTION_74	FOR_1	CALL_1
0x400bf3b	      0xe9b1050000	                           jmp 0x400c4f1	      4807	eval.c	FUNCTION_74	FOR_1	CALL_1
0x400bf40	        0x4883c001	                              add rax, 1	      4827	eval.c	FUNCTION_74	IF_4
0x400bf44	        0x48894500	                    mov qword [rbp], rax	      4827	eval.c	FUNCTION_74	IF_4
0x400bf48	    0x41be01000000	                             mov r14d, 1	      4828	eval.c	FUNCTION_74	IF_4
0x400bf4e	      0xe996020000	                           jmp 0x400c1e9	      4828	eval.c	FUNCTION_74	IF_4
0x400bf53	        0x482b4500	                    sub rax, qword [rbp]	      4834	eval.c	FUNCTION_74	CALL_4
0x400bf57	            0x89c7	                            mov edi, eax	      4834	eval.c	FUNCTION_74	CALL_4
0x400bf59	          0x4429f7	                           sub edi, r14d	      4834	eval.c	FUNCTION_74	CALL_4
0x400bf5c	      0xe800000000	                          call 0x400bf61	      4834	eval.c	FUNCTION_74	CALL_4
0x400bf61	      0x4889442420	             mov qword [rsp + 0x20], rax	      4834	eval.c	FUNCTION_74	CALL_4
0x400bf66	          0x4885c0	                           test rax, rax	      4835	eval.c	FUNCTION_74	IF_5
0x400bf69	     0xf8496000000	                            je 0x400c005	      4835	eval.c	FUNCTION_74	IF_5
0x400bf6f	    0x41c745000200	                      mov dword [r13], 2	      4837	eval.c	FUNCTION_74
0x400bf77	        0x49894508	                mov qword [r13 + 8], rax	      4838	eval.c	FUNCTION_74
0x400bf7b	        0x488b4500	                    mov rax, qword [rbp]	      4840	eval.c	FUNCTION_74	FOR_2
0x400bf7f	        0x4883c001	                              add rax, 1	      4840	eval.c	FUNCTION_74	FOR_2
0x400bf83	      0x4889442418	             mov qword [rsp + 0x18], rax	      4840	eval.c	FUNCTION_74	FOR_2
0x400bf88	            0xeb4f	                           jmp 0x400bfd9	      4840	eval.c	FUNCTION_74	FOR_2
0x400bf8a	          0x80fa27	                            cmp dl, 0x27	      4842	eval.c	FUNCTION_74	FOR_2	IF_6
0x400bf8d	            0x750f	                           jne 0x400bf9e	      4842	eval.c	FUNCTION_74	FOR_2	IF_6
0x400bf8f	        0x80780127	                cmp byte [rax + 1], 0x27	      4844	eval.c	FUNCTION_74	FOR_2	IF_6	IF_7
0x400bf93	            0x7550	                           jne 0x400bfe5	      4844	eval.c	FUNCTION_74	FOR_2	IF_6	IF_7
0x400bf95	        0x4883c001	                              add rax, 1	      4846	eval.c	FUNCTION_74	FOR_2	IF_6
0x400bf99	      0x4889442418	             mov qword [rsp + 0x18], rax	      4846	eval.c	FUNCTION_74	FOR_2	IF_6
0x400bf9e	    0x833d00000000	               cmp dword [0x0400bfa5], 0	      4848	eval.c	FUNCTION_74	FOR_2	CALL_5
0x400bfa5	            0x7411	                            je 0x400bfb8	      4848	eval.c	FUNCTION_74	FOR_2	CALL_5
0x400bfa7	      0x488d742420	                   lea rsi, [rsp + 0x20]	      4848	eval.c	FUNCTION_74	FOR_2	CALL_5
0x400bfac	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	      4848	eval.c	FUNCTION_74	FOR_2	CALL_5
0x400bfb1	      0xe800000000	                          call 0x400bfb6	      4848	eval.c	FUNCTION_74	FOR_2	CALL_5
0x400bfb6	            0xeb21	                           jmp 0x400bfd9	      4848	eval.c	FUNCTION_74	FOR_2	CALL_5
0x400bfb8	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4848	eval.c	FUNCTION_74	FOR_2	CALL_5
0x400bfbd	        0x488d5001	                      lea rdx, [rax + 1]	      4848	eval.c	FUNCTION_74	FOR_2	CALL_5
0x400bfc1	      0x4889542420	             mov qword [rsp + 0x20], rdx	      4848	eval.c	FUNCTION_74	FOR_2	CALL_5
0x400bfc6	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      4848	eval.c	FUNCTION_74	FOR_2	CALL_5
0x400bfcb	        0x488d4a01	                      lea rcx, [rdx + 1]	      4848	eval.c	FUNCTION_74	FOR_2	CALL_5
0x400bfcf	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      4848	eval.c	FUNCTION_74	FOR_2	CALL_5
0x400bfd4	           0xfb612	                   movzx edx, byte [rdx]	      4848	eval.c	FUNCTION_74	FOR_2	CALL_5
0x400bfd7	            0x8810	                      mov byte [rax], dl	      4848	eval.c	FUNCTION_74	FOR_2	CALL_5
0x400bfd9	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4840	eval.c	FUNCTION_74	FOR_2
0x400bfde	           0xfb610	                   movzx edx, byte [rax]	      4840	eval.c	FUNCTION_74	FOR_2
0x400bfe1	            0x84d2	                             test dl, dl	      4840	eval.c	FUNCTION_74	FOR_2
0x400bfe3	            0x75a5	                           jne 0x400bf8a	      4840	eval.c	FUNCTION_74	FOR_2
0x400bfe5	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4850	eval.c	FUNCTION_74
0x400bfea	          0xc60000	                       mov byte [rax], 0	      4850	eval.c	FUNCTION_74
0x400bfed	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4851	eval.c	FUNCTION_74
0x400bff2	        0x4883c001	                              add rax, 1	      4851	eval.c	FUNCTION_74
0x400bff6	        0x48894500	                    mov qword [rbp], rax	      4851	eval.c	FUNCTION_74
0x400bffa	    0x41be01000000	                             mov r14d, 1	      4853	eval.c	FUNCTION_74
0x400c000	      0xe9e4010000	                           jmp 0x400c1e9	      4853	eval.c	FUNCTION_74
0x400c005	    0x41be00000000	                             mov r14d, 0	      4836	eval.c	FUNCTION_74	IF_5
0x400c00b	      0xe9d9010000	                           jmp 0x400c1e9	      4091	eval.c	ELSE_15	FUNCTION_70	SWITCH_1
0x400c010	          0x4489fa	                           mov edx, r15d	      4096	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_12
0x400c013	          0x4c89ee	                            mov rsi, r13	      4096	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_12
0x400c016	          0x4889ef	                            mov rdi, rbp	      4096	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_12
0x400c019	      0xe800000000	                          call 0x400c01e	      4096	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_12
0x400c01e	          0x4189c6	                           mov r14d, eax	      4096	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_12
0x400c021	      0xe9c3010000	                           jmp 0x400c1e9	      4097	eval.c	ELSE_15	FUNCTION_70	SWITCH_1
0x400c026	          0x4489fa	                           mov edx, r15d	      4103	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_13
0x400c029	          0x4c89ee	                            mov rsi, r13	      4103	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_13
0x400c02c	          0x4889ef	                            mov rdi, rbp	      4103	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_13
0x400c02f	      0xe800000000	                          call 0x400c034	      4103	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_13
0x400c034	          0x4189c6	                           mov r14d, eax	      4103	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_13
0x400c037	          0x83f802	                              cmp eax, 2	      4104	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_9
0x400c03a	     0xf8511030000	                           jne 0x400c351	      4104	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_9
0x400c040	          0x4489fa	                           mov edx, r15d	      4105	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_14
0x400c043	          0x4c89ee	                            mov rsi, r13	      4105	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_14
0x400c046	          0x4889ef	                            mov rdi, rbp	      4105	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_14
0x400c049	      0xe800000000	                          call 0x400c04e	      4105	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_14
0x400c04e	          0x4189c6	                           mov r14d, eax	      4105	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_14
0x400c051	      0xe993010000	                           jmp 0x400c1e9	      4105	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_14
0x400c056	          0x4489fa	                           mov edx, r15d	      4111	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_15
0x400c059	          0x4c89ee	                            mov rsi, r13	      4111	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_15
0x400c05c	          0x4889ef	                            mov rdi, rbp	      4111	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_15
0x400c05f	      0xe800000000	                          call 0x400c064	      4111	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_15
0x400c064	          0x4189c6	                           mov r14d, eax	      4111	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_15
0x400c067	      0xe97d010000	                           jmp 0x400c1e9	      4112	eval.c	ELSE_15	FUNCTION_70	SWITCH_1
0x400c06c	    0xc74424200000	               mov dword [rsp + 0x20], 0	      5856	eval.c	FUNCTION_92
0x400c074	        0x488d4301	                      lea rax, [rbx + 1]	      5858	eval.c	FUNCTION_92
0x400c078	        0x48890424	                    mov qword [rsp], rax	      5858	eval.c	FUNCTION_92
0x400c07c	        0x48894500	                    mov qword [rbp], rax	      5858	eval.c	FUNCTION_92
0x400c080	          0x4889ef	                            mov rdi, rbp	      5860	eval.c	FUNCTION_92	CALL_1
0x400c083	      0xe84144ffff	                    call sym.get_env_len	      5860	eval.c	FUNCTION_92	CALL_1
0x400c088	    0x41be01000000	                             mov r14d, 1	      5891	eval.c	FUNCTION_92
0x400c08e	          0x4585ff	                         test r15d, r15d	      5861	eval.c	FUNCTION_92	IF_1
0x400c091	     0xf8452010000	                            je 0x400c1e9	      5861	eval.c	FUNCTION_92	IF_1
0x400c097	    0x41be00000000	                             mov r14d, 0	      5864	eval.c	FUNCTION_92	IF_1	IF_2
0x400c09d	            0x85c0	                           test eax, eax	      5863	eval.c	FUNCTION_92	IF_1	IF_2
0x400c09f	     0xf8444010000	                            je 0x400c1e9	      5863	eval.c	FUNCTION_92	IF_1	IF_2
0x400c0a5	            0x4898	                                    cdqe	      5866	eval.c	FUNCTION_92	IF_1
0x400c0a7	        0x488b0c24	                    mov rcx, qword [rsp]	      5866	eval.c	FUNCTION_92	IF_1
0x400c0ab	        0x4c8d3401	                    lea r14, [rcx + rax]	      5866	eval.c	FUNCTION_92	IF_1
0x400c0af	        0x410fb606	                   movzx eax, byte [r14]	      5866	eval.c	FUNCTION_92	IF_1
0x400c0b3	          0x880424	                      mov byte [rsp], al	      5866	eval.c	FUNCTION_92	IF_1
0x400c0b6	        0x41c60600	                       mov byte [r14], 0	      5867	eval.c	FUNCTION_92	IF_1
0x400c0ba	      0x488d742420	                   lea rsi, [rsp + 0x20]	      5869	eval.c	FUNCTION_92	IF_1	CALL_2
0x400c0bf	          0x4889cf	                            mov rdi, rcx	      5869	eval.c	FUNCTION_92	IF_1	CALL_2
0x400c0c2	      0xe800000000	                          call 0x400c0c7	      5869	eval.c	FUNCTION_92	IF_1	CALL_2
0x400c0c7	          0x4885c0	                           test rax, rax	      5870	eval.c	FUNCTION_92	IF_1	IF_3
0x400c0ca	            0x7416	                            je 0x400c0e2	      5870	eval.c	FUNCTION_92	IF_1	IF_3
0x400c0cc	          0x803800	                       cmp byte [rax], 0	      5870	eval.c	FUNCTION_92	IF_1	IF_3
0x400c0cf	            0x7411	                            je 0x400c0e2	      5870	eval.c	FUNCTION_92	IF_1	IF_3
0x400c0d1	      0x837c242000	               cmp dword [rsp + 0x20], 0	      5872	eval.c	FUNCTION_92	IF_1	IF_3	IF_4
0x400c0d6	            0x7538	                           jne 0x400c110	      5872	eval.c	FUNCTION_92	IF_1	IF_3	IF_4
0x400c0d8	          0x4889c7	                            mov rdi, rax	      5873	eval.c	FUNCTION_92	IF_1	IF_3	CALL_3
0x400c0db	      0xe800000000	                          call 0x400c0e0	      5873	eval.c	FUNCTION_92	IF_1	IF_3	CALL_3
0x400c0e0	            0xeb2e	                           jmp 0x400c110	      5873	eval.c	FUNCTION_92	IF_1	IF_3	CALL_3
0x400c0e2	      0x837c242000	               cmp dword [rsp + 0x20], 0	      5877	eval.c	FUNCTION_92	IF_1	ELSE_1	IF_5
0x400c0e7	            0x7408	                            je 0x400c0f1	      5877	eval.c	FUNCTION_92	IF_1	ELSE_1	IF_5
0x400c0e9	          0x4889c7	                            mov rdi, rax	      5878	eval.c	FUNCTION_92	IF_1	ELSE_1	CALL_4
0x400c0ec	      0xe800000000	                          call 0x400c0f1	      5878	eval.c	FUNCTION_92	IF_1	ELSE_1	CALL_4
0x400c0f1	          0x4889df	                            mov rdi, rbx	      5881	eval.c	FUNCTION_92	IF_1	ELSE_1	CALL_5
0x400c0f4	      0xe800000000	                          call 0x400c0f9	      5881	eval.c	FUNCTION_92	IF_1	ELSE_1	CALL_5
0x400c0f9	          0x4885c0	                           test rax, rax	      5882	eval.c	FUNCTION_92	IF_1	ELSE_1	IF_6
0x400c0fc	            0x7412	                            je 0x400c110	      5882	eval.c	FUNCTION_92	IF_1	ELSE_1	IF_6
0x400c0fe	          0x803824	                    cmp byte [rax], 0x24	      5883	eval.c	FUNCTION_92	IF_1	ELSE_1	CALL_6
0x400c101	            0x750d	                           jne 0x400c110	      5883	eval.c	FUNCTION_92	IF_1	ELSE_1	CALL_6
0x400c103	          0x4889c7	                            mov rdi, rax	      5883	eval.c	FUNCTION_92	IF_1	ELSE_1	CALL_6
0x400c106	      0xe800000000	                          call 0x400c10b	      5883	eval.c	FUNCTION_92	IF_1	ELSE_1	CALL_6
0x400c10b	      0xb800000000	                              mov eax, 0	      5883	eval.c	FUNCTION_92	IF_1	ELSE_1	CALL_6
0x400c110	         0xfb60c24	                   movzx ecx, byte [rsp]	      5885	eval.c	FUNCTION_92	IF_1
0x400c114	          0x41880e	                      mov byte [r14], cl	      5885	eval.c	FUNCTION_92	IF_1
0x400c117	    0x41c745000200	                      mov dword [r13], 2	      5887	eval.c	FUNCTION_92	IF_1
0x400c11f	        0x49894508	                mov qword [r13 + 8], rax	      5888	eval.c	FUNCTION_92	IF_1
0x400c123	    0x41be01000000	                             mov r14d, 1	      5891	eval.c	FUNCTION_92
0x400c129	      0xe9bb000000	                           jmp 0x400c1e9	      5891	eval.c	FUNCTION_92
0x400c12e	        0x488d4301	                      lea rax, [rbx + 1]	      4123	eval.c	ELSE_15	FUNCTION_70	SWITCH_1
0x400c132	        0x48894500	                    mov qword [rbp], rax	      4123	eval.c	ELSE_15	FUNCTION_70	SWITCH_1
0x400c136	          0x4585ff	                         test r15d, r15d	      4124	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_10
0x400c139	            0x741d	                            je 0x400c158	      4124	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_10
0x400c13b	    0x41c745000200	                      mov dword [r13], 2	      4126	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_10
0x400c143	        0x488b4500	                    mov rax, qword [rbp]	      4127	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_10	CALL_17
0x400c147	           0xfb638	                   movzx edi, byte [rax]	      4127	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_10	CALL_17
0x400c14a	      0xbe02000000	                              mov esi, 2	      4127	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_10	CALL_17
0x400c14f	      0xe800000000	                          call 0x400c154	      4127	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_10	CALL_17
0x400c154	        0x49894508	                mov qword [r13 + 8], rax	      4127	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_10	CALL_17
0x400c158	        0x488b4500	                    mov rax, qword [rbp]	      4130	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_11
0x400c15c	          0x803800	                       cmp byte [rax], 0	      4130	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_11
0x400c15f	     0xf844a040000	                            je 0x400c5af	      4130	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_11
0x400c165	        0x4883c001	                              add rax, 1	      4131	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_11
0x400c169	        0x48894500	                    mov qword [rbp], rax	      4131	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_11
0x400c16d	      0xe93d040000	                           jmp 0x400c5af	      4131	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_11
0x400c172	        0x488d7b01	                      lea rdi, [rbx + 1]	      4137	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_18
0x400c176	      0xe800000000	                          call 0x400c17b	      4137	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_18
0x400c17b	        0x48894500	                    mov qword [rbp], rax	      4137	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_18
0x400c17f	          0x4489fa	                           mov edx, r15d	      4138	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_19
0x400c182	          0x4c89ee	                            mov rsi, r13	      4138	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_19
0x400c185	          0x4889ef	                            mov rdi, rbp	      4138	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_19
0x400c188	      0xe800000000	                          call 0x400c18d	      4138	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_19
0x400c18d	          0x4189c6	                           mov r14d, eax	      4138	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_19
0x400c190	        0x488b4500	                    mov rax, qword [rbp]	      4139	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_12
0x400c194	          0x803829	                    cmp byte [rax], 0x29	      4139	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_12
0x400c197	            0x750a	                           jne 0x400c1a3	      4139	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_12
0x400c199	        0x4883c001	                              add rax, 1	      4140	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_12
0x400c19d	        0x48894500	                    mov qword [rbp], rax	      4140	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_12
0x400c1a1	            0xeb46	                           jmp 0x400c1e9	      4140	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_12
0x400c1a3	        0x4183fe01	                             cmp r14d, 1	      4141	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_3	IF_13
0x400c1a7	     0xf85f7030000	                           jne 0x400c5a4	      4141	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_3	IF_13
0x400c1ad	      0xba05000000	                              mov edx, 5	      4143	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_3	IF_13	CALL_21
0x400c1b2	      0xbe00000000	                              mov esi, 0	      4143	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_3	IF_13	CALL_21
0x400c1b7	      0xbf00000000	                              mov edi, 0	      4143	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_3	IF_13	CALL_21
0x400c1bc	      0xe800000000	                          call 0x400c1c1	      4143	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_3	IF_13	CALL_21
0x400c1c1	          0x4889c7	                            mov rdi, rax	      4143	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_3	IF_13	CALL_21
0x400c1c4	      0xe800000000	                          call 0x400c1c9	      4143	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_3	IF_13	CALL_21
0x400c1c9	          0x4c89ef	                            mov rdi, r13	      4144	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_3	IF_13	CALL_22
0x400c1cc	      0xe800000000	                          call 0x400c1d1	      4144	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_3	IF_13	CALL_22
0x400c1d1	        0x488b7d00	                    mov rdi, qword [rbp]	      4221	eval.c	ELSE_15	FUNCTION_70	CALL_34
0x400c1d5	      0xe800000000	                          call 0x400c1da	      4221	eval.c	ELSE_15	FUNCTION_70	CALL_34
0x400c1da	        0x48894500	                    mov qword [rbp], rax	      4221	eval.c	ELSE_15	FUNCTION_70	CALL_34
0x400c1de	    0x41be00000000	                             mov r14d, 0	      4145	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_3	IF_13
0x400c1e4	      0xe9c3020000	                           jmp 0x400c4ac	      4145	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_3	IF_13
0x400c1e9	        0x4183fe02	                             cmp r14d, 2	      4153	eval.c	ELSE_15	FUNCTION_70	IF_14
0x400c1ed	     0xf855e010000	                           jne 0x400c351	      4153	eval.c	ELSE_15	FUNCTION_70	IF_14
0x400c1f3	        0x4c8b7500	                    mov r14, qword [rbp]	      4159	eval.c	ELSE_15	FUNCTION_70	IF_14
0x400c1f7	      0xb901000000	                              mov ecx, 1	      4160	eval.c	ELSE_15	FUNCTION_70	IF_14	CALL_23
0x400c1fc	          0x4489fa	                           mov edx, r15d	      4160	eval.c	ELSE_15	FUNCTION_70	IF_14	CALL_23
0x400c1ff	      0x488d742418	                   lea rsi, [rsp + 0x18]	      4160	eval.c	ELSE_15	FUNCTION_70	IF_14	CALL_23
0x400c204	          0x4889ef	                            mov rdi, rbp	      4160	eval.c	ELSE_15	FUNCTION_70	IF_14	CALL_23
0x400c207	      0xe800000000	                          call 0x400c20c	      4160	eval.c	ELSE_15	FUNCTION_70	IF_14	CALL_23
0x400c20c	        0x89442410	             mov dword [rsp + 0x10], eax	      4160	eval.c	ELSE_15	FUNCTION_70	IF_14	CALL_23
0x400c210	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      4161	eval.c	ELSE_15	FUNCTION_70	IF_14	IF_15
0x400c215	          0x4885f6	                           test rsi, rsi	      4159	eval.c	ELSE_15	FUNCTION_70	IF_14
0x400c218	        0x4c0f45f6	                         cmovne r14, rsi	      4159	eval.c	ELSE_15	FUNCTION_70	IF_14
0x400c21c	          0x4c89f7	                            mov rdi, r14	      4159	eval.c	ELSE_15	FUNCTION_70	IF_14
0x400c21f	    0x41be00000000	                             mov r14d, 0	      4165	eval.c	ELSE_15	FUNCTION_70	IF_14	IF_16
0x400c225	            0x85c0	                           test eax, eax	      4164	eval.c	ELSE_15	FUNCTION_70	IF_14	IF_16
0x400c227	     0xf8e1a010000	                           jle 0x400c347	      4164	eval.c	ELSE_15	FUNCTION_70	IF_14	IF_16
0x400c22d	        0x488b5500	                    mov rdx, qword [rbp]	      4168	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17
0x400c231	          0x803a28	                    cmp byte [rdx], 0x28	      4168	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17
0x400c234	     0xf85db000000	                           jne 0x400c315	      4168	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17
0x400c23a	          0x4585ff	                         test r15d, r15d	      4172	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_18
0x400c23d	     0xf85ff020000	                           jne 0x400c542	      4172	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_18
0x400c243	            0x89c6	                            mov esi, eax	      4173	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_24
0x400c245	          0x4989fe	                            mov r14, rdi	      4173	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_24
0x400c248	      0xe89290ffff	                     call sym.check_vars	      4173	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_24
0x400c24d	      0xb901000000	                              mov ecx, 1	      4177	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_25
0x400c252	      0x488d542420	                   lea rdx, [rsp + 0x20]	      4177	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_25
0x400c257	      0x488d742410	                   lea rsi, [rsp + 0x10]	      4177	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_25
0x400c25c	          0x4c89f7	                            mov rdi, r14	      4177	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_25
0x400c25f	      0xe800000000	                          call 0x400c264	      4177	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_25
0x400c264	          0x4889c7	                            mov rdi, rax	      4181	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_26
0x400c267	      0xe800000000	                          call 0x400c26c	      4181	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_26
0x400c26c	        0x48890424	                    mov qword [rsp], rax	      4181	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_26
0x400c270	          0x4885c0	                           test rax, rax	      4182	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_19
0x400c273	            0x743e	                            je 0x400c2b3	      4182	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_19
0x400c275	      0xc644240c01	                 mov byte [rsp + 0xc], 1	      4177	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_25
0x400c27a	    0x488b05000000	            mov rax, qword [0x0400c281] 	      4186	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	ELSE_5	CALL_27
0x400c281	        0x4c8b4038	              mov r8, qword [rax + 0x38]	      4186	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	ELSE_5	CALL_27
0x400c285	            0x6a00	                                  push 0	      4186	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	ELSE_5	CALL_27
0x400c287	        0xff742428	                 push qword [rsp + 0x28]	      4186	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	ELSE_5	CALL_27
0x400c28b	            0x4157	                                push r15	      4186	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	ELSE_5	CALL_27
0x400c28d	      0x488d442428	                   lea rax, [rsp + 0x28]	      4186	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	ELSE_5	CALL_27
0x400c292	              0x50	                                push rax	      4186	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	ELSE_5	CALL_27
0x400c293	          0x4d89c1	                              mov r9, r8	      4186	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	ELSE_5	CALL_27
0x400c296	          0x4889e9	                            mov rcx, rbp	      4186	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	ELSE_5	CALL_27
0x400c299	          0x4c89ea	                            mov rdx, r13	      4186	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	ELSE_5	CALL_27
0x400c29c	        0x8b742430	            mov esi, dword [rsp + 0x30] 	      4186	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	ELSE_5	CALL_27
0x400c2a0	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      4186	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	ELSE_5	CALL_27
0x400c2a5	      0xe800000000	                          call 0x400c2aa	      4186	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	ELSE_5	CALL_27
0x400c2aa	          0x4189c6	                           mov r14d, eax	      4186	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	ELSE_5	CALL_27
0x400c2ad	        0x4883c420	                           add rsp, 0x20	      4186	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	ELSE_5	CALL_27
0x400c2b1	            0xeb0b	                           jmp 0x400c2be	      4186	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	ELSE_5	CALL_27
0x400c2b3	      0xc644240c01	                 mov byte [rsp + 0xc], 1	      4177	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_25
0x400c2b8	    0x41be00000000	                             mov r14d, 0	      4183	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_19
0x400c2be	        0x488b3c24	                    mov rdi, qword [rsp]	      4189	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_28
0x400c2c2	      0xe800000000	                          call 0x400c2c7	      4189	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_28
0x400c2c7	      0x41837d0000	                      cmp dword [r13], 0	      4194	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_20
0x400c2cc	            0x7520	                           jne 0x400c2ee	      4194	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_20
0x400c2ce	      0x807c240c00	                 cmp byte [rsp + 0xc], 0	      4194	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_20
0x400c2d3	            0x7419	                            je 0x400c2ee	      4194	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_20
0x400c2d5	        0x488b4500	                    mov rax, qword [rbp]	      4194	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_20
0x400c2d9	          0x803828	                    cmp byte [rax], 0x28	      4194	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_20
0x400c2dc	            0x7510	                           jne 0x400c2ee	      4194	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_20
0x400c2de	    0x49c745080000	                  mov qword [r13 + 8], 0	      4196	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_20
0x400c2e6	    0x41c745000300	                      mov dword [r13], 3	      4197	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_20
0x400c2ee	      0xe800000000	                          call 0x400c2f3	      4203	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_21	CALL_29
0x400c2f3	            0x85c0	                           test eax, eax	      4203	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_21	CALL_29
0x400c2f5	            0x7450	                            je 0x400c347	      4203	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_21	CALL_29
0x400c2f7	        0x4183fe01	                             cmp r14d, 1	      4205	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_21	IF_22
0x400c2fb	            0x7510	                           jne 0x400c30d	      4205	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_21	IF_22
0x400c2fd	          0x4c89ef	                            mov rdi, r13	      4206	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_21	CALL_30
0x400c300	      0xe800000000	                          call 0x400c305	      4206	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_21	CALL_30
0x400c305	    0x41be00000000	                             mov r14d, 0	      4207	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_21
0x400c30b	            0xeb3a	                           jmp 0x400c347	      4207	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_21
0x400c30d	    0x41be00000000	                             mov r14d, 0	      4207	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_21
0x400c313	            0xeb32	                           jmp 0x400c347	      4207	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_21
0x400c315	          0x4585ff	                         test r15d, r15d	      4210	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	ELSE_6	IF_23
0x400c318	            0x7420	                            je 0x400c33a	      4210	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	ELSE_6	IF_23
0x400c31a	    0x41b900000000	                              mov r9d, 0	      4211	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	ELSE_6	IF_23
0x400c320	    0x41b801000000	                              mov r8d, 1	      4211	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	ELSE_6	IF_23
0x400c326	      0xb900000000	                              mov ecx, 0	      4211	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	ELSE_6	IF_23
0x400c32b	          0x4c89ea	                            mov rdx, r13	      4211	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	ELSE_6	IF_23
0x400c32e	            0x89c6	                            mov esi, eax	      4211	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	ELSE_6	IF_23
0x400c330	      0xe800000000	                          call 0x400c335	      4211	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	ELSE_6	IF_23
0x400c335	          0x4189c6	                           mov r14d, eax	      4211	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	ELSE_6	IF_23
0x400c338	            0xeb0d	                           jmp 0x400c347	      4211	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	ELSE_6	IF_23
0x400c33a	            0x89c6	                            mov esi, eax	      4214	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	ELSE_7	CALL_32
0x400c33c	      0xe89e8fffff	                     call sym.check_vars	      4214	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	ELSE_7	CALL_32
0x400c341	    0x41be01000000	                             mov r14d, 1	      4215	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	ELSE_7
0x400c347	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      4218	eval.c	ELSE_15	FUNCTION_70	IF_14	CALL_33
0x400c34c	      0xe800000000	                          call 0x400c351	      4218	eval.c	ELSE_15	FUNCTION_70	IF_14	CALL_33
0x400c351	        0x488b7d00	                    mov rdi, qword [rbp]	      4221	eval.c	ELSE_15	FUNCTION_70	CALL_34
0x400c355	      0xe800000000	                          call 0x400c35a	      4221	eval.c	ELSE_15	FUNCTION_70	CALL_34
0x400c35a	        0x48894500	                    mov qword [rbp], rax	      4221	eval.c	ELSE_15	FUNCTION_70	CALL_34
0x400c35e	        0x4183fe01	                             cmp r14d, 1	      4225	eval.c	ELSE_15	FUNCTION_70	IF_24
0x400c362	     0xf8544010000	                           jne 0x400c4ac	      4225	eval.c	ELSE_15	FUNCTION_70	IF_24
0x400c368	      0xb901000000	                              mov ecx, 1	      4226	eval.c	ELSE_15	FUNCTION_70	CALL_35
0x400c36d	          0x4489fa	                           mov edx, r15d	      4226	eval.c	ELSE_15	FUNCTION_70	CALL_35
0x400c370	          0x4c89ee	                            mov rsi, r13	      4226	eval.c	ELSE_15	FUNCTION_70	CALL_35
0x400c373	          0x4889ef	                            mov rdi, rbp	      4226	eval.c	ELSE_15	FUNCTION_70	CALL_35
0x400c376	      0xe800000000	                          call 0x400c37b	      4226	eval.c	ELSE_15	FUNCTION_70	CALL_35
0x400c37b	          0x4189c6	                           mov r14d, eax	      4226	eval.c	ELSE_15	FUNCTION_70	CALL_35
0x400c37e	          0x4939dc	                            cmp r12, rbx	      4231	eval.c	ELSE_15	FUNCTION_70	IF_25
0x400c381	           0xf92c2	                                 setb dl	      4231	eval.c	ELSE_15	FUNCTION_70	IF_25
0x400c384	          0x4585ff	                         test r15d, r15d	      4231	eval.c	ELSE_15	FUNCTION_70	IF_25
0x400c387	           0xf95c0	                                setne al	      4231	eval.c	ELSE_15	FUNCTION_70	IF_25
0x400c38a	            0x84c2	                             test dl, al	      4231	eval.c	ELSE_15	FUNCTION_70	IF_25
0x400c38c	     0xf841a010000	                            je 0x400c4ac	      4231	eval.c	ELSE_15	FUNCTION_70	IF_25
0x400c392	        0x4183fe01	                             cmp r14d, 1	      4231	eval.c	ELSE_15	FUNCTION_70	IF_25
0x400c396	     0xf8510010000	                           jne 0x400c4ac	      4231	eval.c	ELSE_15	FUNCTION_70	IF_25
0x400c39c	    0xc74424140000	               mov dword [rsp + 0x14], 0	      4233	eval.c	ELSE_15	FUNCTION_70	IF_25
0x400c3a4	      0x41837d0007	                      cmp dword [r13], 7	      4238	eval.c	ELSE_15	FUNCTION_70	IF_25	IF_26
0x400c3a9	            0x751a	                           jne 0x400c3c5	      4238	eval.c	ELSE_15	FUNCTION_70	IF_25	IF_26
0x400c3ab	    0xf2410f106508	            movsd xmm4, qword [r13 + 8] 	      4239	eval.c	ELSE_15	FUNCTION_70	IF_25	IF_26
0x400c3b1	      0xf20f112424	                 movsd qword [rsp], xmm4	      4239	eval.c	ELSE_15	FUNCTION_70	IF_25	IF_26
0x400c3b6	      0xbd00000000	                              mov ebp, 0	      4234	eval.c	ELSE_15	FUNCTION_70	IF_25
0x400c3bb	          0x4939dc	                            cmp r12, rbx	      4250	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2
0x400c3be	            0x7243	                            jb 0x400c403	      4250	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2
0x400c3c0	      0xe9be000000	                           jmp 0x400c483	      4250	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2
0x400c3c5	      0x488d742414	                   lea rsi, [rsp + 0x14]	      4242	eval.c	ELSE_15	FUNCTION_70	IF_25	CALL_36
0x400c3ca	          0x4c89ef	                            mov rdi, r13	      4242	eval.c	ELSE_15	FUNCTION_70	IF_25	CALL_36
0x400c3cd	      0xe800000000	                          call 0x400c3d2	      4242	eval.c	ELSE_15	FUNCTION_70	IF_25	CALL_36
0x400c3d2	          0x4889c5	                            mov rbp, rax	      4242	eval.c	ELSE_15	FUNCTION_70	IF_25	CALL_36
0x400c3d5	      0x837c241400	               cmp dword [rsp + 0x14], 0	      4243	eval.c	ELSE_15	FUNCTION_70	IF_25	IF_27
0x400c3da	            0x7514	                           jne 0x400c3f0	      4243	eval.c	ELSE_15	FUNCTION_70	IF_25	IF_27
0x400c3dc	        0x660fefff	                         pxor xmm7, xmm7	      4236	eval.c	ELSE_15	FUNCTION_70	IF_25
0x400c3e0	      0xf20f113c24	                 movsd qword [rsp], xmm7	      4236	eval.c	ELSE_15	FUNCTION_70	IF_25
0x400c3e5	          0x4939dc	                            cmp r12, rbx	      4250	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2
0x400c3e8	     0xf838e000000	                           jae 0x400c47c	      4250	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2
0x400c3ee	            0xeb13	                           jmp 0x400c403	      4250	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2
0x400c3f0	          0x4c89ef	                            mov rdi, r13	      4245	eval.c	ELSE_15	FUNCTION_70	IF_25	IF_27	CALL_37
0x400c3f3	      0xe800000000	                          call 0x400c3f8	      4245	eval.c	ELSE_15	FUNCTION_70	IF_25	IF_27	CALL_37
0x400c3f8	    0x41be00000000	                             mov r14d, 0	      4246	eval.c	ELSE_15	FUNCTION_70	IF_25	IF_27
0x400c3fe	      0xe9a9000000	                           jmp 0x400c4ac	      4246	eval.c	ELSE_15	FUNCTION_70	IF_25	IF_27
0x400c403	        0x660fefc9	                         pxor xmm1, xmm1	      4257	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	IF_28	IF_29
0x400c407	        0x660f28c1	                       movapd xmm0, xmm1	      4257	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	IF_28	IF_29
0x400c40b	        0x4883eb01	                              sub rbx, 1	      4252	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2
0x400c40f	           0xfb603	                   movzx eax, byte [rbx]	      4253	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	IF_28
0x400c412	            0x3c21	                            cmp al, 0x21	      4253	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	IF_28
0x400c414	            0x7530	                           jne 0x400c446	      4253	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	IF_28
0x400c416	      0x41837d0007	                      cmp dword [r13], 7	      4256	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	IF_28	IF_29
0x400c41b	            0x751c	                           jne 0x400c439	      4256	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	IF_28	IF_29
0x400c41d	      0xf20f101424	                 movsd xmm2, qword [rsp]	      4257	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	IF_28	IF_29
0x400c422	        0x660f2ed1	                      ucomisd xmm2, xmm1	      4257	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	IF_28	IF_29
0x400c426	            0x7a06	                            jp 0x400c42e	      4257	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	IF_28	IF_29
0x400c428	        0x660f2ed0	                      ucomisd xmm2, xmm0	      4257	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	IF_28	IF_29
0x400c42c	            0x743c	                            je 0x400c46a	      4257	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	IF_28	IF_29
0x400c42e	        0x660fefed	                         pxor xmm5, xmm5	      4257	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	IF_28	IF_29
0x400c432	      0xf20f112c24	                 movsd qword [rsp], xmm5	      4257	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	IF_28	IF_29
0x400c437	            0xeb3e	                           jmp 0x400c477	      4257	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	IF_28	IF_29
0x400c439	          0x4885ed	                           test rbp, rbp	      4260	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	IF_28	ELSE_10
0x400c43c	        0x400f94c5	                                sete bpl	      4260	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	IF_28	ELSE_10
0x400c440	        0x400fb6ed	                          movzx ebp, bpl	      4260	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	IF_28	ELSE_10
0x400c444	            0xeb31	                           jmp 0x400c477	      4260	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	IF_28	ELSE_10
0x400c446	            0x3c2d	                            cmp al, 0x2d	      4262	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	ELSE_10	ELSE_11	IF_30
0x400c448	            0x752d	                           jne 0x400c477	      4262	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	ELSE_10	ELSE_11	IF_30
0x400c44a	      0x41837d0007	                      cmp dword [r13], 7	      4265	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	ELSE_10	ELSE_11	IF_30	IF_31
0x400c44f	            0x7514	                           jne 0x400c465	      4265	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	ELSE_10	ELSE_11	IF_30	IF_31
0x400c451	      0xf20f101c24	                 movsd xmm3, qword [rsp]	      4266	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	ELSE_10	ELSE_11	IF_30	IF_31
0x400c456	    0x660f571d0000	        xorpd xmm3, xmmword [0x0400c45e]	      4266	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	ELSE_10	ELSE_11	IF_30	IF_31
0x400c45e	      0xf20f111c24	                 movsd qword [rsp], xmm3	      4266	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	ELSE_10	ELSE_11	IF_30	IF_31
0x400c463	            0xeb12	                           jmp 0x400c477	      4266	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	ELSE_10	ELSE_11	IF_30	IF_31
0x400c465	          0x48f7dd	                                 neg rbp	      4269	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	ELSE_10	ELSE_11	IF_30	ELSE_12
0x400c468	            0xeb0d	                           jmp 0x400c477	      4269	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	ELSE_10	ELSE_11	IF_30	ELSE_12
0x400c46a	    0xf20f10350000	         movsd xmm6, qword [0x0400c472] 	      4257	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	IF_28	IF_29
0x400c472	      0xf20f113424	                 movsd qword [rsp], xmm6	      4257	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	IF_28	IF_29
0x400c477	          0x4939dc	                            cmp r12, rbx	      4250	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2
0x400c47a	            0x758f	                           jne 0x400c40b	      4250	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2
0x400c47c	      0x41837d0007	                      cmp dword [r13], 7	      4273	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	ELSE_12	IF_32
0x400c481	            0x7515	                           jne 0x400c498	      4273	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	ELSE_12	IF_32
0x400c483	          0x4c89ef	                            mov rdi, r13	      4275	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	ELSE_12	IF_32	CALL_38
0x400c486	      0xe800000000	                          call 0x400c48b	      4275	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	ELSE_12	IF_32	CALL_38
0x400c48b	      0xf20f103c24	                 movsd xmm7, qword [rsp]	      4276	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	ELSE_12	IF_32
0x400c490	    0xf2410f117d08	             movsd qword [r13 + 8], xmm7	      4276	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	ELSE_12	IF_32
0x400c496	            0xeb14	                           jmp 0x400c4ac	      4276	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	ELSE_12	IF_32
0x400c498	          0x4c89ef	                            mov rdi, r13	      4281	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	ELSE_13	CALL_39
0x400c49b	      0xe800000000	                          call 0x400c4a0	      4281	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	ELSE_13	CALL_39
0x400c4a0	    0x41c745000100	                      mov dword [r13], 1	      4282	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	ELSE_13
0x400c4a8	        0x49896d08	                mov qword [r13 + 8], rbp	      4283	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	ELSE_13
0x400c4ac	          0x4489f0	                           mov eax, r14d	      4289	eval.c	ELSE_15	FUNCTION_70
0x400c4af	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      4289	eval.c	ELSE_15	FUNCTION_70
0x400c4b4	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      4289	eval.c	ELSE_15	FUNCTION_70
0x400c4bd	     0xf8403010000	                            je 0x400c5c6	      4289	eval.c	ELSE_15	FUNCTION_70
0x400c4c3	      0xe9f9000000	                           jmp 0x400c5c1	      4289	eval.c	ELSE_15	FUNCTION_70
0x400c4c8	          0x4c89e3	                            mov rbx, r12	      4010	eval.c	ELSE_15	FUNCTION_70	WHILE_1
0x400c4cb	          0x83e822	                           sub eax, 0x22	      4014	eval.c	ELSE_15	FUNCTION_70	SWITCH_1
0x400c4ce	            0x3c59	                            cmp al, 0x59	      4014	eval.c	ELSE_15	FUNCTION_70	SWITCH_1
0x400c4d0	     0xf871dfdffff	                            ja 0x400c1f3	      4014	eval.c	ELSE_15	FUNCTION_70	SWITCH_1
0x400c4d6	           0xfb6c0	                           movzx eax, al	      4014	eval.c	ELSE_15	FUNCTION_70	SWITCH_1
0x400c4d9	    0xff24c5000000	                       jmp qword [rax*8]	      4014	eval.c	ELSE_15	FUNCTION_70	SWITCH_1
0x400c4e0	          0x83e801	                              sub eax, 1	      4733	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_2	WHILE_1	CALL_7
0x400c4e3	          0x890424	                    mov dword [rsp], eax	      4733	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_2	WHILE_1	CALL_7
0x400c4e6	    0x41be00000000	                             mov r14d, 0	      4733	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_2	WHILE_1	CALL_7
0x400c4ec	      0xe93df8ffff	                           jmp 0x400bd2e	      4733	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_2	WHILE_1	CALL_7
0x400c4f1	        0x4c8b7500	                    mov r14, qword [rbp]	      4820	eval.c	FUNCTION_74	IF_3	CALL_3
0x400c4f5	      0xba05000000	                              mov edx, 5	      4820	eval.c	FUNCTION_74	IF_3	CALL_3
0x400c4fa	      0xbe00000000	                              mov esi, 0	      4820	eval.c	FUNCTION_74	IF_3	CALL_3
0x400c4ff	      0xbf00000000	                              mov edi, 0	      4820	eval.c	FUNCTION_74	IF_3	CALL_3
0x400c504	      0xe800000000	                          call 0x400c509	      4820	eval.c	FUNCTION_74	IF_3	CALL_3
0x400c509	          0x4c89f6	                            mov rsi, r14	      4820	eval.c	FUNCTION_74	IF_3	CALL_3
0x400c50c	          0x4889c7	                            mov rdi, rax	      4820	eval.c	FUNCTION_74	IF_3	CALL_3
0x400c50f	      0xe800000000	                          call 0x400c514	      4820	eval.c	FUNCTION_74	IF_3	CALL_3
0x400c514	    0x41be00000000	                             mov r14d, 0	      4821	eval.c	FUNCTION_74	IF_3
0x400c51a	      0xe9cafcffff	                           jmp 0x400c1e9	      4821	eval.c	FUNCTION_74	IF_3
0x400c51f	          0x4585ff	                         test r15d, r15d	      4825	eval.c	FUNCTION_74	IF_4
0x400c522	     0xf8418faffff	                            je 0x400bf40	      4825	eval.c	FUNCTION_74	IF_4
0x400c528	      0xe926faffff	                           jmp 0x400bf53	      4825	eval.c	FUNCTION_74	IF_4
0x400c52d	      0xbf00000000	                              mov edi, 0	      4189	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_28
0x400c532	      0xe800000000	                          call 0x400c537	      4189	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_28
0x400c537	    0x41be00000000	                             mov r14d, 0	      4183	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_19
0x400c53d	      0xe9acfdffff	                           jmp 0x400c2ee	      4183	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_19
0x400c542	      0xb900000000	                              mov ecx, 0	      4177	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_25
0x400c547	      0x488d542420	                   lea rdx, [rsp + 0x20]	      4177	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_25
0x400c54c	      0x488d742410	                   lea rsi, [rsp + 0x10]	      4177	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_25
0x400c551	      0xe800000000	                          call 0x400c556	      4177	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_25
0x400c556	          0x4889c7	                            mov rdi, rax	      4181	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_26
0x400c559	      0xe800000000	                          call 0x400c55e	      4181	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_26
0x400c55e	        0x48890424	                    mov qword [rsp], rax	      4181	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_26
0x400c562	          0x4885c0	                           test rax, rax	      4182	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_19
0x400c565	            0x74c6	                            je 0x400c52d	      4182	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_19
0x400c567	      0xc644240c00	                 mov byte [rsp + 0xc], 0	      4177	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_25
0x400c56c	      0xe909fdffff	                           jmp 0x400c27a	      4177	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_25
0x400c571	           0xfb610	                   movzx edx, byte [rax]	      4053	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_5	CALL_7
0x400c574	            0x89d0	                            mov eax, edx	      4053	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_5	CALL_7
0x400c576	          0x83e0df	                     and eax, 0xffffffdf	      4053	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_5	CALL_7
0x400c579	          0x83e841	                           sub eax, 0x41	      4053	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_5	CALL_7
0x400c57c	            0x3c19	                            cmp al, 0x19	      4053	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_5	CALL_7
0x400c57e	     0xf8616f5ffff	                           jbe 0x400ba9a	      4053	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_5	CALL_7
0x400c584	          0x80fa2e	                            cmp dl, 0x2e	      4053	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_5	CALL_7
0x400c587	     0xf85d7f4ffff	                           jne 0x400ba64	      4053	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_5	CALL_7
0x400c58d	      0xe908f5ffff	                           jmp 0x400ba9a	      4053	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_5	CALL_7
0x400c592	        0x488b7d00	                    mov rdi, qword [rbp]	      4221	eval.c	ELSE_15	FUNCTION_70	CALL_34
0x400c596	      0xe800000000	                          call 0x400c59b	      4221	eval.c	ELSE_15	FUNCTION_70	CALL_34
0x400c59b	        0x48894500	                    mov qword [rbp], rax	      4221	eval.c	ELSE_15	FUNCTION_70	CALL_34
0x400c59f	      0xe908ffffff	                           jmp 0x400c4ac	      4221	eval.c	ELSE_15	FUNCTION_70	CALL_34
0x400c5a4	        0x4183fe02	                             cmp r14d, 2	      4153	eval.c	ELSE_15	FUNCTION_70	IF_14
0x400c5a8	            0x75e8	                           jne 0x400c592	      4153	eval.c	ELSE_15	FUNCTION_70	IF_14
0x400c5aa	      0xe944fcffff	                           jmp 0x400c1f3	      4153	eval.c	ELSE_15	FUNCTION_70	IF_14
0x400c5af	        0x488b7d00	                    mov rdi, qword [rbp]	      4221	eval.c	ELSE_15	FUNCTION_70	CALL_34
0x400c5b3	      0xe800000000	                          call 0x400c5b8	      4221	eval.c	ELSE_15	FUNCTION_70	CALL_34
0x400c5b8	        0x48894500	                    mov qword [rbp], rax	      4221	eval.c	ELSE_15	FUNCTION_70	CALL_34
0x400c5bc	      0xe9a7fdffff	                           jmp 0x400c368	      4221	eval.c	ELSE_15	FUNCTION_70	CALL_34
0x400c5c1	      0xe800000000	                          call 0x400c5c6	      4289	eval.c	ELSE_15	FUNCTION_70
0x400c5c6	        0x4883c438	                           add rsp, 0x38	      4289	eval.c	ELSE_15	FUNCTION_70
0x400c5ca	              0x5b	                                 pop rbx	      4289	eval.c	ELSE_15	FUNCTION_70
0x400c5cb	              0x5d	                                 pop rbp	      4289	eval.c	ELSE_15	FUNCTION_70
0x400c5cc	            0x415c	                                 pop r12	      4289	eval.c	ELSE_15	FUNCTION_70
0x400c5ce	            0x415d	                                 pop r13	      4289	eval.c	ELSE_15	FUNCTION_70
0x400c5d0	            0x415e	                                 pop r14	      4289	eval.c	ELSE_15	FUNCTION_70
0x400c5d2	            0x415f	                                 pop r15	      4289	eval.c	ELSE_15	FUNCTION_70
0x400c5d4	              0xc3	                                     ret	      4289	eval.c	ELSE_15	FUNCTION_70
ex_unletlock	FOR,0:SWITCH,0:DO,1:IF,9:functions,0:WHILE,0:CALL,12:ELSE,1	258
0x400a4d3	            0x4157	                                push r15	      2753	eval.c	FUNCTION_54
0x400a4d5	            0x4156	                                push r14	      2753	eval.c	FUNCTION_54
0x400a4d7	            0x4155	                                push r13	      2753	eval.c	FUNCTION_54
0x400a4d9	            0x4154	                                push r12	      2753	eval.c	FUNCTION_54
0x400a4db	              0x55	                                push rbp	      2753	eval.c	FUNCTION_54
0x400a4dc	              0x53	                                push rbx	      2753	eval.c	FUNCTION_54
0x400a4dd	        0x4883ec78	                           sub rsp, 0x78	      2753	eval.c	FUNCTION_54
0x400a4e1	          0x4989fd	                            mov r13, rdi	      2753	eval.c	FUNCTION_54
0x400a4e4	          0x4989f4	                            mov r12, rsi	      2753	eval.c	FUNCTION_54
0x400a4e7	          0x4189d6	                           mov r14d, edx	      2753	eval.c	FUNCTION_54
0x400a4ea	    0x64488b042528	                mov rax, qword fs:[0x28]	      2753	eval.c	FUNCTION_54
0x400a4f3	      0x4889442468	             mov qword [rsp + 0x68], rax	      2753	eval.c	FUNCTION_54
0x400a4f8	            0x31c0	                            xor eax, eax	      2753	eval.c	FUNCTION_54
0x400a4fa	      0xbb00000000	                              mov ebx, 0	      2756	eval.c	FUNCTION_54
0x400a4ff	            0x89d8	                            mov eax, ebx	      2762	eval.c	FUNCTION_54	DO_1	CALL_1
0x400a501	        0x410b4530	              or eax, dword [r13 + 0x30]	      2762	eval.c	FUNCTION_54	DO_1	CALL_1
0x400a505	        0x410f95c0	                               setne r8b	      2762	eval.c	FUNCTION_54	DO_1	CALL_1
0x400a509	        0x450fb6c0	                          movzx r8d, r8b	      2762	eval.c	FUNCTION_54	DO_1	CALL_1
0x400a50d	        0x4883ec08	                              sub rsp, 8	      2762	eval.c	FUNCTION_54	DO_1	CALL_1
0x400a511	            0x6a02	                                  push 2	      2762	eval.c	FUNCTION_54	DO_1	CALL_1
0x400a513	    0x41b900000000	                              mov r9d, 0	      2762	eval.c	FUNCTION_54	DO_1	CALL_1
0x400a519	      0xb901000000	                              mov ecx, 1	      2762	eval.c	FUNCTION_54	DO_1	CALL_1
0x400a51e	      0x488d542410	                   lea rdx, [rsp + 0x10]	      2762	eval.c	FUNCTION_54	DO_1	CALL_1
0x400a523	      0xbe00000000	                              mov esi, 0	      2762	eval.c	FUNCTION_54	DO_1	CALL_1
0x400a528	          0x4c89e7	                            mov rdi, r12	      2762	eval.c	FUNCTION_54	DO_1	CALL_1
0x400a52b	      0xe800000000	                          call 0x400a530	      2762	eval.c	FUNCTION_54	DO_1	CALL_1
0x400a530	          0x4889c5	                            mov rbp, rax	      2762	eval.c	FUNCTION_54	DO_1	CALL_1
0x400a533	        0x4883c410	                           add rsp, 0x10	      2764	eval.c	FUNCTION_54	DO_1	IF_1
0x400a537	      0x48833c2400	                      cmp qword [rsp], 0	      2765	eval.c	FUNCTION_54	DO_1	IF_1
0x400a53c	      0xb801000000	                              mov eax, 1	      2765	eval.c	FUNCTION_54	DO_1	IF_1
0x400a541	           0xf44d8	                          cmove ebx, eax	      2765	eval.c	FUNCTION_54	DO_1	IF_1
0x400a544	          0x4885ed	                           test rbp, rbp	      2766	eval.c	FUNCTION_54	DO_1	IF_2	CALL_2
0x400a547	            0x7422	                            je 0x400a56b	      2766	eval.c	FUNCTION_54	DO_1	IF_2	CALL_2
0x400a549	         0xfb67d00	                   movzx edi, byte [rbp]	      2766	eval.c	FUNCTION_54	DO_1	IF_2	CALL_2
0x400a54d	        0x4080ff20	                           cmp dil, 0x20	      2766	eval.c	FUNCTION_54	DO_1	IF_2	CALL_2
0x400a551	            0x742f	                            je 0x400a582	      2766	eval.c	FUNCTION_54	DO_1	IF_2	CALL_2
0x400a553	        0x4080ff09	                              cmp dil, 9	      2766	eval.c	FUNCTION_54	DO_1	IF_2	CALL_2
0x400a557	            0x7429	                            je 0x400a582	      2766	eval.c	FUNCTION_54	DO_1	IF_2	CALL_2
0x400a559	        0x400fb6ff	                          movzx edi, dil	      2767	eval.c	FUNCTION_54	DO_1	IF_2	CALL_3
0x400a55d	      0xe800000000	                          call 0x400a562	      2767	eval.c	FUNCTION_54	DO_1	IF_2	CALL_3
0x400a562	            0x85c0	                           test eax, eax	      2767	eval.c	FUNCTION_54	DO_1	IF_2	CALL_3
0x400a564	            0x751c	                           jne 0x400a582	      2767	eval.c	FUNCTION_54	DO_1	IF_2	CALL_3
0x400a566	      0xe908030000	                           jmp 0x400a873	      2767	eval.c	FUNCTION_54	DO_1	IF_2	CALL_3
0x400a56b	        0x410b5d30	              or ebx, dword [r13 + 0x30]	      2774	eval.c	FUNCTION_54	DO_1	IF_2	IF_4
0x400a56f	     0xf85e0020000	                           jne 0x400a855	      2774	eval.c	FUNCTION_54	DO_1	IF_2	IF_4
0x400a575	          0x4889e7	                            mov rdi, rsp	      2775	eval.c	FUNCTION_54	DO_1	IF_2	CALL_6
0x400a578	      0xe800000000	                          call 0x400a57d	      2775	eval.c	FUNCTION_54	DO_1	IF_2	CALL_6
0x400a57d	      0xe9d3020000	                           jmp 0x400a855	      2775	eval.c	FUNCTION_54	DO_1	IF_2	CALL_6
0x400a582	            0x85db	                           test ebx, ebx	      2779	eval.c	FUNCTION_54	DO_1	IF_5
0x400a584	     0xf85a1020000	                           jne 0x400a82b	      2779	eval.c	FUNCTION_54	DO_1	IF_5
0x400a58a	      0x41837d3000	               cmp dword [r13 + 0x30], 0	      2779	eval.c	FUNCTION_54	DO_1	IF_5
0x400a58f	     0xf85a5020000	                           jne 0x400a83a	      2779	eval.c	FUNCTION_54	DO_1	IF_5
0x400a595	        0x458b6520	           mov r12d, dword [r13 + 0x20] 	      2781	eval.c	FUNCTION_54	DO_1	IF_5	IF_6
0x400a599	    0x4181fce20100	                         cmp r12d, 0x1e2	      2781	eval.c	FUNCTION_54	DO_1	IF_5	IF_6
0x400a5a0	     0xf8554010000	                           jne 0x400a6fa	      2781	eval.c	FUNCTION_54	DO_1	IF_5	IF_6
0x400a5a6	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      2812	eval.c	FUNCTION_55	IF_1
0x400a5ac	            0x7527	                           jne 0x400a5d5	      2812	eval.c	FUNCTION_55	IF_1
0x400a5ae	        0x418b7534	            mov esi, dword [r13 + 0x34] 	      2783	eval.c	FUNCTION_54	DO_1	IF_5	IF_6	IF_7	CALL_7
0x400a5b2	      0x440fb66500	                  movzx r12d, byte [rbp]	      2814	eval.c	FUNCTION_55	IF_1
0x400a5b7	        0xc6450000	                       mov byte [rbp], 0	      2815	eval.c	FUNCTION_55	IF_1
0x400a5bb	        0x488b3c24	                    mov rdi, qword [rsp]	      2818	eval.c	FUNCTION_55	IF_1	IF_2	CALL_1
0x400a5bf	      0xe800000000	                          call 0x400a5c4	      2818	eval.c	FUNCTION_55	IF_1	IF_2	CALL_1
0x400a5c4	            0x85c0	                           test eax, eax	      2809	eval.c	FUNCTION_55
0x400a5c6	           0xf95c3	                                setne bl	      2809	eval.c	FUNCTION_55
0x400a5c9	           0xfb6db	                           movzx ebx, bl	      2809	eval.c	FUNCTION_55
0x400a5cc	        0x44886500	                    mov byte [rbp], r12b	      2820	eval.c	FUNCTION_55	IF_1
0x400a5d0	      0xe91d010000	                           jmp 0x400a6f2	      2820	eval.c	FUNCTION_55	IF_1
0x400a5d5	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      2822	eval.c	FUNCTION_55	ELSE_1	IF_3
0x400a5da	          0x4885c0	                           test rax, rax	      2822	eval.c	FUNCTION_55	ELSE_1	IF_3
0x400a5dd	            0x741a	                            je 0x400a5f9	      2822	eval.c	FUNCTION_55	ELSE_1	IF_3
0x400a5df	         0xfbe7848	           movsx edi, byte [rax + 0x48] 	      2823	eval.c	FUNCTION_55	ELSE_1	IF_3	CALL_2
0x400a5e3	      0xba00000000	                              mov edx, 0	      2823	eval.c	FUNCTION_55	ELSE_1	IF_3	CALL_2
0x400a5e8	        0x488b3424	                    mov rsi, qword [rsp]	      2823	eval.c	FUNCTION_55	ELSE_1	IF_3	CALL_2
0x400a5ec	      0xe800000000	                          call 0x400a5f1	      2823	eval.c	FUNCTION_55	ELSE_1	IF_3	CALL_2
0x400a5f1	            0x85c0	                           test eax, eax	      2823	eval.c	FUNCTION_55	ELSE_1	IF_3	CALL_2
0x400a5f3	     0xf85a5020000	                           jne 0x400a89e	      2823	eval.c	FUNCTION_55	ELSE_1	IF_3	CALL_2
0x400a5f9	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      2824	eval.c	FUNCTION_55	ELSE_1	IF_3
0x400a5fe	          0x4885c0	                           test rax, rax	      2824	eval.c	FUNCTION_55	ELSE_1	IF_3
0x400a601	            0x7419	                            je 0x400a61c	      2824	eval.c	FUNCTION_55	ELSE_1	IF_3
0x400a603	           0xfbe38	                   movsx edi, byte [rax]	      2825	eval.c	FUNCTION_55	ELSE_1	IF_3	CALL_3
0x400a606	      0xba00000000	                              mov edx, 0	      2825	eval.c	FUNCTION_55	ELSE_1	IF_3	CALL_3
0x400a60b	        0x488b3424	                    mov rsi, qword [rsp]	      2825	eval.c	FUNCTION_55	ELSE_1	IF_3	CALL_3
0x400a60f	      0xe800000000	                          call 0x400a614	      2825	eval.c	FUNCTION_55	ELSE_1	IF_3	CALL_3
0x400a614	            0x85c0	                           test eax, eax	      2825	eval.c	FUNCTION_55	ELSE_1	IF_3	CALL_3
0x400a616	     0xf8582020000	                           jne 0x400a89e	      2825	eval.c	FUNCTION_55	ELSE_1	IF_3	CALL_3
0x400a61c	      0x837c242800	               cmp dword [rsp + 0x28], 0	      2827	eval.c	FUNCTION_55	ELSE_2	IF_4
0x400a621	     0xf849e000000	                            je 0x400a6c5	      2827	eval.c	FUNCTION_55	ELSE_2	IF_4
0x400a627	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      2830	eval.c	FUNCTION_55	ELSE_2	IF_4
0x400a62c	      0x448b7c2430	           mov r15d, dword [rsp + 0x30] 	      2831	eval.c	FUNCTION_55	ELSE_2	IF_4
0x400a631	          0x4885c0	                           test rax, rax	      2833	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1
0x400a634	            0x7533	                           jne 0x400a669	      2833	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1
0x400a636	      0xbb01000000	                              mov ebx, 1	      2809	eval.c	FUNCTION_55
0x400a63b	      0xe9b2000000	                           jmp 0x400a6f2	      2809	eval.c	FUNCTION_55
0x400a640	          0x4c8b20	                    mov r12, qword [rax]	      2835	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1
0x400a643	         0xfbe7814	           movsx edi, byte [rax + 0x14] 	      2836	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1	IF_5	CALL_4
0x400a647	      0xba00000000	                              mov edx, 0	      2836	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1	IF_5	CALL_4
0x400a64c	        0x488b3424	                    mov rsi, qword [rsp]	      2836	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1	IF_5	CALL_4
0x400a650	      0xe800000000	                          call 0x400a655	      2836	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1	IF_5	CALL_4
0x400a655	            0x85c0	                           test eax, eax	      2836	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1	IF_5	CALL_4
0x400a657	     0xf8541020000	                           jne 0x400a89e	      2836	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1	IF_5	CALL_4
0x400a65d	        0x4183c701	                             add r15d, 1	      2839	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1
0x400a661	          0x4d85e4	                           test r12, r12	      2833	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1
0x400a664	            0x7414	                            je 0x400a67a	      2833	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1
0x400a666	          0x4c89e0	                            mov rax, r12	      2838	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1
0x400a669	      0x837c244000	               cmp dword [rsp + 0x40], 0	      2833	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1
0x400a66e	            0x75d0	                           jne 0x400a640	      2833	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1
0x400a670	          0x4963d7	                        movsxd rdx, r15d	      2833	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1
0x400a673	      0x4839542438	            cmp qword [rsp + 0x38], rdx 	      2833	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1
0x400a678	            0x7dc6	                           jge 0x400a640	      2833	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1
0x400a67a	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      2843	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2
0x400a67f	          0x4885f6	                           test rsi, rsi	      2843	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2
0x400a682	            0x7529	                           jne 0x400a6ad	      2843	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2
0x400a684	      0xe9a2010000	                           jmp 0x400a82b	      2843	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2
0x400a689	          0x4c8b26	                    mov r12, qword [rsi]	      2845	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2
0x400a68c	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      2846	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2	CALL_5
0x400a691	      0xe800000000	                          call 0x400a696	      2846	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2	CALL_5
0x400a696	      0x4c89642418	             mov qword [rsp + 0x18], r12	      2847	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2
0x400a69b	    0x488344243001	               add qword [rsp + 0x30], 1	      2848	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2
0x400a6a1	          0x4c89e6	                            mov rsi, r12	      2843	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2
0x400a6a4	          0x4d85e4	                           test r12, r12	      2843	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2
0x400a6a7	     0xf847e010000	                            je 0x400a82b	      2843	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2
0x400a6ad	      0x837c244000	               cmp dword [rsp + 0x40], 0	      2843	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2
0x400a6b2	            0x75d5	                           jne 0x400a689	      2843	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2
0x400a6b4	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      2843	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2
0x400a6b9	      0x4839442438	            cmp qword [rsp + 0x38], rax 	      2843	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2
0x400a6be	            0x7dc9	                           jge 0x400a689	      2843	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2
0x400a6c0	      0xe966010000	                           jmp 0x400a82b	      2843	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2
0x400a6c5	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      2853	eval.c	FUNCTION_55	ELSE_3	IF_6
0x400a6ca	          0x4885ff	                           test rdi, rdi	      2853	eval.c	FUNCTION_55	ELSE_3	IF_6
0x400a6cd	            0x740f	                            je 0x400a6de	      2853	eval.c	FUNCTION_55	ELSE_3	IF_6
0x400a6cf	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      2855	eval.c	FUNCTION_55	ELSE_3	CALL_6
0x400a6d4	      0xe800000000	                          call 0x400a6d9	      2855	eval.c	FUNCTION_55	ELSE_3	CALL_6
0x400a6d9	      0xe94d010000	                           jmp 0x400a82b	      2855	eval.c	FUNCTION_55	ELSE_3	CALL_6
0x400a6de	      0x488b742450	            mov rsi, qword [rsp + 0x50] 	      2858	eval.c	FUNCTION_55	ELSE_3	CALL_7
0x400a6e3	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      2858	eval.c	FUNCTION_55	ELSE_3	CALL_7
0x400a6e8	      0xe800000000	                          call 0x400a6ed	      2858	eval.c	FUNCTION_55	ELSE_3	CALL_7
0x400a6ed	      0xe939010000	                           jmp 0x400a82b	      2858	eval.c	FUNCTION_55	ELSE_3	CALL_7
0x400a6f2	          0x83f301	                              xor ebx, 1	      2858	eval.c	FUNCTION_55	ELSE_3	CALL_7
0x400a6f5	      0xe931010000	                           jmp 0x400a82b	      2858	eval.c	FUNCTION_55	ELSE_3	CALL_7
0x400a6fa	          0x4585f6	                         test r14d, r14d	      2935	eval.c	FUNCTION_57	IF_1
0x400a6fd	     0xf842f010000	                            je 0x400a832	      2935	eval.c	FUNCTION_57	IF_1
0x400a703	    0x4181fcf40000	                          cmp r12d, 0xf4	      2788	eval.c	FUNCTION_54	DO_1	IF_5	ELSE_1	IF_8	CALL_8
0x400a70a	        0x410f94c7	                               sete r15b	      2788	eval.c	FUNCTION_54	DO_1	IF_5	ELSE_1	IF_8	CALL_8
0x400a70e	        0x450fb6ff	                        movzx r15d, r15b	      2788	eval.c	FUNCTION_54	DO_1	IF_5	ELSE_1	IF_8	CALL_8
0x400a712	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      2938	eval.c	FUNCTION_57	IF_2
0x400a718	     0xf8598000000	                           jne 0x400a7b6	      2938	eval.c	FUNCTION_57	IF_2
0x400a71e	         0xfb65d00	                   movzx ebx, byte [rbp]	      2940	eval.c	FUNCTION_57	IF_2
0x400a722	        0xc6450000	                       mov byte [rbp], 0	      2941	eval.c	FUNCTION_57	IF_2
0x400a726	      0xba01000000	                              mov edx, 1	      2944	eval.c	FUNCTION_57	IF_2	CALL_1
0x400a72b	      0xbe00000000	                              mov esi, 0	      2944	eval.c	FUNCTION_57	IF_2	CALL_1
0x400a730	        0x488b3c24	                    mov rdi, qword [rsp]	      2944	eval.c	FUNCTION_57	IF_2	CALL_1
0x400a734	      0xe800000000	                          call 0x400a739	      2944	eval.c	FUNCTION_57	IF_2	CALL_1
0x400a739	          0x4885c0	                           test rax, rax	      2945	eval.c	FUNCTION_57	IF_2	IF_3
0x400a73c	            0x7469	                            je 0x400a7a7	      2945	eval.c	FUNCTION_57	IF_2	IF_3
0x400a73e	         0xfb65010	           movzx edx, byte [rax + 0x10] 	      2947	eval.c	FUNCTION_57	IF_2	ELSE_1	IF_4
0x400a742	          0xf6c204	                              test dl, 4	      2947	eval.c	FUNCTION_57	IF_2	ELSE_1	IF_4
0x400a745	            0x7434	                            je 0x400a77b	      2947	eval.c	FUNCTION_57	IF_2	ELSE_1	IF_4
0x400a747	            0x8b08	                    mov ecx, dword [rax]	      2949	eval.c	FUNCTION_57	IF_2	ELSE_1	IF_4
0x400a749	          0x83e905	                              sub ecx, 5	      2949	eval.c	FUNCTION_57	IF_2	ELSE_1	IF_4
0x400a74c	          0x83f901	                              cmp ecx, 1	      2949	eval.c	FUNCTION_57	IF_2	ELSE_1	IF_4
0x400a74f	            0x762a	                           jbe 0x400a77b	      2949	eval.c	FUNCTION_57	IF_2	ELSE_1	IF_4
0x400a751	        0x4c8b2424	                    mov r12, qword [rsp]	      2952	eval.c	FUNCTION_57	IF_2	ELSE_1	IF_4
0x400a755	      0xba05000000	                              mov edx, 5	      2952	eval.c	FUNCTION_57	IF_2	ELSE_1	IF_4
0x400a75a	      0xbe00000000	                              mov esi, 0	      2952	eval.c	FUNCTION_57	IF_2	ELSE_1	IF_4
0x400a75f	      0xbf00000000	                              mov edi, 0	      2952	eval.c	FUNCTION_57	IF_2	ELSE_1	IF_4
0x400a764	      0xe800000000	                          call 0x400a769	      2952	eval.c	FUNCTION_57	IF_2	ELSE_1	IF_4
0x400a769	          0x4c89e6	                            mov rsi, r12	      2952	eval.c	FUNCTION_57	IF_2	ELSE_1	IF_4
0x400a76c	          0x4889c7	                            mov rdi, rax	      2952	eval.c	FUNCTION_57	IF_2	ELSE_1	IF_4
0x400a76f	      0xe800000000	                          call 0x400a774	      2952	eval.c	FUNCTION_57	IF_2	ELSE_1	IF_4
0x400a774	      0xb801000000	                              mov eax, 1	      2931	eval.c	FUNCTION_57
0x400a779	            0xeb31	                           jmp 0x400a7ac	      2931	eval.c	FUNCTION_57
0x400a77b	    0x4181fcf40000	                          cmp r12d, 0xf4	      2955	eval.c	FUNCTION_57	IF_2	ELSE_2	IF_5
0x400a782	            0x7508	                           jne 0x400a78c	      2955	eval.c	FUNCTION_57	IF_2	ELSE_2	IF_5
0x400a784	          0x83ca08	                               or edx, 8	      2956	eval.c	FUNCTION_57	IF_2	ELSE_2	IF_5
0x400a787	          0x885010	               mov byte [rax + 0x10], dl	      2956	eval.c	FUNCTION_57	IF_2	ELSE_2	IF_5
0x400a78a	            0xeb06	                           jmp 0x400a792	      2956	eval.c	FUNCTION_57	IF_2	ELSE_2	IF_5
0x400a78c	          0x83e2f7	                     and edx, 0xfffffff7	      2958	eval.c	FUNCTION_57	IF_2	ELSE_2	ELSE_3
0x400a78f	          0x885010	               mov byte [rax + 0x10], dl	      2958	eval.c	FUNCTION_57	IF_2	ELSE_2	ELSE_3
0x400a792	          0x4489fa	                           mov edx, r15d	      2959	eval.c	FUNCTION_57	IF_2	ELSE_2	CALL_4
0x400a795	          0x4489f6	                           mov esi, r14d	      2959	eval.c	FUNCTION_57	IF_2	ELSE_2	CALL_4
0x400a798	          0x4889c7	                            mov rdi, rax	      2959	eval.c	FUNCTION_57	IF_2	ELSE_2	CALL_4
0x400a79b	      0xe8c159ffff	                      call sym.item_lock	      2959	eval.c	FUNCTION_57	IF_2	ELSE_2	CALL_4
0x400a7a0	      0xb801000000	                              mov eax, 1	      2931	eval.c	FUNCTION_57
0x400a7a5	            0xeb05	                           jmp 0x400a7ac	      2931	eval.c	FUNCTION_57
0x400a7a7	      0xb800000000	                              mov eax, 0	      2946	eval.c	FUNCTION_57	IF_2	IF_3
0x400a7ac	          0x885d00	                      mov byte [rbp], bl	      2961	eval.c	FUNCTION_57	IF_2
0x400a7af	          0x83f001	                              xor eax, 1	      2961	eval.c	FUNCTION_57	IF_2
0x400a7b2	            0x89c3	                            mov ebx, eax	      2961	eval.c	FUNCTION_57	IF_2
0x400a7b4	            0xeb75	                           jmp 0x400a82b	      2961	eval.c	FUNCTION_57	IF_2
0x400a7b6	      0x837c242800	               cmp dword [rsp + 0x28], 0	      2963	eval.c	FUNCTION_57	ELSE_4	IF_6
0x400a7bb	            0x7440	                            je 0x400a7fd	      2963	eval.c	FUNCTION_57	ELSE_4	IF_6
0x400a7bd	      0x4c8b642418	            mov r12, qword [rsp + 0x18] 	      2965	eval.c	FUNCTION_57	ELSE_4	IF_6
0x400a7c2	          0x4d85e4	                           test r12, r12	      2968	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1
0x400a7c5	            0x7521	                           jne 0x400a7e8	      2968	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1
0x400a7c7	            0xeb69	                           jmp 0x400a832	      2968	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1
0x400a7c9	      0x498d7c2410	                   lea rdi, [r12 + 0x10]	      2970	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1	CALL_5
0x400a7ce	          0x4489fa	                           mov edx, r15d	      2970	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1	CALL_5
0x400a7d1	          0x4489f6	                           mov esi, r14d	      2970	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1	CALL_5
0x400a7d4	      0xe88859ffff	                      call sym.item_lock	      2970	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1	CALL_5
0x400a7d9	        0x4d8b2424	                    mov r12, qword [r12]	      2971	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1
0x400a7dd	    0x488344243001	               add qword [rsp + 0x30], 1	      2972	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1
0x400a7e3	          0x4d85e4	                           test r12, r12	      2968	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1
0x400a7e6	            0x7443	                            je 0x400a82b	      2968	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1
0x400a7e8	      0x837c244000	               cmp dword [rsp + 0x40], 0	      2968	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1
0x400a7ed	            0x75da	                           jne 0x400a7c9	      2968	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1
0x400a7ef	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      2968	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1
0x400a7f4	      0x4839442438	            cmp qword [rsp + 0x38], rax 	      2968	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1
0x400a7f9	            0x7dce	                           jge 0x400a7c9	      2968	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1
0x400a7fb	            0xeb2e	                           jmp 0x400a82b	      2968	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1
0x400a7fd	    0x48837c242000	               cmp qword [rsp + 0x20], 0	      2975	eval.c	FUNCTION_57	ELSE_5	IF_7
0x400a803	            0x7416	                            je 0x400a81b	      2975	eval.c	FUNCTION_57	ELSE_5	IF_7
0x400a805	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      2977	eval.c	FUNCTION_57	ELSE_5	IF_7
0x400a80a	        0x488d7810	                   lea rdi, [rax + 0x10]	      2977	eval.c	FUNCTION_57	ELSE_5	IF_7
0x400a80e	          0x4489fa	                           mov edx, r15d	      2977	eval.c	FUNCTION_57	ELSE_5	IF_7
0x400a811	          0x4489f6	                           mov esi, r14d	      2977	eval.c	FUNCTION_57	ELSE_5	IF_7
0x400a814	      0xe84859ffff	                      call sym.item_lock	      2977	eval.c	FUNCTION_57	ELSE_5	IF_7
0x400a819	            0xeb10	                           jmp 0x400a82b	      2977	eval.c	FUNCTION_57	ELSE_5	IF_7
0x400a81b	          0x4489fa	                           mov edx, r15d	      2980	eval.c	FUNCTION_57	CALL_7
0x400a81e	          0x4489f6	                           mov esi, r14d	      2980	eval.c	FUNCTION_57	CALL_7
0x400a821	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	      2980	eval.c	FUNCTION_57	CALL_7
0x400a826	      0xe83659ffff	                      call sym.item_lock	      2980	eval.c	FUNCTION_57	CALL_7
0x400a82b	      0x41837d3000	               cmp dword [r13 + 0x30], 0	      2794	eval.c	FUNCTION_54	DO_1	IF_9
0x400a830	            0x7508	                           jne 0x400a83a	      2794	eval.c	FUNCTION_54	DO_1	IF_9
0x400a832	          0x4889e7	                            mov rdi, rsp	      2795	eval.c	FUNCTION_54	DO_1	CALL_9
0x400a835	      0xe800000000	                          call 0x400a83a	      2795	eval.c	FUNCTION_54	DO_1	CALL_9
0x400a83a	          0x4889ef	                            mov rdi, rbp	      2797	eval.c	FUNCTION_54	DO_1	CALL_10
0x400a83d	      0xe800000000	                          call 0x400a842	      2797	eval.c	FUNCTION_54	DO_1	CALL_10
0x400a842	          0x4989c4	                            mov r12, rax	      2797	eval.c	FUNCTION_54	DO_1	CALL_10
0x400a845	           0xfb638	                   movzx edi, byte [rax]	      2798	eval.c	FUNCTION_54	CALL_11
0x400a848	      0xe800000000	                          call 0x400a84d	      2798	eval.c	FUNCTION_54	CALL_11
0x400a84d	            0x85c0	                           test eax, eax	      2798	eval.c	FUNCTION_54	CALL_11
0x400a84f	     0xf84aafcffff	                            je 0x400a4ff	      2798	eval.c	FUNCTION_54	CALL_11
0x400a855	          0x4c89e7	                            mov rdi, r12	      2800	eval.c	FUNCTION_54	CALL_12
0x400a858	      0xe800000000	                          call 0x400a85d	      2800	eval.c	FUNCTION_54	CALL_12
0x400a85d	        0x49894508	                mov qword [r13 + 8], rax	      2800	eval.c	FUNCTION_54	CALL_12
0x400a861	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      2801	eval.c	FUNCTION_54
0x400a866	    0x644833042528	                xor rax, qword fs:[0x28]	      2801	eval.c	FUNCTION_54
0x400a86f	            0x7439	                            je 0x400a8aa	      2801	eval.c	FUNCTION_54
0x400a871	            0xeb32	                           jmp 0x400a8a5	      2801	eval.c	FUNCTION_54
0x400a873	    0xc70500000000	               mov dword [0x0400a87d], 1	      2771	eval.c	FUNCTION_54	DO_1	IF_2	IF_3
0x400a87d	      0xba05000000	                              mov edx, 5	      2772	eval.c	FUNCTION_54	DO_1	IF_2	IF_3	CALL_5
0x400a882	      0xbe00000000	                              mov esi, 0	      2772	eval.c	FUNCTION_54	DO_1	IF_2	IF_3	CALL_5
0x400a887	      0xbf00000000	                              mov edi, 0	      2772	eval.c	FUNCTION_54	DO_1	IF_2	IF_3	CALL_5
0x400a88c	      0xe800000000	                          call 0x400a891	      2772	eval.c	FUNCTION_54	DO_1	IF_2	IF_3	CALL_5
0x400a891	          0x4889c7	                            mov rdi, rax	      2772	eval.c	FUNCTION_54	DO_1	IF_2	IF_3	CALL_5
0x400a894	      0xe800000000	                          call 0x400a899	      2772	eval.c	FUNCTION_54	DO_1	IF_2	IF_3	CALL_5
0x400a899	      0xe9cdfcffff	                           jmp 0x400a56b	      2772	eval.c	FUNCTION_54	DO_1	IF_2	IF_3	CALL_5
0x400a89e	      0xbb01000000	                              mov ebx, 1	      2784	eval.c	FUNCTION_54	DO_1	IF_5	IF_6	IF_7
0x400a8a3	            0xeb86	                           jmp 0x400a82b	      2784	eval.c	FUNCTION_54	DO_1	IF_5	IF_6	IF_7
0x400a8a5	      0xe800000000	                          call 0x400a8aa	      2801	eval.c	FUNCTION_54
0x400a8aa	        0x4883c478	                           add rsp, 0x78	      2801	eval.c	FUNCTION_54
0x400a8ae	              0x5b	                                 pop rbx	      2801	eval.c	FUNCTION_54
0x400a8af	              0x5d	                                 pop rbp	      2801	eval.c	FUNCTION_54
0x400a8b0	            0x415c	                                 pop r12	      2801	eval.c	FUNCTION_54
0x400a8b2	            0x415d	                                 pop r13	      2801	eval.c	FUNCTION_54
0x400a8b4	            0x415e	                                 pop r14	      2801	eval.c	FUNCTION_54
0x400a8b6	            0x415f	                                 pop r15	      2801	eval.c	FUNCTION_54
0x400a8b8	              0xc3	                                     ret	      2801	eval.c	FUNCTION_54
tv_check_lock	FOR,0:SWITCH,0:DO,0:IF,2:functions,0:WHILE,0:CALL,8:ELSE,0	55
0x40046bd	              0x53	                                push rbx	      7720	eval.c	FUNCTION_148
0x40046be	        0x40f6c701	                             test dil, 1	      7721	eval.c	FUNCTION_148	IF_1
0x40046c2	            0x745d	                            je 0x4004721	      7721	eval.c	FUNCTION_148	IF_1
0x40046c4	          0x4885f6	                           test rsi, rsi	      7723	eval.c	FUNCTION_148	IF_1	CALL_2
0x40046c7	            0x7519	                           jne 0x40046e2	      7723	eval.c	FUNCTION_148	IF_1	CALL_2
0x40046c9	      0xba05000000	                              mov edx, 5	      7723	eval.c	FUNCTION_148	IF_1	CALL_2
0x40046ce	      0xbe00000000	                              mov esi, 0	      7723	eval.c	FUNCTION_148	IF_1	CALL_2
0x40046d3	      0xbf00000000	                              mov edi, 0	      7723	eval.c	FUNCTION_148	IF_1	CALL_2
0x40046d8	      0xe800000000	                          call 0x40046dd	      7723	eval.c	FUNCTION_148	IF_1	CALL_2
0x40046dd	          0x4889c3	                            mov rbx, rax	      7723	eval.c	FUNCTION_148	IF_1	CALL_2
0x40046e0	            0xeb19	                           jmp 0x40046fb	      7723	eval.c	FUNCTION_148	IF_1	CALL_2
0x40046e2	          0x4889f3	                            mov rbx, rsi	      7723	eval.c	FUNCTION_148	IF_1	CALL_2
0x40046e5	            0x85d2	                           test edx, edx	      7723	eval.c	FUNCTION_148	IF_1	CALL_2
0x40046e7	            0x7412	                            je 0x40046fb	      7723	eval.c	FUNCTION_148	IF_1	CALL_2
0x40046e9	      0xba05000000	                              mov edx, 5	      7723	eval.c	FUNCTION_148	IF_1	CALL_2
0x40046ee	      0xbf00000000	                              mov edi, 0	      7723	eval.c	FUNCTION_148	IF_1	CALL_2
0x40046f3	      0xe800000000	                          call 0x40046f8	      7723	eval.c	FUNCTION_148	IF_1	CALL_2
0x40046f8	          0x4889c3	                            mov rbx, rax	      7723	eval.c	FUNCTION_148	IF_1	CALL_2
0x40046fb	      0xba05000000	                              mov edx, 5	      7723	eval.c	FUNCTION_148	IF_1	CALL_2
0x4004700	      0xbe00000000	                              mov esi, 0	      7723	eval.c	FUNCTION_148	IF_1	CALL_2
0x4004705	      0xbf00000000	                              mov edi, 0	      7723	eval.c	FUNCTION_148	IF_1	CALL_2
0x400470a	      0xe800000000	                          call 0x400470f	      7723	eval.c	FUNCTION_148	IF_1	CALL_2
0x400470f	          0x4889de	                            mov rsi, rbx	      7723	eval.c	FUNCTION_148	IF_1	CALL_2
0x4004712	          0x4889c7	                            mov rdi, rax	      7723	eval.c	FUNCTION_148	IF_1	CALL_2
0x4004715	      0xe800000000	                          call 0x400471a	      7723	eval.c	FUNCTION_148	IF_1	CALL_2
0x400471a	      0xb801000000	                              mov eax, 1	      7727	eval.c	FUNCTION_148	IF_1
0x400471f	            0xeb62	                           jmp 0x4004783	      7727	eval.c	FUNCTION_148	IF_1
0x4004721	            0x89f8	                            mov eax, edi	      7729	eval.c	FUNCTION_148	IF_2
0x4004723	          0x83e002	                              and eax, 2	      7729	eval.c	FUNCTION_148	IF_2
0x4004726	            0x745b	                            je 0x4004783	      7729	eval.c	FUNCTION_148	IF_2
0x4004728	          0x4885f6	                           test rsi, rsi	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x400472b	            0x7519	                           jne 0x4004746	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x400472d	      0xba05000000	                              mov edx, 5	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x4004732	      0xbe00000000	                              mov esi, 0	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x4004737	      0xbf00000000	                              mov edi, 0	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x400473c	      0xe800000000	                          call 0x4004741	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x4004741	          0x4889c3	                            mov rbx, rax	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x4004744	            0xeb19	                           jmp 0x400475f	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x4004746	          0x4889f3	                            mov rbx, rsi	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x4004749	            0x85d2	                           test edx, edx	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x400474b	            0x7412	                            je 0x400475f	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x400474d	      0xba05000000	                              mov edx, 5	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x4004752	      0xbf00000000	                              mov edi, 0	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x4004757	      0xe800000000	                          call 0x400475c	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x400475c	          0x4889c3	                            mov rbx, rax	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x400475f	      0xba05000000	                              mov edx, 5	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x4004764	      0xbe00000000	                              mov esi, 0	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x4004769	      0xbf00000000	                              mov edi, 0	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x400476e	      0xe800000000	                          call 0x4004773	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x4004773	          0x4889de	                            mov rsi, rbx	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x4004776	          0x4889c7	                            mov rdi, rax	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x4004779	      0xe800000000	                          call 0x400477e	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x400477e	      0xb801000000	                              mov eax, 1	      7735	eval.c	FUNCTION_148	IF_2
0x4004783	              0x5b	                                 pop rbx	      7738	eval.c	FUNCTION_148
0x4004784	              0xc3	                                     ret	      7738	eval.c	FUNCTION_148
eval_foldexpr	FOR,0:SWITCH,0:DO,0:IF,6:functions,0:WHILE,0:CALL,5:ELSE,3	85
0x4008bf9	            0x4154	                                push r12	      1183	eval.c	FUNCTION_30
0x4008bfb	              0x55	                                push rbp	      1183	eval.c	FUNCTION_30
0x4008bfc	              0x53	                                push rbx	      1183	eval.c	FUNCTION_30
0x4008bfd	        0x4883ec20	                           sub rsp, 0x20	      1183	eval.c	FUNCTION_30
0x4008c01	          0x4889fd	                            mov rbp, rdi	      1183	eval.c	FUNCTION_30
0x4008c04	          0x4989f4	                            mov r12, rsi	      1183	eval.c	FUNCTION_30
0x4008c07	    0x64488b042528	                mov rax, qword fs:[0x28]	      1183	eval.c	FUNCTION_30
0x4008c10	      0x4889442418	             mov qword [rsp + 0x18], rax	      1183	eval.c	FUNCTION_30
0x4008c15	            0x31c0	                            xor eax, eax	      1183	eval.c	FUNCTION_30
0x4008c17	      0xbe04000000	                              mov esi, 4	      1187	eval.c	FUNCTION_30	CALL_1
0x4008c1c	      0xbf00000000	                              mov edi, 0	      1187	eval.c	FUNCTION_30	CALL_1
0x4008c21	      0xe800000000	                          call 0x4008c26	      1187	eval.c	FUNCTION_30	CALL_1
0x4008c26	            0x89c3	                            mov ebx, eax	      1187	eval.c	FUNCTION_30	CALL_1
0x4008c28	    0x830500000000	               add dword [0x04008c2f], 1	      1190	eval.c	FUNCTION_30
0x4008c2f	            0x85c0	                           test eax, eax	      1191	eval.c	FUNCTION_30	IF_1
0x4008c31	     0xf84d8000000	                            je 0x4008d0f	      1191	eval.c	FUNCTION_30	IF_1
0x4008c37	    0x830500000000	               add dword [0x04008c3e], 1	      1192	eval.c	FUNCTION_30	IF_1
0x4008c3e	    0x830500000000	               add dword [0x04008c45], 1	      1193	eval.c	FUNCTION_30
0x4008c45	    0x41c704240000	                      mov dword [r12], 0	      1194	eval.c	FUNCTION_30
0x4008c4d	      0xb901000000	                              mov ecx, 1	      1195	eval.c	FUNCTION_30	IF_2	CALL_2
0x4008c52	      0xba00000000	                              mov edx, 0	      1195	eval.c	FUNCTION_30	IF_2	CALL_2
0x4008c57	          0x4889e6	                            mov rsi, rsp	      1195	eval.c	FUNCTION_30	IF_2	CALL_2
0x4008c5a	          0x4889ef	                            mov rdi, rbp	      1195	eval.c	FUNCTION_30	IF_2	CALL_2
0x4008c5d	      0xe800000000	                          call 0x4008c62	      1195	eval.c	FUNCTION_30	IF_2	CALL_2
0x4008c62	            0x85c0	                           test eax, eax	      1195	eval.c	FUNCTION_30	IF_2	CALL_2
0x4008c64	     0xf8489000000	                            je 0x4008cf3	      1195	eval.c	FUNCTION_30	IF_2	CALL_2
0x4008c6a	          0x8b0424	                    mov eax, dword [rsp]	      1200	eval.c	FUNCTION_30	ELSE_1	IF_3
0x4008c6d	      0x488b6c2408	                mov rbp, qword [rsp + 8]	      1201	eval.c	FUNCTION_30	ELSE_1	IF_3
0x4008c72	          0x83f801	                              cmp eax, 1	      1200	eval.c	FUNCTION_30	ELSE_1	IF_3
0x4008c75	            0x7447	                            je 0x4008cbe	      1200	eval.c	FUNCTION_30	ELSE_1	IF_3
0x4008c77	      0xbd00000000	                              mov ebp, 0	      1203	eval.c	FUNCTION_30	ELSE_1	ELSE_2	IF_4
0x4008c7c	          0x83f802	                              cmp eax, 2	      1202	eval.c	FUNCTION_30	ELSE_1	ELSE_2	IF_4
0x4008c7f	            0x753d	                           jne 0x4008cbe	      1202	eval.c	FUNCTION_30	ELSE_1	ELSE_2	IF_4
0x4008c81	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1202	eval.c	FUNCTION_30	ELSE_1	ELSE_2	IF_4
0x4008c86	          0x4885ff	                           test rdi, rdi	      1202	eval.c	FUNCTION_30	ELSE_1	ELSE_2	IF_4
0x4008c89	            0x742e	                            je 0x4008cb9	      1202	eval.c	FUNCTION_30	ELSE_1	ELSE_2	IF_4
0x4008c8b	           0xfb607	                   movzx eax, byte [rdi]	      1209	eval.c	FUNCTION_30	ELSE_1	ELSE_3	IF_5	CALL_3
0x4008c8e	          0x8d50d0	                   lea edx, [rax - 0x30]	      1209	eval.c	FUNCTION_30	ELSE_1	ELSE_3	IF_5	CALL_3
0x4008c91	          0x80fa09	                               cmp dl, 9	      1209	eval.c	FUNCTION_30	ELSE_1	ELSE_3	IF_5	CALL_3
0x4008c94	            0x760f	                           jbe 0x4008ca5	      1209	eval.c	FUNCTION_30	ELSE_1	ELSE_3	IF_5	CALL_3
0x4008c96	            0x3c2d	                            cmp al, 0x2d	      1209	eval.c	FUNCTION_30	ELSE_1	ELSE_3	IF_5	CALL_3
0x4008c98	            0x740b	                            je 0x4008ca5	      1209	eval.c	FUNCTION_30	ELSE_1	ELSE_3	IF_5	CALL_3
0x4008c9a	        0x4883c701	                              add rdi, 1	      1210	eval.c	FUNCTION_30	ELSE_1	ELSE_3	IF_5
0x4008c9e	           0xfb6c0	                           movzx eax, al	      1210	eval.c	FUNCTION_30	ELSE_1	ELSE_3	IF_5
0x4008ca1	        0x41890424	                    mov dword [r12], eax	      1210	eval.c	FUNCTION_30	ELSE_1	ELSE_3	IF_5
0x4008ca5	      0xba0a000000	                            mov edx, 0xa	       285	stdlib.h	FUNCTION_224	CALL_2
0x4008caa	      0xbe00000000	                              mov esi, 0	       285	stdlib.h	FUNCTION_224	CALL_2
0x4008caf	      0xe800000000	                          call 0x4008cb4	       285	stdlib.h	FUNCTION_224	CALL_2
0x4008cb4	          0x4889c5	                            mov rbp, rax	       285	stdlib.h	FUNCTION_224	CALL_2
0x4008cb7	            0xeb05	                           jmp 0x4008cbe	       285	stdlib.h	FUNCTION_224	CALL_2
0x4008cb9	      0xbd00000000	                              mov ebp, 0	      1203	eval.c	FUNCTION_30	ELSE_1	ELSE_2	IF_4
0x4008cbe	          0x4889e7	                            mov rdi, rsp	      1213	eval.c	FUNCTION_30	ELSE_1	CALL_5
0x4008cc1	      0xe800000000	                          call 0x4008cc6	      1213	eval.c	FUNCTION_30	ELSE_1	CALL_5
0x4008cc6	    0x832d00000000	               sub dword [0x04008ccd], 1	      1215	eval.c	FUNCTION_30
0x4008ccd	            0x85db	                           test ebx, ebx	      1216	eval.c	FUNCTION_30	IF_6
0x4008ccf	            0x7407	                            je 0x4008cd8	      1216	eval.c	FUNCTION_30	IF_6
0x4008cd1	    0x832d00000000	               sub dword [0x04008cd8], 1	      1217	eval.c	FUNCTION_30	IF_6
0x4008cd8	    0x832d00000000	               sub dword [0x04008cdf], 1	      1218	eval.c	FUNCTION_30
0x4008cdf	            0x89e8	                            mov eax, ebp	      1221	eval.c	FUNCTION_30
0x4008ce1	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1221	eval.c	FUNCTION_30
0x4008ce6	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1221	eval.c	FUNCTION_30
0x4008cef	            0x7450	                            je 0x4008d41	      1221	eval.c	FUNCTION_30
0x4008cf1	            0xeb49	                           jmp 0x4008d3c	      1221	eval.c	FUNCTION_30
0x4008cf3	    0x832d00000000	               sub dword [0x04008cfa], 1	      1215	eval.c	FUNCTION_30
0x4008cfa	      0xbd00000000	                              mov ebp, 0	      1196	eval.c	FUNCTION_30	IF_2
0x4008cff	            0xebd0	                           jmp 0x4008cd1	      1196	eval.c	FUNCTION_30	IF_2
0x4008d01	    0x832d00000000	               sub dword [0x04008d08], 1	      1215	eval.c	FUNCTION_30
0x4008d08	      0xbd00000000	                              mov ebp, 0	      1196	eval.c	FUNCTION_30	IF_2
0x4008d0d	            0xebc9	                           jmp 0x4008cd8	      1196	eval.c	FUNCTION_30	IF_2
0x4008d0f	    0x830500000000	               add dword [0x04008d16], 1	      1193	eval.c	FUNCTION_30
0x4008d16	    0x41c704240000	                      mov dword [r12], 0	      1194	eval.c	FUNCTION_30
0x4008d1e	      0xb901000000	                              mov ecx, 1	      1195	eval.c	FUNCTION_30	IF_2	CALL_2
0x4008d23	      0xba00000000	                              mov edx, 0	      1195	eval.c	FUNCTION_30	IF_2	CALL_2
0x4008d28	          0x4889e6	                            mov rsi, rsp	      1195	eval.c	FUNCTION_30	IF_2	CALL_2
0x4008d2b	          0x4889ef	                            mov rdi, rbp	      1195	eval.c	FUNCTION_30	IF_2	CALL_2
0x4008d2e	      0xe800000000	                          call 0x4008d33	      1195	eval.c	FUNCTION_30	IF_2	CALL_2
0x4008d33	            0x85c0	                           test eax, eax	      1195	eval.c	FUNCTION_30	IF_2	CALL_2
0x4008d35	            0x74ca	                            je 0x4008d01	      1195	eval.c	FUNCTION_30	IF_2	CALL_2
0x4008d37	      0xe92effffff	                           jmp 0x4008c6a	      1195	eval.c	FUNCTION_30	IF_2	CALL_2
0x4008d3c	      0xe800000000	                          call 0x4008d41	      1221	eval.c	FUNCTION_30
0x4008d41	        0x4883c420	                           add rsp, 0x20	      1221	eval.c	FUNCTION_30
0x4008d45	              0x5b	                                 pop rbx	      1221	eval.c	FUNCTION_30
0x4008d46	              0x5d	                                 pop rbp	      1221	eval.c	FUNCTION_30
0x4008d47	            0x415c	                                 pop r12	      1221	eval.c	FUNCTION_30
0x4008d49	              0xc3	                                     ret	      1221	eval.c	FUNCTION_30
get_vim_var_str	FOR,0:SWITCH,0:DO,0:IF,0:functions,0:WHILE,0:CALL,1:ELSE,0	9
0x40039c4	        0x4883ec08	                              sub rsp, 8	      6404	eval.c	FUNCTION_104
0x40039c8	          0x4863ff	                         movsxd rdi, edi	      6405	eval.c	FUNCTION_104	CALL_1
0x40039cb	    0x488d04fd0000	                        lea rax, [rdi*8]	      6405	eval.c	FUNCTION_104	CALL_1
0x40039d3	        0x48c1e706	                              shl rdi, 6	      6405	eval.c	FUNCTION_104	CALL_1
0x40039d7	          0x4829c7	                            sub rdi, rax	      6405	eval.c	FUNCTION_104	CALL_1
0x40039da	    0x4881c7000000	                              add rdi, 0	      6405	eval.c	FUNCTION_104	CALL_1
0x40039e1	      0xe800000000	                          call 0x40039e6	      6405	eval.c	FUNCTION_104	CALL_1
0x40039e6	        0x4883c408	                              add rsp, 8	      6406	eval.c	FUNCTION_104
0x40039ea	              0xc3	                                     ret	      6406	eval.c	FUNCTION_104
var2fpos	FOR,0:SWITCH,0:DO,0:IF,18:functions,0:WHILE,0:CALL,13:ELSE,3	185
0x4003c42	              0x55	                                push rbp	      5905	eval.c	FUNCTION_93
0x4003c43	              0x53	                                push rbx	      5905	eval.c	FUNCTION_93
0x4003c44	        0x4883ec18	                           sub rsp, 0x18	      5905	eval.c	FUNCTION_93
0x4003c48	    0x64488b042528	                mov rax, qword fs:[0x28]	      5905	eval.c	FUNCTION_93
0x4003c51	      0x4889442408	                mov qword [rsp + 8], rax	      5905	eval.c	FUNCTION_93
0x4003c56	            0x31c0	                            xor eax, eax	      5905	eval.c	FUNCTION_93
0x4003c58	          0x833f05	                      cmp dword [rdi], 5	      5911	eval.c	FUNCTION_93	IF_1
0x4003c5b	     0xf8551010000	                           jne 0x4003db2	      5911	eval.c	FUNCTION_93	IF_1
0x4003c61	    0xc74424040000	                  mov dword [rsp + 4], 0	      5915	eval.c	FUNCTION_93	IF_1
0x4003c69	        0x488b5f08	                mov rbx, qword [rdi + 8]	      5918	eval.c	FUNCTION_93	IF_1
0x4003c6d	          0x4885db	                           test rbx, rbx	      5919	eval.c	FUNCTION_93	IF_1	IF_2
0x4003c70	     0xf84e4020000	                            je 0x4003f5a	      5919	eval.c	FUNCTION_93	IF_1	IF_2
0x4003c76	      0x488d542404	                      lea rdx, [rsp + 4]	      5923	eval.c	FUNCTION_93	IF_1	CALL_1
0x4003c7b	      0xbe00000000	                              mov esi, 0	      5923	eval.c	FUNCTION_93	IF_1	CALL_1
0x4003c80	          0x4889df	                            mov rdi, rbx	      5923	eval.c	FUNCTION_93	IF_1	CALL_1
0x4003c83	      0xe800000000	                          call 0x4003c88	      5923	eval.c	FUNCTION_93	IF_1	CALL_1
0x4003c88	          0x4889c2	                            mov rdx, rax	      5923	eval.c	FUNCTION_93	IF_1	CALL_1
0x4003c8b	    0x488905000000	            mov qword [0x04003c92], rax 	      5923	eval.c	FUNCTION_93	IF_1	CALL_1
0x4003c92	      0x837c240400	                  cmp dword [rsp + 4], 0	      5924	eval.c	FUNCTION_93	IF_1	IF_3
0x4003c97	     0xf850b010000	                           jne 0x4003da8	      5924	eval.c	FUNCTION_93	IF_1	IF_3
0x4003c9d	          0x4885c0	                           test rax, rax	      5924	eval.c	FUNCTION_93	IF_1	IF_3
0x4003ca0	     0xf8e02010000	                           jle 0x4003da8	      5924	eval.c	FUNCTION_93	IF_1	IF_3
0x4003ca6	      0xb800000000	                              mov eax, 0	      5925	eval.c	FUNCTION_93	IF_1	IF_3
0x4003cab	    0x488b0d000000	            mov rcx, qword [0x04003cb2] 	      5924	eval.c	FUNCTION_93	IF_1	IF_3
0x4003cb2	          0x483b11	                    cmp rdx, qword [rcx]	      5924	eval.c	FUNCTION_93	IF_1	IF_3
0x4003cb5	     0xf8f9f020000	                            jg 0x4003f5a	      5924	eval.c	FUNCTION_93	IF_1	IF_3
0x4003cbb	      0x488d542404	                      lea rdx, [rsp + 4]	      5928	eval.c	FUNCTION_93	IF_1	CALL_2
0x4003cc0	      0xbe01000000	                              mov esi, 1	      5928	eval.c	FUNCTION_93	IF_1	CALL_2
0x4003cc5	          0x4889df	                            mov rdi, rbx	      5928	eval.c	FUNCTION_93	IF_1	CALL_2
0x4003cc8	      0xe800000000	                          call 0x4003ccd	      5928	eval.c	FUNCTION_93	IF_1	CALL_2
0x4003ccd	    0x890500000000	            mov dword [0x04003cd3], eax 	      5928	eval.c	FUNCTION_93	IF_1	CALL_2
0x4003cd3	      0xb800000000	                              mov eax, 0	      5930	eval.c	FUNCTION_93	IF_1	IF_4
0x4003cd8	      0x837c240400	                  cmp dword [rsp + 4], 0	      5929	eval.c	FUNCTION_93	IF_1	IF_4
0x4003cdd	     0xf8577020000	                           jne 0x4003f5a	      5929	eval.c	FUNCTION_93	IF_1	IF_4
0x4003ce3	    0x488b3d000000	            mov rdi, qword [0x04003cea] 	      5931	eval.c	FUNCTION_93	IF_1	CALL_4
0x4003cea	      0xe800000000	                          call 0x4003cef	      5931	eval.c	FUNCTION_93	IF_1	CALL_4
0x4003cef	          0x4889c7	                            mov rdi, rax	      5931	eval.c	FUNCTION_93	IF_1	CALL_4
0x4003cf2	      0xb800000000	                              mov eax, 0	      5931	eval.c	FUNCTION_93	IF_1	CALL_4
0x4003cf7	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      5931	eval.c	FUNCTION_93	IF_1	CALL_4
0x4003cfe	            0xf2ae	              repne scasb al, byte [rdi]	      5931	eval.c	FUNCTION_93	IF_1	CALL_4
0x4003d00	          0x48f7d1	                                 not rcx	      5931	eval.c	FUNCTION_93	IF_1	CALL_4
0x4003d03	        0x488d69ff	                      lea rbp, [rcx - 1]	      5931	eval.c	FUNCTION_93	IF_1	CALL_4
0x4003d07	      0xbe01000000	                              mov esi, 1	      5934	eval.c	FUNCTION_93	IF_1	CALL_5
0x4003d0c	          0x4889df	                            mov rdi, rbx	      5934	eval.c	FUNCTION_93	IF_1	CALL_5
0x4003d0f	      0xe800000000	                          call 0x4003d14	      5934	eval.c	FUNCTION_93	IF_1	CALL_5
0x4003d14	          0x4885c0	                           test rax, rax	      5935	eval.c	FUNCTION_93	IF_1	IF_5
0x4003d17	            0x7431	                            je 0x4003d4a	      5935	eval.c	FUNCTION_93	IF_1	IF_5
0x4003d19	        0x83781002	               cmp dword [rax + 0x10], 2	      5935	eval.c	FUNCTION_93	IF_1	IF_5
0x4003d1d	            0x752b	                           jne 0x4003d4a	      5935	eval.c	FUNCTION_93	IF_1	IF_5
0x4003d1f	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5936	eval.c	FUNCTION_93	IF_1	IF_5
0x4003d23	          0x4885c0	                           test rax, rax	      5936	eval.c	FUNCTION_93	IF_1	IF_5
0x4003d26	            0x7422	                            je 0x4003d4a	      5936	eval.c	FUNCTION_93	IF_1	IF_5
0x4003d28	          0x803824	                    cmp byte [rax], 0x24	      5937	eval.c	FUNCTION_93	IF_1	IF_5	CALL_6
0x4003d2b	            0x751d	                           jne 0x4003d4a	      5937	eval.c	FUNCTION_93	IF_1	IF_5	CALL_6
0x4003d2d	        0x80780100	                   cmp byte [rax + 1], 0	      5937	eval.c	FUNCTION_93	IF_1	IF_5	CALL_6
0x4003d31	            0x7517	                           jne 0x4003d4a	      5937	eval.c	FUNCTION_93	IF_1	IF_5	CALL_6
0x4003d33	          0x8d5501	                      lea edx, [rbp + 1]	      5938	eval.c	FUNCTION_93	IF_1	IF_5
0x4003d36	    0x891500000000	            mov dword [0x04003d3c], edx 	      5938	eval.c	FUNCTION_93	IF_1	IF_5
0x4003d3c	      0xb800000000	                              mov eax, 0	      5942	eval.c	FUNCTION_93	IF_1	IF_6
0x4003d41	            0x85d2	                           test edx, edx	      5941	eval.c	FUNCTION_93	IF_1	IF_6
0x4003d43	            0x7523	                           jne 0x4003d68	      5941	eval.c	FUNCTION_93	IF_1	IF_6
0x4003d45	      0xe910020000	                           jmp 0x4003f5a	      5941	eval.c	FUNCTION_93	IF_1	IF_6
0x4003d4a	    0x8b1500000000	            mov edx, dword [0x04003d50] 	      5941	eval.c	FUNCTION_93	IF_1	IF_6
0x4003d50	      0xb800000000	                              mov eax, 0	      5942	eval.c	FUNCTION_93	IF_1	IF_6
0x4003d55	            0x85d2	                           test edx, edx	      5941	eval.c	FUNCTION_93	IF_1	IF_6
0x4003d57	     0xf84fd010000	                            je 0x4003f5a	      5941	eval.c	FUNCTION_93	IF_1	IF_6
0x4003d5d	          0x8d4d01	                      lea ecx, [rbp + 1]	      5941	eval.c	FUNCTION_93	IF_1	IF_6
0x4003d60	            0x39ca	                            cmp edx, ecx	      5941	eval.c	FUNCTION_93	IF_1	IF_6
0x4003d62	     0xf8ff2010000	                            jg 0x4003f5a	      5941	eval.c	FUNCTION_93	IF_1	IF_6
0x4003d68	          0x83ea01	                              sub edx, 1	      5943	eval.c	FUNCTION_93	IF_1
0x4003d6b	    0x891500000000	            mov dword [0x04003d71], edx 	      5943	eval.c	FUNCTION_93	IF_1
0x4003d71	      0x488d542404	                      lea rdx, [rsp + 4]	      5947	eval.c	FUNCTION_93	IF_1	CALL_7
0x4003d76	      0xbe02000000	                              mov esi, 2	      5947	eval.c	FUNCTION_93	IF_1	CALL_7
0x4003d7b	          0x4889df	                            mov rdi, rbx	      5947	eval.c	FUNCTION_93	IF_1	CALL_7
0x4003d7e	      0xe800000000	                          call 0x4003d83	      5947	eval.c	FUNCTION_93	IF_1	CALL_7
0x4003d83	    0x890500000000	            mov dword [0x04003d89], eax 	      5947	eval.c	FUNCTION_93	IF_1	CALL_7
0x4003d89	      0xb800000000	                              mov eax, 0	      5952	eval.c	FUNCTION_93	IF_1
0x4003d8e	      0x837c240400	                  cmp dword [rsp + 4], 0	      5948	eval.c	FUNCTION_93	IF_1	IF_7
0x4003d93	     0xf84c1010000	                            je 0x4003f5a	      5948	eval.c	FUNCTION_93	IF_1	IF_7
0x4003d99	    0xc70500000000	               mov dword [0x04003da3], 0	      5949	eval.c	FUNCTION_93	IF_1	IF_7
0x4003da3	      0xe9b2010000	                           jmp 0x4003f5a	      5949	eval.c	FUNCTION_93	IF_1	IF_7
0x4003da8	      0xb800000000	                              mov eax, 0	      5925	eval.c	FUNCTION_93	IF_1	IF_3
0x4003dad	      0xe9a8010000	                           jmp 0x4003f5a	      5925	eval.c	FUNCTION_93	IF_1	IF_3
0x4003db2	            0x89f3	                            mov ebx, esi	      5925	eval.c	FUNCTION_93	IF_1	IF_3
0x4003db4	          0x4889d5	                            mov rbp, rdx	      5925	eval.c	FUNCTION_93	IF_1	IF_3
0x4003db7	      0xe800000000	                          call 0x4003dbc	      5955	eval.c	FUNCTION_93	CALL_8
0x4003dbc	          0x4885c0	                           test rax, rax	      5956	eval.c	FUNCTION_93	IF_8
0x4003dbf	     0xf8489010000	                            je 0x4003f4e	      5956	eval.c	FUNCTION_93	IF_8
0x4003dc5	           0xfb610	                   movzx edx, byte [rax]	      5958	eval.c	FUNCTION_93	IF_9
0x4003dc8	          0x80fa2e	                            cmp dl, 0x2e	      5958	eval.c	FUNCTION_93	IF_9
0x4003dcb	            0x7510	                           jne 0x4003ddd	      5958	eval.c	FUNCTION_93	IF_9
0x4003dcd	    0x488b05000000	            mov rax, qword [0x04003dd4] 	      5959	eval.c	FUNCTION_93	IF_9
0x4003dd4	        0x4883c038	                           add rax, 0x38	      5959	eval.c	FUNCTION_93	IF_9
0x4003dd8	      0xe97d010000	                           jmp 0x4003f5a	      5959	eval.c	FUNCTION_93	IF_9
0x4003ddd	          0x80fa76	                            cmp dl, 0x76	      5960	eval.c	FUNCTION_93	IF_10
0x4003de0	            0x7528	                           jne 0x4003e0a	      5960	eval.c	FUNCTION_93	IF_10
0x4003de2	        0x80780100	                   cmp byte [rax + 1], 0	      5960	eval.c	FUNCTION_93	IF_10
0x4003de6	            0x755f	                           jne 0x4003e47	      5960	eval.c	FUNCTION_93	IF_10
0x4003de8	      0xb800000000	                              mov eax, 0	      5963	eval.c	FUNCTION_93	IF_10	IF_11
0x4003ded	    0x833d00000000	               cmp dword [0x04003df4], 0	      5962	eval.c	FUNCTION_93	IF_10	IF_11
0x4003df4	     0xf8560010000	                           jne 0x4003f5a	      5962	eval.c	FUNCTION_93	IF_10	IF_11
0x4003dfa	    0x488b05000000	            mov rax, qword [0x04003e01] 	      5964	eval.c	FUNCTION_93	IF_10
0x4003e01	        0x4883c038	                           add rax, 0x38	      5964	eval.c	FUNCTION_93	IF_10
0x4003e05	      0xe950010000	                           jmp 0x4003f5a	      5964	eval.c	FUNCTION_93	IF_10
0x4003e0a	          0x80fa27	                            cmp dl, 0x27	      5966	eval.c	FUNCTION_93	IF_12
0x4003e0d	            0x7538	                           jne 0x4003e47	      5966	eval.c	FUNCTION_93	IF_12
0x4003e0f	         0xfb67001	               movzx esi, byte [rax + 1]	      5968	eval.c	FUNCTION_93	IF_12	CALL_9
0x4003e13	          0x4889e9	                            mov rcx, rbp	      5968	eval.c	FUNCTION_93	IF_12	CALL_9
0x4003e16	      0xba00000000	                              mov edx, 0	      5968	eval.c	FUNCTION_93	IF_12	CALL_9
0x4003e1b	    0x488b3d000000	            mov rdi, qword [0x04003e22] 	      5968	eval.c	FUNCTION_93	IF_12	CALL_9
0x4003e22	      0xe800000000	                          call 0x4003e27	      5968	eval.c	FUNCTION_93	IF_12	CALL_9
0x4003e27	        0x488d50ff	                      lea rdx, [rax - 1]	      5969	eval.c	FUNCTION_93	IF_12	IF_13
0x4003e2b	        0x4883fafd	             cmp rdx, 0xfffffffffffffffd	      5969	eval.c	FUNCTION_93	IF_12	IF_13
0x4003e2f	     0xf8720010000	                            ja 0x4003f55	      5969	eval.c	FUNCTION_93	IF_12	IF_13
0x4003e35	        0x48833800	                      cmp qword [rax], 0	      5971	eval.c	FUNCTION_93	IF_12
0x4003e39	      0xba00000000	                              mov edx, 0	      5971	eval.c	FUNCTION_93	IF_12
0x4003e3e	        0x480f4ec2	                         cmovle rax, rdx	      5971	eval.c	FUNCTION_93	IF_12
0x4003e42	      0xe913010000	                           jmp 0x4003f5a	      5971	eval.c	FUNCTION_93	IF_12
0x4003e47	    0xc70500000000	               mov dword [0x04003e51], 0	      5975	eval.c	FUNCTION_93
0x4003e51	           0xfb610	                   movzx edx, byte [rax]	      5978	eval.c	FUNCTION_93	IF_14
0x4003e54	            0x85db	                           test ebx, ebx	      5978	eval.c	FUNCTION_93	IF_14
0x4003e56	     0xf8483000000	                            je 0x4003edf	      5978	eval.c	FUNCTION_93	IF_14
0x4003e5c	          0x80fa77	                            cmp dl, 0x77	      5978	eval.c	FUNCTION_93	IF_14
0x4003e5f	            0x757e	                           jne 0x4003edf	      5978	eval.c	FUNCTION_93	IF_14
0x4003e61	    0xc70500000000	               mov dword [0x04003e6b], 0	      5980	eval.c	FUNCTION_93	IF_14
0x4003e6b	         0xfb65001	               movzx edx, byte [rax + 1]	      5981	eval.c	FUNCTION_93	IF_14	IF_15
0x4003e6f	          0x80fa30	                            cmp dl, 0x30	      5981	eval.c	FUNCTION_93	IF_14	IF_15
0x4003e72	            0x752c	                           jne 0x4003ea0	      5981	eval.c	FUNCTION_93	IF_14	IF_15
0x4003e74	      0xe800000000	                          call 0x4003e79	      5983	eval.c	FUNCTION_93	IF_14	IF_15	CALL_10
0x4003e79	    0x488b15000000	            mov rdx, qword [0x04003e80] 	      5986	eval.c	FUNCTION_93	IF_14	IF_15
0x4003e80	      0x48837a7800	               cmp qword [rdx + 0x78], 0	      5986	eval.c	FUNCTION_93	IF_14	IF_15
0x4003e85	      0xb801000000	                              mov eax, 1	      5986	eval.c	FUNCTION_93	IF_14	IF_15
0x4003e8a	      0x480f4f4278	           cmovg rax, qword [rdx + 0x78]	      5986	eval.c	FUNCTION_93	IF_14	IF_15
0x4003e8f	    0x488905000000	            mov qword [0x04003e96], rax 	      5986	eval.c	FUNCTION_93	IF_14	IF_15
0x4003e96	      0xb800000000	                              mov eax, 0	      5987	eval.c	FUNCTION_93	IF_14	IF_15
0x4003e9b	      0xe9ba000000	                           jmp 0x4003f5a	      5987	eval.c	FUNCTION_93	IF_14	IF_15
0x4003ea0	      0xb800000000	                              mov eax, 0	      6011	eval.c	FUNCTION_93
0x4003ea5	          0x80fa24	                            cmp dl, 0x24	      5989	eval.c	FUNCTION_93	IF_14	ELSE_1	IF_16
0x4003ea8	     0xf85ac000000	                           jne 0x4003f5a	      5989	eval.c	FUNCTION_93	IF_14	ELSE_1	IF_16
0x4003eae	      0xe800000000	                          call 0x4003eb3	      5991	eval.c	FUNCTION_93	IF_14	ELSE_1	IF_16	CALL_11
0x4003eb3	    0x488b05000000	            mov rax, qword [0x04003eba] 	      5993	eval.c	FUNCTION_93	IF_14	ELSE_1	IF_16
0x4003eba	    0x488b90e80000	            mov rdx, qword [rax + 0xe8] 	      5993	eval.c	FUNCTION_93	IF_14	ELSE_1	IF_16
0x4003ec1	        0x488d42ff	                      lea rax, [rdx - 1]	      5993	eval.c	FUNCTION_93	IF_14	ELSE_1	IF_16
0x4003ec5	          0x4885d2	                           test rdx, rdx	      5993	eval.c	FUNCTION_93	IF_14	ELSE_1	IF_16
0x4003ec8	      0xba00000000	                              mov edx, 0	      5993	eval.c	FUNCTION_93	IF_14	ELSE_1	IF_16
0x4003ecd	        0x480f4ec2	                         cmovle rax, rdx	      5993	eval.c	FUNCTION_93	IF_14	ELSE_1	IF_16
0x4003ed1	    0x488905000000	            mov qword [0x04003ed8], rax 	      5993	eval.c	FUNCTION_93	IF_14	ELSE_1	IF_16
0x4003ed8	      0xb800000000	                              mov eax, 0	      5994	eval.c	FUNCTION_93	IF_14	ELSE_1	IF_16
0x4003edd	            0xeb7b	                           jmp 0x4003f5a	      5994	eval.c	FUNCTION_93	IF_14	ELSE_1	IF_16
0x4003edf	      0xb800000000	                              mov eax, 0	      6011	eval.c	FUNCTION_93
0x4003ee4	          0x80fa24	                            cmp dl, 0x24	      5997	eval.c	FUNCTION_93	ELSE_2	IF_17
0x4003ee7	            0x7571	                           jne 0x4003f5a	      5997	eval.c	FUNCTION_93	ELSE_2	IF_17
0x4003ee9	            0x85db	                           test ebx, ebx	      5999	eval.c	FUNCTION_93	ELSE_2	IF_17	IF_18
0x4003eeb	            0x7422	                            je 0x4003f0f	      5999	eval.c	FUNCTION_93	ELSE_2	IF_17	IF_18
0x4003eed	    0x488b05000000	            mov rax, qword [0x04003ef4] 	      6001	eval.c	FUNCTION_93	ELSE_2	IF_17	IF_18
0x4003ef4	          0x488b00	                    mov rax, qword [rax]	      6001	eval.c	FUNCTION_93	ELSE_2	IF_17	IF_18
0x4003ef7	    0x488905000000	            mov qword [0x04003efe], rax 	      6001	eval.c	FUNCTION_93	ELSE_2	IF_17	IF_18
0x4003efe	    0xc70500000000	               mov dword [0x04003f08], 0	      6002	eval.c	FUNCTION_93	ELSE_2	IF_17	IF_18
0x4003f08	      0xb800000000	                              mov eax, 0	      6009	eval.c	FUNCTION_93	ELSE_2	IF_17
0x4003f0d	            0xeb4b	                           jmp 0x4003f5a	      6009	eval.c	FUNCTION_93	ELSE_2	IF_17
0x4003f0f	    0x488b05000000	            mov rax, qword [0x04003f16] 	      6006	eval.c	FUNCTION_93	ELSE_2	IF_17	ELSE_3
0x4003f16	        0x488b4038	            mov rax, qword [rax + 0x38] 	      6006	eval.c	FUNCTION_93	ELSE_2	IF_17	ELSE_3
0x4003f1a	    0x488905000000	            mov qword [0x04003f21], rax 	      6006	eval.c	FUNCTION_93	ELSE_2	IF_17	ELSE_3
0x4003f21	      0xe800000000	                          call 0x4003f26	      6007	eval.c	FUNCTION_93	ELSE_2	IF_17	ELSE_3	CALL_13
0x4003f26	          0x4889c7	                            mov rdi, rax	      6007	eval.c	FUNCTION_93	ELSE_2	IF_17	ELSE_3	CALL_13
0x4003f29	      0xb800000000	                              mov eax, 0	      6007	eval.c	FUNCTION_93	ELSE_2	IF_17	ELSE_3	CALL_13
0x4003f2e	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      6007	eval.c	FUNCTION_93	ELSE_2	IF_17	ELSE_3	CALL_13
0x4003f35	            0xf2ae	              repne scasb al, byte [rdi]	      6007	eval.c	FUNCTION_93	ELSE_2	IF_17	ELSE_3	CALL_13
0x4003f37	          0x4889c8	                            mov rax, rcx	      6007	eval.c	FUNCTION_93	ELSE_2	IF_17	ELSE_3	CALL_13
0x4003f3a	          0x48f7d0	                                 not rax	      6007	eval.c	FUNCTION_93	ELSE_2	IF_17	ELSE_3	CALL_13
0x4003f3d	        0x4883e801	                              sub rax, 1	      6007	eval.c	FUNCTION_93	ELSE_2	IF_17	ELSE_3	CALL_13
0x4003f41	    0x890500000000	            mov dword [0x04003f47], eax 	      6007	eval.c	FUNCTION_93	ELSE_2	IF_17	ELSE_3	CALL_13
0x4003f47	      0xb800000000	                              mov eax, 0	      6009	eval.c	FUNCTION_93	ELSE_2	IF_17
0x4003f4c	            0xeb0c	                           jmp 0x4003f5a	      6009	eval.c	FUNCTION_93	ELSE_2	IF_17
0x4003f4e	      0xb800000000	                              mov eax, 0	      5957	eval.c	FUNCTION_93	IF_8
0x4003f53	            0xeb05	                           jmp 0x4003f5a	      5957	eval.c	FUNCTION_93	IF_8
0x4003f55	      0xb800000000	                              mov eax, 0	      5970	eval.c	FUNCTION_93	IF_12	IF_13
0x4003f5a	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      6012	eval.c	FUNCTION_93
0x4003f5f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      6012	eval.c	FUNCTION_93
0x4003f68	            0x7405	                            je 0x4003f6f	      6012	eval.c	FUNCTION_93
0x4003f6a	      0xe800000000	                          call 0x4003f6f	      6012	eval.c	FUNCTION_93
0x4003f6f	        0x4883c418	                           add rsp, 0x18	      6012	eval.c	FUNCTION_93
0x4003f73	              0x5b	                                 pop rbx	      6012	eval.c	FUNCTION_93
0x4003f74	              0x5d	                                 pop rbp	      6012	eval.c	FUNCTION_93
0x4003f75	              0xc3	                                     ret	      6012	eval.c	FUNCTION_93
setwinvar	FOR,0:SWITCH,0:DO,0:IF,8:functions,0:WHILE,0:CALL,17:ELSE,2	118
0x4005b92	            0x4156	                                push r14	      8361	eval.c	FUNCTION_158
0x4005b94	            0x4155	                                push r13	      8361	eval.c	FUNCTION_158
0x4005b96	            0x4154	                                push r12	      8361	eval.c	FUNCTION_158
0x4005b98	              0x55	                                push rbp	      8361	eval.c	FUNCTION_158
0x4005b99	              0x53	                                push rbx	      8361	eval.c	FUNCTION_158
0x4005b9a	        0x4883ec70	                           sub rsp, 0x70	      8361	eval.c	FUNCTION_158
0x4005b9e	          0x4889fd	                            mov rbp, rdi	      8361	eval.c	FUNCTION_158
0x4005ba1	            0x89d3	                            mov ebx, edx	      8361	eval.c	FUNCTION_158
0x4005ba3	    0x64488b042528	                mov rax, qword fs:[0x28]	      8361	eval.c	FUNCTION_158
0x4005bac	      0x4889442468	             mov qword [rsp + 0x68], rax	      8361	eval.c	FUNCTION_158
0x4005bb1	            0x31c0	                            xor eax, eax	      8361	eval.c	FUNCTION_158
0x4005bb3	      0xe800000000	                          call 0x4005bb8	      8371	eval.c	FUNCTION_158	IF_1	CALL_2
0x4005bb8	            0x85c0	                           test eax, eax	      8371	eval.c	FUNCTION_158	IF_1	CALL_2
0x4005bba	     0xf8574010000	                           jne 0x4005d34	      8371	eval.c	FUNCTION_158	IF_1	CALL_2
0x4005bc0	      0xe800000000	                          call 0x4005bc5	      8371	eval.c	FUNCTION_158	IF_1	CALL_2
0x4005bc5	            0x85c0	                           test eax, eax	      8371	eval.c	FUNCTION_158	IF_1	CALL_2
0x4005bc7	     0xf8567010000	                           jne 0x4005d34	      8371	eval.c	FUNCTION_158	IF_1	CALL_2
0x4005bcd	    0x4c8b2d000000	            mov r13, qword [0x04005bd4] 	      8377	eval.c	FUNCTION_158	ELSE_1
0x4005bd4	          0x83fb01	                              cmp ebx, 1	      8374	eval.c	FUNCTION_158	IF_2
0x4005bd7	            0x7517	                           jne 0x4005bf0	      8374	eval.c	FUNCTION_158	IF_2
0x4005bd9	      0xbe00000000	                              mov esi, 0	      8375	eval.c	FUNCTION_158	CALL_4
0x4005bde	          0x4889ef	                            mov rdi, rbp	      8375	eval.c	FUNCTION_158	CALL_4
0x4005be1	      0xe800000000	                          call 0x4005be6	      8375	eval.c	FUNCTION_158	CALL_4
0x4005be6	            0x89c7	                            mov edi, eax	      8375	eval.c	FUNCTION_158	CALL_4
0x4005be8	      0xe800000000	                          call 0x4005bed	      8375	eval.c	FUNCTION_158	CALL_4
0x4005bed	          0x4989c5	                            mov r13, rax	      8375	eval.c	FUNCTION_158	CALL_4
0x4005bf0	          0x4863db	                         movsxd rbx, ebx	      8378	eval.c	FUNCTION_158	CALL_5
0x4005bf3	        0x48c1e304	                              shl rbx, 4	      8378	eval.c	FUNCTION_158	CALL_5
0x4005bf7	      0x488d7c1d00	                    lea rdi, [rbp + rbx]	      8378	eval.c	FUNCTION_158	CALL_5
0x4005bfc	          0x4c89ee	                            mov rsi, r13	      8378	eval.c	FUNCTION_158	CALL_5
0x4005bff	      0xe800000000	                          call 0x4005c04	      8378	eval.c	FUNCTION_158	CALL_5
0x4005c04	          0x4989c6	                            mov r14, rax	      8378	eval.c	FUNCTION_158	CALL_5
0x4005c07	      0x488d7c1d10	            lea rdi, [rbp + rbx + 0x10] 	      8379	eval.c	FUNCTION_158	CALL_6
0x4005c0c	      0xe800000000	                          call 0x4005c11	      8379	eval.c	FUNCTION_158	CALL_6
0x4005c11	          0x4989c4	                            mov r12, rax	      8379	eval.c	FUNCTION_158	CALL_6
0x4005c14	      0x488d5c1d20	            lea rbx, [rbp + rbx + 0x20] 	      8380	eval.c	FUNCTION_158
0x4005c19	          0x4d85f6	                           test r14, r14	      8382	eval.c	FUNCTION_158	IF_3
0x4005c1c	           0xf95c2	                                setne dl	      8382	eval.c	FUNCTION_158	IF_3
0x4005c1f	          0x4885c0	                           test rax, rax	      8382	eval.c	FUNCTION_158	IF_3
0x4005c22	           0xf95c0	                                setne al	      8382	eval.c	FUNCTION_158	IF_3
0x4005c25	            0x84c2	                             test dl, al	      8382	eval.c	FUNCTION_158	IF_3
0x4005c27	     0xf8407010000	                            je 0x4005d34	      8382	eval.c	FUNCTION_158	IF_3
0x4005c2d	          0x4885db	                           test rbx, rbx	      8382	eval.c	FUNCTION_158	IF_3
0x4005c30	     0xf84fe000000	                            je 0x4005d34	      8382	eval.c	FUNCTION_158	IF_3
0x4005c36	      0xbd01000000	                              mov ebp, 1	      8384	eval.c	FUNCTION_158	IF_3
0x4005c3b	    0x4c3b2d000000	            cmp r13, qword [0x04005c42] 	      8384	eval.c	FUNCTION_158	IF_3
0x4005c42	            0x7514	                           jne 0x4005c58	      8384	eval.c	FUNCTION_158	IF_3
0x4005c44	    0x488b05000000	            mov rax, qword [0x04005c4b] 	      8384	eval.c	FUNCTION_158	IF_3
0x4005c4b	          0x4939c6	                            cmp r14, rax	      8384	eval.c	FUNCTION_158	IF_3
0x4005c4e	        0x400f95c5	                               setne bpl	      8384	eval.c	FUNCTION_158	IF_3
0x4005c52	        0x400fb6ed	                          movzx ebp, bpl	      8384	eval.c	FUNCTION_158	IF_3
0x4005c56	            0x7424	                            je 0x4005c7c	      8385	eval.c	FUNCTION_158	IF_3	IF_4
0x4005c58	    0x41b801000000	                              mov r8d, 1	      8386	eval.c	FUNCTION_158	IF_3	IF_4	CALL_7
0x4005c5e	          0x4c89e9	                            mov rcx, r13	      8386	eval.c	FUNCTION_158	IF_3	IF_4	CALL_7
0x4005c61	          0x4c89f2	                            mov rdx, r14	      8386	eval.c	FUNCTION_158	IF_3	IF_4	CALL_7
0x4005c64	      0x488d742418	                   lea rsi, [rsp + 0x18]	      8386	eval.c	FUNCTION_158	IF_3	IF_4	CALL_7
0x4005c69	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      8386	eval.c	FUNCTION_158	IF_3	IF_4	CALL_7
0x4005c6e	      0xe800000000	                          call 0x4005c73	      8386	eval.c	FUNCTION_158	IF_3	IF_4	CALL_7
0x4005c73	          0x83f801	                              cmp eax, 1	      8386	eval.c	FUNCTION_158	IF_3	IF_4	CALL_7
0x4005c76	     0xf85a4000000	                           jne 0x4005d20	      8386	eval.c	FUNCTION_158	IF_3	IF_4	CALL_7
0x4005c7c	      0x41803c2426	                    cmp byte [r12], 0x26	      8388	eval.c	FUNCTION_158	IF_3	IF_4	IF_5
0x4005c81	            0x7548	                           jne 0x4005ccb	      8388	eval.c	FUNCTION_158	IF_3	IF_4	IF_5
0x4005c83	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      8392	eval.c	FUNCTION_158	IF_3	IF_4	IF_5
0x4005c8b	      0x488d74240c	                    lea rsi, [rsp + 0xc]	      8395	eval.c	FUNCTION_158	IF_3	IF_4	IF_5	CALL_8
0x4005c90	          0x4889df	                            mov rdi, rbx	      8395	eval.c	FUNCTION_158	IF_3	IF_4	IF_5	CALL_8
0x4005c93	      0xe800000000	                          call 0x4005c98	      8395	eval.c	FUNCTION_158	IF_3	IF_4	IF_5	CALL_8
0x4005c98	          0x4989c5	                            mov r13, rax	      8395	eval.c	FUNCTION_158	IF_3	IF_4	IF_5	CALL_8
0x4005c9b	      0x488d742420	                   lea rsi, [rsp + 0x20]	      8396	eval.c	FUNCTION_158	IF_3	IF_4	IF_5	CALL_9
0x4005ca0	          0x4889df	                            mov rdi, rbx	      8396	eval.c	FUNCTION_158	IF_3	IF_4	IF_5	CALL_9
0x4005ca3	      0xe800000000	                          call 0x4005ca8	      8396	eval.c	FUNCTION_158	IF_3	IF_4	IF_5	CALL_9
0x4005ca8	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      8397	eval.c	FUNCTION_158	IF_3	IF_4	IF_5	IF_6
0x4005cad	            0x756d	                           jne 0x4005d1c	      8397	eval.c	FUNCTION_158	IF_3	IF_4	IF_5	IF_6
0x4005caf	          0x4885c0	                           test rax, rax	      8397	eval.c	FUNCTION_158	IF_3	IF_4	IF_5	IF_6
0x4005cb2	            0x7468	                            je 0x4005d1c	      8397	eval.c	FUNCTION_158	IF_3	IF_4	IF_5	IF_6
0x4005cb4	      0x498d7c2401	                      lea rdi, [r12 + 1]	      8398	eval.c	FUNCTION_158	IF_3	IF_4	IF_5	CALL_10
0x4005cb9	      0xb904000000	                              mov ecx, 4	      8398	eval.c	FUNCTION_158	IF_3	IF_4	IF_5	CALL_10
0x4005cbe	          0x4889c2	                            mov rdx, rax	      8398	eval.c	FUNCTION_158	IF_3	IF_4	IF_5	CALL_10
0x4005cc1	          0x4c89ee	                            mov rsi, r13	      8398	eval.c	FUNCTION_158	IF_3	IF_4	IF_5	CALL_10
0x4005cc4	      0xe800000000	                          call 0x4005cc9	      8398	eval.c	FUNCTION_158	IF_3	IF_4	IF_5	CALL_10
0x4005cc9	            0xeb51	                           jmp 0x4005d1c	      8398	eval.c	FUNCTION_158	IF_3	IF_4	IF_5	CALL_10
0x4005ccb	      0xb800000000	                              mov eax, 0	      8402	eval.c	FUNCTION_158	IF_3	IF_4	ELSE_2	CALL_12
0x4005cd0	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      8402	eval.c	FUNCTION_158	IF_3	IF_4	ELSE_2	CALL_12
0x4005cd7	          0x4c89e7	                            mov rdi, r12	      8402	eval.c	FUNCTION_158	IF_3	IF_4	ELSE_2	CALL_12
0x4005cda	            0xf2ae	              repne scasb al, byte [rdi]	      8402	eval.c	FUNCTION_158	IF_3	IF_4	ELSE_2	CALL_12
0x4005cdc	          0x48f7d1	                                 not rcx	      8402	eval.c	FUNCTION_158	IF_3	IF_4	ELSE_2	CALL_12
0x4005cdf	          0x8d7902	                      lea edi, [rcx + 2]	      8402	eval.c	FUNCTION_158	IF_3	IF_4	ELSE_2	CALL_12
0x4005ce2	      0xe800000000	                          call 0x4005ce7	      8402	eval.c	FUNCTION_158	IF_3	IF_4	ELSE_2	CALL_12
0x4005ce7	          0x4989c5	                            mov r13, rax	      8402	eval.c	FUNCTION_158	IF_3	IF_4	ELSE_2	CALL_12
0x4005cea	          0x4885c0	                           test rax, rax	      8403	eval.c	FUNCTION_158	IF_3	IF_4	ELSE_2	IF_7
0x4005ced	            0x742d	                            je 0x4005d1c	      8403	eval.c	FUNCTION_158	IF_3	IF_4	ELSE_2	IF_7
0x4005cef	      0x66c700773a	                  mov word [rax], 0x3a77	       110	string3.h	FUNCTION_197	CALL_3
0x4005cf4	        0xc6400200	                   mov byte [rax + 2], 0	       110	string3.h	FUNCTION_197	CALL_3
0x4005cf8	        0x488d7802	                      lea rdi, [rax + 2]	       110	string3.h	FUNCTION_197	CALL_3
0x4005cfc	          0x4c89e6	                            mov rsi, r12	       110	string3.h	FUNCTION_197	CALL_3
0x4005cff	      0xe800000000	                          call 0x4005d04	       110	string3.h	FUNCTION_197	CALL_3
0x4005d04	      0xba01000000	                              mov edx, 1	      8407	eval.c	FUNCTION_158	IF_3	IF_4	ELSE_2	IF_7	CALL_15
0x4005d09	          0x4889de	                            mov rsi, rbx	      8407	eval.c	FUNCTION_158	IF_3	IF_4	ELSE_2	IF_7	CALL_15
0x4005d0c	          0x4c89ef	                            mov rdi, r13	      8407	eval.c	FUNCTION_158	IF_3	IF_4	ELSE_2	IF_7	CALL_15
0x4005d0f	      0xe800000000	                          call 0x4005d14	      8407	eval.c	FUNCTION_158	IF_3	IF_4	ELSE_2	IF_7	CALL_15
0x4005d14	          0x4c89ef	                            mov rdi, r13	      8408	eval.c	FUNCTION_158	IF_3	IF_4	ELSE_2	IF_7	CALL_16
0x4005d17	      0xe800000000	                          call 0x4005d1c	      8408	eval.c	FUNCTION_158	IF_3	IF_4	ELSE_2	IF_7	CALL_16
0x4005d1c	            0x85ed	                           test ebp, ebp	      8412	eval.c	FUNCTION_158	IF_3	IF_8
0x4005d1e	            0x7414	                            je 0x4005d34	      8412	eval.c	FUNCTION_158	IF_3	IF_8
0x4005d20	      0xba01000000	                              mov edx, 1	      8413	eval.c	FUNCTION_158	IF_3	CALL_17
0x4005d25	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      8413	eval.c	FUNCTION_158	IF_3	CALL_17
0x4005d2a	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      8413	eval.c	FUNCTION_158	IF_3	CALL_17
0x4005d2f	      0xe800000000	                          call 0x4005d34	      8413	eval.c	FUNCTION_158	IF_3	CALL_17
0x4005d34	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      8415	eval.c	FUNCTION_158
0x4005d39	    0x644833042528	                xor rax, qword fs:[0x28]	      8415	eval.c	FUNCTION_158
0x4005d42	            0x7405	                            je 0x4005d49	      8415	eval.c	FUNCTION_158
0x4005d44	      0xe800000000	                          call 0x4005d49	      8415	eval.c	FUNCTION_158
0x4005d49	        0x4883c470	                           add rsp, 0x70	      8415	eval.c	FUNCTION_158
0x4005d4d	              0x5b	                                 pop rbx	      8415	eval.c	FUNCTION_158
0x4005d4e	              0x5d	                                 pop rbp	      8415	eval.c	FUNCTION_158
0x4005d4f	            0x415c	                                 pop r12	      8415	eval.c	FUNCTION_158
0x4005d51	            0x415d	                                 pop r13	      8415	eval.c	FUNCTION_158
0x4005d53	            0x415e	                                 pop r14	      8415	eval.c	FUNCTION_158
0x4005d55	              0xc3	                                     ret	      8415	eval.c	FUNCTION_158
ex_lockvar	FOR,0:SWITCH,0:DO,0:IF,2:functions,0:WHILE,0:CALL,4:ELSE,1	35
0x400a8cf	              0x55	                                push rbp	      2730	eval.c	FUNCTION_53
0x400a8d0	              0x53	                                push rbx	      2730	eval.c	FUNCTION_53
0x400a8d1	        0x4883ec18	                           sub rsp, 0x18	      2730	eval.c	FUNCTION_53
0x400a8d5	          0x4889fb	                            mov rbx, rdi	      2730	eval.c	FUNCTION_53
0x400a8d8	    0x64488b042528	                mov rax, qword fs:[0x28]	      2730	eval.c	FUNCTION_53
0x400a8e1	      0x4889442408	                mov qword [rsp + 8], rax	      2730	eval.c	FUNCTION_53
0x400a8e6	            0x31c0	                            xor eax, eax	      2730	eval.c	FUNCTION_53
0x400a8e8	          0x488b07	                    mov rax, qword [rdi]	      2731	eval.c	FUNCTION_53
0x400a8eb	        0x48890424	                    mov qword [rsp], rax	      2731	eval.c	FUNCTION_53
0x400a8ef	      0xbdffffffff	                     mov ebp, 0xffffffff	      2735	eval.c	FUNCTION_53	IF_1
0x400a8f4	        0x837f3400	               cmp dword [rdi + 0x34], 0	      2734	eval.c	FUNCTION_53	IF_1
0x400a8f8	            0x7528	                           jne 0x400a922	      2734	eval.c	FUNCTION_53	IF_1
0x400a8fa	           0xfb638	                   movzx edi, byte [rax]	      2736	eval.c	FUNCTION_53	ELSE_1	IF_2	CALL_1
0x400a8fd	      0xe800000000	                          call 0x400a902	      2736	eval.c	FUNCTION_53	ELSE_1	IF_2	CALL_1
0x400a902	      0xbd02000000	                              mov ebp, 2	      2732	eval.c	FUNCTION_53
0x400a907	            0x85c0	                           test eax, eax	      2736	eval.c	FUNCTION_53	ELSE_1	IF_2	CALL_1
0x400a909	            0x7417	                            je 0x400a922	      2736	eval.c	FUNCTION_53	ELSE_1	IF_2	CALL_1
0x400a90b	          0x4889e7	                            mov rdi, rsp	      2738	eval.c	FUNCTION_53	ELSE_1	IF_2	CALL_2
0x400a90e	      0xe800000000	                          call 0x400a913	      2738	eval.c	FUNCTION_53	ELSE_1	IF_2	CALL_2
0x400a913	            0x89c5	                            mov ebp, eax	      2738	eval.c	FUNCTION_53	ELSE_1	IF_2	CALL_2
0x400a915	        0x488b3c24	                    mov rdi, qword [rsp]	      2739	eval.c	FUNCTION_53	ELSE_1	IF_2	CALL_3
0x400a919	      0xe800000000	                          call 0x400a91e	      2739	eval.c	FUNCTION_53	ELSE_1	IF_2	CALL_3
0x400a91e	        0x48890424	                    mov qword [rsp], rax	      2739	eval.c	FUNCTION_53	ELSE_1	IF_2	CALL_3
0x400a922	            0x89ea	                            mov edx, ebp	      2742	eval.c	FUNCTION_53	CALL_4
0x400a924	        0x488b3424	                    mov rsi, qword [rsp]	      2742	eval.c	FUNCTION_53	CALL_4
0x400a928	          0x4889df	                            mov rdi, rbx	      2742	eval.c	FUNCTION_53	CALL_4
0x400a92b	      0xe8a3fbffff	                   call sym.ex_unletlock	      2742	eval.c	FUNCTION_53	CALL_4
0x400a930	      0x488b442408	                mov rax, qword [rsp + 8]	      2743	eval.c	FUNCTION_53
0x400a935	    0x644833042528	                xor rax, qword fs:[0x28]	      2743	eval.c	FUNCTION_53
0x400a93e	            0x7405	                            je 0x400a945	      2743	eval.c	FUNCTION_53
0x400a940	      0xe800000000	                          call 0x400a945	      2743	eval.c	FUNCTION_53
0x400a945	        0x4883c418	                           add rsp, 0x18	      2743	eval.c	FUNCTION_53
0x400a949	              0x5b	                                 pop rbx	      2743	eval.c	FUNCTION_53
0x400a94a	              0x5d	                                 pop rbp	      2743	eval.c	FUNCTION_53
0x400a94b	              0xc3	                                     ret	      2743	eval.c	FUNCTION_53
filter_map	FOR,2:SWITCH,0:DO,0:IF,14:functions,0:WHILE,0:CALL,26:ELSE,3	209
0x400dd83	            0x4157	                                push r15	     10232	eval.c	FUNCTION_190
0x400dd85	            0x4156	                                push r14	     10232	eval.c	FUNCTION_190
0x400dd87	            0x4155	                                push r13	     10232	eval.c	FUNCTION_190
0x400dd89	            0x4154	                                push r12	     10232	eval.c	FUNCTION_190
0x400dd8b	              0x55	                                push rbp	     10232	eval.c	FUNCTION_190
0x400dd8c	              0x53	                                push rbx	     10232	eval.c	FUNCTION_190
0x400dd8d	        0x4883ec78	                           sub rsp, 0x78	     10232	eval.c	FUNCTION_190
0x400dd91	          0x4989ff	                            mov r15, rdi	     10232	eval.c	FUNCTION_190
0x400dd94	      0x4889742408	                mov qword [rsp + 8], rsi	     10232	eval.c	FUNCTION_190
0x400dd99	            0x89d3	                            mov ebx, edx	     10232	eval.c	FUNCTION_190
0x400dd9b	    0x64488b042528	                mov rax, qword fs:[0x28]	     10232	eval.c	FUNCTION_190
0x400dda4	      0x4889442468	             mov qword [rsp + 0x68], rax	     10232	eval.c	FUNCTION_190
0x400dda9	            0x31c0	                            xor eax, eax	     10232	eval.c	FUNCTION_190
0x400ddab	            0x85d2	                           test edx, edx	     10244	eval.c	FUNCTION_190
0x400ddad	      0xb800000000	                              mov eax, 0	     10244	eval.c	FUNCTION_190
0x400ddb2	      0xbd00000000	                              mov ebp, 0	     10244	eval.c	FUNCTION_190
0x400ddb7	        0x480f45e8	                         cmovne rbp, rax	     10244	eval.c	FUNCTION_190
0x400ddbb	      0xb800000000	                              mov eax, 0	     10244	eval.c	FUNCTION_190
0x400ddc0	    0x41be00000000	                             mov r14d, 0	     10244	eval.c	FUNCTION_190
0x400ddc6	        0x4c0f45f0	                         cmovne r14, rax	     10244	eval.c	FUNCTION_190
0x400ddca	            0x8b07	                    mov eax, dword [rdi]	     10250	eval.c	FUNCTION_190	IF_1
0x400ddcc	          0x83f805	                              cmp eax, 5	     10250	eval.c	FUNCTION_190	IF_1
0x400ddcf	            0x753a	                           jne 0x400de0b	     10250	eval.c	FUNCTION_190	IF_1
0x400ddd1	        0x488b4708	                mov rax, qword [rdi + 8]	     10252	eval.c	FUNCTION_190	IF_1	IF_2
0x400ddd5	      0x4889442410	             mov qword [rsp + 0x10], rax	     10252	eval.c	FUNCTION_190	IF_1	IF_2
0x400ddda	          0x4885c0	                           test rax, rax	     10252	eval.c	FUNCTION_190	IF_1	IF_2
0x400dddd	     0xf84d6020000	                            je 0x400e0b9	     10252	eval.c	FUNCTION_190	IF_1	IF_2
0x400dde3	      0xbd00000000	                              mov ebp, 0	     10239	eval.c	FUNCTION_190
0x400dde8	            0x85d2	                           test edx, edx	     10253	eval.c	FUNCTION_190	IF_1	IF_2	CALL_3
0x400ddea	     0xf8582000000	                           jne 0x400de72	     10253	eval.c	FUNCTION_190	IF_1	IF_2	CALL_3
0x400ddf0	         0xfbe7848	           movsx edi, byte [rax + 0x48] 	     10253	eval.c	FUNCTION_190	IF_1	IF_2	CALL_3
0x400ddf4	      0xba01000000	                              mov edx, 1	     10253	eval.c	FUNCTION_190	IF_1	IF_2	CALL_3
0x400ddf9	          0x4c89f6	                            mov rsi, r14	     10253	eval.c	FUNCTION_190	IF_1	IF_2	CALL_3
0x400ddfc	      0xe800000000	                          call 0x400de01	     10253	eval.c	FUNCTION_190	IF_1	IF_2	CALL_3
0x400de01	            0x85c0	                           test eax, eax	     10253	eval.c	FUNCTION_190	IF_1	IF_2	CALL_3
0x400de03	     0xf85b0020000	                           jne 0x400e0b9	     10253	eval.c	FUNCTION_190	IF_1	IF_2	CALL_3
0x400de09	            0xeb67	                           jmp 0x400de72	     10253	eval.c	FUNCTION_190	IF_1	IF_2	CALL_3
0x400de0b	          0x83f806	                              cmp eax, 6	     10256	eval.c	FUNCTION_190	ELSE_1	IF_3
0x400de0e	            0x753e	                           jne 0x400de4e	     10256	eval.c	FUNCTION_190	ELSE_1	IF_3
0x400de10	        0x488b6f08	                mov rbp, qword [rdi + 8]	     10258	eval.c	FUNCTION_190	ELSE_1	IF_3	IF_4
0x400de14	          0x4885ed	                           test rbp, rbp	     10258	eval.c	FUNCTION_190	ELSE_1	IF_3	IF_4
0x400de17	     0xf849c020000	                            je 0x400e0b9	     10258	eval.c	FUNCTION_190	ELSE_1	IF_3	IF_4
0x400de1d	    0x48c744241000	               mov qword [rsp + 0x10], 0	     10235	eval.c	FUNCTION_190
0x400de26	            0x85d2	                           test edx, edx	     10259	eval.c	FUNCTION_190	ELSE_1	IF_3	IF_4	CALL_4
0x400de28	            0x7548	                           jne 0x400de72	     10259	eval.c	FUNCTION_190	ELSE_1	IF_3	IF_4	CALL_4
0x400de2a	         0xfbe7d00	                   movsx edi, byte [rbp]	     10259	eval.c	FUNCTION_190	ELSE_1	IF_3	IF_4	CALL_4
0x400de2e	      0xba01000000	                              mov edx, 1	     10259	eval.c	FUNCTION_190	ELSE_1	IF_3	IF_4	CALL_4
0x400de33	          0x4c89f6	                            mov rsi, r14	     10259	eval.c	FUNCTION_190	ELSE_1	IF_3	IF_4	CALL_4
0x400de36	      0xe800000000	                          call 0x400de3b	     10259	eval.c	FUNCTION_190	ELSE_1	IF_3	IF_4	CALL_4
0x400de3b	            0x85c0	                           test eax, eax	     10259	eval.c	FUNCTION_190	ELSE_1	IF_3	IF_4	CALL_4
0x400de3d	     0xf8576020000	                           jne 0x400e0b9	     10259	eval.c	FUNCTION_190	ELSE_1	IF_3	IF_4	CALL_4
0x400de43	    0x48c744241000	               mov qword [rsp + 0x10], 0	     10235	eval.c	FUNCTION_190
0x400de4c	            0xeb24	                           jmp 0x400de72	     10235	eval.c	FUNCTION_190
0x400de4e	      0xba05000000	                              mov edx, 5	     10264	eval.c	FUNCTION_190	ELSE_2	CALL_6
0x400de53	      0xbe00000000	                              mov esi, 0	     10264	eval.c	FUNCTION_190	ELSE_2	CALL_6
0x400de58	      0xbf00000000	                              mov edi, 0	     10264	eval.c	FUNCTION_190	ELSE_2	CALL_6
0x400de5d	      0xe800000000	                          call 0x400de62	     10264	eval.c	FUNCTION_190	ELSE_2	CALL_6
0x400de62	          0x4889ee	                            mov rsi, rbp	     10264	eval.c	FUNCTION_190	ELSE_2	CALL_6
0x400de65	          0x4889c7	                            mov rdi, rax	     10264	eval.c	FUNCTION_190	ELSE_2	CALL_6
0x400de68	      0xe800000000	                          call 0x400de6d	     10264	eval.c	FUNCTION_190	ELSE_2	CALL_6
0x400de6d	      0xe947020000	                           jmp 0x400e0b9	     10265	eval.c	FUNCTION_190	ELSE_2
0x400de72	      0x41837f1000	               cmp dword [r15 + 0x10], 0	     10272	eval.c	FUNCTION_190	IF_5
0x400de77	     0xf842f020000	                            je 0x400e0ac	     10272	eval.c	FUNCTION_190	IF_5
0x400de7d	        0x498d4710	                   lea rax, [r15 + 0x10]	     10268	eval.c	FUNCTION_190
0x400de81	        0x48890424	                    mov qword [rsp], rax	     10268	eval.c	FUNCTION_190
0x400de85	      0x488d742440	                   lea rsi, [rsp + 0x40]	     10274	eval.c	FUNCTION_190	IF_5	CALL_7
0x400de8a	      0xbf22000000	                           mov edi, 0x22	     10274	eval.c	FUNCTION_190	IF_5	CALL_7
0x400de8f	      0xe87522ffff	                 call sym.prepare_vimvar	     10274	eval.c	FUNCTION_190	IF_5	CALL_7
0x400de94	    0x8b0500000000	            mov eax, dword [0x0400de9a] 	     10278	eval.c	FUNCTION_190	IF_5
0x400de9a	        0x89442424	             mov dword [rsp + 0x24], eax	     10278	eval.c	FUNCTION_190	IF_5
0x400de9e	    0xc70500000000	               mov dword [0x0400dea8], 0	     10279	eval.c	FUNCTION_190	IF_5
0x400dea8	      0x488d742450	                   lea rsi, [rsp + 0x50]	     10281	eval.c	FUNCTION_190	IF_5	CALL_8
0x400dead	      0xbf23000000	                           mov edi, 0x23	     10281	eval.c	FUNCTION_190	IF_5	CALL_8
0x400deb2	      0xe85222ffff	                 call sym.prepare_vimvar	     10281	eval.c	FUNCTION_190	IF_5	CALL_8
0x400deb7	        0x41833f06	                      cmp dword [r15], 6	     10282	eval.c	FUNCTION_190	IF_5	IF_6
0x400debb	     0xf8538010000	                           jne 0x400dff9	     10282	eval.c	FUNCTION_190	IF_5	IF_6
0x400dec1	    0xc70500000000	               mov dword [0x0400decb], 2	     10284	eval.c	FUNCTION_190	IF_5	IF_6
0x400decb	        0x488d4510	                   lea rax, [rbp + 0x10]	     10286	eval.c	FUNCTION_190	IF_5	IF_6
0x400decf	      0x4889442428	             mov qword [rsp + 0x28], rax	     10286	eval.c	FUNCTION_190	IF_5	IF_6
0x400ded4	          0x4889c7	                            mov rdi, rax	     10287	eval.c	FUNCTION_190	IF_5	IF_6	CALL_9
0x400ded7	      0xe800000000	                          call 0x400dedc	     10287	eval.c	FUNCTION_190	IF_5	IF_6	CALL_9
0x400dedc	        0x488b4518	            mov rax, qword [rbp + 0x18] 	     10288	eval.c	FUNCTION_190	IF_5	IF_6
0x400dee0	        0x89442410	             mov dword [rsp + 0x10], eax	     10288	eval.c	FUNCTION_190	IF_5	IF_6
0x400dee4	        0x4c8b6d30	            mov r13, qword [rbp + 0x30] 	     10289	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1
0x400dee8	            0x85c0	                           test eax, eax	     10289	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1
0x400deea	     0xf8efa000000	                           jle 0x400dfea	     10289	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1
0x400def0	        0x4d8b6508	                mov r12, qword [r13 + 8]	     10291	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	CALL_10
0x400def4	    0x4981fc000000	                              cmp r12, 0	     10291	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	CALL_10
0x400defb	     0xf84da000000	                            je 0x400dfdb	     10291	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	CALL_10
0x400df01	          0x4d85e4	                           test r12, r12	     10291	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	CALL_10
0x400df04	     0xf84d1000000	                            je 0x400dfdb	     10291	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	CALL_10
0x400df0a	      0x836c241001	               sub dword [rsp + 0x10], 1	     10295	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7
0x400df0f	            0x85db	                           test ebx, ebx	     10297	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_8
0x400df11	            0x7436	                            je 0x400df49	     10297	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_8
0x400df13	    0x410fbe7c24f3	             movsx edi, byte [r12 - 0xd]	     10298	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_8	CALL_12
0x400df19	      0xba01000000	                              mov edx, 1	     10298	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_8	CALL_12
0x400df1e	          0x4c89f6	                            mov rsi, r14	     10298	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_8	CALL_12
0x400df21	      0xe800000000	                          call 0x400df26	     10298	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_8	CALL_12
0x400df26	            0x85c0	                           test eax, eax	     10297	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_8
0x400df28	     0xf85bc000000	                           jne 0x400dfea	     10297	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_8
0x400df2e	    0x410fb67c24ff	               movzx edi, byte [r12 - 1]	     10299	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_8	CALL_13
0x400df34	      0xba01000000	                              mov edx, 1	     10299	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_8	CALL_13
0x400df39	          0x4c89f6	                            mov rsi, r14	     10299	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_8	CALL_13
0x400df3c	      0xe800000000	                          call 0x400df41	     10299	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_8	CALL_13
0x400df41	            0x85c0	                           test eax, eax	     10299	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_8	CALL_13
0x400df43	     0xf85a1000000	                           jne 0x400dfea	     10299	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_8	CALL_13
0x400df49	      0x498d4424ef	                   lea rax, [r12 - 0x11]	     10301	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	CALL_14
0x400df4e	      0x4889442418	             mov qword [rsp + 0x18], rax	     10301	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	CALL_14
0x400df53	          0x4c89e7	                            mov rdi, r12	     10301	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	CALL_14
0x400df56	      0xe800000000	                          call 0x400df5b	     10301	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	CALL_14
0x400df5b	    0x488905000000	            mov qword [0x0400df62], rax 	     10301	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	CALL_14
0x400df62	      0x488d4c243c	                   lea rcx, [rsp + 0x3c]	     10302	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	CALL_15
0x400df67	            0x89da	                            mov edx, ebx	     10302	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	CALL_15
0x400df69	        0x488b3424	                    mov rsi, qword [rsp]	     10302	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	CALL_15
0x400df6d	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	     10302	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	CALL_15
0x400df72	      0xe87a9dffff	                 call sym.filter_map_one	     10302	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	CALL_15
0x400df77	        0x89442418	             mov dword [rsp + 0x18], eax	     10302	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	CALL_15
0x400df7b	      0xbf00000000	                              mov edi, 0	     10303	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	CALL_16
0x400df80	      0xe800000000	                          call 0x400df85	     10303	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	CALL_16
0x400df85	      0x837c241800	               cmp dword [rsp + 0x18], 0	     10304	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_9
0x400df8a	            0x745e	                            je 0x400dfea	     10304	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_9
0x400df8c	    0x833d00000000	               cmp dword [0x0400df93], 0	     10304	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_9
0x400df93	            0x7555	                           jne 0x400dfea	     10304	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_9
0x400df95	            0x85db	                           test ebx, ebx	     10306	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_10
0x400df97	            0x7542	                           jne 0x400dfdb	     10306	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_10
0x400df99	      0x837c243c00	               cmp dword [rsp + 0x3c], 0	     10306	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_10
0x400df9e	            0x743b	                            je 0x400dfdb	     10306	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_10
0x400dfa0	    0x410fb67c24ff	               movzx edi, byte [r12 - 1]	     10308	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_10	IF_11	CALL_17
0x400dfa6	      0xba01000000	                              mov edx, 1	     10308	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_10	IF_11	CALL_17
0x400dfab	          0x4c89f6	                            mov rsi, r14	     10308	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_10	IF_11	CALL_17
0x400dfae	      0xe800000000	                          call 0x400dfb3	     10308	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_10	IF_11	CALL_17
0x400dfb3	            0x85c0	                           test eax, eax	     10308	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_10	IF_11	CALL_17
0x400dfb5	            0x7533	                           jne 0x400dfea	     10308	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_10	IF_11	CALL_17
0x400dfb7	    0x410fb67c24ff	               movzx edi, byte [r12 - 1]	     10309	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_10	IF_11	CALL_18
0x400dfbd	      0xba01000000	                              mov edx, 1	     10309	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_10	IF_11	CALL_18
0x400dfc2	          0x4c89f6	                            mov rsi, r14	     10309	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_10	IF_11	CALL_18
0x400dfc5	      0xe800000000	                          call 0x400dfca	     10309	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_10	IF_11	CALL_18
0x400dfca	            0x85c0	                           test eax, eax	     10309	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_10	IF_11	CALL_18
0x400dfcc	            0x751c	                           jne 0x400dfea	     10309	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_10	IF_11	CALL_18
0x400dfce	      0x498d7424ef	                   lea rsi, [r12 - 0x11]	     10311	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_10	CALL_19
0x400dfd3	          0x4889ef	                            mov rdi, rbp	     10311	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_10	CALL_19
0x400dfd6	      0xe800000000	                          call 0x400dfdb	     10311	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_10	CALL_19
0x400dfdb	        0x4983c510	                           add r13, 0x10	     10289	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1
0x400dfdf	      0x837c241000	               cmp dword [rsp + 0x10], 0	     10289	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1
0x400dfe4	     0xf8f06ffffff	                            jg 0x400def0	     10289	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1
0x400dfea	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	     10315	eval.c	FUNCTION_190	IF_5	IF_6	CALL_20
0x400dfef	      0xe800000000	                          call 0x400dff4	     10315	eval.c	FUNCTION_190	IF_5	IF_6	CALL_20
0x400dff4	      0xe98b000000	                           jmp 0x400e084	     10315	eval.c	FUNCTION_190	IF_5	IF_6	CALL_20
0x400dff9	    0xc70500000000	               mov dword [0x0400e003], 1	     10319	eval.c	FUNCTION_190	IF_5	ELSE_3
0x400e003	      0x488b442410	            mov rax, qword [rsp + 0x10] 	     10321	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2
0x400e008	          0x488b28	                    mov rbp, qword [rax]	     10321	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2
0x400e00b	          0x4885ed	                           test rbp, rbp	     10321	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2
0x400e00e	            0x7474	                            je 0x400e084	     10321	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2
0x400e010	    0x41bc00000000	                             mov r12d, 0	     10321	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2
0x400e016	            0xeb03	                           jmp 0x400e01b	     10321	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2
0x400e018	          0x4c89ed	                            mov rbp, r13	     10321	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2
0x400e01b	            0x85db	                           test ebx, ebx	     10323	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_12	CALL_21
0x400e01d	            0x7415	                            je 0x400e034	     10323	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_12	CALL_21
0x400e01f	         0xfbe7d14	           movsx edi, byte [rbp + 0x14] 	     10323	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_12	CALL_21
0x400e023	      0xba01000000	                              mov edx, 1	     10323	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_12	CALL_21
0x400e028	          0x4c89f6	                            mov rsi, r14	     10323	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_12	CALL_21
0x400e02b	      0xe800000000	                          call 0x400e030	     10323	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_12	CALL_21
0x400e030	            0x85c0	                           test eax, eax	     10323	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_12	CALL_21
0x400e032	            0x7550	                           jne 0x400e084	     10323	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_12	CALL_21
0x400e034	        0x4c8b6d00	                    mov r13, qword [rbp]	     10325	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2
0x400e038	          0x4963c4	                        movsxd rax, r12d	     10326	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2
0x400e03b	    0x488905000000	            mov qword [0x0400e042], rax 	     10326	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2
0x400e042	        0x488d7d10	                   lea rdi, [rbp + 0x10]	     10327	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_13	CALL_22
0x400e046	      0x488d4c243c	                   lea rcx, [rsp + 0x3c]	     10327	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_13	CALL_22
0x400e04b	            0x89da	                            mov edx, ebx	     10327	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_13	CALL_22
0x400e04d	        0x488b3424	                    mov rsi, qword [rsp]	     10327	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_13	CALL_22
0x400e051	      0xe89b9cffff	                 call sym.filter_map_one	     10327	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_13	CALL_22
0x400e056	            0x85c0	                           test eax, eax	     10327	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_13	CALL_22
0x400e058	            0x742a	                            je 0x400e084	     10327	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_13	CALL_22
0x400e05a	    0x833d00000000	               cmp dword [0x0400e061], 0	     10328	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_13
0x400e061	            0x7521	                           jne 0x400e084	     10328	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_13
0x400e063	            0x85db	                           test ebx, ebx	     10330	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_14
0x400e065	            0x7514	                           jne 0x400e07b	     10330	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_14
0x400e067	      0x837c243c00	               cmp dword [rsp + 0x3c], 0	     10330	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_14
0x400e06c	            0x740d	                            je 0x400e07b	     10330	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_14
0x400e06e	          0x4889ee	                            mov rsi, rbp	     10331	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	CALL_23
0x400e071	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	     10331	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	CALL_23
0x400e076	      0xe800000000	                          call 0x400e07b	     10331	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	CALL_23
0x400e07b	        0x4183c401	                             add r12d, 1	     10332	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2
0x400e07f	          0x4d85ed	                           test r13, r13	     10321	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2
0x400e082	            0x7594	                           jne 0x400e018	     10321	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2
0x400e084	      0x488d742450	                   lea rsi, [rsp + 0x50]	     10336	eval.c	FUNCTION_190	IF_5	CALL_24
0x400e089	      0xbf23000000	                           mov edi, 0x23	     10336	eval.c	FUNCTION_190	IF_5	CALL_24
0x400e08e	      0xe83022ffff	                 call sym.restore_vimvar	     10336	eval.c	FUNCTION_190	IF_5	CALL_24
0x400e093	      0x488d742440	                   lea rsi, [rsp + 0x40]	     10337	eval.c	FUNCTION_190	IF_5	CALL_25
0x400e098	      0xbf22000000	                           mov edi, 0x22	     10337	eval.c	FUNCTION_190	IF_5	CALL_25
0x400e09d	      0xe82122ffff	                 call sym.restore_vimvar	     10337	eval.c	FUNCTION_190	IF_5	CALL_25
0x400e0a2	        0x8b442424	            mov eax, dword [rsp + 0x24] 	     10339	eval.c	FUNCTION_190	IF_5
0x400e0a6	     0x90500000000	              or dword [0x0400e0ac], eax	     10339	eval.c	FUNCTION_190	IF_5
0x400e0ac	      0x488b742408	                mov rsi, qword [rsp + 8]	     10342	eval.c	FUNCTION_190	CALL_26
0x400e0b1	          0x4c89ff	                            mov rdi, r15	     10342	eval.c	FUNCTION_190	CALL_26
0x400e0b4	      0xe800000000	                          call 0x400e0b9	     10342	eval.c	FUNCTION_190	CALL_26
0x400e0b9	      0x488b442468	            mov rax, qword [rsp + 0x68] 	     10343	eval.c	FUNCTION_190
0x400e0be	    0x644833042528	                xor rax, qword fs:[0x28]	     10343	eval.c	FUNCTION_190
0x400e0c7	            0x7405	                            je 0x400e0ce	     10343	eval.c	FUNCTION_190
0x400e0c9	      0xe800000000	                          call 0x400e0ce	     10343	eval.c	FUNCTION_190
0x400e0ce	        0x4883c478	                           add rsp, 0x78	     10343	eval.c	FUNCTION_190
0x400e0d2	              0x5b	                                 pop rbx	     10343	eval.c	FUNCTION_190
0x400e0d3	              0x5d	                                 pop rbp	     10343	eval.c	FUNCTION_190
0x400e0d4	            0x415c	                                 pop r12	     10343	eval.c	FUNCTION_190
0x400e0d6	            0x415d	                                 pop r13	     10343	eval.c	FUNCTION_190
0x400e0d8	            0x415e	                                 pop r14	     10343	eval.c	FUNCTION_190
0x400e0da	            0x415f	                                 pop r15	     10343	eval.c	FUNCTION_190
0x400e0dc	              0xc3	                                     ret	     10343	eval.c	FUNCTION_190
eval_printexpr	FOR,0:SWITCH,0:DO,0:IF,2:functions,0:WHILE,0:CALL,6:ELSE,0	47
0x4008229	              0x55	                                push rbp	       606	eval.c	FUNCTION_10
0x400822a	              0x53	                                push rbx	       606	eval.c	FUNCTION_10
0x400822b	        0x4883ec18	                           sub rsp, 0x18	       606	eval.c	FUNCTION_10
0x400822f	          0x4889fb	                            mov rbx, rdi	       606	eval.c	FUNCTION_10
0x4008232	          0x4889f5	                            mov rbp, rsi	       606	eval.c	FUNCTION_10
0x4008235	    0x64488b042528	                mov rax, qword fs:[0x28]	       606	eval.c	FUNCTION_10
0x400823e	      0x4889442408	                mov qword [rsp + 8], rax	       606	eval.c	FUNCTION_10
0x4008243	            0x31c0	                            xor eax, eax	       606	eval.c	FUNCTION_10
0x4008245	    0xc74424040000	                  mov dword [rsp + 4], 0	       607	eval.c	FUNCTION_10
0x400824d	      0xbaffffffff	                     mov edx, 0xffffffff	       609	eval.c	FUNCTION_10	CALL_1
0x4008252	          0x4889fe	                            mov rsi, rdi	       609	eval.c	FUNCTION_10	CALL_1
0x4008255	      0xbf11000000	                           mov edi, 0x11	       609	eval.c	FUNCTION_10	CALL_1
0x400825a	      0xe800000000	                          call 0x400825f	       609	eval.c	FUNCTION_10	CALL_1
0x400825f	      0xbaffffffff	                     mov edx, 0xffffffff	       610	eval.c	FUNCTION_10	CALL_2
0x4008264	          0x4889ee	                            mov rsi, rbp	       610	eval.c	FUNCTION_10	CALL_2
0x4008267	      0xbf15000000	                           mov edi, 0x15	       610	eval.c	FUNCTION_10	CALL_2
0x400826c	      0xe800000000	                          call 0x4008271	       610	eval.c	FUNCTION_10	CALL_2
0x4008271	      0xb900000000	                              mov ecx, 0	       611	eval.c	FUNCTION_10	IF_1	CALL_3
0x4008276	      0xba00000000	                              mov edx, 0	       611	eval.c	FUNCTION_10	IF_1	CALL_3
0x400827b	      0x488d742404	                      lea rsi, [rsp + 4]	       611	eval.c	FUNCTION_10	IF_1	CALL_3
0x4008280	    0x488b3d000000	            mov rdi, qword [0x04008287] 	       611	eval.c	FUNCTION_10	IF_1	CALL_3
0x4008287	      0xe800000000	                          call 0x400828c	       611	eval.c	FUNCTION_10	IF_1	CALL_3
0x400828c	            0x85c0	                           test eax, eax	       611	eval.c	FUNCTION_10	IF_1	CALL_3
0x400828e	            0x7408	                            je 0x4008298	       611	eval.c	FUNCTION_10	IF_1	CALL_3
0x4008290	    0xc74424040100	                  mov dword [rsp + 4], 1	       612	eval.c	FUNCTION_10	IF_1
0x4008298	      0xbaffffffff	                     mov edx, 0xffffffff	       613	eval.c	FUNCTION_10	CALL_4
0x400829d	      0xbe00000000	                              mov esi, 0	       613	eval.c	FUNCTION_10	CALL_4
0x40082a2	      0xbf11000000	                           mov edi, 0x11	       613	eval.c	FUNCTION_10	CALL_4
0x40082a7	      0xe800000000	                          call 0x40082ac	       613	eval.c	FUNCTION_10	CALL_4
0x40082ac	      0xbaffffffff	                     mov edx, 0xffffffff	       614	eval.c	FUNCTION_10	CALL_5
0x40082b1	      0xbe00000000	                              mov esi, 0	       614	eval.c	FUNCTION_10	CALL_5
0x40082b6	      0xbf15000000	                           mov edi, 0x15	       614	eval.c	FUNCTION_10	CALL_5
0x40082bb	      0xe800000000	                          call 0x40082c0	       614	eval.c	FUNCTION_10	CALL_5
0x40082c0	      0xb801000000	                              mov eax, 1	       621	eval.c	FUNCTION_10
0x40082c5	      0x837c240400	                  cmp dword [rsp + 4], 0	       616	eval.c	FUNCTION_10	IF_2
0x40082ca	            0x740d	                            je 0x40082d9	       616	eval.c	FUNCTION_10	IF_2
0x40082cc	          0x4889df	                            mov rdi, rbx	       618	eval.c	FUNCTION_10	IF_2	CALL_6
0x40082cf	      0xe800000000	                          call 0x40082d4	       618	eval.c	FUNCTION_10	IF_2	CALL_6
0x40082d4	      0xb800000000	                              mov eax, 0	       619	eval.c	FUNCTION_10	IF_2
0x40082d9	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       622	eval.c	FUNCTION_10
0x40082de	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       622	eval.c	FUNCTION_10
0x40082e7	            0x7405	                            je 0x40082ee	       622	eval.c	FUNCTION_10
0x40082e9	      0xe800000000	                          call 0x40082ee	       622	eval.c	FUNCTION_10
0x40082ee	        0x4883c418	                           add rsp, 0x18	       622	eval.c	FUNCTION_10
0x40082f2	              0x5b	                                 pop rbx	       622	eval.c	FUNCTION_10
0x40082f3	              0x5d	                                 pop rbp	       622	eval.c	FUNCTION_10
0x40082f4	              0xc3	                                     ret	       622	eval.c	FUNCTION_10
get_copyID	FOR,0:SWITCH,0:DO,0:IF,0:functions,0:WHILE,0:CALL,0:ELSE,0	4
0x4000ebe	    0x8b0500000000	            mov eax, dword [0x04000ec4] 	      5053	eval.c	FUNCTION_80
0x4000ec4	          0x83c002	                              add eax, 2	      5053	eval.c	FUNCTION_80
0x4000ec7	    0x890500000000	            mov dword [0x04000ecd], eax 	      5053	eval.c	FUNCTION_80
0x4000ecd	              0xc3	                                     ret	      5055	eval.c	FUNCTION_80
prepare_assert_error	FOR,0:SWITCH,0:DO,0:IF,4:functions,0:WHILE,0:CALL,6:ELSE,0	55
0x40062c5	              0x53	                                push rbx	      8785	eval.c	FUNCTION_168
0x40062c6	        0x4883ec50	                           sub rsp, 0x50	      8785	eval.c	FUNCTION_168
0x40062ca	          0x4889fb	                            mov rbx, rdi	      8785	eval.c	FUNCTION_168
0x40062cd	    0x64488b042528	                mov rax, qword fs:[0x28]	      8785	eval.c	FUNCTION_168
0x40062d6	      0x4889442448	             mov qword [rsp + 0x48], rax	      8785	eval.c	FUNCTION_168
0x40062db	            0x31c0	                            xor eax, eax	      8785	eval.c	FUNCTION_168
0x40062dd	      0xba64000000	                           mov edx, 0x64	      8788	eval.c	FUNCTION_168	CALL_1
0x40062e2	      0xbe01000000	                              mov esi, 1	      8788	eval.c	FUNCTION_168	CALL_1
0x40062e7	      0xe800000000	                          call 0x40062ec	      8788	eval.c	FUNCTION_168	CALL_1
0x40062ec	    0x488b35000000	            mov rsi, qword [0x040062f3] 	      8789	eval.c	FUNCTION_168	IF_1
0x40062f3	          0x4885f6	                           test rsi, rsi	      8789	eval.c	FUNCTION_168	IF_1
0x40062f6	     0xf8481000000	                            je 0x400637d	      8789	eval.c	FUNCTION_168	IF_1
0x40062fc	          0x4889df	                            mov rdi, rbx	      8791	eval.c	FUNCTION_168	IF_1	CALL_2
0x40062ff	      0xe800000000	                          call 0x4006304	      8791	eval.c	FUNCTION_168	IF_1	CALL_2
0x4006304	    0x48833d000000	               cmp qword [0x0400630c], 0	      8792	eval.c	FUNCTION_168	IF_1	IF_2
0x400630c	            0x7e7d	                           jle 0x400638b	      8792	eval.c	FUNCTION_168	IF_1	IF_2
0x400630e	      0xbe00000000	                              mov esi, 0	      8793	eval.c	FUNCTION_168	IF_1	CALL_3
0x4006313	          0x4889df	                            mov rdi, rbx	      8793	eval.c	FUNCTION_168	IF_1	CALL_3
0x4006316	      0xe800000000	                          call 0x400631b	      8793	eval.c	FUNCTION_168	IF_1	CALL_3
0x400631b	    0x4c8b05000000	              mov r8, qword [0x04006322]	      8795	eval.c	FUNCTION_168	IF_3
0x4006322	          0x4d85c0	                             test r8, r8	      8795	eval.c	FUNCTION_168	IF_3
0x4006325	            0x7e4a	                           jle 0x4006371	      8795	eval.c	FUNCTION_168	IF_3
0x4006327	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_203	CALL_2
0x400632c	      0xba41000000	                           mov edx, 0x41	        33	stdio2.h	FUNCTION_203	CALL_2
0x4006331	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_203	CALL_2
0x4006336	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_203	CALL_2
0x4006339	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_203	CALL_2
0x400633e	      0xe800000000	                          call 0x4006343	        33	stdio2.h	FUNCTION_203	CALL_2
0x4006343	          0x4889e6	                            mov rsi, rsp	      8798	eval.c	FUNCTION_168	IF_3	CALL_5
0x4006346	          0x4889df	                            mov rdi, rbx	      8798	eval.c	FUNCTION_168	IF_3	CALL_5
0x4006349	      0xe800000000	                          call 0x400634e	      8798	eval.c	FUNCTION_168	IF_3	CALL_5
0x400634e	    0x48833d000000	               cmp qword [0x04006356], 0	      8800	eval.c	FUNCTION_168	IF_4
0x4006356	            0x750a	                           jne 0x4006362	      8800	eval.c	FUNCTION_168	IF_4
0x4006358	    0x48833d000000	               cmp qword [0x04006360], 0	      8800	eval.c	FUNCTION_168	IF_4
0x4006360	            0x7e33	                           jle 0x4006395	      8800	eval.c	FUNCTION_168	IF_4
0x4006362	      0xbe00000000	                              mov esi, 0	      8801	eval.c	FUNCTION_168	CALL_6
0x4006367	          0x4889df	                            mov rdi, rbx	      8801	eval.c	FUNCTION_168	CALL_6
0x400636a	      0xe800000000	                          call 0x400636f	      8801	eval.c	FUNCTION_168	CALL_6
0x400636f	            0xeb24	                           jmp 0x4006395	      8802	eval.c	FUNCTION_168
0x4006371	    0x48833d000000	               cmp qword [0x04006379], 0	      8800	eval.c	FUNCTION_168	IF_4
0x4006379	            0x75e7	                           jne 0x4006362	      8800	eval.c	FUNCTION_168	IF_4
0x400637b	            0xeb18	                           jmp 0x4006395	      8800	eval.c	FUNCTION_168	IF_4
0x400637d	    0x4c8b05000000	              mov r8, qword [0x04006384]	      8795	eval.c	FUNCTION_168	IF_3
0x4006384	          0x4d85c0	                             test r8, r8	      8795	eval.c	FUNCTION_168	IF_3
0x4006387	            0x7f9e	                            jg 0x4006327	      8795	eval.c	FUNCTION_168	IF_3
0x4006389	            0xeb0a	                           jmp 0x4006395	      8795	eval.c	FUNCTION_168	IF_3
0x400638b	    0x48833d000000	               cmp qword [0x04006393], 0	      8800	eval.c	FUNCTION_168	IF_4
0x4006393	            0x75cd	                           jne 0x4006362	      8800	eval.c	FUNCTION_168	IF_4
0x4006395	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      8802	eval.c	FUNCTION_168
0x400639a	    0x644833042528	                xor rax, qword fs:[0x28]	      8802	eval.c	FUNCTION_168
0x40063a3	            0x7405	                            je 0x40063aa	      8802	eval.c	FUNCTION_168
0x40063a5	      0xe800000000	                          call 0x40063aa	      8802	eval.c	FUNCTION_168
0x40063aa	        0x4883c450	                           add rsp, 0x50	      8802	eval.c	FUNCTION_168
0x40063ae	              0x5b	                                 pop rbx	      8802	eval.c	FUNCTION_168
0x40063af	              0xc3	                                     ret	      8802	eval.c	FUNCTION_168
list_one_var_a	FOR,0:SWITCH,0:DO,0:IF,9:functions,0:WHILE,0:CALL,13:ELSE,4	71
0x40003da	            0x4156	                                push r14	      7477	eval.c	FUNCTION_142
0x40003dc	            0x4155	                                push r13	      7477	eval.c	FUNCTION_142
0x40003de	            0x4154	                                push r12	      7477	eval.c	FUNCTION_142
0x40003e0	              0x55	                                push rbp	      7477	eval.c	FUNCTION_142
0x40003e1	              0x53	                                push rbx	      7477	eval.c	FUNCTION_142
0x40003e2	          0x4989fe	                            mov r14, rdi	      7477	eval.c	FUNCTION_142
0x40003e5	          0x4989f4	                            mov r12, rsi	      7477	eval.c	FUNCTION_142
0x40003e8	            0x89d3	                            mov ebx, edx	      7477	eval.c	FUNCTION_142
0x40003ea	          0x4889cd	                            mov rbp, rcx	      7477	eval.c	FUNCTION_142
0x40003ed	          0x4d89c5	                             mov r13, r8	      7477	eval.c	FUNCTION_142
0x40003f0	      0xe800000000	                          call 0x40003f5	      7479	eval.c	FUNCTION_142	CALL_1
0x40003f5	          0x4c89f7	                            mov rdi, r14	      7480	eval.c	FUNCTION_142	CALL_2
0x40003f8	      0xe800000000	                          call 0x40003fd	      7480	eval.c	FUNCTION_142	CALL_2
0x40003fd	          0x4d85e4	                           test r12, r12	      7481	eval.c	FUNCTION_142	IF_1
0x4000400	            0x7408	                            je 0x400040a	      7481	eval.c	FUNCTION_142	IF_1
0x4000402	          0x4c89e7	                            mov rdi, r12	      7482	eval.c	FUNCTION_142	CALL_3
0x4000405	      0xe800000000	                          call 0x400040a	      7482	eval.c	FUNCTION_142	CALL_3
0x400040a	      0xbf20000000	                           mov edi, 0x20	      7483	eval.c	FUNCTION_142	CALL_4
0x400040f	      0xe800000000	                          call 0x4000414	      7483	eval.c	FUNCTION_142	CALL_4
0x4000414	      0xbf16000000	                           mov edi, 0x16	      7484	eval.c	FUNCTION_142	CALL_5
0x4000419	      0xe800000000	                          call 0x400041e	      7484	eval.c	FUNCTION_142	CALL_5
0x400041e	          0x83fb01	                              cmp ebx, 1	      7485	eval.c	FUNCTION_142	IF_2
0x4000421	            0x750f	                           jne 0x4000432	      7485	eval.c	FUNCTION_142	IF_2
0x4000423	      0xbf23000000	                           mov edi, 0x23	      7486	eval.c	FUNCTION_142	CALL_6
0x4000428	      0xe800000000	                          call 0x400042d	      7486	eval.c	FUNCTION_142	CALL_6
0x400042d	      0xe984000000	                           jmp 0x40004b6	      7486	eval.c	FUNCTION_142	CALL_6
0x4000432	          0x8d43fd	                      lea eax, [rbx - 3]	      7487	eval.c	FUNCTION_142	ELSE_1	IF_3
0x4000435	          0x83f801	                              cmp eax, 1	      7487	eval.c	FUNCTION_142	ELSE_1	IF_3
0x4000438	            0x771e	                            ja 0x4000458	      7487	eval.c	FUNCTION_142	ELSE_1	IF_3
0x400043a	      0xbf2a000000	                           mov edi, 0x2a	      7488	eval.c	FUNCTION_142	ELSE_1	IF_3
0x400043f	      0xe800000000	                          call 0x4000444	      7488	eval.c	FUNCTION_142	ELSE_1	IF_3
0x4000444	          0x4889ef	                            mov rdi, rbp	      7504	eval.c	FUNCTION_142	CALL_11
0x4000447	      0xe800000000	                          call 0x400044c	      7504	eval.c	FUNCTION_142	CALL_11
0x400044c	      0xbf00000000	                              mov edi, 0	      7507	eval.c	FUNCTION_142	CALL_12
0x4000451	      0xe800000000	                          call 0x4000456	      7507	eval.c	FUNCTION_142	CALL_12
0x4000456	            0xeb48	                           jmp 0x40004a0	      7507	eval.c	FUNCTION_142	CALL_12
0x4000458	          0x83fb05	                              cmp ebx, 5	      7489	eval.c	FUNCTION_142	ELSE_2	IF_4
0x400045b	            0x7519	                           jne 0x4000476	      7489	eval.c	FUNCTION_142	ELSE_2	IF_4
0x400045d	      0xbf5b000000	                           mov edi, 0x5b	      7491	eval.c	FUNCTION_142	ELSE_2	IF_4	CALL_8
0x4000462	      0xe800000000	                          call 0x4000467	      7491	eval.c	FUNCTION_142	ELSE_2	IF_4	CALL_8
0x4000467	        0x807d005b	                    cmp byte [rbp], 0x5b	      7493	eval.c	FUNCTION_142	ELSE_2	IF_4	IF_5
0x400046b	           0xf94c0	                                 sete al	      7493	eval.c	FUNCTION_142	ELSE_2	IF_4	IF_5
0x400046e	           0xfb6c0	                           movzx eax, al	      7493	eval.c	FUNCTION_142	ELSE_2	IF_4	IF_5
0x4000471	          0x4801c5	                            add rbp, rax	      7493	eval.c	FUNCTION_142	ELSE_2	IF_4	IF_5
0x4000474	            0xeb40	                           jmp 0x40004b6	      7493	eval.c	FUNCTION_142	ELSE_2	IF_4	IF_5
0x4000476	          0x83fb06	                              cmp ebx, 6	      7495	eval.c	FUNCTION_142	ELSE_3	IF_6
0x4000479	            0x7519	                           jne 0x4000494	      7495	eval.c	FUNCTION_142	ELSE_3	IF_6
0x400047b	      0xbf7b000000	                           mov edi, 0x7b	      7497	eval.c	FUNCTION_142	ELSE_3	IF_6	CALL_9
0x4000480	      0xe800000000	                          call 0x4000485	      7497	eval.c	FUNCTION_142	ELSE_3	IF_6	CALL_9
0x4000485	        0x807d007b	                    cmp byte [rbp], 0x7b	      7499	eval.c	FUNCTION_142	ELSE_3	IF_6	IF_7
0x4000489	           0xf94c0	                                 sete al	      7499	eval.c	FUNCTION_142	ELSE_3	IF_6	IF_7
0x400048c	           0xfb6c0	                           movzx eax, al	      7499	eval.c	FUNCTION_142	ELSE_3	IF_6	IF_7
0x400048f	          0x4801c5	                            add rbp, rax	      7499	eval.c	FUNCTION_142	ELSE_3	IF_6	IF_7
0x4000492	            0xeb22	                           jmp 0x40004b6	      7499	eval.c	FUNCTION_142	ELSE_3	IF_6	IF_7
0x4000494	      0xbf20000000	                           mov edi, 0x20	      7502	eval.c	FUNCTION_142	CALL_10
0x4000499	      0xe800000000	                          call 0x400049e	      7502	eval.c	FUNCTION_142	CALL_10
0x400049e	            0xeb16	                           jmp 0x40004b6	      7502	eval.c	FUNCTION_142	CALL_10
0x40004a0	      0x41837d0000	                      cmp dword [r13], 0	      7508	eval.c	FUNCTION_142	IF_9
0x40004a5	            0x7419	                            je 0x40004c0	      7508	eval.c	FUNCTION_142	IF_9
0x40004a7	      0xe800000000	                          call 0x40004ac	      7510	eval.c	FUNCTION_142	IF_9	CALL_13
0x40004ac	    0x41c745000000	                      mov dword [r13], 0	      7511	eval.c	FUNCTION_142	IF_9
0x40004b4	            0xeb0a	                           jmp 0x40004c0	      7513	eval.c	FUNCTION_142
0x40004b6	          0x4889ef	                            mov rdi, rbp	      7504	eval.c	FUNCTION_142	CALL_11
0x40004b9	      0xe800000000	                          call 0x40004be	      7504	eval.c	FUNCTION_142	CALL_11
0x40004be	            0xebe0	                           jmp 0x40004a0	      7504	eval.c	FUNCTION_142	CALL_11
0x40004c0	              0x5b	                                 pop rbx	      7513	eval.c	FUNCTION_142
0x40004c1	              0x5d	                                 pop rbp	      7513	eval.c	FUNCTION_142
0x40004c2	            0x415c	                                 pop r12	      7513	eval.c	FUNCTION_142
0x40004c4	            0x415d	                                 pop r13	      7513	eval.c	FUNCTION_142
0x40004c6	            0x415e	                                 pop r14	      7513	eval.c	FUNCTION_142
0x40004c8	              0xc3	                                     ret	      7513	eval.c	FUNCTION_142
call_func_retstr	FOR,0:SWITCH,0:DO,0:IF,1:functions,0:WHILE,0:CALL,4:ELSE,0	27
0x400395c	              0x53	                                push rbx	      1133	eval.c	FUNCTION_28
0x400395d	        0x4883ec20	                           sub rsp, 0x20	      1133	eval.c	FUNCTION_28
0x4003961	    0x64488b042528	                mov rax, qword fs:[0x28]	      1133	eval.c	FUNCTION_28
0x400396a	      0x4889442418	             mov qword [rsp + 0x18], rax	      1133	eval.c	FUNCTION_28
0x400396f	            0x31c0	                            xor eax, eax	      1133	eval.c	FUNCTION_28
0x4003971	          0x4989e1	                             mov r9, rsp	      1138	eval.c	FUNCTION_28	IF_1	CALL_1
0x4003974	    0x41b801000000	                              mov r8d, 1	      1138	eval.c	FUNCTION_28	IF_1	CALL_1
0x400397a	      0xe800000000	                          call 0x400397f	      1138	eval.c	FUNCTION_28	IF_1	CALL_1
0x400397f	      0xba00000000	                              mov edx, 0	      1139	eval.c	FUNCTION_28	IF_1
0x4003984	            0x85c0	                           test eax, eax	      1138	eval.c	FUNCTION_28	IF_1	CALL_1
0x4003986	            0x741e	                            je 0x40039a6	      1138	eval.c	FUNCTION_28	IF_1	CALL_1
0x4003988	          0x4889e7	                            mov rdi, rsp	      1141	eval.c	FUNCTION_28	CALL_3
0x400398b	      0xe800000000	                          call 0x4003990	      1141	eval.c	FUNCTION_28	CALL_3
0x4003990	          0x4889c7	                            mov rdi, rax	      1141	eval.c	FUNCTION_28	CALL_3
0x4003993	      0xe800000000	                          call 0x4003998	      1141	eval.c	FUNCTION_28	CALL_3
0x4003998	          0x4889c3	                            mov rbx, rax	      1141	eval.c	FUNCTION_28	CALL_3
0x400399b	          0x4889e7	                            mov rdi, rsp	      1142	eval.c	FUNCTION_28	CALL_4
0x400399e	      0xe800000000	                          call 0x40039a3	      1142	eval.c	FUNCTION_28	CALL_4
0x40039a3	          0x4889da	                            mov rdx, rbx	      1143	eval.c	FUNCTION_28
0x40039a6	          0x4889d0	                            mov rax, rdx	      1144	eval.c	FUNCTION_28
0x40039a9	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	      1144	eval.c	FUNCTION_28
0x40039ae	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1144	eval.c	FUNCTION_28
0x40039b7	            0x7405	                            je 0x40039be	      1144	eval.c	FUNCTION_28
0x40039b9	      0xe800000000	                          call 0x40039be	      1144	eval.c	FUNCTION_28
0x40039be	        0x4883c420	                           add rsp, 0x20	      1144	eval.c	FUNCTION_28
0x40039c2	              0x5b	                                 pop rbx	      1144	eval.c	FUNCTION_28
0x40039c3	              0xc3	                                     ret	      1144	eval.c	FUNCTION_28
set_var_lval	FOR,2:SWITCH,0:DO,0:IF,20:functions,0:WHILE,0:CALL,27:ELSE,9	264
0x40057a6	            0x4157	                                push r15	      2246	eval.c	FUNCTION_46
0x40057a8	            0x4156	                                push r14	      2246	eval.c	FUNCTION_46
0x40057aa	            0x4155	                                push r13	      2246	eval.c	FUNCTION_46
0x40057ac	            0x4154	                                push r12	      2246	eval.c	FUNCTION_46
0x40057ae	              0x55	                                push rbp	      2246	eval.c	FUNCTION_46
0x40057af	              0x53	                                push rbx	      2246	eval.c	FUNCTION_46
0x40057b0	        0x4883ec48	                           sub rsp, 0x48	      2246	eval.c	FUNCTION_46
0x40057b4	          0x4889fb	                            mov rbx, rdi	      2246	eval.c	FUNCTION_46
0x40057b7	          0x4989d7	                            mov r15, rdx	      2246	eval.c	FUNCTION_46
0x40057ba	            0x89cd	                            mov ebp, ecx	      2246	eval.c	FUNCTION_46
0x40057bc	          0x4d89c5	                             mov r13, r8	      2246	eval.c	FUNCTION_46
0x40057bf	    0x64488b042528	                mov rax, qword fs:[0x28]	      2246	eval.c	FUNCTION_46
0x40057c8	      0x4889442438	             mov qword [rsp + 0x38], rax	      2246	eval.c	FUNCTION_46
0x40057cd	            0x31c0	                            xor eax, eax	      2246	eval.c	FUNCTION_46
0x40057cf	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      2251	eval.c	FUNCTION_46	IF_1
0x40057d3	          0x4885c0	                           test rax, rax	      2251	eval.c	FUNCTION_46	IF_1
0x40057d6	     0xf85e1000000	                           jne 0x40058bd	      2251	eval.c	FUNCTION_46	IF_1
0x40057dc	          0x4989f4	                            mov r12, rsi	      2251	eval.c	FUNCTION_46	IF_1
0x40057df	        0x440fb636	                  movzx r14d, byte [rsi]	      2253	eval.c	FUNCTION_46	IF_1
0x40057e3	          0xc60600	                       mov byte [rsi], 0	      2254	eval.c	FUNCTION_46	IF_1
0x40057e6	          0x4d85c0	                             test r8, r8	      2255	eval.c	FUNCTION_46	IF_1	IF_2
0x40057e9	     0xf84b8000000	                            je 0x40058a7	      2255	eval.c	FUNCTION_46	IF_1	IF_2
0x40057ef	        0x4180383d	                     cmp byte [r8], 0x3d	      2255	eval.c	FUNCTION_46	IF_1	IF_2
0x40057f3	     0xf84ae000000	                            je 0x40058a7	      2255	eval.c	FUNCTION_46	IF_1	IF_2
0x40057f9	    0x48c744241800	               mov qword [rsp + 0x18], 0	      2260	eval.c	FUNCTION_46	IF_1	IF_2
0x4005802	          0x4c8b17	                    mov r10, qword [rdi]	      2261	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	CALL_2
0x4005805	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      2261	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	CALL_2
0x400580c	          0x4c89d7	                            mov rdi, r10	      2261	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	CALL_2
0x400580f	            0xf2ae	              repne scasb al, byte [rdi]	      2261	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	CALL_2
0x4005811	          0x48f7d1	                                 not rcx	      2261	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	CALL_2
0x4005814	        0x488d71ff	                      lea rsi, [rcx - 1]	      2261	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	CALL_2
0x4005818	    0x41b900000000	                              mov r9d, 0	      2261	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	CALL_2
0x400581e	    0x41b801000000	                              mov r8d, 1	      2261	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	CALL_2
0x4005824	      0x488d4c2418	                   lea rcx, [rsp + 0x18]	      2261	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	CALL_2
0x4005829	      0x488d542420	                   lea rdx, [rsp + 0x20]	      2261	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	CALL_2
0x400582e	          0x4c89d7	                            mov rdi, r10	      2261	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	CALL_2
0x4005831	      0xe800000000	                          call 0x4005836	      2261	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	CALL_2
0x4005836	          0x83f801	                              cmp eax, 1	      2261	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	CALL_2
0x4005839	            0x7579	                           jne 0x40058b4	      2261	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	CALL_2
0x400583b	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      2264	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4
0x4005840	          0x4885c0	                           test rax, rax	      2264	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4
0x4005843	            0x742f	                            je 0x4005874	      2264	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4
0x4005845	         0xfb67810	           movzx edi, byte [rax + 0x10] 	      2265	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4	CALL_3
0x4005849	      0xba00000000	                              mov edx, 0	      2265	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4	CALL_3
0x400584e	          0x488b33	                    mov rsi, qword [rbx]	      2265	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4	CALL_3
0x4005851	      0xe800000000	                          call 0x4005856	      2265	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4	CALL_3
0x4005856	            0x85c0	                           test eax, eax	      2265	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4	CALL_3
0x4005858	            0x7541	                           jne 0x400589b	      2265	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4	CALL_3
0x400585a	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      2266	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4	CALL_4
0x400585f	         0xfbe7804	               movsx edi, byte [rax + 4]	      2266	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4	CALL_4
0x4005863	      0xba00000000	                              mov edx, 0	      2266	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4	CALL_4
0x4005868	          0x488b33	                    mov rsi, qword [rbx]	      2266	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4	CALL_4
0x400586b	      0xe800000000	                          call 0x4005870	      2266	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4	CALL_4
0x4005870	            0x85c0	                           test eax, eax	      2266	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4	CALL_4
0x4005872	            0x7527	                           jne 0x400589b	      2266	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4	CALL_4
0x4005874	          0x4c89ea	                            mov rdx, r13	      2268	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4	CALL_5
0x4005877	          0x4c89fe	                            mov rsi, r15	      2268	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4	CALL_5
0x400587a	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      2268	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4	CALL_5
0x400587f	      0xe867e1ffff	                          call sym.tv_op	      2268	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4	CALL_5
0x4005884	          0x83f801	                              cmp eax, 1	      2268	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4	CALL_5
0x4005887	            0x7512	                           jne 0x400589b	      2268	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4	CALL_5
0x4005889	      0xba00000000	                              mov edx, 0	      2269	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	CALL_6
0x400588e	      0x488d742420	                   lea rsi, [rsp + 0x20]	      2269	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	CALL_6
0x4005893	          0x488b3b	                    mov rdi, qword [rbx]	      2269	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	CALL_6
0x4005896	      0xe800000000	                          call 0x400589b	      2269	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	CALL_6
0x400589b	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      2270	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	CALL_7
0x40058a0	      0xe800000000	                          call 0x40058a5	      2270	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	CALL_7
0x40058a5	            0xeb0d	                           jmp 0x40058b4	      2256	eval.c	FUNCTION_46	IF_1	IF_2
0x40058a7	            0x89ea	                            mov edx, ebp	      2274	eval.c	FUNCTION_46	IF_1	CALL_8
0x40058a9	          0x4c89fe	                            mov rsi, r15	      2274	eval.c	FUNCTION_46	IF_1	CALL_8
0x40058ac	          0x488b3b	                    mov rdi, qword [rbx]	      2274	eval.c	FUNCTION_46	IF_1	CALL_8
0x40058af	      0xe800000000	                          call 0x40058b4	      2274	eval.c	FUNCTION_46	IF_1	CALL_8
0x40058b4	        0x45883424	                    mov byte [r12], r14b	      2275	eval.c	FUNCTION_46	IF_1
0x40058b8	      0xe9b1020000	                           jmp 0x4005b6e	      2275	eval.c	FUNCTION_46	IF_1
0x40058bd	          0x488b37	                    mov rsi, qword [rdi]	      2277	eval.c	FUNCTION_46	ELSE_2	IF_5	CALL_9
0x40058c0	      0x48837f5800	               cmp qword [rdi + 0x58], 0	      2277	eval.c	FUNCTION_46	ELSE_2	IF_5	CALL_9
0x40058c5	            0x7506	                           jne 0x40058cd	      2277	eval.c	FUNCTION_46	ELSE_2	IF_5	CALL_9
0x40058c7	         0xfbe7804	               movsx edi, byte [rax + 4]	      2277	eval.c	FUNCTION_46	ELSE_2	IF_5	CALL_9
0x40058cb	            0xeb07	                           jmp 0x40058d4	      2277	eval.c	FUNCTION_46	ELSE_2	IF_5	CALL_9
0x40058cd	        0x488b4008	                mov rax, qword [rax + 8]	      2279	eval.c	FUNCTION_46	ELSE_2	IF_5
0x40058d1	           0xfbe38	                   movsx edi, byte [rax]	      2277	eval.c	FUNCTION_46	ELSE_2	IF_5	CALL_9
0x40058d4	      0xba00000000	                              mov edx, 0	      2277	eval.c	FUNCTION_46	ELSE_2	IF_5	CALL_9
0x40058d9	      0xe800000000	                          call 0x40058de	      2277	eval.c	FUNCTION_46	ELSE_2	IF_5	CALL_9
0x40058de	        0x8944240c	              mov dword [rsp + 0xc], eax	      2277	eval.c	FUNCTION_46	ELSE_2	IF_5	CALL_9
0x40058e2	            0x85c0	                           test eax, eax	      2277	eval.c	FUNCTION_46	ELSE_2	IF_5	CALL_9
0x40058e4	     0xf8584020000	                           jne 0x4005b6e	      2277	eval.c	FUNCTION_46	ELSE_2	IF_5	CALL_9
0x40058ea	        0x837b2800	               cmp dword [rbx + 0x28], 0	      2281	eval.c	FUNCTION_46	ELSE_3	IF_6
0x40058ee	     0xf844a010000	                            je 0x4005a3e	      2281	eval.c	FUNCTION_46	ELSE_3	IF_6
0x40058f4	        0x488b6b18	            mov rbp, qword [rbx + 0x18] 	      2283	eval.c	FUNCTION_46	ELSE_3	IF_6
0x40058f8	        0x448b7330	           mov r14d, dword [rbx + 0x30] 	      2284	eval.c	FUNCTION_46	ELSE_3	IF_6
0x40058fc	        0x498b4708	                mov rax, qword [r15 + 8]	      2289	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1
0x4005900	          0x4c8b20	                    mov r12, qword [rax]	      2289	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1
0x4005903	          0x4d85e4	                           test r12, r12	      2289	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1
0x4005906	            0x7447	                            je 0x400594f	      2289	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1
0x4005908	          0x4885ed	                           test rbp, rbp	      2289	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1
0x400590b	            0x7442	                            je 0x400594f	      2289	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1
0x400590d	         0xfbe7d14	           movsx edi, byte [rbp + 0x14] 	      2291	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1	IF_7	CALL_10
0x4005911	      0xba00000000	                              mov edx, 0	      2291	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1	IF_7	CALL_10
0x4005916	          0x488b33	                    mov rsi, qword [rbx]	      2291	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1	IF_7	CALL_10
0x4005919	      0xe800000000	                          call 0x400591e	      2291	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1	IF_7	CALL_10
0x400591e	            0x85c0	                           test eax, eax	      2291	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1	IF_7	CALL_10
0x4005920	     0xf8548020000	                           jne 0x4005b6e	      2291	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1	IF_7	CALL_10
0x4005926	        0x4d8b2424	                    mov r12, qword [r12]	      2293	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1
0x400592a	          0x4d85e4	                           test r12, r12	      2294	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1	IF_8
0x400592d	            0x7420	                            je 0x400594f	      2294	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1	IF_8
0x400592f	        0x837b4000	               cmp dword [rbx + 0x40], 0	      2294	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1	IF_8
0x4005933	            0x750d	                           jne 0x4005942	      2294	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1	IF_8
0x4005935	          0x4963c6	                        movsxd rax, r14d	      2294	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1	IF_8
0x4005938	        0x48394338	            cmp qword [rbx + 0x38], rax 	      2294	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1	IF_8
0x400593c	     0xf8417020000	                            je 0x4005b59	      2294	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1	IF_8
0x4005942	        0x488b6d00	                    mov rbp, qword [rbp]	      2296	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1
0x4005946	        0x4183c601	                             add r14d, 1	      2297	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1
0x400594a	          0x4885ed	                           test rbp, rbp	      2289	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1
0x400594d	            0x75be	                           jne 0x400590d	      2289	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1
0x400594f	        0x498b4708	                mov rax, qword [r15 + 8]	      2303	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2
0x4005953	          0x488b28	                    mov rbp, qword [rax]	      2303	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2
0x4005956	          0x4885ed	                           test rbp, rbp	      2303	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2
0x4005959	     0xf84eb010000	                            je 0x4005b4a	      2303	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2
0x400595f	          0x4d85ed	                           test r13, r13	      2305	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_9
0x4005962	            0x741d	                            je 0x4005981	      2305	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_9
0x4005964	      0x41807d003d	                    cmp byte [r13], 0x3d	      2305	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_9
0x4005969	            0x7416	                            je 0x4005981	      2305	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_9
0x400596b	        0x488d7510	                   lea rsi, [rbp + 0x10]	      2306	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	CALL_11
0x400596f	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      2306	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	CALL_11
0x4005973	        0x488d7810	                   lea rdi, [rax + 0x10]	      2306	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	CALL_11
0x4005977	          0x4c89ea	                            mov rdx, r13	      2306	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	CALL_11
0x400597a	      0xe86ce0ffff	                          call sym.tv_op	      2306	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	CALL_11
0x400597f	            0xeb1e	                           jmp 0x400599f	      2306	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	CALL_11
0x4005981	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      2309	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	ELSE_4	CALL_12
0x4005985	        0x488d7810	                   lea rdi, [rax + 0x10]	      2309	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	ELSE_4	CALL_12
0x4005989	      0xe800000000	                          call 0x400598e	      2309	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	ELSE_4	CALL_12
0x400598e	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      2310	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	ELSE_4	CALL_13
0x4005992	        0x488d7010	                   lea rsi, [rax + 0x10]	      2310	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	ELSE_4	CALL_13
0x4005996	        0x488d7d10	                   lea rdi, [rbp + 0x10]	      2310	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	ELSE_4	CALL_13
0x400599a	      0xe800000000	                          call 0x400599f	      2310	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	ELSE_4	CALL_13
0x400599f	        0x488b6d00	                    mov rbp, qword [rbp]	      2312	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2
0x40059a3	          0x4885ed	                           test rbp, rbp	      2313	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_10
0x40059a6	     0xf849e010000	                            je 0x4005b4a	      2313	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_10
0x40059ac	        0x837b4000	               cmp dword [rbx + 0x40], 0	      2313	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_10
0x40059b0	            0x750e	                           jne 0x40059c0	      2313	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_10
0x40059b2	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      2313	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_10
0x40059b6	        0x48394338	            cmp qword [rbx + 0x38], rax 	      2313	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_10
0x40059ba	     0xf846c010000	                            je 0x4005b2c	      2313	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_10
0x40059c0	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      2315	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_11
0x40059c4	        0x48833800	                      cmp qword [rax], 0	      2315	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_11
0x40059c8	     0xf8549010000	                           jne 0x4005b17	      2315	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_11
0x40059ce	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      2318	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_11	IF_12	CALL_14
0x40059d2	      0xbe00000000	                              mov esi, 0	      2318	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_11	IF_12	CALL_14
0x40059d7	      0xe800000000	                          call 0x40059dc	      2318	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_11	IF_12	CALL_14
0x40059dc	            0x85c0	                           test eax, eax	      2318	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_11	IF_12	CALL_14
0x40059de	     0xf8533010000	                           jne 0x4005b17	      2318	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_11	IF_12	CALL_14
0x40059e4	      0xe961010000	                           jmp 0x4005b4a	      2318	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_11	IF_12	CALL_14
0x40059e9	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      2330	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x40059ed	          0x4885c0	                           test rax, rax	      2330	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x40059f0	            0x740e	                            je 0x4005a00	      2330	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x40059f2	        0x48833800	                      cmp qword [rax], 0	      2330	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x40059f6	           0xf95c0	                                setne al	      2330	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x40059f9	           0xfb6c0	                           movzx eax, al	      2330	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x40059fc	        0x8944240c	              mov dword [rsp + 0xc], eax	      2330	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x4005a00	       0xfb644240c	            movzx eax, byte [rsp + 0xc] 	      2329	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x4005a05	          0x83e001	                              and eax, 1	      2329	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x4005a08	            0xeb0b	                           jmp 0x4005a15	      2329	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x4005a0a	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      2329	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x4005a0e	        0x48394330	            cmp qword [rbx + 0x30], rax 	      2329	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x4005a12	           0xf95c0	                                setne al	      2329	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x4005a15	            0x84c0	                             test al, al	      2329	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x4005a17	     0xf8451010000	                            je 0x4005b6e	      2329	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x4005a1d	      0xba05000000	                              mov edx, 5	      2332	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x4005a22	      0xbe00000000	                              mov esi, 0	      2332	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x4005a27	      0xbf00000000	                              mov edi, 0	      2332	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x4005a2c	      0xe800000000	                          call 0x4005a31	      2332	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x4005a31	          0x4889c7	                            mov rdi, rax	      2332	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x4005a34	      0xe800000000	                          call 0x4005a39	      2332	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x4005a39	      0xe930010000	                           jmp 0x4005b6e	      2332	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x4005a3e	        0x488b7b58	            mov rdi, qword [rbx + 0x58] 	      2339	eval.c	FUNCTION_46	ELSE_6	IF_15
0x4005a42	          0x4885ff	                           test rdi, rdi	      2339	eval.c	FUNCTION_46	ELSE_6	IF_15
0x4005a45	            0x7471	                            je 0x4005ab8	      2339	eval.c	FUNCTION_46	ELSE_6	IF_15
0x4005a47	          0x4d85ed	                           test r13, r13	      2341	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_16
0x4005a4a	            0x742b	                            je 0x4005a77	      2341	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_16
0x4005a4c	      0x41807d003d	                    cmp byte [r13], 0x3d	      2341	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_16
0x4005a51	            0x7424	                            je 0x4005a77	      2341	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_16
0x4005a53	      0xba05000000	                              mov edx, 5	      2343	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_16	CALL_20
0x4005a58	      0xbe00000000	                              mov esi, 0	      2343	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_16	CALL_20
0x4005a5d	      0xbf00000000	                              mov edi, 0	      2343	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_16	CALL_20
0x4005a62	      0xe800000000	                          call 0x4005a67	      2343	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_16	CALL_20
0x4005a67	          0x4c89ee	                            mov rsi, r13	      2343	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_16	CALL_20
0x4005a6a	          0x4889c7	                            mov rdi, rax	      2343	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_16	CALL_20
0x4005a6d	      0xe800000000	                          call 0x4005a72	      2343	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_16	CALL_20
0x4005a72	      0xe9f7000000	                           jmp 0x4005b6e	      2344	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_16
0x4005a77	      0xe800000000	                          call 0x4005a7c	      2348	eval.c	FUNCTION_46	ELSE_6	IF_15	CALL_21
0x4005a7c	      0x4889442418	             mov qword [rsp + 0x18], rax	      2348	eval.c	FUNCTION_46	ELSE_6	IF_15	CALL_21
0x4005a81	          0x4885c0	                           test rax, rax	      2349	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_17
0x4005a84	     0xf84e4000000	                            je 0x4005b6e	      2349	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_17
0x4005a8a	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      2351	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_18	CALL_22
0x4005a8e	        0x488b7a08	                mov rdi, qword [rdx + 8]	      2351	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_18	CALL_22
0x4005a92	          0x4889c6	                            mov rsi, rax	      2351	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_18	CALL_22
0x4005a95	      0xe800000000	                          call 0x4005a9a	      2351	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_18	CALL_22
0x4005a9a	            0x85c0	                           test eax, eax	      2351	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_18	CALL_22
0x4005a9c	            0x750f	                           jne 0x4005aad	      2351	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_18	CALL_22
0x4005a9e	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      2353	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_18	CALL_23
0x4005aa3	      0xe800000000	                          call 0x4005aa8	      2353	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_18	CALL_23
0x4005aa8	      0xe9c1000000	                           jmp 0x4005b6e	      2354	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_18
0x4005aad	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      2356	eval.c	FUNCTION_46	ELSE_6	IF_15
0x4005ab2	        0x48894310	             mov qword [rbx + 0x10], rax	      2356	eval.c	FUNCTION_46	ELSE_6	IF_15
0x4005ab6	            0xeb29	                           jmp 0x4005ae1	      2356	eval.c	FUNCTION_46	ELSE_6	IF_15
0x4005ab8	          0x4d85ed	                           test r13, r13	      2358	eval.c	FUNCTION_46	ELSE_6	ELSE_7	IF_19
0x4005abb	            0x741b	                            je 0x4005ad8	      2358	eval.c	FUNCTION_46	ELSE_6	ELSE_7	IF_19
0x4005abd	      0x41807d003d	                    cmp byte [r13], 0x3d	      2358	eval.c	FUNCTION_46	ELSE_6	ELSE_7	IF_19
0x4005ac2	            0x7414	                            je 0x4005ad8	      2358	eval.c	FUNCTION_46	ELSE_6	ELSE_7	IF_19
0x4005ac4	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      2360	eval.c	FUNCTION_46	ELSE_6	ELSE_7	IF_19	CALL_24
0x4005ac8	          0x4c89ea	                            mov rdx, r13	      2360	eval.c	FUNCTION_46	ELSE_6	ELSE_7	IF_19	CALL_24
0x4005acb	          0x4c89fe	                            mov rsi, r15	      2360	eval.c	FUNCTION_46	ELSE_6	ELSE_7	IF_19	CALL_24
0x4005ace	      0xe818dfffff	                          call sym.tv_op	      2360	eval.c	FUNCTION_46	ELSE_6	ELSE_7	IF_19	CALL_24
0x4005ad3	      0xe996000000	                           jmp 0x4005b6e	      2361	eval.c	FUNCTION_46	ELSE_6	ELSE_7	IF_19
0x4005ad8	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      2364	eval.c	FUNCTION_46	ELSE_6	CALL_25
0x4005adc	      0xe800000000	                          call 0x4005ae1	      2364	eval.c	FUNCTION_46	ELSE_6	CALL_25
0x4005ae1	            0x85ed	                           test ebp, ebp	      2369	eval.c	FUNCTION_46	ELSE_6	IF_20
0x4005ae3	            0x740e	                            je 0x4005af3	      2369	eval.c	FUNCTION_46	ELSE_6	IF_20
0x4005ae5	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	      2370	eval.c	FUNCTION_46	ELSE_6	CALL_26
0x4005ae9	          0x4c89ff	                            mov rdi, r15	      2370	eval.c	FUNCTION_46	ELSE_6	CALL_26
0x4005aec	      0xe800000000	                          call 0x4005af1	      2370	eval.c	FUNCTION_46	ELSE_6	CALL_26
0x4005af1	            0xeb7b	                           jmp 0x4005b6e	      2370	eval.c	FUNCTION_46	ELSE_6	CALL_26
0x4005af3	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      2373	eval.c	FUNCTION_46	ELSE_6	ELSE_9
0x4005af7	          0x498b37	                    mov rsi, qword [r15]	      2373	eval.c	FUNCTION_46	ELSE_6	ELSE_9
0x4005afa	        0x498b7f08	                mov rdi, qword [r15 + 8]	      2373	eval.c	FUNCTION_46	ELSE_6	ELSE_9
0x4005afe	          0x488930	                    mov qword [rax], rsi	      2373	eval.c	FUNCTION_46	ELSE_6	ELSE_9
0x4005b01	        0x48897808	                mov qword [rax + 8], rdi	      2373	eval.c	FUNCTION_46	ELSE_6	ELSE_9
0x4005b05	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      2374	eval.c	FUNCTION_46	ELSE_6	ELSE_9
0x4005b09	        0xc6400400	                   mov byte [rax + 4], 0	      2374	eval.c	FUNCTION_46	ELSE_6	ELSE_9
0x4005b0d	          0x4c89ff	                            mov rdi, r15	      2375	eval.c	FUNCTION_46	ELSE_6	ELSE_9	CALL_27
0x4005b10	      0xe800000000	                          call 0x4005b15	      2375	eval.c	FUNCTION_46	ELSE_6	ELSE_9	CALL_27
0x4005b15	            0xeb57	                           jmp 0x4005b6e	      2375	eval.c	FUNCTION_46	ELSE_6	ELSE_9	CALL_27
0x4005b17	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      2324	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2
0x4005b1b	          0x488b00	                    mov rax, qword [rax]	      2324	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2
0x4005b1e	        0x48894318	             mov qword [rbx + 0x18], rax	      2324	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2
0x4005b22	      0x4883433001	               add qword [rbx + 0x30], 1	      2325	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2
0x4005b27	      0xe933feffff	                           jmp 0x400595f	      2325	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2
0x4005b2c	      0xba05000000	                              mov edx, 5	      2328	eval.c	FUNCTION_46	ELSE_3	IF_6	CALL_16
0x4005b31	      0xbe00000000	                              mov esi, 0	      2328	eval.c	FUNCTION_46	ELSE_3	IF_6	CALL_16
0x4005b36	      0xbf00000000	                              mov edi, 0	      2328	eval.c	FUNCTION_46	ELSE_3	IF_6	CALL_16
0x4005b3b	      0xe800000000	                          call 0x4005b40	      2328	eval.c	FUNCTION_46	ELSE_3	IF_6	CALL_16
0x4005b40	          0x4889c7	                            mov rdi, rax	      2328	eval.c	FUNCTION_46	ELSE_3	IF_6	CALL_16
0x4005b43	      0xe800000000	                          call 0x4005b48	      2328	eval.c	FUNCTION_46	ELSE_3	IF_6	CALL_16
0x4005b48	            0xeb24	                           jmp 0x4005b6e	      2328	eval.c	FUNCTION_46	ELSE_3	IF_6	CALL_16
0x4005b4a	        0x837b4000	               cmp dword [rbx + 0x40], 0	      2329	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x4005b4e	     0xf8595feffff	                           jne 0x40059e9	      2329	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x4005b54	      0xe9b1feffff	                           jmp 0x4005a0a	      2329	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x4005b59	        0x498b4708	                mov rax, qword [r15 + 8]	      2303	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2
0x4005b5d	          0x488b28	                    mov rbp, qword [rax]	      2303	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2
0x4005b60	          0x4885ed	                           test rbp, rbp	      2303	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2
0x4005b63	     0xf85f6fdffff	                           jne 0x400595f	      2303	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2
0x4005b69	      0xe99cfeffff	                           jmp 0x4005a0a	      2303	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2
0x4005b6e	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      2378	eval.c	FUNCTION_46
0x4005b73	    0x644833042528	                xor rax, qword fs:[0x28]	      2378	eval.c	FUNCTION_46
0x4005b7c	            0x7405	                            je 0x4005b83	      2378	eval.c	FUNCTION_46
0x4005b7e	      0xe800000000	                          call 0x4005b83	      2378	eval.c	FUNCTION_46
0x4005b83	        0x4883c448	                           add rsp, 0x48	      2378	eval.c	FUNCTION_46
0x4005b87	              0x5b	                                 pop rbx	      2378	eval.c	FUNCTION_46
0x4005b88	              0x5d	                                 pop rbp	      2378	eval.c	FUNCTION_46
0x4005b89	            0x415c	                                 pop r12	      2378	eval.c	FUNCTION_46
0x4005b8b	            0x415d	                                 pop r13	      2378	eval.c	FUNCTION_46
0x4005b8d	            0x415e	                                 pop r14	      2378	eval.c	FUNCTION_46
0x4005b8f	            0x415f	                                 pop r15	      2378	eval.c	FUNCTION_46
0x4005b91	              0xc3	                                     ret	      2378	eval.c	FUNCTION_46
set_internal_string_var	FOR,0:SWITCH,0:DO,0:IF,2:functions,0:WHILE,0:CALL,4:ELSE,0	28
0x4005751	            0x4154	                                push r12	       410	eval.c	FUNCTION_5
0x4005753	              0x55	                                push rbp	       410	eval.c	FUNCTION_5
0x4005754	              0x53	                                push rbx	       410	eval.c	FUNCTION_5
0x4005755	          0x4989fc	                            mov r12, rdi	       410	eval.c	FUNCTION_5
0x4005758	          0x4889f7	                            mov rdi, rsi	       414	eval.c	FUNCTION_5	CALL_1
0x400575b	      0xe800000000	                          call 0x4005760	       414	eval.c	FUNCTION_5	CALL_1
0x4005760	          0x4885c0	                           test rax, rax	       415	eval.c	FUNCTION_5	IF_1
0x4005763	            0x743c	                            je 0x40057a1	       415	eval.c	FUNCTION_5	IF_1
0x4005765	          0x4889c5	                            mov rbp, rax	       415	eval.c	FUNCTION_5	IF_1
0x4005768	      0xe800000000	                          call 0x400576d	      6830	eval.c	FUNCTION_120	CALL_1
0x400576d	          0x4889c3	                            mov rbx, rax	      6830	eval.c	FUNCTION_120	CALL_1
0x4005770	          0x4885c0	                           test rax, rax	      6831	eval.c	FUNCTION_120	IF_1
0x4005773	            0x7424	                            je 0x4005799	      6831	eval.c	FUNCTION_120	IF_1
0x4005775	    0xc70002000000	                      mov dword [rax], 2	      6833	eval.c	FUNCTION_120	IF_1
0x400577b	        0x48896808	                mov qword [rax + 8], rbp	      6834	eval.c	FUNCTION_120	IF_1
0x400577f	      0xba00000000	                              mov edx, 0	       420	eval.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x4005784	          0x4889c6	                            mov rsi, rax	       420	eval.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x4005787	          0x4c89e7	                            mov rdi, r12	       420	eval.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x400578a	      0xe800000000	                          call 0x400578f	       420	eval.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x400578f	          0x4889df	                            mov rdi, rbx	       421	eval.c	FUNCTION_5	IF_1	IF_2	CALL_4
0x4005792	      0xe800000000	                          call 0x4005797	       421	eval.c	FUNCTION_5	IF_1	IF_2	CALL_4
0x4005797	            0xeb08	                           jmp 0x40057a1	       421	eval.c	FUNCTION_5	IF_1	IF_2	CALL_4
0x4005799	          0x4889ef	                            mov rdi, rbp	      6837	eval.c	FUNCTION_120	CALL_2
0x400579c	      0xe800000000	                          call 0x40057a1	      6837	eval.c	FUNCTION_120	CALL_2
0x40057a1	              0x5b	                                 pop rbx	       424	eval.c	FUNCTION_5
0x40057a2	              0x5d	                                 pop rbp	       424	eval.c	FUNCTION_5
0x40057a3	            0x415c	                                 pop r12	       424	eval.c	FUNCTION_5
0x40057a5	              0xc3	                                     ret	       424	eval.c	FUNCTION_5
var_check_fixed	FOR,0:SWITCH,0:DO,0:IF,1:functions,0:WHILE,0:CALL,3:ELSE,0	21
0x400452a	            0x89f8	                            mov eax, edi	      7655	eval.c	FUNCTION_145	IF_1
0x400452c	          0x83e004	                              and eax, 4	      7655	eval.c	FUNCTION_145	IF_1
0x400452f	            0x743f	                            je 0x4004570	      7655	eval.c	FUNCTION_145	IF_1
0x4004531	              0x53	                                push rbx	      7654	eval.c	FUNCTION_145
0x4004532	          0x4889f3	                            mov rbx, rsi	      7657	eval.c	FUNCTION_145	IF_1	CALL_2
0x4004535	            0x85d2	                           test edx, edx	      7657	eval.c	FUNCTION_145	IF_1	CALL_2
0x4004537	            0x7412	                            je 0x400454b	      7657	eval.c	FUNCTION_145	IF_1	CALL_2
0x4004539	      0xba05000000	                              mov edx, 5	      7657	eval.c	FUNCTION_145	IF_1	CALL_2
0x400453e	      0xbf00000000	                              mov edi, 0	      7657	eval.c	FUNCTION_145	IF_1	CALL_2
0x4004543	      0xe800000000	                          call 0x4004548	      7657	eval.c	FUNCTION_145	IF_1	CALL_2
0x4004548	          0x4889c3	                            mov rbx, rax	      7657	eval.c	FUNCTION_145	IF_1	CALL_2
0x400454b	      0xba05000000	                              mov edx, 5	      7657	eval.c	FUNCTION_145	IF_1	CALL_2
0x4004550	      0xbe00000000	                              mov esi, 0	      7657	eval.c	FUNCTION_145	IF_1	CALL_2
0x4004555	      0xbf00000000	                              mov edi, 0	      7657	eval.c	FUNCTION_145	IF_1	CALL_2
0x400455a	      0xe800000000	                          call 0x400455f	      7657	eval.c	FUNCTION_145	IF_1	CALL_2
0x400455f	          0x4889de	                            mov rsi, rbx	      7657	eval.c	FUNCTION_145	IF_1	CALL_2
0x4004562	          0x4889c7	                            mov rdi, rax	      7657	eval.c	FUNCTION_145	IF_1	CALL_2
0x4004565	      0xe800000000	                          call 0x400456a	      7657	eval.c	FUNCTION_145	IF_1	CALL_2
0x400456a	      0xb801000000	                              mov eax, 1	      7659	eval.c	FUNCTION_145	IF_1
0x400456f	              0x5b	                                 pop rbx	      7662	eval.c	FUNCTION_145
0x4004570	            0xf3c3	                                     ret	      7662	eval.c	FUNCTION_145
eval_diff	FOR,0:SWITCH,0:DO,0:IF,0:functions,0:WHILE,0:CALL,7:ELSE,0	46
0x40082f5	              0x55	                                push rbp	       631	eval.c	FUNCTION_11
0x40082f6	              0x53	                                push rbx	       631	eval.c	FUNCTION_11
0x40082f7	        0x4883ec18	                           sub rsp, 0x18	       631	eval.c	FUNCTION_11
0x40082fb	          0x4889f5	                            mov rbp, rsi	       631	eval.c	FUNCTION_11
0x40082fe	          0x4889d3	                            mov rbx, rdx	       631	eval.c	FUNCTION_11
0x4008301	    0x64488b042528	                mov rax, qword fs:[0x28]	       631	eval.c	FUNCTION_11
0x400830a	      0x4889442408	                mov qword [rsp + 8], rax	       631	eval.c	FUNCTION_11
0x400830f	            0x31c0	                            xor eax, eax	       631	eval.c	FUNCTION_11
0x4008311	    0xc74424040000	                  mov dword [rsp + 4], 0	       632	eval.c	FUNCTION_11
0x4008319	      0xbaffffffff	                     mov edx, 0xffffffff	       634	eval.c	FUNCTION_11	CALL_1
0x400831e	          0x4889fe	                            mov rsi, rdi	       634	eval.c	FUNCTION_11	CALL_1
0x4008321	      0xbf11000000	                           mov edi, 0x11	       634	eval.c	FUNCTION_11	CALL_1
0x4008326	      0xe800000000	                          call 0x400832b	       634	eval.c	FUNCTION_11	CALL_1
0x400832b	      0xbaffffffff	                     mov edx, 0xffffffff	       635	eval.c	FUNCTION_11	CALL_2
0x4008330	          0x4889ee	                            mov rsi, rbp	       635	eval.c	FUNCTION_11	CALL_2
0x4008333	      0xbf13000000	                           mov edi, 0x13	       635	eval.c	FUNCTION_11	CALL_2
0x4008338	      0xe800000000	                          call 0x400833d	       635	eval.c	FUNCTION_11	CALL_2
0x400833d	      0xbaffffffff	                     mov edx, 0xffffffff	       636	eval.c	FUNCTION_11	CALL_3
0x4008342	          0x4889de	                            mov rsi, rbx	       636	eval.c	FUNCTION_11	CALL_3
0x4008345	      0xbf12000000	                           mov edi, 0x12	       636	eval.c	FUNCTION_11	CALL_3
0x400834a	      0xe800000000	                          call 0x400834f	       636	eval.c	FUNCTION_11	CALL_3
0x400834f	      0xb900000000	                              mov ecx, 0	       637	eval.c	FUNCTION_11	CALL_4
0x4008354	      0xba00000000	                              mov edx, 0	       637	eval.c	FUNCTION_11	CALL_4
0x4008359	      0x488d742404	                      lea rsi, [rsp + 4]	       637	eval.c	FUNCTION_11	CALL_4
0x400835e	    0x488b3d000000	            mov rdi, qword [0x04008365] 	       637	eval.c	FUNCTION_11	CALL_4
0x4008365	      0xe800000000	                          call 0x400836a	       637	eval.c	FUNCTION_11	CALL_4
0x400836a	      0xbaffffffff	                     mov edx, 0xffffffff	       638	eval.c	FUNCTION_11	CALL_5
0x400836f	      0xbe00000000	                              mov esi, 0	       638	eval.c	FUNCTION_11	CALL_5
0x4008374	      0xbf11000000	                           mov edi, 0x11	       638	eval.c	FUNCTION_11	CALL_5
0x4008379	      0xe800000000	                          call 0x400837e	       638	eval.c	FUNCTION_11	CALL_5
0x400837e	      0xbaffffffff	                     mov edx, 0xffffffff	       639	eval.c	FUNCTION_11	CALL_6
0x4008383	      0xbe00000000	                              mov esi, 0	       639	eval.c	FUNCTION_11	CALL_6
0x4008388	      0xbf13000000	                           mov edi, 0x13	       639	eval.c	FUNCTION_11	CALL_6
0x400838d	      0xe800000000	                          call 0x4008392	       639	eval.c	FUNCTION_11	CALL_6
0x4008392	      0xbaffffffff	                     mov edx, 0xffffffff	       640	eval.c	FUNCTION_11	CALL_7
0x4008397	      0xbe00000000	                              mov esi, 0	       640	eval.c	FUNCTION_11	CALL_7
0x400839c	      0xbf12000000	                           mov edi, 0x12	       640	eval.c	FUNCTION_11	CALL_7
0x40083a1	      0xe800000000	                          call 0x40083a6	       640	eval.c	FUNCTION_11	CALL_7
0x40083a6	      0x488b442408	                mov rax, qword [rsp + 8]	       641	eval.c	FUNCTION_11
0x40083ab	    0x644833042528	                xor rax, qword fs:[0x28]	       641	eval.c	FUNCTION_11
0x40083b4	            0x7405	                            je 0x40083bb	       641	eval.c	FUNCTION_11
0x40083b6	      0xe800000000	                          call 0x40083bb	       641	eval.c	FUNCTION_11
0x40083bb	        0x4883c418	                           add rsp, 0x18	       641	eval.c	FUNCTION_11
0x40083bf	              0x5b	                                 pop rbx	       641	eval.c	FUNCTION_11
0x40083c0	              0x5d	                                 pop rbp	       641	eval.c	FUNCTION_11
0x40083c1	              0xc3	                                     ret	       641	eval.c	FUNCTION_11
eval6	FOR,1:SWITCH,0:DO,0:IF,23:functions,0:WHILE,0:CALL,9:ELSE,15	171
0x400c5d5	            0x4157	                                push r15	      3810	eval.c	FUNCTION_69
0x400c5d7	            0x4156	                                push r14	      3810	eval.c	FUNCTION_69
0x400c5d9	            0x4155	                                push r13	      3810	eval.c	FUNCTION_69
0x400c5db	            0x4154	                                push r12	      3810	eval.c	FUNCTION_69
0x400c5dd	              0x55	                                push rbp	      3810	eval.c	FUNCTION_69
0x400c5de	              0x53	                                push rbx	      3810	eval.c	FUNCTION_69
0x400c5df	        0x4883ec58	                           sub rsp, 0x58	      3810	eval.c	FUNCTION_69
0x400c5e3	          0x4889fb	                            mov rbx, rdi	      3810	eval.c	FUNCTION_69
0x400c5e6	          0x4989f4	                            mov r12, rsi	      3810	eval.c	FUNCTION_69
0x400c5e9	          0x4189d5	                           mov r13d, edx	      3810	eval.c	FUNCTION_69
0x400c5ec	    0x64488b042528	                mov rax, qword fs:[0x28]	      3810	eval.c	FUNCTION_69
0x400c5f5	      0x4889442448	             mov qword [rsp + 0x48], rax	      3810	eval.c	FUNCTION_69
0x400c5fa	            0x31c0	                            xor eax, eax	      3810	eval.c	FUNCTION_69
0x400c5fc	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	      3818	eval.c	FUNCTION_69
0x400c604	      0xe86af3ffff	                          call sym.eval7	      3823	eval.c	FUNCTION_69	IF_1	CALL_1
0x400c609	            0x85c0	                           test eax, eax	      3823	eval.c	FUNCTION_69	IF_1	CALL_1
0x400c60b	     0xf840d020000	                            je 0x400c81e	      3823	eval.c	FUNCTION_69	IF_1	CALL_1
0x400c611	        0x660fefd2	                         pxor xmm2, xmm2	      3823	eval.c	FUNCTION_69	IF_1	CALL_1
0x400c615	    0xf20f11542408	             movsd qword [rsp + 8], xmm2	      3823	eval.c	FUNCTION_69	IF_1	CALL_1
0x400c61b	    0xc74424140000	               mov dword [rsp + 0x14], 0	      3823	eval.c	FUNCTION_69	IF_1	CALL_1
0x400c623	    0x49bf00000000	              movabs r15, 0x842000000000	      3832	eval.c	FUNCTION_69	FOR_1	IF_2
0x400c62d	          0x488b3b	                    mov rdi, qword [rbx]	      3831	eval.c	FUNCTION_69	FOR_1
0x400c630	           0xfb62f	                   movzx ebp, byte [rdi]	      3831	eval.c	FUNCTION_69	FOR_1
0x400c633	        0x4080fd2f	                           cmp bpl, 0x2f	      3832	eval.c	FUNCTION_69	FOR_1	IF_2
0x400c637	     0xf87c9010000	                            ja 0x400c806	      3832	eval.c	FUNCTION_69	FOR_1	IF_2
0x400c63d	        0x490fa3ef	                             bt r15, rbp	      3832	eval.c	FUNCTION_69	FOR_1	IF_2
0x400c641	     0xf83c6010000	                           jae 0x400c80d	      3832	eval.c	FUNCTION_69	FOR_1	IF_2
0x400c647	          0x4585ed	                         test r13d, r13d	      3835	eval.c	FUNCTION_69	FOR_1	IF_3
0x400c64a	     0xf840d020000	                            je 0x400c85d	      3835	eval.c	FUNCTION_69	FOR_1	IF_3
0x400c650	      0x41833c2407	                      cmp dword [r12], 7	      3838	eval.c	FUNCTION_69	FOR_1	IF_3	IF_4
0x400c655	            0x751f	                           jne 0x400c676	      3838	eval.c	FUNCTION_69	FOR_1	IF_3	IF_4
0x400c657	    0xf2410f104c24	            movsd xmm1, qword [r12 + 8] 	      3840	eval.c	FUNCTION_69	FOR_1	IF_3	IF_4
0x400c65e	    0xf20f114c2408	             movsd qword [rsp + 8], xmm1	      3840	eval.c	FUNCTION_69	FOR_1	IF_3	IF_4
0x400c664	    0xc74424140100	               mov dword [rsp + 0x14], 1	      3841	eval.c	FUNCTION_69	FOR_1	IF_3	IF_4
0x400c66c	    0x48c704240000	                      mov qword [rsp], 0	      3842	eval.c	FUNCTION_69	FOR_1	IF_3	IF_4
0x400c674	            0xeb11	                           jmp 0x400c687	      3842	eval.c	FUNCTION_69	FOR_1	IF_3	IF_4
0x400c676	      0x488d74242c	                   lea rsi, [rsp + 0x2c]	      3846	eval.c	FUNCTION_69	FOR_1	IF_3	CALL_2
0x400c67b	          0x4c89e7	                            mov rdi, r12	      3846	eval.c	FUNCTION_69	FOR_1	IF_3	CALL_2
0x400c67e	      0xe800000000	                          call 0x400c683	      3846	eval.c	FUNCTION_69	FOR_1	IF_3	CALL_2
0x400c683	        0x48890424	                    mov qword [rsp], rax	      3846	eval.c	FUNCTION_69	FOR_1	IF_3	CALL_2
0x400c687	          0x4c89e7	                            mov rdi, r12	      3847	eval.c	FUNCTION_69	FOR_1	IF_3	CALL_3
0x400c68a	      0xe800000000	                          call 0x400c68f	      3847	eval.c	FUNCTION_69	FOR_1	IF_3	CALL_3
0x400c68f	      0x448b74242c	           mov r14d, dword [rsp + 0x2c] 	      3848	eval.c	FUNCTION_69	FOR_1	IF_3	IF_5
0x400c694	          0x4585f6	                         test r14d, r14d	      3848	eval.c	FUNCTION_69	FOR_1	IF_3	IF_5
0x400c697	     0xf8493010000	                            je 0x400c830	      3848	eval.c	FUNCTION_69	FOR_1	IF_3	IF_5
0x400c69d	      0xe972010000	                           jmp 0x400c814	      3848	eval.c	FUNCTION_69	FOR_1	IF_3	IF_5
0x400c6a2	        0x400fb6ed	                          movzx ebp, bpl	      3831	eval.c	FUNCTION_69	FOR_1
0x400c6a6	      0x837c243007	               cmp dword [rsp + 0x30], 7	      3864	eval.c	FUNCTION_69	FOR_1	IF_7	IF_8
0x400c6ab	            0x7528	                           jne 0x400c6d5	      3864	eval.c	FUNCTION_69	FOR_1	IF_7	IF_8
0x400c6ad	      0x837c241400	               cmp dword [rsp + 0x14], 0	      3866	eval.c	FUNCTION_69	FOR_1	IF_7	IF_8	IF_9
0x400c6b2	     0xf85d2010000	                           jne 0x400c88a	      3866	eval.c	FUNCTION_69	FOR_1	IF_7	IF_8	IF_9
0x400c6b8	        0x660fefed	                         pxor xmm5, xmm5	      3868	eval.c	FUNCTION_69	FOR_1	IF_7	IF_8	IF_9
0x400c6bc	    0xf2480f2a2c24	              cvtsi2sd xmm5, qword [rsp]	      3868	eval.c	FUNCTION_69	FOR_1	IF_7	IF_8	IF_9
0x400c6c2	    0xf20f116c2408	             movsd qword [rsp + 8], xmm5	      3868	eval.c	FUNCTION_69	FOR_1	IF_7	IF_8	IF_9
0x400c6c8	    0xc74424140100	               mov dword [rsp + 0x14], 1	      3869	eval.c	FUNCTION_69	FOR_1	IF_7	IF_8	IF_9
0x400c6d0	      0xe9b5010000	                           jmp 0x400c88a	      3869	eval.c	FUNCTION_69	FOR_1	IF_7	IF_8	IF_9
0x400c6d5	      0x488d74242c	                   lea rsi, [rsp + 0x2c]	      3877	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_3	CALL_6
0x400c6da	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      3877	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_3	CALL_6
0x400c6df	      0xe800000000	                          call 0x400c6e4	      3877	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_3	CALL_6
0x400c6e4	      0x4889442418	             mov qword [rsp + 0x18], rax	      3877	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_3	CALL_6
0x400c6e9	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      3878	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_3	CALL_7
0x400c6ee	      0xe800000000	                          call 0x400c6f3	      3878	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_3	CALL_7
0x400c6f3	      0x837c242c00	               cmp dword [rsp + 0x2c], 0	      3879	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_3	IF_10
0x400c6f8	     0xf851d010000	                           jne 0x400c81b	      3879	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_3	IF_10
0x400c6fe	      0x837c241400	               cmp dword [rsp + 0x14], 0	      3882	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_3	IF_11
0x400c703	            0x7473	                            je 0x400c778	      3882	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_3	IF_11
0x400c705	        0x660fefc0	                         pxor xmm0, xmm0	      3883	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_3	IF_11
0x400c709	    0xf2480f2a4424	       cvtsi2sd xmm0, qword [rsp + 0x18]	      3883	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_3	IF_11
0x400c710	          0x83fd2a	                           cmp ebp, 0x2a	      3894	eval.c	FUNCTION_69	FOR_1	IF_7	IF_12	IF_13
0x400c713	            0x750e	                           jne 0x400c723	      3894	eval.c	FUNCTION_69	FOR_1	IF_7	IF_12	IF_13
0x400c715	    0xf20f59442408	             mulsd xmm0, qword [rsp + 8]	      3895	eval.c	FUNCTION_69	FOR_1	IF_7	IF_12	IF_13
0x400c71b	    0xf20f11442408	             movsd qword [rsp + 8], xmm0	      3895	eval.c	FUNCTION_69	FOR_1	IF_7	IF_12	IF_13
0x400c721	            0xeb3b	                           jmp 0x400c75e	      3895	eval.c	FUNCTION_69	FOR_1	IF_7	IF_12	IF_13
0x400c723	          0x83fd2f	                           cmp ebp, 0x2f	      3896	eval.c	FUNCTION_69	FOR_1	IF_7	IF_12	ELSE_4	IF_14
0x400c726	            0x7512	                           jne 0x400c73a	      3896	eval.c	FUNCTION_69	FOR_1	IF_7	IF_12	ELSE_4	IF_14
0x400c728	    0xf20f105c2408	            movsd xmm3, qword [rsp + 8] 	      3914	eval.c	FUNCTION_69	FOR_1	IF_7	IF_12	ELSE_4	IF_14
0x400c72e	        0xf20f5ed8	                        divsd xmm3, xmm0	      3914	eval.c	FUNCTION_69	FOR_1	IF_7	IF_12	ELSE_4	IF_14
0x400c732	    0xf20f115c2408	             movsd qword [rsp + 8], xmm3	      3914	eval.c	FUNCTION_69	FOR_1	IF_7	IF_12	ELSE_4	IF_14
0x400c738	            0xeb24	                           jmp 0x400c75e	      3914	eval.c	FUNCTION_69	FOR_1	IF_7	IF_12	ELSE_4	IF_14
0x400c73a	      0xba05000000	                              mov edx, 5	      3919	eval.c	FUNCTION_69	FOR_1	IF_7	IF_12	ELSE_8	CALL_9
0x400c73f	      0xbe00000000	                              mov esi, 0	      3919	eval.c	FUNCTION_69	FOR_1	IF_7	IF_12	ELSE_8	CALL_9
0x400c744	      0xbf00000000	                              mov edi, 0	      3919	eval.c	FUNCTION_69	FOR_1	IF_7	IF_12	ELSE_8	CALL_9
0x400c749	      0xe800000000	                          call 0x400c74e	      3919	eval.c	FUNCTION_69	FOR_1	IF_7	IF_12	ELSE_8	CALL_9
0x400c74e	          0x4889c7	                            mov rdi, rax	      3919	eval.c	FUNCTION_69	FOR_1	IF_7	IF_12	ELSE_8	CALL_9
0x400c751	      0xe800000000	                          call 0x400c756	      3919	eval.c	FUNCTION_69	FOR_1	IF_7	IF_12	ELSE_8	CALL_9
0x400c756	          0x4489f0	                           mov eax, r14d	      3920	eval.c	FUNCTION_69	FOR_1	IF_7	IF_12	ELSE_8
0x400c759	      0xe9c0000000	                           jmp 0x400c81e	      3920	eval.c	FUNCTION_69	FOR_1	IF_7	IF_12	ELSE_8
0x400c75e	    0x41c704240700	                      mov dword [r12], 7	      3922	eval.c	FUNCTION_69	FOR_1	IF_7	IF_12
0x400c766	    0xf20f10642408	            movsd xmm4, qword [rsp + 8] 	      3923	eval.c	FUNCTION_69	FOR_1	IF_7	IF_12
0x400c76c	    0xf2410f116424	             movsd qword [r12 + 8], xmm4	      3923	eval.c	FUNCTION_69	FOR_1	IF_7	IF_12
0x400c773	      0xe9b5feffff	                           jmp 0x400c62d	      3923	eval.c	FUNCTION_69	FOR_1	IF_7	IF_12
0x400c778	          0x83fd2a	                           cmp ebp, 0x2a	      3928	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	IF_18
0x400c77b	            0x750c	                           jne 0x400c789	      3928	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	IF_18
0x400c77d	        0x488b0c24	                    mov rcx, qword [rsp]	      3929	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	IF_18
0x400c781	    0x480faf4c2418	            imul rcx, qword [rsp + 0x18]	      3929	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	IF_18
0x400c787	            0xeb6b	                           jmp 0x400c7f4	      3929	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	IF_18
0x400c789	          0x83fd2f	                           cmp ebp, 0x2f	      3930	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	ELSE_10	IF_19
0x400c78c	            0x7548	                           jne 0x400c7d6	      3930	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	ELSE_10	IF_19
0x400c78e	    0x48837c241800	               cmp qword [rsp + 0x18], 0	      3932	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	ELSE_10	IF_19	IF_20
0x400c794	            0x7530	                           jne 0x400c7c6	      3932	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	ELSE_10	IF_19	IF_20
0x400c796	    0x48b900000000	          movabs rcx, 0x8000000000000000	      3935	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	ELSE_10	IF_19	IF_20	IF_21
0x400c7a0	        0x488b0424	                    mov rax, qword [rsp]	      3934	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	ELSE_10	IF_19	IF_20	IF_21
0x400c7a4	          0x4885c0	                           test rax, rax	      3934	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	ELSE_10	IF_19	IF_20	IF_21
0x400c7a7	            0x744b	                            je 0x400c7f4	      3934	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	ELSE_10	IF_19	IF_20	IF_21
0x400c7a9	          0x4885c0	                           test rax, rax	      3939	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	ELSE_10	IF_19	IF_20	ELSE_12
0x400c7ac	    0x48b9ffffffff	         movabs rcx, 0x7fffffffffffffff 	      3939	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	ELSE_10	IF_19	IF_20	ELSE_12
0x400c7b6	    0x48b801000000	          movabs rax, 0x8000000000000001	      3939	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	ELSE_10	IF_19	IF_20	ELSE_12
0x400c7c0	        0x480f48c8	                          cmovs rcx, rax	      3939	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	ELSE_10	IF_19	IF_20	ELSE_12
0x400c7c4	            0xeb2e	                           jmp 0x400c7f4	      3939	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	ELSE_10	IF_19	IF_20	ELSE_12
0x400c7c6	        0x488b0424	                    mov rax, qword [rsp]	      3942	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	ELSE_10	IF_19	ELSE_13
0x400c7ca	            0x4899	                                     cqo	      3942	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	ELSE_10	IF_19	ELSE_13
0x400c7cc	      0x48f77c2418	                 idiv qword [rsp + 0x18]	      3942	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	ELSE_10	IF_19	ELSE_13
0x400c7d1	          0x4889c1	                            mov rcx, rax	      3942	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	ELSE_10	IF_19	ELSE_13
0x400c7d4	            0xeb1e	                           jmp 0x400c7f4	      3942	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	ELSE_10	IF_19	ELSE_13
0x400c7d6	      0xb900000000	                              mov ecx, 0	      3947	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	ELSE_14	IF_23
0x400c7db	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      3946	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	ELSE_14	IF_23
0x400c7e0	          0x4885d2	                           test rdx, rdx	      3946	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	ELSE_14	IF_23
0x400c7e3	            0x740f	                            je 0x400c7f4	      3946	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	ELSE_14	IF_23
0x400c7e5	        0x488b0424	                    mov rax, qword [rsp]	      3949	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	ELSE_14	ELSE_15
0x400c7e9	          0x4889d1	                            mov rcx, rdx	      3949	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	ELSE_14	ELSE_15
0x400c7ec	            0x4899	                                     cqo	      3949	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	ELSE_14	ELSE_15
0x400c7ee	          0x48f7f9	                                idiv rcx	      3949	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	ELSE_14	ELSE_15
0x400c7f1	          0x4889d1	                            mov rcx, rdx	      3949	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	ELSE_14	ELSE_15
0x400c7f4	    0x41c704240100	                      mov dword [r12], 1	      3951	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	ELSE_15
0x400c7fc	      0x49894c2408	                mov qword [r12 + 8], rcx	      3952	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	ELSE_15
0x400c801	      0xe927feffff	                           jmp 0x400c62d	      3952	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	ELSE_15
0x400c806	      0xb801000000	                              mov eax, 1	      3957	eval.c	FUNCTION_69	ELSE_15
0x400c80b	            0xeb11	                           jmp 0x400c81e	      3957	eval.c	FUNCTION_69	ELSE_15
0x400c80d	      0xb801000000	                              mov eax, 1	      3957	eval.c	FUNCTION_69	ELSE_15
0x400c812	            0xeb0a	                           jmp 0x400c81e	      3957	eval.c	FUNCTION_69	ELSE_15
0x400c814	      0xb800000000	                              mov eax, 0	      3849	eval.c	FUNCTION_69	FOR_1	IF_3	IF_5
0x400c819	            0xeb03	                           jmp 0x400c81e	      3849	eval.c	FUNCTION_69	FOR_1	IF_3	IF_5
0x400c81b	          0x4489f0	                           mov eax, r14d	      3880	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_3	IF_10
0x400c81e	      0x488b542448	            mov rdx, qword [rsp + 0x48] 	      3958	eval.c	FUNCTION_69	ELSE_15
0x400c823	    0x644833142528	                xor rdx, qword fs:[0x28]	      3958	eval.c	FUNCTION_69	ELSE_15
0x400c82c	            0x746c	                            je 0x400c89a	      3958	eval.c	FUNCTION_69	ELSE_15
0x400c82e	            0xeb65	                           jmp 0x400c895	      3958	eval.c	FUNCTION_69	ELSE_15
0x400c830	          0x488b03	                    mov rax, qword [rbx]	      3857	eval.c	FUNCTION_69	FOR_1	CALL_4
0x400c833	        0x488d7801	                      lea rdi, [rax + 1]	      3857	eval.c	FUNCTION_69	FOR_1	CALL_4
0x400c837	      0xe800000000	                          call 0x400c83c	      3857	eval.c	FUNCTION_69	FOR_1	CALL_4
0x400c83c	          0x488903	                    mov qword [rbx], rax	      3857	eval.c	FUNCTION_69	FOR_1	CALL_4
0x400c83f	      0xb900000000	                              mov ecx, 0	      3858	eval.c	FUNCTION_69	FOR_1	IF_6	CALL_5
0x400c844	          0x4489ea	                           mov edx, r13d	      3858	eval.c	FUNCTION_69	FOR_1	IF_6	CALL_5
0x400c847	      0x488d742430	                   lea rsi, [rsp + 0x30]	      3858	eval.c	FUNCTION_69	FOR_1	IF_6	CALL_5
0x400c84c	          0x4889df	                            mov rdi, rbx	      3858	eval.c	FUNCTION_69	FOR_1	IF_6	CALL_5
0x400c84f	      0xe81ff1ffff	                          call sym.eval7	      3858	eval.c	FUNCTION_69	FOR_1	IF_6	CALL_5
0x400c854	            0x85c0	                           test eax, eax	      3858	eval.c	FUNCTION_69	FOR_1	IF_6	CALL_5
0x400c856	            0x74c6	                            je 0x400c81e	      3858	eval.c	FUNCTION_69	FOR_1	IF_6	CALL_5
0x400c858	      0xe945feffff	                           jmp 0x400c6a2	      3858	eval.c	FUNCTION_69	FOR_1	IF_6	CALL_5
0x400c85d	        0x4883c701	                              add rdi, 1	      3857	eval.c	FUNCTION_69	FOR_1	CALL_4
0x400c861	      0xe800000000	                          call 0x400c866	      3857	eval.c	FUNCTION_69	FOR_1	CALL_4
0x400c866	          0x488903	                    mov qword [rbx], rax	      3857	eval.c	FUNCTION_69	FOR_1	CALL_4
0x400c869	      0xb900000000	                              mov ecx, 0	      3858	eval.c	FUNCTION_69	FOR_1	IF_6	CALL_5
0x400c86e	      0xba00000000	                              mov edx, 0	      3858	eval.c	FUNCTION_69	FOR_1	IF_6	CALL_5
0x400c873	      0x488d742430	                   lea rsi, [rsp + 0x30]	      3858	eval.c	FUNCTION_69	FOR_1	IF_6	CALL_5
0x400c878	          0x4889df	                            mov rdi, rbx	      3858	eval.c	FUNCTION_69	FOR_1	IF_6	CALL_5
0x400c87b	      0xe8f3f0ffff	                          call sym.eval7	      3858	eval.c	FUNCTION_69	FOR_1	IF_6	CALL_5
0x400c880	            0x85c0	                           test eax, eax	      3858	eval.c	FUNCTION_69	FOR_1	IF_6	CALL_5
0x400c882	     0xf85a5fdffff	                           jne 0x400c62d	      3858	eval.c	FUNCTION_69	FOR_1	IF_6	CALL_5
0x400c888	            0xeb94	                           jmp 0x400c81e	      3858	eval.c	FUNCTION_69	FOR_1	IF_6	CALL_5
0x400c88a	    0xf20f10442438	         movsd xmm0, qword [rsp + 0x38] 	      3871	eval.c	FUNCTION_69	FOR_1	IF_7	IF_8
0x400c890	      0xe97bfeffff	                           jmp 0x400c710	      3871	eval.c	FUNCTION_69	FOR_1	IF_7	IF_8
0x400c895	      0xe800000000	                          call 0x400c89a	      3958	eval.c	FUNCTION_69	ELSE_15
0x400c89a	        0x4883c458	                           add rsp, 0x58	      3958	eval.c	FUNCTION_69	ELSE_15
0x400c89e	              0x5b	                                 pop rbx	      3958	eval.c	FUNCTION_69	ELSE_15
0x400c89f	              0x5d	                                 pop rbp	      3958	eval.c	FUNCTION_69	ELSE_15
0x400c8a0	            0x415c	                                 pop r12	      3958	eval.c	FUNCTION_69	ELSE_15
0x400c8a2	            0x415d	                                 pop r13	      3958	eval.c	FUNCTION_69	ELSE_15
0x400c8a4	            0x415e	                                 pop r14	      3958	eval.c	FUNCTION_69	ELSE_15
0x400c8a6	            0x415f	                                 pop r15	      3958	eval.c	FUNCTION_69	ELSE_15
0x400c8a8	              0xc3	                                     ret	      3958	eval.c	FUNCTION_69	ELSE_15
eval4	FOR,0:SWITCH,1:DO,0:IF,15:functions,0:WHILE,0:CALL,7:ELSE,6	176
0x400742e	            0x4157	                                push r15	      3511	eval.c	FUNCTION_67
0x4007430	            0x4156	                                push r14	      3511	eval.c	FUNCTION_67
0x4007432	            0x4155	                                push r13	      3511	eval.c	FUNCTION_67
0x4007434	            0x4154	                                push r12	      3511	eval.c	FUNCTION_67
0x4007436	              0x55	                                push rbp	      3511	eval.c	FUNCTION_67
0x4007437	              0x53	                                push rbx	      3511	eval.c	FUNCTION_67
0x4007438	        0x4883ec38	                           sub rsp, 0x38	      3511	eval.c	FUNCTION_67
0x400743c	          0x4889fd	                            mov rbp, rdi	      3511	eval.c	FUNCTION_67
0x400743f	          0x4989f6	                            mov r14, rsi	      3511	eval.c	FUNCTION_67
0x4007442	          0x4189d5	                           mov r13d, edx	      3511	eval.c	FUNCTION_67
0x4007445	    0x64488b042528	                mov rax, qword fs:[0x28]	      3511	eval.c	FUNCTION_67
0x400744e	      0x4889442428	             mov qword [rsp + 0x28], rax	      3511	eval.c	FUNCTION_67
0x4007453	            0x31c0	                            xor eax, eax	      3511	eval.c	FUNCTION_67
0x4007455	      0xe84f540000	                          call sym.eval5	      3523	eval.c	FUNCTION_67	IF_1	CALL_1
0x400745a	            0x89c3	                            mov ebx, eax	      3523	eval.c	FUNCTION_67	IF_1	CALL_1
0x400745c	            0x85c0	                           test eax, eax	      3523	eval.c	FUNCTION_67	IF_1	CALL_1
0x400745e	     0xf8498010000	                            je 0x40075fc	      3523	eval.c	FUNCTION_67	IF_1	CALL_1
0x4007464	        0x4c8b6500	                    mov r12, qword [rbp]	      3526	eval.c	FUNCTION_67
0x4007468	      0x410fb60424	                   movzx eax, byte [r12]	      3527	eval.c	FUNCTION_67	SWITCH_1
0x400746d	            0x3c3d	                            cmp al, 0x3d	      3527	eval.c	FUNCTION_67	SWITCH_1
0x400746f	            0x7426	                            je 0x4007497	      3527	eval.c	FUNCTION_67	SWITCH_1
0x4007471	            0x3c3d	                            cmp al, 0x3d	      3527	eval.c	FUNCTION_67	SWITCH_1
0x4007473	            0x7711	                            ja 0x4007486	      3527	eval.c	FUNCTION_67	SWITCH_1
0x4007475	            0x3c21	                            cmp al, 0x21	      3527	eval.c	FUNCTION_67	SWITCH_1
0x4007477	            0x743e	                            je 0x40074b7	      3527	eval.c	FUNCTION_67	SWITCH_1
0x4007479	            0x3c3c	                            cmp al, 0x3c	      3527	eval.c	FUNCTION_67	SWITCH_1
0x400747b	     0xf8486000000	                            je 0x4007507	      3527	eval.c	FUNCTION_67	SWITCH_1
0x4007481	      0xe971010000	                           jmp 0x40075f7	      3527	eval.c	FUNCTION_67	SWITCH_1
0x4007486	            0x3c3e	                            cmp al, 0x3e	      3527	eval.c	FUNCTION_67	SWITCH_1
0x4007488	            0x744d	                            je 0x40074d7	      3527	eval.c	FUNCTION_67	SWITCH_1
0x400748a	            0x3c69	                            cmp al, 0x69	      3527	eval.c	FUNCTION_67	SWITCH_1
0x400748c	     0xf84a5000000	                            je 0x4007537	      3527	eval.c	FUNCTION_67	SWITCH_1
0x4007492	      0xe960010000	                           jmp 0x40075f7	      3527	eval.c	FUNCTION_67	SWITCH_1
0x4007497	    0x410fb6442401	               movzx eax, byte [r12 + 1]	      3529	eval.c	FUNCTION_67	SWITCH_1	IF_2
0x400749d	            0x3c3d	                            cmp al, 0x3d	      3529	eval.c	FUNCTION_67	SWITCH_1	IF_2
0x400749f	     0xf8472010000	                            je 0x4007617	      3529	eval.c	FUNCTION_67	SWITCH_1	IF_2
0x40074a5	      0xbb01000000	                              mov ebx, 1	      3608	eval.c	FUNCTION_67
0x40074aa	            0x3c7e	                            cmp al, 0x7e	      3531	eval.c	FUNCTION_67	SWITCH_1	ELSE_1	IF_3
0x40074ac	     0xf854a010000	                           jne 0x40075fc	      3531	eval.c	FUNCTION_67	SWITCH_1	ELSE_1	IF_3
0x40074b2	      0xe975010000	                           jmp 0x400762c	      3531	eval.c	FUNCTION_67	SWITCH_1	ELSE_1	IF_3
0x40074b7	    0x410fb6442401	               movzx eax, byte [r12 + 1]	      3534	eval.c	FUNCTION_67	SWITCH_1	IF_4
0x40074bd	            0x3c3d	                            cmp al, 0x3d	      3534	eval.c	FUNCTION_67	SWITCH_1	IF_4
0x40074bf	     0xf847c010000	                            je 0x4007641	      3534	eval.c	FUNCTION_67	SWITCH_1	IF_4
0x40074c5	      0xbb01000000	                              mov ebx, 1	      3608	eval.c	FUNCTION_67
0x40074ca	            0x3c7e	                            cmp al, 0x7e	      3536	eval.c	FUNCTION_67	SWITCH_1	ELSE_2	IF_5
0x40074cc	     0xf852a010000	                           jne 0x40075fc	      3536	eval.c	FUNCTION_67	SWITCH_1	ELSE_2	IF_5
0x40074d2	      0xe97f010000	                           jmp 0x4007656	      3536	eval.c	FUNCTION_67	SWITCH_1	ELSE_2	IF_5
0x40074d7	    0x41807c24013d	                cmp byte [r12 + 1], 0x3d	      3517	eval.c	FUNCTION_67
0x40074dd	        0x400f94c7	                                sete dil	      3517	eval.c	FUNCTION_67
0x40074e1	        0x400fb6ff	                          movzx edi, dil	      3517	eval.c	FUNCTION_67
0x40074e5	          0x83c701	                              add edi, 1	      3517	eval.c	FUNCTION_67
0x40074e8	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      3517	eval.c	FUNCTION_67
0x40074f0	    0x41807c24013d	                cmp byte [r12 + 1], 0x3d	      3517	eval.c	FUNCTION_67
0x40074f6	        0x410f94c7	                               sete r15b	      3517	eval.c	FUNCTION_67
0x40074fa	        0x450fb6ff	                        movzx r15d, r15b	      3517	eval.c	FUNCTION_67
0x40074fe	        0x4183c703	                             add r15d, 3	      3517	eval.c	FUNCTION_67
0x4007502	      0xe98c010000	                           jmp 0x4007693	      3517	eval.c	FUNCTION_67
0x4007507	    0x41807c24013d	                cmp byte [r12 + 1], 0x3d	      3517	eval.c	FUNCTION_67
0x400750d	        0x400f94c7	                                sete dil	      3517	eval.c	FUNCTION_67
0x4007511	        0x400fb6ff	                          movzx edi, dil	      3517	eval.c	FUNCTION_67
0x4007515	          0x83c701	                              add edi, 1	      3517	eval.c	FUNCTION_67
0x4007518	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      3517	eval.c	FUNCTION_67
0x4007520	    0x41807c24013d	                cmp byte [r12 + 1], 0x3d	      3517	eval.c	FUNCTION_67
0x4007526	        0x410f94c7	                               sete r15b	      3517	eval.c	FUNCTION_67
0x400752a	        0x450fb6ff	                        movzx r15d, r15b	      3517	eval.c	FUNCTION_67
0x400752e	        0x4183c705	                             add r15d, 5	      3517	eval.c	FUNCTION_67
0x4007532	      0xe95c010000	                           jmp 0x4007693	      3517	eval.c	FUNCTION_67
0x4007537	      0xbb01000000	                              mov ebx, 1	      3608	eval.c	FUNCTION_67
0x400753c	    0x41807c240173	                cmp byte [r12 + 1], 0x73	      3555	eval.c	FUNCTION_67	SWITCH_1	ELSE_4	IF_8
0x4007542	     0xf85b4000000	                           jne 0x40075fc	      3555	eval.c	FUNCTION_67	SWITCH_1	ELSE_4	IF_8
0x4007548	    0x41807c24026e	                cmp byte [r12 + 2], 0x6e	      3557	eval.c	FUNCTION_67	SWITCH_1	ELSE_4	IF_8	IF_9
0x400754e	     0xf8554010000	                           jne 0x40076a8	      3557	eval.c	FUNCTION_67	SWITCH_1	ELSE_4	IF_8	IF_9
0x4007554	    0x41807c24036f	                cmp byte [r12 + 3], 0x6f	      3557	eval.c	FUNCTION_67	SWITCH_1	ELSE_4	IF_8	IF_9
0x400755a	     0xf8548010000	                           jne 0x40076a8	      3557	eval.c	FUNCTION_67	SWITCH_1	ELSE_4	IF_8	IF_9
0x4007560	    0x41807c240474	                cmp byte [r12 + 4], 0x74	      3557	eval.c	FUNCTION_67	SWITCH_1	ELSE_4	IF_8	IF_9
0x4007566	     0xf853c010000	                           jne 0x40076a8	      3557	eval.c	FUNCTION_67	SWITCH_1	ELSE_4	IF_8	IF_9
0x400756c	      0xe95d010000	                           jmp 0x40076ce	      3557	eval.c	FUNCTION_67	SWITCH_1	ELSE_4	IF_8	IF_9
0x4007571	          0x83c701	                              add edi, 1	      3578	eval.c	FUNCTION_67	IF_11	IF_12
0x4007574	    0xc74424080100	                  mov dword [rsp + 8], 1	      3577	eval.c	FUNCTION_67	IF_11	IF_12
0x400757c	            0xeb19	                           jmp 0x4007597	      3577	eval.c	FUNCTION_67	IF_11	IF_12
0x400757e	    0x8b0d00000000	            mov ecx, dword [0x04007584] 	      3588	eval.c	FUNCTION_67	IF_11	ELSE_6
0x4007584	        0x894c2408	                mov dword [rsp + 8], ecx	      3588	eval.c	FUNCTION_67	IF_11	ELSE_6
0x4007588	            0x3c23	                            cmp al, 0x23	      3581	eval.c	FUNCTION_67	IF_11	ELSE_5	IF_13
0x400758a	            0x750b	                           jne 0x4007597	      3581	eval.c	FUNCTION_67	IF_11	ELSE_5	IF_13
0x400758c	          0x83c701	                              add edi, 1	      3584	eval.c	FUNCTION_67	IF_11	ELSE_5	IF_13
0x400758f	    0xc74424080000	                  mov dword [rsp + 8], 0	      3583	eval.c	FUNCTION_67	IF_11	ELSE_5	IF_13
0x4007597	          0x4863ff	                         movsxd rdi, edi	      3593	eval.c	FUNCTION_67	IF_11	CALL_3
0x400759a	          0x4c01e7	                            add rdi, r12	      3593	eval.c	FUNCTION_67	IF_11	CALL_3
0x400759d	      0xe800000000	                          call 0x40075a2	      3593	eval.c	FUNCTION_67	IF_11	CALL_3
0x40075a2	        0x48894500	                    mov qword [rbp], rax	      3593	eval.c	FUNCTION_67	IF_11	CALL_3
0x40075a6	          0x4489ea	                           mov edx, r13d	      3594	eval.c	FUNCTION_67	IF_11	IF_14	CALL_4
0x40075a9	      0x488d742410	                   lea rsi, [rsp + 0x10]	      3594	eval.c	FUNCTION_67	IF_11	IF_14	CALL_4
0x40075ae	          0x4889ef	                            mov rdi, rbp	      3594	eval.c	FUNCTION_67	IF_11	IF_14	CALL_4
0x40075b1	      0xe8f3520000	                          call sym.eval5	      3594	eval.c	FUNCTION_67	IF_11	IF_14	CALL_4
0x40075b6	            0x89c3	                            mov ebx, eax	      3594	eval.c	FUNCTION_67	IF_11	IF_14	CALL_4
0x40075b8	            0x85c0	                           test eax, eax	      3594	eval.c	FUNCTION_67	IF_11	IF_14	CALL_4
0x40075ba	            0x750a	                           jne 0x40075c6	      3594	eval.c	FUNCTION_67	IF_11	IF_14	CALL_4
0x40075bc	          0x4c89f7	                            mov rdi, r14	      3596	eval.c	FUNCTION_67	IF_11	IF_14	CALL_5
0x40075bf	      0xe800000000	                          call 0x40075c4	      3596	eval.c	FUNCTION_67	IF_11	IF_14	CALL_5
0x40075c4	            0xeb36	                           jmp 0x40075fc	      3597	eval.c	FUNCTION_67	IF_11	IF_14
0x40075c6	      0xbb01000000	                              mov ebx, 1	      3608	eval.c	FUNCTION_67
0x40075cb	          0x4585ed	                         test r13d, r13d	      3599	eval.c	FUNCTION_67	IF_11	IF_15
0x40075ce	            0x742c	                            je 0x40075fc	      3599	eval.c	FUNCTION_67	IF_11	IF_15
0x40075d0	      0x448b442408	                mov r8d, dword [rsp + 8]	      3601	eval.c	FUNCTION_67	IF_11	IF_15	CALL_6
0x40075d5	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      3601	eval.c	FUNCTION_67	IF_11	IF_15	CALL_6
0x40075d9	          0x4489fa	                           mov edx, r15d	      3601	eval.c	FUNCTION_67	IF_11	IF_15	CALL_6
0x40075dc	      0x488d742410	                   lea rsi, [rsp + 0x10]	      3601	eval.c	FUNCTION_67	IF_11	IF_15	CALL_6
0x40075e1	          0x4c89f7	                            mov rdi, r14	      3601	eval.c	FUNCTION_67	IF_11	IF_15	CALL_6
0x40075e4	      0xe800000000	                          call 0x40075e9	      3601	eval.c	FUNCTION_67	IF_11	IF_15	CALL_6
0x40075e9	            0x89c3	                            mov ebx, eax	      3601	eval.c	FUNCTION_67	IF_11	IF_15	CALL_6
0x40075eb	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      3603	eval.c	FUNCTION_67	IF_11	IF_15	CALL_7
0x40075f0	      0xe800000000	                          call 0x40075f5	      3603	eval.c	FUNCTION_67	IF_11	IF_15	CALL_7
0x40075f5	            0xeb05	                           jmp 0x40075fc	      3604	eval.c	FUNCTION_67	IF_11	IF_15
0x40075f7	      0xbb01000000	                              mov ebx, 1	      3608	eval.c	FUNCTION_67
0x40075fc	            0x89d8	                            mov eax, ebx	      3609	eval.c	FUNCTION_67
0x40075fe	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      3609	eval.c	FUNCTION_67
0x4007603	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3609	eval.c	FUNCTION_67
0x400760c	     0xf84e7000000	                            je 0x40076f9	      3609	eval.c	FUNCTION_67
0x4007612	      0xe9dd000000	                           jmp 0x40076f4	      3609	eval.c	FUNCTION_67
0x4007617	      0xbf02000000	                              mov edi, 2	      3517	eval.c	FUNCTION_67
0x400761c	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      3516	eval.c	FUNCTION_67
0x4007624	    0x41bf01000000	                             mov r15d, 1	      3530	eval.c	FUNCTION_67	SWITCH_1	IF_2
0x400762a	            0xeb67	                           jmp 0x4007693	      3530	eval.c	FUNCTION_67	SWITCH_1	IF_2
0x400762c	      0xbf02000000	                              mov edi, 2	      3517	eval.c	FUNCTION_67
0x4007631	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      3516	eval.c	FUNCTION_67
0x4007639	    0x41bf07000000	                             mov r15d, 7	      3532	eval.c	FUNCTION_67	SWITCH_1	ELSE_1	IF_3
0x400763f	            0xeb52	                           jmp 0x4007693	      3532	eval.c	FUNCTION_67	SWITCH_1	ELSE_1	IF_3
0x4007641	      0xbf02000000	                              mov edi, 2	      3517	eval.c	FUNCTION_67
0x4007646	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      3516	eval.c	FUNCTION_67
0x400764e	    0x41bf02000000	                             mov r15d, 2	      3535	eval.c	FUNCTION_67	SWITCH_1	IF_4
0x4007654	            0xeb3d	                           jmp 0x4007693	      3535	eval.c	FUNCTION_67	SWITCH_1	IF_4
0x4007656	      0xbf02000000	                              mov edi, 2	      3517	eval.c	FUNCTION_67
0x400765b	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      3516	eval.c	FUNCTION_67
0x4007663	    0x41bf08000000	                             mov r15d, 8	      3537	eval.c	FUNCTION_67	SWITCH_1	ELSE_2	IF_5
0x4007669	            0xeb28	                           jmp 0x4007693	      3537	eval.c	FUNCTION_67	SWITCH_1	ELSE_2	IF_5
0x400766b	      0xbf02000000	                              mov edi, 2	      3560	eval.c	FUNCTION_67	SWITCH_1	ELSE_4	IF_8	IF_10	CALL_2
0x4007670	    0xc744240c0100	                mov dword [rsp + 0xc], 1	      3563	eval.c	FUNCTION_67	SWITCH_1	ELSE_4	IF_8	IF_10
0x4007678	    0x41bf01000000	                             mov r15d, 1	      3562	eval.c	FUNCTION_67	SWITCH_1	ELSE_4	IF_8	IF_10
0x400767e	            0xeb13	                           jmp 0x4007693	      3562	eval.c	FUNCTION_67	SWITCH_1	ELSE_4	IF_8	IF_10
0x4007680	      0xbf05000000	                              mov edi, 5	      3558	eval.c	FUNCTION_67	SWITCH_1	ELSE_4	IF_8	IF_9
0x4007685	    0xc744240c0100	                mov dword [rsp + 0xc], 1	      3563	eval.c	FUNCTION_67	SWITCH_1	ELSE_4	IF_8	IF_10
0x400768d	    0x41bf02000000	                             mov r15d, 2	      3562	eval.c	FUNCTION_67	SWITCH_1	ELSE_4	IF_8	IF_10
0x4007693	          0x4863c7	                         movsxd rax, edi	      3575	eval.c	FUNCTION_67	IF_11	IF_12
0x4007696	      0x410fb60404	             movzx eax, byte [r12 + rax]	      3575	eval.c	FUNCTION_67	IF_11	IF_12
0x400769b	            0x3c3f	                            cmp al, 0x3f	      3575	eval.c	FUNCTION_67	IF_11	IF_12
0x400769d	     0xf85dbfeffff	                           jne 0x400757e	      3575	eval.c	FUNCTION_67	IF_11	IF_12
0x40076a3	      0xe9c9feffff	                           jmp 0x4007571	      3575	eval.c	FUNCTION_67	IF_11	IF_12
0x40076a8	    0x410fb65c2402	               movzx ebx, byte [r12 + 2]	      3559	eval.c	FUNCTION_67	SWITCH_1	ELSE_4	IF_8
0x40076ae	      0xe800000000	                          call 0x40076b3	      3560	eval.c	FUNCTION_67	SWITCH_1	ELSE_4	IF_8	IF_10	CALL_2
0x40076b3	           0xfb6d3	                           movzx edx, bl	      3560	eval.c	FUNCTION_67	SWITCH_1	ELSE_4	IF_8	IF_10	CALL_2
0x40076b6	          0x488b00	                    mov rax, qword [rax]	      3560	eval.c	FUNCTION_67	SWITCH_1	ELSE_4	IF_8	IF_10	CALL_2
0x40076b9	        0xf6045008	              test byte [rax + rdx*2], 8	      3560	eval.c	FUNCTION_67	SWITCH_1	ELSE_4	IF_8	IF_10	CALL_2
0x40076bd	            0x7505	                           jne 0x40076c4	      3560	eval.c	FUNCTION_67	SWITCH_1	ELSE_4	IF_8	IF_10	CALL_2
0x40076bf	          0x80fb5f	                            cmp bl, 0x5f	      3560	eval.c	FUNCTION_67	SWITCH_1	ELSE_4	IF_8	IF_10	CALL_2
0x40076c2	            0x75a7	                           jne 0x400766b	      3560	eval.c	FUNCTION_67	SWITCH_1	ELSE_4	IF_8	IF_10	CALL_2
0x40076c4	      0xbb01000000	                              mov ebx, 1	      3608	eval.c	FUNCTION_67
0x40076c9	      0xe92effffff	                           jmp 0x40075fc	      3608	eval.c	FUNCTION_67
0x40076ce	    0x410fb65c2405	               movzx ebx, byte [r12 + 5]	      3559	eval.c	FUNCTION_67	SWITCH_1	ELSE_4	IF_8
0x40076d4	      0xe800000000	                          call 0x40076d9	      3560	eval.c	FUNCTION_67	SWITCH_1	ELSE_4	IF_8	IF_10	CALL_2
0x40076d9	           0xfb6d3	                           movzx edx, bl	      3560	eval.c	FUNCTION_67	SWITCH_1	ELSE_4	IF_8	IF_10	CALL_2
0x40076dc	          0x488b00	                    mov rax, qword [rax]	      3560	eval.c	FUNCTION_67	SWITCH_1	ELSE_4	IF_8	IF_10	CALL_2
0x40076df	        0xf6045008	              test byte [rax + rdx*2], 8	      3560	eval.c	FUNCTION_67	SWITCH_1	ELSE_4	IF_8	IF_10	CALL_2
0x40076e3	            0x7505	                           jne 0x40076ea	      3560	eval.c	FUNCTION_67	SWITCH_1	ELSE_4	IF_8	IF_10	CALL_2
0x40076e5	          0x80fb5f	                            cmp bl, 0x5f	      3560	eval.c	FUNCTION_67	SWITCH_1	ELSE_4	IF_8	IF_10	CALL_2
0x40076e8	            0x7596	                           jne 0x4007680	      3560	eval.c	FUNCTION_67	SWITCH_1	ELSE_4	IF_8	IF_10	CALL_2
0x40076ea	      0xbb01000000	                              mov ebx, 1	      3608	eval.c	FUNCTION_67
0x40076ef	      0xe908ffffff	                           jmp 0x40075fc	      3608	eval.c	FUNCTION_67
0x40076f4	      0xe800000000	                          call 0x40076f9	      3609	eval.c	FUNCTION_67
0x40076f9	        0x4883c438	                           add rsp, 0x38	      3609	eval.c	FUNCTION_67
0x40076fd	              0x5b	                                 pop rbx	      3609	eval.c	FUNCTION_67
0x40076fe	              0x5d	                                 pop rbp	      3609	eval.c	FUNCTION_67
0x40076ff	            0x415c	                                 pop r12	      3609	eval.c	FUNCTION_67
0x4007701	            0x415d	                                 pop r13	      3609	eval.c	FUNCTION_67
0x4007703	            0x415e	                                 pop r14	      3609	eval.c	FUNCTION_67
0x4007705	            0x415f	                                 pop r15	      3609	eval.c	FUNCTION_67
0x4007707	              0xc3	                                     ret	      3609	eval.c	FUNCTION_67
free_for_info	FOR,0:SWITCH,0:DO,0:IF,1:functions,0:WHILE,0:CALL,3:ELSE,0	15
0x40006f6	              0x53	                                push rbx	      2587	eval.c	FUNCTION_50
0x40006f7	          0x4889fb	                            mov rbx, rdi	      2587	eval.c	FUNCTION_50
0x40006fa	          0x4885ff	                           test rdi, rdi	      2590	eval.c	FUNCTION_50	IF_1
0x40006fd	            0x741b	                            je 0x400071a	      2590	eval.c	FUNCTION_50	IF_1
0x40006ff	        0x488b7f18	            mov rdi, qword [rdi + 0x18] 	      2590	eval.c	FUNCTION_50	IF_1
0x4000703	          0x4885ff	                           test rdi, rdi	      2590	eval.c	FUNCTION_50	IF_1
0x4000706	            0x7412	                            je 0x400071a	      2590	eval.c	FUNCTION_50	IF_1
0x4000708	        0x488d7308	                      lea rsi, [rbx + 8]	      2592	eval.c	FUNCTION_50	IF_1	CALL_1
0x400070c	      0xe800000000	                          call 0x4000711	      2592	eval.c	FUNCTION_50	IF_1	CALL_1
0x4000711	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      2593	eval.c	FUNCTION_50	IF_1	CALL_2
0x4000715	      0xe800000000	                          call 0x400071a	      2593	eval.c	FUNCTION_50	IF_1	CALL_2
0x400071a	          0x4889df	                            mov rdi, rbx	      2595	eval.c	FUNCTION_50	CALL_3
0x400071d	      0xe800000000	                          call 0x4000722	      2595	eval.c	FUNCTION_50	CALL_3
0x4000722	              0x5b	                                 pop rbx	      2596	eval.c	FUNCTION_50
0x4000723	              0xc3	                                     ret	      2596	eval.c	FUNCTION_50
clear_lval	FOR,0:SWITCH,0:DO,0:IF,0:functions,0:WHILE,0:CALL,2:ELSE,0	8
0x40006de	              0x53	                                push rbx	      2229	eval.c	FUNCTION_45
0x40006df	          0x4889fb	                            mov rbx, rdi	      2229	eval.c	FUNCTION_45
0x40006e2	        0x488b7f08	                mov rdi, qword [rdi + 8]	      2230	eval.c	FUNCTION_45	CALL_1
0x40006e6	      0xe800000000	                          call 0x40006eb	      2230	eval.c	FUNCTION_45	CALL_1
0x40006eb	        0x488b7b58	            mov rdi, qword [rbx + 0x58] 	      2231	eval.c	FUNCTION_45	CALL_2
0x40006ef	      0xe800000000	                          call 0x40006f4	      2231	eval.c	FUNCTION_45	CALL_2
0x40006f4	              0x5b	                                 pop rbx	      2232	eval.c	FUNCTION_45
0x40006f5	              0xc3	                                     ret	      2232	eval.c	FUNCTION_45
get_tv_string	FOR,0:SWITCH,0:DO,0:IF,0:functions,0:WHILE,0:CALL,1:ELSE,0	5
0x4003905	        0x4883ec08	                              sub rsp, 8	      7076	eval.c	FUNCTION_127
0x4003909	      0xbe00000000	                              mov esi, 0	      7079	eval.c	FUNCTION_127	CALL_1
0x400390e	      0xe800000000	                          call 0x4003913	      7079	eval.c	FUNCTION_127	CALL_1
0x4003913	        0x4883c408	                              add rsp, 8	      7080	eval.c	FUNCTION_127
0x4003917	              0xc3	                                     ret	      7080	eval.c	FUNCTION_127
get_user_var_name	FOR,0:SWITCH,0:DO,0:IF,11:functions,0:WHILE,4:CALL,11:ELSE,4	176
0x400099e	        0x4883ec08	                              sub rsp, 8	      3135	eval.c	FUNCTION_61
0x40009a2	            0x85f6	                           test esi, esi	      3144	eval.c	FUNCTION_61	IF_1
0x40009a4	            0x7549	                           jne 0x40009ef	      3144	eval.c	FUNCTION_61	IF_1
0x40009a6	    0xc70500000000	               mov dword [0x040009b0], 0	      3146	eval.c	FUNCTION_61	IF_1
0x40009b0	    0x48c705000000	               mov qword [0x040009bb], 0	      3146	eval.c	FUNCTION_61	IF_1
0x40009bb	    0x48c705000000	               mov qword [0x040009c6], 0	      3146	eval.c	FUNCTION_61	IF_1
0x40009c6	    0x48c705000000	               mov qword [0x040009d1], 0	      3146	eval.c	FUNCTION_61	IF_1
0x40009d1	    0x48c705000000	               mov qword [0x040009dc], 0	      3147	eval.c	FUNCTION_61	IF_1
0x40009dc	    0x48833d000000	               cmp qword [0x040009e4], 0	      3151	eval.c	FUNCTION_61	IF_2
0x40009e4	     0xf85b5020000	                           jne 0x4000c9f	      3151	eval.c	FUNCTION_61	IF_2
0x40009ea	      0xe9d0020000	                           jmp 0x4000cbf	      3151	eval.c	FUNCTION_61	IF_2
0x40009ef	    0x488b05000000	            mov rax, qword [0x040009f6] 	      3151	eval.c	FUNCTION_61	IF_2
0x40009f6	    0x483905000000	            cmp qword [0x040009fd], rax 	      3151	eval.c	FUNCTION_61	IF_2
0x40009fd	     0xf8693000000	                           jbe 0x4000a96	      3151	eval.c	FUNCTION_61	IF_2
0x4000a03	        0x488d5001	                      lea rdx, [rax + 1]	      3153	eval.c	FUNCTION_61	IF_2	IF_3
0x4000a07	    0x488915000000	            mov qword [0x04000a0e], rdx 	      3153	eval.c	FUNCTION_61	IF_2	IF_3
0x4000a0e	          0x4885c0	                           test rax, rax	      3153	eval.c	FUNCTION_61	IF_2	IF_3
0x4000a11	            0x7510	                           jne 0x4000a23	      3153	eval.c	FUNCTION_61	IF_2	IF_3
0x4000a13	    0x488b05000000	            mov rax, qword [0x04000a1a] 	      3154	eval.c	FUNCTION_61	IF_2	IF_3
0x4000a1a	    0x488905000000	            mov qword [0x04000a21], rax 	      3154	eval.c	FUNCTION_61	IF_2	IF_3
0x4000a21	            0xeb08	                           jmp 0x4000a2b	      3154	eval.c	FUNCTION_61	IF_2	IF_3
0x4000a23	    0x488305000000	            add qword [0x04000a2b], 0x10	      3156	eval.c	FUNCTION_61	IF_2	ELSE_1
0x4000a2b	    0x488b15000000	            mov rdx, qword [0x04000a32] 	      3157	eval.c	FUNCTION_61	IF_2	WHILE_1	CALL_1
0x4000a32	        0x488b4208	                mov rax, qword [rdx + 8]	      3157	eval.c	FUNCTION_61	IF_2	WHILE_1	CALL_1
0x4000a36	    0x483d00000000	                              cmp rax, 0	      3157	eval.c	FUNCTION_61	IF_2	WHILE_1	CALL_1
0x4000a3c	            0x7405	                            je 0x4000a43	      3157	eval.c	FUNCTION_61	IF_2	WHILE_1	CALL_1
0x4000a3e	          0x4885c0	                           test rax, rax	      3157	eval.c	FUNCTION_61	IF_2	WHILE_1	CALL_1
0x4000a41	            0x7523	                           jne 0x4000a66	      3157	eval.c	FUNCTION_61	IF_2	WHILE_1	CALL_1
0x4000a43	        0x4883c210	                           add rdx, 0x10	      3157	eval.c	FUNCTION_61	IF_2	WHILE_1	CALL_1
0x4000a47	          0x4889d1	                            mov rcx, rdx	      3158	eval.c	FUNCTION_61	IF_2	WHILE_1
0x4000a4a	        0x488b4208	                mov rax, qword [rdx + 8]	      3157	eval.c	FUNCTION_61	IF_2	WHILE_1	CALL_1
0x4000a4e	        0x4883c210	                           add rdx, 0x10	      3157	eval.c	FUNCTION_61	IF_2	WHILE_1	CALL_1
0x4000a52	    0x483d00000000	                              cmp rax, 0	      3157	eval.c	FUNCTION_61	IF_2	WHILE_1	CALL_1
0x4000a58	            0x74ed	                            je 0x4000a47	      3157	eval.c	FUNCTION_61	IF_2	WHILE_1	CALL_1
0x4000a5a	          0x4885c0	                           test rax, rax	      3157	eval.c	FUNCTION_61	IF_2	WHILE_1	CALL_1
0x4000a5d	            0x74e8	                            je 0x4000a47	      3157	eval.c	FUNCTION_61	IF_2	WHILE_1	CALL_1
0x4000a5f	    0x48890d000000	            mov qword [0x04000a66], rcx 	      3157	eval.c	FUNCTION_61	IF_2	WHILE_1	CALL_1
0x4000a66	        0x488b7f08	                mov rdi, qword [rdi + 8]	      3159	eval.c	FUNCTION_61	IF_2	IF_4	CALL_2
0x4000a6a	      0xbe00000000	                              mov esi, 0	      3159	eval.c	FUNCTION_61	IF_2	IF_4	CALL_2
0x4000a6f	      0xb902000000	                              mov ecx, 2	      3159	eval.c	FUNCTION_61	IF_2	IF_4	CALL_2
0x4000a74	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3159	eval.c	FUNCTION_61	IF_2	IF_4	CALL_2
0x4000a76	           0xf97c1	                                 seta cl	      3159	eval.c	FUNCTION_61	IF_2	IF_4	CALL_2
0x4000a79	           0xf92c2	                                 setb dl	      3159	eval.c	FUNCTION_61	IF_2	IF_4	CALL_2
0x4000a7c	            0x38d1	                              cmp cl, dl	      3159	eval.c	FUNCTION_61	IF_2	IF_4	CALL_2
0x4000a7e	     0xf855b020000	                           jne 0x4000cdf	      3159	eval.c	FUNCTION_61	IF_2	IF_4	CALL_2
0x4000a84	          0x4889c6	                            mov rsi, rax	      3160	eval.c	FUNCTION_61	IF_2	CALL_3
0x4000a87	      0xbf67000000	                           mov edi, 0x67	      3160	eval.c	FUNCTION_61	IF_2	CALL_3
0x4000a8c	      0xe8b5f8ffff	             call sym.cat_prefix_varname	      3160	eval.c	FUNCTION_61	IF_2	CALL_3
0x4000a91	      0xe949020000	                           jmp 0x4000cdf	      3160	eval.c	FUNCTION_61	IF_2	CALL_3
0x4000a96	    0x488b05000000	            mov rax, qword [0x04000a9d] 	      3165	eval.c	FUNCTION_61
0x4000a9d	    0x488b80301700	          mov rax, qword [rax + 0x1730] 	      3165	eval.c	FUNCTION_61
0x4000aa4	    0x488b15000000	            mov rdx, qword [0x04000aab] 	      3166	eval.c	FUNCTION_61	IF_5
0x4000aab	        0x48395018	            cmp qword [rax + 0x18], rdx 	      3166	eval.c	FUNCTION_61	IF_5
0x4000aaf	            0x7671	                           jbe 0x4000b22	      3166	eval.c	FUNCTION_61	IF_5
0x4000ab1	        0x488d4a01	                      lea rcx, [rdx + 1]	      3168	eval.c	FUNCTION_61	IF_5	IF_6
0x4000ab5	    0x48890d000000	            mov qword [0x04000abc], rcx 	      3168	eval.c	FUNCTION_61	IF_5	IF_6
0x4000abc	          0x4885d2	                           test rdx, rdx	      3168	eval.c	FUNCTION_61	IF_5	IF_6
0x4000abf	            0x750d	                           jne 0x4000ace	      3168	eval.c	FUNCTION_61	IF_5	IF_6
0x4000ac1	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3169	eval.c	FUNCTION_61	IF_5	IF_6
0x4000ac5	    0x488905000000	            mov qword [0x04000acc], rax 	      3169	eval.c	FUNCTION_61	IF_5	IF_6
0x4000acc	            0xeb08	                           jmp 0x4000ad6	      3169	eval.c	FUNCTION_61	IF_5	IF_6
0x4000ace	    0x488305000000	            add qword [0x04000ad6], 0x10	      3171	eval.c	FUNCTION_61	IF_5	ELSE_2
0x4000ad6	    0x488b05000000	            mov rax, qword [0x04000add] 	      3172	eval.c	FUNCTION_61	IF_5	WHILE_2	CALL_4
0x4000add	        0x488b7008	                mov rsi, qword [rax + 8]	      3172	eval.c	FUNCTION_61	IF_5	WHILE_2	CALL_4
0x4000ae1	    0x4881fe000000	                              cmp rsi, 0	      3172	eval.c	FUNCTION_61	IF_5	WHILE_2	CALL_4
0x4000ae8	            0x7405	                            je 0x4000aef	      3172	eval.c	FUNCTION_61	IF_5	WHILE_2	CALL_4
0x4000aea	          0x4885f6	                           test rsi, rsi	      3172	eval.c	FUNCTION_61	IF_5	WHILE_2	CALL_4
0x4000aed	            0x7524	                           jne 0x4000b13	      3172	eval.c	FUNCTION_61	IF_5	WHILE_2	CALL_4
0x4000aef	        0x4883c010	                           add rax, 0x10	      3172	eval.c	FUNCTION_61	IF_5	WHILE_2	CALL_4
0x4000af3	          0x4889c2	                            mov rdx, rax	      3173	eval.c	FUNCTION_61	IF_5	WHILE_2
0x4000af6	        0x488b7008	                mov rsi, qword [rax + 8]	      3172	eval.c	FUNCTION_61	IF_5	WHILE_2	CALL_4
0x4000afa	        0x4883c010	                           add rax, 0x10	      3172	eval.c	FUNCTION_61	IF_5	WHILE_2	CALL_4
0x4000afe	    0x4881fe000000	                              cmp rsi, 0	      3172	eval.c	FUNCTION_61	IF_5	WHILE_2	CALL_4
0x4000b05	            0x74ec	                            je 0x4000af3	      3172	eval.c	FUNCTION_61	IF_5	WHILE_2	CALL_4
0x4000b07	          0x4885f6	                           test rsi, rsi	      3172	eval.c	FUNCTION_61	IF_5	WHILE_2	CALL_4
0x4000b0a	            0x74e7	                            je 0x4000af3	      3172	eval.c	FUNCTION_61	IF_5	WHILE_2	CALL_4
0x4000b0c	    0x488915000000	            mov qword [0x04000b13], rdx 	      3172	eval.c	FUNCTION_61	IF_5	WHILE_2	CALL_4
0x4000b13	      0xbf62000000	                           mov edi, 0x62	      3174	eval.c	FUNCTION_61	IF_5	CALL_5
0x4000b18	      0xe829f8ffff	             call sym.cat_prefix_varname	      3174	eval.c	FUNCTION_61	IF_5	CALL_5
0x4000b1d	      0xe9bd010000	                           jmp 0x4000cdf	      3174	eval.c	FUNCTION_61	IF_5	CALL_5
0x4000b22	    0x488b05000000	            mov rax, qword [0x04000b29] 	      3178	eval.c	FUNCTION_61
0x4000b29	    0x488b90700500	           mov rdx, qword [rax + 0x570] 	      3178	eval.c	FUNCTION_61
0x4000b30	    0x488b05000000	            mov rax, qword [0x04000b37] 	      3179	eval.c	FUNCTION_61	IF_7
0x4000b37	        0x48394218	            cmp qword [rdx + 0x18], rax 	      3179	eval.c	FUNCTION_61	IF_7
0x4000b3b	            0x7671	                           jbe 0x4000bae	      3179	eval.c	FUNCTION_61	IF_7
0x4000b3d	        0x488d4801	                      lea rcx, [rax + 1]	      3181	eval.c	FUNCTION_61	IF_7	IF_8
0x4000b41	    0x48890d000000	            mov qword [0x04000b48], rcx 	      3181	eval.c	FUNCTION_61	IF_7	IF_8
0x4000b48	          0x4885c0	                           test rax, rax	      3181	eval.c	FUNCTION_61	IF_7	IF_8
0x4000b4b	            0x750d	                           jne 0x4000b5a	      3181	eval.c	FUNCTION_61	IF_7	IF_8
0x4000b4d	        0x488b4230	            mov rax, qword [rdx + 0x30] 	      3182	eval.c	FUNCTION_61	IF_7	IF_8
0x4000b51	    0x488905000000	            mov qword [0x04000b58], rax 	      3182	eval.c	FUNCTION_61	IF_7	IF_8
0x4000b58	            0xeb08	                           jmp 0x4000b62	      3182	eval.c	FUNCTION_61	IF_7	IF_8
0x4000b5a	    0x488305000000	            add qword [0x04000b62], 0x10	      3184	eval.c	FUNCTION_61	IF_7	ELSE_3
0x4000b62	    0x488b05000000	            mov rax, qword [0x04000b69] 	      3185	eval.c	FUNCTION_61	IF_7	WHILE_3	CALL_6
0x4000b69	        0x488b7008	                mov rsi, qword [rax + 8]	      3185	eval.c	FUNCTION_61	IF_7	WHILE_3	CALL_6
0x4000b6d	    0x4881fe000000	                              cmp rsi, 0	      3185	eval.c	FUNCTION_61	IF_7	WHILE_3	CALL_6
0x4000b74	            0x7405	                            je 0x4000b7b	      3185	eval.c	FUNCTION_61	IF_7	WHILE_3	CALL_6
0x4000b76	          0x4885f6	                           test rsi, rsi	      3185	eval.c	FUNCTION_61	IF_7	WHILE_3	CALL_6
0x4000b79	            0x7524	                           jne 0x4000b9f	      3185	eval.c	FUNCTION_61	IF_7	WHILE_3	CALL_6
0x4000b7b	        0x4883c010	                           add rax, 0x10	      3185	eval.c	FUNCTION_61	IF_7	WHILE_3	CALL_6
0x4000b7f	          0x4889c2	                            mov rdx, rax	      3186	eval.c	FUNCTION_61	IF_7	WHILE_3
0x4000b82	        0x488b7008	                mov rsi, qword [rax + 8]	      3185	eval.c	FUNCTION_61	IF_7	WHILE_3	CALL_6
0x4000b86	        0x4883c010	                           add rax, 0x10	      3185	eval.c	FUNCTION_61	IF_7	WHILE_3	CALL_6
0x4000b8a	    0x4881fe000000	                              cmp rsi, 0	      3185	eval.c	FUNCTION_61	IF_7	WHILE_3	CALL_6
0x4000b91	            0x74ec	                            je 0x4000b7f	      3185	eval.c	FUNCTION_61	IF_7	WHILE_3	CALL_6
0x4000b93	          0x4885f6	                           test rsi, rsi	      3185	eval.c	FUNCTION_61	IF_7	WHILE_3	CALL_6
0x4000b96	            0x74e7	                            je 0x4000b7f	      3185	eval.c	FUNCTION_61	IF_7	WHILE_3	CALL_6
0x4000b98	    0x488915000000	            mov qword [0x04000b9f], rdx 	      3185	eval.c	FUNCTION_61	IF_7	WHILE_3	CALL_6
0x4000b9f	      0xbf77000000	                           mov edi, 0x77	      3187	eval.c	FUNCTION_61	IF_7	CALL_7
0x4000ba4	      0xe89df7ffff	             call sym.cat_prefix_varname	      3187	eval.c	FUNCTION_61	IF_7	CALL_7
0x4000ba9	      0xe931010000	                           jmp 0x4000cdf	      3187	eval.c	FUNCTION_61	IF_7	CALL_7
0x4000bae	    0x488b05000000	            mov rax, qword [0x04000bb5] 	      3191	eval.c	FUNCTION_61
0x4000bb5	    0x488b90d00000	            mov rdx, qword [rax + 0xd0] 	      3191	eval.c	FUNCTION_61
0x4000bbc	    0x488b05000000	            mov rax, qword [0x04000bc3] 	      3192	eval.c	FUNCTION_61	IF_9
0x4000bc3	        0x48394218	            cmp qword [rdx + 0x18], rax 	      3192	eval.c	FUNCTION_61	IF_9
0x4000bc7	            0x7671	                           jbe 0x4000c3a	      3192	eval.c	FUNCTION_61	IF_9
0x4000bc9	        0x488d4801	                      lea rcx, [rax + 1]	      3194	eval.c	FUNCTION_61	IF_9	IF_10
0x4000bcd	    0x48890d000000	            mov qword [0x04000bd4], rcx 	      3194	eval.c	FUNCTION_61	IF_9	IF_10
0x4000bd4	          0x4885c0	                           test rax, rax	      3194	eval.c	FUNCTION_61	IF_9	IF_10
0x4000bd7	            0x750d	                           jne 0x4000be6	      3194	eval.c	FUNCTION_61	IF_9	IF_10
0x4000bd9	        0x488b4230	            mov rax, qword [rdx + 0x30] 	      3195	eval.c	FUNCTION_61	IF_9	IF_10
0x4000bdd	    0x488905000000	            mov qword [0x04000be4], rax 	      3195	eval.c	FUNCTION_61	IF_9	IF_10
0x4000be4	            0xeb08	                           jmp 0x4000bee	      3195	eval.c	FUNCTION_61	IF_9	IF_10
0x4000be6	    0x488305000000	            add qword [0x04000bee], 0x10	      3197	eval.c	FUNCTION_61	IF_9	ELSE_4
0x4000bee	    0x488b05000000	            mov rax, qword [0x04000bf5] 	      3198	eval.c	FUNCTION_61	IF_9	WHILE_4	CALL_8
0x4000bf5	        0x488b7008	                mov rsi, qword [rax + 8]	      3198	eval.c	FUNCTION_61	IF_9	WHILE_4	CALL_8
0x4000bf9	    0x4881fe000000	                              cmp rsi, 0	      3198	eval.c	FUNCTION_61	IF_9	WHILE_4	CALL_8
0x4000c00	            0x7405	                            je 0x4000c07	      3198	eval.c	FUNCTION_61	IF_9	WHILE_4	CALL_8
0x4000c02	          0x4885f6	                           test rsi, rsi	      3198	eval.c	FUNCTION_61	IF_9	WHILE_4	CALL_8
0x4000c05	            0x7524	                           jne 0x4000c2b	      3198	eval.c	FUNCTION_61	IF_9	WHILE_4	CALL_8
0x4000c07	        0x4883c010	                           add rax, 0x10	      3198	eval.c	FUNCTION_61	IF_9	WHILE_4	CALL_8
0x4000c0b	          0x4889c2	                            mov rdx, rax	      3199	eval.c	FUNCTION_61	IF_9	WHILE_4
0x4000c0e	        0x488b7008	                mov rsi, qword [rax + 8]	      3198	eval.c	FUNCTION_61	IF_9	WHILE_4	CALL_8
0x4000c12	        0x4883c010	                           add rax, 0x10	      3198	eval.c	FUNCTION_61	IF_9	WHILE_4	CALL_8
0x4000c16	    0x4881fe000000	                              cmp rsi, 0	      3198	eval.c	FUNCTION_61	IF_9	WHILE_4	CALL_8
0x4000c1d	            0x74ec	                            je 0x4000c0b	      3198	eval.c	FUNCTION_61	IF_9	WHILE_4	CALL_8
0x4000c1f	          0x4885f6	                           test rsi, rsi	      3198	eval.c	FUNCTION_61	IF_9	WHILE_4	CALL_8
0x4000c22	            0x74e7	                            je 0x4000c0b	      3198	eval.c	FUNCTION_61	IF_9	WHILE_4	CALL_8
0x4000c24	    0x488915000000	            mov qword [0x04000c2b], rdx 	      3198	eval.c	FUNCTION_61	IF_9	WHILE_4	CALL_8
0x4000c2b	      0xbf74000000	                           mov edi, 0x74	      3200	eval.c	FUNCTION_61	IF_9	CALL_9
0x4000c30	      0xe811f7ffff	             call sym.cat_prefix_varname	      3200	eval.c	FUNCTION_61	IF_9	CALL_9
0x4000c35	      0xe9a5000000	                           jmp 0x4000cdf	      3200	eval.c	FUNCTION_61	IF_9	CALL_9
0x4000c3a	    0x8b0500000000	            mov eax, dword [0x04000c40] 	      3204	eval.c	FUNCTION_61	IF_11
0x4000c40	          0x83f856	                           cmp eax, 0x56	      3204	eval.c	FUNCTION_61	IF_11
0x4000c43	            0x7f2d	                            jg 0x4000c72	      3204	eval.c	FUNCTION_61	IF_11
0x4000c45	          0x8d5001	                      lea edx, [rax + 1]	      3205	eval.c	FUNCTION_61	CALL_10
0x4000c48	    0x891500000000	            mov dword [0x04000c4e], edx 	      3205	eval.c	FUNCTION_61	CALL_10
0x4000c4e	            0x4898	                                    cdqe	      3205	eval.c	FUNCTION_61	CALL_10
0x4000c50	    0x488d14c50000	                        lea rdx, [rax*8]	      3205	eval.c	FUNCTION_61	CALL_10
0x4000c58	        0x48c1e006	                              shl rax, 6	      3205	eval.c	FUNCTION_61	CALL_10
0x4000c5c	          0x4829d0	                            sub rax, rdx	      3205	eval.c	FUNCTION_61	CALL_10
0x4000c5f	    0x488bb0000000	                    mov rsi, qword [rax]	      3205	eval.c	FUNCTION_61	CALL_10
0x4000c66	      0xbf76000000	                           mov edi, 0x76	      3205	eval.c	FUNCTION_61	CALL_10
0x4000c6b	      0xe8d6f6ffff	             call sym.cat_prefix_varname	      3205	eval.c	FUNCTION_61	CALL_10
0x4000c70	            0xeb6d	                           jmp 0x4000cdf	      3205	eval.c	FUNCTION_61	CALL_10
0x4000c72	    0x488b3d000000	            mov rdi, qword [0x04000c79] 	      3207	eval.c	FUNCTION_61	CALL_11
0x4000c79	          0x4885ff	                           test rdi, rdi	      3207	eval.c	FUNCTION_61	CALL_11
0x4000c7c	            0x7410	                            je 0x4000c8e	      3207	eval.c	FUNCTION_61	CALL_11
0x4000c7e	      0xe800000000	                          call 0x4000c83	      3207	eval.c	FUNCTION_61	CALL_11
0x4000c83	    0x48c705000000	               mov qword [0x04000c8e], 0	      3207	eval.c	FUNCTION_61	CALL_11
0x4000c8e	    0xc70500000000	               mov dword [0x04000c98], 0	      3208	eval.c	FUNCTION_61
0x4000c98	      0xb800000000	                              mov eax, 0	      3209	eval.c	FUNCTION_61
0x4000c9d	            0xeb40	                           jmp 0x4000cdf	      3209	eval.c	FUNCTION_61
0x4000c9f	    0x48c705000000	               mov qword [0x04000caa], 1	      3153	eval.c	FUNCTION_61	IF_2	IF_3
0x4000caa	      0xe964fdffff	                           jmp 0x4000a13	      3153	eval.c	FUNCTION_61	IF_2	IF_3
0x4000caf	        0x4883c201	                              add rdx, 1	      3168	eval.c	FUNCTION_61	IF_5	IF_6
0x4000cb3	    0x488915000000	            mov qword [0x04000cba], rdx 	      3168	eval.c	FUNCTION_61	IF_5	IF_6
0x4000cba	      0xe902feffff	                           jmp 0x4000ac1	      3168	eval.c	FUNCTION_61	IF_5	IF_6
0x4000cbf	    0x488b05000000	            mov rax, qword [0x04000cc6] 	      3165	eval.c	FUNCTION_61
0x4000cc6	    0x488b80301700	          mov rax, qword [rax + 0x1730] 	      3165	eval.c	FUNCTION_61
0x4000ccd	    0x488b15000000	            mov rdx, qword [0x04000cd4] 	      3166	eval.c	FUNCTION_61	IF_5
0x4000cd4	        0x48395018	            cmp qword [rax + 0x18], rdx 	      3166	eval.c	FUNCTION_61	IF_5
0x4000cd8	            0x77d5	                            ja 0x4000caf	      3166	eval.c	FUNCTION_61	IF_5
0x4000cda	      0xe943feffff	                           jmp 0x4000b22	      3166	eval.c	FUNCTION_61	IF_5
0x4000cdf	        0x4883c408	                              add rsp, 8	      3210	eval.c	FUNCTION_61
0x4000ce3	              0xc3	                                     ret	      3210	eval.c	FUNCTION_61
eval_to_number	FOR,0:SWITCH,0:DO,0:IF,1:functions,0:WHILE,0:CALL,4:ELSE,1	30
0x4007e4f	              0x53	                                push rbx	       883	eval.c	FUNCTION_20
0x4007e50	        0x4883ec30	                           sub rsp, 0x30	       883	eval.c	FUNCTION_20
0x4007e54	    0x64488b042528	                mov rax, qword fs:[0x28]	       883	eval.c	FUNCTION_20
0x4007e5d	      0x4889442428	             mov qword [rsp + 0x28], rax	       883	eval.c	FUNCTION_20
0x4007e62	            0x31c0	                            xor eax, eax	       883	eval.c	FUNCTION_20
0x4007e64	      0xe800000000	                          call 0x4007e69	       886	eval.c	FUNCTION_20	CALL_1
0x4007e69	      0x4889442408	                mov qword [rsp + 8], rax	       886	eval.c	FUNCTION_20	CALL_1
0x4007e6e	    0x830500000000	               add dword [0x04007e75], 1	       888	eval.c	FUNCTION_20
0x4007e75	      0xba01000000	                              mov edx, 1	       890	eval.c	FUNCTION_20	IF_1	CALL_2
0x4007e7a	      0x488d742410	                   lea rsi, [rsp + 0x10]	       890	eval.c	FUNCTION_20	IF_1	CALL_2
0x4007e7f	      0x488d7c2408	                      lea rdi, [rsp + 8]	       890	eval.c	FUNCTION_20	IF_1	CALL_2
0x4007e84	      0xe800000000	                          call 0x4007e89	       890	eval.c	FUNCTION_20	IF_1	CALL_2
0x4007e89	    0x48c7c3ffffff	             mov rbx, 0xffffffffffffffff	       891	eval.c	FUNCTION_20	IF_1
0x4007e90	            0x85c0	                           test eax, eax	       890	eval.c	FUNCTION_20	IF_1	CALL_2
0x4007e92	            0x741c	                            je 0x4007eb0	       890	eval.c	FUNCTION_20	IF_1	CALL_2
0x4007e94	      0xbe00000000	                              mov esi, 0	       894	eval.c	FUNCTION_20	ELSE_1	CALL_3
0x4007e99	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       894	eval.c	FUNCTION_20	ELSE_1	CALL_3
0x4007e9e	      0xe800000000	                          call 0x4007ea3	       894	eval.c	FUNCTION_20	ELSE_1	CALL_3
0x4007ea3	          0x4889c3	                            mov rbx, rax	       894	eval.c	FUNCTION_20	ELSE_1	CALL_3
0x4007ea6	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       895	eval.c	FUNCTION_20	ELSE_1	CALL_4
0x4007eab	      0xe800000000	                          call 0x4007eb0	       895	eval.c	FUNCTION_20	ELSE_1	CALL_4
0x4007eb0	    0x832d00000000	               sub dword [0x04007eb7], 1	       897	eval.c	FUNCTION_20
0x4007eb7	          0x4889d8	                            mov rax, rbx	       900	eval.c	FUNCTION_20
0x4007eba	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       900	eval.c	FUNCTION_20
0x4007ebf	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       900	eval.c	FUNCTION_20
0x4007ec8	            0x7405	                            je 0x4007ecf	       900	eval.c	FUNCTION_20
0x4007eca	      0xe800000000	                          call 0x4007ecf	       900	eval.c	FUNCTION_20
0x4007ecf	        0x4883c430	                           add rsp, 0x30	       900	eval.c	FUNCTION_20
0x4007ed3	              0x5b	                                 pop rbx	       900	eval.c	FUNCTION_20
0x4007ed4	              0xc3	                                     ret	       900	eval.c	FUNCTION_20
echo_string	FOR,0:SWITCH,0:DO,0:IF,0:functions,0:WHILE,0:CALL,1:ELSE,0	7
0x40037a9	        0x4883ec10	                           sub rsp, 0x10	      5741	eval.c	FUNCTION_88
0x40037ad	            0x6a00	                                  push 0	      5742	eval.c	FUNCTION_88	CALL_1
0x40037af	    0x41b900000000	                              mov r9d, 0	      5742	eval.c	FUNCTION_88	CALL_1
0x40037b5	    0x41b801000000	                              mov r8d, 1	      5742	eval.c	FUNCTION_88	CALL_1
0x40037bb	      0xe800000000	                          call 0x40037c0	      5742	eval.c	FUNCTION_88	CALL_1
0x40037c0	        0x4883c418	                           add rsp, 0x18	      5743	eval.c	FUNCTION_88
0x40037c4	              0xc3	                                     ret	      5743	eval.c	FUNCTION_88
get_spellword	FOR,0:SWITCH,0:DO,0:IF,2:functions,0:WHILE,0:CALL,2:ELSE,0	23
0x4003918	              0x55	                                push rbp	       979	eval.c	FUNCTION_24
0x4003919	              0x53	                                push rbx	       979	eval.c	FUNCTION_24
0x400391a	        0x4883ec08	                              sub rsp, 8	       979	eval.c	FUNCTION_24
0x400391e	          0x488b1f	                    mov rbx, qword [rdi]	       982	eval.c	FUNCTION_24
0x4003921	          0x4885db	                           test rbx, rbx	       983	eval.c	FUNCTION_24	IF_1
0x4003924	            0x7423	                            je 0x4003949	       983	eval.c	FUNCTION_24	IF_1
0x4003926	          0x4889f5	                            mov rbp, rsi	       983	eval.c	FUNCTION_24	IF_1
0x4003929	        0x488d7b10	                   lea rdi, [rbx + 0x10]	       985	eval.c	FUNCTION_24	CALL_1
0x400392d	      0xe800000000	                          call 0x4003932	       985	eval.c	FUNCTION_24	CALL_1
0x4003932	        0x48894500	                    mov qword [rbp], rax	       985	eval.c	FUNCTION_24	CALL_1
0x4003936	          0x488b3b	                    mov rdi, qword [rbx]	       987	eval.c	FUNCTION_24
0x4003939	          0x4885ff	                           test rdi, rdi	       988	eval.c	FUNCTION_24	IF_2
0x400393c	            0x7412	                            je 0x4003950	       988	eval.c	FUNCTION_24	IF_2
0x400393e	        0x4883c710	                           add rdi, 0x10	       990	eval.c	FUNCTION_24	CALL_2
0x4003942	      0xe800000000	                          call 0x4003947	       990	eval.c	FUNCTION_24	CALL_2
0x4003947	            0xeb0c	                           jmp 0x4003955	       990	eval.c	FUNCTION_24	CALL_2
0x4003949	      0xb8ffffffff	                     mov eax, 0xffffffff	       984	eval.c	FUNCTION_24	IF_1
0x400394e	            0xeb05	                           jmp 0x4003955	       984	eval.c	FUNCTION_24	IF_1
0x4003950	      0xb8ffffffff	                     mov eax, 0xffffffff	       989	eval.c	FUNCTION_24	IF_2
0x4003955	        0x4883c408	                              add rsp, 8	       991	eval.c	FUNCTION_24
0x4003959	              0x5b	                                 pop rbx	       991	eval.c	FUNCTION_24
0x400395a	              0x5d	                                 pop rbp	       991	eval.c	FUNCTION_24
0x400395b	              0xc3	                                     ret	       991	eval.c	FUNCTION_24
eval_expr	FOR,0:SWITCH,0:DO,0:IF,1:functions,0:WHILE,0:CALL,3:ELSE,0	25
0x40089b1	            0x4154	                                push r12	      1001	eval.c	FUNCTION_25
0x40089b3	              0x55	                                push rbp	      1001	eval.c	FUNCTION_25
0x40089b4	              0x53	                                push rbx	      1001	eval.c	FUNCTION_25
0x40089b5	          0x4889fd	                            mov rbp, rdi	      1001	eval.c	FUNCTION_25
0x40089b8	          0x4989f4	                            mov r12, rsi	      1001	eval.c	FUNCTION_25
0x40089bb	      0xbf10000000	                           mov edi, 0x10	      1004	eval.c	FUNCTION_25	CALL_1
0x40089c0	      0xe800000000	                          call 0x40089c5	      1004	eval.c	FUNCTION_25	CALL_1
0x40089c5	          0x4889c3	                            mov rbx, rax	      1004	eval.c	FUNCTION_25	CALL_1
0x40089c8	          0x4885c0	                           test rax, rax	      1005	eval.c	FUNCTION_25	IF_1	CALL_2
0x40089cb	            0x7424	                            je 0x40089f1	      1005	eval.c	FUNCTION_25	IF_1	CALL_2
0x40089cd	      0xb901000000	                              mov ecx, 1	      1005	eval.c	FUNCTION_25	IF_1	CALL_2
0x40089d2	          0x4c89e2	                            mov rdx, r12	      1005	eval.c	FUNCTION_25	IF_1	CALL_2
0x40089d5	          0x4889c6	                            mov rsi, rax	      1005	eval.c	FUNCTION_25	IF_1	CALL_2
0x40089d8	          0x4889ef	                            mov rdi, rbp	      1005	eval.c	FUNCTION_25	IF_1	CALL_2
0x40089db	      0xe800000000	                          call 0x40089e0	      1005	eval.c	FUNCTION_25	IF_1	CALL_2
0x40089e0	            0x85c0	                           test eax, eax	      1006	eval.c	FUNCTION_25	CALL_3
0x40089e2	            0x750d	                           jne 0x40089f1	      1006	eval.c	FUNCTION_25	CALL_3
0x40089e4	          0x4889df	                            mov rdi, rbx	      1006	eval.c	FUNCTION_25	CALL_3
0x40089e7	      0xe800000000	                          call 0x40089ec	      1006	eval.c	FUNCTION_25	CALL_3
0x40089ec	      0xbb00000000	                              mov ebx, 0	      1006	eval.c	FUNCTION_25	CALL_3
0x40089f1	          0x4889d8	                            mov rax, rbx	      1009	eval.c	FUNCTION_25
0x40089f4	              0x5b	                                 pop rbx	      1009	eval.c	FUNCTION_25
0x40089f5	              0x5d	                                 pop rbp	      1009	eval.c	FUNCTION_25
0x40089f6	            0x415c	                                 pop r12	      1009	eval.c	FUNCTION_25
0x40089f8	              0xc3	                                     ret	      1009	eval.c	FUNCTION_25
set_reg_var	FOR,0:SWITCH,0:DO,0:IF,2:functions,0:WHILE,0:CALL,1:ELSE,1	25
0x40028f5	        0x4883ec18	                           sub rsp, 0x18	      6517	eval.c	FUNCTION_112
0x40028f9	    0x64488b042528	                mov rax, qword fs:[0x28]	      6517	eval.c	FUNCTION_112
0x4002902	      0x4889442408	                mov qword [rsp + 8], rax	      6517	eval.c	FUNCTION_112
0x4002907	            0x31c0	                            xor eax, eax	      6517	eval.c	FUNCTION_112
0x4002909	            0x89f8	                            mov eax, edi	      6520	eval.c	FUNCTION_112	IF_1
0x400290b	          0x83e0df	                     and eax, 0xffffffdf	      6520	eval.c	FUNCTION_112	IF_1
0x400290e	      0xb822000000	                           mov eax, 0x22	      6521	eval.c	FUNCTION_112	IF_1
0x4002913	           0xf45c7	                         cmovne eax, edi	      6521	eval.c	FUNCTION_112	IF_1
0x4002916	        0x88442407	                  mov byte [rsp + 7], al	      6521	eval.c	FUNCTION_112	IF_1
0x400291a	    0x488b05000000	            mov rax, qword [0x04002921] 	      6525	eval.c	FUNCTION_112	IF_2
0x4002921	          0x4885c0	                           test rax, rax	      6525	eval.c	FUNCTION_112	IF_2
0x4002924	            0x7407	                            je 0x400292d	      6525	eval.c	FUNCTION_112	IF_2
0x4002926	           0xfb600	                   movzx eax, byte [rax]	      6525	eval.c	FUNCTION_112	IF_2
0x4002929	            0x39c7	                            cmp edi, eax	      6525	eval.c	FUNCTION_112	IF_2
0x400292b	            0x7414	                            je 0x4002941	      6525	eval.c	FUNCTION_112	IF_2
0x400292d	      0xba01000000	                              mov edx, 1	      6526	eval.c	FUNCTION_112	CALL_1
0x4002932	      0x488d742407	                      lea rsi, [rsp + 7]	      6526	eval.c	FUNCTION_112	CALL_1
0x4002937	      0xbf1f000000	                           mov edi, 0x1f	      6526	eval.c	FUNCTION_112	CALL_1
0x400293c	      0xe800000000	                          call 0x4002941	      6526	eval.c	FUNCTION_112	CALL_1
0x4002941	      0x488b442408	                mov rax, qword [rsp + 8]	      6527	eval.c	FUNCTION_112
0x4002946	    0x644833042528	                xor rax, qword fs:[0x28]	      6527	eval.c	FUNCTION_112
0x400294f	            0x7405	                            je 0x4002956	      6527	eval.c	FUNCTION_112
0x4002951	      0xe800000000	                          call 0x4002956	      6527	eval.c	FUNCTION_112
0x4002956	        0x4883c418	                           add rsp, 0x18	      6527	eval.c	FUNCTION_112
0x400295a	              0xc3	                                     ret	      6527	eval.c	FUNCTION_112
get_var_value	FOR,0:SWITCH,0:DO,0:IF,1:functions,0:WHILE,0:CALL,2:ELSE,0	12
0x4005425	        0x4883ec08	                              sub rsp, 8	      7322	eval.c	FUNCTION_134
0x4005429	      0xba00000000	                              mov edx, 0	      7325	eval.c	FUNCTION_134	CALL_1
0x400542e	      0xbe00000000	                              mov esi, 0	      7325	eval.c	FUNCTION_134	CALL_1
0x4005433	      0xe800000000	                          call 0x4005438	      7325	eval.c	FUNCTION_134	CALL_1
0x4005438	          0x4885c0	                           test rax, rax	      7326	eval.c	FUNCTION_134	IF_1
0x400543b	            0x740a	                            je 0x4005447	      7326	eval.c	FUNCTION_134	IF_1
0x400543d	          0x4889c7	                            mov rdi, rax	      7328	eval.c	FUNCTION_134	CALL_2
0x4005440	      0xe800000000	                          call 0x4005445	      7328	eval.c	FUNCTION_134	CALL_2
0x4005445	            0xeb05	                           jmp 0x400544c	      7328	eval.c	FUNCTION_134	CALL_2
0x4005447	      0xb800000000	                              mov eax, 0	      7327	eval.c	FUNCTION_134	IF_1
0x400544c	        0x4883c408	                              add rsp, 8	      7329	eval.c	FUNCTION_134
0x4005450	              0xc3	                                     ret	      7329	eval.c	FUNCTION_134
eval_for_line	FOR,0:SWITCH,0:DO,0:IF,9:functions,0:WHILE,0:CALL,13:ELSE,2	114
0x4008d4a	            0x4156	                                push r14	      2500	eval.c	FUNCTION_48
0x4008d4c	            0x4155	                                push r13	      2500	eval.c	FUNCTION_48
0x4008d4e	            0x4154	                                push r12	      2500	eval.c	FUNCTION_48
0x4008d50	              0x55	                                push rbp	      2500	eval.c	FUNCTION_48
0x4008d51	              0x53	                                push rbx	      2500	eval.c	FUNCTION_48
0x4008d52	        0x4883ec20	                           sub rsp, 0x20	      2500	eval.c	FUNCTION_48
0x4008d56	          0x4989fe	                            mov r14, rdi	      2500	eval.c	FUNCTION_48
0x4008d59	          0x4889f5	                            mov rbp, rsi	      2500	eval.c	FUNCTION_48
0x4008d5c	          0x4989d5	                            mov r13, rdx	      2500	eval.c	FUNCTION_48
0x4008d5f	          0x4189cc	                           mov r12d, ecx	      2500	eval.c	FUNCTION_48
0x4008d62	    0x64488b042528	                mov rax, qword fs:[0x28]	      2500	eval.c	FUNCTION_48
0x4008d6b	      0x4889442418	             mov qword [rsp + 0x18], rax	      2500	eval.c	FUNCTION_48
0x4008d70	            0x31c0	                            xor eax, eax	      2500	eval.c	FUNCTION_48
0x4008d72	    0xc70601000000	                      mov dword [rsi], 1	      2506	eval.c	FUNCTION_48
0x4008d78	      0xbf20000000	                           mov edi, 0x20	      2508	eval.c	FUNCTION_48	CALL_1
0x4008d7d	      0xe800000000	                          call 0x4008d82	      2508	eval.c	FUNCTION_48	CALL_1
0x4008d82	          0x4885c0	                           test rax, rax	      2509	eval.c	FUNCTION_48	IF_1
0x4008d85	     0xf8403010000	                            je 0x4008e8e	      2509	eval.c	FUNCTION_48	IF_1
0x4008d8b	          0x4889c3	                            mov rbx, rax	      2509	eval.c	FUNCTION_48	IF_1
0x4008d8e	        0x488d7004	                      lea rsi, [rax + 4]	      2512	eval.c	FUNCTION_48	CALL_2
0x4008d92	          0x4889c2	                            mov rdx, rax	      2512	eval.c	FUNCTION_48	CALL_2
0x4008d95	          0x4c89f7	                            mov rdi, r14	      2512	eval.c	FUNCTION_48	CALL_2
0x4008d98	      0xe80a91ffff	                  call sym.skip_var_list	      2512	eval.c	FUNCTION_48	CALL_2
0x4008d9d	          0x4889c7	                            mov rdi, rax	      2512	eval.c	FUNCTION_48	CALL_2
0x4008da0	          0x4889d8	                            mov rax, rbx	      2514	eval.c	FUNCTION_48	IF_2
0x4008da3	          0x4885ff	                           test rdi, rdi	      2513	eval.c	FUNCTION_48	IF_2
0x4008da6	     0xf84e7000000	                            je 0x4008e93	      2513	eval.c	FUNCTION_48	IF_2
0x4008dac	      0xe800000000	                          call 0x4008db1	      2516	eval.c	FUNCTION_48	CALL_3
0x4008db1	          0x803869	                    cmp byte [rax], 0x69	      2517	eval.c	FUNCTION_48	IF_3	CALL_4
0x4008db4	            0x7514	                           jne 0x4008dca	      2517	eval.c	FUNCTION_48	IF_3	CALL_4
0x4008db6	        0x8078016e	                cmp byte [rax + 1], 0x6e	      2517	eval.c	FUNCTION_48	IF_3	CALL_4
0x4008dba	            0x750e	                           jne 0x4008dca	      2517	eval.c	FUNCTION_48	IF_3	CALL_4
0x4008dbc	         0xfb65002	               movzx edx, byte [rax + 2]	      2517	eval.c	FUNCTION_48	IF_3	CALL_4
0x4008dc0	          0x80fa20	                            cmp dl, 0x20	      2517	eval.c	FUNCTION_48	IF_3	CALL_4
0x4008dc3	            0x7429	                            je 0x4008dee	      2517	eval.c	FUNCTION_48	IF_3	CALL_4
0x4008dc5	          0x80fa09	                               cmp dl, 9	      2517	eval.c	FUNCTION_48	IF_3	CALL_4
0x4008dc8	            0x7424	                            je 0x4008dee	      2517	eval.c	FUNCTION_48	IF_3	CALL_4
0x4008dca	      0xba05000000	                              mov edx, 5	      2519	eval.c	FUNCTION_48	IF_3	CALL_6
0x4008dcf	      0xbe00000000	                              mov esi, 0	      2519	eval.c	FUNCTION_48	IF_3	CALL_6
0x4008dd4	      0xbf00000000	                              mov edi, 0	      2519	eval.c	FUNCTION_48	IF_3	CALL_6
0x4008dd9	      0xe800000000	                          call 0x4008dde	      2519	eval.c	FUNCTION_48	IF_3	CALL_6
0x4008dde	          0x4889c7	                            mov rdi, rax	      2519	eval.c	FUNCTION_48	IF_3	CALL_6
0x4008de1	      0xe800000000	                          call 0x4008de6	      2519	eval.c	FUNCTION_48	IF_3	CALL_6
0x4008de6	          0x4889d8	                            mov rax, rbx	      2520	eval.c	FUNCTION_48	IF_3
0x4008de9	      0xe9a5000000	                           jmp 0x4008e93	      2520	eval.c	FUNCTION_48	IF_3
0x4008dee	          0x4585e4	                         test r12d, r12d	      2523	eval.c	FUNCTION_48	IF_4
0x4008df1	     0xf84c1000000	                            je 0x4008eb8	      2523	eval.c	FUNCTION_48	IF_4
0x4008df7	    0x830500000000	               add dword [0x04008dfe], 1	      2524	eval.c	FUNCTION_48	IF_4
0x4008dfe	        0x488d7802	                      lea rdi, [rax + 2]	      2525	eval.c	FUNCTION_48	IF_5	CALL_8
0x4008e02	      0xe800000000	                          call 0x4008e07	      2525	eval.c	FUNCTION_48	IF_5	CALL_8
0x4008e07	      0xb900000000	                              mov ecx, 0	      2525	eval.c	FUNCTION_48	IF_5	CALL_8
0x4008e0c	          0x4c89ea	                            mov rdx, r13	      2525	eval.c	FUNCTION_48	IF_5	CALL_8
0x4008e0f	          0x4889e6	                            mov rsi, rsp	      2525	eval.c	FUNCTION_48	IF_5	CALL_8
0x4008e12	          0x4889c7	                            mov rdi, rax	      2525	eval.c	FUNCTION_48	IF_5	CALL_8
0x4008e15	      0xe800000000	                          call 0x4008e1a	      2525	eval.c	FUNCTION_48	IF_5	CALL_8
0x4008e1a	          0x83f801	                              cmp eax, 1	      2525	eval.c	FUNCTION_48	IF_5	CALL_8
0x4008e1d	            0x7563	                           jne 0x4008e82	      2525	eval.c	FUNCTION_48	IF_5	CALL_8
0x4008e1f	    0xc74500000000	                      mov dword [rbp], 0	      2527	eval.c	FUNCTION_48	IF_5
0x4008e26	            0xeb5a	                           jmp 0x4008e82	      2527	eval.c	FUNCTION_48	IF_5
0x4008e28	      0xba05000000	                              mov edx, 5	      2533	eval.c	FUNCTION_48	IF_5	IF_6	IF_7	CALL_10
0x4008e2d	      0xbe00000000	                              mov esi, 0	      2533	eval.c	FUNCTION_48	IF_5	IF_6	IF_7	CALL_10
0x4008e32	      0xbf00000000	                              mov edi, 0	      2533	eval.c	FUNCTION_48	IF_5	IF_6	IF_7	CALL_10
0x4008e37	      0xe800000000	                          call 0x4008e3c	      2533	eval.c	FUNCTION_48	IF_5	IF_6	IF_7	CALL_10
0x4008e3c	          0x4889c7	                            mov rdi, rax	      2533	eval.c	FUNCTION_48	IF_5	IF_6	IF_7	CALL_10
0x4008e3f	      0xe800000000	                          call 0x4008e44	      2533	eval.c	FUNCTION_48	IF_5	IF_6	IF_7	CALL_10
0x4008e44	          0x4889e7	                            mov rdi, rsp	      2534	eval.c	FUNCTION_48	IF_5	IF_6	IF_7	CALL_11
0x4008e47	      0xe800000000	                          call 0x4008e4c	      2534	eval.c	FUNCTION_48	IF_5	IF_6	IF_7	CALL_11
0x4008e4c	            0xeb2c	                           jmp 0x4008e7a	      2534	eval.c	FUNCTION_48	IF_5	IF_6	IF_7	CALL_11
0x4008e4e	      0x488b6c2408	                mov rbp, qword [rsp + 8]	      2530	eval.c	FUNCTION_48	IF_5	IF_6
0x4008e53	          0x4885ed	                           test rbp, rbp	      2536	eval.c	FUNCTION_48	IF_5	IF_6	ELSE_1	IF_8
0x4008e56	            0x750a	                           jne 0x4008e62	      2536	eval.c	FUNCTION_48	IF_5	IF_6	ELSE_1	IF_8
0x4008e58	          0x4889e7	                            mov rdi, rsp	      2539	eval.c	FUNCTION_48	IF_5	IF_6	ELSE_1	IF_8	CALL_12
0x4008e5b	      0xe800000000	                          call 0x4008e60	      2539	eval.c	FUNCTION_48	IF_5	IF_6	ELSE_1	IF_8	CALL_12
0x4008e60	            0xeb18	                           jmp 0x4008e7a	      2539	eval.c	FUNCTION_48	IF_5	IF_6	ELSE_1	IF_8	CALL_12
0x4008e62	        0x48896b18	             mov qword [rbx + 0x18], rbp	      2545	eval.c	FUNCTION_48	IF_5	IF_6	ELSE_2
0x4008e66	        0x488d7308	                      lea rsi, [rbx + 8]	      2546	eval.c	FUNCTION_48	IF_5	IF_6	ELSE_2	CALL_13
0x4008e6a	          0x4889ef	                            mov rdi, rbp	      2546	eval.c	FUNCTION_48	IF_5	IF_6	ELSE_2	CALL_13
0x4008e6d	      0xe800000000	                          call 0x4008e72	      2546	eval.c	FUNCTION_48	IF_5	IF_6	ELSE_2	CALL_13
0x4008e72	        0x488b4500	                    mov rax, qword [rbp]	      2547	eval.c	FUNCTION_48	IF_5	IF_6	ELSE_2
0x4008e76	        0x48894308	                mov qword [rbx + 8], rax	      2547	eval.c	FUNCTION_48	IF_5	IF_6	ELSE_2
0x4008e7a	          0x4889d8	                            mov rax, rbx	      2554	eval.c	FUNCTION_48
0x4008e7d	          0x4585e4	                         test r12d, r12d	      2551	eval.c	FUNCTION_48	IF_9
0x4008e80	            0x7411	                            je 0x4008e93	      2551	eval.c	FUNCTION_48	IF_9
0x4008e82	    0x832d00000000	               sub dword [0x04008e89], 1	      2552	eval.c	FUNCTION_48	IF_9
0x4008e89	          0x4889d8	                            mov rax, rbx	      2554	eval.c	FUNCTION_48
0x4008e8c	            0xeb05	                           jmp 0x4008e93	      2554	eval.c	FUNCTION_48
0x4008e8e	      0xb800000000	                              mov eax, 0	      2510	eval.c	FUNCTION_48	IF_1
0x4008e93	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      2555	eval.c	FUNCTION_48
0x4008e98	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2555	eval.c	FUNCTION_48
0x4008ea1	            0x7440	                            je 0x4008ee3	      2555	eval.c	FUNCTION_48
0x4008ea3	            0xeb39	                           jmp 0x4008ede	      2555	eval.c	FUNCTION_48
0x4008ea5	    0xc74500000000	                      mov dword [rbp], 0	      2527	eval.c	FUNCTION_48	IF_5
0x4008eac	        0x833c2405	                      cmp dword [rsp], 5	      2531	eval.c	FUNCTION_48	IF_5	IF_6	IF_7
0x4008eb0	     0xf8572ffffff	                           jne 0x4008e28	      2531	eval.c	FUNCTION_48	IF_5	IF_6	IF_7
0x4008eb6	            0xeb96	                           jmp 0x4008e4e	      2531	eval.c	FUNCTION_48	IF_5	IF_6	IF_7
0x4008eb8	        0x488d7802	                      lea rdi, [rax + 2]	      2525	eval.c	FUNCTION_48	IF_5	CALL_8
0x4008ebc	      0xe800000000	                          call 0x4008ec1	      2525	eval.c	FUNCTION_48	IF_5	CALL_8
0x4008ec1	      0xb901000000	                              mov ecx, 1	      2525	eval.c	FUNCTION_48	IF_5	CALL_8
0x4008ec6	          0x4c89ea	                            mov rdx, r13	      2525	eval.c	FUNCTION_48	IF_5	CALL_8
0x4008ec9	          0x4889e6	                            mov rsi, rsp	      2525	eval.c	FUNCTION_48	IF_5	CALL_8
0x4008ecc	          0x4889c7	                            mov rdi, rax	      2525	eval.c	FUNCTION_48	IF_5	CALL_8
0x4008ecf	      0xe800000000	                          call 0x4008ed4	      2525	eval.c	FUNCTION_48	IF_5	CALL_8
0x4008ed4	          0x83f801	                              cmp eax, 1	      2525	eval.c	FUNCTION_48	IF_5	CALL_8
0x4008ed7	            0x74cc	                            je 0x4008ea5	      2525	eval.c	FUNCTION_48	IF_5	CALL_8
0x4008ed9	          0x4889d8	                            mov rax, rbx	      2554	eval.c	FUNCTION_48
0x4008edc	            0xebb5	                           jmp 0x4008e93	      2554	eval.c	FUNCTION_48
0x4008ede	      0xe800000000	                          call 0x4008ee3	      2555	eval.c	FUNCTION_48
0x4008ee3	        0x4883c420	                           add rsp, 0x20	      2555	eval.c	FUNCTION_48
0x4008ee7	              0x5b	                                 pop rbx	      2555	eval.c	FUNCTION_48
0x4008ee8	              0x5d	                                 pop rbp	      2555	eval.c	FUNCTION_48
0x4008ee9	            0x415c	                                 pop r12	      2555	eval.c	FUNCTION_48
0x4008eeb	            0x415d	                                 pop r13	      2555	eval.c	FUNCTION_48
0x4008eed	            0x415e	                                 pop r14	      2555	eval.c	FUNCTION_48
0x4008eef	              0xc3	                                     ret	      2555	eval.c	FUNCTION_48
eval_to_bool	FOR,0:SWITCH,0:DO,0:IF,4:functions,0:WHILE,0:CALL,3:ELSE,1	50
0x4008062	              0x55	                                push rbp	       672	eval.c	FUNCTION_13
0x4008063	              0x53	                                push rbx	       672	eval.c	FUNCTION_13
0x4008064	        0x4883ec28	                           sub rsp, 0x28	       672	eval.c	FUNCTION_13
0x4008068	          0x4889f5	                            mov rbp, rsi	       672	eval.c	FUNCTION_13
0x400806b	            0x89cb	                            mov ebx, ecx	       672	eval.c	FUNCTION_13
0x400806d	    0x64488b042528	                mov rax, qword fs:[0x28]	       672	eval.c	FUNCTION_13
0x4008076	      0x4889442418	             mov qword [rsp + 0x18], rax	       672	eval.c	FUNCTION_13
0x400807b	            0x31c0	                            xor eax, eax	       672	eval.c	FUNCTION_13
0x400807d	            0x85c9	                           test ecx, ecx	       676	eval.c	FUNCTION_13	IF_1
0x400807f	            0x746f	                            je 0x40080f0	       676	eval.c	FUNCTION_13	IF_1
0x4008081	    0x830500000000	               add dword [0x04008088], 1	       677	eval.c	FUNCTION_13	IF_1
0x4008088	      0xb900000000	                              mov ecx, 0	       678	eval.c	FUNCTION_13	IF_2	CALL_1
0x400808d	          0x4889e6	                            mov rsi, rsp	       678	eval.c	FUNCTION_13	IF_2	CALL_1
0x4008090	      0xe800000000	                          call 0x4008095	       678	eval.c	FUNCTION_13	IF_2	CALL_1
0x4008095	            0x85c0	                           test eax, eax	       678	eval.c	FUNCTION_13	IF_2	CALL_1
0x4008097	            0x756a	                           jne 0x4008103	       678	eval.c	FUNCTION_13	IF_2	CALL_1
0x4008099	    0xc74500010000	                      mov dword [rbp], 1	       679	eval.c	FUNCTION_13	IF_2
0x40080a0	      0xbd00000000	                              mov ebp, 0	       674	eval.c	FUNCTION_13
0x40080a5	            0x85db	                           test ebx, ebx	       689	eval.c	FUNCTION_13	IF_4
0x40080a7	            0x740c	                            je 0x40080b5	       689	eval.c	FUNCTION_13	IF_4
0x40080a9	    0x832d00000000	               sub dword [0x040080b0], 1	       690	eval.c	FUNCTION_13	IF_4
0x40080b0	      0xbd00000000	                              mov ebp, 0	       690	eval.c	FUNCTION_13	IF_4
0x40080b5	            0x89e8	                            mov eax, ebp	       693	eval.c	FUNCTION_13
0x40080b7	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       693	eval.c	FUNCTION_13
0x40080bc	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       693	eval.c	FUNCTION_13
0x40080c5	            0x744a	                            je 0x4008111	       693	eval.c	FUNCTION_13
0x40080c7	            0xeb43	                           jmp 0x400810c	       693	eval.c	FUNCTION_13
0x40080c9	    0xc74500000000	                      mov dword [rbp], 0	       682	eval.c	FUNCTION_13	ELSE_1
0x40080d0	          0x4889ee	                            mov rsi, rbp	       685	eval.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0x40080d3	          0x4889e7	                            mov rdi, rsp	       685	eval.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0x40080d6	      0xe800000000	                          call 0x40080db	       685	eval.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0x40080db	          0x4885c0	                           test rax, rax	       685	eval.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0x40080de	        0x400f95c5	                               setne bpl	       685	eval.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0x40080e2	        0x400fb6ed	                          movzx ebp, bpl	       685	eval.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0x40080e6	          0x4889e7	                            mov rdi, rsp	       686	eval.c	FUNCTION_13	ELSE_1	IF_3	CALL_3
0x40080e9	      0xe800000000	                          call 0x40080ee	       686	eval.c	FUNCTION_13	ELSE_1	IF_3	CALL_3
0x40080ee	            0xebc5	                           jmp 0x40080b5	       686	eval.c	FUNCTION_13	ELSE_1	IF_3	CALL_3
0x40080f0	      0xb901000000	                              mov ecx, 1	       678	eval.c	FUNCTION_13	IF_2	CALL_1
0x40080f5	          0x4889e6	                            mov rsi, rsp	       678	eval.c	FUNCTION_13	IF_2	CALL_1
0x40080f8	      0xe800000000	                          call 0x40080fd	       678	eval.c	FUNCTION_13	IF_2	CALL_1
0x40080fd	            0x85c0	                           test eax, eax	       678	eval.c	FUNCTION_13	IF_2	CALL_1
0x40080ff	            0x7498	                            je 0x4008099	       678	eval.c	FUNCTION_13	IF_2	CALL_1
0x4008101	            0xebc6	                           jmp 0x40080c9	       678	eval.c	FUNCTION_13	IF_2	CALL_1
0x4008103	    0xc74500000000	                      mov dword [rbp], 0	       682	eval.c	FUNCTION_13	ELSE_1
0x400810a	            0xeb9d	                           jmp 0x40080a9	       682	eval.c	FUNCTION_13	ELSE_1
0x400810c	      0xe800000000	                          call 0x4008111	       693	eval.c	FUNCTION_13
0x4008111	        0x4883c428	                           add rsp, 0x28	       693	eval.c	FUNCTION_13
0x4008115	              0x5b	                                 pop rbx	       693	eval.c	FUNCTION_13
0x4008116	              0x5d	                                 pop rbp	       693	eval.c	FUNCTION_13
0x4008117	              0xc3	                                     ret	       693	eval.c	FUNCTION_13
set_ref_in_item	FOR,4:SWITCH,0:DO,0:IF,22:functions,0:WHILE,0:CALL,15:ELSE,9	242
0x4000ece	            0x4157	                                push r15	      5357	eval.c	FUNCTION_85
0x4000ed0	            0x4156	                                push r14	      5357	eval.c	FUNCTION_85
0x4000ed2	            0x4155	                                push r13	      5357	eval.c	FUNCTION_85
0x4000ed4	            0x4154	                                push r12	      5357	eval.c	FUNCTION_85
0x4000ed6	              0x55	                                push rbp	      5357	eval.c	FUNCTION_85
0x4000ed7	              0x53	                                push rbx	      5357	eval.c	FUNCTION_85
0x4000ed8	        0x4883ec38	                           sub rsp, 0x38	      5357	eval.c	FUNCTION_85
0x4000edc	            0x89f5	                            mov ebp, esi	      5357	eval.c	FUNCTION_85
0x4000ede	          0x4989d4	                            mov r12, rdx	      5357	eval.c	FUNCTION_85
0x4000ee1	          0x4989cd	                            mov r13, rcx	      5357	eval.c	FUNCTION_85
0x4000ee4	    0x64488b042528	                mov rax, qword fs:[0x28]	      5357	eval.c	FUNCTION_85
0x4000eed	      0x4889442428	             mov qword [rsp + 0x28], rax	      5357	eval.c	FUNCTION_85
0x4000ef2	            0x31c0	                            xor eax, eax	      5357	eval.c	FUNCTION_85
0x4000ef4	            0x8b07	                    mov eax, dword [rdi]	      5360	eval.c	FUNCTION_85	IF_1
0x4000ef6	          0x83f806	                              cmp eax, 6	      5360	eval.c	FUNCTION_85	IF_1
0x4000ef9	            0x7561	                           jne 0x4000f5c	      5360	eval.c	FUNCTION_85	IF_1
0x4000efb	        0x488b5f08	                mov rbx, qword [rdi + 8]	      5362	eval.c	FUNCTION_85	IF_1
0x4000eff	          0x4885db	                           test rbx, rbx	      5364	eval.c	FUNCTION_85	IF_1	IF_2
0x4000f02	     0xf8418030000	                            je 0x4001220	      5364	eval.c	FUNCTION_85	IF_1	IF_2
0x4000f08	          0x397308	                cmp dword [rbx + 8], esi	      5364	eval.c	FUNCTION_85	IF_1	IF_2
0x4000f0b	     0xf8416030000	                            je 0x4001227	      5364	eval.c	FUNCTION_85	IF_1	IF_2
0x4000f11	          0x897308	                mov dword [rbx + 8], esi	      5367	eval.c	FUNCTION_85	IF_1	IF_2
0x4000f14	          0x4885d2	                           test rdx, rdx	      5368	eval.c	FUNCTION_85	IF_1	IF_2	IF_3
0x4000f17	            0x7513	                           jne 0x4000f2c	      5368	eval.c	FUNCTION_85	IF_1	IF_2	IF_3
0x4000f19	        0x488d7b10	                   lea rdi, [rbx + 0x10]	      5370	eval.c	FUNCTION_85	IF_1	IF_2	IF_3	CALL_1
0x4000f1d	          0x4889ca	                            mov rdx, rcx	      5370	eval.c	FUNCTION_85	IF_1	IF_2	IF_3	CALL_1
0x4000f20	      0xe800000000	                          call 0x4000f25	      5370	eval.c	FUNCTION_85	IF_1	IF_2	IF_3	CALL_1
0x4000f25	            0x89c3	                            mov ebx, eax	      5370	eval.c	FUNCTION_85	IF_1	IF_2	IF_3	CALL_1
0x4000f27	      0xe91c030000	                           jmp 0x4001248	      5370	eval.c	FUNCTION_85	IF_1	IF_2	IF_3	CALL_1
0x4000f2c	      0xbf10000000	                           mov edi, 0x10	      5374	eval.c	FUNCTION_85	IF_1	IF_2	ELSE_1	CALL_2
0x4000f31	      0xe800000000	                          call 0x4000f36	      5374	eval.c	FUNCTION_85	IF_1	IF_2	ELSE_1	CALL_2
0x4000f36	          0x4885c0	                           test rax, rax	      5375	eval.c	FUNCTION_85	IF_1	IF_2	ELSE_1	IF_4
0x4000f39	     0xf84ef020000	                            je 0x400122e	      5375	eval.c	FUNCTION_85	IF_1	IF_2	ELSE_1	IF_4
0x4000f3f	        0x4883c310	                           add rbx, 0x10	      5379	eval.c	FUNCTION_85	IF_1	IF_2	ELSE_1	ELSE_2
0x4000f43	          0x488918	                    mov qword [rax], rbx	      5379	eval.c	FUNCTION_85	IF_1	IF_2	ELSE_1	ELSE_2
0x4000f46	        0x498b1424	                    mov rdx, qword [r12]	      5380	eval.c	FUNCTION_85	IF_1	IF_2	ELSE_1	ELSE_2
0x4000f4a	        0x48895008	                mov qword [rax + 8], rdx	      5380	eval.c	FUNCTION_85	IF_1	IF_2	ELSE_1	ELSE_2
0x4000f4e	        0x49890424	                    mov qword [r12], rax	      5381	eval.c	FUNCTION_85	IF_1	IF_2	ELSE_1	ELSE_2
0x4000f52	      0xbb00000000	                              mov ebx, 0	      5358	eval.c	FUNCTION_85
0x4000f57	      0xe9ec020000	                           jmp 0x4001248	      5358	eval.c	FUNCTION_85
0x4000f5c	          0x83f805	                              cmp eax, 5	      5386	eval.c	FUNCTION_85	ELSE_3	IF_5
0x4000f5f	            0x7559	                           jne 0x4000fba	      5386	eval.c	FUNCTION_85	ELSE_3	IF_5
0x4000f61	        0x488b5f08	                mov rbx, qword [rdi + 8]	      5388	eval.c	FUNCTION_85	ELSE_3	IF_5
0x4000f65	          0x4885db	                           test rbx, rbx	      5390	eval.c	FUNCTION_85	ELSE_3	IF_5	IF_6
0x4000f68	     0xf84c7020000	                            je 0x4001235	      5390	eval.c	FUNCTION_85	ELSE_3	IF_5	IF_6
0x4000f6e	          0x3b7344	            cmp esi, dword [rbx + 0x44] 	      5390	eval.c	FUNCTION_85	ELSE_3	IF_5	IF_6
0x4000f71	     0xf84c5020000	                            je 0x400123c	      5390	eval.c	FUNCTION_85	ELSE_3	IF_5	IF_6
0x4000f77	          0x897344	             mov dword [rbx + 0x44], esi	      5393	eval.c	FUNCTION_85	ELSE_3	IF_5	IF_6
0x4000f7a	          0x4885c9	                           test rcx, rcx	      5394	eval.c	FUNCTION_85	ELSE_3	IF_5	IF_6	IF_7
0x4000f7d	            0x750f	                           jne 0x4000f8e	      5394	eval.c	FUNCTION_85	ELSE_3	IF_5	IF_6	IF_7
0x4000f7f	          0x4889df	                            mov rdi, rbx	      5396	eval.c	FUNCTION_85	ELSE_3	IF_5	IF_6	IF_7	CALL_3
0x4000f82	      0xe800000000	                          call 0x4000f87	      5396	eval.c	FUNCTION_85	ELSE_3	IF_5	IF_6	IF_7	CALL_3
0x4000f87	            0x89c3	                            mov ebx, eax	      5396	eval.c	FUNCTION_85	ELSE_3	IF_5	IF_6	IF_7	CALL_3
0x4000f89	      0xe9ba020000	                           jmp 0x4001248	      5396	eval.c	FUNCTION_85	ELSE_3	IF_5	IF_6	IF_7	CALL_3
0x4000f8e	      0xbf10000000	                           mov edi, 0x10	      5400	eval.c	FUNCTION_85	ELSE_3	IF_5	IF_6	ELSE_4	CALL_4
0x4000f93	      0xe800000000	                          call 0x4000f98	      5400	eval.c	FUNCTION_85	ELSE_3	IF_5	IF_6	ELSE_4	CALL_4
0x4000f98	          0x4885c0	                           test rax, rax	      5402	eval.c	FUNCTION_85	ELSE_3	IF_5	IF_6	ELSE_4	IF_8
0x4000f9b	     0xf84a2020000	                            je 0x4001243	      5402	eval.c	FUNCTION_85	ELSE_3	IF_5	IF_6	ELSE_4	IF_8
0x4000fa1	          0x488918	                    mov qword [rax], rbx	      5406	eval.c	FUNCTION_85	ELSE_3	IF_5	IF_6	ELSE_4	ELSE_5
0x4000fa4	        0x498b5500	                    mov rdx, qword [r13]	      5407	eval.c	FUNCTION_85	ELSE_3	IF_5	IF_6	ELSE_4	ELSE_5
0x4000fa8	        0x48895008	                mov qword [rax + 8], rdx	      5407	eval.c	FUNCTION_85	ELSE_3	IF_5	IF_6	ELSE_4	ELSE_5
0x4000fac	        0x49894500	                    mov qword [r13], rax	      5408	eval.c	FUNCTION_85	ELSE_3	IF_5	IF_6	ELSE_4	ELSE_5
0x4000fb0	      0xbb00000000	                              mov ebx, 0	      5358	eval.c	FUNCTION_85
0x4000fb5	      0xe98e020000	                           jmp 0x4001248	      5358	eval.c	FUNCTION_85
0x4000fba	          0x83f803	                              cmp eax, 3	      5413	eval.c	FUNCTION_85	ELSE_6	IF_9
0x4000fbd	            0x7517	                           jne 0x4000fd6	      5413	eval.c	FUNCTION_85	ELSE_6	IF_9
0x4000fbf	        0x488b7f08	                mov rdi, qword [rdi + 8]	      5415	eval.c	FUNCTION_85	ELSE_6	IF_9	CALL_5
0x4000fc3	            0x89f2	                            mov edx, esi	      5415	eval.c	FUNCTION_85	ELSE_6	IF_9	CALL_5
0x4000fc5	      0xbe00000000	                              mov esi, 0	      5415	eval.c	FUNCTION_85	ELSE_6	IF_9	CALL_5
0x4000fca	      0xe800000000	                          call 0x4000fcf	      5415	eval.c	FUNCTION_85	ELSE_6	IF_9	CALL_5
0x4000fcf	            0x89c3	                            mov ebx, eax	      5415	eval.c	FUNCTION_85	ELSE_6	IF_9	CALL_5
0x4000fd1	      0xe972020000	                           jmp 0x4001248	      5415	eval.c	FUNCTION_85	ELSE_6	IF_9	CALL_5
0x4000fd6	          0x83f804	                              cmp eax, 4	      5417	eval.c	FUNCTION_85	ELSE_7	IF_10
0x4000fd9	     0xf8596000000	                           jne 0x4001075	      5417	eval.c	FUNCTION_85	ELSE_7	IF_10
0x4000fdf	        0x4c8b7f08	                mov r15, qword [rdi + 8]	      5419	eval.c	FUNCTION_85	ELSE_7	IF_10
0x4000fe3	      0xbb00000000	                              mov ebx, 0	      5358	eval.c	FUNCTION_85
0x4000fe8	          0x4d85ff	                           test r15, r15	      5424	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11
0x4000feb	     0xf8457020000	                            je 0x4001248	      5424	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11
0x4000ff1	        0x498b7710	            mov rsi, qword [r15 + 0x10] 	      5426	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	CALL_6
0x4000ff5	        0x498b7f08	                mov rdi, qword [r15 + 8]	      5426	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	CALL_6
0x4000ff9	            0x89ea	                            mov edx, ebp	      5426	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	CALL_6
0x4000ffb	      0xe800000000	                          call 0x4001000	      5426	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	CALL_6
0x4001000	            0x89c3	                            mov ebx, eax	      5426	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	CALL_6
0x4001002	        0x498b4728	            mov rax, qword [r15 + 0x28] 	      5428	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	IF_12
0x4001006	          0x4885c0	                           test rax, rax	      5428	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	IF_12
0x4001009	            0x741f	                            je 0x400102a	      5428	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	IF_12
0x400100b	    0xc74424100600	               mov dword [rsp + 0x10], 6	      5432	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	IF_12
0x4001013	      0x4889442418	             mov qword [rsp + 0x18], rax	      5433	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	IF_12
0x4001018	          0x4c89e9	                            mov rcx, r13	      5434	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	IF_12	CALL_7
0x400101b	          0x4c89e2	                            mov rdx, r12	      5434	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	IF_12	CALL_7
0x400101e	            0x89ee	                            mov esi, ebp	      5434	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	IF_12	CALL_7
0x4001020	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5434	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	IF_12	CALL_7
0x4001025	      0xe800000000	                          call 0x400102a	      5434	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	IF_12	CALL_7
0x400102a	      0x41837f1c00	               cmp dword [r15 + 0x1c], 0	      5437	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	FOR_1
0x400102f	     0xf8e13020000	                           jle 0x4001248	      5437	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	FOR_1
0x4001035	    0x41be00000000	                             mov r14d, 0	      5437	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	FOR_1
0x400103b	            0x85db	                           test ebx, ebx	      5438	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	FOR_1	CALL_8
0x400103d	            0x7522	                           jne 0x4001061	      5438	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	FOR_1	CALL_8
0x400103f	          0x4963fe	                        movsxd rdi, r14d	      5438	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	FOR_1	CALL_8
0x4001042	        0x48c1e704	                              shl rdi, 4	      5438	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	FOR_1	CALL_8
0x4001046	        0x49037f20	             add rdi, qword [r15 + 0x20]	      5438	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	FOR_1	CALL_8
0x400104a	          0x4c89e9	                            mov rcx, r13	      5438	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	FOR_1	CALL_8
0x400104d	          0x4c89e2	                            mov rdx, r12	      5438	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	FOR_1	CALL_8
0x4001050	            0x89ee	                            mov esi, ebp	      5438	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	FOR_1	CALL_8
0x4001052	      0xe800000000	                          call 0x4001057	      5438	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	FOR_1	CALL_8
0x4001057	            0x85c0	                           test eax, eax	      5438	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	FOR_1	CALL_8
0x4001059	           0xf95c3	                                setne bl	      5438	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	FOR_1	CALL_8
0x400105c	           0xfb6db	                           movzx ebx, bl	      5438	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	FOR_1	CALL_8
0x400105f	            0xeb05	                           jmp 0x4001066	      5438	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	FOR_1	CALL_8
0x4001061	      0xbb01000000	                              mov ebx, 1	      5438	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	FOR_1	CALL_8
0x4001066	        0x4183c601	                             add r14d, 1	      5437	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	FOR_1
0x400106a	        0x4539771c	           cmp dword [r15 + 0x1c], r14d 	      5437	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	FOR_1
0x400106e	            0x7fcb	                            jg 0x400103b	      5437	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	FOR_1
0x4001070	      0xe9d3010000	                           jmp 0x4001248	      5437	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	FOR_1
0x4001075	          0x83f809	                              cmp eax, 9	      5443	eval.c	FUNCTION_85	ELSE_8	IF_13
0x4001078	            0x7563	                           jne 0x40010dd	      5443	eval.c	FUNCTION_85	ELSE_8	IF_13
0x400107a	        0x488b5f08	                mov rbx, qword [rdi + 8]	      5445	eval.c	FUNCTION_85	ELSE_8	IF_13
0x400107e	          0x4885db	                           test rbx, rbx	      5448	eval.c	FUNCTION_85	ELSE_8	IF_13	IF_14
0x4001081	            0x7450	                            je 0x40010d3	      5448	eval.c	FUNCTION_85	ELSE_8	IF_13	IF_14
0x4001083	          0x3b735c	            cmp esi, dword [rbx + 0x5c] 	      5448	eval.c	FUNCTION_85	ELSE_8	IF_13	IF_14
0x4001086	            0x744b	                            je 0x40010d3	      5448	eval.c	FUNCTION_85	ELSE_8	IF_13	IF_14
0x4001088	          0x89735c	             mov dword [rbx + 0x5c], esi	      5450	eval.c	FUNCTION_85	ELSE_8	IF_13	IF_14
0x400108b	        0x488b4360	            mov rax, qword [rbx + 0x60] 	      5451	eval.c	FUNCTION_85	ELSE_8	IF_13	IF_14	IF_15
0x400108f	          0x4885c0	                           test rax, rax	      5451	eval.c	FUNCTION_85	ELSE_8	IF_13	IF_14	IF_15
0x4001092	            0x7417	                            je 0x40010ab	      5451	eval.c	FUNCTION_85	ELSE_8	IF_13	IF_14	IF_15
0x4001094	    0xc74424100a00	             mov dword [rsp + 0x10], 0xa	      5453	eval.c	FUNCTION_85	ELSE_8	IF_13	IF_14	IF_15
0x400109c	      0x4889442418	             mov qword [rsp + 0x18], rax	      5454	eval.c	FUNCTION_85	ELSE_8	IF_13	IF_14	IF_15
0x40010a1	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5455	eval.c	FUNCTION_85	ELSE_8	IF_13	IF_14	IF_15	CALL_9
0x40010a6	      0xe800000000	                          call 0x40010ab	      5455	eval.c	FUNCTION_85	ELSE_8	IF_13	IF_14	IF_15	CALL_9
0x40010ab	        0x488b4348	            mov rax, qword [rbx + 0x48] 	      5457	eval.c	FUNCTION_85	ELSE_8	IF_13	IF_14	IF_16
0x40010af	          0x4885c0	                           test rax, rax	      5457	eval.c	FUNCTION_85	ELSE_8	IF_13	IF_14	IF_16
0x40010b2	            0x741f	                            je 0x40010d3	      5457	eval.c	FUNCTION_85	ELSE_8	IF_13	IF_14	IF_16
0x40010b4	    0xc74424100400	               mov dword [rsp + 0x10], 4	      5459	eval.c	FUNCTION_85	ELSE_8	IF_13	IF_14	IF_16
0x40010bc	      0x4889442418	             mov qword [rsp + 0x18], rax	      5460	eval.c	FUNCTION_85	ELSE_8	IF_13	IF_14	IF_16
0x40010c1	          0x4c89e9	                            mov rcx, r13	      5461	eval.c	FUNCTION_85	ELSE_8	IF_13	IF_14	IF_16	CALL_10
0x40010c4	          0x4c89e2	                            mov rdx, r12	      5461	eval.c	FUNCTION_85	ELSE_8	IF_13	IF_14	IF_16	CALL_10
0x40010c7	            0x89ee	                            mov esi, ebp	      5461	eval.c	FUNCTION_85	ELSE_8	IF_13	IF_14	IF_16	CALL_10
0x40010c9	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5461	eval.c	FUNCTION_85	ELSE_8	IF_13	IF_14	IF_16	CALL_10
0x40010ce	      0xe800000000	                          call 0x40010d3	      5461	eval.c	FUNCTION_85	ELSE_8	IF_13	IF_14	IF_16	CALL_10
0x40010d3	      0xbb00000000	                              mov ebx, 0	      5358	eval.c	FUNCTION_85
0x40010d8	      0xe96b010000	                           jmp 0x4001248	      5358	eval.c	FUNCTION_85
0x40010dd	      0xbb00000000	                              mov ebx, 0	      5358	eval.c	FUNCTION_85
0x40010e2	          0x83f80a	                            cmp eax, 0xa	      5465	eval.c	FUNCTION_85	ELSE_9	IF_17
0x40010e5	     0xf855d010000	                           jne 0x4001248	      5465	eval.c	FUNCTION_85	ELSE_9	IF_17
0x40010eb	        0x4c8b7f08	                mov r15, qword [rdi + 8]	      5467	eval.c	FUNCTION_85	ELSE_9	IF_17
0x40010ef	          0x4d85ff	                           test r15, r15	      5473	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18
0x40010f2	     0xf8421010000	                            je 0x4001219	      5473	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18
0x40010f8	    0x413bb7b80400	           cmp esi, dword [r15 + 0x4b8] 	      5473	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18
0x40010ff	     0xf8414010000	                            je 0x4001219	      5473	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18
0x4001105	    0x4189b7b80400	            mov dword [r15 + 0x4b8], esi	      5475	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18
0x400110c	        0x4d8d7758	                   lea r14, [r15 + 0x58]	      5475	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18
0x4001110	    0x498d87980400	                  lea rax, [r15 + 0x498]	      5475	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18
0x4001117	      0x4889442408	                mov qword [rsp + 8], rax	      5475	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18
0x400111c	        0x4c893424	                    mov qword [rsp], r14	      5475	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18
0x4001120	          0x498b1e	                    mov rbx, qword [r14]	      5478	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	FOR_3
0x4001123	          0x4885db	                           test rbx, rbx	      5478	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	FOR_3
0x4001126	            0x7419	                            je 0x4001141	      5478	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	FOR_3
0x4001128	          0x4c89e9	                            mov rcx, r13	      5480	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	CALL_11
0x400112b	          0x4c89e2	                            mov rdx, r12	      5480	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	CALL_11
0x400112e	            0x89ee	                            mov esi, ebp	      5480	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	CALL_11
0x4001130	          0x488b3b	                    mov rdi, qword [rbx]	      5480	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	CALL_11
0x4001133	      0xe800000000	                          call 0x4001138	      5480	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	CALL_11
0x4001138	        0x488b5b08	                mov rbx, qword [rbx + 8]	      5479	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	FOR_3
0x400113c	          0x4885db	                           test rbx, rbx	      5478	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	FOR_3
0x400113f	            0x75e7	                           jne 0x4001128	      5478	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	FOR_3
0x4001141	        0x488b0424	                    mov rax, qword [rsp]	      5481	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	FOR_4
0x4001145	    0x488b98800000	            mov rbx, qword [rax + 0x80] 	      5481	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	FOR_4
0x400114c	          0x4885db	                           test rbx, rbx	      5481	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	FOR_4
0x400114f	            0x7431	                            je 0x4001182	      5481	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	FOR_4
0x4001151	        0x488b4308	                mov rax, qword [rbx + 8]	      5483	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	FOR_4	IF_19
0x4001155	          0x4885c0	                           test rax, rax	      5483	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	FOR_4	IF_19
0x4001158	            0x741f	                            je 0x4001179	      5483	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	FOR_4	IF_19
0x400115a	    0xc74424100400	               mov dword [rsp + 0x10], 4	      5485	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	FOR_4	IF_19
0x4001162	      0x4889442418	             mov qword [rsp + 0x18], rax	      5486	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	FOR_4	IF_19
0x4001167	          0x4c89e9	                            mov rcx, r13	      5487	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	FOR_4	IF_19	CALL_12
0x400116a	          0x4c89e2	                            mov rdx, r12	      5487	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	FOR_4	IF_19	CALL_12
0x400116d	            0x89ee	                            mov esi, ebp	      5487	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	FOR_4	IF_19	CALL_12
0x400116f	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5487	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	FOR_4	IF_19	CALL_12
0x4001174	      0xe800000000	                          call 0x4001179	      5487	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	FOR_4	IF_19	CALL_12
0x4001179	        0x488b5b18	            mov rbx, qword [rbx + 0x18] 	      5482	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	FOR_4
0x400117d	          0x4885db	                           test rbx, rbx	      5481	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	FOR_4
0x4001180	            0x75cf	                           jne 0x4001151	      5481	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	FOR_4
0x4001182	        0x488b0424	                    mov rax, qword [rsp]	      5489	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	IF_20
0x4001186	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      5489	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	IF_20
0x400118d	          0x4885c0	                           test rax, rax	      5489	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	IF_20
0x4001190	            0x741f	                            je 0x40011b1	      5489	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	IF_20
0x4001192	    0xc74424100400	               mov dword [rsp + 0x10], 4	      5491	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	IF_20
0x400119a	      0x4889442418	             mov qword [rsp + 0x18], rax	      5492	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	IF_20
0x400119f	          0x4c89e9	                            mov rcx, r13	      5493	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	IF_20	CALL_13
0x40011a2	          0x4c89e2	                            mov rdx, r12	      5493	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	IF_20	CALL_13
0x40011a5	            0x89ee	                            mov esi, ebp	      5493	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	IF_20	CALL_13
0x40011a7	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5493	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	IF_20	CALL_13
0x40011ac	      0xe800000000	                          call 0x40011b1	      5493	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	IF_20	CALL_13
0x40011b1	    0x4981c6100100	                          add r14, 0x110	      5493	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	IF_20	CALL_13
0x40011b8	      0x4c3b742408	                cmp r14, qword [rsp + 8]	      5476	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2
0x40011bd	     0xf8559ffffff	                           jne 0x400111c	      5476	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2
0x40011c3	    0x498b87880400	           mov rax, qword [r15 + 0x488] 	      5496	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	IF_21
0x40011ca	          0x4885c0	                           test rax, rax	      5496	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	IF_21
0x40011cd	            0x741f	                            je 0x40011ee	      5496	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	IF_21
0x40011cf	    0xc74424100400	               mov dword [rsp + 0x10], 4	      5498	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	IF_21
0x40011d7	      0x4889442418	             mov qword [rsp + 0x18], rax	      5499	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	IF_21
0x40011dc	          0x4c89e9	                            mov rcx, r13	      5500	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	IF_21	CALL_14
0x40011df	          0x4c89e2	                            mov rdx, r12	      5500	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	IF_21	CALL_14
0x40011e2	            0x89ee	                            mov esi, ebp	      5500	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	IF_21	CALL_14
0x40011e4	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5500	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	IF_21	CALL_14
0x40011e9	      0xe800000000	                          call 0x40011ee	      5500	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	IF_21	CALL_14
0x40011ee	    0x498b87980400	           mov rax, qword [r15 + 0x498] 	      5502	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	IF_22
0x40011f5	          0x4885c0	                           test rax, rax	      5502	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	IF_22
0x40011f8	            0x741f	                            je 0x4001219	      5502	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	IF_22
0x40011fa	    0xc74424100400	               mov dword [rsp + 0x10], 4	      5504	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	IF_22
0x4001202	      0x4889442418	             mov qword [rsp + 0x18], rax	      5505	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	IF_22
0x4001207	          0x4c89e9	                            mov rcx, r13	      5506	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	IF_22	CALL_15
0x400120a	          0x4c89e2	                            mov rdx, r12	      5506	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	IF_22	CALL_15
0x400120d	            0x89ee	                            mov esi, ebp	      5506	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	IF_22	CALL_15
0x400120f	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5506	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	IF_22	CALL_15
0x4001214	      0xe800000000	                          call 0x4001219	      5506	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	IF_22	CALL_15
0x4001219	      0xbb00000000	                              mov ebx, 0	      5358	eval.c	FUNCTION_85
0x400121e	            0xeb28	                           jmp 0x4001248	      5358	eval.c	FUNCTION_85
0x4001220	      0xbb00000000	                              mov ebx, 0	      5358	eval.c	FUNCTION_85
0x4001225	            0xeb21	                           jmp 0x4001248	      5358	eval.c	FUNCTION_85
0x4001227	      0xbb00000000	                              mov ebx, 0	      5358	eval.c	FUNCTION_85
0x400122c	            0xeb1a	                           jmp 0x4001248	      5358	eval.c	FUNCTION_85
0x400122e	      0xbb01000000	                              mov ebx, 1	      5376	eval.c	FUNCTION_85	IF_1	IF_2	ELSE_1	IF_4
0x4001233	            0xeb13	                           jmp 0x4001248	      5376	eval.c	FUNCTION_85	IF_1	IF_2	ELSE_1	IF_4
0x4001235	      0xbb00000000	                              mov ebx, 0	      5358	eval.c	FUNCTION_85
0x400123a	            0xeb0c	                           jmp 0x4001248	      5358	eval.c	FUNCTION_85
0x400123c	      0xbb00000000	                              mov ebx, 0	      5358	eval.c	FUNCTION_85
0x4001241	            0xeb05	                           jmp 0x4001248	      5358	eval.c	FUNCTION_85
0x4001243	      0xbb01000000	                              mov ebx, 1	      5403	eval.c	FUNCTION_85	ELSE_3	IF_5	IF_6	ELSE_4	IF_8
0x4001248	            0x89d8	                            mov eax, ebx	      5512	eval.c	FUNCTION_85
0x400124a	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      5512	eval.c	FUNCTION_85
0x400124f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      5512	eval.c	FUNCTION_85
0x4001258	            0x7405	                            je 0x400125f	      5512	eval.c	FUNCTION_85
0x400125a	      0xe800000000	                          call 0x400125f	      5512	eval.c	FUNCTION_85
0x400125f	        0x4883c438	                           add rsp, 0x38	      5512	eval.c	FUNCTION_85
0x4001263	              0x5b	                                 pop rbx	      5512	eval.c	FUNCTION_85
0x4001264	              0x5d	                                 pop rbp	      5512	eval.c	FUNCTION_85
0x4001265	            0x415c	                                 pop r12	      5512	eval.c	FUNCTION_85
0x4001267	            0x415d	                                 pop r13	      5512	eval.c	FUNCTION_85
0x4001269	            0x415e	                                 pop r14	      5512	eval.c	FUNCTION_85
0x400126b	            0x415f	                                 pop r15	      5512	eval.c	FUNCTION_85
0x400126d	              0xc3	                                     ret	      5512	eval.c	FUNCTION_85
ex_unlet	FOR,0:SWITCH,0:DO,0:IF,0:functions,0:WHILE,0:CALL,1:ELSE,0	6
0x400a8b9	        0x4883ec08	                              sub rsp, 8	      2721	eval.c	FUNCTION_52
0x400a8bd	      0xba00000000	                              mov edx, 0	      2722	eval.c	FUNCTION_52	CALL_1
0x400a8c2	          0x488b37	                    mov rsi, qword [rdi]	      2722	eval.c	FUNCTION_52	CALL_1
0x400a8c5	      0xe809fcffff	                   call sym.ex_unletlock	      2722	eval.c	FUNCTION_52	CALL_1
0x400a8ca	        0x4883c408	                              add rsp, 8	      2723	eval.c	FUNCTION_52
0x400a8ce	              0xc3	                                     ret	      2723	eval.c	FUNCTION_52
var_flavour	FOR,0:SWITCH,0:DO,0:IF,2:functions,0:WHILE,1:CALL,2:ELSE,1	18
0x40000d6	           0xfb607	                   movzx eax, byte [rdi]	      8538	eval.c	FUNCTION_162	IF_1	CALL_1
0x40000d9	          0x83e841	                           sub eax, 0x41	      8538	eval.c	FUNCTION_162	IF_1	CALL_1
0x40000dc	          0x83f819	                           cmp eax, 0x19	      8538	eval.c	FUNCTION_162	IF_1	CALL_1
0x40000df	            0x7611	                           jbe 0x40000f2	      8538	eval.c	FUNCTION_162	IF_1	CALL_1
0x40000e1	      0xb800000000	                              mov eax, 0	      8546	eval.c	FUNCTION_162	ELSE_1
0x40000e6	              0xc3	                                     ret	      8546	eval.c	FUNCTION_162	ELSE_1
0x40000e7	           0xfb6c0	                           movzx eax, al	      8541	eval.c	FUNCTION_162	IF_1	WHILE_1	IF_2	CALL_2
0x40000ea	          0x83e861	                           sub eax, 0x61	      8541	eval.c	FUNCTION_162	IF_1	WHILE_1	IF_2	CALL_2
0x40000ed	          0x83f819	                           cmp eax, 0x19	      8541	eval.c	FUNCTION_162	IF_1	WHILE_1	IF_2	CALL_2
0x40000f0	            0x7611	                           jbe 0x4000103	      8541	eval.c	FUNCTION_162	IF_1	WHILE_1	IF_2	CALL_2
0x40000f2	        0x4883c701	                              add rdi, 1	      8540	eval.c	FUNCTION_162	IF_1	WHILE_1
0x40000f6	           0xfb607	                   movzx eax, byte [rdi]	      8540	eval.c	FUNCTION_162	IF_1	WHILE_1
0x40000f9	            0x84c0	                             test al, al	      8540	eval.c	FUNCTION_162	IF_1	WHILE_1
0x40000fb	            0x75ea	                           jne 0x40000e7	      8540	eval.c	FUNCTION_162	IF_1	WHILE_1
0x40000fd	      0xb802000000	                              mov eax, 2	      8543	eval.c	FUNCTION_162	IF_1
0x4000102	              0xc3	                                     ret	      8543	eval.c	FUNCTION_162	IF_1
0x4000103	      0xb801000000	                              mov eax, 1	      8542	eval.c	FUNCTION_162	IF_1	WHILE_1	IF_2
0x4000108	              0xc3	                                     ret	      8547	eval.c	FUNCTION_162	ELSE_1
ex_let_one	FOR,0:SWITCH,0:DO,0:IF,29:functions,0:WHILE,0:CALL,56:ELSE,16	411
0x4009c48	            0x4157	                                push r15	      1677	eval.c	FUNCTION_43
0x4009c4a	            0x4156	                                push r14	      1677	eval.c	FUNCTION_43
0x4009c4c	            0x4155	                                push r13	      1677	eval.c	FUNCTION_43
0x4009c4e	            0x4154	                                push r12	      1677	eval.c	FUNCTION_43
0x4009c50	              0x55	                                push rbp	      1677	eval.c	FUNCTION_43
0x4009c51	              0x53	                                push rbx	      1677	eval.c	FUNCTION_43
0x4009c52	    0x4881ec980000	                           sub rsp, 0x98	      1677	eval.c	FUNCTION_43
0x4009c59	          0x4889fb	                            mov rbx, rdi	      1677	eval.c	FUNCTION_43
0x4009c5c	      0x48897c2408	                mov qword [rsp + 8], rdi	      1677	eval.c	FUNCTION_43
0x4009c61	          0x4989f6	                            mov r14, rsi	      1677	eval.c	FUNCTION_43
0x4009c64	          0x4989cf	                            mov r15, rcx	      1677	eval.c	FUNCTION_43
0x4009c67	          0x4c89c5	                             mov rbp, r8	      1677	eval.c	FUNCTION_43
0x4009c6a	    0x64488b042528	                mov rax, qword fs:[0x28]	      1677	eval.c	FUNCTION_43
0x4009c73	    0x488984248800	             mov qword [rsp + 0x88], rax	      1677	eval.c	FUNCTION_43
0x4009c7b	            0x31c0	                            xor eax, eax	      1677	eval.c	FUNCTION_43
0x4009c7d	        0x440fb62f	                  movzx r13d, byte [rdi]	      1689	eval.c	FUNCTION_43	IF_1
0x4009c81	        0x4180fd24	                          cmp r13b, 0x24	      1689	eval.c	FUNCTION_43	IF_1
0x4009c85	     0xf85e8010000	                           jne 0x4009e73	      1689	eval.c	FUNCTION_43	IF_1
0x4009c8b	        0x4c8d6f01	                      lea r13, [rdi + 1]	      1692	eval.c	FUNCTION_43	IF_1
0x4009c8f	      0x4c896c2408	                mov qword [rsp + 8], r13	      1692	eval.c	FUNCTION_43	IF_1
0x4009c94	      0x488d7c2408	                      lea rdi, [rsp + 8]	      1694	eval.c	FUNCTION_43	IF_1	CALL_1
0x4009c99	      0xe82b68ffff	                    call sym.get_env_len	      1694	eval.c	FUNCTION_43	IF_1	CALL_1
0x4009c9e	          0x4189c4	                           mov r12d, eax	      1694	eval.c	FUNCTION_43	IF_1	CALL_1
0x4009ca1	            0x85c0	                           test eax, eax	      1695	eval.c	FUNCTION_43	IF_1	IF_2
0x4009ca3	            0x7529	                           jne 0x4009cce	      1695	eval.c	FUNCTION_43	IF_1	IF_2
0x4009ca5	      0xba05000000	                              mov edx, 5	      1696	eval.c	FUNCTION_43	IF_1	CALL_3
0x4009caa	      0xbe00000000	                              mov esi, 0	      1696	eval.c	FUNCTION_43	IF_1	CALL_3
0x4009caf	      0xbf00000000	                              mov edi, 0	      1696	eval.c	FUNCTION_43	IF_1	CALL_3
0x4009cb4	      0xe800000000	                          call 0x4009cb9	      1696	eval.c	FUNCTION_43	IF_1	CALL_3
0x4009cb9	          0x4889de	                            mov rsi, rbx	      1696	eval.c	FUNCTION_43	IF_1	CALL_3
0x4009cbc	          0x4889c7	                            mov rdi, rax	      1696	eval.c	FUNCTION_43	IF_1	CALL_3
0x4009cbf	      0xe800000000	                          call 0x4009cc4	      1696	eval.c	FUNCTION_43	IF_1	CALL_3
0x4009cc4	      0xbb00000000	                              mov ebx, 0	      1681	eval.c	FUNCTION_43
0x4009cc9	      0xe941050000	                           jmp 0x400a20f	      1681	eval.c	FUNCTION_43
0x4009cce	          0x4885ed	                           test rbp, rbp	      1699	eval.c	FUNCTION_43	IF_1	ELSE_1	IF_3
0x4009cd1	            0x7434	                            je 0x4009d07	      1699	eval.c	FUNCTION_43	IF_1	ELSE_1	IF_3
0x4009cd3	         0xfb64500	                   movzx eax, byte [rbp]	      1699	eval.c	FUNCTION_43	IF_1	ELSE_1	IF_3
0x4009cd7	          0x83e82b	                           sub eax, 0x2b	      1699	eval.c	FUNCTION_43	IF_1	ELSE_1	IF_3
0x4009cda	            0xa8fd	                           test al, 0xfd	      1699	eval.c	FUNCTION_43	IF_1	ELSE_1	IF_3
0x4009cdc	            0x7529	                           jne 0x4009d07	      1699	eval.c	FUNCTION_43	IF_1	ELSE_1	IF_3
0x4009cde	      0xba05000000	                              mov edx, 5	      1700	eval.c	FUNCTION_43	IF_1	ELSE_1	CALL_5
0x4009ce3	      0xbe00000000	                              mov esi, 0	      1700	eval.c	FUNCTION_43	IF_1	ELSE_1	CALL_5
0x4009ce8	      0xbf00000000	                              mov edi, 0	      1700	eval.c	FUNCTION_43	IF_1	ELSE_1	CALL_5
0x4009ced	      0xe800000000	                          call 0x4009cf2	      1700	eval.c	FUNCTION_43	IF_1	ELSE_1	CALL_5
0x4009cf2	          0x4889ee	                            mov rsi, rbp	      1700	eval.c	FUNCTION_43	IF_1	ELSE_1	CALL_5
0x4009cf5	          0x4889c7	                            mov rdi, rax	      1700	eval.c	FUNCTION_43	IF_1	ELSE_1	CALL_5
0x4009cf8	      0xe800000000	                          call 0x4009cfd	      1700	eval.c	FUNCTION_43	IF_1	ELSE_1	CALL_5
0x4009cfd	      0xbb00000000	                              mov ebx, 0	      1681	eval.c	FUNCTION_43
0x4009d02	      0xe908050000	                           jmp 0x400a20f	      1700	eval.c	FUNCTION_43	IF_1	ELSE_1	CALL_5
0x4009d07	          0x4d85ff	                           test r15, r15	      1701	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_2	IF_4
0x4009d0a	            0x7440	                            je 0x4009d4c	      1701	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_2	IF_4
0x4009d0c	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1702	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x4009d11	      0xe800000000	                          call 0x4009d16	      1702	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x4009d16	           0xfb630	                   movzx esi, byte [rax]	      1702	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x4009d19	          0x4c89ff	                            mov rdi, r15	      1702	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x4009d1c	      0xe800000000	                          call 0x4009d21	      1702	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x4009d21	          0x4885c0	                           test rax, rax	      1702	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x4009d24	            0x7526	                           jne 0x4009d4c	      1702	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x4009d26	      0xba05000000	                              mov edx, 5	      1703	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_2	IF_4
0x4009d2b	      0xbe00000000	                              mov esi, 0	      1703	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_2	IF_4
0x4009d30	      0xbf00000000	                              mov edi, 0	      1703	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_2	IF_4
0x4009d35	      0xe800000000	                          call 0x4009d3a	      1703	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_2	IF_4
0x4009d3a	          0x4889c7	                            mov rdi, rax	      1703	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_2	IF_4
0x4009d3d	      0xe800000000	                          call 0x4009d42	      1703	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_2	IF_4
0x4009d42	      0xbb00000000	                              mov ebx, 0	      1681	eval.c	FUNCTION_43
0x4009d47	      0xe9c3040000	                           jmp 0x400a20f	      1703	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_2	IF_4
0x4009d4c	      0xe800000000	                          call 0x4009d51	      1704	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	CALL_10
0x4009d51	      0xbb00000000	                              mov ebx, 0	      1681	eval.c	FUNCTION_43
0x4009d56	            0x85c0	                           test eax, eax	      1704	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	CALL_10
0x4009d58	     0xf85b1040000	                           jne 0x400a20f	      1704	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	CALL_10
0x4009d5e	          0x4d63e4	                        movsxd r12, r12d	      1706	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5
0x4009d61	          0x4d01ec	                            add r12, r13	      1706	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5
0x4009d64	      0x450fb63c24	                  movzx r15d, byte [r12]	      1706	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5
0x4009d69	      0x41c6042400	                       mov byte [r12], 0	      1707	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5
0x4009d6e	          0x4c89f7	                            mov rdi, r14	      1708	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	CALL_11
0x4009d71	      0xe800000000	                          call 0x4009d76	      1708	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	CALL_11
0x4009d76	          0x4989c6	                            mov r14, rax	      1708	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	CALL_11
0x4009d79	          0x4885c0	                           test rax, rax	      1709	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6
0x4009d7c	            0x745f	                            je 0x4009ddd	      1709	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6
0x4009d7e	          0x4885ed	                           test rbp, rbp	      1709	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6
0x4009d81	            0x745a	                            je 0x4009ddd	      1709	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6
0x4009d83	    0x48c704240000	                      mov qword [rsp], 0	      1684	eval.c	FUNCTION_43
0x4009d8b	        0x807d002e	                    cmp byte [rbp], 0x2e	      1709	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6
0x4009d8f	            0x7554	                           jne 0x4009de5	      1709	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6
0x4009d91	    0xc74424200000	               mov dword [rsp + 0x20], 0	      1711	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6
0x4009d99	      0x488d742420	                   lea rsi, [rsp + 0x20]	      1712	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6	CALL_12
0x4009d9e	          0x4c89ef	                            mov rdi, r13	      1712	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6	CALL_12
0x4009da1	      0xe800000000	                          call 0x4009da6	      1712	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6	CALL_12
0x4009da6	          0x4889c3	                            mov rbx, rax	      1712	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6	CALL_12
0x4009da9	    0x48c704240000	                      mov qword [rsp], 0	      1684	eval.c	FUNCTION_43
0x4009db1	          0x4885c0	                           test rax, rax	      1714	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6	IF_7
0x4009db4	            0x742f	                            je 0x4009de5	      1714	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6	IF_7
0x4009db6	          0x4c89f6	                            mov rsi, r14	      1716	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6	IF_7	CALL_13
0x4009db9	          0x4889c7	                            mov rdi, rax	      1716	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6	IF_7	CALL_13
0x4009dbc	      0xe800000000	                          call 0x4009dc1	      1716	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6	IF_7	CALL_13
0x4009dc1	          0x4989c6	                            mov r14, rax	      1716	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6	IF_7	CALL_13
0x4009dc4	        0x48890424	                    mov qword [rsp], rax	      1716	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6	IF_7	CALL_13
0x4009dc8	      0x837c242000	               cmp dword [rsp + 0x20], 0	      1717	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6	IF_7	IF_8
0x4009dcd	            0x7416	                            je 0x4009de5	      1717	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6	IF_7	IF_8
0x4009dcf	          0x4889df	                            mov rdi, rbx	      1718	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6	IF_7	CALL_14
0x4009dd2	      0xe800000000	                          call 0x4009dd7	      1718	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6	IF_7	CALL_14
0x4009dd7	        0x4c893424	                    mov qword [rsp], r14	      1716	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6	IF_7	CALL_13
0x4009ddb	            0xeb08	                           jmp 0x4009de5	      1716	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6	IF_7	CALL_13
0x4009ddd	    0x48c704240000	                      mov qword [rsp], 0	      1684	eval.c	FUNCTION_43
0x4009de5	      0xbb00000000	                              mov ebx, 0	      1681	eval.c	FUNCTION_43
0x4009dea	          0x4d85f6	                           test r14, r14	      1721	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9
0x4009ded	            0x7472	                            je 0x4009e61	      1721	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9
0x4009def	          0x4c89f6	                            mov rsi, r14	      1723	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	CALL_15
0x4009df2	          0x4c89ef	                            mov rdi, r13	      1723	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	CALL_15
0x4009df5	      0xe800000000	                          call 0x4009dfa	      1723	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	CALL_15
0x4009dfa	      0xbe00000000	                              mov esi, 0	      1724	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	IF_10	CALL_16
0x4009dff	          0x4c89ef	                            mov rdi, r13	      1724	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	IF_10	CALL_16
0x4009e02	      0xe800000000	                          call 0x4009e07	      1724	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	IF_10	CALL_16
0x4009e07	            0x85c0	                           test eax, eax	      1724	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	IF_10	CALL_16
0x4009e09	            0x7507	                           jne 0x4009e12	      1724	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	IF_10	CALL_16
0x4009e0b	      0xe800000000	                          call 0x4009e10	      1725	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	CALL_17
0x4009e10	            0xeb4a	                           jmp 0x4009e5c	      1725	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	CALL_17
0x4009e12	    0x833d00000000	               cmp dword [0x04009e19], 0	      1726	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	ELSE_4	IF_11	CALL_18
0x4009e19	            0x741d	                            je 0x4009e38	      1726	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	ELSE_4	IF_11	CALL_18
0x4009e1b	      0xbe00000000	                              mov esi, 0	      1726	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	ELSE_4	IF_11	CALL_18
0x4009e20	          0x4c89ef	                            mov rdi, r13	      1726	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	ELSE_4	IF_11	CALL_18
0x4009e23	      0xe800000000	                          call 0x4009e28	      1726	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	ELSE_4	IF_11	CALL_18
0x4009e28	            0x85c0	                           test eax, eax	      1726	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	ELSE_4	IF_11	CALL_18
0x4009e2a	            0x750c	                           jne 0x4009e38	      1726	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	ELSE_4	IF_11	CALL_18
0x4009e2c	    0xc70500000000	               mov dword [0x04009e36], 0	      1727	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	ELSE_4	IF_11
0x4009e36	            0xeb24	                           jmp 0x4009e5c	      1727	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	ELSE_4	IF_11
0x4009e38	    0x833d00000000	               cmp dword [0x04009e3f], 0	      1728	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	ELSE_5	IF_12
0x4009e3f	            0x741b	                            je 0x4009e5c	      1728	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	ELSE_5	IF_12
0x4009e41	      0xbe00000000	                              mov esi, 0	      1729	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	ELSE_5	IF_12	CALL_19
0x4009e46	          0x4c89ef	                            mov rdi, r13	      1729	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	ELSE_5	IF_12	CALL_19
0x4009e49	      0xe800000000	                          call 0x4009e4e	      1729	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	ELSE_5	IF_12	CALL_19
0x4009e4e	            0x85c0	                           test eax, eax	      1729	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	ELSE_5	IF_12	CALL_19
0x4009e50	            0x750a	                           jne 0x4009e5c	      1729	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	ELSE_5	IF_12	CALL_19
0x4009e52	    0xc70500000000	               mov dword [0x04009e5c], 0	      1730	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	ELSE_5	IF_12
0x4009e5c	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      1731	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9
0x4009e61	        0x45883c24	                    mov byte [r12], r15b	      1733	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5
0x4009e65	        0x488b3c24	                    mov rdi, qword [rsp]	      1734	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	CALL_20
0x4009e69	      0xe800000000	                          call 0x4009e6e	      1734	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	CALL_20
0x4009e6e	      0xe99c030000	                           jmp 0x400a20f	      1734	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	CALL_20
0x4009e73	          0x4189d4	                           mov r12d, edx	      1734	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	CALL_20
0x4009e76	        0x4180fd26	                          cmp r13b, 0x26	      1744	eval.c	FUNCTION_43	ELSE_6	IF_13
0x4009e7a	     0xf8568010000	                           jne 0x4009fe8	      1744	eval.c	FUNCTION_43	ELSE_6	IF_13
0x4009e80	      0x488d742414	                   lea rsi, [rsp + 0x14]	      1747	eval.c	FUNCTION_43	ELSE_6	IF_13	CALL_21
0x4009e85	      0x488d7c2408	                      lea rdi, [rsp + 8]	      1747	eval.c	FUNCTION_43	ELSE_6	IF_13	CALL_21
0x4009e8a	      0xe8b161ffff	                call sym.find_option_end	      1747	eval.c	FUNCTION_43	ELSE_6	IF_13	CALL_21
0x4009e8f	          0x4989c4	                            mov r12, rax	      1747	eval.c	FUNCTION_43	ELSE_6	IF_13	CALL_21
0x4009e92	          0x4885c0	                           test rax, rax	      1748	eval.c	FUNCTION_43	ELSE_6	IF_13	IF_14
0x4009e95	            0x741d	                            je 0x4009eb4	      1748	eval.c	FUNCTION_43	ELSE_6	IF_13	IF_14
0x4009e97	          0x4d85ff	                           test r15, r15	      1748	eval.c	FUNCTION_43	ELSE_6	IF_13	IF_14
0x4009e9a	            0x743e	                            je 0x4009eda	      1748	eval.c	FUNCTION_43	ELSE_6	IF_13	IF_14
0x4009e9c	          0x4889c7	                            mov rdi, rax	      1749	eval.c	FUNCTION_43	ELSE_6	IF_13	IF_14	CALL_23
0x4009e9f	      0xe800000000	                          call 0x4009ea4	      1749	eval.c	FUNCTION_43	ELSE_6	IF_13	IF_14	CALL_23
0x4009ea4	           0xfb630	                   movzx esi, byte [rax]	      1749	eval.c	FUNCTION_43	ELSE_6	IF_13	IF_14	CALL_23
0x4009ea7	          0x4c89ff	                            mov rdi, r15	      1749	eval.c	FUNCTION_43	ELSE_6	IF_13	IF_14	CALL_23
0x4009eaa	      0xe800000000	                          call 0x4009eaf	      1749	eval.c	FUNCTION_43	ELSE_6	IF_13	IF_14	CALL_23
0x4009eaf	          0x4885c0	                           test rax, rax	      1749	eval.c	FUNCTION_43	ELSE_6	IF_13	IF_14	CALL_23
0x4009eb2	            0x7526	                           jne 0x4009eda	      1749	eval.c	FUNCTION_43	ELSE_6	IF_13	IF_14	CALL_23
0x4009eb4	      0xba05000000	                              mov edx, 5	      1750	eval.c	FUNCTION_43	ELSE_6	IF_13	CALL_25
0x4009eb9	      0xbe00000000	                              mov esi, 0	      1750	eval.c	FUNCTION_43	ELSE_6	IF_13	CALL_25
0x4009ebe	      0xbf00000000	                              mov edi, 0	      1750	eval.c	FUNCTION_43	ELSE_6	IF_13	CALL_25
0x4009ec3	      0xe800000000	                          call 0x4009ec8	      1750	eval.c	FUNCTION_43	ELSE_6	IF_13	CALL_25
0x4009ec8	          0x4889c7	                            mov rdi, rax	      1750	eval.c	FUNCTION_43	ELSE_6	IF_13	CALL_25
0x4009ecb	      0xe800000000	                          call 0x4009ed0	      1750	eval.c	FUNCTION_43	ELSE_6	IF_13	CALL_25
0x4009ed0	      0xbb00000000	                              mov ebx, 0	      1681	eval.c	FUNCTION_43
0x4009ed5	      0xe935030000	                           jmp 0x400a20f	      1750	eval.c	FUNCTION_43	ELSE_6	IF_13	CALL_25
0x4009eda	    0x48c744242000	               mov qword [rsp + 0x20], 0	      1756	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7
0x4009ee3	      0x450fb62c24	                  movzx r13d, byte [r12]	      1759	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7
0x4009ee8	      0x41c6042400	                       mov byte [r12], 0	      1760	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7
0x4009eed	          0x4c89f7	                            mov rdi, r14	      1762	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	CALL_26
0x4009ef0	      0xe800000000	                          call 0x4009ef5	      1762	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	CALL_26
0x4009ef5	          0x4989c7	                            mov r15, rax	      1762	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	CALL_26
0x4009ef8	          0x4c89f7	                            mov rdi, r14	      1763	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	CALL_27
0x4009efb	      0xe800000000	                          call 0x4009f00	      1763	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	CALL_27
0x4009f00	          0x4889c3	                            mov rbx, rax	      1763	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	CALL_27
0x4009f03	          0x4885c0	                           test rax, rax	      1764	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15
0x4009f06	     0xf84a6000000	                            je 0x4009fb2	      1764	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15
0x4009f0c	          0x4885ed	                           test rbp, rbp	      1764	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15
0x4009f0f	     0xf849d000000	                            je 0x4009fb2	      1764	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15
0x4009f15	        0x807d003d	                    cmp byte [rbp], 0x3d	      1764	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15
0x4009f19	     0xf8493000000	                            je 0x4009fb2	      1764	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15
0x4009f1f	        0x8b4c2414	            mov ecx, dword [rsp + 0x14] 	      1766	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	CALL_28
0x4009f23	      0x488d542420	                   lea rdx, [rsp + 0x20]	      1766	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	CALL_28
0x4009f28	      0x488d742418	                   lea rsi, [rsp + 0x18]	      1766	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	CALL_28
0x4009f2d	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1766	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	CALL_28
0x4009f32	      0xe800000000	                          call 0x4009f37	      1766	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	CALL_28
0x4009f37	          0x83f801	                              cmp eax, 1	      1768	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	IF_16
0x4009f3a	            0x7508	                           jne 0x4009f44	      1768	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	IF_16
0x4009f3c	        0x807d002e	                    cmp byte [rbp], 0x2e	      1768	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	IF_16
0x4009f40	            0x7532	                           jne 0x4009f74	      1768	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	IF_16
0x4009f42	            0xeb0a	                           jmp 0x4009f4e	      1768	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	IF_16
0x4009f44	            0x85c0	                           test eax, eax	      1769	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	IF_16
0x4009f46	            0x756a	                           jne 0x4009fb2	      1769	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	IF_16
0x4009f48	        0x807d002e	                    cmp byte [rbp], 0x2e	      1769	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	IF_16
0x4009f4c	            0x7440	                            je 0x4009f8e	      1769	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	IF_16
0x4009f4e	      0xba05000000	                              mov edx, 5	      1771	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	IF_16	CALL_30
0x4009f53	      0xbe00000000	                              mov esi, 0	      1771	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	IF_16	CALL_30
0x4009f58	      0xbf00000000	                              mov edi, 0	      1771	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	IF_16	CALL_30
0x4009f5d	      0xe800000000	                          call 0x4009f62	      1771	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	IF_16	CALL_30
0x4009f62	          0x4889ee	                            mov rsi, rbp	      1771	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	IF_16	CALL_30
0x4009f65	          0x4889c7	                            mov rdi, rax	      1771	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	IF_16	CALL_30
0x4009f68	      0xe800000000	                          call 0x4009f6d	      1771	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	IF_16	CALL_30
0x4009f6d	      0xbb00000000	                              mov ebx, 0	      1681	eval.c	FUNCTION_43
0x4009f72	            0xeb61	                           jmp 0x4009fd5	      1681	eval.c	FUNCTION_43
0x4009f74	        0x807d002b	                    cmp byte [rbp], 0x2b	      1778	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	ELSE_8	IF_17	IF_18
0x4009f78	            0x7507	                           jne 0x4009f81	      1778	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	ELSE_8	IF_17	IF_18
0x4009f7a	      0x4c037c2418	             add r15, qword [rsp + 0x18]	      1779	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	ELSE_8	IF_17	IF_18
0x4009f7f	            0xeb31	                           jmp 0x4009fb2	      1779	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	ELSE_8	IF_17	IF_18
0x4009f81	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1781	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	ELSE_8	IF_17	ELSE_9
0x4009f86	          0x4c29f8	                            sub rax, r15	      1781	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	ELSE_8	IF_17	ELSE_9
0x4009f89	          0x4989c7	                            mov r15, rax	      1781	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	ELSE_8	IF_17	ELSE_9
0x4009f8c	            0xeb24	                           jmp 0x4009fb2	      1781	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	ELSE_8	IF_17	ELSE_9
0x4009f8e	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      1783	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	ELSE_8	ELSE_9	ELSE_10	IF_19
0x4009f93	          0x4885ff	                           test rdi, rdi	      1783	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	ELSE_8	ELSE_9	ELSE_10	IF_19
0x4009f96	            0x741a	                            je 0x4009fb2	      1783	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	ELSE_8	ELSE_9	ELSE_10	IF_19
0x4009f98	          0x4889de	                            mov rsi, rbx	      1785	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	ELSE_8	ELSE_9	ELSE_10	IF_19	CALL_31
0x4009f9b	      0xe800000000	                          call 0x4009fa0	      1785	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	ELSE_8	ELSE_9	ELSE_10	IF_19	CALL_31
0x4009fa0	          0x4889c3	                            mov rbx, rax	      1785	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	ELSE_8	ELSE_9	ELSE_10	IF_19	CALL_31
0x4009fa3	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      1786	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	ELSE_8	ELSE_9	ELSE_10	IF_19	CALL_32
0x4009fa8	      0xe800000000	                          call 0x4009fad	      1786	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	ELSE_8	ELSE_9	ELSE_10	IF_19	CALL_32
0x4009fad	      0x48895c2420	             mov qword [rsp + 0x20], rbx	      1787	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	ELSE_8	ELSE_9	ELSE_10	IF_19
0x4009fb2	          0x4885db	                           test rbx, rbx	      1791	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_20
0x4009fb5	            0x7419	                            je 0x4009fd0	      1791	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_20
0x4009fb7	        0x8b4c2414	            mov ecx, dword [rsp + 0x14] 	      1793	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_20	CALL_33
0x4009fbb	          0x4889da	                            mov rdx, rbx	      1793	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_20	CALL_33
0x4009fbe	          0x4c89fe	                            mov rsi, r15	      1793	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_20	CALL_33
0x4009fc1	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1793	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_20	CALL_33
0x4009fc6	      0xe800000000	                          call 0x4009fcb	      1793	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_20	CALL_33
0x4009fcb	          0x4c89e3	                            mov rbx, r12	      1794	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_20
0x4009fce	            0xeb05	                           jmp 0x4009fd5	      1794	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_20
0x4009fd0	      0xbb00000000	                              mov ebx, 0	      1681	eval.c	FUNCTION_43
0x4009fd5	        0x45882c24	                    mov byte [r12], r13b	      1796	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7
0x4009fd9	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      1797	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	CALL_34
0x4009fde	      0xe800000000	                          call 0x4009fe3	      1797	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	CALL_34
0x4009fe3	      0xe927020000	                           jmp 0x400a20f	      1797	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	CALL_34
0x4009fe8	        0x4180fd40	                          cmp r13b, 0x40	      1804	eval.c	FUNCTION_43	ELSE_11	IF_21
0x4009fec	     0xf853e010000	                           jne 0x400a130	      1804	eval.c	FUNCTION_43	ELSE_11	IF_21
0x4009ff2	        0x488d4701	                      lea rax, [rdi + 1]	      1806	eval.c	FUNCTION_43	ELSE_11	IF_21
0x4009ff6	      0x4889442408	                mov qword [rsp + 8], rax	      1806	eval.c	FUNCTION_43	ELSE_11	IF_21
0x4009ffb	          0x4d85c0	                             test r8, r8	      1807	eval.c	FUNCTION_43	ELSE_11	IF_21	IF_22
0x4009ffe	     0xf8439020000	                            je 0x400a23d	      1807	eval.c	FUNCTION_43	ELSE_11	IF_21	IF_22
0x400a004	        0x410fb600	                    movzx eax, byte [r8]	      1807	eval.c	FUNCTION_43	ELSE_11	IF_21	IF_22
0x400a008	          0x83e82b	                           sub eax, 0x2b	      1807	eval.c	FUNCTION_43	ELSE_11	IF_21	IF_22
0x400a00b	            0xa8fd	                           test al, 0xfd	      1807	eval.c	FUNCTION_43	ELSE_11	IF_21	IF_22
0x400a00d	            0x7529	                           jne 0x400a038	      1807	eval.c	FUNCTION_43	ELSE_11	IF_21	IF_22
0x400a00f	      0xba05000000	                              mov edx, 5	      1808	eval.c	FUNCTION_43	ELSE_11	IF_21	CALL_36
0x400a014	      0xbe00000000	                              mov esi, 0	      1808	eval.c	FUNCTION_43	ELSE_11	IF_21	CALL_36
0x400a019	      0xbf00000000	                              mov edi, 0	      1808	eval.c	FUNCTION_43	ELSE_11	IF_21	CALL_36
0x400a01e	      0xe800000000	                          call 0x400a023	      1808	eval.c	FUNCTION_43	ELSE_11	IF_21	CALL_36
0x400a023	          0x4889ee	                            mov rsi, rbp	      1808	eval.c	FUNCTION_43	ELSE_11	IF_21	CALL_36
0x400a026	          0x4889c7	                            mov rdi, rax	      1808	eval.c	FUNCTION_43	ELSE_11	IF_21	CALL_36
0x400a029	      0xe800000000	                          call 0x400a02e	      1808	eval.c	FUNCTION_43	ELSE_11	IF_21	CALL_36
0x400a02e	      0xbb00000000	                              mov ebx, 0	      1681	eval.c	FUNCTION_43
0x400a033	      0xe9d7010000	                           jmp 0x400a20f	      1808	eval.c	FUNCTION_43	ELSE_11	IF_21	CALL_36
0x400a038	          0x4885c9	                           test rcx, rcx	      1809	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23
0x400a03b	            0x743f	                            je 0x400a07c	      1809	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23
0x400a03d	        0x488d7f02	                      lea rdi, [rdi + 2]	      1810	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23	CALL_38
0x400a041	      0xe800000000	                          call 0x400a046	      1810	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23	CALL_38
0x400a046	           0xfb630	                   movzx esi, byte [rax]	      1810	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23	CALL_38
0x400a049	          0x4c89ff	                            mov rdi, r15	      1810	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23	CALL_38
0x400a04c	      0xe800000000	                          call 0x400a051	      1810	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23	CALL_38
0x400a051	          0x4885c0	                           test rax, rax	      1810	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23	CALL_38
0x400a054	            0x7526	                           jne 0x400a07c	      1810	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23	CALL_38
0x400a056	      0xba05000000	                              mov edx, 5	      1811	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23
0x400a05b	      0xbe00000000	                              mov esi, 0	      1811	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23
0x400a060	      0xbf00000000	                              mov edi, 0	      1811	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23
0x400a065	      0xe800000000	                          call 0x400a06a	      1811	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23
0x400a06a	          0x4889c7	                            mov rdi, rax	      1811	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23
0x400a06d	      0xe800000000	                          call 0x400a072	      1811	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23
0x400a072	      0xbb00000000	                              mov ebx, 0	      1681	eval.c	FUNCTION_43
0x400a077	      0xe993010000	                           jmp 0x400a20f	      1811	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23
0x400a07c	          0x4c89f7	                            mov rdi, r14	      1817	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	CALL_41
0x400a07f	      0xe800000000	                          call 0x400a084	      1817	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	CALL_41
0x400a084	          0x4889c3	                            mov rbx, rax	      1817	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	CALL_41
0x400a087	          0x4885c0	                           test rax, rax	      1818	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24
0x400a08a	            0x7454	                            je 0x400a0e0	      1818	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24
0x400a08c	          0x4885ed	                           test rbp, rbp	      1818	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24
0x400a08f	            0x744f	                            je 0x400a0e0	      1818	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24
0x400a091	    0x41bc00000000	                             mov r12d, 0	      1814	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13
0x400a097	        0x807d002e	                    cmp byte [rbp], 0x2e	      1818	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24
0x400a09b	            0x7549	                           jne 0x400a0e6	      1818	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24
0x400a09d	      0x488b442408	                mov rax, qword [rsp + 8]	      1820	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24	CALL_42
0x400a0a2	           0xfb610	                   movzx edx, byte [rax]	      1820	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24	CALL_42
0x400a0a5	           0xfb6c2	                           movzx eax, dl	      1820	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24	CALL_42
0x400a0a8	          0x80fa40	                            cmp dl, 0x40	      1820	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24	CALL_42
0x400a0ab	      0xbf22000000	                           mov edi, 0x22	      1820	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24	CALL_42
0x400a0b0	           0xf45f8	                         cmovne edi, eax	      1820	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24	CALL_42
0x400a0b3	      0xbe02000000	                              mov esi, 2	      1820	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24	CALL_42
0x400a0b8	      0xe800000000	                          call 0x400a0bd	      1820	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24	CALL_42
0x400a0bd	          0x4889c5	                            mov rbp, rax	      1820	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24	CALL_42
0x400a0c0	          0x4885c0	                           test rax, rax	      1821	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24	IF_25
0x400a0c3	            0x7421	                            je 0x400a0e6	      1821	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24	IF_25
0x400a0c5	          0x4889de	                            mov rsi, rbx	      1823	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24	IF_25	CALL_43
0x400a0c8	          0x4889c7	                            mov rdi, rax	      1823	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24	IF_25	CALL_43
0x400a0cb	      0xe800000000	                          call 0x400a0d0	      1823	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24	IF_25	CALL_43
0x400a0d0	          0x4889c3	                            mov rbx, rax	      1823	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24	IF_25	CALL_43
0x400a0d3	          0x4889ef	                            mov rdi, rbp	      1824	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24	IF_25	CALL_44
0x400a0d6	      0xe800000000	                          call 0x400a0db	      1824	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24	IF_25	CALL_44
0x400a0db	          0x4989dc	                            mov r12, rbx	      1823	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24	IF_25	CALL_43
0x400a0de	            0xeb06	                           jmp 0x400a0e6	      1823	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24	IF_25	CALL_43
0x400a0e0	    0x41bc00000000	                             mov r12d, 0	      1814	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13
0x400a0e6	          0x4885db	                           test rbx, rbx	      1827	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_26
0x400a0e9	            0x7433	                            je 0x400a11e	      1827	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_26
0x400a0eb	      0x488b442408	                mov rax, qword [rsp + 8]	      1829	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_26	CALL_45
0x400a0f0	           0xfb610	                   movzx edx, byte [rax]	      1829	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_26	CALL_45
0x400a0f3	           0xfb6c2	                           movzx eax, dl	      1829	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_26	CALL_45
0x400a0f6	          0x80fa40	                            cmp dl, 0x40	      1829	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_26	CALL_45
0x400a0f9	      0xbf22000000	                           mov edi, 0x22	      1829	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_26	CALL_45
0x400a0fe	           0xf45f8	                         cmovne edi, eax	      1829	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_26	CALL_45
0x400a101	      0xb900000000	                              mov ecx, 0	      1829	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_26	CALL_45
0x400a106	      0xbaffffffff	                     mov edx, 0xffffffff	      1829	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_26	CALL_45
0x400a10b	          0x4889de	                            mov rsi, rbx	      1829	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_26	CALL_45
0x400a10e	      0xe800000000	                          call 0x400a113	      1829	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_26	CALL_45
0x400a113	      0x488b442408	                mov rax, qword [rsp + 8]	      1830	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_26
0x400a118	        0x488d5801	                      lea rbx, [rax + 1]	      1830	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_26
0x400a11c	            0xeb05	                           jmp 0x400a123	      1830	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_26
0x400a11e	      0xbb00000000	                              mov ebx, 0	      1681	eval.c	FUNCTION_43
0x400a123	          0x4c89e7	                            mov rdi, r12	      1832	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	CALL_46
0x400a126	      0xe800000000	                          call 0x400a12b	      1832	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	CALL_46
0x400a12b	      0xe9df000000	                           jmp 0x400a20f	      1832	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	CALL_46
0x400a130	        0x410fb6fd	                         movzx edi, r13b	      1840	eval.c	FUNCTION_43	ELSE_14	IF_27	CALL_47
0x400a134	      0xe800000000	                          call 0x400a139	      1840	eval.c	FUNCTION_43	ELSE_14	IF_27	CALL_47
0x400a139	        0x4180fd7b	                          cmp r13b, 0x7b	      1840	eval.c	FUNCTION_43	ELSE_14	IF_27	CALL_47
0x400a13d	            0x7408	                            je 0x400a147	      1840	eval.c	FUNCTION_43	ELSE_14	IF_27	CALL_47
0x400a13f	            0x85c0	                           test eax, eax	      1840	eval.c	FUNCTION_43	ELSE_14	IF_27	CALL_47
0x400a141	     0xf84a4000000	                            je 0x400a1eb	      1840	eval.c	FUNCTION_43	ELSE_14	IF_27	CALL_47
0x400a147	        0x4883ec08	                              sub rsp, 8	      1844	eval.c	FUNCTION_43	ELSE_14	IF_27	CALL_48
0x400a14b	            0x6a02	                                  push 2	      1844	eval.c	FUNCTION_43	ELSE_14	IF_27	CALL_48
0x400a14d	    0x41b900000000	                              mov r9d, 0	      1844	eval.c	FUNCTION_43	ELSE_14	IF_27	CALL_48
0x400a153	    0x41b800000000	                              mov r8d, 0	      1844	eval.c	FUNCTION_43	ELSE_14	IF_27	CALL_48
0x400a159	      0xb900000000	                              mov ecx, 0	      1844	eval.c	FUNCTION_43	ELSE_14	IF_27	CALL_48
0x400a15e	      0x488d542430	                   lea rdx, [rsp + 0x30]	      1844	eval.c	FUNCTION_43	ELSE_14	IF_27	CALL_48
0x400a163	          0x4c89f6	                            mov rsi, r14	      1844	eval.c	FUNCTION_43	ELSE_14	IF_27	CALL_48
0x400a166	          0x4889df	                            mov rdi, rbx	      1844	eval.c	FUNCTION_43	ELSE_14	IF_27	CALL_48
0x400a169	      0xe800000000	                          call 0x400a16e	      1844	eval.c	FUNCTION_43	ELSE_14	IF_27	CALL_48
0x400a16e	          0x4889c3	                            mov rbx, rax	      1844	eval.c	FUNCTION_43	ELSE_14	IF_27	CALL_48
0x400a171	        0x4883c410	                           add rsp, 0x10	      1845	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28
0x400a175	          0x4885c0	                           test rax, rax	      1845	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28
0x400a178	            0x7465	                            je 0x400a1df	      1845	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28
0x400a17a	    0x48837c242000	               cmp qword [rsp + 0x20], 0	      1845	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28
0x400a180	            0x7458	                            je 0x400a1da	      1845	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28
0x400a182	          0x4d85ff	                           test r15, r15	      1847	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	IF_29	CALL_50
0x400a185	            0x743b	                            je 0x400a1c2	      1847	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	IF_29	CALL_50
0x400a187	          0x4889c7	                            mov rdi, rax	      1847	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	IF_29	CALL_50
0x400a18a	      0xe800000000	                          call 0x400a18f	      1847	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	IF_29	CALL_50
0x400a18f	           0xfb630	                   movzx esi, byte [rax]	      1847	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	IF_29	CALL_50
0x400a192	          0x4c89ff	                            mov rdi, r15	      1847	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	IF_29	CALL_50
0x400a195	      0xe800000000	                          call 0x400a19a	      1847	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	IF_29	CALL_50
0x400a19a	          0x4885c0	                           test rax, rax	      1847	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	IF_29	CALL_50
0x400a19d	            0x7523	                           jne 0x400a1c2	      1847	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	IF_29	CALL_50
0x400a19f	      0xba05000000	                              mov edx, 5	      1848	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	CALL_52
0x400a1a4	      0xbe00000000	                              mov esi, 0	      1848	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	CALL_52
0x400a1a9	      0xbf00000000	                              mov edi, 0	      1848	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	CALL_52
0x400a1ae	      0xe800000000	                          call 0x400a1b3	      1848	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	CALL_52
0x400a1b3	          0x4889c7	                            mov rdi, rax	      1848	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	CALL_52
0x400a1b6	      0xe800000000	                          call 0x400a1bb	      1848	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	CALL_52
0x400a1bb	      0xbb00000000	                              mov ebx, 0	      1681	eval.c	FUNCTION_43
0x400a1c0	            0xeb1d	                           jmp 0x400a1df	      1848	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	CALL_52
0x400a1c2	          0x4989e8	                             mov r8, rbp	      1851	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	ELSE_15	CALL_53
0x400a1c5	          0x4489e1	                           mov ecx, r12d	      1851	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	ELSE_15	CALL_53
0x400a1c8	          0x4c89f2	                            mov rdx, r14	      1851	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	ELSE_15	CALL_53
0x400a1cb	          0x4889de	                            mov rsi, rbx	      1851	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	ELSE_15	CALL_53
0x400a1ce	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1851	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	ELSE_15	CALL_53
0x400a1d3	      0xe8ceb5ffff	                   call sym.set_var_lval	      1851	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	ELSE_15	CALL_53
0x400a1d8	            0xeb05	                           jmp 0x400a1df	      1851	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	ELSE_15	CALL_53
0x400a1da	      0xbb00000000	                              mov ebx, 0	      1681	eval.c	FUNCTION_43
0x400a1df	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1855	eval.c	FUNCTION_43	ELSE_14	IF_27	CALL_54
0x400a1e4	      0xe800000000	                          call 0x400a1e9	      1855	eval.c	FUNCTION_43	ELSE_14	IF_27	CALL_54
0x400a1e9	            0xeb24	                           jmp 0x400a20f	      1841	eval.c	FUNCTION_43	ELSE_14	IF_27
0x400a1eb	      0xba05000000	                              mov edx, 5	      1859	eval.c	FUNCTION_43	CALL_56
0x400a1f0	      0xbe00000000	                              mov esi, 0	      1859	eval.c	FUNCTION_43	CALL_56
0x400a1f5	      0xbf00000000	                              mov edi, 0	      1859	eval.c	FUNCTION_43	CALL_56
0x400a1fa	      0xe800000000	                          call 0x400a1ff	      1859	eval.c	FUNCTION_43	CALL_56
0x400a1ff	          0x4889de	                            mov rsi, rbx	      1859	eval.c	FUNCTION_43	CALL_56
0x400a202	          0x4889c7	                            mov rdi, rax	      1859	eval.c	FUNCTION_43	CALL_56
0x400a205	      0xe800000000	                          call 0x400a20a	      1859	eval.c	FUNCTION_43	CALL_56
0x400a20a	      0xbb00000000	                              mov ebx, 0	      1681	eval.c	FUNCTION_43
0x400a20f	          0x4889d8	                            mov rax, rbx	      1862	eval.c	FUNCTION_43
0x400a212	    0x488b8c248800	            mov rcx, qword [rsp + 0x88] 	      1862	eval.c	FUNCTION_43
0x400a21a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1862	eval.c	FUNCTION_43
0x400a223	            0x7458	                            je 0x400a27d	      1862	eval.c	FUNCTION_43
0x400a225	            0xeb51	                           jmp 0x400a278	      1862	eval.c	FUNCTION_43
0x400a227	          0x4c89f7	                            mov rdi, r14	      1817	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	CALL_41
0x400a22a	      0xe800000000	                          call 0x400a22f	      1817	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	CALL_41
0x400a22f	          0x4889c3	                            mov rbx, rax	      1817	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	CALL_41
0x400a232	    0x41bc00000000	                             mov r12d, 0	      1814	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13
0x400a238	      0xe9a9feffff	                           jmp 0x400a0e6	      1814	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13
0x400a23d	          0x4885c9	                           test rcx, rcx	      1809	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23
0x400a240	            0x7518	                           jne 0x400a25a	      1809	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23
0x400a242	            0xebe3	                           jmp 0x400a227	      1809	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23
0x400a244	          0x4c89f7	                            mov rdi, r14	      1817	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	CALL_41
0x400a247	      0xe800000000	                          call 0x400a24c	      1817	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	CALL_41
0x400a24c	          0x4889c3	                            mov rbx, rax	      1817	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	CALL_41
0x400a24f	    0x41bc00000000	                             mov r12d, 0	      1814	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13
0x400a255	      0xe98cfeffff	                           jmp 0x400a0e6	      1814	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13
0x400a25a	        0x488d7f02	                      lea rdi, [rdi + 2]	      1810	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23	CALL_38
0x400a25e	      0xe800000000	                          call 0x400a263	      1810	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23	CALL_38
0x400a263	           0xfb630	                   movzx esi, byte [rax]	      1810	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23	CALL_38
0x400a266	          0x4c89ff	                            mov rdi, r15	      1810	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23	CALL_38
0x400a269	      0xe800000000	                          call 0x400a26e	      1810	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23	CALL_38
0x400a26e	          0x4885c0	                           test rax, rax	      1810	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23	CALL_38
0x400a271	            0x75d1	                           jne 0x400a244	      1810	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23	CALL_38
0x400a273	      0xe9defdffff	                           jmp 0x400a056	      1810	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23	CALL_38
0x400a278	      0xe800000000	                          call 0x400a27d	      1862	eval.c	FUNCTION_43
0x400a27d	    0x4881c4980000	                           add rsp, 0x98	      1862	eval.c	FUNCTION_43
0x400a284	              0x5b	                                 pop rbx	      1862	eval.c	FUNCTION_43
0x400a285	              0x5d	                                 pop rbp	      1862	eval.c	FUNCTION_43
0x400a286	            0x415c	                                 pop r12	      1862	eval.c	FUNCTION_43
0x400a288	            0x415d	                                 pop r13	      1862	eval.c	FUNCTION_43
0x400a28a	            0x415e	                                 pop r14	      1862	eval.c	FUNCTION_43
0x400a28c	            0x415f	                                 pop r15	      1862	eval.c	FUNCTION_43
0x400a28e	              0xc3	                                     ret	      1862	eval.c	FUNCTION_43
do_string_sub	FOR,0:SWITCH,0:DO,0:IF,8:functions,0:WHILE,1:CALL,16:ELSE,1	160
0x400d292	            0x4157	                                push r15	     10099	eval.c	FUNCTION_188
0x400d294	            0x4156	                                push r14	     10099	eval.c	FUNCTION_188
0x400d296	            0x4155	                                push r13	     10099	eval.c	FUNCTION_188
0x400d298	            0x4154	                                push r12	     10099	eval.c	FUNCTION_188
0x400d29a	              0x55	                                push rbp	     10099	eval.c	FUNCTION_188
0x400d29b	              0x53	                                push rbx	     10099	eval.c	FUNCTION_188
0x400d29c	    0x4881ec180100	                          sub rsp, 0x118	     10099	eval.c	FUNCTION_188
0x400d2a3	          0x4989fe	                            mov r14, rdi	     10099	eval.c	FUNCTION_188
0x400d2a6	          0x4889f3	                            mov rbx, rsi	     10099	eval.c	FUNCTION_188
0x400d2a9	      0x4889542408	                mov qword [rsp + 8], rdx	     10099	eval.c	FUNCTION_188
0x400d2ae	          0x4989cf	                            mov r15, rcx	     10099	eval.c	FUNCTION_188
0x400d2b1	          0x4c89c5	                             mov rbp, r8	     10099	eval.c	FUNCTION_188
0x400d2b4	    0x64488b042528	                mov rax, qword fs:[0x28]	     10099	eval.c	FUNCTION_188
0x400d2bd	    0x488984240801	            mov qword [rsp + 0x108], rax	     10099	eval.c	FUNCTION_188
0x400d2c5	            0x31c0	                            xor eax, eax	     10099	eval.c	FUNCTION_188
0x400d2c7	    0x488b05000000	            mov rax, qword [0x0400d2ce] 	     10112	eval.c	FUNCTION_188
0x400d2ce	      0x4889442428	             mov qword [rsp + 0x28], rax	     10112	eval.c	FUNCTION_188
0x400d2d3	    0x488b05000000	            mov rax, qword [0x0400d2da] 	     10113	eval.c	FUNCTION_188
0x400d2da	    0x488905000000	            mov qword [0x0400d2e1], rax 	     10113	eval.c	FUNCTION_188
0x400d2e1	      0xbac8000000	                           mov edx, 0xc8	     10115	eval.c	FUNCTION_188	CALL_1
0x400d2e6	      0xbe01000000	                              mov esi, 1	     10115	eval.c	FUNCTION_188	CALL_1
0x400d2eb	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	     10115	eval.c	FUNCTION_188	CALL_1
0x400d2f0	      0xe800000000	                          call 0x400d2f5	     10115	eval.c	FUNCTION_188	CALL_1
0x400d2f5	         0xfb64500	                   movzx eax, byte [rbp]	     10117	eval.c	FUNCTION_188
0x400d2f9	        0x8844241f	               mov byte [rsp + 0x1f], al	     10117	eval.c	FUNCTION_188
0x400d2fd	    0x8b0500000000	            mov eax, dword [0x0400d303] 	     10119	eval.c	FUNCTION_188
0x400d303	    0x898424f80000	             mov dword [rsp + 0xf8], eax	     10119	eval.c	FUNCTION_188
0x400d30a	      0xbe03000000	                              mov esi, 3	     10120	eval.c	FUNCTION_188	CALL_2
0x400d30f	          0x4889df	                            mov rdi, rbx	     10120	eval.c	FUNCTION_188	CALL_2
0x400d312	      0xe800000000	                          call 0x400d317	     10120	eval.c	FUNCTION_188	CALL_2
0x400d317	      0x4889442450	             mov qword [rsp + 0x50], rax	     10120	eval.c	FUNCTION_188	CALL_2
0x400d31c	          0x4885c0	                           test rax, rax	     10121	eval.c	FUNCTION_188	IF_1
0x400d31f	     0xf84a4010000	                            je 0x400d4c9	     10121	eval.c	FUNCTION_188	IF_1
0x400d325	      0xb800000000	                              mov eax, 0	     10124	eval.c	FUNCTION_188	IF_1	CALL_3
0x400d32a	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	     10124	eval.c	FUNCTION_188	IF_1	CALL_3
0x400d331	          0x4c89f7	                            mov rdi, r14	     10124	eval.c	FUNCTION_188	IF_1	CALL_3
0x400d334	            0xf2ae	              repne scasb al, byte [rdi]	     10124	eval.c	FUNCTION_188	IF_1	CALL_3
0x400d336	          0x48f7d1	                                 not rcx	     10124	eval.c	FUNCTION_188	IF_1	CALL_3
0x400d339	      0x498d440eff	                lea rax, [r14 + rcx - 1]	     10124	eval.c	FUNCTION_188	IF_1	CALL_3
0x400d33e	      0x4889442410	             mov qword [rsp + 0x10], rax	     10124	eval.c	FUNCTION_188	IF_1	CALL_3
0x400d343	          0x4c89f5	                            mov rbp, r14	     10123	eval.c	FUNCTION_188	IF_1
0x400d346	    0x48c744242000	               mov qword [rsp + 0x20], 0	     10109	eval.c	FUNCTION_188
0x400d34f	      0xe933010000	                           jmp 0x400d487	     10125	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_4
0x400d354	      0x488b442458	            mov rax, qword [rsp + 0x58] 	     10128	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_2
0x400d359	    0x483b8424a800	            cmp rax, qword [rsp + 0xa8] 	     10128	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_2
0x400d361	            0x754c	                           jne 0x400d3af	     10128	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_2
0x400d363	      0x4839442420	            cmp qword [rsp + 0x20], rax 	     10130	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_2	IF_3
0x400d368	            0x7540	                           jne 0x400d3aa	     10130	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_2	IF_3
0x400d36a	    0x41bc01000000	                             mov r12d, 1	     10133	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_2	IF_3	CALL_5
0x400d370	    0x833d00000000	               cmp dword [0x0400d377], 0	     10133	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_2	IF_3	CALL_5
0x400d377	            0x740c	                            je 0x400d385	     10133	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_2	IF_3	CALL_5
0x400d379	          0x4889ef	                            mov rdi, rbp	     10133	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_2	IF_3	CALL_5
0x400d37c	    0xff1500000000	                 call qword [0x0400d382]	     10133	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_2	IF_3	CALL_5
0x400d382	          0x4189c4	                           mov r12d, eax	     10133	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_2	IF_3	CALL_5
0x400d385	          0x4963dc	                        movsxd rbx, r12d	     10134	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_2	IF_3	CALL_6
0x400d388	      0x48637c2430	         movsxd rdi, dword [rsp + 0x30] 	        59	string3.h	FUNCTION_192	CALL_3
0x400d38d	      0x48037c2440	             add rdi, qword [rsp + 0x40]	        59	string3.h	FUNCTION_192	CALL_3
0x400d392	          0x4889da	                            mov rdx, rbx	        59	string3.h	FUNCTION_192	CALL_3
0x400d395	          0x4889ee	                            mov rsi, rbp	        59	string3.h	FUNCTION_192	CALL_3
0x400d398	      0xe800000000	                          call 0x400d39d	        59	string3.h	FUNCTION_192	CALL_3
0x400d39d	      0x4401642430	            add dword [rsp + 0x30], r12d	     10136	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_2	IF_3
0x400d3a2	          0x4801dd	                            add rbp, rbx	     10137	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_2	IF_3
0x400d3a5	      0xe9dd000000	                           jmp 0x400d487	     10138	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_2	IF_3
0x400d3aa	      0x4889442420	             mov qword [rsp + 0x20], rax	     10140	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_2
0x400d3af	        0x4883ec08	                              sub rsp, 8	     10150	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_7
0x400d3b3	            0x6a00	                                  push 0	     10150	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_7
0x400d3b5	    0x41b901000000	                              mov r9d, 1	     10150	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_7
0x400d3bb	    0x41b800000000	                              mov r8d, 0	     10150	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_7
0x400d3c1	          0x4889e9	                            mov rcx, rbp	     10150	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_7
0x400d3c4	          0x4c89fa	                            mov rdx, r15	     10150	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_7
0x400d3c7	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	     10150	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_7
0x400d3cc	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	     10150	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_7
0x400d3d1	      0xe800000000	                          call 0x400d3d6	     10150	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_7
0x400d3d6	          0x4189c5	                           mov r13d, eax	     10150	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_7
0x400d3d9	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	     10151	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_4	CALL_8
0x400d3de	          0x4829de	                            sub rsi, rbx	     10151	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_4	CALL_8
0x400d3e1	    0x488b8424b800	            mov rax, qword [rsp + 0xb8] 	     10151	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_4	CALL_8
0x400d3e9	      0x482b442468	             sub rax, qword [rsp + 0x68]	     10151	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_4	CALL_8
0x400d3ee	            0x29c6	                            sub esi, eax	     10151	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_4	CALL_8
0x400d3f0	          0x4401ee	                           add esi, r13d	     10151	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_4	CALL_8
0x400d3f3	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	     10151	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_4	CALL_8
0x400d3f8	      0xe800000000	                          call 0x400d3fd	     10151	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_4	CALL_8
0x400d3fd	        0x4883c410	                           add rsp, 0x10	     10151	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_4	CALL_8
0x400d401	            0x85c0	                           test eax, eax	     10151	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_4	CALL_8
0x400d403	            0x750f	                           jne 0x400d414	     10151	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_4	CALL_8
0x400d405	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	     10154	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_4	CALL_9
0x400d40a	      0xe800000000	                          call 0x400d40f	     10154	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_4	CALL_9
0x400d40f	      0xe991000000	                           jmp 0x400d4a5	     10155	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_4
0x400d414	      0x4c8b642458	            mov r12, qword [rsp + 0x58] 	     10159	eval.c	FUNCTION_188	IF_1	WHILE_1
0x400d419	          0x4929dc	                            sub r12, rbx	     10159	eval.c	FUNCTION_188	IF_1	WHILE_1
0x400d41c	          0x4963dc	                        movsxd rbx, r12d	     10160	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_10
0x400d41f	      0x48637c2430	         movsxd rdi, dword [rsp + 0x30] 	        59	string3.h	FUNCTION_192	CALL_3
0x400d424	      0x48037c2440	             add rdi, qword [rsp + 0x40]	        59	string3.h	FUNCTION_192	CALL_3
0x400d429	          0x4889da	                            mov rdx, rbx	        59	string3.h	FUNCTION_192	CALL_3
0x400d42c	          0x4889ee	                            mov rsi, rbp	        59	string3.h	FUNCTION_192	CALL_3
0x400d42f	      0xe800000000	                          call 0x400d434	        59	string3.h	FUNCTION_192	CALL_3
0x400d434	      0x48634c2430	         movsxd rcx, dword [rsp + 0x30] 	     10162	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_11
0x400d439	          0x4801d9	                            add rcx, rbx	     10162	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_11
0x400d43c	      0x48034c2440	             add rcx, qword [rsp + 0x40]	     10162	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_11
0x400d441	        0x4883ec08	                              sub rsp, 8	     10162	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_11
0x400d445	            0x6a00	                                  push 0	     10162	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_11
0x400d447	    0x41b901000000	                              mov r9d, 1	     10162	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_11
0x400d44d	    0x41b801000000	                              mov r8d, 1	     10162	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_11
0x400d453	          0x4c89fa	                            mov rdx, r15	     10162	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_11
0x400d456	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	     10162	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_11
0x400d45b	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	     10162	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_11
0x400d460	      0xe800000000	                          call 0x400d465	     10162	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_11
0x400d465	      0x438d4425ff	                lea eax, [r13 + r12 - 1]	     10164	eval.c	FUNCTION_188	IF_1	WHILE_1
0x400d46a	         0x1442440	             add dword [rsp + 0x40], eax	     10164	eval.c	FUNCTION_188	IF_1	WHILE_1
0x400d46e	    0x488bac24b800	            mov rbp, qword [rsp + 0xb8] 	     10165	eval.c	FUNCTION_188	IF_1	WHILE_1
0x400d476	        0x4883c410	                           add rsp, 0x10	     10168	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_6
0x400d47a	        0x807d0000	                       cmp byte [rbp], 0	     10168	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_6
0x400d47e	            0x7425	                            je 0x400d4a5	     10168	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_6
0x400d480	      0x807c241f67	            cmp byte [rsp + 0x1f], 0x67 	     10168	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_6
0x400d485	            0x751e	                           jne 0x400d4a5	     10168	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_6
0x400d487	          0x4889eb	                            mov rbx, rbp	     10125	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_4
0x400d48a	          0x4889ea	                            mov rdx, rbp	     10125	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_4
0x400d48d	          0x4c29f2	                            sub rdx, r14	     10125	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_4
0x400d490	          0x4c89f6	                            mov rsi, r14	     10125	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_4
0x400d493	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	     10125	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_4
0x400d498	      0xe800000000	                          call 0x400d49d	     10125	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_4
0x400d49d	            0x85c0	                           test eax, eax	     10125	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_4
0x400d49f	     0xf85affeffff	                           jne 0x400d354	     10125	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_4
0x400d4a5	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	     10172	eval.c	FUNCTION_188	IF_1	IF_7
0x400d4aa	          0x4885ff	                           test rdi, rdi	     10172	eval.c	FUNCTION_188	IF_1	IF_7
0x400d4ad	            0x7410	                            je 0x400d4bf	     10172	eval.c	FUNCTION_188	IF_1	IF_7
0x400d4af	      0x4863442430	         movsxd rax, dword [rsp + 0x30] 	       110	string3.h	FUNCTION_197	CALL_3
0x400d4b4	          0x4801c7	                            add rdi, rax	       110	string3.h	FUNCTION_197	CALL_3
0x400d4b7	          0x4889ee	                            mov rsi, rbp	       110	string3.h	FUNCTION_197	CALL_3
0x400d4ba	      0xe800000000	                          call 0x400d4bf	       110	string3.h	FUNCTION_197	CALL_3
0x400d4bf	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	     10175	eval.c	FUNCTION_188	IF_1	CALL_13
0x400d4c4	      0xe800000000	                          call 0x400d4c9	     10175	eval.c	FUNCTION_188	IF_1	CALL_13
0x400d4c9	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	     10178	eval.c	FUNCTION_188	CALL_14
0x400d4ce	          0x4885ff	                           test rdi, rdi	     10178	eval.c	FUNCTION_188	CALL_14
0x400d4d1	        0x490f44fe	                          cmove rdi, r14	     10178	eval.c	FUNCTION_188	CALL_14
0x400d4d5	      0xe800000000	                          call 0x400d4da	     10178	eval.c	FUNCTION_188	CALL_14
0x400d4da	          0x4889c3	                            mov rbx, rax	     10178	eval.c	FUNCTION_188	CALL_14
0x400d4dd	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	     10179	eval.c	FUNCTION_188	CALL_15
0x400d4e2	      0xe800000000	                          call 0x400d4e7	     10179	eval.c	FUNCTION_188	CALL_15
0x400d4e7	    0x488b05000000	            mov rax, qword [0x0400d4ee] 	     10180	eval.c	FUNCTION_188	IF_8
0x400d4ee	    0x483905000000	            cmp qword [0x0400d4f5], rax 	     10180	eval.c	FUNCTION_188	IF_8
0x400d4f5	            0x750e	                           jne 0x400d505	     10180	eval.c	FUNCTION_188	IF_8
0x400d4f7	      0x488b442428	            mov rax, qword [rsp + 0x28] 	     10181	eval.c	FUNCTION_188	IF_8
0x400d4fc	    0x488905000000	            mov qword [0x0400d503], rax 	     10181	eval.c	FUNCTION_188	IF_8
0x400d503	            0xeb0a	                           jmp 0x400d50f	     10181	eval.c	FUNCTION_188	IF_8
0x400d505	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	     10184	eval.c	FUNCTION_188	CALL_16
0x400d50a	      0xe800000000	                          call 0x400d50f	     10184	eval.c	FUNCTION_188	CALL_16
0x400d50f	          0x4889d8	                            mov rax, rbx	     10187	eval.c	FUNCTION_188
0x400d512	    0x488b9c240801	           mov rbx, qword [rsp + 0x108] 	     10187	eval.c	FUNCTION_188
0x400d51a	    0x6448331c2528	                xor rbx, qword fs:[0x28]	     10187	eval.c	FUNCTION_188
0x400d523	            0x7405	                            je 0x400d52a	     10187	eval.c	FUNCTION_188
0x400d525	      0xe800000000	                          call 0x400d52a	     10187	eval.c	FUNCTION_188
0x400d52a	    0x4881c4180100	                          add rsp, 0x118	     10187	eval.c	FUNCTION_188
0x400d531	              0x5b	                                 pop rbx	     10187	eval.c	FUNCTION_188
0x400d532	              0x5d	                                 pop rbp	     10187	eval.c	FUNCTION_188
0x400d533	            0x415c	                                 pop r12	     10187	eval.c	FUNCTION_188
0x400d535	            0x415d	                                 pop r13	     10187	eval.c	FUNCTION_188
0x400d537	            0x415e	                                 pop r14	     10187	eval.c	FUNCTION_188
0x400d539	            0x415f	                                 pop r15	     10187	eval.c	FUNCTION_188
0x400d53b	              0xc3	                                     ret	     10187	eval.c	FUNCTION_188
handle_subscript	FOR,0:SWITCH,0:DO,0:IF,10:functions,0:WHILE,1:CALL,13:ELSE,4	627
0x400a94c	            0x4157	                                push r15	      6721	eval.c	FUNCTION_118
0x400a94e	            0x4156	                                push r14	      6721	eval.c	FUNCTION_118
0x400a950	            0x4155	                                push r13	      6721	eval.c	FUNCTION_118
0x400a952	            0x4154	                                push r12	      6721	eval.c	FUNCTION_118
0x400a954	              0x55	                                push rbp	      6721	eval.c	FUNCTION_118
0x400a955	              0x53	                                push rbx	      6721	eval.c	FUNCTION_118
0x400a956	    0x4881ec880000	                           sub rsp, 0x88	      6721	eval.c	FUNCTION_118
0x400a95d	          0x4989fd	                            mov r13, rdi	      6721	eval.c	FUNCTION_118
0x400a960	          0x4889f5	                            mov rbp, rsi	      6721	eval.c	FUNCTION_118
0x400a963	          0x4189d6	                           mov r14d, edx	      6721	eval.c	FUNCTION_118
0x400a966	        0x894c240c	              mov dword [rsp + 0xc], ecx	      6721	eval.c	FUNCTION_118
0x400a96a	    0x64488b042528	                mov rax, qword fs:[0x28]	      6721	eval.c	FUNCTION_118
0x400a973	      0x4889442478	             mov qword [rsp + 0x78], rax	      6721	eval.c	FUNCTION_118
0x400a978	            0x31c0	                            xor eax, eax	      6721	eval.c	FUNCTION_118
0x400a97a	    0x41bc00000000	                             mov r12d, 0	      6723	eval.c	FUNCTION_118
0x400a980	      0x4c8d7c243c	                   lea r15, [rsp + 0x3c]	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400a985	      0xe94c070000	                           jmp 0x400b0d6	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400a98a	        0x488b4500	                    mov rax, qword [rbp]	      6742	eval.c	FUNCTION_118	WHILE_1	IF_1	IF_2
0x400a98e	        0x488b4d08	                mov rcx, qword [rbp + 8]	      6742	eval.c	FUNCTION_118	WHILE_1	IF_1	IF_2
0x400a992	      0x4889442440	             mov qword [rsp + 0x40], rax	      6742	eval.c	FUNCTION_118	WHILE_1	IF_1	IF_2
0x400a997	      0x48894c2448	             mov qword [rsp + 0x48], rcx	      6742	eval.c	FUNCTION_118	WHILE_1	IF_1	IF_2
0x400a99c	    0xc74500000000	                      mov dword [rbp], 0	      6743	eval.c	FUNCTION_118	WHILE_1	IF_1	IF_2
0x400a9a3	          0x83f804	                              cmp eax, 4	      6746	eval.c	FUNCTION_118	WHILE_1	IF_1	IF_2	IF_3
0x400a9a6	            0x7520	                           jne 0x400a9c8	      6746	eval.c	FUNCTION_118	WHILE_1	IF_1	IF_2	IF_3
0x400a9a8	          0x4889ca	                            mov rdx, rcx	      6748	eval.c	FUNCTION_118	WHILE_1	IF_1	IF_2	IF_3
0x400a9ab	        0x4c8b5108	                mov r10, qword [rcx + 8]	      4862	eval.c	FUNCTION_75	IF_1
0x400a9af	          0x4d85d2	                           test r10, r10	      4862	eval.c	FUNCTION_75	IF_1
0x400a9b2	     0xf85d1070000	                           jne 0x400b189	      4862	eval.c	FUNCTION_75	IF_1
0x400a9b8	        0x488b4110	            mov rax, qword [rcx + 0x10] 	      4864	eval.c	FUNCTION_75
0x400a9bc	    0x4c8d90d80000	                   lea r10, [rax + 0xd8]	      4864	eval.c	FUNCTION_75
0x400a9c3	      0xe9c1070000	                           jmp 0x400b189	      4864	eval.c	FUNCTION_75
0x400a9c8	      0x4c8b542448	            mov r10, qword [rsp + 0x48] 	      6752	eval.c	FUNCTION_118	WHILE_1	IF_1	IF_2	ELSE_1
0x400a9cd	      0xba00000000	                              mov edx, 0	      6737	eval.c	FUNCTION_118	WHILE_1	IF_1
0x400a9d2	      0xe9b2070000	                           jmp 0x400b189	      6737	eval.c	FUNCTION_118	WHILE_1	IF_1
0x400a9d7	      0xe800000000	                          call 0x400a9dc	      6768	eval.c	FUNCTION_118	WHILE_1	IF_1	IF_5	CALL_6
0x400a9dc	            0x85c0	                           test eax, eax	      6768	eval.c	FUNCTION_118	WHILE_1	IF_1	IF_5	CALL_6
0x400a9de	            0x7419	                            je 0x400a9f9	      6768	eval.c	FUNCTION_118	WHILE_1	IF_1	IF_5	CALL_6
0x400a9e0	          0x83fb01	                              cmp ebx, 1	      6770	eval.c	FUNCTION_118	WHILE_1	IF_1	IF_5	IF_6
0x400a9e3	            0x750f	                           jne 0x400a9f4	      6770	eval.c	FUNCTION_118	WHILE_1	IF_1	IF_5	IF_6
0x400a9e5	          0x4889ef	                            mov rdi, rbp	      6771	eval.c	FUNCTION_118	WHILE_1	IF_1	IF_5	CALL_7
0x400a9e8	      0xe800000000	                          call 0x400a9ed	      6771	eval.c	FUNCTION_118	WHILE_1	IF_1	IF_5	CALL_7
0x400a9ed	      0xbb00000000	                              mov ebx, 0	      6772	eval.c	FUNCTION_118	WHILE_1	IF_1	IF_5
0x400a9f2	            0xeb05	                           jmp 0x400a9f9	      6772	eval.c	FUNCTION_118	WHILE_1	IF_1	IF_5
0x400a9f4	      0xbb00000000	                              mov ebx, 0	      6772	eval.c	FUNCTION_118	WHILE_1	IF_1	IF_5
0x400a9f9	          0x4c89e7	                            mov rdi, r12	      6774	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_8
0x400a9fc	      0xe800000000	                          call 0x400aa01	      6774	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_8
0x400aa01	    0x41bc00000000	                             mov r12d, 0	      6775	eval.c	FUNCTION_118	WHILE_1	IF_1
0x400aa07	          0x83fb01	                              cmp ebx, 1	      6728	eval.c	FUNCTION_118	WHILE_1
0x400aa0a	     0xf84c6060000	                            je 0x400b0d6	      6728	eval.c	FUNCTION_118	WHILE_1
0x400aa10	      0xe920070000	                           jmp 0x400b135	      6728	eval.c	FUNCTION_118	WHILE_1
0x400aa15	          0x4c89e7	                            mov rdi, r12	      6779	eval.c	FUNCTION_118	WHILE_1	ELSE_3	CALL_9
0x400aa18	      0xe800000000	                          call 0x400aa1d	      6779	eval.c	FUNCTION_118	WHILE_1	ELSE_3	CALL_9
0x400aa1d	    0x41bc00000000	                             mov r12d, 0	      6787	eval.c	FUNCTION_118	WHILE_1	ELSE_3	ELSE_4
0x400aa23	        0x837d0006	                      cmp dword [rbp], 6	      6780	eval.c	FUNCTION_118	WHILE_1	ELSE_3	IF_7
0x400aa27	            0x7513	                           jne 0x400aa3c	      6780	eval.c	FUNCTION_118	WHILE_1	ELSE_3	IF_7
0x400aa29	        0x4c8b6508	                mov r12, qword [rbp + 8]	      6782	eval.c	FUNCTION_118	WHILE_1	ELSE_3	IF_7
0x400aa2d	          0x4d85e4	                           test r12, r12	      6783	eval.c	FUNCTION_118	WHILE_1	ELSE_3	IF_7	IF_8
0x400aa30	     0xf84a7000000	                            je 0x400aadd	      6783	eval.c	FUNCTION_118	WHILE_1	ELSE_3	IF_7	IF_8
0x400aa36	    0x418344240401	                  add dword [r12 + 4], 1	      6784	eval.c	FUNCTION_118	WHILE_1	ELSE_3	IF_7	IF_8
0x400aa3c	        0x837d000a	                    cmp dword [rbp], 0xa	      4311	eval.c	FUNCTION_71	SWITCH_1
0x400aa40	     0xf8797000000	                            ja 0x400aadd	      4311	eval.c	FUNCTION_71	SWITCH_1
0x400aa46	          0x8b4500	                    mov eax, dword [rbp]	      4311	eval.c	FUNCTION_71	SWITCH_1
0x400aa49	    0xff24c5000000	                       jmp qword [rax*8]	      4311	eval.c	FUNCTION_71	SWITCH_1
0x400aa50	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      4315	eval.c	FUNCTION_71	SWITCH_1	IF_1
0x400aa55	     0xf8429080000	                            je 0x400b284	      4315	eval.c	FUNCTION_71	SWITCH_1	IF_1
0x400aa5b	      0xba05000000	                              mov edx, 5	      4316	eval.c	FUNCTION_71	SWITCH_1	CALL_2
0x400aa60	      0xbe00000000	                              mov esi, 0	      4316	eval.c	FUNCTION_71	SWITCH_1	CALL_2
0x400aa65	      0xbf00000000	                              mov edi, 0	      4316	eval.c	FUNCTION_71	SWITCH_1	CALL_2
0x400aa6a	      0xe800000000	                          call 0x400aa6f	      4316	eval.c	FUNCTION_71	SWITCH_1	CALL_2
0x400aa6f	          0x4889c7	                            mov rdi, rax	      4316	eval.c	FUNCTION_71	SWITCH_1	CALL_2
0x400aa72	      0xe800000000	                          call 0x400aa77	      4316	eval.c	FUNCTION_71	SWITCH_1	CALL_2
0x400aa77	      0xe908080000	                           jmp 0x400b284	      4316	eval.c	FUNCTION_71	SWITCH_1	CALL_2
0x400aa7c	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      4320	eval.c	FUNCTION_71	SWITCH_1	IF_2
0x400aa81	     0xf84fd070000	                            je 0x400b284	      4320	eval.c	FUNCTION_71	SWITCH_1	IF_2
0x400aa87	      0xba05000000	                              mov edx, 5	      4321	eval.c	FUNCTION_71	SWITCH_1	CALL_4
0x400aa8c	      0xbe00000000	                              mov esi, 0	      4321	eval.c	FUNCTION_71	SWITCH_1	CALL_4
0x400aa91	      0xbf00000000	                              mov edi, 0	      4321	eval.c	FUNCTION_71	SWITCH_1	CALL_4
0x400aa96	      0xe800000000	                          call 0x400aa9b	      4321	eval.c	FUNCTION_71	SWITCH_1	CALL_4
0x400aa9b	          0x4889c7	                            mov rdi, rax	      4321	eval.c	FUNCTION_71	SWITCH_1	CALL_4
0x400aa9e	      0xe800000000	                          call 0x400aaa3	      4321	eval.c	FUNCTION_71	SWITCH_1	CALL_4
0x400aaa3	      0xe9dc070000	                           jmp 0x400b284	      4321	eval.c	FUNCTION_71	SWITCH_1	CALL_4
0x400aaa8	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      4327	eval.c	FUNCTION_71	SWITCH_1	IF_3
0x400aaad	     0xf84d1070000	                            je 0x400b284	      4327	eval.c	FUNCTION_71	SWITCH_1	IF_3
0x400aab3	      0xba05000000	                              mov edx, 5	      4328	eval.c	FUNCTION_71	SWITCH_1	CALL_6
0x400aab8	      0xbe00000000	                              mov esi, 0	      4328	eval.c	FUNCTION_71	SWITCH_1	CALL_6
0x400aabd	      0xbf00000000	                              mov edi, 0	      4328	eval.c	FUNCTION_71	SWITCH_1	CALL_6
0x400aac2	      0xe800000000	                          call 0x400aac7	      4328	eval.c	FUNCTION_71	SWITCH_1	CALL_6
0x400aac7	          0x4889c7	                            mov rdi, rax	      4328	eval.c	FUNCTION_71	SWITCH_1	CALL_6
0x400aaca	      0xe800000000	                          call 0x400aacf	      4328	eval.c	FUNCTION_71	SWITCH_1	CALL_6
0x400aacf	      0xe9b0070000	                           jmp 0x400b284	      4328	eval.c	FUNCTION_71	SWITCH_1	CALL_6
0x400aad4	          0x4585f6	                         test r14d, r14d	      4331	eval.c	FUNCTION_71	SWITCH_1	IF_4
0x400aad7	     0xf85a7070000	                           jne 0x400b284	      4331	eval.c	FUNCTION_71	SWITCH_1	IF_4
0x400aadd	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      4342	eval.c	FUNCTION_71	CALL_7
0x400aae2	      0xe800000000	                          call 0x400aae7	      4342	eval.c	FUNCTION_71	CALL_7
0x400aae7	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      4343	eval.c	FUNCTION_71	CALL_8
0x400aaec	      0xe800000000	                          call 0x400aaf1	      4343	eval.c	FUNCTION_71	CALL_8
0x400aaf1	        0x498b7d00	                    mov rdi, qword [r13]	      4344	eval.c	FUNCTION_71	IF_5
0x400aaf5	          0x803f2e	                    cmp byte [rdi], 0x2e	      4344	eval.c	FUNCTION_71	IF_5
0x400aaf8	            0x755d	                           jne 0x400ab57	      4344	eval.c	FUNCTION_71	IF_5
0x400aafa	        0x488d4701	                      lea rax, [rdi + 1]	      4349	eval.c	FUNCTION_71	IF_5
0x400aafe	      0x4889442420	             mov qword [rsp + 0x20], rax	      4349	eval.c	FUNCTION_71	IF_5
0x400ab03	          0x4889c2	                            mov rdx, rax	      4349	eval.c	FUNCTION_71	IF_5
0x400ab06	      0xbb00000000	                              mov ebx, 0	      4350	eval.c	FUNCTION_71	IF_5	FOR_1	CALL_9
0x400ab0b	            0xeb08	                           jmp 0x400ab15	      4350	eval.c	FUNCTION_71	IF_5	FOR_1	CALL_9
0x400ab0d	        0x4883c301	                              add rbx, 1	      4350	eval.c	FUNCTION_71	IF_5	FOR_1	CALL_9
0x400ab11	        0x4883c201	                              add rdx, 1	      4350	eval.c	FUNCTION_71	IF_5	FOR_1	CALL_9
0x400ab15	          0x4889d7	                            mov rdi, rdx	      4350	eval.c	FUNCTION_71	IF_5	FOR_1	CALL_9
0x400ab18	           0xfb60a	                   movzx ecx, byte [rdx]	      4350	eval.c	FUNCTION_71	IF_5	FOR_1	CALL_9
0x400ab1b	            0x89c8	                            mov eax, ecx	      4350	eval.c	FUNCTION_71	IF_5	FOR_1	CALL_9
0x400ab1d	          0x83e0df	                     and eax, 0xffffffdf	      4350	eval.c	FUNCTION_71	IF_5	FOR_1	CALL_9
0x400ab20	          0x83e841	                           sub eax, 0x41	      4350	eval.c	FUNCTION_71	IF_5	FOR_1	CALL_9
0x400ab23	            0x3c19	                            cmp al, 0x19	      4350	eval.c	FUNCTION_71	IF_5	FOR_1	CALL_9
0x400ab25	            0x76e6	                           jbe 0x400ab0d	      4350	eval.c	FUNCTION_71	IF_5	FOR_1	CALL_9
0x400ab27	           0xfb6c1	                           movzx eax, cl	      4350	eval.c	FUNCTION_71	IF_5	FOR_1	CALL_9
0x400ab2a	          0x83e830	                           sub eax, 0x30	      4350	eval.c	FUNCTION_71	IF_5	FOR_1	CALL_9
0x400ab2d	          0x83f809	                              cmp eax, 9	      4350	eval.c	FUNCTION_71	IF_5	FOR_1	CALL_9
0x400ab30	            0x76db	                           jbe 0x400ab0d	      4350	eval.c	FUNCTION_71	IF_5	FOR_1	CALL_9
0x400ab32	          0x80f95f	                            cmp cl, 0x5f	      4350	eval.c	FUNCTION_71	IF_5	FOR_1	CALL_9
0x400ab35	            0x74d6	                            je 0x400ab0d	      4350	eval.c	FUNCTION_71	IF_5	FOR_1	CALL_9
0x400ab37	          0x4885db	                           test rbx, rbx	      4352	eval.c	FUNCTION_71	IF_5	IF_6
0x400ab3a	     0xf8444070000	                            je 0x400b284	      4352	eval.c	FUNCTION_71	IF_5	IF_6
0x400ab40	      0xe800000000	                          call 0x400ab45	      4354	eval.c	FUNCTION_71	IF_5	CALL_10
0x400ab45	        0x49894500	                    mov qword [r13], rax	      4354	eval.c	FUNCTION_71	IF_5	CALL_10
0x400ab49	          0x4585f6	                         test r14d, r14d	      4413	eval.c	FUNCTION_71	IF_19
0x400ab4c	     0xf8484050000	                            je 0x400b0d6	      4413	eval.c	FUNCTION_71	IF_19
0x400ab52	      0xe99f010000	                           jmp 0x400acf6	      4413	eval.c	FUNCTION_71	IF_19
0x400ab57	        0x4883c701	                              add rdi, 1	      4363	eval.c	FUNCTION_71	ELSE_1	CALL_11
0x400ab5b	      0xe800000000	                          call 0x400ab60	      4363	eval.c	FUNCTION_71	ELSE_1	CALL_11
0x400ab60	        0x49894500	                    mov qword [r13], rax	      4363	eval.c	FUNCTION_71	ELSE_1	CALL_11
0x400ab64	          0x80383a	                    cmp byte [rax], 0x3a	      4364	eval.c	FUNCTION_71	ELSE_1	IF_7
0x400ab67	            0x7452	                            je 0x400abbb	      4364	eval.c	FUNCTION_71	ELSE_1	IF_7
0x400ab69	          0x4489f2	                           mov edx, r14d	      4366	eval.c	FUNCTION_71	ELSE_1	ELSE_2	IF_8	CALL_12
0x400ab6c	      0x488d742450	                   lea rsi, [rsp + 0x50]	      4366	eval.c	FUNCTION_71	ELSE_1	ELSE_2	IF_8	CALL_12
0x400ab71	          0x4c89ef	                            mov rdi, r13	      4366	eval.c	FUNCTION_71	ELSE_1	ELSE_2	IF_8	CALL_12
0x400ab74	      0xe800000000	                          call 0x400ab79	      4366	eval.c	FUNCTION_71	ELSE_1	ELSE_2	IF_8	CALL_12
0x400ab79	            0x85c0	                           test eax, eax	      4366	eval.c	FUNCTION_71	ELSE_1	ELSE_2	IF_8	CALL_12
0x400ab7b	     0xf8403070000	                            je 0x400b284	      4366	eval.c	FUNCTION_71	ELSE_1	ELSE_2	IF_8	CALL_12
0x400ab81	          0x4585f6	                         test r14d, r14d	      4368	eval.c	FUNCTION_71	ELSE_1	ELSE_3	IF_9	CALL_13
0x400ab84	            0x741e	                            je 0x400aba4	      4368	eval.c	FUNCTION_71	ELSE_1	ELSE_3	IF_9	CALL_13
0x400ab86	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      4368	eval.c	FUNCTION_71	ELSE_1	ELSE_3	IF_9	CALL_13
0x400ab8b	      0xe800000000	                          call 0x400ab90	      4368	eval.c	FUNCTION_71	ELSE_1	ELSE_3	IF_9	CALL_13
0x400ab90	          0x4885c0	                           test rax, rax	      4368	eval.c	FUNCTION_71	ELSE_1	ELSE_3	IF_9	CALL_13
0x400ab93	            0x750f	                           jne 0x400aba4	      4368	eval.c	FUNCTION_71	ELSE_1	ELSE_3	IF_9	CALL_13
0x400ab95	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      4371	eval.c	FUNCTION_71	ELSE_1	ELSE_3	IF_9	CALL_14
0x400ab9a	      0xe800000000	                          call 0x400ab9f	      4371	eval.c	FUNCTION_71	ELSE_1	ELSE_3	IF_9	CALL_14
0x400ab9f	      0xe9e0060000	                           jmp 0x400b284	      4371	eval.c	FUNCTION_71	ELSE_1	ELSE_3	IF_9	CALL_14
0x400aba4	        0x498b4500	                    mov rax, qword [r13]	      4378	eval.c	FUNCTION_71	ELSE_1	IF_10
0x400aba8	          0x80383a	                    cmp byte [rax], 0x3a	      4378	eval.c	FUNCTION_71	ELSE_1	IF_10
0x400abab	     0xf8592000000	                           jne 0x400ac43	      4378	eval.c	FUNCTION_71	ELSE_1	IF_10
0x400abb1	    0xc74424280000	               mov dword [rsp + 0x28], 0	      4378	eval.c	FUNCTION_71	ELSE_1	IF_10
0x400abb9	            0xeb08	                           jmp 0x400abc3	      4378	eval.c	FUNCTION_71	ELSE_1	IF_10
0x400abbb	    0xc74424280100	               mov dword [rsp + 0x28], 1	      4365	eval.c	FUNCTION_71	ELSE_1	IF_7
0x400abc3	        0x488d7801	                      lea rdi, [rax + 1]	      4381	eval.c	FUNCTION_71	ELSE_1	IF_10	CALL_15
0x400abc7	      0xe800000000	                          call 0x400abcc	      4381	eval.c	FUNCTION_71	ELSE_1	IF_10	CALL_15
0x400abcc	        0x49894500	                    mov qword [r13], rax	      4381	eval.c	FUNCTION_71	ELSE_1	IF_10	CALL_15
0x400abd0	          0x80385d	                    cmp byte [rax], 0x5d	      4382	eval.c	FUNCTION_71	ELSE_1	IF_10	IF_11
0x400abd3	     0xf84d4000000	                            je 0x400acad	      4382	eval.c	FUNCTION_71	ELSE_1	IF_10	IF_11
0x400abd9	          0x4489f2	                           mov edx, r14d	      4384	eval.c	FUNCTION_71	ELSE_1	IF_10	ELSE_4	IF_12	CALL_16
0x400abdc	      0x488d742460	                   lea rsi, [rsp + 0x60]	      4384	eval.c	FUNCTION_71	ELSE_1	IF_10	ELSE_4	IF_12	CALL_16
0x400abe1	          0x4c89ef	                            mov rdi, r13	      4384	eval.c	FUNCTION_71	ELSE_1	IF_10	ELSE_4	IF_12	CALL_16
0x400abe4	      0xe800000000	                          call 0x400abe9	      4384	eval.c	FUNCTION_71	ELSE_1	IF_10	ELSE_4	IF_12	CALL_16
0x400abe9	            0x85c0	                           test eax, eax	      4384	eval.c	FUNCTION_71	ELSE_1	IF_10	ELSE_4	IF_12	CALL_16
0x400abeb	            0x751a	                           jne 0x400ac07	      4384	eval.c	FUNCTION_71	ELSE_1	IF_10	ELSE_4	IF_12	CALL_16
0x400abed	      0x837c242800	               cmp dword [rsp + 0x28], 0	      4386	eval.c	FUNCTION_71	ELSE_1	IF_10	ELSE_4	IF_12	IF_13
0x400abf2	     0xf858c060000	                           jne 0x400b284	      4386	eval.c	FUNCTION_71	ELSE_1	IF_10	ELSE_4	IF_12	IF_13
0x400abf8	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      4387	eval.c	FUNCTION_71	ELSE_1	IF_10	ELSE_4	IF_12	CALL_17
0x400abfd	      0xe800000000	                          call 0x400ac02	      4387	eval.c	FUNCTION_71	ELSE_1	IF_10	ELSE_4	IF_12	CALL_17
0x400ac02	      0xe97d060000	                           jmp 0x400b284	      4387	eval.c	FUNCTION_71	ELSE_1	IF_10	ELSE_4	IF_12	CALL_17
0x400ac07	    0xc74424180100	               mov dword [rsp + 0x18], 1	      4380	eval.c	FUNCTION_71	ELSE_1	IF_10
0x400ac0f	          0x4585f6	                         test r14d, r14d	      4390	eval.c	FUNCTION_71	ELSE_1	IF_10	ELSE_5	IF_14	CALL_18
0x400ac12	            0x7449	                            je 0x400ac5d	      4390	eval.c	FUNCTION_71	ELSE_1	IF_10	ELSE_5	IF_14	CALL_18
0x400ac14	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      4390	eval.c	FUNCTION_71	ELSE_1	IF_10	ELSE_5	IF_14	CALL_18
0x400ac19	      0xe800000000	                          call 0x400ac1e	      4390	eval.c	FUNCTION_71	ELSE_1	IF_10	ELSE_5	IF_14	CALL_18
0x400ac1e	          0x4885c0	                           test rax, rax	      4390	eval.c	FUNCTION_71	ELSE_1	IF_10	ELSE_5	IF_14	CALL_18
0x400ac21	            0x7532	                           jne 0x400ac55	      4390	eval.c	FUNCTION_71	ELSE_1	IF_10	ELSE_5	IF_14	CALL_18
0x400ac23	      0x837c242800	               cmp dword [rsp + 0x28], 0	      4393	eval.c	FUNCTION_71	ELSE_1	IF_10	ELSE_5	IF_14	IF_15
0x400ac28	            0x750a	                           jne 0x400ac34	      4393	eval.c	FUNCTION_71	ELSE_1	IF_10	ELSE_5	IF_14	IF_15
0x400ac2a	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      4394	eval.c	FUNCTION_71	ELSE_1	IF_10	ELSE_5	IF_14	CALL_19
0x400ac2f	      0xe800000000	                          call 0x400ac34	      4394	eval.c	FUNCTION_71	ELSE_1	IF_10	ELSE_5	IF_14	CALL_19
0x400ac34	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      4395	eval.c	FUNCTION_71	ELSE_1	IF_10	ELSE_5	IF_14	CALL_20
0x400ac39	      0xe800000000	                          call 0x400ac3e	      4395	eval.c	FUNCTION_71	ELSE_1	IF_10	ELSE_5	IF_14	CALL_20
0x400ac3e	      0xe941060000	                           jmp 0x400b284	      4395	eval.c	FUNCTION_71	ELSE_1	IF_10	ELSE_5	IF_14	CALL_20
0x400ac43	    0xc74424280000	               mov dword [rsp + 0x28], 0	      4378	eval.c	FUNCTION_71	ELSE_1	IF_10
0x400ac4b	    0xc74424180000	               mov dword [rsp + 0x18], 0	      4307	eval.c	FUNCTION_71
0x400ac53	            0xeb08	                           jmp 0x400ac5d	      4307	eval.c	FUNCTION_71
0x400ac55	    0xc74424180100	               mov dword [rsp + 0x18], 1	      4380	eval.c	FUNCTION_71	ELSE_1	IF_10
0x400ac5d	        0x498b4500	                    mov rax, qword [r13]	      4401	eval.c	FUNCTION_71	ELSE_1	IF_16
0x400ac61	          0x80385d	                    cmp byte [rax], 0x5d	      4401	eval.c	FUNCTION_71	ELSE_1	IF_16
0x400ac64	            0x7459	                            je 0x400acbf	      4401	eval.c	FUNCTION_71	ELSE_1	IF_16
0x400ac66	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      4403	eval.c	FUNCTION_71	ELSE_1	IF_16	IF_17
0x400ac6b	            0x741c	                            je 0x400ac89	      4403	eval.c	FUNCTION_71	ELSE_1	IF_16	IF_17
0x400ac6d	      0xba05000000	                              mov edx, 5	      4404	eval.c	FUNCTION_71	ELSE_1	IF_16	CALL_22
0x400ac72	      0xbe00000000	                              mov esi, 0	      4404	eval.c	FUNCTION_71	ELSE_1	IF_16	CALL_22
0x400ac77	      0xbf00000000	                              mov edi, 0	      4404	eval.c	FUNCTION_71	ELSE_1	IF_16	CALL_22
0x400ac7c	      0xe800000000	                          call 0x400ac81	      4404	eval.c	FUNCTION_71	ELSE_1	IF_16	CALL_22
0x400ac81	          0x4889c7	                            mov rdi, rax	      4404	eval.c	FUNCTION_71	ELSE_1	IF_16	CALL_22
0x400ac84	      0xe800000000	                          call 0x400ac89	      4404	eval.c	FUNCTION_71	ELSE_1	IF_16	CALL_22
0x400ac89	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      4405	eval.c	FUNCTION_71	ELSE_1	IF_16	CALL_23
0x400ac8e	      0xe800000000	                          call 0x400ac93	      4405	eval.c	FUNCTION_71	ELSE_1	IF_16	CALL_23
0x400ac93	      0x837c241800	               cmp dword [rsp + 0x18], 0	      4406	eval.c	FUNCTION_71	ELSE_1	IF_16	IF_18
0x400ac98	     0xf84e6050000	                            je 0x400b284	      4406	eval.c	FUNCTION_71	ELSE_1	IF_16	IF_18
0x400ac9e	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      4407	eval.c	FUNCTION_71	ELSE_1	IF_16	CALL_24
0x400aca3	      0xe800000000	                          call 0x400aca8	      4407	eval.c	FUNCTION_71	ELSE_1	IF_16	CALL_24
0x400aca8	      0xe9d7050000	                           jmp 0x400b284	      4407	eval.c	FUNCTION_71	ELSE_1	IF_16	CALL_24
0x400acad	    0xc744242c0100	               mov dword [rsp + 0x2c], 1	      4383	eval.c	FUNCTION_71	ELSE_1	IF_10	IF_11
0x400acb5	    0xc74424180100	               mov dword [rsp + 0x18], 1	      4380	eval.c	FUNCTION_71	ELSE_1	IF_10
0x400acbd	            0xeb08	                           jmp 0x400acc7	      4380	eval.c	FUNCTION_71	ELSE_1	IF_10
0x400acbf	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	      4401	eval.c	FUNCTION_71	ELSE_1	IF_16
0x400acc7	        0x488d7801	                      lea rdi, [rax + 1]	      4410	eval.c	FUNCTION_71	ELSE_1	CALL_25
0x400accb	      0xe800000000	                          call 0x400acd0	      4410	eval.c	FUNCTION_71	ELSE_1	CALL_25
0x400acd0	        0x49894500	                    mov qword [r13], rax	      4410	eval.c	FUNCTION_71	ELSE_1	CALL_25
0x400acd4	          0x4585f6	                         test r14d, r14d	      4413	eval.c	FUNCTION_71	IF_19
0x400acd7	     0xf84f9030000	                            je 0x400b0d6	      4413	eval.c	FUNCTION_71	IF_19
0x400acdd	      0x837c242800	               cmp dword [rsp + 0x28], 0	      4416	eval.c	FUNCTION_71	IF_19	IF_20
0x400ace2	            0x754b	                           jne 0x400ad2f	      4416	eval.c	FUNCTION_71	IF_19	IF_20
0x400ace4	    0x48c744242000	               mov qword [rsp + 0x20], 0	      4309	eval.c	FUNCTION_71
0x400aced	    0x48c7c3ffffff	             mov rbx, 0xffffffffffffffff	      4306	eval.c	FUNCTION_71
0x400acf4	            0xeb10	                           jmp 0x400ad06	      4306	eval.c	FUNCTION_71
0x400acf6	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	      4303	eval.c	FUNCTION_71
0x400acfe	    0xc74424180000	               mov dword [rsp + 0x18], 0	      4307	eval.c	FUNCTION_71
0x400ad06	        0x837d0006	                      cmp dword [rbp], 6	      4416	eval.c	FUNCTION_71	IF_19	IF_20
0x400ad0a	            0x743e	                            je 0x400ad4a	      4416	eval.c	FUNCTION_71	IF_19	IF_20
0x400ad0c	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      4418	eval.c	FUNCTION_71	IF_19	IF_20	CALL_26
0x400ad11	      0xe800000000	                          call 0x400ad16	      4418	eval.c	FUNCTION_71	IF_19	IF_20	CALL_26
0x400ad16	      0x4889442410	             mov qword [rsp + 0x10], rax	      4418	eval.c	FUNCTION_71	IF_19	IF_20	CALL_26
0x400ad1b	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      4419	eval.c	FUNCTION_71	IF_19	IF_20	CALL_27
0x400ad20	      0xe800000000	                          call 0x400ad25	      4419	eval.c	FUNCTION_71	IF_19	IF_20	CALL_27
0x400ad25	    0xc74424280000	               mov dword [rsp + 0x28], 0	      4419	eval.c	FUNCTION_71	IF_19	IF_20	CALL_27
0x400ad2d	            0xeb2c	                           jmp 0x400ad5b	      4419	eval.c	FUNCTION_71	IF_19	IF_20	CALL_27
0x400ad2f	    0x48c744242000	               mov qword [rsp + 0x20], 0	      4309	eval.c	FUNCTION_71
0x400ad38	    0x48c7c3ffffff	             mov rbx, 0xffffffffffffffff	      4306	eval.c	FUNCTION_71
0x400ad3f	    0x48c744241000	               mov qword [rsp + 0x10], 0	      4415	eval.c	FUNCTION_71	IF_19
0x400ad48	            0xeb11	                           jmp 0x400ad5b	      4415	eval.c	FUNCTION_71	IF_19
0x400ad4a	    0xc74424280000	               mov dword [rsp + 0x28], 0	      4416	eval.c	FUNCTION_71	IF_19	IF_20
0x400ad52	    0x48c744241000	               mov qword [rsp + 0x10], 0	      4415	eval.c	FUNCTION_71	IF_19
0x400ad5b	      0x837c241800	               cmp dword [rsp + 0x18], 0	      4421	eval.c	FUNCTION_71	IF_19	IF_21
0x400ad60	     0xf84b0050000	                            je 0x400b316	      4421	eval.c	FUNCTION_71	IF_19	IF_21
0x400ad66	    0x48c7442420ff	mov qword [rsp + 0x20], 0xffffffffffffffff	      4424	eval.c	FUNCTION_71	IF_19	IF_21	IF_22
0x400ad6f	      0x837c242c00	               cmp dword [rsp + 0x2c], 0	      4423	eval.c	FUNCTION_71	IF_19	IF_21	IF_22
0x400ad74	     0xf85cc050000	                           jne 0x400b346	      4423	eval.c	FUNCTION_71	IF_19	IF_21	IF_22
0x400ad7a	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      4427	eval.c	FUNCTION_71	IF_19	IF_21	ELSE_6	CALL_28
0x400ad7f	      0xe800000000	                          call 0x400ad84	      4427	eval.c	FUNCTION_71	IF_19	IF_21	ELSE_6	CALL_28
0x400ad84	      0x4889442420	             mov qword [rsp + 0x20], rax	      4427	eval.c	FUNCTION_71	IF_19	IF_21	ELSE_6	CALL_28
0x400ad89	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      4428	eval.c	FUNCTION_71	IF_19	IF_21	ELSE_6	CALL_29
0x400ad8e	      0xe800000000	                          call 0x400ad93	      4428	eval.c	FUNCTION_71	IF_19	IF_21	ELSE_6	CALL_29
0x400ad93	      0xe9ae050000	                           jmp 0x400b346	      4428	eval.c	FUNCTION_71	IF_19	IF_21	ELSE_6	CALL_29
0x400ad98	    0x48c744242000	               mov qword [rsp + 0x20], 0	      4305	eval.c	FUNCTION_71
0x400ada1	          0x4889ef	                            mov rdi, rbp	      4445	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_30
0x400ada4	      0xe800000000	                          call 0x400ada9	      4445	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_30
0x400ada9	          0x4889c2	                            mov rdx, rax	      4445	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_30
0x400adac	      0xb800000000	                              mov eax, 0	      4446	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_31
0x400adb1	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      4446	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_31
0x400adb8	          0x4889d7	                            mov rdi, rdx	      4446	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_31
0x400adbb	            0xf2ae	              repne scasb al, byte [rdi]	      4446	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_31
0x400adbd	          0x4889c8	                            mov rax, rcx	      4446	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_31
0x400adc0	          0x48f7d0	                                 not rax	      4446	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_31
0x400adc3	        0x4883e801	                              sub rax, 1	      4446	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_31
0x400adc7	      0x837c241800	               cmp dword [rsp + 0x18], 0	      4447	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23
0x400adcc	            0x746f	                            je 0x400ae3d	      4447	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23
0x400adce	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      4451	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	IF_24
0x400add4	            0x7916	                           jns 0x400adec	      4451	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	IF_24
0x400add6	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      4451	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	IF_24
0x400addb	          0x4801c6	                            add rsi, rax	      4451	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	IF_24
0x400adde	      0xb900000000	                              mov ecx, 0	      4451	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	IF_24
0x400ade3	        0x480f49ce	                         cmovns rcx, rsi	      4451	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	IF_24
0x400ade7	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      4451	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	IF_24
0x400adec	    0x48837c242000	               cmp qword [rsp + 0x20], 0	      4457	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	IF_26
0x400adf2	            0x790a	                           jns 0x400adfe	      4457	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	IF_26
0x400adf4	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      4458	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	IF_26
0x400adf9	          0x4801c1	                            add rcx, rax	      4458	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	IF_26
0x400adfc	            0xeb0f	                           jmp 0x400ae0d	      4458	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	IF_26
0x400adfe	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      4458	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	IF_26
0x400ae03	          0x4839f0	                            cmp rax, rsi	      4458	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	IF_26
0x400ae06	        0x480f4ef0	                         cmovle rsi, rax	      4458	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	IF_26
0x400ae0a	          0x4889f1	                            mov rcx, rsi	      4458	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	IF_26
0x400ae0d	          0x4889ce	                            mov rsi, rcx	      4461	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	IF_28
0x400ae10	        0x48c1ee3f	                           shr rsi, 0x3f	      4461	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	IF_28
0x400ae14	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      4461	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	IF_28
0x400ae19	          0x4839cb	                            cmp rbx, rcx	      4461	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	IF_28
0x400ae1c	        0x400f9fc7	                                setg dil	      4461	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	IF_28
0x400ae20	          0x4008f7	                             or dil, sil	      4461	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	IF_28
0x400ae23	            0x7542	                           jne 0x400ae67	      4461	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	IF_28
0x400ae25	          0x4839d8	                            cmp rax, rbx	      4461	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	IF_28
0x400ae28	            0x7e3d	                           jle 0x400ae67	      4461	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	IF_28
0x400ae2a	        0x488d3c1a	                    lea rdi, [rdx + rbx]	      4464	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	CALL_32
0x400ae2e	            0x29d9	                            sub ecx, ebx	      4464	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	CALL_32
0x400ae30	          0x8d7101	                      lea esi, [rcx + 1]	      4464	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	CALL_32
0x400ae33	      0xe800000000	                          call 0x400ae38	      4464	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	CALL_32
0x400ae38	          0x4889c3	                            mov rbx, rax	      4464	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	CALL_32
0x400ae3b	            0xeb36	                           jmp 0x400ae73	      4464	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	CALL_32
0x400ae3d	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      4471	eval.c	FUNCTION_71	IF_19	SWITCH_2	ELSE_9	IF_29
0x400ae42	          0x4839f0	                            cmp rax, rsi	      4471	eval.c	FUNCTION_71	IF_19	SWITCH_2	ELSE_9	IF_29
0x400ae45	            0x7e27	                           jle 0x400ae6e	      4471	eval.c	FUNCTION_71	IF_19	SWITCH_2	ELSE_9	IF_29
0x400ae47	          0x4889f0	                            mov rax, rsi	      4471	eval.c	FUNCTION_71	IF_19	SWITCH_2	ELSE_9	IF_29
0x400ae4a	        0x48c1e83f	                           shr rax, 0x3f	      4471	eval.c	FUNCTION_71	IF_19	SWITCH_2	ELSE_9	IF_29
0x400ae4e	            0x84c0	                             test al, al	      4471	eval.c	FUNCTION_71	IF_19	SWITCH_2	ELSE_9	IF_29
0x400ae50	            0x751c	                           jne 0x400ae6e	      4471	eval.c	FUNCTION_71	IF_19	SWITCH_2	ELSE_9	IF_29
0x400ae52	          0x4801d6	                            add rsi, rdx	      4474	eval.c	FUNCTION_71	IF_19	SWITCH_2	ELSE_9	CALL_33
0x400ae55	          0x4889f7	                            mov rdi, rsi	      4474	eval.c	FUNCTION_71	IF_19	SWITCH_2	ELSE_9	CALL_33
0x400ae58	      0xbe01000000	                              mov esi, 1	      4474	eval.c	FUNCTION_71	IF_19	SWITCH_2	ELSE_9	CALL_33
0x400ae5d	      0xe800000000	                          call 0x400ae62	      4474	eval.c	FUNCTION_71	IF_19	SWITCH_2	ELSE_9	CALL_33
0x400ae62	          0x4889c3	                            mov rbx, rax	      4474	eval.c	FUNCTION_71	IF_19	SWITCH_2	ELSE_9	CALL_33
0x400ae65	            0xeb0c	                           jmp 0x400ae73	      4474	eval.c	FUNCTION_71	IF_19	SWITCH_2	ELSE_9	CALL_33
0x400ae67	      0xbb00000000	                              mov ebx, 0	      4462	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	IF_28
0x400ae6c	            0xeb05	                           jmp 0x400ae73	      4462	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	IF_28
0x400ae6e	      0xbb00000000	                              mov ebx, 0	      4472	eval.c	FUNCTION_71	IF_19	SWITCH_2	ELSE_9	IF_29
0x400ae73	          0x4889ef	                            mov rdi, rbp	      4476	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_34
0x400ae76	      0xe800000000	                          call 0x400ae7b	      4476	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_34
0x400ae7b	    0xc74500020000	                      mov dword [rbp], 2	      4477	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400ae82	        0x48895d08	                mov qword [rbp + 8], rbx	      4478	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400ae86	      0xe94b020000	                           jmp 0x400b0d6	      4478	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400ae8b	    0x48c744242000	               mov qword [rsp + 0x20], 0	      4305	eval.c	FUNCTION_71
0x400ae94	        0x488b7d08	                mov rdi, qword [rbp + 8]	      4482	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_35
0x400ae98	      0xe800000000	                          call 0x400ae9d	      4482	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_35
0x400ae9d	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      4484	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_30
0x400aea2	        0x488d1406	                    lea rdx, [rsi + rax]	      4484	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_30
0x400aea6	          0x4885f6	                           test rsi, rsi	      4484	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_30
0x400aea9	        0x480f49d6	                         cmovns rdx, rsi	      4484	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_30
0x400aead	      0x4889542410	             mov qword [rsp + 0x10], rdx	      4484	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_30
0x400aeb2	      0x837c242800	               cmp dword [rsp + 0x28], 0	      4485	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31
0x400aeb7	            0x7548	                           jne 0x400af01	      4485	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31
0x400aeb9	          0x4889d6	                            mov rsi, rdx	      4485	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31
0x400aebc	        0x48c1ea3f	                           shr rdx, 0x3f	      4485	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31
0x400aec0	            0x84d2	                             test dl, dl	      4485	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31
0x400aec2	            0x7505	                           jne 0x400aec9	      4485	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31
0x400aec4	          0x4839f0	                            cmp rax, rsi	      4485	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31
0x400aec7	            0x7f38	                            jg 0x400af01	      4485	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31
0x400aec9	      0x837c241800	               cmp dword [rsp + 0x18], 0	      4489	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31	IF_32
0x400aece	            0x753d	                           jne 0x400af0d	      4489	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31	IF_32
0x400aed0	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      4491	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31	IF_32	IF_33
0x400aed5	     0xf84a9030000	                            je 0x400b284	      4491	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31	IF_32	IF_33
0x400aedb	      0xba05000000	                              mov edx, 5	      4492	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31	IF_32	CALL_37
0x400aee0	      0xbe00000000	                              mov esi, 0	      4492	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31	IF_32	CALL_37
0x400aee5	      0xbf00000000	                              mov edi, 0	      4492	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31	IF_32	CALL_37
0x400aeea	      0xe800000000	                          call 0x400aeef	      4492	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31	IF_32	CALL_37
0x400aeef	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      4492	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31	IF_32	CALL_37
0x400aef4	          0x4889c7	                            mov rdi, rax	      4492	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31	IF_32	CALL_37
0x400aef7	      0xe800000000	                          call 0x400aefc	      4492	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31	IF_32	CALL_37
0x400aefc	      0xe983030000	                           jmp 0x400b284	      4492	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31	IF_32	CALL_37
0x400af01	      0x837c241800	               cmp dword [rsp + 0x18], 0	      4497	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34
0x400af06	            0x750a	                           jne 0x400af12	      4497	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34
0x400af08	      0xe9e6000000	                           jmp 0x400aff3	      4497	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34
0x400af0d	      0x4889442410	             mov qword [rsp + 0x10], rax	      4495	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31
0x400af12	    0x48837c242000	               cmp qword [rsp + 0x20], 0	      4502	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	IF_35
0x400af18	            0x7907	                           jns 0x400af21	      4502	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	IF_35
0x400af1a	      0x4801442420	            add qword [rsp + 0x20], rax 	      4503	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	IF_35
0x400af1f	            0xeb14	                           jmp 0x400af35	      4503	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	IF_35
0x400af21	      0x483b442420	            cmp rax, qword [rsp + 0x20] 	      4504	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	ELSE_11	IF_36
0x400af26	     0xf8fe6020000	                            jg 0x400b212	      4504	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	ELSE_11	IF_36
0x400af2c	        0x4883e801	                              sub rax, 1	      4505	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	ELSE_11	IF_36
0x400af30	      0x4889442420	             mov qword [rsp + 0x20], rax	      4505	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	ELSE_11	IF_36
0x400af35	      0x837c242c00	               cmp dword [rsp + 0x2c], 0	      4506	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	IF_37
0x400af3a	            0x7537	                           jne 0x400af73	      4506	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	IF_37
0x400af3c	    0x48837c242000	               cmp qword [rsp + 0x20], 0	      4506	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	IF_37
0x400af42	            0x7826	                            js 0x400af6a	      4506	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	IF_37
0x400af44	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      4506	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	IF_37
0x400af49	          0x4889f0	                            mov rax, rsi	      4506	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	IF_37
0x400af4c	        0x4883c001	                              add rax, 1	      4506	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	IF_37
0x400af50	      0x483b442410	            cmp rax, qword [rsp + 0x10] 	      4507	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	IF_37
0x400af55	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      4507	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	IF_37
0x400af5c	          0x4889c3	                            mov rbx, rax	      4507	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	IF_37
0x400af5f	        0x480f4dde	                         cmovge rbx, rsi	      4507	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	IF_37
0x400af63	      0x48895c2420	             mov qword [rsp + 0x20], rbx	      4507	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	IF_37
0x400af68	            0xeb09	                           jmp 0x400af73	      4507	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	IF_37
0x400af6a	    0x48c7442420ff	mov qword [rsp + 0x20], 0xffffffffffffffff	      4507	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	IF_37
0x400af73	      0xe800000000	                          call 0x400af78	      4508	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	CALL_38
0x400af78	      0x4889442418	             mov qword [rsp + 0x18], rax	      4508	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	CALL_38
0x400af7d	          0x4885c0	                           test rax, rax	      4509	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	IF_38
0x400af80	     0xf84fe020000	                            je 0x400b284	      4509	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	IF_38
0x400af86	        0x488b7d08	                mov rdi, qword [rbp + 8]	      4511	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	CALL_39
0x400af8a	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      4511	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	CALL_39
0x400af8f	      0xe800000000	                          call 0x400af94	      4511	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	CALL_39
0x400af94	          0x4889c3	                            mov rbx, rax	      4511	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	CALL_39
0x400af97	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4511	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	CALL_39
0x400af9c	      0x4839442420	            cmp qword [rsp + 0x20], rax 	      4511	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	CALL_39
0x400afa1	            0x7c36	                            jl 0x400afd9	      4511	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	CALL_39
0x400afa3	        0x488d7310	                   lea rsi, [rbx + 0x10]	      4514	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	IF_39	CALL_40
0x400afa7	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      4514	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	IF_39	CALL_40
0x400afac	      0xe800000000	                          call 0x400afb1	      4514	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	IF_39	CALL_40
0x400afb1	            0x85c0	                           test eax, eax	      4514	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	IF_39	CALL_40
0x400afb3	            0x750f	                           jne 0x400afc4	      4514	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	IF_39	CALL_40
0x400afb5	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      4516	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	IF_39	CALL_41
0x400afba	      0xe800000000	                          call 0x400afbf	      4516	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	IF_39	CALL_41
0x400afbf	      0xe9c0020000	                           jmp 0x400b284	      4516	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	IF_39	CALL_41
0x400afc4	          0x488b1b	                    mov rbx, qword [rbx]	      4519	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2
0x400afc7	    0x488344241001	               add qword [rsp + 0x10], 1	      4512	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2
0x400afcd	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4512	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2
0x400afd2	      0x483b442420	            cmp rax, qword [rsp + 0x20] 	      4511	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	CALL_39
0x400afd7	            0x7eca	                           jle 0x400afa3	      4511	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	CALL_39
0x400afd9	          0x4889ef	                            mov rdi, rbp	      4521	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	CALL_42
0x400afdc	      0xe800000000	                          call 0x400afe1	      4521	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	CALL_42
0x400afe1	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      4522	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	CALL_43
0x400afe6	          0x4889ef	                            mov rdi, rbp	      4522	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	CALL_43
0x400afe9	      0xe800000000	                          call 0x400afee	      4522	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	CALL_43
0x400afee	      0xe9e3000000	                           jmp 0x400b0d6	      4522	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	CALL_43
0x400aff3	        0x488b7d08	                mov rdi, qword [rbp + 8]	      4526	eval.c	FUNCTION_71	IF_19	SWITCH_2	ELSE_12	CALL_45
0x400aff7	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      4526	eval.c	FUNCTION_71	IF_19	SWITCH_2	ELSE_12	CALL_45
0x400affc	      0xe800000000	                          call 0x400b001	      4526	eval.c	FUNCTION_71	IF_19	SWITCH_2	ELSE_12	CALL_45
0x400b001	        0x488d7810	                   lea rdi, [rax + 0x10]	      4526	eval.c	FUNCTION_71	IF_19	SWITCH_2	ELSE_12	CALL_45
0x400b005	      0x488d742450	                   lea rsi, [rsp + 0x50]	      4526	eval.c	FUNCTION_71	IF_19	SWITCH_2	ELSE_12	CALL_45
0x400b00a	      0xe800000000	                          call 0x400b00f	      4526	eval.c	FUNCTION_71	IF_19	SWITCH_2	ELSE_12	CALL_45
0x400b00f	          0x4889ef	                            mov rdi, rbp	      4527	eval.c	FUNCTION_71	IF_19	SWITCH_2	ELSE_12	CALL_46
0x400b012	      0xe800000000	                          call 0x400b017	      4527	eval.c	FUNCTION_71	IF_19	SWITCH_2	ELSE_12	CALL_46
0x400b017	      0x488b442450	            mov rax, qword [rsp + 0x50] 	      4528	eval.c	FUNCTION_71	IF_19	SWITCH_2	ELSE_12
0x400b01c	      0x488b542458	            mov rdx, qword [rsp + 0x58] 	      4528	eval.c	FUNCTION_71	IF_19	SWITCH_2	ELSE_12
0x400b021	        0x48894500	                    mov qword [rbp], rax	      4528	eval.c	FUNCTION_71	IF_19	SWITCH_2	ELSE_12
0x400b025	        0x48895508	                mov qword [rbp + 8], rdx	      4528	eval.c	FUNCTION_71	IF_19	SWITCH_2	ELSE_12
0x400b029	      0xe9a8000000	                           jmp 0x400b0d6	      4528	eval.c	FUNCTION_71	IF_19	SWITCH_2	ELSE_12
0x400b02e	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      4535	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_40	IF_41
0x400b033	            0x741c	                            je 0x400b051	      4535	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_40	IF_41
0x400b035	      0xba05000000	                              mov edx, 5	      4536	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_40	CALL_48
0x400b03a	      0xbe00000000	                              mov esi, 0	      4536	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_40	CALL_48
0x400b03f	      0xbf00000000	                              mov edi, 0	      4536	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_40	CALL_48
0x400b044	      0xe800000000	                          call 0x400b049	      4536	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_40	CALL_48
0x400b049	          0x4889c7	                            mov rdi, rax	      4536	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_40	CALL_48
0x400b04c	      0xe800000000	                          call 0x400b051	      4536	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_40	CALL_48
0x400b051	        0x4883fbff	             cmp rbx, 0xffffffffffffffff	      4537	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_40	IF_42
0x400b055	     0xf8529020000	                           jne 0x400b284	      4537	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_40	IF_42
0x400b05b	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      4538	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_40	CALL_49
0x400b060	      0xe800000000	                          call 0x400b065	      4538	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_40	CALL_49
0x400b065	      0xe91a020000	                           jmp 0x400b284	      4538	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_40	CALL_49
0x400b06a	        0x4883fbff	             cmp rbx, 0xffffffffffffffff	      4544	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_43
0x400b06e	     0xf85e0010000	                           jne 0x400b254	      4544	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_43
0x400b074	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      4546	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_43	CALL_50
0x400b079	      0xe800000000	                          call 0x400b07e	      4546	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_43	CALL_50
0x400b07e	      0x4889442410	             mov qword [rsp + 0x10], rax	      4546	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_43	CALL_50
0x400b083	          0x4885c0	                           test rax, rax	      4547	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_43	IF_44
0x400b086	     0xf8596010000	                           jne 0x400b222	      4547	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_43	IF_44
0x400b08c	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      4549	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_43	IF_44	CALL_51
0x400b091	      0xe800000000	                          call 0x400b096	      4549	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_43	IF_44	CALL_51
0x400b096	      0xe9e9010000	                           jmp 0x400b284	      4549	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_43	IF_44	CALL_51
0x400b09b	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      4559	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_55
0x400b0a0	      0xe800000000	                          call 0x400b0a5	      4559	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_55
0x400b0a5	            0x84db	                             test bl, bl	      4560	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_47
0x400b0a7	     0xf85d7010000	                           jne 0x400b284	      4560	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_47
0x400b0ad	      0x488d742450	                   lea rsi, [rsp + 0x50]	      4563	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_56
0x400b0b2	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      4563	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_56
0x400b0b7	      0xe800000000	                          call 0x400b0bc	      4563	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_56
0x400b0bc	          0x4889ef	                            mov rdi, rbp	      4564	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_57
0x400b0bf	      0xe800000000	                          call 0x400b0c4	      4564	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_57
0x400b0c4	      0x488b442450	            mov rax, qword [rsp + 0x50] 	      4565	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400b0c9	      0x488b542458	            mov rdx, qword [rsp + 0x58] 	      4565	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400b0ce	        0x48894500	                    mov qword [rbp], rax	      4565	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400b0d2	        0x48895508	                mov qword [rbp + 8], rdx	      4565	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400b0d6	        0x498b5500	                    mov rdx, qword [r13]	      6729	eval.c	FUNCTION_118	WHILE_1
0x400b0da	           0xfb602	                   movzx eax, byte [rdx]	      6729	eval.c	FUNCTION_118	WHILE_1
0x400b0dd	            0x3c5b	                            cmp al, 0x5b	      6729	eval.c	FUNCTION_118	WHILE_1
0x400b0df	     0xf84b1010000	                            je 0x400b296	      6729	eval.c	FUNCTION_118	WHILE_1
0x400b0e5	            0x3c2e	                            cmp al, 0x2e	      6730	eval.c	FUNCTION_118	WHILE_1
0x400b0e7	            0x7511	                           jne 0x400b0fa	      6730	eval.c	FUNCTION_118	WHILE_1
0x400b0e9	        0x837d0006	                      cmp dword [rbp], 6	      6730	eval.c	FUNCTION_118	WHILE_1
0x400b0ed	     0xf84a3010000	                            je 0x400b296	      6730	eval.c	FUNCTION_118	WHILE_1
0x400b0f3	      0xbb01000000	                              mov ebx, 1	      6730	eval.c	FUNCTION_118	WHILE_1
0x400b0f8	            0xeb3b	                           jmp 0x400b135	      6730	eval.c	FUNCTION_118	WHILE_1
0x400b0fa	            0x3c28	                            cmp al, 0x28	      6731	eval.c	FUNCTION_118	WHILE_1
0x400b0fc	            0x7532	                           jne 0x400b130	      6731	eval.c	FUNCTION_118	WHILE_1
0x400b0fe	          0x4585f6	                         test r14d, r14d	      6731	eval.c	FUNCTION_118	WHILE_1
0x400b101	            0x7416	                            je 0x400b119	      6731	eval.c	FUNCTION_118	WHILE_1
0x400b103	          0x8b4500	                    mov eax, dword [rbp]	      6732	eval.c	FUNCTION_118	WHILE_1
0x400b106	          0x83e803	                              sub eax, 3	      6732	eval.c	FUNCTION_118	WHILE_1
0x400b109	          0x83f801	                              cmp eax, 1	      6732	eval.c	FUNCTION_118	WHILE_1
0x400b10c	     0xf869e010000	                           jbe 0x400b2b0	      6732	eval.c	FUNCTION_118	WHILE_1
0x400b112	      0xbb01000000	                              mov ebx, 1	      6732	eval.c	FUNCTION_118	WHILE_1
0x400b117	            0xeb1c	                           jmp 0x400b135	      6732	eval.c	FUNCTION_118	WHILE_1
0x400b119	         0xfb642ff	               movzx eax, byte [rdx - 1]	      6733	eval.c	FUNCTION_118	WHILE_1	CALL_1
0x400b11d	            0x3c20	                            cmp al, 0x20	      6733	eval.c	FUNCTION_118	WHILE_1	CALL_1
0x400b11f	            0x7408	                            je 0x400b129	      6733	eval.c	FUNCTION_118	WHILE_1	CALL_1
0x400b121	            0x3c09	                               cmp al, 9	      6733	eval.c	FUNCTION_118	WHILE_1	CALL_1
0x400b123	     0xf85b3000000	                           jne 0x400b1dc	      6733	eval.c	FUNCTION_118	WHILE_1	CALL_1
0x400b129	      0xbb01000000	                              mov ebx, 1	      6733	eval.c	FUNCTION_118	WHILE_1	CALL_1
0x400b12e	            0xeb05	                           jmp 0x400b135	      6733	eval.c	FUNCTION_118	WHILE_1	CALL_1
0x400b130	      0xbb01000000	                              mov ebx, 1	      6733	eval.c	FUNCTION_118	WHILE_1	CALL_1
0x400b135	          0x4d85e4	                           test r12, r12	      6799	eval.c	FUNCTION_118	IF_10
0x400b138	            0x742c	                            je 0x400b166	      6799	eval.c	FUNCTION_118	IF_10
0x400b13a	          0x8b4500	                    mov eax, dword [rbp]	      6800	eval.c	FUNCTION_118	IF_10
0x400b13d	          0x83f803	                              cmp eax, 3	      6800	eval.c	FUNCTION_118	IF_10
0x400b140	            0x7416	                            je 0x400b158	      6800	eval.c	FUNCTION_118	IF_10
0x400b142	          0x83f804	                              cmp eax, 4	      6801	eval.c	FUNCTION_118	IF_10
0x400b145	            0x751f	                           jne 0x400b166	      6801	eval.c	FUNCTION_118	IF_10
0x400b147	        0x488b4508	                mov rax, qword [rbp + 8]	      6802	eval.c	FUNCTION_118	IF_10
0x400b14b	        0x83781800	               cmp dword [rax + 0x18], 0	      6802	eval.c	FUNCTION_118	IF_10
0x400b14f	            0x7507	                           jne 0x400b158	      6802	eval.c	FUNCTION_118	IF_10
0x400b151	      0x4883782800	               cmp qword [rax + 0x28], 0	      6803	eval.c	FUNCTION_118	IF_10
0x400b156	            0x750e	                           jne 0x400b166	      6803	eval.c	FUNCTION_118	IF_10
0x400b158	          0x4889ee	                            mov rsi, rbp	      6804	eval.c	FUNCTION_118	CALL_12
0x400b15b	          0x4c89e7	                            mov rdi, r12	      6804	eval.c	FUNCTION_118	CALL_12
0x400b15e	      0xe800000000	                          call 0x400b163	      6804	eval.c	FUNCTION_118	CALL_12
0x400b163	          0x4989c4	                            mov r12, rax	      6804	eval.c	FUNCTION_118	CALL_12
0x400b166	          0x4c89e7	                            mov rdi, r12	      6806	eval.c	FUNCTION_118	CALL_13
0x400b169	      0xe800000000	                          call 0x400b16e	      6806	eval.c	FUNCTION_118	CALL_13
0x400b16e	            0x89d8	                            mov eax, ebx	      6808	eval.c	FUNCTION_118
0x400b170	      0x488b742478	            mov rsi, qword [rsp + 0x78] 	      6808	eval.c	FUNCTION_118
0x400b175	    0x644833342528	                xor rsi, qword fs:[0x28]	      6808	eval.c	FUNCTION_118
0x400b17e	     0xf84f7010000	                            je 0x400b37b	      6808	eval.c	FUNCTION_118
0x400b184	      0xe9ed010000	                           jmp 0x400b376	      6808	eval.c	FUNCTION_118
0x400b189	    0x488b05000000	            mov rax, qword [0x0400b190] 	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400b190	        0x4c8b4038	              mov r8, qword [rax + 0x38]	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400b194	      0xb800000000	                              mov eax, 0	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400b199	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400b1a0	          0x4c89d7	                            mov rdi, r10	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400b1a3	            0xf2ae	              repne scasb al, byte [rdi]	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400b1a5	          0x4889ce	                            mov rsi, rcx	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400b1a8	          0x48f7d6	                                 not rsi	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400b1ab	        0x488d76ff	                      lea rsi, [rsi - 1]	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400b1af	            0x4154	                                push r12	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400b1b1	              0x52	                                push rdx	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400b1b2	            0x4156	                                push r14	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400b1b4	            0x4157	                                push r15	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400b1b6	          0x4d89c1	                              mov r9, r8	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400b1b9	          0x4c89e9	                            mov rcx, r13	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400b1bc	          0x4889ea	                            mov rdx, rbp	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400b1bf	          0x4c89d7	                            mov rdi, r10	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400b1c2	      0xe800000000	                          call 0x400b1c7	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400b1c7	            0x89c3	                            mov ebx, eax	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400b1c9	        0x4883c420	                           add rsp, 0x20	      6763	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_5
0x400b1cd	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      6763	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_5
0x400b1d2	      0xe800000000	                          call 0x400b1d7	      6763	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_5
0x400b1d7	      0xe9fbf7ffff	                           jmp 0x400a9d7	      6763	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_5
0x400b1dc	    0x488b05000000	            mov rax, qword [0x0400b1e3] 	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400b1e3	        0x4c8b4038	              mov r8, qword [rax + 0x38]	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400b1e7	            0x4154	                                push r12	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400b1e9	            0x6a00	                                  push 0	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400b1eb	            0x6a00	                                  push 0	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400b1ed	            0x4157	                                push r15	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400b1ef	          0x4d89c1	                              mov r9, r8	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400b1f2	          0x4c89e9	                            mov rcx, r13	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400b1f5	          0x4889ea	                            mov rdx, rbp	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400b1f8	      0xbe00000000	                              mov esi, 0	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400b1fd	      0xbf00000000	                              mov edi, 0	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400b202	      0xe800000000	                          call 0x400b207	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400b207	            0x89c3	                            mov ebx, eax	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400b209	        0x4883c420	                           add rsp, 0x20	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400b20d	      0xe9c5f7ffff	                           jmp 0x400a9d7	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400b212	      0x837c242c00	               cmp dword [rsp + 0x2c], 0	      4506	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	IF_37
0x400b217	     0xf8427fdffff	                            je 0x400af44	      4506	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	IF_37
0x400b21d	      0xe951fdffff	                           jmp 0x400af73	      4506	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	IF_37
0x400b222	        0x488b7d08	                mov rdi, qword [rbp + 8]	      4554	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_52
0x400b226	      0xbaffffffff	                     mov edx, 0xffffffff	      4554	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_52
0x400b22b	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      4554	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_52
0x400b230	      0xe800000000	                          call 0x400b235	      4554	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_52
0x400b235	      0x4889442418	             mov qword [rsp + 0x18], rax	      4554	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_52
0x400b23a	          0x4885c0	                           test rax, rax	      4556	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_45
0x400b23d	           0xf94c3	                                 sete bl	      4556	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_45
0x400b240	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      4556	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_45
0x400b245	     0xf8450feffff	                            je 0x400b09b	      4556	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_45
0x400b24b	            0x84db	                             test bl, bl	      4556	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_45
0x400b24d	            0x757b	                           jne 0x400b2ca	      4556	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_45
0x400b24f	      0xe947feffff	                           jmp 0x400b09b	      4556	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_45
0x400b254	        0x488b7d08	                mov rdi, qword [rbp + 8]	      4554	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_52
0x400b258	            0x89da	                            mov edx, ebx	      4554	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_52
0x400b25a	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      4554	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_52
0x400b25f	      0xe800000000	                          call 0x400b264	      4554	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_52
0x400b264	      0x4889442418	             mov qword [rsp + 0x18], rax	      4554	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_52
0x400b269	          0x4885c0	                           test rax, rax	      4556	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_45
0x400b26c	           0xf94c3	                                 sete bl	      4556	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_45
0x400b26f	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      4556	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_45
0x400b274	     0xf842bfeffff	                            je 0x400b0a5	      4556	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_45
0x400b27a	            0x84db	                             test bl, bl	      4556	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_45
0x400b27c	     0xf8423feffff	                            je 0x400b0a5	      4556	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_45
0x400b282	            0xeb6c	                           jmp 0x400b2f0	      4556	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_45
0x400b284	          0x4889ef	                            mov rdi, rbp	      6790	eval.c	FUNCTION_118	WHILE_1	ELSE_3	ELSE_4	IF_9	CALL_11
0x400b287	      0xe800000000	                          call 0x400b28c	      6790	eval.c	FUNCTION_118	WHILE_1	ELSE_3	ELSE_4	IF_9	CALL_11
0x400b28c	      0xbb00000000	                              mov ebx, 0	      6791	eval.c	FUNCTION_118	WHILE_1	ELSE_3	ELSE_4	IF_9
0x400b291	      0xe99ffeffff	                           jmp 0x400b135	      6791	eval.c	FUNCTION_118	WHILE_1	ELSE_3	ELSE_4	IF_9
0x400b296	         0xfb642ff	               movzx eax, byte [rdx - 1]	      6733	eval.c	FUNCTION_118	WHILE_1	CALL_1
0x400b29a	            0x3c20	                            cmp al, 0x20	      6733	eval.c	FUNCTION_118	WHILE_1	CALL_1
0x400b29c	            0x7408	                            je 0x400b2a6	      6733	eval.c	FUNCTION_118	WHILE_1	CALL_1
0x400b29e	            0x3c09	                               cmp al, 9	      6733	eval.c	FUNCTION_118	WHILE_1	CALL_1
0x400b2a0	     0xf856ff7ffff	                           jne 0x400aa15	      6733	eval.c	FUNCTION_118	WHILE_1	CALL_1
0x400b2a6	      0xbb01000000	                              mov ebx, 1	      6733	eval.c	FUNCTION_118	WHILE_1	CALL_1
0x400b2ab	      0xe985feffff	                           jmp 0x400b135	      6733	eval.c	FUNCTION_118	WHILE_1	CALL_1
0x400b2b0	         0xfb642ff	               movzx eax, byte [rdx - 1]	      6733	eval.c	FUNCTION_118	WHILE_1	CALL_1
0x400b2b4	            0x3c20	                            cmp al, 0x20	      6733	eval.c	FUNCTION_118	WHILE_1	CALL_1
0x400b2b6	            0x7408	                            je 0x400b2c0	      6733	eval.c	FUNCTION_118	WHILE_1	CALL_1
0x400b2b8	            0x3c09	                               cmp al, 9	      6733	eval.c	FUNCTION_118	WHILE_1	CALL_1
0x400b2ba	     0xf85caf6ffff	                           jne 0x400a98a	      6733	eval.c	FUNCTION_118	WHILE_1	CALL_1
0x400b2c0	      0xbb01000000	                              mov ebx, 1	      6733	eval.c	FUNCTION_118	WHILE_1	CALL_1
0x400b2c5	      0xe96bfeffff	                           jmp 0x400b135	      6733	eval.c	FUNCTION_118	WHILE_1	CALL_1
0x400b2ca	      0xba05000000	                              mov edx, 5	      4557	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_54
0x400b2cf	      0xbe00000000	                              mov esi, 0	      4557	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_54
0x400b2d4	      0xbf00000000	                              mov edi, 0	      4557	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_54
0x400b2d9	      0xe800000000	                          call 0x400b2de	      4557	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_54
0x400b2de	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      4557	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_54
0x400b2e3	          0x4889c7	                            mov rdi, rax	      4557	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_54
0x400b2e6	      0xe800000000	                          call 0x400b2eb	      4557	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_54
0x400b2eb	      0xe9abfdffff	                           jmp 0x400b09b	      4557	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_54
0x400b2f0	      0xba05000000	                              mov edx, 5	      4557	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_54
0x400b2f5	      0xbe00000000	                              mov esi, 0	      4557	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_54
0x400b2fa	      0xbf00000000	                              mov edi, 0	      4557	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_54
0x400b2ff	      0xe800000000	                          call 0x400b304	      4557	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_54
0x400b304	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      4557	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_54
0x400b309	          0x4889c7	                            mov rdi, rax	      4557	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_54
0x400b30c	      0xe800000000	                          call 0x400b311	      4557	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_54
0x400b311	      0xe98ffdffff	                           jmp 0x400b0a5	      4557	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_54
0x400b316	          0x8b4500	                    mov eax, dword [rbp]	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400b319	          0x83f805	                              cmp eax, 5	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400b31c	     0xf8469fbffff	                            je 0x400ae8b	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400b322	          0x83f805	                              cmp eax, 5	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400b325	            0x7711	                            ja 0x400b338	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400b327	          0x83e801	                              sub eax, 1	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400b32a	          0x83f801	                              cmp eax, 1	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400b32d	     0xf8665faffff	                           jbe 0x400ad98	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400b333	      0xe99efdffff	                           jmp 0x400b0d6	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400b338	          0x83f806	                              cmp eax, 6	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400b33b	     0xf8429fdffff	                            je 0x400b06a	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400b341	      0xe990fdffff	                           jmp 0x400b0d6	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400b346	          0x8b4500	                    mov eax, dword [rbp]	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400b349	          0x83f805	                              cmp eax, 5	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400b34c	     0xf8442fbffff	                            je 0x400ae94	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400b352	          0x83f805	                              cmp eax, 5	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400b355	            0x7711	                            ja 0x400b368	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400b357	          0x83e801	                              sub eax, 1	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400b35a	          0x83f801	                              cmp eax, 1	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400b35d	     0xf863efaffff	                           jbe 0x400ada1	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400b363	      0xe96efdffff	                           jmp 0x400b0d6	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400b368	          0x83f806	                              cmp eax, 6	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400b36b	     0xf84bdfcffff	                            je 0x400b02e	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400b371	      0xe960fdffff	                           jmp 0x400b0d6	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400b376	      0xe800000000	                          call 0x400b37b	      6808	eval.c	FUNCTION_118
0x400b37b	    0x4881c4880000	                           add rsp, 0x88	      6808	eval.c	FUNCTION_118
0x400b382	              0x5b	                                 pop rbx	      6808	eval.c	FUNCTION_118
0x400b383	              0x5d	                                 pop rbp	      6808	eval.c	FUNCTION_118
0x400b384	            0x415c	                                 pop r12	      6808	eval.c	FUNCTION_118
0x400b386	            0x415d	                                 pop r13	      6808	eval.c	FUNCTION_118
0x400b388	            0x415e	                                 pop r14	      6808	eval.c	FUNCTION_118
0x400b38a	            0x415f	                                 pop r15	      6808	eval.c	FUNCTION_118
0x400b38c	              0xc3	                                     ret	      6808	eval.c	FUNCTION_118
eval3	FOR,0:SWITCH,0:DO,0:IF,9:functions,0:WHILE,1:CALL,7:ELSE,0	90
0x4007708	            0x4157	                                push r15	      3434	eval.c	FUNCTION_66
0x400770a	            0x4156	                                push r14	      3434	eval.c	FUNCTION_66
0x400770c	            0x4155	                                push r13	      3434	eval.c	FUNCTION_66
0x400770e	            0x4154	                                push r12	      3434	eval.c	FUNCTION_66
0x4007710	              0x55	                                push rbp	      3434	eval.c	FUNCTION_66
0x4007711	              0x53	                                push rbx	      3434	eval.c	FUNCTION_66
0x4007712	        0x4883ec38	                           sub rsp, 0x38	      3434	eval.c	FUNCTION_66
0x4007716	          0x4889fd	                            mov rbp, rdi	      3434	eval.c	FUNCTION_66
0x4007719	          0x4989f5	                            mov r13, rsi	      3434	eval.c	FUNCTION_66
0x400771c	          0x4189d6	                           mov r14d, edx	      3434	eval.c	FUNCTION_66
0x400771f	    0x64488b042528	                mov rax, qword fs:[0x28]	      3434	eval.c	FUNCTION_66
0x4007728	      0x4889442428	             mov qword [rsp + 0x28], rax	      3434	eval.c	FUNCTION_66
0x400772d	            0x31c0	                            xor eax, eax	      3434	eval.c	FUNCTION_66
0x400772f	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      3438	eval.c	FUNCTION_66
0x4007737	      0xe8f2fcffff	                          call sym.eval4	      3443	eval.c	FUNCTION_66	IF_1	CALL_1
0x400773c	            0x85c0	                           test eax, eax	      3443	eval.c	FUNCTION_66	IF_1	CALL_1
0x400773e	     0xf84ed000000	                            je 0x4007831	      3443	eval.c	FUNCTION_66	IF_1	CALL_1
0x4007744	    0x41bf01000000	                             mov r15d, 1	      3443	eval.c	FUNCTION_66	IF_1	CALL_1
0x400774a	    0x41bc01000000	                             mov r12d, 1	      3443	eval.c	FUNCTION_66	IF_1	CALL_1
0x4007750	      0xe9af000000	                           jmp 0x4007804	      3443	eval.c	FUNCTION_66	IF_1	CALL_1
0x4007755	          0x4585f6	                         test r14d, r14d	      3453	eval.c	FUNCTION_66	WHILE_1	IF_2
0x4007758	           0xf95c3	                                setne bl	      3453	eval.c	FUNCTION_66	WHILE_1	IF_2
0x400775b	          0x4585ff	                         test r15d, r15d	      3453	eval.c	FUNCTION_66	WHILE_1	IF_2
0x400775e	            0x7436	                            je 0x4007796	      3453	eval.c	FUNCTION_66	WHILE_1	IF_2
0x4007760	            0x84db	                             test bl, bl	      3453	eval.c	FUNCTION_66	WHILE_1	IF_2
0x4007762	            0x7432	                            je 0x4007796	      3453	eval.c	FUNCTION_66	WHILE_1	IF_2
0x4007764	      0x488d74240c	                    lea rsi, [rsp + 0xc]	      3455	eval.c	FUNCTION_66	WHILE_1	IF_2	IF_3	CALL_2
0x4007769	          0x4c89ef	                            mov rdi, r13	      3455	eval.c	FUNCTION_66	WHILE_1	IF_2	IF_3	CALL_2
0x400776c	      0xe800000000	                          call 0x4007771	      3455	eval.c	FUNCTION_66	WHILE_1	IF_2	IF_3	CALL_2
0x4007771	          0x4885c0	                           test rax, rax	      3456	eval.c	FUNCTION_66	WHILE_1	IF_2	IF_3
0x4007774	      0xb800000000	                              mov eax, 0	      3456	eval.c	FUNCTION_66	WHILE_1	IF_2	IF_3
0x4007779	        0x4c0f44e0	                          cmove r12, rax	      3456	eval.c	FUNCTION_66	WHILE_1	IF_2	IF_3
0x400777d	          0x4c89ef	                            mov rdi, r13	      3457	eval.c	FUNCTION_66	WHILE_1	IF_2	CALL_3
0x4007780	      0xe800000000	                          call 0x4007785	      3457	eval.c	FUNCTION_66	WHILE_1	IF_2	CALL_3
0x4007785	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      3458	eval.c	FUNCTION_66	WHILE_1	IF_2	IF_4
0x400778a	     0xf858e000000	                           jne 0x400781e	      3458	eval.c	FUNCTION_66	WHILE_1	IF_2	IF_4
0x4007790	    0x41bf00000000	                             mov r15d, 0	      3460	eval.c	FUNCTION_66	WHILE_1	IF_2
0x4007796	        0x488b4500	                    mov rax, qword [rbp]	      3466	eval.c	FUNCTION_66	WHILE_1	CALL_4
0x400779a	        0x488d7802	                      lea rdi, [rax + 2]	      3466	eval.c	FUNCTION_66	WHILE_1	CALL_4
0x400779e	      0xe800000000	                          call 0x40077a3	      3466	eval.c	FUNCTION_66	WHILE_1	CALL_4
0x40077a3	        0x48894500	                    mov qword [rbp], rax	      3466	eval.c	FUNCTION_66	WHILE_1	CALL_4
0x40077a7	          0x4d85e4	                           test r12, r12	      3467	eval.c	FUNCTION_66	WHILE_1	IF_5	CALL_5
0x40077aa	           0xf95c0	                                setne al	      3467	eval.c	FUNCTION_66	WHILE_1	IF_5	CALL_5
0x40077ad	            0x21c3	                            and ebx, eax	      3467	eval.c	FUNCTION_66	WHILE_1	IF_5	CALL_5
0x40077af	           0xfb6d3	                           movzx edx, bl	      3467	eval.c	FUNCTION_66	WHILE_1	IF_5	CALL_5
0x40077b2	      0x488d742410	                   lea rsi, [rsp + 0x10]	      3467	eval.c	FUNCTION_66	WHILE_1	IF_5	CALL_5
0x40077b7	          0x4889ef	                            mov rdi, rbp	      3467	eval.c	FUNCTION_66	WHILE_1	IF_5	CALL_5
0x40077ba	      0xe86ffcffff	                          call sym.eval4	      3467	eval.c	FUNCTION_66	WHILE_1	IF_5	CALL_5
0x40077bf	            0x85c0	                           test eax, eax	      3467	eval.c	FUNCTION_66	WHILE_1	IF_5	CALL_5
0x40077c1	            0x746e	                            je 0x4007831	      3467	eval.c	FUNCTION_66	WHILE_1	IF_5	CALL_5
0x40077c3	            0x84db	                             test bl, bl	      3473	eval.c	FUNCTION_66	WHILE_1	IF_6
0x40077c5	            0x742c	                            je 0x40077f3	      3473	eval.c	FUNCTION_66	WHILE_1	IF_6
0x40077c7	      0x488d74240c	                    lea rsi, [rsp + 0xc]	      3475	eval.c	FUNCTION_66	WHILE_1	IF_6	IF_7	CALL_6
0x40077cc	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      3475	eval.c	FUNCTION_66	WHILE_1	IF_6	IF_7	CALL_6
0x40077d1	      0xe800000000	                          call 0x40077d6	      3475	eval.c	FUNCTION_66	WHILE_1	IF_6	IF_7	CALL_6
0x40077d6	          0x4885c0	                           test rax, rax	      3476	eval.c	FUNCTION_66	WHILE_1	IF_6	IF_7
0x40077d9	      0xb800000000	                              mov eax, 0	      3476	eval.c	FUNCTION_66	WHILE_1	IF_6	IF_7
0x40077de	        0x4c0f44e0	                          cmove r12, rax	      3476	eval.c	FUNCTION_66	WHILE_1	IF_6	IF_7
0x40077e2	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      3477	eval.c	FUNCTION_66	WHILE_1	IF_6	CALL_7
0x40077e7	      0xe800000000	                          call 0x40077ec	      3477	eval.c	FUNCTION_66	WHILE_1	IF_6	CALL_7
0x40077ec	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      3478	eval.c	FUNCTION_66	WHILE_1	IF_6	IF_8
0x40077f1	            0x7532	                           jne 0x4007825	      3478	eval.c	FUNCTION_66	WHILE_1	IF_6	IF_8
0x40077f3	          0x4585f6	                         test r14d, r14d	      3481	eval.c	FUNCTION_66	WHILE_1	IF_9
0x40077f6	            0x740c	                            je 0x4007804	      3481	eval.c	FUNCTION_66	WHILE_1	IF_9
0x40077f8	    0x41c745000100	                      mov dword [r13], 1	      3483	eval.c	FUNCTION_66	WHILE_1	IF_9
0x4007800	        0x4d896508	                mov qword [r13 + 8], r12	      3484	eval.c	FUNCTION_66	WHILE_1	IF_9
0x4007804	        0x488b4500	                    mov rax, qword [rbp]	      3451	eval.c	FUNCTION_66	WHILE_1
0x4007808	          0x803826	                    cmp byte [rax], 0x26	      3451	eval.c	FUNCTION_66	WHILE_1
0x400780b	            0x751f	                           jne 0x400782c	      3451	eval.c	FUNCTION_66	WHILE_1
0x400780d	        0x80780126	                cmp byte [rax + 1], 0x26	      3451	eval.c	FUNCTION_66	WHILE_1
0x4007811	     0xf843effffff	                            je 0x4007755	      3451	eval.c	FUNCTION_66	WHILE_1
0x4007817	      0xb801000000	                              mov eax, 1	      3488	eval.c	FUNCTION_66
0x400781c	            0xeb13	                           jmp 0x4007831	      3488	eval.c	FUNCTION_66
0x400781e	      0xb800000000	                              mov eax, 0	      3459	eval.c	FUNCTION_66	WHILE_1	IF_2	IF_4
0x4007823	            0xeb0c	                           jmp 0x4007831	      3459	eval.c	FUNCTION_66	WHILE_1	IF_2	IF_4
0x4007825	      0xb800000000	                              mov eax, 0	      3479	eval.c	FUNCTION_66	WHILE_1	IF_6	IF_8
0x400782a	            0xeb05	                           jmp 0x4007831	      3479	eval.c	FUNCTION_66	WHILE_1	IF_6	IF_8
0x400782c	      0xb801000000	                              mov eax, 1	      3488	eval.c	FUNCTION_66
0x4007831	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      3489	eval.c	FUNCTION_66
0x4007836	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3489	eval.c	FUNCTION_66
0x400783f	            0x7405	                            je 0x4007846	      3489	eval.c	FUNCTION_66
0x4007841	      0xe800000000	                          call 0x4007846	      3489	eval.c	FUNCTION_66
0x4007846	        0x4883c438	                           add rsp, 0x38	      3489	eval.c	FUNCTION_66
0x400784a	              0x5b	                                 pop rbx	      3489	eval.c	FUNCTION_66
0x400784b	              0x5d	                                 pop rbp	      3489	eval.c	FUNCTION_66
0x400784c	            0x415c	                                 pop r12	      3489	eval.c	FUNCTION_66
0x400784e	            0x415d	                                 pop r13	      3489	eval.c	FUNCTION_66
0x4007850	            0x415e	                                 pop r14	      3489	eval.c	FUNCTION_66
0x4007852	            0x415f	                                 pop r15	      3489	eval.c	FUNCTION_66
0x4007854	              0xc3	                                     ret	      3489	eval.c	FUNCTION_66
assert_report	FOR,0:SWITCH,0:DO,0:IF,0:functions,0:WHILE,0:CALL,5:ELSE,0	25
0x400672b	              0x53	                                push rbx	      8995	eval.c	FUNCTION_175
0x400672c	        0x4883ec20	                           sub rsp, 0x20	      8995	eval.c	FUNCTION_175
0x4006730	          0x4889fb	                            mov rbx, rdi	      8995	eval.c	FUNCTION_175
0x4006733	    0x64488b042528	                mov rax, qword fs:[0x28]	      8995	eval.c	FUNCTION_175
0x400673c	      0x4889442418	             mov qword [rsp + 0x18], rax	      8995	eval.c	FUNCTION_175
0x4006741	            0x31c0	                            xor eax, eax	      8995	eval.c	FUNCTION_175
0x4006743	          0x4889e7	                            mov rdi, rsp	      8998	eval.c	FUNCTION_175	CALL_1
0x4006746	      0xe800000000	                          call 0x400674b	      8998	eval.c	FUNCTION_175	CALL_1
0x400674b	          0x4889df	                            mov rdi, rbx	      8999	eval.c	FUNCTION_175	CALL_3
0x400674e	      0xe800000000	                          call 0x4006753	      8999	eval.c	FUNCTION_175	CALL_3
0x4006753	          0x4889c6	                            mov rsi, rax	      8999	eval.c	FUNCTION_175	CALL_3
0x4006756	          0x4889e7	                            mov rdi, rsp	      8999	eval.c	FUNCTION_175	CALL_3
0x4006759	      0xe800000000	                          call 0x400675e	      8999	eval.c	FUNCTION_175	CALL_3
0x400675e	          0x4889e7	                            mov rdi, rsp	      9000	eval.c	FUNCTION_175	CALL_4
0x4006761	      0xe800000000	                          call 0x4006766	      9000	eval.c	FUNCTION_175	CALL_4
0x4006766	          0x4889e7	                            mov rdi, rsp	      9001	eval.c	FUNCTION_175	CALL_5
0x4006769	      0xe800000000	                          call 0x400676e	      9001	eval.c	FUNCTION_175	CALL_5
0x400676e	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      9003	eval.c	FUNCTION_175
0x4006773	    0x644833142528	                xor rdx, qword fs:[0x28]	      9003	eval.c	FUNCTION_175
0x400677c	            0x7405	                            je 0x4006783	      9003	eval.c	FUNCTION_175
0x400677e	      0xe800000000	                          call 0x4006783	      9003	eval.c	FUNCTION_175
0x4006783	      0xb801000000	                              mov eax, 1	      9003	eval.c	FUNCTION_175
0x4006788	        0x4883c420	                           add rsp, 0x20	      9003	eval.c	FUNCTION_175
0x400678c	              0x5b	                                 pop rbx	      9003	eval.c	FUNCTION_175
0x400678d	              0xc3	                                     ret	      9003	eval.c	FUNCTION_175
find_var_in_ht	FOR,0:SWITCH,1:DO,0:IF,5:functions,0:WHILE,0:CALL,10:ELSE,0	77
0x4004f3f	            0x4154	                                push r12	      7218	eval.c	FUNCTION_132
0x4004f41	              0x55	                                push rbp	      7218	eval.c	FUNCTION_132
0x4004f42	              0x53	                                push rbx	      7218	eval.c	FUNCTION_132
0x4004f43	          0x803a00	                       cmp byte [rdx], 0	      7221	eval.c	FUNCTION_132	IF_1
0x4004f46	     0xf8587000000	                           jne 0x4004fd3	      7221	eval.c	FUNCTION_132	IF_1
0x4004f4c	          0x83ee61	                           sub esi, 0x61	      7224	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x4004f4f	          0x83fe16	                           cmp esi, 0x16	      7224	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x4004f52	            0x7775	                            ja 0x4004fc9	      7224	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x4004f54	            0x89f6	                            mov esi, esi	      7224	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x4004f56	    0xff24f5000000	                       jmp qword [rsi*8]	      7224	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x4004f5d	      0xb800000000	                              mov eax, 0	      7228	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x4004f62	      0xe9ff000000	                           jmp 0x4005066	      7228	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x4004f67	    0x486315000000	         movsxd rdx, dword [0x04004f6e] 	      7226	eval.c	FUNCTION_132	IF_1	SWITCH_1	CALL_1
0x4004f6e	    0x488b05000000	            mov rax, qword [0x04004f75] 	      7226	eval.c	FUNCTION_132	IF_1	SWITCH_1	CALL_1
0x4004f75	      0x488b44d0f8	        mov rax, qword [rax + rdx*8 - 8]	      7226	eval.c	FUNCTION_132	IF_1	SWITCH_1	CALL_1
0x4004f7a	      0xe9e7000000	                           jmp 0x4005066	      7226	eval.c	FUNCTION_132	IF_1	SWITCH_1	CALL_1
0x4004f7f	    0x488b05000000	            mov rax, qword [0x04004f86] 	      7229	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x4004f86	    0x480518170000	                         add rax, 0x1718	      7229	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x4004f8c	      0xe9d5000000	                           jmp 0x4005066	      7229	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x4004f91	    0x488b05000000	            mov rax, qword [0x04004f98] 	      7230	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x4004f98	    0x480558050000	                          add rax, 0x558	      7230	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x4004f9e	      0xe9c3000000	                           jmp 0x4005066	      7230	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x4004fa3	    0x488b05000000	            mov rax, qword [0x04004faa] 	      7231	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x4004faa	    0x4805b8000000	                           add rax, 0xb8	      7231	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x4004fb0	      0xe9b1000000	                           jmp 0x4005066	      7231	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x4004fb5	      0xe800000000	                          call 0x4004fba	      7232	eval.c	FUNCTION_132	IF_1	SWITCH_1	CALL_2
0x4004fba	      0xe9a7000000	                           jmp 0x4005066	      7232	eval.c	FUNCTION_132	IF_1	SWITCH_1	CALL_2
0x4004fbf	      0xe800000000	                          call 0x4004fc4	      7233	eval.c	FUNCTION_132	IF_1	SWITCH_1	CALL_3
0x4004fc4	      0xe99d000000	                           jmp 0x4005066	      7233	eval.c	FUNCTION_132	IF_1	SWITCH_1	CALL_3
0x4004fc9	      0xb800000000	                              mov eax, 0	      7235	eval.c	FUNCTION_132	IF_1
0x4004fce	      0xe993000000	                           jmp 0x4005066	      7235	eval.c	FUNCTION_132	IF_1
0x4004fd3	          0x4889fd	                            mov rbp, rdi	      7235	eval.c	FUNCTION_132	IF_1
0x4004fd6	          0x4889d3	                            mov rbx, rdx	      7235	eval.c	FUNCTION_132	IF_1
0x4004fd9	          0x4189cc	                           mov r12d, ecx	      7235	eval.c	FUNCTION_132	IF_1
0x4004fdc	          0x4889d6	                            mov rsi, rdx	      7238	eval.c	FUNCTION_132	CALL_4
0x4004fdf	      0xe800000000	                          call 0x4004fe4	      7238	eval.c	FUNCTION_132	CALL_4
0x4004fe4	        0x488b5008	                mov rdx, qword [rax + 8]	      7239	eval.c	FUNCTION_132	IF_2	CALL_5
0x4004fe8	    0x4881fa000000	                              cmp rdx, 0	      7239	eval.c	FUNCTION_132	IF_2	CALL_5
0x4004fef	            0x7405	                            je 0x4004ff6	      7239	eval.c	FUNCTION_132	IF_2	CALL_5
0x4004ff1	          0x4885d2	                           test rdx, rdx	      7239	eval.c	FUNCTION_132	IF_2	CALL_5
0x4004ff4	            0x7553	                           jne 0x4005049	      7239	eval.c	FUNCTION_132	IF_2	CALL_5
0x4004ff6	          0x4585e4	                         test r12d, r12d	      7245	eval.c	FUNCTION_132	IF_2	IF_3
0x4004ff9	            0x755f	                           jne 0x400505a	      7245	eval.c	FUNCTION_132	IF_2	IF_3
0x4004ffb	    0x4881fd000000	                              cmp rbp, 0	      7245	eval.c	FUNCTION_132	IF_2	IF_3
0x4005002	            0x7556	                           jne 0x400505a	      7245	eval.c	FUNCTION_132	IF_2	IF_3
0x4005004	      0xbe00000000	                              mov esi, 0	      7249	eval.c	FUNCTION_132	IF_2	IF_3	IF_4	CALL_7
0x4005009	          0x4889df	                            mov rdi, rbx	      7249	eval.c	FUNCTION_132	IF_2	IF_3	IF_4	CALL_7
0x400500c	      0xe800000000	                          call 0x4005011	      7249	eval.c	FUNCTION_132	IF_2	IF_3	IF_4	CALL_7
0x4005011	            0x89c2	                            mov edx, eax	      7249	eval.c	FUNCTION_132	IF_2	IF_3	IF_4	CALL_7
0x4005013	      0xb800000000	                              mov eax, 0	      7250	eval.c	FUNCTION_132	IF_2	IF_3	IF_4
0x4005018	            0x85d2	                           test edx, edx	      7249	eval.c	FUNCTION_132	IF_2	IF_3	IF_4	CALL_7
0x400501a	            0x744a	                            je 0x4005066	      7249	eval.c	FUNCTION_132	IF_2	IF_3	IF_4	CALL_7
0x400501c	      0xe800000000	                          call 0x4005021	      7249	eval.c	FUNCTION_132	IF_2	IF_3	IF_4	CALL_7
0x4005021	            0x89c2	                            mov edx, eax	      7249	eval.c	FUNCTION_132	IF_2	IF_3	IF_4	CALL_7
0x4005023	      0xb800000000	                              mov eax, 0	      7250	eval.c	FUNCTION_132	IF_2	IF_3	IF_4
0x4005028	            0x85d2	                           test edx, edx	      7249	eval.c	FUNCTION_132	IF_2	IF_3	IF_4	CALL_7
0x400502a	            0x753a	                           jne 0x4005066	      7249	eval.c	FUNCTION_132	IF_2	IF_3	IF_4	CALL_7
0x400502c	          0x4889de	                            mov rsi, rbx	      7251	eval.c	FUNCTION_132	IF_2	IF_3	CALL_8
0x400502f	          0x4889ef	                            mov rdi, rbp	      7251	eval.c	FUNCTION_132	IF_2	IF_3	CALL_8
0x4005032	      0xe800000000	                          call 0x4005037	      7251	eval.c	FUNCTION_132	IF_2	IF_3	CALL_8
0x4005037	        0x488b5008	                mov rdx, qword [rax + 8]	      7253	eval.c	FUNCTION_132	IF_2	IF_5	CALL_9
0x400503b	    0x4881fa000000	                              cmp rdx, 0	      7253	eval.c	FUNCTION_132	IF_2	IF_5	CALL_9
0x4005042	            0x741d	                            je 0x4005061	      7253	eval.c	FUNCTION_132	IF_2	IF_5	CALL_9
0x4005044	          0x4885d2	                           test rdx, rdx	      7253	eval.c	FUNCTION_132	IF_2	IF_5	CALL_9
0x4005047	            0x7418	                            je 0x4005061	      7253	eval.c	FUNCTION_132	IF_2	IF_5	CALL_9
0x4005049	        0x488b4008	                mov rax, qword [rax + 8]	      7256	eval.c	FUNCTION_132	CALL_10
0x400504d	        0x4883e811	                           sub rax, 0x11	      7256	eval.c	FUNCTION_132	CALL_10
0x4005051	            0xeb13	                           jmp 0x4005066	      7256	eval.c	FUNCTION_132	CALL_10
0x4005053	      0xb800000000	                              mov eax, 0	      7227	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x4005058	            0xeb0c	                           jmp 0x4005066	      7227	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x400505a	      0xb800000000	                              mov eax, 0	      7254	eval.c	FUNCTION_132	IF_2	IF_5
0x400505f	            0xeb05	                           jmp 0x4005066	      7254	eval.c	FUNCTION_132	IF_2	IF_5
0x4005061	      0xb800000000	                              mov eax, 0	      7254	eval.c	FUNCTION_132	IF_2	IF_5
0x4005066	              0x5b	                                 pop rbx	      7257	eval.c	FUNCTION_132
0x4005067	              0x5d	                                 pop rbp	      7257	eval.c	FUNCTION_132
0x4005068	            0x415c	                                 pop r12	      7257	eval.c	FUNCTION_132
0x400506a	              0xc3	                                     ret	      7257	eval.c	FUNCTION_132
filter_map_one	FOR,0:SWITCH,0:DO,0:IF,3:functions,0:WHILE,0:CALL,6:ELSE,1	67
0x4007cf1	            0x4155	                                push r13	     10191	eval.c	FUNCTION_189
0x4007cf3	            0x4154	                                push r12	     10191	eval.c	FUNCTION_189
0x4007cf5	              0x55	                                push rbp	     10191	eval.c	FUNCTION_189
0x4007cf6	              0x53	                                push rbx	     10191	eval.c	FUNCTION_189
0x4007cf7	        0x4883ec68	                           sub rsp, 0x68	     10191	eval.c	FUNCTION_189
0x4007cfb	          0x4889fd	                            mov rbp, rdi	     10191	eval.c	FUNCTION_189
0x4007cfe	          0x4889f3	                            mov rbx, rsi	     10191	eval.c	FUNCTION_189
0x4007d01	          0x4189d4	                           mov r12d, edx	     10191	eval.c	FUNCTION_189
0x4007d04	          0x4989cd	                            mov r13, rcx	     10191	eval.c	FUNCTION_189
0x4007d07	    0x64488b042528	                mov rax, qword fs:[0x28]	     10191	eval.c	FUNCTION_189
0x4007d10	      0x4889442458	             mov qword [rsp + 0x58], rax	     10191	eval.c	FUNCTION_189
0x4007d15	            0x31c0	                            xor eax, eax	     10191	eval.c	FUNCTION_189
0x4007d17	      0xbe00000000	                              mov esi, 0	     10196	eval.c	FUNCTION_189	CALL_1
0x4007d1c	      0xe800000000	                          call 0x4007d21	     10196	eval.c	FUNCTION_189	CALL_1
0x4007d21	    0x488b05000000	            mov rax, qword [0x04007d28] 	     10197	eval.c	FUNCTION_189
0x4007d28	    0x488b15000000	            mov rdx, qword [0x04007d2f] 	     10197	eval.c	FUNCTION_189
0x4007d2f	      0x4889442420	             mov qword [rsp + 0x20], rax	     10197	eval.c	FUNCTION_189
0x4007d34	      0x4889542428	             mov qword [rsp + 0x28], rdx	     10197	eval.c	FUNCTION_189
0x4007d39	    0x488b05000000	            mov rax, qword [0x04007d40] 	     10198	eval.c	FUNCTION_189
0x4007d40	    0x488b15000000	            mov rdx, qword [0x04007d47] 	     10198	eval.c	FUNCTION_189
0x4007d47	      0x4889442430	             mov qword [rsp + 0x30], rax	     10198	eval.c	FUNCTION_189
0x4007d4c	      0x4889542438	             mov qword [rsp + 0x38], rdx	     10198	eval.c	FUNCTION_189
0x4007d51	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	     10199	eval.c	FUNCTION_189	IF_1	CALL_2
0x4007d56	      0xba02000000	                              mov edx, 2	     10199	eval.c	FUNCTION_189	IF_1	CALL_2
0x4007d5b	      0x488d742420	                   lea rsi, [rsp + 0x20]	     10199	eval.c	FUNCTION_189	IF_1	CALL_2
0x4007d60	          0x4889df	                            mov rdi, rbx	     10199	eval.c	FUNCTION_189	IF_1	CALL_2
0x4007d63	      0xe85bfdffff	               call sym.eval_expr_typval	     10199	eval.c	FUNCTION_189	IF_1	CALL_2
0x4007d68	      0xbb00000000	                              mov ebx, 0	     10194	eval.c	FUNCTION_189
0x4007d6d	            0x85c0	                           test eax, eax	     10199	eval.c	FUNCTION_189	IF_1	CALL_2
0x4007d6f	            0x7464	                            je 0x4007dd5	     10199	eval.c	FUNCTION_189	IF_1	CALL_2
0x4007d71	          0x4585e4	                         test r12d, r12d	     10201	eval.c	FUNCTION_189	IF_2
0x4007d74	            0x7426	                            je 0x4007d9c	     10201	eval.c	FUNCTION_189	IF_2
0x4007d76	          0x4889ef	                            mov rdi, rbp	     10204	eval.c	FUNCTION_189	IF_2	CALL_3
0x4007d79	      0xe800000000	                          call 0x4007d7e	     10204	eval.c	FUNCTION_189	IF_2	CALL_3
0x4007d7e	      0xc644241400	                mov byte [rsp + 0x14], 0	     10205	eval.c	FUNCTION_189	IF_2
0x4007d83	      0x488b442410	            mov rax, qword [rsp + 0x10] 	     10206	eval.c	FUNCTION_189	IF_2
0x4007d88	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	     10206	eval.c	FUNCTION_189	IF_2
0x4007d8d	        0x48894500	                    mov qword [rbp], rax	     10206	eval.c	FUNCTION_189	IF_2
0x4007d91	        0x48895508	                mov qword [rbp + 8], rdx	     10206	eval.c	FUNCTION_189	IF_2
0x4007d95	      0xbb01000000	                              mov ebx, 1	     10220	eval.c	FUNCTION_189
0x4007d9a	            0xeb39	                           jmp 0x4007dd5	     10220	eval.c	FUNCTION_189
0x4007d9c	    0xc744240c0000	                mov dword [rsp + 0xc], 0	     10210	eval.c	FUNCTION_189	ELSE_1
0x4007da4	      0x488d74240c	                    lea rsi, [rsp + 0xc]	     10213	eval.c	FUNCTION_189	ELSE_1	CALL_4
0x4007da9	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	     10213	eval.c	FUNCTION_189	ELSE_1	CALL_4
0x4007dae	      0xe800000000	                          call 0x4007db3	     10213	eval.c	FUNCTION_189	ELSE_1	CALL_4
0x4007db3	          0x4885c0	                           test rax, rax	     10213	eval.c	FUNCTION_189	ELSE_1	CALL_4
0x4007db6	           0xf94c0	                                 sete al	     10213	eval.c	FUNCTION_189	ELSE_1	CALL_4
0x4007db9	           0xfb6c0	                           movzx eax, al	     10213	eval.c	FUNCTION_189	ELSE_1	CALL_4
0x4007dbc	        0x41894500	                    mov dword [r13], eax	     10213	eval.c	FUNCTION_189	ELSE_1	CALL_4
0x4007dc0	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	     10214	eval.c	FUNCTION_189	ELSE_1	CALL_5
0x4007dc5	      0xe800000000	                          call 0x4007dca	     10214	eval.c	FUNCTION_189	ELSE_1	CALL_5
0x4007dca	      0x837c240c00	                cmp dword [rsp + 0xc], 0	     10220	eval.c	FUNCTION_189
0x4007dcf	           0xf94c3	                                 sete bl	     10220	eval.c	FUNCTION_189
0x4007dd2	           0xfb6db	                           movzx ebx, bl	     10220	eval.c	FUNCTION_189
0x4007dd5	      0xbf00000000	                              mov edi, 0	     10222	eval.c	FUNCTION_189	CALL_6
0x4007dda	      0xe800000000	                          call 0x4007ddf	     10222	eval.c	FUNCTION_189	CALL_6
0x4007ddf	            0x89d8	                            mov eax, ebx	     10224	eval.c	FUNCTION_189
0x4007de1	      0x488b542458	            mov rdx, qword [rsp + 0x58] 	     10224	eval.c	FUNCTION_189
0x4007de6	    0x644833142528	                xor rdx, qword fs:[0x28]	     10224	eval.c	FUNCTION_189
0x4007def	            0x7405	                            je 0x4007df6	     10224	eval.c	FUNCTION_189
0x4007df1	      0xe800000000	                          call 0x4007df6	     10224	eval.c	FUNCTION_189
0x4007df6	        0x4883c468	                           add rsp, 0x68	     10224	eval.c	FUNCTION_189
0x4007dfa	              0x5b	                                 pop rbx	     10224	eval.c	FUNCTION_189
0x4007dfb	              0x5d	                                 pop rbp	     10224	eval.c	FUNCTION_189
0x4007dfc	            0x415c	                                 pop r12	     10224	eval.c	FUNCTION_189
0x4007dfe	            0x415d	                                 pop r13	     10224	eval.c	FUNCTION_189
0x4007e00	              0xc3	                                     ret	     10224	eval.c	FUNCTION_189
eval5	FOR,1:SWITCH,0:DO,0:IF,19:functions,0:WHILE,0:CALL,23:ELSE,7	237
0x400c8a9	            0x4157	                                push r15	      3624	eval.c	FUNCTION_68
0x400c8ab	            0x4156	                                push r14	      3624	eval.c	FUNCTION_68
0x400c8ad	            0x4155	                                push r13	      3624	eval.c	FUNCTION_68
0x400c8af	            0x4154	                                push r12	      3624	eval.c	FUNCTION_68
0x400c8b1	              0x55	                                push rbp	      3624	eval.c	FUNCTION_68
0x400c8b2	              0x53	                                push rbx	      3624	eval.c	FUNCTION_68
0x400c8b3	    0x4881ece80000	                           sub rsp, 0xe8	      3624	eval.c	FUNCTION_68
0x400c8ba	          0x4889fd	                            mov rbp, rdi	      3624	eval.c	FUNCTION_68
0x400c8bd	          0x4989f5	                            mov r13, rsi	      3624	eval.c	FUNCTION_68
0x400c8c0	          0x4189d4	                           mov r12d, edx	      3624	eval.c	FUNCTION_68
0x400c8c3	    0x64488b042528	                mov rax, qword fs:[0x28]	      3624	eval.c	FUNCTION_68
0x400c8cc	    0x48898424d800	             mov qword [rsp + 0xd8], rax	      3624	eval.c	FUNCTION_68
0x400c8d4	            0x31c0	                            xor eax, eax	      3624	eval.c	FUNCTION_68
0x400c8d6	      0xb900000000	                              mov ecx, 0	      3639	eval.c	FUNCTION_68	IF_1	CALL_1
0x400c8db	      0xe8f5fcffff	                          call sym.eval6	      3639	eval.c	FUNCTION_68	IF_1	CALL_1
0x400c8e0	            0x89c3	                            mov ebx, eax	      3639	eval.c	FUNCTION_68	IF_1	CALL_1
0x400c8e2	            0x85c0	                           test eax, eax	      3639	eval.c	FUNCTION_68	IF_1	CALL_1
0x400c8e4	     0xf84db020000	                            je 0x400cbc5	      3639	eval.c	FUNCTION_68	IF_1	CALL_1
0x400c8ea	    0x41be00000000	                             mov r14d, 0	      3639	eval.c	FUNCTION_68	IF_1	CALL_1
0x400c8f0	        0x4c893424	                    mov qword [rsp], r14	      3639	eval.c	FUNCTION_68	IF_1	CALL_1
0x400c8f4	        0x488b7d00	                    mov rdi, qword [rbp]	      3647	eval.c	FUNCTION_68	FOR_1
0x400c8f8	           0xfb607	                   movzx eax, byte [rdi]	      3647	eval.c	FUNCTION_68	FOR_1
0x400c8fb	           0xfb6d8	                           movzx ebx, al	      3647	eval.c	FUNCTION_68	FOR_1
0x400c8fe	          0x83e82d	                           sub eax, 0x2d	      3648	eval.c	FUNCTION_68	FOR_1	IF_2
0x400c901	            0x3c01	                               cmp al, 1	      3648	eval.c	FUNCTION_68	FOR_1	IF_2
0x400c903	            0x7609	                           jbe 0x400c90e	      3648	eval.c	FUNCTION_68	FOR_1	IF_2
0x400c905	          0x83fb2b	                           cmp ebx, 0x2b	      3648	eval.c	FUNCTION_68	FOR_1	IF_2
0x400c908	     0xf85b2020000	                           jne 0x400cbc0	      3648	eval.c	FUNCTION_68	FOR_1	IF_2
0x400c90e	          0x83fb2b	                           cmp ebx, 0x2b	      3651	eval.c	FUNCTION_68	FOR_1	IF_3
0x400c911	            0x7507	                           jne 0x400c91a	      3651	eval.c	FUNCTION_68	FOR_1	IF_3
0x400c913	      0x41837d0005	                      cmp dword [r13], 5	      3651	eval.c	FUNCTION_68	FOR_1	IF_3
0x400c918	            0x7438	                            je 0x400c952	      3651	eval.c	FUNCTION_68	FOR_1	IF_3
0x400c91a	          0x83fb2e	                           cmp ebx, 0x2e	      3653	eval.c	FUNCTION_68	FOR_1	IF_3
0x400c91d	            0x7407	                            je 0x400c926	      3653	eval.c	FUNCTION_68	FOR_1	IF_3
0x400c91f	      0x41837d0007	                      cmp dword [r13], 7	      3653	eval.c	FUNCTION_68	FOR_1	IF_3
0x400c924	            0x742c	                            je 0x400c952	      3653	eval.c	FUNCTION_68	FOR_1	IF_3
0x400c926	          0x4585e4	                         test r12d, r12d	      3664	eval.c	FUNCTION_68	FOR_1	IF_3	IF_4	CALL_2
0x400c929	     0xf84ea020000	                            je 0x400cc19	      3664	eval.c	FUNCTION_68	FOR_1	IF_3	IF_4	CALL_2
0x400c92f	          0x4c89ef	                            mov rdi, r13	      3664	eval.c	FUNCTION_68	FOR_1	IF_3	IF_4	CALL_2
0x400c932	      0xe800000000	                          call 0x400c937	      3664	eval.c	FUNCTION_68	FOR_1	IF_3	IF_4	CALL_2
0x400c937	          0x4885c0	                           test rax, rax	      3664	eval.c	FUNCTION_68	FOR_1	IF_3	IF_4	CALL_2
0x400c93a	     0xf85a0020000	                           jne 0x400cbe0	      3664	eval.c	FUNCTION_68	FOR_1	IF_3	IF_4	CALL_2
0x400c940	          0x4c89ef	                            mov rdi, r13	      3666	eval.c	FUNCTION_68	FOR_1	IF_3	IF_4	CALL_3
0x400c943	      0xe800000000	                          call 0x400c948	      3666	eval.c	FUNCTION_68	FOR_1	IF_3	IF_4	CALL_3
0x400c948	      0xbb00000000	                              mov ebx, 0	      3667	eval.c	FUNCTION_68	FOR_1	IF_3	IF_4
0x400c94d	      0xe973020000	                           jmp 0x400cbc5	      3667	eval.c	FUNCTION_68	FOR_1	IF_3	IF_4
0x400c952	        0x4883c701	                              add rdi, 1	      3674	eval.c	FUNCTION_68	FOR_1	CALL_4
0x400c956	      0xe800000000	                          call 0x400c95b	      3674	eval.c	FUNCTION_68	FOR_1	CALL_4
0x400c95b	        0x48894500	                    mov qword [rbp], rax	      3674	eval.c	FUNCTION_68	FOR_1	CALL_4
0x400c95f	          0x83fb2e	                           cmp ebx, 0x2e	      3675	eval.c	FUNCTION_68	FOR_1	IF_5	CALL_5
0x400c962	        0x410f94c7	                               sete r15b	      3675	eval.c	FUNCTION_68	FOR_1	IF_5	CALL_5
0x400c966	        0x410fb6cf	                         movzx ecx, r15b	      3675	eval.c	FUNCTION_68	FOR_1	IF_5	CALL_5
0x400c96a	          0x4489e2	                           mov edx, r12d	      3675	eval.c	FUNCTION_68	FOR_1	IF_5	CALL_5
0x400c96d	      0x488d742420	                   lea rsi, [rsp + 0x20]	      3675	eval.c	FUNCTION_68	FOR_1	IF_5	CALL_5
0x400c972	          0x4889ef	                            mov rdi, rbp	      3675	eval.c	FUNCTION_68	FOR_1	IF_5	CALL_5
0x400c975	      0xe85bfcffff	                          call sym.eval6	      3675	eval.c	FUNCTION_68	FOR_1	IF_5	CALL_5
0x400c97a	            0x85c0	                           test eax, eax	      3675	eval.c	FUNCTION_68	FOR_1	IF_5	CALL_5
0x400c97c	            0x7512	                           jne 0x400c990	      3675	eval.c	FUNCTION_68	FOR_1	IF_5	CALL_5
0x400c97e	          0x4c89ef	                            mov rdi, r13	      3677	eval.c	FUNCTION_68	FOR_1	IF_5	CALL_6
0x400c981	      0xe800000000	                          call 0x400c986	      3677	eval.c	FUNCTION_68	FOR_1	IF_5	CALL_6
0x400c986	      0xbb00000000	                              mov ebx, 0	      3678	eval.c	FUNCTION_68	FOR_1	IF_5
0x400c98b	      0xe935020000	                           jmp 0x400cbc5	      3678	eval.c	FUNCTION_68	FOR_1	IF_5
0x400c990	          0x4585e4	                         test r12d, r12d	      3681	eval.c	FUNCTION_68	FOR_1	IF_6
0x400c993	     0xf845bffffff	                            je 0x400c8f4	      3681	eval.c	FUNCTION_68	FOR_1	IF_6
0x400c999	          0x4584ff	                         test r15b, r15b	      3686	eval.c	FUNCTION_68	FOR_1	IF_6	IF_7
0x400c99c	            0x746a	                            je 0x400ca08	      3686	eval.c	FUNCTION_68	FOR_1	IF_6	IF_7
0x400c99e	      0x488d742440	                   lea rsi, [rsp + 0x40]	      3688	eval.c	FUNCTION_68	FOR_1	IF_6	IF_7	CALL_7
0x400c9a3	          0x4c89ef	                            mov rdi, r13	      3688	eval.c	FUNCTION_68	FOR_1	IF_6	IF_7	CALL_7
0x400c9a6	      0xe800000000	                          call 0x400c9ab	      3688	eval.c	FUNCTION_68	FOR_1	IF_6	IF_7	CALL_7
0x400c9ab	          0x4889c3	                            mov rbx, rax	      3688	eval.c	FUNCTION_68	FOR_1	IF_6	IF_7	CALL_7
0x400c9ae	    0x488db4249000	                   lea rsi, [rsp + 0x90]	      3689	eval.c	FUNCTION_68	FOR_1	IF_6	IF_7	CALL_8
0x400c9b6	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      3689	eval.c	FUNCTION_68	FOR_1	IF_6	IF_7	CALL_8
0x400c9bb	      0xe800000000	                          call 0x400c9c0	      3689	eval.c	FUNCTION_68	FOR_1	IF_6	IF_7	CALL_8
0x400c9c0	          0x4885c0	                           test rax, rax	      3690	eval.c	FUNCTION_68	FOR_1	IF_6	IF_7	IF_8
0x400c9c3	            0x751c	                           jne 0x400c9e1	      3690	eval.c	FUNCTION_68	FOR_1	IF_6	IF_7	IF_8
0x400c9c5	          0x4c89ef	                            mov rdi, r13	      3692	eval.c	FUNCTION_68	FOR_1	IF_6	IF_7	IF_8	CALL_9
0x400c9c8	      0xe800000000	                          call 0x400c9cd	      3692	eval.c	FUNCTION_68	FOR_1	IF_6	IF_7	IF_8	CALL_9
0x400c9cd	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      3693	eval.c	FUNCTION_68	FOR_1	IF_6	IF_7	IF_8	CALL_10
0x400c9d2	      0xe800000000	                          call 0x400c9d7	      3693	eval.c	FUNCTION_68	FOR_1	IF_6	IF_7	IF_8	CALL_10
0x400c9d7	      0xbb00000000	                              mov ebx, 0	      3694	eval.c	FUNCTION_68	FOR_1	IF_6	IF_7	IF_8
0x400c9dc	      0xe9e4010000	                           jmp 0x400cbc5	      3694	eval.c	FUNCTION_68	FOR_1	IF_6	IF_7	IF_8
0x400c9e1	          0x4889c6	                            mov rsi, rax	      3696	eval.c	FUNCTION_68	FOR_1	IF_6	IF_7	CALL_11
0x400c9e4	          0x4889df	                            mov rdi, rbx	      3696	eval.c	FUNCTION_68	FOR_1	IF_6	IF_7	CALL_11
0x400c9e7	      0xe800000000	                          call 0x400c9ec	      3696	eval.c	FUNCTION_68	FOR_1	IF_6	IF_7	CALL_11
0x400c9ec	          0x4889c3	                            mov rbx, rax	      3696	eval.c	FUNCTION_68	FOR_1	IF_6	IF_7	CALL_11
0x400c9ef	          0x4c89ef	                            mov rdi, r13	      3697	eval.c	FUNCTION_68	FOR_1	IF_6	IF_7	CALL_12
0x400c9f2	      0xe800000000	                          call 0x400c9f7	      3697	eval.c	FUNCTION_68	FOR_1	IF_6	IF_7	CALL_12
0x400c9f7	    0x41c745000200	                      mov dword [r13], 2	      3698	eval.c	FUNCTION_68	FOR_1	IF_6	IF_7
0x400c9ff	        0x49895d08	                mov qword [r13 + 8], rbx	      3699	eval.c	FUNCTION_68	FOR_1	IF_6	IF_7
0x400ca03	      0xe9a9010000	                           jmp 0x400cbb1	      3699	eval.c	FUNCTION_68	FOR_1	IF_6	IF_7
0x400ca08	          0x83fb2b	                           cmp ebx, 0x2b	      3701	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_1	IF_9
0x400ca0b	            0x7561	                           jne 0x400ca6e	      3701	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_1	IF_9
0x400ca0d	      0x41837d0005	                      cmp dword [r13], 5	      3701	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_1	IF_9
0x400ca12	            0x755a	                           jne 0x400ca6e	      3701	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_1	IF_9
0x400ca14	      0x837c242005	               cmp dword [rsp + 0x20], 5	      3702	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_1	IF_9
0x400ca19	     0xf852f020000	                           jne 0x400cc4e	      3702	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_1	IF_9
0x400ca1f	        0x498b7d08	                mov rdi, qword [r13 + 8]	      3705	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_1	IF_9	IF_10	CALL_13
0x400ca23	      0x488d542430	                   lea rdx, [rsp + 0x30]	      3705	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_1	IF_9	IF_10	CALL_13
0x400ca28	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      3705	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_1	IF_9	IF_10	CALL_13
0x400ca2d	      0xe800000000	                          call 0x400ca32	      3705	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_1	IF_9	IF_10	CALL_13
0x400ca32	            0x89c3	                            mov ebx, eax	      3705	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_1	IF_9	IF_10	CALL_13
0x400ca34	            0x85c0	                           test eax, eax	      3705	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_1	IF_9	IF_10	CALL_13
0x400ca36	            0x7517	                           jne 0x400ca4f	      3705	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_1	IF_9	IF_10	CALL_13
0x400ca38	          0x4c89ef	                            mov rdi, r13	      3708	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_1	IF_9	IF_10	CALL_14
0x400ca3b	      0xe800000000	                          call 0x400ca40	      3708	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_1	IF_9	IF_10	CALL_14
0x400ca40	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      3709	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_1	IF_9	IF_10	CALL_15
0x400ca45	      0xe800000000	                          call 0x400ca4a	      3709	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_1	IF_9	IF_10	CALL_15
0x400ca4a	      0xe976010000	                           jmp 0x400cbc5	      3710	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_1	IF_9	IF_10
0x400ca4f	          0x4c89ef	                            mov rdi, r13	      3712	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_1	IF_9	CALL_16
0x400ca52	      0xe800000000	                          call 0x400ca57	      3712	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_1	IF_9	CALL_16
0x400ca57	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      3713	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_1	IF_9
0x400ca5c	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	      3713	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_1	IF_9
0x400ca61	        0x49894500	                    mov qword [r13], rax	      3713	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_1	IF_9
0x400ca65	        0x49895508	                mov qword [r13 + 8], rdx	      3713	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_1	IF_9
0x400ca69	      0xe943010000	                           jmp 0x400cbb1	      3713	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_1	IF_9
0x400ca6e	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      3717	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2
0x400ca76	      0x41837d0007	                      cmp dword [r13], 7	      3720	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	IF_11
0x400ca7b	            0x751a	                           jne 0x400ca97	      3720	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	IF_11
0x400ca7d	    0xf2410f104508	            movsd xmm0, qword [r13 + 8] 	      3722	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	IF_11
0x400ca83	      0xf20f110424	                 movsd qword [rsp], xmm0	      3722	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	IF_11
0x400ca88	    0x41bf00000000	                             mov r15d, 0	      3723	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	IF_11
0x400ca8e	      0x837c242007	               cmp dword [rsp + 0x20], 7	      3743	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	IF_14
0x400ca93	            0x743b	                            je 0x400cad0	      3743	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	IF_14
0x400ca95	            0xeb49	                           jmp 0x400cae0	      3743	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	IF_14
0x400ca97	      0x488d74241c	                   lea rsi, [rsp + 0x1c]	      3728	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	ELSE_3	CALL_17
0x400ca9c	          0x4c89ef	                            mov rdi, r13	      3728	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	ELSE_3	CALL_17
0x400ca9f	      0xe800000000	                          call 0x400caa4	      3728	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	ELSE_3	CALL_17
0x400caa4	          0x4989c7	                            mov r15, rax	      3728	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	ELSE_3	CALL_17
0x400caa7	      0x837c241c00	               cmp dword [rsp + 0x1c], 0	      3729	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	ELSE_3	IF_12
0x400caac	            0x740d	                            je 0x400cabb	      3729	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	ELSE_3	IF_12
0x400caae	          0x4c89ef	                            mov rdi, r13	      3734	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	ELSE_3	IF_12	CALL_18
0x400cab1	      0xe800000000	                          call 0x400cab6	      3734	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	ELSE_3	IF_12	CALL_18
0x400cab6	      0xe9ef000000	                           jmp 0x400cbaa	      3735	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	ELSE_3	IF_12
0x400cabb	      0x837c242007	               cmp dword [rsp + 0x20], 7	      3738	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	ELSE_3	IF_13
0x400cac0	            0x751e	                           jne 0x400cae0	      3738	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	ELSE_3	IF_13
0x400cac2	        0x660fefed	                         pxor xmm5, xmm5	      3739	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	ELSE_3	IF_13
0x400cac6	      0xf2480f2ae8	                      cvtsi2sd xmm5, rax	      3739	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	ELSE_3	IF_13
0x400cacb	      0xf20f112c24	                 movsd qword [rsp], xmm5	      3739	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	ELSE_3	IF_13
0x400cad0	      0x4c8b742428	            mov r14, qword [rsp + 0x28] 	      3745	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	IF_14
0x400cad5	    0x48c744240800	                  mov qword [rsp + 8], 0	      3746	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	IF_14
0x400cade	            0xeb49	                           jmp 0x400cb29	      3746	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	IF_14
0x400cae0	      0x488d74241c	                   lea rsi, [rsp + 0x1c]	      3751	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	ELSE_4	CALL_19
0x400cae5	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      3751	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	ELSE_4	CALL_19
0x400caea	      0xe800000000	                          call 0x400caef	      3751	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	ELSE_4	CALL_19
0x400caef	      0x4889442408	                mov qword [rsp + 8], rax	      3751	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	ELSE_4	CALL_19
0x400caf4	      0x837c241c00	               cmp dword [rsp + 0x1c], 0	      3752	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	ELSE_4	IF_15
0x400caf9	            0x7417	                            je 0x400cb12	      3752	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	ELSE_4	IF_15
0x400cafb	          0x4c89ef	                            mov rdi, r13	      3754	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	ELSE_4	IF_15	CALL_20
0x400cafe	      0xe800000000	                          call 0x400cb03	      3754	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	ELSE_4	IF_15	CALL_20
0x400cb03	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      3755	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	ELSE_4	IF_15	CALL_21
0x400cb08	      0xe800000000	                          call 0x400cb0d	      3755	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	ELSE_4	IF_15	CALL_21
0x400cb0d	      0xe998000000	                           jmp 0x400cbaa	      3756	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	ELSE_4	IF_15
0x400cb12	      0x41837d0007	                      cmp dword [r13], 7	      3759	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	ELSE_4	IF_16
0x400cb17	            0x7510	                           jne 0x400cb29	      3759	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	ELSE_4	IF_16
0x400cb19	        0x660feff6	                         pxor xmm6, xmm6	      3760	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	ELSE_4	IF_16
0x400cb1d	    0xf2480f2a7424	          cvtsi2sd xmm6, qword [rsp + 8]	      3760	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	ELSE_4	IF_16
0x400cb24	      0x66490f7ef6	                          movq r14, xmm6	      3760	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	ELSE_4	IF_16
0x400cb29	          0x4c89ef	                            mov rdi, r13	      3763	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	CALL_22
0x400cb2c	      0xe800000000	                          call 0x400cb31	      3763	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	CALL_22
0x400cb31	      0x41837d0007	                      cmp dword [r13], 7	      3767	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	IF_17
0x400cb36	            0x7407	                            je 0x400cb3f	      3767	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	IF_17
0x400cb38	      0x837c242007	               cmp dword [rsp + 0x20], 7	      3767	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	IF_17
0x400cb3d	            0x7548	                           jne 0x400cb87	      3767	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	IF_17
0x400cb3f	          0x83fb2b	                           cmp ebx, 0x2b	      3769	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	IF_17	IF_18
0x400cb42	            0x7517	                           jne 0x400cb5b	      3769	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	IF_17	IF_18
0x400cb44	      0x4c89742408	                mov qword [rsp + 8], r14	      3770	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	IF_17	IF_18
0x400cb49	    0xf20f10642408	            movsd xmm4, qword [rsp + 8] 	      3770	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	IF_17	IF_18
0x400cb4f	      0xf20f582424	                 addsd xmm4, qword [rsp]	      3770	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	IF_17	IF_18
0x400cb54	      0xf20f112424	                 movsd qword [rsp], xmm4	      3770	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	IF_17	IF_18
0x400cb59	            0xeb17	                           jmp 0x400cb72	      3770	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	IF_17	IF_18
0x400cb5b	      0xf20f100c24	                 movsd xmm1, qword [rsp]	      3772	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	IF_17	ELSE_5
0x400cb60	        0x4c893424	                    mov qword [rsp], r14	      3772	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	IF_17	ELSE_5
0x400cb64	      0xf20f101c24	                 movsd xmm3, qword [rsp]	      3772	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	IF_17	ELSE_5
0x400cb69	        0xf20f5ccb	                        subsd xmm1, xmm3	      3772	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	IF_17	ELSE_5
0x400cb6d	      0xf20f110c24	                 movsd qword [rsp], xmm1	      3772	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	IF_17	ELSE_5
0x400cb72	    0x41c745000700	                      mov dword [r13], 7	      3773	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	IF_17
0x400cb7a	      0xf20f101424	                 movsd xmm2, qword [rsp]	      3774	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	IF_17
0x400cb7f	    0xf2410f115508	             movsd qword [r13 + 8], xmm2	      3774	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	IF_17
0x400cb85	            0xeb2a	                           jmp 0x400cbb1	      3774	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	IF_17
0x400cb87	      0x488b542408	                mov rdx, qword [rsp + 8]	      3780	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	ELSE_6	IF_19
0x400cb8c	          0x4889d0	                            mov rax, rdx	      3780	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	ELSE_6	IF_19
0x400cb8f	          0x4c01f8	                            add rax, r15	      3780	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	ELSE_6	IF_19
0x400cb92	          0x4929d7	                            sub r15, rdx	      3780	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	ELSE_6	IF_19
0x400cb95	          0x83fb2b	                           cmp ebx, 0x2b	      3780	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	ELSE_6	IF_19
0x400cb98	        0x490f45c7	                         cmovne rax, r15	      3780	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	ELSE_6	IF_19
0x400cb9c	    0x41c745000100	                      mov dword [r13], 1	      3783	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	ELSE_6
0x400cba4	        0x49894508	                mov qword [r13 + 8], rax	      3784	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	ELSE_6
0x400cba8	            0xeb07	                           jmp 0x400cbb1	      3784	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	ELSE_6
0x400cbaa	      0xbb00000000	                              mov ebx, 0	      3735	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	ELSE_3	IF_12
0x400cbaf	            0xeb14	                           jmp 0x400cbc5	      3735	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2	ELSE_3	IF_12
0x400cbb1	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      3787	eval.c	FUNCTION_68	FOR_1	IF_6	CALL_23
0x400cbb6	      0xe800000000	                          call 0x400cbbb	      3787	eval.c	FUNCTION_68	FOR_1	IF_6	CALL_23
0x400cbbb	      0xe934fdffff	                           jmp 0x400c8f4	      3787	eval.c	FUNCTION_68	FOR_1	IF_6	CALL_23
0x400cbc0	      0xbb01000000	                              mov ebx, 1	      3790	eval.c	FUNCTION_68
0x400cbc5	            0x89d8	                            mov eax, ebx	      3791	eval.c	FUNCTION_68
0x400cbc7	    0x488b9424d800	            mov rdx, qword [rsp + 0xd8] 	      3791	eval.c	FUNCTION_68
0x400cbcf	    0x644833142528	                xor rdx, qword fs:[0x28]	      3791	eval.c	FUNCTION_68
0x400cbd8	     0xf8482000000	                            je 0x400cc60	      3791	eval.c	FUNCTION_68
0x400cbde	            0xeb7b	                           jmp 0x400cc5b	      3791	eval.c	FUNCTION_68
0x400cbe0	        0x488b4500	                    mov rax, qword [rbp]	      3674	eval.c	FUNCTION_68	FOR_1	CALL_4
0x400cbe4	        0x488d7801	                      lea rdi, [rax + 1]	      3674	eval.c	FUNCTION_68	FOR_1	CALL_4
0x400cbe8	      0xe800000000	                          call 0x400cbed	      3674	eval.c	FUNCTION_68	FOR_1	CALL_4
0x400cbed	        0x48894500	                    mov qword [rbp], rax	      3674	eval.c	FUNCTION_68	FOR_1	CALL_4
0x400cbf1	          0x83fb2e	                           cmp ebx, 0x2e	      3675	eval.c	FUNCTION_68	FOR_1	IF_5	CALL_5
0x400cbf4	        0x410f94c7	                               sete r15b	      3675	eval.c	FUNCTION_68	FOR_1	IF_5	CALL_5
0x400cbf8	        0x410fb6cf	                         movzx ecx, r15b	      3675	eval.c	FUNCTION_68	FOR_1	IF_5	CALL_5
0x400cbfc	          0x4489e2	                           mov edx, r12d	      3675	eval.c	FUNCTION_68	FOR_1	IF_5	CALL_5
0x400cbff	      0x488d742420	                   lea rsi, [rsp + 0x20]	      3675	eval.c	FUNCTION_68	FOR_1	IF_5	CALL_5
0x400cc04	          0x4889ef	                            mov rdi, rbp	      3675	eval.c	FUNCTION_68	FOR_1	IF_5	CALL_5
0x400cc07	      0xe8c9f9ffff	                          call sym.eval6	      3675	eval.c	FUNCTION_68	FOR_1	IF_5	CALL_5
0x400cc0c	            0x85c0	                           test eax, eax	      3675	eval.c	FUNCTION_68	FOR_1	IF_5	CALL_5
0x400cc0e	     0xf846afdffff	                            je 0x400c97e	      3675	eval.c	FUNCTION_68	FOR_1	IF_5	CALL_5
0x400cc14	      0xe980fdffff	                           jmp 0x400c999	      3675	eval.c	FUNCTION_68	FOR_1	IF_5	CALL_5
0x400cc19	        0x4883c701	                              add rdi, 1	      3674	eval.c	FUNCTION_68	FOR_1	CALL_4
0x400cc1d	      0xe800000000	                          call 0x400cc22	      3674	eval.c	FUNCTION_68	FOR_1	CALL_4
0x400cc22	        0x48894500	                    mov qword [rbp], rax	      3674	eval.c	FUNCTION_68	FOR_1	CALL_4
0x400cc26	          0x83fb2e	                           cmp ebx, 0x2e	      3675	eval.c	FUNCTION_68	FOR_1	IF_5	CALL_5
0x400cc29	           0xf94c1	                                 sete cl	      3675	eval.c	FUNCTION_68	FOR_1	IF_5	CALL_5
0x400cc2c	           0xfb6c9	                           movzx ecx, cl	      3675	eval.c	FUNCTION_68	FOR_1	IF_5	CALL_5
0x400cc2f	      0xba00000000	                              mov edx, 0	      3675	eval.c	FUNCTION_68	FOR_1	IF_5	CALL_5
0x400cc34	      0x488d742420	                   lea rsi, [rsp + 0x20]	      3675	eval.c	FUNCTION_68	FOR_1	IF_5	CALL_5
0x400cc39	          0x4889ef	                            mov rdi, rbp	      3675	eval.c	FUNCTION_68	FOR_1	IF_5	CALL_5
0x400cc3c	      0xe894f9ffff	                          call sym.eval6	      3675	eval.c	FUNCTION_68	FOR_1	IF_5	CALL_5
0x400cc41	            0x85c0	                           test eax, eax	      3675	eval.c	FUNCTION_68	FOR_1	IF_5	CALL_5
0x400cc43	     0xf85abfcffff	                           jne 0x400c8f4	      3675	eval.c	FUNCTION_68	FOR_1	IF_5	CALL_5
0x400cc49	      0xe930fdffff	                           jmp 0x400c97e	      3675	eval.c	FUNCTION_68	FOR_1	IF_5	CALL_5
0x400cc4e	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      3717	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2
0x400cc56	      0xe93cfeffff	                           jmp 0x400ca97	      3717	eval.c	FUNCTION_68	FOR_1	IF_6	ELSE_2
0x400cc5b	      0xe800000000	                          call 0x400cc60	      3791	eval.c	FUNCTION_68
0x400cc60	    0x4881c4e80000	                           add rsp, 0xe8	      3791	eval.c	FUNCTION_68
0x400cc67	              0x5b	                                 pop rbx	      3791	eval.c	FUNCTION_68
0x400cc68	              0x5d	                                 pop rbp	      3791	eval.c	FUNCTION_68
0x400cc69	            0x415c	                                 pop r12	      3791	eval.c	FUNCTION_68
0x400cc6b	            0x415d	                                 pop r13	      3791	eval.c	FUNCTION_68
0x400cc6d	            0x415e	                                 pop r14	      3791	eval.c	FUNCTION_68
0x400cc6f	            0x415f	                                 pop r15	      3791	eval.c	FUNCTION_68
0x400cc71	              0xc3	                                     ret	      3791	eval.c	FUNCTION_68
assert_equal_common	FOR,0:SWITCH,0:DO,0:IF,1:functions,0:WHILE,0:CALL,5:ELSE,0	44
0x40069aa	            0x4154	                                push r12	      8820	eval.c	FUNCTION_170
0x40069ac	              0x55	                                push rbp	      8820	eval.c	FUNCTION_170
0x40069ad	              0x53	                                push rbx	      8820	eval.c	FUNCTION_170
0x40069ae	        0x4883ec20	                           sub rsp, 0x20	      8820	eval.c	FUNCTION_170
0x40069b2	          0x4889fb	                            mov rbx, rdi	      8820	eval.c	FUNCTION_170
0x40069b5	          0x4189f4	                           mov r12d, esi	      8820	eval.c	FUNCTION_170
0x40069b8	    0x64488b042528	                mov rax, qword fs:[0x28]	      8820	eval.c	FUNCTION_170
0x40069c1	      0x4889442418	             mov qword [rsp + 0x18], rax	      8820	eval.c	FUNCTION_170
0x40069c6	            0x31c0	                            xor eax, eax	      8820	eval.c	FUNCTION_170
0x40069c8	        0x488d6f10	                   lea rbp, [rdi + 0x10]	      8823	eval.c	FUNCTION_170	IF_1	CALL_1
0x40069cc	      0xb900000000	                              mov ecx, 0	      8823	eval.c	FUNCTION_170	IF_1	CALL_1
0x40069d1	      0xba00000000	                              mov edx, 0	      8823	eval.c	FUNCTION_170	IF_1	CALL_1
0x40069d6	          0x4889ee	                            mov rsi, rbp	      8823	eval.c	FUNCTION_170	IF_1	CALL_1
0x40069d9	      0xe800000000	                          call 0x40069de	      8823	eval.c	FUNCTION_170	IF_1	CALL_1
0x40069de	          0x4585e4	                         test r12d, r12d	      8823	eval.c	FUNCTION_170	IF_1	CALL_1
0x40069e1	           0xf94c1	                                 sete cl	      8823	eval.c	FUNCTION_170	IF_1	CALL_1
0x40069e4	           0xfb6c9	                           movzx ecx, cl	      8823	eval.c	FUNCTION_170	IF_1	CALL_1
0x40069e7	      0xba00000000	                              mov edx, 0	      8833	eval.c	FUNCTION_170
0x40069ec	            0x39c8	                            cmp eax, ecx	      8823	eval.c	FUNCTION_170	IF_1	CALL_1
0x40069ee	            0x7437	                            je 0x4006a27	      8823	eval.c	FUNCTION_170	IF_1	CALL_1
0x40069f0	          0x4889e7	                            mov rdi, rsp	      8826	eval.c	FUNCTION_170	IF_1	CALL_2
0x40069f3	      0xe800000000	                          call 0x40069f8	      8826	eval.c	FUNCTION_170	IF_1	CALL_2
0x40069f8	        0x488d7320	                   lea rsi, [rbx + 0x20]	      8827	eval.c	FUNCTION_170	IF_1	CALL_3
0x40069fc	          0x4589e1	                           mov r9d, r12d	      8827	eval.c	FUNCTION_170	IF_1	CALL_3
0x40069ff	          0x4989e8	                             mov r8, rbp	      8827	eval.c	FUNCTION_170	IF_1	CALL_3
0x4006a02	          0x4889d9	                            mov rcx, rbx	      8827	eval.c	FUNCTION_170	IF_1	CALL_3
0x4006a05	      0xba00000000	                              mov edx, 0	      8827	eval.c	FUNCTION_170	IF_1	CALL_3
0x4006a0a	          0x4889e7	                            mov rdi, rsp	      8827	eval.c	FUNCTION_170	IF_1	CALL_3
0x4006a0d	      0xe800000000	                          call 0x4006a12	      8827	eval.c	FUNCTION_170	IF_1	CALL_3
0x4006a12	          0x4889e7	                            mov rdi, rsp	      8829	eval.c	FUNCTION_170	IF_1	CALL_4
0x4006a15	      0xe800000000	                          call 0x4006a1a	      8829	eval.c	FUNCTION_170	IF_1	CALL_4
0x4006a1a	          0x4889e7	                            mov rdi, rsp	      8830	eval.c	FUNCTION_170	IF_1	CALL_5
0x4006a1d	      0xe800000000	                          call 0x4006a22	      8830	eval.c	FUNCTION_170	IF_1	CALL_5
0x4006a22	      0xba01000000	                              mov edx, 1	      8831	eval.c	FUNCTION_170	IF_1
0x4006a27	            0x89d0	                            mov eax, edx	      8834	eval.c	FUNCTION_170
0x4006a29	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      8834	eval.c	FUNCTION_170
0x4006a2e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      8834	eval.c	FUNCTION_170
0x4006a37	            0x7405	                            je 0x4006a3e	      8834	eval.c	FUNCTION_170
0x4006a39	      0xe800000000	                          call 0x4006a3e	      8834	eval.c	FUNCTION_170
0x4006a3e	        0x4883c420	                           add rsp, 0x20	      8834	eval.c	FUNCTION_170
0x4006a42	              0x5b	                                 pop rbx	      8834	eval.c	FUNCTION_170
0x4006a43	              0x5d	                                 pop rbp	      8834	eval.c	FUNCTION_170
0x4006a44	            0x415c	                                 pop r12	      8834	eval.c	FUNCTION_170
0x4006a46	              0xc3	                                     ret	      8834	eval.c	FUNCTION_170
get_vim_var_nr	FOR,0:SWITCH,0:DO,0:IF,0:functions,0:WHILE,0:CALL,0:ELSE,0	6
0x4001fb7	          0x4863ff	                         movsxd rdi, edi	      6394	eval.c	FUNCTION_103
0x4001fba	    0x488d04fd0000	                        lea rax, [rdi*8]	      6394	eval.c	FUNCTION_103
0x4001fc2	        0x48c1e706	                              shl rdi, 6	      6394	eval.c	FUNCTION_103
0x4001fc6	          0x4829c7	                            sub rdi, rax	      6394	eval.c	FUNCTION_103
0x4001fc9	    0x488b87000000	                    mov rax, qword [rdi]	      6394	eval.c	FUNCTION_103
0x4001fd0	              0xc3	                                     ret	      6395	eval.c	FUNCTION_103
call_vim_function	FOR,1:SWITCH,0:DO,0:IF,8:functions,0:WHILE,0:CALL,9:ELSE,2	161
0x400238f	            0x4157	                                push r15	      1026	eval.c	FUNCTION_26
0x4002391	            0x4156	                                push r14	      1026	eval.c	FUNCTION_26
0x4002393	            0x4155	                                push r13	      1026	eval.c	FUNCTION_26
0x4002395	            0x4154	                                push r12	      1026	eval.c	FUNCTION_26
0x4002397	              0x55	                                push rbp	      1026	eval.c	FUNCTION_26
0x4002398	              0x53	                                push rbx	      1026	eval.c	FUNCTION_26
0x4002399	        0x4883ec48	                           sub rsp, 0x48	      1026	eval.c	FUNCTION_26
0x400239d	      0x48897c2408	                mov qword [rsp + 8], rdi	      1026	eval.c	FUNCTION_26
0x40023a2	          0x4189f7	                           mov r15d, esi	      1026	eval.c	FUNCTION_26
0x40023a5	          0x4989d4	                            mov r12, rdx	      1026	eval.c	FUNCTION_26
0x40023a8	        0x894c241c	             mov dword [rsp + 0x1c], ecx	      1026	eval.c	FUNCTION_26
0x40023ac	          0x4589c6	                           mov r14d, r8d	      1026	eval.c	FUNCTION_26
0x40023af	      0x4c894c2410	              mov qword [rsp + 0x10], r9	      1026	eval.c	FUNCTION_26
0x40023b4	    0x64488b042528	                mov rax, qword fs:[0x28]	      1026	eval.c	FUNCTION_26
0x40023bd	      0x4889442438	             mov qword [rsp + 0x38], rax	      1026	eval.c	FUNCTION_26
0x40023c2	            0x31c0	                            xor eax, eax	      1026	eval.c	FUNCTION_26
0x40023c4	          0x8d7e01	                      lea edi, [rsi + 1]	      1035	eval.c	FUNCTION_26	CALL_1
0x40023c7	          0xc1e704	                              shl edi, 4	      1035	eval.c	FUNCTION_26	CALL_1
0x40023ca	      0xe800000000	                          call 0x40023cf	      1035	eval.c	FUNCTION_26	CALL_1
0x40023cf	        0x48890424	                    mov qword [rsp], rax	      1035	eval.c	FUNCTION_26	CALL_1
0x40023d3	          0x4885c0	                           test rax, rax	      1036	eval.c	FUNCTION_26	IF_1
0x40023d6	     0xf8488010000	                            je 0x4002564	      1036	eval.c	FUNCTION_26	IF_1
0x40023dc	          0x4585ff	                         test r15d, r15d	      1039	eval.c	FUNCTION_26	FOR_1
0x40023df	     0xf8eda000000	                           jle 0x40024bf	      1039	eval.c	FUNCTION_26	FOR_1
0x40023e5	          0x4c89e3	                            mov rbx, r12	      1039	eval.c	FUNCTION_26	FOR_1
0x40023e8	        0x488d6808	                      lea rbp, [rax + 8]	      1039	eval.c	FUNCTION_26	FOR_1
0x40023ec	        0x418d47ff	                      lea eax, [r15 - 1]	      1039	eval.c	FUNCTION_26	FOR_1
0x40023f0	      0x4d8d6cc408	              lea r13, [r12 + rax*8 + 8]	      1039	eval.c	FUNCTION_26	FOR_1
0x40023f5	          0x4989dc	                            mov r12, rbx	      1039	eval.c	FUNCTION_26	FOR_1
0x40023f8	          0x488b3b	                    mov rdi, qword [rbx]	      1042	eval.c	FUNCTION_26	FOR_1	IF_2
0x40023fb	          0x4885ff	                           test rdi, rdi	      1042	eval.c	FUNCTION_26	FOR_1	IF_2
0x40023fe	            0x7405	                            je 0x4002405	      1042	eval.c	FUNCTION_26	FOR_1	IF_2
0x4002400	          0x803f00	                       cmp byte [rdi], 0	      1042	eval.c	FUNCTION_26	FOR_1	IF_2
0x4002403	            0x7514	                           jne 0x4002419	      1042	eval.c	FUNCTION_26	FOR_1	IF_2
0x4002405	    0xc745f8020000	                  mov dword [rbp - 8], 2	      1044	eval.c	FUNCTION_26	FOR_1	IF_2
0x400240c	    0x48c745000000	                      mov qword [rbp], 0	      1045	eval.c	FUNCTION_26	FOR_1	IF_2
0x4002414	      0xe995000000	                           jmp 0x40024ae	      1046	eval.c	FUNCTION_26	FOR_1	IF_2
0x4002419	          0x4585f6	                         test r14d, r14d	      1049	eval.c	FUNCTION_26	FOR_1	IF_3
0x400241c	            0x740a	                            je 0x4002428	      1049	eval.c	FUNCTION_26	FOR_1	IF_3
0x400241e	    0xc74424280000	               mov dword [rsp + 0x28], 0	      1050	eval.c	FUNCTION_26	FOR_1	IF_3
0x4002426	            0xeb77	                           jmp 0x400249f	      1050	eval.c	FUNCTION_26	FOR_1	IF_3
0x4002428	        0x4883ec08	                              sub rsp, 8	      1055	eval.c	FUNCTION_26	FOR_1	ELSE_1	CALL_2
0x400242c	            0x6a00	                                  push 0	      1055	eval.c	FUNCTION_26	FOR_1	ELSE_1	CALL_2
0x400242e	    0x41b900000000	                              mov r9d, 0	      1055	eval.c	FUNCTION_26	FOR_1	ELSE_1	CALL_2
0x4002434	      0x4c8d442440	                    lea r8, [rsp + 0x40]	      1055	eval.c	FUNCTION_26	FOR_1	ELSE_1	CALL_2
0x4002439	      0xb907000000	                              mov ecx, 7	      1055	eval.c	FUNCTION_26	FOR_1	ELSE_1	CALL_2
0x400243e	      0x488d542438	                   lea rdx, [rsp + 0x38]	      1055	eval.c	FUNCTION_26	FOR_1	ELSE_1	CALL_2
0x4002443	      0xbe00000000	                              mov esi, 0	      1055	eval.c	FUNCTION_26	FOR_1	ELSE_1	CALL_2
0x4002448	      0xe800000000	                          call 0x400244d	      1055	eval.c	FUNCTION_26	FOR_1	ELSE_1	CALL_2
0x400244d	        0x8b542438	            mov edx, dword [rsp + 0x38] 	      1056	eval.c	FUNCTION_26	FOR_1	ELSE_1	IF_4
0x4002451	        0x4883c410	                           add rsp, 0x10	      1056	eval.c	FUNCTION_26	FOR_1	ELSE_1	IF_4
0x4002455	          0x83fa01	                              cmp edx, 1	      1056	eval.c	FUNCTION_26	FOR_1	ELSE_1	IF_4
0x4002458	            0x7512	                           jne 0x400246c	      1056	eval.c	FUNCTION_26	FOR_1	ELSE_1	IF_4
0x400245a	          0x488b03	                    mov rax, qword [rbx]	      1056	eval.c	FUNCTION_26	FOR_1	ELSE_1	IF_4
0x400245d	          0x80382d	                    cmp byte [rax], 0x2d	      1056	eval.c	FUNCTION_26	FOR_1	ELSE_1	IF_4
0x4002460	            0x750e	                           jne 0x4002470	      1056	eval.c	FUNCTION_26	FOR_1	ELSE_1	IF_4
0x4002462	    0xc74424280000	               mov dword [rsp + 0x28], 0	      1057	eval.c	FUNCTION_26	FOR_1	ELSE_1	IF_4
0x400246a	            0xeb33	                           jmp 0x400249f	      1057	eval.c	FUNCTION_26	FOR_1	ELSE_1	IF_4
0x400246c	            0x85d2	                           test edx, edx	      1059	eval.c	FUNCTION_26	FOR_1	IF_5	CALL_3
0x400246e	            0x742f	                            je 0x400249f	      1059	eval.c	FUNCTION_26	FOR_1	IF_5	CALL_3
0x4002470	        0x498b3c24	                    mov rdi, qword [r12]	      1059	eval.c	FUNCTION_26	FOR_1	IF_5	CALL_3
0x4002474	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1059	eval.c	FUNCTION_26	FOR_1	IF_5	CALL_3
0x400247b	      0xb800000000	                              mov eax, 0	      1059	eval.c	FUNCTION_26	FOR_1	IF_5	CALL_3
0x4002480	            0xf2ae	              repne scasb al, byte [rdi]	      1059	eval.c	FUNCTION_26	FOR_1	IF_5	CALL_3
0x4002482	          0x48f7d1	                                 not rcx	      1059	eval.c	FUNCTION_26	FOR_1	IF_5	CALL_3
0x4002485	        0x4883e901	                              sub rcx, 1	      1059	eval.c	FUNCTION_26	FOR_1	IF_5	CALL_3
0x4002489	            0x39ca	                            cmp edx, ecx	      1059	eval.c	FUNCTION_26	FOR_1	IF_5	CALL_3
0x400248b	            0x7512	                           jne 0x400249f	      1059	eval.c	FUNCTION_26	FOR_1	IF_5	CALL_3
0x400248d	    0xc745f8010000	                  mov dword [rbp - 8], 1	      1061	eval.c	FUNCTION_26	FOR_1	IF_5
0x4002494	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      1062	eval.c	FUNCTION_26	FOR_1	IF_5
0x4002499	        0x48894500	                    mov qword [rbp], rax	      1062	eval.c	FUNCTION_26	FOR_1	IF_5
0x400249d	            0xeb0f	                           jmp 0x40024ae	      1062	eval.c	FUNCTION_26	FOR_1	IF_5
0x400249f	    0xc745f8020000	                  mov dword [rbp - 8], 2	      1066	eval.c	FUNCTION_26	FOR_1	ELSE_2
0x40024a6	        0x498b0424	                    mov rax, qword [r12]	      1067	eval.c	FUNCTION_26	FOR_1	ELSE_2
0x40024aa	        0x48894500	                    mov qword [rbp], rax	      1067	eval.c	FUNCTION_26	FOR_1	ELSE_2
0x40024ae	        0x4883c308	                              add rbx, 8	      1067	eval.c	FUNCTION_26	FOR_1	ELSE_2
0x40024b2	        0x4883c510	                           add rbp, 0x10	      1067	eval.c	FUNCTION_26	FOR_1	ELSE_2
0x40024b6	          0x4c39eb	                            cmp rbx, r13	      1039	eval.c	FUNCTION_26	FOR_1
0x40024b9	     0xf8536ffffff	                           jne 0x40023f5	      1039	eval.c	FUNCTION_26	FOR_1
0x40024bf	      0x837c241c00	               cmp dword [rsp + 0x1c], 0	      1071	eval.c	FUNCTION_26	IF_6
0x40024c4	     0xf84b1000000	                            je 0x400257b	      1071	eval.c	FUNCTION_26	IF_6
0x40024ca	      0xe800000000	                          call 0x40024cf	      1073	eval.c	FUNCTION_26	IF_6	CALL_4
0x40024cf	          0x4889c5	                            mov rbp, rax	      1073	eval.c	FUNCTION_26	IF_6	CALL_4
0x40024d2	    0x830500000000	               add dword [0x040024d9], 1	      1074	eval.c	FUNCTION_26	IF_6
0x40024d9	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      1077	eval.c	FUNCTION_26
0x40024de	    0xc70300000000	                      mov dword [rbx], 0	      1077	eval.c	FUNCTION_26
0x40024e4	    0x488b05000000	            mov rax, qword [0x040024eb] 	      1078	eval.c	FUNCTION_26	CALL_6
0x40024eb	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      1078	eval.c	FUNCTION_26	CALL_6
0x40024ef	      0xb800000000	                              mov eax, 0	      1078	eval.c	FUNCTION_26	CALL_6
0x40024f4	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1078	eval.c	FUNCTION_26	CALL_6
0x40024fb	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1078	eval.c	FUNCTION_26	CALL_6
0x4002500	            0xf2ae	              repne scasb al, byte [rdi]	      1078	eval.c	FUNCTION_26	CALL_6
0x4002502	          0x48f7d1	                                 not rcx	      1078	eval.c	FUNCTION_26	CALL_6
0x4002505	        0x488d71ff	                      lea rsi, [rcx - 1]	      1078	eval.c	FUNCTION_26	CALL_6
0x4002509	            0x6a00	                                  push 0	      1078	eval.c	FUNCTION_26	CALL_6
0x400250b	            0x6a00	                                  push 0	      1078	eval.c	FUNCTION_26	CALL_6
0x400250d	            0x6a01	                                  push 1	      1078	eval.c	FUNCTION_26	CALL_6
0x400250f	      0x488d442444	                   lea rax, [rsp + 0x44]	      1078	eval.c	FUNCTION_26	CALL_6
0x4002514	              0x50	                                push rax	      1078	eval.c	FUNCTION_26	CALL_6
0x4002515	              0x52	                                push rdx	      1078	eval.c	FUNCTION_26	CALL_6
0x4002516	              0x52	                                push rdx	      1078	eval.c	FUNCTION_26	CALL_6
0x4002517	    0x41b900000000	                              mov r9d, 0	      1078	eval.c	FUNCTION_26	CALL_6
0x400251d	      0x4c8b442430	              mov r8, qword [rsp + 0x30]	      1078	eval.c	FUNCTION_26	CALL_6
0x4002522	          0x4489f9	                           mov ecx, r15d	      1078	eval.c	FUNCTION_26	CALL_6
0x4002525	          0x4889da	                            mov rdx, rbx	      1078	eval.c	FUNCTION_26	CALL_6
0x4002528	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      1078	eval.c	FUNCTION_26	CALL_6
0x400252d	      0xe800000000	                          call 0x4002532	      1078	eval.c	FUNCTION_26	CALL_6
0x4002532	            0x89c3	                            mov ebx, eax	      1078	eval.c	FUNCTION_26	CALL_6
0x4002534	    0x832d00000000	               sub dword [0x0400253b], 1	      1083	eval.c	FUNCTION_26	IF_7
0x400253b	        0x4883c430	                           add rsp, 0x30	      1084	eval.c	FUNCTION_26	IF_7	CALL_7
0x400253f	          0x4889ef	                            mov rdi, rbp	      1084	eval.c	FUNCTION_26	IF_7	CALL_7
0x4002542	      0xe800000000	                          call 0x4002547	      1084	eval.c	FUNCTION_26	IF_7	CALL_7
0x4002547	        0x488b3c24	                    mov rdi, qword [rsp]	      1086	eval.c	FUNCTION_26	CALL_8
0x400254b	      0xe800000000	                          call 0x4002550	      1086	eval.c	FUNCTION_26	CALL_8
0x4002550	            0x89d8	                            mov eax, ebx	      1086	eval.c	FUNCTION_26	CALL_8
0x4002552	            0x85db	                           test ebx, ebx	      1088	eval.c	FUNCTION_26	IF_8
0x4002554	            0x7513	                           jne 0x4002569	      1088	eval.c	FUNCTION_26	IF_8
0x4002556	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1089	eval.c	FUNCTION_26	CALL_9
0x400255b	      0xe800000000	                          call 0x4002560	      1089	eval.c	FUNCTION_26	CALL_9
0x4002560	            0x89d8	                            mov eax, ebx	      1091	eval.c	FUNCTION_26
0x4002562	            0xeb05	                           jmp 0x4002569	      1091	eval.c	FUNCTION_26
0x4002564	      0xb800000000	                              mov eax, 0	      1037	eval.c	FUNCTION_26	IF_1
0x4002569	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	      1092	eval.c	FUNCTION_26
0x400256e	    0x644833342528	                xor rsi, qword fs:[0x28]	      1092	eval.c	FUNCTION_26
0x4002577	            0x746b	                            je 0x40025e4	      1092	eval.c	FUNCTION_26
0x4002579	            0xeb64	                           jmp 0x40025df	      1092	eval.c	FUNCTION_26
0x400257b	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      1077	eval.c	FUNCTION_26
0x4002580	    0xc70300000000	                      mov dword [rbx], 0	      1077	eval.c	FUNCTION_26
0x4002586	    0x488b05000000	            mov rax, qword [0x0400258d] 	      1078	eval.c	FUNCTION_26	CALL_6
0x400258d	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      1078	eval.c	FUNCTION_26	CALL_6
0x4002591	      0xb800000000	                              mov eax, 0	      1078	eval.c	FUNCTION_26	CALL_6
0x4002596	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1078	eval.c	FUNCTION_26	CALL_6
0x400259d	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1078	eval.c	FUNCTION_26	CALL_6
0x40025a2	            0xf2ae	              repne scasb al, byte [rdi]	      1078	eval.c	FUNCTION_26	CALL_6
0x40025a4	          0x48f7d1	                                 not rcx	      1078	eval.c	FUNCTION_26	CALL_6
0x40025a7	        0x488d71ff	                      lea rsi, [rcx - 1]	      1078	eval.c	FUNCTION_26	CALL_6
0x40025ab	            0x6a00	                                  push 0	      1078	eval.c	FUNCTION_26	CALL_6
0x40025ad	            0x6a00	                                  push 0	      1078	eval.c	FUNCTION_26	CALL_6
0x40025af	            0x6a01	                                  push 1	      1078	eval.c	FUNCTION_26	CALL_6
0x40025b1	      0x488d442444	                   lea rax, [rsp + 0x44]	      1078	eval.c	FUNCTION_26	CALL_6
0x40025b6	              0x50	                                push rax	      1078	eval.c	FUNCTION_26	CALL_6
0x40025b7	              0x52	                                push rdx	      1078	eval.c	FUNCTION_26	CALL_6
0x40025b8	              0x52	                                push rdx	      1078	eval.c	FUNCTION_26	CALL_6
0x40025b9	    0x41b900000000	                              mov r9d, 0	      1078	eval.c	FUNCTION_26	CALL_6
0x40025bf	      0x4c8b442430	              mov r8, qword [rsp + 0x30]	      1078	eval.c	FUNCTION_26	CALL_6
0x40025c4	          0x4489f9	                           mov ecx, r15d	      1078	eval.c	FUNCTION_26	CALL_6
0x40025c7	          0x4889da	                            mov rdx, rbx	      1078	eval.c	FUNCTION_26	CALL_6
0x40025ca	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      1078	eval.c	FUNCTION_26	CALL_6
0x40025cf	      0xe800000000	                          call 0x40025d4	      1078	eval.c	FUNCTION_26	CALL_6
0x40025d4	            0x89c3	                            mov ebx, eax	      1078	eval.c	FUNCTION_26	CALL_6
0x40025d6	        0x4883c430	                           add rsp, 0x30	      1078	eval.c	FUNCTION_26	CALL_6
0x40025da	      0xe968ffffff	                           jmp 0x4002547	      1078	eval.c	FUNCTION_26	CALL_6
0x40025df	      0xe800000000	                          call 0x40025e4	      1092	eval.c	FUNCTION_26
0x40025e4	        0x4883c448	                           add rsp, 0x48	      1092	eval.c	FUNCTION_26
0x40025e8	              0x5b	                                 pop rbx	      1092	eval.c	FUNCTION_26
0x40025e9	              0x5d	                                 pop rbp	      1092	eval.c	FUNCTION_26
0x40025ea	            0x415c	                                 pop r12	      1092	eval.c	FUNCTION_26
0x40025ec	            0x415d	                                 pop r13	      1092	eval.c	FUNCTION_26
0x40025ee	            0x415e	                                 pop r14	      1092	eval.c	FUNCTION_26
0x40025f0	            0x415f	                                 pop r15	      1092	eval.c	FUNCTION_26
0x40025f2	              0xc3	                                     ret	      1092	eval.c	FUNCTION_26
get_vim_var_list	FOR,0:SWITCH,0:DO,0:IF,0:functions,0:WHILE,0:CALL,0:ELSE,0	6
0x4001fd1	          0x4863ff	                         movsxd rdi, edi	      6415	eval.c	FUNCTION_105
0x4001fd4	    0x488d04fd0000	                        lea rax, [rdi*8]	      6415	eval.c	FUNCTION_105
0x4001fdc	        0x48c1e706	                              shl rdi, 6	      6415	eval.c	FUNCTION_105
0x4001fe0	          0x4829c7	                            sub rdi, rax	      6415	eval.c	FUNCTION_105
0x4001fe3	    0x488b87000000	                    mov rax, qword [rdi]	      6415	eval.c	FUNCTION_105
0x4001fea	              0xc3	                                     ret	      6416	eval.c	FUNCTION_105
var_check_ro	FOR,0:SWITCH,0:DO,0:IF,2:functions,0:WHILE,0:CALL,6:ELSE,0	42
0x4004494	              0x53	                                push rbx	      7634	eval.c	FUNCTION_144
0x4004495	        0x40f6c701	                             test dil, 1	      7635	eval.c	FUNCTION_144	IF_1
0x4004499	            0x743f	                            je 0x40044da	      7635	eval.c	FUNCTION_144	IF_1
0x400449b	          0x4889f3	                            mov rbx, rsi	      7637	eval.c	FUNCTION_144	IF_1	CALL_3
0x400449e	            0x85d2	                           test edx, edx	      7637	eval.c	FUNCTION_144	IF_1	CALL_3
0x40044a0	            0x7412	                            je 0x40044b4	      7637	eval.c	FUNCTION_144	IF_1	CALL_3
0x40044a2	      0xba05000000	                              mov edx, 5	      7637	eval.c	FUNCTION_144	IF_1	CALL_3
0x40044a7	      0xbf00000000	                              mov edi, 0	      7637	eval.c	FUNCTION_144	IF_1	CALL_3
0x40044ac	      0xe800000000	                          call 0x40044b1	      7637	eval.c	FUNCTION_144	IF_1	CALL_3
0x40044b1	          0x4889c3	                            mov rbx, rax	      7637	eval.c	FUNCTION_144	IF_1	CALL_3
0x40044b4	      0xba05000000	                              mov edx, 5	      7637	eval.c	FUNCTION_144	IF_1	CALL_3
0x40044b9	      0xbe00000000	                              mov esi, 0	      7637	eval.c	FUNCTION_144	IF_1	CALL_3
0x40044be	      0xbf00000000	                              mov edi, 0	      7637	eval.c	FUNCTION_144	IF_1	CALL_3
0x40044c3	      0xe800000000	                          call 0x40044c8	      7637	eval.c	FUNCTION_144	IF_1	CALL_3
0x40044c8	          0x4889de	                            mov rsi, rbx	      7637	eval.c	FUNCTION_144	IF_1	CALL_3
0x40044cb	          0x4889c7	                            mov rdi, rax	      7637	eval.c	FUNCTION_144	IF_1	CALL_3
0x40044ce	      0xe800000000	                          call 0x40044d3	      7637	eval.c	FUNCTION_144	IF_1	CALL_3
0x40044d3	      0xb801000000	                              mov eax, 1	      7638	eval.c	FUNCTION_144	IF_1
0x40044d8	            0xeb4e	                           jmp 0x4004528	      7638	eval.c	FUNCTION_144	IF_1
0x40044da	            0x89f8	                            mov eax, edi	      7640	eval.c	FUNCTION_144	IF_2
0x40044dc	          0x83e002	                              and eax, 2	      7640	eval.c	FUNCTION_144	IF_2
0x40044df	            0x7447	                            je 0x4004528	      7640	eval.c	FUNCTION_144	IF_2
0x40044e1	    0x8b0500000000	            mov eax, dword [0x040044e7] 	      7640	eval.c	FUNCTION_144	IF_2
0x40044e7	            0x85c0	                           test eax, eax	      7640	eval.c	FUNCTION_144	IF_2
0x40044e9	            0x743d	                            je 0x4004528	      7640	eval.c	FUNCTION_144	IF_2
0x40044eb	          0x4889f3	                            mov rbx, rsi	      7642	eval.c	FUNCTION_144	IF_2	CALL_6
0x40044ee	            0x85d2	                           test edx, edx	      7642	eval.c	FUNCTION_144	IF_2	CALL_6
0x40044f0	            0x7412	                            je 0x4004504	      7642	eval.c	FUNCTION_144	IF_2	CALL_6
0x40044f2	      0xba05000000	                              mov edx, 5	      7642	eval.c	FUNCTION_144	IF_2	CALL_6
0x40044f7	      0xbf00000000	                              mov edi, 0	      7642	eval.c	FUNCTION_144	IF_2	CALL_6
0x40044fc	      0xe800000000	                          call 0x4004501	      7642	eval.c	FUNCTION_144	IF_2	CALL_6
0x4004501	          0x4889c3	                            mov rbx, rax	      7642	eval.c	FUNCTION_144	IF_2	CALL_6
0x4004504	      0xba05000000	                              mov edx, 5	      7642	eval.c	FUNCTION_144	IF_2	CALL_6
0x4004509	      0xbe00000000	                              mov esi, 0	      7642	eval.c	FUNCTION_144	IF_2	CALL_6
0x400450e	      0xbf00000000	                              mov edi, 0	      7642	eval.c	FUNCTION_144	IF_2	CALL_6
0x4004513	      0xe800000000	                          call 0x4004518	      7642	eval.c	FUNCTION_144	IF_2	CALL_6
0x4004518	          0x4889de	                            mov rsi, rbx	      7642	eval.c	FUNCTION_144	IF_2	CALL_6
0x400451b	          0x4889c7	                            mov rdi, rax	      7642	eval.c	FUNCTION_144	IF_2	CALL_6
0x400451e	      0xe800000000	                          call 0x4004523	      7642	eval.c	FUNCTION_144	IF_2	CALL_6
0x4004523	      0xb801000000	                              mov eax, 1	      7643	eval.c	FUNCTION_144	IF_2
0x4004528	              0x5b	                                 pop rbx	      7646	eval.c	FUNCTION_144
0x4004529	              0xc3	                                     ret	      7646	eval.c	FUNCTION_144
find_name_end	FOR,3:SWITCH,0:DO,0:IF,17:functions,0:WHILE,0:CALL,6:ELSE,4	180
0x4001c25	            0x4157	                                push r15	      6215	eval.c	FUNCTION_98
0x4001c27	            0x4156	                                push r14	      6215	eval.c	FUNCTION_98
0x4001c29	            0x4155	                                push r13	      6215	eval.c	FUNCTION_98
0x4001c2b	            0x4154	                                push r12	      6215	eval.c	FUNCTION_98
0x4001c2d	              0x55	                                push rbp	      6215	eval.c	FUNCTION_98
0x4001c2e	              0x53	                                push rbx	      6215	eval.c	FUNCTION_98
0x4001c2f	        0x4883ec18	                           sub rsp, 0x18	      6215	eval.c	FUNCTION_98
0x4001c33	        0x48893c24	                    mov qword [rsp], rdi	      6215	eval.c	FUNCTION_98
0x4001c37	          0x4989f6	                            mov r14, rsi	      6215	eval.c	FUNCTION_98
0x4001c3a	      0x4889542408	                mov qword [rsp + 8], rdx	      6215	eval.c	FUNCTION_98
0x4001c3f	          0x4189cf	                           mov r15d, ecx	      6215	eval.c	FUNCTION_98
0x4001c42	          0x4885f6	                           test rsi, rsi	      6221	eval.c	FUNCTION_98	IF_1
0x4001c45	            0x740e	                            je 0x4001c55	      6221	eval.c	FUNCTION_98	IF_1
0x4001c47	    0x48c706000000	                      mov qword [rsi], 0	      6223	eval.c	FUNCTION_98	IF_1
0x4001c4e	    0x48c702000000	                      mov qword [rdx], 0	      6224	eval.c	FUNCTION_98	IF_1
0x4001c55	        0x41f6c702	                            test r15b, 2	      6228	eval.c	FUNCTION_98	IF_2	CALL_1
0x4001c59	            0x741d	                            je 0x4001c78	      6228	eval.c	FUNCTION_98	IF_2	CALL_1
0x4001c5b	        0x488b2c24	                    mov rbp, qword [rsp]	      6228	eval.c	FUNCTION_98	IF_2	CALL_1
0x4001c5f	         0xfb65d00	                   movzx ebx, byte [rbp]	      6228	eval.c	FUNCTION_98	IF_2	CALL_1
0x4001c63	           0xfb6fb	                           movzx edi, bl	      6228	eval.c	FUNCTION_98	IF_2	CALL_1
0x4001c66	      0xe800000000	                          call 0x4001c6b	      6228	eval.c	FUNCTION_98	IF_2	CALL_1
0x4001c6b	            0x85c0	                           test eax, eax	      6228	eval.c	FUNCTION_98	IF_2	CALL_1
0x4001c6d	            0x7509	                           jne 0x4001c78	      6228	eval.c	FUNCTION_98	IF_2	CALL_1
0x4001c6f	          0x80fb7b	                            cmp bl, 0x7b	      6228	eval.c	FUNCTION_98	IF_2	CALL_1
0x4001c72	     0xf85d8010000	                           jne 0x4001e50	      6228	eval.c	FUNCTION_98	IF_2	CALL_1
0x4001c78	        0x488b0424	                    mov rax, qword [rsp]	      6231	eval.c	FUNCTION_98	FOR_1
0x4001c7c	           0xfb618	                   movzx ebx, byte [rax]	      6231	eval.c	FUNCTION_98	FOR_1
0x4001c7f	            0x84db	                             test bl, bl	      6231	eval.c	FUNCTION_98	FOR_1
0x4001c81	     0xf8579010000	                           jne 0x4001e00	      6231	eval.c	FUNCTION_98	FOR_1
0x4001c87	          0x4889c5	                            mov rbp, rax	      6231	eval.c	FUNCTION_98	FOR_1
0x4001c8a	      0xe9c1010000	                           jmp 0x4001e50	      6231	eval.c	FUNCTION_98	FOR_1
0x4001c8f	          0x80fb27	                            cmp bl, 0x27	      6238	eval.c	FUNCTION_98	FOR_1	IF_3
0x4001c92	            0x754c	                           jne 0x4001ce0	      6238	eval.c	FUNCTION_98	FOR_1	IF_3
0x4001c94	        0x488d5d01	                      lea rbx, [rbp + 1]	      6241	eval.c	FUNCTION_98	FOR_1	IF_3	FOR_2	CALL_4
0x4001c98	         0xfb64501	               movzx eax, byte [rbp + 1]	      6241	eval.c	FUNCTION_98	FOR_1	IF_3	FOR_2	CALL_4
0x4001c9c	            0x84c0	                             test al, al	      6241	eval.c	FUNCTION_98	FOR_1	IF_3	FOR_2	CALL_4
0x4001c9e	            0x7430	                            je 0x4001cd0	      6241	eval.c	FUNCTION_98	FOR_1	IF_3	FOR_2	CALL_4
0x4001ca0	            0x3c27	                            cmp al, 0x27	      6241	eval.c	FUNCTION_98	FOR_1	IF_3	FOR_2	CALL_4
0x4001ca2	            0x742c	                            je 0x4001cd0	      6241	eval.c	FUNCTION_98	FOR_1	IF_3	FOR_2	CALL_4
0x4001ca4	      0xb801000000	                              mov eax, 1	      6241	eval.c	FUNCTION_98	FOR_1	IF_3	FOR_2	CALL_4
0x4001ca9	    0x833d00000000	               cmp dword [0x04001cb0], 0	      6241	eval.c	FUNCTION_98	FOR_1	IF_3	FOR_2	CALL_4
0x4001cb0	            0x7409	                            je 0x4001cbb	      6241	eval.c	FUNCTION_98	FOR_1	IF_3	FOR_2	CALL_4
0x4001cb2	          0x4889df	                            mov rdi, rbx	      6241	eval.c	FUNCTION_98	FOR_1	IF_3	FOR_2	CALL_4
0x4001cb5	    0xff1500000000	                 call qword [0x04001cbb]	      6241	eval.c	FUNCTION_98	FOR_1	IF_3	FOR_2	CALL_4
0x4001cbb	            0x4898	                                    cdqe	      6241	eval.c	FUNCTION_98	FOR_1	IF_3	FOR_2	CALL_4
0x4001cbd	          0x4801c3	                            add rbx, rax	      6241	eval.c	FUNCTION_98	FOR_1	IF_3	FOR_2	CALL_4
0x4001cc0	           0xfb603	                   movzx eax, byte [rbx]	      6241	eval.c	FUNCTION_98	FOR_1	IF_3	FOR_2	CALL_4
0x4001cc3	            0x84c0	                             test al, al	      6241	eval.c	FUNCTION_98	FOR_1	IF_3	FOR_2	CALL_4
0x4001cc5	            0x7404	                            je 0x4001ccb	      6241	eval.c	FUNCTION_98	FOR_1	IF_3	FOR_2	CALL_4
0x4001cc7	            0x3c27	                            cmp al, 0x27	      6241	eval.c	FUNCTION_98	FOR_1	IF_3	FOR_2	CALL_4
0x4001cc9	            0x75d9	                           jne 0x4001ca4	      6241	eval.c	FUNCTION_98	FOR_1	IF_3	FOR_2	CALL_4
0x4001ccb	          0x4889dd	                            mov rbp, rbx	      6241	eval.c	FUNCTION_98	FOR_1	IF_3	FOR_2	CALL_4
0x4001cce	            0xeb03	                           jmp 0x4001cd3	      6241	eval.c	FUNCTION_98	FOR_1	IF_3	FOR_2	CALL_4
0x4001cd0	          0x4889dd	                            mov rbp, rbx	      6241	eval.c	FUNCTION_98	FOR_1	IF_3	FOR_2	CALL_4
0x4001cd3	            0x84c0	                             test al, al	      6243	eval.c	FUNCTION_98	FOR_1	IF_3	IF_4
0x4001cd5	     0xf85a1000000	                           jne 0x4001d7c	      6243	eval.c	FUNCTION_98	FOR_1	IF_3	IF_4
0x4001cdb	      0xe970010000	                           jmp 0x4001e50	      6243	eval.c	FUNCTION_98	FOR_1	IF_3	IF_4
0x4001ce0	          0x80fb22	                            cmp bl, 0x22	      6246	eval.c	FUNCTION_98	FOR_1	ELSE_1	IF_5
0x4001ce3	            0x7554	                           jne 0x4001d39	      6246	eval.c	FUNCTION_98	FOR_1	ELSE_1	IF_5
0x4001ce5	        0x488d5d01	                      lea rbx, [rbp + 1]	      6249	eval.c	FUNCTION_98	FOR_1	ELSE_1	IF_5	FOR_3	CALL_5
0x4001ce9	         0xfb64501	               movzx eax, byte [rbp + 1]	      6249	eval.c	FUNCTION_98	FOR_1	ELSE_1	IF_5	FOR_3	CALL_5
0x4001ced	            0x84c0	                             test al, al	      6249	eval.c	FUNCTION_98	FOR_1	ELSE_1	IF_5	FOR_3	CALL_5
0x4001cef	            0x743c	                            je 0x4001d2d	      6249	eval.c	FUNCTION_98	FOR_1	ELSE_1	IF_5	FOR_3	CALL_5
0x4001cf1	            0x3c22	                            cmp al, 0x22	      6249	eval.c	FUNCTION_98	FOR_1	ELSE_1	IF_5	FOR_3	CALL_5
0x4001cf3	            0x7438	                            je 0x4001d2d	      6249	eval.c	FUNCTION_98	FOR_1	ELSE_1	IF_5	FOR_3	CALL_5
0x4001cf5	            0x3c5c	                            cmp al, 0x5c	      6250	eval.c	FUNCTION_98	FOR_1	ELSE_1	IF_5	FOR_3	IF_6
0x4001cf7	            0x7508	                           jne 0x4001d01	      6250	eval.c	FUNCTION_98	FOR_1	ELSE_1	IF_5	FOR_3	IF_6
0x4001cf9	        0x807b0101	                   cmp byte [rbx + 1], 1	      6251	eval.c	FUNCTION_98	FOR_1	ELSE_1	IF_5	FOR_3	IF_6
0x4001cfd	        0x4883dbff	             sbb rbx, 0xffffffffffffffff	      6251	eval.c	FUNCTION_98	FOR_1	ELSE_1	IF_5	FOR_3	IF_6
0x4001d01	      0xb801000000	                              mov eax, 1	      6249	eval.c	FUNCTION_98	FOR_1	ELSE_1	IF_5	FOR_3	CALL_5
0x4001d06	    0x833d00000000	               cmp dword [0x04001d0d], 0	      6249	eval.c	FUNCTION_98	FOR_1	ELSE_1	IF_5	FOR_3	CALL_5
0x4001d0d	            0x7409	                            je 0x4001d18	      6249	eval.c	FUNCTION_98	FOR_1	ELSE_1	IF_5	FOR_3	CALL_5
0x4001d0f	          0x4889df	                            mov rdi, rbx	      6249	eval.c	FUNCTION_98	FOR_1	ELSE_1	IF_5	FOR_3	CALL_5
0x4001d12	    0xff1500000000	                 call qword [0x04001d18]	      6249	eval.c	FUNCTION_98	FOR_1	ELSE_1	IF_5	FOR_3	CALL_5
0x4001d18	            0x4898	                                    cdqe	      6249	eval.c	FUNCTION_98	FOR_1	ELSE_1	IF_5	FOR_3	CALL_5
0x4001d1a	          0x4801c3	                            add rbx, rax	      6249	eval.c	FUNCTION_98	FOR_1	ELSE_1	IF_5	FOR_3	CALL_5
0x4001d1d	           0xfb603	                   movzx eax, byte [rbx]	      6249	eval.c	FUNCTION_98	FOR_1	ELSE_1	IF_5	FOR_3	CALL_5
0x4001d20	            0x84c0	                             test al, al	      6249	eval.c	FUNCTION_98	FOR_1	ELSE_1	IF_5	FOR_3	CALL_5
0x4001d22	            0x7404	                            je 0x4001d28	      6249	eval.c	FUNCTION_98	FOR_1	ELSE_1	IF_5	FOR_3	CALL_5
0x4001d24	            0x3c22	                            cmp al, 0x22	      6249	eval.c	FUNCTION_98	FOR_1	ELSE_1	IF_5	FOR_3	CALL_5
0x4001d26	            0x75cd	                           jne 0x4001cf5	      6249	eval.c	FUNCTION_98	FOR_1	ELSE_1	IF_5	FOR_3	CALL_5
0x4001d28	          0x4889dd	                            mov rbp, rbx	      6249	eval.c	FUNCTION_98	FOR_1	ELSE_1	IF_5	FOR_3	CALL_5
0x4001d2b	            0xeb03	                           jmp 0x4001d30	      6249	eval.c	FUNCTION_98	FOR_1	ELSE_1	IF_5	FOR_3	CALL_5
0x4001d2d	          0x4889dd	                            mov rbp, rbx	      6249	eval.c	FUNCTION_98	FOR_1	ELSE_1	IF_5	FOR_3	CALL_5
0x4001d30	            0x84c0	                             test al, al	      6252	eval.c	FUNCTION_98	FOR_1	ELSE_1	IF_5	IF_7
0x4001d32	            0x7548	                           jne 0x4001d7c	      6252	eval.c	FUNCTION_98	FOR_1	ELSE_1	IF_5	IF_7
0x4001d34	      0xe917010000	                           jmp 0x4001e50	      6252	eval.c	FUNCTION_98	FOR_1	ELSE_1	IF_5	IF_7
0x4001d39	          0x4489e0	                           mov eax, r12d	      6255	eval.c	FUNCTION_98	FOR_1	ELSE_2	IF_8
0x4001d3c	          0x4409e8	                            or eax, r13d	      6255	eval.c	FUNCTION_98	FOR_1	ELSE_2	IF_8
0x4001d3f	            0x753b	                           jne 0x4001d7c	      6255	eval.c	FUNCTION_98	FOR_1	ELSE_2	IF_8
0x4001d41	          0x80fb3a	                            cmp bl, 0x3a	      6255	eval.c	FUNCTION_98	FOR_1	ELSE_2	IF_8
0x4001d44	            0x7536	                           jne 0x4001d7c	      6255	eval.c	FUNCTION_98	FOR_1	ELSE_2	IF_8
0x4001d46	          0x4889e8	                            mov rax, rbp	      6259	eval.c	FUNCTION_98	FOR_1	ELSE_2	IF_8
0x4001d49	        0x482b0424	                    sub rax, qword [rsp]	      6259	eval.c	FUNCTION_98	FOR_1	ELSE_2	IF_8
0x4001d4d	          0x83f801	                              cmp eax, 1	      6260	eval.c	FUNCTION_98	FOR_1	ELSE_2	IF_8	IF_9	CALL_6
0x4001d50	            0x751b	                           jne 0x4001d6d	      6260	eval.c	FUNCTION_98	FOR_1	ELSE_2	IF_8	IF_9	CALL_6
0x4001d52	        0x488b0424	                    mov rax, qword [rsp]	      6260	eval.c	FUNCTION_98	FOR_1	ELSE_2	IF_8	IF_9	CALL_6
0x4001d56	           0xfb630	                   movzx esi, byte [rax]	      6260	eval.c	FUNCTION_98	FOR_1	ELSE_2	IF_8	IF_9	CALL_6
0x4001d59	      0xbf00000000	                              mov edi, 0	      6260	eval.c	FUNCTION_98	FOR_1	ELSE_2	IF_8	IF_9	CALL_6
0x4001d5e	      0xe800000000	                          call 0x4001d63	      6260	eval.c	FUNCTION_98	FOR_1	ELSE_2	IF_8	IF_9	CALL_6
0x4001d63	          0x4885c0	                           test rax, rax	      6260	eval.c	FUNCTION_98	FOR_1	ELSE_2	IF_8	IF_9	CALL_6
0x4001d66	            0x7514	                           jne 0x4001d7c	      6260	eval.c	FUNCTION_98	FOR_1	ELSE_2	IF_8	IF_9	CALL_6
0x4001d68	      0xe9e3000000	                           jmp 0x4001e50	      6260	eval.c	FUNCTION_98	FOR_1	ELSE_2	IF_8	IF_9	CALL_6
0x4001d6d	          0x83f801	                              cmp eax, 1	      6261	eval.c	FUNCTION_98	FOR_1	ELSE_2	IF_8	IF_9
0x4001d70	            0x7e0a	                           jle 0x4001d7c	      6261	eval.c	FUNCTION_98	FOR_1	ELSE_2	IF_8	IF_9
0x4001d72	        0x807dff7d	                cmp byte [rbp - 1], 0x7d	      6261	eval.c	FUNCTION_98	FOR_1	ELSE_2	IF_8	IF_9
0x4001d76	     0xf85d4000000	                           jne 0x4001e50	      6261	eval.c	FUNCTION_98	FOR_1	ELSE_2	IF_8	IF_9
0x4001d7c	          0x4585e4	                         test r12d, r12d	      6265	eval.c	FUNCTION_98	FOR_1	IF_10
0x4001d7f	            0x7518	                           jne 0x4001d99	      6265	eval.c	FUNCTION_98	FOR_1	IF_10
0x4001d81	         0xfb64500	                   movzx eax, byte [rbp]	      6267	eval.c	FUNCTION_98	FOR_1	IF_10	IF_11
0x4001d85	            0x3c5b	                            cmp al, 0x5b	      6267	eval.c	FUNCTION_98	FOR_1	IF_10	IF_11
0x4001d87	            0x7506	                           jne 0x4001d8f	      6267	eval.c	FUNCTION_98	FOR_1	IF_10	IF_11
0x4001d89	        0x4183c501	                             add r13d, 1	      6268	eval.c	FUNCTION_98	FOR_1	IF_10	IF_11
0x4001d8d	            0xeb4b	                           jmp 0x4001dda	      6268	eval.c	FUNCTION_98	FOR_1	IF_10	IF_11
0x4001d8f	            0x3c5d	                            cmp al, 0x5d	      6269	eval.c	FUNCTION_98	FOR_1	IF_10	ELSE_3	IF_12
0x4001d91	            0x7506	                           jne 0x4001d99	      6269	eval.c	FUNCTION_98	FOR_1	IF_10	ELSE_3	IF_12
0x4001d93	        0x4183ed01	                             sub r13d, 1	      6270	eval.c	FUNCTION_98	FOR_1	IF_10	ELSE_3	IF_12
0x4001d97	            0xeb41	                           jmp 0x4001dda	      6270	eval.c	FUNCTION_98	FOR_1	IF_10	ELSE_3	IF_12
0x4001d99	          0x4585ed	                         test r13d, r13d	      6273	eval.c	FUNCTION_98	FOR_1	IF_13
0x4001d9c	            0x753c	                           jne 0x4001dda	      6273	eval.c	FUNCTION_98	FOR_1	IF_13
0x4001d9e	         0xfb64500	                   movzx eax, byte [rbp]	      6275	eval.c	FUNCTION_98	FOR_1	IF_13	IF_14
0x4001da2	            0x3c7b	                            cmp al, 0x7b	      6275	eval.c	FUNCTION_98	FOR_1	IF_13	IF_14
0x4001da4	            0x7514	                           jne 0x4001dba	      6275	eval.c	FUNCTION_98	FOR_1	IF_13	IF_14
0x4001da6	        0x4183c401	                             add r12d, 1	      6277	eval.c	FUNCTION_98	FOR_1	IF_13	IF_14
0x4001daa	          0x4d85f6	                           test r14, r14	      6278	eval.c	FUNCTION_98	FOR_1	IF_13	IF_14	IF_15
0x4001dad	            0x742b	                            je 0x4001dda	      6278	eval.c	FUNCTION_98	FOR_1	IF_13	IF_14	IF_15
0x4001daf	        0x49833e00	                      cmp qword [r14], 0	      6278	eval.c	FUNCTION_98	FOR_1	IF_13	IF_14	IF_15
0x4001db3	            0x7525	                           jne 0x4001dda	      6278	eval.c	FUNCTION_98	FOR_1	IF_13	IF_14	IF_15
0x4001db5	          0x49892e	                    mov qword [r14], rbp	      6279	eval.c	FUNCTION_98	FOR_1	IF_13	IF_14	IF_15
0x4001db8	            0xeb20	                           jmp 0x4001dda	      6279	eval.c	FUNCTION_98	FOR_1	IF_13	IF_14	IF_15
0x4001dba	            0x3c7d	                            cmp al, 0x7d	      6281	eval.c	FUNCTION_98	FOR_1	IF_13	ELSE_4	IF_16
0x4001dbc	            0x751c	                           jne 0x4001dda	      6281	eval.c	FUNCTION_98	FOR_1	IF_13	ELSE_4	IF_16
0x4001dbe	        0x4183ec01	                             sub r12d, 1	      6283	eval.c	FUNCTION_98	FOR_1	IF_13	ELSE_4	IF_16
0x4001dc2	          0x4d85f6	                           test r14, r14	      6284	eval.c	FUNCTION_98	FOR_1	IF_13	ELSE_4	IF_16	IF_17
0x4001dc5	            0x7413	                            je 0x4001dda	      6284	eval.c	FUNCTION_98	FOR_1	IF_13	ELSE_4	IF_16	IF_17
0x4001dc7	          0x4585e4	                         test r12d, r12d	      6284	eval.c	FUNCTION_98	FOR_1	IF_13	ELSE_4	IF_16	IF_17
0x4001dca	            0x750e	                           jne 0x4001dda	      6284	eval.c	FUNCTION_98	FOR_1	IF_13	ELSE_4	IF_16	IF_17
0x4001dcc	      0x488b442408	                mov rax, qword [rsp + 8]	      6284	eval.c	FUNCTION_98	FOR_1	IF_13	ELSE_4	IF_16	IF_17
0x4001dd1	        0x48833800	                      cmp qword [rax], 0	      6284	eval.c	FUNCTION_98	FOR_1	IF_13	ELSE_4	IF_16	IF_17
0x4001dd5	            0x7503	                           jne 0x4001dda	      6284	eval.c	FUNCTION_98	FOR_1	IF_13	ELSE_4	IF_16	IF_17
0x4001dd7	          0x488928	                    mov qword [rax], rbp	      6285	eval.c	FUNCTION_98	FOR_1	IF_13	ELSE_4	IF_16	IF_17
0x4001dda	      0xb801000000	                              mov eax, 1	      6236	eval.c	FUNCTION_98	FOR_1	CALL_3
0x4001ddf	    0x833d00000000	               cmp dword [0x04001de6], 0	      6236	eval.c	FUNCTION_98	FOR_1	CALL_3
0x4001de6	            0x7409	                            je 0x4001df1	      6236	eval.c	FUNCTION_98	FOR_1	CALL_3
0x4001de8	          0x4889ef	                            mov rdi, rbp	      6236	eval.c	FUNCTION_98	FOR_1	CALL_3
0x4001deb	    0xff1500000000	                 call qword [0x04001df1]	      6236	eval.c	FUNCTION_98	FOR_1	CALL_3
0x4001df1	            0x4898	                                    cdqe	      6236	eval.c	FUNCTION_98	FOR_1	CALL_3
0x4001df3	          0x4801c5	                            add rbp, rax	      6236	eval.c	FUNCTION_98	FOR_1	CALL_3
0x4001df6	         0xfb65d00	                   movzx ebx, byte [rbp]	      6231	eval.c	FUNCTION_98	FOR_1
0x4001dfa	            0x84db	                             test bl, bl	      6231	eval.c	FUNCTION_98	FOR_1
0x4001dfc	            0x7516	                           jne 0x4001e14	      6231	eval.c	FUNCTION_98	FOR_1
0x4001dfe	            0xeb50	                           jmp 0x4001e50	      6231	eval.c	FUNCTION_98	FOR_1
0x4001e00	        0x488b2c24	                    mov rbp, qword [rsp]	      6231	eval.c	FUNCTION_98	FOR_1
0x4001e04	    0x41bd00000000	                             mov r13d, 0	      6231	eval.c	FUNCTION_98	FOR_1
0x4001e0a	    0x41bc00000000	                             mov r12d, 0	      6231	eval.c	FUNCTION_98	FOR_1
0x4001e10	        0x4183e701	                             and r15d, 1	      6234	eval.c	FUNCTION_98	FOR_1
0x4001e14	           0xfb6fb	                           movzx edi, bl	      6232	eval.c	FUNCTION_98	FOR_1	CALL_2
0x4001e17	      0xe800000000	                          call 0x4001e1c	      6232	eval.c	FUNCTION_98	FOR_1	CALL_2
0x4001e1c	          0x80fb7b	                            cmp bl, 0x7b	      6233	eval.c	FUNCTION_98	FOR_1
0x4001e1f	     0xf846afeffff	                            je 0x4001c8f	      6233	eval.c	FUNCTION_98	FOR_1
0x4001e25	            0x85c0	                           test eax, eax	      6233	eval.c	FUNCTION_98	FOR_1
0x4001e27	     0xf8562feffff	                           jne 0x4001c8f	      6233	eval.c	FUNCTION_98	FOR_1
0x4001e2d	          0x4585ff	                         test r15d, r15d	      6234	eval.c	FUNCTION_98	FOR_1
0x4001e30	            0x7412	                            je 0x4001e44	      6234	eval.c	FUNCTION_98	FOR_1
0x4001e32	          0x80fb5b	                            cmp bl, 0x5b	      6234	eval.c	FUNCTION_98	FOR_1
0x4001e35	     0xf8454feffff	                            je 0x4001c8f	      6234	eval.c	FUNCTION_98	FOR_1
0x4001e3b	          0x80fb2e	                            cmp bl, 0x2e	      6234	eval.c	FUNCTION_98	FOR_1
0x4001e3e	     0xf844bfeffff	                            je 0x4001c8f	      6234	eval.c	FUNCTION_98	FOR_1
0x4001e44	          0x4489e0	                           mov eax, r12d	      6236	eval.c	FUNCTION_98	FOR_1	CALL_3
0x4001e47	          0x4409e8	                            or eax, r13d	      6236	eval.c	FUNCTION_98	FOR_1	CALL_3
0x4001e4a	     0xf853ffeffff	                           jne 0x4001c8f	      6236	eval.c	FUNCTION_98	FOR_1	CALL_3
0x4001e50	          0x4889e8	                            mov rax, rbp	      6291	eval.c	FUNCTION_98
0x4001e53	        0x4883c418	                           add rsp, 0x18	      6291	eval.c	FUNCTION_98
0x4001e57	              0x5b	                                 pop rbx	      6291	eval.c	FUNCTION_98
0x4001e58	              0x5d	                                 pop rbp	      6291	eval.c	FUNCTION_98
0x4001e59	            0x415c	                                 pop r12	      6291	eval.c	FUNCTION_98
0x4001e5b	            0x415d	                                 pop r13	      6291	eval.c	FUNCTION_98
0x4001e5d	            0x415e	                                 pop r14	      6291	eval.c	FUNCTION_98
0x4001e5f	            0x415f	                                 pop r15	      6291	eval.c	FUNCTION_98
0x4001e61	              0xc3	                                     ret	      6291	eval.c	FUNCTION_98
item_lock	FOR,2:SWITCH,1:DO,0:IF,10:functions,0:WHILE,0:CALL,6:ELSE,3	89
0x4000161	            0x4155	                                push r13	      2990	eval.c	FUNCTION_58
0x4000163	            0x4154	                                push r12	      2990	eval.c	FUNCTION_58
0x4000165	              0x55	                                push rbp	      2990	eval.c	FUNCTION_58
0x4000166	              0x53	                                push rbx	      2990	eval.c	FUNCTION_58
0x4000167	        0x4883ec08	                              sub rsp, 8	      2990	eval.c	FUNCTION_58
0x400016b	    0x8b0500000000	            mov eax, dword [0x04000171] 	      2998	eval.c	FUNCTION_58	IF_1
0x4000171	          0x83f863	                           cmp eax, 0x63	      2998	eval.c	FUNCTION_58	IF_1
0x4000174	            0x7e21	                           jle 0x4000197	      2998	eval.c	FUNCTION_58	IF_1
0x4000176	      0xba05000000	                              mov edx, 5	      3000	eval.c	FUNCTION_58	IF_1	CALL_2
0x400017b	      0xbe00000000	                              mov esi, 0	      3000	eval.c	FUNCTION_58	IF_1	CALL_2
0x4000180	      0xbf00000000	                              mov edi, 0	      3000	eval.c	FUNCTION_58	IF_1	CALL_2
0x4000185	      0xe800000000	                          call 0x400018a	      3000	eval.c	FUNCTION_58	IF_1	CALL_2
0x400018a	          0x4889c7	                            mov rdi, rax	      3000	eval.c	FUNCTION_58	IF_1	CALL_2
0x400018d	      0xe800000000	                          call 0x4000192	      3000	eval.c	FUNCTION_58	IF_1	CALL_2
0x4000192	      0xe9d7000000	                           jmp 0x400026e	      3001	eval.c	FUNCTION_58	IF_1
0x4000197	          0x4189d4	                           mov r12d, edx	      3001	eval.c	FUNCTION_58	IF_1
0x400019a	            0x85f6	                           test esi, esi	      3003	eval.c	FUNCTION_58	IF_2
0x400019c	     0xf84cc000000	                            je 0x400026e	      3003	eval.c	FUNCTION_58	IF_2
0x40001a2	          0x83c001	                              add eax, 1	      3005	eval.c	FUNCTION_58
0x40001a5	    0x890500000000	            mov dword [0x040001ab], eax 	      3005	eval.c	FUNCTION_58
0x40001ab	            0x85d2	                           test edx, edx	      3008	eval.c	FUNCTION_58	IF_3
0x40001ad	            0x7406	                            je 0x40001b5	      3008	eval.c	FUNCTION_58	IF_3
0x40001af	        0x804f0401	                    or byte [rdi + 4], 1	      3009	eval.c	FUNCTION_58	IF_3
0x40001b3	            0xeb04	                           jmp 0x40001b9	      3009	eval.c	FUNCTION_58	IF_3
0x40001b5	        0x806704fe	                and byte [rdi + 4], 0xfe	      3011	eval.c	FUNCTION_58	ELSE_1
0x40001b9	            0x8b07	                    mov eax, dword [rdi]	      3013	eval.c	FUNCTION_58	ELSE_1	SWITCH_1
0x40001bb	          0x83f805	                              cmp eax, 5	      3013	eval.c	FUNCTION_58	ELSE_1	SWITCH_1
0x40001be	            0x740a	                            je 0x40001ca	      3013	eval.c	FUNCTION_58	ELSE_1	SWITCH_1
0x40001c0	          0x83f806	                              cmp eax, 6	      3013	eval.c	FUNCTION_58	ELSE_1	SWITCH_1
0x40001c3	            0x7449	                            je 0x400020e	      3013	eval.c	FUNCTION_58	ELSE_1	SWITCH_1
0x40001c5	      0xe99d000000	                           jmp 0x4000267	      3013	eval.c	FUNCTION_58	ELSE_1	SWITCH_1
0x40001ca	        0x488b4708	                mov rax, qword [rdi + 8]	      3027	eval.c	FUNCTION_58	ELSE_1	SWITCH_1	IF_4
0x40001ce	          0x4885c0	                           test rax, rax	      3027	eval.c	FUNCTION_58	ELSE_1	SWITCH_1	IF_4
0x40001d1	     0xf8490000000	                            je 0x4000267	      3027	eval.c	FUNCTION_58	ELSE_1	SWITCH_1	IF_4
0x40001d7	          0x4585e4	                         test r12d, r12d	      3029	eval.c	FUNCTION_58	ELSE_1	SWITCH_1	IF_4	IF_5
0x40001da	            0x7406	                            je 0x40001e2	      3029	eval.c	FUNCTION_58	ELSE_1	SWITCH_1	IF_4	IF_5
0x40001dc	        0x80484801	                 or byte [rax + 0x48], 1	      3030	eval.c	FUNCTION_58	ELSE_1	SWITCH_1	IF_4	IF_5
0x40001e0	            0xeb04	                           jmp 0x40001e6	      3030	eval.c	FUNCTION_58	ELSE_1	SWITCH_1	IF_4	IF_5
0x40001e2	        0x806048fe	             and byte [rax + 0x48], 0xfe	      3032	eval.c	FUNCTION_58	ELSE_1	SWITCH_1	IF_4	ELSE_2
0x40001e6	          0x83fe01	                              cmp esi, 1	      3033	eval.c	FUNCTION_58	ELSE_1	SWITCH_1	IF_4	IF_6
0x40001e9	            0x767c	                           jbe 0x4000267	      3033	eval.c	FUNCTION_58	ELSE_1	SWITCH_1	IF_4	IF_6
0x40001eb	          0x488b18	                    mov rbx, qword [rax]	      3035	eval.c	FUNCTION_58	ELSE_1	SWITCH_1	IF_4	IF_6	FOR_1
0x40001ee	          0x4885db	                           test rbx, rbx	      3035	eval.c	FUNCTION_58	ELSE_1	SWITCH_1	IF_4	IF_6	FOR_1
0x40001f1	            0x7474	                            je 0x4000267	      3035	eval.c	FUNCTION_58	ELSE_1	SWITCH_1	IF_4	IF_6	FOR_1
0x40001f3	          0x8d6eff	                      lea ebp, [rsi - 1]	      3036	eval.c	FUNCTION_58	ELSE_1	SWITCH_1	IF_4	IF_6	FOR_1
0x40001f6	        0x488d7b10	                   lea rdi, [rbx + 0x10]	      3036	eval.c	FUNCTION_58	ELSE_1	SWITCH_1	IF_4	IF_6	FOR_1
0x40001fa	          0x4489e2	                           mov edx, r12d	      3036	eval.c	FUNCTION_58	ELSE_1	SWITCH_1	IF_4	IF_6	FOR_1
0x40001fd	            0x89ee	                            mov esi, ebp	      3036	eval.c	FUNCTION_58	ELSE_1	SWITCH_1	IF_4	IF_6	FOR_1
0x40001ff	      0xe85dffffff	                      call sym.item_lock	      3036	eval.c	FUNCTION_58	ELSE_1	SWITCH_1	IF_4	IF_6	FOR_1
0x4000204	          0x488b1b	                    mov rbx, qword [rbx]	      3035	eval.c	FUNCTION_58	ELSE_1	SWITCH_1	IF_4	IF_6	FOR_1
0x4000207	          0x4885db	                           test rbx, rbx	      3035	eval.c	FUNCTION_58	ELSE_1	SWITCH_1	IF_4	IF_6	FOR_1
0x400020a	            0x75ea	                           jne 0x40001f6	      3035	eval.c	FUNCTION_58	ELSE_1	SWITCH_1	IF_4	IF_6	FOR_1
0x400020c	            0xeb59	                           jmp 0x4000267	      3035	eval.c	FUNCTION_58	ELSE_1	SWITCH_1	IF_4	IF_6	FOR_1
0x400020e	        0x488b4708	                mov rax, qword [rdi + 8]	      3040	eval.c	FUNCTION_58	ELSE_1	SWITCH_1	IF_7
0x4000212	          0x4885c0	                           test rax, rax	      3040	eval.c	FUNCTION_58	ELSE_1	SWITCH_1	IF_7
0x4000215	            0x7450	                            je 0x4000267	      3040	eval.c	FUNCTION_58	ELSE_1	SWITCH_1	IF_7
0x4000217	          0x4585e4	                         test r12d, r12d	      3042	eval.c	FUNCTION_58	ELSE_1	SWITCH_1	IF_7	IF_8
0x400021a	            0x7405	                            je 0x4000221	      3042	eval.c	FUNCTION_58	ELSE_1	SWITCH_1	IF_7	IF_8
0x400021c	          0x800801	                        or byte [rax], 1	      3043	eval.c	FUNCTION_58	ELSE_1	SWITCH_1	IF_7	IF_8
0x400021f	            0xeb03	                           jmp 0x4000224	      3043	eval.c	FUNCTION_58	ELSE_1	SWITCH_1	IF_7	IF_8
0x4000221	          0x8020fe	                    and byte [rax], 0xfe	      3045	eval.c	FUNCTION_58	ELSE_1	SWITCH_1	IF_7	ELSE_3
0x4000224	          0x83fe01	                              cmp esi, 1	      3046	eval.c	FUNCTION_58	ELSE_1	SWITCH_1	IF_7	ELSE_3	IF_9
0x4000227	            0x763e	                           jbe 0x4000267	      3046	eval.c	FUNCTION_58	ELSE_1	SWITCH_1	IF_7	ELSE_3	IF_9
0x4000229	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      3049	eval.c	FUNCTION_58	ELSE_1	SWITCH_1	IF_7	ELSE_3	IF_9
0x400022d	            0x89d5	                            mov ebp, edx	      3049	eval.c	FUNCTION_58	ELSE_1	SWITCH_1	IF_7	ELSE_3	IF_9
0x400022f	        0x488b5830	            mov rbx, qword [rax + 0x30] 	      3050	eval.c	FUNCTION_58	ELSE_1	SWITCH_1	IF_7	ELSE_3	IF_9	FOR_2
0x4000233	            0x85d2	                           test edx, edx	      3050	eval.c	FUNCTION_58	ELSE_1	SWITCH_1	IF_7	ELSE_3	IF_9	FOR_2
0x4000235	            0x7e30	                           jle 0x4000267	      3050	eval.c	FUNCTION_58	ELSE_1	SWITCH_1	IF_7	ELSE_3	IF_9	FOR_2
0x4000237	        0x448d6eff	                     lea r13d, [rsi - 1]	      3055	eval.c	FUNCTION_58	ELSE_1	SWITCH_1	IF_7	ELSE_3	IF_9	FOR_2	IF_10	CALL_6
0x400023b	        0x488b7b08	                mov rdi, qword [rbx + 8]	      3052	eval.c	FUNCTION_58	ELSE_1	SWITCH_1	IF_7	ELSE_3	IF_9	FOR_2	IF_10	CALL_4
0x400023f	    0x4881ff000000	                              cmp rdi, 0	      3052	eval.c	FUNCTION_58	ELSE_1	SWITCH_1	IF_7	ELSE_3	IF_9	FOR_2	IF_10	CALL_4
0x4000246	            0x7417	                            je 0x400025f	      3052	eval.c	FUNCTION_58	ELSE_1	SWITCH_1	IF_7	ELSE_3	IF_9	FOR_2	IF_10	CALL_4
0x4000248	          0x4885ff	                           test rdi, rdi	      3052	eval.c	FUNCTION_58	ELSE_1	SWITCH_1	IF_7	ELSE_3	IF_9	FOR_2	IF_10	CALL_4
0x400024b	            0x7412	                            je 0x400025f	      3052	eval.c	FUNCTION_58	ELSE_1	SWITCH_1	IF_7	ELSE_3	IF_9	FOR_2	IF_10	CALL_4
0x400024d	          0x83ed01	                              sub ebp, 1	      3054	eval.c	FUNCTION_58	ELSE_1	SWITCH_1	IF_7	ELSE_3	IF_9	FOR_2	IF_10
0x4000250	        0x4883ef11	                           sub rdi, 0x11	      3055	eval.c	FUNCTION_58	ELSE_1	SWITCH_1	IF_7	ELSE_3	IF_9	FOR_2	IF_10	CALL_6
0x4000254	          0x4489e2	                           mov edx, r12d	      3055	eval.c	FUNCTION_58	ELSE_1	SWITCH_1	IF_7	ELSE_3	IF_9	FOR_2	IF_10	CALL_6
0x4000257	          0x4489ee	                           mov esi, r13d	      3055	eval.c	FUNCTION_58	ELSE_1	SWITCH_1	IF_7	ELSE_3	IF_9	FOR_2	IF_10	CALL_6
0x400025a	      0xe802ffffff	                      call sym.item_lock	      3055	eval.c	FUNCTION_58	ELSE_1	SWITCH_1	IF_7	ELSE_3	IF_9	FOR_2	IF_10	CALL_6
0x400025f	        0x4883c310	                           add rbx, 0x10	      3050	eval.c	FUNCTION_58	ELSE_1	SWITCH_1	IF_7	ELSE_3	IF_9	FOR_2
0x4000263	            0x85ed	                           test ebp, ebp	      3050	eval.c	FUNCTION_58	ELSE_1	SWITCH_1	IF_7	ELSE_3	IF_9	FOR_2
0x4000265	            0x7fd4	                            jg 0x400023b	      3050	eval.c	FUNCTION_58	ELSE_1	SWITCH_1	IF_7	ELSE_3	IF_9	FOR_2
0x4000267	    0x832d00000000	               sub dword [0x0400026e], 1	      3061	eval.c	FUNCTION_58
0x400026e	        0x4883c408	                              add rsp, 8	      3062	eval.c	FUNCTION_58
0x4000272	              0x5b	                                 pop rbx	      3062	eval.c	FUNCTION_58
0x4000273	              0x5d	                                 pop rbp	      3062	eval.c	FUNCTION_58
0x4000274	            0x415c	                                 pop r12	      3062	eval.c	FUNCTION_58
0x4000276	            0x415d	                                 pop r13	      3062	eval.c	FUNCTION_58
0x4000278	              0xc3	                                     ret	      3062	eval.c	FUNCTION_58
get_var_tv	FOR,0:SWITCH,0:DO,0:IF,5:functions,0:WHILE,0:CALL,4:ELSE,1	56
0x400537a	            0x4157	                                push r15	      6647	eval.c	FUNCTION_116
0x400537c	            0x4156	                                push r14	      6647	eval.c	FUNCTION_116
0x400537e	            0x4155	                                push r13	      6647	eval.c	FUNCTION_116
0x4005380	            0x4154	                                push r12	      6647	eval.c	FUNCTION_116
0x4005382	              0x55	                                push rbp	      6647	eval.c	FUNCTION_116
0x4005383	              0x53	                                push rbx	      6647	eval.c	FUNCTION_116
0x4005384	        0x4883ec08	                              sub rsp, 8	      6647	eval.c	FUNCTION_116
0x4005388	          0x4889fd	                            mov rbp, rdi	      6647	eval.c	FUNCTION_116
0x400538b	          0x4989d4	                            mov r12, rdx	      6647	eval.c	FUNCTION_116
0x400538e	          0x4989cd	                            mov r13, rcx	      6647	eval.c	FUNCTION_116
0x4005391	          0x4589c7	                           mov r15d, r8d	      6647	eval.c	FUNCTION_116
0x4005394	          0x4863f6	                         movsxd rsi, esi	      6654	eval.c	FUNCTION_116
0x4005397	        0x488d1c37	                    lea rbx, [rdi + rsi]	      6654	eval.c	FUNCTION_116
0x400539b	        0x440fb633	                  movzx r14d, byte [rbx]	      6654	eval.c	FUNCTION_116
0x400539f	          0xc60300	                       mov byte [rbx], 0	      6655	eval.c	FUNCTION_116
0x40053a2	          0x4489ca	                            mov edx, r9d	      6660	eval.c	FUNCTION_116	CALL_1
0x40053a5	      0xbe00000000	                              mov esi, 0	      6660	eval.c	FUNCTION_116	CALL_1
0x40053aa	      0xe800000000	                          call 0x40053af	      6660	eval.c	FUNCTION_116	CALL_1
0x40053af	          0x4885c0	                           test rax, rax	      6661	eval.c	FUNCTION_116	IF_1
0x40053b2	            0x7411	                            je 0x40053c5	      6661	eval.c	FUNCTION_116	IF_1
0x40053b4	          0x4889c7	                            mov rdi, rax	      6661	eval.c	FUNCTION_116	IF_1
0x40053b7	          0x4d85ed	                           test r13, r13	      6664	eval.c	FUNCTION_116	IF_1	IF_2
0x40053ba	            0x7404	                            je 0x40053c0	      6664	eval.c	FUNCTION_116	IF_1	IF_2
0x40053bc	        0x49894500	                    mov qword [r13], rax	      6665	eval.c	FUNCTION_116	IF_1	IF_2
0x40053c0	          0x4885ff	                           test rdi, rdi	      6668	eval.c	FUNCTION_116	IF_3
0x40053c3	            0x7530	                           jne 0x40053f5	      6668	eval.c	FUNCTION_116	IF_3
0x40053c5	          0x4d85e4	                           test r12, r12	      6670	eval.c	FUNCTION_116	IF_3	IF_4
0x40053c8	            0x7444	                            je 0x400540e	      6670	eval.c	FUNCTION_116	IF_3	IF_4
0x40053ca	          0x4585ff	                         test r15d, r15d	      6670	eval.c	FUNCTION_116	IF_3	IF_4
0x40053cd	            0x743f	                            je 0x400540e	      6670	eval.c	FUNCTION_116	IF_3	IF_4
0x40053cf	      0xba05000000	                              mov edx, 5	      6671	eval.c	FUNCTION_116	IF_3	CALL_3
0x40053d4	      0xbe00000000	                              mov esi, 0	      6671	eval.c	FUNCTION_116	IF_3	CALL_3
0x40053d9	      0xbf00000000	                              mov edi, 0	      6671	eval.c	FUNCTION_116	IF_3	CALL_3
0x40053de	      0xe800000000	                          call 0x40053e3	      6671	eval.c	FUNCTION_116	IF_3	CALL_3
0x40053e3	          0x4889ee	                            mov rsi, rbp	      6671	eval.c	FUNCTION_116	IF_3	CALL_3
0x40053e6	          0x4889c7	                            mov rdi, rax	      6671	eval.c	FUNCTION_116	IF_3	CALL_3
0x40053e9	      0xe800000000	                          call 0x40053ee	      6671	eval.c	FUNCTION_116	IF_3	CALL_3
0x40053ee	      0xb800000000	                              mov eax, 0	      6672	eval.c	FUNCTION_116	IF_3
0x40053f3	            0xeb1e	                           jmp 0x4005413	      6672	eval.c	FUNCTION_116	IF_3
0x40053f5	      0xb801000000	                              mov eax, 1	      6648	eval.c	FUNCTION_116
0x40053fa	          0x4d85e4	                           test r12, r12	      6674	eval.c	FUNCTION_116	ELSE_1	IF_5
0x40053fd	            0x7414	                            je 0x4005413	      6674	eval.c	FUNCTION_116	ELSE_1	IF_5
0x40053ff	          0x4c89e6	                            mov rsi, r12	      6675	eval.c	FUNCTION_116	ELSE_1	IF_5
0x4005402	      0xe800000000	                          call 0x4005407	      6675	eval.c	FUNCTION_116	ELSE_1	IF_5
0x4005407	      0xb801000000	                              mov eax, 1	      6648	eval.c	FUNCTION_116
0x400540c	            0xeb05	                           jmp 0x4005413	      6648	eval.c	FUNCTION_116
0x400540e	      0xb800000000	                              mov eax, 0	      6672	eval.c	FUNCTION_116	IF_3
0x4005413	          0x448833	                    mov byte [rbx], r14b	      6677	eval.c	FUNCTION_116
0x4005416	        0x4883c408	                              add rsp, 8	      6680	eval.c	FUNCTION_116
0x400541a	              0x5b	                                 pop rbx	      6680	eval.c	FUNCTION_116
0x400541b	              0x5d	                                 pop rbp	      6680	eval.c	FUNCTION_116
0x400541c	            0x415c	                                 pop r12	      6680	eval.c	FUNCTION_116
0x400541e	            0x415d	                                 pop r13	      6680	eval.c	FUNCTION_116
0x4005420	            0x415e	                                 pop r14	      6680	eval.c	FUNCTION_116
0x4005422	            0x415f	                                 pop r15	      6680	eval.c	FUNCTION_116
0x4005424	              0xc3	                                     ret	      6680	eval.c	FUNCTION_116
find_win_by_nr	FOR,0:SWITCH,0:DO,0:IF,3:functions,1:WHILE,0:CALL,1:ELSE,0	38
0x4004cc8	              0x53	                                push rbx	      8217	eval.c	FUNCTION_155
0x4004cc9	          0x4889f3	                            mov rbx, rsi	      8217	eval.c	FUNCTION_155
0x4004ccc	      0xbe00000000	                              mov esi, 0	      8221	eval.c	FUNCTION_155	CALL_1
0x4004cd1	      0xe800000000	                          call 0x4004cd6	      8221	eval.c	FUNCTION_155	CALL_1
0x4004cd6	            0x85c0	                           test eax, eax	      8223	eval.c	FUNCTION_155	IF_1
0x4004cd8	            0x785e	                            js 0x4004d38	      8223	eval.c	FUNCTION_155	IF_1
0x4004cda	            0x89c2	                            mov edx, eax	      8223	eval.c	FUNCTION_155	IF_1
0x4004cdc	            0x85c0	                           test eax, eax	      8225	eval.c	FUNCTION_155	IF_2
0x4004cde	            0x7509	                           jne 0x4004ce9	      8225	eval.c	FUNCTION_155	IF_2
0x4004ce0	    0x488b05000000	            mov rax, qword [0x04004ce7] 	      8226	eval.c	FUNCTION_155	IF_2
0x4004ce7	            0xeb54	                           jmp 0x4004d3d	      8226	eval.c	FUNCTION_155	IF_2
0x4004ce9	          0x4885db	                           test rbx, rbx	      8228	eval.c	FUNCTION_155
0x4004cec	            0x740f	                            je 0x4004cfd	      8228	eval.c	FUNCTION_155
0x4004cee	    0x483b1d000000	            cmp rbx, qword [0x04004cf5] 	      8228	eval.c	FUNCTION_155
0x4004cf5	            0x7406	                            je 0x4004cfd	      8228	eval.c	FUNCTION_155
0x4004cf7	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      8228	eval.c	FUNCTION_155
0x4004cfb	            0xeb07	                           jmp 0x4004d04	      8228	eval.c	FUNCTION_155
0x4004cfd	    0x488b05000000	            mov rax, qword [0x04004d04] 	      8228	eval.c	FUNCTION_155
0x4004d04	          0x4885c0	                           test rax, rax	      8228	eval.c	FUNCTION_155
0x4004d07	            0x741e	                            je 0x4004d27	      8228	eval.c	FUNCTION_155
0x4004d09	    0x81fae7030000	                          cmp edx, 0x3e7	      8230	eval.c	FUNCTION_155	FUNCTION_1	IF_1
0x4004d0f	            0x7e06	                           jle 0x4004d17	      8230	eval.c	FUNCTION_155	FUNCTION_1	IF_1
0x4004d11	            0x3910	                    cmp dword [rax], edx	      8232	eval.c	FUNCTION_155	FUNCTION_1	IF_1	IF_2
0x4004d13	            0x7509	                           jne 0x4004d1e	      8232	eval.c	FUNCTION_155	FUNCTION_1	IF_1	IF_2
0x4004d15	            0xeb26	                           jmp 0x4004d3d	      8232	eval.c	FUNCTION_155	FUNCTION_1	IF_1	IF_2
0x4004d17	          0x83ea01	                              sub edx, 1	      8235	eval.c	FUNCTION_155	FUNCTION_1	ELSE_1	IF_3
0x4004d1a	            0x85d2	                           test edx, edx	      8235	eval.c	FUNCTION_155	FUNCTION_1	ELSE_1	IF_3
0x4004d1c	            0x7e09	                           jle 0x4004d27	      8235	eval.c	FUNCTION_155	FUNCTION_1	ELSE_1	IF_3
0x4004d1e	        0x488b4020	            mov rax, qword [rax + 0x20] 	      8228	eval.c	FUNCTION_155
0x4004d22	          0x4885c0	                           test rax, rax	      8228	eval.c	FUNCTION_155
0x4004d25	            0x75e2	                           jne 0x4004d09	      8228	eval.c	FUNCTION_155
0x4004d27	    0x81fae7030000	                          cmp edx, 0x3e7	      8238	eval.c	FUNCTION_155	IF_3
0x4004d2d	      0xba00000000	                              mov edx, 0	      8238	eval.c	FUNCTION_155	IF_3
0x4004d32	        0x480f4fc2	                          cmovg rax, rdx	      8238	eval.c	FUNCTION_155	IF_3
0x4004d36	            0xeb05	                           jmp 0x4004d3d	      8238	eval.c	FUNCTION_155	IF_3
0x4004d38	      0xb800000000	                              mov eax, 0	      8224	eval.c	FUNCTION_155	IF_1
0x4004d3d	              0x5b	                                 pop rbx	      8241	eval.c	FUNCTION_155
0x4004d3e	              0xc3	                                     ret	      8241	eval.c	FUNCTION_155
var_redir_start	FOR,0:SWITCH,0:DO,0:IF,7:functions,0:WHILE,0:CALL,18:ELSE,2	118
0x4009a3d	            0x4154	                                push r12	       439	eval.c	FUNCTION_6
0x4009a3f	              0x55	                                push rbp	       439	eval.c	FUNCTION_6
0x4009a40	              0x53	                                push rbx	       439	eval.c	FUNCTION_6
0x4009a41	        0x4883ec20	                           sub rsp, 0x20	       439	eval.c	FUNCTION_6
0x4009a45	          0x4889fd	                            mov rbp, rdi	       439	eval.c	FUNCTION_6
0x4009a48	          0x4189f4	                           mov r12d, esi	       439	eval.c	FUNCTION_6
0x4009a4b	    0x64488b042528	                mov rax, qword fs:[0x28]	       439	eval.c	FUNCTION_6
0x4009a54	      0x4889442418	             mov qword [rsp + 0x18], rax	       439	eval.c	FUNCTION_6
0x4009a59	            0x31c0	                            xor eax, eax	       439	eval.c	FUNCTION_6
0x4009a5b	           0xfb63f	                   movzx edi, byte [rdi]	       445	eval.c	FUNCTION_6	IF_1	CALL_1
0x4009a5e	      0xe800000000	                          call 0x4009a63	       445	eval.c	FUNCTION_6	IF_1	CALL_1
0x4009a63	            0x85c0	                           test eax, eax	       445	eval.c	FUNCTION_6	IF_1	CALL_1
0x4009a65	            0x7523	                           jne 0x4009a8a	       445	eval.c	FUNCTION_6	IF_1	CALL_1
0x4009a67	            0x89c3	                            mov ebx, eax	       445	eval.c	FUNCTION_6	IF_1	CALL_1
0x4009a69	      0xba05000000	                              mov edx, 5	       447	eval.c	FUNCTION_6	IF_1	CALL_3
0x4009a6e	      0xbe00000000	                              mov esi, 0	       447	eval.c	FUNCTION_6	IF_1	CALL_3
0x4009a73	      0xbf00000000	                              mov edi, 0	       447	eval.c	FUNCTION_6	IF_1	CALL_3
0x4009a78	      0xe800000000	                          call 0x4009a7d	       447	eval.c	FUNCTION_6	IF_1	CALL_3
0x4009a7d	          0x4889c7	                            mov rdi, rax	       447	eval.c	FUNCTION_6	IF_1	CALL_3
0x4009a80	      0xe800000000	                          call 0x4009a85	       447	eval.c	FUNCTION_6	IF_1	CALL_3
0x4009a85	      0xe99e010000	                           jmp 0x4009c28	       448	eval.c	FUNCTION_6	IF_1
0x4009a8a	          0x4889ef	                            mov rdi, rbp	       452	eval.c	FUNCTION_6	CALL_4
0x4009a8d	      0xe800000000	                          call 0x4009a92	       452	eval.c	FUNCTION_6	CALL_4
0x4009a92	    0x488905000000	            mov qword [0x04009a99], rax 	       452	eval.c	FUNCTION_6	CALL_4
0x4009a99	      0xbb00000000	                              mov ebx, 0	       454	eval.c	FUNCTION_6	IF_2
0x4009a9e	          0x4885c0	                           test rax, rax	       453	eval.c	FUNCTION_6	IF_2
0x4009aa1	     0xf8481010000	                            je 0x4009c28	       453	eval.c	FUNCTION_6	IF_2
0x4009aa7	      0xbf60000000	                           mov edi, 0x60	       456	eval.c	FUNCTION_6	CALL_5
0x4009aac	      0xe800000000	                          call 0x4009ab1	       456	eval.c	FUNCTION_6	CALL_5
0x4009ab1	    0x488905000000	            mov qword [0x04009ab8], rax 	       456	eval.c	FUNCTION_6	CALL_5
0x4009ab8	          0x4885c0	                           test rax, rax	       457	eval.c	FUNCTION_6	IF_3
0x4009abb	            0x750a	                           jne 0x4009ac7	       457	eval.c	FUNCTION_6	IF_3
0x4009abd	      0xe800000000	                          call 0x4009ac2	       459	eval.c	FUNCTION_6	IF_3	CALL_6
0x4009ac2	      0xe961010000	                           jmp 0x4009c28	       460	eval.c	FUNCTION_6	IF_3
0x4009ac7	      0xbaf4010000	                          mov edx, 0x1f4	       464	eval.c	FUNCTION_6	CALL_7
0x4009acc	      0xbe01000000	                              mov esi, 1	       464	eval.c	FUNCTION_6	CALL_7
0x4009ad1	      0xbf00000000	                              mov edi, 0	       464	eval.c	FUNCTION_6	CALL_7
0x4009ad6	      0xe800000000	                          call 0x4009adb	       464	eval.c	FUNCTION_6	CALL_7
0x4009adb	        0x4883ec08	                              sub rsp, 8	       467	eval.c	FUNCTION_6	CALL_8
0x4009adf	            0x6a02	                                  push 2	       467	eval.c	FUNCTION_6	CALL_8
0x4009ae1	    0x41b900000000	                              mov r9d, 0	       467	eval.c	FUNCTION_6	CALL_8
0x4009ae7	    0x41b800000000	                              mov r8d, 0	       467	eval.c	FUNCTION_6	CALL_8
0x4009aed	      0xb900000000	                              mov ecx, 0	       467	eval.c	FUNCTION_6	CALL_8
0x4009af2	    0x488b15000000	            mov rdx, qword [0x04009af9] 	       467	eval.c	FUNCTION_6	CALL_8
0x4009af9	      0xbe00000000	                              mov esi, 0	       467	eval.c	FUNCTION_6	CALL_8
0x4009afe	    0x488b3d000000	            mov rdi, qword [0x04009b05] 	       467	eval.c	FUNCTION_6	CALL_8
0x4009b05	      0xe800000000	                          call 0x4009b0a	       467	eval.c	FUNCTION_6	CALL_8
0x4009b0a	    0x488905000000	            mov qword [0x04009b11], rax 	       467	eval.c	FUNCTION_6	CALL_8
0x4009b11	        0x4883c410	                           add rsp, 0x10	       469	eval.c	FUNCTION_6	IF_4
0x4009b15	          0x4885c0	                           test rax, rax	       469	eval.c	FUNCTION_6	IF_4
0x4009b18	            0x7412	                            je 0x4009b2c	       469	eval.c	FUNCTION_6	IF_4
0x4009b1a	    0x488b3d000000	            mov rdi, qword [0x04009b21] 	       469	eval.c	FUNCTION_6	IF_4
0x4009b21	        0x48833f00	                      cmp qword [rdi], 0	       469	eval.c	FUNCTION_6	IF_4
0x4009b25	            0x7405	                            je 0x4009b2c	       469	eval.c	FUNCTION_6	IF_4
0x4009b27	          0x803800	                       cmp byte [rax], 0	       469	eval.c	FUNCTION_6	IF_4
0x4009b2a	            0x7471	                            je 0x4009b9d	       469	eval.c	FUNCTION_6	IF_4
0x4009b2c	    0x488b3d000000	            mov rdi, qword [0x04009b33] 	       471	eval.c	FUNCTION_6	IF_4	CALL_9
0x4009b33	      0xe800000000	                          call 0x4009b38	       471	eval.c	FUNCTION_6	IF_4	CALL_9
0x4009b38	    0x488b05000000	            mov rax, qword [0x04009b3f] 	       472	eval.c	FUNCTION_6	IF_4	IF_5
0x4009b3f	          0x4885c0	                           test rax, rax	       472	eval.c	FUNCTION_6	IF_4	IF_5
0x4009b42	            0x7423	                            je 0x4009b67	       472	eval.c	FUNCTION_6	IF_4	IF_5
0x4009b44	          0x803800	                       cmp byte [rax], 0	       472	eval.c	FUNCTION_6	IF_4	IF_5
0x4009b47	            0x741e	                            je 0x4009b67	       472	eval.c	FUNCTION_6	IF_4	IF_5
0x4009b49	      0xba05000000	                              mov edx, 5	       474	eval.c	FUNCTION_6	IF_4	CALL_11
0x4009b4e	      0xbe00000000	                              mov esi, 0	       474	eval.c	FUNCTION_6	IF_4	CALL_11
0x4009b53	      0xbf00000000	                              mov edi, 0	       474	eval.c	FUNCTION_6	IF_4	CALL_11
0x4009b58	      0xe800000000	                          call 0x4009b5d	       474	eval.c	FUNCTION_6	IF_4	CALL_11
0x4009b5d	          0x4889c7	                            mov rdi, rax	       474	eval.c	FUNCTION_6	IF_4	CALL_11
0x4009b60	      0xe800000000	                          call 0x4009b65	       474	eval.c	FUNCTION_6	IF_4	CALL_11
0x4009b65	            0xeb1c	                           jmp 0x4009b83	       474	eval.c	FUNCTION_6	IF_4	CALL_11
0x4009b67	      0xba05000000	                              mov edx, 5	       476	eval.c	FUNCTION_6	IF_4	CALL_13
0x4009b6c	      0xbe00000000	                              mov esi, 0	       476	eval.c	FUNCTION_6	IF_4	CALL_13
0x4009b71	      0xbf00000000	                              mov edi, 0	       476	eval.c	FUNCTION_6	IF_4	CALL_13
0x4009b76	      0xe800000000	                          call 0x4009b7b	       476	eval.c	FUNCTION_6	IF_4	CALL_13
0x4009b7b	          0x4889c7	                            mov rdi, rax	       476	eval.c	FUNCTION_6	IF_4	CALL_13
0x4009b7e	      0xe800000000	                          call 0x4009b83	       476	eval.c	FUNCTION_6	IF_4	CALL_13
0x4009b83	    0x48c705000000	               mov qword [0x04009b8e], 0	       477	eval.c	FUNCTION_6	IF_4
0x4009b8e	      0xe800000000	                          call 0x4009b93	       478	eval.c	FUNCTION_6	IF_4	CALL_14
0x4009b93	      0xbb00000000	                              mov ebx, 0	       479	eval.c	FUNCTION_6	IF_4
0x4009b98	      0xe98b000000	                           jmp 0x4009c28	       479	eval.c	FUNCTION_6	IF_4
0x4009b9d	    0x8b1d00000000	            mov ebx, dword [0x04009ba3] 	       484	eval.c	FUNCTION_6
0x4009ba3	    0xc70500000000	               mov dword [0x04009bad], 0	       485	eval.c	FUNCTION_6
0x4009bad	    0xc70424020000	                      mov dword [rsp], 2	       486	eval.c	FUNCTION_6
0x4009bb4	    0x48c744240800	                  mov qword [rsp + 8], 0	       487	eval.c	FUNCTION_6
0x4009bbd	          0x4585e4	                         test r12d, r12d	       488	eval.c	FUNCTION_6	IF_6
0x4009bc0	            0x7418	                            je 0x4009bda	       488	eval.c	FUNCTION_6	IF_6
0x4009bc2	    0x41b800000000	                              mov r8d, 0	       489	eval.c	FUNCTION_6	CALL_15
0x4009bc8	      0xb901000000	                              mov ecx, 1	       489	eval.c	FUNCTION_6	CALL_15
0x4009bcd	          0x4889e2	                            mov rdx, rsp	       489	eval.c	FUNCTION_6	CALL_15
0x4009bd0	          0x4889c6	                            mov rsi, rax	       489	eval.c	FUNCTION_6	CALL_15
0x4009bd3	      0xe8cebbffff	                   call sym.set_var_lval	       489	eval.c	FUNCTION_6	CALL_15
0x4009bd8	            0xeb16	                           jmp 0x4009bf0	       489	eval.c	FUNCTION_6	CALL_15
0x4009bda	    0x41b800000000	                              mov r8d, 0	       491	eval.c	FUNCTION_6	CALL_16
0x4009be0	      0xb901000000	                              mov ecx, 1	       491	eval.c	FUNCTION_6	CALL_16
0x4009be5	          0x4889e2	                            mov rdx, rsp	       491	eval.c	FUNCTION_6	CALL_16
0x4009be8	          0x4889c6	                            mov rsi, rax	       491	eval.c	FUNCTION_6	CALL_16
0x4009beb	      0xe8b6bbffff	                   call sym.set_var_lval	       491	eval.c	FUNCTION_6	CALL_16
0x4009bf0	    0x488b3d000000	            mov rdi, qword [0x04009bf7] 	       492	eval.c	FUNCTION_6	CALL_17
0x4009bf7	      0xe800000000	                          call 0x4009bfc	       492	eval.c	FUNCTION_6	CALL_17
0x4009bfc	    0x8b0500000000	            mov eax, dword [0x04009c02] 	       493	eval.c	FUNCTION_6
0x4009c02	             0x9c3	                             or ebx, eax	       494	eval.c	FUNCTION_6
0x4009c04	    0x891d00000000	            mov dword [0x04009c0a], ebx 	       494	eval.c	FUNCTION_6
0x4009c0a	      0xbb01000000	                              mov ebx, 1	       502	eval.c	FUNCTION_6
0x4009c0f	            0x85c0	                           test eax, eax	       495	eval.c	FUNCTION_6	IF_7
0x4009c11	            0x7415	                            je 0x4009c28	       495	eval.c	FUNCTION_6	IF_7
0x4009c13	    0x48c705000000	               mov qword [0x04009c1e], 0	       497	eval.c	FUNCTION_6	IF_7
0x4009c1e	      0xe800000000	                          call 0x4009c23	       498	eval.c	FUNCTION_6	IF_7	CALL_18
0x4009c23	      0xbb00000000	                              mov ebx, 0	       499	eval.c	FUNCTION_6	IF_7
0x4009c28	            0x89d8	                            mov eax, ebx	       503	eval.c	FUNCTION_6
0x4009c2a	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       503	eval.c	FUNCTION_6
0x4009c2f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       503	eval.c	FUNCTION_6
0x4009c38	            0x7405	                            je 0x4009c3f	       503	eval.c	FUNCTION_6
0x4009c3a	      0xe800000000	                          call 0x4009c3f	       503	eval.c	FUNCTION_6
0x4009c3f	        0x4883c420	                           add rsp, 0x20	       503	eval.c	FUNCTION_6
0x4009c43	              0x5b	                                 pop rbx	       503	eval.c	FUNCTION_6
0x4009c44	              0x5d	                                 pop rbp	       503	eval.c	FUNCTION_6
0x4009c45	            0x415c	                                 pop r12	       503	eval.c	FUNCTION_6
0x4009c47	              0xc3	                                     ret	       503	eval.c	FUNCTION_6
make_expanded_name	FOR,0:SWITCH,0:DO,0:IF,5:functions,0:WHILE,0:CALL,10:ELSE,0	105
0x40086be	            0x4156	                                push r14	      6312	eval.c	FUNCTION_99
0x40086c0	            0x4155	                                push r13	      6312	eval.c	FUNCTION_99
0x40086c2	            0x4154	                                push r12	      6312	eval.c	FUNCTION_99
0x40086c4	              0x55	                                push rbp	      6312	eval.c	FUNCTION_99
0x40086c5	              0x53	                                push rbx	      6312	eval.c	FUNCTION_99
0x40086c6	        0x4883ec20	                           sub rsp, 0x20	      6312	eval.c	FUNCTION_99
0x40086ca	      0x4889742408	                mov qword [rsp + 8], rsi	      6312	eval.c	FUNCTION_99
0x40086cf	        0x48891424	                    mov qword [rsp], rdx	      6312	eval.c	FUNCTION_99
0x40086d3	          0x4889cb	                            mov rbx, rcx	      6312	eval.c	FUNCTION_99
0x40086d6	    0x64488b0c2528	                mov rcx, qword fs:[0x28]	      6312	eval.c	FUNCTION_99
0x40086df	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      6312	eval.c	FUNCTION_99
0x40086e4	            0x31c9	                            xor ecx, ecx	      6312	eval.c	FUNCTION_99
0x40086e6	    0x48c744241000	               mov qword [rsp + 0x10], 0	      6316	eval.c	FUNCTION_99
0x40086ef	          0x4885d2	                           test rdx, rdx	      6318	eval.c	FUNCTION_99	IF_1
0x40086f2	     0xf840a010000	                            je 0x4008802	      6318	eval.c	FUNCTION_99	IF_1
0x40086f8	          0x4989fe	                            mov r14, rdi	      6318	eval.c	FUNCTION_99	IF_1
0x40086fb	          0x4885db	                           test rbx, rbx	      6318	eval.c	FUNCTION_99	IF_1
0x40086fe	     0xf84fe000000	                            je 0x4008802	      6318	eval.c	FUNCTION_99	IF_1
0x4008704	          0xc60600	                       mov byte [rsi], 0	      6320	eval.c	FUNCTION_99
0x4008707	        0x488b0424	                    mov rax, qword [rsp]	      6321	eval.c	FUNCTION_99
0x400870b	          0xc60000	                       mov byte [rax], 0	      6321	eval.c	FUNCTION_99
0x400870e	        0x440fb62b	                  movzx r13d, byte [rbx]	      6322	eval.c	FUNCTION_99
0x4008712	          0xc60300	                       mov byte [rbx], 0	      6323	eval.c	FUNCTION_99
0x4008715	      0x488b442408	                mov rax, qword [rsp + 8]	      6325	eval.c	FUNCTION_99	CALL_1
0x400871a	        0x488d7801	                      lea rdi, [rax + 1]	      6325	eval.c	FUNCTION_99	CALL_1
0x400871e	      0xba00000000	                              mov edx, 0	      6325	eval.c	FUNCTION_99	CALL_1
0x4008723	      0x488d742410	                   lea rsi, [rsp + 0x10]	      6325	eval.c	FUNCTION_99	CALL_1
0x4008728	      0xe800000000	                          call 0x400872d	      6325	eval.c	FUNCTION_99	CALL_1
0x400872d	          0x4989c4	                            mov r12, rax	      6325	eval.c	FUNCTION_99	CALL_1
0x4008730	          0x4885c0	                           test rax, rax	      6326	eval.c	FUNCTION_99	IF_2
0x4008733	     0xf84e0000000	                            je 0x4008819	      6326	eval.c	FUNCTION_99	IF_2
0x4008739	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      6326	eval.c	FUNCTION_99	IF_2
0x400873f	     0xf85d4000000	                           jne 0x4008819	      6326	eval.c	FUNCTION_99	IF_2
0x4008745	      0xb800000000	                              mov eax, 0	      6328	eval.c	FUNCTION_99	IF_2	CALL_3
0x400874a	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      6328	eval.c	FUNCTION_99	IF_2	CALL_3
0x4008751	          0x4c89e7	                            mov rdi, r12	      6328	eval.c	FUNCTION_99	IF_2	CALL_3
0x4008754	            0xf2ae	              repne scasb al, byte [rdi]	      6328	eval.c	FUNCTION_99	IF_2	CALL_3
0x4008756	          0x48f7d1	                                 not rcx	      6328	eval.c	FUNCTION_99	IF_2	CALL_3
0x4008759	      0x488b442408	                mov rax, qword [rsp + 8]	      6328	eval.c	FUNCTION_99	IF_2	CALL_3
0x400875e	          0x4c29f0	                            sub rax, r14	      6328	eval.c	FUNCTION_99	IF_2	CALL_3
0x4008761	          0x4889da	                            mov rdx, rbx	      6328	eval.c	FUNCTION_99	IF_2	CALL_3
0x4008764	        0x482b1424	                    sub rdx, qword [rsp]	      6328	eval.c	FUNCTION_99	IF_2	CALL_3
0x4008768	        0x8d441001	                lea eax, [rax + rdx + 1]	      6328	eval.c	FUNCTION_99	IF_2	CALL_3
0x400876c	        0x8d7c08ff	                lea edi, [rax + rcx - 1]	      6328	eval.c	FUNCTION_99	IF_2	CALL_3
0x4008770	      0xe800000000	                          call 0x4008775	      6328	eval.c	FUNCTION_99	IF_2	CALL_3
0x4008775	          0x4889c5	                            mov rbp, rax	      6328	eval.c	FUNCTION_99	IF_2	CALL_3
0x4008778	          0x4885c0	                           test rax, rax	      6330	eval.c	FUNCTION_99	IF_2	IF_3
0x400877b	     0xf8498000000	                            je 0x4008819	      6330	eval.c	FUNCTION_99	IF_2	IF_3
0x4008781	          0x4c89f6	                            mov rsi, r14	       110	string3.h	FUNCTION_197	CALL_3
0x4008784	          0x4889c7	                            mov rdi, rax	       110	string3.h	FUNCTION_197	CALL_3
0x4008787	      0xe800000000	                          call 0x400878c	       110	string3.h	FUNCTION_197	CALL_3
0x400878c	          0x4c89e6	                            mov rsi, r12	       148	string3.h	FUNCTION_201	CALL_3
0x400878f	          0x4889ef	                            mov rdi, rbp	       148	string3.h	FUNCTION_201	CALL_3
0x4008792	      0xe800000000	                          call 0x4008797	       148	string3.h	FUNCTION_201	CALL_3
0x4008797	        0x488b0424	                    mov rax, qword [rsp]	       148	string3.h	FUNCTION_201	CALL_3
0x400879b	        0x488d7001	                      lea rsi, [rax + 1]	       148	string3.h	FUNCTION_201	CALL_3
0x400879f	          0x4889ef	                            mov rdi, rbp	       148	string3.h	FUNCTION_201	CALL_3
0x40087a2	      0xe800000000	                          call 0x40087a7	       148	string3.h	FUNCTION_201	CALL_3
0x40087a7	          0x4c89e7	                            mov rdi, r12	      6337	eval.c	FUNCTION_99	CALL_7
0x40087aa	      0xe800000000	                          call 0x40087af	      6337	eval.c	FUNCTION_99	CALL_7
0x40087af	          0x44882b	                    mov byte [rbx], r13b	      6339	eval.c	FUNCTION_99
0x40087b2	      0x488b442408	                mov rax, qword [rsp + 8]	      6340	eval.c	FUNCTION_99
0x40087b7	          0xc6007b	                    mov byte [rax], 0x7b	      6340	eval.c	FUNCTION_99
0x40087ba	        0x488b0424	                    mov rax, qword [rsp]	      6341	eval.c	FUNCTION_99
0x40087be	          0xc6007d	                    mov byte [rax], 0x7d	      6341	eval.c	FUNCTION_99
0x40087c1	      0xb900000000	                              mov ecx, 0	      6345	eval.c	FUNCTION_99	IF_4	CALL_8
0x40087c6	          0x4889e2	                            mov rdx, rsp	      6345	eval.c	FUNCTION_99	IF_4	CALL_8
0x40087c9	      0x488d742408	                      lea rsi, [rsp + 8]	      6345	eval.c	FUNCTION_99	IF_4	CALL_8
0x40087ce	          0x4889ef	                            mov rdi, rbp	      6345	eval.c	FUNCTION_99	IF_4	CALL_8
0x40087d1	      0xe800000000	                          call 0x40087d6	      6345	eval.c	FUNCTION_99	IF_4	CALL_8
0x40087d6	          0x4889c1	                            mov rcx, rax	      6345	eval.c	FUNCTION_99	IF_4	CALL_8
0x40087d9	      0x488b742408	                mov rsi, qword [rsp + 8]	      6346	eval.c	FUNCTION_99	IF_4	IF_5
0x40087de	          0x4889e8	                            mov rax, rbp	      6328	eval.c	FUNCTION_99	IF_2	CALL_3
0x40087e1	          0x4885f6	                           test rsi, rsi	      6346	eval.c	FUNCTION_99	IF_4	IF_5
0x40087e4	            0x7421	                            je 0x4008807	      6346	eval.c	FUNCTION_99	IF_4	IF_5
0x40087e6	        0x488b1424	                    mov rdx, qword [rsp]	      6349	eval.c	FUNCTION_99	IF_4	IF_5	CALL_9
0x40087ea	          0x4889ef	                            mov rdi, rbp	      6349	eval.c	FUNCTION_99	IF_4	IF_5	CALL_9
0x40087ed	      0xe8ccfeffff	             call sym.make_expanded_name	      6349	eval.c	FUNCTION_99	IF_4	IF_5	CALL_9
0x40087f2	          0x4889c3	                            mov rbx, rax	      6349	eval.c	FUNCTION_99	IF_4	IF_5	CALL_9
0x40087f5	          0x4889ef	                            mov rdi, rbp	      6351	eval.c	FUNCTION_99	IF_4	IF_5	CALL_10
0x40087f8	      0xe800000000	                          call 0x40087fd	      6351	eval.c	FUNCTION_99	IF_4	IF_5	CALL_10
0x40087fd	          0x4889d8	                            mov rax, rbx	      6352	eval.c	FUNCTION_99	IF_4	IF_5
0x4008800	            0xeb05	                           jmp 0x4008807	      6352	eval.c	FUNCTION_99	IF_4	IF_5
0x4008802	      0xb800000000	                              mov eax, 0	      6319	eval.c	FUNCTION_99	IF_1
0x4008807	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      6357	eval.c	FUNCTION_99
0x400880c	    0x644833142528	                xor rdx, qword fs:[0x28]	      6357	eval.c	FUNCTION_99
0x4008815	            0x7428	                            je 0x400883f	      6357	eval.c	FUNCTION_99
0x4008817	            0xeb21	                           jmp 0x400883a	      6357	eval.c	FUNCTION_99
0x4008819	          0x4c89e7	                            mov rdi, r12	      6337	eval.c	FUNCTION_99	CALL_7
0x400881c	      0xe800000000	                          call 0x4008821	      6337	eval.c	FUNCTION_99	CALL_7
0x4008821	          0x44882b	                    mov byte [rbx], r13b	      6339	eval.c	FUNCTION_99
0x4008824	      0x488b442408	                mov rax, qword [rsp + 8]	      6340	eval.c	FUNCTION_99
0x4008829	          0xc6007b	                    mov byte [rax], 0x7b	      6340	eval.c	FUNCTION_99
0x400882c	        0x488b0424	                    mov rax, qword [rsp]	      6341	eval.c	FUNCTION_99
0x4008830	          0xc6007d	                    mov byte [rax], 0x7d	      6341	eval.c	FUNCTION_99
0x4008833	      0xb800000000	                              mov eax, 0	      6341	eval.c	FUNCTION_99
0x4008838	            0xebcd	                           jmp 0x4008807	      6341	eval.c	FUNCTION_99
0x400883a	      0xe800000000	                          call 0x400883f	      6357	eval.c	FUNCTION_99
0x400883f	        0x4883c420	                           add rsp, 0x20	      6357	eval.c	FUNCTION_99
0x4008843	              0x5b	                                 pop rbx	      6357	eval.c	FUNCTION_99
0x4008844	              0x5d	                                 pop rbp	      6357	eval.c	FUNCTION_99
0x4008845	            0x415c	                                 pop r12	      6357	eval.c	FUNCTION_99
0x4008847	            0x415d	                                 pop r13	      6357	eval.c	FUNCTION_99
0x4008849	            0x415e	                                 pop r14	      6357	eval.c	FUNCTION_99
0x400884b	              0xc3	                                     ret	      6357	eval.c	FUNCTION_99
var_redir_str	FOR,0:SWITCH,0:DO,0:IF,3:functions,0:WHILE,0:CALL,4:ELSE,2	31
0x40099d0	    0x48833d000000	               cmp qword [0x040099d8], 0	       519	eval.c	FUNCTION_7	IF_1
0x40099d8	            0x7461	                            je 0x4009a3b	       519	eval.c	FUNCTION_7	IF_1
0x40099da	              0x55	                                push rbp	       516	eval.c	FUNCTION_7
0x40099db	              0x53	                                push rbx	       516	eval.c	FUNCTION_7
0x40099dc	        0x4883ec08	                              sub rsp, 8	       516	eval.c	FUNCTION_7
0x40099e0	          0x4889fd	                            mov rbp, rdi	       516	eval.c	FUNCTION_7
0x40099e3	            0x89f3	                            mov ebx, esi	       516	eval.c	FUNCTION_7
0x40099e5	          0x83feff	             cmp esi, 0xffffffffffffffff	       522	eval.c	FUNCTION_7	IF_2
0x40099e8	            0x7514	                           jne 0x40099fe	       522	eval.c	FUNCTION_7	IF_2
0x40099ea	      0xb800000000	                              mov eax, 0	       523	eval.c	FUNCTION_7	CALL_1
0x40099ef	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       523	eval.c	FUNCTION_7	CALL_1
0x40099f6	            0xf2ae	              repne scasb al, byte [rdi]	       523	eval.c	FUNCTION_7	CALL_1
0x40099f8	          0x48f7d1	                                 not rcx	       523	eval.c	FUNCTION_7	CALL_1
0x40099fb	          0x8d59ff	                      lea ebx, [rcx - 1]	       523	eval.c	FUNCTION_7	CALL_1
0x40099fe	            0x89de	                            mov esi, ebx	       527	eval.c	FUNCTION_7	ELSE_1	IF_3	CALL_2
0x4009a00	      0xbf00000000	                              mov edi, 0	       527	eval.c	FUNCTION_7	ELSE_1	IF_3	CALL_2
0x4009a05	      0xe800000000	                          call 0x4009a0a	       527	eval.c	FUNCTION_7	ELSE_1	IF_3	CALL_2
0x4009a0a	          0x83f801	                              cmp eax, 1	       527	eval.c	FUNCTION_7	ELSE_1	IF_3	CALL_2
0x4009a0d	            0x7521	                           jne 0x4009a30	       527	eval.c	FUNCTION_7	ELSE_1	IF_3	CALL_2
0x4009a0f	          0x4863d3	                         movsxd rdx, ebx	        59	string3.h	FUNCTION_192	CALL_3
0x4009a12	    0x48633d000000	         movsxd rdi, dword [0x04009a19] 	        59	string3.h	FUNCTION_192	CALL_3
0x4009a19	    0x48033d000000	             add rdi, qword [0x04009a20]	        59	string3.h	FUNCTION_192	CALL_3
0x4009a20	          0x4889ee	                            mov rsi, rbp	        59	string3.h	FUNCTION_192	CALL_3
0x4009a23	      0xe800000000	                          call 0x4009a28	        59	string3.h	FUNCTION_192	CALL_3
0x4009a28	     0x11d00000000	             add dword [0x04009a2e], ebx	       530	eval.c	FUNCTION_7	ELSE_1	IF_3
0x4009a2e	            0xeb05	                           jmp 0x4009a35	       530	eval.c	FUNCTION_7	ELSE_1	IF_3
0x4009a30	      0xe800000000	                          call 0x4009a35	       533	eval.c	FUNCTION_7	CALL_4
0x4009a35	        0x4883c408	                              add rsp, 8	       534	eval.c	FUNCTION_7
0x4009a39	              0x5b	                                 pop rbx	       534	eval.c	FUNCTION_7
0x4009a3a	              0x5d	                                 pop rbp	       534	eval.c	FUNCTION_7
0x4009a3b	            0xf3c3	                                     ret	       534	eval.c	FUNCTION_7
typval_compare	FOR,0:SWITCH,3:DO,0:IF,26:functions,0:WHILE,0:CALL,27:ELSE,19	401
0x4006e2e	            0x4156	                                push r14	      9199	eval.c	FUNCTION_181
0x4006e30	            0x4155	                                push r13	      9199	eval.c	FUNCTION_181
0x4006e32	            0x4154	                                push r12	      9199	eval.c	FUNCTION_181
0x4006e34	              0x55	                                push rbp	      9199	eval.c	FUNCTION_181
0x4006e35	              0x53	                                push rbx	      9199	eval.c	FUNCTION_181
0x4006e36	    0x4881ecb00000	                           sub rsp, 0xb0	      9199	eval.c	FUNCTION_181
0x4006e3d	          0x4889fb	                            mov rbx, rdi	      9199	eval.c	FUNCTION_181
0x4006e40	          0x4989f4	                            mov r12, rsi	      9199	eval.c	FUNCTION_181
0x4006e43	          0x4189d5	                           mov r13d, edx	      9199	eval.c	FUNCTION_181
0x4006e46	          0x4489c5	                            mov ebp, r8d	      9199	eval.c	FUNCTION_181
0x4006e49	    0x64488b042528	                mov rax, qword fs:[0x28]	      9199	eval.c	FUNCTION_181
0x4006e52	    0x48898424a800	             mov qword [rsp + 0xa8], rax	      9199	eval.c	FUNCTION_181
0x4006e5a	            0x31c0	                            xor eax, eax	      9199	eval.c	FUNCTION_181
0x4006e5c	            0x85c9	                           test ecx, ecx	      9205	eval.c	FUNCTION_181	IF_1
0x4006e5e	     0xf844b050000	                            je 0x40073af	      9205	eval.c	FUNCTION_181	IF_1
0x4006e64	            0x8b17	                    mov edx, dword [rdi]	      9205	eval.c	FUNCTION_181	IF_1
0x4006e66	            0x3b16	                    cmp edx, dword [rsi]	      9205	eval.c	FUNCTION_181	IF_1
0x4006e68	     0xf8437050000	                            je 0x40073a5	      9205	eval.c	FUNCTION_181	IF_1
0x4006e6e	        0x4183fd02	                             cmp r13d, 2	      9209	eval.c	FUNCTION_181	IF_1
0x4006e72	        0x400f94c5	                                sete bpl	      9209	eval.c	FUNCTION_181	IF_1
0x4006e76	        0x400fb6ed	                          movzx ebp, bpl	      9209	eval.c	FUNCTION_181	IF_1
0x4006e7a	      0xe9fa040000	                           jmp 0x4007379	      9209	eval.c	FUNCTION_181	IF_1
0x4006e7f	      0x498b442408	                mov rax, qword [r12 + 8]	      9215	eval.c	FUNCTION_181	ELSE_1	IF_2	IF_3
0x4006e84	        0x48394308	                cmp qword [rbx + 8], rax	      9215	eval.c	FUNCTION_181	ELSE_1	IF_2	IF_3
0x4006e88	        0x400f94c5	                                sete bpl	      9215	eval.c	FUNCTION_181	ELSE_1	IF_2	IF_3
0x4006e8c	        0x400fb6ed	                          movzx ebp, bpl	      9215	eval.c	FUNCTION_181	ELSE_1	IF_2	IF_3
0x4006e90	          0x4889e8	                            mov rax, rbp	      9218	eval.c	FUNCTION_181	ELSE_1	IF_2	IF_3	IF_4
0x4006e93	        0x4883f001	                              xor rax, 1	      9218	eval.c	FUNCTION_181	ELSE_1	IF_2	IF_3	IF_4
0x4006e97	        0x4183fd02	                             cmp r13d, 2	      9218	eval.c	FUNCTION_181	ELSE_1	IF_2	IF_3	IF_4
0x4006e9b	        0x480f44e8	                          cmove rbp, rax	      9218	eval.c	FUNCTION_181	ELSE_1	IF_2	IF_3	IF_4
0x4006e9f	      0xe9d5040000	                           jmp 0x4007379	      9218	eval.c	FUNCTION_181	ELSE_1	IF_2	IF_3	IF_4
0x4006ea4	        0x41391424	                    cmp dword [r12], edx	      9220	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5
0x4006ea8	            0x750b	                           jne 0x4006eb5	      9220	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5
0x4006eaa	        0x418d45ff	                      lea eax, [r13 - 1]	      9221	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5
0x4006eae	          0x83f801	                              cmp eax, 1	      9221	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5
0x4006eb1	            0x7720	                            ja 0x4006ed3	      9221	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5
0x4006eb3	            0xeb4c	                           jmp 0x4006f01	      9221	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5
0x4006eb5	      0xba05000000	                              mov edx, 5	      9224	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5	CALL_2
0x4006eba	      0xbe00000000	                              mov esi, 0	      9224	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5	CALL_2
0x4006ebf	      0xbf00000000	                              mov edi, 0	      9224	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5	CALL_2
0x4006ec4	      0xe800000000	                          call 0x4006ec9	      9224	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5	CALL_2
0x4006ec9	          0x4889c7	                            mov rdi, rax	      9224	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5	CALL_2
0x4006ecc	      0xe800000000	                          call 0x4006ed1	      9224	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5	CALL_2
0x4006ed1	            0xeb1c	                           jmp 0x4006eef	      9224	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5	CALL_2
0x4006ed3	      0xba05000000	                              mov edx, 5	      9226	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5	CALL_4
0x4006ed8	      0xbe00000000	                              mov esi, 0	      9226	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5	CALL_4
0x4006edd	      0xbf00000000	                              mov edi, 0	      9226	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5	CALL_4
0x4006ee2	      0xe800000000	                          call 0x4006ee7	      9226	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5	CALL_4
0x4006ee7	          0x4889c7	                            mov rdi, rax	      9226	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5	CALL_4
0x4006eea	      0xe800000000	                          call 0x4006eef	      9226	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5	CALL_4
0x4006eef	          0x4889df	                            mov rdi, rbx	      9227	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5	CALL_5
0x4006ef2	      0xe800000000	                          call 0x4006ef7	      9227	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5	CALL_5
0x4006ef7	      0xb800000000	                              mov eax, 0	      9228	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5
0x4006efc	      0xe98f040000	                           jmp 0x4007390	      9228	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5
0x4006f01	      0x498b742408	                mov rsi, qword [r12 + 8]	      9233	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_4	CALL_6
0x4006f06	        0x488b7b08	                mov rdi, qword [rbx + 8]	      9233	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_4	CALL_6
0x4006f0a	      0xb900000000	                              mov ecx, 0	      9233	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_4	CALL_6
0x4006f0f	            0x89ea	                            mov edx, ebp	      9233	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_4	CALL_6
0x4006f11	      0xe800000000	                          call 0x4006f16	      9233	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_4	CALL_6
0x4006f16	          0x4863e8	                         movsxd rbp, eax	      9233	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_4	CALL_6
0x4006f19	        0x4183fd02	                             cmp r13d, 2	      9235	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_4	IF_7
0x4006f1d	     0xf8556040000	                           jne 0x4007379	      9235	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_4	IF_7
0x4006f23	          0x4885ed	                           test rbp, rbp	      9236	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_4	IF_7
0x4006f26	        0x400f94c5	                                sete bpl	      9236	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_4	IF_7
0x4006f2a	        0x400fb6ed	                          movzx ebp, bpl	      9236	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_4	IF_7
0x4006f2e	      0xe946040000	                           jmp 0x4007379	      9236	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_4	IF_7
0x4006f33	          0x83fe06	                              cmp esi, 6	      9240	eval.c	FUNCTION_181	ELSE_5	IF_8
0x4006f36	            0x7409	                            je 0x4006f41	      9240	eval.c	FUNCTION_181	ELSE_5	IF_8
0x4006f38	          0x83fa06	                              cmp edx, 6	      9240	eval.c	FUNCTION_181	ELSE_5	IF_8
0x4006f3b	     0xf85c2000000	                           jne 0x4007003	      9240	eval.c	FUNCTION_181	ELSE_5	IF_8
0x4006f41	            0x85c9	                           test ecx, ecx	      9242	eval.c	FUNCTION_181	ELSE_5	IF_8	IF_9
0x4006f43	            0x7431	                            je 0x4006f76	      9242	eval.c	FUNCTION_181	ELSE_5	IF_8	IF_9
0x4006f45	      0xbd00000000	                              mov ebp, 0	      9245	eval.c	FUNCTION_181	ELSE_5	IF_8	IF_9
0x4006f4a	            0x39d6	                            cmp esi, edx	      9245	eval.c	FUNCTION_181	ELSE_5	IF_8	IF_9
0x4006f4c	            0x7511	                           jne 0x4006f5f	      9245	eval.c	FUNCTION_181	ELSE_5	IF_8	IF_9
0x4006f4e	      0x498b442408	                mov rax, qword [r12 + 8]	      9245	eval.c	FUNCTION_181	ELSE_5	IF_8	IF_9
0x4006f53	        0x48394308	                cmp qword [rbx + 8], rax	      9245	eval.c	FUNCTION_181	ELSE_5	IF_8	IF_9
0x4006f57	        0x400f94c5	                                sete bpl	      9245	eval.c	FUNCTION_181	ELSE_5	IF_8	IF_9
0x4006f5b	        0x400fb6ed	                          movzx ebp, bpl	      9245	eval.c	FUNCTION_181	ELSE_5	IF_8	IF_9
0x4006f5f	          0x4863ed	                         movsxd rbp, ebp	      9244	eval.c	FUNCTION_181	ELSE_5	IF_8	IF_9
0x4006f62	          0x4889e8	                            mov rax, rbp	      9247	eval.c	FUNCTION_181	ELSE_5	IF_8	IF_9	IF_10
0x4006f65	        0x4883f001	                              xor rax, 1	      9247	eval.c	FUNCTION_181	ELSE_5	IF_8	IF_9	IF_10
0x4006f69	        0x4183fd02	                             cmp r13d, 2	      9247	eval.c	FUNCTION_181	ELSE_5	IF_8	IF_9	IF_10
0x4006f6d	        0x480f44e8	                          cmove rbp, rax	      9247	eval.c	FUNCTION_181	ELSE_5	IF_8	IF_9	IF_10
0x4006f71	      0xe903040000	                           jmp 0x4007379	      9247	eval.c	FUNCTION_181	ELSE_5	IF_8	IF_9	IF_10
0x4006f76	            0x39d6	                            cmp esi, edx	      9249	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11
0x4006f78	            0x750b	                           jne 0x4006f85	      9249	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11
0x4006f7a	        0x418d45ff	                      lea eax, [r13 - 1]	      9250	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11
0x4006f7e	          0x83f801	                              cmp eax, 1	      9250	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11
0x4006f81	            0x7720	                            ja 0x4006fa3	      9250	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11
0x4006f83	            0xeb4c	                           jmp 0x4006fd1	      9250	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11
0x4006f85	      0xba05000000	                              mov edx, 5	      9253	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11	CALL_8
0x4006f8a	      0xbe00000000	                              mov esi, 0	      9253	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11	CALL_8
0x4006f8f	      0xbf00000000	                              mov edi, 0	      9253	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11	CALL_8
0x4006f94	      0xe800000000	                          call 0x4006f99	      9253	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11	CALL_8
0x4006f99	          0x4889c7	                            mov rdi, rax	      9253	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11	CALL_8
0x4006f9c	      0xe800000000	                          call 0x4006fa1	      9253	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11	CALL_8
0x4006fa1	            0xeb1c	                           jmp 0x4006fbf	      9253	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11	CALL_8
0x4006fa3	      0xba05000000	                              mov edx, 5	      9255	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11	CALL_10
0x4006fa8	      0xbe00000000	                              mov esi, 0	      9255	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11	CALL_10
0x4006fad	      0xbf00000000	                              mov edi, 0	      9255	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11	CALL_10
0x4006fb2	      0xe800000000	                          call 0x4006fb7	      9255	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11	CALL_10
0x4006fb7	          0x4889c7	                            mov rdi, rax	      9255	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11	CALL_10
0x4006fba	      0xe800000000	                          call 0x4006fbf	      9255	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11	CALL_10
0x4006fbf	          0x4889df	                            mov rdi, rbx	      9256	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11	CALL_11
0x4006fc2	      0xe800000000	                          call 0x4006fc7	      9256	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11	CALL_11
0x4006fc7	      0xb800000000	                              mov eax, 0	      9257	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11
0x4006fcc	      0xe9bf030000	                           jmp 0x4007390	      9257	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11
0x4006fd1	      0x498b742408	                mov rsi, qword [r12 + 8]	      9262	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_8	CALL_12
0x4006fd6	        0x488b7b08	                mov rdi, qword [rbx + 8]	      9262	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_8	CALL_12
0x4006fda	      0xb900000000	                              mov ecx, 0	      9262	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_8	CALL_12
0x4006fdf	            0x89ea	                            mov edx, ebp	      9262	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_8	CALL_12
0x4006fe1	      0xe800000000	                          call 0x4006fe6	      9262	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_8	CALL_12
0x4006fe6	          0x4863e8	                         movsxd rbp, eax	      9262	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_8	CALL_12
0x4006fe9	        0x4183fd02	                             cmp r13d, 2	      9264	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_8	IF_13
0x4006fed	     0xf8586030000	                           jne 0x4007379	      9264	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_8	IF_13
0x4006ff3	          0x4885ed	                           test rbp, rbp	      9265	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_8	IF_13
0x4006ff6	        0x400f94c5	                                sete bpl	      9265	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_8	IF_13
0x4006ffa	        0x400fb6ed	                          movzx ebp, bpl	      9265	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_8	IF_13
0x4006ffe	      0xe976030000	                           jmp 0x4007379	      9265	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_8	IF_13
0x4007003	          0x8d46fd	                      lea eax, [rsi - 3]	      9270	eval.c	FUNCTION_181	ELSE_9	IF_14
0x4007006	          0x83f801	                              cmp eax, 1	      9270	eval.c	FUNCTION_181	ELSE_9	IF_14
0x4007009	            0x760c	                           jbe 0x4007017	      9270	eval.c	FUNCTION_181	ELSE_9	IF_14
0x400700b	          0x8d42fd	                      lea eax, [rdx - 3]	      9270	eval.c	FUNCTION_181	ELSE_9	IF_14
0x400700e	          0x83f801	                              cmp eax, 1	      9270	eval.c	FUNCTION_181	ELSE_9	IF_14
0x4007011	     0xf87dc000000	                            ja 0x40070f3	      9270	eval.c	FUNCTION_181	ELSE_9	IF_14
0x4007017	        0x418d45ff	                      lea eax, [r13 - 1]	      9272	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_15
0x400701b	          0x83f801	                              cmp eax, 1	      9272	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_15
0x400701e	            0x762e	                           jbe 0x400704e	      9272	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_15
0x4007020	      0xba05000000	                              mov edx, 5	      9274	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_15	CALL_14
0x4007025	      0xbe00000000	                              mov esi, 0	      9274	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_15	CALL_14
0x400702a	      0xbf00000000	                              mov edi, 0	      9274	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_15	CALL_14
0x400702f	      0xe800000000	                          call 0x4007034	      9274	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_15	CALL_14
0x4007034	          0x4889c7	                            mov rdi, rax	      9274	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_15	CALL_14
0x4007037	      0xe800000000	                          call 0x400703c	      9274	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_15	CALL_14
0x400703c	          0x4889df	                            mov rdi, rbx	      9275	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_15	CALL_15
0x400703f	      0xe800000000	                          call 0x4007044	      9275	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_15	CALL_15
0x4007044	      0xb800000000	                              mov eax, 0	      9276	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_15
0x4007049	      0xe942030000	                           jmp 0x4007390	      9276	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_15
0x400704e	          0x83fa04	                              cmp edx, 4	      9278	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_16
0x4007051	            0x7507	                           jne 0x400705a	      9278	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_16
0x4007053	      0x48837b0800	                  cmp qword [rbx + 8], 0	      9279	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_16
0x4007058	            0x746c	                            je 0x40070c6	      9279	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_16
0x400705a	          0x83fe04	                              cmp esi, 4	      9280	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_16
0x400705d	            0x750e	                           jne 0x400706d	      9280	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_16
0x400705f	    0x49837c240800	                  cmp qword [r12 + 8], 0	      9281	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_16
0x4007065	     0xf8591030000	                           jne 0x40073fc	      9281	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_16
0x400706b	            0xeb60	                           jmp 0x40070cd	      9281	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_16
0x400706d	            0x85c9	                           test ecx, ecx	      9284	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17
0x400706f	            0x743e	                            je 0x40070af	      9284	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17
0x4007071	          0x83fe03	                              cmp esi, 3	      9286	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	IF_18
0x4007074	            0x751c	                           jne 0x4007092	      9286	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	IF_18
0x4007076	          0x83fa03	                              cmp edx, 3	      9286	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	IF_18
0x4007079	            0x7517	                           jne 0x4007092	      9286	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	IF_18
0x400707b	      0xb900000000	                              mov ecx, 0	      9289	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	CALL_16
0x4007080	            0x89ea	                            mov edx, ebp	      9289	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	CALL_16
0x4007082	          0x4c89e6	                            mov rsi, r12	      9289	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	CALL_16
0x4007085	          0x4889df	                            mov rdi, rbx	      9289	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	CALL_16
0x4007088	      0xe800000000	                          call 0x400708d	      9289	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	CALL_16
0x400708d	          0x4863e8	                         movsxd rbp, eax	      9289	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	CALL_16
0x4007090	            0xeb47	                           jmp 0x40070d9	      9289	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	CALL_16
0x4007092	          0x83fa04	                              cmp edx, 4	      9291	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	ELSE_11	IF_19
0x4007095	            0x753d	                           jne 0x40070d4	      9291	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	ELSE_11	IF_19
0x4007097	          0x83fe04	                              cmp esi, 4	      9291	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	ELSE_11	IF_19
0x400709a	            0x7538	                           jne 0x40070d4	      9291	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	ELSE_11	IF_19
0x400709c	      0x498b442408	                mov rax, qword [r12 + 8]	      9292	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	ELSE_11	IF_19
0x40070a1	        0x48394308	                cmp qword [rbx + 8], rax	      9292	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	ELSE_11	IF_19
0x40070a5	        0x400f94c5	                                sete bpl	      9292	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	ELSE_11	IF_19
0x40070a9	        0x400fb6ed	                          movzx ebp, bpl	      9292	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	ELSE_11	IF_19
0x40070ad	            0xeb2a	                           jmp 0x40070d9	      9292	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	ELSE_11	IF_19
0x40070af	      0xb900000000	                              mov ecx, 0	      9297	eval.c	FUNCTION_181	ELSE_9	IF_14	CALL_17
0x40070b4	            0x89ea	                            mov edx, ebp	      9297	eval.c	FUNCTION_181	ELSE_9	IF_14	CALL_17
0x40070b6	          0x4c89e6	                            mov rsi, r12	      9297	eval.c	FUNCTION_181	ELSE_9	IF_14	CALL_17
0x40070b9	          0x4889df	                            mov rdi, rbx	      9297	eval.c	FUNCTION_181	ELSE_9	IF_14	CALL_17
0x40070bc	      0xe800000000	                          call 0x40070c1	      9297	eval.c	FUNCTION_181	ELSE_9	IF_14	CALL_17
0x40070c1	          0x4863e8	                         movsxd rbp, eax	      9297	eval.c	FUNCTION_181	ELSE_9	IF_14	CALL_17
0x40070c4	            0xeb13	                           jmp 0x40070d9	      9297	eval.c	FUNCTION_181	ELSE_9	IF_14	CALL_17
0x40070c6	      0xbd00000000	                              mov ebp, 0	      9283	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_16
0x40070cb	            0xeb0c	                           jmp 0x40070d9	      9283	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_16
0x40070cd	      0xbd00000000	                              mov ebp, 0	      9283	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_16
0x40070d2	            0xeb05	                           jmp 0x40070d9	      9283	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_16
0x40070d4	      0xbd00000000	                              mov ebp, 0	      9294	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	ELSE_12
0x40070d9	        0x4183fd02	                             cmp r13d, 2	      9298	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_20
0x40070dd	     0xf8596020000	                           jne 0x4007379	      9298	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_20
0x40070e3	          0x4885ed	                           test rbp, rbp	      9299	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_20
0x40070e6	        0x400f94c5	                                sete bpl	      9299	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_20
0x40070ea	        0x400fb6ed	                          movzx ebp, bpl	      9299	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_20
0x40070ee	      0xe986020000	                           jmp 0x4007379	      9299	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_20
0x40070f3	          0x83fe07	                              cmp esi, 7	      9307	eval.c	FUNCTION_181	ELSE_14	IF_21
0x40070f6	            0x7409	                            je 0x4007101	      9307	eval.c	FUNCTION_181	ELSE_14	IF_21
0x40070f8	          0x83fa07	                              cmp edx, 7	      9307	eval.c	FUNCTION_181	ELSE_14	IF_21
0x40070fb	     0xf8500010000	                           jne 0x4007201	      9307	eval.c	FUNCTION_181	ELSE_14	IF_21
0x4007101	        0x418d45f9	                      lea eax, [r13 - 7]	      9308	eval.c	FUNCTION_181	ELSE_14	IF_21
0x4007105	          0x83f801	                              cmp eax, 1	      9308	eval.c	FUNCTION_181	ELSE_14	IF_21
0x4007108	     0xf86fb020000	                           jbe 0x4007409	      9308	eval.c	FUNCTION_181	ELSE_14	IF_21
0x400710e	          0x83fa07	                              cmp edx, 7	      9312	eval.c	FUNCTION_181	ELSE_14	IF_21	IF_22
0x4007111	            0x750d	                           jne 0x4007120	      9312	eval.c	FUNCTION_181	ELSE_14	IF_21	IF_22
0x4007113	      0xf20f105308	            movsd xmm2, qword [rbx + 8] 	      9313	eval.c	FUNCTION_181	ELSE_14	IF_21	IF_22
0x4007118	    0xf20f11542408	             movsd qword [rsp + 8], xmm2	      9313	eval.c	FUNCTION_181	ELSE_14	IF_21	IF_22
0x400711e	            0xeb17	                           jmp 0x4007137	      9313	eval.c	FUNCTION_181	ELSE_14	IF_21	IF_22
0x4007120	          0x4889df	                            mov rdi, rbx	      9315	eval.c	FUNCTION_181	ELSE_14	IF_21	CALL_18
0x4007123	      0xe800000000	                          call 0x4007128	      9315	eval.c	FUNCTION_181	ELSE_14	IF_21	CALL_18
0x4007128	        0x660fefc9	                         pxor xmm1, xmm1	      9315	eval.c	FUNCTION_181	ELSE_14	IF_21	CALL_18
0x400712c	      0xf2480f2ac8	                      cvtsi2sd xmm1, rax	      9315	eval.c	FUNCTION_181	ELSE_14	IF_21	CALL_18
0x4007131	    0xf20f114c2408	             movsd qword [rsp + 8], xmm1	      9315	eval.c	FUNCTION_181	ELSE_14	IF_21	CALL_18
0x4007137	      0x41833c2407	                      cmp dword [r12], 7	      9316	eval.c	FUNCTION_181	ELSE_14	IF_21	IF_23
0x400713c	            0x7509	                           jne 0x4007147	      9316	eval.c	FUNCTION_181	ELSE_14	IF_21	IF_23
0x400713e	    0xf2410f104424	            movsd xmm0, qword [r12 + 8] 	      9317	eval.c	FUNCTION_181	ELSE_14	IF_21	IF_23
0x4007145	            0xeb11	                           jmp 0x4007158	      9317	eval.c	FUNCTION_181	ELSE_14	IF_21	IF_23
0x4007147	          0x4c89e7	                            mov rdi, r12	      9319	eval.c	FUNCTION_181	ELSE_14	IF_21	CALL_19
0x400714a	      0xe800000000	                          call 0x400714f	      9319	eval.c	FUNCTION_181	ELSE_14	IF_21	CALL_19
0x400714f	        0x660fefc0	                         pxor xmm0, xmm0	      9319	eval.c	FUNCTION_181	ELSE_14	IF_21	CALL_19
0x4007153	      0xf2480f2ac0	                      cvtsi2sd xmm0, rax	      9319	eval.c	FUNCTION_181	ELSE_14	IF_21	CALL_19
0x4007158	        0x4183fd06	                             cmp r13d, 6	      9321	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x400715c	     0xf870b020000	                            ja 0x400736d	      9321	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4007162	          0x4589ed	                          mov r13d, r13d	      9321	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4007165	    0x42ff24ed0000	                       jmp qword [r13*8]	      9321	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x400716d	    0xf20f105c2408	            movsd xmm3, qword [rsp + 8] 	      9323	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4007173	        0x660f2ed8	                      ucomisd xmm3, xmm0	      9323	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4007177	        0x400f9bc5	                               setnp bpl	      9323	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x400717b	        0x400fb6ed	                          movzx ebp, bpl	      9323	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x400717f	      0xb800000000	                              mov eax, 0	      9323	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4007184	        0x480f45e8	                         cmovne rbp, rax	      9323	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4007188	      0xe9ec010000	                           jmp 0x4007379	      9323	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x400718d	    0xf20f10642408	            movsd xmm4, qword [rsp + 8] 	      9324	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4007193	        0x660f2ee0	                      ucomisd xmm4, xmm0	      9324	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4007197	        0x400f9ac5	                                setp bpl	      9324	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x400719b	        0x400fb6ed	                          movzx ebp, bpl	      9324	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x400719f	      0xb801000000	                              mov eax, 1	      9324	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x40071a4	        0x480f45e8	                         cmovne rbp, rax	      9324	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x40071a8	      0xe9cc010000	                           jmp 0x4007379	      9324	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x40071ad	    0xf20f106c2408	            movsd xmm5, qword [rsp + 8] 	      9325	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x40071b3	        0x660f2ee8	                      ucomisd xmm5, xmm0	      9325	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x40071b7	        0x400f97c5	                                seta bpl	      9325	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x40071bb	        0x400fb6ed	                          movzx ebp, bpl	      9325	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x40071bf	      0xe9b5010000	                           jmp 0x4007379	      9325	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x40071c4	    0xf20f10742408	            movsd xmm6, qword [rsp + 8] 	      9326	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x40071ca	        0x660f2ef0	                      ucomisd xmm6, xmm0	      9326	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x40071ce	        0x400f93c5	                               setae bpl	      9326	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x40071d2	        0x400fb6ed	                          movzx ebp, bpl	      9326	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x40071d6	      0xe99e010000	                           jmp 0x4007379	      9326	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x40071db	    0x660f2e442408	           ucomisd xmm0, qword [rsp + 8]	      9327	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x40071e1	        0x400f97c5	                                seta bpl	      9327	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x40071e5	        0x400fb6ed	                          movzx ebp, bpl	      9327	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x40071e9	      0xe98b010000	                           jmp 0x4007379	      9327	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x40071ee	    0x660f2e442408	           ucomisd xmm0, qword [rsp + 8]	      9328	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x40071f4	        0x400f93c5	                               setae bpl	      9328	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x40071f8	        0x400fb6ed	                          movzx ebp, bpl	      9328	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x40071fc	      0xe978010000	                           jmp 0x4007379	      9328	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4007201	          0x83fe01	                              cmp esi, 1	      9340	eval.c	FUNCTION_181	ELSE_17	IF_24
0x4007204	            0x7409	                            je 0x400720f	      9340	eval.c	FUNCTION_181	ELSE_17	IF_24
0x4007206	          0x83fa01	                              cmp edx, 1	      9340	eval.c	FUNCTION_181	ELSE_17	IF_24
0x4007209	     0xf8595000000	                           jne 0x40072a4	      9340	eval.c	FUNCTION_181	ELSE_17	IF_24
0x400720f	        0x418d45f9	                      lea eax, [r13 - 7]	      9341	eval.c	FUNCTION_181	ELSE_17	IF_24
0x4007213	          0x83f801	                              cmp eax, 1	      9341	eval.c	FUNCTION_181	ELSE_17	IF_24
0x4007216	     0xf869f010000	                           jbe 0x40073bb	      9341	eval.c	FUNCTION_181	ELSE_17	IF_24
0x400721c	          0x4889df	                            mov rdi, rbx	      9343	eval.c	FUNCTION_181	ELSE_17	IF_24	CALL_20
0x400721f	      0xe800000000	                          call 0x4007224	      9343	eval.c	FUNCTION_181	ELSE_17	IF_24	CALL_20
0x4007224	          0x4889c5	                            mov rbp, rax	      9343	eval.c	FUNCTION_181	ELSE_17	IF_24	CALL_20
0x4007227	          0x4c89e7	                            mov rdi, r12	      9344	eval.c	FUNCTION_181	ELSE_17	IF_24	CALL_21
0x400722a	      0xe800000000	                          call 0x400722f	      9344	eval.c	FUNCTION_181	ELSE_17	IF_24	CALL_21
0x400722f	        0x4183fd06	                             cmp r13d, 6	      9345	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x4007233	     0xf8740010000	                            ja 0x4007379	      9345	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x4007239	          0x4589ed	                          mov r13d, r13d	      9345	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x400723c	    0x42ff24ed0000	                       jmp qword [r13*8]	      9345	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x4007244	          0x4839c5	                            cmp rbp, rax	      9347	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x4007247	        0x400f94c5	                                sete bpl	      9347	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x400724b	        0x400fb6ed	                          movzx ebp, bpl	      9347	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x400724f	      0xe925010000	                           jmp 0x4007379	      9347	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x4007254	          0x4839c5	                            cmp rbp, rax	      9348	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x4007257	        0x400f95c5	                               setne bpl	      9348	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x400725b	        0x400fb6ed	                          movzx ebp, bpl	      9348	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x400725f	      0xe915010000	                           jmp 0x4007379	      9348	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x4007264	          0x4839c5	                            cmp rbp, rax	      9349	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x4007267	        0x400f9fc5	                                setg bpl	      9349	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x400726b	        0x400fb6ed	                          movzx ebp, bpl	      9349	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x400726f	      0xe905010000	                           jmp 0x4007379	      9349	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x4007274	          0x4839c5	                            cmp rbp, rax	      9350	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x4007277	        0x400f9dc5	                               setge bpl	      9350	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x400727b	        0x400fb6ed	                          movzx ebp, bpl	      9350	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x400727f	      0xe9f5000000	                           jmp 0x4007379	      9350	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x4007284	          0x4839c5	                            cmp rbp, rax	      9351	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x4007287	        0x400f9cc5	                                setl bpl	      9351	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x400728b	        0x400fb6ed	                          movzx ebp, bpl	      9351	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x400728f	      0xe9e5000000	                           jmp 0x4007379	      9351	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x4007294	          0x4839c5	                            cmp rbp, rax	      9352	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x4007297	        0x400f9ec5	                               setle bpl	      9352	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x400729b	        0x400fb6ed	                          movzx ebp, bpl	      9352	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x400729f	      0xe9d5000000	                           jmp 0x4007379	      9352	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x40072a4	      0x488d742410	                   lea rsi, [rsp + 0x10]	      9360	eval.c	FUNCTION_181	ELSE_18	CALL_22
0x40072a9	          0x4889df	                            mov rdi, rbx	      9360	eval.c	FUNCTION_181	ELSE_18	CALL_22
0x40072ac	      0xe800000000	                          call 0x40072b1	      9360	eval.c	FUNCTION_181	ELSE_18	CALL_22
0x40072b1	          0x4989c6	                            mov r14, rax	      9360	eval.c	FUNCTION_181	ELSE_18	CALL_22
0x40072b4	      0x488d742460	                   lea rsi, [rsp + 0x60]	      9361	eval.c	FUNCTION_181	ELSE_18	CALL_23
0x40072b9	          0x4c89e7	                            mov rdi, r12	      9361	eval.c	FUNCTION_181	ELSE_18	CALL_23
0x40072bc	      0xe800000000	                          call 0x40072c1	      9361	eval.c	FUNCTION_181	ELSE_18	CALL_23
0x40072c1	          0x4989c4	                            mov r12, rax	      9361	eval.c	FUNCTION_181	ELSE_18	CALL_23
0x40072c4	        0x418d45f9	                      lea eax, [r13 - 7]	      9362	eval.c	FUNCTION_181	ELSE_18	IF_25
0x40072c8	          0x83f801	                              cmp eax, 1	      9362	eval.c	FUNCTION_181	ELSE_18	IF_25
0x40072cb	            0x7623	                           jbe 0x40072f0	      9362	eval.c	FUNCTION_181	ELSE_18	IF_25
0x40072cd	            0x85ed	                           test ebp, ebp	      9363	eval.c	FUNCTION_181	ELSE_18	CALL_25
0x40072cf	            0x7412	                            je 0x40072e3	      9363	eval.c	FUNCTION_181	ELSE_18	CALL_25
0x40072d1	      0xbaffffff7f	                     mov edx, 0x7fffffff	      9363	eval.c	FUNCTION_181	ELSE_18	CALL_25
0x40072d6	          0x4c89e6	                            mov rsi, r12	      9363	eval.c	FUNCTION_181	ELSE_18	CALL_25
0x40072d9	          0x4c89f7	                            mov rdi, r14	      9363	eval.c	FUNCTION_181	ELSE_18	CALL_25
0x40072dc	      0xe800000000	                          call 0x40072e1	      9363	eval.c	FUNCTION_181	ELSE_18	CALL_25
0x40072e1	            0xeb12	                           jmp 0x40072f5	      9363	eval.c	FUNCTION_181	ELSE_18	CALL_25
0x40072e3	          0x4c89e6	                            mov rsi, r12	      9363	eval.c	FUNCTION_181	ELSE_18	CALL_25
0x40072e6	          0x4c89f7	                            mov rdi, r14	      9363	eval.c	FUNCTION_181	ELSE_18	CALL_25
0x40072e9	      0xe800000000	                          call 0x40072ee	      9363	eval.c	FUNCTION_181	ELSE_18	CALL_25
0x40072ee	            0xeb05	                           jmp 0x40072f5	      9363	eval.c	FUNCTION_181	ELSE_18	CALL_25
0x40072f0	      0xb800000000	                              mov eax, 0	      9365	eval.c	FUNCTION_181	ELSE_18	ELSE_19
0x40072f5	        0x4183fd08	                             cmp r13d, 8	      9367	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x40072f9	            0x7779	                            ja 0x4007374	      9367	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x40072fb	          0x4489ea	                           mov edx, r13d	      9367	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x40072fe	    0xff24d5000000	                       jmp qword [rdx*8]	      9367	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4007305	            0x85c0	                           test eax, eax	      9369	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4007307	        0x400f94c5	                                sete bpl	      9369	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x400730b	        0x400fb6ed	                          movzx ebp, bpl	      9369	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x400730f	            0xeb68	                           jmp 0x4007379	      9369	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4007311	            0x85c0	                           test eax, eax	      9370	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4007313	        0x400f95c5	                               setne bpl	      9370	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4007317	        0x400fb6ed	                          movzx ebp, bpl	      9370	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x400731b	            0xeb5c	                           jmp 0x4007379	      9370	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x400731d	            0x85c0	                           test eax, eax	      9371	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x400731f	        0x400f9fc5	                                setg bpl	      9371	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4007323	        0x400fb6ed	                          movzx ebp, bpl	      9371	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4007327	            0xeb50	                           jmp 0x4007379	      9371	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4007329	          0x4863e8	                         movsxd rbp, eax	      9372	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x400732c	          0x48f7d5	                                 not rbp	      9372	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x400732f	        0x48c1ed3f	                           shr rbp, 0x3f	      9372	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4007333	            0xeb44	                           jmp 0x4007379	      9372	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4007335	          0x4863e8	                         movsxd rbp, eax	      9373	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4007338	        0x48c1ed3f	                           shr rbp, 0x3f	      9373	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x400733c	            0xeb3b	                           jmp 0x4007379	      9373	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x400733e	            0x85c0	                           test eax, eax	      9374	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4007340	        0x400f9ec5	                               setle bpl	      9374	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4007344	        0x400fb6ed	                          movzx ebp, bpl	      9374	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4007348	            0xeb2f	                           jmp 0x4007379	      9374	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x400734a	            0x89ea	                            mov edx, ebp	      9378	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3	CALL_26
0x400734c	          0x4c89f6	                            mov rsi, r14	      9378	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3	CALL_26
0x400734f	          0x4c89e7	                            mov rdi, r12	      9378	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3	CALL_26
0x4007352	      0xe8e592ffff	                  call sym.pattern_match	      9378	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3	CALL_26
0x4007357	          0x4863e8	                         movsxd rbp, eax	      9378	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3	CALL_26
0x400735a	        0x4183fd08	                             cmp r13d, 8	      9379	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3	IF_26
0x400735e	            0x7519	                           jne 0x4007379	      9379	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3	IF_26
0x4007360	          0x4885ed	                           test rbp, rbp	      9380	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3	IF_26
0x4007363	        0x400f94c5	                                sete bpl	      9380	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3	IF_26
0x4007367	        0x400fb6ed	                          movzx ebp, bpl	      9380	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3	IF_26
0x400736b	            0xeb0c	                           jmp 0x4007379	      9380	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3	IF_26
0x400736d	      0xbd00000000	                              mov ebp, 0	      9320	eval.c	FUNCTION_181	ELSE_14	IF_21
0x4007372	            0xeb05	                           jmp 0x4007379	      9320	eval.c	FUNCTION_181	ELSE_14	IF_21
0x4007374	      0xbd00000000	                              mov ebp, 0	      9366	eval.c	FUNCTION_181	ELSE_18	ELSE_19
0x4007379	          0x4889df	                            mov rdi, rbx	      9386	eval.c	FUNCTION_181	CALL_27
0x400737c	      0xe800000000	                          call 0x4007381	      9386	eval.c	FUNCTION_181	CALL_27
0x4007381	    0xc70301000000	                      mov dword [rbx], 1	      9387	eval.c	FUNCTION_181
0x4007387	        0x48896b08	                mov qword [rbx + 8], rbp	      9388	eval.c	FUNCTION_181
0x400738b	      0xb801000000	                              mov eax, 1	      9390	eval.c	FUNCTION_181
0x4007390	    0x488bbc24a800	            mov rdi, qword [rsp + 0xa8] 	      9391	eval.c	FUNCTION_181
0x4007398	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      9391	eval.c	FUNCTION_181
0x40073a1	            0x747b	                            je 0x400741e	      9391	eval.c	FUNCTION_181
0x40073a3	            0xeb74	                           jmp 0x4007419	      9391	eval.c	FUNCTION_181
0x40073a5	          0x83fa05	                              cmp edx, 5	      9211	eval.c	FUNCTION_181	ELSE_1	IF_2
0x40073a8	            0x753b	                           jne 0x40073e5	      9211	eval.c	FUNCTION_181	ELSE_1	IF_2
0x40073aa	      0xe9d0faffff	                           jmp 0x4006e7f	      9211	eval.c	FUNCTION_181	ELSE_1	IF_2
0x40073af	            0x8b17	                    mov edx, dword [rdi]	      9211	eval.c	FUNCTION_181	ELSE_1	IF_2
0x40073b1	          0x83fa05	                              cmp edx, 5	      9211	eval.c	FUNCTION_181	ELSE_1	IF_2
0x40073b4	            0x7536	                           jne 0x40073ec	      9211	eval.c	FUNCTION_181	ELSE_1	IF_2
0x40073b6	      0xe9e9faffff	                           jmp 0x4006ea4	      9211	eval.c	FUNCTION_181	ELSE_1	IF_2
0x40073bb	      0x488d742410	                   lea rsi, [rsp + 0x10]	      9360	eval.c	FUNCTION_181	ELSE_18	CALL_22
0x40073c0	          0x4889df	                            mov rdi, rbx	      9360	eval.c	FUNCTION_181	ELSE_18	CALL_22
0x40073c3	      0xe800000000	                          call 0x40073c8	      9360	eval.c	FUNCTION_181	ELSE_18	CALL_22
0x40073c8	          0x4989c6	                            mov r14, rax	      9360	eval.c	FUNCTION_181	ELSE_18	CALL_22
0x40073cb	      0x488d742460	                   lea rsi, [rsp + 0x60]	      9361	eval.c	FUNCTION_181	ELSE_18	CALL_23
0x40073d0	          0x4c89e7	                            mov rdi, r12	      9361	eval.c	FUNCTION_181	ELSE_18	CALL_23
0x40073d3	      0xe800000000	                          call 0x40073d8	      9361	eval.c	FUNCTION_181	ELSE_18	CALL_23
0x40073d8	          0x4989c4	                            mov r12, rax	      9361	eval.c	FUNCTION_181	ELSE_18	CALL_23
0x40073db	      0xb800000000	                              mov eax, 0	      9365	eval.c	FUNCTION_181	ELSE_18	ELSE_19
0x40073e0	      0xe910ffffff	                           jmp 0x40072f5	      9365	eval.c	FUNCTION_181	ELSE_18	ELSE_19
0x40073e5	            0x8b36	                    mov esi, dword [rsi]	      9211	eval.c	FUNCTION_181	ELSE_1	IF_2
0x40073e7	      0xe947fbffff	                           jmp 0x4006f33	      9211	eval.c	FUNCTION_181	ELSE_1	IF_2
0x40073ec	            0x8b36	                    mov esi, dword [rsi]	      9211	eval.c	FUNCTION_181	ELSE_1	IF_2
0x40073ee	          0x83fe05	                              cmp esi, 5	      9211	eval.c	FUNCTION_181	ELSE_1	IF_2
0x40073f1	     0xf853cfbffff	                           jne 0x4006f33	      9211	eval.c	FUNCTION_181	ELSE_1	IF_2
0x40073f7	      0xe9a8faffff	                           jmp 0x4006ea4	      9211	eval.c	FUNCTION_181	ELSE_1	IF_2
0x40073fc	            0x85c9	                           test ecx, ecx	      9284	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17
0x40073fe	     0xf858efcffff	                           jne 0x4007092	      9284	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17
0x4007404	      0xe9a6fcffff	                           jmp 0x40070af	      9284	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17
0x4007409	          0x83fe01	                              cmp esi, 1	      9340	eval.c	FUNCTION_181	ELSE_17	IF_24
0x400740c	            0x74ad	                            je 0x40073bb	      9340	eval.c	FUNCTION_181	ELSE_17	IF_24
0x400740e	          0x83fa01	                              cmp edx, 1	      9340	eval.c	FUNCTION_181	ELSE_17	IF_24
0x4007411	     0xf858dfeffff	                           jne 0x40072a4	      9340	eval.c	FUNCTION_181	ELSE_17	IF_24
0x4007417	            0xeba2	                           jmp 0x40073bb	      9340	eval.c	FUNCTION_181	ELSE_17	IF_24
0x4007419	      0xe800000000	                          call 0x400741e	      9391	eval.c	FUNCTION_181
0x400741e	    0x4881c4b00000	                           add rsp, 0xb0	      9391	eval.c	FUNCTION_181
0x4007425	              0x5b	                                 pop rbx	      9391	eval.c	FUNCTION_181
0x4007426	              0x5d	                                 pop rbp	      9391	eval.c	FUNCTION_181
0x4007427	            0x415c	                                 pop r12	      9391	eval.c	FUNCTION_181
0x4007429	            0x415d	                                 pop r13	      9391	eval.c	FUNCTION_181
0x400742b	            0x415e	                                 pop r14	      9391	eval.c	FUNCTION_181
0x400742d	              0xc3	                                     ret	      9391	eval.c	FUNCTION_181
ex_let	FOR,0:SWITCH,0:DO,0:IF,12:functions,0:WHILE,0:CALL,22:ELSE,5	337
0x400b38d	            0x4157	                                push r15	      1235	eval.c	FUNCTION_31
0x400b38f	            0x4156	                                push r14	      1235	eval.c	FUNCTION_31
0x400b391	            0x4155	                                push r13	      1235	eval.c	FUNCTION_31
0x400b393	            0x4154	                                push r12	      1235	eval.c	FUNCTION_31
0x400b395	              0x55	                                push rbp	      1235	eval.c	FUNCTION_31
0x400b396	              0x53	                                push rbx	      1235	eval.c	FUNCTION_31
0x400b397	    0x4881ec980000	                           sub rsp, 0x98	      1235	eval.c	FUNCTION_31
0x400b39e	          0x4889fb	                            mov rbx, rdi	      1235	eval.c	FUNCTION_31
0x400b3a1	    0x64488b042528	                mov rax, qword fs:[0x28]	      1235	eval.c	FUNCTION_31
0x400b3aa	    0x488984248800	             mov qword [rsp + 0x88], rax	      1235	eval.c	FUNCTION_31
0x400b3b2	            0x31c0	                            xor eax, eax	      1235	eval.c	FUNCTION_31
0x400b3b4	          0x4c8b27	                    mov r12, qword [rdi]	      1236	eval.c	FUNCTION_31
0x400b3b7	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      1240	eval.c	FUNCTION_31
0x400b3bf	    0xc74424100000	               mov dword [rsp + 0x10], 0	      1241	eval.c	FUNCTION_31
0x400b3c7	    0xc74424140100	               mov dword [rsp + 0x14], 1	      1244	eval.c	FUNCTION_31
0x400b3cf	      0x488d542410	                   lea rdx, [rsp + 0x10]	      1246	eval.c	FUNCTION_31	CALL_1
0x400b3d4	      0x488d74240c	                    lea rsi, [rsp + 0xc]	      1246	eval.c	FUNCTION_31	CALL_1
0x400b3d9	          0x4c89e7	                            mov rdi, r12	      1246	eval.c	FUNCTION_31	CALL_1
0x400b3dc	      0xe8c66affff	                  call sym.skip_var_list	      1246	eval.c	FUNCTION_31	CALL_1
0x400b3e1	          0x4885c0	                           test rax, rax	      1247	eval.c	FUNCTION_31	IF_1
0x400b3e4	     0xf845f050000	                            je 0x400b949	      1247	eval.c	FUNCTION_31	IF_1
0x400b3ea	          0x4939c4	                            cmp r12, rax	      1249	eval.c	FUNCTION_31	IF_2
0x400b3ed	            0x730d	                           jae 0x400b3fc	      1249	eval.c	FUNCTION_31	IF_2
0x400b3ef	        0x8078ff2e	                cmp byte [rax - 1], 0x2e	      1250	eval.c	FUNCTION_31	IF_2
0x400b3f3	           0xf94c2	                                 sete dl	      1250	eval.c	FUNCTION_31	IF_2
0x400b3f6	           0xfb6d2	                           movzx edx, dl	      1250	eval.c	FUNCTION_31	IF_2
0x400b3f9	          0x4829d0	                            sub rax, rdx	      1250	eval.c	FUNCTION_31	IF_2
0x400b3fc	          0x4889c7	                            mov rdi, rax	      1251	eval.c	FUNCTION_31	CALL_2
0x400b3ff	      0xe800000000	                          call 0x400b404	      1251	eval.c	FUNCTION_31	CALL_2
0x400b404	          0x4889c5	                            mov rbp, rax	      1251	eval.c	FUNCTION_31	CALL_2
0x400b407	           0xfb630	                   movzx esi, byte [rax]	      1252	eval.c	FUNCTION_31	IF_3	CALL_3
0x400b40a	        0x4080fe3d	                           cmp sil, 0x3d	      1252	eval.c	FUNCTION_31	IF_3	CALL_3
0x400b40e	     0xf847d040000	                            je 0x400b891	      1252	eval.c	FUNCTION_31	IF_3	CALL_3
0x400b414	        0x400fb6f6	                          movzx esi, sil	      1252	eval.c	FUNCTION_31	IF_3	CALL_3
0x400b418	      0xbf00000000	                              mov edi, 0	      1252	eval.c	FUNCTION_31	IF_3	CALL_3
0x400b41d	      0xe800000000	                          call 0x400b422	      1252	eval.c	FUNCTION_31	IF_3	CALL_3
0x400b422	          0x4885c0	                           test rax, rax	      1252	eval.c	FUNCTION_31	IF_3	CALL_3
0x400b425	            0x740a	                            je 0x400b431	      1252	eval.c	FUNCTION_31	IF_3	CALL_3
0x400b427	        0x807d013d	                cmp byte [rbp + 1], 0x3d	      1252	eval.c	FUNCTION_31	IF_3	CALL_3
0x400b42b	     0xf8460040000	                            je 0x400b891	      1252	eval.c	FUNCTION_31	IF_3	CALL_3
0x400b431	      0x410fb63c24	                   movzx edi, byte [r12]	      1258	eval.c	FUNCTION_31	IF_3	IF_4
0x400b436	        0x4080ff5b	                           cmp dil, 0x5b	      1258	eval.c	FUNCTION_31	IF_3	IF_4
0x400b43a	            0x7521	                           jne 0x400b45d	      1258	eval.c	FUNCTION_31	IF_3	IF_4
0x400b43c	      0xba05000000	                              mov edx, 5	      1259	eval.c	FUNCTION_31	IF_3	CALL_5
0x400b441	      0xbe00000000	                              mov esi, 0	      1259	eval.c	FUNCTION_31	IF_3	CALL_5
0x400b446	      0xbf00000000	                              mov edi, 0	      1259	eval.c	FUNCTION_31	IF_3	CALL_5
0x400b44b	      0xe800000000	                          call 0x400b450	      1259	eval.c	FUNCTION_31	IF_3	CALL_5
0x400b450	          0x4889c7	                            mov rdi, rax	      1259	eval.c	FUNCTION_31	IF_3	CALL_5
0x400b453	      0xe800000000	                          call 0x400b458	      1259	eval.c	FUNCTION_31	IF_3	CALL_5
0x400b458	      0xe923040000	                           jmp 0x400b880	      1259	eval.c	FUNCTION_31	IF_3	CALL_5
0x400b45d	        0x400fb6ff	                          movzx edi, dil	      1260	eval.c	FUNCTION_31	IF_3	ELSE_1	IF_5	CALL_6
0x400b461	      0xe800000000	                          call 0x400b466	      1260	eval.c	FUNCTION_31	IF_3	ELSE_1	IF_5	CALL_6
0x400b466	            0x85c0	                           test eax, eax	      1260	eval.c	FUNCTION_31	IF_3	ELSE_1	IF_5	CALL_6
0x400b468	     0xf8550030000	                           jne 0x400b7be	      1260	eval.c	FUNCTION_31	IF_3	ELSE_1	IF_5	CALL_6
0x400b46e	      0x4c89642418	             mov qword [rsp + 0x18], r12	      1260	eval.c	FUNCTION_31	IF_3	ELSE_1	IF_5	CALL_6
0x400b473	      0xbd00000000	                              mov ebp, 0	      1567	eval.c	FUNCTION_42
0x400b478	      0xe918030000	                           jmp 0x400b795	      1567	eval.c	FUNCTION_42
0x400b47d	            0x85ed	                           test ebp, ebp	      1577	eval.c	FUNCTION_42	WHILE_1	IF_1
0x400b47f	            0x7506	                           jne 0x400b487	      1577	eval.c	FUNCTION_42	WHILE_1	IF_1
0x400b481	        0x837b3000	               cmp dword [rbx + 0x30], 0	      1577	eval.c	FUNCTION_42	WHILE_1	IF_1
0x400b485	            0x7471	                            je 0x400b4f8	      1577	eval.c	FUNCTION_42	WHILE_1	IF_1
0x400b487	      0xb903000000	                              mov ecx, 3	      1579	eval.c	FUNCTION_42	WHILE_1	IF_1	CALL_2
0x400b48c	      0xba00000000	                              mov edx, 0	      1579	eval.c	FUNCTION_42	WHILE_1	IF_1	CALL_2
0x400b491	      0xbe00000000	                              mov esi, 0	      1579	eval.c	FUNCTION_42	WHILE_1	IF_1	CALL_2
0x400b496	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1579	eval.c	FUNCTION_42	WHILE_1	IF_1	CALL_2
0x400b49b	      0xe800000000	                          call 0x400b4a0	      1579	eval.c	FUNCTION_42	WHILE_1	IF_1	CALL_2
0x400b4a0	      0x4889442418	             mov qword [rsp + 0x18], rax	      1579	eval.c	FUNCTION_42	WHILE_1	IF_1	CALL_2
0x400b4a5	           0xfb638	                   movzx edi, byte [rax]	      1580	eval.c	FUNCTION_42	WHILE_1	IF_1	IF_2	CALL_4
0x400b4a8	        0x4080ff20	                           cmp dil, 0x20	      1580	eval.c	FUNCTION_42	WHILE_1	IF_1	IF_2	CALL_4
0x400b4ac	     0xf84d4020000	                            je 0x400b786	      1580	eval.c	FUNCTION_42	WHILE_1	IF_1	IF_2	CALL_4
0x400b4b2	        0x4080ff09	                              cmp dil, 9	      1580	eval.c	FUNCTION_42	WHILE_1	IF_1	IF_2	CALL_4
0x400b4b6	     0xf84ca020000	                            je 0x400b786	      1580	eval.c	FUNCTION_42	WHILE_1	IF_1	IF_2	CALL_4
0x400b4bc	        0x400fb6ff	                          movzx edi, dil	      1580	eval.c	FUNCTION_42	WHILE_1	IF_1	IF_2	CALL_4
0x400b4c0	      0xe800000000	                          call 0x400b4c5	      1580	eval.c	FUNCTION_42	WHILE_1	IF_1	IF_2	CALL_4
0x400b4c5	            0x85c0	                           test eax, eax	      1580	eval.c	FUNCTION_42	WHILE_1	IF_1	IF_2	CALL_4
0x400b4c7	     0xf85b9020000	                           jne 0x400b786	      1580	eval.c	FUNCTION_42	WHILE_1	IF_1	IF_2	CALL_4
0x400b4cd	    0xc70500000000	               mov dword [0x0400b4d7], 1	      1582	eval.c	FUNCTION_42	WHILE_1	IF_1	IF_2
0x400b4d7	      0xba05000000	                              mov edx, 5	      1583	eval.c	FUNCTION_42	WHILE_1	IF_1	IF_2	CALL_6
0x400b4dc	      0xbe00000000	                              mov esi, 0	      1583	eval.c	FUNCTION_42	WHILE_1	IF_1	IF_2	CALL_6
0x400b4e1	      0xbf00000000	                              mov edi, 0	      1583	eval.c	FUNCTION_42	WHILE_1	IF_1	IF_2	CALL_6
0x400b4e6	      0xe800000000	                          call 0x400b4eb	      1583	eval.c	FUNCTION_42	WHILE_1	IF_1	IF_2	CALL_6
0x400b4eb	          0x4889c7	                            mov rdi, rax	      1583	eval.c	FUNCTION_42	WHILE_1	IF_1	IF_2	CALL_6
0x400b4ee	      0xe800000000	                          call 0x400b4f3	      1583	eval.c	FUNCTION_42	WHILE_1	IF_1	IF_2	CALL_6
0x400b4f3	      0xe9bc020000	                           jmp 0x400b7b4	      1583	eval.c	FUNCTION_42	WHILE_1	IF_1	IF_2	CALL_6
0x400b4f8	      0x4c8b742418	            mov r14, qword [rsp + 0x18] 	      1590	eval.c	FUNCTION_42	WHILE_1	ELSE_1
0x400b4fd	      0xb901000000	                              mov ecx, 1	      1591	eval.c	FUNCTION_42	WHILE_1	ELSE_1	CALL_7
0x400b502	      0xba01000000	                              mov edx, 1	      1591	eval.c	FUNCTION_42	WHILE_1	ELSE_1	CALL_7
0x400b507	      0x488d742420	                   lea rsi, [rsp + 0x20]	      1591	eval.c	FUNCTION_42	WHILE_1	ELSE_1	CALL_7
0x400b50c	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	      1591	eval.c	FUNCTION_42	WHILE_1	ELSE_1	CALL_7
0x400b511	      0xe800000000	                          call 0x400b516	      1591	eval.c	FUNCTION_42	WHILE_1	ELSE_1	CALL_7
0x400b516	          0x4189c5	                           mov r13d, eax	      1591	eval.c	FUNCTION_42	WHILE_1	ELSE_1	CALL_7
0x400b519	            0x85c0	                           test eax, eax	      1592	eval.c	FUNCTION_42	WHILE_1	ELSE_1	IF_3
0x400b51b	            0x7f4d	                            jg 0x400b56a	      1592	eval.c	FUNCTION_42	WHILE_1	ELSE_1	IF_3
0x400b51d	      0xbd01000000	                              mov ebp, 1	      1602	eval.c	FUNCTION_42	WHILE_1	ELSE_1	IF_3
0x400b522	            0x85c0	                           test eax, eax	      1596	eval.c	FUNCTION_42	WHILE_1	ELSE_1	IF_3	IF_4	CALL_8
0x400b524	     0xf8952020000	                           jns 0x400b77c	      1596	eval.c	FUNCTION_42	WHILE_1	ELSE_1	IF_3	IF_4	CALL_8
0x400b52a	      0xe800000000	                          call 0x400b52f	      1596	eval.c	FUNCTION_42	WHILE_1	ELSE_1	IF_3	IF_4	CALL_8
0x400b52f	            0x85c0	                           test eax, eax	      1596	eval.c	FUNCTION_42	WHILE_1	ELSE_1	IF_3	IF_4	CALL_8
0x400b531	     0xf8532020000	                           jne 0x400b769	      1596	eval.c	FUNCTION_42	WHILE_1	ELSE_1	IF_3	IF_4	CALL_8
0x400b537	    0xc70500000000	               mov dword [0x0400b541], 1	      1598	eval.c	FUNCTION_42	WHILE_1	ELSE_1	IF_3	IF_4
0x400b541	      0x488b6c2418	            mov rbp, qword [rsp + 0x18] 	      1599	eval.c	FUNCTION_42	WHILE_1	ELSE_1	IF_3	IF_4	CALL_10
0x400b546	      0xba05000000	                              mov edx, 5	      1599	eval.c	FUNCTION_42	WHILE_1	ELSE_1	IF_3	IF_4	CALL_10
0x400b54b	      0xbe00000000	                              mov esi, 0	      1599	eval.c	FUNCTION_42	WHILE_1	ELSE_1	IF_3	IF_4	CALL_10
0x400b550	      0xbf00000000	                              mov edi, 0	      1599	eval.c	FUNCTION_42	WHILE_1	ELSE_1	IF_3	IF_4	CALL_10
0x400b555	      0xe800000000	                          call 0x400b55a	      1599	eval.c	FUNCTION_42	WHILE_1	ELSE_1	IF_3	IF_4	CALL_10
0x400b55a	          0x4889ee	                            mov rsi, rbp	      1599	eval.c	FUNCTION_42	WHILE_1	ELSE_1	IF_3	IF_4	CALL_10
0x400b55d	          0x4889c7	                            mov rdi, rax	      1599	eval.c	FUNCTION_42	WHILE_1	ELSE_1	IF_3	IF_4	CALL_10
0x400b560	      0xe800000000	                          call 0x400b565	      1599	eval.c	FUNCTION_42	WHILE_1	ELSE_1	IF_3	IF_4	CALL_10
0x400b565	      0xe94a020000	                           jmp 0x400b7b4	      1599	eval.c	FUNCTION_42	WHILE_1	ELSE_1	IF_3	IF_4	CALL_10
0x400b56a	      0x4c8b642420	            mov r12, qword [rsp + 0x20] 	      1606	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	IF_5
0x400b56f	          0x4d85e4	                           test r12, r12	      1590	eval.c	FUNCTION_42	WHILE_1	ELSE_1
0x400b572	        0x4d0f44e6	                          cmove r12, r14	      1590	eval.c	FUNCTION_42	WHILE_1	ELSE_1
0x400b576	    0x41b900000000	                              mov r9d, 0	      1608	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	IF_6	CALL_11
0x400b57c	    0x41b801000000	                              mov r8d, 1	      1608	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	IF_6	CALL_11
0x400b582	      0xb900000000	                              mov ecx, 0	      1608	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	IF_6	CALL_11
0x400b587	      0x488d542430	                   lea rdx, [rsp + 0x30]	      1608	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	IF_6	CALL_11
0x400b58c	            0x89c6	                            mov esi, eax	      1608	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	IF_6	CALL_11
0x400b58e	          0x4c89e7	                            mov rdi, r12	      1608	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	IF_6	CALL_11
0x400b591	      0xe800000000	                          call 0x400b596	      1608	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	IF_6	CALL_11
0x400b596	            0x85c0	                           test eax, eax	      1608	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	IF_6	CALL_11
0x400b598	     0xf84d2010000	                            je 0x400b770	      1608	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	IF_6	CALL_11
0x400b59e	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	      1613	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3
0x400b5a3	      0xb901000000	                              mov ecx, 1	      1614	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	IF_7	CALL_12
0x400b5a8	      0xba01000000	                              mov edx, 1	      1614	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	IF_7	CALL_12
0x400b5ad	      0x488d742430	                   lea rsi, [rsp + 0x30]	      1614	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	IF_7	CALL_12
0x400b5b2	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	      1614	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	IF_7	CALL_12
0x400b5b7	      0xe800000000	                          call 0x400b5bc	      1614	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	IF_7	CALL_12
0x400b5bc	            0x85c0	                           test eax, eax	      1614	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	IF_7	CALL_12
0x400b5be	     0xf84b3010000	                            je 0x400b777	      1614	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	IF_7	CALL_12
0x400b5c4	      0x4c397c2418	            cmp qword [rsp + 0x18], r15 	      1618	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8
0x400b5c9	     0xf852c010000	                           jne 0x400b6fb	      1618	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8
0x400b5cf	        0x4183fd02	                             cmp r13d, 2	      1618	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8
0x400b5d3	     0xf8522010000	                           jne 0x400b6fb	      1618	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8
0x400b5d9	    0x41807c24013a	                cmp byte [r12 + 1], 0x3a	      1618	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8
0x400b5df	     0xf8516010000	                           jne 0x400b6fb	      1618	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8
0x400b5e5	      0x410fb60424	                   movzx eax, byte [r12]	      1620	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8	SWITCH_1
0x400b5ea	          0x83e862	                           sub eax, 0x62	      1620	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8	SWITCH_1
0x400b5ed	            0x3c15	                            cmp al, 0x15	      1620	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8	SWITCH_1
0x400b5ef	     0xf87e5000000	                            ja 0x400b6da	      1620	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8	SWITCH_1
0x400b5f5	           0xfb6c0	                           movzx eax, al	      1620	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8	SWITCH_1
0x400b5f8	    0xff24c5000000	                       jmp qword [rax*8]	      1620	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8	SWITCH_1
0x400b5ff	      0x488d4c2414	                   lea rcx, [rsp + 0x14]	      1508	eval.c	FUNCTION_36	CALL_1
0x400b604	      0xba01000000	                              mov edx, 1	      1508	eval.c	FUNCTION_36	CALL_1
0x400b609	      0xbe00000000	                              mov esi, 0	      1508	eval.c	FUNCTION_36	CALL_1
0x400b60e	      0xbf00000000	                              mov edi, 0	      1508	eval.c	FUNCTION_36	CALL_1
0x400b613	      0xe800000000	                          call 0x400b618	      1508	eval.c	FUNCTION_36	CALL_1
0x400b618	      0xe940010000	                           jmp 0x400b75d	      1508	eval.c	FUNCTION_36	CALL_1
0x400b61d	    0x488b05000000	            mov rax, qword [0x0400b624] 	      1517	eval.c	FUNCTION_37	CALL_1
0x400b624	    0x488bb8301700	          mov rdi, qword [rax + 0x1730] 	      1517	eval.c	FUNCTION_37	CALL_1
0x400b62b	        0x4883c710	                           add rdi, 0x10	      1517	eval.c	FUNCTION_37	CALL_1
0x400b62f	      0x488d4c2414	                   lea rcx, [rsp + 0x14]	      1517	eval.c	FUNCTION_37	CALL_1
0x400b634	      0xba01000000	                              mov edx, 1	      1517	eval.c	FUNCTION_37	CALL_1
0x400b639	      0xbe00000000	                              mov esi, 0	      1517	eval.c	FUNCTION_37	CALL_1
0x400b63e	      0xe800000000	                          call 0x400b643	      1517	eval.c	FUNCTION_37	CALL_1
0x400b643	      0xe915010000	                           jmp 0x400b75d	      1517	eval.c	FUNCTION_37	CALL_1
0x400b648	    0x488b05000000	            mov rax, qword [0x0400b64f] 	      1527	eval.c	FUNCTION_38	CALL_1
0x400b64f	    0x488bb8700500	           mov rdi, qword [rax + 0x570] 	      1527	eval.c	FUNCTION_38	CALL_1
0x400b656	        0x4883c710	                           add rdi, 0x10	      1527	eval.c	FUNCTION_38	CALL_1
0x400b65a	      0x488d4c2414	                   lea rcx, [rsp + 0x14]	      1527	eval.c	FUNCTION_38	CALL_1
0x400b65f	      0xba01000000	                              mov edx, 1	      1527	eval.c	FUNCTION_38	CALL_1
0x400b664	      0xbe00000000	                              mov esi, 0	      1527	eval.c	FUNCTION_38	CALL_1
0x400b669	      0xe800000000	                          call 0x400b66e	      1527	eval.c	FUNCTION_38	CALL_1
0x400b66e	      0xe9ea000000	                           jmp 0x400b75d	      1527	eval.c	FUNCTION_38	CALL_1
0x400b673	    0x488b05000000	            mov rax, qword [0x0400b67a] 	      1537	eval.c	FUNCTION_39	CALL_1
0x400b67a	    0x488bb8d00000	            mov rdi, qword [rax + 0xd0] 	      1537	eval.c	FUNCTION_39	CALL_1
0x400b681	        0x4883c710	                           add rdi, 0x10	      1537	eval.c	FUNCTION_39	CALL_1
0x400b685	      0x488d4c2414	                   lea rcx, [rsp + 0x14]	      1537	eval.c	FUNCTION_39	CALL_1
0x400b68a	      0xba01000000	                              mov edx, 1	      1537	eval.c	FUNCTION_39	CALL_1
0x400b68f	      0xbe00000000	                              mov esi, 0	      1537	eval.c	FUNCTION_39	CALL_1
0x400b694	      0xe800000000	                          call 0x400b699	      1537	eval.c	FUNCTION_39	CALL_1
0x400b699	      0xe9bf000000	                           jmp 0x400b75d	      1537	eval.c	FUNCTION_39	CALL_1
0x400b69e	      0x488d4c2414	                   lea rcx, [rsp + 0x14]	      1547	eval.c	FUNCTION_40	CALL_1
0x400b6a3	      0xba00000000	                              mov edx, 0	      1547	eval.c	FUNCTION_40	CALL_1
0x400b6a8	      0xbe00000000	                              mov esi, 0	      1547	eval.c	FUNCTION_40	CALL_1
0x400b6ad	      0xbf00000000	                              mov edi, 0	      1547	eval.c	FUNCTION_40	CALL_1
0x400b6b2	      0xe800000000	                          call 0x400b6b7	      1547	eval.c	FUNCTION_40	CALL_1
0x400b6b7	      0xe9a1000000	                           jmp 0x400b75d	      1547	eval.c	FUNCTION_40	CALL_1
0x400b6bc	      0x488d7c2414	                   lea rdi, [rsp + 0x14]	      1627	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8	SWITCH_1	CALL_18
0x400b6c1	      0xe8e381ffff	               call sym.list_script_vars	      1627	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8	SWITCH_1	CALL_18
0x400b6c6	      0xe992000000	                           jmp 0x400b75d	      1627	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8	SWITCH_1	CALL_18
0x400b6cb	      0x488d7c2414	                   lea rdi, [rsp + 0x14]	      1628	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8	SWITCH_1	CALL_19
0x400b6d0	      0xe800000000	                          call 0x400b6d5	      1628	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8	SWITCH_1	CALL_19
0x400b6d5	      0xe983000000	                           jmp 0x400b75d	      1628	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8	SWITCH_1	CALL_19
0x400b6da	      0xba05000000	                              mov edx, 5	      1630	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8	SWITCH_1	CALL_21
0x400b6df	      0xbe00000000	                              mov esi, 0	      1630	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8	SWITCH_1	CALL_21
0x400b6e4	      0xbf00000000	                              mov edi, 0	      1630	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8	SWITCH_1	CALL_21
0x400b6e9	      0xe800000000	                          call 0x400b6ee	      1630	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8	SWITCH_1	CALL_21
0x400b6ee	          0x4c89e6	                            mov rsi, r12	      1630	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8	SWITCH_1	CALL_21
0x400b6f1	          0x4889c7	                            mov rdi, rax	      1630	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8	SWITCH_1	CALL_21
0x400b6f4	      0xe800000000	                          call 0x400b6f9	      1630	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8	SWITCH_1	CALL_21
0x400b6f9	            0xeb62	                           jmp 0x400b75d	      1630	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8	SWITCH_1	CALL_21
0x400b6fb	      0xb900000000	                              mov ecx, 0	      1640	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	ELSE_5	CALL_22
0x400b700	      0x488d542440	                   lea rdx, [rsp + 0x40]	      1640	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	ELSE_5	CALL_22
0x400b705	      0x488d742428	                   lea rsi, [rsp + 0x28]	      1640	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	ELSE_5	CALL_22
0x400b70a	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      1640	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	ELSE_5	CALL_22
0x400b70f	      0xe800000000	                          call 0x400b714	      1640	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	ELSE_5	CALL_22
0x400b714	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      1641	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	ELSE_5
0x400b719	        0x440fb62a	                  movzx r13d, byte [rdx]	      1641	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	ELSE_5
0x400b71d	          0xc60200	                       mov byte [rdx], 0	      1642	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	ELSE_5
0x400b720	          0x4885c0	                           test rax, rax	      1643	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	ELSE_5	CALL_23
0x400b723	      0xb900000000	                              mov ecx, 0	      1643	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	ELSE_5	CALL_23
0x400b728	        0x480f45c8	                         cmovne rcx, rax	      1643	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	ELSE_5	CALL_23
0x400b72c	      0x4c3b7c2418	            cmp r15, qword [rsp + 0x18] 	      1643	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	ELSE_5	CALL_23
0x400b731	        0x4d0f44f4	                          cmove r14, r12	      1643	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	ELSE_5	CALL_23
0x400b735	      0x4c8d442414	                    lea r8, [rsp + 0x14]	      1643	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	ELSE_5	CALL_23
0x400b73a	        0x8b542430	            mov edx, dword [rsp + 0x30] 	      1643	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	ELSE_5	CALL_23
0x400b73e	          0x4c89f6	                            mov rsi, r14	      1643	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	ELSE_5	CALL_23
0x400b741	      0xbf00000000	                              mov edi, 0	      1643	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	ELSE_5	CALL_23
0x400b746	      0xe88f4cffff	                 call sym.list_one_var_a	      1643	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	ELSE_5	CALL_23
0x400b74b	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1648	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	ELSE_5
0x400b750	          0x448828	                    mov byte [rax], r13b	      1648	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	ELSE_5
0x400b753	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      1649	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	ELSE_5	CALL_24
0x400b758	      0xe800000000	                          call 0x400b75d	      1649	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	ELSE_5	CALL_24
0x400b75d	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      1651	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	CALL_25
0x400b762	      0xe800000000	                          call 0x400b767	      1651	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	CALL_25
0x400b767	            0xeb13	                           jmp 0x400b77c	      1651	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	CALL_25
0x400b769	      0xbd01000000	                              mov ebp, 1	      1602	eval.c	FUNCTION_42	WHILE_1	ELSE_1	IF_3
0x400b76e	            0xeb0c	                           jmp 0x400b77c	      1602	eval.c	FUNCTION_42	WHILE_1	ELSE_1	IF_3
0x400b770	      0xbd01000000	                              mov ebp, 1	      1609	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	IF_6
0x400b775	            0xeb05	                           jmp 0x400b77c	      1609	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	IF_6
0x400b777	      0xbd01000000	                              mov ebp, 1	      1615	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	IF_7
0x400b77c	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      1656	eval.c	FUNCTION_42	WHILE_1	ELSE_1	CALL_26
0x400b781	      0xe800000000	                          call 0x400b786	      1656	eval.c	FUNCTION_42	WHILE_1	ELSE_1	CALL_26
0x400b786	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1659	eval.c	FUNCTION_42	WHILE_1	CALL_27
0x400b78b	      0xe800000000	                          call 0x400b790	      1659	eval.c	FUNCTION_42	WHILE_1	CALL_27
0x400b790	      0x4889442418	             mov qword [rsp + 0x18], rax	      1659	eval.c	FUNCTION_42	WHILE_1	CALL_27
0x400b795	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1575	eval.c	FUNCTION_42	WHILE_1	CALL_1
0x400b79a	           0xfb638	                   movzx edi, byte [rax]	      1575	eval.c	FUNCTION_42	WHILE_1	CALL_1
0x400b79d	      0xe800000000	                          call 0x400b7a2	      1575	eval.c	FUNCTION_42	WHILE_1	CALL_1
0x400b7a2	            0x85c0	                           test eax, eax	      1575	eval.c	FUNCTION_42	WHILE_1	CALL_1
0x400b7a4	            0x750e	                           jne 0x400b7b4	      1575	eval.c	FUNCTION_42	WHILE_1	CALL_1
0x400b7a6	    0x8b0500000000	            mov eax, dword [0x0400b7ac] 	      1575	eval.c	FUNCTION_42	WHILE_1	CALL_1
0x400b7ac	            0x85c0	                           test eax, eax	      1575	eval.c	FUNCTION_42	WHILE_1	CALL_1
0x400b7ae	     0xf84c9fcffff	                            je 0x400b47d	      1575	eval.c	FUNCTION_42	WHILE_1	CALL_1
0x400b7b4	      0x4c8b642418	            mov r12, qword [rsp + 0x18] 	      1662	eval.c	FUNCTION_42
0x400b7b9	      0xe9c2000000	                           jmp 0x400b880	      1662	eval.c	FUNCTION_42
0x400b7be	        0x837b3000	               cmp dword [rbx + 0x30], 0	      1263	eval.c	FUNCTION_31	IF_3	ELSE_2	IF_6
0x400b7c2	     0xf85b8000000	                           jne 0x400b880	      1263	eval.c	FUNCTION_31	IF_3	ELSE_2	IF_6
0x400b7c8	      0x488d4c2414	                   lea rcx, [rsp + 0x14]	      1508	eval.c	FUNCTION_36	CALL_1
0x400b7cd	      0xba01000000	                              mov edx, 1	      1508	eval.c	FUNCTION_36	CALL_1
0x400b7d2	      0xbe00000000	                              mov esi, 0	      1508	eval.c	FUNCTION_36	CALL_1
0x400b7d7	      0xbf00000000	                              mov edi, 0	      1508	eval.c	FUNCTION_36	CALL_1
0x400b7dc	      0xe800000000	                          call 0x400b7e1	      1508	eval.c	FUNCTION_36	CALL_1
0x400b7e1	    0x488b05000000	            mov rax, qword [0x0400b7e8] 	      1517	eval.c	FUNCTION_37	CALL_1
0x400b7e8	    0x488bb8301700	          mov rdi, qword [rax + 0x1730] 	      1517	eval.c	FUNCTION_37	CALL_1
0x400b7ef	        0x4883c710	                           add rdi, 0x10	      1517	eval.c	FUNCTION_37	CALL_1
0x400b7f3	      0x488d4c2414	                   lea rcx, [rsp + 0x14]	      1517	eval.c	FUNCTION_37	CALL_1
0x400b7f8	      0xba01000000	                              mov edx, 1	      1517	eval.c	FUNCTION_37	CALL_1
0x400b7fd	      0xbe00000000	                              mov esi, 0	      1517	eval.c	FUNCTION_37	CALL_1
0x400b802	      0xe800000000	                          call 0x400b807	      1517	eval.c	FUNCTION_37	CALL_1
0x400b807	    0x488b05000000	            mov rax, qword [0x0400b80e] 	      1527	eval.c	FUNCTION_38	CALL_1
0x400b80e	    0x488bb8700500	           mov rdi, qword [rax + 0x570] 	      1527	eval.c	FUNCTION_38	CALL_1
0x400b815	        0x4883c710	                           add rdi, 0x10	      1527	eval.c	FUNCTION_38	CALL_1
0x400b819	      0x488d4c2414	                   lea rcx, [rsp + 0x14]	      1527	eval.c	FUNCTION_38	CALL_1
0x400b81e	      0xba01000000	                              mov edx, 1	      1527	eval.c	FUNCTION_38	CALL_1
0x400b823	      0xbe00000000	                              mov esi, 0	      1527	eval.c	FUNCTION_38	CALL_1
0x400b828	      0xe800000000	                          call 0x400b82d	      1527	eval.c	FUNCTION_38	CALL_1
0x400b82d	    0x488b05000000	            mov rax, qword [0x0400b834] 	      1537	eval.c	FUNCTION_39	CALL_1
0x400b834	    0x488bb8d00000	            mov rdi, qword [rax + 0xd0] 	      1537	eval.c	FUNCTION_39	CALL_1
0x400b83b	        0x4883c710	                           add rdi, 0x10	      1537	eval.c	FUNCTION_39	CALL_1
0x400b83f	      0x488d4c2414	                   lea rcx, [rsp + 0x14]	      1537	eval.c	FUNCTION_39	CALL_1
0x400b844	      0xba01000000	                              mov edx, 1	      1537	eval.c	FUNCTION_39	CALL_1
0x400b849	      0xbe00000000	                              mov esi, 0	      1537	eval.c	FUNCTION_39	CALL_1
0x400b84e	      0xe800000000	                          call 0x400b853	      1537	eval.c	FUNCTION_39	CALL_1
0x400b853	      0x488d7c2414	                   lea rdi, [rsp + 0x14]	      1270	eval.c	FUNCTION_31	IF_3	ELSE_2	IF_6	CALL_12
0x400b858	      0xe84c80ffff	               call sym.list_script_vars	      1270	eval.c	FUNCTION_31	IF_3	ELSE_2	IF_6	CALL_12
0x400b85d	      0x488d7c2414	                   lea rdi, [rsp + 0x14]	      1271	eval.c	FUNCTION_31	IF_3	ELSE_2	IF_6	CALL_13
0x400b862	      0xe800000000	                          call 0x400b867	      1271	eval.c	FUNCTION_31	IF_3	ELSE_2	IF_6	CALL_13
0x400b867	      0x488d4c2414	                   lea rcx, [rsp + 0x14]	      1547	eval.c	FUNCTION_40	CALL_1
0x400b86c	      0xba00000000	                              mov edx, 0	      1547	eval.c	FUNCTION_40	CALL_1
0x400b871	      0xbe00000000	                              mov esi, 0	      1547	eval.c	FUNCTION_40	CALL_1
0x400b876	      0xbf00000000	                              mov edi, 0	      1547	eval.c	FUNCTION_40	CALL_1
0x400b87b	      0xe800000000	                          call 0x400b880	      1547	eval.c	FUNCTION_40	CALL_1
0x400b880	          0x4c89e7	                            mov rdi, r12	      1274	eval.c	FUNCTION_31	IF_3	CALL_15
0x400b883	      0xe800000000	                          call 0x400b888	      1274	eval.c	FUNCTION_31	IF_3	CALL_15
0x400b888	        0x48894308	                mov qword [rbx + 8], rax	      1274	eval.c	FUNCTION_31	IF_3	CALL_15
0x400b88c	      0xe9b8000000	                           jmp 0x400b949	      1274	eval.c	FUNCTION_31	IF_3	CALL_15
0x400b891	      0xc64424403d	            mov byte [rsp + 0x40], 0x3d 	      1278	eval.c	FUNCTION_31	ELSE_3
0x400b896	      0xc644244100	                mov byte [rsp + 0x41], 0	      1279	eval.c	FUNCTION_31	ELSE_3
0x400b89b	         0xfb67500	                   movzx esi, byte [rbp]	      1280	eval.c	FUNCTION_31	ELSE_3	IF_7
0x400b89f	        0x4080fe3d	                           cmp sil, 0x3d	      1280	eval.c	FUNCTION_31	ELSE_3	IF_7
0x400b8a3	            0x7429	                            je 0x400b8ce	      1280	eval.c	FUNCTION_31	ELSE_3	IF_7
0x400b8a5	        0x400fb6f6	                          movzx esi, sil	      1282	eval.c	FUNCTION_31	ELSE_3	IF_7	IF_8	CALL_16
0x400b8a9	      0xbf00000000	                              mov edi, 0	      1282	eval.c	FUNCTION_31	ELSE_3	IF_7	IF_8	CALL_16
0x400b8ae	      0xe800000000	                          call 0x400b8b3	      1282	eval.c	FUNCTION_31	ELSE_3	IF_7	IF_8	CALL_16
0x400b8b3	          0x4885c0	                           test rax, rax	      1282	eval.c	FUNCTION_31	ELSE_3	IF_7	IF_8	CALL_16
0x400b8b6	            0x7408	                            je 0x400b8c0	      1282	eval.c	FUNCTION_31	ELSE_3	IF_7	IF_8	CALL_16
0x400b8b8	         0xfb64500	                   movzx eax, byte [rbp]	      1283	eval.c	FUNCTION_31	ELSE_3	IF_7	IF_8
0x400b8bc	        0x88442440	               mov byte [rsp + 0x40], al	      1283	eval.c	FUNCTION_31	ELSE_3	IF_7	IF_8
0x400b8c0	        0x488d7d02	                      lea rdi, [rbp + 2]	      1284	eval.c	FUNCTION_31	ELSE_3	IF_7	CALL_17
0x400b8c4	      0xe800000000	                          call 0x400b8c9	      1284	eval.c	FUNCTION_31	ELSE_3	IF_7	CALL_17
0x400b8c9	          0x4889c7	                            mov rdi, rax	      1284	eval.c	FUNCTION_31	ELSE_3	IF_7	CALL_17
0x400b8cc	            0xeb0c	                           jmp 0x400b8da	      1284	eval.c	FUNCTION_31	ELSE_3	IF_7	CALL_17
0x400b8ce	        0x488d7d01	                      lea rdi, [rbp + 1]	      1287	eval.c	FUNCTION_31	ELSE_3	CALL_18
0x400b8d2	      0xe800000000	                          call 0x400b8d7	      1287	eval.c	FUNCTION_31	ELSE_3	CALL_18
0x400b8d7	          0x4889c7	                            mov rdi, rax	      1287	eval.c	FUNCTION_31	ELSE_3	CALL_18
0x400b8da	          0x8b5330	            mov edx, dword [rbx + 0x30] 	      1289	eval.c	FUNCTION_31	ELSE_3	IF_9
0x400b8dd	            0x85d2	                           test edx, edx	      1289	eval.c	FUNCTION_31	ELSE_3	IF_9
0x400b8df	            0x7407	                            je 0x400b8e8	      1289	eval.c	FUNCTION_31	ELSE_3	IF_9
0x400b8e1	    0x830500000000	               add dword [0x0400b8e8], 1	      1290	eval.c	FUNCTION_31	ELSE_3	IF_9
0x400b8e8	            0x85d2	                           test edx, edx	      1291	eval.c	FUNCTION_31	ELSE_3	CALL_19
0x400b8ea	           0xf94c1	                                 sete cl	      1291	eval.c	FUNCTION_31	ELSE_3	CALL_19
0x400b8ed	           0xfb6c9	                           movzx ecx, cl	      1291	eval.c	FUNCTION_31	ELSE_3	CALL_19
0x400b8f0	        0x488d5308	                      lea rdx, [rbx + 8]	      1291	eval.c	FUNCTION_31	ELSE_3	CALL_19
0x400b8f4	      0x488d742430	                   lea rsi, [rsp + 0x30]	      1291	eval.c	FUNCTION_31	ELSE_3	CALL_19
0x400b8f9	      0xe800000000	                          call 0x400b8fe	      1291	eval.c	FUNCTION_31	ELSE_3	CALL_19
0x400b8fe	        0x837b3000	               cmp dword [rbx + 0x30], 0	      1292	eval.c	FUNCTION_31	ELSE_3	IF_10
0x400b902	            0x7417	                            je 0x400b91b	      1292	eval.c	FUNCTION_31	ELSE_3	IF_10
0x400b904	            0x85c0	                           test eax, eax	      1294	eval.c	FUNCTION_31	ELSE_3	IF_10	IF_11
0x400b906	            0x740a	                            je 0x400b912	      1294	eval.c	FUNCTION_31	ELSE_3	IF_10	IF_11
0x400b908	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      1295	eval.c	FUNCTION_31	ELSE_3	IF_10	CALL_20
0x400b90d	      0xe800000000	                          call 0x400b912	      1295	eval.c	FUNCTION_31	ELSE_3	IF_10	CALL_20
0x400b912	    0x832d00000000	               sub dword [0x0400b919], 1	      1296	eval.c	FUNCTION_31	ELSE_3	IF_10
0x400b919	            0xeb2e	                           jmp 0x400b949	      1296	eval.c	FUNCTION_31	ELSE_3	IF_10
0x400b91b	            0x85c0	                           test eax, eax	      1298	eval.c	FUNCTION_31	ELSE_3	ELSE_5	IF_12
0x400b91d	            0x742a	                            je 0x400b949	      1298	eval.c	FUNCTION_31	ELSE_3	ELSE_5	IF_12
0x400b91f	      0x4c8d4c2440	                    lea r9, [rsp + 0x40]	      1300	eval.c	FUNCTION_31	ELSE_3	ELSE_5	IF_12	CALL_21
0x400b924	      0x448b44240c	              mov r8d, dword [rsp + 0xc]	      1300	eval.c	FUNCTION_31	ELSE_3	ELSE_5	IF_12	CALL_21
0x400b929	        0x8b4c2410	            mov ecx, dword [rsp + 0x10] 	      1300	eval.c	FUNCTION_31	ELSE_3	ELSE_5	IF_12	CALL_21
0x400b92d	      0xba00000000	                              mov edx, 0	      1300	eval.c	FUNCTION_31	ELSE_3	ELSE_5	IF_12	CALL_21
0x400b932	      0x488d742430	                   lea rsi, [rsp + 0x30]	      1300	eval.c	FUNCTION_31	ELSE_3	ELSE_5	IF_12	CALL_21
0x400b937	          0x488b3b	                    mov rdi, qword [rbx]	      1300	eval.c	FUNCTION_31	ELSE_3	ELSE_5	IF_12	CALL_21
0x400b93a	      0xe850e9ffff	                    call sym.ex_let_vars	      1300	eval.c	FUNCTION_31	ELSE_3	ELSE_5	IF_12	CALL_21
0x400b93f	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      1302	eval.c	FUNCTION_31	ELSE_3	ELSE_5	IF_12	CALL_22
0x400b944	      0xe800000000	                          call 0x400b949	      1302	eval.c	FUNCTION_31	ELSE_3	ELSE_5	IF_12	CALL_22
0x400b949	    0x488b84248800	            mov rax, qword [rsp + 0x88] 	      1305	eval.c	FUNCTION_31
0x400b951	    0x644833042528	                xor rax, qword fs:[0x28]	      1305	eval.c	FUNCTION_31
0x400b95a	            0x7405	                            je 0x400b961	      1305	eval.c	FUNCTION_31
0x400b95c	      0xe800000000	                          call 0x400b961	      1305	eval.c	FUNCTION_31
0x400b961	    0x4881c4980000	                           add rsp, 0x98	      1305	eval.c	FUNCTION_31
0x400b968	              0x5b	                                 pop rbx	      1305	eval.c	FUNCTION_31
0x400b969	              0x5d	                                 pop rbp	      1305	eval.c	FUNCTION_31
0x400b96a	            0x415c	                                 pop r12	      1305	eval.c	FUNCTION_31
0x400b96c	            0x415d	                                 pop r13	      1305	eval.c	FUNCTION_31
0x400b96e	            0x415e	                                 pop r14	      1305	eval.c	FUNCTION_31
0x400b970	            0x415f	                                 pop r15	      1305	eval.c	FUNCTION_31
0x400b972	              0xc3	                                     ret	      1305	eval.c	FUNCTION_31
get_option_tv	FOR,0:SWITCH,0:DO,0:IF,10:functions,0:WHILE,0:CALL,6:ELSE,5	115
0x4000ce4	            0x4156	                                push r14	      4585	eval.c	FUNCTION_72
0x4000ce6	            0x4155	                                push r13	      4585	eval.c	FUNCTION_72
0x4000ce8	            0x4154	                                push r12	      4585	eval.c	FUNCTION_72
0x4000cea	              0x55	                                push rbp	      4585	eval.c	FUNCTION_72
0x4000ceb	              0x53	                                push rbx	      4585	eval.c	FUNCTION_72
0x4000cec	        0x4883ec20	                           sub rsp, 0x20	      4585	eval.c	FUNCTION_72
0x4000cf0	          0x4889fb	                            mov rbx, rdi	      4585	eval.c	FUNCTION_72
0x4000cf3	          0x4989f4	                            mov r12, rsi	      4585	eval.c	FUNCTION_72
0x4000cf6	          0x4189d5	                           mov r13d, edx	      4585	eval.c	FUNCTION_72
0x4000cf9	    0x64488b042528	                mov rax, qword fs:[0x28]	      4585	eval.c	FUNCTION_72
0x4000d02	      0x4889442418	             mov qword [rsp + 0x18], rax	      4585	eval.c	FUNCTION_72
0x4000d07	            0x31c0	                            xor eax, eax	      4585	eval.c	FUNCTION_72
0x4000d09	          0x488b07	                    mov rax, qword [rdi]	      4591	eval.c	FUNCTION_72
0x4000d0c	        0x440fb630	                  movzx r14d, byte [rax]	      4591	eval.c	FUNCTION_72
0x4000d10	      0x488d742404	                      lea rsi, [rsp + 4]	      4598	eval.c	FUNCTION_72	CALL_1
0x4000d15	      0xe826f3ffff	                call sym.find_option_end	      4598	eval.c	FUNCTION_72	CALL_1
0x4000d1a	          0x4885c0	                           test rax, rax	      4599	eval.c	FUNCTION_72	IF_1
0x4000d1d	            0x753a	                           jne 0x4000d59	      4599	eval.c	FUNCTION_72	IF_1
0x4000d1f	      0xb800000000	                              mov eax, 0	      4603	eval.c	FUNCTION_72	IF_1
0x4000d24	          0x4d85e4	                           test r12, r12	      4601	eval.c	FUNCTION_72	IF_1	IF_2
0x4000d27	     0xf8402010000	                            je 0x4000e2f	      4601	eval.c	FUNCTION_72	IF_1	IF_2
0x4000d2d	          0x488b1b	                    mov rbx, qword [rbx]	      4602	eval.c	FUNCTION_72	IF_1	CALL_3
0x4000d30	      0xba05000000	                              mov edx, 5	      4602	eval.c	FUNCTION_72	IF_1	CALL_3
0x4000d35	      0xbe00000000	                              mov esi, 0	      4602	eval.c	FUNCTION_72	IF_1	CALL_3
0x4000d3a	      0xbf00000000	                              mov edi, 0	      4602	eval.c	FUNCTION_72	IF_1	CALL_3
0x4000d3f	      0xe800000000	                          call 0x4000d44	      4602	eval.c	FUNCTION_72	IF_1	CALL_3
0x4000d44	          0x4889de	                            mov rsi, rbx	      4602	eval.c	FUNCTION_72	IF_1	CALL_3
0x4000d47	          0x4889c7	                            mov rdi, rax	      4602	eval.c	FUNCTION_72	IF_1	CALL_3
0x4000d4a	      0xe800000000	                          call 0x4000d4f	      4602	eval.c	FUNCTION_72	IF_1	CALL_3
0x4000d4f	      0xb800000000	                              mov eax, 0	      4603	eval.c	FUNCTION_72	IF_1
0x4000d54	      0xe9d6000000	                           jmp 0x4000e2f	      4603	eval.c	FUNCTION_72	IF_1
0x4000d59	          0x4889c5	                            mov rbp, rax	      4603	eval.c	FUNCTION_72	IF_1
0x4000d5c	          0x4585ed	                         test r13d, r13d	      4606	eval.c	FUNCTION_72	IF_3
0x4000d5f	            0x750d	                           jne 0x4000d6e	      4606	eval.c	FUNCTION_72	IF_3
0x4000d61	          0x488903	                    mov qword [rbx], rax	      4608	eval.c	FUNCTION_72	IF_3
0x4000d64	      0xb801000000	                              mov eax, 1	      4609	eval.c	FUNCTION_72	IF_3
0x4000d69	      0xe9c1000000	                           jmp 0x4000e2f	      4609	eval.c	FUNCTION_72	IF_3
0x4000d6e	        0x440fb628	                  movzx r13d, byte [rax]	      4612	eval.c	FUNCTION_72
0x4000d72	          0xc60000	                       mov byte [rax], 0	      4613	eval.c	FUNCTION_72
0x4000d75	        0x8b4c2404	                mov ecx, dword [rsp + 4]	      4614	eval.c	FUNCTION_72	CALL_4
0x4000d79	          0x4d85e4	                           test r12, r12	      4614	eval.c	FUNCTION_72	CALL_4
0x4000d7c	     0xf85df000000	                           jne 0x4000e61	      4614	eval.c	FUNCTION_72	CALL_4
0x4000d82	      0xe9ba000000	                           jmp 0x4000e41	      4614	eval.c	FUNCTION_72	CALL_4
0x4000d87	          0x4c8b23	                    mov r12, qword [rbx]	      4620	eval.c	FUNCTION_72	IF_4	CALL_6
0x4000d8a	      0xba05000000	                              mov edx, 5	      4620	eval.c	FUNCTION_72	IF_4	CALL_6
0x4000d8f	      0xbe00000000	                              mov esi, 0	      4620	eval.c	FUNCTION_72	IF_4	CALL_6
0x4000d94	      0xbf00000000	                              mov edi, 0	      4620	eval.c	FUNCTION_72	IF_4	CALL_6
0x4000d99	      0xe800000000	                          call 0x4000d9e	      4620	eval.c	FUNCTION_72	IF_4	CALL_6
0x4000d9e	          0x4c89e6	                            mov rsi, r12	      4620	eval.c	FUNCTION_72	IF_4	CALL_6
0x4000da1	          0x4889c7	                            mov rdi, rax	      4620	eval.c	FUNCTION_72	IF_4	CALL_6
0x4000da4	      0xe800000000	                          call 0x4000da9	      4620	eval.c	FUNCTION_72	IF_4	CALL_6
0x4000da9	      0xb800000000	                              mov eax, 0	      4621	eval.c	FUNCTION_72	IF_4
0x4000dae	            0xeb78	                           jmp 0x4000e28	      4621	eval.c	FUNCTION_72	IF_4
0x4000db0	    0x41c704240200	                      mov dword [r12], 2	      4627	eval.c	FUNCTION_72	ELSE_1	IF_6	IF_7
0x4000db8	    0x49c744240800	                  mov qword [r12 + 8], 0	      4628	eval.c	FUNCTION_72	ELSE_1	IF_6	IF_7
0x4000dc1	      0xb801000000	                              mov eax, 1	      4592	eval.c	FUNCTION_72
0x4000dc6	            0xeb60	                           jmp 0x4000e28	      4592	eval.c	FUNCTION_72
0x4000dc8	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      4630	eval.c	FUNCTION_72	ELSE_1	IF_6	ELSE_2	IF_8
0x4000dcb	            0x7518	                           jne 0x4000de5	      4630	eval.c	FUNCTION_72	ELSE_1	IF_6	ELSE_2	IF_8
0x4000dcd	    0x41c704240100	                      mov dword [r12], 1	      4632	eval.c	FUNCTION_72	ELSE_1	IF_6	ELSE_2	IF_8
0x4000dd5	    0x49c744240800	                  mov qword [r12 + 8], 0	      4633	eval.c	FUNCTION_72	ELSE_1	IF_6	ELSE_2	IF_8
0x4000dde	      0xb801000000	                              mov eax, 1	      4592	eval.c	FUNCTION_72
0x4000de3	            0xeb43	                           jmp 0x4000e28	      4592	eval.c	FUNCTION_72
0x4000de5	          0x83f801	                              cmp eax, 1	      4635	eval.c	FUNCTION_72	ELSE_1	IF_6	ELSE_3	IF_9
0x4000de8	            0x7519	                           jne 0x4000e03	      4635	eval.c	FUNCTION_72	ELSE_1	IF_6	ELSE_3	IF_9
0x4000dea	    0x41c704240100	                      mov dword [r12], 1	      4637	eval.c	FUNCTION_72	ELSE_1	IF_6	ELSE_3	IF_9
0x4000df2	      0x488b442408	                mov rax, qword [rsp + 8]	      4638	eval.c	FUNCTION_72	ELSE_1	IF_6	ELSE_3	IF_9
0x4000df7	      0x4989442408	                mov qword [r12 + 8], rax	      4638	eval.c	FUNCTION_72	ELSE_1	IF_6	ELSE_3	IF_9
0x4000dfc	      0xb801000000	                              mov eax, 1	      4592	eval.c	FUNCTION_72
0x4000e01	            0xeb25	                           jmp 0x4000e28	      4592	eval.c	FUNCTION_72
0x4000e03	    0x41c704240200	                      mov dword [r12], 2	      4642	eval.c	FUNCTION_72	ELSE_1	IF_6	ELSE_4
0x4000e0b	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4643	eval.c	FUNCTION_72	ELSE_1	IF_6	ELSE_4
0x4000e10	      0x4989442408	                mov qword [r12 + 8], rax	      4643	eval.c	FUNCTION_72	ELSE_1	IF_6	ELSE_4
0x4000e15	      0xb801000000	                              mov eax, 1	      4592	eval.c	FUNCTION_72
0x4000e1a	            0xeb0c	                           jmp 0x4000e28	      4592	eval.c	FUNCTION_72
0x4000e1c	          0x83c202	                              add edx, 2	      4621	eval.c	FUNCTION_72	IF_4
0x4000e1f	          0x83fa01	                              cmp edx, 1	      4621	eval.c	FUNCTION_72	IF_4
0x4000e22	           0xf97c0	                                 seta al	      4621	eval.c	FUNCTION_72	IF_4
0x4000e25	           0xfb6c0	                           movzx eax, al	      4621	eval.c	FUNCTION_72	IF_4
0x4000e28	        0x44886d00	                    mov byte [rbp], r13b	      4649	eval.c	FUNCTION_72
0x4000e2c	          0x48892b	                    mov qword [rbx], rbp	      4650	eval.c	FUNCTION_72
0x4000e2f	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      4653	eval.c	FUNCTION_72
0x4000e34	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      4653	eval.c	FUNCTION_72
0x4000e3d	            0x745d	                            je 0x4000e9c	      4653	eval.c	FUNCTION_72
0x4000e3f	            0xeb56	                           jmp 0x4000e97	      4653	eval.c	FUNCTION_72
0x4000e41	      0xba00000000	                              mov edx, 0	      4614	eval.c	FUNCTION_72	CALL_4
0x4000e46	      0x488d742408	                      lea rsi, [rsp + 8]	      4614	eval.c	FUNCTION_72	CALL_4
0x4000e4b	          0x488b3b	                    mov rdi, qword [rbx]	      4614	eval.c	FUNCTION_72	CALL_4
0x4000e4e	      0xe800000000	                          call 0x4000e53	      4614	eval.c	FUNCTION_72	CALL_4
0x4000e53	            0x89c2	                            mov edx, eax	      4614	eval.c	FUNCTION_72	CALL_4
0x4000e55	      0xb800000000	                              mov eax, 0	      4621	eval.c	FUNCTION_72	IF_4
0x4000e5a	          0x83fafd	             cmp edx, 0xfffffffffffffffd	      4617	eval.c	FUNCTION_72	IF_4
0x4000e5d	            0x74c9	                            je 0x4000e28	      4617	eval.c	FUNCTION_72	IF_4
0x4000e5f	            0xeb29	                           jmp 0x4000e8a	      4617	eval.c	FUNCTION_72	IF_4
0x4000e61	      0x488d542410	                   lea rdx, [rsp + 0x10]	      4614	eval.c	FUNCTION_72	CALL_4
0x4000e66	      0x488d742408	                      lea rsi, [rsp + 8]	      4614	eval.c	FUNCTION_72	CALL_4
0x4000e6b	          0x488b3b	                    mov rdi, qword [rbx]	      4614	eval.c	FUNCTION_72	CALL_4
0x4000e6e	      0xe800000000	                          call 0x4000e73	      4614	eval.c	FUNCTION_72	CALL_4
0x4000e73	          0x83f8fd	             cmp eax, 0xfffffffffffffffd	      4617	eval.c	FUNCTION_72	IF_4
0x4000e76	     0xf840bffffff	                            je 0x4000d87	      4617	eval.c	FUNCTION_72	IF_4
0x4000e7c	          0x83f8fe	             cmp eax, 0xfffffffffffffffe	      4625	eval.c	FUNCTION_72	ELSE_1	IF_6	IF_7
0x4000e7f	     0xf8543ffffff	                           jne 0x4000dc8	      4625	eval.c	FUNCTION_72	ELSE_1	IF_6	IF_7
0x4000e85	      0xe926ffffff	                           jmp 0x4000db0	      4625	eval.c	FUNCTION_72	ELSE_1	IF_6	IF_7
0x4000e8a	      0xb801000000	                              mov eax, 1	      4592	eval.c	FUNCTION_72
0x4000e8f	        0x4180fe2b	                          cmp r14b, 0x2b	      4646	eval.c	FUNCTION_72	ELSE_5	IF_10
0x4000e93	            0x7593	                           jne 0x4000e28	      4646	eval.c	FUNCTION_72	ELSE_5	IF_10
0x4000e95	            0xeb85	                           jmp 0x4000e1c	      4646	eval.c	FUNCTION_72	ELSE_5	IF_10
0x4000e97	      0xe800000000	                          call 0x4000e9c	      4653	eval.c	FUNCTION_72
0x4000e9c	        0x4883c420	                           add rsp, 0x20	      4653	eval.c	FUNCTION_72
0x4000ea0	              0x5b	                                 pop rbx	      4653	eval.c	FUNCTION_72
0x4000ea1	              0x5d	                                 pop rbp	      4653	eval.c	FUNCTION_72
0x4000ea2	            0x415c	                                 pop r12	      4653	eval.c	FUNCTION_72
0x4000ea4	            0x415d	                                 pop r13	      4653	eval.c	FUNCTION_72
0x4000ea6	            0x415e	                                 pop r14	      4653	eval.c	FUNCTION_72
0x4000ea8	              0xc3	                                     ret	      4653	eval.c	FUNCTION_72
copy_tv	FOR,0:SWITCH,1:DO,0:IF,7:functions,0:WHILE,0:CALL,3:ELSE,4	72
0x4004785	            0x8b07	                    mov eax, dword [rdi]	      7750	eval.c	FUNCTION_149
0x4004787	            0x8906	                    mov dword [rsi], eax	      7750	eval.c	FUNCTION_149
0x4004789	        0xc6460400	                   mov byte [rsi + 4], 0	      7751	eval.c	FUNCTION_149
0x400478d	          0x833f0a	                    cmp dword [rdi], 0xa	      7752	eval.c	FUNCTION_149	SWITCH_1
0x4004790	     0xf87f9000000	                            ja 0x400488f	      7752	eval.c	FUNCTION_149	SWITCH_1
0x4004796	              0x55	                                push rbp	      7749	eval.c	FUNCTION_149
0x4004797	              0x53	                                push rbx	      7749	eval.c	FUNCTION_149
0x4004798	        0x4883ec08	                              sub rsp, 8	      7749	eval.c	FUNCTION_149
0x400479c	          0x4889f5	                            mov rbp, rsi	      7749	eval.c	FUNCTION_149
0x400479f	          0x4889fb	                            mov rbx, rdi	      7749	eval.c	FUNCTION_149
0x40047a2	            0x8b07	                    mov eax, dword [rdi]	      7752	eval.c	FUNCTION_149	SWITCH_1
0x40047a4	    0xff24c5000000	                       jmp qword [rax*8]	      7752	eval.c	FUNCTION_149	SWITCH_1
0x40047ab	        0x488b4708	                mov rax, qword [rdi + 8]	      7756	eval.c	FUNCTION_149	SWITCH_1
0x40047af	        0x48894608	                mov qword [rsi + 8], rax	      7756	eval.c	FUNCTION_149	SWITCH_1
0x40047b3	      0xe9d1000000	                           jmp 0x4004889	      7757	eval.c	FUNCTION_149	SWITCH_1
0x40047b8	      0xf20f104708	            movsd xmm0, qword [rdi + 8] 	      7760	eval.c	FUNCTION_149	SWITCH_1
0x40047bd	      0xf20f114608	             movsd qword [rsi + 8], xmm0	      7760	eval.c	FUNCTION_149	SWITCH_1
0x40047c2	      0xe9c2000000	                           jmp 0x4004889	      7761	eval.c	FUNCTION_149	SWITCH_1
0x40047c7	        0x488b4708	                mov rax, qword [rdi + 8]	      7765	eval.c	FUNCTION_149	SWITCH_1
0x40047cb	        0x48894608	                mov qword [rsi + 8], rax	      7765	eval.c	FUNCTION_149	SWITCH_1
0x40047cf	          0x4885c0	                           test rax, rax	      7766	eval.c	FUNCTION_149	SWITCH_1	IF_1
0x40047d2	     0xf84b1000000	                            je 0x4004889	      7766	eval.c	FUNCTION_149	SWITCH_1	IF_1
0x40047d8	        0x83405801	               add dword [rax + 0x58], 1	      7767	eval.c	FUNCTION_149	SWITCH_1	IF_1
0x40047dc	      0xe9a8000000	                           jmp 0x4004889	      7767	eval.c	FUNCTION_149	SWITCH_1	IF_1
0x40047e1	        0x488b4708	                mov rax, qword [rdi + 8]	      7772	eval.c	FUNCTION_149	SWITCH_1
0x40047e5	        0x48894608	                mov qword [rsi + 8], rax	      7772	eval.c	FUNCTION_149	SWITCH_1
0x40047e9	          0x4885c0	                           test rax, rax	      7773	eval.c	FUNCTION_149	SWITCH_1	IF_2
0x40047ec	     0xf8497000000	                            je 0x4004889	      7773	eval.c	FUNCTION_149	SWITCH_1	IF_2
0x40047f2	    0x8380b4040000	              add dword [rax + 0x4b4], 1	      7774	eval.c	FUNCTION_149	SWITCH_1	IF_2
0x40047f9	      0xe98b000000	                           jmp 0x4004889	      7774	eval.c	FUNCTION_149	SWITCH_1	IF_2
0x40047fe	        0x488b7f08	                mov rdi, qword [rdi + 8]	      7779	eval.c	FUNCTION_149	SWITCH_1	IF_3
0x4004802	          0x4885ff	                           test rdi, rdi	      7779	eval.c	FUNCTION_149	SWITCH_1	IF_3
0x4004805	            0x750a	                           jne 0x4004811	      7779	eval.c	FUNCTION_149	SWITCH_1	IF_3
0x4004807	    0x48c746080000	                  mov qword [rsi + 8], 0	      7780	eval.c	FUNCTION_149	SWITCH_1	IF_3
0x400480f	            0xeb78	                           jmp 0x4004889	      7780	eval.c	FUNCTION_149	SWITCH_1	IF_3
0x4004811	      0xe800000000	                          call 0x4004816	      7783	eval.c	FUNCTION_149	SWITCH_1	ELSE_1	CALL_1
0x4004816	        0x48894508	                mov qword [rbp + 8], rax	      7783	eval.c	FUNCTION_149	SWITCH_1	ELSE_1	CALL_1
0x400481a	          0x833b03	                      cmp dword [rbx], 3	      7784	eval.c	FUNCTION_149	SWITCH_1	ELSE_1	IF_4
0x400481d	            0x756a	                           jne 0x4004889	      7784	eval.c	FUNCTION_149	SWITCH_1	ELSE_1	IF_4
0x400481f	          0x4889c7	                            mov rdi, rax	      7785	eval.c	FUNCTION_149	SWITCH_1	ELSE_1	CALL_2
0x4004822	      0xe800000000	                          call 0x4004827	      7785	eval.c	FUNCTION_149	SWITCH_1	ELSE_1	CALL_2
0x4004827	            0xeb60	                           jmp 0x4004889	      7785	eval.c	FUNCTION_149	SWITCH_1	ELSE_1	CALL_2
0x4004829	        0x488b4708	                mov rax, qword [rdi + 8]	      7789	eval.c	FUNCTION_149	SWITCH_1	IF_5
0x400482d	          0x4885c0	                           test rax, rax	      7789	eval.c	FUNCTION_149	SWITCH_1	IF_5
0x4004830	            0x750a	                           jne 0x400483c	      7789	eval.c	FUNCTION_149	SWITCH_1	IF_5
0x4004832	    0x48c746080000	                  mov qword [rsi + 8], 0	      7790	eval.c	FUNCTION_149	SWITCH_1	IF_5
0x400483a	            0xeb4d	                           jmp 0x4004889	      7790	eval.c	FUNCTION_149	SWITCH_1	IF_5
0x400483c	        0x48894608	                mov qword [rsi + 8], rax	      7793	eval.c	FUNCTION_149	SWITCH_1	ELSE_2
0x4004840	          0x830001	                      add dword [rax], 1	      7794	eval.c	FUNCTION_149	SWITCH_1	ELSE_2
0x4004843	            0xeb44	                           jmp 0x4004889	      7794	eval.c	FUNCTION_149	SWITCH_1	ELSE_2
0x4004845	        0x488b4708	                mov rax, qword [rdi + 8]	      7798	eval.c	FUNCTION_149	SWITCH_1	IF_6
0x4004849	          0x4885c0	                           test rax, rax	      7798	eval.c	FUNCTION_149	SWITCH_1	IF_6
0x400484c	            0x750a	                           jne 0x4004858	      7798	eval.c	FUNCTION_149	SWITCH_1	IF_6
0x400484e	    0x48c746080000	                  mov qword [rsi + 8], 0	      7799	eval.c	FUNCTION_149	SWITCH_1	IF_6
0x4004856	            0xeb31	                           jmp 0x4004889	      7799	eval.c	FUNCTION_149	SWITCH_1	IF_6
0x4004858	        0x48894608	                mov qword [rsi + 8], rax	      7802	eval.c	FUNCTION_149	SWITCH_1	ELSE_3
0x400485c	        0x83403801	               add dword [rax + 0x38], 1	      7803	eval.c	FUNCTION_149	SWITCH_1	ELSE_3
0x4004860	            0xeb27	                           jmp 0x4004889	      7803	eval.c	FUNCTION_149	SWITCH_1	ELSE_3
0x4004862	        0x488b4708	                mov rax, qword [rdi + 8]	      7807	eval.c	FUNCTION_149	SWITCH_1	IF_7
0x4004866	          0x4885c0	                           test rax, rax	      7807	eval.c	FUNCTION_149	SWITCH_1	IF_7
0x4004869	            0x750a	                           jne 0x4004875	      7807	eval.c	FUNCTION_149	SWITCH_1	IF_7
0x400486b	    0x48c746080000	                  mov qword [rsi + 8], 0	      7808	eval.c	FUNCTION_149	SWITCH_1	IF_7
0x4004873	            0xeb14	                           jmp 0x4004889	      7808	eval.c	FUNCTION_149	SWITCH_1	IF_7
0x4004875	        0x48894608	                mov qword [rsi + 8], rax	      7811	eval.c	FUNCTION_149	SWITCH_1	ELSE_4
0x4004879	        0x83400401	                  add dword [rax + 4], 1	      7812	eval.c	FUNCTION_149	SWITCH_1	ELSE_4
0x400487d	            0xeb0a	                           jmp 0x4004889	      7812	eval.c	FUNCTION_149	SWITCH_1	ELSE_4
0x400487f	      0xbf00000000	                              mov edi, 0	      7816	eval.c	FUNCTION_149	SWITCH_1	CALL_3
0x4004884	      0xe800000000	                          call 0x4004889	      7816	eval.c	FUNCTION_149	SWITCH_1	CALL_3
0x4004889	        0x4883c408	                              add rsp, 8	      7819	eval.c	FUNCTION_149
0x400488d	              0x5b	                                 pop rbx	      7819	eval.c	FUNCTION_149
0x400488e	              0x5d	                                 pop rbp	      7819	eval.c	FUNCTION_149
0x400488f	            0xf3c3	                                     ret	      7819	eval.c	FUNCTION_149
set_var	FOR,0:SWITCH,0:DO,0:IF,17:functions,0:WHILE,0:CALL,29:ELSE,6	200
0x4005451	            0x4156	                                push r14	      7525	eval.c	FUNCTION_143
0x4005453	            0x4155	                                push r13	      7525	eval.c	FUNCTION_143
0x4005455	            0x4154	                                push r12	      7525	eval.c	FUNCTION_143
0x4005457	              0x55	                                push rbp	      7525	eval.c	FUNCTION_143
0x4005458	              0x53	                                push rbx	      7525	eval.c	FUNCTION_143
0x4005459	        0x4883ec10	                           sub rsp, 0x10	      7525	eval.c	FUNCTION_143
0x400545d	          0x4889fb	                            mov rbx, rdi	      7525	eval.c	FUNCTION_143
0x4005460	          0x4989f4	                            mov r12, rsi	      7525	eval.c	FUNCTION_143
0x4005463	          0x4189d6	                           mov r14d, edx	      7525	eval.c	FUNCTION_143
0x4005466	    0x64488b042528	                mov rax, qword fs:[0x28]	      7525	eval.c	FUNCTION_143
0x400546f	      0x4889442408	                mov qword [rsp + 8], rax	      7525	eval.c	FUNCTION_143
0x4005474	            0x31c0	                            xor eax, eax	      7525	eval.c	FUNCTION_143
0x4005476	          0x4889e6	                            mov rsi, rsp	      7530	eval.c	FUNCTION_143	CALL_1
0x4005479	      0xe800000000	                          call 0x400547e	      7530	eval.c	FUNCTION_143	CALL_1
0x400547e	          0x4885c0	                           test rax, rax	      7531	eval.c	FUNCTION_143	IF_1
0x4005481	            0x740c	                            je 0x400548f	      7531	eval.c	FUNCTION_143	IF_1
0x4005483	          0x4889c5	                            mov rbp, rax	      7531	eval.c	FUNCTION_143	IF_1
0x4005486	        0x488b1424	                    mov rdx, qword [rsp]	      7531	eval.c	FUNCTION_143	IF_1
0x400548a	          0x803a00	                       cmp byte [rdx], 0	      7531	eval.c	FUNCTION_143	IF_1
0x400548d	            0x7524	                           jne 0x40054b3	      7531	eval.c	FUNCTION_143	IF_1
0x400548f	      0xba05000000	                              mov edx, 5	      7533	eval.c	FUNCTION_143	IF_1	CALL_3
0x4005494	      0xbe00000000	                              mov esi, 0	      7533	eval.c	FUNCTION_143	IF_1	CALL_3
0x4005499	      0xbf00000000	                              mov edi, 0	      7533	eval.c	FUNCTION_143	IF_1	CALL_3
0x400549e	      0xe800000000	                          call 0x40054a3	      7533	eval.c	FUNCTION_143	IF_1	CALL_3
0x40054a3	          0x4889de	                            mov rsi, rbx	      7533	eval.c	FUNCTION_143	IF_1	CALL_3
0x40054a6	          0x4889c7	                            mov rdi, rax	      7533	eval.c	FUNCTION_143	IF_1	CALL_3
0x40054a9	      0xe800000000	                          call 0x40054ae	      7533	eval.c	FUNCTION_143	IF_1	CALL_3
0x40054ae	      0xe97c020000	                           jmp 0x400572f	      7534	eval.c	FUNCTION_143	IF_1
0x40054b3	      0xb901000000	                              mov ecx, 1	      7536	eval.c	FUNCTION_143	CALL_4
0x40054b8	      0xbe00000000	                              mov esi, 0	      7536	eval.c	FUNCTION_143	CALL_4
0x40054bd	          0x4889c7	                            mov rdi, rax	      7536	eval.c	FUNCTION_143	CALL_4
0x40054c0	      0xe800000000	                          call 0x40054c5	      7536	eval.c	FUNCTION_143	CALL_4
0x40054c5	          0x4989c5	                            mov r13, rax	      7536	eval.c	FUNCTION_143	CALL_4
0x40054c8	          0x4885c0	                           test rax, rax	      7539	eval.c	FUNCTION_143	IF_2
0x40054cb	     0xf8533020000	                           jne 0x4005704	      7539	eval.c	FUNCTION_143	IF_2
0x40054d1	      0xbe01000000	                              mov esi, 1	      7540	eval.c	FUNCTION_143	CALL_5
0x40054d6	          0x4889df	                            mov rdi, rbx	      7540	eval.c	FUNCTION_143	CALL_5
0x40054d9	      0xe800000000	                          call 0x40054de	      7540	eval.c	FUNCTION_143	CALL_5
0x40054de	          0x4989c5	                            mov r13, rax	      7540	eval.c	FUNCTION_143	CALL_5
0x40054e1	        0x418b0424	                    mov eax, dword [r12]	      7542	eval.c	FUNCTION_143	IF_3
0x40054e5	          0x83e803	                              sub eax, 3	      7542	eval.c	FUNCTION_143	IF_3
0x40054e8	          0x83f801	                              cmp eax, 1	      7542	eval.c	FUNCTION_143	IF_3
0x40054eb	            0x771b	                            ja 0x4005508	      7542	eval.c	FUNCTION_143	IF_3
0x40054ed	          0x4d85ed	                           test r13, r13	      7543	eval.c	FUNCTION_143	IF_3	CALL_6
0x40054f0	        0x400f94c6	                                sete sil	      7543	eval.c	FUNCTION_143	IF_3	CALL_6
0x40054f4	        0x400fb6f6	                          movzx esi, sil	      7543	eval.c	FUNCTION_143	IF_3	CALL_6
0x40054f8	          0x4889df	                            mov rdi, rbx	      7543	eval.c	FUNCTION_143	IF_3	CALL_6
0x40054fb	      0xe800000000	                          call 0x4005500	      7543	eval.c	FUNCTION_143	IF_3	CALL_6
0x4005500	            0x85c0	                           test eax, eax	      7543	eval.c	FUNCTION_143	IF_3	CALL_6
0x4005502	     0xf8527020000	                           jne 0x400572f	      7543	eval.c	FUNCTION_143	IF_3	CALL_6
0x4005508	          0x4d85ed	                           test r13, r13	      7546	eval.c	FUNCTION_143	IF_4
0x400550b	     0xf841e010000	                            je 0x400562f	      7546	eval.c	FUNCTION_143	IF_4
0x4005511	      0x410fb67d10	           movzx edi, byte [r13 + 0x10] 	      7549	eval.c	FUNCTION_143	IF_4	IF_5	CALL_7
0x4005516	      0xba00000000	                              mov edx, 0	      7549	eval.c	FUNCTION_143	IF_4	IF_5	CALL_7
0x400551b	          0x4889de	                            mov rsi, rbx	      7549	eval.c	FUNCTION_143	IF_4	IF_5	CALL_7
0x400551e	      0xe800000000	                          call 0x4005523	      7549	eval.c	FUNCTION_143	IF_4	IF_5	CALL_7
0x4005523	            0x85c0	                           test eax, eax	      7549	eval.c	FUNCTION_143	IF_4	IF_5	CALL_7
0x4005525	     0xf8504020000	                           jne 0x400572f	      7549	eval.c	FUNCTION_143	IF_4	IF_5	CALL_7
0x400552b	      0x410fbe7d04	               movsx edi, byte [r13 + 4]	      7550	eval.c	FUNCTION_143	IF_4	IF_5	CALL_8
0x4005530	      0xba00000000	                              mov edx, 0	      7550	eval.c	FUNCTION_143	IF_4	IF_5	CALL_8
0x4005535	          0x4889de	                            mov rsi, rbx	      7550	eval.c	FUNCTION_143	IF_4	IF_5	CALL_8
0x4005538	      0xe800000000	                          call 0x400553d	      7550	eval.c	FUNCTION_143	IF_4	IF_5	CALL_8
0x400553d	            0x85c0	                           test eax, eax	      7550	eval.c	FUNCTION_143	IF_4	IF_5	CALL_8
0x400553f	     0xf85ea010000	                           jne 0x400572f	      7550	eval.c	FUNCTION_143	IF_4	IF_5	CALL_8
0x4005545	    0x4881fd000000	                              cmp rbp, 0	      7557	eval.c	FUNCTION_143	IF_4	IF_6
0x400554c	     0xf85d0000000	                           jne 0x4005622	      7557	eval.c	FUNCTION_143	IF_4	IF_6
0x4005552	        0x418b4500	                    mov eax, dword [r13]	      7559	eval.c	FUNCTION_143	IF_4	IF_6	IF_7
0x4005556	          0x83f802	                              cmp eax, 2	      7559	eval.c	FUNCTION_143	IF_4	IF_6	IF_7
0x4005559	            0x7545	                           jne 0x40055a0	      7559	eval.c	FUNCTION_143	IF_4	IF_6	IF_7
0x400555b	        0x498b7d08	                mov rdi, qword [r13 + 8]	      7561	eval.c	FUNCTION_143	IF_4	IF_6	IF_7	CALL_9
0x400555f	      0xe800000000	                          call 0x4005564	      7561	eval.c	FUNCTION_143	IF_4	IF_6	IF_7	CALL_9
0x4005564	          0x4585f6	                         test r14d, r14d	      7562	eval.c	FUNCTION_143	IF_4	IF_6	IF_7	IF_8
0x4005567	            0x7507	                           jne 0x4005570	      7562	eval.c	FUNCTION_143	IF_4	IF_6	IF_7	IF_8
0x4005569	      0x41833c2402	                      cmp dword [r12], 2	      7562	eval.c	FUNCTION_143	IF_4	IF_6	IF_7	IF_8
0x400556e	            0x7419	                            je 0x4005589	      7562	eval.c	FUNCTION_143	IF_4	IF_6	IF_7	IF_8
0x4005570	          0x4c89e7	                            mov rdi, r12	      7563	eval.c	FUNCTION_143	IF_4	IF_6	IF_7	CALL_11
0x4005573	      0xe800000000	                          call 0x4005578	      7563	eval.c	FUNCTION_143	IF_4	IF_6	IF_7	CALL_11
0x4005578	          0x4889c7	                            mov rdi, rax	      7563	eval.c	FUNCTION_143	IF_4	IF_6	IF_7	CALL_11
0x400557b	      0xe800000000	                          call 0x4005580	      7563	eval.c	FUNCTION_143	IF_4	IF_6	IF_7	CALL_11
0x4005580	        0x49894508	                mov qword [r13 + 8], rax	      7563	eval.c	FUNCTION_143	IF_4	IF_6	IF_7	CALL_11
0x4005584	      0xe9a6010000	                           jmp 0x400572f	      7563	eval.c	FUNCTION_143	IF_4	IF_6	IF_7	CALL_11
0x4005589	      0x498b442408	                mov rax, qword [r12 + 8]	      7567	eval.c	FUNCTION_143	IF_4	IF_6	IF_7	ELSE_1
0x400558e	        0x49894508	                mov qword [r13 + 8], rax	      7567	eval.c	FUNCTION_143	IF_4	IF_6	IF_7	ELSE_1
0x4005592	    0x49c744240800	                  mov qword [r12 + 8], 0	      7568	eval.c	FUNCTION_143	IF_4	IF_6	IF_7	ELSE_1
0x400559b	      0xe98f010000	                           jmp 0x400572f	      7568	eval.c	FUNCTION_143	IF_4	IF_6	IF_7	ELSE_1
0x40055a0	          0x83f801	                              cmp eax, 1	      7572	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9
0x40055a3	            0x756d	                           jne 0x4005612	      7572	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9
0x40055a5	          0x4c89e7	                            mov rdi, r12	      7574	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	CALL_12
0x40055a8	      0xe800000000	                          call 0x40055ad	      7574	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	CALL_12
0x40055ad	          0x4889c3	                            mov rbx, rax	      7574	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	CALL_12
0x40055b0	        0x49894508	                mov qword [r13 + 8], rax	      7574	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	CALL_12
0x40055b4	        0x488b2c24	                    mov rbp, qword [rsp]	      7575	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	IF_10	CALL_13
0x40055b8	      0xbe00000000	                              mov esi, 0	      7575	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	IF_10	CALL_13
0x40055bd	          0x4889ef	                            mov rdi, rbp	      7575	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	IF_10	CALL_13
0x40055c0	      0xe800000000	                          call 0x40055c5	      7575	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	IF_10	CALL_13
0x40055c5	            0x85c0	                           test eax, eax	      7575	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	IF_10	CALL_13
0x40055c7	            0x7516	                           jne 0x40055df	      7575	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	IF_10	CALL_13
0x40055c9	        0x4883fb01	                              cmp rbx, 1	      7576	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	CALL_14
0x40055cd	            0x19ff	                            sbb edi, edi	      7576	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	CALL_14
0x40055cf	          0x83e710	                           and edi, 0x10	      7576	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	CALL_14
0x40055d2	          0x83c72f	                           add edi, 0x2f	      7576	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	CALL_14
0x40055d5	      0xe800000000	                          call 0x40055da	      7576	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	CALL_14
0x40055da	      0xe950010000	                           jmp 0x400572f	      7576	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	CALL_14
0x40055df	      0xbe00000000	                              mov esi, 0	      7578	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	ELSE_3	IF_11	CALL_15
0x40055e4	          0x4889ef	                            mov rdi, rbp	      7578	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	ELSE_3	IF_11	CALL_15
0x40055e7	      0xe800000000	                          call 0x40055ec	      7578	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	ELSE_3	IF_11	CALL_15
0x40055ec	            0x85c0	                           test eax, eax	      7578	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	ELSE_3	IF_11	CALL_15
0x40055ee	     0xf853b010000	                           jne 0x400572f	      7578	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	ELSE_3	IF_11	CALL_15
0x40055f4	          0x4885db	                           test rbx, rbx	      7580	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	ELSE_3	IF_11
0x40055f7	           0xf94c0	                                 sete al	      7580	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	ELSE_3	IF_11
0x40055fa	           0xfb6c0	                           movzx eax, al	      7580	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	ELSE_3	IF_11
0x40055fd	    0x890500000000	            mov dword [0x04005603], eax 	      7580	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	ELSE_3	IF_11
0x4005603	      0xbf23000000	                           mov edi, 0x23	      7581	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	ELSE_3	IF_11	CALL_16
0x4005608	      0xe800000000	                          call 0x400560d	      7581	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	ELSE_3	IF_11	CALL_16
0x400560d	      0xe91d010000	                           jmp 0x400572f	      7581	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	ELSE_3	IF_11	CALL_16
0x4005612	        0x413b0424	                    cmp eax, dword [r12]	      7586	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_4	IF_12
0x4005616	            0x740a	                            je 0x4005622	      7586	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_4	IF_12
0x4005618	      0xbf00000000	                              mov edi, 0	      7587	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_4	IF_12
0x400561d	      0xe800000000	                          call 0x4005622	      7587	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_4	IF_12
0x4005622	          0x4c89ef	                            mov rdi, r13	      7590	eval.c	FUNCTION_143	IF_4	CALL_18
0x4005625	      0xe800000000	                          call 0x400562a	      7590	eval.c	FUNCTION_143	IF_4	CALL_18
0x400562a	      0xe995000000	                           jmp 0x40056c4	      7590	eval.c	FUNCTION_143	IF_4	CALL_18
0x400562f	    0x4881fd000000	                              cmp rbp, 0	      7595	eval.c	FUNCTION_143	ELSE_5	IF_13
0x4005636	            0x7524	                           jne 0x400565c	      7595	eval.c	FUNCTION_143	ELSE_5	IF_13
0x4005638	      0xba05000000	                              mov edx, 5	      7597	eval.c	FUNCTION_143	ELSE_5	IF_13	CALL_20
0x400563d	      0xbe00000000	                              mov esi, 0	      7597	eval.c	FUNCTION_143	ELSE_5	IF_13	CALL_20
0x4005642	      0xbf00000000	                              mov edi, 0	      7597	eval.c	FUNCTION_143	ELSE_5	IF_13	CALL_20
0x4005647	      0xe800000000	                          call 0x400564c	      7597	eval.c	FUNCTION_143	ELSE_5	IF_13	CALL_20
0x400564c	          0x4889de	                            mov rsi, rbx	      7597	eval.c	FUNCTION_143	ELSE_5	IF_13	CALL_20
0x400564f	          0x4889c7	                            mov rdi, rax	      7597	eval.c	FUNCTION_143	ELSE_5	IF_13	CALL_20
0x4005652	      0xe800000000	                          call 0x4005657	      7597	eval.c	FUNCTION_143	ELSE_5	IF_13	CALL_20
0x4005657	      0xe9d3000000	                           jmp 0x400572f	      7598	eval.c	FUNCTION_143	ELSE_5	IF_13
0x400565c	        0x488b3c24	                    mov rdi, qword [rsp]	      7602	eval.c	FUNCTION_143	ELSE_5	IF_14	CALL_21
0x4005660	      0xe800000000	                          call 0x4005665	      7602	eval.c	FUNCTION_143	ELSE_5	IF_14	CALL_21
0x4005665	            0x85c0	                           test eax, eax	      7602	eval.c	FUNCTION_143	ELSE_5	IF_14	CALL_21
0x4005667	     0xf84c2000000	                            je 0x400572f	      7602	eval.c	FUNCTION_143	ELSE_5	IF_14	CALL_21
0x400566d	        0x488b3c24	                    mov rdi, qword [rsp]	      7606	eval.c	FUNCTION_143	ELSE_5	CALL_23
0x4005671	      0xb800000000	                              mov eax, 0	      7606	eval.c	FUNCTION_143	ELSE_5	CALL_23
0x4005676	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      7606	eval.c	FUNCTION_143	ELSE_5	CALL_23
0x400567d	            0xf2ae	              repne scasb al, byte [rdi]	      7606	eval.c	FUNCTION_143	ELSE_5	CALL_23
0x400567f	          0x48f7d1	                                 not rcx	      7606	eval.c	FUNCTION_143	ELSE_5	CALL_23
0x4005682	          0x8d7917	                   lea edi, [rcx + 0x17]	      7605	eval.c	FUNCTION_143	ELSE_5	CALL_22
0x4005685	      0xe800000000	                          call 0x400568a	      7605	eval.c	FUNCTION_143	ELSE_5	CALL_22
0x400568a	          0x4989c5	                            mov r13, rax	      7605	eval.c	FUNCTION_143	ELSE_5	CALL_22
0x400568d	          0x4885c0	                           test rax, rax	      7607	eval.c	FUNCTION_143	ELSE_5	IF_15
0x4005690	     0xf8499000000	                            je 0x400572f	      7607	eval.c	FUNCTION_143	ELSE_5	IF_15
0x4005696	        0x488d5811	                   lea rbx, [rax + 0x11]	      7609	eval.c	FUNCTION_143	ELSE_5	CALL_24
0x400569a	        0x488b3424	                    mov rsi, qword [rsp]	       110	string3.h	FUNCTION_197	CALL_3
0x400569e	          0x4889df	                            mov rdi, rbx	       110	string3.h	FUNCTION_197	CALL_3
0x40056a1	      0xe800000000	                          call 0x40056a6	       110	string3.h	FUNCTION_197	CALL_3
0x40056a6	          0x4889de	                            mov rsi, rbx	      7610	eval.c	FUNCTION_143	ELSE_5	IF_16	CALL_26
0x40056a9	          0x4889ef	                            mov rdi, rbp	      7610	eval.c	FUNCTION_143	ELSE_5	IF_16	CALL_26
0x40056ac	      0xe800000000	                          call 0x40056b1	      7610	eval.c	FUNCTION_143	ELSE_5	IF_16	CALL_26
0x40056b1	            0x85c0	                           test eax, eax	      7610	eval.c	FUNCTION_143	ELSE_5	IF_16	CALL_26
0x40056b3	            0x750a	                           jne 0x40056bf	      7610	eval.c	FUNCTION_143	ELSE_5	IF_16	CALL_26
0x40056b5	          0x4c89ef	                            mov rdi, r13	      7612	eval.c	FUNCTION_143	ELSE_5	IF_16	CALL_27
0x40056b8	      0xe800000000	                          call 0x40056bd	      7612	eval.c	FUNCTION_143	ELSE_5	IF_16	CALL_27
0x40056bd	            0xeb70	                           jmp 0x400572f	      7613	eval.c	FUNCTION_143	ELSE_5	IF_16
0x40056bf	      0x41c6451010	            mov byte [r13 + 0x10], 0x10 	      7615	eval.c	FUNCTION_143	ELSE_5
0x40056c4	          0x4585f6	                         test r14d, r14d	      7618	eval.c	FUNCTION_143	IF_17
0x40056c7	            0x750e	                           jne 0x40056d7	      7618	eval.c	FUNCTION_143	IF_17
0x40056c9	        0x418b0424	                    mov eax, dword [r12]	      7618	eval.c	FUNCTION_143	IF_17
0x40056cd	          0x83f801	                              cmp eax, 1	      7618	eval.c	FUNCTION_143	IF_17
0x40056d0	            0x7405	                            je 0x40056d7	      7618	eval.c	FUNCTION_143	IF_17
0x40056d2	          0x83f807	                              cmp eax, 7	      7618	eval.c	FUNCTION_143	IF_17
0x40056d5	            0x750d	                           jne 0x40056e4	      7618	eval.c	FUNCTION_143	IF_17
0x40056d7	          0x4c89ee	                            mov rsi, r13	      7619	eval.c	FUNCTION_143	CALL_28
0x40056da	          0x4c89e7	                            mov rdi, r12	      7619	eval.c	FUNCTION_143	CALL_28
0x40056dd	      0xe800000000	                          call 0x40056e2	      7619	eval.c	FUNCTION_143	CALL_28
0x40056e2	            0xeb4b	                           jmp 0x400572f	      7619	eval.c	FUNCTION_143	CALL_28
0x40056e4	        0x498b0424	                    mov rax, qword [r12]	      7622	eval.c	FUNCTION_143	ELSE_6
0x40056e8	      0x498b542408	                mov rdx, qword [r12 + 8]	      7622	eval.c	FUNCTION_143	ELSE_6
0x40056ed	        0x49894500	                    mov qword [r13], rax	      7622	eval.c	FUNCTION_143	ELSE_6
0x40056f1	        0x49895508	                mov qword [r13 + 8], rdx	      7622	eval.c	FUNCTION_143	ELSE_6
0x40056f5	      0x41c6450400	                   mov byte [r13 + 4], 0	      7623	eval.c	FUNCTION_143	ELSE_6
0x40056fa	          0x4c89e7	                            mov rdi, r12	      7624	eval.c	FUNCTION_143	ELSE_6	CALL_29
0x40056fd	      0xe800000000	                          call 0x4005702	      7624	eval.c	FUNCTION_143	ELSE_6	CALL_29
0x4005702	            0xeb2b	                           jmp 0x400572f	      7624	eval.c	FUNCTION_143	ELSE_6	CALL_29
0x4005704	        0x418b0424	                    mov eax, dword [r12]	      7542	eval.c	FUNCTION_143	IF_3
0x4005708	          0x83e803	                              sub eax, 3	      7542	eval.c	FUNCTION_143	IF_3
0x400570b	          0x83f801	                              cmp eax, 1	      7542	eval.c	FUNCTION_143	IF_3
0x400570e	     0xf87fdfdffff	                            ja 0x4005511	      7542	eval.c	FUNCTION_143	IF_3
0x4005714	          0x4d85ed	                           test r13, r13	      7543	eval.c	FUNCTION_143	IF_3	CALL_6
0x4005717	        0x400f94c6	                                sete sil	      7543	eval.c	FUNCTION_143	IF_3	CALL_6
0x400571b	        0x400fb6f6	                          movzx esi, sil	      7543	eval.c	FUNCTION_143	IF_3	CALL_6
0x400571f	          0x4889df	                            mov rdi, rbx	      7543	eval.c	FUNCTION_143	IF_3	CALL_6
0x4005722	      0xe800000000	                          call 0x4005727	      7543	eval.c	FUNCTION_143	IF_3	CALL_6
0x4005727	            0x85c0	                           test eax, eax	      7543	eval.c	FUNCTION_143	IF_3	CALL_6
0x4005729	     0xf84e2fdffff	                            je 0x4005511	      7543	eval.c	FUNCTION_143	IF_3	CALL_6
0x400572f	      0x488b442408	                mov rax, qword [rsp + 8]	      7626	eval.c	FUNCTION_143
0x4005734	    0x644833042528	                xor rax, qword fs:[0x28]	      7626	eval.c	FUNCTION_143
0x400573d	            0x7405	                            je 0x4005744	      7626	eval.c	FUNCTION_143
0x400573f	      0xe800000000	                          call 0x4005744	      7626	eval.c	FUNCTION_143
0x4005744	        0x4883c410	                           add rsp, 0x10	      7626	eval.c	FUNCTION_143
0x4005748	              0x5b	                                 pop rbx	      7626	eval.c	FUNCTION_143
0x4005749	              0x5d	                                 pop rbp	      7626	eval.c	FUNCTION_143
0x400574a	            0x415c	                                 pop r12	      7626	eval.c	FUNCTION_143
0x400574c	            0x415d	                                 pop r13	      7626	eval.c	FUNCTION_143
0x400574e	            0x415e	                                 pop r14	      7626	eval.c	FUNCTION_143
0x4005750	              0xc3	                                     ret	      7626	eval.c	FUNCTION_143
