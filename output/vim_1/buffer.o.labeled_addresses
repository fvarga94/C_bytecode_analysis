ti_change	CALL,3:functions,0:SWITCH,0:FOR,0:ELSE,1:DO,0:WHILE,0:IF,2	48
0x4006c35	              0x55	                                push rbp	      3763	buffer.c	FUNCTION_62
0x4006c36	          0x4889e5	                            mov rbp, rsp	      3763	buffer.c	FUNCTION_62
0x4006c39	        0x4883ec10	                           sub rsp, 0x10	      3763	buffer.c	FUNCTION_62
0x4006c3d	        0x48897df8	                mov qword [rbp - 8], rdi	      3763	buffer.c	FUNCTION_62
0x4006c41	        0x488975f0	             mov qword [rbp - 0x10], rsi	      3763	buffer.c	FUNCTION_62
0x4006c45	      0x48837df800	                  cmp qword [rbp - 8], 0	      3764	buffer.c	FUNCTION_62	IF_1
0x4006c4a	           0xf94c2	                                 sete dl	      3764	buffer.c	FUNCTION_62	IF_1
0x4006c4d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3764	buffer.c	FUNCTION_62	IF_1
0x4006c51	          0x488b00	                    mov rax, qword [rax]	      3764	buffer.c	FUNCTION_62	IF_1
0x4006c54	          0x4885c0	                           test rax, rax	      3764	buffer.c	FUNCTION_62	IF_1
0x4006c57	           0xf94c0	                                 sete al	      3764	buffer.c	FUNCTION_62	IF_1
0x4006c5a	            0x31d0	                            xor eax, edx	      3764	buffer.c	FUNCTION_62	IF_1
0x4006c5c	            0x84c0	                             test al, al	      3764	buffer.c	FUNCTION_62	IF_1
0x4006c5e	            0x752d	                           jne 0x4006c8d	      3764	buffer.c	FUNCTION_62	IF_1
0x4006c60	      0x48837df800	                  cmp qword [rbp - 8], 0	      3765	buffer.c	FUNCTION_62	IF_1	CALL_1
0x4006c65	            0x7466	                            je 0x4006ccd	      3765	buffer.c	FUNCTION_62	IF_1	CALL_1
0x4006c67	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3765	buffer.c	FUNCTION_62	IF_1	CALL_1
0x4006c6b	          0x488b00	                    mov rax, qword [rax]	      3765	buffer.c	FUNCTION_62	IF_1	CALL_1
0x4006c6e	          0x4885c0	                           test rax, rax	      3765	buffer.c	FUNCTION_62	IF_1	CALL_1
0x4006c71	            0x745a	                            je 0x4006ccd	      3765	buffer.c	FUNCTION_62	IF_1	CALL_1
0x4006c73	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3765	buffer.c	FUNCTION_62	IF_1	CALL_1
0x4006c77	          0x488b10	                    mov rdx, qword [rax]	      3765	buffer.c	FUNCTION_62	IF_1	CALL_1
0x4006c7a	        0x488b45f8	                mov rax, qword [rbp - 8]	      3765	buffer.c	FUNCTION_62	IF_1	CALL_1
0x4006c7e	          0x4889d6	                            mov rsi, rdx	      3765	buffer.c	FUNCTION_62	IF_1	CALL_1
0x4006c81	          0x4889c7	                            mov rdi, rax	      3765	buffer.c	FUNCTION_62	IF_1	CALL_1
0x4006c84	      0xe800000000	                          call 0x4006c89	      3765	buffer.c	FUNCTION_62	IF_1	CALL_1
0x4006c89	            0x85c0	                           test eax, eax	      3765	buffer.c	FUNCTION_62	IF_1	CALL_1
0x4006c8b	            0x7440	                            je 0x4006ccd	      3765	buffer.c	FUNCTION_62	IF_1	CALL_1
0x4006c8d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3767	buffer.c	FUNCTION_62	IF_1	CALL_2
0x4006c91	          0x488b00	                    mov rax, qword [rax]	      3767	buffer.c	FUNCTION_62	IF_1	CALL_2
0x4006c94	          0x4889c7	                            mov rdi, rax	      3767	buffer.c	FUNCTION_62	IF_1	CALL_2
0x4006c97	      0xe800000000	                          call 0x4006c9c	      3767	buffer.c	FUNCTION_62	IF_1	CALL_2
0x4006c9c	      0x48837df800	                  cmp qword [rbp - 8], 0	      3768	buffer.c	FUNCTION_62	IF_1	IF_2
0x4006ca1	            0x750d	                           jne 0x4006cb0	      3768	buffer.c	FUNCTION_62	IF_1	IF_2
0x4006ca3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3769	buffer.c	FUNCTION_62	IF_1	IF_2
0x4006ca7	    0x48c700000000	                      mov qword [rax], 0	      3769	buffer.c	FUNCTION_62	IF_1	IF_2
0x4006cae	            0xeb16	                           jmp 0x4006cc6	      3769	buffer.c	FUNCTION_62	IF_1	IF_2
0x4006cb0	        0x488b45f8	                mov rax, qword [rbp - 8]	      3771	buffer.c	FUNCTION_62	IF_1	CALL_3
0x4006cb4	          0x4889c7	                            mov rdi, rax	      3771	buffer.c	FUNCTION_62	IF_1	CALL_3
0x4006cb7	      0xe800000000	                          call 0x4006cbc	      3771	buffer.c	FUNCTION_62	IF_1	CALL_3
0x4006cbc	          0x4889c2	                            mov rdx, rax	      3771	buffer.c	FUNCTION_62	IF_1	CALL_3
0x4006cbf	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3771	buffer.c	FUNCTION_62	IF_1	CALL_3
0x4006cc3	          0x488910	                    mov qword [rax], rdx	      3771	buffer.c	FUNCTION_62	IF_1	CALL_3
0x4006cc6	      0xb801000000	                              mov eax, 1	      3772	buffer.c	FUNCTION_62	IF_1
0x4006ccb	            0xeb05	                           jmp 0x4006cd2	      3772	buffer.c	FUNCTION_62	IF_1
0x4006ccd	      0xb800000000	                              mov eax, 0	      3774	buffer.c	FUNCTION_62
0x4006cd2	              0xc9	                                   leave	      3775	buffer.c	FUNCTION_62
0x4006cd3	              0xc3	                                     ret	      3775	buffer.c	FUNCTION_62
buflist_findname	CALL,2:functions,0:SWITCH,0:FOR,0:ELSE,0:DO,0:WHILE,0:IF,1	26
0x4003e58	              0x55	                                push rbp	      2390	buffer.c	FUNCTION_31
0x4003e59	          0x4889e5	                            mov rbp, rsp	      2390	buffer.c	FUNCTION_31
0x4003e5c	    0x4881ecb00000	                           sub rsp, 0xb0	      2390	buffer.c	FUNCTION_31
0x4003e63	    0x4889bd58ffff	             mov qword [rbp - 0xa8], rdi	      2390	buffer.c	FUNCTION_31
0x4003e6a	    0x64488b042528	                mov rax, qword fs:[0x28]	      2390	buffer.c	FUNCTION_31
0x4003e73	        0x488945f8	                mov qword [rbp - 8], rax	      2390	buffer.c	FUNCTION_31
0x4003e77	            0x31c0	                            xor eax, eax	      2390	buffer.c	FUNCTION_31
0x4003e79	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	      2394	buffer.c	FUNCTION_31	IF_1	CALL_1
0x4003e80	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2394	buffer.c	FUNCTION_31	IF_1	CALL_1
0x4003e87	          0x4889d6	                            mov rsi, rdx	      2394	buffer.c	FUNCTION_31	IF_1	CALL_1
0x4003e8a	          0x4889c7	                            mov rdi, rax	      2394	buffer.c	FUNCTION_31	IF_1	CALL_1
0x4003e8d	      0xe800000000	                          call 0x4003e92	      2394	buffer.c	FUNCTION_31	IF_1	CALL_1
0x4003e92	            0x85c0	                           test eax, eax	      2394	buffer.c	FUNCTION_31	IF_1	CALL_1
0x4003e94	            0x790b	                           jns 0x4003ea1	      2394	buffer.c	FUNCTION_31	IF_1	CALL_1
0x4003e96	    0x48c78560ffff	mov qword [rbp - 0xa0], 0xffffffffffffffff	      2395	buffer.c	FUNCTION_31	IF_1
0x4003ea1	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	      2396	buffer.c	FUNCTION_31	CALL_2
0x4003ea8	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2396	buffer.c	FUNCTION_31	CALL_2
0x4003eaf	          0x4889d6	                            mov rsi, rdx	      2396	buffer.c	FUNCTION_31	CALL_2
0x4003eb2	          0x4889c7	                            mov rdi, rax	      2396	buffer.c	FUNCTION_31	CALL_2
0x4003eb5	      0xe816000000	          call sym.buflist_findname_stat	      2396	buffer.c	FUNCTION_31	CALL_2
0x4003eba	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2397	buffer.c	FUNCTION_31
0x4003ebe	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2397	buffer.c	FUNCTION_31
0x4003ec7	            0x7405	                            je 0x4003ece	      2397	buffer.c	FUNCTION_31
0x4003ec9	      0xe800000000	                          call 0x4003ece	      2397	buffer.c	FUNCTION_31
0x4003ece	              0xc9	                                   leave	      2397	buffer.c	FUNCTION_31
0x4003ecf	              0xc3	                                     ret	      2397	buffer.c	FUNCTION_31
bt_nofile	CALL,0:functions,0:SWITCH,0:FOR,0:ELSE,0:DO,0:WHILE,0:IF,0	31
0x400b6d7	              0x55	                                push rbp	      5627	buffer.c	FUNCTION_80
0x400b6d8	          0x4889e5	                            mov rbp, rsp	      5627	buffer.c	FUNCTION_80
0x400b6db	        0x48897df8	                mov qword [rbp - 8], rdi	      5627	buffer.c	FUNCTION_80
0x400b6df	      0x48837df800	                  cmp qword [rbp - 8], 0	      5628	buffer.c	FUNCTION_80
0x400b6e4	            0x7453	                            je 0x400b739	      5628	buffer.c	FUNCTION_80
0x400b6e6	        0x488b45f8	                mov rax, qword [rbp - 8]	      5628	buffer.c	FUNCTION_80
0x400b6ea	    0x488b80181400	          mov rax, qword [rax + 0x1418] 	      5628	buffer.c	FUNCTION_80
0x400b6f1	           0xfb600	                   movzx eax, byte [rax]	      5628	buffer.c	FUNCTION_80
0x400b6f4	            0x3c6e	                            cmp al, 0x6e	      5628	buffer.c	FUNCTION_80
0x400b6f6	            0x7516	                           jne 0x400b70e	      5628	buffer.c	FUNCTION_80
0x400b6f8	        0x488b45f8	                mov rax, qword [rbp - 8]	      5628	buffer.c	FUNCTION_80
0x400b6fc	    0x488b80181400	          mov rax, qword [rax + 0x1418] 	      5628	buffer.c	FUNCTION_80
0x400b703	        0x4883c002	                              add rax, 2	      5628	buffer.c	FUNCTION_80
0x400b707	           0xfb600	                   movzx eax, byte [rax]	      5628	buffer.c	FUNCTION_80
0x400b70a	            0x3c66	                            cmp al, 0x66	      5628	buffer.c	FUNCTION_80
0x400b70c	            0x7424	                            je 0x400b732	      5628	buffer.c	FUNCTION_80
0x400b70e	        0x488b45f8	                mov rax, qword [rbp - 8]	      5629	buffer.c	FUNCTION_80
0x400b712	    0x488b80181400	          mov rax, qword [rax + 0x1418] 	      5629	buffer.c	FUNCTION_80
0x400b719	           0xfb600	                   movzx eax, byte [rax]	      5629	buffer.c	FUNCTION_80
0x400b71c	            0x3c61	                            cmp al, 0x61	      5629	buffer.c	FUNCTION_80
0x400b71e	            0x7412	                            je 0x400b732	      5629	buffer.c	FUNCTION_80
0x400b720	        0x488b45f8	                mov rax, qword [rbp - 8]	      5630	buffer.c	FUNCTION_80
0x400b724	    0x488b80181400	          mov rax, qword [rax + 0x1418] 	      5630	buffer.c	FUNCTION_80
0x400b72b	           0xfb600	                   movzx eax, byte [rax]	      5630	buffer.c	FUNCTION_80
0x400b72e	            0x3c74	                            cmp al, 0x74	      5630	buffer.c	FUNCTION_80
0x400b730	            0x7507	                           jne 0x400b739	      5630	buffer.c	FUNCTION_80
0x400b732	      0xb801000000	                              mov eax, 1	      5628	buffer.c	FUNCTION_80
0x400b737	            0xeb05	                           jmp 0x400b73e	      5628	buffer.c	FUNCTION_80
0x400b739	      0xb800000000	                              mov eax, 0	      5628	buffer.c	FUNCTION_80
0x400b73e	              0x5d	                                 pop rbp	      5631	buffer.c	FUNCTION_80
0x400b73f	              0xc3	                                     ret	      5631	buffer.c	FUNCTION_80
bt_quickfix	CALL,0:functions,0:SWITCH,0:FOR,0:ELSE,0:DO,0:WHILE,0:IF,0	15
0x400b64e	              0x55	                                push rbp	      5599	buffer.c	FUNCTION_77
0x400b64f	          0x4889e5	                            mov rbp, rsp	      5599	buffer.c	FUNCTION_77
0x400b652	        0x48897df8	                mov qword [rbp - 8], rdi	      5599	buffer.c	FUNCTION_77
0x400b656	      0x48837df800	                  cmp qword [rbp - 8], 0	      5600	buffer.c	FUNCTION_77
0x400b65b	            0x7419	                            je 0x400b676	      5600	buffer.c	FUNCTION_77
0x400b65d	        0x488b45f8	                mov rax, qword [rbp - 8]	      5600	buffer.c	FUNCTION_77
0x400b661	    0x488b80181400	          mov rax, qword [rax + 0x1418] 	      5600	buffer.c	FUNCTION_77
0x400b668	           0xfb600	                   movzx eax, byte [rax]	      5600	buffer.c	FUNCTION_77
0x400b66b	            0x3c71	                            cmp al, 0x71	      5600	buffer.c	FUNCTION_77
0x400b66d	            0x7507	                           jne 0x400b676	      5600	buffer.c	FUNCTION_77
0x400b66f	      0xb801000000	                              mov eax, 1	      5600	buffer.c	FUNCTION_77
0x400b674	            0xeb05	                           jmp 0x400b67b	      5600	buffer.c	FUNCTION_77
0x400b676	      0xb800000000	                              mov eax, 0	      5600	buffer.c	FUNCTION_77
0x400b67b	              0x5d	                                 pop rbp	      5601	buffer.c	FUNCTION_77
0x400b67c	              0xc3	                                     ret	      5601	buffer.c	FUNCTION_77
read_viminfo_bufferlist	CALL,12:functions,0:SWITCH,0:FOR,0:ELSE,0:DO,0:WHILE,0:IF,4	96
0x400b2b6	              0x55	                                push rbp	      5493	buffer.c	FUNCTION_75
0x400b2b7	          0x4889e5	                            mov rbp, rsp	      5493	buffer.c	FUNCTION_75
0x400b2ba	        0x4883ec40	                           sub rsp, 0x40	      5493	buffer.c	FUNCTION_75
0x400b2be	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      5493	buffer.c	FUNCTION_75
0x400b2c2	          0x8975c4	             mov dword [rbp - 0x3c], esi	      5493	buffer.c	FUNCTION_75
0x400b2c5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5502	buffer.c	FUNCTION_75	CALL_1
0x400b2c9	      0xba00000000	                              mov edx, 0	      5502	buffer.c	FUNCTION_75	CALL_1
0x400b2ce	      0xbe01000000	                              mov esi, 1	      5502	buffer.c	FUNCTION_75	CALL_1
0x400b2d3	          0x4889c7	                            mov rdi, rax	      5502	buffer.c	FUNCTION_75	CALL_1
0x400b2d6	      0xe800000000	                          call 0x400b2db	      5502	buffer.c	FUNCTION_75	CALL_1
0x400b2db	        0x488945e0	             mov qword [rbp - 0x20], rax	      5502	buffer.c	FUNCTION_75	CALL_1
0x400b2df	      0x48837de000	               cmp qword [rbp - 0x20], 0	      5505	buffer.c	FUNCTION_75	IF_1
0x400b2e4	     0xf844b010000	                            je 0x400b435	      5505	buffer.c	FUNCTION_75	IF_1
0x400b2ea	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      5505	buffer.c	FUNCTION_75	IF_1
0x400b2ee	     0xf8541010000	                           jne 0x400b435	      5505	buffer.c	FUNCTION_75	IF_1
0x400b2f4	    0x488b05000000	            mov rax, qword [0x0400b2fb] 	      5505	buffer.c	FUNCTION_75	IF_1
0x400b2fb	    0x488b80800100	           mov rax, qword [rax + 0x180] 	      5505	buffer.c	FUNCTION_75	IF_1
0x400b302	            0x8b00	                    mov eax, dword [rax]	      5505	buffer.c	FUNCTION_75	IF_1
0x400b304	            0x85c0	                           test eax, eax	      5505	buffer.c	FUNCTION_75	IF_1
0x400b306	     0xf8529010000	                           jne 0x400b435	      5505	buffer.c	FUNCTION_75	IF_1
0x400b30c	      0xbf25000000	                           mov edi, 0x25	      5506	buffer.c	FUNCTION_75	IF_1	CALL_2
0x400b311	      0xe800000000	                          call 0x400b316	      5506	buffer.c	FUNCTION_75	IF_1	CALL_2
0x400b316	          0x4885c0	                           test rax, rax	      5506	buffer.c	FUNCTION_75	IF_1	CALL_2
0x400b319	     0xf8416010000	                            je 0x400b435	      5506	buffer.c	FUNCTION_75	IF_1	CALL_2
0x400b31f	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      5510	buffer.c	FUNCTION_75	IF_1
0x400b327	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      5511	buffer.c	FUNCTION_75	IF_1
0x400b32e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5512	buffer.c	FUNCTION_75	IF_1	CALL_3
0x400b332	      0xbe09000000	                              mov esi, 9	      5512	buffer.c	FUNCTION_75	IF_1	CALL_3
0x400b337	          0x4889c7	                            mov rdi, rax	      5512	buffer.c	FUNCTION_75	IF_1	CALL_3
0x400b33a	      0xe800000000	                          call 0x400b33f	      5512	buffer.c	FUNCTION_75	IF_1	CALL_3
0x400b33f	        0x488945e8	             mov qword [rbp - 0x18], rax	      5512	buffer.c	FUNCTION_75	IF_1	CALL_3
0x400b343	      0x48837de800	               cmp qword [rbp - 0x18], 0	      5513	buffer.c	FUNCTION_75	IF_1	IF_2
0x400b348	            0x7459	                            je 0x400b3a3	      5513	buffer.c	FUNCTION_75	IF_1	IF_2
0x400b34a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5515	buffer.c	FUNCTION_75	IF_1	IF_2
0x400b34e	        0x488d5001	                      lea rdx, [rax + 1]	      5515	buffer.c	FUNCTION_75	IF_1	IF_2
0x400b352	        0x488955e8	             mov qword [rbp - 0x18], rdx	      5515	buffer.c	FUNCTION_75	IF_1	IF_2
0x400b356	          0xc60000	                       mov byte [rax], 0	      5515	buffer.c	FUNCTION_75	IF_1	IF_2
0x400b359	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5516	buffer.c	FUNCTION_75	IF_1	IF_2	CALL_4
0x400b35d	          0x4889c7	                            mov rdi, rax	      5516	buffer.c	FUNCTION_75	IF_1	IF_2	CALL_4
0x400b360	      0xe800000000	                          call 0x400b365	      5516	buffer.c	FUNCTION_75	IF_1	IF_2	CALL_4
0x400b365	          0x8945d4	             mov dword [rbp - 0x2c], eax	      5516	buffer.c	FUNCTION_75	IF_1	IF_2	CALL_4
0x400b368	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5517	buffer.c	FUNCTION_75	IF_1	IF_2	CALL_5
0x400b36c	      0xbe09000000	                              mov esi, 9	      5517	buffer.c	FUNCTION_75	IF_1	IF_2	CALL_5
0x400b371	          0x4889c7	                            mov rdi, rax	      5517	buffer.c	FUNCTION_75	IF_1	IF_2	CALL_5
0x400b374	      0xe800000000	                          call 0x400b379	      5517	buffer.c	FUNCTION_75	IF_1	IF_2	CALL_5
0x400b379	        0x488945e8	             mov qword [rbp - 0x18], rax	      5517	buffer.c	FUNCTION_75	IF_1	IF_2	CALL_5
0x400b37d	      0x48837de800	               cmp qword [rbp - 0x18], 0	      5518	buffer.c	FUNCTION_75	IF_1	IF_2	IF_3
0x400b382	            0x741f	                            je 0x400b3a3	      5518	buffer.c	FUNCTION_75	IF_1	IF_2	IF_3
0x400b384	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5520	buffer.c	FUNCTION_75	IF_1	IF_2	IF_3
0x400b388	        0x488d5001	                      lea rdx, [rax + 1]	      5520	buffer.c	FUNCTION_75	IF_1	IF_2	IF_3
0x400b38c	        0x488955e8	             mov qword [rbp - 0x18], rdx	      5520	buffer.c	FUNCTION_75	IF_1	IF_2	IF_3
0x400b390	          0xc60000	                       mov byte [rax], 0	      5520	buffer.c	FUNCTION_75	IF_1	IF_2	IF_3
0x400b393	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5521	buffer.c	FUNCTION_75	IF_1	IF_2	IF_3	CALL_6
0x400b397	          0x4889c7	                            mov rdi, rax	      5521	buffer.c	FUNCTION_75	IF_1	IF_2	IF_3	CALL_6
0x400b39a	      0xe800000000	                          call 0x400b39f	      5521	buffer.c	FUNCTION_75	IF_1	IF_2	IF_3	CALL_6
0x400b39f	        0x488945d8	             mov qword [rbp - 0x28], rax	      5521	buffer.c	FUNCTION_75	IF_1	IF_2	IF_3	CALL_6
0x400b3a3	    0x488b0d000000	            mov rcx, qword [0x0400b3aa] 	      5527	buffer.c	FUNCTION_75	IF_1	CALL_7
0x400b3aa	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5527	buffer.c	FUNCTION_75	IF_1	CALL_7
0x400b3ae	      0xba00100000	                         mov edx, 0x1000	      5527	buffer.c	FUNCTION_75	IF_1	CALL_7
0x400b3b3	          0x4889ce	                            mov rsi, rcx	      5527	buffer.c	FUNCTION_75	IF_1	CALL_7
0x400b3b6	          0x4889c7	                            mov rdi, rax	      5527	buffer.c	FUNCTION_75	IF_1	CALL_7
0x400b3b9	      0xe800000000	                          call 0x400b3be	      5527	buffer.c	FUNCTION_75	IF_1	CALL_7
0x400b3be	    0x488b05000000	            mov rax, qword [0x0400b3c5] 	      5528	buffer.c	FUNCTION_75	IF_1	CALL_8
0x400b3c5	          0x4889c7	                            mov rdi, rax	      5528	buffer.c	FUNCTION_75	IF_1	CALL_8
0x400b3c8	      0xe800000000	                          call 0x400b3cd	      5528	buffer.c	FUNCTION_75	IF_1	CALL_8
0x400b3cd	        0x488945f0	             mov qword [rbp - 0x10], rax	      5528	buffer.c	FUNCTION_75	IF_1	CALL_8
0x400b3d1	    0x488b05000000	            mov rax, qword [0x0400b3d8] 	      5530	buffer.c	FUNCTION_75	IF_1	CALL_9
0x400b3d8	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      5530	buffer.c	FUNCTION_75	IF_1	CALL_9
0x400b3dc	      0xb902000000	                              mov ecx, 2	      5530	buffer.c	FUNCTION_75	IF_1	CALL_9
0x400b3e1	      0xba00000000	                              mov edx, 0	      5530	buffer.c	FUNCTION_75	IF_1	CALL_9
0x400b3e6	          0x4889c7	                            mov rdi, rax	      5530	buffer.c	FUNCTION_75	IF_1	CALL_9
0x400b3e9	      0xe800000000	                          call 0x400b3ee	      5530	buffer.c	FUNCTION_75	IF_1	CALL_9
0x400b3ee	        0x488945f8	                mov qword [rbp - 8], rax	      5530	buffer.c	FUNCTION_75	IF_1	CALL_9
0x400b3f2	      0x48837df800	                  cmp qword [rbp - 8], 0	      5531	buffer.c	FUNCTION_75	IF_1	IF_4
0x400b3f7	            0x743c	                            je 0x400b435	      5531	buffer.c	FUNCTION_75	IF_1	IF_4
0x400b3f9	        0x488b45f8	                mov rax, qword [rbp - 8]	      5533	buffer.c	FUNCTION_75	IF_1	IF_4
0x400b3fd	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      5533	buffer.c	FUNCTION_75	IF_1	IF_4
0x400b401	    0x488990280300	            mov qword [rax + 0x328], rdx	      5533	buffer.c	FUNCTION_75	IF_1	IF_4
0x400b408	        0x488b45f8	                mov rax, qword [rbp - 8]	      5534	buffer.c	FUNCTION_75	IF_1	IF_4
0x400b40c	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      5534	buffer.c	FUNCTION_75	IF_1	IF_4
0x400b40f	    0x899030030000	            mov dword [rax + 0x330], edx	      5534	buffer.c	FUNCTION_75	IF_1	IF_4
0x400b415	    0x488b35000000	            mov rsi, qword [0x0400b41c] 	      5535	buffer.c	FUNCTION_75	IF_1	IF_4	CALL_10
0x400b41c	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	      5535	buffer.c	FUNCTION_75	IF_1	IF_4	CALL_10
0x400b41f	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      5535	buffer.c	FUNCTION_75	IF_1	IF_4	CALL_10
0x400b423	        0x488b45f8	                mov rax, qword [rbp - 8]	      5535	buffer.c	FUNCTION_75	IF_1	IF_4	CALL_10
0x400b427	    0x41b800000000	                              mov r8d, 0	      5535	buffer.c	FUNCTION_75	IF_1	IF_4	CALL_10
0x400b42d	          0x4889c7	                            mov rdi, rax	      5535	buffer.c	FUNCTION_75	IF_1	IF_4	CALL_10
0x400b430	      0xe80a95ffff	                call sym.buflist_setfpos	      5535	buffer.c	FUNCTION_75	IF_1	IF_4	CALL_10
0x400b435	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5538	buffer.c	FUNCTION_75	CALL_11
0x400b439	          0x4889c7	                            mov rdi, rax	      5538	buffer.c	FUNCTION_75	CALL_11
0x400b43c	      0xe800000000	                          call 0x400b441	      5538	buffer.c	FUNCTION_75	CALL_11
0x400b441	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5540	buffer.c	FUNCTION_75	CALL_12
0x400b445	          0x4889c7	                            mov rdi, rax	      5540	buffer.c	FUNCTION_75	CALL_12
0x400b448	      0xe800000000	                          call 0x400b44d	      5540	buffer.c	FUNCTION_75	CALL_12
0x400b44d	              0xc9	                                   leave	      5541	buffer.c	FUNCTION_75
0x400b44e	              0xc3	                                     ret	      5541	buffer.c	FUNCTION_75
goto_buffer	CALL,6:functions,0:SWITCH,0:FOR,0:ELSE,1:DO,0:WHILE,0:IF,1	61
0x40016d0	              0x55	                                push rbp	       965	buffer.c	FUNCTION_15
0x40016d1	          0x4889e5	                            mov rbp, rsp	       965	buffer.c	FUNCTION_15
0x40016d4	        0x4883ec50	                           sub rsp, 0x50	       965	buffer.c	FUNCTION_15
0x40016d8	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       965	buffer.c	FUNCTION_15
0x40016dc	          0x8975c4	             mov dword [rbp - 0x3c], esi	       965	buffer.c	FUNCTION_15
0x40016df	          0x8955c0	             mov dword [rbp - 0x40], edx	       965	buffer.c	FUNCTION_15
0x40016e2	          0x894dbc	             mov dword [rbp - 0x44], ecx	       965	buffer.c	FUNCTION_15
0x40016e5	    0x64488b042528	                mov rax, qword fs:[0x28]	       965	buffer.c	FUNCTION_15
0x40016ee	        0x488945f8	                mov qword [rbp - 8], rax	       965	buffer.c	FUNCTION_15
0x40016f2	            0x31c0	                            xor eax, eax	       965	buffer.c	FUNCTION_15
0x40016f4	    0x488b15000000	            mov rdx, qword [0x040016fb] 	       969	buffer.c	FUNCTION_15	CALL_1
0x40016fb	        0x488d45d0	                   lea rax, [rbp - 0x30]	       969	buffer.c	FUNCTION_15	CALL_1
0x40016ff	          0x4889d6	                            mov rsi, rdx	       969	buffer.c	FUNCTION_15	CALL_1
0x4001702	          0x4889c7	                            mov rdi, rax	       969	buffer.c	FUNCTION_15	CALL_1
0x4001705	      0xe800000000	                          call 0x400170a	       969	buffer.c	FUNCTION_15	CALL_1
0x400170a	    0xc70500000000	               mov dword [0x04001714], 1	       971	buffer.c	FUNCTION_15
0x4001714	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       973	buffer.c	FUNCTION_15	CALL_2
0x4001718	          0x8b7834	            mov edi, dword [rax + 0x34] 	       973	buffer.c	FUNCTION_15	CALL_2
0x400171b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       973	buffer.c	FUNCTION_15	CALL_2
0x400171f	        0x488b4010	            mov rax, qword [rax + 0x10] 	       973	buffer.c	FUNCTION_15	CALL_2
0x4001723	           0xfb600	                   movzx eax, byte [rax]	       973	buffer.c	FUNCTION_15	CALL_2
0x4001726	            0x3c73	                            cmp al, 0x73	       973	buffer.c	FUNCTION_15	CALL_2
0x4001728	           0xf94c0	                                 sete al	       973	buffer.c	FUNCTION_15	CALL_2
0x400172b	           0xfb6c0	                           movzx eax, al	       973	buffer.c	FUNCTION_15	CALL_2
0x400172e	          0x8b4dbc	             mov ecx, dword [rbp - 0x44]	       973	buffer.c	FUNCTION_15	CALL_2
0x4001731	          0x8b55c0	             mov edx, dword [rbp - 0x40]	       973	buffer.c	FUNCTION_15	CALL_2
0x4001734	          0x8b75c4	             mov esi, dword [rbp - 0x3c]	       973	buffer.c	FUNCTION_15	CALL_2
0x4001737	          0x4189f8	                            mov r8d, edi	       973	buffer.c	FUNCTION_15	CALL_2
0x400173a	            0x89c7	                            mov edi, eax	       973	buffer.c	FUNCTION_15	CALL_2
0x400173c	      0xe800000000	                          call 0x4001741	       973	buffer.c	FUNCTION_15	CALL_2
0x4001741	    0x8b0500000000	            mov eax, dword [0x04001747] 	       976	buffer.c	FUNCTION_15	IF_1
0x4001747	          0x83f802	                              cmp eax, 2	       976	buffer.c	FUNCTION_15	IF_1
0x400174a	            0x7551	                           jne 0x400179d	       976	buffer.c	FUNCTION_15	IF_1
0x400174c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       976	buffer.c	FUNCTION_15	IF_1
0x4001750	        0x488b4010	            mov rax, qword [rax + 0x10] 	       976	buffer.c	FUNCTION_15	IF_1
0x4001754	           0xfb600	                   movzx eax, byte [rax]	       976	buffer.c	FUNCTION_15	IF_1
0x4001757	            0x3c73	                            cmp al, 0x73	       976	buffer.c	FUNCTION_15	IF_1
0x4001759	            0x7542	                           jne 0x400179d	       976	buffer.c	FUNCTION_15	IF_1
0x400175b	        0x488d45e0	                   lea rax, [rbp - 0x20]	       983	buffer.c	FUNCTION_15	IF_1	CALL_3
0x400175f	          0x4889c7	                            mov rdi, rax	       983	buffer.c	FUNCTION_15	IF_1	CALL_3
0x4001762	      0xe800000000	                          call 0x4001767	       983	buffer.c	FUNCTION_15	IF_1	CALL_3
0x4001767	    0x488b05000000	            mov rax, qword [0x0400176e] 	       987	buffer.c	FUNCTION_15	IF_1	CALL_4
0x400176e	      0xbe01000000	                              mov esi, 1	       987	buffer.c	FUNCTION_15	IF_1	CALL_4
0x4001773	          0x4889c7	                            mov rdi, rax	       987	buffer.c	FUNCTION_15	IF_1	CALL_4
0x4001776	      0xe800000000	                          call 0x400177b	       987	buffer.c	FUNCTION_15	IF_1	CALL_4
0x400177b	    0xc70500000000	               mov dword [0x04001785], 0	       988	buffer.c	FUNCTION_15	IF_1
0x4001785	    0xc70500000000	               mov dword [0x0400178f], 1	       989	buffer.c	FUNCTION_15	IF_1
0x400178f	        0x488d45e0	                   lea rax, [rbp - 0x20]	       994	buffer.c	FUNCTION_15	IF_1	CALL_5
0x4001793	          0x4889c7	                            mov rdi, rax	       994	buffer.c	FUNCTION_15	IF_1	CALL_5
0x4001796	      0xe800000000	                          call 0x400179b	       994	buffer.c	FUNCTION_15	IF_1	CALL_5
0x400179b	            0xeb0c	                           jmp 0x40017a9	       977	buffer.c	FUNCTION_15	IF_1
0x400179d	        0x488d45d0	                   lea rax, [rbp - 0x30]	       998	buffer.c	FUNCTION_15	CALL_6
0x40017a1	          0x4889c7	                            mov rdi, rax	       998	buffer.c	FUNCTION_15	CALL_6
0x40017a4	      0xe800000000	                          call 0x40017a9	       998	buffer.c	FUNCTION_15	CALL_6
0x40017a9	              0x90	                                     nop	      1000	buffer.c	FUNCTION_15
0x40017aa	        0x488b45f8	                mov rax, qword [rbp - 8]	      1000	buffer.c	FUNCTION_15
0x40017ae	    0x644833042528	                xor rax, qword fs:[0x28]	      1000	buffer.c	FUNCTION_15
0x40017b7	            0x7405	                            je 0x40017be	      1000	buffer.c	FUNCTION_15
0x40017b9	      0xe800000000	                          call 0x40017be	      1000	buffer.c	FUNCTION_15
0x40017be	              0xc9	                                   leave	      1000	buffer.c	FUNCTION_15
0x40017bf	              0xc3	                                     ret	      1000	buffer.c	FUNCTION_15
buf_setino	CALL,1:functions,0:SWITCH,0:FOR,0:ELSE,1:DO,0:WHILE,0:IF,1	37
0x4005b53	              0x55	                                push rbp	      3366	buffer.c	FUNCTION_57
0x4005b54	          0x4889e5	                            mov rbp, rsp	      3366	buffer.c	FUNCTION_57
0x4005b57	    0x4881ecb00000	                           sub rsp, 0xb0	      3366	buffer.c	FUNCTION_57
0x4005b5e	    0x4889bd58ffff	             mov qword [rbp - 0xa8], rdi	      3366	buffer.c	FUNCTION_57
0x4005b65	    0x64488b042528	                mov rax, qword fs:[0x28]	      3366	buffer.c	FUNCTION_57
0x4005b6e	        0x488945f8	                mov qword [rbp - 8], rax	      3366	buffer.c	FUNCTION_57
0x4005b72	            0x31c0	                            xor eax, eax	      3366	buffer.c	FUNCTION_57
0x4005b74	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3369	buffer.c	FUNCTION_57	IF_1	CALL_1
0x4005b7b	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      3369	buffer.c	FUNCTION_57	IF_1	CALL_1
0x4005b82	          0x4885c0	                           test rax, rax	      3369	buffer.c	FUNCTION_57	IF_1	CALL_1
0x4005b85	            0x7461	                            je 0x4005be8	      3369	buffer.c	FUNCTION_57	IF_1	CALL_1
0x4005b87	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3369	buffer.c	FUNCTION_57	IF_1	CALL_1
0x4005b8e	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      3369	buffer.c	FUNCTION_57	IF_1	CALL_1
0x4005b95	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	      3369	buffer.c	FUNCTION_57	IF_1	CALL_1
0x4005b9c	          0x4889d6	                            mov rsi, rdx	      3369	buffer.c	FUNCTION_57	IF_1	CALL_1
0x4005b9f	          0x4889c7	                            mov rdi, rax	      3369	buffer.c	FUNCTION_57	IF_1	CALL_1
0x4005ba2	      0xe800000000	                          call 0x4005ba7	      3369	buffer.c	FUNCTION_57	IF_1	CALL_1
0x4005ba7	            0x85c0	                           test eax, eax	      3369	buffer.c	FUNCTION_57	IF_1	CALL_1
0x4005ba9	            0x783d	                            js 0x4005be8	      3369	buffer.c	FUNCTION_57	IF_1	CALL_1
0x4005bab	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3371	buffer.c	FUNCTION_57	IF_1
0x4005bb2	    0xc780a0000000	               mov dword [rax + 0xa0], 1	      3371	buffer.c	FUNCTION_57	IF_1
0x4005bbc	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	      3372	buffer.c	FUNCTION_57	IF_1
0x4005bc3	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3372	buffer.c	FUNCTION_57	IF_1
0x4005bca	    0x488990a80000	             mov qword [rax + 0xa8], rdx	      3372	buffer.c	FUNCTION_57	IF_1
0x4005bd1	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	      3373	buffer.c	FUNCTION_57	IF_1
0x4005bd8	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3373	buffer.c	FUNCTION_57	IF_1
0x4005bdf	    0x488990b00000	             mov qword [rax + 0xb0], rdx	      3373	buffer.c	FUNCTION_57	IF_1
0x4005be6	            0xeb11	                           jmp 0x4005bf9	      3373	buffer.c	FUNCTION_57	IF_1
0x4005be8	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3376	buffer.c	FUNCTION_57	ELSE_1
0x4005bef	    0xc780a0000000	               mov dword [rax + 0xa0], 0	      3376	buffer.c	FUNCTION_57	ELSE_1
0x4005bf9	              0x90	                                     nop	      3377	buffer.c	FUNCTION_57	ELSE_1
0x4005bfa	        0x488b45f8	                mov rax, qword [rbp - 8]	      3377	buffer.c	FUNCTION_57	ELSE_1
0x4005bfe	    0x644833042528	                xor rax, qword fs:[0x28]	      3377	buffer.c	FUNCTION_57	ELSE_1
0x4005c07	            0x7405	                            je 0x4005c0e	      3377	buffer.c	FUNCTION_57	ELSE_1
0x4005c09	      0xe800000000	                          call 0x4005c0e	      3377	buffer.c	FUNCTION_57	ELSE_1
0x4005c0e	              0xc9	                                   leave	      3377	buffer.c	FUNCTION_57	ELSE_1
0x4005c0f	              0xc3	                                     ret	      3377	buffer.c	FUNCTION_57	ELSE_1
append_arg_number	CALL,3:functions,0:SWITCH,0:FOR,0:ELSE,0:DO,0:WHILE,0:IF,3	77
0x4009c46	              0x55	                                push rbp	      4721	buffer.c	FUNCTION_67
0x4009c47	          0x4889e5	                            mov rbp, rsp	      4721	buffer.c	FUNCTION_67
0x4009c4a	        0x4883ec30	                           sub rsp, 0x30	      4721	buffer.c	FUNCTION_67
0x4009c4e	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4721	buffer.c	FUNCTION_67
0x4009c52	        0x488975e0	             mov qword [rbp - 0x20], rsi	      4721	buffer.c	FUNCTION_67
0x4009c56	          0x8955dc	             mov dword [rbp - 0x24], edx	      4721	buffer.c	FUNCTION_67
0x4009c59	          0x894dd8	             mov dword [rbp - 0x28], ecx	      4721	buffer.c	FUNCTION_67
0x4009c5c	    0x488b05000000	            mov rax, qword [0x04009c63] 	      4724	buffer.c	FUNCTION_67	IF_1
0x4009c63	    0x488b80800100	           mov rax, qword [rax + 0x180] 	      4724	buffer.c	FUNCTION_67	IF_1
0x4009c6a	            0x8b00	                    mov eax, dword [rax]	      4724	buffer.c	FUNCTION_67	IF_1
0x4009c6c	          0x83f801	                              cmp eax, 1	      4724	buffer.c	FUNCTION_67	IF_1
0x4009c6f	            0x7f0a	                            jg 0x4009c7b	      4724	buffer.c	FUNCTION_67	IF_1
0x4009c71	      0xb800000000	                              mov eax, 0	      4725	buffer.c	FUNCTION_67	IF_1
0x4009c76	      0xe9e9000000	                           jmp 0x4009d64	      4725	buffer.c	FUNCTION_67	IF_1
0x4009c7b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4727	buffer.c	FUNCTION_67	CALL_1
0x4009c7f	          0x4889c7	                            mov rdi, rax	      4727	buffer.c	FUNCTION_67	CALL_1
0x4009c82	      0xe800000000	                          call 0x4009c87	      4727	buffer.c	FUNCTION_67	CALL_1
0x4009c87	          0x4889c2	                            mov rdx, rax	      4727	buffer.c	FUNCTION_67	CALL_1
0x4009c8a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4727	buffer.c	FUNCTION_67	CALL_1
0x4009c8e	          0x4801d0	                            add rax, rdx	      4727	buffer.c	FUNCTION_67	CALL_1
0x4009c91	        0x488945f8	                mov qword [rbp - 8], rax	      4727	buffer.c	FUNCTION_67	CALL_1
0x4009c95	        0x488b55f8	                mov rdx, qword [rbp - 8]	      4728	buffer.c	FUNCTION_67	IF_2
0x4009c99	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4728	buffer.c	FUNCTION_67	IF_2
0x4009c9d	          0x4829c2	                            sub rdx, rax	      4728	buffer.c	FUNCTION_67	IF_2
0x4009ca0	          0x4889d0	                            mov rax, rdx	      4728	buffer.c	FUNCTION_67	IF_2
0x4009ca3	        0x488d5023	                   lea rdx, [rax + 0x23]	      4728	buffer.c	FUNCTION_67	IF_2
0x4009ca7	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      4728	buffer.c	FUNCTION_67	IF_2
0x4009caa	            0x4898	                                    cdqe	      4728	buffer.c	FUNCTION_67	IF_2
0x4009cac	          0x4839c2	                            cmp rdx, rax	      4728	buffer.c	FUNCTION_67	IF_2
0x4009caf	            0x7c0a	                            jl 0x4009cbb	      4728	buffer.c	FUNCTION_67	IF_2
0x4009cb1	      0xb800000000	                              mov eax, 0	      4729	buffer.c	FUNCTION_67	IF_2
0x4009cb6	      0xe9a9000000	                           jmp 0x4009d64	      4729	buffer.c	FUNCTION_67	IF_2
0x4009cbb	        0x488b45f8	                mov rax, qword [rbp - 8]	      4730	buffer.c	FUNCTION_67
0x4009cbf	        0x488d5001	                      lea rdx, [rax + 1]	      4730	buffer.c	FUNCTION_67
0x4009cc3	        0x488955f8	                mov qword [rbp - 8], rdx	      4730	buffer.c	FUNCTION_67
0x4009cc7	          0xc60020	                    mov byte [rax], 0x20	      4730	buffer.c	FUNCTION_67
0x4009cca	        0x488b45f8	                mov rax, qword [rbp - 8]	      4731	buffer.c	FUNCTION_67
0x4009cce	        0x488d5001	                      lea rdx, [rax + 1]	      4731	buffer.c	FUNCTION_67
0x4009cd2	        0x488955f8	                mov qword [rbp - 8], rdx	      4731	buffer.c	FUNCTION_67
0x4009cd6	          0xc60028	                    mov byte [rax], 0x28	      4731	buffer.c	FUNCTION_67
0x4009cd9	        0x837dd800	               cmp dword [rbp - 0x28], 0	      4732	buffer.c	FUNCTION_67	IF_3
0x4009cdd	            0x7415	                            je 0x4009cf4	      4732	buffer.c	FUNCTION_67	IF_3
0x4009cdf	        0x488b45f8	                mov rax, qword [rbp - 8]	      4734	buffer.c	FUNCTION_67	IF_3	CALL_2
0x4009ce3	    0xc70066696c65	            mov dword [rax], 0x656c6966 	      4734	buffer.c	FUNCTION_67	IF_3	CALL_2
0x4009ce9	    0x66c740042000	                mov word [rax + 4], 0x20	      4734	buffer.c	FUNCTION_67	IF_3	CALL_2
0x4009cef	      0x488345f805	                  add qword [rbp - 8], 5	      4735	buffer.c	FUNCTION_67	IF_3
0x4009cf4	    0x488b05000000	            mov rax, qword [0x04009cfb] 	      4739	buffer.c	FUNCTION_67
0x4009cfb	    0x488b80800100	           mov rax, qword [rax + 0x180] 	      4739	buffer.c	FUNCTION_67
0x4009d02	            0x8b08	                    mov ecx, dword [rax]	      4737	buffer.c	FUNCTION_67	CALL_3
0x4009d04	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4739	buffer.c	FUNCTION_67
0x4009d08	    0x8b8088010000	           mov eax, dword [rax + 0x188] 	      4739	buffer.c	FUNCTION_67
0x4009d0e	          0x8d5001	                      lea edx, [rax + 1]	      4737	buffer.c	FUNCTION_67	CALL_3
0x4009d11	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4738	buffer.c	FUNCTION_67
0x4009d15	    0x8b808c010000	           mov eax, dword [rax + 0x18c] 	      4738	buffer.c	FUNCTION_67
0x4009d1b	            0x85c0	                           test eax, eax	      4737	buffer.c	FUNCTION_67	CALL_3
0x4009d1d	            0x7408	                            je 0x4009d27	      4737	buffer.c	FUNCTION_67	CALL_3
0x4009d1f	    0x41b900000000	                              mov r9d, 0	      4737	buffer.c	FUNCTION_67	CALL_3
0x4009d25	            0xeb06	                           jmp 0x4009d2d	      4737	buffer.c	FUNCTION_67	CALL_3
0x4009d27	    0x41b900000000	                              mov r9d, 0	      4737	buffer.c	FUNCTION_67	CALL_3
0x4009d2d	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      4737	buffer.c	FUNCTION_67	CALL_3
0x4009d30	            0x4898	                                    cdqe	      4737	buffer.c	FUNCTION_67	CALL_3
0x4009d32	        0x488b7df8	                mov rdi, qword [rbp - 8]	      4737	buffer.c	FUNCTION_67	CALL_3
0x4009d36	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      4737	buffer.c	FUNCTION_67	CALL_3
0x4009d3a	          0x4829f7	                            sub rdi, rsi	      4737	buffer.c	FUNCTION_67	CALL_3
0x4009d3d	          0x4889fe	                            mov rsi, rdi	      4737	buffer.c	FUNCTION_67	CALL_3
0x4009d40	          0x4829f0	                            sub rax, rsi	      4737	buffer.c	FUNCTION_67	CALL_3
0x4009d43	          0x4889c6	                            mov rsi, rax	      4737	buffer.c	FUNCTION_67	CALL_3
0x4009d46	        0x488b45f8	                mov rax, qword [rbp - 8]	      4737	buffer.c	FUNCTION_67	CALL_3
0x4009d4a	          0x4189c8	                            mov r8d, ecx	      4737	buffer.c	FUNCTION_67	CALL_3
0x4009d4d	            0x89d1	                            mov ecx, edx	      4737	buffer.c	FUNCTION_67	CALL_3
0x4009d4f	          0x4c89ca	                             mov rdx, r9	      4737	buffer.c	FUNCTION_67	CALL_3
0x4009d52	          0x4889c7	                            mov rdi, rax	      4737	buffer.c	FUNCTION_67	CALL_3
0x4009d55	      0xb800000000	                              mov eax, 0	      4737	buffer.c	FUNCTION_67	CALL_3
0x4009d5a	      0xe800000000	                          call 0x4009d5f	      4737	buffer.c	FUNCTION_67	CALL_3
0x4009d5f	      0xb801000000	                              mov eax, 1	      4740	buffer.c	FUNCTION_67
0x4009d64	              0xc9	                                   leave	      4741	buffer.c	FUNCTION_67
0x4009d65	              0xc3	                                     ret	      4741	buffer.c	FUNCTION_67
fix_fname	CALL,9:functions,0:SWITCH,0:FOR,0:ELSE,0:DO,0:WHILE,0:IF,3	10
0x4009d66	              0x55	                                push rbp	      4749	buffer.c	FUNCTION_68
0x4009d67	          0x4889e5	                            mov rbp, rsp	      4749	buffer.c	FUNCTION_68
0x4009d6a	        0x4883ec10	                           sub rsp, 0x10	      4749	buffer.c	FUNCTION_68
0x4009d6e	        0x48897df8	                mov qword [rbp - 8], rdi	      4749	buffer.c	FUNCTION_68
0x4009d72	        0x488b45f8	                mov rax, qword [rbp - 8]	      4759	buffer.c	FUNCTION_68	CALL_1
0x4009d76	      0xbe01000000	                              mov esi, 1	      4759	buffer.c	FUNCTION_68	CALL_1
0x4009d7b	          0x4889c7	                            mov rdi, rax	      4759	buffer.c	FUNCTION_68	CALL_1
0x4009d7e	      0xe800000000	                          call 0x4009d83	      4759	buffer.c	FUNCTION_68	CALL_1
0x4009d83	              0xc9	                                   leave	      4787	buffer.c	FUNCTION_68
0x4009d84	              0xc3	                                     ret	      4787	buffer.c	FUNCTION_68
buf_addsign	CALL,2:functions,0:SWITCH,0:FOR,1:ELSE,3:DO,0:WHILE,2:IF,4	97
0x400bbd3	              0x55	                                push rbp	      5836	buffer.c	ELSE_1	FUNCTION_89
0x400bbd4	          0x4889e5	                            mov rbp, rsp	      5836	buffer.c	ELSE_1	FUNCTION_89
0x400bbd7	        0x4883ec30	                           sub rsp, 0x30	      5836	buffer.c	ELSE_1	FUNCTION_89
0x400bbdb	        0x48897de8	             mov qword [rbp - 0x18], rdi	      5836	buffer.c	ELSE_1	FUNCTION_89
0x400bbdf	          0x8975e4	             mov dword [rbp - 0x1c], esi	      5836	buffer.c	ELSE_1	FUNCTION_89
0x400bbe2	        0x488955d8	             mov qword [rbp - 0x28], rdx	      5836	buffer.c	ELSE_1	FUNCTION_89
0x400bbe6	          0x894de0	             mov dword [rbp - 0x20], ecx	      5836	buffer.c	ELSE_1	FUNCTION_89
0x400bbe9	    0x48c745f80000	                  mov qword [rbp - 8], 0	      5840	buffer.c	ELSE_1	FUNCTION_89
0x400bbf1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5841	buffer.c	ELSE_1	FUNCTION_89	FOR_1
0x400bbf5	    0x488b80201c00	          mov rax, qword [rax + 0x1c20] 	      5841	buffer.c	ELSE_1	FUNCTION_89	FOR_1
0x400bbfc	        0x488945f0	             mov qword [rbp - 0x10], rax	      5841	buffer.c	ELSE_1	FUNCTION_89	FOR_1
0x400bc00	      0xe9bb000000	                           jmp 0x400bcc0	      5841	buffer.c	ELSE_1	FUNCTION_89	FOR_1
0x400bc05	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5843	buffer.c	ELSE_1	FUNCTION_89	FOR_1	IF_1
0x400bc09	        0x488b4008	                mov rax, qword [rax + 8]	      5843	buffer.c	ELSE_1	FUNCTION_89	FOR_1	IF_1
0x400bc0d	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      5843	buffer.c	ELSE_1	FUNCTION_89	FOR_1	IF_1
0x400bc11	            0x751a	                           jne 0x400bc2d	      5843	buffer.c	ELSE_1	FUNCTION_89	FOR_1	IF_1
0x400bc13	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5843	buffer.c	ELSE_1	FUNCTION_89	FOR_1	IF_1
0x400bc17	            0x8b00	                    mov eax, dword [rax]	      5843	buffer.c	ELSE_1	FUNCTION_89	FOR_1	IF_1
0x400bc19	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      5843	buffer.c	ELSE_1	FUNCTION_89	FOR_1	IF_1
0x400bc1c	            0x750f	                           jne 0x400bc2d	      5843	buffer.c	ELSE_1	FUNCTION_89	FOR_1	IF_1
0x400bc1e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5845	buffer.c	ELSE_1	FUNCTION_89	FOR_1	IF_1
0x400bc22	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      5845	buffer.c	ELSE_1	FUNCTION_89	FOR_1	IF_1
0x400bc25	          0x895010	             mov dword [rax + 0x10], edx	      5845	buffer.c	ELSE_1	FUNCTION_89	FOR_1	IF_1
0x400bc28	      0xe90b010000	                           jmp 0x400bd38	      5846	buffer.c	ELSE_1	FUNCTION_89	FOR_1	IF_1
0x400bc2d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5852	buffer.c	FUNCTION_89	FOR_1	IF_2
0x400bc31	        0x488b4008	                mov rax, qword [rax + 8]	      5852	buffer.c	FUNCTION_89	FOR_1	IF_2
0x400bc35	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      5848	buffer.c	FUNCTION_89	FOR_1	IF_2
0x400bc39	            0x7e71	                           jle 0x400bcac	      5848	buffer.c	FUNCTION_89	FOR_1	IF_2
0x400bc3b	            0xeb0c	                           jmp 0x400bc49	      5859	buffer.c	FUNCTION_89	FOR_1	IF_2	WHILE_1
0x400bc3d	        0x488b45f8	                mov rax, qword [rbp - 8]	      5860	buffer.c	FUNCTION_89	FOR_1	IF_2	WHILE_1
0x400bc41	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5860	buffer.c	FUNCTION_89	FOR_1	IF_2	WHILE_1
0x400bc45	        0x488945f8	                mov qword [rbp - 8], rax	      5860	buffer.c	FUNCTION_89	FOR_1	IF_2	WHILE_1
0x400bc49	      0x48837df800	                  cmp qword [rbp - 8], 0	      5859	buffer.c	FUNCTION_89	FOR_1	IF_2	WHILE_1
0x400bc4e	            0x740e	                            je 0x400bc5e	      5859	buffer.c	FUNCTION_89	FOR_1	IF_2	WHILE_1
0x400bc50	        0x488b45f8	                mov rax, qword [rbp - 8]	      5859	buffer.c	FUNCTION_89	FOR_1	IF_2	WHILE_1
0x400bc54	        0x488b4008	                mov rax, qword [rax + 8]	      5859	buffer.c	FUNCTION_89	FOR_1	IF_2	WHILE_1
0x400bc58	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      5859	buffer.c	FUNCTION_89	FOR_1	IF_2	WHILE_1
0x400bc5c	            0x74df	                            je 0x400bc3d	      5859	buffer.c	FUNCTION_89	FOR_1	IF_2	WHILE_1
0x400bc5e	      0x48837df800	                  cmp qword [rbp - 8], 0	      5861	buffer.c	FUNCTION_89	FOR_1	IF_2	IF_3
0x400bc63	            0x7511	                           jne 0x400bc76	      5861	buffer.c	FUNCTION_89	FOR_1	IF_2	IF_3
0x400bc65	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5862	buffer.c	FUNCTION_89	FOR_1	IF_2	IF_3
0x400bc69	    0x488b80201c00	          mov rax, qword [rax + 0x1c20] 	      5862	buffer.c	FUNCTION_89	FOR_1	IF_2	IF_3
0x400bc70	        0x488945f0	             mov qword [rbp - 0x10], rax	      5862	buffer.c	FUNCTION_89	FOR_1	IF_2	IF_3
0x400bc74	            0xeb0c	                           jmp 0x400bc82	      5862	buffer.c	FUNCTION_89	FOR_1	IF_2	IF_3
0x400bc76	        0x488b45f8	                mov rax, qword [rbp - 8]	      5864	buffer.c	FUNCTION_89	FOR_1	IF_2	ELSE_2
0x400bc7a	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5864	buffer.c	FUNCTION_89	FOR_1	IF_2	ELSE_2
0x400bc7e	        0x488945f0	             mov qword [rbp - 0x10], rax	      5864	buffer.c	FUNCTION_89	FOR_1	IF_2	ELSE_2
0x400bc82	        0x448b45e0	             mov r8d, dword [rbp - 0x20]	      5866	buffer.c	FUNCTION_89	FOR_1	IF_2	CALL_1
0x400bc86	        0x488b7dd8	             mov rdi, qword [rbp - 0x28]	      5866	buffer.c	FUNCTION_89	FOR_1	IF_2	CALL_1
0x400bc8a	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	      5866	buffer.c	FUNCTION_89	FOR_1	IF_2	CALL_1
0x400bc8d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      5866	buffer.c	FUNCTION_89	FOR_1	IF_2	CALL_1
0x400bc91	        0x488b75f8	                mov rsi, qword [rbp - 8]	      5866	buffer.c	FUNCTION_89	FOR_1	IF_2	CALL_1
0x400bc95	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5866	buffer.c	FUNCTION_89	FOR_1	IF_2	CALL_1
0x400bc99	          0x4589c1	                            mov r9d, r8d	      5866	buffer.c	FUNCTION_89	FOR_1	IF_2	CALL_1
0x400bc9c	          0x4989f8	                             mov r8, rdi	      5866	buffer.c	FUNCTION_89	FOR_1	IF_2	CALL_1
0x400bc9f	          0x4889c7	                            mov rdi, rax	      5866	buffer.c	FUNCTION_89	FOR_1	IF_2	CALL_1
0x400bca2	      0xe841feffff	                    call sym.insert_sign	      5866	buffer.c	FUNCTION_89	FOR_1	IF_2	CALL_1
0x400bca7	      0xe98c000000	                           jmp 0x400bd38	      5867	buffer.c	FUNCTION_89	FOR_1	IF_2
0x400bcac	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5869	buffer.c	FUNCTION_89	FOR_1	ELSE_1
0x400bcb0	        0x488945f8	                mov qword [rbp - 8], rax	      5869	buffer.c	FUNCTION_89	FOR_1	ELSE_1
0x400bcb4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5841	buffer.c	ELSE_1	FUNCTION_89	FOR_1
0x400bcb8	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5841	buffer.c	ELSE_1	FUNCTION_89	FOR_1
0x400bcbc	        0x488945f0	             mov qword [rbp - 0x10], rax	      5841	buffer.c	ELSE_1	FUNCTION_89	FOR_1
0x400bcc0	      0x48837df000	               cmp qword [rbp - 0x10], 0	      5841	buffer.c	ELSE_1	FUNCTION_89	FOR_1
0x400bcc5	     0xf853affffff	                           jne 0x400bc05	      5841	buffer.c	ELSE_1	FUNCTION_89	FOR_1
0x400bccb	            0xeb0c	                           jmp 0x400bcd9	      5873	buffer.c	FUNCTION_89	ELSE_1	WHILE_2
0x400bccd	        0x488b45f8	                mov rax, qword [rbp - 8]	      5874	buffer.c	FUNCTION_89	ELSE_1	WHILE_2
0x400bcd1	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5874	buffer.c	FUNCTION_89	ELSE_1	WHILE_2
0x400bcd5	        0x488945f8	                mov qword [rbp - 8], rax	      5874	buffer.c	FUNCTION_89	ELSE_1	WHILE_2
0x400bcd9	      0x48837df800	                  cmp qword [rbp - 8], 0	      5873	buffer.c	FUNCTION_89	ELSE_1	WHILE_2
0x400bcde	            0x740e	                            je 0x400bcee	      5873	buffer.c	FUNCTION_89	ELSE_1	WHILE_2
0x400bce0	        0x488b45f8	                mov rax, qword [rbp - 8]	      5873	buffer.c	FUNCTION_89	ELSE_1	WHILE_2
0x400bce4	        0x488b4008	                mov rax, qword [rax + 8]	      5873	buffer.c	FUNCTION_89	ELSE_1	WHILE_2
0x400bce8	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      5873	buffer.c	FUNCTION_89	ELSE_1	WHILE_2
0x400bcec	            0x74df	                            je 0x400bccd	      5873	buffer.c	FUNCTION_89	ELSE_1	WHILE_2
0x400bcee	      0x48837df800	                  cmp qword [rbp - 8], 0	      5875	buffer.c	FUNCTION_89	ELSE_1	IF_4
0x400bcf3	            0x7511	                           jne 0x400bd06	      5875	buffer.c	FUNCTION_89	ELSE_1	IF_4
0x400bcf5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5876	buffer.c	FUNCTION_89	ELSE_1	IF_4
0x400bcf9	    0x488b80201c00	          mov rax, qword [rax + 0x1c20] 	      5876	buffer.c	FUNCTION_89	ELSE_1	IF_4
0x400bd00	        0x488945f0	             mov qword [rbp - 0x10], rax	      5876	buffer.c	FUNCTION_89	ELSE_1	IF_4
0x400bd04	            0xeb0c	                           jmp 0x400bd12	      5876	buffer.c	FUNCTION_89	ELSE_1	IF_4
0x400bd06	        0x488b45f8	                mov rax, qword [rbp - 8]	      5878	buffer.c	FUNCTION_89	ELSE_1	ELSE_3
0x400bd0a	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5878	buffer.c	FUNCTION_89	ELSE_1	ELSE_3
0x400bd0e	        0x488945f0	             mov qword [rbp - 0x10], rax	      5878	buffer.c	FUNCTION_89	ELSE_1	ELSE_3
0x400bd12	        0x448b45e0	             mov r8d, dword [rbp - 0x20]	      5880	buffer.c	FUNCTION_89	ELSE_1	CALL_2
0x400bd16	        0x488b7dd8	             mov rdi, qword [rbp - 0x28]	      5880	buffer.c	FUNCTION_89	ELSE_1	CALL_2
0x400bd1a	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	      5880	buffer.c	FUNCTION_89	ELSE_1	CALL_2
0x400bd1d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      5880	buffer.c	FUNCTION_89	ELSE_1	CALL_2
0x400bd21	        0x488b75f8	                mov rsi, qword [rbp - 8]	      5880	buffer.c	FUNCTION_89	ELSE_1	CALL_2
0x400bd25	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5880	buffer.c	FUNCTION_89	ELSE_1	CALL_2
0x400bd29	          0x4589c1	                            mov r9d, r8d	      5880	buffer.c	FUNCTION_89	ELSE_1	CALL_2
0x400bd2c	          0x4989f8	                             mov r8, rdi	      5880	buffer.c	FUNCTION_89	ELSE_1	CALL_2
0x400bd2f	          0x4889c7	                            mov rdi, rax	      5880	buffer.c	FUNCTION_89	ELSE_1	CALL_2
0x400bd32	      0xe8b1fdffff	                    call sym.insert_sign	      5880	buffer.c	FUNCTION_89	ELSE_1	CALL_2
0x400bd37	              0x90	                                     nop	      5882	buffer.c	FUNCTION_89	ELSE_1
0x400bd38	              0xc9	                                   leave	      5883	buffer.c	FUNCTION_89	ELSE_1
0x400bd39	              0xc3	                                     ret	      5883	buffer.c	FUNCTION_89	ELSE_1
buf_change_sign_type	CALL,0:functions,0:SWITCH,0:FOR,1:ELSE,0:DO,0:WHILE,0:IF,1	27
0x400bd3a	              0x55	                                push rbp	      5894	buffer.c	FUNCTION_90
0x400bd3b	          0x4889e5	                            mov rbp, rsp	      5894	buffer.c	FUNCTION_90
0x400bd3e	        0x48897de8	             mov qword [rbp - 0x18], rdi	      5894	buffer.c	FUNCTION_90
0x400bd42	          0x8975e4	             mov dword [rbp - 0x1c], esi	      5894	buffer.c	FUNCTION_90
0x400bd45	          0x8955e0	             mov dword [rbp - 0x20], edx	      5894	buffer.c	FUNCTION_90
0x400bd48	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5897	buffer.c	FUNCTION_90	FOR_1
0x400bd4c	    0x488b80201c00	          mov rax, qword [rax + 0x1c20] 	      5897	buffer.c	FUNCTION_90	FOR_1
0x400bd53	        0x488945f8	                mov qword [rbp - 8], rax	      5897	buffer.c	FUNCTION_90	FOR_1
0x400bd57	            0xeb2b	                           jmp 0x400bd84	      5897	buffer.c	FUNCTION_90	FOR_1
0x400bd59	        0x488b45f8	                mov rax, qword [rbp - 8]	      5899	buffer.c	FUNCTION_90	FOR_1	IF_1
0x400bd5d	            0x8b00	                    mov eax, dword [rax]	      5899	buffer.c	FUNCTION_90	FOR_1	IF_1
0x400bd5f	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      5899	buffer.c	FUNCTION_90	FOR_1	IF_1
0x400bd62	            0x7514	                           jne 0x400bd78	      5899	buffer.c	FUNCTION_90	FOR_1	IF_1
0x400bd64	        0x488b45f8	                mov rax, qword [rbp - 8]	      5901	buffer.c	FUNCTION_90	FOR_1	IF_1
0x400bd68	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      5901	buffer.c	FUNCTION_90	FOR_1	IF_1
0x400bd6b	          0x895010	             mov dword [rax + 0x10], edx	      5901	buffer.c	FUNCTION_90	FOR_1	IF_1
0x400bd6e	        0x488b45f8	                mov rax, qword [rbp - 8]	      5902	buffer.c	FUNCTION_90	FOR_1	IF_1
0x400bd72	        0x488b4008	                mov rax, qword [rax + 8]	      5902	buffer.c	FUNCTION_90	FOR_1	IF_1
0x400bd76	            0xeb18	                           jmp 0x400bd90	      5902	buffer.c	FUNCTION_90	FOR_1	IF_1
0x400bd78	        0x488b45f8	                mov rax, qword [rbp - 8]	      5897	buffer.c	FUNCTION_90	FOR_1
0x400bd7c	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5897	buffer.c	FUNCTION_90	FOR_1
0x400bd80	        0x488945f8	                mov qword [rbp - 8], rax	      5897	buffer.c	FUNCTION_90	FOR_1
0x400bd84	      0x48837df800	                  cmp qword [rbp - 8], 0	      5897	buffer.c	FUNCTION_90	FOR_1
0x400bd89	            0x75ce	                           jne 0x400bd59	      5897	buffer.c	FUNCTION_90	FOR_1
0x400bd8b	      0xb800000000	                              mov eax, 0	      5906	buffer.c	FUNCTION_90
0x400bd90	              0x5d	                                 pop rbp	      5907	buffer.c	FUNCTION_90
0x400bd91	              0xc3	                                     ret	      5907	buffer.c	FUNCTION_90
ex_buffer_all	CALL,27:functions,0:SWITCH,0:FOR,4:ELSE,8:DO,0:WHILE,0:IF,20	346
0x400a7ce	              0x55	                                push rbp	      5121	buffer.c	FUNCTION_72
0x400a7cf	          0x4889e5	                            mov rbp, rsp	      5121	buffer.c	FUNCTION_72
0x400a7d2	            0x4154	                                push r12	      5121	buffer.c	FUNCTION_72
0x400a7d4	              0x53	                                push rbx	      5121	buffer.c	FUNCTION_72
0x400a7d5	        0x4883c480	             add rsp, 0xffffffffffffff80	      5121	buffer.c	FUNCTION_72
0x400a7d9	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	      5121	buffer.c	FUNCTION_72
0x400a7e0	    0x64488b042528	                mov rax, qword fs:[0x28]	      5121	buffer.c	FUNCTION_72
0x400a7e9	        0x488945e8	             mov qword [rbp - 0x18], rax	      5121	buffer.c	FUNCTION_72
0x400a7ed	            0x31c0	                            xor eax, eax	      5121	buffer.c	FUNCTION_72
0x400a7ef	    0xc74584010000	               mov dword [rbp - 0x7c], 1	      5124	buffer.c	FUNCTION_72
0x400a7f6	    0xc74588000000	               mov dword [rbp - 0x78], 0	      5126	buffer.c	FUNCTION_72
0x400a7fd	    0x8b0500000000	            mov eax, dword [0x0400a803] 	      5130	buffer.c	FUNCTION_72
0x400a803	          0x894594	             mov dword [rbp - 0x6c], eax	      5130	buffer.c	FUNCTION_72
0x400a806	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5133	buffer.c	FUNCTION_72	IF_1
0x400a80d	          0x8b4038	            mov eax, dword [rax + 0x38] 	      5133	buffer.c	FUNCTION_72	IF_1
0x400a810	            0x85c0	                           test eax, eax	      5133	buffer.c	FUNCTION_72	IF_1
0x400a812	            0x7509	                           jne 0x400a81d	      5133	buffer.c	FUNCTION_72	IF_1
0x400a814	    0xc7458c0f2700	          mov dword [rbp - 0x74], 0x270f	      5134	buffer.c	FUNCTION_72	IF_1
0x400a81b	            0xeb0e	                           jmp 0x400a82b	      5134	buffer.c	FUNCTION_72	IF_1
0x400a81d	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5136	buffer.c	FUNCTION_72	ELSE_1
0x400a824	        0x488b4048	            mov rax, qword [rax + 0x48] 	      5136	buffer.c	FUNCTION_72	ELSE_1
0x400a828	          0x89458c	             mov dword [rbp - 0x74], eax	      5136	buffer.c	FUNCTION_72	ELSE_1
0x400a82b	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5137	buffer.c	FUNCTION_72	IF_2
0x400a832	          0x8b4020	            mov eax, dword [rax + 0x20] 	      5137	buffer.c	FUNCTION_72	IF_2
0x400a835	      0x3de1010000	                          cmp eax, 0x1e1	      5137	buffer.c	FUNCTION_72	IF_2
0x400a83a	            0x7411	                            je 0x400a84d	      5137	buffer.c	FUNCTION_72	IF_2
0x400a83c	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5137	buffer.c	FUNCTION_72	IF_2
0x400a843	          0x8b4020	            mov eax, dword [rax + 0x20] 	      5137	buffer.c	FUNCTION_72	IF_2
0x400a846	      0x3dab010000	                          cmp eax, 0x1ab	      5137	buffer.c	FUNCTION_72	IF_2
0x400a84b	            0x7509	                           jne 0x400a856	      5137	buffer.c	FUNCTION_72	IF_2
0x400a84d	    0xc74590000000	               mov dword [rbp - 0x70], 0	      5138	buffer.c	FUNCTION_72	IF_2
0x400a854	            0xeb07	                           jmp 0x400a85d	      5138	buffer.c	FUNCTION_72	IF_2
0x400a856	    0xc74590010000	               mov dword [rbp - 0x70], 1	      5140	buffer.c	FUNCTION_72	ELSE_2
0x400a85d	      0xe800000000	                          call 0x400a862	      5142	buffer.c	FUNCTION_72	CALL_1
0x400a862	    0xc70500000000	               mov dword [0x0400a86c], 1	      5145	buffer.c	FUNCTION_72
0x400a86c	        0x837d9400	               cmp dword [rbp - 0x6c], 0	      5152	buffer.c	FUNCTION_72	IF_3
0x400a870	            0x7e19	                           jle 0x400a88b	      5152	buffer.c	FUNCTION_72	IF_3
0x400a872	    0x488b05000000	            mov rax, qword [0x0400a879] 	      5153	buffer.c	FUNCTION_72	CALL_2
0x400a879	      0xba01000000	                              mov edx, 1	      5153	buffer.c	FUNCTION_72	CALL_2
0x400a87e	      0xbe01000000	                              mov esi, 1	      5153	buffer.c	FUNCTION_72	CALL_2
0x400a883	          0x4889c7	                            mov rdi, rax	      5153	buffer.c	FUNCTION_72	CALL_2
0x400a886	      0xe800000000	                          call 0x400a88b	      5153	buffer.c	FUNCTION_72	CALL_2
0x400a88b	    0x488b05000000	            mov rax, qword [0x0400a892] 	      5156	buffer.c	FUNCTION_72	FOR_1
0x400a892	          0x488b00	                    mov rax, qword [rax]	      5156	buffer.c	FUNCTION_72	FOR_1
0x400a895	        0x488945b8	             mov qword [rbp - 0x48], rax	      5156	buffer.c	FUNCTION_72	FOR_1
0x400a899	    0x488b05000000	            mov rax, qword [0x0400a8a0] 	      5157	buffer.c	FUNCTION_72	FOR_1	FOR_2
0x400a8a0	        0x488945a8	             mov qword [rbp - 0x58], rax	      5157	buffer.c	FUNCTION_72	FOR_1	FOR_2
0x400a8a4	      0xe902010000	                           jmp 0x400a9ab	      5157	buffer.c	FUNCTION_72	FOR_1	FOR_2
0x400a8a9	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5159	buffer.c	FUNCTION_72	FOR_1	FOR_2
0x400a8ad	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5159	buffer.c	FUNCTION_72	FOR_1	FOR_2
0x400a8b1	        0x488945b0	             mov qword [rbp - 0x50], rax	      5159	buffer.c	FUNCTION_72	FOR_1	FOR_2
0x400a8b5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5160	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400a8b9	        0x488b4008	                mov rax, qword [rax + 8]	      5160	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400a8bd	          0x8b4078	            mov eax, dword [rax + 0x78] 	      5160	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400a8c0	          0x83f801	                              cmp eax, 1	      5160	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400a8c3	            0x7f7a	                            jg 0x400a93f	      5160	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400a8c5	    0x8b0500000000	            mov eax, dword [0x0400a8cb] 	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400a8cb	          0x83e002	                              and eax, 2	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400a8ce	            0x85c0	                           test eax, eax	      5160	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400a8d0	            0x7441	                            je 0x400a913	      5160	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400a8d2	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5162	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400a8d6	    0x8b90a0000000	            mov edx, dword [rax + 0xa0] 	      5162	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400a8dc	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5162	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400a8e0	    0x8b80a4000000	            mov eax, dword [rax + 0xa4] 	      5162	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400a8e6	             0x1d0	                            add eax, edx	      5162	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400a8e8	          0x4863d8	                         movsxd rbx, eax	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400a8eb	    0x488b15000000	            mov rdx, qword [0x0400a8f2] 	      5162	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400a8f2	    0x488b05000000	            mov rax, qword [0x0400a8f9] 	      5162	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400a8f9	          0x4829c2	                            sub rdx, rax	      5162	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400a8fc	          0x4989d4	                            mov r12, rdx	      5162	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400a8ff	      0xe800000000	                          call 0x400a904	      5163	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4	CALL_3
0x400a904	            0x4898	                                    cdqe	      5163	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4	CALL_3
0x400a906	          0x4929c4	                            sub r12, rax	      5163	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4	CALL_3
0x400a909	          0x4c89e0	                            mov rax, r12	      5163	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4	CALL_3
0x400a90c	          0x4839c3	                            cmp rbx, rax	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400a90f	            0x7c2e	                            jl 0x400a93f	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400a911	            0xeb19	                           jmp 0x400a92c	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400a913	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5164	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400a917	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      5164	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400a91d	          0x4863d0	                         movsxd rdx, eax	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400a920	    0x488b05000000	            mov rax, qword [0x0400a927] 	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400a927	          0x4839c2	                            cmp rdx, rax	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400a92a	            0x7513	                           jne 0x400a93f	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400a92c	        0x837d9400	               cmp dword [rbp - 0x6c], 0	      5165	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400a930	            0x7e6d	                           jle 0x400a99f	      5165	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400a932	    0x488b05000000	            mov rax, qword [0x0400a939] 	      5165	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400a939	        0x483945a8	            cmp qword [rbp - 0x58], rax 	      5165	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400a93d	            0x7460	                            je 0x400a99f	      5165	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400a93f	    0x488b15000000	            mov rdx, qword [0x0400a946] 	      5165	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400a946	    0x488b05000000	            mov rax, qword [0x0400a94d] 	      5165	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400a94d	          0x4839c2	                            cmp rdx, rax	      5165	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400a950	            0x744d	                            je 0x400a99f	      5165	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400a952	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5166	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400a956	          0x8b4028	            mov eax, dword [rax + 0x28] 	      5166	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400a959	            0x85c0	                           test eax, eax	      5166	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400a95b	            0x7542	                           jne 0x400a99f	      5166	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400a95d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5166	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400a961	        0x488b4008	                mov rax, qword [rax + 8]	      5166	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400a965	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	      5166	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400a96b	            0x85c0	                           test eax, eax	      5166	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400a96d	            0x7f30	                            jg 0x400a99f	      5166	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400a96f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5168	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4	CALL_4
0x400a973	      0xbe00000000	                              mov esi, 0	      5168	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4	CALL_4
0x400a978	          0x4889c7	                            mov rdi, rax	      5168	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4	CALL_4
0x400a97b	      0xe800000000	                          call 0x400a980	      5168	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4	CALL_4
0x400a980	    0x488b05000000	            mov rax, qword [0x0400a987] 	      5169	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400a987	        0x488945b0	             mov qword [rbp - 0x50], rax	      5169	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400a98b	    0x488b05000000	            mov rax, qword [0x0400a992] 	      5171	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400a992	        0x488945b8	             mov qword [rbp - 0x48], rax	      5171	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400a996	    0xc74588000000	               mov dword [rbp - 0x78], 0	      5172	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400a99d	            0xeb04	                           jmp 0x400a9a3	      5172	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400a99f	        0x83458801	               add dword [rbp - 0x78], 1	      5175	buffer.c	FUNCTION_72	FOR_1	FOR_2	ELSE_3
0x400a9a3	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5157	buffer.c	FUNCTION_72	FOR_1	FOR_2
0x400a9a7	        0x488945a8	             mov qword [rbp - 0x58], rax	      5157	buffer.c	FUNCTION_72	FOR_1	FOR_2
0x400a9ab	      0x48837da800	               cmp qword [rbp - 0x58], 0	      5157	buffer.c	FUNCTION_72	FOR_1	FOR_2
0x400a9b0	     0xf85f3feffff	                           jne 0x400a8a9	      5157	buffer.c	FUNCTION_72	FOR_1	FOR_2
0x400a9b6	        0x837d9400	               cmp dword [rbp - 0x6c], 0	      5179	buffer.c	FUNCTION_72	FOR_1	IF_5
0x400a9ba	            0x7422	                            je 0x400a9de	      5179	buffer.c	FUNCTION_72	FOR_1	IF_5
0x400a9bc	      0x48837db800	               cmp qword [rbp - 0x48], 0	      5179	buffer.c	FUNCTION_72	FOR_1	IF_5
0x400a9c1	            0x741b	                            je 0x400a9de	      5179	buffer.c	FUNCTION_72	FOR_1	IF_5
0x400a9c3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5181	buffer.c	FUNCTION_72	FOR_1	CALL_5
0x400a9c7	      0xba01000000	                              mov edx, 1	      5181	buffer.c	FUNCTION_72	FOR_1	CALL_5
0x400a9cc	      0xbe01000000	                              mov esi, 1	      5181	buffer.c	FUNCTION_72	FOR_1	CALL_5
0x400a9d1	          0x4889c7	                            mov rdi, rax	      5181	buffer.c	FUNCTION_72	FOR_1	CALL_5
0x400a9d4	      0xe800000000	                          call 0x400a9d9	      5181	buffer.c	FUNCTION_72	FOR_1	CALL_5
0x400a9d9	      0xe9adfeffff	                           jmp 0x400a88b	      5182	buffer.c	FUNCTION_72	FOR_1
0x400a9de	    0x8b0500000000	            mov eax, dword [0x0400a9e4] 	      5190	buffer.c	FUNCTION_72
0x400a9e4	          0x83c001	                              add eax, 1	      5190	buffer.c	FUNCTION_72
0x400a9e7	    0x890500000000	            mov dword [0x0400a9ed], eax 	      5190	buffer.c	FUNCTION_72
0x400a9ed	    0x488b05000000	            mov rax, qword [0x0400a9f4] 	      5191	buffer.c	FUNCTION_72	CALL_6
0x400a9f4	      0xbe00000000	                              mov esi, 0	      5191	buffer.c	FUNCTION_72	CALL_6
0x400a9f9	          0x4889c7	                            mov rdi, rax	      5191	buffer.c	FUNCTION_72	CALL_6
0x400a9fc	      0xe800000000	                          call 0x400aa01	      5191	buffer.c	FUNCTION_72	CALL_6
0x400aa01	    0x8b0500000000	            mov eax, dword [0x0400aa07] 	      5192	buffer.c	FUNCTION_72
0x400aa07	          0x83c001	                              add eax, 1	      5192	buffer.c	FUNCTION_72
0x400aa0a	    0x890500000000	            mov dword [0x0400aa10], eax 	      5192	buffer.c	FUNCTION_72
0x400aa10	    0x488b05000000	            mov rax, qword [0x0400aa17] 	      5193	buffer.c	FUNCTION_72	FOR_3
0x400aa17	        0x488945a0	             mov qword [rbp - 0x60], rax	      5193	buffer.c	FUNCTION_72	FOR_3
0x400aa1b	      0xe9f2010000	                           jmp 0x400ac12	      5193	buffer.c	FUNCTION_72	FOR_3
0x400aa20	        0x837d9000	               cmp dword [rbp - 0x70], 0	      5196	buffer.c	FUNCTION_72	FOR_3	IF_6
0x400aa24	            0x7511	                           jne 0x400aa37	      5196	buffer.c	FUNCTION_72	FOR_3	IF_6
0x400aa26	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      5196	buffer.c	FUNCTION_72	FOR_3	IF_6
0x400aa2a	        0x488b4008	                mov rax, qword [rax + 8]	      5196	buffer.c	FUNCTION_72	FOR_3	IF_6
0x400aa2e	          0x4885c0	                           test rax, rax	      5196	buffer.c	FUNCTION_72	FOR_3	IF_6
0x400aa31	     0xf84cb010000	                            je 0x400ac02	      5196	buffer.c	FUNCTION_72	FOR_3	IF_6
0x400aa37	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      5196	buffer.c	FUNCTION_72	FOR_3	IF_6
0x400aa3b	    0x8b8024140000	          mov eax, dword [rax + 0x1424] 	      5196	buffer.c	FUNCTION_72	FOR_3	IF_6
0x400aa41	            0x85c0	                           test eax, eax	      5196	buffer.c	FUNCTION_72	FOR_3	IF_6
0x400aa43	     0xf84b9010000	                            je 0x400ac02	      5196	buffer.c	FUNCTION_72	FOR_3	IF_6
0x400aa49	        0x837d9400	               cmp dword [rbp - 0x6c], 0	      5199	buffer.c	FUNCTION_72	FOR_3	IF_7
0x400aa4d	            0x7422	                            je 0x400aa71	      5199	buffer.c	FUNCTION_72	FOR_3	IF_7
0x400aa4f	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      5202	buffer.c	FUNCTION_72	FOR_3	IF_7	IF_8
0x400aa53	          0x8b4078	            mov eax, dword [rax + 0x78] 	      5202	buffer.c	FUNCTION_72	FOR_3	IF_7	IF_8
0x400aa56	            0x85c0	                           test eax, eax	      5202	buffer.c	FUNCTION_72	FOR_3	IF_7	IF_8
0x400aa58	            0x7e0d	                           jle 0x400aa67	      5202	buffer.c	FUNCTION_72	FOR_3	IF_7	IF_8
0x400aa5a	    0x488b05000000	            mov rax, qword [0x0400aa61] 	      5203	buffer.c	FUNCTION_72	FOR_3	IF_7	IF_8
0x400aa61	        0x488945a8	             mov qword [rbp - 0x58], rax	      5203	buffer.c	FUNCTION_72	FOR_3	IF_7	IF_8
0x400aa65	            0xeb58	                           jmp 0x400aabf	      5203	buffer.c	FUNCTION_72	FOR_3	IF_7	IF_8
0x400aa67	    0x48c745a80000	               mov qword [rbp - 0x58], 0	      5205	buffer.c	FUNCTION_72	FOR_3	IF_7	ELSE_4
0x400aa6f	            0xeb4e	                           jmp 0x400aabf	      5205	buffer.c	FUNCTION_72	FOR_3	IF_7	ELSE_4
0x400aa71	    0x488b05000000	            mov rax, qword [0x0400aa78] 	      5210	buffer.c	FUNCTION_72	FOR_3	ELSE_5	CALL_7
0x400aa78	        0x488945a8	             mov qword [rbp - 0x58], rax	      5210	buffer.c	FUNCTION_72	FOR_3	ELSE_5	CALL_7
0x400aa7c	            0xeb1a	                           jmp 0x400aa98	      5210	buffer.c	FUNCTION_72	FOR_3	ELSE_5	CALL_7
0x400aa7e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5211	buffer.c	FUNCTION_72	FOR_3	ELSE_5	IF_9
0x400aa82	        0x488b4008	                mov rax, qword [rax + 8]	      5211	buffer.c	FUNCTION_72	FOR_3	ELSE_5	IF_9
0x400aa86	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	      5211	buffer.c	FUNCTION_72	FOR_3	ELSE_5	IF_9
0x400aa8a	            0x7415	                            je 0x400aaa1	      5211	buffer.c	FUNCTION_72	FOR_3	ELSE_5	IF_9
0x400aa8c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5210	buffer.c	FUNCTION_72	FOR_3	ELSE_5	CALL_7
0x400aa90	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5210	buffer.c	FUNCTION_72	FOR_3	ELSE_5	CALL_7
0x400aa94	        0x488945a8	             mov qword [rbp - 0x58], rax	      5210	buffer.c	FUNCTION_72	FOR_3	ELSE_5	CALL_7
0x400aa98	      0x48837da800	               cmp qword [rbp - 0x58], 0	      5210	buffer.c	FUNCTION_72	FOR_3	ELSE_5	CALL_7
0x400aa9d	            0x75df	                           jne 0x400aa7e	      5210	buffer.c	FUNCTION_72	FOR_3	ELSE_5	CALL_7
0x400aa9f	            0xeb01	                           jmp 0x400aaa2	      5210	buffer.c	FUNCTION_72	FOR_3	ELSE_5	CALL_7
0x400aaa1	              0x90	                                     nop	      5212	buffer.c	FUNCTION_72	FOR_3	ELSE_5	IF_9
0x400aaa2	      0x48837da800	               cmp qword [rbp - 0x58], 0	      5214	buffer.c	FUNCTION_72	FOR_3	ELSE_5	IF_10
0x400aaa7	            0x7416	                            je 0x400aabf	      5214	buffer.c	FUNCTION_72	FOR_3	ELSE_5	IF_10
0x400aaa9	    0x488b15000000	            mov rdx, qword [0x0400aab0] 	      5215	buffer.c	FUNCTION_72	FOR_3	ELSE_5	CALL_8
0x400aab0	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5215	buffer.c	FUNCTION_72	FOR_3	ELSE_5	CALL_8
0x400aab4	          0x4889d6	                            mov rsi, rdx	      5215	buffer.c	FUNCTION_72	FOR_3	ELSE_5	CALL_8
0x400aab7	          0x4889c7	                            mov rdi, rax	      5215	buffer.c	FUNCTION_72	FOR_3	ELSE_5	CALL_8
0x400aaba	      0xe800000000	                          call 0x400aabf	      5215	buffer.c	FUNCTION_72	FOR_3	ELSE_5	CALL_8
0x400aabf	      0x48837da800	               cmp qword [rbp - 0x58], 0	      5218	buffer.c	FUNCTION_72	FOR_3	IF_11
0x400aac4	     0xf85ee000000	                           jne 0x400abb8	      5218	buffer.c	FUNCTION_72	FOR_3	IF_11
0x400aaca	        0x837d8401	               cmp dword [rbp - 0x7c], 1	      5218	buffer.c	FUNCTION_72	FOR_3	IF_11
0x400aace	     0xf85e4000000	                           jne 0x400abb8	      5218	buffer.c	FUNCTION_72	FOR_3	IF_11
0x400aad4	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      5222	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_9
0x400aad8	        0x488d45c0	                   lea rax, [rbp - 0x40]	      5222	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_9
0x400aadc	          0x4889d6	                            mov rsi, rdx	      5222	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_9
0x400aadf	          0x4889c7	                            mov rdi, rax	      5222	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_9
0x400aae2	      0xe800000000	                          call 0x400aae7	      5222	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_9
0x400aae7	    0x8b0500000000	            mov eax, dword [0x0400aaed] 	      5225	buffer.c	FUNCTION_72	FOR_3	IF_11
0x400aaed	          0x894598	             mov dword [rbp - 0x68], eax	      5225	buffer.c	FUNCTION_72	FOR_3	IF_11
0x400aaf0	    0xc70500000000	               mov dword [0x0400aafa], 1	      5226	buffer.c	FUNCTION_72	FOR_3	IF_11
0x400aafa	      0xbe21000000	                           mov esi, 0x21	      5227	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_10
0x400aaff	      0xbf00000000	                              mov edi, 0	      5227	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_10
0x400ab04	      0xe800000000	                          call 0x400ab09	      5227	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_10
0x400ab09	          0x894584	             mov dword [rbp - 0x7c], eax	      5227	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_10
0x400ab0c	        0x83458801	               add dword [rbp - 0x78], 1	      5228	buffer.c	FUNCTION_72	FOR_3	IF_11
0x400ab10	          0x8b4598	             mov eax, dword [rbp - 0x68]	      5229	buffer.c	FUNCTION_72	FOR_3	IF_11
0x400ab13	    0x890500000000	            mov dword [0x0400ab19], eax 	      5229	buffer.c	FUNCTION_72	FOR_3	IF_11
0x400ab19	        0x837d8400	               cmp dword [rbp - 0x7c], 0	      5230	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_12
0x400ab1d	     0xf84e2000000	                            je 0x400ac05	      5230	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_12
0x400ab23	    0xc70500000000	               mov dword [0x0400ab2d], 1	      5235	buffer.c	FUNCTION_72	FOR_3	IF_11
0x400ab2d	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      5237	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_11
0x400ab31	      0xbe00000000	                              mov esi, 0	      5237	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_11
0x400ab36	          0x4889c7	                            mov rdi, rax	      5237	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_11
0x400ab39	      0xe800000000	                          call 0x400ab3e	      5237	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_11
0x400ab3e	        0x488d45c0	                   lea rax, [rbp - 0x40]	      5238	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_13	CALL_12
0x400ab42	          0x4889c7	                            mov rdi, rax	      5238	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_13	CALL_12
0x400ab45	      0xe800000000	                          call 0x400ab4a	      5238	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_13	CALL_12
0x400ab4a	            0x85c0	                           test eax, eax	      5238	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_13	CALL_12
0x400ab4c	            0x750f	                           jne 0x400ab5d	      5238	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_13	CALL_12
0x400ab4e	    0xc70500000000	               mov dword [0x0400ab58], 0	      5242	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_13
0x400ab58	      0xe9cb000000	                           jmp 0x400ac28	      5242	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_13
0x400ab5d	    0x8b0500000000	            mov eax, dword [0x0400ab63] 	      5247	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14
0x400ab63	          0x83f802	                              cmp eax, 2	      5247	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14
0x400ab66	            0x7546	                           jne 0x400abae	      5247	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14
0x400ab68	        0x488d45d0	                   lea rax, [rbp - 0x30]	      5254	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14	CALL_13
0x400ab6c	          0x4889c7	                            mov rdi, rax	      5254	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14	CALL_13
0x400ab6f	      0xe800000000	                          call 0x400ab74	      5254	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14	CALL_13
0x400ab74	    0x488b05000000	            mov rax, qword [0x0400ab7b] 	      5258	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14	CALL_14
0x400ab7b	      0xbe01000000	                              mov esi, 1	      5258	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14	CALL_14
0x400ab80	          0x4889c7	                            mov rdi, rax	      5258	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14	CALL_14
0x400ab83	      0xe800000000	                          call 0x400ab88	      5258	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14	CALL_14
0x400ab88	        0x836d8801	               sub dword [rbp - 0x78], 1	      5259	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14
0x400ab8c	    0xc70500000000	               mov dword [0x0400ab96], 0	      5260	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14
0x400ab96	    0xc70500000000	               mov dword [0x0400aba0], 1	      5261	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14
0x400aba0	        0x488d45d0	                   lea rax, [rbp - 0x30]	      5267	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14	CALL_15
0x400aba4	          0x4889c7	                            mov rdi, rax	      5267	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14	CALL_15
0x400aba7	      0xe800000000	                          call 0x400abac	      5267	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14	CALL_15
0x400abac	            0xeb0a	                           jmp 0x400abb8	      5267	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14	CALL_15
0x400abae	      0xbf00000000	                              mov edi, 0	      5271	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_16
0x400abb3	      0xe800000000	                          call 0x400abb8	      5271	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_16
0x400abb8	      0xe800000000	                          call 0x400abbd	      5275	buffer.c	FUNCTION_72	FOR_3	CALL_17
0x400abbd	    0x8b0500000000	            mov eax, dword [0x0400abc3] 	      5276	buffer.c	FUNCTION_72	FOR_3	IF_15
0x400abc3	            0x85c0	                           test eax, eax	      5276	buffer.c	FUNCTION_72	FOR_3	IF_15
0x400abc5	            0x7407	                            je 0x400abce	      5276	buffer.c	FUNCTION_72	FOR_3	IF_15
0x400abc7	      0xe800000000	                          call 0x400abcc	      5278	buffer.c	FUNCTION_72	FOR_3	IF_15	CALL_18
0x400abcc	            0xeb5a	                           jmp 0x400ac28	      5279	buffer.c	FUNCTION_72	FOR_3	IF_15
0x400abce	      0xe800000000	                          call 0x400abd3	      5283	buffer.c	FUNCTION_72	FOR_3	IF_16	CALL_19
0x400abd3	            0x85c0	                           test eax, eax	      5283	buffer.c	FUNCTION_72	FOR_3	IF_16	CALL_19
0x400abd5	            0x7550	                           jne 0x400ac27	      5283	buffer.c	FUNCTION_72	FOR_3	IF_16	CALL_19
0x400abd7	        0x837d9400	               cmp dword [rbp - 0x6c], 0	      5287	buffer.c	FUNCTION_72	FOR_3	IF_17	CALL_20
0x400abdb	            0x7e29	                           jle 0x400ac06	      5287	buffer.c	FUNCTION_72	FOR_3	IF_17	CALL_20
0x400abdd	      0xbf00000000	                              mov edi, 0	      5287	buffer.c	FUNCTION_72	FOR_3	IF_17	CALL_20
0x400abe2	      0xe800000000	                          call 0x400abe7	      5287	buffer.c	FUNCTION_72	FOR_3	IF_17	CALL_20
0x400abe7	          0x4863d0	                         movsxd rdx, eax	      5287	buffer.c	FUNCTION_72	FOR_3	IF_17	CALL_20
0x400abea	    0x488b05000000	            mov rax, qword [0x0400abf1] 	      5287	buffer.c	FUNCTION_72	FOR_3	IF_17	CALL_20
0x400abf1	          0x4839c2	                            cmp rdx, rax	      5287	buffer.c	FUNCTION_72	FOR_3	IF_17	CALL_20
0x400abf4	            0x7f10	                            jg 0x400ac06	      5287	buffer.c	FUNCTION_72	FOR_3	IF_17	CALL_20
0x400abf6	    0xc70500000000	         mov dword [0x0400ac00], 0x270f 	      5288	buffer.c	FUNCTION_72	FOR_3	IF_17
0x400ac00	            0xeb04	                           jmp 0x400ac06	      5288	buffer.c	FUNCTION_72	FOR_3	IF_17
0x400ac02	              0x90	                                     nop	      5197	buffer.c	FUNCTION_72	FOR_3	IF_6
0x400ac03	            0xeb01	                           jmp 0x400ac06	      5197	buffer.c	FUNCTION_72	FOR_3	IF_6
0x400ac05	              0x90	                                     nop	      5231	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_12
0x400ac06	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      5193	buffer.c	FUNCTION_72	FOR_3
0x400ac0a	        0x488b4068	            mov rax, qword [rax + 0x68] 	      5193	buffer.c	FUNCTION_72	FOR_3
0x400ac0e	        0x488945a0	             mov qword [rbp - 0x60], rax	      5193	buffer.c	FUNCTION_72	FOR_3
0x400ac12	      0x48837da000	               cmp qword [rbp - 0x60], 0	      5193	buffer.c	FUNCTION_72	FOR_3
0x400ac17	            0x740f	                            je 0x400ac28	      5193	buffer.c	FUNCTION_72	FOR_3
0x400ac19	          0x8b4588	             mov eax, dword [rbp - 0x78]	      5193	buffer.c	FUNCTION_72	FOR_3
0x400ac1c	          0x3b458c	             cmp eax, dword [rbp - 0x74]	      5193	buffer.c	FUNCTION_72	FOR_3
0x400ac1f	     0xf8cfbfdffff	                            jl 0x400aa20	      5193	buffer.c	FUNCTION_72	FOR_3
0x400ac25	            0xeb01	                           jmp 0x400ac28	      5193	buffer.c	FUNCTION_72	FOR_3
0x400ac27	              0x90	                                     nop	      5284	buffer.c	FUNCTION_72	FOR_3	IF_16
0x400ac28	    0x8b0500000000	            mov eax, dword [0x0400ac2e] 	      5290	buffer.c	FUNCTION_72
0x400ac2e	          0x83e801	                              sub eax, 1	      5290	buffer.c	FUNCTION_72
0x400ac31	    0x890500000000	            mov dword [0x0400ac37], eax 	      5290	buffer.c	FUNCTION_72
0x400ac37	    0x488b05000000	            mov rax, qword [0x0400ac3e] 	      5291	buffer.c	FUNCTION_72	CALL_21
0x400ac3e	      0xbe00000000	                              mov esi, 0	      5291	buffer.c	FUNCTION_72	CALL_21
0x400ac43	          0x4889c7	                            mov rdi, rax	      5291	buffer.c	FUNCTION_72	CALL_21
0x400ac46	      0xe800000000	                          call 0x400ac4b	      5291	buffer.c	FUNCTION_72	CALL_21
0x400ac4b	    0x8b0500000000	            mov eax, dword [0x0400ac51] 	      5292	buffer.c	FUNCTION_72
0x400ac51	          0x83e801	                              sub eax, 1	      5292	buffer.c	FUNCTION_72
0x400ac54	    0x890500000000	            mov dword [0x0400ac5a], eax 	      5292	buffer.c	FUNCTION_72
0x400ac5a	    0x488b05000000	            mov rax, qword [0x0400ac61] 	      5297	buffer.c	FUNCTION_72	FOR_4
0x400ac61	        0x488945a8	             mov qword [rbp - 0x58], rax	      5297	buffer.c	FUNCTION_72	FOR_4
0x400ac65	      0xe9be000000	                           jmp 0x400ad28	      5297	buffer.c	FUNCTION_72	FOR_4
0x400ac6a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5299	buffer.c	FUNCTION_72	FOR_4	CALL_23
0x400ac6e	        0x488b4008	                mov rax, qword [rax + 8]	      5299	buffer.c	FUNCTION_72	FOR_4	CALL_23
0x400ac72	          0x4889c7	                            mov rdi, rax	      5299	buffer.c	FUNCTION_72	FOR_4	CALL_23
0x400ac75	      0xe800000000	                          call 0x400ac7a	      5299	buffer.c	FUNCTION_72	FOR_4	CALL_23
0x400ac7a	            0x85c0	                           test eax, eax	      5300	buffer.c	FUNCTION_72	FOR_4	CALL_24
0x400ac7c	            0x752e	                           jne 0x400acac	      5300	buffer.c	FUNCTION_72	FOR_4	CALL_24
0x400ac7e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5299	buffer.c	FUNCTION_72	FOR_4	CALL_23
0x400ac82	        0x488b4008	                mov rax, qword [rax + 8]	      5299	buffer.c	FUNCTION_72	FOR_4	CALL_23
0x400ac86	          0x4889c7	                            mov rdi, rax	      5299	buffer.c	FUNCTION_72	FOR_4	CALL_23
0x400ac89	      0xe800000000	                          call 0x400ac8e	      5299	buffer.c	FUNCTION_72	FOR_4	CALL_23
0x400ac8e	            0x85c0	                           test eax, eax	      5299	buffer.c	FUNCTION_72	FOR_4	CALL_23
0x400ac90	            0x741a	                            je 0x400acac	      5299	buffer.c	FUNCTION_72	FOR_4	CALL_23
0x400ac92	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5300	buffer.c	FUNCTION_72	FOR_4	CALL_24
0x400ac96	        0x488b4008	                mov rax, qword [rax + 8]	      5300	buffer.c	FUNCTION_72	FOR_4	CALL_24
0x400ac9a	      0xbe00000000	                              mov esi, 0	      5300	buffer.c	FUNCTION_72	FOR_4	CALL_24
0x400ac9f	          0x4889c7	                            mov rdi, rax	      5300	buffer.c	FUNCTION_72	FOR_4	CALL_24
0x400aca2	      0xe800000000	                          call 0x400aca7	      5300	buffer.c	FUNCTION_72	FOR_4	CALL_24
0x400aca7	          0x83f801	                              cmp eax, 1	      5300	buffer.c	FUNCTION_72	FOR_4	CALL_24
0x400acaa	            0x7507	                           jne 0x400acb3	      5300	buffer.c	FUNCTION_72	FOR_4	CALL_24
0x400acac	      0xb801000000	                              mov eax, 1	      5300	buffer.c	FUNCTION_72	FOR_4	CALL_24
0x400acb1	            0xeb05	                           jmp 0x400acb8	      5300	buffer.c	FUNCTION_72	FOR_4	CALL_24
0x400acb3	      0xb800000000	                              mov eax, 0	      5300	buffer.c	FUNCTION_72	FOR_4	CALL_24
0x400acb8	          0x89459c	             mov dword [rbp - 0x64], eax	      5299	buffer.c	FUNCTION_72	FOR_4	CALL_23
0x400acbb	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5301	buffer.c	FUNCTION_72	FOR_4	IF_18	CALL_25
0x400acbf	          0x4889c7	                            mov rdi, rax	      5301	buffer.c	FUNCTION_72	FOR_4	IF_18	CALL_25
0x400acc2	      0xe800000000	                          call 0x400acc7	      5301	buffer.c	FUNCTION_72	FOR_4	IF_18	CALL_25
0x400acc7	            0x85c0	                           test eax, eax	      5301	buffer.c	FUNCTION_72	FOR_4	IF_18	CALL_25
0x400acc9	            0x750d	                           jne 0x400acd8	      5301	buffer.c	FUNCTION_72	FOR_4	IF_18	CALL_25
0x400accb	    0x488b05000000	            mov rax, qword [0x0400acd2] 	      5304	buffer.c	FUNCTION_72	FOR_4	IF_18
0x400acd2	        0x488945a8	             mov qword [rbp - 0x58], rax	      5304	buffer.c	FUNCTION_72	FOR_4	IF_18
0x400acd6	            0xeb50	                           jmp 0x400ad28	      5304	buffer.c	FUNCTION_72	FOR_4	IF_18
0x400acd8	        0x837d9c00	               cmp dword [rbp - 0x64], 0	      5306	buffer.c	FUNCTION_72	FOR_4	ELSE_7	IF_19
0x400acdc	            0x7437	                            je 0x400ad15	      5306	buffer.c	FUNCTION_72	FOR_4	ELSE_7	IF_19
0x400acde	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5308	buffer.c	FUNCTION_72	FOR_4	ELSE_7	IF_19	CALL_27
0x400ace2	        0x488b4008	                mov rax, qword [rax + 8]	      5308	buffer.c	FUNCTION_72	FOR_4	ELSE_7	IF_19	CALL_27
0x400ace6	          0x4889c7	                            mov rdi, rax	      5308	buffer.c	FUNCTION_72	FOR_4	ELSE_7	IF_19	CALL_27
0x400ace9	      0xe800000000	                          call 0x400acee	      5308	buffer.c	FUNCTION_72	FOR_4	ELSE_7	IF_19	CALL_27
0x400acee	            0x85c0	                           test eax, eax	      5308	buffer.c	FUNCTION_72	FOR_4	ELSE_7	IF_19	CALL_27
0x400acf0	           0xf94c0	                                 sete al	      5308	buffer.c	FUNCTION_72	FOR_4	ELSE_7	IF_19	CALL_27
0x400acf3	           0xfb6d0	                           movzx edx, al	      5308	buffer.c	FUNCTION_72	FOR_4	ELSE_7	IF_19	CALL_27
0x400acf6	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5308	buffer.c	FUNCTION_72	FOR_4	ELSE_7	IF_19	CALL_27
0x400acfa	            0x89d6	                            mov esi, edx	      5308	buffer.c	FUNCTION_72	FOR_4	ELSE_7	IF_19	CALL_27
0x400acfc	          0x4889c7	                            mov rdi, rax	      5308	buffer.c	FUNCTION_72	FOR_4	ELSE_7	IF_19	CALL_27
0x400acff	      0xe800000000	                          call 0x400ad04	      5308	buffer.c	FUNCTION_72	FOR_4	ELSE_7	IF_19	CALL_27
0x400ad04	        0x836d8801	               sub dword [rbp - 0x78], 1	      5309	buffer.c	FUNCTION_72	FOR_4	ELSE_7	IF_19
0x400ad08	    0x488b05000000	            mov rax, qword [0x0400ad0f] 	      5310	buffer.c	FUNCTION_72	FOR_4	ELSE_7	IF_19
0x400ad0f	        0x488945a8	             mov qword [rbp - 0x58], rax	      5310	buffer.c	FUNCTION_72	FOR_4	ELSE_7	IF_19
0x400ad13	            0xeb13	                           jmp 0x400ad28	      5310	buffer.c	FUNCTION_72	FOR_4	ELSE_7	IF_19
0x400ad15	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5314	buffer.c	FUNCTION_72	FOR_4	ELSE_8
0x400ad19	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5314	buffer.c	FUNCTION_72	FOR_4	ELSE_8
0x400ad1d	        0x488945a8	             mov qword [rbp - 0x58], rax	      5314	buffer.c	FUNCTION_72	FOR_4	ELSE_8
0x400ad21	      0x48837da800	               cmp qword [rbp - 0x58], 0	      5315	buffer.c	FUNCTION_72	FOR_4	ELSE_8	IF_20
0x400ad26	            0x740e	                            je 0x400ad36	      5315	buffer.c	FUNCTION_72	FOR_4	ELSE_8	IF_20
0x400ad28	          0x8b4588	             mov eax, dword [rbp - 0x78]	      5297	buffer.c	FUNCTION_72	FOR_4
0x400ad2b	          0x3b458c	             cmp eax, dword [rbp - 0x74]	      5297	buffer.c	FUNCTION_72	FOR_4
0x400ad2e	     0xf8f36ffffff	                            jg 0x400ac6a	      5297	buffer.c	FUNCTION_72	FOR_4
0x400ad34	            0xeb01	                           jmp 0x400ad37	      5319	buffer.c	FUNCTION_72
0x400ad36	              0x90	                                     nop	      5316	buffer.c	FUNCTION_72	FOR_4	ELSE_8	IF_20
0x400ad37	              0x90	                                     nop	      5319	buffer.c	FUNCTION_72
0x400ad38	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5319	buffer.c	FUNCTION_72
0x400ad3c	    0x644833042528	                xor rax, qword fs:[0x28]	      5319	buffer.c	FUNCTION_72
0x400ad45	            0x7405	                            je 0x400ad4c	      5319	buffer.c	FUNCTION_72
0x400ad47	      0xe800000000	                          call 0x400ad4c	      5319	buffer.c	FUNCTION_72
0x400ad4c	        0x4883ec80	             sub rsp, 0xffffffffffffff80	      5319	buffer.c	FUNCTION_72
0x400ad50	              0x5b	                                 pop rbx	      5319	buffer.c	FUNCTION_72
0x400ad51	            0x415c	                                 pop r12	      5319	buffer.c	FUNCTION_72
0x400ad53	              0x5d	                                 pop rbp	      5319	buffer.c	FUNCTION_72
0x400ad54	              0xc3	                                     ret	      5319	buffer.c	FUNCTION_72
do_autochdir	CALL,2:functions,0:SWITCH,0:FOR,0:ELSE,0:DO,0:WHILE,0:IF,1	24
0x4002c98	              0x55	                                push rbp	      1808	buffer.c	FUNCTION_22
0x4002c99	          0x4889e5	                            mov rbp, rsp	      1808	buffer.c	FUNCTION_22
0x4002c9c	    0x8b0500000000	            mov eax, dword [0x04002ca2] 	      1809	buffer.c	FUNCTION_22	IF_1
0x4002ca2	            0x85c0	                           test eax, eax	      1809	buffer.c	FUNCTION_22	IF_1
0x4002ca4	            0x740a	                            je 0x4002cb0	      1809	buffer.c	FUNCTION_22	IF_1
0x4002ca6	    0x8b0500000000	            mov eax, dword [0x04002cac] 	      1809	buffer.c	FUNCTION_22	IF_1
0x4002cac	            0x85c0	                           test eax, eax	      1809	buffer.c	FUNCTION_22	IF_1
0x4002cae	            0x743d	                            je 0x4002ced	      1809	buffer.c	FUNCTION_22	IF_1
0x4002cb0	    0x488b05000000	            mov rax, qword [0x04002cb7] 	      1810	buffer.c	FUNCTION_22	IF_1
0x4002cb7	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      1810	buffer.c	FUNCTION_22	IF_1
0x4002cbe	          0x4885c0	                           test rax, rax	      1810	buffer.c	FUNCTION_22	IF_1
0x4002cc1	            0x742a	                            je 0x4002ced	      1810	buffer.c	FUNCTION_22	IF_1
0x4002cc3	    0x488b05000000	            mov rax, qword [0x04002cca] 	      1811	buffer.c	FUNCTION_22	IF_1	CALL_1
0x4002cca	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      1811	buffer.c	FUNCTION_22	IF_1	CALL_1
0x4002cd1	      0xbe00000000	                              mov esi, 0	      1811	buffer.c	FUNCTION_22	IF_1	CALL_1
0x4002cd6	          0x4889c7	                            mov rdi, rax	      1811	buffer.c	FUNCTION_22	IF_1	CALL_1
0x4002cd9	      0xe800000000	                          call 0x4002cde	      1811	buffer.c	FUNCTION_22	IF_1	CALL_1
0x4002cde	          0x83f801	                              cmp eax, 1	      1811	buffer.c	FUNCTION_22	IF_1	CALL_1
0x4002ce1	            0x750a	                           jne 0x4002ced	      1811	buffer.c	FUNCTION_22	IF_1	CALL_1
0x4002ce3	      0xbf01000000	                              mov edi, 1	      1812	buffer.c	FUNCTION_22	CALL_2
0x4002ce8	      0xe800000000	                          call 0x4002ced	      1812	buffer.c	FUNCTION_22	CALL_2
0x4002ced	              0x90	                                     nop	      1813	buffer.c	FUNCTION_22
0x4002cee	              0x5d	                                 pop rbp	      1813	buffer.c	FUNCTION_22
0x4002cef	              0xc3	                                     ret	      1813	buffer.c	FUNCTION_22
buflist_nr2name	CALL,2:functions,0:SWITCH,0:FOR,0:ELSE,0:DO,0:WHILE,0:IF,1	31
0x40048d6	              0x55	                                push rbp	      2735	buffer.c	FUNCTION_38
0x40048d7	          0x4889e5	                            mov rbp, rsp	      2735	buffer.c	FUNCTION_38
0x40048da	        0x4883ec20	                           sub rsp, 0x20	      2735	buffer.c	FUNCTION_38
0x40048de	          0x897dec	             mov dword [rbp - 0x14], edi	      2735	buffer.c	FUNCTION_38
0x40048e1	          0x8975e8	             mov dword [rbp - 0x18], esi	      2735	buffer.c	FUNCTION_38
0x40048e4	          0x8955e4	             mov dword [rbp - 0x1c], edx	      2735	buffer.c	FUNCTION_38
0x40048e7	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2738	buffer.c	FUNCTION_38	CALL_1
0x40048ea	            0x89c7	                            mov edi, eax	      2738	buffer.c	FUNCTION_38	CALL_1
0x40048ec	      0xe800000000	                          call 0x40048f1	      2738	buffer.c	FUNCTION_38	CALL_1
0x40048f1	        0x488945f8	                mov qword [rbp - 8], rax	      2738	buffer.c	FUNCTION_38	CALL_1
0x40048f5	      0x48837df800	                  cmp qword [rbp - 8], 0	      2739	buffer.c	FUNCTION_38	IF_1
0x40048fa	            0x7507	                           jne 0x4004903	      2739	buffer.c	FUNCTION_38	IF_1
0x40048fc	      0xb800000000	                              mov eax, 0	      2740	buffer.c	FUNCTION_38	IF_1
0x4004901	            0xeb3a	                           jmp 0x400493d	      2740	buffer.c	FUNCTION_38	IF_1
0x4004903	        0x837de800	               cmp dword [rbp - 0x18], 0	      2741	buffer.c	FUNCTION_38	CALL_2
0x4004907	            0x740d	                            je 0x4004916	      2741	buffer.c	FUNCTION_38	CALL_2
0x4004909	        0x488b45f8	                mov rax, qword [rbp - 8]	      2741	buffer.c	FUNCTION_38	CALL_2
0x400490d	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      2741	buffer.c	FUNCTION_38	CALL_2
0x4004914	            0xeb0b	                           jmp 0x4004921	      2741	buffer.c	FUNCTION_38	CALL_2
0x4004916	        0x488b45f8	                mov rax, qword [rbp - 8]	      2741	buffer.c	FUNCTION_38	CALL_2
0x400491a	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      2741	buffer.c	FUNCTION_38	CALL_2
0x4004921	        0x837de400	               cmp dword [rbp - 0x1c], 0	      2741	buffer.c	FUNCTION_38	CALL_2
0x4004925	            0x7406	                            je 0x400492d	      2741	buffer.c	FUNCTION_38	CALL_2
0x4004927	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2741	buffer.c	FUNCTION_38	CALL_2
0x400492b	            0xeb05	                           jmp 0x4004932	      2741	buffer.c	FUNCTION_38	CALL_2
0x400492d	      0xba00000000	                              mov edx, 0	      2741	buffer.c	FUNCTION_38	CALL_2
0x4004932	          0x4889c6	                            mov rsi, rax	      2741	buffer.c	FUNCTION_38	CALL_2
0x4004935	          0x4889d7	                            mov rdi, rdx	      2741	buffer.c	FUNCTION_38	CALL_2
0x4004938	      0xe800000000	                          call 0x400493d	      2741	buffer.c	FUNCTION_38	CALL_2
0x400493d	              0xc9	                                   leave	      2743	buffer.c	FUNCTION_38
0x400493e	              0xc3	                                     ret	      2743	buffer.c	FUNCTION_38
buflist_findlnum	CALL,1:functions,0:SWITCH,0:FOR,0:ELSE,0:DO,0:WHILE,0:IF,0	10
0x4004d8b	              0x55	                                push rbp	      2943	buffer.c	ELSE_1	FUNCTION_44
0x4004d8c	          0x4889e5	                            mov rbp, rsp	      2943	buffer.c	ELSE_1	FUNCTION_44
0x4004d8f	        0x4883ec08	                              sub rsp, 8	      2943	buffer.c	ELSE_1	FUNCTION_44
0x4004d93	        0x48897df8	                mov qword [rbp - 8], rdi	      2943	buffer.c	ELSE_1	FUNCTION_44
0x4004d97	        0x488b45f8	                mov rax, qword [rbp - 8]	      2944	buffer.c	ELSE_1	FUNCTION_44	CALL_1
0x4004d9b	          0x4889c7	                            mov rdi, rax	      2944	buffer.c	ELSE_1	FUNCTION_44	CALL_1
0x4004d9e	      0xe800000000	                          call 0x4004da3	      2944	buffer.c	ELSE_1	FUNCTION_44	CALL_1
0x4004da3	          0x488b00	                    mov rax, qword [rax]	      2944	buffer.c	ELSE_1	FUNCTION_44	CALL_1
0x4004da6	              0xc9	                                   leave	      2945	buffer.c	ELSE_1	FUNCTION_44
0x4004da7	              0xc3	                                     ret	      2945	buffer.c	ELSE_1	FUNCTION_44
get_winopts	CALL,7:functions,0:SWITCH,0:FOR,0:ELSE,1:DO,0:WHILE,0:IF,2	62
0x4004c37	              0x55	                                push rbp	      2889	buffer.c	ELSE_1	FUNCTION_42
0x4004c38	          0x4889e5	                            mov rbp, rsp	      2889	buffer.c	ELSE_1	FUNCTION_42
0x4004c3b	        0x4883ec20	                           sub rsp, 0x20	      2889	buffer.c	ELSE_1	FUNCTION_42
0x4004c3f	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2889	buffer.c	ELSE_1	FUNCTION_42
0x4004c43	    0x488b05000000	            mov rax, qword [0x04004c4a] 	      2892	buffer.c	ELSE_1	FUNCTION_42	CALL_1
0x4004c4a	    0x4805b0010000	                          add rax, 0x1b0	      2892	buffer.c	ELSE_1	FUNCTION_42	CALL_1
0x4004c50	          0x4889c7	                            mov rdi, rax	      2892	buffer.c	ELSE_1	FUNCTION_42	CALL_1
0x4004c53	      0xe800000000	                          call 0x4004c58	      2892	buffer.c	ELSE_1	FUNCTION_42	CALL_1
0x4004c58	    0x488b05000000	            mov rax, qword [0x04004c5f] 	      2894	buffer.c	ELSE_1	FUNCTION_42	CALL_2
0x4004c5f	          0x4889c7	                            mov rdi, rax	      2894	buffer.c	ELSE_1	FUNCTION_42	CALL_2
0x4004c62	      0xe800000000	                          call 0x4004c67	      2894	buffer.c	ELSE_1	FUNCTION_42	CALL_2
0x4004c67	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2897	buffer.c	ELSE_1	FUNCTION_42	CALL_3
0x4004c6b	      0xbe01000000	                              mov esi, 1	      2897	buffer.c	ELSE_1	FUNCTION_42	CALL_3
0x4004c70	          0x4889c7	                            mov rdi, rax	      2897	buffer.c	ELSE_1	FUNCTION_42	CALL_3
0x4004c73	      0xe809ffffff	                   call sym.find_wininfo	      2897	buffer.c	ELSE_1	FUNCTION_42	CALL_3
0x4004c78	        0x488945f8	                mov qword [rbp - 8], rax	      2897	buffer.c	ELSE_1	FUNCTION_42	CALL_3
0x4004c7c	      0x48837df800	                  cmp qword [rbp - 8], 0	      2898	buffer.c	ELSE_1	FUNCTION_42	IF_1
0x4004c81	            0x7476	                            je 0x4004cf9	      2898	buffer.c	ELSE_1	FUNCTION_42	IF_1
0x4004c83	        0x488b45f8	                mov rax, qword [rbp - 8]	      2898	buffer.c	ELSE_1	FUNCTION_42	IF_1
0x4004c87	          0x8b4028	            mov eax, dword [rax + 0x28] 	      2898	buffer.c	ELSE_1	FUNCTION_42	IF_1
0x4004c8a	            0x85c0	                           test eax, eax	      2898	buffer.c	ELSE_1	FUNCTION_42	IF_1
0x4004c8c	            0x746b	                            je 0x4004cf9	      2898	buffer.c	ELSE_1	FUNCTION_42	IF_1
0x4004c8e	    0x488b05000000	            mov rax, qword [0x04004c95] 	      2900	buffer.c	ELSE_1	FUNCTION_42	IF_1	CALL_4
0x4004c95	    0x488d90b00100	                  lea rdx, [rax + 0x1b0]	      2900	buffer.c	ELSE_1	FUNCTION_42	IF_1	CALL_4
0x4004c9c	        0x488b45f8	                mov rax, qword [rbp - 8]	      2900	buffer.c	ELSE_1	FUNCTION_42	IF_1	CALL_4
0x4004ca0	        0x4883c030	                           add rax, 0x30	      2900	buffer.c	ELSE_1	FUNCTION_42	IF_1	CALL_4
0x4004ca4	          0x4889d6	                            mov rsi, rdx	      2900	buffer.c	ELSE_1	FUNCTION_42	IF_1	CALL_4
0x4004ca7	          0x4889c7	                            mov rdi, rax	      2900	buffer.c	ELSE_1	FUNCTION_42	IF_1	CALL_4
0x4004caa	      0xe800000000	                          call 0x4004caf	      2900	buffer.c	ELSE_1	FUNCTION_42	IF_1	CALL_4
0x4004caf	    0x488b05000000	            mov rax, qword [0x04004cb6] 	      2902	buffer.c	ELSE_1	FUNCTION_42	IF_1
0x4004cb6	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2902	buffer.c	ELSE_1	FUNCTION_42	IF_1
0x4004cba	    0x8b92e8010000	           mov edx, dword [rdx + 0x1e8] 	      2902	buffer.c	ELSE_1	FUNCTION_42	IF_1
0x4004cc0	    0x889020010000	              mov byte [rax + 0x120], dl	      2902	buffer.c	ELSE_1	FUNCTION_42	IF_1
0x4004cc6	    0x488b05000000	            mov rax, qword [0x04004ccd] 	      2903	buffer.c	ELSE_1	FUNCTION_42	IF_1
0x4004ccd	    0xc68021010000	               mov byte [rax + 0x121], 1	      2903	buffer.c	ELSE_1	FUNCTION_42	IF_1
0x4004cd4	    0x488b05000000	            mov rax, qword [0x04004cdb] 	      2904	buffer.c	ELSE_1	FUNCTION_42	IF_1	CALL_5
0x4004cdb	    0x488d90080100	                  lea rdx, [rax + 0x108]	      2904	buffer.c	ELSE_1	FUNCTION_42	IF_1	CALL_5
0x4004ce2	        0x488b45f8	                mov rax, qword [rbp - 8]	      2904	buffer.c	ELSE_1	FUNCTION_42	IF_1	CALL_5
0x4004ce6	    0x4805f0010000	                          add rax, 0x1f0	      2904	buffer.c	ELSE_1	FUNCTION_42	IF_1	CALL_5
0x4004cec	          0x4889d6	                            mov rsi, rdx	      2904	buffer.c	ELSE_1	FUNCTION_42	IF_1	CALL_5
0x4004cef	          0x4889c7	                            mov rdi, rax	      2904	buffer.c	ELSE_1	FUNCTION_42	IF_1	CALL_5
0x4004cf2	      0xe800000000	                          call 0x4004cf7	      2904	buffer.c	ELSE_1	FUNCTION_42	IF_1	CALL_5
0x4004cf7	            0xeb26	                           jmp 0x4004d1f	      2904	buffer.c	ELSE_1	FUNCTION_42	IF_1	CALL_5
0x4004cf9	    0x488b05000000	            mov rax, qword [0x04004d00] 	      2908	buffer.c	FUNCTION_42	ELSE_1	CALL_6
0x4004d00	    0x488d90b00100	                  lea rdx, [rax + 0x1b0]	      2908	buffer.c	FUNCTION_42	ELSE_1	CALL_6
0x4004d07	    0x488b05000000	            mov rax, qword [0x04004d0e] 	      2908	buffer.c	FUNCTION_42	ELSE_1	CALL_6
0x4004d0e	    0x480568030000	                          add rax, 0x368	      2908	buffer.c	FUNCTION_42	ELSE_1	CALL_6
0x4004d14	          0x4889d6	                            mov rsi, rdx	      2908	buffer.c	FUNCTION_42	ELSE_1	CALL_6
0x4004d17	          0x4889c7	                            mov rdi, rax	      2908	buffer.c	FUNCTION_42	ELSE_1	CALL_6
0x4004d1a	      0xe800000000	                          call 0x4004d1f	      2908	buffer.c	FUNCTION_42	ELSE_1	CALL_6
0x4004d1f	    0x488b05000000	            mov rax, qword [0x04004d26] 	      2912	buffer.c	FUNCTION_42	ELSE_1	IF_2
0x4004d26	          0x4885c0	                           test rax, rax	      2912	buffer.c	FUNCTION_42	ELSE_1	IF_2
0x4004d29	            0x7815	                            js 0x4004d40	      2912	buffer.c	FUNCTION_42	ELSE_1	IF_2
0x4004d2b	    0x488b05000000	            mov rax, qword [0x04004d32] 	      2913	buffer.c	FUNCTION_42	ELSE_1	IF_2
0x4004d32	    0x488b15000000	            mov rdx, qword [0x04004d39] 	      2913	buffer.c	FUNCTION_42	ELSE_1	IF_2
0x4004d39	    0x488990e80100	            mov qword [rax + 0x1e8], rdx	      2913	buffer.c	FUNCTION_42	ELSE_1	IF_2
0x4004d40	    0x488b05000000	            mov rax, qword [0x04004d47] 	      2916	buffer.c	FUNCTION_42	ELSE_1	CALL_7
0x4004d47	          0x4889c7	                            mov rdi, rax	      2916	buffer.c	FUNCTION_42	ELSE_1	CALL_7
0x4004d4a	      0xe800000000	                          call 0x4004d4f	      2916	buffer.c	FUNCTION_42	ELSE_1	CALL_7
0x4004d4f	              0x90	                                     nop	      2918	buffer.c	FUNCTION_42	ELSE_1
0x4004d50	              0xc9	                                   leave	      2918	buffer.c	FUNCTION_42	ELSE_1
0x4004d51	              0xc3	                                     ret	      2918	buffer.c	FUNCTION_42	ELSE_1
enter_buffer	CALL,19:functions,0:SWITCH,0:FOR,0:ELSE,2:DO,0:WHILE,0:IF,9	160
0x40029a2	              0x55	                                push rbp	      1701	buffer.c	FUNCTION_21
0x40029a3	          0x4889e5	                            mov rbp, rsp	      1701	buffer.c	FUNCTION_21
0x40029a6	              0x53	                                push rbx	      1701	buffer.c	FUNCTION_21
0x40029a7	        0x4883ec18	                           sub rsp, 0x18	      1701	buffer.c	FUNCTION_21
0x40029ab	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1701	buffer.c	FUNCTION_21
0x40029af	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1703	buffer.c	FUNCTION_21	CALL_1
0x40029b3	      0xbe05000000	                              mov esi, 5	      1703	buffer.c	FUNCTION_21	CALL_1
0x40029b8	          0x4889c7	                            mov rdi, rax	      1703	buffer.c	FUNCTION_21	CALL_1
0x40029bb	      0xe800000000	                          call 0x40029c0	      1703	buffer.c	FUNCTION_21	CALL_1
0x40029c0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1704	buffer.c	FUNCTION_21	IF_1
0x40029c4	    0x8b8058170000	          mov eax, dword [rax + 0x1758] 	      1704	buffer.c	FUNCTION_21	IF_1
0x40029ca	            0x85c0	                           test eax, eax	      1704	buffer.c	FUNCTION_21	IF_1
0x40029cc	            0x750e	                           jne 0x40029dc	      1704	buffer.c	FUNCTION_21	IF_1
0x40029ce	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1705	buffer.c	FUNCTION_21	CALL_2
0x40029d2	          0x4889c7	                            mov rdi, rax	      1705	buffer.c	FUNCTION_21	CALL_2
0x40029d5	      0xe800000000	                          call 0x40029da	      1705	buffer.c	FUNCTION_21	CALL_2
0x40029da	            0xeb0f	                           jmp 0x40029eb	      1705	buffer.c	FUNCTION_21	CALL_2
0x40029dc	    0x488b05000000	            mov rax, qword [0x040029e3] 	      1709	buffer.c	FUNCTION_21	CALL_3
0x40029e3	          0x4889c7	                            mov rdi, rax	      1709	buffer.c	FUNCTION_21	CALL_3
0x40029e6	      0xe800000000	                          call 0x40029eb	      1709	buffer.c	FUNCTION_21	CALL_3
0x40029eb	    0x488b05000000	            mov rax, qword [0x040029f2] 	      1710	buffer.c	FUNCTION_21	CALL_4
0x40029f2	          0x4889c7	                            mov rdi, rax	      1710	buffer.c	FUNCTION_21	CALL_4
0x40029f5	      0xe800000000	                          call 0x40029fa	      1710	buffer.c	FUNCTION_21	CALL_4
0x40029fa	    0x488b05000000	            mov rax, qword [0x04002a01] 	      1714	buffer.c	FUNCTION_21
0x4002a01	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1714	buffer.c	FUNCTION_21
0x4002a05	        0x48895008	                mov qword [rax + 8], rdx	      1714	buffer.c	FUNCTION_21
0x4002a09	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1715	buffer.c	FUNCTION_21
0x4002a0d	    0x488905000000	            mov qword [0x04002a14], rax 	      1715	buffer.c	FUNCTION_21
0x4002a14	    0x488b05000000	            mov rax, qword [0x04002a1b] 	      1716	buffer.c	FUNCTION_21
0x4002a1b	          0x8b5078	            mov edx, dword [rax + 0x78] 	      1716	buffer.c	FUNCTION_21
0x4002a1e	          0x83c201	                              add edx, 1	      1716	buffer.c	FUNCTION_21
0x4002a21	          0x895078	             mov dword [rax + 0x78], edx	      1716	buffer.c	FUNCTION_21
0x4002a24	    0x488b05000000	            mov rax, qword [0x04002a2b] 	      1719	buffer.c	FUNCTION_21	IF_2
0x4002a2b	    0x8b80c0010000	           mov eax, dword [rax + 0x1c0] 	      1719	buffer.c	FUNCTION_21	IF_2
0x4002a31	            0x85c0	                           test eax, eax	      1719	buffer.c	FUNCTION_21	IF_2
0x4002a33	            0x740f	                            je 0x4002a44	      1719	buffer.c	FUNCTION_21	IF_2
0x4002a35	    0x488b05000000	            mov rax, qword [0x04002a3c] 	      1720	buffer.c	FUNCTION_21	CALL_5
0x4002a3c	          0x4889c7	                            mov rdi, rax	      1720	buffer.c	FUNCTION_21	CALL_5
0x4002a3f	      0xe800000000	                          call 0x4002a44	      1720	buffer.c	FUNCTION_21	CALL_5
0x4002a44	    0x488b05000000	            mov rax, qword [0x04002a4b] 	      1724	buffer.c	FUNCTION_21
0x4002a4b	    0x488b15000000	            mov rdx, qword [0x04002a52] 	      1724	buffer.c	FUNCTION_21
0x4002a52	    0x4881c2681700	                         add rdx, 0x1768	      1724	buffer.c	FUNCTION_21
0x4002a59	        0x48895010	             mov qword [rax + 0x10], rdx	      1724	buffer.c	FUNCTION_21
0x4002a5d	    0x488b05000000	            mov rax, qword [0x04002a64] 	      1728	buffer.c	FUNCTION_21
0x4002a64	    0x48c740380100	               mov qword [rax + 0x38], 1	      1728	buffer.c	FUNCTION_21
0x4002a6c	    0x488b05000000	            mov rax, qword [0x04002a73] 	      1729	buffer.c	FUNCTION_21
0x4002a73	    0xc74040000000	               mov dword [rax + 0x40], 0	      1729	buffer.c	FUNCTION_21
0x4002a7a	    0x488b05000000	            mov rax, qword [0x04002a81] 	      1731	buffer.c	FUNCTION_21
0x4002a81	    0xc74044000000	               mov dword [rax + 0x44], 0	      1731	buffer.c	FUNCTION_21
0x4002a88	    0x488b05000000	            mov rax, qword [0x04002a8f] 	      1733	buffer.c	FUNCTION_21
0x4002a8f	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      1733	buffer.c	FUNCTION_21
0x4002a96	    0x488b05000000	            mov rax, qword [0x04002a9d] 	      1734	buffer.c	FUNCTION_21
0x4002a9d	    0xc68080000000	                mov byte [rax + 0x80], 0	      1734	buffer.c	FUNCTION_21
0x4002aa4	    0x488b05000000	            mov rax, qword [0x04002aab] 	      1737	buffer.c	FUNCTION_21
0x4002aab	    0xc780b4000000	               mov dword [rax + 0xb4], 0	      1737	buffer.c	FUNCTION_21
0x4002ab5	    0x488b05000000	            mov rax, qword [0x04002abc] 	      1740	buffer.c	FUNCTION_21	IF_3
0x4002abc	        0x488b4008	                mov rax, qword [rax + 8]	      1740	buffer.c	FUNCTION_21	IF_3
0x4002ac0	          0x4885c0	                           test rax, rax	      1740	buffer.c	FUNCTION_21	IF_3
0x4002ac3	            0x7538	                           jne 0x4002afd	      1740	buffer.c	FUNCTION_21	IF_3
0x4002ac5	    0x488b05000000	            mov rax, qword [0x04002acc] 	      1745	buffer.c	FUNCTION_21	IF_3	IF_4
0x4002acc	    0x488b80981400	          mov rax, qword [rax + 0x1498] 	      1745	buffer.c	FUNCTION_21	IF_3	IF_4
0x4002ad3	           0xfb600	                   movzx eax, byte [rax]	      1745	buffer.c	FUNCTION_21	IF_3	IF_4
0x4002ad6	            0x84c0	                             test al, al	      1745	buffer.c	FUNCTION_21	IF_3	IF_4
0x4002ad8	            0x750a	                           jne 0x4002ae4	      1745	buffer.c	FUNCTION_21	IF_3	IF_4
0x4002ada	    0xc70500000000	               mov dword [0x04002ae4], 0	      1746	buffer.c	FUNCTION_21	IF_3	IF_4
0x4002ae4	      0xba00000000	                              mov edx, 0	      1748	buffer.c	FUNCTION_21	IF_3	CALL_6
0x4002ae9	      0xbe00000000	                              mov esi, 0	      1748	buffer.c	FUNCTION_21	IF_3	CALL_6
0x4002aee	      0xbf00000000	                              mov edi, 0	      1748	buffer.c	FUNCTION_21	IF_3	CALL_6
0x4002af3	      0xe800000000	                          call 0x4002af8	      1748	buffer.c	FUNCTION_21	IF_3	CALL_6
0x4002af8	      0xe98e000000	                           jmp 0x4002b8b	      1748	buffer.c	FUNCTION_21	IF_3	CALL_6
0x4002afd	    0x8b0500000000	            mov eax, dword [0x04002b03] 	      1752	buffer.c	FUNCTION_21	ELSE_2	IF_5
0x4002b03	            0x85c0	                           test eax, eax	      1752	buffer.c	FUNCTION_21	ELSE_2	IF_5
0x4002b05	            0x750a	                           jne 0x4002b11	      1752	buffer.c	FUNCTION_21	ELSE_2	IF_5
0x4002b07	    0xc70500000000	               mov dword [0x04002b11], 1	      1753	buffer.c	FUNCTION_21	ELSE_2	IF_5
0x4002b11	    0x488b05000000	            mov rax, qword [0x04002b18] 	      1754	buffer.c	FUNCTION_21	ELSE_2	CALL_7
0x4002b18	      0xbe00000000	                              mov esi, 0	      1754	buffer.c	FUNCTION_21	ELSE_2	CALL_7
0x4002b1d	          0x4889c7	                            mov rdi, rax	      1754	buffer.c	FUNCTION_21	ELSE_2	CALL_7
0x4002b20	      0xe800000000	                          call 0x4002b25	      1754	buffer.c	FUNCTION_21	ELSE_2	CALL_7
0x4002b25	    0x488b05000000	            mov rax, qword [0x04002b2c] 	      1755	buffer.c	FUNCTION_21	ELSE_2
0x4002b2c	    0x48c740780100	               mov qword [rax + 0x78], 1	      1755	buffer.c	FUNCTION_21	ELSE_2
0x4002b34	    0x488b05000000	            mov rax, qword [0x04002b3b] 	      1757	buffer.c	FUNCTION_21	ELSE_2
0x4002b3b	    0xc78084000000	               mov dword [rax + 0x84], 0	      1757	buffer.c	FUNCTION_21	ELSE_2
0x4002b45	    0x488b05000000	            mov rax, qword [0x04002b4c] 	      1759	buffer.c	FUNCTION_21	ELSE_2	CALL_8
0x4002b4c	          0x4989c0	                             mov r8, rax	      1759	buffer.c	FUNCTION_21	ELSE_2	CALL_8
0x4002b4f	      0xb900000000	                              mov ecx, 0	      1759	buffer.c	FUNCTION_21	ELSE_2	CALL_8
0x4002b54	      0xba00000000	                              mov edx, 0	      1759	buffer.c	FUNCTION_21	ELSE_2	CALL_8
0x4002b59	      0xbe00000000	                              mov esi, 0	      1759	buffer.c	FUNCTION_21	ELSE_2	CALL_8
0x4002b5e	      0xbf02000000	                              mov edi, 2	      1759	buffer.c	FUNCTION_21	ELSE_2	CALL_8
0x4002b63	      0xe800000000	                          call 0x4002b68	      1759	buffer.c	FUNCTION_21	ELSE_2	CALL_8
0x4002b68	    0x488b05000000	            mov rax, qword [0x04002b6f] 	      1760	buffer.c	FUNCTION_21	ELSE_2	CALL_9
0x4002b6f	          0x4989c0	                             mov r8, rax	      1760	buffer.c	FUNCTION_21	ELSE_2	CALL_9
0x4002b72	      0xb900000000	                              mov ecx, 0	      1760	buffer.c	FUNCTION_21	ELSE_2	CALL_9
0x4002b77	      0xba00000000	                              mov edx, 0	      1760	buffer.c	FUNCTION_21	ELSE_2	CALL_9
0x4002b7c	      0xbe00000000	                              mov esi, 0	      1760	buffer.c	FUNCTION_21	ELSE_2	CALL_9
0x4002b81	      0xbf0d000000	                            mov edi, 0xd	      1760	buffer.c	FUNCTION_21	ELSE_2	CALL_9
0x4002b86	      0xe800000000	                          call 0x4002b8b	      1760	buffer.c	FUNCTION_21	ELSE_2	CALL_9
0x4002b8b	    0x488b05000000	            mov rax, qword [0x04002b92] 	      1765	buffer.c	FUNCTION_21	IF_6	CALL_10
0x4002b92	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1765	buffer.c	FUNCTION_21	IF_6	CALL_10
0x4002b96	        0x4883f801	                              cmp rax, 1	      1765	buffer.c	FUNCTION_21	IF_6	CALL_10
0x4002b9a	            0x7513	                           jne 0x4002baf	      1765	buffer.c	FUNCTION_21	IF_6	CALL_10
0x4002b9c	      0xbf00000000	                              mov edi, 0	      1765	buffer.c	FUNCTION_21	IF_6	CALL_10
0x4002ba1	      0xe800000000	                          call 0x4002ba6	      1765	buffer.c	FUNCTION_21	IF_6	CALL_10
0x4002ba6	            0x85c0	                           test eax, eax	      1765	buffer.c	FUNCTION_21	IF_6	CALL_10
0x4002ba8	            0x7405	                            je 0x4002baf	      1765	buffer.c	FUNCTION_21	IF_6	CALL_10
0x4002baa	      0xe800000000	                          call 0x4002baf	      1766	buffer.c	FUNCTION_21	CALL_11
0x4002baf	    0x488b05000000	            mov rax, qword [0x04002bb6] 	      1768	buffer.c	FUNCTION_21	CALL_12
0x4002bb6	          0x4889c7	                            mov rdi, rax	      1768	buffer.c	FUNCTION_21	CALL_12
0x4002bb9	      0xe800000000	                          call 0x4002bbe	      1768	buffer.c	FUNCTION_21	CALL_12
0x4002bbe	      0xe800000000	                          call 0x4002bc3	      1770	buffer.c	FUNCTION_21	CALL_13
0x4002bc3	    0x488b05000000	            mov rax, qword [0x04002bca] 	      1773	buffer.c	FUNCTION_21	IF_7
0x4002bca	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1773	buffer.c	FUNCTION_21	IF_7
0x4002bce	        0x4883f801	                              cmp rax, 1	      1773	buffer.c	FUNCTION_21	IF_7
0x4002bd2	            0x751c	                           jne 0x4002bf0	      1773	buffer.c	FUNCTION_21	IF_7
0x4002bd4	    0x488b05000000	            mov rax, qword [0x04002bdb] 	      1773	buffer.c	FUNCTION_21	IF_7
0x4002bdb	     0xfb680800000	           movzx eax, byte [rax + 0x80] 	      1773	buffer.c	FUNCTION_21	IF_7
0x4002be2	            0x84c0	                             test al, al	      1773	buffer.c	FUNCTION_21	IF_7
0x4002be4	            0x750a	                           jne 0x4002bf0	      1773	buffer.c	FUNCTION_21	IF_7
0x4002be6	      0xbf00000000	                              mov edi, 0	      1774	buffer.c	FUNCTION_21	CALL_14
0x4002beb	      0xe800000000	                          call 0x4002bf0	      1774	buffer.c	FUNCTION_21	CALL_14
0x4002bf0	    0x488b05000000	            mov rax, qword [0x04002bf7] 	      1778	buffer.c	FUNCTION_21	CALL_15
0x4002bf7	          0x4889c7	                            mov rdi, rax	      1778	buffer.c	FUNCTION_21	CALL_15
0x4002bfa	      0xe800000000	                          call 0x4002bff	      1778	buffer.c	FUNCTION_21	CALL_15
0x4002bff	    0x8b0500000000	            mov eax, dword [0x04002c05] 	      1782	buffer.c	FUNCTION_21
0x4002c05	            0x85c0	                           test eax, eax	      1782	buffer.c	FUNCTION_21
0x4002c07	            0x7405	                            je 0x4002c0e	      1782	buffer.c	FUNCTION_21
0x4002c09	      0xe800000000	                          call 0x4002c0e	      1782	buffer.c	FUNCTION_21
0x4002c0e	    0x488b05000000	            mov rax, qword [0x04002c15] 	      1785	buffer.c	FUNCTION_21	IF_8
0x4002c15	     0xfb780881200	         movzx eax, word [rax + 0x1288] 	      1785	buffer.c	FUNCTION_21	IF_8
0x4002c1c	              0x98	                                    cwde	      1785	buffer.c	FUNCTION_21	IF_8
0x4002c1d	          0x83e001	                              and eax, 1	      1785	buffer.c	FUNCTION_21	IF_8
0x4002c20	            0x85c0	                           test eax, eax	      1785	buffer.c	FUNCTION_21	IF_8
0x4002c22	            0x7405	                            je 0x4002c29	      1785	buffer.c	FUNCTION_21	IF_8
0x4002c24	      0xe800000000	                          call 0x4002c29	      1786	buffer.c	FUNCTION_21	CALL_16
0x4002c29	    0x488b05000000	            mov rax, qword [0x04002c30] 	      1791	buffer.c	FUNCTION_21	IF_9
0x4002c30	    0x8b8058170000	          mov eax, dword [rax + 0x1758] 	      1791	buffer.c	FUNCTION_21	IF_9
0x4002c36	            0x85c0	                           test eax, eax	      1791	buffer.c	FUNCTION_21	IF_9
0x4002c38	            0x7539	                           jne 0x4002c73	      1791	buffer.c	FUNCTION_21	IF_9
0x4002c3a	    0x488b05000000	            mov rax, qword [0x04002c41] 	      1791	buffer.c	FUNCTION_21	IF_9
0x4002c41	    0x8b8068020000	           mov eax, dword [rax + 0x268] 	      1791	buffer.c	FUNCTION_21	IF_9
0x4002c47	            0x85c0	                           test eax, eax	      1791	buffer.c	FUNCTION_21	IF_9
0x4002c49	            0x7428	                            je 0x4002c73	      1791	buffer.c	FUNCTION_21	IF_9
0x4002c4b	    0x488b05000000	            mov rax, qword [0x04002c52] 	      1791	buffer.c	FUNCTION_21	IF_9
0x4002c52	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1791	buffer.c	FUNCTION_21	IF_9
0x4002c56	    0x488b80800400	           mov rax, qword [rax + 0x480] 	      1791	buffer.c	FUNCTION_21	IF_9
0x4002c5d	           0xfb600	                   movzx eax, byte [rax]	      1791	buffer.c	FUNCTION_21	IF_9
0x4002c60	            0x84c0	                             test al, al	      1791	buffer.c	FUNCTION_21	IF_9
0x4002c62	            0x740f	                            je 0x4002c73	      1791	buffer.c	FUNCTION_21	IF_9
0x4002c64	    0x488b05000000	            mov rax, qword [0x04002c6b] 	      1792	buffer.c	FUNCTION_21	CALL_17
0x4002c6b	          0x4889c7	                            mov rdi, rax	      1792	buffer.c	FUNCTION_21	CALL_17
0x4002c6e	      0xe800000000	                          call 0x4002c73	      1792	buffer.c	FUNCTION_21	CALL_17
0x4002c73	    0x488b1d000000	            mov rbx, qword [0x04002c7a] 	      1795	buffer.c	FUNCTION_21	CALL_18
0x4002c7a	      0xe800000000	                          call 0x4002c7f	      1795	buffer.c	FUNCTION_21	CALL_18
0x4002c7f	    0x488983500100	            mov qword [rbx + 0x150], rax	      1795	buffer.c	FUNCTION_21	CALL_18
0x4002c86	      0xbf28000000	                           mov edi, 0x28	      1798	buffer.c	FUNCTION_21	CALL_19
0x4002c8b	      0xe800000000	                          call 0x4002c90	      1798	buffer.c	FUNCTION_21	CALL_19
0x4002c90	              0x90	                                     nop	      1799	buffer.c	FUNCTION_21
0x4002c91	        0x4883c418	                           add rsp, 0x18	      1799	buffer.c	FUNCTION_21
0x4002c95	              0x5b	                                 pop rbx	      1799	buffer.c	FUNCTION_21
0x4002c96	              0x5d	                                 pop rbp	      1799	buffer.c	FUNCTION_21
0x4002c97	              0xc3	                                     ret	      1799	buffer.c	FUNCTION_21
fname_match	CALL,4:functions,0:SWITCH,0:FOR,0:ELSE,1:DO,0:WHILE,0:IF,3	53
0x400476a	              0x55	                                push rbp	      2681	buffer.c	FUNCTION_36
0x400476b	          0x4889e5	                            mov rbp, rsp	      2681	buffer.c	FUNCTION_36
0x400476e	        0x4883ec30	                           sub rsp, 0x30	      2681	buffer.c	FUNCTION_36
0x4004772	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2681	buffer.c	FUNCTION_36
0x4004776	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2681	buffer.c	FUNCTION_36
0x400477a	          0x8955dc	             mov dword [rbp - 0x24], edx	      2681	buffer.c	FUNCTION_36
0x400477d	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      2682	buffer.c	FUNCTION_36
0x4004785	      0x48837de000	               cmp qword [rbp - 0x20], 0	      2685	buffer.c	FUNCTION_36	IF_1
0x400478a	     0xf849a000000	                            je 0x400482a	      2685	buffer.c	FUNCTION_36	IF_1
0x4004790	    0x488b05000000	            mov rax, qword [0x04004797] 	      2688	buffer.c	FUNCTION_36	IF_1
0x4004797	          0x4885c0	                           test rax, rax	      2688	buffer.c	FUNCTION_36	IF_1
0x400479a	            0x7506	                           jne 0x40047a2	      2688	buffer.c	FUNCTION_36	IF_1
0x400479c	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      2688	buffer.c	FUNCTION_36	IF_1
0x40047a0	            0x7407	                            je 0x40047a9	      2688	buffer.c	FUNCTION_36	IF_1
0x40047a2	      0xba01000000	                              mov edx, 1	      2688	buffer.c	FUNCTION_36	IF_1
0x40047a7	            0xeb05	                           jmp 0x40047ae	      2688	buffer.c	FUNCTION_36	IF_1
0x40047a9	      0xba00000000	                              mov edx, 0	      2688	buffer.c	FUNCTION_36	IF_1
0x40047ae	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2688	buffer.c	FUNCTION_36	IF_1
0x40047b2	    0x8990a8000000	             mov dword [rax + 0xa8], edx	      2688	buffer.c	FUNCTION_36	IF_1
0x40047b8	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      2689	buffer.c	FUNCTION_36	IF_1	IF_2	CALL_1
0x40047bc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2689	buffer.c	FUNCTION_36	IF_1	IF_2	CALL_1
0x40047c0	      0xba00000000	                              mov edx, 0	      2689	buffer.c	FUNCTION_36	IF_1	IF_2	CALL_1
0x40047c5	          0x4889ce	                            mov rsi, rcx	      2689	buffer.c	FUNCTION_36	IF_1	IF_2	CALL_1
0x40047c8	          0x4889c7	                            mov rdi, rax	      2689	buffer.c	FUNCTION_36	IF_1	IF_2	CALL_1
0x40047cb	      0xe800000000	                          call 0x40047d0	      2689	buffer.c	FUNCTION_36	IF_1	IF_2	CALL_1
0x40047d0	            0x85c0	                           test eax, eax	      2689	buffer.c	FUNCTION_36	IF_1	IF_2	CALL_1
0x40047d2	            0x740a	                            je 0x40047de	      2689	buffer.c	FUNCTION_36	IF_1	IF_2	CALL_1
0x40047d4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2690	buffer.c	FUNCTION_36	IF_1	IF_2
0x40047d8	        0x488945f0	             mov qword [rbp - 0x10], rax	      2690	buffer.c	FUNCTION_36	IF_1	IF_2
0x40047dc	            0xeb4c	                           jmp 0x400482a	      2690	buffer.c	FUNCTION_36	IF_1	IF_2
0x40047de	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2694	buffer.c	FUNCTION_36	IF_1	ELSE_1	CALL_2
0x40047e2	          0x4889c6	                            mov rsi, rax	      2694	buffer.c	FUNCTION_36	IF_1	ELSE_1	CALL_2
0x40047e5	      0xbf00000000	                              mov edi, 0	      2694	buffer.c	FUNCTION_36	IF_1	ELSE_1	CALL_2
0x40047ea	      0xe800000000	                          call 0x40047ef	      2694	buffer.c	FUNCTION_36	IF_1	ELSE_1	CALL_2
0x40047ef	        0x488945f8	                mov qword [rbp - 8], rax	      2694	buffer.c	FUNCTION_36	IF_1	ELSE_1	CALL_2
0x40047f3	      0x48837df800	                  cmp qword [rbp - 8], 0	      2695	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3	CALL_3
0x40047f8	            0x7424	                            je 0x400481e	      2695	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3	CALL_3
0x40047fa	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2695	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3	CALL_3
0x40047fe	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2695	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3	CALL_3
0x4004802	      0xba00000000	                              mov edx, 0	      2695	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3	CALL_3
0x4004807	          0x4889ce	                            mov rsi, rcx	      2695	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3	CALL_3
0x400480a	          0x4889c7	                            mov rdi, rax	      2695	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3	CALL_3
0x400480d	      0xe800000000	                          call 0x4004812	      2695	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3	CALL_3
0x4004812	            0x85c0	                           test eax, eax	      2695	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3	CALL_3
0x4004814	            0x7408	                            je 0x400481e	      2695	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3	CALL_3
0x4004816	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2696	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3
0x400481a	        0x488945f0	             mov qword [rbp - 0x10], rax	      2696	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3
0x400481e	        0x488b45f8	                mov rax, qword [rbp - 8]	      2697	buffer.c	FUNCTION_36	IF_1	ELSE_1	CALL_4
0x4004822	          0x4889c7	                            mov rdi, rax	      2697	buffer.c	FUNCTION_36	IF_1	ELSE_1	CALL_4
0x4004825	      0xe800000000	                          call 0x400482a	      2697	buffer.c	FUNCTION_36	IF_1	ELSE_1	CALL_4
0x400482a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2701	buffer.c	FUNCTION_36
0x400482e	              0xc9	                                   leave	      2702	buffer.c	FUNCTION_36
0x400482f	              0xc3	                                     ret	      2702	buffer.c	FUNCTION_36
buflist_findname_stat	CALL,1:functions,0:SWITCH,0:FOR,1:ELSE,0:DO,0:WHILE,0:IF,1	31
0x4003ed0	              0x55	                                push rbp	      2408	buffer.c	FUNCTION_32
0x4003ed1	          0x4889e5	                            mov rbp, rsp	      2408	buffer.c	FUNCTION_32
0x4003ed4	        0x4883ec20	                           sub rsp, 0x20	      2408	buffer.c	FUNCTION_32
0x4003ed8	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2408	buffer.c	FUNCTION_32
0x4003edc	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2408	buffer.c	FUNCTION_32
0x4003ee0	    0x488b05000000	            mov rax, qword [0x04003ee7] 	      2413	buffer.c	FUNCTION_32	FOR_1
0x4003ee7	        0x488945f8	                mov qword [rbp - 8], rax	      2413	buffer.c	FUNCTION_32	FOR_1
0x4003eeb	            0xeb3d	                           jmp 0x4003f2a	      2413	buffer.c	FUNCTION_32	FOR_1
0x4003eed	        0x488b45f8	                mov rax, qword [rbp - 8]	      2414	buffer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x4003ef1	          0x8b407c	            mov eax, dword [rax + 0x7c] 	      2414	buffer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x4003ef4	      0x2580000000	                           and eax, 0x80	      2414	buffer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x4003ef9	            0x85c0	                           test eax, eax	      2414	buffer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x4003efb	            0x7521	                           jne 0x4003f1e	      2414	buffer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x4003efd	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2414	buffer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x4003f01	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      2414	buffer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x4003f05	        0x488b45f8	                mov rax, qword [rbp - 8]	      2414	buffer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x4003f09	          0x4889ce	                            mov rsi, rcx	      2414	buffer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x4003f0c	          0x4889c7	                            mov rdi, rax	      2414	buffer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x4003f0f	      0xe8f11a0000	                  call sym.otherfile_buf	      2414	buffer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x4003f14	            0x85c0	                           test eax, eax	      2414	buffer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x4003f16	            0x7506	                           jne 0x4003f1e	      2414	buffer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x4003f18	        0x488b45f8	                mov rax, qword [rbp - 8]	      2419	buffer.c	FUNCTION_32	FOR_1	IF_1
0x4003f1c	            0xeb18	                           jmp 0x4003f36	      2419	buffer.c	FUNCTION_32	FOR_1	IF_1
0x4003f1e	        0x488b45f8	                mov rax, qword [rbp - 8]	      2413	buffer.c	FUNCTION_32	FOR_1
0x4003f22	        0x488b4070	            mov rax, qword [rax + 0x70] 	      2413	buffer.c	FUNCTION_32	FOR_1
0x4003f26	        0x488945f8	                mov qword [rbp - 8], rax	      2413	buffer.c	FUNCTION_32	FOR_1
0x4003f2a	      0x48837df800	                  cmp qword [rbp - 8], 0	      2413	buffer.c	FUNCTION_32	FOR_1
0x4003f2f	            0x75bc	                           jne 0x4003eed	      2413	buffer.c	FUNCTION_32	FOR_1
0x4003f31	      0xb800000000	                              mov eax, 0	      2420	buffer.c	FUNCTION_32
0x4003f36	              0xc9	                                   leave	      2421	buffer.c	FUNCTION_32
0x4003f37	              0xc3	                                     ret	      2421	buffer.c	FUNCTION_32
do_buffer	CALL,44:functions,0:SWITCH,1:FOR,1:ELSE,10:DO,1:WHILE,5:IF,62	616
0x4001d96	              0x55	                                push rbp	      1270	buffer.c	FUNCTION_19
0x4001d97	          0x4889e5	                            mov rbp, rsp	      1270	buffer.c	FUNCTION_19
0x4001d9a	              0x53	                                push rbx	      1270	buffer.c	FUNCTION_19
0x4001d9b	        0x4883ec68	                           sub rsp, 0x68	      1270	buffer.c	FUNCTION_19
0x4001d9f	          0x897dac	             mov dword [rbp - 0x54], edi	      1270	buffer.c	FUNCTION_19
0x4001da2	          0x8975a8	             mov dword [rbp - 0x58], esi	      1270	buffer.c	FUNCTION_19
0x4001da5	          0x8955a4	             mov dword [rbp - 0x5c], edx	      1270	buffer.c	FUNCTION_19
0x4001da8	          0x894da0	             mov dword [rbp - 0x60], ecx	      1270	buffer.c	FUNCTION_19
0x4001dab	        0x4489459c	             mov dword [rbp - 0x64], r8d	      1270	buffer.c	FUNCTION_19
0x4001daf	    0x64488b042528	                mov rax, qword fs:[0x28]	      1270	buffer.c	FUNCTION_19
0x4001db8	        0x488945e8	             mov qword [rbp - 0x18], rax	      1270	buffer.c	FUNCTION_19
0x4001dbc	            0x31c0	                            xor eax, eax	      1270	buffer.c	FUNCTION_19
0x4001dbe	        0x837dac02	               cmp dword [rbp - 0x54], 2	      1274	buffer.c	FUNCTION_19
0x4001dc2	            0x740c	                            je 0x4001dd0	      1274	buffer.c	FUNCTION_19
0x4001dc4	        0x837dac03	               cmp dword [rbp - 0x54], 3	      1273	buffer.c	FUNCTION_19
0x4001dc8	            0x7406	                            je 0x4001dd0	      1273	buffer.c	FUNCTION_19
0x4001dca	        0x837dac04	               cmp dword [rbp - 0x54], 4	      1274	buffer.c	FUNCTION_19
0x4001dce	            0x7507	                           jne 0x4001dd7	      1274	buffer.c	FUNCTION_19
0x4001dd0	      0xb801000000	                              mov eax, 1	      1274	buffer.c	FUNCTION_19
0x4001dd5	            0xeb05	                           jmp 0x4001ddc	      1274	buffer.c	FUNCTION_19
0x4001dd7	      0xb800000000	                              mov eax, 0	      1274	buffer.c	FUNCTION_19
0x4001ddc	          0x8945bc	             mov dword [rbp - 0x44], eax	      1273	buffer.c	FUNCTION_19
0x4001ddf	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      1276	buffer.c	FUNCTION_19	SWITCH_1
0x4001de2	          0x83f801	                              cmp eax, 1	      1276	buffer.c	FUNCTION_19	SWITCH_1
0x4001de5	            0x7407	                            je 0x4001dee	      1276	buffer.c	FUNCTION_19	SWITCH_1
0x4001de7	          0x83f802	                              cmp eax, 2	      1276	buffer.c	FUNCTION_19	SWITCH_1
0x4001dea	            0x740f	                            je 0x4001dfb	      1276	buffer.c	FUNCTION_19	SWITCH_1
0x4001dec	            0xeb1a	                           jmp 0x4001e08	      1276	buffer.c	FUNCTION_19	SWITCH_1
0x4001dee	    0x488b05000000	            mov rax, qword [0x04001df5] 	      1278	buffer.c	FUNCTION_19	SWITCH_1
0x4001df5	        0x488945c0	             mov qword [rbp - 0x40], rax	      1278	buffer.c	FUNCTION_19	SWITCH_1
0x4001df9	            0xeb19	                           jmp 0x4001e14	      1278	buffer.c	FUNCTION_19	SWITCH_1
0x4001dfb	    0x488b05000000	            mov rax, qword [0x04001e02] 	      1279	buffer.c	FUNCTION_19	SWITCH_1
0x4001e02	        0x488945c0	             mov qword [rbp - 0x40], rax	      1279	buffer.c	FUNCTION_19	SWITCH_1
0x4001e06	            0xeb0c	                           jmp 0x4001e14	      1279	buffer.c	FUNCTION_19	SWITCH_1
0x4001e08	    0x488b05000000	            mov rax, qword [0x04001e0f] 	      1280	buffer.c	FUNCTION_19	SWITCH_1
0x4001e0f	        0x488945c0	             mov qword [rbp - 0x40], rax	      1280	buffer.c	FUNCTION_19	SWITCH_1
0x4001e13	              0x90	                                     nop	      1280	buffer.c	FUNCTION_19	SWITCH_1
0x4001e14	        0x837da803	               cmp dword [rbp - 0x58], 3	      1282	buffer.c	FUNCTION_19	IF_1
0x4001e18	            0x757a	                           jne 0x4001e94	      1282	buffer.c	FUNCTION_19	IF_1
0x4001e1a	            0xeb3b	                           jmp 0x4001e57	      1284	buffer.c	FUNCTION_19	IF_1	WHILE_1
0x4001e1c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1288	buffer.c	FUNCTION_19	IF_1	WHILE_1	DO_1
0x4001e20	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1288	buffer.c	FUNCTION_19	IF_1	WHILE_1	DO_1
0x4001e24	        0x488945c0	             mov qword [rbp - 0x40], rax	      1288	buffer.c	FUNCTION_19	IF_1	WHILE_1	DO_1
0x4001e28	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1289	buffer.c	FUNCTION_19	IF_1	WHILE_1	DO_1	IF_2
0x4001e2d	            0x750b	                           jne 0x4001e3a	      1289	buffer.c	FUNCTION_19	IF_1	WHILE_1	DO_1	IF_2
0x4001e2f	    0x488b05000000	            mov rax, qword [0x04001e36] 	      1290	buffer.c	FUNCTION_19	IF_1	WHILE_1	DO_1	IF_2
0x4001e36	        0x488945c0	             mov qword [rbp - 0x40], rax	      1290	buffer.c	FUNCTION_19	IF_1	WHILE_1	DO_1	IF_2
0x4001e3a	    0x488b05000000	            mov rax, qword [0x04001e41] 	      1292	buffer.c	FUNCTION_19	IF_1	WHILE_1	CALL_1
0x4001e41	        0x483945c0	            cmp qword [rbp - 0x40], rax 	      1292	buffer.c	FUNCTION_19	IF_1	WHILE_1	CALL_1
0x4001e45	            0x7410	                            je 0x4001e57	      1292	buffer.c	FUNCTION_19	IF_1	WHILE_1	CALL_1
0x4001e47	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1292	buffer.c	FUNCTION_19	IF_1	WHILE_1	CALL_1
0x4001e4b	          0x4889c7	                            mov rdi, rax	      1292	buffer.c	FUNCTION_19	IF_1	WHILE_1	CALL_1
0x4001e4e	      0xe800000000	                          call 0x4001e53	      1292	buffer.c	FUNCTION_19	IF_1	WHILE_1	CALL_1
0x4001e53	            0x85c0	                           test eax, eax	      1292	buffer.c	FUNCTION_19	IF_1	WHILE_1	CALL_1
0x4001e55	            0x74c5	                            je 0x4001e1c	      1292	buffer.c	FUNCTION_19	IF_1	WHILE_1	CALL_1
0x4001e57	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      1284	buffer.c	FUNCTION_19	IF_1	WHILE_1
0x4001e5a	          0x8d50ff	                      lea edx, [rax - 1]	      1284	buffer.c	FUNCTION_19	IF_1	WHILE_1
0x4001e5d	          0x8955a0	             mov dword [rbp - 0x60], edx	      1284	buffer.c	FUNCTION_19	IF_1	WHILE_1
0x4001e60	            0x85c0	                           test eax, eax	      1284	buffer.c	FUNCTION_19	IF_1	WHILE_1
0x4001e62	            0x7fb8	                            jg 0x4001e1c	      1284	buffer.c	FUNCTION_19	IF_1	WHILE_1
0x4001e64	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1294	buffer.c	FUNCTION_19	IF_1	IF_3	CALL_2
0x4001e68	          0x4889c7	                            mov rdi, rax	      1294	buffer.c	FUNCTION_19	IF_1	IF_3	CALL_2
0x4001e6b	      0xe800000000	                          call 0x4001e70	      1294	buffer.c	FUNCTION_19	IF_1	IF_3	CALL_2
0x4001e70	            0x85c0	                           test eax, eax	      1294	buffer.c	FUNCTION_19	IF_1	IF_3	CALL_2
0x4001e72	     0xf852a010000	                           jne 0x4001fa2	      1294	buffer.c	FUNCTION_19	IF_1	IF_3	CALL_2
0x4001e78	      0xbf00000000	                              mov edi, 0	      1296	buffer.c	FUNCTION_19	IF_1	IF_3	CALL_4
0x4001e7d	      0xe800000000	                          call 0x4001e82	      1296	buffer.c	FUNCTION_19	IF_1	IF_3	CALL_4
0x4001e82	          0x4889c7	                            mov rdi, rax	      1296	buffer.c	FUNCTION_19	IF_1	IF_3	CALL_4
0x4001e85	      0xe800000000	                          call 0x4001e8a	      1296	buffer.c	FUNCTION_19	IF_1	IF_3	CALL_4
0x4001e8a	      0xb800000000	                              mov eax, 0	      1297	buffer.c	FUNCTION_19	IF_1	IF_3
0x4001e8f	      0xe949080000	                           jmp 0x40026dd	      1297	buffer.c	FUNCTION_19	IF_1	IF_3
0x4001e94	        0x837da801	               cmp dword [rbp - 0x58], 1	      1300	buffer.c	FUNCTION_19	ELSE_1	IF_4
0x4001e98	            0x7533	                           jne 0x4001ecd	      1300	buffer.c	FUNCTION_19	ELSE_1	IF_4
0x4001e9a	        0x837da000	               cmp dword [rbp - 0x60], 0	      1300	buffer.c	FUNCTION_19	ELSE_1	IF_4
0x4001e9e	            0x742d	                            je 0x4001ecd	      1300	buffer.c	FUNCTION_19	ELSE_1	IF_4
0x4001ea0	            0xeb0c	                           jmp 0x4001eae	      1302	buffer.c	FUNCTION_19	ELSE_1	IF_4	WHILE_2
0x4001ea2	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1303	buffer.c	FUNCTION_19	ELSE_1	IF_4	WHILE_2
0x4001ea6	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1303	buffer.c	FUNCTION_19	ELSE_1	IF_4	WHILE_2
0x4001eaa	        0x488945c0	             mov qword [rbp - 0x40], rax	      1303	buffer.c	FUNCTION_19	ELSE_1	IF_4	WHILE_2
0x4001eae	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1302	buffer.c	FUNCTION_19	ELSE_1	IF_4	WHILE_2
0x4001eb3	     0xf84e8000000	                            je 0x4001fa1	      1302	buffer.c	FUNCTION_19	ELSE_1	IF_4	WHILE_2
0x4001eb9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1302	buffer.c	FUNCTION_19	ELSE_1	IF_4	WHILE_2
0x4001ebd	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      1302	buffer.c	FUNCTION_19	ELSE_1	IF_4	WHILE_2
0x4001ec3	          0x3b45a0	             cmp eax, dword [rbp - 0x60]	      1302	buffer.c	FUNCTION_19	ELSE_1	IF_4	WHILE_2
0x4001ec6	            0x75da	                           jne 0x4001ea2	      1302	buffer.c	FUNCTION_19	ELSE_1	IF_4	WHILE_2
0x4001ec8	      0xe9d4000000	                           jmp 0x4001fa1	      1300	buffer.c	FUNCTION_19	ELSE_1	IF_4
0x4001ecd	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      1307	buffer.c	FUNCTION_19	ELSE_2
0x4001ed5	      0xe999000000	                           jmp 0x4001f73	      1308	buffer.c	FUNCTION_19	ELSE_2	WHILE_3
0x4001eda	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      1312	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_5
0x4001edf	            0x7508	                           jne 0x4001ee9	      1312	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_5
0x4001ee1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1313	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_5
0x4001ee5	        0x488945c8	             mov qword [rbp - 0x38], rax	      1313	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_5
0x4001ee9	        0x837da401	               cmp dword [rbp - 0x5c], 1	      1314	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_6
0x4001eed	            0x7520	                           jne 0x4001f0f	      1314	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_6
0x4001eef	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1316	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_6
0x4001ef3	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1316	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_6
0x4001ef7	        0x488945c0	             mov qword [rbp - 0x40], rax	      1316	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_6
0x4001efb	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1317	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_6	IF_7
0x4001f00	            0x752b	                           jne 0x4001f2d	      1317	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_6	IF_7
0x4001f02	    0x488b05000000	            mov rax, qword [0x04001f09] 	      1318	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_6	IF_7
0x4001f09	        0x488945c0	             mov qword [rbp - 0x40], rax	      1318	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_6	IF_7
0x4001f0d	            0xeb1e	                           jmp 0x4001f2d	      1318	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_6	IF_7
0x4001f0f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1322	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	ELSE_3
0x4001f13	        0x488b4070	            mov rax, qword [rax + 0x70] 	      1322	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	ELSE_3
0x4001f17	        0x488945c0	             mov qword [rbp - 0x40], rax	      1322	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	ELSE_3
0x4001f1b	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1323	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	ELSE_3	IF_8
0x4001f20	            0x750b	                           jne 0x4001f2d	      1323	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	ELSE_3	IF_8
0x4001f22	    0x488b05000000	            mov rax, qword [0x04001f29] 	      1324	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	ELSE_3	IF_8
0x4001f29	        0x488945c0	             mov qword [rbp - 0x40], rax	      1324	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	ELSE_3	IF_8
0x4001f2d	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      1327	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_9
0x4001f31	            0x750e	                           jne 0x4001f41	      1327	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_9
0x4001f33	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1327	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_9
0x4001f37	    0x8b8024140000	          mov eax, dword [rax + 0x1424] 	      1327	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_9
0x4001f3d	            0x85c0	                           test eax, eax	      1327	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_9
0x4001f3f	            0x740c	                            je 0x4001f4d	      1327	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_9
0x4001f41	        0x836da001	               sub dword [rbp - 0x60], 1	      1329	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_9
0x4001f45	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      1330	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_9
0x4001f4d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1332	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_10
0x4001f51	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      1332	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_10
0x4001f55	            0x751c	                           jne 0x4001f73	      1332	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_10
0x4001f57	      0xbf00000000	                              mov edi, 0	      1335	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_10	CALL_6
0x4001f5c	      0xe800000000	                          call 0x4001f61	      1335	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_10	CALL_6
0x4001f61	          0x4889c7	                            mov rdi, rax	      1335	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_10	CALL_6
0x4001f64	      0xe800000000	                          call 0x4001f69	      1335	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_10	CALL_6
0x4001f69	      0xb800000000	                              mov eax, 0	      1336	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_10
0x4001f6e	      0xe96a070000	                           jmp 0x40026dd	      1336	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_10
0x4001f73	        0x837da000	               cmp dword [rbp - 0x60], 0	      1308	buffer.c	FUNCTION_19	ELSE_2	WHILE_3
0x4001f77	     0xf8f5dffffff	                            jg 0x4001eda	      1308	buffer.c	FUNCTION_19	ELSE_2	WHILE_3
0x4001f7d	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      1308	buffer.c	FUNCTION_19	ELSE_2	WHILE_3
0x4001f81	            0x751f	                           jne 0x4001fa2	      1308	buffer.c	FUNCTION_19	ELSE_2	WHILE_3
0x4001f83	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1308	buffer.c	FUNCTION_19	ELSE_2	WHILE_3
0x4001f87	    0x8b8024140000	          mov eax, dword [rax + 0x1424] 	      1308	buffer.c	FUNCTION_19	ELSE_2	WHILE_3
0x4001f8d	            0x85c0	                           test eax, eax	      1308	buffer.c	FUNCTION_19	ELSE_2	WHILE_3
0x4001f8f	            0x7511	                           jne 0x4001fa2	      1308	buffer.c	FUNCTION_19	ELSE_2	WHILE_3
0x4001f91	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1308	buffer.c	FUNCTION_19	ELSE_2	WHILE_3
0x4001f95	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      1308	buffer.c	FUNCTION_19	ELSE_2	WHILE_3
0x4001f99	     0xf853bffffff	                           jne 0x4001eda	      1308	buffer.c	FUNCTION_19	ELSE_2	WHILE_3
0x4001f9f	            0xeb01	                           jmp 0x4001fa2	      1308	buffer.c	FUNCTION_19	ELSE_2	WHILE_3
0x4001fa1	              0x90	                                     nop	      1300	buffer.c	FUNCTION_19	ELSE_1	IF_4
0x4001fa2	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1341	buffer.c	FUNCTION_19	IF_11
0x4001fa7	            0x755f	                           jne 0x4002008	      1341	buffer.c	FUNCTION_19	IF_11
0x4001fa9	        0x837da801	               cmp dword [rbp - 0x58], 1	      1343	buffer.c	FUNCTION_19	IF_11	IF_12
0x4001fad	            0x7523	                           jne 0x4001fd2	      1343	buffer.c	FUNCTION_19	IF_11	IF_12
0x4001faf	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      1346	buffer.c	FUNCTION_19	IF_11	IF_12	IF_13
0x4001fb3	            0x7549	                           jne 0x4001ffe	      1346	buffer.c	FUNCTION_19	IF_11	IF_12	IF_13
0x4001fb5	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      1347	buffer.c	FUNCTION_19	IF_11	IF_12	CALL_8
0x4001fb8	          0x4863d8	                         movsxd rbx, eax	      1347	buffer.c	FUNCTION_19	IF_11	IF_12	CALL_8
0x4001fbb	      0xbf00000000	                              mov edi, 0	      1347	buffer.c	FUNCTION_19	IF_11	IF_12	CALL_8
0x4001fc0	      0xe800000000	                          call 0x4001fc5	      1347	buffer.c	FUNCTION_19	IF_11	IF_12	CALL_8
0x4001fc5	          0x4889de	                            mov rsi, rbx	      1347	buffer.c	FUNCTION_19	IF_11	IF_12	CALL_8
0x4001fc8	          0x4889c7	                            mov rdi, rax	      1347	buffer.c	FUNCTION_19	IF_11	IF_12	CALL_8
0x4001fcb	      0xe800000000	                          call 0x4001fd0	      1347	buffer.c	FUNCTION_19	IF_11	IF_12	CALL_8
0x4001fd0	            0xeb2c	                           jmp 0x4001ffe	      1347	buffer.c	FUNCTION_19	IF_11	IF_12	CALL_8
0x4001fd2	        0x837da401	               cmp dword [rbp - 0x5c], 1	      1349	buffer.c	FUNCTION_19	IF_11	ELSE_4	IF_14
0x4001fd6	            0x7514	                           jne 0x4001fec	      1349	buffer.c	FUNCTION_19	IF_11	ELSE_4	IF_14
0x4001fd8	      0xbf00000000	                              mov edi, 0	      1350	buffer.c	FUNCTION_19	IF_11	ELSE_4	IF_14
0x4001fdd	      0xe800000000	                          call 0x4001fe2	      1350	buffer.c	FUNCTION_19	IF_11	ELSE_4	IF_14
0x4001fe2	          0x4889c7	                            mov rdi, rax	      1350	buffer.c	FUNCTION_19	IF_11	ELSE_4	IF_14
0x4001fe5	      0xe800000000	                          call 0x4001fea	      1350	buffer.c	FUNCTION_19	IF_11	ELSE_4	IF_14
0x4001fea	            0xeb12	                           jmp 0x4001ffe	      1350	buffer.c	FUNCTION_19	IF_11	ELSE_4	IF_14
0x4001fec	      0xbf00000000	                              mov edi, 0	      1352	buffer.c	FUNCTION_19	IF_11	CALL_12
0x4001ff1	      0xe800000000	                          call 0x4001ff6	      1352	buffer.c	FUNCTION_19	IF_11	CALL_12
0x4001ff6	          0x4889c7	                            mov rdi, rax	      1352	buffer.c	FUNCTION_19	IF_11	CALL_12
0x4001ff9	      0xe800000000	                          call 0x4001ffe	      1352	buffer.c	FUNCTION_19	IF_11	CALL_12
0x4001ffe	      0xb800000000	                              mov eax, 0	      1353	buffer.c	FUNCTION_19	IF_11
0x4002003	      0xe9d5060000	                           jmp 0x40026dd	      1353	buffer.c	FUNCTION_19	IF_11
0x4002008	    0xc70500000000	               mov dword [0x04002012], 1	      1357	buffer.c	FUNCTION_19
0x4002012	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      1363	buffer.c	FUNCTION_19	IF_15
0x4002016	     0xf842e050000	                            je 0x400254a	      1363	buffer.c	FUNCTION_19	IF_15
0x400201c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1368	buffer.c	FUNCTION_19	IF_15	IF_16
0x4002020	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	      1368	buffer.c	FUNCTION_19	IF_15	IF_16
0x4002026	            0x85c0	                           test eax, eax	      1368	buffer.c	FUNCTION_19	IF_15	IF_16
0x4002028	            0x7421	                            je 0x400204b	      1368	buffer.c	FUNCTION_19	IF_15	IF_16
0x400202a	    0x488b05000000	            mov rax, qword [0x04002031] 	      1370	buffer.c	FUNCTION_19	IF_15	IF_16	CALL_14
0x4002031	          0x4889c7	                            mov rdi, rax	      1370	buffer.c	FUNCTION_19	IF_15	IF_16	CALL_14
0x4002034	      0xe800000000	                          call 0x4002039	      1370	buffer.c	FUNCTION_19	IF_15	IF_16	CALL_14
0x4002039	          0x4889c7	                            mov rdi, rax	      1370	buffer.c	FUNCTION_19	IF_15	IF_16	CALL_14
0x400203c	      0xe800000000	                          call 0x4002041	      1370	buffer.c	FUNCTION_19	IF_15	IF_16	CALL_14
0x4002041	      0xb800000000	                              mov eax, 0	      1371	buffer.c	FUNCTION_19	IF_15	IF_16
0x4002046	      0xe992060000	                           jmp 0x40026dd	      1371	buffer.c	FUNCTION_19	IF_15	IF_16
0x400204b	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1374	buffer.c	FUNCTION_19	IF_15	CALL_15
0x400204f	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1374	buffer.c	FUNCTION_19	IF_15	CALL_15
0x4002053	          0x4889d6	                            mov rsi, rdx	      1374	buffer.c	FUNCTION_19	IF_15	CALL_15
0x4002056	          0x4889c7	                            mov rdi, rax	      1374	buffer.c	FUNCTION_19	IF_15	CALL_15
0x4002059	      0xe800000000	                          call 0x400205e	      1374	buffer.c	FUNCTION_19	IF_15	CALL_15
0x400205e	        0x837dac04	               cmp dword [rbp - 0x54], 4	      1378	buffer.c	FUNCTION_19	IF_15	IF_17
0x4002062	            0x7425	                            je 0x4002089	      1378	buffer.c	FUNCTION_19	IF_15	IF_17
0x4002064	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1378	buffer.c	FUNCTION_19	IF_15	IF_17
0x4002068	        0x488b4008	                mov rax, qword [rax + 8]	      1378	buffer.c	FUNCTION_19	IF_15	IF_17
0x400206c	          0x4885c0	                           test rax, rax	      1378	buffer.c	FUNCTION_19	IF_15	IF_17
0x400206f	            0x7518	                           jne 0x4002089	      1378	buffer.c	FUNCTION_19	IF_15	IF_17
0x4002071	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1378	buffer.c	FUNCTION_19	IF_15	IF_17
0x4002075	    0x8b8024140000	          mov eax, dword [rax + 0x1424] 	      1378	buffer.c	FUNCTION_19	IF_15	IF_17
0x400207b	            0x85c0	                           test eax, eax	      1378	buffer.c	FUNCTION_19	IF_15	IF_17
0x400207d	            0x750a	                           jne 0x4002089	      1378	buffer.c	FUNCTION_19	IF_15	IF_17
0x400207f	      0xb800000000	                              mov eax, 0	      1379	buffer.c	FUNCTION_19	IF_15	IF_17
0x4002084	      0xe954060000	                           jmp 0x40026dd	      1379	buffer.c	FUNCTION_19	IF_15	IF_17
0x4002089	        0x837d9c00	               cmp dword [rbp - 0x64], 0	      1381	buffer.c	FUNCTION_19	IF_15	IF_18	CALL_16
0x400208d	     0xf85a3000000	                           jne 0x4002136	      1381	buffer.c	FUNCTION_19	IF_15	IF_18	CALL_16
0x4002093	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1381	buffer.c	FUNCTION_19	IF_15	IF_18	CALL_16
0x4002097	          0x4889c7	                            mov rdi, rax	      1381	buffer.c	FUNCTION_19	IF_15	IF_18	CALL_16
0x400209a	      0xe800000000	                          call 0x400209f	      1381	buffer.c	FUNCTION_19	IF_15	IF_18	CALL_16
0x400209f	            0x85c0	                           test eax, eax	      1381	buffer.c	FUNCTION_19	IF_15	IF_18	CALL_16
0x40020a1	     0xf848f000000	                            je 0x4002136	      1381	buffer.c	FUNCTION_19	IF_15	IF_18	CALL_16
0x40020a7	    0x8b0500000000	            mov eax, dword [0x040020ad] 	      1384	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19
0x40020ad	            0x85c0	                           test eax, eax	      1384	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19
0x40020af	            0x750a	                           jne 0x40020bb	      1384	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19
0x40020b1	    0x8b0500000000	            mov eax, dword [0x040020b7] 	      1384	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19
0x40020b7	            0x85c0	                           test eax, eax	      1384	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19
0x40020b9	            0x744f	                            je 0x400210a	      1384	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19
0x40020bb	    0x8b0500000000	            mov eax, dword [0x040020c1] 	      1384	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19
0x40020c1	            0x85c0	                           test eax, eax	      1384	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19
0x40020c3	            0x7445	                            je 0x400210a	      1384	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19
0x40020c5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1386	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19	CALL_17
0x40020c9	      0xbe00000000	                              mov esi, 0	      1386	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19	CALL_17
0x40020ce	          0x4889c7	                            mov rdi, rax	      1386	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19	CALL_17
0x40020d1	      0xe800000000	                          call 0x40020d6	      1386	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19	CALL_17
0x40020d6	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1387	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19	IF_20	CALL_18
0x40020da	          0x4889c7	                            mov rdi, rax	      1387	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19	IF_20	CALL_18
0x40020dd	      0xe800000000	                          call 0x40020e2	      1387	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19	IF_20	CALL_18
0x40020e2	            0x85c0	                           test eax, eax	      1387	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19	IF_20	CALL_18
0x40020e4	            0x750a	                           jne 0x40020f0	      1387	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19	IF_20	CALL_18
0x40020e6	      0xb800000000	                              mov eax, 0	      1390	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19	IF_20
0x40020eb	      0xe9ed050000	                           jmp 0x40026dd	      1390	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19	IF_20
0x40020f0	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1393	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19	IF_21	CALL_19
0x40020f4	          0x4889c7	                            mov rdi, rax	      1393	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19	IF_21	CALL_19
0x40020f7	      0xe800000000	                          call 0x40020fc	      1393	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19	IF_21	CALL_19
0x40020fc	            0x85c0	                           test eax, eax	      1393	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19	IF_21	CALL_19
0x40020fe	            0x7436	                            je 0x4002136	      1393	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19	IF_21	CALL_19
0x4002100	      0xb800000000	                              mov eax, 0	      1394	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19	IF_21
0x4002105	      0xe9d3050000	                           jmp 0x40026dd	      1394	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19	IF_21
0x400210a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1399	buffer.c	FUNCTION_19	IF_15	IF_18	ELSE_6	CALL_21
0x400210e	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      1399	buffer.c	FUNCTION_19	IF_15	IF_18	ELSE_6	CALL_21
0x4002114	          0x4863d8	                         movsxd rbx, eax	      1399	buffer.c	FUNCTION_19	IF_15	IF_18	ELSE_6	CALL_21
0x4002117	      0xbf00000000	                              mov edi, 0	      1399	buffer.c	FUNCTION_19	IF_15	IF_18	ELSE_6	CALL_21
0x400211c	      0xe800000000	                          call 0x4002121	      1399	buffer.c	FUNCTION_19	IF_15	IF_18	ELSE_6	CALL_21
0x4002121	          0x4889de	                            mov rsi, rbx	      1399	buffer.c	FUNCTION_19	IF_15	IF_18	ELSE_6	CALL_21
0x4002124	          0x4889c7	                            mov rdi, rax	      1399	buffer.c	FUNCTION_19	IF_15	IF_18	ELSE_6	CALL_21
0x4002127	      0xe800000000	                          call 0x400212c	      1399	buffer.c	FUNCTION_19	IF_15	IF_18	ELSE_6	CALL_21
0x400212c	      0xb800000000	                              mov eax, 0	      1401	buffer.c	FUNCTION_19	IF_15	IF_18	ELSE_6
0x4002131	      0xe9a7050000	                           jmp 0x40026dd	      1401	buffer.c	FUNCTION_19	IF_15	IF_18	ELSE_6
0x4002136	    0x488b05000000	            mov rax, qword [0x0400213d] 	      1406	buffer.c	FUNCTION_19	IF_15	IF_22
0x400213d	        0x483945c0	            cmp qword [rbp - 0x40], rax 	      1406	buffer.c	FUNCTION_19	IF_15	IF_22
0x4002141	            0x750f	                           jne 0x4002152	      1406	buffer.c	FUNCTION_19	IF_15	IF_22
0x4002143	    0x8b0500000000	            mov eax, dword [0x04002149] 	      1406	buffer.c	FUNCTION_19	IF_15	IF_22
0x4002149	            0x85c0	                           test eax, eax	      1406	buffer.c	FUNCTION_19	IF_15	IF_22
0x400214b	            0x7405	                            je 0x4002152	      1406	buffer.c	FUNCTION_19	IF_15	IF_22
0x400214d	      0xe800000000	                          call 0x4002152	      1407	buffer.c	FUNCTION_19	IF_15	CALL_22
0x4002152	    0x488b05000000	            mov rax, qword [0x04002159] 	      1413	buffer.c	FUNCTION_19	IF_15	CALL_23
0x4002159	        0x488945c8	             mov qword [rbp - 0x38], rax	      1413	buffer.c	FUNCTION_19	IF_15	CALL_23
0x400215d	            0xeb24	                           jmp 0x4002183	      1413	buffer.c	FUNCTION_19	IF_15	CALL_23
0x400215f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1414	buffer.c	FUNCTION_19	IF_15	IF_23
0x4002163	    0x8b8024140000	          mov eax, dword [rax + 0x1424] 	      1414	buffer.c	FUNCTION_19	IF_15	IF_23
0x4002169	            0x85c0	                           test eax, eax	      1414	buffer.c	FUNCTION_19	IF_15	IF_23
0x400216b	            0x740a	                            je 0x4002177	      1414	buffer.c	FUNCTION_19	IF_15	IF_23
0x400216d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1414	buffer.c	FUNCTION_19	IF_15	IF_23
0x4002171	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      1414	buffer.c	FUNCTION_19	IF_15	IF_23
0x4002175	            0x7515	                           jne 0x400218c	      1414	buffer.c	FUNCTION_19	IF_15	IF_23
0x4002177	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1413	buffer.c	FUNCTION_19	IF_15	CALL_23
0x400217b	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1413	buffer.c	FUNCTION_19	IF_15	CALL_23
0x400217f	        0x488945c8	             mov qword [rbp - 0x38], rax	      1413	buffer.c	FUNCTION_19	IF_15	CALL_23
0x4002183	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      1413	buffer.c	FUNCTION_19	IF_15	CALL_23
0x4002188	            0x75d5	                           jne 0x400215f	      1413	buffer.c	FUNCTION_19	IF_15	CALL_23
0x400218a	            0xeb01	                           jmp 0x400218d	      1413	buffer.c	FUNCTION_19	IF_15	CALL_23
0x400218c	              0x90	                                     nop	      1415	buffer.c	FUNCTION_19	IF_15	IF_23
0x400218d	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      1416	buffer.c	FUNCTION_19	IF_15	IF_24
0x4002192	            0x753c	                           jne 0x40021d0	      1416	buffer.c	FUNCTION_19	IF_15	IF_24
0x4002194	    0x488b05000000	            mov rax, qword [0x0400219b] 	      1416	buffer.c	FUNCTION_19	IF_15	IF_24
0x400219b	        0x483945c0	            cmp qword [rbp - 0x40], rax 	      1416	buffer.c	FUNCTION_19	IF_15	IF_24
0x400219f	            0x752f	                           jne 0x40021d0	      1416	buffer.c	FUNCTION_19	IF_15	IF_24
0x40021a1	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      1417	buffer.c	FUNCTION_19	IF_15	CALL_24
0x40021a4	          0x8b459c	             mov eax, dword [rbp - 0x64]	      1417	buffer.c	FUNCTION_19	IF_15	CALL_24
0x40021a7	            0x89c6	                            mov esi, eax	      1417	buffer.c	FUNCTION_19	IF_15	CALL_24
0x40021a9	      0xbf01000000	                              mov edi, 1	      1417	buffer.c	FUNCTION_19	IF_15	CALL_24
0x40021ae	      0xe8b6faffff	                   call sym.empty_curbuf	      1417	buffer.c	FUNCTION_19	IF_15	CALL_24
0x40021b3	      0xe925050000	                           jmp 0x40026dd	      1417	buffer.c	FUNCTION_19	IF_15	CALL_24
0x40021b8	    0x488b05000000	            mov rax, qword [0x040021bf] 	      1428	buffer.c	FUNCTION_19	IF_15	WHILE_4	IF_25	CALL_25
0x40021bf	      0xbe00000000	                              mov esi, 0	      1428	buffer.c	FUNCTION_19	IF_15	WHILE_4	IF_25	CALL_25
0x40021c4	          0x4889c7	                            mov rdi, rax	      1428	buffer.c	FUNCTION_19	IF_15	WHILE_4	IF_25	CALL_25
0x40021c7	      0xe800000000	                          call 0x40021cc	      1428	buffer.c	FUNCTION_19	IF_15	WHILE_4	IF_25	CALL_25
0x40021cc	            0x85c0	                           test eax, eax	      1428	buffer.c	FUNCTION_19	IF_15	WHILE_4	IF_25	CALL_25
0x40021ce	            0x7454	                            je 0x4002224	      1428	buffer.c	FUNCTION_19	IF_15	WHILE_4	IF_25	CALL_25
0x40021d0	    0x488b05000000	            mov rax, qword [0x040021d7] 	      1424	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x40021d7	        0x483945c0	            cmp qword [rbp - 0x40], rax 	      1424	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x40021db	            0x7548	                           jne 0x4002225	      1424	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x40021dd	    0x488b05000000	            mov rax, qword [0x040021e4] 	      1425	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x40021e4	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1425	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x40021e7	            0x85c0	                           test eax, eax	      1425	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x40021e9	            0x753a	                           jne 0x4002225	      1425	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x40021eb	    0x488b05000000	            mov rax, qword [0x040021f2] 	      1425	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x40021f2	        0x488b4008	                mov rax, qword [rax + 8]	      1425	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x40021f6	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	      1425	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x40021fc	            0x85c0	                           test eax, eax	      1425	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x40021fe	            0x7f25	                            jg 0x4002225	      1425	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x4002200	    0x488b15000000	            mov rdx, qword [0x04002207] 	      1426	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x4002207	    0x488b05000000	            mov rax, qword [0x0400220e] 	      1426	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x400220e	          0x4839c2	                            cmp rdx, rax	      1426	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x4002211	            0x75a5	                           jne 0x40021b8	      1426	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x4002213	    0x488b05000000	            mov rax, qword [0x0400221a] 	      1426	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x400221a	          0x488b00	                    mov rax, qword [rax]	      1426	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x400221d	          0x4885c0	                           test rax, rax	      1426	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x4002220	            0x7596	                           jne 0x40021b8	      1426	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x4002222	            0xeb01	                           jmp 0x4002225	      1426	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x4002224	              0x90	                                     nop	      1429	buffer.c	FUNCTION_19	IF_15	WHILE_4	IF_25
0x4002225	    0x488b05000000	            mov rax, qword [0x0400222c] 	      1435	buffer.c	FUNCTION_19	IF_15	IF_26
0x400222c	        0x483945c0	            cmp qword [rbp - 0x40], rax 	      1435	buffer.c	FUNCTION_19	IF_15	IF_26
0x4002230	            0x745c	                            je 0x400228e	      1435	buffer.c	FUNCTION_19	IF_15	IF_26
0x4002232	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1437	buffer.c	FUNCTION_19	IF_15	IF_26	CALL_26
0x4002236	      0xbe00000000	                              mov esi, 0	      1437	buffer.c	FUNCTION_19	IF_15	IF_26	CALL_26
0x400223b	          0x4889c7	                            mov rdi, rax	      1437	buffer.c	FUNCTION_19	IF_15	IF_26	CALL_26
0x400223e	      0xe800000000	                          call 0x4002243	      1437	buffer.c	FUNCTION_19	IF_15	IF_26	CALL_26
0x4002243	    0x488b05000000	            mov rax, qword [0x0400224a] 	      1438	buffer.c	FUNCTION_19	IF_15	IF_26	IF_27	CALL_27
0x400224a	        0x483945c0	            cmp qword [rbp - 0x40], rax 	      1438	buffer.c	FUNCTION_19	IF_15	IF_26	IF_27	CALL_27
0x400224e	            0x7434	                            je 0x4002284	      1438	buffer.c	FUNCTION_19	IF_15	IF_26	IF_27	CALL_27
0x4002250	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1438	buffer.c	FUNCTION_19	IF_15	IF_26	IF_27	CALL_27
0x4002254	          0x4889c7	                            mov rdi, rax	      1438	buffer.c	FUNCTION_19	IF_15	IF_26	IF_27	CALL_27
0x4002257	      0xe800000000	                          call 0x400225c	      1438	buffer.c	FUNCTION_19	IF_15	IF_26	IF_27	CALL_27
0x400225c	            0x85c0	                           test eax, eax	      1438	buffer.c	FUNCTION_19	IF_15	IF_26	IF_27	CALL_27
0x400225e	            0x7424	                            je 0x4002284	      1438	buffer.c	FUNCTION_19	IF_15	IF_26	IF_27	CALL_27
0x4002260	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1438	buffer.c	FUNCTION_19	IF_15	IF_26	IF_27	CALL_27
0x4002264	          0x8b4078	            mov eax, dword [rax + 0x78] 	      1438	buffer.c	FUNCTION_19	IF_15	IF_26	IF_27	CALL_27
0x4002267	            0x85c0	                           test eax, eax	      1438	buffer.c	FUNCTION_19	IF_15	IF_26	IF_27	CALL_27
0x4002269	            0x7f19	                            jg 0x4002284	      1438	buffer.c	FUNCTION_19	IF_15	IF_26	IF_27	CALL_27
0x400226b	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      1439	buffer.c	FUNCTION_19	IF_15	IF_26	CALL_28
0x400226e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1439	buffer.c	FUNCTION_19	IF_15	IF_26	CALL_28
0x4002272	      0xb900000000	                              mov ecx, 0	      1439	buffer.c	FUNCTION_19	IF_15	IF_26	CALL_28
0x4002277	          0x4889c6	                            mov rsi, rax	      1439	buffer.c	FUNCTION_19	IF_15	IF_26	CALL_28
0x400227a	      0xbf00000000	                              mov edi, 0	      1439	buffer.c	FUNCTION_19	IF_15	IF_26	CALL_28
0x400227f	      0xe800000000	                          call 0x4002284	      1439	buffer.c	FUNCTION_19	IF_15	IF_26	CALL_28
0x4002284	      0xb801000000	                              mov eax, 1	      1440	buffer.c	FUNCTION_19	IF_15	IF_26
0x4002289	      0xe94f040000	                           jmp 0x40026dd	      1440	buffer.c	FUNCTION_19	IF_15	IF_26
0x400228e	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      1453	buffer.c	FUNCTION_19	IF_15
0x4002296	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      1454	buffer.c	FUNCTION_19	IF_15
0x400229e	    0x488b05000000	            mov rax, qword [0x040022a5] 	      1455	buffer.c	FUNCTION_19	IF_15	IF_28	CALL_29
0x40022a5	          0x4885c0	                           test rax, rax	      1455	buffer.c	FUNCTION_19	IF_15	IF_28	CALL_29
0x40022a8	            0x741e	                            je 0x40022c8	      1455	buffer.c	FUNCTION_19	IF_15	IF_28	CALL_29
0x40022aa	      0xbf00000000	                              mov edi, 0	      1455	buffer.c	FUNCTION_19	IF_15	IF_28	CALL_29
0x40022af	      0xe800000000	                          call 0x40022b4	      1455	buffer.c	FUNCTION_19	IF_15	IF_28	CALL_29
0x40022b4	            0x85c0	                           test eax, eax	      1455	buffer.c	FUNCTION_19	IF_15	IF_28	CALL_29
0x40022b6	            0x7410	                            je 0x40022c8	      1455	buffer.c	FUNCTION_19	IF_15	IF_28	CALL_29
0x40022b8	    0x488b05000000	            mov rax, qword [0x040022bf] 	      1456	buffer.c	FUNCTION_19	IF_15	IF_28
0x40022bf	        0x488945c0	             mov qword [rbp - 0x40], rax	      1456	buffer.c	FUNCTION_19	IF_15	IF_28
0x40022c3	      0xe93c010000	                           jmp 0x4002404	      1456	buffer.c	FUNCTION_19	IF_15	IF_28
0x40022c8	    0x488b05000000	            mov rax, qword [0x040022cf] 	      1458	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29
0x40022cf	    0x8b8040150000	          mov eax, dword [rax + 0x1540] 	      1458	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29
0x40022d5	            0x85c0	                           test eax, eax	      1458	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29
0x40022d7	     0xf8e27010000	                           jle 0x4002404	      1458	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29
0x40022dd	    0x488b05000000	            mov rax, qword [0x040022e4] 	      1462	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29
0x40022e4	    0x8b8044150000	          mov eax, dword [rax + 0x1544] 	      1462	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29
0x40022ea	          0x83e801	                              sub eax, 1	      1462	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29
0x40022ed	          0x8945b8	             mov dword [rbp - 0x48], eax	      1462	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29
0x40022f0	        0x837db800	               cmp dword [rbp - 0x48], 0	      1463	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	IF_30
0x40022f4	            0x7913	                           jns 0x4002309	      1463	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	IF_30
0x40022f6	    0x488b05000000	            mov rax, qword [0x040022fd] 	      1464	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	IF_30
0x40022fd	    0x8b8040150000	          mov eax, dword [rax + 0x1540] 	      1464	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	IF_30
0x4002303	          0x83e801	                              sub eax, 1	      1464	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	IF_30
0x4002306	          0x8945b8	             mov dword [rbp - 0x48], eax	      1464	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	IF_30
0x4002309	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1466	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29
0x400230c	          0x8945b4	             mov dword [rbp - 0x4c], eax	      1466	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29
0x400230f	      0xe9d1000000	                           jmp 0x40023e5	      1467	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5
0x4002314	    0x488b0d000000	            mov rcx, qword [0x0400231b] 	      1469	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	CALL_30
0x400231b	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1469	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	CALL_30
0x400231e	          0x4863d0	                         movsxd rdx, eax	      1469	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	CALL_30
0x4002321	          0x4889d0	                            mov rax, rdx	      1469	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	CALL_30
0x4002324	        0x48c1e002	                              shl rax, 2	      1469	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	CALL_30
0x4002328	          0x4801d0	                            add rax, rdx	      1469	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	CALL_30
0x400232b	        0x48c1e003	                              shl rax, 3	      1469	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	CALL_30
0x400232f	          0x4801c8	                            add rax, rcx	      1469	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	CALL_30
0x4002332	    0x4805b0050000	                          add rax, 0x5b0	      1469	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	CALL_30
0x4002338	            0x8b00	                    mov eax, dword [rax]	      1469	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	CALL_30
0x400233a	            0x89c7	                            mov edi, eax	      1469	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	CALL_30
0x400233c	      0xe800000000	                          call 0x4002341	      1469	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	CALL_30
0x4002341	        0x488945c0	             mov qword [rbp - 0x40], rax	      1469	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	CALL_30
0x4002345	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1470	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_31
0x400234a	            0x7449	                            je 0x4002395	      1470	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_31
0x400234c	    0x488b05000000	            mov rax, qword [0x04002353] 	      1472	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_31	IF_32
0x4002353	        0x483945c0	            cmp qword [rbp - 0x40], rax 	      1472	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_31	IF_32
0x4002357	            0x740e	                            je 0x4002367	      1472	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_31	IF_32
0x4002359	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1472	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_31	IF_32
0x400235d	    0x8b8024140000	          mov eax, dword [rax + 0x1424] 	      1472	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_31	IF_32
0x4002363	            0x85c0	                           test eax, eax	      1472	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_31	IF_32
0x4002365	            0x750a	                           jne 0x4002371	      1472	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_31	IF_32
0x4002367	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      1473	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_31	IF_32
0x400236f	            0xeb24	                           jmp 0x4002395	      1473	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_31	IF_32
0x4002371	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1474	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_31	ELSE_8	IF_33
0x4002375	        0x488b4008	                mov rax, qword [rax + 8]	      1474	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_31	ELSE_8	IF_33
0x4002379	          0x4885c0	                           test rax, rax	      1474	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_31	ELSE_8	IF_33
0x400237c	            0x7517	                           jne 0x4002395	      1474	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_31	ELSE_8	IF_33
0x400237e	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      1477	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_31	ELSE_8	IF_33	IF_34
0x4002383	            0x7508	                           jne 0x400238d	      1477	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_31	ELSE_8	IF_33	IF_34
0x4002385	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1478	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_31	ELSE_8	IF_33	IF_34
0x4002389	        0x488945c8	             mov qword [rbp - 0x38], rax	      1478	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_31	ELSE_8	IF_33	IF_34
0x400238d	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      1479	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_31	ELSE_8	IF_33
0x4002395	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1482	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_35
0x400239a	            0x7561	                           jne 0x40023fd	      1482	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_35
0x400239c	        0x837db800	               cmp dword [rbp - 0x48], 0	      1485	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_36
0x40023a0	            0x751e	                           jne 0x40023c0	      1485	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_36
0x40023a2	    0x488b05000000	            mov rax, qword [0x040023a9] 	      1485	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_36
0x40023a9	    0x8b9044150000	          mov edx, dword [rax + 0x1544] 	      1485	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_36
0x40023af	    0x488b05000000	            mov rax, qword [0x040023b6] 	      1485	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_36
0x40023b6	    0x8b8040150000	          mov eax, dword [rax + 0x1540] 	      1485	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_36
0x40023bc	            0x39c2	                            cmp edx, eax	      1485	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_36
0x40023be	            0x7440	                            je 0x4002400	      1485	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_36
0x40023c0	        0x836db801	               sub dword [rbp - 0x48], 1	      1487	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_37
0x40023c4	        0x837db800	               cmp dword [rbp - 0x48], 0	      1487	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_37
0x40023c8	            0x7913	                           jns 0x40023dd	      1487	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_37
0x40023ca	    0x488b05000000	            mov rax, qword [0x040023d1] 	      1488	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_37
0x40023d1	    0x8b8040150000	          mov eax, dword [rax + 0x1540] 	      1488	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_37
0x40023d7	          0x83e801	                              sub eax, 1	      1488	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_37
0x40023da	          0x8945b8	             mov dword [rbp - 0x48], eax	      1488	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_37
0x40023dd	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1489	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_38
0x40023e0	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	      1489	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_38
0x40023e3	            0x741e	                            je 0x4002403	      1489	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_38
0x40023e5	    0x488b05000000	            mov rax, qword [0x040023ec] 	      1467	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5
0x40023ec	    0x8b8044150000	          mov eax, dword [rax + 0x1544] 	      1467	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5
0x40023f2	          0x3b45b8	             cmp eax, dword [rbp - 0x48]	      1467	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5
0x40023f5	     0xf8519ffffff	                           jne 0x4002314	      1467	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5
0x40023fb	            0xeb07	                           jmp 0x4002404	      1467	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5
0x40023fd	              0x90	                                     nop	      1483	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_35
0x40023fe	            0xeb04	                           jmp 0x4002404	      1483	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_35
0x4002400	              0x90	                                     nop	      1486	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_36
0x4002401	            0xeb01	                           jmp 0x4002404	      1486	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_36
0x4002403	              0x90	                                     nop	      1490	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_38
0x4002404	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1495	buffer.c	FUNCTION_19	IF_15	IF_39
0x4002409	     0xf85b0000000	                           jne 0x40024bf	      1495	buffer.c	FUNCTION_19	IF_15	IF_39
0x400240f	    0xc745b4010000	               mov dword [rbp - 0x4c], 1	      1497	buffer.c	FUNCTION_19	IF_15	IF_39
0x4002416	    0x488b05000000	            mov rax, qword [0x0400241d] 	      1498	buffer.c	FUNCTION_19	IF_15	IF_39
0x400241d	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1498	buffer.c	FUNCTION_19	IF_15	IF_39
0x4002421	        0x488945c0	             mov qword [rbp - 0x40], rax	      1498	buffer.c	FUNCTION_19	IF_15	IF_39
0x4002425	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1501	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_40
0x400242a	            0x7522	                           jne 0x400244e	      1501	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_40
0x400242c	        0x837db400	               cmp dword [rbp - 0x4c], 0	      1503	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_40	IF_41
0x4002430	     0xf8485000000	                            je 0x40024bb	      1503	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_40	IF_41
0x4002436	    0x488b05000000	            mov rax, qword [0x0400243d] 	      1505	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_40
0x400243d	        0x488b4070	            mov rax, qword [rax + 0x70] 	      1505	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_40
0x4002441	        0x488945c0	             mov qword [rbp - 0x40], rax	      1505	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_40
0x4002445	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	      1506	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_40
0x400244c	            0xeb68	                           jmp 0x40024b6	      1507	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_40
0x400244e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1510	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_42
0x4002452	    0x8b9058170000	          mov edx, dword [rax + 0x1758] 	      1510	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_42
0x4002458	    0x488b05000000	            mov rax, qword [0x0400245f] 	      1510	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_42
0x400245f	    0x8b8058170000	          mov eax, dword [rax + 0x1758] 	      1510	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_42
0x4002465	            0x39c2	                            cmp edx, eax	      1510	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_42
0x4002467	            0x752a	                           jne 0x4002493	      1510	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_42
0x4002469	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1510	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_42
0x400246d	    0x8b8024140000	          mov eax, dword [rax + 0x1424] 	      1510	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_42
0x4002473	            0x85c0	                           test eax, eax	      1510	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_42
0x4002475	            0x741c	                            je 0x4002493	      1510	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_42
0x4002477	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1512	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_42	IF_43
0x400247b	        0x488b4008	                mov rax, qword [rax + 8]	      1512	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_42	IF_43
0x400247f	          0x4885c0	                           test rax, rax	      1512	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_42	IF_43
0x4002482	            0x753a	                           jne 0x40024be	      1512	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_42	IF_43
0x4002484	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      1514	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_42	IF_44
0x4002489	            0x7508	                           jne 0x4002493	      1514	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_42	IF_44
0x400248b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1515	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_42	IF_44
0x400248f	        0x488945c8	             mov qword [rbp - 0x38], rax	      1515	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_42	IF_44
0x4002493	        0x837db400	               cmp dword [rbp - 0x4c], 0	      1517	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_45
0x4002497	            0x7411	                            je 0x40024aa	      1517	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_45
0x4002499	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1518	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_45
0x400249d	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1518	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_45
0x40024a1	        0x488945c0	             mov qword [rbp - 0x40], rax	      1518	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_45
0x40024a5	      0xe97bffffff	                           jmp 0x4002425	      1518	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_45
0x40024aa	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1520	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	ELSE_9
0x40024ae	        0x488b4070	            mov rax, qword [rax + 0x70] 	      1520	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	ELSE_9
0x40024b2	        0x488945c0	             mov qword [rbp - 0x40], rax	      1520	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	ELSE_9
0x40024b6	      0xe96affffff	                           jmp 0x4002425	      1521	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1
0x40024bb	              0x90	                                     nop	      1504	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_40	IF_41
0x40024bc	            0xeb01	                           jmp 0x40024bf	      1504	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_40	IF_41
0x40024be	              0x90	                                     nop	      1513	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_42	IF_43
0x40024bf	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1523	buffer.c	FUNCTION_19	IF_15	IF_46
0x40024c4	            0x7508	                           jne 0x40024ce	      1523	buffer.c	FUNCTION_19	IF_15	IF_46
0x40024c6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1524	buffer.c	FUNCTION_19	IF_15	IF_46
0x40024ca	        0x488945c0	             mov qword [rbp - 0x40], rax	      1524	buffer.c	FUNCTION_19	IF_15	IF_46
0x40024ce	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1525	buffer.c	FUNCTION_19	IF_15	IF_47
0x40024d3	            0x753e	                           jne 0x4002513	      1525	buffer.c	FUNCTION_19	IF_15	IF_47
0x40024d5	    0x488b05000000	            mov rax, qword [0x040024dc] 	      1527	buffer.c	FUNCTION_19	IF_15	IF_47	CALL_31
0x40024dc	        0x488945c0	             mov qword [rbp - 0x40], rax	      1527	buffer.c	FUNCTION_19	IF_15	IF_47	CALL_31
0x40024e0	            0xeb27	                           jmp 0x4002509	      1527	buffer.c	FUNCTION_19	IF_15	IF_47	CALL_31
0x40024e2	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1528	buffer.c	FUNCTION_19	IF_15	IF_47	IF_48
0x40024e6	    0x8b8024140000	          mov eax, dword [rax + 0x1424] 	      1528	buffer.c	FUNCTION_19	IF_15	IF_47	IF_48
0x40024ec	            0x85c0	                           test eax, eax	      1528	buffer.c	FUNCTION_19	IF_15	IF_47	IF_48
0x40024ee	            0x740d	                            je 0x40024fd	      1528	buffer.c	FUNCTION_19	IF_15	IF_47	IF_48
0x40024f0	    0x488b05000000	            mov rax, qword [0x040024f7] 	      1528	buffer.c	FUNCTION_19	IF_15	IF_47	IF_48
0x40024f7	        0x483945c0	            cmp qword [rbp - 0x40], rax 	      1528	buffer.c	FUNCTION_19	IF_15	IF_47	IF_48
0x40024fb	            0x7515	                           jne 0x4002512	      1528	buffer.c	FUNCTION_19	IF_15	IF_47	IF_48
0x40024fd	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1527	buffer.c	FUNCTION_19	IF_15	IF_47	CALL_31
0x4002501	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1527	buffer.c	FUNCTION_19	IF_15	IF_47	CALL_31
0x4002505	        0x488945c0	             mov qword [rbp - 0x40], rax	      1527	buffer.c	FUNCTION_19	IF_15	IF_47	CALL_31
0x4002509	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1527	buffer.c	FUNCTION_19	IF_15	IF_47	CALL_31
0x400250e	            0x75d2	                           jne 0x40024e2	      1527	buffer.c	FUNCTION_19	IF_15	IF_47	CALL_31
0x4002510	            0xeb01	                           jmp 0x4002513	      1527	buffer.c	FUNCTION_19	IF_15	IF_47	CALL_31
0x4002512	              0x90	                                     nop	      1529	buffer.c	FUNCTION_19	IF_15	IF_47	IF_48
0x4002513	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1531	buffer.c	FUNCTION_19	IF_15	IF_49
0x4002518	            0x7530	                           jne 0x400254a	      1531	buffer.c	FUNCTION_19	IF_15	IF_49
0x400251a	    0x488b05000000	            mov rax, qword [0x04002521] 	      1533	buffer.c	FUNCTION_19	IF_15	IF_49	IF_50
0x4002521	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1533	buffer.c	FUNCTION_19	IF_15	IF_49	IF_50
0x4002525	          0x4885c0	                           test rax, rax	      1533	buffer.c	FUNCTION_19	IF_15	IF_49	IF_50
0x4002528	            0x7411	                            je 0x400253b	      1533	buffer.c	FUNCTION_19	IF_15	IF_49	IF_50
0x400252a	    0x488b05000000	            mov rax, qword [0x04002531] 	      1534	buffer.c	FUNCTION_19	IF_15	IF_49	IF_50
0x4002531	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1534	buffer.c	FUNCTION_19	IF_15	IF_49	IF_50
0x4002535	        0x488945c0	             mov qword [rbp - 0x40], rax	      1534	buffer.c	FUNCTION_19	IF_15	IF_49	IF_50
0x4002539	            0xeb0f	                           jmp 0x400254a	      1534	buffer.c	FUNCTION_19	IF_15	IF_49	IF_50
0x400253b	    0x488b05000000	            mov rax, qword [0x04002542] 	      1536	buffer.c	FUNCTION_19	IF_15	IF_49	ELSE_10
0x4002542	        0x488b4070	            mov rax, qword [rax + 0x70] 	      1536	buffer.c	FUNCTION_19	IF_15	IF_49	ELSE_10
0x4002546	        0x488945c0	             mov qword [rbp - 0x40], rax	      1536	buffer.c	FUNCTION_19	IF_15	IF_49	ELSE_10
0x400254a	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1540	buffer.c	FUNCTION_19	ELSE_10	IF_51
0x400254f	            0x7517	                           jne 0x4002568	      1540	buffer.c	FUNCTION_19	ELSE_10	IF_51
0x4002551	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      1544	buffer.c	FUNCTION_19	ELSE_10	IF_51	CALL_32
0x4002554	          0x8b459c	             mov eax, dword [rbp - 0x64]	      1544	buffer.c	FUNCTION_19	ELSE_10	IF_51	CALL_32
0x4002557	            0x89c6	                            mov esi, eax	      1544	buffer.c	FUNCTION_19	ELSE_10	IF_51	CALL_32
0x4002559	      0xbf00000000	                              mov edi, 0	      1544	buffer.c	FUNCTION_19	ELSE_10	IF_51	CALL_32
0x400255e	      0xe806f7ffff	                   call sym.empty_curbuf	      1544	buffer.c	FUNCTION_19	ELSE_10	IF_51	CALL_32
0x4002563	      0xe975010000	                           jmp 0x40026dd	      1544	buffer.c	FUNCTION_19	ELSE_10	IF_51	CALL_32
0x4002568	        0x837dac01	               cmp dword [rbp - 0x54], 1	      1550	buffer.c	FUNCTION_19	IF_52
0x400256c	            0x756d	                           jne 0x40025db	      1550	buffer.c	FUNCTION_19	IF_52
0x400256e	    0x8b0500000000	            mov eax, dword [0x04002574] 	      1554	buffer.c	FUNCTION_19	IF_52	IF_53	CALL_33
0x4002574	          0x83e001	                              and eax, 1	      1554	buffer.c	FUNCTION_19	IF_52	IF_53	CALL_33
0x4002577	            0x85c0	                           test eax, eax	      1554	buffer.c	FUNCTION_19	IF_52	IF_53	CALL_33
0x4002579	            0x741b	                            je 0x4002596	      1554	buffer.c	FUNCTION_19	IF_52	IF_53	CALL_33
0x400257b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1554	buffer.c	FUNCTION_19	IF_52	IF_53	CALL_33
0x400257f	          0x4889c7	                            mov rdi, rax	      1554	buffer.c	FUNCTION_19	IF_52	IF_53	CALL_33
0x4002582	      0xe800000000	                          call 0x4002587	      1554	buffer.c	FUNCTION_19	IF_52	IF_53	CALL_33
0x4002587	          0x4885c0	                           test rax, rax	      1554	buffer.c	FUNCTION_19	IF_52	IF_53	CALL_33
0x400258a	            0x740a	                            je 0x4002596	      1554	buffer.c	FUNCTION_19	IF_52	IF_53	CALL_33
0x400258c	      0xb801000000	                              mov eax, 1	      1555	buffer.c	FUNCTION_19	IF_52	IF_53
0x4002591	      0xe947010000	                           jmp 0x40026dd	      1555	buffer.c	FUNCTION_19	IF_52	IF_53
0x4002596	    0x8b0500000000	            mov eax, dword [0x0400259c] 	      1558	buffer.c	FUNCTION_19	IF_52	IF_54	CALL_34
0x400259c	          0x83e002	                              and eax, 2	      1558	buffer.c	FUNCTION_19	IF_52	IF_54	CALL_34
0x400259f	            0x85c0	                           test eax, eax	      1558	buffer.c	FUNCTION_19	IF_52	IF_54	CALL_34
0x40025a1	            0x741b	                            je 0x40025be	      1558	buffer.c	FUNCTION_19	IF_52	IF_54	CALL_34
0x40025a3	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1558	buffer.c	FUNCTION_19	IF_52	IF_54	CALL_34
0x40025a7	          0x4889c7	                            mov rdi, rax	      1558	buffer.c	FUNCTION_19	IF_52	IF_54	CALL_34
0x40025aa	      0xe800000000	                          call 0x40025af	      1558	buffer.c	FUNCTION_19	IF_52	IF_54	CALL_34
0x40025af	          0x4885c0	                           test rax, rax	      1558	buffer.c	FUNCTION_19	IF_52	IF_54	CALL_34
0x40025b2	            0x740a	                            je 0x40025be	      1558	buffer.c	FUNCTION_19	IF_52	IF_54	CALL_34
0x40025b4	      0xb801000000	                              mov eax, 1	      1559	buffer.c	FUNCTION_19	IF_52	IF_54
0x40025b9	      0xe91f010000	                           jmp 0x40026dd	      1559	buffer.c	FUNCTION_19	IF_52	IF_54
0x40025be	      0xbe00000000	                              mov esi, 0	      1560	buffer.c	FUNCTION_19	IF_52	IF_55	CALL_35
0x40025c3	      0xbf00000000	                              mov edi, 0	      1560	buffer.c	FUNCTION_19	IF_52	IF_55	CALL_35
0x40025c8	      0xe800000000	                          call 0x40025cd	      1560	buffer.c	FUNCTION_19	IF_52	IF_55	CALL_35
0x40025cd	            0x85c0	                           test eax, eax	      1560	buffer.c	FUNCTION_19	IF_52	IF_55	CALL_35
0x40025cf	            0x750a	                           jne 0x40025db	      1560	buffer.c	FUNCTION_19	IF_52	IF_55	CALL_35
0x40025d1	      0xb800000000	                              mov eax, 0	      1561	buffer.c	FUNCTION_19	IF_52	IF_55
0x40025d6	      0xe902010000	                           jmp 0x40026dd	      1561	buffer.c	FUNCTION_19	IF_52	IF_55
0x40025db	    0x488b05000000	            mov rax, qword [0x040025e2] 	      1565	buffer.c	FUNCTION_19	IF_56
0x40025e2	        0x483945c0	            cmp qword [rbp - 0x40], rax 	      1565	buffer.c	FUNCTION_19	IF_56
0x40025e6	            0x750a	                           jne 0x40025f2	      1565	buffer.c	FUNCTION_19	IF_56
0x40025e8	      0xb801000000	                              mov eax, 1	      1566	buffer.c	FUNCTION_19	IF_56
0x40025ed	      0xe9eb000000	                           jmp 0x40026dd	      1566	buffer.c	FUNCTION_19	IF_56
0x40025f2	        0x837dac00	               cmp dword [rbp - 0x54], 0	      1571	buffer.c	FUNCTION_19	IF_57	CALL_36
0x40025f6	     0xf8593000000	                           jne 0x400268f	      1571	buffer.c	FUNCTION_19	IF_57	CALL_36
0x40025fc	    0x488b05000000	            mov rax, qword [0x04002603] 	      1571	buffer.c	FUNCTION_19	IF_57	CALL_36
0x4002603	          0x8b559c	             mov edx, dword [rbp - 0x64]	      1571	buffer.c	FUNCTION_19	IF_57	CALL_36
0x4002606	            0x89d6	                            mov esi, edx	      1571	buffer.c	FUNCTION_19	IF_57	CALL_36
0x4002608	          0x4889c7	                            mov rdi, rax	      1571	buffer.c	FUNCTION_19	IF_57	CALL_36
0x400260b	      0xe800000000	                          call 0x4002610	      1571	buffer.c	FUNCTION_19	IF_57	CALL_36
0x4002610	            0x85c0	                           test eax, eax	      1571	buffer.c	FUNCTION_19	IF_57	CALL_36
0x4002612	            0x757b	                           jne 0x400268f	      1571	buffer.c	FUNCTION_19	IF_57	CALL_36
0x4002614	    0x8b0500000000	            mov eax, dword [0x0400261a] 	      1574	buffer.c	FUNCTION_19	IF_57	IF_58
0x400261a	            0x85c0	                           test eax, eax	      1574	buffer.c	FUNCTION_19	IF_57	IF_58
0x400261c	            0x750a	                           jne 0x4002628	      1574	buffer.c	FUNCTION_19	IF_57	IF_58
0x400261e	    0x8b0500000000	            mov eax, dword [0x04002624] 	      1574	buffer.c	FUNCTION_19	IF_57	IF_58
0x4002624	            0x85c0	                           test eax, eax	      1574	buffer.c	FUNCTION_19	IF_57	IF_58
0x4002626	            0x7448	                            je 0x4002670	      1574	buffer.c	FUNCTION_19	IF_57	IF_58
0x4002628	    0x8b0500000000	            mov eax, dword [0x0400262e] 	      1574	buffer.c	FUNCTION_19	IF_57	IF_58
0x400262e	            0x85c0	                           test eax, eax	      1574	buffer.c	FUNCTION_19	IF_57	IF_58
0x4002630	            0x743e	                            je 0x4002670	      1574	buffer.c	FUNCTION_19	IF_57	IF_58
0x4002632	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1578	buffer.c	FUNCTION_19	IF_57	IF_58	CALL_37
0x4002636	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1578	buffer.c	FUNCTION_19	IF_57	IF_58	CALL_37
0x400263a	          0x4889d6	                            mov rsi, rdx	      1578	buffer.c	FUNCTION_19	IF_57	IF_58	CALL_37
0x400263d	          0x4889c7	                            mov rdi, rax	      1578	buffer.c	FUNCTION_19	IF_57	IF_58	CALL_37
0x4002640	      0xe800000000	                          call 0x4002645	      1578	buffer.c	FUNCTION_19	IF_57	IF_58	CALL_37
0x4002645	    0x488b05000000	            mov rax, qword [0x0400264c] 	      1579	buffer.c	FUNCTION_19	IF_57	IF_58	CALL_38
0x400264c	      0xbe00000000	                              mov esi, 0	      1579	buffer.c	FUNCTION_19	IF_57	IF_58	CALL_38
0x4002651	          0x4889c7	                            mov rdi, rax	      1579	buffer.c	FUNCTION_19	IF_57	IF_58	CALL_38
0x4002654	      0xe800000000	                          call 0x4002659	      1579	buffer.c	FUNCTION_19	IF_57	IF_58	CALL_38
0x4002659	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1580	buffer.c	FUNCTION_19	IF_57	IF_58	IF_59	CALL_39
0x400265d	          0x4889c7	                            mov rdi, rax	      1580	buffer.c	FUNCTION_19	IF_57	IF_58	IF_59	CALL_39
0x4002660	      0xe800000000	                          call 0x4002665	      1580	buffer.c	FUNCTION_19	IF_57	IF_58	IF_59	CALL_39
0x4002665	            0x85c0	                           test eax, eax	      1580	buffer.c	FUNCTION_19	IF_57	IF_58	IF_59	CALL_39
0x4002667	            0x7507	                           jne 0x4002670	      1580	buffer.c	FUNCTION_19	IF_57	IF_58	IF_59	CALL_39
0x4002669	      0xb800000000	                              mov eax, 0	      1582	buffer.c	FUNCTION_19	IF_57	IF_58	IF_59
0x400266e	            0xeb6d	                           jmp 0x40026dd	      1582	buffer.c	FUNCTION_19	IF_57	IF_58	IF_59
0x4002670	    0x488b05000000	            mov rax, qword [0x04002677] 	      1584	buffer.c	FUNCTION_19	IF_57	IF_60	CALL_40
0x4002677	          0x4889c7	                            mov rdi, rax	      1584	buffer.c	FUNCTION_19	IF_57	IF_60	CALL_40
0x400267a	      0xe800000000	                          call 0x400267f	      1584	buffer.c	FUNCTION_19	IF_57	IF_60	CALL_40
0x400267f	            0x85c0	                           test eax, eax	      1584	buffer.c	FUNCTION_19	IF_57	IF_60	CALL_40
0x4002681	            0x740c	                            je 0x400268f	      1584	buffer.c	FUNCTION_19	IF_57	IF_60	CALL_40
0x4002683	      0xe800000000	                          call 0x4002688	      1587	buffer.c	FUNCTION_19	IF_57	IF_60	CALL_41
0x4002688	      0xb800000000	                              mov eax, 0	      1588	buffer.c	FUNCTION_19	IF_57	IF_60
0x400268d	            0xeb4e	                           jmp 0x40026dd	      1588	buffer.c	FUNCTION_19	IF_57	IF_60
0x400268f	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      1593	buffer.c	FUNCTION_19	CALL_42
0x4002692	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1593	buffer.c	FUNCTION_19	CALL_42
0x4002696	            0x89d6	                            mov esi, edx	      1593	buffer.c	FUNCTION_19	CALL_42
0x4002698	          0x4889c7	                            mov rdi, rax	      1593	buffer.c	FUNCTION_19	CALL_42
0x400269b	      0xe800000000	                          call 0x40026a0	      1593	buffer.c	FUNCTION_19	CALL_42
0x40026a0	        0x837dac01	               cmp dword [rbp - 0x54], 1	      1595	buffer.c	FUNCTION_19	IF_61
0x40026a4	            0x7522	                           jne 0x40026c8	      1595	buffer.c	FUNCTION_19	IF_61
0x40026a6	    0x488b05000000	            mov rax, qword [0x040026ad] 	      1597	buffer.c	FUNCTION_19	IF_61	CALL_43
0x40026ad	    0xc78088020000	              mov dword [rax + 0x288], 0	      1597	buffer.c	FUNCTION_19	IF_61	CALL_43
0x40026b7	    0x488b05000000	            mov rax, qword [0x040026be] 	      1597	buffer.c	FUNCTION_19	IF_61	CALL_43
0x40026be	    0xc780b0020000	              mov dword [rax + 0x2b0], 0	      1597	buffer.c	FUNCTION_19	IF_61	CALL_43
0x40026c8	      0xe800000000	                          call 0x40026cd	      1601	buffer.c	FUNCTION_19	IF_62	CALL_44
0x40026cd	            0x85c0	                           test eax, eax	      1601	buffer.c	FUNCTION_19	IF_62	CALL_44
0x40026cf	            0x7407	                            je 0x40026d8	      1601	buffer.c	FUNCTION_19	IF_62	CALL_44
0x40026d1	      0xb800000000	                              mov eax, 0	      1602	buffer.c	FUNCTION_19	IF_62
0x40026d6	            0xeb05	                           jmp 0x40026dd	      1602	buffer.c	FUNCTION_19	IF_62
0x40026d8	      0xb801000000	                              mov eax, 1	      1605	buffer.c	FUNCTION_19
0x40026dd	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      1606	buffer.c	FUNCTION_19
0x40026e1	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1606	buffer.c	FUNCTION_19
0x40026ea	            0x7405	                            je 0x40026f1	      1606	buffer.c	FUNCTION_19
0x40026ec	      0xe800000000	                          call 0x40026f1	      1606	buffer.c	FUNCTION_19
0x40026f1	        0x4883c468	                           add rsp, 0x68	      1606	buffer.c	FUNCTION_19
0x40026f5	              0x5b	                                 pop rbx	      1606	buffer.c	FUNCTION_19
0x40026f6	              0x5d	                                 pop rbp	      1606	buffer.c	FUNCTION_19
0x40026f7	              0xc3	                                     ret	      1606	buffer.c	FUNCTION_19
buf_set_name	CALL,5:functions,0:SWITCH,0:FOR,0:ELSE,0:DO,0:WHILE,0:IF,1	42
0x4005773	              0x55	                                push rbp	      3173	buffer.c	FUNCTION_48
0x4005774	          0x4889e5	                            mov rbp, rsp	      3173	buffer.c	FUNCTION_48
0x4005777	        0x4883ec20	                           sub rsp, 0x20	      3173	buffer.c	FUNCTION_48
0x400577b	          0x897dec	             mov dword [rbp - 0x14], edi	      3173	buffer.c	FUNCTION_48
0x400577e	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3173	buffer.c	FUNCTION_48
0x4005782	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3176	buffer.c	FUNCTION_48	CALL_1
0x4005785	            0x89c7	                            mov edi, eax	      3176	buffer.c	FUNCTION_48	CALL_1
0x4005787	      0xe800000000	                          call 0x400578c	      3176	buffer.c	FUNCTION_48	CALL_1
0x400578c	        0x488945f8	                mov qword [rbp - 8], rax	      3176	buffer.c	FUNCTION_48	CALL_1
0x4005790	      0x48837df800	                  cmp qword [rbp - 8], 0	      3177	buffer.c	FUNCTION_48	IF_1
0x4005795	     0xf848a000000	                            je 0x4005825	      3177	buffer.c	FUNCTION_48	IF_1
0x400579b	        0x488b45f8	                mov rax, qword [rbp - 8]	      3179	buffer.c	FUNCTION_48	IF_1	CALL_2
0x400579f	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      3179	buffer.c	FUNCTION_48	IF_1	CALL_2
0x40057a6	          0x4889c7	                            mov rdi, rax	      3179	buffer.c	FUNCTION_48	IF_1	CALL_2
0x40057a9	      0xe800000000	                          call 0x40057ae	      3179	buffer.c	FUNCTION_48	IF_1	CALL_2
0x40057ae	        0x488b45f8	                mov rax, qword [rbp - 8]	      3180	buffer.c	FUNCTION_48	IF_1	CALL_3
0x40057b2	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      3180	buffer.c	FUNCTION_48	IF_1	CALL_3
0x40057b9	          0x4889c7	                            mov rdi, rax	      3180	buffer.c	FUNCTION_48	IF_1	CALL_3
0x40057bc	      0xe800000000	                          call 0x40057c1	      3180	buffer.c	FUNCTION_48	IF_1	CALL_3
0x40057c1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3181	buffer.c	FUNCTION_48	IF_1	CALL_4
0x40057c5	          0x4889c7	                            mov rdi, rax	      3181	buffer.c	FUNCTION_48	IF_1	CALL_4
0x40057c8	      0xe800000000	                          call 0x40057cd	      3181	buffer.c	FUNCTION_48	IF_1	CALL_4
0x40057cd	          0x4889c2	                            mov rdx, rax	      3181	buffer.c	FUNCTION_48	IF_1	CALL_4
0x40057d0	        0x488b45f8	                mov rax, qword [rbp - 8]	      3181	buffer.c	FUNCTION_48	IF_1	CALL_4
0x40057d4	    0x488990880000	             mov qword [rax + 0x88], rdx	      3181	buffer.c	FUNCTION_48	IF_1	CALL_4
0x40057db	        0x488b45f8	                mov rax, qword [rbp - 8]	      3182	buffer.c	FUNCTION_48	IF_1
0x40057df	    0x48c780900000	               mov qword [rax + 0x90], 0	      3182	buffer.c	FUNCTION_48	IF_1
0x40057ea	        0x488b45f8	                mov rax, qword [rbp - 8]	      3185	buffer.c	FUNCTION_48	IF_1	CALL_5
0x40057ee	    0x488d90900000	                   lea rdx, [rax + 0x90]	      3185	buffer.c	FUNCTION_48	IF_1	CALL_5
0x40057f5	        0x488b45f8	                mov rax, qword [rbp - 8]	      3185	buffer.c	FUNCTION_48	IF_1	CALL_5
0x40057f9	    0x488d88880000	                   lea rcx, [rax + 0x88]	      3185	buffer.c	FUNCTION_48	IF_1	CALL_5
0x4005800	        0x488b45f8	                mov rax, qword [rbp - 8]	      3185	buffer.c	FUNCTION_48	IF_1	CALL_5
0x4005804	          0x4889ce	                            mov rsi, rcx	      3185	buffer.c	FUNCTION_48	IF_1	CALL_5
0x4005807	          0x4889c7	                            mov rdi, rax	      3185	buffer.c	FUNCTION_48	IF_1	CALL_5
0x400580a	      0xe800000000	                          call 0x400580f	      3185	buffer.c	FUNCTION_48	IF_1	CALL_5
0x400580f	        0x488b45f8	                mov rax, qword [rbp - 8]	      3186	buffer.c	FUNCTION_48	IF_1
0x4005813	    0x488b90900000	            mov rdx, qword [rax + 0x90] 	      3186	buffer.c	FUNCTION_48	IF_1
0x400581a	        0x488b45f8	                mov rax, qword [rbp - 8]	      3186	buffer.c	FUNCTION_48	IF_1
0x400581e	    0x488990980000	             mov qword [rax + 0x98], rdx	      3186	buffer.c	FUNCTION_48	IF_1
0x4005825	              0x90	                                     nop	      3188	buffer.c	FUNCTION_48
0x4005826	              0xc9	                                   leave	      3188	buffer.c	FUNCTION_48
0x4005827	              0xc3	                                     ret	      3188	buffer.c	FUNCTION_48
read_buffer	CALL,8:functions,0:SWITCH,0:FOR,0:ELSE,2:DO,0:WHILE,2:IF,5	104
0x4000040	              0x55	                                push rbp	        73	buffer.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	        73	buffer.c	FUNCTION_1
0x4000044	        0x4883ec30	                           sub rsp, 0x30	        73	buffer.c	FUNCTION_1
0x4000048	          0x897ddc	             mov dword [rbp - 0x24], edi	        73	buffer.c	FUNCTION_1
0x400004b	        0x488975d0	             mov qword [rbp - 0x30], rsi	        73	buffer.c	FUNCTION_1
0x400004f	          0x8955d8	             mov dword [rbp - 0x28], edx	        73	buffer.c	FUNCTION_1
0x4000052	    0x64488b042528	                mov rax, qword fs:[0x28]	        73	buffer.c	FUNCTION_1
0x400005b	        0x488945f8	                mov qword [rbp - 8], rax	        73	buffer.c	FUNCTION_1
0x400005f	            0x31c0	                            xor eax, eax	        73	buffer.c	FUNCTION_1
0x4000061	    0xc745ec010000	               mov dword [rbp - 0x14], 1	        74	buffer.c	FUNCTION_1
0x4000068	    0x488b05000000	            mov rax, qword [0x0400006f] 	        82	buffer.c	FUNCTION_1
0x400006f	          0x488b00	                    mov rax, qword [rax]	        82	buffer.c	FUNCTION_1
0x4000072	        0x488945f0	             mov qword [rbp - 0x10], rax	        82	buffer.c	FUNCTION_1
0x4000076	          0x8b45d8	             mov eax, dword [rbp - 0x28]	        83	buffer.c	FUNCTION_1	CALL_1
0x4000079	          0x83c808	                               or eax, 8	        83	buffer.c	FUNCTION_1	CALL_1
0x400007c	            0x89c7	                            mov edi, eax	        83	buffer.c	FUNCTION_1	CALL_1
0x400007e	        0x837ddc00	               cmp dword [rbp - 0x24], 0	        83	buffer.c	FUNCTION_1	CALL_1
0x4000082	            0x7510	                           jne 0x4000094	        83	buffer.c	FUNCTION_1	CALL_1
0x4000084	    0x488b05000000	            mov rax, qword [0x0400008b] 	        85	buffer.c	FUNCTION_1
0x400008b	    0x488bb0980000	            mov rsi, qword [rax + 0x98] 	        83	buffer.c	FUNCTION_1	CALL_1
0x4000092	            0xeb05	                           jmp 0x4000099	        83	buffer.c	FUNCTION_1	CALL_1
0x4000094	      0xbe00000000	                              mov esi, 0	        83	buffer.c	FUNCTION_1	CALL_1
0x4000099	        0x837ddc00	               cmp dword [rbp - 0x24], 0	        83	buffer.c	FUNCTION_1	CALL_1
0x400009d	            0x7510	                           jne 0x40000af	        83	buffer.c	FUNCTION_1	CALL_1
0x400009f	    0x488b05000000	            mov rax, qword [0x040000a6] 	        84	buffer.c	FUNCTION_1
0x40000a6	    0x488b80880000	            mov rax, qword [rax + 0x88] 	        83	buffer.c	FUNCTION_1	CALL_1
0x40000ad	            0xeb05	                           jmp 0x40000b4	        83	buffer.c	FUNCTION_1	CALL_1
0x40000af	      0xb800000000	                              mov eax, 0	        83	buffer.c	FUNCTION_1	CALL_1
0x40000b4	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	        83	buffer.c	FUNCTION_1	CALL_1
0x40000b8	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        83	buffer.c	FUNCTION_1	CALL_1
0x40000bc	        0x4883ec08	                              sub rsp, 8	        83	buffer.c	FUNCTION_1	CALL_1
0x40000c0	              0x57	                                push rdi	        83	buffer.c	FUNCTION_1	CALL_1
0x40000c1	          0x4989c9	                             mov r9, rcx	        83	buffer.c	FUNCTION_1	CALL_1
0x40000c4	    0x41b8ffffff7f	                     mov r8d, 0x7fffffff	        83	buffer.c	FUNCTION_1	CALL_1
0x40000ca	      0xb900000000	                              mov ecx, 0	        83	buffer.c	FUNCTION_1	CALL_1
0x40000cf	          0x4889c7	                            mov rdi, rax	        83	buffer.c	FUNCTION_1	CALL_1
0x40000d2	      0xe800000000	                          call 0x40000d7	        83	buffer.c	FUNCTION_1	CALL_1
0x40000d7	        0x4883c410	                           add rsp, 0x10	        83	buffer.c	FUNCTION_1	CALL_1
0x40000db	          0x8945ec	             mov dword [rbp - 0x14], eax	        83	buffer.c	FUNCTION_1	CALL_1
0x40000de	          0x8b45ec	             mov eax, dword [rbp - 0x14]	        88	buffer.c	FUNCTION_1	IF_1
0x40000e1	          0x83f801	                              cmp eax, 1	        88	buffer.c	FUNCTION_1	IF_1
0x40000e4	            0x7530	                           jne 0x4000116	        88	buffer.c	FUNCTION_1	IF_1
0x40000e6	            0xeb0f	                           jmp 0x40000f7	        91	buffer.c	FUNCTION_1	IF_1	WHILE_1
0x40000e8	      0xbe00000000	                              mov esi, 0	        92	buffer.c	FUNCTION_1	IF_1	CALL_2
0x40000ed	      0xbf01000000	                              mov edi, 1	        92	buffer.c	FUNCTION_1	IF_1	CALL_2
0x40000f2	      0xe800000000	                          call 0x40000f7	        92	buffer.c	FUNCTION_1	IF_1	CALL_2
0x40000f7	      0x48836df001	               sub qword [rbp - 0x10], 1	        91	buffer.c	FUNCTION_1	IF_1	WHILE_1
0x40000fc	      0x48837df000	               cmp qword [rbp - 0x10], 0	        91	buffer.c	FUNCTION_1	IF_1	WHILE_1
0x4000101	            0x79e5	                           jns 0x40000e8	        91	buffer.c	FUNCTION_1	IF_1	WHILE_1
0x4000103	            0xeb21	                           jmp 0x4000126	        91	buffer.c	FUNCTION_1	IF_1	WHILE_1
0x4000105	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        98	buffer.c	FUNCTION_1	ELSE_1	CALL_3
0x4000109	      0xbe00000000	                              mov esi, 0	        98	buffer.c	FUNCTION_1	ELSE_1	CALL_3
0x400010e	          0x4889c7	                            mov rdi, rax	        98	buffer.c	FUNCTION_1	ELSE_1	CALL_3
0x4000111	      0xe800000000	                          call 0x4000116	        98	buffer.c	FUNCTION_1	ELSE_1	CALL_3
0x4000116	    0x488b05000000	            mov rax, qword [0x0400011d] 	        97	buffer.c	FUNCTION_1	ELSE_1	WHILE_2
0x400011d	          0x488b00	                    mov rax, qword [rax]	        97	buffer.c	FUNCTION_1	ELSE_1	WHILE_2
0x4000120	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	        97	buffer.c	FUNCTION_1	ELSE_1	WHILE_2
0x4000124	            0x7fdf	                            jg 0x4000105	        97	buffer.c	FUNCTION_1	ELSE_1	WHILE_2
0x4000126	    0x488b05000000	            mov rax, qword [0x0400012d] 	       101	buffer.c	FUNCTION_1
0x400012d	    0x48c740380100	               mov qword [rax + 0x38], 1	       101	buffer.c	FUNCTION_1
0x4000135	    0x488b05000000	            mov rax, qword [0x0400013c] 	       102	buffer.c	FUNCTION_1
0x400013c	    0xc74040000000	               mov dword [rax + 0x40], 0	       102	buffer.c	FUNCTION_1
0x4000143	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       104	buffer.c	FUNCTION_1	IF_2
0x4000147	     0xf8480000000	                            je 0x40001cd	       104	buffer.c	FUNCTION_1	IF_2
0x400014d	    0x8b0500000000	            mov eax, dword [0x04000153] 	       108	buffer.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x4000153	            0x85c0	                           test eax, eax	       108	buffer.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x4000155	            0x7528	                           jne 0x400017f	       108	buffer.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x4000157	    0x488b05000000	            mov rax, qword [0x0400015e] 	       108	buffer.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x400015e	          0x488b00	                    mov rax, qword [rax]	       108	buffer.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x4000161	        0x4883f801	                              cmp rax, 1	       108	buffer.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x4000165	            0x7511	                           jne 0x4000178	       108	buffer.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x4000167	      0xbf01000000	                              mov edi, 1	       108	buffer.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x400016c	      0xe800000000	                          call 0x4000171	       108	buffer.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x4000171	           0xfb600	                   movzx eax, byte [rax]	       108	buffer.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x4000174	            0x84c0	                             test al, al	       108	buffer.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x4000176	            0x7407	                            je 0x400017f	       108	buffer.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x4000178	      0xe800000000	                          call 0x400017d	       109	buffer.c	FUNCTION_1	IF_2	CALL_5
0x400017d	            0xeb1c	                           jmp 0x400019b	       109	buffer.c	FUNCTION_1	IF_2	CALL_5
0x400017f	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       110	buffer.c	FUNCTION_1	IF_2	ELSE_2	IF_4
0x4000182	          0x83f801	                              cmp eax, 1	       110	buffer.c	FUNCTION_1	IF_2	ELSE_2	IF_4
0x4000185	            0x7514	                           jne 0x400019b	       110	buffer.c	FUNCTION_1	IF_2	ELSE_2	IF_4
0x4000187	    0x488b05000000	            mov rax, qword [0x0400018e] 	       111	buffer.c	FUNCTION_1	IF_2	ELSE_2	IF_4
0x400018e	      0xbe00000000	                              mov esi, 0	       111	buffer.c	FUNCTION_1	IF_2	ELSE_2	IF_4
0x4000193	          0x4889c7	                            mov rdi, rax	       111	buffer.c	FUNCTION_1	IF_2	ELSE_2	IF_4
0x4000196	      0xe800000000	                          call 0x400019b	       111	buffer.c	FUNCTION_1	IF_2	ELSE_2	IF_4
0x400019b	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       113	buffer.c	FUNCTION_1	IF_2	IF_5
0x400019e	          0x83f801	                              cmp eax, 1	       113	buffer.c	FUNCTION_1	IF_2	IF_5
0x40001a1	            0x752a	                           jne 0x40001cd	       113	buffer.c	FUNCTION_1	IF_2	IF_5
0x40001a3	    0x488b05000000	            mov rax, qword [0x040001aa] 	       116	buffer.c	FUNCTION_1	IF_2	IF_5	CALL_7
0x40001aa	        0x488d55ec	                   lea rdx, [rbp - 0x14]	       116	buffer.c	FUNCTION_1	IF_2	IF_5	CALL_7
0x40001ae	          0x4989d1	                             mov r9, rdx	       116	buffer.c	FUNCTION_1	IF_2	IF_5	CALL_7
0x40001b1	          0x4989c0	                             mov r8, rax	       116	buffer.c	FUNCTION_1	IF_2	IF_5	CALL_7
0x40001b4	      0xb900000000	                              mov ecx, 0	       116	buffer.c	FUNCTION_1	IF_2	IF_5	CALL_7
0x40001b9	      0xba00000000	                              mov edx, 0	       116	buffer.c	FUNCTION_1	IF_2	IF_5	CALL_7
0x40001be	      0xbe00000000	                              mov esi, 0	       116	buffer.c	FUNCTION_1	IF_2	IF_5	CALL_7
0x40001c3	      0xbf49000000	                           mov edi, 0x49	       116	buffer.c	FUNCTION_1	IF_2	IF_5	CALL_7
0x40001c8	      0xe800000000	                          call 0x40001cd	       116	buffer.c	FUNCTION_1	IF_2	IF_5	CALL_7
0x40001cd	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       123	buffer.c	FUNCTION_1
0x40001d0	        0x488b4df8	                mov rcx, qword [rbp - 8]	       124	buffer.c	FUNCTION_1
0x40001d4	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       124	buffer.c	FUNCTION_1
0x40001dd	            0x7405	                            je 0x40001e4	       124	buffer.c	FUNCTION_1
0x40001df	      0xe800000000	                          call 0x40001e4	       124	buffer.c	FUNCTION_1
0x40001e4	              0xc9	                                   leave	       124	buffer.c	FUNCTION_1
0x40001e5	              0xc3	                                     ret	       124	buffer.c	FUNCTION_1
buf_delete_signs	CALL,3:functions,0:SWITCH,0:FOR,0:ELSE,0:DO,0:WHILE,1:IF,1	35
0x400c065	              0x55	                                push rbp	      6051	buffer.c	FUNCTION_97
0x400c066	          0x4889e5	                            mov rbp, rsp	      6051	buffer.c	FUNCTION_97
0x400c069	        0x4883ec20	                           sub rsp, 0x20	      6051	buffer.c	FUNCTION_97
0x400c06d	        0x48897de8	             mov qword [rbp - 0x18], rdi	      6051	buffer.c	FUNCTION_97
0x400c071	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6056	buffer.c	FUNCTION_97	IF_1
0x400c075	    0x488b80201c00	          mov rax, qword [rax + 0x1c20] 	      6056	buffer.c	FUNCTION_97	IF_1
0x400c07c	          0x4885c0	                           test rax, rax	      6056	buffer.c	FUNCTION_97	IF_1
0x400c07f	            0x7459	                            je 0x400c0da	      6056	buffer.c	FUNCTION_97	IF_1
0x400c081	    0x488b05000000	            mov rax, qword [0x0400c088] 	      6056	buffer.c	FUNCTION_97	IF_1
0x400c088	          0x4885c0	                           test rax, rax	      6056	buffer.c	FUNCTION_97	IF_1
0x400c08b	            0x744d	                            je 0x400c0da	      6056	buffer.c	FUNCTION_97	IF_1
0x400c08d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6058	buffer.c	FUNCTION_97	IF_1	CALL_1
0x400c091	      0xbe28000000	                           mov esi, 0x28	      6058	buffer.c	FUNCTION_97	IF_1	CALL_1
0x400c096	          0x4889c7	                            mov rdi, rax	      6058	buffer.c	FUNCTION_97	IF_1	CALL_1
0x400c099	      0xe800000000	                          call 0x400c09e	      6058	buffer.c	FUNCTION_97	IF_1	CALL_1
0x400c09e	      0xe800000000	                          call 0x400c0a3	      6059	buffer.c	FUNCTION_97	IF_1	CALL_2
0x400c0a3	            0xeb35	                           jmp 0x400c0da	      6062	buffer.c	FUNCTION_97	WHILE_1
0x400c0a5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6064	buffer.c	FUNCTION_97	WHILE_1
0x400c0a9	    0x488b80201c00	          mov rax, qword [rax + 0x1c20] 	      6064	buffer.c	FUNCTION_97	WHILE_1
0x400c0b0	        0x488b4018	            mov rax, qword [rax + 0x18] 	      6064	buffer.c	FUNCTION_97	WHILE_1
0x400c0b4	        0x488945f8	                mov qword [rbp - 8], rax	      6064	buffer.c	FUNCTION_97	WHILE_1
0x400c0b8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6065	buffer.c	FUNCTION_97	WHILE_1	CALL_3
0x400c0bc	    0x488b80201c00	          mov rax, qword [rax + 0x1c20] 	      6065	buffer.c	FUNCTION_97	WHILE_1	CALL_3
0x400c0c3	          0x4889c7	                            mov rdi, rax	      6065	buffer.c	FUNCTION_97	WHILE_1	CALL_3
0x400c0c6	      0xe800000000	                          call 0x400c0cb	      6065	buffer.c	FUNCTION_97	WHILE_1	CALL_3
0x400c0cb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6066	buffer.c	FUNCTION_97	WHILE_1
0x400c0cf	        0x488b55f8	                mov rdx, qword [rbp - 8]	      6066	buffer.c	FUNCTION_97	WHILE_1
0x400c0d3	    0x488990201c00	          mov qword [rax + 0x1c20], rdx 	      6066	buffer.c	FUNCTION_97	WHILE_1
0x400c0da	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6062	buffer.c	FUNCTION_97	WHILE_1
0x400c0de	    0x488b80201c00	          mov rax, qword [rax + 0x1c20] 	      6062	buffer.c	FUNCTION_97	WHILE_1
0x400c0e5	          0x4885c0	                           test rax, rax	      6062	buffer.c	FUNCTION_97	WHILE_1
0x400c0e8	            0x75bb	                           jne 0x400c0a5	      6062	buffer.c	FUNCTION_97	WHILE_1
0x400c0ea	              0x90	                                     nop	      6068	buffer.c	FUNCTION_97
0x400c0eb	              0xc9	                                   leave	      6068	buffer.c	FUNCTION_97
0x400c0ec	              0xc3	                                     ret	      6068	buffer.c	FUNCTION_97
setfname	CALL,17:functions,0:SWITCH,0:FOR,0:ELSE,2:DO,0:WHILE,0:IF,10	158
0x4005424	              0x55	                                push rbp	      3083	buffer.c	FUNCTION_47
0x4005425	          0x4889e5	                            mov rbp, rsp	      3083	buffer.c	FUNCTION_47
0x4005428	    0x4881ecd00000	                           sub rsp, 0xd0	      3083	buffer.c	FUNCTION_47
0x400542f	    0x4889bd48ffff	             mov qword [rbp - 0xb8], rdi	      3083	buffer.c	FUNCTION_47
0x4005436	    0x4889b540ffff	             mov qword [rbp - 0xc0], rsi	      3083	buffer.c	FUNCTION_47
0x400543d	    0x48899538ffff	             mov qword [rbp - 0xc8], rdx	      3083	buffer.c	FUNCTION_47
0x4005444	    0x898d34ffffff	             mov dword [rbp - 0xcc], ecx	      3083	buffer.c	FUNCTION_47
0x400544a	    0x64488b042528	                mov rax, qword fs:[0x28]	      3083	buffer.c	FUNCTION_47
0x4005453	        0x488945f8	                mov qword [rbp - 8], rax	      3083	buffer.c	FUNCTION_47
0x4005457	            0x31c0	                            xor eax, eax	      3083	buffer.c	FUNCTION_47
0x4005459	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      3084	buffer.c	FUNCTION_47
0x4005464	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      3089	buffer.c	FUNCTION_47	IF_1
0x400546b	          0x4885c0	                           test rax, rax	      3089	buffer.c	FUNCTION_47	IF_1
0x400546e	            0x7412	                            je 0x4005482	      3089	buffer.c	FUNCTION_47	IF_1
0x4005470	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      3089	buffer.c	FUNCTION_47	IF_1
0x4005477	           0xfb600	                   movzx eax, byte [rax]	      3089	buffer.c	FUNCTION_47	IF_1
0x400547a	            0x84c0	                             test al, al	      3089	buffer.c	FUNCTION_47	IF_1
0x400547c	     0xf8586000000	                           jne 0x4005508	      3089	buffer.c	FUNCTION_47	IF_1
0x4005482	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3092	buffer.c	FUNCTION_47	IF_1	CALL_1
0x4005489	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      3092	buffer.c	FUNCTION_47	IF_1	CALL_1
0x4005490	          0x4885c0	                           test rax, rax	      3092	buffer.c	FUNCTION_47	IF_1	CALL_1
0x4005493	            0x7428	                            je 0x40054bd	      3092	buffer.c	FUNCTION_47	IF_1	CALL_1
0x4005495	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3092	buffer.c	FUNCTION_47	IF_1	CALL_1
0x400549c	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      3092	buffer.c	FUNCTION_47	IF_1	CALL_1
0x40054a3	          0x4889c7	                            mov rdi, rax	      3092	buffer.c	FUNCTION_47	IF_1	CALL_1
0x40054a6	      0xe800000000	                          call 0x40054ab	      3092	buffer.c	FUNCTION_47	IF_1	CALL_1
0x40054ab	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3092	buffer.c	FUNCTION_47	IF_1	CALL_1
0x40054b2	    0x48c780880000	               mov qword [rax + 0x88], 0	      3092	buffer.c	FUNCTION_47	IF_1	CALL_1
0x40054bd	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3093	buffer.c	FUNCTION_47	IF_1	CALL_2
0x40054c4	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      3093	buffer.c	FUNCTION_47	IF_1	CALL_2
0x40054cb	          0x4885c0	                           test rax, rax	      3093	buffer.c	FUNCTION_47	IF_1	CALL_2
0x40054ce	            0x7428	                            je 0x40054f8	      3093	buffer.c	FUNCTION_47	IF_1	CALL_2
0x40054d0	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3093	buffer.c	FUNCTION_47	IF_1	CALL_2
0x40054d7	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      3093	buffer.c	FUNCTION_47	IF_1	CALL_2
0x40054de	          0x4889c7	                            mov rdi, rax	      3093	buffer.c	FUNCTION_47	IF_1	CALL_2
0x40054e1	      0xe800000000	                          call 0x40054e6	      3093	buffer.c	FUNCTION_47	IF_1	CALL_2
0x40054e6	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3093	buffer.c	FUNCTION_47	IF_1	CALL_2
0x40054ed	    0x48c780900000	               mov qword [rax + 0x90], 0	      3093	buffer.c	FUNCTION_47	IF_1	CALL_2
0x40054f8	    0x48c78560ffff	mov qword [rbp - 0xa0], 0xffffffffffffffff	      3095	buffer.c	FUNCTION_47	IF_1
0x4005503	      0xe9b9010000	                           jmp 0x40056c1	      3095	buffer.c	FUNCTION_47	IF_1
0x4005508	    0x488d9538ffff	                   lea rdx, [rbp - 0xc8]	      3100	buffer.c	FUNCTION_47	ELSE_1	CALL_3
0x400550f	    0x488d8d40ffff	                   lea rcx, [rbp - 0xc0]	      3100	buffer.c	FUNCTION_47	ELSE_1	CALL_3
0x4005516	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3100	buffer.c	FUNCTION_47	ELSE_1	CALL_3
0x400551d	          0x4889ce	                            mov rsi, rcx	      3100	buffer.c	FUNCTION_47	ELSE_1	CALL_3
0x4005520	          0x4889c7	                            mov rdi, rax	      3100	buffer.c	FUNCTION_47	ELSE_1	CALL_3
0x4005523	      0xe800000000	                          call 0x4005528	      3100	buffer.c	FUNCTION_47	ELSE_1	CALL_3
0x4005528	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      3101	buffer.c	FUNCTION_47	ELSE_1	IF_2
0x400552f	          0x4885c0	                           test rax, rax	      3101	buffer.c	FUNCTION_47	ELSE_1	IF_2
0x4005532	            0x750a	                           jne 0x400553e	      3101	buffer.c	FUNCTION_47	ELSE_1	IF_2
0x4005534	      0xb800000000	                              mov eax, 0	      3102	buffer.c	FUNCTION_47	ELSE_1	IF_2
0x4005539	      0xe91f020000	                           jmp 0x400575d	      3102	buffer.c	FUNCTION_47	ELSE_1	IF_2
0x400553e	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      3110	buffer.c	FUNCTION_47	ELSE_1	IF_3	CALL_4
0x4005545	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	      3110	buffer.c	FUNCTION_47	ELSE_1	IF_3	CALL_4
0x400554c	          0x4889d6	                            mov rsi, rdx	      3110	buffer.c	FUNCTION_47	ELSE_1	IF_3	CALL_4
0x400554f	          0x4889c7	                            mov rdi, rax	      3110	buffer.c	FUNCTION_47	ELSE_1	IF_3	CALL_4
0x4005552	      0xe800000000	                          call 0x4005557	      3110	buffer.c	FUNCTION_47	ELSE_1	IF_3	CALL_4
0x4005557	            0x85c0	                           test eax, eax	      3110	buffer.c	FUNCTION_47	ELSE_1	IF_3	CALL_4
0x4005559	            0x790b	                           jns 0x4005566	      3110	buffer.c	FUNCTION_47	ELSE_1	IF_3	CALL_4
0x400555b	    0x48c78560ffff	mov qword [rbp - 0xa0], 0xffffffffffffffff	      3111	buffer.c	FUNCTION_47	ELSE_1	IF_3
0x4005566	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3113	buffer.c	FUNCTION_47	ELSE_1	IF_4
0x400556d	          0x8b407c	            mov eax, dword [rax + 0x7c] 	      3113	buffer.c	FUNCTION_47	ELSE_1	IF_4
0x4005570	      0x2580000000	                           and eax, 0x80	      3113	buffer.c	FUNCTION_47	ELSE_1	IF_4
0x4005575	            0x85c0	                           test eax, eax	      3113	buffer.c	FUNCTION_47	ELSE_1	IF_4
0x4005577	            0x7520	                           jne 0x4005599	      3113	buffer.c	FUNCTION_47	ELSE_1	IF_4
0x4005579	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      3115	buffer.c	FUNCTION_47	ELSE_1	CALL_5
0x4005580	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	      3115	buffer.c	FUNCTION_47	ELSE_1	CALL_5
0x4005587	          0x4889d6	                            mov rsi, rdx	      3115	buffer.c	FUNCTION_47	ELSE_1	CALL_5
0x400558a	          0x4889c7	                            mov rdi, rax	      3115	buffer.c	FUNCTION_47	ELSE_1	CALL_5
0x400558d	      0xe83ee9ffff	          call sym.buflist_findname_stat	      3115	buffer.c	FUNCTION_47	ELSE_1	CALL_5
0x4005592	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      3115	buffer.c	FUNCTION_47	ELSE_1	CALL_5
0x4005599	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	      3119	buffer.c	FUNCTION_47	ELSE_1	IF_5
0x40055a1	            0x7472	                            je 0x4005615	      3119	buffer.c	FUNCTION_47	ELSE_1	IF_5
0x40055a3	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3119	buffer.c	FUNCTION_47	ELSE_1	IF_5
0x40055aa	    0x483b8548ffff	             cmp rax, qword [rbp - 0xb8]	      3119	buffer.c	FUNCTION_47	ELSE_1	IF_5
0x40055b1	            0x7462	                            je 0x4005615	      3119	buffer.c	FUNCTION_47	ELSE_1	IF_5
0x40055b3	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3121	buffer.c	FUNCTION_47	ELSE_1	IF_5	IF_6
0x40055ba	        0x488b4008	                mov rax, qword [rax + 8]	      3121	buffer.c	FUNCTION_47	ELSE_1	IF_5	IF_6
0x40055be	          0x4885c0	                           test rax, rax	      3121	buffer.c	FUNCTION_47	ELSE_1	IF_5	IF_6
0x40055c1	            0x7434	                            je 0x40055f7	      3121	buffer.c	FUNCTION_47	ELSE_1	IF_5	IF_6
0x40055c3	    0x83bd34ffffff	               cmp dword [rbp - 0xcc], 0	      3123	buffer.c	FUNCTION_47	ELSE_1	IF_5	IF_6	IF_7
0x40055ca	            0x7412	                            je 0x40055de	      3123	buffer.c	FUNCTION_47	ELSE_1	IF_5	IF_6	IF_7
0x40055cc	      0xbf00000000	                              mov edi, 0	      3124	buffer.c	FUNCTION_47	ELSE_1	IF_5	IF_6	CALL_8
0x40055d1	      0xe800000000	                          call 0x40055d6	      3124	buffer.c	FUNCTION_47	ELSE_1	IF_5	IF_6	CALL_8
0x40055d6	          0x4889c7	                            mov rdi, rax	      3124	buffer.c	FUNCTION_47	ELSE_1	IF_5	IF_6	CALL_8
0x40055d9	      0xe800000000	                          call 0x40055de	      3124	buffer.c	FUNCTION_47	ELSE_1	IF_5	IF_6	CALL_8
0x40055de	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      3125	buffer.c	FUNCTION_47	ELSE_1	IF_5	IF_6	CALL_9
0x40055e5	          0x4889c7	                            mov rdi, rax	      3125	buffer.c	FUNCTION_47	ELSE_1	IF_5	IF_6	CALL_9
0x40055e8	      0xe800000000	                          call 0x40055ed	      3125	buffer.c	FUNCTION_47	ELSE_1	IF_5	IF_6	CALL_9
0x40055ed	      0xb800000000	                              mov eax, 0	      3126	buffer.c	FUNCTION_47	ELSE_1	IF_5	IF_6
0x40055f2	      0xe966010000	                           jmp 0x400575d	      3126	buffer.c	FUNCTION_47	ELSE_1	IF_5	IF_6
0x40055f7	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3129	buffer.c	FUNCTION_47	ELSE_1	IF_5	CALL_10
0x40055fe	      0xb900000000	                              mov ecx, 0	      3129	buffer.c	FUNCTION_47	ELSE_1	IF_5	CALL_10
0x4005603	      0xba04000000	                              mov edx, 4	      3129	buffer.c	FUNCTION_47	ELSE_1	IF_5	CALL_10
0x4005608	          0x4889c6	                            mov rsi, rax	      3129	buffer.c	FUNCTION_47	ELSE_1	IF_5	CALL_10
0x400560b	      0xbf00000000	                              mov edi, 0	      3129	buffer.c	FUNCTION_47	ELSE_1	IF_5	CALL_10
0x4005610	      0xe800000000	                          call 0x4005615	      3129	buffer.c	FUNCTION_47	ELSE_1	IF_5	CALL_10
0x4005615	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      3131	buffer.c	FUNCTION_47	ELSE_1	CALL_11
0x400561c	          0x4889c7	                            mov rdi, rax	      3131	buffer.c	FUNCTION_47	ELSE_1	CALL_11
0x400561f	      0xe800000000	                          call 0x4005624	      3131	buffer.c	FUNCTION_47	ELSE_1	CALL_11
0x4005624	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	      3131	buffer.c	FUNCTION_47	ELSE_1	CALL_11
0x400562b	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      3132	buffer.c	FUNCTION_47	ELSE_1	IF_8
0x4005632	          0x4885c0	                           test rax, rax	      3132	buffer.c	FUNCTION_47	ELSE_1	IF_8
0x4005635	            0x740c	                            je 0x4005643	      3132	buffer.c	FUNCTION_47	ELSE_1	IF_8
0x4005637	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      3132	buffer.c	FUNCTION_47	ELSE_1	IF_8
0x400563e	          0x4885c0	                           test rax, rax	      3132	buffer.c	FUNCTION_47	ELSE_1	IF_8
0x4005641	            0x7528	                           jne 0x400566b	      3132	buffer.c	FUNCTION_47	ELSE_1	IF_8
0x4005643	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      3134	buffer.c	FUNCTION_47	ELSE_1	IF_8	CALL_12
0x400564a	          0x4889c7	                            mov rdi, rax	      3134	buffer.c	FUNCTION_47	ELSE_1	IF_8	CALL_12
0x400564d	      0xe800000000	                          call 0x4005652	      3134	buffer.c	FUNCTION_47	ELSE_1	IF_8	CALL_12
0x4005652	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      3135	buffer.c	FUNCTION_47	ELSE_1	IF_8	CALL_13
0x4005659	          0x4889c7	                            mov rdi, rax	      3135	buffer.c	FUNCTION_47	ELSE_1	IF_8	CALL_13
0x400565c	      0xe800000000	                          call 0x4005661	      3135	buffer.c	FUNCTION_47	ELSE_1	IF_8	CALL_13
0x4005661	      0xb800000000	                              mov eax, 0	      3136	buffer.c	FUNCTION_47	ELSE_1	IF_8
0x4005666	      0xe9f2000000	                           jmp 0x400575d	      3136	buffer.c	FUNCTION_47	ELSE_1	IF_8
0x400566b	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3144	buffer.c	FUNCTION_47	ELSE_1	CALL_15
0x4005672	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      3144	buffer.c	FUNCTION_47	ELSE_1	CALL_15
0x4005679	          0x4889c7	                            mov rdi, rax	      3144	buffer.c	FUNCTION_47	ELSE_1	CALL_15
0x400567c	      0xe800000000	                          call 0x4005681	      3144	buffer.c	FUNCTION_47	ELSE_1	CALL_15
0x4005681	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3145	buffer.c	FUNCTION_47	ELSE_1	CALL_16
0x4005688	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      3145	buffer.c	FUNCTION_47	ELSE_1	CALL_16
0x400568f	          0x4889c7	                            mov rdi, rax	      3145	buffer.c	FUNCTION_47	ELSE_1	CALL_16
0x4005692	      0xe800000000	                          call 0x4005697	      3145	buffer.c	FUNCTION_47	ELSE_1	CALL_16
0x4005697	    0x488b9540ffff	             mov rdx, qword [rbp - 0xc0]	      3146	buffer.c	FUNCTION_47	ELSE_1
0x400569e	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3146	buffer.c	FUNCTION_47	ELSE_1
0x40056a5	    0x488990880000	             mov qword [rax + 0x88], rdx	      3146	buffer.c	FUNCTION_47	ELSE_1
0x40056ac	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	      3147	buffer.c	FUNCTION_47	ELSE_1
0x40056b3	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3147	buffer.c	FUNCTION_47	ELSE_1
0x40056ba	    0x488990900000	             mov qword [rax + 0x90], rdx	      3147	buffer.c	FUNCTION_47	ELSE_1
0x40056c1	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3149	buffer.c	FUNCTION_47
0x40056c8	    0x488b90900000	            mov rdx, qword [rax + 0x90] 	      3149	buffer.c	FUNCTION_47
0x40056cf	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3149	buffer.c	FUNCTION_47
0x40056d6	    0x488990980000	             mov qword [rax + 0x98], rdx	      3149	buffer.c	FUNCTION_47
0x40056dd	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      3151	buffer.c	FUNCTION_47	IF_10
0x40056e4	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      3151	buffer.c	FUNCTION_47	IF_10
0x40056e8	            0x7513	                           jne 0x40056fd	      3151	buffer.c	FUNCTION_47	IF_10
0x40056ea	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3152	buffer.c	FUNCTION_47	IF_10
0x40056f1	    0xc780a0000000	               mov dword [rax + 0xa0], 0	      3152	buffer.c	FUNCTION_47	IF_10
0x40056fb	            0xeb3b	                           jmp 0x4005738	      3152	buffer.c	FUNCTION_47	IF_10
0x40056fd	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3155	buffer.c	FUNCTION_47	ELSE_2
0x4005704	    0xc780a0000000	               mov dword [rax + 0xa0], 1	      3155	buffer.c	FUNCTION_47	ELSE_2
0x400570e	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	      3156	buffer.c	FUNCTION_47	ELSE_2
0x4005715	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3156	buffer.c	FUNCTION_47	ELSE_2
0x400571c	    0x488990a80000	             mov qword [rax + 0xa8], rdx	      3156	buffer.c	FUNCTION_47	ELSE_2
0x4005723	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	      3157	buffer.c	FUNCTION_47	ELSE_2
0x400572a	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3157	buffer.c	FUNCTION_47	ELSE_2
0x4005731	    0x488990b00000	             mov qword [rax + 0xb0], rdx	      3157	buffer.c	FUNCTION_47	ELSE_2
0x4005738	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3161	buffer.c	FUNCTION_47
0x400573f	    0xc78060170000	            mov dword [rax + 0x1760], 0 	      3161	buffer.c	FUNCTION_47
0x4005749	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3163	buffer.c	FUNCTION_47	CALL_17
0x4005750	          0x4889c7	                            mov rdi, rax	      3163	buffer.c	FUNCTION_47	CALL_17
0x4005753	      0xe800000000	                          call 0x4005758	      3163	buffer.c	FUNCTION_47	CALL_17
0x4005758	      0xb801000000	                              mov eax, 1	      3164	buffer.c	FUNCTION_47
0x400575d	        0x488b4df8	                mov rcx, qword [rbp - 8]	      3165	buffer.c	FUNCTION_47
0x4005761	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3165	buffer.c	FUNCTION_47
0x400576a	            0x7405	                            je 0x4005771	      3165	buffer.c	FUNCTION_47
0x400576c	      0xe800000000	                          call 0x4005771	      3165	buffer.c	FUNCTION_47
0x4005771	              0xc9	                                   leave	      3165	buffer.c	FUNCTION_47
0x4005772	              0xc3	                                     ret	      3165	buffer.c	FUNCTION_47
buf_name_changed	CALL,6:functions,0:SWITCH,0:FOR,0:ELSE,0:DO,0:WHILE,0:IF,2	29
0x4005828	              0x55	                                push rbp	      3196	buffer.c	FUNCTION_49
0x4005829	          0x4889e5	                            mov rbp, rsp	      3196	buffer.c	FUNCTION_49
0x400582c	        0x4883ec10	                           sub rsp, 0x10	      3196	buffer.c	FUNCTION_49
0x4005830	        0x48897df8	                mov qword [rbp - 8], rdi	      3196	buffer.c	FUNCTION_49
0x4005834	        0x488b45f8	                mov rax, qword [rbp - 8]	      3200	buffer.c	FUNCTION_49	IF_1
0x4005838	        0x488b4008	                mov rax, qword [rax + 8]	      3200	buffer.c	FUNCTION_49	IF_1
0x400583c	          0x4885c0	                           test rax, rax	      3200	buffer.c	FUNCTION_49	IF_1
0x400583f	            0x740c	                            je 0x400584d	      3200	buffer.c	FUNCTION_49	IF_1
0x4005841	        0x488b45f8	                mov rax, qword [rbp - 8]	      3201	buffer.c	FUNCTION_49	CALL_1
0x4005845	          0x4889c7	                            mov rdi, rax	      3201	buffer.c	FUNCTION_49	CALL_1
0x4005848	      0xe800000000	                          call 0x400584d	      3201	buffer.c	FUNCTION_49	CALL_1
0x400584d	    0x488b05000000	            mov rax, qword [0x04005854] 	      3203	buffer.c	FUNCTION_49	IF_2
0x4005854	        0x488b4008	                mov rax, qword [rax + 8]	      3203	buffer.c	FUNCTION_49	IF_2
0x4005858	        0x483b45f8	                cmp rax, qword [rbp - 8]	      3203	buffer.c	FUNCTION_49	IF_2
0x400585c	            0x750f	                           jne 0x400586d	      3203	buffer.c	FUNCTION_49	IF_2
0x400585e	    0x488b05000000	            mov rax, qword [0x04005865] 	      3204	buffer.c	FUNCTION_49	CALL_2
0x4005865	          0x4889c7	                            mov rdi, rax	      3204	buffer.c	FUNCTION_49	CALL_2
0x4005868	      0xe800000000	                          call 0x400586d	      3204	buffer.c	FUNCTION_49	CALL_2
0x400586d	      0xe800000000	                          call 0x4005872	      3206	buffer.c	FUNCTION_49	CALL_3
0x4005872	      0xe800000000	                          call 0x4005877	      3208	buffer.c	FUNCTION_49	CALL_4
0x4005877	        0x488b45f8	                mov rax, qword [rbp - 8]	      3209	buffer.c	FUNCTION_49	CALL_5
0x400587b	          0x4889c7	                            mov rdi, rax	      3209	buffer.c	FUNCTION_49	CALL_5
0x400587e	      0xe800000000	                          call 0x4005883	      3209	buffer.c	FUNCTION_49	CALL_5
0x4005883	        0x488b45f8	                mov rax, qword [rbp - 8]	      3210	buffer.c	FUNCTION_49	CALL_6
0x4005887	          0x4889c7	                            mov rdi, rax	      3210	buffer.c	FUNCTION_49	CALL_6
0x400588a	      0xe800000000	                          call 0x400588f	      3210	buffer.c	FUNCTION_49	CALL_6
0x400588f	              0x90	                                     nop	      3211	buffer.c	FUNCTION_49
0x4005890	              0xc9	                                   leave	      3211	buffer.c	FUNCTION_49
0x4005891	              0xc3	                                     ret	      3211	buffer.c	FUNCTION_49
bt_terminal	CALL,0:functions,0:SWITCH,0:FOR,0:ELSE,0:DO,0:WHILE,0:IF,0	15
0x400b67d	              0x55	                                push rbp	      5608	buffer.c	FUNCTION_78
0x400b67e	          0x4889e5	                            mov rbp, rsp	      5608	buffer.c	FUNCTION_78
0x400b681	        0x48897df8	                mov qword [rbp - 8], rdi	      5608	buffer.c	FUNCTION_78
0x400b685	      0x48837df800	                  cmp qword [rbp - 8], 0	      5609	buffer.c	FUNCTION_78
0x400b68a	            0x7419	                            je 0x400b6a5	      5609	buffer.c	FUNCTION_78
0x400b68c	        0x488b45f8	                mov rax, qword [rbp - 8]	      5609	buffer.c	FUNCTION_78
0x400b690	    0x488b80181400	          mov rax, qword [rax + 0x1418] 	      5609	buffer.c	FUNCTION_78
0x400b697	           0xfb600	                   movzx eax, byte [rax]	      5609	buffer.c	FUNCTION_78
0x400b69a	            0x3c74	                            cmp al, 0x74	      5609	buffer.c	FUNCTION_78
0x400b69c	            0x7507	                           jne 0x400b6a5	      5609	buffer.c	FUNCTION_78
0x400b69e	      0xb801000000	                              mov eax, 1	      5609	buffer.c	FUNCTION_78
0x400b6a3	            0xeb05	                           jmp 0x400b6aa	      5609	buffer.c	FUNCTION_78
0x400b6a5	      0xb800000000	                              mov eax, 0	      5609	buffer.c	FUNCTION_78
0x400b6aa	              0x5d	                                 pop rbp	      5610	buffer.c	FUNCTION_78
0x400b6ab	              0xc3	                                     ret	      5610	buffer.c	FUNCTION_78
init_changedtick	CALL,2:functions,0:SWITCH,0:FOR,0:ELSE,0:DO,0:WHILE,0:IF,0	29
0x40014a9	              0x55	                                push rbp	       875	buffer.c	FUNCTION_12
0x40014aa	          0x4889e5	                            mov rbp, rsp	       875	buffer.c	FUNCTION_12
0x40014ad	        0x4883ec20	                           sub rsp, 0x20	       875	buffer.c	FUNCTION_12
0x40014b1	        0x48897de8	             mov qword [rbp - 0x18], rdi	       875	buffer.c	FUNCTION_12
0x40014b5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       876	buffer.c	FUNCTION_12
0x40014b9	    0x4805d0000000	                           add rax, 0xd0	       876	buffer.c	FUNCTION_12
0x40014bf	        0x488945f8	                mov qword [rbp - 8], rax	       876	buffer.c	FUNCTION_12
0x40014c3	        0x488b45f8	                mov rax, qword [rbp - 8]	       878	buffer.c	FUNCTION_12
0x40014c7	        0xc6401005	                mov byte [rax + 0x10], 5	       878	buffer.c	FUNCTION_12
0x40014cb	        0x488b45f8	                mov rax, qword [rbp - 8]	       879	buffer.c	FUNCTION_12
0x40014cf	    0xc70001000000	                      mov dword [rax], 1	       879	buffer.c	FUNCTION_12
0x40014d5	        0x488b45f8	                mov rax, qword [rbp - 8]	       880	buffer.c	FUNCTION_12
0x40014d9	        0xc6400402	                   mov byte [rax + 4], 2	       880	buffer.c	FUNCTION_12
0x40014dd	        0x488b45f8	                mov rax, qword [rbp - 8]	       881	buffer.c	FUNCTION_12
0x40014e1	    0x48c740080000	                  mov qword [rax + 8], 0	       881	buffer.c	FUNCTION_12
0x40014e9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       884	buffer.c	FUNCTION_12	CALL_1
0x40014ed	    0x4805e1000000	                           add rax, 0xe1	       884	buffer.c	FUNCTION_12	CALL_1
0x40014f3	    0x48b96368616e	          movabs rcx, 0x746465676e616863	       884	buffer.c	FUNCTION_12	CALL_1
0x40014fd	          0x488908	                    mov qword [rax], rcx	       884	buffer.c	FUNCTION_12	CALL_1
0x4001500	    0xc7400869636b	          mov dword [rax + 8], 0x6b6369 	       884	buffer.c	FUNCTION_12	CALL_1
0x4001507	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       885	buffer.c	FUNCTION_12	CALL_2
0x400150b	    0x488b80301700	          mov rax, qword [rax + 0x1730] 	       885	buffer.c	FUNCTION_12	CALL_2
0x4001512	        0x488b55f8	                mov rdx, qword [rbp - 8]	       885	buffer.c	FUNCTION_12	CALL_2
0x4001516	          0x4889d6	                            mov rsi, rdx	       885	buffer.c	FUNCTION_12	CALL_2
0x4001519	          0x4889c7	                            mov rdi, rax	       885	buffer.c	FUNCTION_12	CALL_2
0x400151c	      0xe800000000	                          call 0x4001521	       885	buffer.c	FUNCTION_12	CALL_2
0x4001521	              0x90	                                     nop	       887	buffer.c	FUNCTION_12
0x4001522	              0xc9	                                   leave	       887	buffer.c	FUNCTION_12
0x4001523	              0xc3	                                     ret	       887	buffer.c	FUNCTION_12
buf_clear_file	CALL,2:functions,0:SWITCH,0:FOR,0:ELSE,0:DO,0:WHILE,0:IF,0	30
0x4001003	              0x55	                                push rbp	       693	buffer.c	FUNCTION_9
0x4001004	          0x4889e5	                            mov rbp, rsp	       693	buffer.c	FUNCTION_9
0x4001007	        0x4883ec10	                           sub rsp, 0x10	       693	buffer.c	FUNCTION_9
0x400100b	        0x48897df8	                mov qword [rbp - 8], rdi	       693	buffer.c	FUNCTION_9
0x400100f	        0x488b45f8	                mov rax, qword [rbp - 8]	       694	buffer.c	FUNCTION_9
0x4001013	    0x48c700010000	                      mov qword [rax], 1	       694	buffer.c	FUNCTION_9
0x400101a	        0x488b45f8	                mov rax, qword [rbp - 8]	       695	buffer.c	FUNCTION_9	CALL_1
0x400101e	      0xbe01000000	                              mov esi, 1	       695	buffer.c	FUNCTION_9	CALL_1
0x4001023	          0x4889c7	                            mov rdi, rax	       695	buffer.c	FUNCTION_9	CALL_1
0x4001026	      0xe800000000	                          call 0x400102b	       695	buffer.c	FUNCTION_9	CALL_1
0x400102b	        0x488b45f8	                mov rax, qword [rbp - 8]	       696	buffer.c	FUNCTION_9
0x400102f	    0xc78060170000	            mov dword [rax + 0x1760], 0 	       696	buffer.c	FUNCTION_9
0x4001039	        0x488b45f8	                mov rax, qword [rbp - 8]	       697	buffer.c	FUNCTION_9
0x400103d	    0xc78070140000	            mov dword [rax + 0x1470], 1 	       697	buffer.c	FUNCTION_9
0x4001047	        0x488b45f8	                mov rax, qword [rbp - 8]	       698	buffer.c	FUNCTION_9
0x400104b	    0xc78000170000	            mov dword [rax + 0x1700], 1 	       698	buffer.c	FUNCTION_9
0x4001055	        0x488b45f8	                mov rax, qword [rbp - 8]	       700	buffer.c	FUNCTION_9
0x4001059	    0xc7800c140000	            mov dword [rax + 0x140c], 0 	       700	buffer.c	FUNCTION_9
0x4001063	        0x488b45f8	                mov rax, qword [rbp - 8]	       701	buffer.c	FUNCTION_9
0x4001067	    0xc78014170000	            mov dword [rax + 0x1714], 0 	       701	buffer.c	FUNCTION_9
0x4001071	        0x488b45f8	                mov rax, qword [rbp - 8]	       703	buffer.c	FUNCTION_9
0x4001075	    0x48c740080000	                  mov qword [rax + 8], 0	       703	buffer.c	FUNCTION_9
0x400107d	        0x488b45f8	                mov rax, qword [rbp - 8]	       704	buffer.c	FUNCTION_9
0x4001081	    0xc74010010000	               mov dword [rax + 0x10], 1	       704	buffer.c	FUNCTION_9
0x4001088	        0x488b45f8	                mov rax, qword [rbp - 8]	       706	buffer.c	FUNCTION_9	CALL_2
0x400108c	          0x4889c7	                            mov rdi, rax	       706	buffer.c	FUNCTION_9	CALL_2
0x400108f	      0xe800000000	                          call 0x4001094	       706	buffer.c	FUNCTION_9	CALL_2
0x4001094	              0x90	                                     nop	       708	buffer.c	FUNCTION_9
0x4001095	              0xc9	                                   leave	       708	buffer.c	FUNCTION_9
0x4001096	              0xc3	                                     ret	       708	buffer.c	FUNCTION_9
bt_help	CALL,0:functions,0:SWITCH,0:FOR,0:ELSE,0:DO,0:WHILE,0:IF,0	14
0x400b6ac	              0x55	                                push rbp	      5617	buffer.c	FUNCTION_79
0x400b6ad	          0x4889e5	                            mov rbp, rsp	      5617	buffer.c	FUNCTION_79
0x400b6b0	        0x48897df8	                mov qword [rbp - 8], rdi	      5617	buffer.c	FUNCTION_79
0x400b6b4	      0x48837df800	                  cmp qword [rbp - 8], 0	      5618	buffer.c	FUNCTION_79
0x400b6b9	            0x7415	                            je 0x400b6d0	      5618	buffer.c	FUNCTION_79
0x400b6bb	        0x488b45f8	                mov rax, qword [rbp - 8]	      5618	buffer.c	FUNCTION_79
0x400b6bf	    0x8b8058170000	          mov eax, dword [rax + 0x1758] 	      5618	buffer.c	FUNCTION_79
0x400b6c5	            0x85c0	                           test eax, eax	      5618	buffer.c	FUNCTION_79
0x400b6c7	            0x7407	                            je 0x400b6d0	      5618	buffer.c	FUNCTION_79
0x400b6c9	      0xb801000000	                              mov eax, 1	      5618	buffer.c	FUNCTION_79
0x400b6ce	            0xeb05	                           jmp 0x400b6d5	      5618	buffer.c	FUNCTION_79
0x400b6d0	      0xb800000000	                              mov eax, 0	      5618	buffer.c	FUNCTION_79
0x400b6d5	              0x5d	                                 pop rbp	      5619	buffer.c	FUNCTION_79
0x400b6d6	              0xc3	                                     ret	      5619	buffer.c	FUNCTION_79
maketitle	CALL,47:functions,0:SWITCH,1:FOR,0:ELSE,10:DO,0:WHILE,0:IF,26	531
0x400626e	              0x55	                                push rbp	      3538	buffer.c	FUNCTION_61
0x400626f	          0x4889e5	                            mov rbp, rsp	      3538	buffer.c	FUNCTION_61
0x4006272	              0x53	                                push rbx	      3538	buffer.c	FUNCTION_61
0x4006273	    0x4881ec580400	                          sub rsp, 0x458	      3538	buffer.c	FUNCTION_61
0x400627a	    0x64488b042528	                mov rax, qword fs:[0x28]	      3538	buffer.c	FUNCTION_61
0x4006283	        0x488945e8	             mov qword [rbp - 0x18], rax	      3538	buffer.c	FUNCTION_61
0x4006287	            0x31c0	                            xor eax, eax	      3538	buffer.c	FUNCTION_61
0x4006289	    0x48c785c0fbff	              mov qword [rbp - 0x440], 0	      3540	buffer.c	FUNCTION_61
0x4006294	    0x48c785d0fbff	              mov qword [rbp - 0x430], 0	      3542	buffer.c	FUNCTION_61
0x400629f	    0xc785a0fbffff	              mov dword [rbp - 0x460], 0	      3543	buffer.c	FUNCTION_61
0x40062a9	      0xe800000000	                          call 0x40062ae	      3549	buffer.c	FUNCTION_61	IF_1	CALL_1
0x40062ae	            0x85c0	                           test eax, eax	      3549	buffer.c	FUNCTION_61	IF_1	CALL_1
0x40062b0	            0x750f	                           jne 0x40062c1	      3549	buffer.c	FUNCTION_61	IF_1	CALL_1
0x40062b2	    0xc70500000000	               mov dword [0x040062bc], 1	      3552	buffer.c	FUNCTION_61	IF_1
0x40062bc	      0xe95a090000	                           jmp 0x4006c1b	      3553	buffer.c	FUNCTION_61	IF_1
0x40062c1	    0xc70500000000	               mov dword [0x040062cb], 0	      3556	buffer.c	FUNCTION_61
0x40062cb	    0x8b0500000000	            mov eax, dword [0x040062d1] 	      3557	buffer.c	FUNCTION_61	IF_2
0x40062d1	            0x85c0	                           test eax, eax	      3557	buffer.c	FUNCTION_61	IF_2
0x40062d3	            0x7526	                           jne 0x40062fb	      3557	buffer.c	FUNCTION_61	IF_2
0x40062d5	    0x8b0500000000	            mov eax, dword [0x040062db] 	      3557	buffer.c	FUNCTION_61	IF_2
0x40062db	            0x85c0	                           test eax, eax	      3557	buffer.c	FUNCTION_61	IF_2
0x40062dd	            0x751c	                           jne 0x40062fb	      3557	buffer.c	FUNCTION_61	IF_2
0x40062df	    0x488b05000000	            mov rax, qword [0x040062e6] 	      3557	buffer.c	FUNCTION_61	IF_2
0x40062e6	          0x4885c0	                           test rax, rax	      3557	buffer.c	FUNCTION_61	IF_2
0x40062e9	            0x7510	                           jne 0x40062fb	      3557	buffer.c	FUNCTION_61	IF_2
0x40062eb	    0x488b05000000	            mov rax, qword [0x040062f2] 	      3557	buffer.c	FUNCTION_61	IF_2
0x40062f2	          0x4885c0	                           test rax, rax	      3557	buffer.c	FUNCTION_61	IF_2
0x40062f5	     0xf841f090000	                            je 0x4006c1a	      3557	buffer.c	FUNCTION_61	IF_2
0x40062fb	    0x8b0500000000	            mov eax, dword [0x04006301] 	      3560	buffer.c	FUNCTION_61	IF_3
0x4006301	            0x85c0	                           test eax, eax	      3560	buffer.c	FUNCTION_61	IF_3
0x4006303	     0xf84d8060000	                            je 0x40069e1	      3560	buffer.c	FUNCTION_61	IF_3
0x4006309	    0x488b05000000	            mov rax, qword [0x04006310] 	      3562	buffer.c	FUNCTION_61	IF_3	IF_4
0x4006310	          0x4885c0	                           test rax, rax	      3562	buffer.c	FUNCTION_61	IF_3	IF_4
0x4006313	            0x7e56	                           jle 0x400636b	      3562	buffer.c	FUNCTION_61	IF_3	IF_4
0x4006315	    0x488b15000000	            mov rdx, qword [0x0400631c] 	      3564	buffer.c	FUNCTION_61	IF_3	IF_4
0x400631c	    0x488b05000000	            mov rax, qword [0x04006323] 	      3564	buffer.c	FUNCTION_61	IF_3	IF_4
0x4006323	          0x4889d1	                            mov rcx, rdx	      3564	buffer.c	FUNCTION_61	IF_3	IF_4
0x4006326	        0x480fafc8	                           imul rcx, rax	      3564	buffer.c	FUNCTION_61	IF_3	IF_4
0x400632a	    0x48ba0bd7a370	          movabs rdx, 0xa3d70a3d70a3d70b	      3564	buffer.c	FUNCTION_61	IF_3	IF_4
0x4006334	          0x4889c8	                            mov rax, rcx	      3564	buffer.c	FUNCTION_61	IF_3	IF_4
0x4006337	          0x48f7ea	                                imul rdx	      3564	buffer.c	FUNCTION_61	IF_3	IF_4
0x400633a	        0x488d040a	                    lea rax, [rdx + rcx]	      3564	buffer.c	FUNCTION_61	IF_3	IF_4
0x400633e	        0x48c1f806	                              sar rax, 6	      3564	buffer.c	FUNCTION_61	IF_3	IF_4
0x4006342	          0x4889c2	                            mov rdx, rax	      3564	buffer.c	FUNCTION_61	IF_3	IF_4
0x4006345	          0x4889c8	                            mov rax, rcx	      3564	buffer.c	FUNCTION_61	IF_3	IF_4
0x4006348	        0x48c1f83f	                           sar rax, 0x3f	      3564	buffer.c	FUNCTION_61	IF_3	IF_4
0x400634c	          0x4829c2	                            sub rdx, rax	      3564	buffer.c	FUNCTION_61	IF_3	IF_4
0x400634f	          0x4889d0	                            mov rax, rdx	      3564	buffer.c	FUNCTION_61	IF_3	IF_4
0x4006352	    0x8985a0fbffff	            mov dword [rbp - 0x460], eax	      3564	buffer.c	FUNCTION_61	IF_3	IF_4
0x4006358	    0x83bda0fbffff	              cmp dword [rbp - 0x460], 9	      3565	buffer.c	FUNCTION_61	IF_3	IF_4	IF_5
0x400635f	            0x7f0a	                            jg 0x400636b	      3565	buffer.c	FUNCTION_61	IF_3	IF_4	IF_5
0x4006361	    0xc785a0fbffff	            mov dword [rbp - 0x460], 0xa	      3566	buffer.c	FUNCTION_61	IF_3	IF_4	IF_5
0x400636b	    0x488d85e0fbff	                  lea rax, [rbp - 0x420]	      3569	buffer.c	FUNCTION_61	IF_3
0x4006372	    0x488985c0fbff	            mov qword [rbp - 0x440], rax	      3569	buffer.c	FUNCTION_61	IF_3
0x4006379	    0x488b05000000	            mov rax, qword [0x04006380] 	      3570	buffer.c	FUNCTION_61	IF_3	IF_6
0x4006380	           0xfb600	                   movzx eax, byte [rax]	      3570	buffer.c	FUNCTION_61	IF_3	IF_6
0x4006383	            0x84c0	                             test al, al	      3570	buffer.c	FUNCTION_61	IF_3	IF_6
0x4006385	     0xf84e0000000	                            je 0x400646b	      3570	buffer.c	FUNCTION_61	IF_3	IF_6
0x400638b	    0x8b0500000000	            mov eax, dword [0x04006391] 	      3573	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7
0x4006391	          0x83e002	                              and eax, 2	      3573	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7
0x4006394	            0x85c0	                           test eax, eax	      3573	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7
0x4006396	     0xf84bc000000	                            je 0x4006458	      3573	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7
0x400639c	    0xc785a8fbffff	              mov dword [rbp - 0x458], 0	      3575	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7
0x40063a6	    0x8b0500000000	            mov eax, dword [0x040063ac] 	      3576	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7
0x40063ac	    0x8985acfbffff	            mov dword [rbp - 0x454], eax	      3576	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7
0x40063b2	      0xbe00000000	                              mov esi, 0	      3579	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_2
0x40063b7	      0xbf00000000	                              mov edi, 0	      3579	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_2
0x40063bc	      0xe800000000	                          call 0x40063c1	      3579	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_2
0x40063c1	    0x8985a8fbffff	            mov dword [rbp - 0x458], eax	      3579	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_2
0x40063c7	    0xc70500000000	               mov dword [0x040063d1], 0	      3581	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7
0x40063d1	    0x488b15000000	            mov rdx, qword [0x040063d8] 	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x40063d8	    0x488b05000000	            mov rax, qword [0x040063df] 	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x40063df	    0x8bbda8fbffff	            mov edi, dword [rbp - 0x458]	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x40063e5	    0x488bb5c0fbff	            mov rsi, qword [rbp - 0x440]	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x40063ec	        0x4883ec08	                              sub rsp, 8	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x40063f0	            0x6a00	                                  push 0	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x40063f2	            0x6a00	                                  push 0	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x40063f4	    0x8b8da0fbffff	            mov ecx, dword [rbp - 0x460]	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x40063fa	              0x51	                                push rcx	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x40063fb	    0x41b900000000	                              mov r9d, 0	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x4006401	          0x4189f8	                            mov r8d, edi	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x4006404	          0x4889d1	                            mov rcx, rdx	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x4006407	      0xba01040000	                          mov edx, 0x401	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x400640c	          0x4889c7	                            mov rdi, rax	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x400640f	      0xe800000000	                          call 0x4006414	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x4006414	        0x4883c420	                           add rsp, 0x20	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x4006418	    0x8b0500000000	            mov eax, dword [0x0400641e] 	      3585	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	IF_8
0x400641e	            0x85c0	                           test eax, eax	      3585	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	IF_8
0x4006420	            0x741f	                            je 0x4006441	      3585	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	IF_8
0x4006422	    0x41b8fbffffff	                     mov r8d, 0xfffffffb	      3586	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	IF_8	CALL_4
0x4006428	      0xb901000000	                              mov ecx, 1	      3586	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	IF_8	CALL_4
0x400642d	      0xba00000000	                              mov edx, 0	      3586	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	IF_8	CALL_4
0x4006432	      0xbeffffffff	                     mov esi, 0xffffffff	      3586	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	IF_8	CALL_4
0x4006437	      0xbf00000000	                              mov edi, 0	      3586	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	IF_8	CALL_4
0x400643c	      0xe800000000	                          call 0x4006441	      3586	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	IF_8	CALL_4
0x4006441	    0x8b0500000000	            mov eax, dword [0x04006447] 	      3588	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7
0x4006447	     0xb85acfbffff	             or eax, dword [rbp - 0x454]	      3588	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7
0x400644d	    0x890500000000	            mov dword [0x04006453], eax 	      3588	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7
0x4006453	      0xe989050000	                           jmp 0x40069e1	      3588	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7
0x4006458	    0x488b05000000	            mov rax, qword [0x0400645f] 	      3592	buffer.c	FUNCTION_61	IF_3	IF_6	ELSE_1
0x400645f	    0x488985c0fbff	            mov qword [rbp - 0x440], rax	      3592	buffer.c	FUNCTION_61	IF_3	IF_6	ELSE_1
0x4006466	      0xe976050000	                           jmp 0x40069e1	      3592	buffer.c	FUNCTION_61	IF_3	IF_6	ELSE_1
0x400646b	    0x488b05000000	            mov rax, qword [0x04006472] 	      3601	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_9
0x4006472	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      3601	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_9
0x4006479	          0x4885c0	                           test rax, rax	      3601	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_9
0x400647c	            0x7529	                           jne 0x40064a7	      3601	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_9
0x400647e	      0xbf00000000	                              mov edi, 0	      3602	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_6
0x4006483	      0xe800000000	                          call 0x4006488	      3602	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_6
0x4006488	          0x4889c1	                            mov rcx, rax	      3602	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_6
0x400648b	    0x488d85e0fbff	                  lea rax, [rbp - 0x420]	      3602	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_6
0x4006492	      0xba9d030000	                          mov edx, 0x39d	      3602	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_6
0x4006497	          0x4889ce	                            mov rsi, rcx	      3602	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_6
0x400649a	          0x4889c7	                            mov rdi, rax	      3602	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_6
0x400649d	      0xe800000000	                          call 0x40064a2	      3602	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_6
0x40064a2	      0xe997000000	                           jmp 0x400653e	      3602	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_6
0x40064a7	    0x488b05000000	            mov rax, qword [0x040064ae] 	      3604	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_3	IF_10
0x40064ae	    0x488b80481c00	          mov rax, qword [rax + 0x1c48] 	      3604	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_3	IF_10
0x40064b5	          0x4885c0	                           test rax, rax	      3604	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_3	IF_10
0x40064b8	            0x7432	                            je 0x40064ec	      3604	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_3	IF_10
0x40064ba	    0x488b05000000	            mov rax, qword [0x040064c1] 	      3606	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_3	IF_10	CALL_8
0x40064c1	    0x488b80481c00	          mov rax, qword [rax + 0x1c48] 	      3606	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_3	IF_10	CALL_8
0x40064c8	          0x4889c7	                            mov rdi, rax	      3606	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_3	IF_10	CALL_8
0x40064cb	      0xe800000000	                          call 0x40064d0	      3606	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_3	IF_10	CALL_8
0x40064d0	          0x4889c1	                            mov rcx, rax	      3606	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_3	IF_10	CALL_8
0x40064d3	    0x488d85e0fbff	                  lea rax, [rbp - 0x420]	      3606	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_3	IF_10	CALL_8
0x40064da	      0xba9d030000	                          mov edx, 0x39d	      3606	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_3	IF_10	CALL_8
0x40064df	          0x4889ce	                            mov rsi, rcx	      3606	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_3	IF_10	CALL_8
0x40064e2	          0x4889c7	                            mov rdi, rax	      3606	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_3	IF_10	CALL_8
0x40064e5	      0xe800000000	                          call 0x40064ea	      3606	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_3	IF_10	CALL_8
0x40064ea	            0xeb52	                           jmp 0x400653e	      3606	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_3	IF_10	CALL_8
0x40064ec	    0x488b05000000	            mov rax, qword [0x040064f3] 	      3612	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_10
0x40064f3	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      3612	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_10
0x40064fa	          0x4889c7	                            mov rdi, rax	      3612	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_10
0x40064fd	      0xe800000000	                          call 0x4006502	      3612	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_10
0x4006502	          0x4889c7	                            mov rdi, rax	      3612	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_10
0x4006505	      0xe800000000	                          call 0x400650a	      3612	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_10
0x400650a	    0x488985d8fbff	            mov qword [rbp - 0x428], rax	      3612	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_10
0x4006511	    0x488b8dd8fbff	            mov rcx, qword [rbp - 0x428]	      3613	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_11
0x4006518	    0x488d85e0fbff	                  lea rax, [rbp - 0x420]	      3613	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_11
0x400651f	      0xba9d030000	                          mov edx, 0x39d	      3613	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_11
0x4006524	          0x4889ce	                            mov rsi, rcx	      3613	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_11
0x4006527	          0x4889c7	                            mov rdi, rax	      3613	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_11
0x400652a	      0xe800000000	                          call 0x400652f	      3613	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_11
0x400652f	    0x488b85d8fbff	            mov rax, qword [rbp - 0x428]	      3614	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_12
0x4006536	          0x4889c7	                            mov rdi, rax	      3614	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_12
0x4006539	      0xe800000000	                          call 0x400653e	      3614	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_12
0x400653e	    0x488b05000000	            mov rax, qword [0x04006545] 	      3618	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11
0x4006545	    0x488b80481c00	          mov rax, qword [rax + 0x1c48] 	      3618	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11
0x400654c	          0x4885c0	                           test rax, rax	      3618	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11
0x400654f	     0xf8577010000	                           jne 0x40066cc	      3618	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11
0x4006555	    0x488b05000000	            mov rax, qword [0x0400655c] 	      3620	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_13
0x400655c	          0x4889c7	                            mov rdi, rax	      3620	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_13
0x400655f	      0xe800000000	                          call 0x4006564	      3620	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_13
0x4006564	            0x89c2	                            mov edx, eax	      3620	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_13
0x4006566	    0x488b05000000	            mov rax, qword [0x0400656d] 	      3621	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1
0x400656d	    0x8b8060150000	          mov eax, dword [rax + 0x1560] 	      3621	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1
0x4006573	             0x1c0	                            add eax, eax	      3621	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1
0x4006575	             0x1c2	                            add edx, eax	      3621	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1
0x4006577	    0x488b05000000	            mov rax, qword [0x0400657e] 	      3622	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1
0x400657e	    0x8b8040150000	          mov eax, dword [rax + 0x1540] 	      3622	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1
0x4006584	            0x85c0	                           test eax, eax	      3622	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1
0x4006586	            0x7507	                           jne 0x400658f	      3622	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1
0x4006588	      0xb804000000	                              mov eax, 4	      3622	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1
0x400658d	            0xeb05	                           jmp 0x4006594	      3622	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1
0x400658f	      0xb800000000	                              mov eax, 0	      3622	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1
0x4006594	             0x1d0	                            add eax, edx	      3622	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1
0x4006596	          0x83f807	                              cmp eax, 7	      3620	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_13
0x4006599	     0xf872d010000	                            ja 0x40066cc	      3620	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_13
0x400659f	            0x89c0	                            mov eax, eax	      3620	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_13
0x40065a1	    0x488b04c50000	                  mov rax, qword [rax*8]	      3620	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_13
0x40065a9	            0xffe0	                                 jmp rax	      3620	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_13
0x40065ab	    0x488d85e0fbff	                  lea rax, [rbp - 0x420]	      3624	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_14
0x40065b2	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      3624	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_14
0x40065b9	          0x4889c2	                            mov rdx, rax	      3624	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_14
0x40065bc	      0xb800000000	                              mov eax, 0	      3624	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_14
0x40065c1	          0x4889d7	                            mov rdi, rdx	      3624	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_14
0x40065c4	            0xf2ae	              repne scasb al, byte [rdi]	      3624	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_14
0x40065c6	          0x4889c8	                            mov rax, rcx	      3624	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_14
0x40065c9	          0x48f7d0	                                 not rax	      3624	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_14
0x40065cc	        0x488d50ff	                      lea rdx, [rax - 1]	      3624	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_14
0x40065d0	    0x488d85e0fbff	                  lea rax, [rbp - 0x420]	      3624	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_14
0x40065d7	          0x4801d0	                            add rax, rdx	      3624	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_14
0x40065da	      0x66c700202b	                  mov word [rax], 0x2b20	      3624	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_14
0x40065df	        0xc6400200	                   mov byte [rax + 2], 0	      3624	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_14
0x40065e3	      0xe9e4000000	                           jmp 0x40066cc	      3624	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_14
0x40065e8	    0x488d85e0fbff	                  lea rax, [rbp - 0x420]	      3625	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_15
0x40065ef	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      3625	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_15
0x40065f6	          0x4889c2	                            mov rdx, rax	      3625	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_15
0x40065f9	      0xb800000000	                              mov eax, 0	      3625	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_15
0x40065fe	          0x4889d7	                            mov rdi, rdx	      3625	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_15
0x4006601	            0xf2ae	              repne scasb al, byte [rdi]	      3625	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_15
0x4006603	          0x4889c8	                            mov rax, rcx	      3625	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_15
0x4006606	          0x48f7d0	                                 not rax	      3625	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_15
0x4006609	        0x488d50ff	                      lea rdx, [rax - 1]	      3625	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_15
0x400660d	    0x488d85e0fbff	                  lea rax, [rbp - 0x420]	      3625	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_15
0x4006614	          0x4801d0	                            add rax, rdx	      3625	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_15
0x4006617	      0x66c700203d	                  mov word [rax], 0x3d20	      3625	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_15
0x400661c	        0xc6400200	                   mov byte [rax + 2], 0	      3625	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_15
0x4006620	      0xe9a7000000	                           jmp 0x40066cc	      3625	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_15
0x4006625	    0x488d85e0fbff	                  lea rax, [rbp - 0x420]	      3626	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_16
0x400662c	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      3626	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_16
0x4006633	          0x4889c2	                            mov rdx, rax	      3626	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_16
0x4006636	      0xb800000000	                              mov eax, 0	      3626	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_16
0x400663b	          0x4889d7	                            mov rdi, rdx	      3626	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_16
0x400663e	            0xf2ae	              repne scasb al, byte [rdi]	      3626	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_16
0x4006640	          0x4889c8	                            mov rax, rcx	      3626	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_16
0x4006643	          0x48f7d0	                                 not rax	      3626	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_16
0x4006646	        0x488d50ff	                      lea rdx, [rax - 1]	      3626	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_16
0x400664a	    0x488d85e0fbff	                  lea rax, [rbp - 0x420]	      3626	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_16
0x4006651	          0x4801d0	                            add rax, rdx	      3626	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_16
0x4006654	    0xc700203d2b00	               mov dword [rax], 0x2b3d20	      3626	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_16
0x400665a	            0xeb70	                           jmp 0x40066cc	      3626	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_16
0x400665c	    0x488d85e0fbff	                  lea rax, [rbp - 0x420]	      3628	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_17
0x4006663	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      3628	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_17
0x400666a	          0x4889c2	                            mov rdx, rax	      3628	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_17
0x400666d	      0xb800000000	                              mov eax, 0	      3628	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_17
0x4006672	          0x4889d7	                            mov rdi, rdx	      3628	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_17
0x4006675	            0xf2ae	              repne scasb al, byte [rdi]	      3628	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_17
0x4006677	          0x4889c8	                            mov rax, rcx	      3628	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_17
0x400667a	          0x48f7d0	                                 not rax	      3628	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_17
0x400667d	        0x488d50ff	                      lea rdx, [rax - 1]	      3628	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_17
0x4006681	    0x488d85e0fbff	                  lea rax, [rbp - 0x420]	      3628	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_17
0x4006688	          0x4801d0	                            add rax, rdx	      3628	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_17
0x400668b	      0x66c700202d	                  mov word [rax], 0x2d20	      3628	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_17
0x4006690	        0xc6400200	                   mov byte [rax + 2], 0	      3628	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_17
0x4006694	            0xeb36	                           jmp 0x40066cc	      3628	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_17
0x4006696	    0x488d85e0fbff	                  lea rax, [rbp - 0x420]	      3630	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_18
0x400669d	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      3630	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_18
0x40066a4	          0x4889c2	                            mov rdx, rax	      3630	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_18
0x40066a7	      0xb800000000	                              mov eax, 0	      3630	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_18
0x40066ac	          0x4889d7	                            mov rdi, rdx	      3630	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_18
0x40066af	            0xf2ae	              repne scasb al, byte [rdi]	      3630	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_18
0x40066b1	          0x4889c8	                            mov rax, rcx	      3630	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_18
0x40066b4	          0x48f7d0	                                 not rax	      3630	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_18
0x40066b7	        0x488d50ff	                      lea rdx, [rax - 1]	      3630	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_18
0x40066bb	    0x488d85e0fbff	                  lea rax, [rbp - 0x420]	      3630	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_18
0x40066c2	          0x4801d0	                            add rax, rdx	      3630	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_18
0x40066c5	    0xc700202d2b00	               mov dword [rax], 0x2b2d20	      3630	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_18
0x40066cb	              0x90	                                     nop	      3630	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_18
0x40066cc	    0x488b05000000	            mov rax, qword [0x040066d3] 	      3633	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x40066d3	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      3633	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x40066da	          0x4885c0	                           test rax, rax	      3633	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x40066dd	     0xf84fd010000	                            je 0x40068e0	      3633	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x40066e3	    0x488b05000000	            mov rax, qword [0x040066ea] 	      3635	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x40066ea	    0x488b80481c00	          mov rax, qword [rax + 0x1c48] 	      3635	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x40066f1	          0x4885c0	                           test rax, rax	      3635	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x40066f4	     0xf85e6010000	                           jne 0x40068e0	      3635	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x40066fa	    0x488d85e0fbff	                  lea rax, [rbp - 0x420]	      3640	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_19
0x4006701	          0x4889c7	                            mov rdi, rax	      3640	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_19
0x4006704	      0xe800000000	                          call 0x4006709	      3640	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_19
0x4006709	    0x8985b0fbffff	            mov dword [rbp - 0x450], eax	      3640	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_19
0x400670f	    0x8b85b0fbffff	            mov eax, dword [rbp - 0x450]	      3641	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x4006715	          0x8d5001	                      lea edx, [rax + 1]	      3641	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x4006718	    0x8995b0fbffff	            mov dword [rbp - 0x450], edx	      3641	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x400671e	            0x4898	                                    cdqe	      3641	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x4006720	    0xc68405e0fbff	     mov byte [rbp + rax - 0x420], 0x20 	      3641	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x4006728	    0x8b85b0fbffff	            mov eax, dword [rbp - 0x450]	      3642	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x400672e	          0x8d5001	                      lea edx, [rax + 1]	      3642	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x4006731	    0x8995b0fbffff	            mov dword [rbp - 0x450], edx	      3642	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x4006737	            0x4898	                                    cdqe	      3642	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x4006739	    0xc68405e0fbff	     mov byte [rbp + rax - 0x420], 0x28 	      3642	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x4006741	      0xb8ed030000	                          mov eax, 0x3ed	      3643	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_20
0x4006746	    0x2b85b0fbffff	            sub eax, dword [rbp - 0x450]	      3643	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_20
0x400674c	            0x89c2	                            mov edx, eax	      3643	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_20
0x400674e	    0x8b85b0fbffff	            mov eax, dword [rbp - 0x450]	      3643	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_20
0x4006754	            0x4898	                                    cdqe	      3643	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_20
0x4006756	    0x488d8de0fbff	                  lea rcx, [rbp - 0x420]	      3643	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_20
0x400675d	        0x488d3c01	                    lea rdi, [rcx + rax]	      3643	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_20
0x4006761	    0x488b05000000	            mov rax, qword [0x04006768] 	      3643	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_20
0x4006768	    0x488bb0880000	            mov rsi, qword [rax + 0x88] 	      3643	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_20
0x400676f	    0x488b05000000	            mov rax, qword [0x04006776] 	      3643	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_20
0x4006776	    0x41b801000000	                              mov r8d, 1	      3643	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_20
0x400677c	            0x89d1	                            mov ecx, edx	      3643	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_20
0x400677e	          0x4889fa	                            mov rdx, rdi	      3643	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_20
0x4006781	          0x4889c7	                            mov rdi, rax	      3643	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_20
0x4006784	      0xe800000000	                          call 0x4006789	      3643	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_20
0x4006789	    0x8b85b0fbffff	            mov eax, dword [rbp - 0x450]	      3651	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_22
0x400678f	            0x4898	                                    cdqe	      3651	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_22
0x4006791	    0x488d95e0fbff	                  lea rdx, [rbp - 0x420]	      3651	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_22
0x4006798	          0x4801d0	                            add rax, rdx	      3651	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_22
0x400679b	          0x4889c7	                            mov rdi, rax	      3651	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_22
0x400679e	      0xe800000000	                          call 0x40067a3	      3651	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_22
0x40067a3	    0x488985d8fbff	            mov qword [rbp - 0x428], rax	      3651	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_22
0x40067aa	    0x8b85b0fbffff	            mov eax, dword [rbp - 0x450]	      3652	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14
0x40067b0	            0x4898	                                    cdqe	      3652	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14
0x40067b2	    0x488d95e0fbff	                  lea rdx, [rbp - 0x420]	      3652	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14
0x40067b9	          0x4801d0	                            add rax, rdx	      3652	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14
0x40067bc	    0x483b85d8fbff	            cmp rax, qword [rbp - 0x428]	      3652	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14
0x40067c3	            0x753d	                           jne 0x4006802	      3652	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14
0x40067c5	      0xb8ec030000	                          mov eax, 0x3ec	      3656	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14
0x40067ca	    0x2b85b0fbffff	            sub eax, dword [rbp - 0x450]	      3656	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14
0x40067d0	          0x4863d8	                         movsxd rbx, eax	      3655	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14	CALL_24
0x40067d3	      0xbf00000000	                              mov edi, 0	      3655	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14	CALL_24
0x40067d8	      0xe800000000	                          call 0x40067dd	      3655	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14	CALL_24
0x40067dd	          0x4889c1	                            mov rcx, rax	      3655	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14	CALL_24
0x40067e0	    0x8b85b0fbffff	            mov eax, dword [rbp - 0x450]	      3655	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14	CALL_24
0x40067e6	            0x4898	                                    cdqe	      3655	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14	CALL_24
0x40067e8	    0x488d95e0fbff	                  lea rdx, [rbp - 0x420]	      3655	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14	CALL_24
0x40067ef	          0x4801d0	                            add rax, rdx	      3655	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14	CALL_24
0x40067f2	          0x4889da	                            mov rdx, rbx	      3655	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14	CALL_24
0x40067f5	          0x4889ce	                            mov rsi, rcx	      3655	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14	CALL_24
0x40067f8	          0x4889c7	                            mov rdi, rax	      3655	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14	CALL_24
0x40067fb	      0xe800000000	                          call 0x4006800	      3655	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14	CALL_24
0x4006800	            0xeb0a	                           jmp 0x400680c	      3655	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14	CALL_24
0x4006802	    0x488b85d8fbff	            mov rax, qword [rbp - 0x428]	      3659	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5
0x4006809	          0xc60000	                       mov byte [rax], 0	      3659	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5
0x400680c	    0x81bdb0fbffff	         cmp dword [rbp - 0x450], 0x3ec 	      3664	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15
0x4006816	            0x7f64	                            jg 0x400687c	      3664	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15
0x4006818	    0x8b85b0fbffff	            mov eax, dword [rbp - 0x450]	      3666	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_25
0x400681e	            0x4898	                                    cdqe	      3666	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_25
0x4006820	    0x488d95e0fbff	                  lea rdx, [rbp - 0x420]	      3666	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_25
0x4006827	          0x4801d0	                            add rax, rdx	      3666	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_25
0x400682a	          0x4889c7	                            mov rdi, rax	      3666	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_25
0x400682d	      0xe800000000	                          call 0x4006832	      3666	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_25
0x4006832	    0x488985d8fbff	            mov qword [rbp - 0x428], rax	      3666	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_25
0x4006839	      0xb8ed030000	                          mov eax, 0x3ed	      3667	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_26
0x400683e	    0x2b85b0fbffff	            sub eax, dword [rbp - 0x450]	      3667	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_26
0x4006844	          0x4863d0	                         movsxd rdx, eax	      3667	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_26
0x4006847	    0x8b85b0fbffff	            mov eax, dword [rbp - 0x450]	      3667	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_26
0x400684d	            0x4898	                                    cdqe	      3667	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_26
0x400684f	    0x488d8de0fbff	                  lea rcx, [rbp - 0x420]	      3667	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_26
0x4006856	          0x4801c1	                            add rcx, rax	      3667	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_26
0x4006859	    0x488b85d8fbff	            mov rax, qword [rbp - 0x428]	      3667	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_26
0x4006860	          0x4889c6	                            mov rsi, rax	      3667	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_26
0x4006863	          0x4889cf	                            mov rdi, rcx	      3667	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_26
0x4006866	      0xe800000000	                          call 0x400686b	      3667	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_26
0x400686b	    0x488b85d8fbff	            mov rax, qword [rbp - 0x428]	      3668	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_27
0x4006872	          0x4889c7	                            mov rdi, rax	      3668	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_27
0x4006875	      0xe800000000	                          call 0x400687a	      3668	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_27
0x400687a	            0xeb30	                           jmp 0x40068ac	      3668	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_27
0x400687c	      0xb8f7030000	                          mov eax, 0x3f7	      3673	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_6
0x4006881	    0x2b85b0fbffff	            sub eax, dword [rbp - 0x450]	      3673	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_6
0x4006887	            0x4898	                                    cdqe	      3672	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_6	CALL_28
0x4006889	    0x8b95b0fbffff	            mov edx, dword [rbp - 0x450]	      3672	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_6	CALL_28
0x400688f	          0x4863d2	                         movsxd rdx, edx	      3672	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_6	CALL_28
0x4006892	    0x488d8de0fbff	                  lea rcx, [rbp - 0x420]	      3672	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_6	CALL_28
0x4006899	          0x4801d1	                            add rcx, rdx	      3672	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_6	CALL_28
0x400689c	          0x4889c2	                            mov rdx, rax	      3672	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_6	CALL_28
0x400689f	      0xbe00000000	                              mov esi, 0	      3672	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_6	CALL_28
0x40068a4	          0x4889cf	                            mov rdi, rcx	      3672	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_6	CALL_28
0x40068a7	      0xe800000000	                          call 0x40068ac	      3672	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_6	CALL_28
0x40068ac	    0x488d85e0fbff	                  lea rax, [rbp - 0x420]	      3675	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_29
0x40068b3	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      3675	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_29
0x40068ba	          0x4889c2	                            mov rdx, rax	      3675	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_29
0x40068bd	      0xb800000000	                              mov eax, 0	      3675	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_29
0x40068c2	          0x4889d7	                            mov rdi, rdx	      3675	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_29
0x40068c5	            0xf2ae	              repne scasb al, byte [rdi]	      3675	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_29
0x40068c7	          0x4889c8	                            mov rax, rcx	      3675	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_29
0x40068ca	          0x48f7d0	                                 not rax	      3675	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_29
0x40068cd	        0x488d50ff	                      lea rdx, [rax - 1]	      3675	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_29
0x40068d1	    0x488d85e0fbff	                  lea rax, [rbp - 0x420]	      3675	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_29
0x40068d8	          0x4801d0	                            add rax, rdx	      3675	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_29
0x40068db	      0x66c7002900	                    mov word [rax], 0x29	      3675	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_29
0x40068e0	    0x488b05000000	            mov rax, qword [0x040068e7] 	      3678	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_30
0x40068e7	    0x488db5e0fbff	                  lea rsi, [rbp - 0x420]	      3678	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_30
0x40068ee	      0xb900000000	                              mov ecx, 0	      3678	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_30
0x40068f3	      0xbaf7030000	                          mov edx, 0x3f7	      3678	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_30
0x40068f8	          0x4889c7	                            mov rdi, rax	      3678	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_30
0x40068fb	      0xe846330000	              call sym.append_arg_number	      3678	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_30
0x4006900	    0x488b05000000	            mov rax, qword [0x04006907] 	      3681	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16
0x4006907	          0x4885c0	                           test rax, rax	      3681	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16
0x400690a	            0x7455	                            je 0x4006961	      3681	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16
0x400690c	    0x488d85e0fbff	                  lea rax, [rbp - 0x420]	      3683	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16	CALL_31
0x4006913	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      3683	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16	CALL_31
0x400691a	          0x4889c2	                            mov rdx, rax	      3683	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16	CALL_31
0x400691d	      0xb800000000	                              mov eax, 0	      3683	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16	CALL_31
0x4006922	          0x4889d7	                            mov rdi, rdx	      3683	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16	CALL_31
0x4006925	            0xf2ae	              repne scasb al, byte [rdi]	      3683	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16	CALL_31
0x4006927	          0x4889c8	                            mov rax, rcx	      3683	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16	CALL_31
0x400692a	          0x48f7d0	                                 not rax	      3683	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16	CALL_31
0x400692d	        0x488d50ff	                      lea rdx, [rax - 1]	      3683	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16	CALL_31
0x4006931	    0x488d85e0fbff	                  lea rax, [rbp - 0x420]	      3683	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16	CALL_31
0x4006938	          0x4801d0	                            add rax, rdx	      3683	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16	CALL_31
0x400693b	    0xc700202d2000	               mov dword [rax], 0x202d20	      3683	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16	CALL_31
0x4006941	    0x488b0d000000	            mov rcx, qword [0x04006948] 	      3684	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16	CALL_32
0x4006948	    0x488d85e0fbff	                  lea rax, [rbp - 0x420]	      3684	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16	CALL_32
0x400694f	      0xba01040000	                          mov edx, 0x401	      3684	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16	CALL_32
0x4006954	          0x4889ce	                            mov rsi, rcx	      3684	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16	CALL_32
0x4006957	          0x4889c7	                            mov rdi, rax	      3684	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16	CALL_32
0x400695a	      0xe800000000	                          call 0x400695f	      3684	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16	CALL_32
0x400695f	            0xeb3f	                           jmp 0x40069a0	      3684	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16	CALL_32
0x4006961	    0x488d85e0fbff	                  lea rax, [rbp - 0x420]	      3688	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_33
0x4006968	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      3688	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_33
0x400696f	          0x4889c2	                            mov rdx, rax	      3688	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_33
0x4006972	      0xb800000000	                              mov eax, 0	      3688	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_33
0x4006977	          0x4889d7	                            mov rdi, rdx	      3688	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_33
0x400697a	            0xf2ae	              repne scasb al, byte [rdi]	      3688	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_33
0x400697c	          0x4889c8	                            mov rax, rcx	      3688	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_33
0x400697f	          0x48f7d0	                                 not rax	      3688	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_33
0x4006982	        0x488d50ff	                      lea rdx, [rax - 1]	      3688	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_33
0x4006986	    0x488d85e0fbff	                  lea rax, [rbp - 0x420]	      3688	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_33
0x400698d	          0x4801d0	                            add rax, rdx	      3688	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_33
0x4006990	    0xc700202d2056	            mov dword [rax], 0x56202d20 	      3688	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_33
0x4006996	    0x66c74004494d	              mov word [rax + 4], 0x4d49	      3688	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_33
0x400699c	        0xc6400600	                   mov byte [rax + 6], 0	      3688	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_33
0x40069a0	    0x83bda0fbffff	              cmp dword [rbp - 0x460], 0	      3690	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_17
0x40069a7	            0x7e38	                           jle 0x40069e1	      3690	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_17
0x40069a9	    0x488d85e0fbff	                  lea rax, [rbp - 0x420]	      3693	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_17	IF_18	CALL_34
0x40069b0	          0x4889c7	                            mov rdi, rax	      3693	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_17	IF_18	CALL_34
0x40069b3	      0xe800000000	                          call 0x40069b8	      3693	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_17	IF_18	CALL_34
0x40069b8	    0x3b85a0fbffff	            cmp eax, dword [rbp - 0x460]	      3693	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_17	IF_18	CALL_34
0x40069be	            0x7e21	                           jle 0x40069e1	      3693	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_17	IF_18	CALL_34
0x40069c0	    0x8b95a0fbffff	            mov edx, dword [rbp - 0x460]	      3694	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_17	CALL_35
0x40069c6	    0x488db5e0fbff	                  lea rsi, [rbp - 0x420]	      3694	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_17	CALL_35
0x40069cd	    0x488d85e0fbff	                  lea rax, [rbp - 0x420]	      3694	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_17	CALL_35
0x40069d4	      0xb901040000	                          mov ecx, 0x401	      3694	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_17	CALL_35
0x40069d9	          0x4889c7	                            mov rdi, rax	      3694	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_17	CALL_35
0x40069dc	      0xe800000000	                          call 0x40069e1	      3694	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_17	CALL_35
0x40069e1	    0x488b85c0fbff	            mov rax, qword [rbp - 0x440]	      3698	buffer.c	FUNCTION_61	CALL_36
0x40069e8	      0xbe00000000	                              mov esi, 0	      3698	buffer.c	FUNCTION_61	CALL_36
0x40069ed	          0x4889c7	                            mov rdi, rax	      3698	buffer.c	FUNCTION_61	CALL_36
0x40069f0	      0xe840020000	                      call sym.ti_change	      3698	buffer.c	FUNCTION_61	CALL_36
0x40069f5	    0x8985b4fbffff	            mov dword [rbp - 0x44c], eax	      3698	buffer.c	FUNCTION_61	CALL_36
0x40069fb	    0x8b0500000000	            mov eax, dword [0x04006a01] 	      3700	buffer.c	FUNCTION_61	IF_19
0x4006a01	            0x85c0	                           test eax, eax	      3700	buffer.c	FUNCTION_61	IF_19
0x4006a03	     0xf84e7010000	                            je 0x4006bf0	      3700	buffer.c	FUNCTION_61	IF_19
0x4006a09	    0x488d85e0fbff	                  lea rax, [rbp - 0x420]	      3702	buffer.c	FUNCTION_61	IF_19
0x4006a10	    0x488985d0fbff	            mov qword [rbp - 0x430], rax	      3702	buffer.c	FUNCTION_61	IF_19
0x4006a17	    0x488b05000000	            mov rax, qword [0x04006a1e] 	      3703	buffer.c	FUNCTION_61	IF_19	IF_20
0x4006a1e	           0xfb600	                   movzx eax, byte [rax]	      3703	buffer.c	FUNCTION_61	IF_19	IF_20
0x4006a21	            0x84c0	                             test al, al	      3703	buffer.c	FUNCTION_61	IF_19	IF_20
0x4006a23	     0xf84db000000	                            je 0x4006b04	      3703	buffer.c	FUNCTION_61	IF_19	IF_20
0x4006a29	    0x8b0500000000	            mov eax, dword [0x04006a2f] 	      3706	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21
0x4006a2f	          0x83e001	                              and eax, 1	      3706	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21
0x4006a32	            0x85c0	                           test eax, eax	      3706	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21
0x4006a34	     0xf84b7000000	                            je 0x4006af1	      3706	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21
0x4006a3a	    0xc785b8fbffff	              mov dword [rbp - 0x448], 0	      3708	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21
0x4006a44	    0x8b0500000000	            mov eax, dword [0x04006a4a] 	      3709	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21
0x4006a4a	    0x8985bcfbffff	            mov dword [rbp - 0x444], eax	      3709	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21
0x4006a50	      0xbe00000000	                              mov esi, 0	      3712	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_37
0x4006a55	      0xbf00000000	                              mov edi, 0	      3712	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_37
0x4006a5a	      0xe800000000	                          call 0x4006a5f	      3712	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_37
0x4006a5f	    0x8985b8fbffff	            mov dword [rbp - 0x448], eax	      3712	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_37
0x4006a65	    0xc70500000000	               mov dword [0x04006a6f], 0	      3714	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21
0x4006a6f	    0x488b15000000	            mov rdx, qword [0x04006a76] 	      3715	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_38
0x4006a76	    0x488b05000000	            mov rax, qword [0x04006a7d] 	      3715	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_38
0x4006a7d	    0x8b8db8fbffff	            mov ecx, dword [rbp - 0x448]	      3715	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_38
0x4006a83	    0x488bb5d0fbff	            mov rsi, qword [rbp - 0x430]	      3715	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_38
0x4006a8a	        0x4883ec08	                              sub rsp, 8	      3715	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_38
0x4006a8e	            0x6a00	                                  push 0	      3715	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_38
0x4006a90	            0x6a00	                                  push 0	      3715	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_38
0x4006a92	            0x6a00	                                  push 0	      3715	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_38
0x4006a94	    0x41b900000000	                              mov r9d, 0	      3715	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_38
0x4006a9a	          0x4189c8	                            mov r8d, ecx	      3715	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_38
0x4006a9d	          0x4889d1	                            mov rcx, rdx	      3715	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_38
0x4006aa0	      0xba01040000	                          mov edx, 0x401	      3715	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_38
0x4006aa5	          0x4889c7	                            mov rdi, rax	      3715	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_38
0x4006aa8	      0xe800000000	                          call 0x4006aad	      3715	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_38
0x4006aad	        0x4883c420	                           add rsp, 0x20	      3715	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_38
0x4006ab1	    0x8b0500000000	            mov eax, dword [0x04006ab7] 	      3718	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	IF_22
0x4006ab7	            0x85c0	                           test eax, eax	      3718	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	IF_22
0x4006ab9	            0x741f	                            je 0x4006ada	      3718	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	IF_22
0x4006abb	    0x41b8fbffffff	                     mov r8d, 0xfffffffb	      3719	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	IF_22	CALL_39
0x4006ac1	      0xb901000000	                              mov ecx, 1	      3719	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	IF_22	CALL_39
0x4006ac6	      0xba00000000	                              mov edx, 0	      3719	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	IF_22	CALL_39
0x4006acb	      0xbeffffffff	                     mov esi, 0xffffffff	      3719	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	IF_22	CALL_39
0x4006ad0	      0xbf00000000	                              mov edi, 0	      3719	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	IF_22	CALL_39
0x4006ad5	      0xe800000000	                          call 0x4006ada	      3719	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	IF_22	CALL_39
0x4006ada	    0x8b0500000000	            mov eax, dword [0x04006ae0] 	      3721	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21
0x4006ae0	     0xb85bcfbffff	             or eax, dword [rbp - 0x444]	      3721	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21
0x4006ae6	    0x890500000000	            mov dword [0x04006aec], eax 	      3721	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21
0x4006aec	      0xe9ff000000	                           jmp 0x4006bf0	      3721	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21
0x4006af1	    0x488b05000000	            mov rax, qword [0x04006af8] 	      3725	buffer.c	FUNCTION_61	IF_19	IF_20	ELSE_8
0x4006af8	    0x488985d0fbff	            mov qword [rbp - 0x430], rax	      3725	buffer.c	FUNCTION_61	IF_19	IF_20	ELSE_8
0x4006aff	      0xe9ec000000	                           jmp 0x4006bf0	      3725	buffer.c	FUNCTION_61	IF_19	IF_20	ELSE_8
0x4006b04	    0x488b05000000	            mov rax, qword [0x04006b0b] 	      3729	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_23	CALL_40
0x4006b0b	          0x4889c7	                            mov rdi, rax	      3729	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_23	CALL_40
0x4006b0e	      0xe800000000	                          call 0x4006b13	      3729	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_23	CALL_40
0x4006b13	          0x4885c0	                           test rax, rax	      3729	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_23	CALL_40
0x4006b16	            0x7418	                            je 0x4006b30	      3729	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_23	CALL_40
0x4006b18	    0x488b05000000	            mov rax, qword [0x04006b1f] 	      3730	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_41
0x4006b1f	          0x4889c7	                            mov rdi, rax	      3730	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_41
0x4006b22	      0xe800000000	                          call 0x4006b27	      3730	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_41
0x4006b27	    0x488985c8fbff	            mov qword [rbp - 0x438], rax	      3730	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_41
0x4006b2e	            0xeb1d	                           jmp 0x4006b4d	      3730	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_41
0x4006b30	    0x488b05000000	            mov rax, qword [0x04006b37] 	      3732	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_42
0x4006b37	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      3732	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_42
0x4006b3e	          0x4889c7	                            mov rdi, rax	      3732	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_42
0x4006b41	      0xe800000000	                          call 0x4006b46	      3732	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_42
0x4006b46	    0x488985c8fbff	            mov qword [rbp - 0x438], rax	      3732	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_42
0x4006b4d	    0x488b85d0fbff	            mov rax, qword [rbp - 0x430]	      3733	buffer.c	FUNCTION_61	IF_19	ELSE_9
0x4006b54	          0xc60000	                       mov byte [rax], 0	      3733	buffer.c	FUNCTION_61	IF_19	ELSE_9
0x4006b57	    0x488b85c8fbff	            mov rax, qword [rbp - 0x438]	      3735	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_43
0x4006b5e	          0x4889c7	                            mov rdi, rax	      3735	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_43
0x4006b61	      0xe800000000	                          call 0x4006b66	      3735	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_43
0x4006b66	    0x8985a4fbffff	            mov dword [rbp - 0x45c], eax	      3735	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_43
0x4006b6c	    0x83bda4fbffff	          cmp dword [rbp - 0x45c], 0x64 	      3736	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24
0x4006b73	            0x7e4e	                           jle 0x4006bc3	      3736	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24
0x4006b75	    0x83ada4fbffff	          sub dword [rbp - 0x45c], 0x64 	      3738	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24
0x4006b7c	    0x8b0500000000	            mov eax, dword [0x04006b82] 	      3740	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24	IF_25
0x4006b82	            0x85c0	                           test eax, eax	      3740	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24	IF_25
0x4006b84	            0x742e	                            je 0x4006bb4	      3740	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24	IF_25
0x4006b86	    0x8b85a4fbffff	            mov eax, dword [rbp - 0x45c]	      3741	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24	IF_25
0x4006b8c	          0x4863d0	                         movsxd rdx, eax	      3741	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24	IF_25
0x4006b8f	    0x488b85c8fbff	            mov rax, qword [rbp - 0x438]	      3741	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24	IF_25
0x4006b96	          0x4801c2	                            add rdx, rax	      3741	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24	IF_25
0x4006b99	    0x488b85c8fbff	            mov rax, qword [rbp - 0x438]	      3741	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24	IF_25
0x4006ba0	          0x4889d6	                            mov rsi, rdx	      3741	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24	IF_25
0x4006ba3	          0x4889c7	                            mov rdi, rax	      3741	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24	IF_25
0x4006ba6	      0xe800000000	                          call 0x4006bab	      3741	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24	IF_25
0x4006bab	          0x83c001	                              add eax, 1	      3741	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24	IF_25
0x4006bae	     0x185a4fbffff	            add dword [rbp - 0x45c], eax	      3741	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24	IF_25
0x4006bb4	    0x8b85a4fbffff	            mov eax, dword [rbp - 0x45c]	      3743	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24
0x4006bba	            0x4898	                                    cdqe	      3743	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24
0x4006bbc	    0x480185c8fbff	           add qword [rbp - 0x438], rax 	      3743	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24
0x4006bc3	    0x488b95c8fbff	            mov rdx, qword [rbp - 0x438]	      3745	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_44
0x4006bca	    0x488b85d0fbff	            mov rax, qword [rbp - 0x430]	      3745	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_44
0x4006bd1	          0x4889d6	                            mov rsi, rdx	      3745	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_44
0x4006bd4	          0x4889c7	                            mov rdi, rax	      3745	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_44
0x4006bd7	      0xe800000000	                          call 0x4006bdc	      3745	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_44
0x4006bdc	    0x488b85d0fbff	            mov rax, qword [rbp - 0x430]	      3746	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_45
0x4006be3	      0xbe01040000	                          mov esi, 0x401	      3746	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_45
0x4006be8	          0x4889c7	                            mov rdi, rax	      3746	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_45
0x4006beb	      0xe800000000	                          call 0x4006bf0	      3746	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_45
0x4006bf0	    0x488b85d0fbff	            mov rax, qword [rbp - 0x430]	      3750	buffer.c	FUNCTION_61	CALL_46
0x4006bf7	      0xbe00000000	                              mov esi, 0	      3750	buffer.c	FUNCTION_61	CALL_46
0x4006bfc	          0x4889c7	                            mov rdi, rax	      3750	buffer.c	FUNCTION_61	CALL_46
0x4006bff	      0xe831000000	                      call sym.ti_change	      3750	buffer.c	FUNCTION_61	CALL_46
0x4006c04	     0x985b4fbffff	             or dword [rbp - 0x44c], eax	      3750	buffer.c	FUNCTION_61	CALL_46
0x4006c0a	    0x83bdb4fbffff	              cmp dword [rbp - 0x44c], 0	      3752	buffer.c	FUNCTION_61	IF_26
0x4006c11	            0x7408	                            je 0x4006c1b	      3752	buffer.c	FUNCTION_61	IF_26
0x4006c13	      0xe800000000	                          call 0x4006c18	      3753	buffer.c	FUNCTION_61	CALL_47
0x4006c18	            0xeb01	                           jmp 0x4006c1b	      3753	buffer.c	FUNCTION_61	CALL_47
0x4006c1a	              0x90	                                     nop	      3558	buffer.c	FUNCTION_61	IF_2
0x4006c1b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3754	buffer.c	FUNCTION_61
0x4006c1f	    0x644833042528	                xor rax, qword fs:[0x28]	      3754	buffer.c	FUNCTION_61
0x4006c28	            0x7405	                            je 0x4006c2f	      3754	buffer.c	FUNCTION_61
0x4006c2a	      0xe800000000	                          call 0x4006c2f	      3754	buffer.c	FUNCTION_61
0x4006c2f	        0x488b5df8	                mov rbx, qword [rbp - 8]	      3754	buffer.c	FUNCTION_61
0x4006c33	              0xc9	                                   leave	      3754	buffer.c	FUNCTION_61
0x4006c34	              0xc3	                                     ret	      3754	buffer.c	FUNCTION_61
switch_to_win_for_buf	CALL,5:functions,0:SWITCH,0:FOR,0:ELSE,1:DO,0:WHILE,0:IF,2	53
0x400b933	              0x55	                                push rbp	      5730	buffer.c	FUNCTION_85
0x400b934	          0x4889e5	                            mov rbp, rsp	      5730	buffer.c	FUNCTION_85
0x400b937	        0x4883ec40	                           sub rsp, 0x40	      5730	buffer.c	FUNCTION_85
0x400b93b	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      5730	buffer.c	FUNCTION_85
0x400b93f	        0x488975d0	             mov qword [rbp - 0x30], rsi	      5730	buffer.c	FUNCTION_85
0x400b943	        0x488955c8	             mov qword [rbp - 0x38], rdx	      5730	buffer.c	FUNCTION_85
0x400b947	        0x48894dc0	             mov qword [rbp - 0x40], rcx	      5730	buffer.c	FUNCTION_85
0x400b94b	    0x64488b042528	                mov rax, qword fs:[0x28]	      5730	buffer.c	FUNCTION_85
0x400b954	        0x488945f8	                mov qword [rbp - 8], rax	      5730	buffer.c	FUNCTION_85
0x400b958	            0x31c0	                            xor eax, eax	      5730	buffer.c	FUNCTION_85
0x400b95a	        0x488d55f0	                   lea rdx, [rbp - 0x10]	      5734	buffer.c	FUNCTION_85	IF_1	CALL_1
0x400b95e	        0x488d4de8	                   lea rcx, [rbp - 0x18]	      5734	buffer.c	FUNCTION_85	IF_1	CALL_1
0x400b962	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5734	buffer.c	FUNCTION_85	IF_1	CALL_1
0x400b966	          0x4889ce	                            mov rsi, rcx	      5734	buffer.c	FUNCTION_85	IF_1	CALL_1
0x400b969	          0x4889c7	                            mov rdi, rax	      5734	buffer.c	FUNCTION_85	IF_1	CALL_1
0x400b96c	      0xe800000000	                          call 0x400b971	      5734	buffer.c	FUNCTION_85	IF_1	CALL_1
0x400b971	            0x85c0	                           test eax, eax	      5734	buffer.c	FUNCTION_85	IF_1	CALL_1
0x400b973	            0x7515	                           jne 0x400b98a	      5734	buffer.c	FUNCTION_85	IF_1	CALL_1
0x400b975	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      5735	buffer.c	FUNCTION_85	CALL_2
0x400b979	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5735	buffer.c	FUNCTION_85	CALL_2
0x400b97d	          0x4889d6	                            mov rsi, rdx	      5735	buffer.c	FUNCTION_85	CALL_2
0x400b980	          0x4889c7	                            mov rdi, rax	      5735	buffer.c	FUNCTION_85	CALL_2
0x400b983	      0xe800000000	                          call 0x400b988	      5735	buffer.c	FUNCTION_85	CALL_2
0x400b988	            0xeb53	                           jmp 0x400b9dd	      5741	buffer.c	FUNCTION_85
0x400b98a	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      5736	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_3
0x400b98e	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      5736	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_3
0x400b992	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	      5736	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_3
0x400b996	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5736	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_3
0x400b99a	    0x41b801000000	                              mov r8d, 1	      5736	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_3
0x400b9a0	          0x4889c7	                            mov rdi, rax	      5736	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_3
0x400b9a3	      0xe800000000	                          call 0x400b9a8	      5736	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_3
0x400b9a8	            0x85c0	                           test eax, eax	      5736	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_3
0x400b9aa	            0x7531	                           jne 0x400b9dd	      5736	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_3
0x400b9ac	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5738	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_4
0x400b9b0	          0x488b08	                    mov rcx, qword [rax]	      5738	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_4
0x400b9b3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5738	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_4
0x400b9b7	          0x488b00	                    mov rax, qword [rax]	      5738	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_4
0x400b9ba	      0xba01000000	                              mov edx, 1	      5738	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_4
0x400b9bf	          0x4889ce	                            mov rsi, rcx	      5738	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_4
0x400b9c2	          0x4889c7	                            mov rdi, rax	      5738	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_4
0x400b9c5	      0xe800000000	                          call 0x400b9ca	      5738	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_4
0x400b9ca	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      5739	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_5
0x400b9ce	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5739	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_5
0x400b9d2	          0x4889d6	                            mov rsi, rdx	      5739	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_5
0x400b9d5	          0x4889c7	                            mov rdi, rax	      5739	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_5
0x400b9d8	      0xe800000000	                          call 0x400b9dd	      5739	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_5
0x400b9dd	              0x90	                                     nop	      5741	buffer.c	FUNCTION_85
0x400b9de	        0x488b45f8	                mov rax, qword [rbp - 8]	      5741	buffer.c	FUNCTION_85
0x400b9e2	    0x644833042528	                xor rax, qword fs:[0x28]	      5741	buffer.c	FUNCTION_85
0x400b9eb	            0x7405	                            je 0x400b9f2	      5741	buffer.c	FUNCTION_85
0x400b9ed	      0xe800000000	                          call 0x400b9f2	      5741	buffer.c	FUNCTION_85
0x400b9f2	              0xc9	                                   leave	      5741	buffer.c	FUNCTION_85
0x400b9f3	              0xc3	                                     ret	      5741	buffer.c	FUNCTION_85
otherfile	CALL,1:functions,0:SWITCH,0:FOR,0:ELSE,0:DO,0:WHILE,0:IF,0	12
0x40059dc	              0x55	                                push rbp	      3306	buffer.c	FUNCTION_55
0x40059dd	          0x4889e5	                            mov rbp, rsp	      3306	buffer.c	FUNCTION_55
0x40059e0	        0x4883ec10	                           sub rsp, 0x10	      3306	buffer.c	FUNCTION_55
0x40059e4	        0x48897df8	                mov qword [rbp - 8], rdi	      3306	buffer.c	FUNCTION_55
0x40059e8	    0x488b05000000	            mov rax, qword [0x040059ef] 	      3307	buffer.c	FUNCTION_55	CALL_1
0x40059ef	        0x488b4df8	                mov rcx, qword [rbp - 8]	      3307	buffer.c	FUNCTION_55	CALL_1
0x40059f3	      0xba00000000	                              mov edx, 0	      3307	buffer.c	FUNCTION_55	CALL_1
0x40059f8	          0x4889ce	                            mov rsi, rcx	      3307	buffer.c	FUNCTION_55	CALL_1
0x40059fb	          0x4889c7	                            mov rdi, rax	      3307	buffer.c	FUNCTION_55	CALL_1
0x40059fe	      0xe802000000	                  call sym.otherfile_buf	      3307	buffer.c	FUNCTION_55	CALL_1
0x4005a03	              0xc9	                                   leave	      3312	buffer.c	FUNCTION_55
0x4005a04	              0xc3	                                     ret	      3312	buffer.c	FUNCTION_55
do_bufdel	CALL,28:functions,0:SWITCH,0:FOR,1:ELSE,13:DO,0:WHILE,0:IF,20	217
0x4001947	              0x55	                                push rbp	      1099	buffer.c	FUNCTION_17
0x4001948	          0x4889e5	                            mov rbp, rsp	      1099	buffer.c	FUNCTION_17
0x400194b	        0x4883ec40	                           sub rsp, 0x40	      1099	buffer.c	FUNCTION_17
0x400194f	          0x897ddc	             mov dword [rbp - 0x24], edi	      1099	buffer.c	FUNCTION_17
0x4001952	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1099	buffer.c	FUNCTION_17
0x4001956	          0x8955d8	             mov dword [rbp - 0x28], edx	      1099	buffer.c	FUNCTION_17
0x4001959	          0x894dcc	             mov dword [rbp - 0x34], ecx	      1099	buffer.c	FUNCTION_17
0x400195c	        0x448945c8	             mov dword [rbp - 0x38], r8d	      1099	buffer.c	FUNCTION_17
0x4001960	        0x44894dc4	             mov dword [rbp - 0x3c], r9d	      1099	buffer.c	FUNCTION_17
0x4001964	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      1100	buffer.c	FUNCTION_17
0x400196b	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      1101	buffer.c	FUNCTION_17
0x4001972	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      1102	buffer.c	FUNCTION_17
0x400197a	        0x837dd800	               cmp dword [rbp - 0x28], 0	      1106	buffer.c	FUNCTION_17	IF_1
0x400197e	            0x7524	                           jne 0x40019a4	      1106	buffer.c	FUNCTION_17	IF_1
0x4001980	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      1108	buffer.c	FUNCTION_17	IF_1	CALL_1
0x4001983	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1108	buffer.c	FUNCTION_17	IF_1	CALL_1
0x4001986	          0x4189d0	                            mov r8d, edx	      1108	buffer.c	FUNCTION_17	IF_1	CALL_1
0x4001989	      0xb900000000	                              mov ecx, 0	      1108	buffer.c	FUNCTION_17	IF_1	CALL_1
0x400198e	      0xba01000000	                              mov edx, 1	      1108	buffer.c	FUNCTION_17	IF_1	CALL_1
0x4001993	      0xbe00000000	                              mov esi, 0	      1108	buffer.c	FUNCTION_17	IF_1	CALL_1
0x4001998	            0x89c7	                            mov edi, eax	      1108	buffer.c	FUNCTION_17	IF_1	CALL_1
0x400199a	      0xe800000000	                          call 0x400199f	      1108	buffer.c	FUNCTION_17	IF_1	CALL_1
0x400199f	      0xe9bf020000	                           jmp 0x4001c63	      1108	buffer.c	FUNCTION_17	IF_1	CALL_1
0x40019a4	        0x837dd802	               cmp dword [rbp - 0x28], 2	      1112	buffer.c	FUNCTION_17	ELSE_1	IF_2
0x40019a8	            0x7525	                           jne 0x40019cf	      1112	buffer.c	FUNCTION_17	ELSE_1	IF_2
0x40019aa	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1114	buffer.c	FUNCTION_17	ELSE_1	IF_2	IF_3
0x40019ae	           0xfb600	                   movzx eax, byte [rax]	      1114	buffer.c	FUNCTION_17	ELSE_1	IF_2	IF_3
0x40019b1	            0x84c0	                             test al, al	      1114	buffer.c	FUNCTION_17	ELSE_1	IF_2	IF_3
0x40019b3	            0x740f	                            je 0x40019c4	      1114	buffer.c	FUNCTION_17	ELSE_1	IF_2	IF_3
0x40019b5	      0xbf00000000	                              mov edi, 0	      1115	buffer.c	FUNCTION_17	ELSE_1	IF_2	CALL_2
0x40019ba	      0xe800000000	                          call 0x40019bf	      1115	buffer.c	FUNCTION_17	ELSE_1	IF_2	CALL_2
0x40019bf	      0xe9a3020000	                           jmp 0x4001c67	      1115	buffer.c	FUNCTION_17	ELSE_1	IF_2	CALL_2
0x40019c4	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1116	buffer.c	FUNCTION_17	ELSE_1	IF_2
0x40019c7	          0x8945ec	             mov dword [rbp - 0x14], eax	      1116	buffer.c	FUNCTION_17	ELSE_1	IF_2
0x40019ca	      0xe9f1000000	                           jmp 0x4001ac0	      1116	buffer.c	FUNCTION_17	ELSE_1	IF_2
0x40019cf	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      1119	buffer.c	FUNCTION_17	ELSE_1	ELSE_2
0x40019d2	          0x8945ec	             mov dword [rbp - 0x14], eax	      1119	buffer.c	FUNCTION_17	ELSE_1	ELSE_2
0x40019d5	      0xe9e6000000	                           jmp 0x4001ac0	      1121	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	CALL_3
0x40019da	    0x488b05000000	            mov rax, qword [0x040019e1] 	      1129	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	IF_4
0x40019e1	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      1129	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	IF_4
0x40019e7	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      1129	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	IF_4
0x40019ea	            0x7508	                           jne 0x40019f4	      1129	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	IF_4
0x40019ec	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1130	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	IF_4
0x40019ef	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1130	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	IF_4
0x40019f2	            0xeb28	                           jmp 0x4001a1c	      1130	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	IF_4
0x40019f4	          0x8b4dc4	             mov ecx, dword [rbp - 0x3c]	      1131	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_3	IF_5	CALL_4
0x40019f7	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1131	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_3	IF_5	CALL_4
0x40019fa	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1131	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_3	IF_5	CALL_4
0x40019fd	          0x4189c8	                            mov r8d, ecx	      1131	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_3	IF_5	CALL_4
0x4001a00	            0x89d1	                            mov ecx, edx	      1131	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_3	IF_5	CALL_4
0x4001a02	      0xba01000000	                              mov edx, 1	      1131	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_3	IF_5	CALL_4
0x4001a07	      0xbe01000000	                              mov esi, 1	      1131	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_3	IF_5	CALL_4
0x4001a0c	            0x89c7	                            mov edi, eax	      1131	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_3	IF_5	CALL_4
0x4001a0e	      0xe800000000	                          call 0x4001a13	      1131	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_3	IF_5	CALL_4
0x4001a13	          0x83f801	                              cmp eax, 1	      1131	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_3	IF_5	CALL_4
0x4001a16	            0x7504	                           jne 0x4001a1c	      1131	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_3	IF_5	CALL_4
0x4001a18	        0x8345e801	               add dword [rbp - 0x18], 1	      1133	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_3	IF_5
0x4001a1c	        0x837dd802	               cmp dword [rbp - 0x28], 2	      1138	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	IF_6
0x4001a20	            0x7515	                           jne 0x4001a37	      1138	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	IF_6
0x4001a22	        0x8345ec01	               add dword [rbp - 0x14], 1	      1140	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	IF_6	IF_7
0x4001a26	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1140	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	IF_6	IF_7
0x4001a29	          0x3b45c8	             cmp eax, dword [rbp - 0x38]	      1140	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	IF_6	IF_7
0x4001a2c	     0xf8e89000000	                           jle 0x4001abb	      1140	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	IF_6	IF_7
0x4001a32	      0xe99d000000	                           jmp 0x4001ad4	      1141	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	IF_6	IF_7
0x4001a37	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1145	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	CALL_5
0x4001a3b	          0x4889c7	                            mov rdi, rax	      1145	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	CALL_5
0x4001a3e	      0xe800000000	                          call 0x4001a43	      1145	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	CALL_5
0x4001a43	        0x488945d0	             mov qword [rbp - 0x30], rax	      1145	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	CALL_5
0x4001a47	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1146	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_8
0x4001a4b	           0xfb600	                   movzx eax, byte [rax]	      1146	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_8
0x4001a4e	            0x84c0	                             test al, al	      1146	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_8
0x4001a50	            0x747e	                            je 0x4001ad0	      1146	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_8
0x4001a52	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1148	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_6
0x4001a56	           0xfb600	                   movzx eax, byte [rax]	      1148	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_6
0x4001a59	           0xfb6c0	                           movzx eax, al	      1148	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_6
0x4001a5c	          0x83e830	                           sub eax, 0x30	      1148	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_6
0x4001a5f	          0x83f809	                              cmp eax, 9	      1148	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_6
0x4001a62	            0x7648	                           jbe 0x4001aac	      1148	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_6
0x4001a64	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1150	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_7
0x4001a68	          0x4889c7	                            mov rdi, rax	      1150	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_7
0x4001a6b	      0xe800000000	                          call 0x4001a70	      1150	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_7
0x4001a70	        0x488945f8	                mov qword [rbp - 8], rax	      1150	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_7
0x4001a74	        0x837ddc04	               cmp dword [rbp - 0x24], 4	      1151	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_8
0x4001a78	           0xf94c0	                                 sete al	      1151	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_8
0x4001a7b	           0xfb6d0	                           movzx edx, al	      1151	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_8
0x4001a7e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1151	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_8
0x4001a82	        0x488b75f8	                mov rsi, qword [rbp - 8]	      1151	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_8
0x4001a86	    0x41b800000000	                              mov r8d, 0	      1151	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_8
0x4001a8c	      0xb900000000	                              mov ecx, 0	      1151	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_8
0x4001a91	          0x4889c7	                            mov rdi, rax	      1151	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_8
0x4001a94	      0xe800000000	                          call 0x4001a99	      1151	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_8
0x4001a99	          0x8945ec	             mov dword [rbp - 0x14], eax	      1151	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_8
0x4001a9c	        0x837dec00	               cmp dword [rbp - 0x14], 0	      1153	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	IF_10
0x4001aa0	            0x7831	                            js 0x4001ad3	      1153	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	IF_10
0x4001aa2	        0x488b45f8	                mov rax, qword [rbp - 8]	      1155	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9
0x4001aa6	        0x488945d0	             mov qword [rbp - 0x30], rax	      1155	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9
0x4001aaa	            0xeb0f	                           jmp 0x4001abb	      1155	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9
0x4001aac	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1158	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	CALL_9
0x4001ab0	          0x4889c7	                            mov rdi, rax	      1158	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	CALL_9
0x4001ab3	      0xe800000000	                          call 0x4001ab8	      1158	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	CALL_9
0x4001ab8	          0x8945ec	             mov dword [rbp - 0x14], eax	      1158	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	CALL_9
0x4001abb	      0xe800000000	                          call 0x4001ac0	      1121	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	CALL_3
0x4001ac0	    0x8b0500000000	            mov eax, dword [0x04001ac6] 	      1121	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	CALL_3
0x4001ac6	            0x85c0	                           test eax, eax	      1121	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	CALL_3
0x4001ac8	     0xf840cffffff	                            je 0x40019da	      1121	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	CALL_3
0x4001ace	            0xeb04	                           jmp 0x4001ad4	      1121	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	CALL_3
0x4001ad0	              0x90	                                     nop	      1147	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_8
0x4001ad1	            0xeb01	                           jmp 0x4001ad4	      1147	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_8
0x4001ad3	              0x90	                                     nop	      1154	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	IF_10
0x4001ad4	    0x8b0500000000	            mov eax, dword [0x04001ada] 	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x4001ada	            0x85c0	                           test eax, eax	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x4001adc	            0x752e	                           jne 0x4001b0c	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x4001ade	        0x837de400	               cmp dword [rbp - 0x1c], 0	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x4001ae2	            0x7428	                            je 0x4001b0c	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x4001ae4	          0x8b4dc4	             mov ecx, dword [rbp - 0x3c]	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x4001ae7	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x4001aea	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x4001aed	          0x4189c8	                            mov r8d, ecx	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x4001af0	            0x89d1	                            mov ecx, edx	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x4001af2	      0xba01000000	                              mov edx, 1	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x4001af7	      0xbe01000000	                              mov esi, 1	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x4001afc	            0x89c7	                            mov edi, eax	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x4001afe	      0xe800000000	                          call 0x4001b03	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x4001b03	          0x83f801	                              cmp eax, 1	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x4001b06	            0x7504	                           jne 0x4001b0c	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x4001b08	        0x8345e801	               add dword [rbp - 0x18], 1	      1163	buffer.c	FUNCTION_17	ELSE_1	IF_11
0x4001b0c	        0x837de800	               cmp dword [rbp - 0x18], 0	      1165	buffer.c	FUNCTION_17	ELSE_1	IF_12
0x4001b10	            0x757d	                           jne 0x4001b8f	      1165	buffer.c	FUNCTION_17	ELSE_1	IF_12
0x4001b12	        0x837ddc02	               cmp dword [rbp - 0x24], 2	      1167	buffer.c	FUNCTION_17	ELSE_1	IF_12	IF_13
0x4001b16	            0x7521	                           jne 0x4001b39	      1167	buffer.c	FUNCTION_17	ELSE_1	IF_12	IF_13
0x4001b18	      0xbf00000000	                              mov edi, 0	      1168	buffer.c	FUNCTION_17	ELSE_1	IF_12	CALL_12
0x4001b1d	      0xe800000000	                          call 0x4001b22	      1168	buffer.c	FUNCTION_17	ELSE_1	IF_12	CALL_12
0x4001b22	          0x4889c2	                            mov rdx, rax	      1168	buffer.c	FUNCTION_17	ELSE_1	IF_12	CALL_12
0x4001b25	    0x488b05000000	            mov rax, qword [0x04001b2c] 	      1168	buffer.c	FUNCTION_17	ELSE_1	IF_12	CALL_12
0x4001b2c	          0x4889d6	                            mov rsi, rdx	      1168	buffer.c	FUNCTION_17	ELSE_1	IF_12	CALL_12
0x4001b2f	          0x4889c7	                            mov rdi, rax	      1168	buffer.c	FUNCTION_17	ELSE_1	IF_12	CALL_12
0x4001b32	      0xe800000000	                          call 0x4001b37	      1168	buffer.c	FUNCTION_17	ELSE_1	IF_12	CALL_12
0x4001b37	            0xeb46	                           jmp 0x4001b7f	      1168	buffer.c	FUNCTION_17	ELSE_1	IF_12	CALL_12
0x4001b39	        0x837ddc03	               cmp dword [rbp - 0x24], 3	      1169	buffer.c	FUNCTION_17	ELSE_1	IF_12	ELSE_6	IF_14
0x4001b3d	            0x7521	                           jne 0x4001b60	      1169	buffer.c	FUNCTION_17	ELSE_1	IF_12	ELSE_6	IF_14
0x4001b3f	      0xbf00000000	                              mov edi, 0	      1170	buffer.c	FUNCTION_17	ELSE_1	IF_12	ELSE_6	IF_14
0x4001b44	      0xe800000000	                          call 0x4001b49	      1170	buffer.c	FUNCTION_17	ELSE_1	IF_12	ELSE_6	IF_14
0x4001b49	          0x4889c2	                            mov rdx, rax	      1170	buffer.c	FUNCTION_17	ELSE_1	IF_12	ELSE_6	IF_14
0x4001b4c	    0x488b05000000	            mov rax, qword [0x04001b53] 	      1170	buffer.c	FUNCTION_17	ELSE_1	IF_12	ELSE_6	IF_14
0x4001b53	          0x4889d6	                            mov rsi, rdx	      1170	buffer.c	FUNCTION_17	ELSE_1	IF_12	ELSE_6	IF_14
0x4001b56	          0x4889c7	                            mov rdi, rax	      1170	buffer.c	FUNCTION_17	ELSE_1	IF_12	ELSE_6	IF_14
0x4001b59	      0xe800000000	                          call 0x4001b5e	      1170	buffer.c	FUNCTION_17	ELSE_1	IF_12	ELSE_6	IF_14
0x4001b5e	            0xeb1f	                           jmp 0x4001b7f	      1170	buffer.c	FUNCTION_17	ELSE_1	IF_12	ELSE_6	IF_14
0x4001b60	      0xbf00000000	                              mov edi, 0	      1172	buffer.c	FUNCTION_17	ELSE_1	IF_12	CALL_16
0x4001b65	      0xe800000000	                          call 0x4001b6a	      1172	buffer.c	FUNCTION_17	ELSE_1	IF_12	CALL_16
0x4001b6a	          0x4889c2	                            mov rdx, rax	      1172	buffer.c	FUNCTION_17	ELSE_1	IF_12	CALL_16
0x4001b6d	    0x488b05000000	            mov rax, qword [0x04001b74] 	      1172	buffer.c	FUNCTION_17	ELSE_1	IF_12	CALL_16
0x4001b74	          0x4889d6	                            mov rsi, rdx	      1172	buffer.c	FUNCTION_17	ELSE_1	IF_12	CALL_16
0x4001b77	          0x4889c7	                            mov rdi, rax	      1172	buffer.c	FUNCTION_17	ELSE_1	IF_12	CALL_16
0x4001b7a	      0xe800000000	                          call 0x4001b7f	      1172	buffer.c	FUNCTION_17	ELSE_1	IF_12	CALL_16
0x4001b7f	    0x488b05000000	            mov rax, qword [0x04001b86] 	      1173	buffer.c	FUNCTION_17	ELSE_1	IF_12
0x4001b86	        0x488945f0	             mov qword [rbp - 0x10], rax	      1173	buffer.c	FUNCTION_17	ELSE_1	IF_12
0x4001b8a	      0xe9d4000000	                           jmp 0x4001c63	      1173	buffer.c	FUNCTION_17	ELSE_1	IF_12
0x4001b8f	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1175	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15
0x4001b92	          0x4863d0	                         movsxd rdx, eax	      1175	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15
0x4001b95	    0x488b05000000	            mov rax, qword [0x04001b9c] 	      1175	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15
0x4001b9c	          0x4839c2	                            cmp rdx, rax	      1175	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15
0x4001b9f	     0xf8cbe000000	                            jl 0x4001c63	      1175	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15
0x4001ba5	        0x837ddc02	               cmp dword [rbp - 0x24], 2	      1177	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16
0x4001ba9	            0x753e	                           jne 0x4001be9	      1177	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16
0x4001bab	        0x837de801	               cmp dword [rbp - 0x18], 1	      1179	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16	IF_17
0x4001baf	            0x7517	                           jne 0x4001bc8	      1179	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16	IF_17
0x4001bb1	      0xbf00000000	                              mov edi, 0	      1180	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16	CALL_18
0x4001bb6	      0xe800000000	                          call 0x4001bbb	      1180	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16	CALL_18
0x4001bbb	          0x4889c7	                            mov rdi, rax	      1180	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16	CALL_18
0x4001bbe	      0xe800000000	                          call 0x4001bc3	      1180	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16	CALL_18
0x4001bc3	      0xe99b000000	                           jmp 0x4001c63	      1180	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16	CALL_18
0x4001bc8	      0xbf00000000	                              mov edi, 0	      1182	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16	CALL_20
0x4001bcd	      0xe800000000	                          call 0x4001bd2	      1182	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16	CALL_20
0x4001bd2	          0x4889c2	                            mov rdx, rax	      1182	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16	CALL_20
0x4001bd5	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1182	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16	CALL_20
0x4001bd8	            0x89c6	                            mov esi, eax	      1182	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16	CALL_20
0x4001bda	          0x4889d7	                            mov rdi, rdx	      1182	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16	CALL_20
0x4001bdd	      0xb800000000	                              mov eax, 0	      1182	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16	CALL_20
0x4001be2	      0xe800000000	                          call 0x4001be7	      1182	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16	CALL_20
0x4001be7	            0xeb7a	                           jmp 0x4001c63	      1182	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16	CALL_20
0x4001be9	        0x837ddc03	               cmp dword [rbp - 0x24], 3	      1184	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18
0x4001bed	            0x753b	                           jne 0x4001c2a	      1184	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18
0x4001bef	        0x837de801	               cmp dword [rbp - 0x18], 1	      1186	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	IF_19
0x4001bf3	            0x7514	                           jne 0x4001c09	      1186	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	IF_19
0x4001bf5	      0xbf00000000	                              mov edi, 0	      1187	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	CALL_22
0x4001bfa	      0xe800000000	                          call 0x4001bff	      1187	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	CALL_22
0x4001bff	          0x4889c7	                            mov rdi, rax	      1187	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	CALL_22
0x4001c02	      0xe800000000	                          call 0x4001c07	      1187	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	CALL_22
0x4001c07	            0xeb5a	                           jmp 0x4001c63	      1187	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	CALL_22
0x4001c09	      0xbf00000000	                              mov edi, 0	      1189	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	CALL_24
0x4001c0e	      0xe800000000	                          call 0x4001c13	      1189	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	CALL_24
0x4001c13	          0x4889c2	                            mov rdx, rax	      1189	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	CALL_24
0x4001c16	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1189	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	CALL_24
0x4001c19	            0x89c6	                            mov esi, eax	      1189	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	CALL_24
0x4001c1b	          0x4889d7	                            mov rdi, rdx	      1189	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	CALL_24
0x4001c1e	      0xb800000000	                              mov eax, 0	      1189	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	CALL_24
0x4001c23	      0xe800000000	                          call 0x4001c28	      1189	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	CALL_24
0x4001c28	            0xeb39	                           jmp 0x4001c63	      1189	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	CALL_24
0x4001c2a	        0x837de801	               cmp dword [rbp - 0x18], 1	      1193	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	IF_20
0x4001c2e	            0x7514	                           jne 0x4001c44	      1193	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	IF_20
0x4001c30	      0xbf00000000	                              mov edi, 0	      1194	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	CALL_26
0x4001c35	      0xe800000000	                          call 0x4001c3a	      1194	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	CALL_26
0x4001c3a	          0x4889c7	                            mov rdi, rax	      1194	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	CALL_26
0x4001c3d	      0xe800000000	                          call 0x4001c42	      1194	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	CALL_26
0x4001c42	            0xeb1f	                           jmp 0x4001c63	      1194	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	CALL_26
0x4001c44	      0xbf00000000	                              mov edi, 0	      1196	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	CALL_28
0x4001c49	      0xe800000000	                          call 0x4001c4e	      1196	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	CALL_28
0x4001c4e	          0x4889c2	                            mov rdx, rax	      1196	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	CALL_28
0x4001c51	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1196	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	CALL_28
0x4001c54	            0x89c6	                            mov esi, eax	      1196	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	CALL_28
0x4001c56	          0x4889d7	                            mov rdi, rdx	      1196	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	CALL_28
0x4001c59	      0xb800000000	                              mov eax, 0	      1196	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	CALL_28
0x4001c5e	      0xe800000000	                          call 0x4001c63	      1196	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	CALL_28
0x4001c63	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1202	buffer.c	FUNCTION_17
0x4001c67	              0xc9	                                   leave	      1203	buffer.c	FUNCTION_17
0x4001c68	              0xc3	                                     ret	      1203	buffer.c	FUNCTION_17
clear_wininfo	CALL,3:functions,0:SWITCH,0:FOR,0:ELSE,0:DO,0:WHILE,1:IF,1	34
0x4001655	              0x55	                                push rbp	       938	buffer.c	FUNCTION_14
0x4001656	          0x4889e5	                            mov rbp, rsp	       938	buffer.c	FUNCTION_14
0x4001659	        0x4883ec20	                           sub rsp, 0x20	       938	buffer.c	FUNCTION_14
0x400165d	        0x48897de8	             mov qword [rbp - 0x18], rdi	       938	buffer.c	FUNCTION_14
0x4001661	            0xeb5a	                           jmp 0x40016bd	       941	buffer.c	FUNCTION_14	WHILE_1
0x4001663	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       943	buffer.c	FUNCTION_14	WHILE_1
0x4001667	    0x488b80280100	           mov rax, qword [rax + 0x128] 	       943	buffer.c	FUNCTION_14	WHILE_1
0x400166e	        0x488945f8	                mov qword [rbp - 8], rax	       943	buffer.c	FUNCTION_14	WHILE_1
0x4001672	        0x488b45f8	                mov rax, qword [rbp - 8]	       944	buffer.c	FUNCTION_14	WHILE_1
0x4001676	          0x488b10	                    mov rdx, qword [rax]	       944	buffer.c	FUNCTION_14	WHILE_1
0x4001679	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       944	buffer.c	FUNCTION_14	WHILE_1
0x400167d	    0x488990280100	            mov qword [rax + 0x128], rdx	       944	buffer.c	FUNCTION_14	WHILE_1
0x4001684	        0x488b45f8	                mov rax, qword [rbp - 8]	       945	buffer.c	FUNCTION_14	WHILE_1	IF_1
0x4001688	          0x8b4028	            mov eax, dword [rax + 0x28] 	       945	buffer.c	FUNCTION_14	WHILE_1	IF_1
0x400168b	            0x85c0	                           test eax, eax	       945	buffer.c	FUNCTION_14	WHILE_1	IF_1
0x400168d	            0x7422	                            je 0x40016b1	       945	buffer.c	FUNCTION_14	WHILE_1	IF_1
0x400168f	        0x488b45f8	                mov rax, qword [rbp - 8]	       947	buffer.c	FUNCTION_14	WHILE_1	IF_1	CALL_1
0x4001693	        0x4883c030	                           add rax, 0x30	       947	buffer.c	FUNCTION_14	WHILE_1	IF_1	CALL_1
0x4001697	          0x4889c7	                            mov rdi, rax	       947	buffer.c	FUNCTION_14	WHILE_1	IF_1	CALL_1
0x400169a	      0xe800000000	                          call 0x400169f	       947	buffer.c	FUNCTION_14	WHILE_1	IF_1	CALL_1
0x400169f	        0x488b45f8	                mov rax, qword [rbp - 8]	       949	buffer.c	FUNCTION_14	WHILE_1	IF_1	CALL_2
0x40016a3	    0x4805f0010000	                          add rax, 0x1f0	       949	buffer.c	FUNCTION_14	WHILE_1	IF_1	CALL_2
0x40016a9	          0x4889c7	                            mov rdi, rax	       949	buffer.c	FUNCTION_14	WHILE_1	IF_1	CALL_2
0x40016ac	      0xe800000000	                          call 0x40016b1	       949	buffer.c	FUNCTION_14	WHILE_1	IF_1	CALL_2
0x40016b1	        0x488b45f8	                mov rax, qword [rbp - 8]	       952	buffer.c	FUNCTION_14	WHILE_1	CALL_3
0x40016b5	          0x4889c7	                            mov rdi, rax	       952	buffer.c	FUNCTION_14	WHILE_1	CALL_3
0x40016b8	      0xe800000000	                          call 0x40016bd	       952	buffer.c	FUNCTION_14	WHILE_1	CALL_3
0x40016bd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       941	buffer.c	FUNCTION_14	WHILE_1
0x40016c1	    0x488b80280100	           mov rax, qword [rax + 0x128] 	       941	buffer.c	FUNCTION_14	WHILE_1
0x40016c8	          0x4885c0	                           test rax, rax	       941	buffer.c	FUNCTION_14	WHILE_1
0x40016cb	            0x7596	                           jne 0x4001663	       941	buffer.c	FUNCTION_14	WHILE_1
0x40016cd	              0x90	                                     nop	       954	buffer.c	FUNCTION_14
0x40016ce	              0xc9	                                   leave	       954	buffer.c	FUNCTION_14
0x40016cf	              0xc3	                                     ret	       954	buffer.c	FUNCTION_14
find_win_for_buf	CALL,1:functions,0:SWITCH,0:FOR,0:ELSE,0:DO,0:WHILE,0:IF,1	51
0x400ba3d	              0x55	                                push rbp	      5767	buffer.c	FUNCTION_87
0x400ba3e	          0x4889e5	                            mov rbp, rsp	      5767	buffer.c	FUNCTION_87
0x400ba41	        0x48897df8	                mov qword [rbp - 8], rdi	      5767	buffer.c	FUNCTION_87
0x400ba45	        0x488975f0	             mov qword [rbp - 0x10], rsi	      5767	buffer.c	FUNCTION_87
0x400ba49	        0x488955e8	             mov qword [rbp - 0x18], rdx	      5767	buffer.c	FUNCTION_87
0x400ba4d	    0x488b15000000	            mov rdx, qword [0x0400ba54] 	      5768	buffer.c	FUNCTION_87	CALL_1
0x400ba54	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5768	buffer.c	FUNCTION_87	CALL_1
0x400ba58	          0x488910	                    mov qword [rax], rdx	      5768	buffer.c	FUNCTION_87	CALL_1
0x400ba5b	            0xeb70	                           jmp 0x400bacd	      5768	buffer.c	FUNCTION_87	CALL_1
0x400ba5d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5768	buffer.c	FUNCTION_87	CALL_1
0x400ba61	          0x488b10	                    mov rdx, qword [rax]	      5768	buffer.c	FUNCTION_87	CALL_1
0x400ba64	    0x488b05000000	            mov rax, qword [0x0400ba6b] 	      5768	buffer.c	FUNCTION_87	CALL_1
0x400ba6b	          0x4839c2	                            cmp rdx, rax	      5768	buffer.c	FUNCTION_87	CALL_1
0x400ba6e	            0x740d	                            je 0x400ba7d	      5768	buffer.c	FUNCTION_87	CALL_1
0x400ba70	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5768	buffer.c	FUNCTION_87	CALL_1
0x400ba74	          0x488b00	                    mov rax, qword [rax]	      5768	buffer.c	FUNCTION_87	CALL_1
0x400ba77	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5768	buffer.c	FUNCTION_87	CALL_1
0x400ba7b	            0xeb07	                           jmp 0x400ba84	      5768	buffer.c	FUNCTION_87	CALL_1
0x400ba7d	    0x488b05000000	            mov rax, qword [0x0400ba84] 	      5768	buffer.c	FUNCTION_87	CALL_1
0x400ba84	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      5768	buffer.c	FUNCTION_87	CALL_1
0x400ba88	          0x488902	                    mov qword [rdx], rax	      5768	buffer.c	FUNCTION_87	CALL_1
0x400ba8b	            0xeb23	                           jmp 0x400bab0	      5768	buffer.c	FUNCTION_87	CALL_1
0x400ba8d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5769	buffer.c	FUNCTION_87	IF_1
0x400ba91	          0x488b00	                    mov rax, qword [rax]	      5769	buffer.c	FUNCTION_87	IF_1
0x400ba94	        0x488b4008	                mov rax, qword [rax + 8]	      5769	buffer.c	FUNCTION_87	IF_1
0x400ba98	        0x483b45f8	                cmp rax, qword [rbp - 8]	      5769	buffer.c	FUNCTION_87	IF_1
0x400ba9c	            0x7442	                            je 0x400bae0	      5769	buffer.c	FUNCTION_87	IF_1
0x400ba9e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5768	buffer.c	FUNCTION_87	CALL_1
0x400baa2	          0x488b00	                    mov rax, qword [rax]	      5768	buffer.c	FUNCTION_87	CALL_1
0x400baa5	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      5768	buffer.c	FUNCTION_87	CALL_1
0x400baa9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5768	buffer.c	FUNCTION_87	CALL_1
0x400baad	          0x488910	                    mov qword [rax], rdx	      5768	buffer.c	FUNCTION_87	CALL_1
0x400bab0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5768	buffer.c	FUNCTION_87	CALL_1
0x400bab4	          0x488b00	                    mov rax, qword [rax]	      5768	buffer.c	FUNCTION_87	CALL_1
0x400bab7	          0x4885c0	                           test rax, rax	      5768	buffer.c	FUNCTION_87	CALL_1
0x400baba	            0x75d1	                           jne 0x400ba8d	      5768	buffer.c	FUNCTION_87	CALL_1
0x400babc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5768	buffer.c	FUNCTION_87	CALL_1
0x400bac0	          0x488b00	                    mov rax, qword [rax]	      5768	buffer.c	FUNCTION_87	CALL_1
0x400bac3	          0x488b10	                    mov rdx, qword [rax]	      5768	buffer.c	FUNCTION_87	CALL_1
0x400bac6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5768	buffer.c	FUNCTION_87	CALL_1
0x400baca	          0x488910	                    mov qword [rax], rdx	      5768	buffer.c	FUNCTION_87	CALL_1
0x400bacd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5768	buffer.c	FUNCTION_87	CALL_1
0x400bad1	          0x488b00	                    mov rax, qword [rax]	      5768	buffer.c	FUNCTION_87	CALL_1
0x400bad4	          0x4885c0	                           test rax, rax	      5768	buffer.c	FUNCTION_87	CALL_1
0x400bad7	            0x7584	                           jne 0x400ba5d	      5768	buffer.c	FUNCTION_87	CALL_1
0x400bad9	      0xb800000000	                              mov eax, 0	      5771	buffer.c	FUNCTION_87
0x400bade	            0xeb06	                           jmp 0x400bae6	      5771	buffer.c	FUNCTION_87
0x400bae0	              0x90	                                     nop	      5770	buffer.c	FUNCTION_87	IF_1
0x400bae1	      0xb801000000	                              mov eax, 1	      5773	buffer.c	FUNCTION_87
0x400bae6	              0x5d	                                 pop rbp	      5774	buffer.c	FUNCTION_87
0x400bae7	              0xc3	                                     ret	      5774	buffer.c	FUNCTION_87
buf_valid	CALL,0:functions,0:SWITCH,0:FOR,1:ELSE,0:DO,0:WHILE,0:IF,1	19
0x400089d	              0x55	                                push rbp	       387	buffer.c	FUNCTION_5
0x400089e	          0x4889e5	                            mov rbp, rsp	       387	buffer.c	FUNCTION_5
0x40008a1	        0x48897de8	             mov qword [rbp - 0x18], rdi	       387	buffer.c	FUNCTION_5
0x40008a5	    0x488b05000000	            mov rax, qword [0x040008ac] 	       392	buffer.c	FUNCTION_5	FOR_1
0x40008ac	        0x488945f8	                mov qword [rbp - 8], rax	       392	buffer.c	FUNCTION_5	FOR_1
0x40008b0	            0xeb1d	                           jmp 0x40008cf	       392	buffer.c	FUNCTION_5	FOR_1
0x40008b2	        0x488b45f8	                mov rax, qword [rbp - 8]	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x40008b6	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x40008ba	            0x7507	                           jne 0x40008c3	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x40008bc	      0xb801000000	                              mov eax, 1	       394	buffer.c	FUNCTION_5	FOR_1	IF_1
0x40008c1	            0xeb18	                           jmp 0x40008db	       394	buffer.c	FUNCTION_5	FOR_1	IF_1
0x40008c3	        0x488b45f8	                mov rax, qword [rbp - 8]	       392	buffer.c	FUNCTION_5	FOR_1
0x40008c7	        0x488b4070	            mov rax, qword [rax + 0x70] 	       392	buffer.c	FUNCTION_5	FOR_1
0x40008cb	        0x488945f8	                mov qword [rbp - 8], rax	       392	buffer.c	FUNCTION_5	FOR_1
0x40008cf	      0x48837df800	                  cmp qword [rbp - 8], 0	       392	buffer.c	FUNCTION_5	FOR_1
0x40008d4	            0x75dc	                           jne 0x40008b2	       392	buffer.c	FUNCTION_5	FOR_1
0x40008d6	      0xb800000000	                              mov eax, 0	       395	buffer.c	FUNCTION_5
0x40008db	              0x5d	                                 pop rbp	       396	buffer.c	FUNCTION_5
0x40008dc	              0xc3	                                     ret	       396	buffer.c	FUNCTION_5
chk_modeline	CALL,16:functions,0:SWITCH,0:FOR,2:ELSE,1:DO,1:WHILE,1:IF,14	297
0x400ae61	              0x55	                                push rbp	      5371	buffer.c	FUNCTION_74
0x400ae62	          0x4889e5	                            mov rbp, rsp	      5371	buffer.c	FUNCTION_74
0x400ae65	        0x4883ec60	                           sub rsp, 0x60	      5371	buffer.c	FUNCTION_74
0x400ae69	        0x48897da8	             mov qword [rbp - 0x58], rdi	      5371	buffer.c	FUNCTION_74
0x400ae6d	          0x8975a4	             mov dword [rbp - 0x5c], esi	      5371	buffer.c	FUNCTION_74
0x400ae70	    0x64488b042528	                mov rax, qword fs:[0x28]	      5371	buffer.c	FUNCTION_74
0x400ae79	        0x488945f8	                mov qword [rbp - 8], rax	      5371	buffer.c	FUNCTION_74
0x400ae7d	            0x31c0	                            xor eax, eax	      5371	buffer.c	FUNCTION_74
0x400ae7f	    0xc745c4010000	               mov dword [rbp - 0x3c], 1	      5378	buffer.c	FUNCTION_74
0x400ae86	    0xc745bcffffff	     mov dword [rbp - 0x44], 0xffffffff 	      5385	buffer.c	FUNCTION_74
0x400ae8d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5386	buffer.c	FUNCTION_74	FOR_1	CALL_1
0x400ae91	          0x4889c7	                            mov rdi, rax	      5386	buffer.c	FUNCTION_74	FOR_1	CALL_1
0x400ae94	      0xe800000000	                          call 0x400ae99	      5386	buffer.c	FUNCTION_74	FOR_1	CALL_1
0x400ae99	        0x488945d8	             mov qword [rbp - 0x28], rax	      5386	buffer.c	FUNCTION_74	FOR_1	CALL_1
0x400ae9d	      0xe9d5010000	                           jmp 0x400b077	      5386	buffer.c	FUNCTION_74	FOR_1	CALL_1
0x400aea2	        0x837dbcff	cmp dword [rbp - 0x44], 0xffffffffffffffff	      5388	buffer.c	FUNCTION_74	FOR_1	IF_1	CALL_2
0x400aea6	            0x7412	                            je 0x400aeba	      5388	buffer.c	FUNCTION_74	FOR_1	IF_1	CALL_2
0x400aea8	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      5388	buffer.c	FUNCTION_74	FOR_1	IF_1	CALL_2
0x400aeab	            0x89c7	                            mov edi, eax	      5388	buffer.c	FUNCTION_74	FOR_1	IF_1	CALL_2
0x400aead	      0xe800000000	                          call 0x400aeb2	      5388	buffer.c	FUNCTION_74	FOR_1	IF_1	CALL_2
0x400aeb2	            0x85c0	                           test eax, eax	      5388	buffer.c	FUNCTION_74	FOR_1	IF_1	CALL_2
0x400aeb4	     0xf84ab010000	                            je 0x400b065	      5388	buffer.c	FUNCTION_74	FOR_1	IF_1	CALL_2
0x400aeba	        0x837dbcff	cmp dword [rbp - 0x44], 0xffffffffffffffff	      5390	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_3
0x400aebe	            0x741e	                            je 0x400aede	      5390	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_3
0x400aec0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5390	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_3
0x400aec4	      0xba03000000	                              mov edx, 3	      5390	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_3
0x400aec9	      0xbe00000000	                              mov esi, 0	      5390	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_3
0x400aece	          0x4889c7	                            mov rdi, rax	      5390	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_3
0x400aed1	      0xe800000000	                          call 0x400aed6	      5390	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_3
0x400aed6	            0x85c0	                           test eax, eax	      5390	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_3
0x400aed8	     0xf84a8010000	                            je 0x400b086	      5390	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_3
0x400aede	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5391	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_4
0x400aee2	      0xba03000000	                              mov edx, 3	      5391	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_4
0x400aee7	      0xbe00000000	                              mov esi, 0	      5391	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_4
0x400aeec	          0x4889c7	                            mov rdi, rax	      5391	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_4
0x400aeef	      0xe800000000	                          call 0x400aef4	      5391	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_4
0x400aef4	            0x85c0	                           test eax, eax	      5391	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_4
0x400aef6	     0xf848a010000	                            je 0x400b086	      5391	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_4
0x400aefc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0x400af00	           0xfb600	                   movzx eax, byte [rax]	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0x400af03	            0x3c76	                            cmp al, 0x76	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0x400af05	            0x740f	                            je 0x400af16	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0x400af07	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0x400af0b	           0xfb600	                   movzx eax, byte [rax]	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0x400af0e	            0x3c56	                            cmp al, 0x56	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0x400af10	     0xf854f010000	                           jne 0x400b065	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0x400af16	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0x400af1a	        0x4883c001	                              add rax, 1	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0x400af1e	           0xfb600	                   movzx eax, byte [rax]	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0x400af21	            0x3c69	                            cmp al, 0x69	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0x400af23	     0xf853c010000	                           jne 0x400b065	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0x400af29	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0x400af2d	        0x4883c002	                              add rax, 2	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0x400af31	           0xfb600	                   movzx eax, byte [rax]	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0x400af34	            0x3c6d	                            cmp al, 0x6d	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0x400af36	     0xf8529010000	                           jne 0x400b065	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0x400af3c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5396	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_4
0x400af40	        0x4883c003	                              add rax, 3	      5396	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_4
0x400af44	           0xfb600	                   movzx eax, byte [rax]	      5396	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_4
0x400af47	            0x3c3c	                            cmp al, 0x3c	      5396	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_4
0x400af49	            0x741e	                            je 0x400af69	      5396	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_4
0x400af4b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5396	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_4
0x400af4f	        0x4883c003	                              add rax, 3	      5396	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_4
0x400af53	           0xfb600	                   movzx eax, byte [rax]	      5396	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_4
0x400af56	            0x3c3d	                            cmp al, 0x3d	      5396	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_4
0x400af58	            0x740f	                            je 0x400af69	      5396	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_4
0x400af5a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5396	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_4
0x400af5e	        0x4883c003	                              add rax, 3	      5396	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_4
0x400af62	           0xfb600	                   movzx eax, byte [rax]	      5396	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_4
0x400af65	            0x3c3e	                            cmp al, 0x3e	      5396	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_4
0x400af67	            0x750e	                           jne 0x400af77	      5396	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_4
0x400af69	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5397	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_4
0x400af6d	        0x4883c004	                              add rax, 4	      5397	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_4
0x400af71	        0x488945d0	             mov qword [rbp - 0x30], rax	      5397	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_4
0x400af75	            0xeb0c	                           jmp 0x400af83	      5397	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_4
0x400af77	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5399	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	ELSE_1
0x400af7b	        0x4883c003	                              add rax, 3	      5399	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	ELSE_1
0x400af7f	        0x488945d0	             mov qword [rbp - 0x30], rax	      5399	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	ELSE_1
0x400af83	        0x488d45d0	                   lea rax, [rbp - 0x30]	      5400	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	CALL_5
0x400af87	          0x4889c7	                            mov rdi, rax	      5400	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	CALL_5
0x400af8a	      0xe800000000	                          call 0x400af8f	      5400	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	CALL_5
0x400af8f	          0x8945c8	             mov dword [rbp - 0x38], eax	      5400	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	CALL_5
0x400af92	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5401	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x400af96	           0xfb600	                   movzx eax, byte [rax]	      5401	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x400af99	            0x3c3a	                            cmp al, 0x3a	      5401	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x400af9b	     0xf85c4000000	                           jne 0x400b065	      5401	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x400afa1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5402	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x400afa5	           0xfb600	                   movzx eax, byte [rax]	      5402	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x400afa8	            0x3c56	                            cmp al, 0x56	      5402	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x400afaa	            0x752a	                           jne 0x400afd6	      5402	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x400afac	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5403	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_7
0x400afb0	        0x4883c001	                              add rax, 1	      5403	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_7
0x400afb4	          0x4889c7	                            mov rdi, rax	      5403	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_7
0x400afb7	      0xe800000000	                          call 0x400afbc	      5403	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_7
0x400afbc	      0xba03000000	                              mov edx, 3	      5403	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_7
0x400afc1	      0xbe00000000	                              mov esi, 0	      5403	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_7
0x400afc6	          0x4889c7	                            mov rdi, rax	      5403	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_7
0x400afc9	      0xe800000000	                          call 0x400afce	      5403	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_7
0x400afce	            0x85c0	                           test eax, eax	      5403	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_7
0x400afd0	     0xf858f000000	                           jne 0x400b065	      5403	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_7
0x400afd6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5404	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x400afda	        0x4883c003	                              add rax, 3	      5404	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x400afde	           0xfb600	                   movzx eax, byte [rax]	      5404	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x400afe1	            0x3c3a	                            cmp al, 0x3a	      5404	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x400afe3	     0xf849d000000	                            je 0x400b086	      5404	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x400afe9	    0x817dc8200300	          cmp dword [rbp - 0x38], 0x320 	      5405	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_8
0x400aff0	            0x7f2b	                            jg 0x400b01d	      5405	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_8
0x400aff2	      0xe800000000	                          call 0x400aff7	      5405	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_8
0x400aff7	          0x488b00	                    mov rax, qword [rax]	      5405	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_8
0x400affa	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      5405	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_8
0x400affe	        0x4883c203	                              add rdx, 3	      5405	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_8
0x400b002	           0xfb612	                   movzx edx, byte [rdx]	      5405	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_8
0x400b005	           0xfb6d2	                           movzx edx, dl	      5405	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_8
0x400b008	          0x4801d2	                            add rdx, rdx	      5405	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_8
0x400b00b	          0x4801d0	                            add rax, rdx	      5405	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_8
0x400b00e	           0xfb700	                   movzx eax, word [rax]	      5405	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_8
0x400b011	           0xfb7c0	                           movzx eax, ax	      5405	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_8
0x400b014	      0x2500080000	                          and eax, 0x800	      5405	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_8
0x400b019	            0x85c0	                           test eax, eax	      5405	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_8
0x400b01b	            0x7569	                           jne 0x400b086	      5405	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_8
0x400b01d	    0x817dc8200300	          cmp dword [rbp - 0x38], 0x320 	      5406	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x400b024	            0x7e0f	                           jle 0x400b035	      5406	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x400b026	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5406	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x400b02a	        0x4883c003	                              add rax, 3	      5406	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x400b02e	           0xfb600	                   movzx eax, byte [rax]	      5406	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x400b031	            0x3c3c	                            cmp al, 0x3c	      5406	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x400b033	            0x7451	                            je 0x400b086	      5406	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x400b035	    0x817dc81f0300	          cmp dword [rbp - 0x38], 0x31f 	      5407	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x400b03c	            0x7f0f	                            jg 0x400b04d	      5407	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x400b03e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5407	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x400b042	        0x4883c003	                              add rax, 3	      5407	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x400b046	           0xfb600	                   movzx eax, byte [rax]	      5407	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x400b049	            0x3c3e	                            cmp al, 0x3e	      5407	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x400b04b	            0x7439	                            je 0x400b086	      5407	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x400b04d	    0x817dc8200300	          cmp dword [rbp - 0x38], 0x320 	      5408	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x400b054	            0x750f	                           jne 0x400b065	      5408	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x400b056	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5408	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x400b05a	        0x4883c003	                              add rax, 3	      5408	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x400b05e	           0xfb600	                   movzx eax, byte [rax]	      5408	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x400b061	            0x3c3d	                            cmp al, 0x3d	      5408	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x400b063	            0x7421	                            je 0x400b086	      5408	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x400b065	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5412	buffer.c	FUNCTION_74	FOR_1
0x400b069	           0xfb600	                   movzx eax, byte [rax]	      5412	buffer.c	FUNCTION_74	FOR_1
0x400b06c	           0xfb6c0	                           movzx eax, al	      5412	buffer.c	FUNCTION_74	FOR_1
0x400b06f	          0x8945bc	             mov dword [rbp - 0x44], eax	      5412	buffer.c	FUNCTION_74	FOR_1
0x400b072	      0x488345d801	               add qword [rbp - 0x28], 1	      5386	buffer.c	FUNCTION_74	FOR_1	CALL_1
0x400b077	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5386	buffer.c	FUNCTION_74	FOR_1	CALL_1
0x400b07b	           0xfb600	                   movzx eax, byte [rax]	      5386	buffer.c	FUNCTION_74	FOR_1	CALL_1
0x400b07e	            0x84c0	                             test al, al	      5386	buffer.c	FUNCTION_74	FOR_1	CALL_1
0x400b080	     0xf851cfeffff	                           jne 0x400aea2	      5386	buffer.c	FUNCTION_74	FOR_1	CALL_1
0x400b086	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5415	buffer.c	FUNCTION_74	IF_6
0x400b08a	           0xfb600	                   movzx eax, byte [rax]	      5415	buffer.c	FUNCTION_74	IF_6
0x400b08d	            0x84c0	                             test al, al	      5415	buffer.c	FUNCTION_74	IF_6
0x400b08f	     0xf8408020000	                            je 0x400b29d	      5415	buffer.c	FUNCTION_74	IF_6
0x400b095	      0x488345d801	               add qword [rbp - 0x28], 1	      5418	buffer.c	FUNCTION_74	IF_6	DO_1
0x400b09a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5419	buffer.c	FUNCTION_74	IF_6
0x400b09e	        0x4883e801	                              sub rax, 1	      5419	buffer.c	FUNCTION_74	IF_6
0x400b0a2	           0xfb600	                   movzx eax, byte [rax]	      5419	buffer.c	FUNCTION_74	IF_6
0x400b0a5	            0x3c3a	                            cmp al, 0x3a	      5419	buffer.c	FUNCTION_74	IF_6
0x400b0a7	            0x75ec	                           jne 0x400b095	      5419	buffer.c	FUNCTION_74	IF_6
0x400b0a9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5421	buffer.c	FUNCTION_74	IF_6	CALL_9
0x400b0ad	          0x4889c7	                            mov rdi, rax	      5421	buffer.c	FUNCTION_74	IF_6	CALL_9
0x400b0b0	      0xe800000000	                          call 0x400b0b5	      5421	buffer.c	FUNCTION_74	IF_6	CALL_9
0x400b0b5	        0x488945e0	             mov qword [rbp - 0x20], rax	      5421	buffer.c	FUNCTION_74	IF_6	CALL_9
0x400b0b9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5421	buffer.c	FUNCTION_74	IF_6	CALL_9
0x400b0bd	        0x488945d8	             mov qword [rbp - 0x28], rax	      5421	buffer.c	FUNCTION_74	IF_6	CALL_9
0x400b0c1	      0x48837de000	               cmp qword [rbp - 0x20], 0	      5422	buffer.c	FUNCTION_74	IF_6	IF_7
0x400b0c6	            0x750a	                           jne 0x400b0d2	      5422	buffer.c	FUNCTION_74	IF_6	IF_7
0x400b0c8	      0xb800000000	                              mov eax, 0	      5423	buffer.c	FUNCTION_74	IF_6	IF_7
0x400b0cd	      0xe9ce010000	                           jmp 0x400b2a0	      5423	buffer.c	FUNCTION_74	IF_6	IF_7
0x400b0d2	    0x488b05000000	            mov rax, qword [0x0400b0d9] 	      5425	buffer.c	FUNCTION_74	IF_6
0x400b0d9	        0x488945e8	             mov qword [rbp - 0x18], rax	      5425	buffer.c	FUNCTION_74	IF_6
0x400b0dd	    0x488b05000000	            mov rax, qword [0x0400b0e4] 	      5426	buffer.c	FUNCTION_74	IF_6
0x400b0e4	        0x488945f0	             mov qword [rbp - 0x10], rax	      5426	buffer.c	FUNCTION_74	IF_6
0x400b0e8	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5427	buffer.c	FUNCTION_74	IF_6
0x400b0ec	    0x488905000000	            mov qword [0x0400b0f3], rax 	      5427	buffer.c	FUNCTION_74	IF_6
0x400b0f3	    0x48c705000000	               mov qword [0x0400b0fe], 0	      5428	buffer.c	FUNCTION_74	IF_6
0x400b0fe	    0xc745c0000000	               mov dword [rbp - 0x40], 0	      5430	buffer.c	FUNCTION_74	IF_6
0x400b105	      0xe95e010000	                           jmp 0x400b268	      5431	buffer.c	FUNCTION_74	IF_6	WHILE_1
0x400b10a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5433	buffer.c	FUNCTION_74	IF_6	WHILE_1	CALL_10
0x400b10e	          0x4889c7	                            mov rdi, rax	      5433	buffer.c	FUNCTION_74	IF_6	WHILE_1	CALL_10
0x400b111	      0xe800000000	                          call 0x400b116	      5433	buffer.c	FUNCTION_74	IF_6	WHILE_1	CALL_10
0x400b116	        0x488945d8	             mov qword [rbp - 0x28], rax	      5433	buffer.c	FUNCTION_74	IF_6	WHILE_1	CALL_10
0x400b11a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5434	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_8
0x400b11e	           0xfb600	                   movzx eax, byte [rax]	      5434	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_8
0x400b121	            0x84c0	                             test al, al	      5434	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_8
0x400b123	     0xf844b010000	                            je 0x400b274	      5434	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_8
0x400b129	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x400b12d	        0x488945d0	             mov qword [rbp - 0x30], rax	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x400b131	            0xeb51	                           jmp 0x400b184	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x400b133	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5442	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0x400b137	           0xfb600	                   movzx eax, byte [rax]	      5442	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0x400b13a	            0x3c5c	                            cmp al, 0x5c	      5442	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0x400b13c	            0x753a	                           jne 0x400b178	      5442	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0x400b13e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5442	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0x400b142	        0x4883c001	                              add rax, 1	      5442	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0x400b146	           0xfb600	                   movzx eax, byte [rax]	      5442	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0x400b149	            0x3c3a	                            cmp al, 0x3a	      5442	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0x400b14b	            0x752b	                           jne 0x400b178	      5442	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0x400b14d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5443	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0x400b151	        0x4883c001	                              add rax, 1	      5443	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0x400b155	          0x4889c7	                            mov rdi, rax	      5443	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0x400b158	      0xe800000000	                          call 0x400b15d	      5443	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0x400b15d	        0x488d5001	                      lea rdx, [rax + 1]	      5443	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0x400b161	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5443	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0x400b165	        0x488d4801	                      lea rcx, [rax + 1]	      5443	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0x400b169	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5443	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0x400b16d	          0x4889ce	                            mov rsi, rcx	      5443	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0x400b170	          0x4889c7	                            mov rdi, rax	      5443	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0x400b173	      0xe800000000	                          call 0x400b178	      5443	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0x400b178	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x400b17c	        0x4883c001	                              add rax, 1	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x400b180	        0x488945d0	             mov qword [rbp - 0x30], rax	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x400b184	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x400b188	           0xfb600	                   movzx eax, byte [rax]	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x400b18b	            0x3c3a	                            cmp al, 0x3a	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x400b18d	            0x740b	                            je 0x400b19a	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x400b18f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x400b193	           0xfb600	                   movzx eax, byte [rax]	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x400b196	            0x84c0	                             test al, al	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x400b198	            0x7599	                           jne 0x400b133	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x400b19a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5444	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_10
0x400b19e	           0xfb600	                   movzx eax, byte [rax]	      5444	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_10
0x400b1a1	            0x84c0	                             test al, al	      5444	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_10
0x400b1a3	            0x7507	                           jne 0x400b1ac	      5444	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_10
0x400b1a5	    0xc745c0010000	               mov dword [rbp - 0x40], 1	      5445	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_10
0x400b1ac	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5454	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_12
0x400b1b0	      0xba04000000	                              mov edx, 4	      5454	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_12
0x400b1b5	      0xbe00000000	                              mov esi, 0	      5454	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_12
0x400b1ba	          0x4889c7	                            mov rdi, rax	      5454	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_12
0x400b1bd	      0xe800000000	                          call 0x400b1c2	      5454	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_12
0x400b1c2	            0x85c0	                           test eax, eax	      5454	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_12
0x400b1c4	            0x741a	                            je 0x400b1e0	      5454	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_12
0x400b1c6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5455	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_13
0x400b1ca	      0xba03000000	                              mov edx, 3	      5455	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_13
0x400b1cf	      0xbe00000000	                              mov esi, 0	      5455	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_13
0x400b1d4	          0x4889c7	                            mov rdi, rax	      5455	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_13
0x400b1d7	      0xe800000000	                          call 0x400b1dc	      5455	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_13
0x400b1dc	            0x85c0	                           test eax, eax	      5455	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_13
0x400b1de	            0x752f	                           jne 0x400b20f	      5455	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_13
0x400b1e0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5457	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	IF_12
0x400b1e4	           0xfb600	                   movzx eax, byte [rax]	      5457	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	IF_12
0x400b1e7	            0x3c3a	                            cmp al, 0x3a	      5457	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	IF_12
0x400b1e9	     0xf8588000000	                           jne 0x400b277	      5457	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	IF_12
0x400b1ef	    0xc745c0010000	               mov dword [rbp - 0x40], 1	      5459	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11
0x400b1f6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5460	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_14
0x400b1fa	      0xbe20000000	                           mov esi, 0x20	      5460	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_14
0x400b1ff	          0x4889c7	                            mov rdi, rax	      5460	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_14
0x400b202	      0xe800000000	                          call 0x400b207	      5460	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_14
0x400b207	        0x4883c001	                              add rax, 1	      5460	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_14
0x400b20b	        0x488945d8	             mov qword [rbp - 0x28], rax	      5460	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_14
0x400b20f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5462	buffer.c	FUNCTION_74	IF_6	WHILE_1
0x400b213	          0xc60000	                       mov byte [rax], 0	      5462	buffer.c	FUNCTION_74	IF_6	WHILE_1
0x400b216	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5464	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13
0x400b21a	           0xfb600	                   movzx eax, byte [rax]	      5464	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13
0x400b21d	            0x84c0	                             test al, al	      5464	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13
0x400b21f	            0x743b	                            je 0x400b25c	      5464	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13
0x400b221	    0x8b0500000000	            mov eax, dword [0x0400b227] 	      5467	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13
0x400b227	          0x8945cc	             mov dword [rbp - 0x34], eax	      5467	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13
0x400b22a	    0xc70500000000	     mov dword [0x0400b234], 0xffffffff 	      5468	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13
0x400b234	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      5470	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13	CALL_15
0x400b237	          0x83c80c	                             or eax, 0xc	      5470	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13	CALL_15
0x400b23a	            0x89c2	                            mov edx, eax	      5470	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13	CALL_15
0x400b23c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5470	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13	CALL_15
0x400b240	            0x89d6	                            mov esi, edx	      5470	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13	CALL_15
0x400b242	          0x4889c7	                            mov rdi, rax	      5470	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13	CALL_15
0x400b245	      0xe800000000	                          call 0x400b24a	      5470	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13	CALL_15
0x400b24a	          0x8945c4	             mov dword [rbp - 0x3c], eax	      5470	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13	CALL_15
0x400b24d	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      5472	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13
0x400b250	    0x890500000000	            mov dword [0x0400b256], eax 	      5472	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13
0x400b256	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      5474	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13	IF_14
0x400b25a	            0x741e	                            je 0x400b27a	      5474	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13	IF_14
0x400b25c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5477	buffer.c	FUNCTION_74	IF_6	WHILE_1
0x400b260	        0x4883c001	                              add rax, 1	      5477	buffer.c	FUNCTION_74	IF_6	WHILE_1
0x400b264	        0x488945d8	             mov qword [rbp - 0x28], rax	      5477	buffer.c	FUNCTION_74	IF_6	WHILE_1
0x400b268	        0x837dc000	               cmp dword [rbp - 0x40], 0	      5431	buffer.c	FUNCTION_74	IF_6	WHILE_1
0x400b26c	     0xf8498feffff	                            je 0x400b10a	      5431	buffer.c	FUNCTION_74	IF_6	WHILE_1
0x400b272	            0xeb07	                           jmp 0x400b27b	      5431	buffer.c	FUNCTION_74	IF_6	WHILE_1
0x400b274	              0x90	                                     nop	      5435	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_8
0x400b275	            0xeb04	                           jmp 0x400b27b	      5435	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_8
0x400b277	              0x90	                                     nop	      5458	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	IF_12
0x400b278	            0xeb01	                           jmp 0x400b27b	      5458	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	IF_12
0x400b27a	              0x90	                                     nop	      5475	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13	IF_14
0x400b27b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5480	buffer.c	FUNCTION_74	IF_6
0x400b27f	    0x488905000000	            mov qword [0x0400b286], rax 	      5480	buffer.c	FUNCTION_74	IF_6
0x400b286	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5481	buffer.c	FUNCTION_74	IF_6
0x400b28a	    0x488905000000	            mov qword [0x0400b291], rax 	      5481	buffer.c	FUNCTION_74	IF_6
0x400b291	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5483	buffer.c	FUNCTION_74	IF_6	CALL_16
0x400b295	          0x4889c7	                            mov rdi, rax	      5483	buffer.c	FUNCTION_74	IF_6	CALL_16
0x400b298	      0xe800000000	                          call 0x400b29d	      5483	buffer.c	FUNCTION_74	IF_6	CALL_16
0x400b29d	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      5485	buffer.c	FUNCTION_74
0x400b2a0	        0x488b4df8	                mov rcx, qword [rbp - 8]	      5486	buffer.c	FUNCTION_74
0x400b2a4	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      5486	buffer.c	FUNCTION_74
0x400b2ad	            0x7405	                            je 0x400b2b4	      5486	buffer.c	FUNCTION_74
0x400b2af	      0xe800000000	                          call 0x400b2b4	      5486	buffer.c	FUNCTION_74
0x400b2b4	              0xc9	                                   leave	      5486	buffer.c	FUNCTION_74
0x400b2b5	              0xc3	                                     ret	      5486	buffer.c	FUNCTION_74
get_rel_pos	CALL,7:functions,0:SWITCH,0:FOR,0:ELSE,2:DO,0:WHILE,0:IF,4	127
0x4009a7c	              0x55	                                push rbp	      4684	buffer.c	FUNCTION_66
0x4009a7d	          0x4889e5	                            mov rbp, rsp	      4684	buffer.c	FUNCTION_66
0x4009a80	              0x53	                                push rbx	      4684	buffer.c	FUNCTION_66
0x4009a81	        0x4883ec38	                           sub rsp, 0x38	      4684	buffer.c	FUNCTION_66
0x4009a85	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      4684	buffer.c	FUNCTION_66
0x4009a89	        0x488975d0	             mov qword [rbp - 0x30], rsi	      4684	buffer.c	FUNCTION_66
0x4009a8d	          0x8955cc	             mov dword [rbp - 0x34], edx	      4684	buffer.c	FUNCTION_66
0x4009a90	        0x837dcc02	               cmp dword [rbp - 0x34], 2	      4688	buffer.c	FUNCTION_66	IF_1
0x4009a94	     0xf8ea4010000	                           jle 0x4009c3e	      4688	buffer.c	FUNCTION_66	IF_1
0x4009a9a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4690	buffer.c	FUNCTION_66
0x4009a9e	        0x488b4078	            mov rax, qword [rax + 0x78] 	      4690	buffer.c	FUNCTION_66
0x4009aa2	        0x4883e801	                              sub rax, 1	      4690	buffer.c	FUNCTION_66
0x4009aa6	        0x488945e0	             mov qword [rbp - 0x20], rax	      4690	buffer.c	FUNCTION_66
0x4009aaa	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4692	buffer.c	FUNCTION_66	CALL_1
0x4009aae	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      4692	buffer.c	FUNCTION_66	CALL_1
0x4009ab2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4692	buffer.c	FUNCTION_66	CALL_1
0x4009ab6	          0x4889d6	                            mov rsi, rdx	      4692	buffer.c	FUNCTION_66	CALL_1
0x4009ab9	          0x4889c7	                            mov rdi, rax	      4692	buffer.c	FUNCTION_66	CALL_1
0x4009abc	      0xe800000000	                          call 0x4009ac1	      4692	buffer.c	FUNCTION_66	CALL_1
0x4009ac1	            0x89c2	                            mov edx, eax	      4692	buffer.c	FUNCTION_66	CALL_1
0x4009ac3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4692	buffer.c	FUNCTION_66	CALL_1
0x4009ac7	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      4692	buffer.c	FUNCTION_66	CALL_1
0x4009acd	            0x29c2	                            sub edx, eax	      4692	buffer.c	FUNCTION_66	CALL_1
0x4009acf	            0x89d0	                            mov eax, edx	      4692	buffer.c	FUNCTION_66	CALL_1
0x4009ad1	            0x4898	                                    cdqe	      4692	buffer.c	FUNCTION_66	CALL_1
0x4009ad3	        0x480145e0	            add qword [rbp - 0x20], rax 	      4692	buffer.c	FUNCTION_66	CALL_1
0x4009ad7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4693	buffer.c	FUNCTION_66	IF_2
0x4009adb	        0x488b4078	            mov rax, qword [rax + 0x78] 	      4693	buffer.c	FUNCTION_66	IF_2
0x4009adf	        0x4883f801	                              cmp rax, 1	      4693	buffer.c	FUNCTION_66	IF_2
0x4009ae3	            0x7516	                           jne 0x4009afb	      4693	buffer.c	FUNCTION_66	IF_2
0x4009ae5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4693	buffer.c	FUNCTION_66	IF_2
0x4009ae9	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      4693	buffer.c	FUNCTION_66	IF_2
0x4009aef	            0x85c0	                           test eax, eax	      4693	buffer.c	FUNCTION_66	IF_2
0x4009af1	            0x7e08	                           jle 0x4009afb	      4693	buffer.c	FUNCTION_66	IF_2
0x4009af3	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      4694	buffer.c	FUNCTION_66	IF_2
0x4009afb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4698	buffer.c	FUNCTION_66
0x4009aff	        0x488b4008	                mov rax, qword [rax + 8]	      4698	buffer.c	FUNCTION_66
0x4009b03	          0x488b10	                    mov rdx, qword [rax]	      4698	buffer.c	FUNCTION_66
0x4009b06	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4698	buffer.c	FUNCTION_66
0x4009b0a	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	      4698	buffer.c	FUNCTION_66
0x4009b11	          0x4829c2	                            sub rdx, rax	      4698	buffer.c	FUNCTION_66
0x4009b14	          0x4889d0	                            mov rax, rdx	      4698	buffer.c	FUNCTION_66
0x4009b17	        0x4883c001	                              add rax, 1	      4698	buffer.c	FUNCTION_66
0x4009b1b	        0x488945e8	             mov qword [rbp - 0x18], rax	      4698	buffer.c	FUNCTION_66
0x4009b1f	      0x48837de800	               cmp qword [rbp - 0x18], 0	      4699	buffer.c	FUNCTION_66	IF_3
0x4009b24	            0x7f43	                            jg 0x4009b69	      4699	buffer.c	FUNCTION_66	IF_3
0x4009b26	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      4701	buffer.c	FUNCTION_66	IF_3
0x4009b29	          0x83e801	                              sub eax, 1	      4701	buffer.c	FUNCTION_66	IF_3
0x4009b2c	          0x4863d8	                         movsxd rbx, eax	      4700	buffer.c	FUNCTION_66	IF_3	CALL_4
0x4009b2f	      0x48837de000	               cmp qword [rbp - 0x20], 0	      4700	buffer.c	FUNCTION_66	IF_3	CALL_4
0x4009b34	            0x750f	                           jne 0x4009b45	      4700	buffer.c	FUNCTION_66	IF_3	CALL_4
0x4009b36	      0xbf00000000	                              mov edi, 0	      4700	buffer.c	FUNCTION_66	IF_3	CALL_4
0x4009b3b	      0xe800000000	                          call 0x4009b40	      4700	buffer.c	FUNCTION_66	IF_3	CALL_4
0x4009b40	          0x4889c1	                            mov rcx, rax	      4700	buffer.c	FUNCTION_66	IF_3	CALL_4
0x4009b43	            0xeb0d	                           jmp 0x4009b52	      4700	buffer.c	FUNCTION_66	IF_3	CALL_4
0x4009b45	      0xbf00000000	                              mov edi, 0	      4700	buffer.c	FUNCTION_66	IF_3	CALL_4
0x4009b4a	      0xe800000000	                          call 0x4009b4f	      4700	buffer.c	FUNCTION_66	IF_3	CALL_4
0x4009b4f	          0x4889c1	                            mov rcx, rax	      4700	buffer.c	FUNCTION_66	IF_3	CALL_4
0x4009b52	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4700	buffer.c	FUNCTION_66	IF_3	CALL_4
0x4009b56	          0x4889da	                            mov rdx, rbx	      4700	buffer.c	FUNCTION_66	IF_3	CALL_4
0x4009b59	          0x4889ce	                            mov rsi, rcx	      4700	buffer.c	FUNCTION_66	IF_3	CALL_4
0x4009b5c	          0x4889c7	                            mov rdi, rax	      4700	buffer.c	FUNCTION_66	IF_3	CALL_4
0x4009b5f	      0xe800000000	                          call 0x4009b64	      4700	buffer.c	FUNCTION_66	IF_3	CALL_4
0x4009b64	      0xe9d6000000	                           jmp 0x4009c3f	      4700	buffer.c	FUNCTION_66	IF_3	CALL_4
0x4009b69	      0x48837de000	               cmp qword [rbp - 0x20], 0	      4702	buffer.c	FUNCTION_66	ELSE_1	IF_4
0x4009b6e	            0x7f2d	                            jg 0x4009b9d	      4702	buffer.c	FUNCTION_66	ELSE_1	IF_4
0x4009b70	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      4703	buffer.c	FUNCTION_66	ELSE_1	IF_4
0x4009b73	          0x83e801	                              sub eax, 1	      4703	buffer.c	FUNCTION_66	ELSE_1	IF_4
0x4009b76	          0x4863d8	                         movsxd rbx, eax	      4703	buffer.c	FUNCTION_66	ELSE_1	IF_4
0x4009b79	      0xbf00000000	                              mov edi, 0	      4703	buffer.c	FUNCTION_66	ELSE_1	IF_4
0x4009b7e	      0xe800000000	                          call 0x4009b83	      4703	buffer.c	FUNCTION_66	ELSE_1	IF_4
0x4009b83	          0x4889c1	                            mov rcx, rax	      4703	buffer.c	FUNCTION_66	ELSE_1	IF_4
0x4009b86	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4703	buffer.c	FUNCTION_66	ELSE_1	IF_4
0x4009b8a	          0x4889da	                            mov rdx, rbx	      4703	buffer.c	FUNCTION_66	ELSE_1	IF_4
0x4009b8d	          0x4889ce	                            mov rsi, rcx	      4703	buffer.c	FUNCTION_66	ELSE_1	IF_4
0x4009b90	          0x4889c7	                            mov rdi, rax	      4703	buffer.c	FUNCTION_66	ELSE_1	IF_4
0x4009b93	      0xe800000000	                          call 0x4009b98	      4703	buffer.c	FUNCTION_66	ELSE_1	IF_4
0x4009b98	      0xe9a2000000	                           jmp 0x4009c3f	      4703	buffer.c	FUNCTION_66	ELSE_1	IF_4
0x4009b9d	    0x48817de04042	        cmp qword [rbp - 0x20], 0xf4240 	      4705	buffer.c	FUNCTION_66	ELSE_2	CALL_7
0x4009ba5	            0x7e41	                           jle 0x4009be8	      4705	buffer.c	FUNCTION_66	ELSE_2	CALL_7
0x4009ba7	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      4706	buffer.c	FUNCTION_66	ELSE_2
0x4009bab	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4706	buffer.c	FUNCTION_66	ELSE_2
0x4009baf	        0x488d0c02	                    lea rcx, [rdx + rax]	      4706	buffer.c	FUNCTION_66	ELSE_2
0x4009bb3	    0x48ba0bd7a370	          movabs rdx, 0xa3d70a3d70a3d70b	      4706	buffer.c	FUNCTION_66	ELSE_2
0x4009bbd	          0x4889c8	                            mov rax, rcx	      4706	buffer.c	FUNCTION_66	ELSE_2
0x4009bc0	          0x48f7ea	                                imul rdx	      4706	buffer.c	FUNCTION_66	ELSE_2
0x4009bc3	        0x488d040a	                    lea rax, [rdx + rcx]	      4706	buffer.c	FUNCTION_66	ELSE_2
0x4009bc7	        0x48c1f806	                              sar rax, 6	      4706	buffer.c	FUNCTION_66	ELSE_2
0x4009bcb	          0x4889c2	                            mov rdx, rax	      4706	buffer.c	FUNCTION_66	ELSE_2
0x4009bce	          0x4889c8	                            mov rax, rcx	      4706	buffer.c	FUNCTION_66	ELSE_2
0x4009bd1	        0x48c1f83f	                           sar rax, 0x3f	      4706	buffer.c	FUNCTION_66	ELSE_2
0x4009bd5	          0x4889d3	                            mov rbx, rdx	      4706	buffer.c	FUNCTION_66	ELSE_2
0x4009bd8	          0x4829c3	                            sub rbx, rax	      4706	buffer.c	FUNCTION_66	ELSE_2
0x4009bdb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4706	buffer.c	FUNCTION_66	ELSE_2
0x4009bdf	            0x4899	                                     cqo	      4706	buffer.c	FUNCTION_66	ELSE_2
0x4009be1	          0x48f7fb	                                idiv rbx	      4706	buffer.c	FUNCTION_66	ELSE_2
0x4009be4	            0x89c2	                            mov edx, eax	      4705	buffer.c	FUNCTION_66	ELSE_2	CALL_7
0x4009be6	            0xeb36	                           jmp 0x4009c1e	      4705	buffer.c	FUNCTION_66	ELSE_2	CALL_7
0x4009be8	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      4707	buffer.c	FUNCTION_66	ELSE_2
0x4009bec	          0x4889d0	                            mov rax, rdx	      4707	buffer.c	FUNCTION_66	ELSE_2
0x4009bef	        0x48c1e002	                              shl rax, 2	      4707	buffer.c	FUNCTION_66	ELSE_2
0x4009bf3	          0x4801d0	                            add rax, rdx	      4707	buffer.c	FUNCTION_66	ELSE_2
0x4009bf6	    0x488d14850000	                        lea rdx, [rax*4]	      4707	buffer.c	FUNCTION_66	ELSE_2
0x4009bfe	          0x4801d0	                            add rax, rdx	      4707	buffer.c	FUNCTION_66	ELSE_2
0x4009c01	        0x48c1e002	                              shl rax, 2	      4707	buffer.c	FUNCTION_66	ELSE_2
0x4009c05	          0x4889c1	                            mov rcx, rax	      4707	buffer.c	FUNCTION_66	ELSE_2
0x4009c08	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      4707	buffer.c	FUNCTION_66	ELSE_2
0x4009c0c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4707	buffer.c	FUNCTION_66	ELSE_2
0x4009c10	        0x488d1c02	                    lea rbx, [rdx + rax]	      4707	buffer.c	FUNCTION_66	ELSE_2
0x4009c14	          0x4889c8	                            mov rax, rcx	      4707	buffer.c	FUNCTION_66	ELSE_2
0x4009c17	            0x4899	                                     cqo	      4707	buffer.c	FUNCTION_66	ELSE_2
0x4009c19	          0x48f7fb	                                idiv rbx	      4707	buffer.c	FUNCTION_66	ELSE_2
0x4009c1c	            0x89c2	                            mov edx, eax	      4705	buffer.c	FUNCTION_66	ELSE_2	CALL_7
0x4009c1e	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      4705	buffer.c	FUNCTION_66	ELSE_2	CALL_7
0x4009c21	          0x4863f0	                         movsxd rsi, eax	      4705	buffer.c	FUNCTION_66	ELSE_2	CALL_7
0x4009c24	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4705	buffer.c	FUNCTION_66	ELSE_2	CALL_7
0x4009c28	            0x89d1	                            mov ecx, edx	      4705	buffer.c	FUNCTION_66	ELSE_2	CALL_7
0x4009c2a	      0xba00000000	                              mov edx, 0	      4705	buffer.c	FUNCTION_66	ELSE_2	CALL_7
0x4009c2f	          0x4889c7	                            mov rdi, rax	      4705	buffer.c	FUNCTION_66	ELSE_2	CALL_7
0x4009c32	      0xb800000000	                              mov eax, 0	      4705	buffer.c	FUNCTION_66	ELSE_2	CALL_7
0x4009c37	      0xe800000000	                          call 0x4009c3c	      4705	buffer.c	FUNCTION_66	ELSE_2	CALL_7
0x4009c3c	            0xeb01	                           jmp 0x4009c3f	      4705	buffer.c	FUNCTION_66	ELSE_2	CALL_7
0x4009c3e	              0x90	                                     nop	      4689	buffer.c	FUNCTION_66	IF_1
0x4009c3f	        0x4883c438	                           add rsp, 0x38	      4708	buffer.c	FUNCTION_66
0x4009c43	              0x5b	                                 pop rbx	      4708	buffer.c	FUNCTION_66
0x4009c44	              0x5d	                                 pop rbp	      4708	buffer.c	FUNCTION_66
0x4009c45	              0xc3	                                     ret	      4708	buffer.c	FUNCTION_66
do_arg_all	CALL,43:functions,0:SWITCH,0:FOR,5:ELSE,6:DO,0:WHILE,0:IF,38	543
0x4009e28	              0x55	                                push rbp	      4845	buffer.c	FUNCTION_71
0x4009e29	          0x4889e5	                            mov rbp, rsp	      4845	buffer.c	FUNCTION_71
0x4009e2c	            0x4154	                                push r12	      4845	buffer.c	FUNCTION_71
0x4009e2e	              0x53	                                push rbx	      4845	buffer.c	FUNCTION_71
0x4009e2f	    0x4881ecb00000	                           sub rsp, 0xb0	      4845	buffer.c	FUNCTION_71
0x4009e36	    0x89bd4cffffff	             mov dword [rbp - 0xb4], edi	      4845	buffer.c	FUNCTION_71
0x4009e3c	    0x89b548ffffff	             mov dword [rbp - 0xb8], esi	      4845	buffer.c	FUNCTION_71
0x4009e42	    0x899544ffffff	             mov dword [rbp - 0xbc], edx	      4845	buffer.c	FUNCTION_71
0x4009e48	    0x64488b042528	                mov rax, qword fs:[0x28]	      4845	buffer.c	FUNCTION_71
0x4009e51	        0x488945e8	             mov qword [rbp - 0x18], rax	      4845	buffer.c	FUNCTION_71
0x4009e55	            0x31c0	                            xor eax, eax	      4845	buffer.c	FUNCTION_71
0x4009e57	    0xc78558ffffff	               mov dword [rbp - 0xa8], 0	      4855	buffer.c	FUNCTION_71
0x4009e61	    0xc7855cffffff	               mov dword [rbp - 0xa4], 1	      4856	buffer.c	FUNCTION_71
0x4009e6b	    0x8b0500000000	            mov eax, dword [0x04009e71] 	      4861	buffer.c	FUNCTION_71
0x4009e71	    0x898564ffffff	             mov dword [rbp - 0x9c], eax	      4861	buffer.c	FUNCTION_71
0x4009e77	    0x48c745880000	               mov qword [rbp - 0x78], 0	      4864	buffer.c	FUNCTION_71
0x4009e7f	    0x48c745900000	               mov qword [rbp - 0x70], 0	      4865	buffer.c	FUNCTION_71
0x4009e87	    0x488b05000000	            mov rax, qword [0x04009e8e] 	      4867	buffer.c	FUNCTION_71	IF_1
0x4009e8e	    0x488b80800100	           mov rax, qword [rax + 0x180] 	      4867	buffer.c	FUNCTION_71	IF_1
0x4009e95	            0x8b00	                    mov eax, dword [rax]	      4867	buffer.c	FUNCTION_71	IF_1
0x4009e97	            0x85c0	                           test eax, eax	      4867	buffer.c	FUNCTION_71	IF_1
0x4009e99	     0xf8e0e090000	                           jle 0x400a7ad	      4867	buffer.c	FUNCTION_71	IF_1
0x4009e9f	      0xe800000000	                          call 0x4009ea4	      4873	buffer.c	FUNCTION_71	CALL_1
0x4009ea4	    0x488b05000000	            mov rax, qword [0x04009eab] 	      4875	buffer.c	FUNCTION_71
0x4009eab	    0x488b80800100	           mov rax, qword [rax + 0x180] 	      4875	buffer.c	FUNCTION_71
0x4009eb2	            0x8b00	                    mov eax, dword [rax]	      4875	buffer.c	FUNCTION_71
0x4009eb4	    0x898568ffffff	             mov dword [rbp - 0x98], eax	      4875	buffer.c	FUNCTION_71
0x4009eba	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      4876	buffer.c	FUNCTION_71	CALL_2
0x4009ec0	            0x89c7	                            mov edi, eax	      4876	buffer.c	FUNCTION_71	CALL_2
0x4009ec2	      0xe800000000	                          call 0x4009ec7	      4876	buffer.c	FUNCTION_71	CALL_2
0x4009ec7	        0x48894598	             mov qword [rbp - 0x68], rax	      4876	buffer.c	FUNCTION_71	CALL_2
0x4009ecb	      0x48837d9800	               cmp qword [rbp - 0x68], 0	      4877	buffer.c	FUNCTION_71	IF_2
0x4009ed0	     0xf84da080000	                            je 0x400a7b0	      4877	buffer.c	FUNCTION_71	IF_2
0x4009ed6	    0x488b05000000	            mov rax, qword [0x04009edd] 	      4883	buffer.c	FUNCTION_71
0x4009edd	    0x488b80800100	           mov rax, qword [rax + 0x180] 	      4883	buffer.c	FUNCTION_71
0x4009ee4	        0x488945a0	             mov qword [rbp - 0x60], rax	      4883	buffer.c	FUNCTION_71
0x4009ee8	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      4884	buffer.c	FUNCTION_71
0x4009eec	          0x8b4018	            mov eax, dword [rax + 0x18] 	      4884	buffer.c	FUNCTION_71
0x4009eef	          0x8d5001	                      lea edx, [rax + 1]	      4884	buffer.c	FUNCTION_71
0x4009ef2	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      4884	buffer.c	FUNCTION_71
0x4009ef6	          0x895018	             mov dword [rax + 0x18], edx	      4884	buffer.c	FUNCTION_71
0x4009ef9	    0x488b05000000	            mov rax, qword [0x04009f00] 	      4886	buffer.c	FUNCTION_71
0x4009f00	        0x488945a8	             mov qword [rbp - 0x58], rax	      4886	buffer.c	FUNCTION_71
0x4009f04	    0x488b05000000	            mov rax, qword [0x04009f0b] 	      4887	buffer.c	FUNCTION_71
0x4009f0b	        0x488945b0	             mov qword [rbp - 0x50], rax	      4887	buffer.c	FUNCTION_71
0x4009f0f	    0xc70500000000	               mov dword [0x04009f19], 1	      4890	buffer.c	FUNCTION_71
0x4009f19	    0x83bd64ffffff	               cmp dword [rbp - 0x9c], 0	      4900	buffer.c	FUNCTION_71	IF_3
0x4009f20	            0x7e19	                           jle 0x4009f3b	      4900	buffer.c	FUNCTION_71	IF_3
0x4009f22	    0x488b05000000	            mov rax, qword [0x04009f29] 	      4901	buffer.c	FUNCTION_71	CALL_3
0x4009f29	      0xba01000000	                              mov edx, 1	      4901	buffer.c	FUNCTION_71	CALL_3
0x4009f2e	      0xbe01000000	                              mov esi, 1	      4901	buffer.c	FUNCTION_71	CALL_3
0x4009f33	          0x4889c7	                            mov rdi, rax	      4901	buffer.c	FUNCTION_71	CALL_3
0x4009f36	      0xe800000000	                          call 0x4009f3b	      4901	buffer.c	FUNCTION_71	CALL_3
0x4009f3b	    0x488b05000000	            mov rax, qword [0x04009f42] 	      4904	buffer.c	FUNCTION_71	FOR_1
0x4009f42	          0x488b00	                    mov rax, qword [rax]	      4904	buffer.c	FUNCTION_71	FOR_1
0x4009f45	        0x48894580	             mov qword [rbp - 0x80], rax	      4904	buffer.c	FUNCTION_71	FOR_1
0x4009f49	    0x488b05000000	            mov rax, qword [0x04009f50] 	      4905	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4009f50	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      4905	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4009f57	      0xe9bd030000	                           jmp 0x400a319	      4905	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4009f5c	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4907	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4009f63	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4907	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4009f67	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      4907	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4009f6e	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4908	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4009f75	        0x488b4008	                mov rax, qword [rax + 8]	      4908	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4009f79	        0x488945b8	             mov qword [rbp - 0x48], rax	      4908	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4009f7d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4909	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x4009f81	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      4909	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x4009f88	          0x4885c0	                           test rax, rax	      4909	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x4009f8b	            0x7431	                            je 0x4009fbe	      4909	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x4009f8d	    0x83bd44ffffff	               cmp dword [rbp - 0xbc], 0	      4910	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x4009f94	            0x7539	                           jne 0x4009fcf	      4910	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x4009f96	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4910	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x4009f9a	          0x8b4078	            mov eax, dword [rax + 0x78] 	      4910	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x4009f9d	          0x83f801	                              cmp eax, 1	      4910	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x4009fa0	            0x7f1c	                            jg 0x4009fbe	      4910	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x4009fa2	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4911	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x4009fa9	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      4911	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x4009faf	          0x4863d0	                         movsxd rdx, eax	      4911	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x4009fb2	    0x488b05000000	            mov rax, qword [0x04009fb9] 	      4911	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x4009fb9	          0x4839c2	                            cmp rdx, rax	      4911	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x4009fbc	            0x7411	                            je 0x4009fcf	      4911	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x4009fbe	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      4912	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x4009fc4	    0x898554ffffff	             mov dword [rbp - 0xac], eax	      4912	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x4009fca	      0xe9b6010000	                           jmp 0x400a185	      4912	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x4009fcf	    0xc78554ffffff	               mov dword [rbp - 0xac], 0	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x4009fd9	      0xe992010000	                           jmp 0x400a170	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x4009fde	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      4918	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5
0x4009fe2	            0x8b00	                    mov eax, dword [rax]	      4918	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5
0x4009fe4	    0x3b8554ffffff	             cmp eax, dword [rbp - 0xac]	      4918	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5
0x4009fea	     0xf8e79010000	                           jle 0x400a169	      4918	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5
0x4009ff0	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      4919	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_4
0x4009ff4	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4919	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_4
0x4009ff8	    0x8b9554ffffff	             mov edx, dword [rbp - 0xac]	      4919	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_4
0x4009ffe	          0x4863d2	                         movsxd rdx, edx	      4919	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_4
0x400a001	        0x48c1e204	                              shl rdx, 4	      4919	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_4
0x400a005	          0x4801d0	                            add rax, rdx	      4919	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_4
0x400a008	          0x8b5008	                mov edx, dword [rax + 8]	      4919	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_4
0x400a00b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4919	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_4
0x400a00f	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      4919	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_4
0x400a015	            0x39c2	                            cmp edx, eax	      4919	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_4
0x400a017	            0x7446	                            je 0x400a05f	      4919	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_4
0x400a019	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4920	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_7
0x400a01d	    0x488b98880000	            mov rbx, qword [rax + 0x88] 	      4920	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_7
0x400a024	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      4920	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_7
0x400a028	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4920	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_7
0x400a02c	    0x8b9554ffffff	             mov edx, dword [rbp - 0xac]	      4920	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_7
0x400a032	          0x4863d2	                         movsxd rdx, edx	      4920	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_7
0x400a035	        0x48c1e204	                              shl rdx, 4	      4920	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_7
0x400a039	          0x4801d0	                            add rax, rdx	      4920	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_7
0x400a03c	          0x4889c7	                            mov rdi, rax	      4920	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_7
0x400a03f	      0xe800000000	                          call 0x400a044	      4920	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_7
0x400a044	      0xba01000000	                              mov edx, 1	      4920	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_7
0x400a049	          0x4889de	                            mov rsi, rbx	      4920	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_7
0x400a04c	          0x4889c7	                            mov rdi, rax	      4920	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_7
0x400a04f	      0xe800000000	                          call 0x400a054	      4920	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_7
0x400a054	          0x83e001	                              and eax, 1	      4921	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5
0x400a057	            0x85c0	                           test eax, eax	      4920	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_7
0x400a059	     0xf840a010000	                            je 0x400a169	      4920	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_7
0x400a05f	    0xc78560ffffff	               mov dword [rbp - 0xa0], 1	      4923	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5
0x400a069	    0x488b05000000	            mov rax, qword [0x0400a070] 	      4925	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_6
0x400a070	        0x483945b0	            cmp qword [rbp - 0x50], rax 	      4925	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_6
0x400a074	            0x751b	                           jne 0x400a091	      4925	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_6
0x400a076	    0x838560ffffff	               add dword [rbp - 0xa0], 1	      4927	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_6
0x400a07d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4928	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_6	IF_7
0x400a081	    0x483b8570ffff	             cmp rax, qword [rbp - 0x90]	      4928	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_6	IF_7
0x400a088	            0x7507	                           jne 0x400a091	      4928	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_6	IF_7
0x400a08a	    0x838560ffffff	               add dword [rbp - 0xa0], 1	      4929	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_6	IF_7
0x400a091	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      4932	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8
0x400a097	          0x4863d0	                         movsxd rdx, eax	      4932	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8
0x400a09a	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4932	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8
0x400a09e	          0x4801d0	                            add rax, rdx	      4932	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8
0x400a0a1	           0xfb600	                   movzx eax, byte [rax]	      4932	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8
0x400a0a4	           0xfb6c0	                           movzx eax, al	      4932	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8
0x400a0a7	    0x3b8560ffffff	             cmp eax, dword [rbp - 0xa0]	      4932	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8
0x400a0ad	            0x7d50	                           jge 0x400a0ff	      4932	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8
0x400a0af	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      4934	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8
0x400a0b5	          0x4863d0	                         movsxd rdx, eax	      4934	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8
0x400a0b8	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4934	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8
0x400a0bc	          0x4801d0	                            add rax, rdx	      4934	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8
0x400a0bf	    0x8b9560ffffff	             mov edx, dword [rbp - 0xa0]	      4934	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8
0x400a0c5	            0x8810	                      mov byte [rax], dl	      4934	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8
0x400a0c7	    0x83bd54ffffff	               cmp dword [rbp - 0xac], 0	      4935	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8	IF_9
0x400a0ce	            0x7544	                           jne 0x400a114	      4935	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8	IF_9
0x400a0d0	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      4937	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8	IF_9	IF_10
0x400a0d5	            0x7410	                            je 0x400a0e7	      4937	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8	IF_9	IF_10
0x400a0d7	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4938	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8	IF_9	IF_10
0x400a0db	    0x8b9568ffffff	             mov edx, dword [rbp - 0x98]	      4938	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8	IF_9	IF_10
0x400a0e1	    0x899088010000	            mov dword [rax + 0x188], edx	      4938	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8	IF_9	IF_10
0x400a0e7	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4939	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8	IF_9
0x400a0ee	        0x48894588	             mov qword [rbp - 0x78], rax	      4939	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8	IF_9
0x400a0f2	    0x488b05000000	            mov rax, qword [0x0400a0f9] 	      4940	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8	IF_9
0x400a0f9	        0x48894590	             mov qword [rbp - 0x70], rax	      4940	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8	IF_9
0x400a0fd	            0xeb15	                           jmp 0x400a114	      4940	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8	IF_9
0x400a0ff	    0x83bd44ffffff	               cmp dword [rbp - 0xbc], 0	      4943	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	ELSE_2	IF_11
0x400a106	            0x740c	                            je 0x400a114	      4943	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	ELSE_2	IF_11
0x400a108	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      4944	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	ELSE_2	IF_11
0x400a10e	    0x898554ffffff	             mov dword [rbp - 0xac], eax	      4944	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	ELSE_2	IF_11
0x400a114	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4946	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_12
0x400a11b	    0x488b80800100	           mov rax, qword [rax + 0x180] 	      4946	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_12
0x400a122	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	      4946	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_12
0x400a126	            0x745c	                            je 0x400a184	      4946	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_12
0x400a128	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4950	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_12	CALL_8
0x400a12f	    0x488b80800100	           mov rax, qword [rax + 0x180] 	      4950	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_12	CALL_8
0x400a136	          0x4889c7	                            mov rdi, rax	      4950	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_12	CALL_8
0x400a139	      0xe800000000	                          call 0x400a13e	      4950	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_12	CALL_8
0x400a13e	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4951	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_12
0x400a145	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      4951	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_12
0x400a149	    0x488990800100	            mov qword [rax + 0x180], rdx	      4951	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_12
0x400a150	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4952	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_12
0x400a157	    0x488b80800100	           mov rax, qword [rax + 0x180] 	      4952	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_12
0x400a15e	          0x8b5018	            mov edx, dword [rax + 0x18] 	      4952	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_12
0x400a161	          0x83c201	                              add edx, 1	      4952	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_12
0x400a164	          0x895018	             mov dword [rax + 0x18], edx	      4952	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_12
0x400a167	            0xeb1b	                           jmp 0x400a184	      4954	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5
0x400a169	    0x838554ffffff	               add dword [rbp - 0xac], 1	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x400a170	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x400a176	    0x3b8568ffffff	             cmp eax, dword [rbp - 0x98]	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x400a17c	     0xf8c5cfeffff	                            jl 0x4009fde	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x400a182	            0xeb01	                           jmp 0x400a185	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x400a184	              0x90	                                     nop	      4954	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5
0x400a185	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4958	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x400a18c	    0x8b9554ffffff	             mov edx, dword [rbp - 0xac]	      4958	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x400a192	    0x899088010000	            mov dword [rax + 0x188], edx	      4958	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x400a198	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      4960	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13
0x400a19e	    0x3b8568ffffff	             cmp eax, dword [rbp - 0x98]	      4960	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13
0x400a1a4	     0xf8561010000	                           jne 0x400a30b	      4960	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13
0x400a1aa	    0x83bd44ffffff	               cmp dword [rbp - 0xbc], 0	      4960	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13
0x400a1b1	     0xf8554010000	                           jne 0x400a30b	      4960	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13
0x400a1b7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4962	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_9
0x400a1bb	          0x4889c7	                            mov rdi, rax	      4962	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_9
0x400a1be	      0xe800000000	                          call 0x400a1c3	      4962	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_9
0x400a1c3	            0x85c0	                           test eax, eax	      4962	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_9
0x400a1c5	            0x7529	                           jne 0x400a1f0	      4962	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_9
0x400a1c7	    0x83bd48ffffff	               cmp dword [rbp - 0xb8], 0	      4962	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_9
0x400a1ce	            0x7520	                           jne 0x400a1f0	      4962	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_9
0x400a1d0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4962	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_9
0x400a1d4	          0x8b4078	            mov eax, dword [rax + 0x78] 	      4962	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_9
0x400a1d7	          0x83f801	                              cmp eax, 1	      4962	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_9
0x400a1da	            0x7f14	                            jg 0x400a1f0	      4962	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_9
0x400a1dc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4963	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_10
0x400a1e0	          0x4889c7	                            mov rdi, rax	      4963	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_10
0x400a1e3	      0xe800000000	                          call 0x400a1e8	      4963	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_10
0x400a1e8	            0x85c0	                           test eax, eax	      4963	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_10
0x400a1ea	     0xf851b010000	                           jne 0x400a30b	      4963	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_10
0x400a1f0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4967	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_11
0x400a1f4	          0x4889c7	                            mov rdi, rax	      4967	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_11
0x400a1f7	      0xe800000000	                          call 0x400a1fc	      4967	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_11
0x400a1fc	            0x85c0	                           test eax, eax	      4967	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_11
0x400a1fe	            0x7576	                           jne 0x400a276	      4967	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_11
0x400a200	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4967	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_11
0x400a204	          0x8b4078	            mov eax, dword [rax + 0x78] 	      4967	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_11
0x400a207	          0x83f801	                              cmp eax, 1	      4967	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_11
0x400a20a	            0x7f6a	                            jg 0x400a276	      4967	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_11
0x400a20c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4968	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_12
0x400a210	          0x4889c7	                            mov rdi, rax	      4968	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_12
0x400a213	      0xe800000000	                          call 0x400a218	      4968	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_12
0x400a218	            0x85c0	                           test eax, eax	      4968	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_12
0x400a21a	            0x745a	                            je 0x400a276	      4968	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_12
0x400a21c	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      4972	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_13
0x400a220	        0x488d45d0	                   lea rax, [rbp - 0x30]	      4972	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_13
0x400a224	          0x4889d6	                            mov rsi, rdx	      4972	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_13
0x400a227	          0x4889c7	                            mov rdi, rax	      4972	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_13
0x400a22a	      0xe800000000	                          call 0x400a22f	      4972	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_13
0x400a22f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4974	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_14
0x400a233	      0xbe00000000	                              mov esi, 0	      4974	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_14
0x400a238	          0x4889c7	                            mov rdi, rax	      4974	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_14
0x400a23b	      0xe800000000	                          call 0x400a240	      4974	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_14
0x400a240	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4977	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	IF_16	CALL_16
0x400a247	          0x4889c7	                            mov rdi, rax	      4977	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	IF_16	CALL_16
0x400a24a	      0xe800000000	                          call 0x400a24f	      4977	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	IF_16	CALL_16
0x400a24f	            0x85c0	                           test eax, eax	      4977	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	IF_16	CALL_16
0x400a251	            0x7410	                            je 0x400a263	      4977	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	IF_16	CALL_16
0x400a253	        0x488d45d0	                   lea rax, [rbp - 0x30]	      4977	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	IF_16	CALL_16
0x400a257	          0x4889c7	                            mov rdi, rax	      4977	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	IF_16	CALL_16
0x400a25a	      0xe800000000	                          call 0x400a25f	      4977	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	IF_16	CALL_16
0x400a25f	            0x85c0	                           test eax, eax	      4977	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	IF_16	CALL_16
0x400a261	            0x7513	                           jne 0x400a276	      4977	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	IF_16	CALL_16
0x400a263	    0x488b05000000	            mov rax, qword [0x0400a26a] 	      4979	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	IF_16
0x400a26a	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      4979	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	IF_16
0x400a271	      0xe995000000	                           jmp 0x400a30b	      4979	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	IF_16
0x400a276	    0x488b15000000	            mov rdx, qword [0x0400a27d] 	      4984	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x400a27d	    0x488b05000000	            mov rax, qword [0x0400a284] 	      4984	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x400a284	          0x4839c2	                            cmp rdx, rax	      4984	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x400a287	            0x7524	                           jne 0x400a2ad	      4984	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x400a289	    0x488b05000000	            mov rax, qword [0x0400a290] 	      4985	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x400a290	          0x488b00	                    mov rax, qword [rax]	      4985	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x400a293	          0x4885c0	                           test rax, rax	      4985	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x400a296	            0x7409	                            je 0x400a2a1	      4985	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x400a298	    0x83bd64ffffff	               cmp dword [rbp - 0x9c], 0	      4985	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x400a29f	            0x750c	                           jne 0x400a2ad	      4985	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x400a2a1	    0xc78558ffffff	               mov dword [rbp - 0xa8], 1	      4986	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x400a2ab	            0xeb5e	                           jmp 0x400a30b	      4986	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x400a2ad	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0x400a2b1	          0x4889c7	                            mov rdi, rax	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0x400a2b4	      0xe800000000	                          call 0x400a2b9	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0x400a2b9	            0x85c0	                           test eax, eax	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0x400a2bb	            0x7517	                           jne 0x400a2d4	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0x400a2bd	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0x400a2c1	          0x4889c7	                            mov rdi, rax	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0x400a2c4	      0xe800000000	                          call 0x400a2c9	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0x400a2c9	            0x85c0	                           test eax, eax	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0x400a2cb	            0x7507	                           jne 0x400a2d4	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0x400a2cd	      0xba01000000	                              mov edx, 1	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0x400a2d2	            0xeb05	                           jmp 0x400a2d9	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0x400a2d4	      0xba00000000	                              mov edx, 0	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0x400a2d9	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0x400a2e0	            0x89d6	                            mov esi, edx	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0x400a2e2	          0x4889c7	                            mov rdi, rax	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0x400a2e5	      0xe800000000	                          call 0x400a2ea	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0x400a2ea	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      4992	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	IF_18	CALL_20
0x400a2f1	          0x4889c7	                            mov rdi, rax	      4992	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	IF_18	CALL_20
0x400a2f4	      0xe800000000	                          call 0x400a2f9	      4992	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	IF_18	CALL_20
0x400a2f9	            0x85c0	                           test eax, eax	      4992	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	IF_18	CALL_20
0x400a2fb	            0x750e	                           jne 0x400a30b	      4992	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	IF_18	CALL_20
0x400a2fd	    0x488b05000000	            mov rax, qword [0x0400a304] 	      4993	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	IF_18
0x400a304	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      4993	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	IF_18
0x400a30b	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      4905	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x400a312	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      4905	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x400a319	    0x4883bd70ffff	               cmp qword [rbp - 0x90], 0	      4905	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x400a321	     0xf8535fcffff	                           jne 0x4009f5c	      4905	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x400a327	    0x83bd64ffffff	               cmp dword [rbp - 0x9c], 0	      5000	buffer.c	FUNCTION_71	FOR_1	IF_19
0x400a32e	            0x743d	                            je 0x400a36d	      5000	buffer.c	FUNCTION_71	FOR_1	IF_19
0x400a330	      0x48837d8000	               cmp qword [rbp - 0x80], 0	      5000	buffer.c	FUNCTION_71	FOR_1	IF_19
0x400a335	            0x7436	                            je 0x400a36d	      5000	buffer.c	FUNCTION_71	FOR_1	IF_19
0x400a337	        0x488b4580	             mov rax, qword [rbp - 0x80]	      5004	buffer.c	FUNCTION_71	FOR_1	IF_20	CALL_21
0x400a33b	          0x4889c7	                            mov rdi, rax	      5004	buffer.c	FUNCTION_71	FOR_1	IF_20	CALL_21
0x400a33e	      0xe800000000	                          call 0x400a343	      5004	buffer.c	FUNCTION_71	FOR_1	IF_20	CALL_21
0x400a343	            0x85c0	                           test eax, eax	      5004	buffer.c	FUNCTION_71	FOR_1	IF_20	CALL_21
0x400a345	            0x750b	                           jne 0x400a352	      5004	buffer.c	FUNCTION_71	FOR_1	IF_20	CALL_21
0x400a347	    0x488b05000000	            mov rax, qword [0x0400a34e] 	      5005	buffer.c	FUNCTION_71	FOR_1	IF_20
0x400a34e	        0x48894580	             mov qword [rbp - 0x80], rax	      5005	buffer.c	FUNCTION_71	FOR_1	IF_20
0x400a352	        0x488b4580	             mov rax, qword [rbp - 0x80]	      5007	buffer.c	FUNCTION_71	FOR_1	CALL_22
0x400a356	      0xba01000000	                              mov edx, 1	      5007	buffer.c	FUNCTION_71	FOR_1	CALL_22
0x400a35b	      0xbe01000000	                              mov esi, 1	      5007	buffer.c	FUNCTION_71	FOR_1	CALL_22
0x400a360	          0x4889c7	                            mov rdi, rax	      5007	buffer.c	FUNCTION_71	FOR_1	CALL_22
0x400a363	      0xe800000000	                          call 0x400a368	      5007	buffer.c	FUNCTION_71	FOR_1	CALL_22
0x400a368	      0xe9cefbffff	                           jmp 0x4009f3b	      5008	buffer.c	FUNCTION_71	FOR_1
0x400a36d	    0x8b854cffffff	             mov eax, dword [rbp - 0xb4]	      5014	buffer.c	FUNCTION_71	IF_21
0x400a373	    0x3b8568ffffff	             cmp eax, dword [rbp - 0x98]	      5014	buffer.c	FUNCTION_71	IF_21
0x400a379	            0x7f09	                            jg 0x400a384	      5014	buffer.c	FUNCTION_71	IF_21
0x400a37b	    0x83bd4cffffff	               cmp dword [rbp - 0xb4], 0	      5014	buffer.c	FUNCTION_71	IF_21
0x400a382	            0x7f0c	                            jg 0x400a390	      5014	buffer.c	FUNCTION_71	IF_21
0x400a384	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      5015	buffer.c	FUNCTION_71	IF_21
0x400a38a	    0x89854cffffff	             mov dword [rbp - 0xb4], eax	      5015	buffer.c	FUNCTION_71	IF_21
0x400a390	    0x8b0500000000	            mov eax, dword [0x0400a396] 	      5018	buffer.c	FUNCTION_71
0x400a396	          0x83c001	                              add eax, 1	      5018	buffer.c	FUNCTION_71
0x400a399	    0x890500000000	            mov dword [0x0400a39f], eax 	      5018	buffer.c	FUNCTION_71
0x400a39f	    0x8b0500000000	            mov eax, dword [0x0400a3a5] 	      5019	buffer.c	FUNCTION_71
0x400a3a5	          0x83c001	                              add eax, 1	      5019	buffer.c	FUNCTION_71
0x400a3a8	    0x890500000000	            mov dword [0x0400a3ae], eax 	      5019	buffer.c	FUNCTION_71
0x400a3ae	    0x488b05000000	            mov rax, qword [0x0400a3b5] 	      5020	buffer.c	FUNCTION_71
0x400a3b5	        0x488945c0	             mov qword [rbp - 0x40], rax	      5020	buffer.c	FUNCTION_71
0x400a3b9	    0x488b05000000	            mov rax, qword [0x0400a3c0] 	      5021	buffer.c	FUNCTION_71
0x400a3c0	        0x488945c8	             mov qword [rbp - 0x38], rax	      5021	buffer.c	FUNCTION_71
0x400a3c4	    0x488b05000000	            mov rax, qword [0x0400a3cb] 	      5022	buffer.c	FUNCTION_71	CALL_23
0x400a3cb	      0xbe00000000	                              mov esi, 0	      5022	buffer.c	FUNCTION_71	CALL_23
0x400a3d0	          0x4889c7	                            mov rdi, rax	      5022	buffer.c	FUNCTION_71	CALL_23
0x400a3d3	      0xe800000000	                          call 0x400a3d8	      5022	buffer.c	FUNCTION_71	CALL_23
0x400a3d8	    0x83bd44ffffff	               cmp dword [rbp - 0xbc], 0	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0x400a3df	            0x745e	                            je 0x400a43f	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0x400a3e1	    0x488b05000000	            mov rax, qword [0x0400a3e8] 	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0x400a3e8	          0x488b00	                    mov rax, qword [rax]	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0x400a3eb	        0x4883f801	                              cmp rax, 1	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0x400a3ef	            0x754e	                           jne 0x400a43f	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0x400a3f1	      0xbf01000000	                              mov edi, 1	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0x400a3f6	      0xe800000000	                          call 0x400a3fb	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0x400a3fb	           0xfb600	                   movzx eax, byte [rax]	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0x400a3fe	            0x84c0	                             test al, al	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0x400a400	            0x753d	                           jne 0x400a43f	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0x400a402	    0x488b05000000	            mov rax, qword [0x0400a409] 	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0x400a409	          0x8b4078	            mov eax, dword [rax + 0x78] 	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0x400a40c	          0x83f801	                              cmp eax, 1	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0x400a40f	            0x752e	                           jne 0x400a43f	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0x400a411	    0x488b05000000	            mov rax, qword [0x0400a418] 	      5026	buffer.c	FUNCTION_71	IF_22
0x400a418	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      5026	buffer.c	FUNCTION_71	IF_22
0x400a41f	          0x4885c0	                           test rax, rax	      5026	buffer.c	FUNCTION_71	IF_22
0x400a422	            0x751b	                           jne 0x400a43f	      5026	buffer.c	FUNCTION_71	IF_22
0x400a424	    0x488b05000000	            mov rax, qword [0x0400a42b] 	      5026	buffer.c	FUNCTION_71	IF_22
0x400a42b	    0x8b80c8000000	            mov eax, dword [rax + 0xc8] 	      5026	buffer.c	FUNCTION_71	IF_22
0x400a431	            0x85c0	                           test eax, eax	      5026	buffer.c	FUNCTION_71	IF_22
0x400a433	            0x750a	                           jne 0x400a43f	      5026	buffer.c	FUNCTION_71	IF_22
0x400a435	    0xc78558ffffff	               mov dword [rbp - 0xa8], 1	      5027	buffer.c	FUNCTION_71	IF_22
0x400a43f	    0xc78554ffffff	               mov dword [rbp - 0xac], 0	      5029	buffer.c	FUNCTION_71	FOR_4
0x400a449	      0xe965020000	                           jmp 0x400a6b3	      5029	buffer.c	FUNCTION_71	FOR_4
0x400a44e	    0x48817da00000	               cmp qword [rbp - 0x60], 0	      5031	buffer.c	FUNCTION_71	FOR_4	IF_23
0x400a456	            0x751b	                           jne 0x400a473	      5031	buffer.c	FUNCTION_71	FOR_4	IF_23
0x400a458	    0x8b0500000000	            mov eax, dword [0x0400a45e] 	      5031	buffer.c	FUNCTION_71	FOR_4	IF_23
0x400a45e	          0x83e801	                              sub eax, 1	      5031	buffer.c	FUNCTION_71	FOR_4	IF_23
0x400a461	    0x3b8554ffffff	             cmp eax, dword [rbp - 0xac]	      5031	buffer.c	FUNCTION_71	FOR_4	IF_23
0x400a467	            0x750a	                           jne 0x400a473	      5031	buffer.c	FUNCTION_71	FOR_4	IF_23
0x400a469	    0xc70500000000	               mov dword [0x0400a473], 1	      5032	buffer.c	FUNCTION_71	FOR_4	IF_23
0x400a473	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      5033	buffer.c	FUNCTION_71	FOR_4	IF_24
0x400a479	          0x4863d0	                         movsxd rdx, eax	      5033	buffer.c	FUNCTION_71	FOR_4	IF_24
0x400a47c	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5033	buffer.c	FUNCTION_71	FOR_4	IF_24
0x400a480	          0x4801d0	                            add rax, rdx	      5033	buffer.c	FUNCTION_71	FOR_4	IF_24
0x400a483	           0xfb600	                   movzx eax, byte [rax]	      5033	buffer.c	FUNCTION_71	FOR_4	IF_24
0x400a486	            0x84c0	                             test al, al	      5033	buffer.c	FUNCTION_71	FOR_4	IF_24
0x400a488	     0xf84a1000000	                            je 0x400a52f	      5033	buffer.c	FUNCTION_71	FOR_4	IF_24
0x400a48e	    0x488b05000000	            mov rax, qword [0x0400a495] 	      5036	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25
0x400a495	    0x8b8088010000	           mov eax, dword [rax + 0x188] 	      5036	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25
0x400a49b	    0x3b8554ffffff	             cmp eax, dword [rbp - 0xac]	      5036	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25
0x400a4a1	     0xf84d4010000	                            je 0x400a67b	      5036	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25
0x400a4a7	    0x488b05000000	            mov rax, qword [0x0400a4ae] 	      5038	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5
0x400a4ae	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      5038	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5
0x400a4b5	            0xeb69	                           jmp 0x400a520	      5038	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5
0x400a4b7	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5040	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26
0x400a4be	    0x8b8088010000	           mov eax, dword [rax + 0x188] 	      5040	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26
0x400a4c4	    0x3b8554ffffff	             cmp eax, dword [rbp - 0xac]	      5040	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26
0x400a4ca	            0x7542	                           jne 0x400a50e	      5040	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26
0x400a4cc	    0x83bd44ffffff	               cmp dword [rbp - 0xbc], 0	      5042	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26	IF_27
0x400a4d3	            0x741b	                            je 0x400a4f0	      5042	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26	IF_27
0x400a4d5	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5044	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26	IF_27
0x400a4dc	        0x48894588	             mov qword [rbp - 0x78], rax	      5044	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26	IF_27
0x400a4e0	    0x488b05000000	            mov rax, qword [0x0400a4e7] 	      5045	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26	IF_27
0x400a4e7	        0x48894590	             mov qword [rbp - 0x70], rax	      5045	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26	IF_27
0x400a4eb	      0xe98b010000	                           jmp 0x400a67b	      5049	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26
0x400a4f0	    0x488b15000000	            mov rdx, qword [0x0400a4f7] 	      5048	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26	CALL_25
0x400a4f7	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5048	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26	CALL_25
0x400a4fe	          0x4889d6	                            mov rsi, rdx	      5048	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26	CALL_25
0x400a501	          0x4889c7	                            mov rdi, rax	      5048	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26	CALL_25
0x400a504	      0xe800000000	                          call 0x400a509	      5048	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26	CALL_25
0x400a509	      0xe96d010000	                           jmp 0x400a67b	      5049	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26
0x400a50e	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5038	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5
0x400a515	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5038	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5
0x400a519	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      5038	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5
0x400a520	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	      5038	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5
0x400a528	            0x758d	                           jne 0x400a4b7	      5038	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5
0x400a52a	      0xe94c010000	                           jmp 0x400a67b	      5038	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5
0x400a52f	    0x83bd5cffffff	               cmp dword [rbp - 0xa4], 1	      5054	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28
0x400a536	     0xf853f010000	                           jne 0x400a67b	      5054	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28
0x400a53c	    0x83bd58ffffff	               cmp dword [rbp - 0xa8], 0	      5056	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29
0x400a543	            0x7545	                           jne 0x400a58a	      5056	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29
0x400a545	    0x8b0500000000	            mov eax, dword [0x0400a54b] 	      5058	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29
0x400a54b	    0x89856cffffff	             mov dword [rbp - 0x94], eax	      5058	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29
0x400a551	    0xc70500000000	               mov dword [0x0400a55b], 1	      5059	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29
0x400a55b	      0xbe21000000	                           mov esi, 0x21	      5060	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29	CALL_26
0x400a560	      0xbf00000000	                              mov edi, 0	      5060	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29	CALL_26
0x400a565	      0xe800000000	                          call 0x400a56a	      5060	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29	CALL_26
0x400a56a	    0x89855cffffff	             mov dword [rbp - 0xa4], eax	      5060	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29	CALL_26
0x400a570	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      5061	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29
0x400a576	    0x890500000000	            mov dword [0x0400a57c], eax 	      5061	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29
0x400a57c	    0x83bd5cffffff	               cmp dword [rbp - 0xa4], 0	      5062	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29	IF_30
0x400a583	            0x7514	                           jne 0x400a599	      5062	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29	IF_30
0x400a585	      0xe922010000	                           jmp 0x400a6ac	      5063	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29	IF_30
0x400a58a	    0x8b0500000000	            mov eax, dword [0x0400a590] 	      5066	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	ELSE_6
0x400a590	          0x83e801	                              sub eax, 1	      5066	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	ELSE_6
0x400a593	    0x890500000000	            mov dword [0x0400a599], eax 	      5066	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	ELSE_6
0x400a599	    0x488b05000000	            mov rax, qword [0x0400a5a0] 	      5071	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	ELSE_6
0x400a5a0	    0x8b9554ffffff	             mov edx, dword [rbp - 0xac]	      5071	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	ELSE_6
0x400a5a6	    0x899088010000	            mov dword [rax + 0x188], edx	      5071	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	ELSE_6
0x400a5ac	    0x83bd54ffffff	               cmp dword [rbp - 0xac], 0	      5072	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	ELSE_6	IF_31
0x400a5b3	            0x7516	                           jne 0x400a5cb	      5072	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	ELSE_6	IF_31
0x400a5b5	    0x488b05000000	            mov rax, qword [0x0400a5bc] 	      5074	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	ELSE_6	IF_31
0x400a5bc	        0x48894588	             mov qword [rbp - 0x78], rax	      5074	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	ELSE_6	IF_31
0x400a5c0	    0x488b05000000	            mov rax, qword [0x0400a5c7] 	      5075	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	ELSE_6	IF_31
0x400a5c7	        0x48894590	             mov qword [rbp - 0x70], rax	      5075	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	ELSE_6	IF_31
0x400a5cb	    0x488b1d000000	            mov rbx, qword [0x0400a5d2] 	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0x400a5d2	    0x488b05000000	            mov rax, qword [0x0400a5d9] 	      5079	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_30
0x400a5d9	        0x488b4008	                mov rax, qword [rax + 8]	      5079	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_30
0x400a5dd	          0x4889c7	                            mov rdi, rax	      5079	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_30
0x400a5e0	      0xe800000000	                          call 0x400a5e5	      5079	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_30
0x400a5e5	            0x85c0	                           test eax, eax	      5080	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_31
0x400a5e7	            0x7517	                           jne 0x400a600	      5080	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_31
0x400a5e9	    0x488b05000000	            mov rax, qword [0x0400a5f0] 	      5080	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_31
0x400a5f0	        0x488b4008	                mov rax, qword [rax + 8]	      5080	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_31
0x400a5f4	          0x4889c7	                            mov rdi, rax	      5080	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_31
0x400a5f7	      0xe800000000	                          call 0x400a5fc	      5080	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_31
0x400a5fc	            0x85c0	                           test eax, eax	      5080	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_31
0x400a5fe	            0x7407	                            je 0x400a607	      5080	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_31
0x400a600	      0xb801000000	                              mov eax, 1	      5080	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_31
0x400a605	            0xeb05	                           jmp 0x400a60c	      5080	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_31
0x400a607	      0xb800000000	                              mov eax, 0	      5080	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_31
0x400a60c	        0x448d6004	                     lea r12d, [rax + 4]	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0x400a610	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0x400a614	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0x400a618	    0x8b9554ffffff	             mov edx, dword [rbp - 0xac]	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0x400a61e	          0x4863d2	                         movsxd rdx, edx	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0x400a621	        0x48c1e204	                              shl rdx, 4	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0x400a625	          0x4801d0	                            add rax, rdx	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0x400a628	          0x4889c7	                            mov rdi, rax	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0x400a62b	      0xe800000000	                          call 0x400a630	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0x400a630	        0x4883ec08	                              sub rsp, 8	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0x400a634	              0x53	                                push rbx	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0x400a635	          0x4589e1	                           mov r9d, r12d	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0x400a638	    0x41b801000000	                              mov r8d, 1	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0x400a63e	      0xb900000000	                              mov ecx, 0	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0x400a643	      0xba00000000	                              mov edx, 0	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0x400a648	          0x4889c6	                            mov rsi, rax	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0x400a64b	      0xbf00000000	                              mov edi, 0	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0x400a650	      0xe800000000	                          call 0x400a655	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0x400a655	        0x4883c410	                           add rsp, 0x10	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0x400a659	    0x83bd58ffffff	               cmp dword [rbp - 0xa8], 0	      5082	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_32
0x400a660	            0x740f	                            je 0x400a671	      5082	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_32
0x400a662	    0x8b0500000000	            mov eax, dword [0x0400a668] 	      5083	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_32
0x400a668	          0x83c001	                              add eax, 1	      5083	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_32
0x400a66b	    0x890500000000	            mov dword [0x0400a671], eax 	      5083	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_32
0x400a671	    0xc78558ffffff	               mov dword [rbp - 0xa8], 0	      5084	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28
0x400a67b	      0xe800000000	                          call 0x400a680	      5086	buffer.c	FUNCTION_71	FOR_4	CALL_32
0x400a680	    0x83bd64ffffff	               cmp dword [rbp - 0x9c], 0	      5089	buffer.c	FUNCTION_71	FOR_4	IF_33	CALL_33
0x400a687	            0x7e23	                           jle 0x400a6ac	      5089	buffer.c	FUNCTION_71	FOR_4	IF_33	CALL_33
0x400a689	      0xbf00000000	                              mov edi, 0	      5089	buffer.c	FUNCTION_71	FOR_4	IF_33	CALL_33
0x400a68e	      0xe800000000	                          call 0x400a693	      5089	buffer.c	FUNCTION_71	FOR_4	IF_33	CALL_33
0x400a693	          0x4863d0	                         movsxd rdx, eax	      5089	buffer.c	FUNCTION_71	FOR_4	IF_33	CALL_33
0x400a696	    0x488b05000000	            mov rax, qword [0x0400a69d] 	      5089	buffer.c	FUNCTION_71	FOR_4	IF_33	CALL_33
0x400a69d	          0x4839c2	                            cmp rdx, rax	      5089	buffer.c	FUNCTION_71	FOR_4	IF_33	CALL_33
0x400a6a0	            0x7f0a	                            jg 0x400a6ac	      5089	buffer.c	FUNCTION_71	FOR_4	IF_33	CALL_33
0x400a6a2	    0xc70500000000	         mov dword [0x0400a6ac], 0x270f 	      5090	buffer.c	FUNCTION_71	FOR_4	IF_33
0x400a6ac	    0x838554ffffff	               add dword [rbp - 0xac], 1	      5029	buffer.c	FUNCTION_71	FOR_4
0x400a6b3	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      5029	buffer.c	FUNCTION_71	FOR_4
0x400a6b9	    0x3b854cffffff	             cmp eax, dword [rbp - 0xb4]	      5029	buffer.c	FUNCTION_71	FOR_4
0x400a6bf	            0x7d1c	                           jge 0x400a6dd	      5029	buffer.c	FUNCTION_71	FOR_4
0x400a6c1	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      5029	buffer.c	FUNCTION_71	FOR_4
0x400a6c7	    0x3b8568ffffff	             cmp eax, dword [rbp - 0x98]	      5029	buffer.c	FUNCTION_71	FOR_4
0x400a6cd	            0x7d0e	                           jge 0x400a6dd	      5029	buffer.c	FUNCTION_71	FOR_4
0x400a6cf	    0x8b0500000000	            mov eax, dword [0x0400a6d5] 	      5029	buffer.c	FUNCTION_71	FOR_4
0x400a6d5	            0x85c0	                           test eax, eax	      5029	buffer.c	FUNCTION_71	FOR_4
0x400a6d7	     0xf8471fdffff	                            je 0x400a44e	      5029	buffer.c	FUNCTION_71	FOR_4
0x400a6dd	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      5094	buffer.c	FUNCTION_71	CALL_34
0x400a6e1	          0x4889c7	                            mov rdi, rax	      5094	buffer.c	FUNCTION_71	CALL_34
0x400a6e4	      0xe800000000	                          call 0x400a6e9	      5094	buffer.c	FUNCTION_71	CALL_34
0x400a6e9	    0x8b0500000000	            mov eax, dword [0x0400a6ef] 	      5096	buffer.c	FUNCTION_71
0x400a6ef	          0x83e801	                              sub eax, 1	      5096	buffer.c	FUNCTION_71
0x400a6f2	    0x890500000000	            mov dword [0x0400a6f8], eax 	      5096	buffer.c	FUNCTION_71
0x400a6f8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5099	buffer.c	FUNCTION_71	IF_34
0x400a6fc	        0x483b4590	             cmp rax, qword [rbp - 0x70]	      5099	buffer.c	FUNCTION_71	IF_34
0x400a700	            0x7447	                            je 0x400a749	      5099	buffer.c	FUNCTION_71	IF_34
0x400a702	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5101	buffer.c	FUNCTION_71	IF_34	IF_35	CALL_35
0x400a706	          0x4889c7	                            mov rdi, rax	      5101	buffer.c	FUNCTION_71	IF_34	IF_35	CALL_35
0x400a709	      0xe800000000	                          call 0x400a70e	      5101	buffer.c	FUNCTION_71	IF_34	IF_35	CALL_35
0x400a70e	            0x85c0	                           test eax, eax	      5101	buffer.c	FUNCTION_71	IF_34	IF_35	CALL_35
0x400a710	            0x7416	                            je 0x400a728	      5101	buffer.c	FUNCTION_71	IF_34	IF_35	CALL_35
0x400a712	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5102	buffer.c	FUNCTION_71	IF_34	CALL_36
0x400a716	      0xba01000000	                              mov edx, 1	      5102	buffer.c	FUNCTION_71	IF_34	CALL_36
0x400a71b	      0xbe01000000	                              mov esi, 1	      5102	buffer.c	FUNCTION_71	IF_34	CALL_36
0x400a720	          0x4889c7	                            mov rdi, rax	      5102	buffer.c	FUNCTION_71	IF_34	CALL_36
0x400a723	      0xe800000000	                          call 0x400a728	      5102	buffer.c	FUNCTION_71	IF_34	CALL_36
0x400a728	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5103	buffer.c	FUNCTION_71	IF_34	IF_36	CALL_37
0x400a72c	          0x4889c7	                            mov rdi, rax	      5103	buffer.c	FUNCTION_71	IF_34	IF_36	CALL_37
0x400a72f	      0xe800000000	                          call 0x400a734	      5103	buffer.c	FUNCTION_71	IF_34	IF_36	CALL_37
0x400a734	            0x85c0	                           test eax, eax	      5103	buffer.c	FUNCTION_71	IF_34	IF_36	CALL_37
0x400a736	            0x7411	                            je 0x400a749	      5103	buffer.c	FUNCTION_71	IF_34	IF_36	CALL_37
0x400a738	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5104	buffer.c	FUNCTION_71	IF_34	CALL_38
0x400a73c	      0xbe00000000	                              mov esi, 0	      5104	buffer.c	FUNCTION_71	IF_34	CALL_38
0x400a741	          0x4889c7	                            mov rdi, rax	      5104	buffer.c	FUNCTION_71	IF_34	CALL_38
0x400a744	      0xe800000000	                          call 0x400a749	      5104	buffer.c	FUNCTION_71	IF_34	CALL_38
0x400a749	        0x488b4590	             mov rax, qword [rbp - 0x70]	      5107	buffer.c	FUNCTION_71	IF_37	CALL_39
0x400a74d	          0x4889c7	                            mov rdi, rax	      5107	buffer.c	FUNCTION_71	IF_37	CALL_39
0x400a750	      0xe800000000	                          call 0x400a755	      5107	buffer.c	FUNCTION_71	IF_37	CALL_39
0x400a755	            0x85c0	                           test eax, eax	      5107	buffer.c	FUNCTION_71	IF_37	CALL_39
0x400a757	            0x7416	                            je 0x400a76f	      5107	buffer.c	FUNCTION_71	IF_37	CALL_39
0x400a759	        0x488b4590	             mov rax, qword [rbp - 0x70]	      5108	buffer.c	FUNCTION_71	CALL_40
0x400a75d	      0xba01000000	                              mov edx, 1	      5108	buffer.c	FUNCTION_71	CALL_40
0x400a762	      0xbe01000000	                              mov esi, 1	      5108	buffer.c	FUNCTION_71	CALL_40
0x400a767	          0x4889c7	                            mov rdi, rax	      5108	buffer.c	FUNCTION_71	CALL_40
0x400a76a	      0xe800000000	                          call 0x400a76f	      5108	buffer.c	FUNCTION_71	CALL_40
0x400a76f	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5109	buffer.c	FUNCTION_71	IF_38	CALL_41
0x400a773	          0x4889c7	                            mov rdi, rax	      5109	buffer.c	FUNCTION_71	IF_38	CALL_41
0x400a776	      0xe800000000	                          call 0x400a77b	      5109	buffer.c	FUNCTION_71	IF_38	CALL_41
0x400a77b	            0x85c0	                           test eax, eax	      5109	buffer.c	FUNCTION_71	IF_38	CALL_41
0x400a77d	            0x7411	                            je 0x400a790	      5109	buffer.c	FUNCTION_71	IF_38	CALL_41
0x400a77f	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5110	buffer.c	FUNCTION_71	CALL_42
0x400a783	      0xbe00000000	                              mov esi, 0	      5110	buffer.c	FUNCTION_71	CALL_42
0x400a788	          0x4889c7	                            mov rdi, rax	      5110	buffer.c	FUNCTION_71	CALL_42
0x400a78b	      0xe800000000	                          call 0x400a790	      5110	buffer.c	FUNCTION_71	CALL_42
0x400a790	    0x8b0500000000	            mov eax, dword [0x0400a796] 	      5112	buffer.c	FUNCTION_71
0x400a796	          0x83e801	                              sub eax, 1	      5112	buffer.c	FUNCTION_71
0x400a799	    0x890500000000	            mov dword [0x0400a79f], eax 	      5112	buffer.c	FUNCTION_71
0x400a79f	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5113	buffer.c	FUNCTION_71	CALL_43
0x400a7a3	          0x4889c7	                            mov rdi, rax	      5113	buffer.c	FUNCTION_71	CALL_43
0x400a7a6	      0xe800000000	                          call 0x400a7ab	      5113	buffer.c	FUNCTION_71	CALL_43
0x400a7ab	            0xeb04	                           jmp 0x400a7b1	      5113	buffer.c	FUNCTION_71	CALL_43
0x400a7ad	              0x90	                                     nop	      4871	buffer.c	FUNCTION_71	IF_1
0x400a7ae	            0xeb01	                           jmp 0x400a7b1	      4871	buffer.c	FUNCTION_71	IF_1
0x400a7b0	              0x90	                                     nop	      4878	buffer.c	FUNCTION_71	IF_2
0x400a7b1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5114	buffer.c	FUNCTION_71
0x400a7b5	    0x644833042528	                xor rax, qword fs:[0x28]	      5114	buffer.c	FUNCTION_71
0x400a7be	            0x7405	                            je 0x400a7c5	      5114	buffer.c	FUNCTION_71
0x400a7c0	      0xe800000000	                          call 0x400a7c5	      5114	buffer.c	FUNCTION_71
0x400a7c5	        0x488d65f0	                   lea rsp, [rbp - 0x10]	      5114	buffer.c	FUNCTION_71
0x400a7c9	              0x5b	                                 pop rbx	      5114	buffer.c	FUNCTION_71
0x400a7ca	            0x415c	                                 pop r12	      5114	buffer.c	FUNCTION_71
0x400a7cc	              0x5d	                                 pop rbp	      5114	buffer.c	FUNCTION_71
0x400a7cd	              0xc3	                                     ret	      5114	buffer.c	FUNCTION_71
close_buffer	CALL,37:functions,0:SWITCH,0:FOR,0:ELSE,7:DO,0:WHILE,0:IF,34	425
0x400099a	              0x55	                                push rbp	       445	buffer.c	FUNCTION_8
0x400099b	          0x4889e5	                            mov rbp, rsp	       445	buffer.c	FUNCTION_8
0x400099e	        0x4883ec70	                           sub rsp, 0x70	       445	buffer.c	FUNCTION_8
0x40009a2	        0x48897da8	             mov qword [rbp - 0x58], rdi	       445	buffer.c	FUNCTION_8
0x40009a6	        0x488975a0	             mov qword [rbp - 0x60], rsi	       445	buffer.c	FUNCTION_8
0x40009aa	          0x89559c	             mov dword [rbp - 0x64], edx	       445	buffer.c	FUNCTION_8
0x40009ad	          0x894d98	             mov dword [rbp - 0x68], ecx	       445	buffer.c	FUNCTION_8
0x40009b0	    0x64488b042528	                mov rax, qword fs:[0x28]	       445	buffer.c	FUNCTION_8
0x40009b9	        0x488945f8	                mov qword [rbp - 8], rax	       445	buffer.c	FUNCTION_8
0x40009bd	            0x31c0	                            xor eax, eax	       445	buffer.c	FUNCTION_8
0x40009bf	    0x488b05000000	            mov rax, qword [0x040009c6] 	       449	buffer.c	FUNCTION_8
0x40009c6	          0x4885c0	                           test rax, rax	       449	buffer.c	FUNCTION_8
0x40009c9	            0x7418	                            je 0x40009e3	       449	buffer.c	FUNCTION_8
0x40009cb	    0x488b05000000	            mov rax, qword [0x040009d2] 	       449	buffer.c	FUNCTION_8
0x40009d2	        0x488b4008	                mov rax, qword [rax + 8]	       449	buffer.c	FUNCTION_8
0x40009d6	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	       449	buffer.c	FUNCTION_8
0x40009da	            0x7507	                           jne 0x40009e3	       449	buffer.c	FUNCTION_8
0x40009dc	      0xb801000000	                              mov eax, 1	       449	buffer.c	FUNCTION_8
0x40009e1	            0xeb05	                           jmp 0x40009e8	       449	buffer.c	FUNCTION_8
0x40009e3	      0xb800000000	                              mov eax, 0	       449	buffer.c	FUNCTION_8
0x40009e8	          0x8945c4	             mov dword [rbp - 0x3c], eax	       449	buffer.c	FUNCTION_8
0x40009eb	    0x488b05000000	            mov rax, qword [0x040009f2] 	       450	buffer.c	FUNCTION_8
0x40009f2	        0x488945d0	             mov qword [rbp - 0x30], rax	       450	buffer.c	FUNCTION_8
0x40009f6	    0x488b05000000	            mov rax, qword [0x040009fd] 	       451	buffer.c	FUNCTION_8
0x40009fd	        0x488945d8	             mov qword [rbp - 0x28], rax	       451	buffer.c	FUNCTION_8
0x4000a01	        0x837d9c00	               cmp dword [rbp - 0x64], 0	       452	buffer.c	FUNCTION_8
0x4000a05	           0xf95c0	                                setne al	       452	buffer.c	FUNCTION_8
0x4000a08	           0xfb6c0	                           movzx eax, al	       452	buffer.c	FUNCTION_8
0x4000a0b	          0x8945b8	             mov dword [rbp - 0x48], eax	       452	buffer.c	FUNCTION_8
0x4000a0e	        0x837d9c03	               cmp dword [rbp - 0x64], 3	       453	buffer.c	FUNCTION_8
0x4000a12	            0x7406	                            je 0x4000a1a	       453	buffer.c	FUNCTION_8
0x4000a14	        0x837d9c04	               cmp dword [rbp - 0x64], 4	       453	buffer.c	FUNCTION_8
0x4000a18	            0x7507	                           jne 0x4000a21	       453	buffer.c	FUNCTION_8
0x4000a1a	      0xb801000000	                              mov eax, 1	       453	buffer.c	FUNCTION_8
0x4000a1f	            0xeb05	                           jmp 0x4000a26	       453	buffer.c	FUNCTION_8
0x4000a21	      0xb800000000	                              mov eax, 0	       453	buffer.c	FUNCTION_8
0x4000a26	          0x8945bc	             mov dword [rbp - 0x44], eax	       453	buffer.c	FUNCTION_8
0x4000a29	        0x837d9c04	               cmp dword [rbp - 0x64], 4	       454	buffer.c	FUNCTION_8
0x4000a2d	           0xf94c0	                                 sete al	       454	buffer.c	FUNCTION_8
0x4000a30	           0xfb6c0	                           movzx eax, al	       454	buffer.c	FUNCTION_8
0x4000a33	          0x8945c0	             mov dword [rbp - 0x40], eax	       454	buffer.c	FUNCTION_8
0x4000a36	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       461	buffer.c	FUNCTION_8	IF_1
0x4000a3a	    0x488b80101400	          mov rax, qword [rax + 0x1410] 	       461	buffer.c	FUNCTION_8	IF_1
0x4000a41	           0xfb600	                   movzx eax, byte [rax]	       461	buffer.c	FUNCTION_8	IF_1
0x4000a44	            0x3c64	                            cmp al, 0x64	       461	buffer.c	FUNCTION_8	IF_1
0x4000a46	            0x7510	                           jne 0x4000a58	       461	buffer.c	FUNCTION_8	IF_1
0x4000a48	    0xc745bc010000	               mov dword [rbp - 0x44], 1	       463	buffer.c	FUNCTION_8	IF_1
0x4000a4f	    0xc745b8010000	               mov dword [rbp - 0x48], 1	       464	buffer.c	FUNCTION_8	IF_1
0x4000a56	            0xeb42	                           jmp 0x4000a9a	       464	buffer.c	FUNCTION_8	IF_1
0x4000a58	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       466	buffer.c	FUNCTION_8	ELSE_1	IF_2
0x4000a5c	    0x488b80101400	          mov rax, qword [rax + 0x1410] 	       466	buffer.c	FUNCTION_8	ELSE_1	IF_2
0x4000a63	           0xfb600	                   movzx eax, byte [rax]	       466	buffer.c	FUNCTION_8	ELSE_1	IF_2
0x4000a66	            0x3c77	                            cmp al, 0x77	       466	buffer.c	FUNCTION_8	ELSE_1	IF_2
0x4000a68	            0x7517	                           jne 0x4000a81	       466	buffer.c	FUNCTION_8	ELSE_1	IF_2
0x4000a6a	    0xc745bc010000	               mov dword [rbp - 0x44], 1	       468	buffer.c	FUNCTION_8	ELSE_1	IF_2
0x4000a71	    0xc745b8010000	               mov dword [rbp - 0x48], 1	       469	buffer.c	FUNCTION_8	ELSE_1	IF_2
0x4000a78	    0xc745c0010000	               mov dword [rbp - 0x40], 1	       470	buffer.c	FUNCTION_8	ELSE_1	IF_2
0x4000a7f	            0xeb19	                           jmp 0x4000a9a	       470	buffer.c	FUNCTION_8	ELSE_1	IF_2
0x4000a81	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       472	buffer.c	FUNCTION_8	ELSE_2	IF_3
0x4000a85	    0x488b80101400	          mov rax, qword [rax + 0x1410] 	       472	buffer.c	FUNCTION_8	ELSE_2	IF_3
0x4000a8c	           0xfb600	                   movzx eax, byte [rax]	       472	buffer.c	FUNCTION_8	ELSE_2	IF_3
0x4000a8f	            0x3c75	                            cmp al, 0x75	       472	buffer.c	FUNCTION_8	ELSE_2	IF_3
0x4000a91	            0x7507	                           jne 0x4000a9a	       472	buffer.c	FUNCTION_8	ELSE_2	IF_3
0x4000a93	    0xc745b8010000	               mov dword [rbp - 0x48], 1	       473	buffer.c	FUNCTION_8	ELSE_2	IF_3
0x4000a9a	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       476	buffer.c	FUNCTION_8	IF_4	CALL_1
0x4000a9e	          0x4889c7	                            mov rdi, rax	       476	buffer.c	FUNCTION_8	IF_4	CALL_1
0x4000aa1	      0xe800000000	                          call 0x4000aa6	       476	buffer.c	FUNCTION_8	IF_4	CALL_1
0x4000aa6	            0x85c0	                           test eax, eax	       476	buffer.c	FUNCTION_8	IF_4	CALL_1
0x4000aa8	     0xf8496000000	                            je 0x4000b44	       476	buffer.c	FUNCTION_8	IF_4	CALL_1
0x4000aae	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       476	buffer.c	FUNCTION_8	IF_4	CALL_1
0x4000ab2	          0x8b4078	            mov eax, dword [rax + 0x78] 	       476	buffer.c	FUNCTION_8	IF_4	CALL_1
0x4000ab5	          0x83f801	                              cmp eax, 1	       476	buffer.c	FUNCTION_8	IF_4	CALL_1
0x4000ab8	            0x740a	                            je 0x4000ac4	       476	buffer.c	FUNCTION_8	IF_4	CALL_1
0x4000aba	        0x837dbc00	               cmp dword [rbp - 0x44], 0	       476	buffer.c	FUNCTION_8	IF_4	CALL_1
0x4000abe	     0xf8480000000	                            je 0x4000b44	       476	buffer.c	FUNCTION_8	IF_4	CALL_1
0x4000ac4	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       478	buffer.c	FUNCTION_8	IF_4	IF_5	CALL_2
0x4000ac8	    0x488b80481c00	          mov rax, qword [rax + 0x1c48] 	       478	buffer.c	FUNCTION_8	IF_4	IF_5	CALL_2
0x4000acf	          0x4889c7	                            mov rdi, rax	       478	buffer.c	FUNCTION_8	IF_4	IF_5	CALL_2
0x4000ad2	      0xe800000000	                          call 0x4000ad7	       478	buffer.c	FUNCTION_8	IF_4	IF_5	CALL_2
0x4000ad7	            0x85c0	                           test eax, eax	       478	buffer.c	FUNCTION_8	IF_4	IF_5	CALL_2
0x4000ad9	            0x7454	                            je 0x4000b2f	       478	buffer.c	FUNCTION_8	IF_4	IF_5	CALL_2
0x4000adb	        0x837dc000	               cmp dword [rbp - 0x40], 0	       480	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6
0x4000adf	            0x7506	                           jne 0x4000ae7	       480	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6
0x4000ae1	        0x837db800	               cmp dword [rbp - 0x48], 0	       480	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6
0x4000ae5	            0x7438	                            je 0x4000b1f	       480	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6
0x4000ae7	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       482	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6	IF_7
0x4000aeb	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	       482	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6	IF_7
0x4000af1	            0x85c0	                           test eax, eax	       482	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6	IF_7
0x4000af3	            0x741c	                            je 0x4000b11	       482	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6	IF_7
0x4000af5	    0x488b05000000	            mov rax, qword [0x04000afc] 	       484	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6	IF_7	CALL_4
0x4000afc	          0x4889c7	                            mov rdi, rax	       484	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6	IF_7	CALL_4
0x4000aff	      0xe800000000	                          call 0x4000b04	       484	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6	IF_7	CALL_4
0x4000b04	          0x4889c7	                            mov rdi, rax	       484	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6	IF_7	CALL_4
0x4000b07	      0xe800000000	                          call 0x4000b0c	       484	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6	IF_7	CALL_4
0x4000b0c	      0xe9dc040000	                           jmp 0x4000fed	       485	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6	IF_7
0x4000b11	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       488	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6	CALL_5
0x4000b15	          0x4889c7	                            mov rdi, rax	       488	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6	CALL_5
0x4000b18	      0xe800000000	                          call 0x4000b1d	       488	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6	CALL_5
0x4000b1d	            0xeb25	                           jmp 0x4000b44	       488	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6	CALL_5
0x4000b1f	    0xc745bc000000	               mov dword [rbp - 0x44], 0	       493	buffer.c	FUNCTION_8	IF_4	IF_5	ELSE_3
0x4000b26	    0xc745b8000000	               mov dword [rbp - 0x48], 0	       494	buffer.c	FUNCTION_8	IF_4	IF_5	ELSE_3
0x4000b2d	            0xeb15	                           jmp 0x4000b44	       494	buffer.c	FUNCTION_8	IF_4	IF_5	ELSE_3
0x4000b2f	    0xc745bc010000	               mov dword [rbp - 0x44], 1	       500	buffer.c	FUNCTION_8	IF_4	ELSE_4
0x4000b36	    0xc745b8010000	               mov dword [rbp - 0x48], 1	       501	buffer.c	FUNCTION_8	IF_4	ELSE_4
0x4000b3d	    0xc745c0010000	               mov dword [rbp - 0x40], 1	       502	buffer.c	FUNCTION_8	IF_4	ELSE_4
0x4000b44	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       509	buffer.c	FUNCTION_8	IF_8
0x4000b48	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	       509	buffer.c	FUNCTION_8	IF_8
0x4000b4e	            0x85c0	                           test eax, eax	       509	buffer.c	FUNCTION_8	IF_8
0x4000b50	            0x7e28	                           jle 0x4000b7a	       509	buffer.c	FUNCTION_8	IF_8
0x4000b52	        0x837dbc00	               cmp dword [rbp - 0x44], 0	       509	buffer.c	FUNCTION_8	IF_8
0x4000b56	            0x7506	                           jne 0x4000b5e	       509	buffer.c	FUNCTION_8	IF_8
0x4000b58	        0x837dc000	               cmp dword [rbp - 0x40], 0	       509	buffer.c	FUNCTION_8	IF_8
0x4000b5c	            0x741c	                            je 0x4000b7a	       509	buffer.c	FUNCTION_8	IF_8
0x4000b5e	    0x488b05000000	            mov rax, qword [0x04000b65] 	       511	buffer.c	FUNCTION_8	IF_8	CALL_7
0x4000b65	          0x4889c7	                            mov rdi, rax	       511	buffer.c	FUNCTION_8	IF_8	CALL_7
0x4000b68	      0xe800000000	                          call 0x4000b6d	       511	buffer.c	FUNCTION_8	IF_8	CALL_7
0x4000b6d	          0x4889c7	                            mov rdi, rax	       511	buffer.c	FUNCTION_8	IF_8	CALL_7
0x4000b70	      0xe800000000	                          call 0x4000b75	       511	buffer.c	FUNCTION_8	IF_8	CALL_7
0x4000b75	      0xe973040000	                           jmp 0x4000fed	       512	buffer.c	FUNCTION_8	IF_8
0x4000b7a	      0x48837da800	               cmp qword [rbp - 0x58], 0	       516	buffer.c	FUNCTION_8	IF_9	CALL_8
0x4000b7f	            0x7464	                            je 0x4000be5	       516	buffer.c	FUNCTION_8	IF_9	CALL_8
0x4000b81	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       516	buffer.c	FUNCTION_8	IF_9	CALL_8
0x4000b85	          0x4889c7	                            mov rdi, rax	       516	buffer.c	FUNCTION_8	IF_9	CALL_8
0x4000b88	      0xe800000000	                          call 0x4000b8d	       516	buffer.c	FUNCTION_8	IF_9	CALL_8
0x4000b8d	            0x85c0	                           test eax, eax	       516	buffer.c	FUNCTION_8	IF_9	CALL_8
0x4000b8f	            0x7454	                            je 0x4000be5	       516	buffer.c	FUNCTION_8	IF_9	CALL_8
0x4000b91	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       522	buffer.c	FUNCTION_8	IF_9	IF_10
0x4000b95	          0x8b4078	            mov eax, dword [rax + 0x78] 	       522	buffer.c	FUNCTION_8	IF_9	IF_10
0x4000b98	          0x83f801	                              cmp eax, 1	       522	buffer.c	FUNCTION_8	IF_9	IF_10
0x4000b9b	            0x750c	                           jne 0x4000ba9	       522	buffer.c	FUNCTION_8	IF_9	IF_10
0x4000b9d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       523	buffer.c	FUNCTION_8	IF_9	CALL_9
0x4000ba1	          0x4889c7	                            mov rdi, rax	       523	buffer.c	FUNCTION_8	IF_9	CALL_9
0x4000ba4	      0xe800000000	                          call 0x4000ba9	       523	buffer.c	FUNCTION_8	IF_9	CALL_9
0x4000ba9	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       524	buffer.c	FUNCTION_8	IF_9	CALL_10
0x4000bad	          0x8b5040	            mov edx, dword [rax + 0x40] 	       524	buffer.c	FUNCTION_8	IF_9	CALL_10
0x4000bb0	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       525	buffer.c	FUNCTION_8	IF_9
0x4000bb4	        0x488b4038	            mov rax, qword [rax + 0x38] 	       525	buffer.c	FUNCTION_8	IF_9
0x4000bb8	        0x4883f801	                              cmp rax, 1	       524	buffer.c	FUNCTION_8	IF_9	CALL_10
0x4000bbc	            0x740a	                            je 0x4000bc8	       524	buffer.c	FUNCTION_8	IF_9	CALL_10
0x4000bbe	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       524	buffer.c	FUNCTION_8	IF_9	CALL_10
0x4000bc2	        0x488b4038	            mov rax, qword [rax + 0x38] 	       524	buffer.c	FUNCTION_8	IF_9	CALL_10
0x4000bc6	            0xeb05	                           jmp 0x4000bcd	       524	buffer.c	FUNCTION_8	IF_9	CALL_10
0x4000bc8	      0xb800000000	                              mov eax, 0	       524	buffer.c	FUNCTION_8	IF_9	CALL_10
0x4000bcd	        0x488b75a8	             mov rsi, qword [rbp - 0x58]	       524	buffer.c	FUNCTION_8	IF_9	CALL_10
0x4000bd1	        0x488b7da0	             mov rdi, qword [rbp - 0x60]	       524	buffer.c	FUNCTION_8	IF_9	CALL_10
0x4000bd5	    0x41b801000000	                              mov r8d, 1	       524	buffer.c	FUNCTION_8	IF_9	CALL_10
0x4000bdb	            0x89d1	                            mov ecx, edx	       524	buffer.c	FUNCTION_8	IF_9	CALL_10
0x4000bdd	          0x4889c2	                            mov rdx, rax	       524	buffer.c	FUNCTION_8	IF_9	CALL_10
0x4000be0	      0xe85a3d0000	                call sym.buflist_setfpos	       524	buffer.c	FUNCTION_8	IF_9	CALL_10
0x4000be5	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	       529	buffer.c	FUNCTION_8	CALL_11
0x4000be9	        0x488d45e0	                   lea rax, [rbp - 0x20]	       529	buffer.c	FUNCTION_8	CALL_11
0x4000bed	          0x4889d6	                            mov rsi, rdx	       529	buffer.c	FUNCTION_8	CALL_11
0x4000bf0	          0x4889c7	                            mov rdi, rax	       529	buffer.c	FUNCTION_8	CALL_11
0x4000bf3	      0xe800000000	                          call 0x4000bf8	       529	buffer.c	FUNCTION_8	CALL_11
0x4000bf8	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       532	buffer.c	FUNCTION_8	IF_11
0x4000bfc	          0x8b4078	            mov eax, dword [rax + 0x78] 	       532	buffer.c	FUNCTION_8	IF_11
0x4000bff	          0x83f801	                              cmp eax, 1	       532	buffer.c	FUNCTION_8	IF_11
0x4000c02	     0xf8544010000	                           jne 0x4000d4c	       532	buffer.c	FUNCTION_8	IF_11
0x4000c08	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       534	buffer.c	FUNCTION_8	IF_11
0x4000c0c	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	       534	buffer.c	FUNCTION_8	IF_11
0x4000c12	          0x8d5001	                      lea edx, [rax + 1]	       534	buffer.c	FUNCTION_8	IF_11
0x4000c15	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       534	buffer.c	FUNCTION_8	IF_11
0x4000c19	    0x899080000000	             mov dword [rax + 0x80], edx	       534	buffer.c	FUNCTION_8	IF_11
0x4000c1f	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       535	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_12
0x4000c23	    0x488b90980000	            mov rdx, qword [rax + 0x98] 	       535	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_12
0x4000c2a	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       535	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_12
0x4000c2e	    0x488b80980000	            mov rax, qword [rax + 0x98] 	       535	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_12
0x4000c35	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	       535	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_12
0x4000c39	          0x4989c8	                             mov r8, rcx	       535	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_12
0x4000c3c	      0xb900000000	                              mov ecx, 0	       535	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_12
0x4000c41	          0x4889c6	                            mov rsi, rax	       535	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_12
0x4000c44	      0xbf0e000000	                            mov edi, 0xe	       535	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_12
0x4000c49	      0xe800000000	                          call 0x4000c4e	       535	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_12
0x4000c4e	            0x85c0	                           test eax, eax	       535	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_12
0x4000c50	            0x7435	                            je 0x4000c87	       535	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_12
0x4000c52	        0x488d45e0	                   lea rax, [rbp - 0x20]	       537	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_13
0x4000c56	          0x4889c7	                            mov rdi, rax	       537	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_13
0x4000c59	      0xe800000000	                          call 0x4000c5e	       537	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_13
0x4000c5e	            0x85c0	                           test eax, eax	       537	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_13
0x4000c60	            0x7525	                           jne 0x4000c87	       537	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_13
0x4000c62	            0xeb07	                           jmp 0x4000c6b	       537	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_13
0x4000c64	              0x90	                                     nop	       547	buffer.c	FUNCTION_8	IF_11	IF_13
0x4000c65	            0xeb04	                           jmp 0x4000c6b	       547	buffer.c	FUNCTION_8	IF_11	IF_13
0x4000c67	              0x90	                                     nop	       558	buffer.c	FUNCTION_8	IF_11	IF_14	IF_15
0x4000c68	            0xeb01	                           jmp 0x4000c6b	       558	buffer.c	FUNCTION_8	IF_11	IF_14	IF_15
0x4000c6a	              0x90	                                     nop	       562	buffer.c	FUNCTION_8	IF_11	IF_14	IF_16
0x4000c6b	    0x488b05000000	            mov rax, qword [0x04000c72] 	       541	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_15
0x4000c72	          0x4889c7	                            mov rdi, rax	       541	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_15
0x4000c75	      0xe800000000	                          call 0x4000c7a	       541	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_15
0x4000c7a	          0x4889c7	                            mov rdi, rax	       541	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_15
0x4000c7d	      0xe800000000	                          call 0x4000c82	       541	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_15
0x4000c82	      0xe966030000	                           jmp 0x4000fed	       542	buffer.c	FUNCTION_8	IF_11	IF_12
0x4000c87	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       544	buffer.c	FUNCTION_8	IF_11
0x4000c8b	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	       544	buffer.c	FUNCTION_8	IF_11
0x4000c91	          0x8d50ff	                      lea edx, [rax - 1]	       544	buffer.c	FUNCTION_8	IF_11
0x4000c94	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       544	buffer.c	FUNCTION_8	IF_11
0x4000c98	    0x899080000000	             mov dword [rax + 0x80], edx	       544	buffer.c	FUNCTION_8	IF_11
0x4000c9e	        0x837d9800	               cmp dword [rbp - 0x68], 0	       545	buffer.c	FUNCTION_8	IF_11	IF_13	CALL_16
0x4000ca2	            0x7409	                            je 0x4000cad	       545	buffer.c	FUNCTION_8	IF_11	IF_13	CALL_16
0x4000ca4	      0xe800000000	                          call 0x4000ca9	       545	buffer.c	FUNCTION_8	IF_11	IF_13	CALL_16
0x4000ca9	            0x85c0	                           test eax, eax	       545	buffer.c	FUNCTION_8	IF_11	IF_13	CALL_16
0x4000cab	            0x75b7	                           jne 0x4000c64	       545	buffer.c	FUNCTION_8	IF_11	IF_13	CALL_16
0x4000cad	        0x837db800	               cmp dword [rbp - 0x48], 0	       551	buffer.c	FUNCTION_8	IF_11	IF_14
0x4000cb1	     0xf8588000000	                           jne 0x4000d3f	       551	buffer.c	FUNCTION_8	IF_11	IF_14
0x4000cb7	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       553	buffer.c	FUNCTION_8	IF_11	IF_14
0x4000cbb	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	       553	buffer.c	FUNCTION_8	IF_11	IF_14
0x4000cc1	          0x8d5001	                      lea edx, [rax + 1]	       553	buffer.c	FUNCTION_8	IF_11	IF_14
0x4000cc4	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       553	buffer.c	FUNCTION_8	IF_11	IF_14
0x4000cc8	    0x899080000000	             mov dword [rax + 0x80], edx	       553	buffer.c	FUNCTION_8	IF_11	IF_14
0x4000cce	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       554	buffer.c	FUNCTION_8	IF_11	IF_14	IF_15	CALL_17
0x4000cd2	    0x488b90980000	            mov rdx, qword [rax + 0x98] 	       554	buffer.c	FUNCTION_8	IF_11	IF_14	IF_15	CALL_17
0x4000cd9	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       554	buffer.c	FUNCTION_8	IF_11	IF_14	IF_15	CALL_17
0x4000cdd	    0x488b80980000	            mov rax, qword [rax + 0x98] 	       554	buffer.c	FUNCTION_8	IF_11	IF_14	IF_15	CALL_17
0x4000ce4	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	       554	buffer.c	FUNCTION_8	IF_11	IF_14	IF_15	CALL_17
0x4000ce8	          0x4989c8	                             mov r8, rcx	       554	buffer.c	FUNCTION_8	IF_11	IF_14	IF_15	CALL_17
0x4000ceb	      0xb900000000	                              mov ecx, 0	       554	buffer.c	FUNCTION_8	IF_11	IF_14	IF_15	CALL_17
0x4000cf0	          0x4889c6	                            mov rsi, rax	       554	buffer.c	FUNCTION_8	IF_11	IF_14	IF_15	CALL_17
0x4000cf3	      0xbf05000000	                              mov edi, 5	       554	buffer.c	FUNCTION_8	IF_11	IF_14	IF_15	CALL_17
0x4000cf8	      0xe800000000	                          call 0x4000cfd	       554	buffer.c	FUNCTION_8	IF_11	IF_14	IF_15	CALL_17
0x4000cfd	            0x85c0	                           test eax, eax	       554	buffer.c	FUNCTION_8	IF_11	IF_14	IF_15	CALL_17
0x4000cff	            0x7414	                            je 0x4000d15	       554	buffer.c	FUNCTION_8	IF_11	IF_14	IF_15	CALL_17
0x4000d01	        0x488d45e0	                   lea rax, [rbp - 0x20]	       556	buffer.c	FUNCTION_8	IF_11	IF_14	IF_15	CALL_18
0x4000d05	          0x4889c7	                            mov rdi, rax	       556	buffer.c	FUNCTION_8	IF_11	IF_14	IF_15	CALL_18
0x4000d08	      0xe800000000	                          call 0x4000d0d	       556	buffer.c	FUNCTION_8	IF_11	IF_14	IF_15	CALL_18
0x4000d0d	            0x85c0	                           test eax, eax	       556	buffer.c	FUNCTION_8	IF_11	IF_14	IF_15	CALL_18
0x4000d0f	     0xf8452ffffff	                            je 0x4000c67	       556	buffer.c	FUNCTION_8	IF_11	IF_14	IF_15	CALL_18
0x4000d15	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       559	buffer.c	FUNCTION_8	IF_11	IF_14
0x4000d19	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	       559	buffer.c	FUNCTION_8	IF_11	IF_14
0x4000d1f	          0x8d50ff	                      lea edx, [rax - 1]	       559	buffer.c	FUNCTION_8	IF_11	IF_14
0x4000d22	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       559	buffer.c	FUNCTION_8	IF_11	IF_14
0x4000d26	    0x899080000000	             mov dword [rax + 0x80], edx	       559	buffer.c	FUNCTION_8	IF_11	IF_14
0x4000d2c	        0x837d9800	               cmp dword [rbp - 0x68], 0	       560	buffer.c	FUNCTION_8	IF_11	IF_14	IF_16	CALL_19
0x4000d30	            0x740d	                            je 0x4000d3f	       560	buffer.c	FUNCTION_8	IF_11	IF_14	IF_16	CALL_19
0x4000d32	      0xe800000000	                          call 0x4000d37	       560	buffer.c	FUNCTION_8	IF_11	IF_14	IF_16	CALL_19
0x4000d37	            0x85c0	                           test eax, eax	       560	buffer.c	FUNCTION_8	IF_11	IF_14	IF_16	CALL_19
0x4000d39	     0xf852bffffff	                           jne 0x4000c6a	       560	buffer.c	FUNCTION_8	IF_11	IF_14	IF_16	CALL_19
0x4000d3f	      0xe800000000	                          call 0x4000d44	       565	buffer.c	FUNCTION_8	IF_11	IF_17	CALL_20
0x4000d44	            0x85c0	                           test eax, eax	       565	buffer.c	FUNCTION_8	IF_11	IF_17	CALL_20
0x4000d46	     0xf8594020000	                           jne 0x4000fe0	       565	buffer.c	FUNCTION_8	IF_11	IF_17	CALL_20
0x4000d4c	        0x837dc400	               cmp dword [rbp - 0x3c], 0	       573	buffer.c	FUNCTION_8	IF_18	CALL_21
0x4000d50	            0x743a	                            je 0x4000d8c	       573	buffer.c	FUNCTION_8	IF_18	CALL_21
0x4000d52	    0x488b05000000	            mov rax, qword [0x04000d59] 	       573	buffer.c	FUNCTION_8	IF_18	CALL_21
0x4000d59	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	       573	buffer.c	FUNCTION_8	IF_18	CALL_21
0x4000d5d	            0x742d	                            je 0x4000d8c	       573	buffer.c	FUNCTION_8	IF_18	CALL_21
0x4000d5f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       573	buffer.c	FUNCTION_8	IF_18	CALL_21
0x4000d63	          0x4889c7	                            mov rdi, rax	       573	buffer.c	FUNCTION_8	IF_18	CALL_21
0x4000d66	      0xe800000000	                          call 0x4000d6b	       573	buffer.c	FUNCTION_8	IF_18	CALL_21
0x4000d6b	            0x85c0	                           test eax, eax	       573	buffer.c	FUNCTION_8	IF_18	CALL_21
0x4000d6d	            0x741d	                            je 0x4000d8c	       573	buffer.c	FUNCTION_8	IF_18	CALL_21
0x4000d6f	      0xe800000000	                          call 0x4000d74	       575	buffer.c	FUNCTION_8	IF_18	CALL_22
0x4000d74	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       576	buffer.c	FUNCTION_8	IF_18	CALL_23
0x4000d78	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       576	buffer.c	FUNCTION_8	IF_18	CALL_23
0x4000d7c	          0x4889d6	                            mov rsi, rdx	       576	buffer.c	FUNCTION_8	IF_18	CALL_23
0x4000d7f	          0x4889c7	                            mov rdi, rax	       576	buffer.c	FUNCTION_8	IF_18	CALL_23
0x4000d82	      0xe800000000	                          call 0x4000d87	       576	buffer.c	FUNCTION_8	IF_18	CALL_23
0x4000d87	      0xe800000000	                          call 0x4000d8c	       577	buffer.c	FUNCTION_8	IF_18	CALL_24
0x4000d8c	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       580	buffer.c	FUNCTION_8
0x4000d90	          0x8b4078	            mov eax, dword [rax + 0x78] 	       580	buffer.c	FUNCTION_8
0x4000d93	          0x8945c8	             mov dword [rbp - 0x38], eax	       580	buffer.c	FUNCTION_8
0x4000d96	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       583	buffer.c	FUNCTION_8	IF_19
0x4000d9a	          0x8b4078	            mov eax, dword [rax + 0x78] 	       583	buffer.c	FUNCTION_8	IF_19
0x4000d9d	            0x85c0	                           test eax, eax	       583	buffer.c	FUNCTION_8	IF_19
0x4000d9f	            0x7e11	                           jle 0x4000db2	       583	buffer.c	FUNCTION_8	IF_19
0x4000da1	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       584	buffer.c	FUNCTION_8	IF_19
0x4000da5	          0x8b4078	            mov eax, dword [rax + 0x78] 	       584	buffer.c	FUNCTION_8	IF_19
0x4000da8	          0x8d50ff	                      lea edx, [rax - 1]	       584	buffer.c	FUNCTION_8	IF_19
0x4000dab	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       584	buffer.c	FUNCTION_8	IF_19
0x4000daf	          0x895078	             mov dword [rax + 0x78], edx	       584	buffer.c	FUNCTION_8	IF_19
0x4000db2	      0xe800000000	                          call 0x4000db7	       587	buffer.c	FUNCTION_8	IF_20	CALL_25
0x4000db7	            0x85c0	                           test eax, eax	       587	buffer.c	FUNCTION_8	IF_20	CALL_25
0x4000db9	            0x741d	                            je 0x4000dd8	       587	buffer.c	FUNCTION_8	IF_20	CALL_25
0x4000dbb	        0x837db800	               cmp dword [rbp - 0x48], 0	       587	buffer.c	FUNCTION_8	IF_20	CALL_25
0x4000dbf	            0x7517	                           jne 0x4000dd8	       587	buffer.c	FUNCTION_8	IF_20	CALL_25
0x4000dc1	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       587	buffer.c	FUNCTION_8	IF_20	CALL_25
0x4000dc5	          0x8b4078	            mov eax, dword [rax + 0x78] 	       587	buffer.c	FUNCTION_8	IF_20	CALL_25
0x4000dc8	            0x85c0	                           test eax, eax	       587	buffer.c	FUNCTION_8	IF_20	CALL_25
0x4000dca	            0x750c	                           jne 0x4000dd8	       587	buffer.c	FUNCTION_8	IF_20	CALL_25
0x4000dcc	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       588	buffer.c	FUNCTION_8	CALL_26
0x4000dd0	          0x4889c7	                            mov rdi, rax	       588	buffer.c	FUNCTION_8	CALL_26
0x4000dd3	      0xe800000000	                          call 0x4000dd8	       588	buffer.c	FUNCTION_8	CALL_26
0x4000dd8	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       593	buffer.c	FUNCTION_8	IF_21
0x4000ddc	          0x8b4078	            mov eax, dword [rax + 0x78] 	       593	buffer.c	FUNCTION_8	IF_21
0x4000ddf	            0x85c0	                           test eax, eax	       593	buffer.c	FUNCTION_8	IF_21
0x4000de1	     0xf8ffc010000	                            jg 0x4000fe3	       593	buffer.c	FUNCTION_8	IF_21
0x4000de7	        0x837db800	               cmp dword [rbp - 0x48], 0	       593	buffer.c	FUNCTION_8	IF_21
0x4000deb	     0xf84f2010000	                            je 0x4000fe3	       593	buffer.c	FUNCTION_8	IF_21
0x4000df1	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       597	buffer.c	FUNCTION_8	IF_22
0x4000df5	    0x488b80880000	            mov rax, qword [rax + 0x88] 	       597	buffer.c	FUNCTION_8	IF_22
0x4000dfc	          0x4885c0	                           test rax, rax	       597	buffer.c	FUNCTION_8	IF_22
0x4000dff	            0x7507	                           jne 0x4000e08	       597	buffer.c	FUNCTION_8	IF_22
0x4000e01	    0xc745bc010000	               mov dword [rbp - 0x44], 1	       598	buffer.c	FUNCTION_8	IF_22
0x4000e08	    0x488b05000000	            mov rax, qword [0x04000e0f] 	       602	buffer.c	FUNCTION_8	IF_23
0x4000e0f	        0x483945a0	            cmp qword [rbp - 0x60], rax 	       602	buffer.c	FUNCTION_8	IF_23
0x4000e13	            0x750f	                           jne 0x4000e24	       602	buffer.c	FUNCTION_8	IF_23
0x4000e15	    0x8b0500000000	            mov eax, dword [0x04000e1b] 	       602	buffer.c	FUNCTION_8	IF_23
0x4000e1b	            0x85c0	                           test eax, eax	       602	buffer.c	FUNCTION_8	IF_23
0x4000e1d	            0x7405	                            je 0x4000e24	       602	buffer.c	FUNCTION_8	IF_23
0x4000e1f	      0xe800000000	                          call 0x4000e24	       607	buffer.c	FUNCTION_8	CALL_27
0x4000e24	    0x488b05000000	            mov rax, qword [0x04000e2b] 	       615	buffer.c	FUNCTION_8
0x4000e2b	        0x483945a0	            cmp qword [rbp - 0x60], rax 	       615	buffer.c	FUNCTION_8
0x4000e2f	           0xf94c0	                                 sete al	       615	buffer.c	FUNCTION_8
0x4000e32	           0xfb6c0	                           movzx eax, al	       615	buffer.c	FUNCTION_8
0x4000e35	          0x8945cc	             mov dword [rbp - 0x34], eax	       615	buffer.c	FUNCTION_8
0x4000e38	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       616	buffer.c	FUNCTION_8
0x4000e3c	          0x8b55c8	             mov edx, dword [rbp - 0x38]	       616	buffer.c	FUNCTION_8
0x4000e3f	          0x895078	             mov dword [rax + 0x78], edx	       616	buffer.c	FUNCTION_8
0x4000e42	        0x837dbc00	               cmp dword [rbp - 0x44], 0	       618	buffer.c	FUNCTION_8	CALL_28
0x4000e46	           0xf95c0	                                setne al	       618	buffer.c	FUNCTION_8	CALL_28
0x4000e49	           0xfb6c0	                           movzx eax, al	       618	buffer.c	FUNCTION_8	CALL_28
0x4000e4c	        0x837dc000	               cmp dword [rbp - 0x40], 0	       618	buffer.c	FUNCTION_8	CALL_28
0x4000e50	            0x7407	                            je 0x4000e59	       618	buffer.c	FUNCTION_8	CALL_28
0x4000e52	      0xba02000000	                              mov edx, 2	       618	buffer.c	FUNCTION_8	CALL_28
0x4000e57	            0xeb05	                           jmp 0x4000e5e	       618	buffer.c	FUNCTION_8	CALL_28
0x4000e59	      0xba00000000	                              mov edx, 0	       618	buffer.c	FUNCTION_8	CALL_28
0x4000e5e	             0x1c2	                            add edx, eax	       618	buffer.c	FUNCTION_8	CALL_28
0x4000e60	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       618	buffer.c	FUNCTION_8	CALL_28
0x4000e64	            0x89d6	                            mov esi, edx	       618	buffer.c	FUNCTION_8	CALL_28
0x4000e66	          0x4889c7	                            mov rdi, rax	       618	buffer.c	FUNCTION_8	CALL_28
0x4000e69	      0xe800000000	                          call 0x4000e6e	       618	buffer.c	FUNCTION_8	CALL_28
0x4000e6e	        0x488d45e0	                   lea rax, [rbp - 0x20]	       621	buffer.c	FUNCTION_8	IF_24	CALL_29
0x4000e72	          0x4889c7	                            mov rdi, rax	       621	buffer.c	FUNCTION_8	IF_24	CALL_29
0x4000e75	      0xe800000000	                          call 0x4000e7a	       621	buffer.c	FUNCTION_8	IF_24	CALL_29
0x4000e7a	            0x85c0	                           test eax, eax	       621	buffer.c	FUNCTION_8	IF_24	CALL_29
0x4000e7c	     0xf8464010000	                            je 0x4000fe6	       621	buffer.c	FUNCTION_8	IF_24	CALL_29
0x4000e82	      0xe800000000	                          call 0x4000e87	       624	buffer.c	FUNCTION_8	IF_25	CALL_30
0x4000e87	            0x85c0	                           test eax, eax	       624	buffer.c	FUNCTION_8	IF_25	CALL_30
0x4000e89	     0xf855a010000	                           jne 0x4000fe9	       624	buffer.c	FUNCTION_8	IF_25	CALL_30
0x4000e8f	    0x488b05000000	            mov rax, qword [0x04000e96] 	       635	buffer.c	FUNCTION_8	IF_26
0x4000e96	        0x483945a0	            cmp qword [rbp - 0x60], rax 	       635	buffer.c	FUNCTION_8	IF_26
0x4000e9a	            0x750a	                           jne 0x4000ea6	       635	buffer.c	FUNCTION_8	IF_26
0x4000e9c	        0x837dcc00	               cmp dword [rbp - 0x34], 0	       635	buffer.c	FUNCTION_8	IF_26
0x4000ea0	     0xf8446010000	                            je 0x4000fec	       635	buffer.c	FUNCTION_8	IF_26
0x4000ea6	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       638	buffer.c	FUNCTION_8	IF_27	CALL_31
0x4000eaa	          0x4889c7	                            mov rdi, rax	       638	buffer.c	FUNCTION_8	IF_27	CALL_31
0x4000ead	      0xe800000000	                          call 0x4000eb2	       638	buffer.c	FUNCTION_8	IF_27	CALL_31
0x4000eb2	            0x85c0	                           test eax, eax	       638	buffer.c	FUNCTION_8	IF_27	CALL_31
0x4000eb4	            0x741a	                            je 0x4000ed0	       638	buffer.c	FUNCTION_8	IF_27	CALL_31
0x4000eb6	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       638	buffer.c	FUNCTION_8	IF_27	CALL_31
0x4000eba	        0x488b4008	                mov rax, qword [rax + 8]	       638	buffer.c	FUNCTION_8	IF_27	CALL_31
0x4000ebe	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	       638	buffer.c	FUNCTION_8	IF_27	CALL_31
0x4000ec2	            0x750c	                           jne 0x4000ed0	       638	buffer.c	FUNCTION_8	IF_27	CALL_31
0x4000ec4	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       639	buffer.c	FUNCTION_8	IF_27
0x4000ec8	    0x48c740080000	                  mov qword [rax + 8], 0	       639	buffer.c	FUNCTION_8	IF_27
0x4000ed0	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       643	buffer.c	FUNCTION_8	IF_28
0x4000ed4	          0x8b4078	            mov eax, dword [rax + 0x78] 	       643	buffer.c	FUNCTION_8	IF_28
0x4000ed7	            0x85c0	                           test eax, eax	       643	buffer.c	FUNCTION_8	IF_28
0x4000ed9	            0x7e11	                           jle 0x4000eec	       643	buffer.c	FUNCTION_8	IF_28
0x4000edb	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       644	buffer.c	FUNCTION_8	IF_28
0x4000edf	          0x8b4078	            mov eax, dword [rax + 0x78] 	       644	buffer.c	FUNCTION_8	IF_28
0x4000ee2	          0x8d50ff	                      lea edx, [rax - 1]	       644	buffer.c	FUNCTION_8	IF_28
0x4000ee5	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       644	buffer.c	FUNCTION_8	IF_28
0x4000ee9	          0x895078	             mov dword [rax + 0x78], edx	       644	buffer.c	FUNCTION_8	IF_28
0x4000eec	        0x837dc000	               cmp dword [rbp - 0x40], 0	       649	buffer.c	FUNCTION_8	IF_29
0x4000ef0	     0xf8498000000	                            je 0x4000f8e	       649	buffer.c	FUNCTION_8	IF_29
0x4000ef6	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       656	buffer.c	FUNCTION_8	IF_29	CALL_33
0x4000efa	    0x488b80880000	            mov rax, qword [rax + 0x88] 	       656	buffer.c	FUNCTION_8	IF_29	CALL_33
0x4000f01	          0x4889c7	                            mov rdi, rax	       656	buffer.c	FUNCTION_8	IF_29	CALL_33
0x4000f04	      0xe800000000	                          call 0x4000f09	       656	buffer.c	FUNCTION_8	IF_29	CALL_33
0x4000f09	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       657	buffer.c	FUNCTION_8	IF_29	CALL_34
0x4000f0d	    0x488b80900000	            mov rax, qword [rax + 0x90] 	       657	buffer.c	FUNCTION_8	IF_29	CALL_34
0x4000f14	          0x4889c7	                            mov rdi, rax	       657	buffer.c	FUNCTION_8	IF_29	CALL_34
0x4000f17	      0xe800000000	                          call 0x4000f1c	       657	buffer.c	FUNCTION_8	IF_29	CALL_34
0x4000f1c	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       658	buffer.c	FUNCTION_8	IF_29	IF_31
0x4000f20	        0x488b4070	            mov rax, qword [rax + 0x70] 	       658	buffer.c	FUNCTION_8	IF_29	IF_31
0x4000f24	          0x4885c0	                           test rax, rax	       658	buffer.c	FUNCTION_8	IF_29	IF_31
0x4000f27	            0x7511	                           jne 0x4000f3a	       658	buffer.c	FUNCTION_8	IF_29	IF_31
0x4000f29	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       659	buffer.c	FUNCTION_8	IF_29	IF_31
0x4000f2d	        0x488b4068	            mov rax, qword [rax + 0x68] 	       659	buffer.c	FUNCTION_8	IF_29	IF_31
0x4000f31	    0x488905000000	            mov qword [0x04000f38], rax 	       659	buffer.c	FUNCTION_8	IF_29	IF_31
0x4000f38	            0xeb14	                           jmp 0x4000f4e	       659	buffer.c	FUNCTION_8	IF_29	IF_31
0x4000f3a	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       661	buffer.c	FUNCTION_8	IF_29	ELSE_5
0x4000f3e	        0x488b4070	            mov rax, qword [rax + 0x70] 	       661	buffer.c	FUNCTION_8	IF_29	ELSE_5
0x4000f42	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	       661	buffer.c	FUNCTION_8	IF_29	ELSE_5
0x4000f46	        0x488b5268	            mov rdx, qword [rdx + 0x68] 	       661	buffer.c	FUNCTION_8	IF_29	ELSE_5
0x4000f4a	        0x48895068	             mov qword [rax + 0x68], rdx	       661	buffer.c	FUNCTION_8	IF_29	ELSE_5
0x4000f4e	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       662	buffer.c	FUNCTION_8	IF_29	IF_32
0x4000f52	        0x488b4068	            mov rax, qword [rax + 0x68] 	       662	buffer.c	FUNCTION_8	IF_29	IF_32
0x4000f56	          0x4885c0	                           test rax, rax	       662	buffer.c	FUNCTION_8	IF_29	IF_32
0x4000f59	            0x7511	                           jne 0x4000f6c	       662	buffer.c	FUNCTION_8	IF_29	IF_32
0x4000f5b	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       663	buffer.c	FUNCTION_8	IF_29	IF_32
0x4000f5f	        0x488b4070	            mov rax, qword [rax + 0x70] 	       663	buffer.c	FUNCTION_8	IF_29	IF_32
0x4000f63	    0x488905000000	            mov qword [0x04000f6a], rax 	       663	buffer.c	FUNCTION_8	IF_29	IF_32
0x4000f6a	            0xeb14	                           jmp 0x4000f80	       663	buffer.c	FUNCTION_8	IF_29	IF_32
0x4000f6c	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       665	buffer.c	FUNCTION_8	IF_29	ELSE_6
0x4000f70	        0x488b4068	            mov rax, qword [rax + 0x68] 	       665	buffer.c	FUNCTION_8	IF_29	ELSE_6
0x4000f74	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	       665	buffer.c	FUNCTION_8	IF_29	ELSE_6
0x4000f78	        0x488b5270	            mov rdx, qword [rdx + 0x70] 	       665	buffer.c	FUNCTION_8	IF_29	ELSE_6
0x4000f7c	        0x48895070	             mov qword [rax + 0x70], rdx	       665	buffer.c	FUNCTION_8	IF_29	ELSE_6
0x4000f80	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       666	buffer.c	FUNCTION_8	IF_29	CALL_35
0x4000f84	          0x4889c7	                            mov rdi, rax	       666	buffer.c	FUNCTION_8	IF_29	CALL_35
0x4000f87	      0xe858040000	                    call sym.free_buffer	       666	buffer.c	FUNCTION_8	IF_29	CALL_35
0x4000f8c	            0xeb5f	                           jmp 0x4000fed	       666	buffer.c	FUNCTION_8	IF_29	CALL_35
0x4000f8e	        0x837dbc00	               cmp dword [rbp - 0x44], 0	       670	buffer.c	FUNCTION_8	ELSE_7	IF_33
0x4000f92	            0x742a	                            je 0x4000fbe	       670	buffer.c	FUNCTION_8	ELSE_7	IF_33
0x4000f94	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       674	buffer.c	FUNCTION_8	ELSE_7	IF_33	CALL_36
0x4000f98	      0xbe01000000	                              mov esi, 1	       674	buffer.c	FUNCTION_8	ELSE_7	IF_33	CALL_36
0x4000f9d	          0x4889c7	                            mov rdi, rax	       674	buffer.c	FUNCTION_8	ELSE_7	IF_33	CALL_36
0x4000fa0	      0xe87f050000	              call sym.free_buffer_stuff	       674	buffer.c	FUNCTION_8	ELSE_7	IF_33	CALL_36
0x4000fa5	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       677	buffer.c	FUNCTION_8	ELSE_7	IF_33
0x4000fa9	    0xc7407c060000	               mov dword [rax + 0x7c], 6	       677	buffer.c	FUNCTION_8	ELSE_7	IF_33
0x4000fb0	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       680	buffer.c	FUNCTION_8	ELSE_7	IF_33
0x4000fb4	    0xc780a8120000	            mov dword [rax + 0x12a8], 0 	       680	buffer.c	FUNCTION_8	ELSE_7	IF_33
0x4000fbe	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       682	buffer.c	FUNCTION_8	ELSE_7	CALL_37
0x4000fc2	          0x4889c7	                            mov rdi, rax	       682	buffer.c	FUNCTION_8	ELSE_7	CALL_37
0x4000fc5	      0xe800000000	                          call 0x4000fca	       682	buffer.c	FUNCTION_8	ELSE_7	CALL_37
0x4000fca	        0x837dbc00	               cmp dword [rbp - 0x44], 0	       683	buffer.c	FUNCTION_8	ELSE_7	IF_34
0x4000fce	            0x741d	                            je 0x4000fed	       683	buffer.c	FUNCTION_8	ELSE_7	IF_34
0x4000fd0	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       684	buffer.c	FUNCTION_8	ELSE_7	IF_34
0x4000fd4	    0xc78024140000	            mov dword [rax + 0x1424], 0 	       684	buffer.c	FUNCTION_8	ELSE_7	IF_34
0x4000fde	            0xeb0d	                           jmp 0x4000fed	       684	buffer.c	FUNCTION_8	ELSE_7	IF_34
0x4000fe0	              0x90	                                     nop	       566	buffer.c	FUNCTION_8	IF_11	IF_17
0x4000fe1	            0xeb0a	                           jmp 0x4000fed	       566	buffer.c	FUNCTION_8	IF_11	IF_17
0x4000fe3	              0x90	                                     nop	       594	buffer.c	FUNCTION_8	IF_21
0x4000fe4	            0xeb07	                           jmp 0x4000fed	       594	buffer.c	FUNCTION_8	IF_21
0x4000fe6	              0x90	                                     nop	       622	buffer.c	FUNCTION_8	IF_24
0x4000fe7	            0xeb04	                           jmp 0x4000fed	       622	buffer.c	FUNCTION_8	IF_24
0x4000fe9	              0x90	                                     nop	       625	buffer.c	FUNCTION_8	IF_25
0x4000fea	            0xeb01	                           jmp 0x4000fed	       625	buffer.c	FUNCTION_8	IF_25
0x4000fec	              0x90	                                     nop	       636	buffer.c	FUNCTION_8	IF_26
0x4000fed	        0x488b45f8	                mov rax, qword [rbp - 8]	       686	buffer.c	FUNCTION_8
0x4000ff1	    0x644833042528	                xor rax, qword fs:[0x28]	       686	buffer.c	FUNCTION_8
0x4000ffa	            0x7405	                            je 0x4001001	       686	buffer.c	FUNCTION_8
0x4000ffc	      0xe800000000	                          call 0x4001001	       686	buffer.c	FUNCTION_8
0x4001001	              0xc9	                                   leave	       686	buffer.c	FUNCTION_8
0x4001002	              0xc3	                                     ret	       686	buffer.c	FUNCTION_8
buf_spname	CALL,8:functions,0:SWITCH,0:FOR,0:ELSE,1:DO,0:WHILE,0:IF,6	70
0x400b822	              0x55	                                push rbp	      5677	buffer.c	FUNCTION_84
0x400b823	          0x4889e5	                            mov rbp, rsp	      5677	buffer.c	FUNCTION_84
0x400b826	        0x4883ec30	                           sub rsp, 0x30	      5677	buffer.c	FUNCTION_84
0x400b82a	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      5677	buffer.c	FUNCTION_84
0x400b82e	    0x64488b042528	                mov rax, qword fs:[0x28]	      5677	buffer.c	FUNCTION_84
0x400b837	        0x488945f8	                mov qword [rbp - 8], rax	      5677	buffer.c	FUNCTION_84
0x400b83b	            0x31c0	                            xor eax, eax	      5677	buffer.c	FUNCTION_84
0x400b83d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5679	buffer.c	FUNCTION_84	IF_1	CALL_1
0x400b841	          0x4889c7	                            mov rdi, rax	      5679	buffer.c	FUNCTION_84	IF_1	CALL_1
0x400b844	      0xe800000000	                          call 0x400b849	      5679	buffer.c	FUNCTION_84	IF_1	CALL_1
0x400b849	            0x85c0	                           test eax, eax	      5679	buffer.c	FUNCTION_84	IF_1	CALL_1
0x400b84b	            0x7451	                            je 0x400b89e	      5679	buffer.c	FUNCTION_84	IF_1	CALL_1
0x400b84d	        0x488d55f0	                   lea rdx, [rbp - 0x10]	      5688	buffer.c	FUNCTION_84	IF_1	IF_2	CALL_2
0x400b851	        0x488d4de8	                   lea rcx, [rbp - 0x18]	      5688	buffer.c	FUNCTION_84	IF_1	IF_2	CALL_2
0x400b855	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5688	buffer.c	FUNCTION_84	IF_1	IF_2	CALL_2
0x400b859	          0x4889ce	                            mov rsi, rcx	      5688	buffer.c	FUNCTION_84	IF_1	IF_2	CALL_2
0x400b85c	          0x4889c7	                            mov rdi, rax	      5688	buffer.c	FUNCTION_84	IF_1	IF_2	CALL_2
0x400b85f	      0xe800000000	                          call 0x400b864	      5688	buffer.c	FUNCTION_84	IF_1	IF_2	CALL_2
0x400b864	          0x83f801	                              cmp eax, 1	      5688	buffer.c	FUNCTION_84	IF_1	IF_2	CALL_2
0x400b867	            0x7524	                           jne 0x400b88d	      5688	buffer.c	FUNCTION_84	IF_1	IF_2	CALL_2
0x400b869	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5688	buffer.c	FUNCTION_84	IF_1	IF_2	CALL_2
0x400b86d	    0x488b80501900	          mov rax, qword [rax + 0x1950] 	      5688	buffer.c	FUNCTION_84	IF_1	IF_2	CALL_2
0x400b874	          0x4885c0	                           test rax, rax	      5688	buffer.c	FUNCTION_84	IF_1	IF_2	CALL_2
0x400b877	            0x7414	                            je 0x400b88d	      5688	buffer.c	FUNCTION_84	IF_1	IF_2	CALL_2
0x400b879	    0x488b05000000	            mov rax, qword [0x0400b880] 	      5689	buffer.c	FUNCTION_84	IF_1	CALL_3
0x400b880	          0x4889c7	                            mov rdi, rax	      5689	buffer.c	FUNCTION_84	IF_1	CALL_3
0x400b883	      0xe800000000	                          call 0x400b888	      5689	buffer.c	FUNCTION_84	IF_1	CALL_3
0x400b888	      0xe990000000	                           jmp 0x400b91d	      5689	buffer.c	FUNCTION_84	IF_1	CALL_3
0x400b88d	    0x488b05000000	            mov rax, qword [0x0400b894] 	      5691	buffer.c	FUNCTION_84	IF_1	CALL_4
0x400b894	          0x4889c7	                            mov rdi, rax	      5691	buffer.c	FUNCTION_84	IF_1	CALL_4
0x400b897	      0xe800000000	                          call 0x400b89c	      5691	buffer.c	FUNCTION_84	IF_1	CALL_4
0x400b89c	            0xeb7f	                           jmp 0x400b91d	      5691	buffer.c	FUNCTION_84	IF_1	CALL_4
0x400b89e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5697	buffer.c	FUNCTION_84	IF_3	CALL_5
0x400b8a2	          0x4889c7	                            mov rdi, rax	      5697	buffer.c	FUNCTION_84	IF_3	CALL_5
0x400b8a5	      0xe800000000	                          call 0x400b8aa	      5697	buffer.c	FUNCTION_84	IF_3	CALL_5
0x400b8aa	            0x85c0	                           test eax, eax	      5697	buffer.c	FUNCTION_84	IF_3	CALL_5
0x400b8ac	            0x744e	                            je 0x400b8fc	      5697	buffer.c	FUNCTION_84	IF_3	CALL_5
0x400b8ae	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5700	buffer.c	FUNCTION_84	IF_3	IF_4
0x400b8b2	    0x488b80481c00	          mov rax, qword [rax + 0x1c48] 	      5700	buffer.c	FUNCTION_84	IF_3	IF_4
0x400b8b9	          0x4885c0	                           test rax, rax	      5700	buffer.c	FUNCTION_84	IF_3	IF_4
0x400b8bc	            0x7415	                            je 0x400b8d3	      5700	buffer.c	FUNCTION_84	IF_3	IF_4
0x400b8be	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5701	buffer.c	FUNCTION_84	IF_3	CALL_6
0x400b8c2	    0x488b80481c00	          mov rax, qword [rax + 0x1c48] 	      5701	buffer.c	FUNCTION_84	IF_3	CALL_6
0x400b8c9	          0x4889c7	                            mov rdi, rax	      5701	buffer.c	FUNCTION_84	IF_3	CALL_6
0x400b8cc	      0xe800000000	                          call 0x400b8d1	      5701	buffer.c	FUNCTION_84	IF_3	CALL_6
0x400b8d1	            0xeb4a	                           jmp 0x400b91d	      5701	buffer.c	FUNCTION_84	IF_3	CALL_6
0x400b8d3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5703	buffer.c	FUNCTION_84	IF_3	IF_5
0x400b8d7	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      5703	buffer.c	FUNCTION_84	IF_3	IF_5
0x400b8de	          0x4885c0	                           test rax, rax	      5703	buffer.c	FUNCTION_84	IF_3	IF_5
0x400b8e1	            0x740d	                            je 0x400b8f0	      5703	buffer.c	FUNCTION_84	IF_3	IF_5
0x400b8e3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5704	buffer.c	FUNCTION_84	IF_3	IF_5
0x400b8e7	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      5704	buffer.c	FUNCTION_84	IF_3	IF_5
0x400b8ee	            0xeb2d	                           jmp 0x400b91d	      5704	buffer.c	FUNCTION_84	IF_3	IF_5
0x400b8f0	      0xbf00000000	                              mov edi, 0	      5705	buffer.c	FUNCTION_84	IF_3	CALL_7
0x400b8f5	      0xe800000000	                          call 0x400b8fa	      5705	buffer.c	FUNCTION_84	IF_3	CALL_7
0x400b8fa	            0xeb21	                           jmp 0x400b91d	      5705	buffer.c	FUNCTION_84	IF_3	CALL_7
0x400b8fc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5708	buffer.c	FUNCTION_84	IF_6
0x400b900	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      5708	buffer.c	FUNCTION_84	IF_6
0x400b907	          0x4885c0	                           test rax, rax	      5708	buffer.c	FUNCTION_84	IF_6
0x400b90a	            0x750c	                           jne 0x400b918	      5708	buffer.c	FUNCTION_84	IF_6
0x400b90c	      0xbf00000000	                              mov edi, 0	      5709	buffer.c	FUNCTION_84	CALL_8
0x400b911	      0xe800000000	                          call 0x400b916	      5709	buffer.c	FUNCTION_84	CALL_8
0x400b916	            0xeb05	                           jmp 0x400b91d	      5709	buffer.c	FUNCTION_84	CALL_8
0x400b918	      0xb800000000	                              mov eax, 0	      5710	buffer.c	FUNCTION_84
0x400b91d	        0x488b75f8	                mov rsi, qword [rbp - 8]	      5711	buffer.c	FUNCTION_84
0x400b921	    0x644833342528	                xor rsi, qword fs:[0x28]	      5711	buffer.c	FUNCTION_84
0x400b92a	            0x7405	                            je 0x400b931	      5711	buffer.c	FUNCTION_84
0x400b92c	      0xe800000000	                          call 0x400b931	      5711	buffer.c	FUNCTION_84
0x400b931	              0xc9	                                   leave	      5711	buffer.c	FUNCTION_84
0x400b932	              0xc3	                                     ret	      5711	buffer.c	FUNCTION_84
alist_name	CALL,1:functions,0:SWITCH,0:FOR,0:ELSE,0:DO,0:WHILE,0:IF,1	22
0x4009ddd	              0x55	                                push rbp	      4827	buffer.c	FUNCTION_70
0x4009dde	          0x4889e5	                            mov rbp, rsp	      4827	buffer.c	FUNCTION_70
0x4009de1	        0x4883ec20	                           sub rsp, 0x20	      4827	buffer.c	FUNCTION_70
0x4009de5	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4827	buffer.c	FUNCTION_70
0x4009de9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4831	buffer.c	FUNCTION_70	CALL_1
0x4009ded	          0x8b4008	                mov eax, dword [rax + 8]	      4831	buffer.c	FUNCTION_70	CALL_1
0x4009df0	            0x89c7	                            mov edi, eax	      4831	buffer.c	FUNCTION_70	CALL_1
0x4009df2	      0xe800000000	                          call 0x4009df7	      4831	buffer.c	FUNCTION_70	CALL_1
0x4009df7	        0x488945f8	                mov qword [rbp - 8], rax	      4831	buffer.c	FUNCTION_70	CALL_1
0x4009dfb	      0x48837df800	                  cmp qword [rbp - 8], 0	      4832	buffer.c	FUNCTION_70	IF_1
0x4009e00	            0x7410	                            je 0x4009e12	      4832	buffer.c	FUNCTION_70	IF_1
0x4009e02	        0x488b45f8	                mov rax, qword [rbp - 8]	      4832	buffer.c	FUNCTION_70	IF_1
0x4009e06	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      4832	buffer.c	FUNCTION_70	IF_1
0x4009e0d	          0x4885c0	                           test rax, rax	      4832	buffer.c	FUNCTION_70	IF_1
0x4009e10	            0x7509	                           jne 0x4009e1b	      4832	buffer.c	FUNCTION_70	IF_1
0x4009e12	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4833	buffer.c	FUNCTION_70	IF_1
0x4009e16	          0x488b00	                    mov rax, qword [rax]	      4833	buffer.c	FUNCTION_70	IF_1
0x4009e19	            0xeb0b	                           jmp 0x4009e26	      4833	buffer.c	FUNCTION_70	IF_1
0x4009e1b	        0x488b45f8	                mov rax, qword [rbp - 8]	      4834	buffer.c	FUNCTION_70
0x4009e1f	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      4834	buffer.c	FUNCTION_70
0x4009e26	              0xc9	                                   leave	      4835	buffer.c	FUNCTION_70
0x4009e27	              0xc3	                                     ret	      4835	buffer.c	FUNCTION_70
buflist_list	CALL,33:functions,0:SWITCH,0:FOR,1:ELSE,4:DO,1:WHILE,0:IF,7	399
0x4004da8	              0x55	                                push rbp	      2952	buffer.c	FUNCTION_45
0x4004da9	          0x4889e5	                            mov rbp, rsp	      2952	buffer.c	FUNCTION_45
0x4004dac	              0x53	                                push rbx	      2952	buffer.c	FUNCTION_45
0x4004dad	        0x4883ec38	                           sub rsp, 0x38	      2952	buffer.c	FUNCTION_45
0x4004db1	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      2952	buffer.c	FUNCTION_45
0x4004db5	    0x488b05000000	            mov rax, qword [0x04004dbc] 	      2963	buffer.c	FUNCTION_45	FOR_1
0x4004dbc	        0x488945e8	             mov qword [rbp - 0x18], rax	      2963	buffer.c	FUNCTION_45	FOR_1
0x4004dc0	      0xe9d5050000	                           jmp 0x400539a	      2963	buffer.c	FUNCTION_45	FOR_1
0x4004dc5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2966	buffer.c	FUNCTION_45	FOR_1	CALL_1
0x4004dc9	    0x488b80481c00	          mov rax, qword [rax + 0x1c48] 	      2966	buffer.c	FUNCTION_45	FOR_1	CALL_1
0x4004dd0	          0x4889c7	                            mov rdi, rax	      2966	buffer.c	FUNCTION_45	FOR_1	CALL_1
0x4004dd3	      0xe800000000	                          call 0x4004dd8	      2966	buffer.c	FUNCTION_45	FOR_1	CALL_1
0x4004dd8	          0x8945e0	             mov dword [rbp - 0x20], eax	      2966	buffer.c	FUNCTION_45	FOR_1	CALL_1
0x4004ddb	        0x837de000	               cmp dword [rbp - 0x20], 0	      2967	buffer.c	FUNCTION_45	FOR_1	CALL_2
0x4004ddf	            0x741e	                            je 0x4004dff	      2967	buffer.c	FUNCTION_45	FOR_1	CALL_2
0x4004de1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2967	buffer.c	FUNCTION_45	FOR_1	CALL_2
0x4004de5	    0x488b80481c00	          mov rax, qword [rax + 0x1c48] 	      2967	buffer.c	FUNCTION_45	FOR_1	CALL_2
0x4004dec	          0x4889c7	                            mov rdi, rax	      2967	buffer.c	FUNCTION_45	FOR_1	CALL_2
0x4004def	      0xe800000000	                          call 0x4004df4	      2967	buffer.c	FUNCTION_45	FOR_1	CALL_2
0x4004df4	            0x85c0	                           test eax, eax	      2967	buffer.c	FUNCTION_45	FOR_1	CALL_2
0x4004df6	            0x7407	                            je 0x4004dff	      2967	buffer.c	FUNCTION_45	FOR_1	CALL_2
0x4004df8	      0xb801000000	                              mov eax, 1	      2967	buffer.c	FUNCTION_45	FOR_1	CALL_2
0x4004dfd	            0xeb05	                           jmp 0x4004e04	      2967	buffer.c	FUNCTION_45	FOR_1	CALL_2
0x4004dff	      0xb800000000	                              mov eax, 0	      2967	buffer.c	FUNCTION_45	FOR_1	CALL_2
0x4004e04	          0x8945e4	             mov dword [rbp - 0x1c], eax	      2967	buffer.c	FUNCTION_45	FOR_1	CALL_2
0x4004e07	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2970	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x4004e0b	    0x8b8024140000	          mov eax, dword [rax + 0x1424] 	      2970	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x4004e11	            0x85c0	                           test eax, eax	      2970	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x4004e13	            0x7528	                           jne 0x4004e3d	      2970	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x4004e15	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2970	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x4004e19	          0x8b4034	            mov eax, dword [rax + 0x34] 	      2970	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x4004e1c	            0x85c0	                           test eax, eax	      2970	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x4004e1e	            0x751d	                           jne 0x4004e3d	      2970	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x4004e20	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2970	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x4004e24	          0x488b00	                    mov rax, qword [rax]	      2970	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x4004e27	      0xbe75000000	                           mov esi, 0x75	      2970	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x4004e2c	          0x4889c7	                            mov rdi, rax	      2970	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x4004e2f	      0xe800000000	                          call 0x4004e34	      2970	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x4004e34	          0x4885c0	                           test rax, rax	      2970	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x4004e37	     0xf844d050000	                            je 0x400538a	      2970	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x4004e3d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2971	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_4
0x4004e41	          0x488b00	                    mov rax, qword [rax]	      2971	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_4
0x4004e44	      0xbe75000000	                           mov esi, 0x75	      2971	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_4
0x4004e49	          0x4889c7	                            mov rdi, rax	      2971	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_4
0x4004e4c	      0xe800000000	                          call 0x4004e51	      2971	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_4
0x4004e51	          0x4885c0	                           test rax, rax	      2971	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_4
0x4004e54	            0x7412	                            je 0x4004e68	      2971	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_4
0x4004e56	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2971	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_4
0x4004e5a	    0x8b8024140000	          mov eax, dword [rax + 0x1424] 	      2971	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_4
0x4004e60	            0x85c0	                           test eax, eax	      2971	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_4
0x4004e62	     0xf8522050000	                           jne 0x400538a	      2971	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_4
0x4004e68	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2972	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_5
0x4004e6c	          0x488b00	                    mov rax, qword [rax]	      2972	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_5
0x4004e6f	      0xbe2b000000	                           mov esi, 0x2b	      2972	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_5
0x4004e74	          0x4889c7	                            mov rdi, rax	      2972	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_5
0x4004e77	      0xe800000000	                          call 0x4004e7c	      2972	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_5
0x4004e7c	          0x4885c0	                           test rax, rax	      2972	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_5
0x4004e7f	            0x7426	                            je 0x4004ea7	      2972	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_5
0x4004e81	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2973	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_6
0x4004e85	          0x8b407c	            mov eax, dword [rax + 0x7c] 	      2973	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_6
0x4004e88	          0x83e040	                           and eax, 0x40	      2973	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_6
0x4004e8b	            0x85c0	                           test eax, eax	      2973	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_6
0x4004e8d	     0xf85f7040000	                           jne 0x400538a	      2973	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_6
0x4004e93	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2973	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_6
0x4004e97	          0x4889c7	                            mov rdi, rax	      2973	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_6
0x4004e9a	      0xe800000000	                          call 0x4004e9f	      2973	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_6
0x4004e9f	            0x85c0	                           test eax, eax	      2973	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_6
0x4004ea1	     0xf84e3040000	                            je 0x400538a	      2973	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_6
0x4004ea7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2974	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_7
0x4004eab	          0x488b00	                    mov rax, qword [rax]	      2974	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_7
0x4004eae	      0xbe61000000	                           mov esi, 0x61	      2974	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_7
0x4004eb3	          0x4889c7	                            mov rdi, rax	      2974	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_7
0x4004eb6	      0xe800000000	                          call 0x4004ebb	      2974	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_7
0x4004ebb	          0x4885c0	                           test rax, rax	      2974	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_7
0x4004ebe	            0x7420	                            je 0x4004ee0	      2974	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_7
0x4004ec0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2975	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4004ec4	        0x488b4008	                mov rax, qword [rax + 8]	      2975	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4004ec8	          0x4885c0	                           test rax, rax	      2975	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4004ecb	     0xf84b9040000	                            je 0x400538a	      2975	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4004ed1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2975	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4004ed5	          0x8b4078	            mov eax, dword [rax + 0x78] 	      2975	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4004ed8	            0x85c0	                           test eax, eax	      2975	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4004eda	     0xf84aa040000	                            je 0x400538a	      2975	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4004ee0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2976	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_8
0x4004ee4	          0x488b00	                    mov rax, qword [rax]	      2976	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_8
0x4004ee7	      0xbe68000000	                           mov esi, 0x68	      2976	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_8
0x4004eec	          0x4889c7	                            mov rdi, rax	      2976	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_8
0x4004eef	      0xe800000000	                          call 0x4004ef4	      2976	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_8
0x4004ef4	          0x4885c0	                           test rax, rax	      2976	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_8
0x4004ef7	            0x7420	                            je 0x4004f19	      2976	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_8
0x4004ef9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2977	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4004efd	        0x488b4008	                mov rax, qword [rax + 8]	      2977	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4004f01	          0x4885c0	                           test rax, rax	      2977	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4004f04	     0xf8480040000	                            je 0x400538a	      2977	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4004f0a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2977	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4004f0e	          0x8b4078	            mov eax, dword [rax + 0x78] 	      2977	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4004f11	            0x85c0	                           test eax, eax	      2977	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4004f13	     0xf8571040000	                           jne 0x400538a	      2977	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4004f19	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2979	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_9
0x4004f1d	          0x488b00	                    mov rax, qword [rax]	      2979	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_9
0x4004f20	      0xbe52000000	                           mov esi, 0x52	      2979	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_9
0x4004f25	          0x4889c7	                            mov rdi, rax	      2979	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_9
0x4004f28	      0xe800000000	                          call 0x4004f2d	      2979	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_9
0x4004f2d	          0x4885c0	                           test rax, rax	      2979	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_9
0x4004f30	            0x741a	                            je 0x4004f4c	      2979	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_9
0x4004f32	        0x837de000	               cmp dword [rbp - 0x20], 0	      2980	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4004f36	     0xf844e040000	                            je 0x400538a	      2980	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4004f3c	        0x837de000	               cmp dword [rbp - 0x20], 0	      2980	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4004f40	            0x740a	                            je 0x4004f4c	      2980	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4004f42	        0x837de400	               cmp dword [rbp - 0x1c], 0	      2980	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4004f46	     0xf853e040000	                           jne 0x400538a	      2980	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4004f4c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2981	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_10
0x4004f50	          0x488b00	                    mov rax, qword [rax]	      2981	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_10
0x4004f53	      0xbe3f000000	                           mov esi, 0x3f	      2981	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_10
0x4004f58	          0x4889c7	                            mov rdi, rax	      2981	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_10
0x4004f5b	      0xe800000000	                          call 0x4004f60	      2981	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_10
0x4004f60	          0x4885c0	                           test rax, rax	      2981	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_10
0x4004f63	            0x741a	                            je 0x4004f7f	      2981	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_10
0x4004f65	        0x837de000	               cmp dword [rbp - 0x20], 0	      2982	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4004f69	     0xf841b040000	                            je 0x400538a	      2982	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4004f6f	        0x837de000	               cmp dword [rbp - 0x20], 0	      2982	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4004f73	            0x740a	                            je 0x4004f7f	      2982	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4004f75	        0x837de400	               cmp dword [rbp - 0x1c], 0	      2982	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4004f79	     0xf840b040000	                            je 0x400538a	      2982	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4004f7f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x4004f83	          0x488b00	                    mov rax, qword [rax]	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x4004f86	      0xbe46000000	                           mov esi, 0x46	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x4004f8b	          0x4889c7	                            mov rdi, rax	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x4004f8e	      0xe800000000	                          call 0x4004f93	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x4004f93	          0x4885c0	                           test rax, rax	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x4004f96	            0x741e	                            je 0x4004fb6	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x4004f98	        0x837de000	               cmp dword [rbp - 0x20], 0	      2984	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4004f9c	     0xf85e8030000	                           jne 0x400538a	      2984	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4004fa2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2984	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4004fa6	    0x488b80481c00	          mov rax, qword [rax + 0x1c48] 	      2984	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4004fad	          0x4885c0	                           test rax, rax	      2984	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4004fb0	     0xf84d4030000	                            je 0x400538a	      2984	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4004fb6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2986	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_12
0x4004fba	          0x488b00	                    mov rax, qword [rax]	      2986	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_12
0x4004fbd	      0xbe2d000000	                           mov esi, 0x2d	      2986	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_12
0x4004fc2	          0x4889c7	                            mov rdi, rax	      2986	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_12
0x4004fc5	      0xe800000000	                          call 0x4004fca	      2986	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_12
0x4004fca	          0x4885c0	                           test rax, rax	      2986	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_12
0x4004fcd	            0x7412	                            je 0x4004fe1	      2986	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_12
0x4004fcf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2986	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_12
0x4004fd3	    0x8b8040150000	          mov eax, dword [rax + 0x1540] 	      2986	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_12
0x4004fd9	            0x85c0	                           test eax, eax	      2986	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_12
0x4004fdb	     0xf85a9030000	                           jne 0x400538a	      2986	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_12
0x4004fe1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2987	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_13
0x4004fe5	          0x488b00	                    mov rax, qword [rax]	      2987	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_13
0x4004fe8	      0xbe3d000000	                           mov esi, 0x3d	      2987	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_13
0x4004fed	          0x4889c7	                            mov rdi, rax	      2987	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_13
0x4004ff0	      0xe800000000	                          call 0x4004ff5	      2987	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_13
0x4004ff5	          0x4885c0	                           test rax, rax	      2987	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_13
0x4004ff8	            0x7412	                            je 0x400500c	      2987	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_13
0x4004ffa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2987	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_13
0x4004ffe	    0x8b8060150000	          mov eax, dword [rax + 0x1560] 	      2987	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_13
0x4005004	            0x85c0	                           test eax, eax	      2987	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_13
0x4005006	     0xf847e030000	                            je 0x400538a	      2987	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_13
0x400500c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2988	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_14
0x4005010	          0x488b00	                    mov rax, qword [rax]	      2988	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_14
0x4005013	      0xbe78000000	                           mov esi, 0x78	      2988	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_14
0x4005018	          0x4889c7	                            mov rdi, rax	      2988	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_14
0x400501b	      0xe800000000	                          call 0x4005020	      2988	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_14
0x4005020	          0x4885c0	                           test rax, rax	      2988	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_14
0x4005023	            0x7412	                            je 0x4005037	      2988	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_14
0x4005025	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2988	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_14
0x4005029	          0x8b407c	            mov eax, dword [rax + 0x7c] 	      2988	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_14
0x400502c	          0x83e040	                           and eax, 0x40	      2988	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_14
0x400502f	            0x85c0	                           test eax, eax	      2988	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_14
0x4005031	     0xf8453030000	                            je 0x400538a	      2988	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_14
0x4005037	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2989	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_15
0x400503b	          0x488b00	                    mov rax, qword [rax]	      2989	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_15
0x400503e	      0xbe25000000	                           mov esi, 0x25	      2989	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_15
0x4005043	          0x4889c7	                            mov rdi, rax	      2989	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_15
0x4005046	      0xe800000000	                          call 0x400504b	      2989	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_15
0x400504b	          0x4885c0	                           test rax, rax	      2989	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_15
0x400504e	            0x7411	                            je 0x4005061	      2989	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_15
0x4005050	    0x488b05000000	            mov rax, qword [0x04005057] 	      2989	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_15
0x4005057	        0x483945e8	            cmp qword [rbp - 0x18], rax 	      2989	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_15
0x400505b	     0xf8529030000	                           jne 0x400538a	      2989	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_15
0x4005061	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2990	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_16
0x4005065	          0x488b00	                    mov rax, qword [rax]	      2990	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_16
0x4005068	      0xbe23000000	                           mov esi, 0x23	      2990	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_16
0x400506d	          0x4889c7	                            mov rdi, rax	      2990	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_16
0x4005070	      0xe800000000	                          call 0x4005075	      2990	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_16
0x4005075	          0x4885c0	                           test rax, rax	      2990	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_16
0x4005078	            0x7430	                            je 0x40050aa	      2990	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_16
0x400507a	    0x488b05000000	            mov rax, qword [0x04005081] 	      2991	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4005081	        0x483945e8	            cmp qword [rbp - 0x18], rax 	      2991	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4005085	     0xf84ff020000	                            je 0x400538a	      2991	buffer.c	FUNCTION_45	FOR_1	IF_1
0x400508b	    0x488b05000000	            mov rax, qword [0x04005092] 	      2991	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4005092	    0x8b9078010000	           mov edx, dword [rax + 0x178] 	      2991	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4005098	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2991	buffer.c	FUNCTION_45	FOR_1	IF_1
0x400509c	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      2991	buffer.c	FUNCTION_45	FOR_1	IF_1
0x40050a2	            0x39c2	                            cmp edx, eax	      2991	buffer.c	FUNCTION_45	FOR_1	IF_1
0x40050a4	     0xf85e0020000	                           jne 0x400538a	      2991	buffer.c	FUNCTION_45	FOR_1	IF_1
0x40050aa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2993	buffer.c	FUNCTION_45	FOR_1	IF_2	CALL_17
0x40050ae	          0x4889c7	                            mov rdi, rax	      2993	buffer.c	FUNCTION_45	FOR_1	IF_2	CALL_17
0x40050b1	      0xe800000000	                          call 0x40050b6	      2993	buffer.c	FUNCTION_45	FOR_1	IF_2	CALL_17
0x40050b6	          0x4885c0	                           test rax, rax	      2993	buffer.c	FUNCTION_45	FOR_1	IF_2	CALL_17
0x40050b9	            0x7428	                            je 0x40050e3	      2993	buffer.c	FUNCTION_45	FOR_1	IF_2	CALL_17
0x40050bb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2994	buffer.c	FUNCTION_45	FOR_1	CALL_19
0x40050bf	          0x4889c7	                            mov rdi, rax	      2994	buffer.c	FUNCTION_45	FOR_1	CALL_19
0x40050c2	      0xe800000000	                          call 0x40050c7	      2994	buffer.c	FUNCTION_45	FOR_1	CALL_19
0x40050c7	          0x4889c1	                            mov rcx, rax	      2994	buffer.c	FUNCTION_45	FOR_1	CALL_19
0x40050ca	    0x488b05000000	            mov rax, qword [0x040050d1] 	      2994	buffer.c	FUNCTION_45	FOR_1	CALL_19
0x40050d1	      0xbaff0f0000	                          mov edx, 0xfff	      2994	buffer.c	FUNCTION_45	FOR_1	CALL_19
0x40050d6	          0x4889ce	                            mov rsi, rcx	      2994	buffer.c	FUNCTION_45	FOR_1	CALL_19
0x40050d9	          0x4889c7	                            mov rdi, rax	      2994	buffer.c	FUNCTION_45	FOR_1	CALL_19
0x40050dc	      0xe800000000	                          call 0x40050e1	      2994	buffer.c	FUNCTION_45	FOR_1	CALL_19
0x40050e1	            0xeb29	                           jmp 0x400510c	      2994	buffer.c	FUNCTION_45	FOR_1	CALL_19
0x40050e3	    0x488b15000000	            mov rdx, qword [0x040050ea] 	      2996	buffer.c	FUNCTION_45	FOR_1	CALL_20
0x40050ea	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2996	buffer.c	FUNCTION_45	FOR_1	CALL_20
0x40050ee	    0x488bb0980000	            mov rsi, qword [rax + 0x98] 	      2996	buffer.c	FUNCTION_45	FOR_1	CALL_20
0x40050f5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2996	buffer.c	FUNCTION_45	FOR_1	CALL_20
0x40050f9	    0x41b801000000	                              mov r8d, 1	      2996	buffer.c	FUNCTION_45	FOR_1	CALL_20
0x40050ff	      0xb900100000	                         mov ecx, 0x1000	      2996	buffer.c	FUNCTION_45	FOR_1	CALL_20
0x4005104	          0x4889c7	                            mov rdi, rax	      2996	buffer.c	FUNCTION_45	FOR_1	CALL_20
0x4005107	      0xe800000000	                          call 0x400510c	      2996	buffer.c	FUNCTION_45	FOR_1	CALL_20
0x400510c	    0x488b05000000	            mov rax, qword [0x04005113] 	      2997	buffer.c	FUNCTION_45	FOR_1	IF_3	CALL_21
0x4005113	          0x4889c7	                            mov rdi, rax	      2997	buffer.c	FUNCTION_45	FOR_1	IF_3	CALL_21
0x4005116	      0xe800000000	                          call 0x400511b	      2997	buffer.c	FUNCTION_45	FOR_1	IF_3	CALL_21
0x400511b	            0x85c0	                           test eax, eax	      2997	buffer.c	FUNCTION_45	FOR_1	IF_3	CALL_21
0x400511d	     0xf856a020000	                           jne 0x400538d	      2997	buffer.c	FUNCTION_45	FOR_1	IF_3	CALL_21
0x4005123	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3000	buffer.c	FUNCTION_45	FOR_1
0x4005127	          0x8b407c	            mov eax, dword [rax + 0x7c] 	      3000	buffer.c	FUNCTION_45	FOR_1
0x400512a	          0x83e040	                           and eax, 0x40	      3000	buffer.c	FUNCTION_45	FOR_1
0x400512d	            0x85c0	                           test eax, eax	      3001	buffer.c	FUNCTION_45	FOR_1	CALL_22
0x400512f	            0x751e	                           jne 0x400514f	      3001	buffer.c	FUNCTION_45	FOR_1	CALL_22
0x4005131	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3001	buffer.c	FUNCTION_45	FOR_1	CALL_22
0x4005135	          0x4889c7	                            mov rdi, rax	      3001	buffer.c	FUNCTION_45	FOR_1	CALL_22
0x4005138	      0xe800000000	                          call 0x400513d	      3001	buffer.c	FUNCTION_45	FOR_1	CALL_22
0x400513d	            0x85c0	                           test eax, eax	      3001	buffer.c	FUNCTION_45	FOR_1	CALL_22
0x400513f	            0x7407	                            je 0x4005148	      3001	buffer.c	FUNCTION_45	FOR_1	CALL_22
0x4005141	      0xb82b000000	                           mov eax, 0x2b	      3001	buffer.c	FUNCTION_45	FOR_1	CALL_22
0x4005146	            0xeb0c	                           jmp 0x4005154	      3001	buffer.c	FUNCTION_45	FOR_1	CALL_22
0x4005148	      0xb820000000	                           mov eax, 0x20	      3001	buffer.c	FUNCTION_45	FOR_1	CALL_22
0x400514d	            0xeb05	                           jmp 0x4005154	      3001	buffer.c	FUNCTION_45	FOR_1	CALL_22
0x400514f	      0xb878000000	                           mov eax, 0x78	      3001	buffer.c	FUNCTION_45	FOR_1	CALL_22
0x4005154	          0x8945dc	             mov dword [rbp - 0x24], eax	      3000	buffer.c	FUNCTION_45	FOR_1
0x4005157	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3003	buffer.c	FUNCTION_45	FOR_1	IF_4	CALL_23
0x400515b	    0x488b80481c00	          mov rax, qword [rax + 0x1c48] 	      3003	buffer.c	FUNCTION_45	FOR_1	IF_4	CALL_23
0x4005162	          0x4889c7	                            mov rdi, rax	      3003	buffer.c	FUNCTION_45	FOR_1	IF_4	CALL_23
0x4005165	      0xe800000000	                          call 0x400516a	      3003	buffer.c	FUNCTION_45	FOR_1	IF_4	CALL_23
0x400516a	            0x85c0	                           test eax, eax	      3003	buffer.c	FUNCTION_45	FOR_1	IF_4	CALL_23
0x400516c	            0x7430	                            je 0x400519e	      3003	buffer.c	FUNCTION_45	FOR_1	IF_4	CALL_23
0x400516e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3005	buffer.c	FUNCTION_45	FOR_1	IF_4	IF_5	CALL_24
0x4005172	    0x488b80481c00	          mov rax, qword [rax + 0x1c48] 	      3005	buffer.c	FUNCTION_45	FOR_1	IF_4	IF_5	CALL_24
0x4005179	          0x4889c7	                            mov rdi, rax	      3005	buffer.c	FUNCTION_45	FOR_1	IF_4	IF_5	CALL_24
0x400517c	      0xe800000000	                          call 0x4005181	      3005	buffer.c	FUNCTION_45	FOR_1	IF_4	IF_5	CALL_24
0x4005181	            0x85c0	                           test eax, eax	      3005	buffer.c	FUNCTION_45	FOR_1	IF_4	IF_5	CALL_24
0x4005183	            0x7409	                            je 0x400518e	      3005	buffer.c	FUNCTION_45	FOR_1	IF_4	IF_5	CALL_24
0x4005185	    0xc745d83f0000	           mov dword [rbp - 0x28], 0x3f 	      3006	buffer.c	FUNCTION_45	FOR_1	IF_4	IF_5
0x400518c	            0xeb07	                           jmp 0x4005195	      3006	buffer.c	FUNCTION_45	FOR_1	IF_4	IF_5
0x400518e	    0xc745d8520000	           mov dword [rbp - 0x28], 0x52 	      3008	buffer.c	FUNCTION_45	FOR_1	IF_4	ELSE_2
0x4005195	    0xc745dc200000	           mov dword [rbp - 0x24], 0x20 	      3009	buffer.c	FUNCTION_45	FOR_1	IF_4
0x400519c	            0xeb4b	                           jmp 0x40051e9	      3009	buffer.c	FUNCTION_45	FOR_1	IF_4
0x400519e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3012	buffer.c	FUNCTION_45	FOR_1	ELSE_3	IF_6
0x40051a2	    0x488b80481c00	          mov rax, qword [rax + 0x1c48] 	      3012	buffer.c	FUNCTION_45	FOR_1	ELSE_3	IF_6
0x40051a9	          0x4885c0	                           test rax, rax	      3012	buffer.c	FUNCTION_45	FOR_1	ELSE_3	IF_6
0x40051ac	            0x7409	                            je 0x40051b7	      3012	buffer.c	FUNCTION_45	FOR_1	ELSE_3	IF_6
0x40051ae	    0xc745d8460000	           mov dword [rbp - 0x28], 0x46 	      3013	buffer.c	FUNCTION_45	FOR_1	ELSE_3	IF_6
0x40051b5	            0xeb32	                           jmp 0x40051e9	      3013	buffer.c	FUNCTION_45	FOR_1	ELSE_3	IF_6
0x40051b7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3016	buffer.c	FUNCTION_45	FOR_1	ELSE_4
0x40051bb	    0x8b8040150000	          mov eax, dword [rax + 0x1540] 	      3016	buffer.c	FUNCTION_45	FOR_1	ELSE_4
0x40051c1	            0x85c0	                           test eax, eax	      3016	buffer.c	FUNCTION_45	FOR_1	ELSE_4
0x40051c3	            0x741c	                            je 0x40051e1	      3016	buffer.c	FUNCTION_45	FOR_1	ELSE_4
0x40051c5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3016	buffer.c	FUNCTION_45	FOR_1	ELSE_4
0x40051c9	    0x8b8060150000	          mov eax, dword [rax + 0x1560] 	      3016	buffer.c	FUNCTION_45	FOR_1	ELSE_4
0x40051cf	            0x85c0	                           test eax, eax	      3016	buffer.c	FUNCTION_45	FOR_1	ELSE_4
0x40051d1	            0x7407	                            je 0x40051da	      3016	buffer.c	FUNCTION_45	FOR_1	ELSE_4
0x40051d3	      0xb83d000000	                           mov eax, 0x3d	      3016	buffer.c	FUNCTION_45	FOR_1	ELSE_4
0x40051d8	            0xeb0c	                           jmp 0x40051e6	      3016	buffer.c	FUNCTION_45	FOR_1	ELSE_4
0x40051da	      0xb820000000	                           mov eax, 0x20	      3016	buffer.c	FUNCTION_45	FOR_1	ELSE_4
0x40051df	            0xeb05	                           jmp 0x40051e6	      3016	buffer.c	FUNCTION_45	FOR_1	ELSE_4
0x40051e1	      0xb82d000000	                           mov eax, 0x2d	      3016	buffer.c	FUNCTION_45	FOR_1	ELSE_4
0x40051e6	          0x8945d8	             mov dword [rbp - 0x28], eax	      3016	buffer.c	FUNCTION_45	FOR_1	ELSE_4
0x40051e9	      0xbf0a000000	                            mov edi, 0xa	      3018	buffer.c	FUNCTION_45	FOR_1	CALL_25
0x40051ee	      0xe800000000	                          call 0x40051f3	      3018	buffer.c	FUNCTION_45	FOR_1	CALL_25
0x40051f3	    0x488b35000000	            mov rsi, qword [0x040051fa] 	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x40051fa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3024	buffer.c	FUNCTION_45	FOR_1
0x40051fe	        0x488b4008	                mov rax, qword [rax + 8]	      3024	buffer.c	FUNCTION_45	FOR_1
0x4005202	          0x4885c0	                           test rax, rax	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x4005205	            0x7419	                            je 0x4005220	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x4005207	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3025	buffer.c	FUNCTION_45	FOR_1
0x400520b	          0x8b4078	            mov eax, dword [rax + 0x78] 	      3025	buffer.c	FUNCTION_45	FOR_1
0x400520e	            0x85c0	                           test eax, eax	      3025	buffer.c	FUNCTION_45	FOR_1
0x4005210	            0x7507	                           jne 0x4005219	      3025	buffer.c	FUNCTION_45	FOR_1
0x4005212	      0xb868000000	                           mov eax, 0x68	      3025	buffer.c	FUNCTION_45	FOR_1
0x4005217	            0xeb0c	                           jmp 0x4005225	      3025	buffer.c	FUNCTION_45	FOR_1
0x4005219	      0xb861000000	                           mov eax, 0x61	      3025	buffer.c	FUNCTION_45	FOR_1
0x400521e	            0xeb05	                           jmp 0x4005225	      3025	buffer.c	FUNCTION_45	FOR_1
0x4005220	      0xb820000000	                           mov eax, 0x20	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x4005225	    0x488b15000000	            mov rdx, qword [0x0400522c] 	      3022	buffer.c	FUNCTION_45	FOR_1
0x400522c	        0x483955e8	            cmp qword [rbp - 0x18], rdx 	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x4005230	            0x7429	                            je 0x400525b	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x4005232	    0x488b15000000	            mov rdx, qword [0x04005239] 	      3023	buffer.c	FUNCTION_45	FOR_1
0x4005239	    0x8b8a78010000	           mov ecx, dword [rdx + 0x178] 	      3023	buffer.c	FUNCTION_45	FOR_1
0x400523f	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3023	buffer.c	FUNCTION_45	FOR_1
0x4005243	    0x8b92b8000000	            mov edx, dword [rdx + 0xb8] 	      3023	buffer.c	FUNCTION_45	FOR_1
0x4005249	            0x39d1	                            cmp ecx, edx	      3023	buffer.c	FUNCTION_45	FOR_1
0x400524b	            0x7507	                           jne 0x4005254	      3023	buffer.c	FUNCTION_45	FOR_1
0x400524d	      0xba23000000	                           mov edx, 0x23	      3023	buffer.c	FUNCTION_45	FOR_1
0x4005252	            0xeb0c	                           jmp 0x4005260	      3023	buffer.c	FUNCTION_45	FOR_1
0x4005254	      0xba20000000	                           mov edx, 0x20	      3023	buffer.c	FUNCTION_45	FOR_1
0x4005259	            0xeb05	                           jmp 0x4005260	      3023	buffer.c	FUNCTION_45	FOR_1
0x400525b	      0xba25000000	                           mov edx, 0x25	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x4005260	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      3021	buffer.c	FUNCTION_45	FOR_1
0x4005264	    0x8b8924140000	          mov ecx, dword [rcx + 0x1424] 	      3021	buffer.c	FUNCTION_45	FOR_1
0x400526a	            0x85c9	                           test ecx, ecx	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x400526c	            0x7408	                            je 0x4005276	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x400526e	    0x41b820000000	                           mov r8d, 0x20	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x4005274	            0xeb06	                           jmp 0x400527c	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x4005276	    0x41b875000000	                           mov r8d, 0x75	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x400527c	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x4005280	    0x8b89b8000000	            mov ecx, dword [rcx + 0xb8] 	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x4005286	    0x488b3d000000	            mov rdi, qword [0x0400528d] 	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x400528d	              0x56	                                push rsi	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x400528e	          0x8b75dc	             mov esi, dword [rbp - 0x24]	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x4005291	              0x56	                                push rsi	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x4005292	          0x8b75d8	             mov esi, dword [rbp - 0x28]	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x4005295	              0x56	                                push rsi	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x4005296	              0x50	                                push rax	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x4005297	          0x4189d1	                            mov r9d, edx	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x400529a	      0xba00000000	                              mov edx, 0	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x400529f	      0xbeed030000	                          mov esi, 0x3ed	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x40052a4	      0xb800000000	                              mov eax, 0	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x40052a9	      0xe800000000	                          call 0x40052ae	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x40052ae	        0x4883c420	                           add rsp, 0x20	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x40052b2	          0x8945d0	             mov dword [rbp - 0x30], eax	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x40052b5	    0x817dd0ed0300	          cmp dword [rbp - 0x30], 0x3ed 	      3029	buffer.c	FUNCTION_45	FOR_1	IF_7
0x40052bc	            0x7e07	                           jle 0x40052c5	      3029	buffer.c	FUNCTION_45	FOR_1	IF_7
0x40052be	    0xc745d0ed0300	          mov dword [rbp - 0x30], 0x3ed 	      3030	buffer.c	FUNCTION_45	FOR_1	IF_7
0x40052c5	    0x488b05000000	            mov rax, qword [0x040052cc] 	      3033	buffer.c	FUNCTION_45	FOR_1	CALL_27
0x40052cc	          0x4889c7	                            mov rdi, rax	      3033	buffer.c	FUNCTION_45	FOR_1	CALL_27
0x40052cf	      0xe800000000	                          call 0x40052d4	      3033	buffer.c	FUNCTION_45	FOR_1	CALL_27
0x40052d4	      0xba28000000	                           mov edx, 0x28	      3033	buffer.c	FUNCTION_45	FOR_1	CALL_27
0x40052d9	            0x29c2	                            sub edx, eax	      3033	buffer.c	FUNCTION_45	FOR_1	CALL_27
0x40052db	            0x89d0	                            mov eax, edx	      3033	buffer.c	FUNCTION_45	FOR_1	CALL_27
0x40052dd	          0x8945d4	             mov dword [rbp - 0x2c], eax	      3033	buffer.c	FUNCTION_45	FOR_1	CALL_27
0x40052e0	    0x488b0d000000	            mov rcx, qword [0x040052e7] 	      3036	buffer.c	FUNCTION_45	FOR_1	DO_1
0x40052e7	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      3036	buffer.c	FUNCTION_45	FOR_1	DO_1
0x40052ea	          0x8d5001	                      lea edx, [rax + 1]	      3036	buffer.c	FUNCTION_45	FOR_1	DO_1
0x40052ed	          0x8955d0	             mov dword [rbp - 0x30], edx	      3036	buffer.c	FUNCTION_45	FOR_1	DO_1
0x40052f0	            0x4898	                                    cdqe	      3036	buffer.c	FUNCTION_45	FOR_1	DO_1
0x40052f2	          0x4801c8	                            add rax, rcx	      3036	buffer.c	FUNCTION_45	FOR_1	DO_1
0x40052f5	          0xc60020	                    mov byte [rax], 0x20	      3036	buffer.c	FUNCTION_45	FOR_1	DO_1
0x40052f8	        0x836dd401	               sub dword [rbp - 0x2c], 1	      3037	buffer.c	FUNCTION_45	FOR_1	DO_1
0x40052fc	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      3037	buffer.c	FUNCTION_45	FOR_1	DO_1
0x4005300	            0x7e09	                           jle 0x400530b	      3037	buffer.c	FUNCTION_45	FOR_1	DO_1
0x4005302	    0x817dd0ee0300	          cmp dword [rbp - 0x30], 0x3ee 	      3037	buffer.c	FUNCTION_45	FOR_1	DO_1
0x4005309	            0x7ed5	                           jle 0x40052e0	      3037	buffer.c	FUNCTION_45	FOR_1	DO_1
0x400530b	    0x488b05000000	            mov rax, qword [0x04005312] 	      3039	buffer.c	FUNCTION_45	FOR_1	CALL_29
0x4005312	        0x483945e8	            cmp qword [rbp - 0x18], rax 	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x4005316	            0x750d	                           jne 0x4005325	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x4005318	    0x488b05000000	            mov rax, qword [0x0400531f] 	      3039	buffer.c	FUNCTION_45	FOR_1	CALL_29
0x400531f	        0x488b5838	            mov rbx, qword [rax + 0x38] 	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x4005323	            0xeb0f	                           jmp 0x4005334	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x4005325	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x4005329	          0x4889c7	                            mov rdi, rax	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x400532c	      0xe800000000	                          call 0x4005331	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x4005331	          0x4889c3	                            mov rbx, rax	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x4005334	      0xbf00000000	                              mov edi, 0	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x4005339	      0xe800000000	                          call 0x400533e	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x400533e	          0x4889c6	                            mov rsi, rax	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x4005341	      0xb801040000	                          mov eax, 0x401	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x4005346	          0x2b45d0	             sub eax, dword [rbp - 0x30]	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x4005349	            0x4898	                                    cdqe	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x400534b	    0x488b0d000000	            mov rcx, qword [0x04005352] 	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x4005352	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x4005355	          0x4863d2	                         movsxd rdx, edx	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x4005358	        0x488d3c11	                    lea rdi, [rcx + rdx]	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x400535c	          0x4889d9	                            mov rcx, rbx	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x400535f	          0x4889f2	                            mov rdx, rsi	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x4005362	          0x4889c6	                            mov rsi, rax	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x4005365	      0xb800000000	                              mov eax, 0	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x400536a	      0xe800000000	                          call 0x400536f	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x400536f	    0x488b05000000	            mov rax, qword [0x04005376] 	      3041	buffer.c	FUNCTION_45	FOR_1	CALL_31
0x4005376	          0x4889c7	                            mov rdi, rax	      3041	buffer.c	FUNCTION_45	FOR_1	CALL_31
0x4005379	      0xe800000000	                          call 0x400537e	      3041	buffer.c	FUNCTION_45	FOR_1	CALL_31
0x400537e	      0xe800000000	                          call 0x4005383	      3042	buffer.c	FUNCTION_45	FOR_1	CALL_32
0x4005383	      0xe800000000	                          call 0x4005388	      3043	buffer.c	FUNCTION_45	FOR_1	CALL_33
0x4005388	            0xeb04	                           jmp 0x400538e	      3043	buffer.c	FUNCTION_45	FOR_1	CALL_33
0x400538a	              0x90	                                     nop	      2992	buffer.c	FUNCTION_45	FOR_1	IF_1
0x400538b	            0xeb01	                           jmp 0x400538e	      2992	buffer.c	FUNCTION_45	FOR_1	IF_1
0x400538d	              0x90	                                     nop	      2998	buffer.c	FUNCTION_45	FOR_1	IF_3
0x400538e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2963	buffer.c	FUNCTION_45	FOR_1
0x4005392	        0x488b4068	            mov rax, qword [rax + 0x68] 	      2963	buffer.c	FUNCTION_45	FOR_1
0x4005396	        0x488945e8	             mov qword [rbp - 0x18], rax	      2963	buffer.c	FUNCTION_45	FOR_1
0x400539a	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2963	buffer.c	FUNCTION_45	FOR_1
0x400539f	            0x740e	                            je 0x40053af	      2963	buffer.c	FUNCTION_45	FOR_1
0x40053a1	    0x8b0500000000	            mov eax, dword [0x040053a7] 	      2963	buffer.c	FUNCTION_45	FOR_1
0x40053a7	            0x85c0	                           test eax, eax	      2963	buffer.c	FUNCTION_45	FOR_1
0x40053a9	     0xf8416faffff	                            je 0x4004dc5	      2963	buffer.c	FUNCTION_45	FOR_1
0x40053af	              0x90	                                     nop	      3045	buffer.c	FUNCTION_45
0x40053b0	        0x488b5df8	                mov rbx, qword [rbp - 8]	      3045	buffer.c	FUNCTION_45
0x40053b4	              0xc9	                                   leave	      3045	buffer.c	FUNCTION_45
0x40053b5	              0xc3	                                     ret	      3045	buffer.c	FUNCTION_45
buf_delete_all_signs	CALL,2:functions,0:SWITCH,0:FOR,0:ELSE,0:DO,0:WHILE,0:IF,1	21
0x400c0ed	              0x55	                                push rbp	      6075	buffer.c	FUNCTION_98
0x400c0ee	          0x4889e5	                            mov rbp, rsp	      6075	buffer.c	FUNCTION_98
0x400c0f1	        0x4883ec10	                           sub rsp, 0x10	      6075	buffer.c	FUNCTION_98
0x400c0f5	    0x488b05000000	            mov rax, qword [0x0400c0fc] 	      6078	buffer.c	FUNCTION_98	CALL_1
0x400c0fc	        0x488945f8	                mov qword [rbp - 8], rax	      6078	buffer.c	FUNCTION_98	CALL_1
0x400c100	            0xeb28	                           jmp 0x400c12a	      6078	buffer.c	FUNCTION_98	CALL_1
0x400c102	        0x488b45f8	                mov rax, qword [rbp - 8]	      6079	buffer.c	FUNCTION_98	IF_1
0x400c106	    0x488b80201c00	          mov rax, qword [rax + 0x1c20] 	      6079	buffer.c	FUNCTION_98	IF_1
0x400c10d	          0x4885c0	                           test rax, rax	      6079	buffer.c	FUNCTION_98	IF_1
0x400c110	            0x740c	                            je 0x400c11e	      6079	buffer.c	FUNCTION_98	IF_1
0x400c112	        0x488b45f8	                mov rax, qword [rbp - 8]	      6080	buffer.c	FUNCTION_98	CALL_2
0x400c116	          0x4889c7	                            mov rdi, rax	      6080	buffer.c	FUNCTION_98	CALL_2
0x400c119	      0xe800000000	                          call 0x400c11e	      6080	buffer.c	FUNCTION_98	CALL_2
0x400c11e	        0x488b45f8	                mov rax, qword [rbp - 8]	      6078	buffer.c	FUNCTION_98	CALL_1
0x400c122	        0x488b4068	            mov rax, qword [rax + 0x68] 	      6078	buffer.c	FUNCTION_98	CALL_1
0x400c126	        0x488945f8	                mov qword [rbp - 8], rax	      6078	buffer.c	FUNCTION_98	CALL_1
0x400c12a	      0x48837df800	                  cmp qword [rbp - 8], 0	      6078	buffer.c	FUNCTION_98	CALL_1
0x400c12f	            0x75d1	                           jne 0x400c102	      6078	buffer.c	FUNCTION_98	CALL_1
0x400c131	              0x90	                                     nop	      6081	buffer.c	FUNCTION_98
0x400c132	              0xc9	                                   leave	      6081	buffer.c	FUNCTION_98
0x400c133	              0xc3	                                     ret	      6081	buffer.c	FUNCTION_98
col_print	CALL,2:functions,0:SWITCH,0:FOR,0:ELSE,1:DO,0:WHILE,0:IF,1	32
0x4006207	              0x55	                                push rbp	      3521	buffer.c	FUNCTION_60
0x4006208	          0x4889e5	                            mov rbp, rsp	      3521	buffer.c	FUNCTION_60
0x400620b	        0x4883ec20	                           sub rsp, 0x20	      3521	buffer.c	FUNCTION_60
0x400620f	        0x48897df8	                mov qword [rbp - 8], rdi	      3521	buffer.c	FUNCTION_60
0x4006213	        0x488975f0	             mov qword [rbp - 0x10], rsi	      3521	buffer.c	FUNCTION_60
0x4006217	          0x8955ec	             mov dword [rbp - 0x14], edx	      3521	buffer.c	FUNCTION_60
0x400621a	          0x894de8	             mov dword [rbp - 0x18], ecx	      3521	buffer.c	FUNCTION_60
0x400621d	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3522	buffer.c	FUNCTION_60	IF_1
0x4006220	          0x3b45e8	             cmp eax, dword [rbp - 0x18]	      3522	buffer.c	FUNCTION_60	IF_1
0x4006223	            0x7521	                           jne 0x4006246	      3522	buffer.c	FUNCTION_60	IF_1
0x4006225	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      3523	buffer.c	FUNCTION_60	CALL_1
0x4006228	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      3523	buffer.c	FUNCTION_60	CALL_1
0x400622c	        0x488b45f8	                mov rax, qword [rbp - 8]	      3523	buffer.c	FUNCTION_60	CALL_1
0x4006230	            0x89d1	                            mov ecx, edx	      3523	buffer.c	FUNCTION_60	CALL_1
0x4006232	      0xba00000000	                              mov edx, 0	      3523	buffer.c	FUNCTION_60	CALL_1
0x4006237	          0x4889c7	                            mov rdi, rax	      3523	buffer.c	FUNCTION_60	CALL_1
0x400623a	      0xb800000000	                              mov eax, 0	      3523	buffer.c	FUNCTION_60	CALL_1
0x400623f	      0xe800000000	                          call 0x4006244	      3523	buffer.c	FUNCTION_60	CALL_1
0x4006244	            0xeb25	                           jmp 0x400626b	      3526	buffer.c	FUNCTION_60
0x4006246	          0x8b4de8	             mov ecx, dword [rbp - 0x18]	      3525	buffer.c	FUNCTION_60	CALL_2
0x4006249	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      3525	buffer.c	FUNCTION_60	CALL_2
0x400624c	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      3525	buffer.c	FUNCTION_60	CALL_2
0x4006250	        0x488b45f8	                mov rax, qword [rbp - 8]	      3525	buffer.c	FUNCTION_60	CALL_2
0x4006254	          0x4189c8	                            mov r8d, ecx	      3525	buffer.c	FUNCTION_60	CALL_2
0x4006257	            0x89d1	                            mov ecx, edx	      3525	buffer.c	FUNCTION_60	CALL_2
0x4006259	      0xba00000000	                              mov edx, 0	      3525	buffer.c	FUNCTION_60	CALL_2
0x400625e	          0x4889c7	                            mov rdi, rax	      3525	buffer.c	FUNCTION_60	CALL_2
0x4006261	      0xb800000000	                              mov eax, 0	      3525	buffer.c	FUNCTION_60	CALL_2
0x4006266	      0xe800000000	                          call 0x400626b	      3525	buffer.c	FUNCTION_60	CALL_2
0x400626b	              0x90	                                     nop	      3526	buffer.c	FUNCTION_60
0x400626c	              0xc9	                                   leave	      3526	buffer.c	FUNCTION_60
0x400626d	              0xc3	                                     ret	      3526	buffer.c	FUNCTION_60
buf_findsigntype_id	CALL,0:functions,0:SWITCH,0:FOR,1:ELSE,0:DO,0:WHILE,0:IF,1	28
0x400bfa4	              0x55	                                push rbp	      6016	buffer.c	FUNCTION_95
0x400bfa5	          0x4889e5	                            mov rbp, rsp	      6016	buffer.c	FUNCTION_95
0x400bfa8	        0x48897de8	             mov qword [rbp - 0x18], rdi	      6016	buffer.c	FUNCTION_95
0x400bfac	        0x488975e0	             mov qword [rbp - 0x20], rsi	      6016	buffer.c	FUNCTION_95
0x400bfb0	          0x8955dc	             mov dword [rbp - 0x24], edx	      6016	buffer.c	FUNCTION_95
0x400bfb3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6019	buffer.c	FUNCTION_95	FOR_1
0x400bfb7	    0x488b80201c00	          mov rax, qword [rax + 0x1c20] 	      6019	buffer.c	FUNCTION_95	FOR_1
0x400bfbe	        0x488945f8	                mov qword [rbp - 8], rax	      6019	buffer.c	FUNCTION_95	FOR_1
0x400bfc2	            0xeb2e	                           jmp 0x400bff2	      6019	buffer.c	FUNCTION_95	FOR_1
0x400bfc4	        0x488b45f8	                mov rax, qword [rbp - 8]	      6020	buffer.c	FUNCTION_95	FOR_1	IF_1
0x400bfc8	        0x488b4008	                mov rax, qword [rax + 8]	      6020	buffer.c	FUNCTION_95	FOR_1	IF_1
0x400bfcc	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      6020	buffer.c	FUNCTION_95	FOR_1	IF_1
0x400bfd0	            0x7514	                           jne 0x400bfe6	      6020	buffer.c	FUNCTION_95	FOR_1	IF_1
0x400bfd2	        0x488b45f8	                mov rax, qword [rbp - 8]	      6020	buffer.c	FUNCTION_95	FOR_1	IF_1
0x400bfd6	          0x8b4010	            mov eax, dword [rax + 0x10] 	      6020	buffer.c	FUNCTION_95	FOR_1	IF_1
0x400bfd9	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	      6020	buffer.c	FUNCTION_95	FOR_1	IF_1
0x400bfdc	            0x7508	                           jne 0x400bfe6	      6020	buffer.c	FUNCTION_95	FOR_1	IF_1
0x400bfde	        0x488b45f8	                mov rax, qword [rbp - 8]	      6021	buffer.c	FUNCTION_95	FOR_1	IF_1
0x400bfe2	            0x8b00	                    mov eax, dword [rax]	      6021	buffer.c	FUNCTION_95	FOR_1	IF_1
0x400bfe4	            0xeb18	                           jmp 0x400bffe	      6021	buffer.c	FUNCTION_95	FOR_1	IF_1
0x400bfe6	        0x488b45f8	                mov rax, qword [rbp - 8]	      6019	buffer.c	FUNCTION_95	FOR_1
0x400bfea	        0x488b4018	            mov rax, qword [rax + 0x18] 	      6019	buffer.c	FUNCTION_95	FOR_1
0x400bfee	        0x488945f8	                mov qword [rbp - 8], rax	      6019	buffer.c	FUNCTION_95	FOR_1
0x400bff2	      0x48837df800	                  cmp qword [rbp - 8], 0	      6019	buffer.c	FUNCTION_95	FOR_1
0x400bff7	            0x75cb	                           jne 0x400bfc4	      6019	buffer.c	FUNCTION_95	FOR_1
0x400bff9	      0xb800000000	                              mov eax, 0	      6023	buffer.c	FUNCTION_95
0x400bffe	              0x5d	                                 pop rbp	      6024	buffer.c	FUNCTION_95
0x400bfff	              0xc3	                                     ret	      6024	buffer.c	FUNCTION_95
set_buflisted	CALL,2:functions,0:SWITCH,0:FOR,0:ELSE,1:DO,0:WHILE,0:IF,2	31
0x400c3d4	              0x55	                                push rbp	      6152	buffer.c	FUNCTION_101
0x400c3d5	          0x4889e5	                            mov rbp, rsp	      6152	buffer.c	FUNCTION_101
0x400c3d8	        0x4883ec10	                           sub rsp, 0x10	      6152	buffer.c	FUNCTION_101
0x400c3dc	          0x897dfc	                mov dword [rbp - 4], edi	      6152	buffer.c	FUNCTION_101
0x400c3df	    0x488b05000000	            mov rax, qword [0x0400c3e6] 	      6153	buffer.c	FUNCTION_101	IF_1
0x400c3e6	    0x8b8024140000	          mov eax, dword [rax + 0x1424] 	      6153	buffer.c	FUNCTION_101	IF_1
0x400c3ec	          0x3b45fc	                cmp eax, dword [rbp - 4]	      6153	buffer.c	FUNCTION_101	IF_1
0x400c3ef	            0x745e	                            je 0x400c44f	      6153	buffer.c	FUNCTION_101	IF_1
0x400c3f1	    0x488b05000000	            mov rax, qword [0x0400c3f8] 	      6155	buffer.c	FUNCTION_101	IF_1
0x400c3f8	          0x8b55fc	                mov edx, dword [rbp - 4]	      6155	buffer.c	FUNCTION_101	IF_1
0x400c3fb	    0x899024140000	          mov dword [rax + 0x1424], edx 	      6155	buffer.c	FUNCTION_101	IF_1
0x400c401	        0x837dfc00	                  cmp dword [rbp - 4], 0	      6156	buffer.c	FUNCTION_101	IF_1	IF_2
0x400c405	            0x7425	                            je 0x400c42c	      6156	buffer.c	FUNCTION_101	IF_1	IF_2
0x400c407	    0x488b05000000	            mov rax, qword [0x0400c40e] 	      6157	buffer.c	FUNCTION_101	IF_1	CALL_1
0x400c40e	          0x4989c0	                             mov r8, rax	      6157	buffer.c	FUNCTION_101	IF_1	CALL_1
0x400c411	      0xb900000000	                              mov ecx, 0	      6157	buffer.c	FUNCTION_101	IF_1	CALL_1
0x400c416	      0xba00000000	                              mov edx, 0	      6157	buffer.c	FUNCTION_101	IF_1	CALL_1
0x400c41b	      0xbe00000000	                              mov esi, 0	      6157	buffer.c	FUNCTION_101	IF_1	CALL_1
0x400c420	      0xbf00000000	                              mov edi, 0	      6157	buffer.c	FUNCTION_101	IF_1	CALL_1
0x400c425	      0xe800000000	                          call 0x400c42a	      6157	buffer.c	FUNCTION_101	IF_1	CALL_1
0x400c42a	            0xeb23	                           jmp 0x400c44f	      6161	buffer.c	FUNCTION_101
0x400c42c	    0x488b05000000	            mov rax, qword [0x0400c433] 	      6159	buffer.c	FUNCTION_101	IF_1	CALL_2
0x400c433	          0x4989c0	                             mov r8, rax	      6159	buffer.c	FUNCTION_101	IF_1	CALL_2
0x400c436	      0xb900000000	                              mov ecx, 0	      6159	buffer.c	FUNCTION_101	IF_1	CALL_2
0x400c43b	      0xba00000000	                              mov edx, 0	      6159	buffer.c	FUNCTION_101	IF_1	CALL_2
0x400c440	      0xbe00000000	                              mov esi, 0	      6159	buffer.c	FUNCTION_101	IF_1	CALL_2
0x400c445	      0xbf01000000	                              mov edi, 1	      6159	buffer.c	FUNCTION_101	IF_1	CALL_2
0x400c44a	      0xe800000000	                          call 0x400c44f	      6159	buffer.c	FUNCTION_101	IF_1	CALL_2
0x400c44f	              0x90	                                     nop	      6161	buffer.c	FUNCTION_101
0x400c450	              0xc9	                                   leave	      6161	buffer.c	FUNCTION_101
0x400c451	              0xc3	                                     ret	      6161	buffer.c	FUNCTION_101
otherfile_buf	CALL,5:functions,0:SWITCH,0:FOR,0:ELSE,0:DO,0:WHILE,0:IF,6	73
0x4005a05	              0x55	                                push rbp	      3322	buffer.c	FUNCTION_56
0x4005a06	          0x4889e5	                            mov rbp, rsp	      3322	buffer.c	FUNCTION_56
0x4005a09	    0x4881ecc00000	                           sub rsp, 0xc0	      3322	buffer.c	FUNCTION_56
0x4005a10	    0x4889bd58ffff	             mov qword [rbp - 0xa8], rdi	      3322	buffer.c	FUNCTION_56
0x4005a17	    0x4889b550ffff	             mov qword [rbp - 0xb0], rsi	      3322	buffer.c	FUNCTION_56
0x4005a1e	    0x48899548ffff	             mov qword [rbp - 0xb8], rdx	      3322	buffer.c	FUNCTION_56
0x4005a25	    0x64488b042528	                mov rax, qword fs:[0x28]	      3322	buffer.c	FUNCTION_56
0x4005a2e	        0x488945f8	                mov qword [rbp - 8], rax	      3322	buffer.c	FUNCTION_56
0x4005a32	            0x31c0	                            xor eax, eax	      3322	buffer.c	FUNCTION_56
0x4005a34	    0x4883bd50ffff	               cmp qword [rbp - 0xb0], 0	      3324	buffer.c	FUNCTION_56	IF_1
0x4005a3c	            0x7421	                            je 0x4005a5f	      3324	buffer.c	FUNCTION_56	IF_1
0x4005a3e	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      3324	buffer.c	FUNCTION_56	IF_1
0x4005a45	           0xfb600	                   movzx eax, byte [rax]	      3324	buffer.c	FUNCTION_56	IF_1
0x4005a48	            0x84c0	                             test al, al	      3324	buffer.c	FUNCTION_56	IF_1
0x4005a4a	            0x7413	                            je 0x4005a5f	      3324	buffer.c	FUNCTION_56	IF_1
0x4005a4c	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3324	buffer.c	FUNCTION_56	IF_1
0x4005a53	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      3324	buffer.c	FUNCTION_56	IF_1
0x4005a5a	          0x4885c0	                           test rax, rax	      3324	buffer.c	FUNCTION_56	IF_1
0x4005a5d	            0x750a	                           jne 0x4005a69	      3324	buffer.c	FUNCTION_56	IF_1
0x4005a5f	      0xb801000000	                              mov eax, 1	      3325	buffer.c	FUNCTION_56	IF_1
0x4005a64	      0xe9d4000000	                           jmp 0x4005b3d	      3325	buffer.c	FUNCTION_56	IF_1
0x4005a69	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3326	buffer.c	FUNCTION_56	IF_2	CALL_1
0x4005a70	    0x488b90880000	            mov rdx, qword [rax + 0x88] 	      3326	buffer.c	FUNCTION_56	IF_2	CALL_1
0x4005a77	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      3326	buffer.c	FUNCTION_56	IF_2	CALL_1
0x4005a7e	          0x4889d6	                            mov rsi, rdx	      3326	buffer.c	FUNCTION_56	IF_2	CALL_1
0x4005a81	          0x4889c7	                            mov rdi, rax	      3326	buffer.c	FUNCTION_56	IF_2	CALL_1
0x4005a84	      0xe800000000	                          call 0x4005a89	      3326	buffer.c	FUNCTION_56	IF_2	CALL_1
0x4005a89	            0x85c0	                           test eax, eax	      3326	buffer.c	FUNCTION_56	IF_2	CALL_1
0x4005a8b	            0x750a	                           jne 0x4005a97	      3326	buffer.c	FUNCTION_56	IF_2	CALL_1
0x4005a8d	      0xb800000000	                              mov eax, 0	      3327	buffer.c	FUNCTION_56	IF_2
0x4005a92	      0xe9a6000000	                           jmp 0x4005b3d	      3327	buffer.c	FUNCTION_56	IF_2
0x4005a97	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	      3333	buffer.c	FUNCTION_56	IF_3
0x4005a9f	            0x7547	                           jne 0x4005ae8	      3333	buffer.c	FUNCTION_56	IF_3
0x4005aa1	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3335	buffer.c	FUNCTION_56	IF_3	IF_4	CALL_2
0x4005aa8	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      3335	buffer.c	FUNCTION_56	IF_3	IF_4	CALL_2
0x4005aae	            0x85c0	                           test eax, eax	      3335	buffer.c	FUNCTION_56	IF_3	IF_4	CALL_2
0x4005ab0	            0x741d	                            je 0x4005acf	      3335	buffer.c	FUNCTION_56	IF_3	IF_4	CALL_2
0x4005ab2	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	      3335	buffer.c	FUNCTION_56	IF_3	IF_4	CALL_2
0x4005ab9	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      3335	buffer.c	FUNCTION_56	IF_3	IF_4	CALL_2
0x4005ac0	          0x4889d6	                            mov rsi, rdx	      3335	buffer.c	FUNCTION_56	IF_3	IF_4	CALL_2
0x4005ac3	          0x4889c7	                            mov rdi, rax	      3335	buffer.c	FUNCTION_56	IF_3	IF_4	CALL_2
0x4005ac6	      0xe800000000	                          call 0x4005acb	      3335	buffer.c	FUNCTION_56	IF_3	IF_4	CALL_2
0x4005acb	            0x85c0	                           test eax, eax	      3335	buffer.c	FUNCTION_56	IF_3	IF_4	CALL_2
0x4005acd	            0x790b	                           jns 0x4005ada	      3335	buffer.c	FUNCTION_56	IF_3	IF_4	CALL_2
0x4005acf	    0x48c78560ffff	mov qword [rbp - 0xa0], 0xffffffffffffffff	      3336	buffer.c	FUNCTION_56	IF_3	IF_4
0x4005ada	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	      3337	buffer.c	FUNCTION_56	IF_3
0x4005ae1	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      3337	buffer.c	FUNCTION_56	IF_3
0x4005ae8	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	      3348	buffer.c	FUNCTION_56	IF_5	CALL_3
0x4005aef	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3348	buffer.c	FUNCTION_56	IF_5	CALL_3
0x4005af6	          0x4889d6	                            mov rsi, rdx	      3348	buffer.c	FUNCTION_56	IF_5	CALL_3
0x4005af9	          0x4889c7	                            mov rdi, rax	      3348	buffer.c	FUNCTION_56	IF_5	CALL_3
0x4005afc	      0xe80f010000	                   call sym.buf_same_ino	      3348	buffer.c	FUNCTION_56	IF_5	CALL_3
0x4005b01	            0x85c0	                           test eax, eax	      3348	buffer.c	FUNCTION_56	IF_5	CALL_3
0x4005b03	            0x7433	                            je 0x4005b38	      3348	buffer.c	FUNCTION_56	IF_5	CALL_3
0x4005b05	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3350	buffer.c	FUNCTION_56	IF_5	CALL_4
0x4005b0c	          0x4889c7	                            mov rdi, rax	      3350	buffer.c	FUNCTION_56	IF_5	CALL_4
0x4005b0f	      0xe800000000	                          call 0x4005b14	      3350	buffer.c	FUNCTION_56	IF_5	CALL_4
0x4005b14	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	      3351	buffer.c	FUNCTION_56	IF_5	IF_6	CALL_5
0x4005b1b	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3351	buffer.c	FUNCTION_56	IF_5	IF_6	CALL_5
0x4005b22	          0x4889d6	                            mov rsi, rdx	      3351	buffer.c	FUNCTION_56	IF_5	IF_6	CALL_5
0x4005b25	          0x4889c7	                            mov rdi, rax	      3351	buffer.c	FUNCTION_56	IF_5	IF_6	CALL_5
0x4005b28	      0xe8e3000000	                   call sym.buf_same_ino	      3351	buffer.c	FUNCTION_56	IF_5	IF_6	CALL_5
0x4005b2d	            0x85c0	                           test eax, eax	      3351	buffer.c	FUNCTION_56	IF_5	IF_6	CALL_5
0x4005b2f	            0x7407	                            je 0x4005b38	      3351	buffer.c	FUNCTION_56	IF_5	IF_6	CALL_5
0x4005b31	      0xb800000000	                              mov eax, 0	      3352	buffer.c	FUNCTION_56	IF_5	IF_6
0x4005b36	            0xeb05	                           jmp 0x4005b3d	      3352	buffer.c	FUNCTION_56	IF_5	IF_6
0x4005b38	      0xb801000000	                              mov eax, 1	      3356	buffer.c	FUNCTION_56
0x4005b3d	        0x488b4df8	                mov rcx, qword [rbp - 8]	      3357	buffer.c	FUNCTION_56
0x4005b41	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3357	buffer.c	FUNCTION_56
0x4005b4a	            0x7405	                            je 0x4005b51	      3357	buffer.c	FUNCTION_56
0x4005b4c	      0xe800000000	                          call 0x4005b51	      3357	buffer.c	FUNCTION_56
0x4005b51	              0xc9	                                   leave	      3357	buffer.c	FUNCTION_56
0x4005b52	              0xc3	                                     ret	      3357	buffer.c	FUNCTION_56
write_viminfo_bufferlist	CALL,8:functions,1:SWITCH,0:FOR,0:ELSE,0:DO,0:WHILE,0:IF,2	127
0x400b44f	              0x55	                                push rbp	      5545	buffer.c	FUNCTION_76
0x400b450	          0x4889e5	                            mov rbp, rsp	      5545	buffer.c	FUNCTION_76
0x400b453	        0x4883ec40	                           sub rsp, 0x40	      5545	buffer.c	FUNCTION_76
0x400b457	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      5545	buffer.c	FUNCTION_76
0x400b45b	      0xbf25000000	                           mov edi, 0x25	      5552	buffer.c	FUNCTION_76	IF_1	CALL_1
0x400b460	      0xe800000000	                          call 0x400b465	      5552	buffer.c	FUNCTION_76	IF_1	CALL_1
0x400b465	          0x4885c0	                           test rax, rax	      5552	buffer.c	FUNCTION_76	IF_1	CALL_1
0x400b468	     0xf84da010000	                            je 0x400b648	      5552	buffer.c	FUNCTION_76	IF_1	CALL_1
0x400b46e	      0xbf25000000	                           mov edi, 0x25	      5556	buffer.c	FUNCTION_76	CALL_2
0x400b473	      0xe800000000	                          call 0x400b478	      5556	buffer.c	FUNCTION_76	CALL_2
0x400b478	          0x8945dc	             mov dword [rbp - 0x24], eax	      5556	buffer.c	FUNCTION_76	CALL_2
0x400b47b	      0xbf28100000	                         mov edi, 0x1028	      5560	buffer.c	FUNCTION_76	CALL_3
0x400b480	      0xe800000000	                          call 0x400b485	      5560	buffer.c	FUNCTION_76	CALL_3
0x400b485	        0x488945f8	                mov qword [rbp - 8], rax	      5560	buffer.c	FUNCTION_76	CALL_3
0x400b489	      0x48837df800	                  cmp qword [rbp - 8], 0	      5561	buffer.c	FUNCTION_76	IF_2
0x400b48e	     0xf84b7010000	                            je 0x400b64b	      5561	buffer.c	FUNCTION_76	IF_2
0x400b494	    0x488b05000000	            mov rax, qword [0x0400b49b] 	      5564	buffer.c	FUNCTION_76	CALL_4
0x400b49b	        0x488945f0	             mov qword [rbp - 0x10], rax	      5564	buffer.c	FUNCTION_76	CALL_4
0x400b49f	            0xeb4e	                           jmp 0x400b4ef	      5564	buffer.c	FUNCTION_76	CALL_4
0x400b4a1	    0x488b05000000	            mov rax, qword [0x0400b4a8] 	      5564	buffer.c	FUNCTION_76	CALL_4
0x400b4a8	        0x483945f0	            cmp qword [rbp - 0x10], rax 	      5564	buffer.c	FUNCTION_76	CALL_4
0x400b4ac	            0x740a	                            je 0x400b4b8	      5564	buffer.c	FUNCTION_76	CALL_4
0x400b4ae	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5564	buffer.c	FUNCTION_76	CALL_4
0x400b4b2	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5564	buffer.c	FUNCTION_76	CALL_4
0x400b4b6	            0xeb07	                           jmp 0x400b4bf	      5564	buffer.c	FUNCTION_76	CALL_4
0x400b4b8	    0x488b05000000	            mov rax, qword [0x0400b4bf] 	      5564	buffer.c	FUNCTION_76	CALL_4
0x400b4bf	        0x488945e8	             mov qword [rbp - 0x18], rax	      5564	buffer.c	FUNCTION_76	CALL_4
0x400b4c3	            0xeb18	                           jmp 0x400b4dd	      5564	buffer.c	FUNCTION_76	CALL_4
0x400b4c5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5565	buffer.c	FUNCTION_76	CALL_5
0x400b4c9	          0x4889c7	                            mov rdi, rax	      5565	buffer.c	FUNCTION_76	CALL_5
0x400b4cc	      0xe800000000	                          call 0x400b4d1	      5565	buffer.c	FUNCTION_76	CALL_5
0x400b4d1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5564	buffer.c	FUNCTION_76	CALL_4
0x400b4d5	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5564	buffer.c	FUNCTION_76	CALL_4
0x400b4d9	        0x488945e8	             mov qword [rbp - 0x18], rax	      5564	buffer.c	FUNCTION_76	CALL_4
0x400b4dd	      0x48837de800	               cmp qword [rbp - 0x18], 0	      5564	buffer.c	FUNCTION_76	CALL_4
0x400b4e2	            0x75e1	                           jne 0x400b4c5	      5564	buffer.c	FUNCTION_76	CALL_4
0x400b4e4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5564	buffer.c	FUNCTION_76	CALL_4
0x400b4e8	          0x488b00	                    mov rax, qword [rax]	      5564	buffer.c	FUNCTION_76	CALL_4
0x400b4eb	        0x488945f0	             mov qword [rbp - 0x10], rax	      5564	buffer.c	FUNCTION_76	CALL_4
0x400b4ef	      0x48837df000	               cmp qword [rbp - 0x10], 0	      5564	buffer.c	FUNCTION_76	CALL_4
0x400b4f4	            0x75ab	                           jne 0x400b4a1	      5564	buffer.c	FUNCTION_76	CALL_4
0x400b4f6	      0xbf00000000	                              mov edi, 0	      5567	buffer.c	FUNCTION_76	CALL_7
0x400b4fb	      0xe800000000	                          call 0x400b500	      5567	buffer.c	FUNCTION_76	CALL_7
0x400b500	          0x4889c2	                            mov rdx, rax	      5567	buffer.c	FUNCTION_76	CALL_7
0x400b503	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5567	buffer.c	FUNCTION_76	CALL_7
0x400b507	          0x4889c6	                            mov rsi, rax	      5567	buffer.c	FUNCTION_76	CALL_7
0x400b50a	          0x4889d7	                            mov rdi, rdx	      5567	buffer.c	FUNCTION_76	CALL_7
0x400b50d	      0xe800000000	                          call 0x400b512	      5567	buffer.c	FUNCTION_76	CALL_7
0x400b512	    0x488b05000000	            mov rax, qword [0x0400b519] 	      5568	buffer.c	FUNCTION_76
0x400b519	        0x488945e0	             mov qword [rbp - 0x20], rax	      5568	buffer.c	FUNCTION_76
0x400b51d	      0xe90a010000	                           jmp 0x400b62c	      5568	buffer.c	FUNCTION_76
0x400b522	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5570	buffer.c	FUNCTION_76	FUNCTION_1	IF_1
0x400b526	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      5570	buffer.c	FUNCTION_76	FUNCTION_1	IF_1
0x400b52d	          0x4885c0	                           test rax, rax	      5570	buffer.c	FUNCTION_76	FUNCTION_1	IF_1
0x400b530	     0xf84e9000000	                            je 0x400b61f	      5570	buffer.c	FUNCTION_76	FUNCTION_1	IF_1
0x400b536	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5571	buffer.c	FUNCTION_76	FUNCTION_1	IF_1
0x400b53a	    0x8b8024140000	          mov eax, dword [rax + 0x1424] 	      5571	buffer.c	FUNCTION_76	FUNCTION_1	IF_1
0x400b540	            0x85c0	                           test eax, eax	      5571	buffer.c	FUNCTION_76	FUNCTION_1	IF_1
0x400b542	     0xf84d7000000	                            je 0x400b61f	      5571	buffer.c	FUNCTION_76	FUNCTION_1	IF_1
0x400b548	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5573	buffer.c	FUNCTION_76	FUNCTION_1	IF_1	CALL_1
0x400b54c	          0x4889c7	                            mov rdi, rax	      5573	buffer.c	FUNCTION_76	FUNCTION_1	IF_1	CALL_1
0x400b54f	      0xe800000000	                          call 0x400b554	      5573	buffer.c	FUNCTION_76	FUNCTION_1	IF_1	CALL_1
0x400b554	            0x85c0	                           test eax, eax	      5573	buffer.c	FUNCTION_76	FUNCTION_1	IF_1	CALL_1
0x400b556	     0xf85c3000000	                           jne 0x400b61f	      5573	buffer.c	FUNCTION_76	FUNCTION_1	IF_1	CALL_1
0x400b55c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5576	buffer.c	FUNCTION_76	FUNCTION_1	IF_1	CALL_2
0x400b560	          0x4889c7	                            mov rdi, rax	      5576	buffer.c	FUNCTION_76	FUNCTION_1	IF_1	CALL_2
0x400b563	      0xe800000000	                          call 0x400b568	      5576	buffer.c	FUNCTION_76	FUNCTION_1	IF_1	CALL_2
0x400b568	            0x85c0	                           test eax, eax	      5576	buffer.c	FUNCTION_76	FUNCTION_1	IF_1	CALL_2
0x400b56a	     0xf85af000000	                           jne 0x400b61f	      5576	buffer.c	FUNCTION_76	FUNCTION_1	IF_1	CALL_2
0x400b570	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5578	buffer.c	FUNCTION_76	FUNCTION_1	IF_1	CALL_3
0x400b574	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      5578	buffer.c	FUNCTION_76	FUNCTION_1	IF_1	CALL_3
0x400b57b	          0x4889c7	                            mov rdi, rax	      5578	buffer.c	FUNCTION_76	FUNCTION_1	IF_1	CALL_3
0x400b57e	      0xe800000000	                          call 0x400b583	      5578	buffer.c	FUNCTION_76	FUNCTION_1	IF_1	CALL_3
0x400b583	            0x85c0	                           test eax, eax	      5578	buffer.c	FUNCTION_76	FUNCTION_1	IF_1	CALL_3
0x400b585	     0xf8594000000	                           jne 0x400b61f	      5578	buffer.c	FUNCTION_76	FUNCTION_1	IF_1	CALL_3
0x400b58b	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      5581	buffer.c	FUNCTION_76	FUNCTION_1	IF_2
0x400b58e	          0x8d50ff	                      lea edx, [rax - 1]	      5581	buffer.c	FUNCTION_76	FUNCTION_1	IF_2
0x400b591	          0x8955dc	             mov dword [rbp - 0x24], edx	      5581	buffer.c	FUNCTION_76	FUNCTION_1	IF_2
0x400b594	            0x85c0	                           test eax, eax	      5581	buffer.c	FUNCTION_76	FUNCTION_1	IF_2
0x400b596	     0xf849d000000	                            je 0x400b639	      5581	buffer.c	FUNCTION_76	FUNCTION_1	IF_2
0x400b59c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5583	buffer.c	FUNCTION_76	FUNCTION_1	CALL_4
0x400b5a0	          0x4889c6	                            mov rsi, rax	      5583	buffer.c	FUNCTION_76	FUNCTION_1	CALL_4
0x400b5a3	      0xbf25000000	                           mov edi, 0x25	      5583	buffer.c	FUNCTION_76	FUNCTION_1	CALL_4
0x400b5a8	      0xe800000000	                          call 0x400b5ad	      5583	buffer.c	FUNCTION_76	FUNCTION_1	CALL_4
0x400b5ad	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5584	buffer.c	FUNCTION_76	FUNCTION_1	CALL_5
0x400b5b1	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      5584	buffer.c	FUNCTION_76	FUNCTION_1	CALL_5
0x400b5b8	        0x488b55f8	                mov rdx, qword [rbp - 8]	      5584	buffer.c	FUNCTION_76	FUNCTION_1	CALL_5
0x400b5bc	    0x41b801000000	                              mov r8d, 1	      5584	buffer.c	FUNCTION_76	FUNCTION_1	CALL_5
0x400b5c2	      0xb900100000	                         mov ecx, 0x1000	      5584	buffer.c	FUNCTION_76	FUNCTION_1	CALL_5
0x400b5c7	          0x4889c6	                            mov rsi, rax	      5584	buffer.c	FUNCTION_76	FUNCTION_1	CALL_5
0x400b5ca	      0xbf00000000	                              mov edi, 0	      5584	buffer.c	FUNCTION_76	FUNCTION_1	CALL_5
0x400b5cf	      0xe800000000	                          call 0x400b5d4	      5584	buffer.c	FUNCTION_76	FUNCTION_1	CALL_5
0x400b5d4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5585	buffer.c	FUNCTION_76	FUNCTION_1	CALL_6
0x400b5d8	    0x8b8830030000	           mov ecx, dword [rax + 0x330] 	      5585	buffer.c	FUNCTION_76	FUNCTION_1	CALL_6
0x400b5de	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5586	buffer.c	FUNCTION_76	FUNCTION_1
0x400b5e2	    0x488b90280300	           mov rdx, qword [rax + 0x328] 	      5586	buffer.c	FUNCTION_76	FUNCTION_1
0x400b5e9	        0x488b45f8	                mov rax, qword [rbp - 8]	      5585	buffer.c	FUNCTION_76	FUNCTION_1	CALL_6
0x400b5ed	          0x4189c8	                            mov r8d, ecx	      5585	buffer.c	FUNCTION_76	FUNCTION_1	CALL_6
0x400b5f0	          0x4889d1	                            mov rcx, rdx	      5585	buffer.c	FUNCTION_76	FUNCTION_1	CALL_6
0x400b5f3	      0xba00000000	                              mov edx, 0	      5585	buffer.c	FUNCTION_76	FUNCTION_1	CALL_6
0x400b5f8	      0xbe28100000	                         mov esi, 0x1028	      5585	buffer.c	FUNCTION_76	FUNCTION_1	CALL_6
0x400b5fd	          0x4889c7	                            mov rdi, rax	      5585	buffer.c	FUNCTION_76	FUNCTION_1	CALL_6
0x400b600	      0xb800000000	                              mov eax, 0	      5585	buffer.c	FUNCTION_76	FUNCTION_1	CALL_6
0x400b605	      0xe800000000	                          call 0x400b60a	      5585	buffer.c	FUNCTION_76	FUNCTION_1	CALL_6
0x400b60a	        0x488b55f8	                mov rdx, qword [rbp - 8]	      5588	buffer.c	FUNCTION_76	FUNCTION_1	CALL_7
0x400b60e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5588	buffer.c	FUNCTION_76	FUNCTION_1	CALL_7
0x400b612	          0x4889d6	                            mov rsi, rdx	      5588	buffer.c	FUNCTION_76	FUNCTION_1	CALL_7
0x400b615	          0x4889c7	                            mov rdi, rax	      5588	buffer.c	FUNCTION_76	FUNCTION_1	CALL_7
0x400b618	      0xe800000000	                          call 0x400b61d	      5588	buffer.c	FUNCTION_76	FUNCTION_1	CALL_7
0x400b61d	            0xeb01	                           jmp 0x400b620	      5588	buffer.c	FUNCTION_76	FUNCTION_1	CALL_7
0x400b61f	              0x90	                                     nop	      5579	buffer.c	FUNCTION_76	FUNCTION_1	IF_1
0x400b620	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5568	buffer.c	FUNCTION_76
0x400b624	        0x488b4068	            mov rax, qword [rax + 0x68] 	      5568	buffer.c	FUNCTION_76
0x400b628	        0x488945e0	             mov qword [rbp - 0x20], rax	      5568	buffer.c	FUNCTION_76
0x400b62c	      0x48837de000	               cmp qword [rbp - 0x20], 0	      5568	buffer.c	FUNCTION_76
0x400b631	     0xf85ebfeffff	                           jne 0x400b522	      5568	buffer.c	FUNCTION_76
0x400b637	            0xeb01	                           jmp 0x400b63a	      5568	buffer.c	FUNCTION_76
0x400b639	              0x90	                                     nop	      5582	buffer.c	FUNCTION_76	FUNCTION_1	IF_2
0x400b63a	        0x488b45f8	                mov rax, qword [rbp - 8]	      5590	buffer.c	FUNCTION_76	CALL_8
0x400b63e	          0x4889c7	                            mov rdi, rax	      5590	buffer.c	FUNCTION_76	CALL_8
0x400b641	      0xe800000000	                          call 0x400b646	      5590	buffer.c	FUNCTION_76	CALL_8
0x400b646	            0xeb04	                           jmp 0x400b64c	      5590	buffer.c	FUNCTION_76	CALL_8
0x400b648	              0x90	                                     nop	      5553	buffer.c	FUNCTION_76	IF_1
0x400b649	            0xeb01	                           jmp 0x400b64c	      5553	buffer.c	FUNCTION_76	IF_1
0x400b64b	              0x90	                                     nop	      5562	buffer.c	FUNCTION_76	IF_2
0x400b64c	              0xc9	                                   leave	      5591	buffer.c	FUNCTION_76
0x400b64d	              0xc3	                                     ret	      5591	buffer.c	FUNCTION_76
do_modelines	CALL,2:functions,0:SWITCH,0:FOR,2:ELSE,0:DO,0:WHILE,0:IF,4	73
0x400ad55	              0x55	                                push rbp	      5335	buffer.c	FUNCTION_73
0x400ad56	          0x4889e5	                            mov rbp, rsp	      5335	buffer.c	FUNCTION_73
0x400ad59	        0x4883ec20	                           sub rsp, 0x20	      5335	buffer.c	FUNCTION_73
0x400ad5d	          0x897dec	             mov dword [rbp - 0x14], edi	      5335	buffer.c	FUNCTION_73
0x400ad60	    0x488b05000000	            mov rax, qword [0x0400ad67] 	      5340	buffer.c	FUNCTION_73	IF_1
0x400ad67	    0x8b8038150000	          mov eax, dword [rax + 0x1538] 	      5340	buffer.c	FUNCTION_73	IF_1
0x400ad6d	            0x85c0	                           test eax, eax	      5340	buffer.c	FUNCTION_73	IF_1
0x400ad6f	     0xf84e6000000	                            je 0x400ae5b	      5340	buffer.c	FUNCTION_73	IF_1
0x400ad75	    0x488b05000000	            mov rax, qword [0x0400ad7c] 	      5340	buffer.c	FUNCTION_73	IF_1
0x400ad7c	          0x8945f4	              mov dword [rbp - 0xc], eax	      5340	buffer.c	FUNCTION_73	IF_1
0x400ad7f	        0x837df400	                cmp dword [rbp - 0xc], 0	      5340	buffer.c	FUNCTION_73	IF_1
0x400ad83	     0xf84d2000000	                            je 0x400ae5b	      5340	buffer.c	FUNCTION_73	IF_1
0x400ad89	    0x8b0500000000	            mov eax, dword [0x0400ad8f] 	      5345	buffer.c	FUNCTION_73	IF_2
0x400ad8f	            0x85c0	                           test eax, eax	      5345	buffer.c	FUNCTION_73	IF_2
0x400ad91	     0xf85c7000000	                           jne 0x400ae5e	      5345	buffer.c	FUNCTION_73	IF_2
0x400ad97	    0x8b0500000000	            mov eax, dword [0x0400ad9d] 	      5348	buffer.c	FUNCTION_73
0x400ad9d	          0x83c001	                              add eax, 1	      5348	buffer.c	FUNCTION_73
0x400ada0	    0x890500000000	            mov dword [0x0400ada6], eax 	      5348	buffer.c	FUNCTION_73
0x400ada6	    0x48c745f80100	                  mov qword [rbp - 8], 1	      5349	buffer.c	FUNCTION_73	FOR_1
0x400adae	            0xeb21	                           jmp 0x400add1	      5349	buffer.c	FUNCTION_73	FOR_1
0x400adb0	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      5351	buffer.c	FUNCTION_73	FOR_1	IF_3	CALL_1
0x400adb3	        0x488b45f8	                mov rax, qword [rbp - 8]	      5351	buffer.c	FUNCTION_73	FOR_1	IF_3	CALL_1
0x400adb7	            0x89d6	                            mov esi, edx	      5351	buffer.c	FUNCTION_73	FOR_1	IF_3	CALL_1
0x400adb9	          0x4889c7	                            mov rdi, rax	      5351	buffer.c	FUNCTION_73	FOR_1	IF_3	CALL_1
0x400adbc	      0xe8a0000000	                   call sym.chk_modeline	      5351	buffer.c	FUNCTION_73	FOR_1	IF_3	CALL_1
0x400adc1	            0x85c0	                           test eax, eax	      5351	buffer.c	FUNCTION_73	FOR_1	IF_3	CALL_1
0x400adc3	            0x7507	                           jne 0x400adcc	      5351	buffer.c	FUNCTION_73	FOR_1	IF_3	CALL_1
0x400adc5	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      5352	buffer.c	FUNCTION_73	FOR_1	IF_3
0x400adcc	      0x488345f801	                  add qword [rbp - 8], 1	      5350	buffer.c	FUNCTION_73	FOR_1
0x400add1	    0x488b05000000	            mov rax, qword [0x0400add8] 	      5349	buffer.c	FUNCTION_73	FOR_1
0x400add8	          0x488b00	                    mov rax, qword [rax]	      5349	buffer.c	FUNCTION_73	FOR_1
0x400addb	        0x483b45f8	                cmp rax, qword [rbp - 8]	      5349	buffer.c	FUNCTION_73	FOR_1
0x400addf	            0x7c0b	                            jl 0x400adec	      5349	buffer.c	FUNCTION_73	FOR_1
0x400ade1	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      5349	buffer.c	FUNCTION_73	FOR_1
0x400ade4	            0x4898	                                    cdqe	      5349	buffer.c	FUNCTION_73	FOR_1
0x400ade6	        0x483b45f8	                cmp rax, qword [rbp - 8]	      5349	buffer.c	FUNCTION_73	FOR_1
0x400adea	            0x7dc4	                           jge 0x400adb0	      5349	buffer.c	FUNCTION_73	FOR_1
0x400adec	    0x488b05000000	            mov rax, qword [0x0400adf3] 	      5354	buffer.c	FUNCTION_73	FOR_2
0x400adf3	          0x488b00	                    mov rax, qword [rax]	      5354	buffer.c	FUNCTION_73	FOR_2
0x400adf6	        0x488945f8	                mov qword [rbp - 8], rax	      5354	buffer.c	FUNCTION_73	FOR_2
0x400adfa	            0xeb21	                           jmp 0x400ae1d	      5354	buffer.c	FUNCTION_73	FOR_2
0x400adfc	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      5356	buffer.c	FUNCTION_73	FOR_2	IF_4	CALL_2
0x400adff	        0x488b45f8	                mov rax, qword [rbp - 8]	      5356	buffer.c	FUNCTION_73	FOR_2	IF_4	CALL_2
0x400ae03	            0x89d6	                            mov esi, edx	      5356	buffer.c	FUNCTION_73	FOR_2	IF_4	CALL_2
0x400ae05	          0x4889c7	                            mov rdi, rax	      5356	buffer.c	FUNCTION_73	FOR_2	IF_4	CALL_2
0x400ae08	      0xe854000000	                   call sym.chk_modeline	      5356	buffer.c	FUNCTION_73	FOR_2	IF_4	CALL_2
0x400ae0d	            0x85c0	                           test eax, eax	      5356	buffer.c	FUNCTION_73	FOR_2	IF_4	CALL_2
0x400ae0f	            0x7507	                           jne 0x400ae18	      5356	buffer.c	FUNCTION_73	FOR_2	IF_4	CALL_2
0x400ae11	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      5357	buffer.c	FUNCTION_73	FOR_2	IF_4
0x400ae18	      0x48836df801	                  sub qword [rbp - 8], 1	      5355	buffer.c	FUNCTION_73	FOR_2
0x400ae1d	      0x48837df800	                  cmp qword [rbp - 8], 0	      5354	buffer.c	FUNCTION_73	FOR_2
0x400ae22	            0x7e26	                           jle 0x400ae4a	      5354	buffer.c	FUNCTION_73	FOR_2
0x400ae24	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      5354	buffer.c	FUNCTION_73	FOR_2
0x400ae27	            0x4898	                                    cdqe	      5354	buffer.c	FUNCTION_73	FOR_2
0x400ae29	        0x483b45f8	                cmp rax, qword [rbp - 8]	      5354	buffer.c	FUNCTION_73	FOR_2
0x400ae2d	            0x7d1b	                           jge 0x400ae4a	      5354	buffer.c	FUNCTION_73	FOR_2
0x400ae2f	    0x488b05000000	            mov rax, qword [0x0400ae36] 	      5355	buffer.c	FUNCTION_73	FOR_2
0x400ae36	          0x488b10	                    mov rdx, qword [rax]	      5355	buffer.c	FUNCTION_73	FOR_2
0x400ae39	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      5355	buffer.c	FUNCTION_73	FOR_2
0x400ae3c	            0x4898	                                    cdqe	      5355	buffer.c	FUNCTION_73	FOR_2
0x400ae3e	          0x4829c2	                            sub rdx, rax	      5355	buffer.c	FUNCTION_73	FOR_2
0x400ae41	          0x4889d0	                            mov rax, rdx	      5355	buffer.c	FUNCTION_73	FOR_2
0x400ae44	        0x483b45f8	                cmp rax, qword [rbp - 8]	      5355	buffer.c	FUNCTION_73	FOR_2
0x400ae48	            0x7cb2	                            jl 0x400adfc	      5355	buffer.c	FUNCTION_73	FOR_2
0x400ae4a	    0x8b0500000000	            mov eax, dword [0x0400ae50] 	      5358	buffer.c	FUNCTION_73
0x400ae50	          0x83e801	                              sub eax, 1	      5358	buffer.c	FUNCTION_73
0x400ae53	    0x890500000000	            mov dword [0x0400ae59], eax 	      5358	buffer.c	FUNCTION_73
0x400ae59	            0xeb04	                           jmp 0x400ae5f	      5358	buffer.c	FUNCTION_73
0x400ae5b	              0x90	                                     nop	      5341	buffer.c	FUNCTION_73	IF_1
0x400ae5c	            0xeb01	                           jmp 0x400ae5f	      5341	buffer.c	FUNCTION_73	IF_1
0x400ae5e	              0x90	                                     nop	      5346	buffer.c	FUNCTION_73	IF_2
0x400ae5f	              0xc9	                                   leave	      5359	buffer.c	FUNCTION_73
0x400ae60	              0xc3	                                     ret	      5359	buffer.c	FUNCTION_73
bt_dontwrite_msg	CALL,3:functions,0:SWITCH,0:FOR,0:ELSE,0:DO,0:WHILE,0:IF,1	18
0x400b781	              0x55	                                push rbp	      5644	buffer.c	FUNCTION_82
0x400b782	          0x4889e5	                            mov rbp, rsp	      5644	buffer.c	FUNCTION_82
0x400b785	        0x4883ec10	                           sub rsp, 0x10	      5644	buffer.c	FUNCTION_82
0x400b789	        0x48897df8	                mov qword [rbp - 8], rdi	      5644	buffer.c	FUNCTION_82
0x400b78d	        0x488b45f8	                mov rax, qword [rbp - 8]	      5645	buffer.c	FUNCTION_82	IF_1	CALL_1
0x400b791	          0x4889c7	                            mov rdi, rax	      5645	buffer.c	FUNCTION_82	IF_1	CALL_1
0x400b794	      0xe800000000	                          call 0x400b799	      5645	buffer.c	FUNCTION_82	IF_1	CALL_1
0x400b799	            0x85c0	                           test eax, eax	      5645	buffer.c	FUNCTION_82	IF_1	CALL_1
0x400b79b	            0x7419	                            je 0x400b7b6	      5645	buffer.c	FUNCTION_82	IF_1	CALL_1
0x400b79d	      0xbf00000000	                              mov edi, 0	      5647	buffer.c	FUNCTION_82	IF_1	CALL_3
0x400b7a2	      0xe800000000	                          call 0x400b7a7	      5647	buffer.c	FUNCTION_82	IF_1	CALL_3
0x400b7a7	          0x4889c7	                            mov rdi, rax	      5647	buffer.c	FUNCTION_82	IF_1	CALL_3
0x400b7aa	      0xe800000000	                          call 0x400b7af	      5647	buffer.c	FUNCTION_82	IF_1	CALL_3
0x400b7af	      0xb801000000	                              mov eax, 1	      5648	buffer.c	FUNCTION_82	IF_1
0x400b7b4	            0xeb05	                           jmp 0x400b7bb	      5648	buffer.c	FUNCTION_82	IF_1
0x400b7b6	      0xb800000000	                              mov eax, 0	      5650	buffer.c	FUNCTION_82
0x400b7bb	              0xc9	                                   leave	      5651	buffer.c	FUNCTION_82
0x400b7bc	              0xc3	                                     ret	      5651	buffer.c	FUNCTION_82
buf_signcount	CALL,1:functions,0:SWITCH,0:FOR,1:ELSE,0:DO,0:WHILE,0:IF,2	29
0x400c000	              0x55	                                push rbp	      6031	buffer.c	FUNCTION_96
0x400c001	          0x4889e5	                            mov rbp, rsp	      6031	buffer.c	FUNCTION_96
0x400c004	        0x4883ec20	                           sub rsp, 0x20	      6031	buffer.c	FUNCTION_96
0x400c008	        0x48897de8	             mov qword [rbp - 0x18], rdi	      6031	buffer.c	FUNCTION_96
0x400c00c	        0x488975e0	             mov qword [rbp - 0x20], rsi	      6031	buffer.c	FUNCTION_96
0x400c010	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      6033	buffer.c	FUNCTION_96
0x400c017	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6035	buffer.c	FUNCTION_96	FOR_1
0x400c01b	    0x488b80201c00	          mov rax, qword [rax + 0x1c20] 	      6035	buffer.c	FUNCTION_96	FOR_1
0x400c022	        0x488945f8	                mov qword [rbp - 8], rax	      6035	buffer.c	FUNCTION_96	FOR_1
0x400c026	            0xeb31	                           jmp 0x400c059	      6035	buffer.c	FUNCTION_96	FOR_1
0x400c028	        0x488b45f8	                mov rax, qword [rbp - 8]	      6036	buffer.c	FUNCTION_96	FOR_1	IF_1
0x400c02c	        0x488b4008	                mov rax, qword [rax + 8]	      6036	buffer.c	FUNCTION_96	FOR_1	IF_1
0x400c030	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      6036	buffer.c	FUNCTION_96	FOR_1	IF_1
0x400c034	            0x7517	                           jne 0x400c04d	      6036	buffer.c	FUNCTION_96	FOR_1	IF_1
0x400c036	        0x488b45f8	                mov rax, qword [rbp - 8]	      6037	buffer.c	FUNCTION_96	FOR_1	IF_1	IF_2	CALL_1
0x400c03a	          0x8b4010	            mov eax, dword [rax + 0x10] 	      6037	buffer.c	FUNCTION_96	FOR_1	IF_1	IF_2	CALL_1
0x400c03d	            0x89c7	                            mov edi, eax	      6037	buffer.c	FUNCTION_96	FOR_1	IF_1	IF_2	CALL_1
0x400c03f	      0xe800000000	                          call 0x400c044	      6037	buffer.c	FUNCTION_96	FOR_1	IF_1	IF_2	CALL_1
0x400c044	          0x4885c0	                           test rax, rax	      6037	buffer.c	FUNCTION_96	FOR_1	IF_1	IF_2	CALL_1
0x400c047	            0x7404	                            je 0x400c04d	      6037	buffer.c	FUNCTION_96	FOR_1	IF_1	IF_2	CALL_1
0x400c049	        0x8345f401	                add dword [rbp - 0xc], 1	      6038	buffer.c	FUNCTION_96	FOR_1	IF_1	IF_2
0x400c04d	        0x488b45f8	                mov rax, qword [rbp - 8]	      6035	buffer.c	FUNCTION_96	FOR_1
0x400c051	        0x488b4018	            mov rax, qword [rax + 0x18] 	      6035	buffer.c	FUNCTION_96	FOR_1
0x400c055	        0x488945f8	                mov qword [rbp - 8], rax	      6035	buffer.c	FUNCTION_96	FOR_1
0x400c059	      0x48837df800	                  cmp qword [rbp - 8], 0	      6035	buffer.c	FUNCTION_96	FOR_1
0x400c05e	            0x75c8	                           jne 0x400c028	      6035	buffer.c	FUNCTION_96	FOR_1
0x400c060	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      6040	buffer.c	FUNCTION_96
0x400c063	              0xc9	                                   leave	      6041	buffer.c	FUNCTION_96
0x400c064	              0xc3	                                     ret	      6041	buffer.c	FUNCTION_96
set_curbuf	CALL,22:functions,0:SWITCH,0:FOR,0:ELSE,0:DO,0:WHILE,0:IF,10	167
0x40026f8	              0x55	                                push rbp	      1619	buffer.c	FUNCTION_20
0x40026f9	          0x4889e5	                            mov rbp, rsp	      1619	buffer.c	FUNCTION_20
0x40026fc	        0x4883ec60	                           sub rsp, 0x60	      1619	buffer.c	FUNCTION_20
0x4002700	        0x48897da8	             mov qword [rbp - 0x58], rdi	      1619	buffer.c	FUNCTION_20
0x4002704	          0x8975a4	             mov dword [rbp - 0x5c], esi	      1619	buffer.c	FUNCTION_20
0x4002707	    0x64488b042528	                mov rax, qword fs:[0x28]	      1619	buffer.c	FUNCTION_20
0x4002710	        0x488945f8	                mov qword [rbp - 8], rax	      1619	buffer.c	FUNCTION_20
0x4002714	            0x31c0	                            xor eax, eax	      1619	buffer.c	FUNCTION_20
0x4002716	        0x837da402	               cmp dword [rbp - 0x5c], 2	      1622	buffer.c	FUNCTION_20
0x400271a	            0x740c	                            je 0x4002728	      1622	buffer.c	FUNCTION_20
0x400271c	        0x837da403	               cmp dword [rbp - 0x5c], 3	      1621	buffer.c	FUNCTION_20
0x4002720	            0x7406	                            je 0x4002728	      1621	buffer.c	FUNCTION_20
0x4002722	        0x837da404	               cmp dword [rbp - 0x5c], 4	      1622	buffer.c	FUNCTION_20
0x4002726	            0x7507	                           jne 0x400272f	      1622	buffer.c	FUNCTION_20
0x4002728	      0xb801000000	                              mov eax, 1	      1622	buffer.c	FUNCTION_20
0x400272d	            0xeb05	                           jmp 0x4002734	      1622	buffer.c	FUNCTION_20
0x400272f	      0xb800000000	                              mov eax, 0	      1622	buffer.c	FUNCTION_20
0x4002734	          0x8945b4	             mov dword [rbp - 0x4c], eax	      1621	buffer.c	FUNCTION_20
0x4002737	    0x488b05000000	            mov rax, qword [0x0400273e] 	      1624	buffer.c	FUNCTION_20
0x400273e	    0x488b80b81500	          mov rax, qword [rax + 0x15b8] 	      1624	buffer.c	FUNCTION_20
0x4002745	        0x488945b8	             mov qword [rbp - 0x48], rax	      1624	buffer.c	FUNCTION_20
0x4002749	      0xe800000000	                          call 0x400274e	      1629	buffer.c	FUNCTION_20	CALL_1
0x400274e	    0x8b0500000000	            mov eax, dword [0x04002754] 	      1630	buffer.c	FUNCTION_20	IF_1
0x4002754	            0x85c0	                           test eax, eax	      1630	buffer.c	FUNCTION_20	IF_1
0x4002756	            0x751a	                           jne 0x4002772	      1630	buffer.c	FUNCTION_20	IF_1
0x4002758	    0x488b05000000	            mov rax, qword [0x0400275f] 	      1631	buffer.c	FUNCTION_20	IF_1
0x400275f	    0x488b15000000	            mov rdx, qword [0x04002766] 	      1631	buffer.c	FUNCTION_20	IF_1
0x4002766	    0x8b92b8000000	            mov edx, dword [rdx + 0xb8] 	      1631	buffer.c	FUNCTION_20	IF_1
0x400276c	    0x899078010000	            mov dword [rax + 0x178], edx	      1631	buffer.c	FUNCTION_20	IF_1
0x4002772	    0x488b05000000	            mov rax, qword [0x04002779] 	      1632	buffer.c	FUNCTION_20	CALL_2
0x4002779	          0x4889c7	                            mov rdi, rax	      1632	buffer.c	FUNCTION_20	CALL_2
0x400277c	      0xe800000000	                          call 0x4002781	      1632	buffer.c	FUNCTION_20	CALL_2
0x4002781	    0xc70500000000	               mov dword [0x0400278b], 0	      1635	buffer.c	FUNCTION_20
0x400278b	    0x488b05000000	            mov rax, qword [0x04002792] 	      1639	buffer.c	FUNCTION_20
0x4002792	        0x488945c0	             mov qword [rbp - 0x40], rax	      1639	buffer.c	FUNCTION_20
0x4002796	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1640	buffer.c	FUNCTION_20	CALL_3
0x400279a	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1640	buffer.c	FUNCTION_20	CALL_3
0x400279e	          0x4889d6	                            mov rsi, rdx	      1640	buffer.c	FUNCTION_20	CALL_3
0x40027a1	          0x4889c7	                            mov rdi, rax	      1640	buffer.c	FUNCTION_20	CALL_3
0x40027a4	      0xe800000000	                          call 0x40027a9	      1640	buffer.c	FUNCTION_20	CALL_3
0x40027a9	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      1641	buffer.c	FUNCTION_20	CALL_4
0x40027ad	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1641	buffer.c	FUNCTION_20	CALL_4
0x40027b1	          0x4889d6	                            mov rsi, rdx	      1641	buffer.c	FUNCTION_20	CALL_4
0x40027b4	          0x4889c7	                            mov rdi, rax	      1641	buffer.c	FUNCTION_20	CALL_4
0x40027b7	      0xe800000000	                          call 0x40027bc	      1641	buffer.c	FUNCTION_20	CALL_4
0x40027bc	    0x488b05000000	            mov rax, qword [0x040027c3] 	      1645	buffer.c	FUNCTION_20	IF_2	CALL_5
0x40027c3	          0x4989c0	                             mov r8, rax	      1645	buffer.c	FUNCTION_20	IF_2	CALL_5
0x40027c6	      0xb900000000	                              mov ecx, 0	      1645	buffer.c	FUNCTION_20	IF_2	CALL_5
0x40027cb	      0xba00000000	                              mov edx, 0	      1645	buffer.c	FUNCTION_20	IF_2	CALL_5
0x40027d0	      0xbe00000000	                              mov esi, 0	      1645	buffer.c	FUNCTION_20	IF_2	CALL_5
0x40027d5	      0xbf06000000	                              mov edi, 6	      1645	buffer.c	FUNCTION_20	IF_2	CALL_5
0x40027da	      0xe800000000	                          call 0x40027df	      1645	buffer.c	FUNCTION_20	IF_2	CALL_5
0x40027df	            0x85c0	                           test eax, eax	      1645	buffer.c	FUNCTION_20	IF_2	CALL_5
0x40027e1	            0x7435	                            je 0x4002818	      1645	buffer.c	FUNCTION_20	IF_2	CALL_5
0x40027e3	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1646	buffer.c	FUNCTION_20	IF_2	CALL_6
0x40027e7	          0x4889c7	                            mov rdi, rax	      1646	buffer.c	FUNCTION_20	IF_2	CALL_6
0x40027ea	      0xe800000000	                          call 0x40027ef	      1646	buffer.c	FUNCTION_20	IF_2	CALL_6
0x40027ef	            0x85c0	                           test eax, eax	      1646	buffer.c	FUNCTION_20	IF_2	CALL_6
0x40027f1	     0xf842f010000	                            je 0x4002926	      1646	buffer.c	FUNCTION_20	IF_2	CALL_6
0x40027f7	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1647	buffer.c	FUNCTION_20	IF_2	CALL_7
0x40027fb	          0x4889c7	                            mov rdi, rax	      1647	buffer.c	FUNCTION_20	IF_2	CALL_7
0x40027fe	      0xe800000000	                          call 0x4002803	      1647	buffer.c	FUNCTION_20	IF_2	CALL_7
0x4002803	            0x85c0	                           test eax, eax	      1647	buffer.c	FUNCTION_20	IF_2	CALL_7
0x4002805	     0xf841b010000	                            je 0x4002926	      1647	buffer.c	FUNCTION_20	IF_2	CALL_7
0x400280b	      0xe800000000	                          call 0x4002810	      1649	buffer.c	FUNCTION_20	IF_2	CALL_8
0x4002810	            0x85c0	                           test eax, eax	      1649	buffer.c	FUNCTION_20	IF_2	CALL_8
0x4002812	     0xf850e010000	                           jne 0x4002926	      1649	buffer.c	FUNCTION_20	IF_2	CALL_8
0x4002818	    0x488b05000000	            mov rax, qword [0x0400281f] 	      1654	buffer.c	FUNCTION_20	IF_2	IF_3
0x400281f	        0x488b4008	                mov rax, qword [rax + 8]	      1654	buffer.c	FUNCTION_20	IF_2	IF_3
0x4002823	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      1654	buffer.c	FUNCTION_20	IF_2	IF_3
0x4002827	            0x750f	                           jne 0x4002838	      1654	buffer.c	FUNCTION_20	IF_2	IF_3
0x4002829	    0x488b05000000	            mov rax, qword [0x04002830] 	      1655	buffer.c	FUNCTION_20	IF_2	CALL_9
0x4002830	          0x4889c7	                            mov rdi, rax	      1655	buffer.c	FUNCTION_20	IF_2	CALL_9
0x4002833	      0xe800000000	                          call 0x4002838	      1655	buffer.c	FUNCTION_20	IF_2	CALL_9
0x4002838	        0x837db400	               cmp dword [rbp - 0x4c], 0	      1657	buffer.c	FUNCTION_20	IF_2	IF_4
0x400283c	            0x7411	                            je 0x400284f	      1657	buffer.c	FUNCTION_20	IF_2	IF_4
0x400283e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1658	buffer.c	FUNCTION_20	IF_2	CALL_10
0x4002842	      0xbe00000000	                              mov esi, 0	      1658	buffer.c	FUNCTION_20	IF_2	CALL_10
0x4002847	          0x4889c7	                            mov rdi, rax	      1658	buffer.c	FUNCTION_20	IF_2	CALL_10
0x400284a	      0xe800000000	                          call 0x400284f	      1658	buffer.c	FUNCTION_20	IF_2	CALL_10
0x400284f	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1660	buffer.c	FUNCTION_20	IF_2	IF_5	CALL_12
0x4002853	          0x4889c7	                            mov rdi, rax	      1660	buffer.c	FUNCTION_20	IF_2	IF_5	CALL_12
0x4002856	      0xe800000000	                          call 0x400285b	      1660	buffer.c	FUNCTION_20	IF_2	IF_5	CALL_12
0x400285b	            0x85c0	                           test eax, eax	      1660	buffer.c	FUNCTION_20	IF_2	IF_5	CALL_12
0x400285d	     0xf84c3000000	                            je 0x4002926	      1660	buffer.c	FUNCTION_20	IF_2	IF_5	CALL_12
0x4002863	      0xe800000000	                          call 0x4002868	      1660	buffer.c	FUNCTION_20	IF_2	IF_5	CALL_12
0x4002868	            0x85c0	                           test eax, eax	      1660	buffer.c	FUNCTION_20	IF_2	IF_5	CALL_12
0x400286a	     0xf85b6000000	                           jne 0x4002926	      1660	buffer.c	FUNCTION_20	IF_2	IF_5	CALL_12
0x4002870	    0x488b05000000	            mov rax, qword [0x04002877] 	      1665	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6
0x4002877	        0x488945c8	             mov qword [rbp - 0x38], rax	      1665	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6
0x400287b	    0x488b05000000	            mov rax, qword [0x04002882] 	      1666	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	IF_7
0x4002882	        0x483945c0	            cmp qword [rbp - 0x40], rax 	      1666	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	IF_7
0x4002886	            0x750a	                           jne 0x4002892	      1666	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	IF_7
0x4002888	      0xbf00000000	                              mov edi, 0	      1667	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_14
0x400288d	      0xe800000000	                          call 0x4002892	      1667	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_14
0x4002892	        0x837db400	               cmp dword [rbp - 0x4c], 0	      1668	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_15
0x4002896	            0x7534	                           jne 0x40028cc	      1668	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_15
0x4002898	        0x837da400	               cmp dword [rbp - 0x5c], 0	      1671	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_17
0x400289c	            0x7527	                           jne 0x40028c5	      1671	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_17
0x400289e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1670	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_16
0x40028a2	          0x4889c7	                            mov rdi, rax	      1670	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_16
0x40028a5	      0xe800000000	                          call 0x40028aa	      1670	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_16
0x40028aa	            0x85c0	                           test eax, eax	      1670	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_16
0x40028ac	            0x7517	                           jne 0x40028c5	      1670	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_16
0x40028ae	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1671	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_17
0x40028b2	          0x4889c7	                            mov rdi, rax	      1671	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_17
0x40028b5	      0xe800000000	                          call 0x40028ba	      1671	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_17
0x40028ba	            0x85c0	                           test eax, eax	      1671	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_17
0x40028bc	            0x7507	                           jne 0x40028c5	      1671	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_17
0x40028be	      0xb802000000	                              mov eax, 2	      1671	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_17
0x40028c3	            0xeb0a	                           jmp 0x40028cf	      1671	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_17
0x40028c5	      0xb800000000	                              mov eax, 0	      1671	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_17
0x40028ca	            0xeb03	                           jmp 0x40028cf	      1671	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_17
0x40028cc	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      1668	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_15
0x40028cf	    0x488b15000000	            mov rdx, qword [0x040028d6] 	      1668	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_15
0x40028d6	        0x488b5208	                mov rdx, qword [rdx + 8]	      1668	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_15
0x40028da	        0x483b55c0	             cmp rdx, qword [rbp - 0x40]	      1668	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_15
0x40028de	            0x7509	                           jne 0x40028e9	      1668	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_15
0x40028e0	    0x488b3d000000	            mov rdi, qword [0x040028e7] 	      1668	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_15
0x40028e7	            0xeb05	                           jmp 0x40028ee	      1668	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_15
0x40028e9	      0xbf00000000	                              mov edi, 0	      1668	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_15
0x40028ee	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	      1668	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_15
0x40028f2	      0xb900000000	                              mov ecx, 0	      1668	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_15
0x40028f7	            0x89c2	                            mov edx, eax	      1668	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_15
0x40028f9	      0xe800000000	                          call 0x40028fe	      1668	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_15
0x40028fe	    0x488b05000000	            mov rax, qword [0x04002905] 	      1672	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	IF_8	CALL_18
0x4002905	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      1672	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	IF_8	CALL_18
0x4002909	            0x741b	                            je 0x4002926	      1672	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	IF_8	CALL_18
0x400290b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1672	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	IF_8	CALL_18
0x400290f	          0x4889c7	                            mov rdi, rax	      1672	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	IF_8	CALL_18
0x4002912	      0xe800000000	                          call 0x4002917	      1672	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	IF_8	CALL_18
0x4002917	            0x85c0	                           test eax, eax	      1672	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	IF_8	CALL_18
0x4002919	            0x740b	                            je 0x4002926	      1672	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	IF_8	CALL_18
0x400291b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1674	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	IF_8
0x400291f	    0x488905000000	            mov qword [0x04002926], rax 	      1674	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	IF_8
0x4002926	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1680	buffer.c	FUNCTION_20	IF_9	CALL_19
0x400292a	          0x4889c7	                            mov rdi, rax	      1680	buffer.c	FUNCTION_20	IF_9	CALL_19
0x400292d	      0xe800000000	                          call 0x4002932	      1680	buffer.c	FUNCTION_20	IF_9	CALL_19
0x4002932	            0x85c0	                           test eax, eax	      1680	buffer.c	FUNCTION_20	IF_9	CALL_19
0x4002934	            0x7416	                            je 0x400294c	      1680	buffer.c	FUNCTION_20	IF_9	CALL_19
0x4002936	    0x488b05000000	            mov rax, qword [0x0400293d] 	      1680	buffer.c	FUNCTION_20	IF_9	CALL_19
0x400293d	        0x483945a8	            cmp qword [rbp - 0x58], rax 	      1680	buffer.c	FUNCTION_20	IF_9	CALL_19
0x4002941	            0x7409	                            je 0x400294c	      1680	buffer.c	FUNCTION_20	IF_9	CALL_19
0x4002943	      0xe800000000	                          call 0x4002948	      1682	buffer.c	FUNCTION_20	IF_9	CALL_20
0x4002948	            0x85c0	                           test eax, eax	      1682	buffer.c	FUNCTION_20	IF_9	CALL_20
0x400294a	            0x7410	                            je 0x400295c	      1682	buffer.c	FUNCTION_20	IF_9	CALL_20
0x400294c	    0x488b05000000	            mov rax, qword [0x04002953] 	      1684	buffer.c	FUNCTION_20	IF_9
0x4002953	        0x488b4008	                mov rax, qword [rax + 8]	      1684	buffer.c	FUNCTION_20	IF_9
0x4002957	          0x4885c0	                           test rax, rax	      1684	buffer.c	FUNCTION_20	IF_9
0x400295a	            0x752f	                           jne 0x400298b	      1684	buffer.c	FUNCTION_20	IF_9
0x400295c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1686	buffer.c	FUNCTION_20	IF_9	CALL_21
0x4002960	          0x4889c7	                            mov rdi, rax	      1686	buffer.c	FUNCTION_20	IF_9	CALL_21
0x4002963	      0xe800000000	                          call 0x4002968	      1686	buffer.c	FUNCTION_20	IF_9	CALL_21
0x4002968	    0x488b05000000	            mov rax, qword [0x0400296f] 	      1688	buffer.c	FUNCTION_20	IF_9	IF_10
0x400296f	    0x488b80b81500	          mov rax, qword [rax + 0x15b8] 	      1688	buffer.c	FUNCTION_20	IF_9	IF_10
0x4002976	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	      1688	buffer.c	FUNCTION_20	IF_9	IF_10
0x400297a	            0x740f	                            je 0x400298b	      1688	buffer.c	FUNCTION_20	IF_9	IF_10
0x400297c	    0x488b05000000	            mov rax, qword [0x04002983] 	      1689	buffer.c	FUNCTION_20	IF_9	CALL_22
0x4002983	          0x4889c7	                            mov rdi, rax	      1689	buffer.c	FUNCTION_20	IF_9	CALL_22
0x4002986	      0xe800000000	                          call 0x400298b	      1689	buffer.c	FUNCTION_20	IF_9	CALL_22
0x400298b	              0x90	                                     nop	      1692	buffer.c	FUNCTION_20
0x400298c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1692	buffer.c	FUNCTION_20
0x4002990	    0x644833042528	                xor rax, qword fs:[0x28]	      1692	buffer.c	FUNCTION_20
0x4002999	            0x7405	                            je 0x40029a0	      1692	buffer.c	FUNCTION_20
0x400299b	      0xe800000000	                          call 0x40029a0	      1692	buffer.c	FUNCTION_20
0x40029a0	              0xc9	                                   leave	      1692	buffer.c	FUNCTION_20
0x40029a1	              0xc3	                                     ret	      1692	buffer.c	FUNCTION_20
buflist_match	CALL,2:functions,0:SWITCH,0:FOR,0:ELSE,0:DO,0:WHILE,0:IF,1	27
0x4004708	              0x55	                                push rbp	      2661	buffer.c	FUNCTION_35
0x4004709	          0x4889e5	                            mov rbp, rsp	      2661	buffer.c	FUNCTION_35
0x400470c	        0x4883ec30	                           sub rsp, 0x30	      2661	buffer.c	FUNCTION_35
0x4004710	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2661	buffer.c	FUNCTION_35
0x4004714	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2661	buffer.c	FUNCTION_35
0x4004718	          0x8955dc	             mov dword [rbp - 0x24], edx	      2661	buffer.c	FUNCTION_35
0x400471b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2665	buffer.c	FUNCTION_35	CALL_1
0x400471f	    0x488b88900000	            mov rcx, qword [rax + 0x90] 	      2665	buffer.c	FUNCTION_35	CALL_1
0x4004726	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      2665	buffer.c	FUNCTION_35	CALL_1
0x4004729	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2665	buffer.c	FUNCTION_35	CALL_1
0x400472d	          0x4889ce	                            mov rsi, rcx	      2665	buffer.c	FUNCTION_35	CALL_1
0x4004730	          0x4889c7	                            mov rdi, rax	      2665	buffer.c	FUNCTION_35	CALL_1
0x4004733	      0xe832000000	                    call sym.fname_match	      2665	buffer.c	FUNCTION_35	CALL_1
0x4004738	        0x488945f8	                mov qword [rbp - 8], rax	      2665	buffer.c	FUNCTION_35	CALL_1
0x400473c	      0x48837df800	                  cmp qword [rbp - 8], 0	      2666	buffer.c	FUNCTION_35	IF_1
0x4004741	            0x7521	                           jne 0x4004764	      2666	buffer.c	FUNCTION_35	IF_1
0x4004743	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2667	buffer.c	FUNCTION_35	CALL_2
0x4004747	    0x488b88880000	            mov rcx, qword [rax + 0x88] 	      2667	buffer.c	FUNCTION_35	CALL_2
0x400474e	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      2667	buffer.c	FUNCTION_35	CALL_2
0x4004751	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2667	buffer.c	FUNCTION_35	CALL_2
0x4004755	          0x4889ce	                            mov rsi, rcx	      2667	buffer.c	FUNCTION_35	CALL_2
0x4004758	          0x4889c7	                            mov rdi, rax	      2667	buffer.c	FUNCTION_35	CALL_2
0x400475b	      0xe80a000000	                    call sym.fname_match	      2667	buffer.c	FUNCTION_35	CALL_2
0x4004760	        0x488945f8	                mov qword [rbp - 8], rax	      2667	buffer.c	FUNCTION_35	CALL_2
0x4004764	        0x488b45f8	                mov rax, qword [rbp - 8]	      2669	buffer.c	FUNCTION_35
0x4004768	              0xc9	                                   leave	      2670	buffer.c	FUNCTION_35
0x4004769	              0xc3	                                     ret	      2670	buffer.c	FUNCTION_35
buflist_findnr	CALL,3:functions,0:SWITCH,0:FOR,0:ELSE,0:DO,0:WHILE,0:IF,2	42
0x4004830	              0x55	                                push rbp	      2709	buffer.c	FUNCTION_37
0x4004831	          0x4889e5	                            mov rbp, rsp	      2709	buffer.c	FUNCTION_37
0x4004834	        0x4883ec40	                           sub rsp, 0x40	      2709	buffer.c	FUNCTION_37
0x4004838	          0x897dcc	             mov dword [rbp - 0x34], edi	      2709	buffer.c	FUNCTION_37
0x400483b	    0x64488b042528	                mov rax, qword fs:[0x28]	      2709	buffer.c	FUNCTION_37
0x4004844	        0x488945f8	                mov qword [rbp - 8], rax	      2709	buffer.c	FUNCTION_37
0x4004848	            0x31c0	                            xor eax, eax	      2709	buffer.c	FUNCTION_37
0x400484a	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      2713	buffer.c	FUNCTION_37	IF_1
0x400484e	            0x7510	                           jne 0x4004860	      2713	buffer.c	FUNCTION_37	IF_1
0x4004850	    0x488b05000000	            mov rax, qword [0x04004857] 	      2714	buffer.c	FUNCTION_37	IF_1
0x4004857	    0x8b8078010000	           mov eax, dword [rax + 0x178] 	      2714	buffer.c	FUNCTION_37	IF_1
0x400485d	          0x8945cc	             mov dword [rbp - 0x34], eax	      2714	buffer.c	FUNCTION_37	IF_1
0x4004860	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      2715	buffer.c	FUNCTION_37	CALL_1
0x4004863	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2715	buffer.c	FUNCTION_37	CALL_1
0x4004867	      0xbe00000000	                              mov esi, 0	      2715	buffer.c	FUNCTION_37	CALL_1
0x400486c	          0x4889c7	                            mov rdi, rax	      2715	buffer.c	FUNCTION_37	CALL_1
0x400486f	      0xb800000000	                              mov eax, 0	      2715	buffer.c	FUNCTION_37	CALL_1
0x4004874	      0xe800000000	                          call 0x4004879	      2715	buffer.c	FUNCTION_37	CALL_1
0x4004879	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2716	buffer.c	FUNCTION_37	CALL_2
0x400487d	          0x4889c6	                            mov rsi, rax	      2716	buffer.c	FUNCTION_37	CALL_2
0x4004880	      0xbf00000000	                              mov edi, 0	      2716	buffer.c	FUNCTION_37	CALL_2
0x4004885	      0xe800000000	                          call 0x400488a	      2716	buffer.c	FUNCTION_37	CALL_2
0x400488a	        0x488945d8	             mov qword [rbp - 0x28], rax	      2716	buffer.c	FUNCTION_37	CALL_2
0x400488e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2718	buffer.c	FUNCTION_37	IF_2	CALL_3
0x4004892	        0x488b4008	                mov rax, qword [rax + 8]	      2718	buffer.c	FUNCTION_37	IF_2	CALL_3
0x4004896	          0x4885c0	                           test rax, rax	      2718	buffer.c	FUNCTION_37	IF_2	CALL_3
0x4004899	            0x7420	                            je 0x40048bb	      2718	buffer.c	FUNCTION_37	IF_2	CALL_3
0x400489b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2718	buffer.c	FUNCTION_37	IF_2	CALL_3
0x400489f	        0x488b4008	                mov rax, qword [rax + 8]	      2718	buffer.c	FUNCTION_37	IF_2	CALL_3
0x40048a3	    0x483d00000000	                              cmp rax, 0	      2718	buffer.c	FUNCTION_37	IF_2	CALL_3
0x40048a9	            0x7410	                            je 0x40048bb	      2718	buffer.c	FUNCTION_37	IF_2	CALL_3
0x40048ab	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2719	buffer.c	FUNCTION_37	IF_2
0x40048af	        0x488b4008	                mov rax, qword [rax + 8]	      2719	buffer.c	FUNCTION_37	IF_2
0x40048b3	    0x482dbc000000	                           sub rax, 0xbc	      2719	buffer.c	FUNCTION_37	IF_2
0x40048b9	            0xeb05	                           jmp 0x40048c0	      2719	buffer.c	FUNCTION_37	IF_2
0x40048bb	      0xb800000000	                              mov eax, 0	      2721	buffer.c	FUNCTION_37
0x40048c0	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2722	buffer.c	FUNCTION_37
0x40048c4	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2722	buffer.c	FUNCTION_37
0x40048cd	            0x7405	                            je 0x40048d4	      2722	buffer.c	FUNCTION_37
0x40048cf	      0xe800000000	                          call 0x40048d4	      2722	buffer.c	FUNCTION_37
0x40048d4	              0xc9	                                   leave	      2722	buffer.c	FUNCTION_37
0x40048d5	              0xc3	                                     ret	      2722	buffer.c	FUNCTION_37
fname_expand	CALL,3:functions,0:SWITCH,0:FOR,0:ELSE,0:DO,0:WHILE,0:IF,4	29
0x4009d85	              0x55	                                push rbp	      4798	buffer.c	FUNCTION_69
0x4009d86	          0x4889e5	                            mov rbp, rsp	      4798	buffer.c	FUNCTION_69
0x4009d89	        0x4883ec20	                           sub rsp, 0x20	      4798	buffer.c	FUNCTION_69
0x4009d8d	        0x48897df8	                mov qword [rbp - 8], rdi	      4798	buffer.c	FUNCTION_69
0x4009d91	        0x488975f0	             mov qword [rbp - 0x10], rsi	      4798	buffer.c	FUNCTION_69
0x4009d95	        0x488955e8	             mov qword [rbp - 0x18], rdx	      4798	buffer.c	FUNCTION_69
0x4009d99	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4799	buffer.c	FUNCTION_69	IF_1
0x4009d9d	          0x488b00	                    mov rax, qword [rax]	      4799	buffer.c	FUNCTION_69	IF_1
0x4009da0	          0x4885c0	                           test rax, rax	      4799	buffer.c	FUNCTION_69	IF_1
0x4009da3	            0x7435	                            je 0x4009dda	      4799	buffer.c	FUNCTION_69	IF_1
0x4009da5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4801	buffer.c	FUNCTION_69	IF_2
0x4009da9	          0x488b00	                    mov rax, qword [rax]	      4801	buffer.c	FUNCTION_69	IF_2
0x4009dac	          0x4885c0	                           test rax, rax	      4801	buffer.c	FUNCTION_69	IF_2
0x4009daf	            0x750e	                           jne 0x4009dbf	      4801	buffer.c	FUNCTION_69	IF_2
0x4009db1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4802	buffer.c	FUNCTION_69	IF_2
0x4009db5	          0x488b10	                    mov rdx, qword [rax]	      4802	buffer.c	FUNCTION_69	IF_2
0x4009db8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4802	buffer.c	FUNCTION_69	IF_2
0x4009dbc	          0x488910	                    mov qword [rax], rdx	      4802	buffer.c	FUNCTION_69	IF_2
0x4009dbf	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4803	buffer.c	FUNCTION_69	CALL_1
0x4009dc3	          0x488b00	                    mov rax, qword [rax]	      4803	buffer.c	FUNCTION_69	CALL_1
0x4009dc6	          0x4889c7	                            mov rdi, rax	      4803	buffer.c	FUNCTION_69	CALL_1
0x4009dc9	      0xe800000000	                          call 0x4009dce	      4803	buffer.c	FUNCTION_69	CALL_1
0x4009dce	          0x4889c2	                            mov rdx, rax	      4803	buffer.c	FUNCTION_69	CALL_1
0x4009dd1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4803	buffer.c	FUNCTION_69	CALL_1
0x4009dd5	          0x488910	                    mov qword [rax], rdx	      4803	buffer.c	FUNCTION_69	CALL_1
0x4009dd8	            0xeb01	                           jmp 0x4009ddb	      4803	buffer.c	FUNCTION_69	CALL_1
0x4009dda	              0x90	                                     nop	      4800	buffer.c	FUNCTION_69	IF_1
0x4009ddb	              0xc9	                                   leave	      4820	buffer.c	FUNCTION_69
0x4009ddc	              0xc3	                                     ret	      4820	buffer.c	FUNCTION_69
wipe_buffer	CALL,3:functions,0:SWITCH,0:FOR,0:ELSE,0:DO,0:WHILE,0:IF,3	29
0x400c667	              0x55	                                push rbp	      6228	buffer.c	FUNCTION_103
0x400c668	          0x4889e5	                            mov rbp, rsp	      6228	buffer.c	FUNCTION_103
0x400c66b	        0x4883ec10	                           sub rsp, 0x10	      6228	buffer.c	FUNCTION_103
0x400c66f	        0x48897df8	                mov qword [rbp - 8], rdi	      6228	buffer.c	FUNCTION_103
0x400c673	          0x8975f4	              mov dword [rbp - 0xc], esi	      6228	buffer.c	FUNCTION_103
0x400c676	        0x488b45f8	                mov rax, qword [rbp - 8]	      6229	buffer.c	FUNCTION_103	IF_1
0x400c67a	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      6229	buffer.c	FUNCTION_103	IF_1
0x400c680	    0x8b1500000000	            mov edx, dword [0x0400c686] 	      6229	buffer.c	FUNCTION_103	IF_1
0x400c686	          0x83ea01	                              sub edx, 1	      6229	buffer.c	FUNCTION_103	IF_1
0x400c689	            0x39d0	                            cmp eax, edx	      6229	buffer.c	FUNCTION_103	IF_1
0x400c68b	            0x750f	                           jne 0x400c69c	      6229	buffer.c	FUNCTION_103	IF_1
0x400c68d	    0x8b0500000000	            mov eax, dword [0x0400c693] 	      6230	buffer.c	FUNCTION_103	IF_1
0x400c693	          0x83e801	                              sub eax, 1	      6230	buffer.c	FUNCTION_103	IF_1
0x400c696	    0x890500000000	            mov dword [0x0400c69c], eax 	      6230	buffer.c	FUNCTION_103	IF_1
0x400c69c	        0x837df400	                cmp dword [rbp - 0xc], 0	      6232	buffer.c	FUNCTION_103	IF_2
0x400c6a0	            0x7505	                           jne 0x400c6a7	      6232	buffer.c	FUNCTION_103	IF_2
0x400c6a2	      0xe800000000	                          call 0x400c6a7	      6233	buffer.c	FUNCTION_103	CALL_1
0x400c6a7	        0x488b45f8	                mov rax, qword [rbp - 8]	      6235	buffer.c	FUNCTION_103	CALL_2
0x400c6ab	      0xb900000000	                              mov ecx, 0	      6235	buffer.c	FUNCTION_103	CALL_2
0x400c6b0	      0xba04000000	                              mov edx, 4	      6235	buffer.c	FUNCTION_103	CALL_2
0x400c6b5	          0x4889c6	                            mov rsi, rax	      6235	buffer.c	FUNCTION_103	CALL_2
0x400c6b8	      0xbf00000000	                              mov edi, 0	      6235	buffer.c	FUNCTION_103	CALL_2
0x400c6bd	      0xe800000000	                          call 0x400c6c2	      6235	buffer.c	FUNCTION_103	CALL_2
0x400c6c2	        0x837df400	                cmp dword [rbp - 0xc], 0	      6237	buffer.c	FUNCTION_103	IF_3
0x400c6c6	            0x7505	                           jne 0x400c6cd	      6237	buffer.c	FUNCTION_103	IF_3
0x400c6c8	      0xe800000000	                          call 0x400c6cd	      6238	buffer.c	FUNCTION_103	CALL_3
0x400c6cd	              0x90	                                     nop	      6239	buffer.c	FUNCTION_103
0x400c6ce	              0xc9	                                   leave	      6239	buffer.c	FUNCTION_103
0x400c6cf	              0xc3	                                     ret	      6239	buffer.c	FUNCTION_103
resettitle	CALL,1:functions,0:SWITCH,0:FOR,0:ELSE,0:DO,0:WHILE,0:IF,0	10
0x4006cd4	              0x55	                                push rbp	      3782	buffer.c	FUNCTION_63
0x4006cd5	          0x4889e5	                            mov rbp, rsp	      3782	buffer.c	FUNCTION_63
0x4006cd8	    0x488b15000000	            mov rdx, qword [0x04006cdf] 	      3783	buffer.c	FUNCTION_63	CALL_1
0x4006cdf	    0x488b05000000	            mov rax, qword [0x04006ce6] 	      3783	buffer.c	FUNCTION_63	CALL_1
0x4006ce6	          0x4889d6	                            mov rsi, rdx	      3783	buffer.c	FUNCTION_63	CALL_1
0x4006ce9	          0x4889c7	                            mov rdi, rax	      3783	buffer.c	FUNCTION_63	CALL_1
0x4006cec	      0xe800000000	                          call 0x4006cf1	      3783	buffer.c	FUNCTION_63	CALL_1
0x4006cf1	              0x90	                                     nop	      3784	buffer.c	FUNCTION_63
0x4006cf2	              0x5d	                                 pop rbp	      3784	buffer.c	FUNCTION_63
0x4006cf3	              0xc3	                                     ret	      3784	buffer.c	FUNCTION_63
ExpandBufnames	CALL,11:functions,1:SWITCH,0:FOR,2:ELSE,1:DO,0:WHILE,0:IF,11	193
0x4004358	              0x55	                                push rbp	      2558	buffer.c	FUNCTION_34
0x4004359	          0x4889e5	                            mov rbp, rsp	      2558	buffer.c	FUNCTION_34
0x400435c	    0x4881ec100100	                          sub rsp, 0x110	      2558	buffer.c	FUNCTION_34
0x4004363	    0x4889bd08ffff	             mov qword [rbp - 0xf8], rdi	      2558	buffer.c	FUNCTION_34
0x400436a	    0x4889b500ffff	            mov qword [rbp - 0x100], rsi	      2558	buffer.c	FUNCTION_34
0x4004371	    0x488995f8feff	            mov qword [rbp - 0x108], rdx	      2558	buffer.c	FUNCTION_34
0x4004378	    0x898df4feffff	            mov dword [rbp - 0x10c], ecx	      2558	buffer.c	FUNCTION_34
0x400437e	    0x64488b042528	                mov rax, qword fs:[0x28]	      2558	buffer.c	FUNCTION_34
0x4004387	        0x488945f8	                mov qword [rbp - 8], rax	      2558	buffer.c	FUNCTION_34
0x400438b	            0x31c0	                            xor eax, eax	      2558	buffer.c	FUNCTION_34
0x400438d	    0xc7851cffffff	               mov dword [rbp - 0xe4], 0	      2559	buffer.c	FUNCTION_34
0x4004397	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      2566	buffer.c	FUNCTION_34
0x400439e	    0xc70000000000	                      mov dword [rax], 0	      2566	buffer.c	FUNCTION_34
0x40043a4	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      2567	buffer.c	FUNCTION_34
0x40043ab	    0x48c700000000	                      mov qword [rax], 0	      2567	buffer.c	FUNCTION_34
0x40043b2	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2570	buffer.c	FUNCTION_34	IF_1
0x40043b9	           0xfb600	                   movzx eax, byte [rax]	      2570	buffer.c	FUNCTION_34	IF_1
0x40043bc	            0x3c5e	                            cmp al, 0x5e	      2570	buffer.c	FUNCTION_34	IF_1
0x40043be	            0x7572	                           jne 0x4004432	      2570	buffer.c	FUNCTION_34	IF_1
0x40043c0	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2572	buffer.c	FUNCTION_34	IF_1	CALL_2
0x40043c7	          0x4889c7	                            mov rdi, rax	      2572	buffer.c	FUNCTION_34	IF_1	CALL_2
0x40043ca	      0xe800000000	                          call 0x40043cf	      2572	buffer.c	FUNCTION_34	IF_1	CALL_2
0x40043cf	          0x83c00b	                            add eax, 0xb	      2572	buffer.c	FUNCTION_34	IF_1	CALL_2
0x40043d2	            0x89c7	                            mov edi, eax	      2572	buffer.c	FUNCTION_34	IF_1	CALL_2
0x40043d4	      0xe800000000	                          call 0x40043d9	      2572	buffer.c	FUNCTION_34	IF_1	CALL_2
0x40043d9	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	      2572	buffer.c	FUNCTION_34	IF_1	CALL_2
0x40043e0	    0x4883bd38ffff	               cmp qword [rbp - 0xc8], 0	      2573	buffer.c	FUNCTION_34	IF_1	IF_2
0x40043e8	            0x750a	                           jne 0x40043f4	      2573	buffer.c	FUNCTION_34	IF_1	IF_2
0x40043ea	      0xb800000000	                              mov eax, 0	      2574	buffer.c	FUNCTION_34	IF_1	IF_2
0x40043ef	      0xe9fe020000	                           jmp 0x40046f2	      2574	buffer.c	FUNCTION_34	IF_1	IF_2
0x40043f4	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2575	buffer.c	FUNCTION_34	IF_1	CALL_3
0x40043fb	    0x48b95c285e5c	          movabs rcx, 0x2f5c5b7c5c5e285c	      2575	buffer.c	FUNCTION_34	IF_1	CALL_3
0x4004405	          0x488908	                    mov qword [rax], rcx	      2575	buffer.c	FUNCTION_34	IF_1	CALL_3
0x4004408	    0xc740085d5c29	          mov dword [rax + 8], 0x295c5d 	      2575	buffer.c	FUNCTION_34	IF_1	CALL_3
0x400440f	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2576	buffer.c	FUNCTION_34	IF_1	CALL_4
0x4004416	        0x488d5001	                      lea rdx, [rax + 1]	      2576	buffer.c	FUNCTION_34	IF_1	CALL_4
0x400441a	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2576	buffer.c	FUNCTION_34	IF_1	CALL_4
0x4004421	        0x4883c00b	                            add rax, 0xb	      2576	buffer.c	FUNCTION_34	IF_1	CALL_4
0x4004425	          0x4889d6	                            mov rsi, rdx	      2576	buffer.c	FUNCTION_34	IF_1	CALL_4
0x4004428	          0x4889c7	                            mov rdi, rax	      2576	buffer.c	FUNCTION_34	IF_1	CALL_4
0x400442b	      0xe800000000	                          call 0x4004430	      2576	buffer.c	FUNCTION_34	IF_1	CALL_4
0x4004430	            0xeb0e	                           jmp 0x4004440	      2576	buffer.c	FUNCTION_34	IF_1	CALL_4
0x4004432	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2579	buffer.c	FUNCTION_34	ELSE_1
0x4004439	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	      2579	buffer.c	FUNCTION_34	ELSE_1
0x4004440	    0xc78524ffffff	               mov dword [rbp - 0xdc], 0	      2585	buffer.c	FUNCTION_34	ELSE_1	FOR_1
0x400444a	      0xe955020000	                           jmp 0x40046a4	      2585	buffer.c	FUNCTION_34	ELSE_1	FOR_1
0x400444f	    0x83bd24ffffff	               cmp dword [rbp - 0xdc], 0	      2589	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_3
0x4004456	            0x7e14	                           jle 0x400446c	      2589	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_3
0x4004458	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2589	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_3
0x400445f	    0x483b8508ffff	             cmp rax, qword [rbp - 0xf8]	      2589	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_3
0x4004466	     0xf8447020000	                            je 0x40046b3	      2589	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_3
0x400446c	    0x8b9524ffffff	             mov edx, dword [rbp - 0xdc]	      2591	buffer.c	FUNCTION_34	ELSE_1	FOR_1	CALL_5
0x4004472	            0x89d0	                            mov eax, edx	      2591	buffer.c	FUNCTION_34	ELSE_1	FOR_1	CALL_5
0x4004474	          0xc1e002	                              shl eax, 2	      2591	buffer.c	FUNCTION_34	ELSE_1	FOR_1	CALL_5
0x4004477	             0x1d0	                            add eax, edx	      2591	buffer.c	FUNCTION_34	ELSE_1	FOR_1	CALL_5
0x4004479	             0x1c0	                            add eax, eax	      2591	buffer.c	FUNCTION_34	ELSE_1	FOR_1	CALL_5
0x400447b	             0x1d0	                            add eax, edx	      2591	buffer.c	FUNCTION_34	ELSE_1	FOR_1	CALL_5
0x400447d	          0x4863d0	                         movsxd rdx, eax	      2591	buffer.c	FUNCTION_34	ELSE_1	FOR_1	CALL_5
0x4004480	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2591	buffer.c	FUNCTION_34	ELSE_1	FOR_1	CALL_5
0x4004487	          0x4801d0	                            add rax, rdx	      2591	buffer.c	FUNCTION_34	ELSE_1	FOR_1	CALL_5
0x400448a	      0xbe01000000	                              mov esi, 1	      2591	buffer.c	FUNCTION_34	ELSE_1	FOR_1	CALL_5
0x400448f	          0x4889c7	                            mov rdi, rax	      2591	buffer.c	FUNCTION_34	ELSE_1	FOR_1	CALL_5
0x4004492	      0xe800000000	                          call 0x4004497	      2591	buffer.c	FUNCTION_34	ELSE_1	FOR_1	CALL_5
0x4004497	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      2591	buffer.c	FUNCTION_34	ELSE_1	FOR_1	CALL_5
0x400449e	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2592	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_4
0x40044a5	          0x4885c0	                           test rax, rax	      2592	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_4
0x40044a8	            0x7529	                           jne 0x40044d3	      2592	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_4
0x40044aa	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2594	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_4	IF_5
0x40044b1	    0x483b8508ffff	             cmp rax, qword [rbp - 0xf8]	      2594	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_4	IF_5
0x40044b8	            0x740f	                            je 0x40044c9	      2594	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_4	IF_5
0x40044ba	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2595	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_4	CALL_6
0x40044c1	          0x4889c7	                            mov rdi, rax	      2595	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_4	CALL_6
0x40044c4	      0xe800000000	                          call 0x40044c9	      2595	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_4	CALL_6
0x40044c9	      0xb800000000	                              mov eax, 0	      2596	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_4
0x40044ce	      0xe91f020000	                           jmp 0x40046f2	      2596	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_4
0x40044d3	    0xc78520ffffff	               mov dword [rbp - 0xe0], 1	      2603	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x40044dd	      0xe993010000	                           jmp 0x4004675	      2603	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x40044e2	    0xc7851cffffff	               mov dword [rbp - 0xe4], 0	      2605	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x40044ec	    0x488b05000000	            mov rax, qword [0x040044f3] 	      2606	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x40044f3	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	      2606	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x40044fa	      0xe9e5000000	                           jmp 0x40045e4	      2606	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x40044ff	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2608	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	IF_1
0x4004506	    0x8b8024140000	          mov eax, dword [rax + 0x1424] 	      2608	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	IF_1
0x400450c	            0x85c0	                           test eax, eax	      2608	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	IF_1
0x400450e	     0xf84bd000000	                            je 0x40045d1	      2608	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	IF_1
0x4004514	    0x488b05000000	            mov rax, qword [0x0400451b] 	      2610	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	CALL_1
0x400451b	            0x89c2	                            mov edx, eax	      2610	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	CALL_1
0x400451d	    0x488b8d28ffff	             mov rcx, qword [rbp - 0xd8]	      2610	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	CALL_1
0x4004524	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	      2610	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	CALL_1
0x400452b	          0x4889ce	                            mov rsi, rcx	      2610	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	CALL_1
0x400452e	          0x4889c7	                            mov rdi, rax	      2610	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	CALL_1
0x4004531	      0xe8d2010000	                  call sym.buflist_match	      2610	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	CALL_1
0x4004536	    0x48898530ffff	             mov qword [rbp - 0xd0], rax	      2610	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	CALL_1
0x400453d	    0x4883bd30ffff	               cmp qword [rbp - 0xd0], 0	      2611	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	IF_2
0x4004545	     0xf8487000000	                            je 0x40045d2	      2611	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	IF_2
0x400454b	    0x83bd20ffffff	               cmp dword [rbp - 0xe0], 1	      2613	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	IF_2	IF_3
0x4004552	            0x7509	                           jne 0x400455d	      2613	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	IF_2	IF_3
0x4004554	    0x83851cffffff	               add dword [rbp - 0xe4], 1	      2614	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	IF_2	IF_3
0x400455b	            0xeb75	                           jmp 0x40045d2	      2614	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	IF_2	IF_3
0x400455d	    0x8b85f4feffff	            mov eax, dword [rbp - 0x10c]	      2617	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	IF_4
0x4004563	          0x83e002	                              and eax, 2	      2617	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	IF_4
0x4004566	            0x85c0	                           test eax, eax	      2617	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	IF_4
0x4004568	            0x7422	                            je 0x400458c	      2617	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	IF_4
0x400456a	    0x488b9530ffff	             mov rdx, qword [rbp - 0xd0]	      2618	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	CALL_2
0x4004571	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2618	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	CALL_2
0x4004578	          0x4889d6	                            mov rsi, rdx	      2618	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	CALL_2
0x400457b	          0x4889c7	                            mov rdi, rax	      2618	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	CALL_2
0x400457e	      0xe800000000	                          call 0x4004583	      2618	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	CALL_2
0x4004583	    0x48898530ffff	             mov qword [rbp - 0xd0], rax	      2618	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	CALL_2
0x400458a	            0xeb16	                           jmp 0x40045a2	      2618	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	CALL_2
0x400458c	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      2620	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	CALL_3
0x4004593	          0x4889c7	                            mov rdi, rax	      2620	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	CALL_3
0x4004596	      0xe800000000	                          call 0x400459b	      2620	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	CALL_3
0x400459b	    0x48898530ffff	             mov qword [rbp - 0xd0], rax	      2620	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	CALL_3
0x40045a2	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      2621	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2
0x40045a9	          0x488b08	                    mov rcx, qword [rax]	      2621	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2
0x40045ac	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	      2621	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2
0x40045b2	          0x8d5001	                      lea edx, [rax + 1]	      2621	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2
0x40045b5	    0x89951cffffff	             mov dword [rbp - 0xe4], edx	      2621	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2
0x40045bb	            0x4898	                                    cdqe	      2621	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2
0x40045bd	        0x48c1e003	                              shl rax, 3	      2621	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2
0x40045c1	        0x488d1401	                    lea rdx, [rcx + rax]	      2621	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2
0x40045c5	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      2621	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2
0x40045cc	          0x488902	                    mov qword [rdx], rax	      2621	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2
0x40045cf	            0xeb01	                           jmp 0x40045d2	      2621	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2
0x40045d1	              0x90	                                     nop	      2609	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	IF_1
0x40045d2	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2606	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x40045d9	        0x488b4068	            mov rax, qword [rax + 0x68] 	      2606	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x40045dd	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	      2606	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x40045e4	    0x4883bd28ffff	               cmp qword [rbp - 0xd8], 0	      2606	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x40045ec	     0xf850dffffff	                           jne 0x40044ff	      2606	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x40045f2	    0x83bd1cffffff	               cmp dword [rbp - 0xe4], 0	      2625	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_6
0x40045f9	     0xf8485000000	                            je 0x4004684	      2625	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_6
0x40045ff	    0x83bd20ffffff	               cmp dword [rbp - 0xe0], 1	      2627	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7
0x4004606	            0x7566	                           jne 0x400466e	      2627	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7
0x4004608	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	      2629	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	CALL_7
0x400460e	            0x4898	                                    cdqe	      2629	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	CALL_7
0x4004610	          0xc1e003	                              shl eax, 3	      2629	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	CALL_7
0x4004613	            0x89c7	                            mov edi, eax	      2629	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	CALL_7
0x4004615	      0xe800000000	                          call 0x400461a	      2629	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	CALL_7
0x400461a	          0x4889c2	                            mov rdx, rax	      2629	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	CALL_7
0x400461d	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      2629	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	CALL_7
0x4004624	          0x488910	                    mov qword [rax], rdx	      2629	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	CALL_7
0x4004627	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      2630	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	IF_8
0x400462e	          0x488b00	                    mov rax, qword [rax]	      2630	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	IF_8
0x4004631	          0x4885c0	                           test rax, rax	      2630	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	IF_8
0x4004634	            0x7538	                           jne 0x400466e	      2630	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	IF_8
0x4004636	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2632	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	IF_8	CALL_8
0x400463d	          0x4889c7	                            mov rdi, rax	      2632	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	IF_8	CALL_8
0x4004640	      0xe800000000	                          call 0x4004645	      2632	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	IF_8	CALL_8
0x4004645	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2633	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	IF_8	IF_9
0x400464c	    0x483b8508ffff	             cmp rax, qword [rbp - 0xf8]	      2633	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	IF_8	IF_9
0x4004653	            0x740f	                            je 0x4004664	      2633	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	IF_8	IF_9
0x4004655	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2634	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	IF_8	CALL_9
0x400465c	          0x4889c7	                            mov rdi, rax	      2634	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	IF_8	CALL_9
0x400465f	      0xe800000000	                          call 0x4004664	      2634	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	IF_8	CALL_9
0x4004664	      0xb800000000	                              mov eax, 0	      2635	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	IF_8
0x4004669	      0xe984000000	                           jmp 0x40046f2	      2635	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	IF_8
0x400466e	    0x838520ffffff	               add dword [rbp - 0xe0], 1	      2603	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x4004675	    0x83bd20ffffff	               cmp dword [rbp - 0xe0], 2	      2603	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x400467c	     0xf8e60feffff	                           jle 0x40044e2	      2603	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x4004682	            0xeb01	                           jmp 0x4004685	      2603	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x4004684	              0x90	                                     nop	      2626	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_6
0x4004685	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2639	buffer.c	FUNCTION_34	FOR_1	ELSE_1	CALL_10
0x400468c	          0x4889c7	                            mov rdi, rax	      2639	buffer.c	FUNCTION_34	FOR_1	ELSE_1	CALL_10
0x400468f	      0xe800000000	                          call 0x4004694	      2639	buffer.c	FUNCTION_34	FOR_1	ELSE_1	CALL_10
0x4004694	    0x83bd1cffffff	               cmp dword [rbp - 0xe4], 0	      2640	buffer.c	FUNCTION_34	FOR_1	ELSE_1	IF_10
0x400469b	            0x7519	                           jne 0x40046b6	      2640	buffer.c	FUNCTION_34	FOR_1	ELSE_1	IF_10
0x400469d	    0x838524ffffff	               add dword [rbp - 0xdc], 1	      2585	buffer.c	FUNCTION_34	ELSE_1	FOR_1
0x40046a4	    0x83bd24ffffff	               cmp dword [rbp - 0xdc], 1	      2585	buffer.c	FUNCTION_34	ELSE_1	FOR_1
0x40046ab	     0xf8e9efdffff	                           jle 0x400444f	      2585	buffer.c	FUNCTION_34	ELSE_1	FOR_1
0x40046b1	            0xeb04	                           jmp 0x40046b7	      2585	buffer.c	FUNCTION_34	ELSE_1	FOR_1
0x40046b3	              0x90	                                     nop	      2590	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_3
0x40046b4	            0xeb01	                           jmp 0x40046b7	      2590	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_3
0x40046b6	              0x90	                                     nop	      2641	buffer.c	FUNCTION_34	FOR_1	ELSE_1	IF_10
0x40046b7	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2644	buffer.c	FUNCTION_34	IF_11
0x40046be	    0x483b8508ffff	             cmp rax, qword [rbp - 0xf8]	      2644	buffer.c	FUNCTION_34	IF_11
0x40046c5	            0x740f	                            je 0x40046d6	      2644	buffer.c	FUNCTION_34	IF_11
0x40046c7	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2645	buffer.c	FUNCTION_34	CALL_11
0x40046ce	          0x4889c7	                            mov rdi, rax	      2645	buffer.c	FUNCTION_34	CALL_11
0x40046d1	      0xe800000000	                          call 0x40046d6	      2645	buffer.c	FUNCTION_34	CALL_11
0x40046d6	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      2647	buffer.c	FUNCTION_34
0x40046dd	    0x8b951cffffff	             mov edx, dword [rbp - 0xe4]	      2647	buffer.c	FUNCTION_34
0x40046e3	            0x8910	                    mov dword [rax], edx	      2647	buffer.c	FUNCTION_34
0x40046e5	    0x83bd1cffffff	               cmp dword [rbp - 0xe4], 0	      2648	buffer.c	FUNCTION_34
0x40046ec	           0xf95c0	                                setne al	      2648	buffer.c	FUNCTION_34
0x40046ef	           0xfb6c0	                           movzx eax, al	      2648	buffer.c	FUNCTION_34
0x40046f2	        0x488b75f8	                mov rsi, qword [rbp - 8]	      2649	buffer.c	FUNCTION_34
0x40046f6	    0x644833342528	                xor rsi, qword fs:[0x28]	      2649	buffer.c	FUNCTION_34
0x40046ff	            0x7405	                            je 0x4004706	      2649	buffer.c	FUNCTION_34
0x4004701	      0xe800000000	                          call 0x4004706	      2649	buffer.c	FUNCTION_34
0x4004706	              0xc9	                                   leave	      2649	buffer.c	FUNCTION_34
0x4004707	              0xc3	                                     ret	      2649	buffer.c	FUNCTION_34
setaltfname	CALL,1:functions,0:SWITCH,0:FOR,0:ELSE,0:DO,0:WHILE,0:IF,1	25
0x4005892	              0x55	                                push rbp	      3224	buffer.c	FUNCTION_50
0x4005893	          0x4889e5	                            mov rbp, rsp	      3224	buffer.c	FUNCTION_50
0x4005896	        0x4883ec30	                           sub rsp, 0x30	      3224	buffer.c	FUNCTION_50
0x400589a	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3224	buffer.c	FUNCTION_50
0x400589e	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3224	buffer.c	FUNCTION_50
0x40058a2	        0x488955d8	             mov qword [rbp - 0x28], rdx	      3224	buffer.c	FUNCTION_50
0x40058a6	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      3228	buffer.c	FUNCTION_50	CALL_1
0x40058aa	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      3228	buffer.c	FUNCTION_50	CALL_1
0x40058ae	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3228	buffer.c	FUNCTION_50	CALL_1
0x40058b2	      0xb900000000	                              mov ecx, 0	      3228	buffer.c	FUNCTION_50	CALL_1
0x40058b7	          0x4889c7	                            mov rdi, rax	      3228	buffer.c	FUNCTION_50	CALL_1
0x40058ba	      0xe800000000	                          call 0x40058bf	      3228	buffer.c	FUNCTION_50	CALL_1
0x40058bf	        0x488945f8	                mov qword [rbp - 8], rax	      3228	buffer.c	FUNCTION_50	CALL_1
0x40058c3	      0x48837df800	                  cmp qword [rbp - 8], 0	      3229	buffer.c	FUNCTION_50	IF_1
0x40058c8	            0x7421	                            je 0x40058eb	      3229	buffer.c	FUNCTION_50	IF_1
0x40058ca	    0x8b0500000000	            mov eax, dword [0x040058d0] 	      3229	buffer.c	FUNCTION_50	IF_1
0x40058d0	            0x85c0	                           test eax, eax	      3229	buffer.c	FUNCTION_50	IF_1
0x40058d2	            0x7517	                           jne 0x40058eb	      3229	buffer.c	FUNCTION_50	IF_1
0x40058d4	    0x488b05000000	            mov rax, qword [0x040058db] 	      3230	buffer.c	FUNCTION_50	IF_1
0x40058db	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3230	buffer.c	FUNCTION_50	IF_1
0x40058df	    0x8b92b8000000	            mov edx, dword [rdx + 0xb8] 	      3230	buffer.c	FUNCTION_50	IF_1
0x40058e5	    0x899078010000	            mov dword [rax + 0x178], edx	      3230	buffer.c	FUNCTION_50	IF_1
0x40058eb	        0x488b45f8	                mov rax, qword [rbp - 8]	      3231	buffer.c	FUNCTION_50
0x40058ef	              0xc9	                                   leave	      3232	buffer.c	FUNCTION_50
0x40058f0	              0xc3	                                     ret	      3232	buffer.c	FUNCTION_50
buflist_getfpos	CALL,3:functions,0:SWITCH,0:FOR,0:ELSE,1:DO,0:WHILE,0:IF,1	30
0x4003d85	              0x55	                                push rbp	      2333	buffer.c	FUNCTION_29
0x4003d86	          0x4889e5	                            mov rbp, rsp	      2333	buffer.c	FUNCTION_29
0x4003d89	        0x4883ec10	                           sub rsp, 0x10	      2333	buffer.c	FUNCTION_29
0x4003d8d	    0x488b05000000	            mov rax, qword [0x04003d94] 	      2336	buffer.c	FUNCTION_29	CALL_1
0x4003d94	          0x4889c7	                            mov rdi, rax	      2336	buffer.c	FUNCTION_29	CALL_1
0x4003d97	      0xe800000000	                          call 0x4003d9c	      2336	buffer.c	FUNCTION_29	CALL_1
0x4003d9c	        0x488945f8	                mov qword [rbp - 8], rax	      2336	buffer.c	FUNCTION_29	CALL_1
0x4003da0	    0x488b05000000	            mov rax, qword [0x04003da7] 	      2338	buffer.c	FUNCTION_29
0x4003da7	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2338	buffer.c	FUNCTION_29
0x4003dab	          0x488b12	                    mov rdx, qword [rdx]	      2338	buffer.c	FUNCTION_29
0x4003dae	        0x48895038	             mov qword [rax + 0x38], rdx	      2338	buffer.c	FUNCTION_29
0x4003db2	      0xe800000000	                          call 0x4003db7	      2339	buffer.c	FUNCTION_29	CALL_2
0x4003db7	    0x8b0500000000	            mov eax, dword [0x04003dbd] 	      2341	buffer.c	FUNCTION_29	IF_1
0x4003dbd	            0x85c0	                           test eax, eax	      2341	buffer.c	FUNCTION_29	IF_1
0x4003dbf	            0x7410	                            je 0x4003dd1	      2341	buffer.c	FUNCTION_29	IF_1
0x4003dc1	    0x488b05000000	            mov rax, qword [0x04003dc8] 	      2342	buffer.c	FUNCTION_29	IF_1
0x4003dc8	    0xc74040000000	               mov dword [rax + 0x40], 0	      2342	buffer.c	FUNCTION_29	IF_1
0x4003dcf	            0xeb32	                           jmp 0x4003e03	      2352	buffer.c	FUNCTION_29
0x4003dd1	    0x488b05000000	            mov rax, qword [0x04003dd8] 	      2345	buffer.c	FUNCTION_29	ELSE_1
0x4003dd8	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2345	buffer.c	FUNCTION_29	ELSE_1
0x4003ddc	          0x8b5208	                mov edx, dword [rdx + 8]	      2345	buffer.c	FUNCTION_29	ELSE_1
0x4003ddf	          0x895040	             mov dword [rax + 0x40], edx	      2345	buffer.c	FUNCTION_29	ELSE_1
0x4003de2	      0xe800000000	                          call 0x4003de7	      2346	buffer.c	FUNCTION_29	ELSE_1	CALL_3
0x4003de7	    0x488b05000000	            mov rax, qword [0x04003dee] 	      2348	buffer.c	FUNCTION_29	ELSE_1
0x4003dee	    0xc74044000000	               mov dword [rax + 0x44], 0	      2348	buffer.c	FUNCTION_29	ELSE_1
0x4003df5	    0x488b05000000	            mov rax, qword [0x04003dfc] 	      2350	buffer.c	FUNCTION_29	ELSE_1
0x4003dfc	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      2350	buffer.c	FUNCTION_29	ELSE_1
0x4003e03	              0x90	                                     nop	      2352	buffer.c	FUNCTION_29
0x4003e04	              0xc9	                                   leave	      2352	buffer.c	FUNCTION_29
0x4003e05	              0xc3	                                     ret	      2352	buffer.c	FUNCTION_29
buflist_add	CALL,1:functions,0:SWITCH,0:FOR,0:ELSE,0:DO,0:WHILE,0:IF,1	21
0x400595d	              0x55	                                push rbp	      3262	buffer.c	FUNCTION_52
0x400595e	          0x4889e5	                            mov rbp, rsp	      3262	buffer.c	FUNCTION_52
0x4005961	        0x4883ec20	                           sub rsp, 0x20	      3262	buffer.c	FUNCTION_52
0x4005965	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3262	buffer.c	FUNCTION_52
0x4005969	          0x8975e4	             mov dword [rbp - 0x1c], esi	      3262	buffer.c	FUNCTION_52
0x400596c	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      3265	buffer.c	FUNCTION_52	CALL_1
0x400596f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3265	buffer.c	FUNCTION_52	CALL_1
0x4005973	            0x89d1	                            mov ecx, edx	      3265	buffer.c	FUNCTION_52	CALL_1
0x4005975	      0xba00000000	                              mov edx, 0	      3265	buffer.c	FUNCTION_52	CALL_1
0x400597a	      0xbe00000000	                              mov esi, 0	      3265	buffer.c	FUNCTION_52	CALL_1
0x400597f	          0x4889c7	                            mov rdi, rax	      3265	buffer.c	FUNCTION_52	CALL_1
0x4005982	      0xe800000000	                          call 0x4005987	      3265	buffer.c	FUNCTION_52	CALL_1
0x4005987	        0x488945f8	                mov qword [rbp - 8], rax	      3265	buffer.c	FUNCTION_52	CALL_1
0x400598b	      0x48837df800	                  cmp qword [rbp - 8], 0	      3266	buffer.c	FUNCTION_52	IF_1
0x4005990	            0x740c	                            je 0x400599e	      3266	buffer.c	FUNCTION_52	IF_1
0x4005992	        0x488b45f8	                mov rax, qword [rbp - 8]	      3267	buffer.c	FUNCTION_52	IF_1
0x4005996	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      3267	buffer.c	FUNCTION_52	IF_1
0x400599c	            0xeb05	                           jmp 0x40059a3	      3267	buffer.c	FUNCTION_52	IF_1
0x400599e	      0xb800000000	                              mov eax, 0	      3268	buffer.c	FUNCTION_52
0x40059a3	              0xc9	                                   leave	      3269	buffer.c	FUNCTION_52
0x40059a4	              0xc3	                                     ret	      3269	buffer.c	FUNCTION_52
buf_findsign_id	CALL,0:functions,0:SWITCH,0:FOR,1:ELSE,0:DO,0:WHILE,0:IF,1	23
0x400bf57	              0x55	                                push rbp	      5998	buffer.c	FUNCTION_94
0x400bf58	          0x4889e5	                            mov rbp, rsp	      5998	buffer.c	FUNCTION_94
0x400bf5b	        0x48897de8	             mov qword [rbp - 0x18], rdi	      5998	buffer.c	FUNCTION_94
0x400bf5f	        0x488975e0	             mov qword [rbp - 0x20], rsi	      5998	buffer.c	FUNCTION_94
0x400bf63	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6001	buffer.c	FUNCTION_94	FOR_1
0x400bf67	    0x488b80201c00	          mov rax, qword [rax + 0x1c20] 	      6001	buffer.c	FUNCTION_94	FOR_1
0x400bf6e	        0x488945f8	                mov qword [rbp - 8], rax	      6001	buffer.c	FUNCTION_94	FOR_1
0x400bf72	            0xeb22	                           jmp 0x400bf96	      6001	buffer.c	FUNCTION_94	FOR_1
0x400bf74	        0x488b45f8	                mov rax, qword [rbp - 8]	      6002	buffer.c	FUNCTION_94	FOR_1	IF_1
0x400bf78	        0x488b4008	                mov rax, qword [rax + 8]	      6002	buffer.c	FUNCTION_94	FOR_1	IF_1
0x400bf7c	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      6002	buffer.c	FUNCTION_94	FOR_1	IF_1
0x400bf80	            0x7508	                           jne 0x400bf8a	      6002	buffer.c	FUNCTION_94	FOR_1	IF_1
0x400bf82	        0x488b45f8	                mov rax, qword [rbp - 8]	      6003	buffer.c	FUNCTION_94	FOR_1	IF_1
0x400bf86	            0x8b00	                    mov eax, dword [rax]	      6003	buffer.c	FUNCTION_94	FOR_1	IF_1
0x400bf88	            0xeb18	                           jmp 0x400bfa2	      6003	buffer.c	FUNCTION_94	FOR_1	IF_1
0x400bf8a	        0x488b45f8	                mov rax, qword [rbp - 8]	      6001	buffer.c	FUNCTION_94	FOR_1
0x400bf8e	        0x488b4018	            mov rax, qword [rax + 0x18] 	      6001	buffer.c	FUNCTION_94	FOR_1
0x400bf92	        0x488945f8	                mov qword [rbp - 8], rax	      6001	buffer.c	FUNCTION_94	FOR_1
0x400bf96	      0x48837df800	                  cmp qword [rbp - 8], 0	      6001	buffer.c	FUNCTION_94	FOR_1
0x400bf9b	            0x75d7	                           jne 0x400bf74	      6001	buffer.c	FUNCTION_94	FOR_1
0x400bf9d	      0xb800000000	                              mov eax, 0	      6005	buffer.c	FUNCTION_94
0x400bfa2	              0x5d	                                 pop rbp	      6006	buffer.c	FUNCTION_94
0x400bfa3	              0xc3	                                     ret	      6006	buffer.c	FUNCTION_94
insert_sign	CALL,4:functions,0:SWITCH,0:FOR,0:ELSE,1:DO,0:WHILE,0:IF,5	61
0x400bae8	              0x55	                                push rbp	      5789	buffer.c	FUNCTION_88
0x400bae9	          0x4889e5	                            mov rbp, rsp	      5789	buffer.c	FUNCTION_88
0x400baec	        0x4883ec40	                           sub rsp, 0x40	      5789	buffer.c	FUNCTION_88
0x400baf0	        0x48897de8	             mov qword [rbp - 0x18], rdi	      5789	buffer.c	FUNCTION_88
0x400baf4	        0x488975e0	             mov qword [rbp - 0x20], rsi	      5789	buffer.c	FUNCTION_88
0x400baf8	        0x488955d8	             mov qword [rbp - 0x28], rdx	      5789	buffer.c	FUNCTION_88
0x400bafc	          0x894dd4	             mov dword [rbp - 0x2c], ecx	      5789	buffer.c	FUNCTION_88
0x400baff	        0x4c8945c8	              mov qword [rbp - 0x38], r8	      5789	buffer.c	FUNCTION_88
0x400bb03	        0x44894dd0	             mov dword [rbp - 0x30], r9d	      5789	buffer.c	FUNCTION_88
0x400bb07	      0xbe00000000	                              mov esi, 0	      5792	buffer.c	FUNCTION_88	CALL_1
0x400bb0c	      0xbf28000000	                           mov edi, 0x28	      5792	buffer.c	FUNCTION_88	CALL_1
0x400bb11	      0xe800000000	                          call 0x400bb16	      5792	buffer.c	FUNCTION_88	CALL_1
0x400bb16	        0x488945f8	                mov qword [rbp - 8], rax	      5792	buffer.c	FUNCTION_88	CALL_1
0x400bb1a	      0x48837df800	                  cmp qword [rbp - 8], 0	      5793	buffer.c	FUNCTION_88	IF_1
0x400bb1f	     0xf84ab000000	                            je 0x400bbd0	      5793	buffer.c	FUNCTION_88	IF_1
0x400bb25	        0x488b45f8	                mov rax, qword [rbp - 8]	      5795	buffer.c	FUNCTION_88	IF_1
0x400bb29	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      5795	buffer.c	FUNCTION_88	IF_1
0x400bb2c	            0x8910	                    mov dword [rax], edx	      5795	buffer.c	FUNCTION_88	IF_1
0x400bb2e	        0x488b45f8	                mov rax, qword [rbp - 8]	      5796	buffer.c	FUNCTION_88	IF_1
0x400bb32	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      5796	buffer.c	FUNCTION_88	IF_1
0x400bb36	        0x48895008	                mov qword [rax + 8], rdx	      5796	buffer.c	FUNCTION_88	IF_1
0x400bb3a	        0x488b45f8	                mov rax, qword [rbp - 8]	      5797	buffer.c	FUNCTION_88	IF_1
0x400bb3e	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      5797	buffer.c	FUNCTION_88	IF_1
0x400bb41	          0x895010	             mov dword [rax + 0x10], edx	      5797	buffer.c	FUNCTION_88	IF_1
0x400bb44	        0x488b45f8	                mov rax, qword [rbp - 8]	      5798	buffer.c	FUNCTION_88	IF_1
0x400bb48	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      5798	buffer.c	FUNCTION_88	IF_1
0x400bb4c	        0x48895018	             mov qword [rax + 0x18], rdx	      5798	buffer.c	FUNCTION_88	IF_1
0x400bb50	        0x488b45f8	                mov rax, qword [rbp - 8]	      5800	buffer.c	FUNCTION_88	IF_1
0x400bb54	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      5800	buffer.c	FUNCTION_88	IF_1
0x400bb58	        0x48895020	             mov qword [rax + 0x20], rdx	      5800	buffer.c	FUNCTION_88	IF_1
0x400bb5c	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      5801	buffer.c	FUNCTION_88	IF_1	IF_2
0x400bb61	            0x740c	                            je 0x400bb6f	      5801	buffer.c	FUNCTION_88	IF_1	IF_2
0x400bb63	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5802	buffer.c	FUNCTION_88	IF_1	IF_2
0x400bb67	        0x488b55f8	                mov rdx, qword [rbp - 8]	      5802	buffer.c	FUNCTION_88	IF_1	IF_2
0x400bb6b	        0x48895020	             mov qword [rax + 0x20], rdx	      5802	buffer.c	FUNCTION_88	IF_1	IF_2
0x400bb6f	      0x48837de000	               cmp qword [rbp - 0x20], 0	      5805	buffer.c	FUNCTION_88	IF_1	IF_3
0x400bb74	            0x754e	                           jne 0x400bbc4	      5805	buffer.c	FUNCTION_88	IF_1	IF_3
0x400bb76	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5809	buffer.c	FUNCTION_88	IF_1	IF_3	IF_4
0x400bb7a	    0x488b80201c00	          mov rax, qword [rax + 0x1c20] 	      5809	buffer.c	FUNCTION_88	IF_1	IF_3	IF_4
0x400bb81	          0x4885c0	                           test rax, rax	      5809	buffer.c	FUNCTION_88	IF_1	IF_3	IF_4
0x400bb84	            0x7516	                           jne 0x400bb9c	      5809	buffer.c	FUNCTION_88	IF_1	IF_3	IF_4
0x400bb86	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5811	buffer.c	FUNCTION_88	IF_1	IF_3	IF_4	CALL_2
0x400bb8a	      0xbe28000000	                           mov esi, 0x28	      5811	buffer.c	FUNCTION_88	IF_1	IF_3	IF_4	CALL_2
0x400bb8f	          0x4889c7	                            mov rdi, rax	      5811	buffer.c	FUNCTION_88	IF_1	IF_3	IF_4	CALL_2
0x400bb92	      0xe800000000	                          call 0x400bb97	      5811	buffer.c	FUNCTION_88	IF_1	IF_3	IF_4	CALL_2
0x400bb97	      0xe800000000	                          call 0x400bb9c	      5812	buffer.c	FUNCTION_88	IF_1	IF_3	IF_4	CALL_3
0x400bb9c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5816	buffer.c	FUNCTION_88	IF_1	IF_3
0x400bba0	        0x488b55f8	                mov rdx, qword [rbp - 8]	      5816	buffer.c	FUNCTION_88	IF_1	IF_3
0x400bba4	    0x488990201c00	          mov qword [rax + 0x1c20], rdx 	      5816	buffer.c	FUNCTION_88	IF_1	IF_3
0x400bbab	      0xe800000000	                          call 0x400bbb0	      5818	buffer.c	FUNCTION_88	IF_1	IF_3	IF_5	CALL_4
0x400bbb0	            0x85c0	                           test eax, eax	      5818	buffer.c	FUNCTION_88	IF_1	IF_3	IF_5	CALL_4
0x400bbb2	            0x741c	                            je 0x400bbd0	      5818	buffer.c	FUNCTION_88	IF_1	IF_3	IF_5	CALL_4
0x400bbb4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5819	buffer.c	FUNCTION_88	IF_1	IF_3	IF_5
0x400bbb8	    0xc780281c0000	            mov dword [rax + 0x1c28], 1 	      5819	buffer.c	FUNCTION_88	IF_1	IF_3	IF_5
0x400bbc2	            0xeb0c	                           jmp 0x400bbd0	      5825	buffer.c	FUNCTION_88	ELSE_1
0x400bbc4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5823	buffer.c	FUNCTION_88	IF_1	ELSE_1
0x400bbc8	        0x488b55f8	                mov rdx, qword [rbp - 8]	      5823	buffer.c	FUNCTION_88	IF_1	ELSE_1
0x400bbcc	        0x48895018	             mov qword [rax + 0x18], rdx	      5823	buffer.c	FUNCTION_88	IF_1	ELSE_1
0x400bbd0	              0x90	                                     nop	      5825	buffer.c	FUNCTION_88	ELSE_1
0x400bbd1	              0xc9	                                   leave	      5825	buffer.c	FUNCTION_88	ELSE_1
0x400bbd2	              0xc3	                                     ret	      5825	buffer.c	FUNCTION_88	ELSE_1
buf_hide	CALL,0:functions,0:SWITCH,1:FOR,0:ELSE,0:DO,0:WHILE,0:IF,0	34
0x400b7bd	              0x55	                                push rbp	      5659	buffer.c	FUNCTION_83
0x400b7be	          0x4889e5	                            mov rbp, rsp	      5659	buffer.c	FUNCTION_83
0x400b7c1	        0x48897df8	                mov qword [rbp - 8], rdi	      5659	buffer.c	FUNCTION_83
0x400b7c5	        0x488b45f8	                mov rax, qword [rbp - 8]	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x400b7c9	    0x488b80101400	          mov rax, qword [rax + 0x1410] 	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x400b7d0	           0xfb600	                   movzx eax, byte [rax]	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x400b7d3	           0xfb6c0	                           movzx eax, al	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x400b7d6	          0x83f868	                           cmp eax, 0x68	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x400b7d9	            0x741d	                            je 0x400b7f8	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x400b7db	          0x83f868	                           cmp eax, 0x68	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x400b7de	            0x7f07	                            jg 0x400b7e7	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x400b7e0	          0x83f864	                           cmp eax, 0x64	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x400b7e3	            0x740c	                            je 0x400b7f1	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x400b7e5	            0xeb18	                           jmp 0x400b7ff	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x400b7e7	          0x83f875	                           cmp eax, 0x75	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x400b7ea	            0x7405	                            je 0x400b7f1	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x400b7ec	          0x83f877	                           cmp eax, 0x77	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x400b7ef	            0x750e	                           jne 0x400b7ff	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x400b7f1	      0xb800000000	                              mov eax, 0	      5665	buffer.c	FUNCTION_83	SWITCH_1
0x400b7f6	            0xeb28	                           jmp 0x400b820	      5665	buffer.c	FUNCTION_83	SWITCH_1
0x400b7f8	      0xb801000000	                              mov eax, 1	      5666	buffer.c	FUNCTION_83	SWITCH_1
0x400b7fd	            0xeb21	                           jmp 0x400b820	      5666	buffer.c	FUNCTION_83	SWITCH_1
0x400b7ff	    0x8b0500000000	            mov eax, dword [0x0400b805] 	      5668	buffer.c	FUNCTION_83
0x400b805	            0x85c0	                           test eax, eax	      5668	buffer.c	FUNCTION_83
0x400b807	            0x750a	                           jne 0x400b813	      5668	buffer.c	FUNCTION_83
0x400b809	    0x8b0500000000	            mov eax, dword [0x0400b80f] 	      5668	buffer.c	FUNCTION_83
0x400b80f	            0x85c0	                           test eax, eax	      5668	buffer.c	FUNCTION_83
0x400b811	            0x7407	                            je 0x400b81a	      5668	buffer.c	FUNCTION_83
0x400b813	      0xb801000000	                              mov eax, 1	      5668	buffer.c	FUNCTION_83
0x400b818	            0xeb05	                           jmp 0x400b81f	      5668	buffer.c	FUNCTION_83
0x400b81a	      0xb800000000	                              mov eax, 0	      5668	buffer.c	FUNCTION_83
0x400b81f	              0x90	                                     nop	      5668	buffer.c	FUNCTION_83
0x400b820	              0x5d	                                 pop rbp	      5669	buffer.c	FUNCTION_83
0x400b821	              0xc3	                                     ret	      5669	buffer.c	FUNCTION_83
no_write_message	CALL,5:functions,0:SWITCH,0:FOR,0:ELSE,1:DO,0:WHILE,0:IF,1	20
0x4002cf0	              0x55	                                push rbp	      1818	buffer.c	FUNCTION_23
0x4002cf1	          0x4889e5	                            mov rbp, rsp	      1818	buffer.c	FUNCTION_23
0x4002cf4	    0x488b05000000	            mov rax, qword [0x04002cfb] 	      1820	buffer.c	FUNCTION_23	IF_1	CALL_1
0x4002cfb	    0x488b80481c00	          mov rax, qword [rax + 0x1c48] 	      1820	buffer.c	FUNCTION_23	IF_1	CALL_1
0x4002d02	          0x4889c7	                            mov rdi, rax	      1820	buffer.c	FUNCTION_23	IF_1	CALL_1
0x4002d05	      0xe800000000	                          call 0x4002d0a	      1820	buffer.c	FUNCTION_23	IF_1	CALL_1
0x4002d0a	            0x85c0	                           test eax, eax	      1820	buffer.c	FUNCTION_23	IF_1	CALL_1
0x4002d0c	            0x7414	                            je 0x4002d22	      1820	buffer.c	FUNCTION_23	IF_1	CALL_1
0x4002d0e	      0xbf00000000	                              mov edi, 0	      1821	buffer.c	FUNCTION_23	CALL_3
0x4002d13	      0xe800000000	                          call 0x4002d18	      1821	buffer.c	FUNCTION_23	CALL_3
0x4002d18	          0x4889c7	                            mov rdi, rax	      1821	buffer.c	FUNCTION_23	CALL_3
0x4002d1b	      0xe800000000	                          call 0x4002d20	      1821	buffer.c	FUNCTION_23	CALL_3
0x4002d20	            0xeb12	                           jmp 0x4002d34	      1825	buffer.c	FUNCTION_23
0x4002d22	      0xbf00000000	                              mov edi, 0	      1824	buffer.c	FUNCTION_23	CALL_5
0x4002d27	      0xe800000000	                          call 0x4002d2c	      1824	buffer.c	FUNCTION_23	CALL_5
0x4002d2c	          0x4889c7	                            mov rdi, rax	      1824	buffer.c	FUNCTION_23	CALL_5
0x4002d2f	      0xe800000000	                          call 0x4002d34	      1824	buffer.c	FUNCTION_23	CALL_5
0x4002d34	              0x90	                                     nop	      1825	buffer.c	FUNCTION_23
0x4002d35	              0x5d	                                 pop rbp	      1825	buffer.c	FUNCTION_23
0x4002d36	              0xc3	                                     ret	      1825	buffer.c	FUNCTION_23
buflist_new	CALL,51:functions,0:SWITCH,0:FOR,0:ELSE,3:DO,0:WHILE,0:IF,32	456
0x4002dfd	              0x55	                                push rbp	      1876	buffer.c	FUNCTION_26
0x4002dfe	          0x4889e5	                            mov rbp, rsp	      1876	buffer.c	FUNCTION_26
0x4002e01	    0x4881ece00000	                           sub rsp, 0xe0	      1876	buffer.c	FUNCTION_26
0x4002e08	    0x4889bd38ffff	             mov qword [rbp - 0xc8], rdi	      1876	buffer.c	FUNCTION_26
0x4002e0f	    0x4889b530ffff	             mov qword [rbp - 0xd0], rsi	      1876	buffer.c	FUNCTION_26
0x4002e16	    0x48899528ffff	             mov qword [rbp - 0xd8], rdx	      1876	buffer.c	FUNCTION_26
0x4002e1d	    0x898d24ffffff	             mov dword [rbp - 0xdc], ecx	      1876	buffer.c	FUNCTION_26
0x4002e23	    0x64488b042528	                mov rax, qword fs:[0x28]	      1876	buffer.c	FUNCTION_26
0x4002e2c	        0x488945f8	                mov qword [rbp - 8], rax	      1876	buffer.c	FUNCTION_26
0x4002e30	            0x31c0	                            xor eax, eax	      1876	buffer.c	FUNCTION_26
0x4002e32	    0x8b0500000000	            mov eax, dword [0x04002e38] 	      1882	buffer.c	FUNCTION_26	IF_1
0x4002e38	          0x83f801	                              cmp eax, 1	      1882	buffer.c	FUNCTION_26	IF_1
0x4002e3b	            0x750a	                           jne 0x4002e47	      1882	buffer.c	FUNCTION_26	IF_1
0x4002e3d	      0xbf00000000	                              mov edi, 0	      1883	buffer.c	FUNCTION_26	CALL_1
0x4002e42	      0xe800000000	                          call 0x4002e47	      1883	buffer.c	FUNCTION_26	CALL_1
0x4002e47	    0x488b05000000	            mov rax, qword [0x04002e4e] 	      1885	buffer.c	FUNCTION_26	CALL_2
0x4002e4e	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	      1885	buffer.c	FUNCTION_26	CALL_2
0x4002e55	    0x488d8d38ffff	                   lea rcx, [rbp - 0xc8]	      1885	buffer.c	FUNCTION_26	CALL_2
0x4002e5c	          0x4889ce	                            mov rsi, rcx	      1885	buffer.c	FUNCTION_26	CALL_2
0x4002e5f	          0x4889c7	                            mov rdi, rax	      1885	buffer.c	FUNCTION_26	CALL_2
0x4002e62	      0xe800000000	                          call 0x4002e67	      1885	buffer.c	FUNCTION_26	CALL_2
0x4002e67	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      1893	buffer.c	FUNCTION_26	IF_2	CALL_3
0x4002e6e	          0x4885c0	                           test rax, rax	      1893	buffer.c	FUNCTION_26	IF_2	CALL_3
0x4002e71	            0x741d	                            je 0x4002e90	      1893	buffer.c	FUNCTION_26	IF_2	CALL_3
0x4002e73	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      1893	buffer.c	FUNCTION_26	IF_2	CALL_3
0x4002e7a	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	      1893	buffer.c	FUNCTION_26	IF_2	CALL_3
0x4002e81	          0x4889d6	                            mov rsi, rdx	      1893	buffer.c	FUNCTION_26	IF_2	CALL_3
0x4002e84	          0x4889c7	                            mov rdi, rax	      1893	buffer.c	FUNCTION_26	IF_2	CALL_3
0x4002e87	      0xe800000000	                          call 0x4002e8c	      1893	buffer.c	FUNCTION_26	IF_2	CALL_3
0x4002e8c	            0x85c0	                           test eax, eax	      1893	buffer.c	FUNCTION_26	IF_2	CALL_3
0x4002e8e	            0x790b	                           jns 0x4002e9b	      1893	buffer.c	FUNCTION_26	IF_2	CALL_3
0x4002e90	    0x48c78560ffff	mov qword [rbp - 0xa0], 0xffffffffffffffff	      1894	buffer.c	FUNCTION_26	IF_2
0x4002e9b	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1896	buffer.c	FUNCTION_26	IF_3
0x4002ea2	          0x4885c0	                           test rax, rax	      1896	buffer.c	FUNCTION_26	IF_3
0x4002ea5	     0xf844a010000	                            je 0x4002ff5	      1896	buffer.c	FUNCTION_26	IF_3
0x4002eab	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      1896	buffer.c	FUNCTION_26	IF_3
0x4002eb1	          0x83e00c	                            and eax, 0xc	      1896	buffer.c	FUNCTION_26	IF_3
0x4002eb4	            0x85c0	                           test eax, eax	      1896	buffer.c	FUNCTION_26	IF_3
0x4002eb6	     0xf8539010000	                           jne 0x4002ff5	      1896	buffer.c	FUNCTION_26	IF_3
0x4002ebc	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1898	buffer.c	FUNCTION_26	IF_3	CALL_4
0x4002ec3	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	      1896	buffer.c	FUNCTION_26	IF_3
0x4002eca	          0x4889d6	                            mov rsi, rdx	      1896	buffer.c	FUNCTION_26	IF_3
0x4002ecd	          0x4889c7	                            mov rdi, rax	      1896	buffer.c	FUNCTION_26	IF_3
0x4002ed0	      0xe8fb0f0000	          call sym.buflist_findname_stat	      1896	buffer.c	FUNCTION_26	IF_3
0x4002ed5	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      1896	buffer.c	FUNCTION_26	IF_3
0x4002edc	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	      1896	buffer.c	FUNCTION_26	IF_3
0x4002ee4	     0xf840b010000	                            je 0x4002ff5	      1896	buffer.c	FUNCTION_26	IF_3
0x4002eea	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1904	buffer.c	FUNCTION_26	IF_3	CALL_6
0x4002ef1	          0x4889c7	                            mov rdi, rax	      1904	buffer.c	FUNCTION_26	IF_3	CALL_6
0x4002ef4	      0xe800000000	                          call 0x4002ef9	      1904	buffer.c	FUNCTION_26	IF_3	CALL_6
0x4002ef9	    0x4883bd28ffff	               cmp qword [rbp - 0xd8], 0	      1905	buffer.c	FUNCTION_26	IF_3	IF_4
0x4002f01	            0x7428	                            je 0x4002f2b	      1905	buffer.c	FUNCTION_26	IF_3	IF_4
0x4002f03	    0x488b35000000	            mov rsi, qword [0x04002f0a] 	      1906	buffer.c	FUNCTION_26	IF_3	CALL_7
0x4002f0a	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	      1906	buffer.c	FUNCTION_26	IF_3	CALL_7
0x4002f11	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1906	buffer.c	FUNCTION_26	IF_3	CALL_7
0x4002f18	    0x41b800000000	                              mov r8d, 0	      1906	buffer.c	FUNCTION_26	IF_3	CALL_7
0x4002f1e	      0xb900000000	                              mov ecx, 0	      1906	buffer.c	FUNCTION_26	IF_3	CALL_7
0x4002f23	          0x4889c7	                            mov rdi, rax	      1906	buffer.c	FUNCTION_26	IF_3	CALL_7
0x4002f26	      0xe8141a0000	                call sym.buflist_setfpos	      1906	buffer.c	FUNCTION_26	IF_3	CALL_7
0x4002f2b	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      1908	buffer.c	FUNCTION_26	IF_3	IF_5
0x4002f31	          0x83e010	                           and eax, 0x10	      1908	buffer.c	FUNCTION_26	IF_3	IF_5
0x4002f34	            0x85c0	                           test eax, eax	      1908	buffer.c	FUNCTION_26	IF_3	IF_5
0x4002f36	            0x7514	                           jne 0x4002f4c	      1908	buffer.c	FUNCTION_26	IF_3	IF_5
0x4002f38	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1911	buffer.c	FUNCTION_26	IF_3	CALL_8
0x4002f3f	      0xbe00000000	                              mov esi, 0	      1911	buffer.c	FUNCTION_26	IF_3	CALL_8
0x4002f44	          0x4889c7	                            mov rdi, rax	      1911	buffer.c	FUNCTION_26	IF_3	CALL_8
0x4002f47	      0xe800000000	                          call 0x4002f4c	      1911	buffer.c	FUNCTION_26	IF_3	CALL_8
0x4002f4c	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      1913	buffer.c	FUNCTION_26	IF_3	IF_6
0x4002f52	          0x83e002	                              and eax, 2	      1913	buffer.c	FUNCTION_26	IF_3	IF_6
0x4002f55	            0x85c0	                           test eax, eax	      1913	buffer.c	FUNCTION_26	IF_3	IF_6
0x4002f57	     0xf848c000000	                            je 0x4002fe9	      1913	buffer.c	FUNCTION_26	IF_3	IF_6
0x4002f5d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1913	buffer.c	FUNCTION_26	IF_3	IF_6
0x4002f64	    0x8b8024140000	          mov eax, dword [rax + 0x1424] 	      1913	buffer.c	FUNCTION_26	IF_3	IF_6
0x4002f6a	            0x85c0	                           test eax, eax	      1913	buffer.c	FUNCTION_26	IF_3	IF_6
0x4002f6c	            0x757b	                           jne 0x4002fe9	      1913	buffer.c	FUNCTION_26	IF_3	IF_6
0x4002f6e	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1917	buffer.c	FUNCTION_26	IF_3	IF_6
0x4002f75	    0xc78024140000	            mov dword [rax + 0x1424], 1 	      1917	buffer.c	FUNCTION_26	IF_3	IF_6
0x4002f7f	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	      1918	buffer.c	FUNCTION_26	IF_3	IF_6	CALL_9
0x4002f86	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	      1918	buffer.c	FUNCTION_26	IF_3	IF_6	CALL_9
0x4002f8d	          0x4889d6	                            mov rsi, rdx	      1918	buffer.c	FUNCTION_26	IF_3	IF_6	CALL_9
0x4002f90	          0x4889c7	                            mov rdi, rax	      1918	buffer.c	FUNCTION_26	IF_3	IF_6	CALL_9
0x4002f93	      0xe800000000	                          call 0x4002f98	      1918	buffer.c	FUNCTION_26	IF_3	IF_6	CALL_9
0x4002f98	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      1919	buffer.c	FUNCTION_26	IF_3	IF_6	IF_7
0x4002f9e	          0x83e004	                              and eax, 4	      1919	buffer.c	FUNCTION_26	IF_3	IF_6	IF_7
0x4002fa1	            0x85c0	                           test eax, eax	      1919	buffer.c	FUNCTION_26	IF_3	IF_6	IF_7
0x4002fa3	            0x7544	                           jne 0x4002fe9	      1919	buffer.c	FUNCTION_26	IF_3	IF_6	IF_7
0x4002fa5	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1921	buffer.c	FUNCTION_26	IF_3	IF_6	IF_7	IF_8	CALL_10
0x4002fac	          0x4989c0	                             mov r8, rax	      1921	buffer.c	FUNCTION_26	IF_3	IF_6	IF_7	IF_8	CALL_10
0x4002faf	      0xb900000000	                              mov ecx, 0	      1921	buffer.c	FUNCTION_26	IF_3	IF_6	IF_7	IF_8	CALL_10
0x4002fb4	      0xba00000000	                              mov edx, 0	      1921	buffer.c	FUNCTION_26	IF_3	IF_6	IF_7	IF_8	CALL_10
0x4002fb9	      0xbe00000000	                              mov esi, 0	      1921	buffer.c	FUNCTION_26	IF_3	IF_6	IF_7	IF_8	CALL_10
0x4002fbe	      0xbf00000000	                              mov edi, 0	      1921	buffer.c	FUNCTION_26	IF_3	IF_6	IF_7	IF_8	CALL_10
0x4002fc3	      0xe800000000	                          call 0x4002fc8	      1921	buffer.c	FUNCTION_26	IF_3	IF_6	IF_7	IF_8	CALL_10
0x4002fc8	            0x85c0	                           test eax, eax	      1921	buffer.c	FUNCTION_26	IF_3	IF_6	IF_7	IF_8	CALL_10
0x4002fca	            0x741d	                            je 0x4002fe9	      1921	buffer.c	FUNCTION_26	IF_3	IF_6	IF_7	IF_8	CALL_10
0x4002fcc	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	      1922	buffer.c	FUNCTION_26	IF_3	IF_6	IF_7	IF_8	CALL_11
0x4002fd3	          0x4889c7	                            mov rdi, rax	      1922	buffer.c	FUNCTION_26	IF_3	IF_6	IF_7	IF_8	CALL_11
0x4002fd6	      0xe800000000	                          call 0x4002fdb	      1922	buffer.c	FUNCTION_26	IF_3	IF_6	IF_7	IF_8	CALL_11
0x4002fdb	            0x85c0	                           test eax, eax	      1922	buffer.c	FUNCTION_26	IF_3	IF_6	IF_7	IF_8	CALL_11
0x4002fdd	            0x750a	                           jne 0x4002fe9	      1922	buffer.c	FUNCTION_26	IF_3	IF_6	IF_7	IF_8	CALL_11
0x4002fdf	      0xb800000000	                              mov eax, 0	      1923	buffer.c	FUNCTION_26	IF_3	IF_6	IF_7	IF_8
0x4002fe4	      0xe9fd060000	                           jmp 0x40036e6	      1923	buffer.c	FUNCTION_26	IF_3	IF_6	IF_7	IF_8
0x4002fe9	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1926	buffer.c	FUNCTION_26	IF_3
0x4002ff0	      0xe9f1060000	                           jmp 0x40036e6	      1926	buffer.c	FUNCTION_26	IF_3
0x4002ff5	    0x48c78548ffff	               mov qword [rbp - 0xb8], 0	      1937	buffer.c	FUNCTION_26
0x4003000	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      1938	buffer.c	FUNCTION_26	IF_9	CALL_12
0x4003006	          0x83e001	                              and eax, 1	      1938	buffer.c	FUNCTION_26	IF_9	CALL_12
0x4003009	            0x85c0	                           test eax, eax	      1938	buffer.c	FUNCTION_26	IF_9	CALL_12
0x400300b	     0xf84cf000000	                            je 0x40030e0	      1938	buffer.c	FUNCTION_26	IF_9	CALL_12
0x4003011	      0xe800000000	                          call 0x4003016	      1938	buffer.c	FUNCTION_26	IF_9	CALL_12
0x4003016	            0x85c0	                           test eax, eax	      1938	buffer.c	FUNCTION_26	IF_9	CALL_12
0x4003018	     0xf84c2000000	                            je 0x40030e0	      1938	buffer.c	FUNCTION_26	IF_9	CALL_12
0x400301e	    0x488b05000000	            mov rax, qword [0x04003025] 	      1940	buffer.c	FUNCTION_26	IF_9
0x4003025	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      1940	buffer.c	FUNCTION_26	IF_9
0x400302c	    0x488b05000000	            mov rax, qword [0x04003033] 	      1943	buffer.c	FUNCTION_26	IF_9	IF_10
0x4003033	    0x8b8024140000	          mov eax, dword [rax + 0x1424] 	      1943	buffer.c	FUNCTION_26	IF_9	IF_10
0x4003039	            0x85c0	                           test eax, eax	      1943	buffer.c	FUNCTION_26	IF_9	IF_10
0x400303b	            0x7423	                            je 0x4003060	      1943	buffer.c	FUNCTION_26	IF_9	IF_10
0x400303d	    0x488b05000000	            mov rax, qword [0x04003044] 	      1944	buffer.c	FUNCTION_26	IF_9	CALL_13
0x4003044	          0x4989c0	                             mov r8, rax	      1944	buffer.c	FUNCTION_26	IF_9	CALL_13
0x4003047	      0xb900000000	                              mov ecx, 0	      1944	buffer.c	FUNCTION_26	IF_9	CALL_13
0x400304c	      0xba00000000	                              mov edx, 0	      1944	buffer.c	FUNCTION_26	IF_9	CALL_13
0x4003051	      0xbe00000000	                              mov esi, 0	      1944	buffer.c	FUNCTION_26	IF_9	CALL_13
0x4003056	      0xbf01000000	                              mov edi, 1	      1944	buffer.c	FUNCTION_26	IF_9	CALL_13
0x400305b	      0xe800000000	                          call 0x4003060	      1944	buffer.c	FUNCTION_26	IF_9	CALL_13
0x4003060	    0x488b05000000	            mov rax, qword [0x04003067] 	      1945	buffer.c	FUNCTION_26	IF_9	IF_11
0x4003067	    0x48398548ffff	            cmp qword [rbp - 0xb8], rax 	      1945	buffer.c	FUNCTION_26	IF_9	IF_11
0x400306e	            0x7523	                           jne 0x4003093	      1945	buffer.c	FUNCTION_26	IF_9	IF_11
0x4003070	    0x488b05000000	            mov rax, qword [0x04003077] 	      1946	buffer.c	FUNCTION_26	IF_9	CALL_14
0x4003077	          0x4989c0	                             mov r8, rax	      1946	buffer.c	FUNCTION_26	IF_9	CALL_14
0x400307a	      0xb900000000	                              mov ecx, 0	      1946	buffer.c	FUNCTION_26	IF_9	CALL_14
0x400307f	      0xba00000000	                              mov edx, 0	      1946	buffer.c	FUNCTION_26	IF_9	CALL_14
0x4003084	      0xbe00000000	                              mov esi, 0	      1946	buffer.c	FUNCTION_26	IF_9	CALL_14
0x4003089	      0xbf0f000000	                            mov edi, 0xf	      1946	buffer.c	FUNCTION_26	IF_9	CALL_14
0x400308e	      0xe800000000	                          call 0x4003093	      1946	buffer.c	FUNCTION_26	IF_9	CALL_14
0x4003093	      0xe800000000	                          call 0x4003098	      1948	buffer.c	FUNCTION_26	IF_9	IF_12	CALL_15
0x4003098	            0x85c0	                           test eax, eax	      1948	buffer.c	FUNCTION_26	IF_9	IF_12	CALL_15
0x400309a	            0x740a	                            je 0x40030a6	      1948	buffer.c	FUNCTION_26	IF_9	IF_12	CALL_15
0x400309c	      0xb800000000	                              mov eax, 0	      1949	buffer.c	FUNCTION_26	IF_9	IF_12
0x40030a1	      0xe940060000	                           jmp 0x40036e6	      1949	buffer.c	FUNCTION_26	IF_9	IF_12
0x40030a6	    0x488b05000000	            mov rax, qword [0x040030ad] 	      1951	buffer.c	FUNCTION_26	IF_9	IF_13
0x40030ad	    0x48398548ffff	            cmp qword [rbp - 0xb8], rax 	      1951	buffer.c	FUNCTION_26	IF_9	IF_13
0x40030b4	            0x752a	                           jne 0x40030e0	      1951	buffer.c	FUNCTION_26	IF_9	IF_13
0x40030b6	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1954	buffer.c	FUNCTION_26	IF_9	IF_13	CALL_16
0x40030bd	    0x480510140000	                         add rax, 0x1410	      1954	buffer.c	FUNCTION_26	IF_9	IF_13	CALL_16
0x40030c3	          0x4889c7	                            mov rdi, rax	      1954	buffer.c	FUNCTION_26	IF_9	IF_13	CALL_16
0x40030c6	      0xe800000000	                          call 0x40030cb	      1954	buffer.c	FUNCTION_26	IF_9	IF_13	CALL_16
0x40030cb	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1955	buffer.c	FUNCTION_26	IF_9	IF_13	CALL_17
0x40030d2	    0x480518140000	                         add rax, 0x1418	      1955	buffer.c	FUNCTION_26	IF_9	IF_13	CALL_17
0x40030d8	          0x4889c7	                            mov rdi, rax	      1955	buffer.c	FUNCTION_26	IF_9	IF_13	CALL_17
0x40030db	      0xe800000000	                          call 0x40030e0	      1955	buffer.c	FUNCTION_26	IF_9	IF_13	CALL_17
0x40030e0	    0x488b05000000	            mov rax, qword [0x040030e7] 	      1958	buffer.c	FUNCTION_26	IF_14
0x40030e7	    0x48398548ffff	            cmp qword [rbp - 0xb8], rax 	      1958	buffer.c	FUNCTION_26	IF_14
0x40030ee	            0x7510	                           jne 0x4003100	      1958	buffer.c	FUNCTION_26	IF_14
0x40030f0	    0x488b05000000	            mov rax, qword [0x040030f7] 	      1958	buffer.c	FUNCTION_26	IF_14
0x40030f7	          0x4885c0	                           test rax, rax	      1958	buffer.c	FUNCTION_26	IF_14
0x40030fa	     0xf85c0000000	                           jne 0x40031c0	      1958	buffer.c	FUNCTION_26	IF_14
0x4003100	      0xbf501c0000	                         mov edi, 0x1c50	      1960	buffer.c	FUNCTION_26	IF_14	CALL_18
0x4003105	      0xe800000000	                          call 0x400310a	      1960	buffer.c	FUNCTION_26	IF_14	CALL_18
0x400310a	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      1960	buffer.c	FUNCTION_26	IF_14	CALL_18
0x4003111	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	      1961	buffer.c	FUNCTION_26	IF_14	IF_15
0x4003119	            0x7519	                           jne 0x4003134	      1961	buffer.c	FUNCTION_26	IF_14	IF_15
0x400311b	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1963	buffer.c	FUNCTION_26	IF_14	IF_15	CALL_19
0x4003122	          0x4889c7	                            mov rdi, rax	      1963	buffer.c	FUNCTION_26	IF_14	IF_15	CALL_19
0x4003125	      0xe800000000	                          call 0x400312a	      1963	buffer.c	FUNCTION_26	IF_14	IF_15	CALL_19
0x400312a	      0xb800000000	                              mov eax, 0	      1964	buffer.c	FUNCTION_26	IF_14	IF_15
0x400312f	      0xe9b2050000	                           jmp 0x40036e6	      1964	buffer.c	FUNCTION_26	IF_14	IF_15
0x4003134	      0xe800000000	                          call 0x4003139	      1968	buffer.c	FUNCTION_26	IF_14	CALL_20
0x4003139	          0x4889c2	                            mov rdx, rax	      1968	buffer.c	FUNCTION_26	IF_14	CALL_20
0x400313c	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1968	buffer.c	FUNCTION_26	IF_14	CALL_20
0x4003143	    0x488990301700	          mov qword [rax + 0x1730], rdx 	      1968	buffer.c	FUNCTION_26	IF_14	CALL_20
0x400314a	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1969	buffer.c	FUNCTION_26	IF_14	IF_16
0x4003151	    0x488b80301700	          mov rax, qword [rax + 0x1730] 	      1969	buffer.c	FUNCTION_26	IF_14	IF_16
0x4003158	          0x4885c0	                           test rax, rax	      1969	buffer.c	FUNCTION_26	IF_14	IF_16
0x400315b	            0x7528	                           jne 0x4003185	      1969	buffer.c	FUNCTION_26	IF_14	IF_16
0x400315d	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1971	buffer.c	FUNCTION_26	IF_14	IF_16	CALL_21
0x4003164	          0x4889c7	                            mov rdi, rax	      1971	buffer.c	FUNCTION_26	IF_14	IF_16	CALL_21
0x4003167	      0xe800000000	                          call 0x400316c	      1971	buffer.c	FUNCTION_26	IF_14	IF_16	CALL_21
0x400316c	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1972	buffer.c	FUNCTION_26	IF_14	IF_16	CALL_22
0x4003173	          0x4889c7	                            mov rdi, rax	      1972	buffer.c	FUNCTION_26	IF_14	IF_16	CALL_22
0x4003176	      0xe800000000	                          call 0x400317b	      1972	buffer.c	FUNCTION_26	IF_14	IF_16	CALL_22
0x400317b	      0xb800000000	                              mov eax, 0	      1973	buffer.c	FUNCTION_26	IF_14	IF_16
0x4003180	      0xe961050000	                           jmp 0x40036e6	      1973	buffer.c	FUNCTION_26	IF_14	IF_16
0x4003185	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1975	buffer.c	FUNCTION_26	IF_14	CALL_23
0x400318c	    0x488d88181700	                 lea rcx, [rax + 0x1718]	      1975	buffer.c	FUNCTION_26	IF_14	CALL_23
0x4003193	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1975	buffer.c	FUNCTION_26	IF_14	CALL_23
0x400319a	    0x488b80301700	          mov rax, qword [rax + 0x1730] 	      1975	buffer.c	FUNCTION_26	IF_14	CALL_23
0x40031a1	      0xba01000000	                              mov edx, 1	      1975	buffer.c	FUNCTION_26	IF_14	CALL_23
0x40031a6	          0x4889ce	                            mov rsi, rcx	      1975	buffer.c	FUNCTION_26	IF_14	CALL_23
0x40031a9	          0x4889c7	                            mov rdi, rax	      1975	buffer.c	FUNCTION_26	IF_14	CALL_23
0x40031ac	      0xe800000000	                          call 0x40031b1	      1975	buffer.c	FUNCTION_26	IF_14	CALL_23
0x40031b1	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1977	buffer.c	FUNCTION_26	IF_14	CALL_24
0x40031b8	          0x4889c7	                            mov rdi, rax	      1977	buffer.c	FUNCTION_26	IF_14	CALL_24
0x40031bb	      0xe8e9e2ffff	               call sym.init_changedtick	      1977	buffer.c	FUNCTION_26	IF_14	CALL_24
0x40031c0	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1980	buffer.c	FUNCTION_26	IF_17
0x40031c7	          0x4885c0	                           test rax, rax	      1980	buffer.c	FUNCTION_26	IF_17
0x40031ca	            0x7435	                            je 0x4003201	      1980	buffer.c	FUNCTION_26	IF_17
0x40031cc	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	      1982	buffer.c	FUNCTION_26	IF_17
0x40031d3	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1982	buffer.c	FUNCTION_26	IF_17
0x40031da	    0x488990880000	             mov qword [rax + 0x88], rdx	      1982	buffer.c	FUNCTION_26	IF_17
0x40031e1	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      1983	buffer.c	FUNCTION_26	IF_17	CALL_25
0x40031e8	          0x4889c7	                            mov rdi, rax	      1983	buffer.c	FUNCTION_26	IF_17	CALL_25
0x40031eb	      0xe800000000	                          call 0x40031f0	      1983	buffer.c	FUNCTION_26	IF_17	CALL_25
0x40031f0	          0x4889c2	                            mov rdx, rax	      1983	buffer.c	FUNCTION_26	IF_17	CALL_25
0x40031f3	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1983	buffer.c	FUNCTION_26	IF_17	CALL_25
0x40031fa	    0x488990900000	             mov qword [rax + 0x90], rdx	      1983	buffer.c	FUNCTION_26	IF_17	CALL_25
0x4003201	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1986	buffer.c	FUNCTION_26	CALL_26
0x4003208	          0x4889c7	                            mov rdi, rax	      1986	buffer.c	FUNCTION_26	CALL_26
0x400320b	      0xe845e4ffff	                  call sym.clear_wininfo	      1986	buffer.c	FUNCTION_26	CALL_26
0x4003210	      0xbf08020000	                          mov edi, 0x208	      1987	buffer.c	FUNCTION_26	CALL_27
0x4003215	      0xe800000000	                          call 0x400321a	      1987	buffer.c	FUNCTION_26	CALL_27
0x400321a	          0x4889c2	                            mov rdx, rax	      1987	buffer.c	FUNCTION_26	CALL_27
0x400321d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1987	buffer.c	FUNCTION_26	CALL_27
0x4003224	    0x488990280100	            mov qword [rax + 0x128], rdx	      1987	buffer.c	FUNCTION_26	CALL_27
0x400322b	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1989	buffer.c	FUNCTION_26	IF_18
0x4003232	          0x4885c0	                           test rax, rax	      1989	buffer.c	FUNCTION_26	IF_18
0x4003235	            0x7426	                            je 0x400325d	      1989	buffer.c	FUNCTION_26	IF_18
0x4003237	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1989	buffer.c	FUNCTION_26	IF_18
0x400323e	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      1989	buffer.c	FUNCTION_26	IF_18
0x4003245	          0x4885c0	                           test rax, rax	      1989	buffer.c	FUNCTION_26	IF_18
0x4003248	            0x742a	                            je 0x4003274	      1989	buffer.c	FUNCTION_26	IF_18
0x400324a	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1989	buffer.c	FUNCTION_26	IF_18
0x4003251	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      1989	buffer.c	FUNCTION_26	IF_18
0x4003258	          0x4885c0	                           test rax, rax	      1989	buffer.c	FUNCTION_26	IF_18
0x400325b	            0x7417	                            je 0x4003274	      1989	buffer.c	FUNCTION_26	IF_18
0x400325d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1990	buffer.c	FUNCTION_26	IF_18
0x4003264	    0x488b80280100	           mov rax, qword [rax + 0x128] 	      1990	buffer.c	FUNCTION_26	IF_18
0x400326b	          0x4885c0	                           test rax, rax	      1990	buffer.c	FUNCTION_26	IF_18
0x400326e	     0xf859f000000	                           jne 0x4003313	      1990	buffer.c	FUNCTION_26	IF_18
0x4003274	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1992	buffer.c	FUNCTION_26	IF_18	CALL_28
0x400327b	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      1992	buffer.c	FUNCTION_26	IF_18	CALL_28
0x4003282	          0x4885c0	                           test rax, rax	      1992	buffer.c	FUNCTION_26	IF_18	CALL_28
0x4003285	            0x7428	                            je 0x40032af	      1992	buffer.c	FUNCTION_26	IF_18	CALL_28
0x4003287	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1992	buffer.c	FUNCTION_26	IF_18	CALL_28
0x400328e	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      1992	buffer.c	FUNCTION_26	IF_18	CALL_28
0x4003295	          0x4889c7	                            mov rdi, rax	      1992	buffer.c	FUNCTION_26	IF_18	CALL_28
0x4003298	      0xe800000000	                          call 0x400329d	      1992	buffer.c	FUNCTION_26	IF_18	CALL_28
0x400329d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1992	buffer.c	FUNCTION_26	IF_18	CALL_28
0x40032a4	    0x48c780880000	               mov qword [rax + 0x88], 0	      1992	buffer.c	FUNCTION_26	IF_18	CALL_28
0x40032af	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1993	buffer.c	FUNCTION_26	IF_18	CALL_29
0x40032b6	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      1993	buffer.c	FUNCTION_26	IF_18	CALL_29
0x40032bd	          0x4885c0	                           test rax, rax	      1993	buffer.c	FUNCTION_26	IF_18	CALL_29
0x40032c0	            0x7428	                            je 0x40032ea	      1993	buffer.c	FUNCTION_26	IF_18	CALL_29
0x40032c2	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1993	buffer.c	FUNCTION_26	IF_18	CALL_29
0x40032c9	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      1993	buffer.c	FUNCTION_26	IF_18	CALL_29
0x40032d0	          0x4889c7	                            mov rdi, rax	      1993	buffer.c	FUNCTION_26	IF_18	CALL_29
0x40032d3	      0xe800000000	                          call 0x40032d8	      1993	buffer.c	FUNCTION_26	IF_18	CALL_29
0x40032d8	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1993	buffer.c	FUNCTION_26	IF_18	CALL_29
0x40032df	    0x48c780900000	               mov qword [rax + 0x90], 0	      1993	buffer.c	FUNCTION_26	IF_18	CALL_29
0x40032ea	    0x488b05000000	            mov rax, qword [0x040032f1] 	      1994	buffer.c	FUNCTION_26	IF_18	IF_19
0x40032f1	    0x48398548ffff	            cmp qword [rbp - 0xb8], rax 	      1994	buffer.c	FUNCTION_26	IF_18	IF_19
0x40032f8	            0x740f	                            je 0x4003309	      1994	buffer.c	FUNCTION_26	IF_18	IF_19
0x40032fa	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1995	buffer.c	FUNCTION_26	IF_18	CALL_30
0x4003301	          0x4889c7	                            mov rdi, rax	      1995	buffer.c	FUNCTION_26	IF_18	CALL_30
0x4003304	      0xe8dbe0ffff	                    call sym.free_buffer	      1995	buffer.c	FUNCTION_26	IF_18	CALL_30
0x4003309	      0xb800000000	                              mov eax, 0	      1996	buffer.c	FUNCTION_26	IF_18
0x400330e	      0xe9d3030000	                           jmp 0x40036e6	      1996	buffer.c	FUNCTION_26	IF_18
0x4003313	    0x488b05000000	            mov rax, qword [0x0400331a] 	      1999	buffer.c	FUNCTION_26	IF_20
0x400331a	    0x48398548ffff	            cmp qword [rbp - 0xb8], rax 	      1999	buffer.c	FUNCTION_26	IF_20
0x4003321	     0xf859e000000	                           jne 0x40033c5	      1999	buffer.c	FUNCTION_26	IF_20
0x4003327	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2002	buffer.c	FUNCTION_26	IF_20	CALL_31
0x400332e	      0xbe00000000	                              mov esi, 0	      2002	buffer.c	FUNCTION_26	IF_20	CALL_31
0x4003333	          0x4889c7	                            mov rdi, rax	      2002	buffer.c	FUNCTION_26	IF_20	CALL_31
0x4003336	      0xe800000000	                          call 0x400333b	      2002	buffer.c	FUNCTION_26	IF_20	CALL_31
0x400333b	    0x488b05000000	            mov rax, qword [0x04003342] 	      2003	buffer.c	FUNCTION_26	IF_20	IF_21
0x4003342	    0x48398548ffff	            cmp qword [rbp - 0xb8], rax 	      2003	buffer.c	FUNCTION_26	IF_20	IF_21
0x4003349	            0x740a	                            je 0x4003355	      2003	buffer.c	FUNCTION_26	IF_20	IF_21
0x400334b	      0xb800000000	                              mov eax, 0	      2004	buffer.c	FUNCTION_26	IF_20	IF_21
0x4003350	      0xe991030000	                           jmp 0x40036e6	      2004	buffer.c	FUNCTION_26	IF_20	IF_21
0x4003355	      0xe800000000	                          call 0x400335a	      2006	buffer.c	FUNCTION_26	IF_20	IF_22	CALL_32
0x400335a	            0x85c0	                           test eax, eax	      2006	buffer.c	FUNCTION_26	IF_20	IF_22	CALL_32
0x400335c	            0x740a	                            je 0x4003368	      2006	buffer.c	FUNCTION_26	IF_20	IF_22	CALL_32
0x400335e	      0xb800000000	                              mov eax, 0	      2007	buffer.c	FUNCTION_26	IF_20	IF_22
0x4003363	      0xe97e030000	                           jmp 0x40036e6	      2007	buffer.c	FUNCTION_26	IF_20	IF_22
0x4003368	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2009	buffer.c	FUNCTION_26	IF_20	CALL_33
0x400336f	      0xbe00000000	                              mov esi, 0	      2009	buffer.c	FUNCTION_26	IF_20	CALL_33
0x4003374	          0x4889c7	                            mov rdi, rax	      2009	buffer.c	FUNCTION_26	IF_20	CALL_33
0x4003377	      0xe8a8e1ffff	              call sym.free_buffer_stuff	      2009	buffer.c	FUNCTION_26	IF_20	CALL_33
0x400337c	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2012	buffer.c	FUNCTION_26	IF_20
0x4003383	    0xc780a8120000	            mov dword [rax + 0x12a8], 0 	      2012	buffer.c	FUNCTION_26	IF_20
0x400338d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2013	buffer.c	FUNCTION_26	IF_20	CALL_34
0x4003394	      0xbe01000000	                              mov esi, 1	      2013	buffer.c	FUNCTION_26	IF_20	CALL_34
0x4003399	          0x4889c7	                            mov rdi, rax	      2013	buffer.c	FUNCTION_26	IF_20	CALL_34
0x400339c	      0xe800000000	                          call 0x40033a1	      2013	buffer.c	FUNCTION_26	IF_20	CALL_34
0x40033a1	    0x488b05000000	            mov rax, qword [0x040033a8] 	      2017	buffer.c	FUNCTION_26	IF_20
0x40033a8	    0x488b15000000	            mov rdx, qword [0x040033af] 	      2017	buffer.c	FUNCTION_26	IF_20
0x40033af	     0xfb792881200	         movzx edx, word [rdx + 0x1288] 	      2017	buffer.c	FUNCTION_26	IF_20
0x40033b6	          0x83ca01	                               or edx, 1	      2017	buffer.c	FUNCTION_26	IF_20
0x40033b9	    0x668990881200	            mov word [rax + 0x1288], dx 	      2017	buffer.c	FUNCTION_26	IF_20
0x40033c0	      0xe9ef000000	                           jmp 0x40034b4	      2017	buffer.c	FUNCTION_26	IF_20
0x40033c5	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2025	buffer.c	FUNCTION_26	ELSE_1
0x40033cc	    0x48c740680000	               mov qword [rax + 0x68], 0	      2025	buffer.c	FUNCTION_26	ELSE_1
0x40033d4	    0x488b05000000	            mov rax, qword [0x040033db] 	      2026	buffer.c	FUNCTION_26	ELSE_1	IF_23
0x40033db	          0x4885c0	                           test rax, rax	      2026	buffer.c	FUNCTION_26	ELSE_1	IF_23
0x40033de	            0x751f	                           jne 0x40033ff	      2026	buffer.c	FUNCTION_26	ELSE_1	IF_23
0x40033e0	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2028	buffer.c	FUNCTION_26	ELSE_1	IF_23
0x40033e7	    0x48c740700000	               mov qword [rax + 0x70], 0	      2028	buffer.c	FUNCTION_26	ELSE_1	IF_23
0x40033ef	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2029	buffer.c	FUNCTION_26	ELSE_1	IF_23
0x40033f6	    0x488905000000	            mov qword [0x040033fd], rax 	      2029	buffer.c	FUNCTION_26	ELSE_1	IF_23
0x40033fd	            0xeb24	                           jmp 0x4003423	      2029	buffer.c	FUNCTION_26	ELSE_1	IF_23
0x40033ff	    0x488b05000000	            mov rax, qword [0x04003406] 	      2033	buffer.c	FUNCTION_26	ELSE_1	ELSE_2
0x4003406	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	      2033	buffer.c	FUNCTION_26	ELSE_1	ELSE_2
0x400340d	        0x48895068	             mov qword [rax + 0x68], rdx	      2033	buffer.c	FUNCTION_26	ELSE_1	ELSE_2
0x4003411	    0x488b15000000	            mov rdx, qword [0x04003418] 	      2034	buffer.c	FUNCTION_26	ELSE_1	ELSE_2
0x4003418	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2034	buffer.c	FUNCTION_26	ELSE_1	ELSE_2
0x400341f	        0x48895070	             mov qword [rax + 0x70], rdx	      2034	buffer.c	FUNCTION_26	ELSE_1	ELSE_2
0x4003423	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2036	buffer.c	FUNCTION_26	ELSE_1
0x400342a	    0x488905000000	            mov qword [0x04003431], rax 	      2036	buffer.c	FUNCTION_26	ELSE_1
0x4003431	    0x8b0500000000	            mov eax, dword [0x04003437] 	      2038	buffer.c	FUNCTION_26	ELSE_1
0x4003437	          0x8d5001	                      lea edx, [rax + 1]	      2038	buffer.c	FUNCTION_26	ELSE_1
0x400343a	    0x891500000000	            mov dword [0x04003440], edx 	      2038	buffer.c	FUNCTION_26	ELSE_1
0x4003440	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	      2038	buffer.c	FUNCTION_26	ELSE_1
0x4003447	    0x8982b8000000	             mov dword [rdx + 0xb8], eax	      2038	buffer.c	FUNCTION_26	ELSE_1
0x400344d	    0x8b0500000000	            mov eax, dword [0x04003453] 	      2039	buffer.c	FUNCTION_26	ELSE_1	IF_24
0x4003453	            0x85c0	                           test eax, eax	      2039	buffer.c	FUNCTION_26	ELSE_1	IF_24
0x4003455	            0x793a	                           jns 0x4003491	      2039	buffer.c	FUNCTION_26	ELSE_1	IF_24
0x4003457	      0xbf00000000	                              mov edi, 0	      2041	buffer.c	FUNCTION_26	ELSE_1	IF_24	CALL_36
0x400345c	      0xe800000000	                          call 0x4003461	      2041	buffer.c	FUNCTION_26	ELSE_1	IF_24	CALL_36
0x4003461	          0x4889c7	                            mov rdi, rax	      2041	buffer.c	FUNCTION_26	ELSE_1	IF_24	CALL_36
0x4003464	      0xe800000000	                          call 0x4003469	      2041	buffer.c	FUNCTION_26	ELSE_1	IF_24	CALL_36
0x4003469	    0x8b0500000000	            mov eax, dword [0x0400346f] 	      2042	buffer.c	FUNCTION_26	ELSE_1	IF_24	IF_25
0x400346f	            0x85c0	                           test eax, eax	      2042	buffer.c	FUNCTION_26	ELSE_1	IF_24	IF_25
0x4003471	            0x7514	                           jne 0x4003487	      2042	buffer.c	FUNCTION_26	ELSE_1	IF_24	IF_25
0x4003473	      0xe800000000	                          call 0x4003478	      2044	buffer.c	FUNCTION_26	ELSE_1	IF_24	IF_25	CALL_37
0x4003478	      0xbe01000000	                              mov esi, 1	      2045	buffer.c	FUNCTION_26	ELSE_1	IF_24	IF_25	CALL_38
0x400347d	      0xbfb80b0000	                          mov edi, 0xbb8	      2045	buffer.c	FUNCTION_26	ELSE_1	IF_24	IF_25	CALL_38
0x4003482	      0xe800000000	                          call 0x4003487	      2045	buffer.c	FUNCTION_26	ELSE_1	IF_24	IF_25	CALL_38
0x4003487	    0xc70500000000	               mov dword [0x04003491], 1	      2047	buffer.c	FUNCTION_26	ELSE_1	IF_24
0x4003491	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2049	buffer.c	FUNCTION_26	ELSE_1	CALL_39
0x4003498	          0x4889c7	                            mov rdi, rax	      2049	buffer.c	FUNCTION_26	ELSE_1	CALL_39
0x400349b	      0xe83dd4ffff	                call sym.buf_hashtab_add	      2049	buffer.c	FUNCTION_26	ELSE_1	CALL_39
0x40034a0	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2054	buffer.c	FUNCTION_26	ELSE_1	CALL_40
0x40034a7	      0xbe02000000	                              mov esi, 2	      2054	buffer.c	FUNCTION_26	ELSE_1	CALL_40
0x40034ac	          0x4889c7	                            mov rdi, rax	      2054	buffer.c	FUNCTION_26	ELSE_1	CALL_40
0x40034af	      0xe800000000	                          call 0x40034b4	      2054	buffer.c	FUNCTION_26	ELSE_1	CALL_40
0x40034b4	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2057	buffer.c	FUNCTION_26
0x40034bb	    0x488b80280100	           mov rax, qword [rax + 0x128] 	      2057	buffer.c	FUNCTION_26
0x40034c2	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	      2057	buffer.c	FUNCTION_26
0x40034c9	        0x48895018	             mov qword [rax + 0x18], rdx	      2057	buffer.c	FUNCTION_26
0x40034cd	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2058	buffer.c	FUNCTION_26
0x40034d4	    0x488b80280100	           mov rax, qword [rax + 0x128] 	      2058	buffer.c	FUNCTION_26
0x40034db	    0x488b15000000	            mov rdx, qword [0x040034e2] 	      2058	buffer.c	FUNCTION_26
0x40034e2	        0x48895010	             mov qword [rax + 0x10], rdx	      2058	buffer.c	FUNCTION_26
0x40034e6	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2061	buffer.c	FUNCTION_26	CALL_41
0x40034ed	    0x480568170000	                         add rax, 0x1768	      2061	buffer.c	FUNCTION_26	CALL_41
0x40034f3	          0x4889c7	                            mov rdi, rax	      2061	buffer.c	FUNCTION_26	CALL_41
0x40034f6	      0xe800000000	                          call 0x40034fb	      2061	buffer.c	FUNCTION_26	CALL_41
0x40034fb	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2062	buffer.c	FUNCTION_26	CALL_42
0x4003502	    0x480590180000	                         add rax, 0x1890	      2062	buffer.c	FUNCTION_26	CALL_42
0x4003508	          0x4889c7	                            mov rdi, rax	      2062	buffer.c	FUNCTION_26	CALL_42
0x400350b	      0xe800000000	                          call 0x4003510	      2062	buffer.c	FUNCTION_26	CALL_42
0x4003510	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2065	buffer.c	FUNCTION_26
0x4003517	    0x488b90900000	            mov rdx, qword [rax + 0x90] 	      2065	buffer.c	FUNCTION_26
0x400351e	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2065	buffer.c	FUNCTION_26
0x4003525	    0x488990980000	             mov qword [rax + 0x98], rdx	      2065	buffer.c	FUNCTION_26
0x400352c	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2067	buffer.c	FUNCTION_26	IF_26
0x4003533	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      2067	buffer.c	FUNCTION_26	IF_26
0x4003537	            0x7513	                           jne 0x400354c	      2067	buffer.c	FUNCTION_26	IF_26
0x4003539	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2068	buffer.c	FUNCTION_26	IF_26
0x4003540	    0xc780a0000000	               mov dword [rax + 0xa0], 0	      2068	buffer.c	FUNCTION_26	IF_26
0x400354a	            0xeb3b	                           jmp 0x4003587	      2068	buffer.c	FUNCTION_26	IF_26
0x400354c	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2071	buffer.c	FUNCTION_26	ELSE_3
0x4003553	    0xc780a0000000	               mov dword [rax + 0xa0], 1	      2071	buffer.c	FUNCTION_26	ELSE_3
0x400355d	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	      2072	buffer.c	FUNCTION_26	ELSE_3
0x4003564	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2072	buffer.c	FUNCTION_26	ELSE_3
0x400356b	    0x488990a80000	             mov qword [rax + 0xa8], rdx	      2072	buffer.c	FUNCTION_26	ELSE_3
0x4003572	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	      2073	buffer.c	FUNCTION_26	ELSE_3
0x4003579	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2073	buffer.c	FUNCTION_26	ELSE_3
0x4003580	    0x488990b00000	             mov qword [rax + 0xb0], rdx	      2073	buffer.c	FUNCTION_26	ELSE_3
0x4003587	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2076	buffer.c	FUNCTION_26
0x400358e	    0xc78034120000	            mov dword [rax + 0x1234], 1 	      2076	buffer.c	FUNCTION_26
0x4003598	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2077	buffer.c	FUNCTION_26
0x400359f	    0xc7407c060000	               mov dword [rax + 0x7c], 6	      2077	buffer.c	FUNCTION_26
0x40035a6	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      2078	buffer.c	FUNCTION_26	IF_27
0x40035ac	          0x83e004	                              and eax, 4	      2078	buffer.c	FUNCTION_26	IF_27
0x40035af	            0x85c0	                           test eax, eax	      2078	buffer.c	FUNCTION_26	IF_27
0x40035b1	            0x7418	                            je 0x40035cb	      2078	buffer.c	FUNCTION_26	IF_27
0x40035b3	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2079	buffer.c	FUNCTION_26	IF_27
0x40035ba	          0x8b407c	            mov eax, dword [rax + 0x7c] 	      2079	buffer.c	FUNCTION_26	IF_27
0x40035bd	             0xc80	                             or al, 0x80	      2079	buffer.c	FUNCTION_26	IF_27
0x40035bf	            0x89c2	                            mov edx, eax	      2079	buffer.c	FUNCTION_26	IF_27
0x40035c1	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2079	buffer.c	FUNCTION_26	IF_27
0x40035c8	          0x89507c	             mov dword [rax + 0x7c], edx	      2079	buffer.c	FUNCTION_26	IF_27
0x40035cb	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2080	buffer.c	FUNCTION_26	CALL_43
0x40035d2	          0x4889c7	                            mov rdi, rax	      2080	buffer.c	FUNCTION_26	CALL_43
0x40035d5	      0xe800000000	                          call 0x40035da	      2080	buffer.c	FUNCTION_26	CALL_43
0x40035da	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2081	buffer.c	FUNCTION_26	CALL_44
0x40035e1	          0x4889c7	                            mov rdi, rax	      2081	buffer.c	FUNCTION_26	CALL_44
0x40035e4	      0xe800000000	                          call 0x40035e9	      2081	buffer.c	FUNCTION_26	CALL_44
0x40035e9	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2082	buffer.c	FUNCTION_26	CALL_45
0x40035f0	          0x4889c7	                            mov rdi, rax	      2082	buffer.c	FUNCTION_26	CALL_45
0x40035f3	      0xe800000000	                          call 0x40035f8	      2082	buffer.c	FUNCTION_26	CALL_45
0x40035f8	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      2083	buffer.c	FUNCTION_26
0x40035fe	          0x83e002	                              and eax, 2	      2083	buffer.c	FUNCTION_26
0x4003601	            0x85c0	                           test eax, eax	      2083	buffer.c	FUNCTION_26
0x4003603	           0xf95c0	                                setne al	      2083	buffer.c	FUNCTION_26
0x4003606	           0xfb6d0	                           movzx edx, al	      2083	buffer.c	FUNCTION_26
0x4003609	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2083	buffer.c	FUNCTION_26
0x4003610	    0x899024140000	          mov dword [rax + 0x1424], edx 	      2083	buffer.c	FUNCTION_26
0x4003616	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      2084	buffer.c	FUNCTION_26	IF_28
0x400361c	          0x83e004	                              and eax, 4	      2084	buffer.c	FUNCTION_26	IF_28
0x400361f	            0x85c0	                           test eax, eax	      2084	buffer.c	FUNCTION_26	IF_28
0x4003621	     0xf85b8000000	                           jne 0x40036df	      2084	buffer.c	FUNCTION_26	IF_28
0x4003627	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	      2091	buffer.c	FUNCTION_26	IF_28	CALL_46
0x400362e	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	      2091	buffer.c	FUNCTION_26	IF_28	CALL_46
0x4003635	          0x4889d6	                            mov rsi, rdx	      2091	buffer.c	FUNCTION_26	IF_28	CALL_46
0x4003638	          0x4889c7	                            mov rdi, rax	      2091	buffer.c	FUNCTION_26	IF_28	CALL_46
0x400363b	      0xe800000000	                          call 0x4003640	      2091	buffer.c	FUNCTION_26	IF_28	CALL_46
0x4003640	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2092	buffer.c	FUNCTION_26	IF_28	IF_29	CALL_47
0x4003647	          0x4989c0	                             mov r8, rax	      2092	buffer.c	FUNCTION_26	IF_28	IF_29	CALL_47
0x400364a	      0xb900000000	                              mov ecx, 0	      2092	buffer.c	FUNCTION_26	IF_28	IF_29	CALL_47
0x400364f	      0xba00000000	                              mov edx, 0	      2092	buffer.c	FUNCTION_26	IF_28	IF_29	CALL_47
0x4003654	      0xbe00000000	                              mov esi, 0	      2092	buffer.c	FUNCTION_26	IF_28	IF_29	CALL_47
0x4003659	      0xbf07000000	                              mov edi, 7	      2092	buffer.c	FUNCTION_26	IF_28	IF_29	CALL_47
0x400365e	      0xe800000000	                          call 0x4003663	      2092	buffer.c	FUNCTION_26	IF_28	IF_29	CALL_47
0x4003663	            0x85c0	                           test eax, eax	      2092	buffer.c	FUNCTION_26	IF_28	IF_29	CALL_47
0x4003665	            0x741a	                            je 0x4003681	      2092	buffer.c	FUNCTION_26	IF_28	IF_29	CALL_47
0x4003667	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	      2093	buffer.c	FUNCTION_26	IF_28	IF_29	CALL_48
0x400366e	          0x4889c7	                            mov rdi, rax	      2093	buffer.c	FUNCTION_26	IF_28	IF_29	CALL_48
0x4003671	      0xe800000000	                          call 0x4003676	      2093	buffer.c	FUNCTION_26	IF_28	IF_29	CALL_48
0x4003676	            0x85c0	                           test eax, eax	      2093	buffer.c	FUNCTION_26	IF_28	IF_29	CALL_48
0x4003678	            0x7507	                           jne 0x4003681	      2093	buffer.c	FUNCTION_26	IF_28	IF_29	CALL_48
0x400367a	      0xb800000000	                              mov eax, 0	      2094	buffer.c	FUNCTION_26	IF_28	IF_29
0x400367f	            0xeb65	                           jmp 0x40036e6	      2094	buffer.c	FUNCTION_26	IF_28	IF_29
0x4003681	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      2095	buffer.c	FUNCTION_26	IF_28	IF_30
0x4003687	          0x83e002	                              and eax, 2	      2095	buffer.c	FUNCTION_26	IF_28	IF_30
0x400368a	            0x85c0	                           test eax, eax	      2095	buffer.c	FUNCTION_26	IF_28	IF_30
0x400368c	            0x7441	                            je 0x40036cf	      2095	buffer.c	FUNCTION_26	IF_28	IF_30
0x400368e	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2097	buffer.c	FUNCTION_26	IF_28	IF_30	IF_31	CALL_49
0x4003695	          0x4989c0	                             mov r8, rax	      2097	buffer.c	FUNCTION_26	IF_28	IF_30	IF_31	CALL_49
0x4003698	      0xb900000000	                              mov ecx, 0	      2097	buffer.c	FUNCTION_26	IF_28	IF_30	IF_31	CALL_49
0x400369d	      0xba00000000	                              mov edx, 0	      2097	buffer.c	FUNCTION_26	IF_28	IF_30	IF_31	CALL_49
0x40036a2	      0xbe00000000	                              mov esi, 0	      2097	buffer.c	FUNCTION_26	IF_28	IF_30	IF_31	CALL_49
0x40036a7	      0xbf00000000	                              mov edi, 0	      2097	buffer.c	FUNCTION_26	IF_28	IF_30	IF_31	CALL_49
0x40036ac	      0xe800000000	                          call 0x40036b1	      2097	buffer.c	FUNCTION_26	IF_28	IF_30	IF_31	CALL_49
0x40036b1	            0x85c0	                           test eax, eax	      2097	buffer.c	FUNCTION_26	IF_28	IF_30	IF_31	CALL_49
0x40036b3	            0x741a	                            je 0x40036cf	      2097	buffer.c	FUNCTION_26	IF_28	IF_30	IF_31	CALL_49
0x40036b5	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	      2098	buffer.c	FUNCTION_26	IF_28	IF_30	IF_31	CALL_50
0x40036bc	          0x4889c7	                            mov rdi, rax	      2098	buffer.c	FUNCTION_26	IF_28	IF_30	IF_31	CALL_50
0x40036bf	      0xe800000000	                          call 0x40036c4	      2098	buffer.c	FUNCTION_26	IF_28	IF_30	IF_31	CALL_50
0x40036c4	            0x85c0	                           test eax, eax	      2098	buffer.c	FUNCTION_26	IF_28	IF_30	IF_31	CALL_50
0x40036c6	            0x7507	                           jne 0x40036cf	      2098	buffer.c	FUNCTION_26	IF_28	IF_30	IF_31	CALL_50
0x40036c8	      0xb800000000	                              mov eax, 0	      2099	buffer.c	FUNCTION_26	IF_28	IF_30	IF_31
0x40036cd	            0xeb17	                           jmp 0x40036e6	      2099	buffer.c	FUNCTION_26	IF_28	IF_30	IF_31
0x40036cf	      0xe800000000	                          call 0x40036d4	      2102	buffer.c	FUNCTION_26	IF_28	IF_32	CALL_51
0x40036d4	            0x85c0	                           test eax, eax	      2102	buffer.c	FUNCTION_26	IF_28	IF_32	CALL_51
0x40036d6	            0x7407	                            je 0x40036df	      2102	buffer.c	FUNCTION_26	IF_28	IF_32	CALL_51
0x40036d8	      0xb800000000	                              mov eax, 0	      2103	buffer.c	FUNCTION_26	IF_28	IF_32
0x40036dd	            0xeb07	                           jmp 0x40036e6	      2103	buffer.c	FUNCTION_26	IF_28	IF_32
0x40036df	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2107	buffer.c	FUNCTION_26
0x40036e6	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2108	buffer.c	FUNCTION_26
0x40036ea	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2108	buffer.c	FUNCTION_26
0x40036f3	            0x7405	                            je 0x40036fa	      2108	buffer.c	FUNCTION_26
0x40036f5	      0xe800000000	                          call 0x40036fa	      2108	buffer.c	FUNCTION_26
0x40036fa	              0xc9	                                   leave	      2108	buffer.c	FUNCTION_26
0x40036fb	              0xc3	                                     ret	      2108	buffer.c	FUNCTION_26
open_buffer	CALL,43:functions,0:SWITCH,0:FOR,0:ELSE,2:DO,0:WHILE,0:IF,22	339
0x40001e6	              0x55	                                push rbp	       136	buffer.c	FUNCTION_2
0x40001e7	          0x4889e5	                            mov rbp, rsp	       136	buffer.c	FUNCTION_2
0x40001ea	    0x4881ec900000	                           sub rsp, 0x90	       136	buffer.c	FUNCTION_2
0x40001f1	    0x89bd7cffffff	             mov dword [rbp - 0x84], edi	       136	buffer.c	FUNCTION_2
0x40001f7	    0x4889b570ffff	             mov qword [rbp - 0x90], rsi	       136	buffer.c	FUNCTION_2
0x40001fe	    0x899578ffffff	             mov dword [rbp - 0x88], edx	       136	buffer.c	FUNCTION_2
0x4000204	    0x64488b042528	                mov rax, qword fs:[0x28]	       136	buffer.c	FUNCTION_2
0x400020d	        0x488945f8	                mov qword [rbp - 8], rax	       136	buffer.c	FUNCTION_2
0x4000211	            0x31c0	                            xor eax, eax	       136	buffer.c	FUNCTION_2
0x4000213	    0xc7458c010000	               mov dword [rbp - 0x74], 1	       137	buffer.c	FUNCTION_2
0x400021a	    0x488b05000000	            mov rax, qword [0x04000221] 	       140	buffer.c	FUNCTION_2
0x4000221	    0x488b80b81500	          mov rax, qword [rax + 0x15b8] 	       140	buffer.c	FUNCTION_2
0x4000228	        0x488945a8	             mov qword [rbp - 0x58], rax	       140	buffer.c	FUNCTION_2
0x400022c	    0xc74590000000	               mov dword [rbp - 0x70], 0	       142	buffer.c	FUNCTION_2
0x4000233	    0x8b0500000000	            mov eax, dword [0x04000239] 	       149	buffer.c	FUNCTION_2	IF_1
0x4000239	            0x85c0	                           test eax, eax	       149	buffer.c	FUNCTION_2	IF_1
0x400023b	            0x7435	                            je 0x4000272	       149	buffer.c	FUNCTION_2	IF_1
0x400023d	    0x488b05000000	            mov rax, qword [0x04000244] 	       149	buffer.c	FUNCTION_2	IF_1
0x4000244	    0x488b80880000	            mov rax, qword [rax + 0x88] 	       149	buffer.c	FUNCTION_2	IF_1
0x400024b	          0x4885c0	                           test rax, rax	       149	buffer.c	FUNCTION_2	IF_1
0x400024e	            0x7422	                            je 0x4000272	       149	buffer.c	FUNCTION_2	IF_1
0x4000250	    0x488b05000000	            mov rax, qword [0x04000257] 	       150	buffer.c	FUNCTION_2	IF_1
0x4000257	          0x8b407c	            mov eax, dword [rax + 0x7c] 	       150	buffer.c	FUNCTION_2	IF_1
0x400025a	          0x83e004	                              and eax, 4	       150	buffer.c	FUNCTION_2	IF_1
0x400025d	            0x85c0	                           test eax, eax	       150	buffer.c	FUNCTION_2	IF_1
0x400025f	            0x7411	                            je 0x4000272	       150	buffer.c	FUNCTION_2	IF_1
0x4000261	    0x488b05000000	            mov rax, qword [0x04000268] 	       151	buffer.c	FUNCTION_2	IF_1
0x4000268	    0xc78060150000	            mov dword [rax + 0x1560], 1 	       151	buffer.c	FUNCTION_2	IF_1
0x4000272	    0x488b05000000	            mov rax, qword [0x04000279] 	       153	buffer.c	FUNCTION_2	IF_2	CALL_1
0x4000279	          0x4889c7	                            mov rdi, rax	       153	buffer.c	FUNCTION_2	IF_2	CALL_1
0x400027c	      0xe800000000	                          call 0x4000281	       153	buffer.c	FUNCTION_2	IF_2	CALL_1
0x4000281	            0x85c0	                           test eax, eax	       153	buffer.c	FUNCTION_2	IF_2	CALL_1
0x4000283	     0xf85d5000000	                           jne 0x400035e	       153	buffer.c	FUNCTION_2	IF_2	CALL_1
0x4000289	    0x488b05000000	            mov rax, qword [0x04000290] 	       159	buffer.c	FUNCTION_2	IF_2	CALL_2
0x4000290	      0xb900000000	                              mov ecx, 0	       159	buffer.c	FUNCTION_2	IF_2	CALL_2
0x4000295	      0xba00000000	                              mov edx, 0	       159	buffer.c	FUNCTION_2	IF_2	CALL_2
0x400029a	          0x4889c6	                            mov rsi, rax	       159	buffer.c	FUNCTION_2	IF_2	CALL_2
0x400029d	      0xbf00000000	                              mov edi, 0	       159	buffer.c	FUNCTION_2	IF_2	CALL_2
0x40002a2	      0xe800000000	                          call 0x40002a7	       159	buffer.c	FUNCTION_2	IF_2	CALL_2
0x40002a7	    0x488b05000000	            mov rax, qword [0x040002ae] 	       160	buffer.c	FUNCTION_2	IF_2	CALL_3
0x40002ae	    0x488905000000	            mov qword [0x040002b5], rax 	       160	buffer.c	FUNCTION_2	IF_2	CALL_3
0x40002b5	            0xeb22	                           jmp 0x40002d9	       160	buffer.c	FUNCTION_2	IF_2	CALL_3
0x40002b7	    0x488b05000000	            mov rax, qword [0x040002be] 	       161	buffer.c	FUNCTION_2	IF_2	IF_3
0x40002be	        0x488b4008	                mov rax, qword [rax + 8]	       161	buffer.c	FUNCTION_2	IF_2	IF_3
0x40002c2	          0x4885c0	                           test rax, rax	       161	buffer.c	FUNCTION_2	IF_2	IF_3
0x40002c5	            0x7520	                           jne 0x40002e7	       161	buffer.c	FUNCTION_2	IF_2	IF_3
0x40002c7	    0x488b05000000	            mov rax, qword [0x040002ce] 	       160	buffer.c	FUNCTION_2	IF_2	CALL_3
0x40002ce	        0x488b4068	            mov rax, qword [rax + 0x68] 	       160	buffer.c	FUNCTION_2	IF_2	CALL_3
0x40002d2	    0x488905000000	            mov qword [0x040002d9], rax 	       160	buffer.c	FUNCTION_2	IF_2	CALL_3
0x40002d9	    0x488b05000000	            mov rax, qword [0x040002e0] 	       160	buffer.c	FUNCTION_2	IF_2	CALL_3
0x40002e0	          0x4885c0	                           test rax, rax	       160	buffer.c	FUNCTION_2	IF_2	CALL_3
0x40002e3	            0x75d2	                           jne 0x40002b7	       160	buffer.c	FUNCTION_2	IF_2	CALL_3
0x40002e5	            0xeb01	                           jmp 0x40002e8	       160	buffer.c	FUNCTION_2	IF_2	CALL_3
0x40002e7	              0x90	                                     nop	       162	buffer.c	FUNCTION_2	IF_2	IF_3
0x40002e8	    0x488b05000000	            mov rax, qword [0x040002ef] 	       167	buffer.c	FUNCTION_2	IF_2	IF_4
0x40002ef	          0x4885c0	                           test rax, rax	       167	buffer.c	FUNCTION_2	IF_2	IF_4
0x40002f2	            0x751c	                           jne 0x4000310	       167	buffer.c	FUNCTION_2	IF_2	IF_4
0x40002f4	      0xbf00000000	                              mov edi, 0	       169	buffer.c	FUNCTION_2	IF_2	IF_4	CALL_5
0x40002f9	      0xe800000000	                          call 0x40002fe	       169	buffer.c	FUNCTION_2	IF_2	IF_4	CALL_5
0x40002fe	          0x4889c7	                            mov rdi, rax	       169	buffer.c	FUNCTION_2	IF_2	IF_4	CALL_5
0x4000301	      0xe800000000	                          call 0x4000306	       169	buffer.c	FUNCTION_2	IF_2	IF_4	CALL_5
0x4000306	      0xbf02000000	                              mov edi, 2	       170	buffer.c	FUNCTION_2	IF_2	IF_4	CALL_6
0x400030b	      0xe800000000	                          call 0x4000310	       170	buffer.c	FUNCTION_2	IF_2	IF_4	CALL_6
0x4000310	      0xbf00000000	                              mov edi, 0	       172	buffer.c	FUNCTION_2	IF_2	CALL_8
0x4000315	      0xe800000000	                          call 0x400031a	       172	buffer.c	FUNCTION_2	IF_2	CALL_8
0x400031a	          0x4889c7	                            mov rdi, rax	       172	buffer.c	FUNCTION_2	IF_2	CALL_8
0x400031d	      0xe800000000	                          call 0x4000322	       172	buffer.c	FUNCTION_2	IF_2	CALL_8
0x4000322	    0x488b05000000	            mov rax, qword [0x04000329] 	       173	buffer.c	FUNCTION_2	IF_2	CALL_9
0x4000329	          0x4889c7	                            mov rdi, rax	       173	buffer.c	FUNCTION_2	IF_2	CALL_9
0x400032c	      0xe800000000	                          call 0x4000331	       173	buffer.c	FUNCTION_2	IF_2	CALL_9
0x4000331	    0x488b05000000	            mov rax, qword [0x04000338] 	       175	buffer.c	FUNCTION_2	IF_2	IF_5
0x4000338	    0x488b80b81500	          mov rax, qword [rax + 0x15b8] 	       175	buffer.c	FUNCTION_2	IF_2	IF_5
0x400033f	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	       175	buffer.c	FUNCTION_2	IF_2	IF_5
0x4000343	            0x740f	                            je 0x4000354	       175	buffer.c	FUNCTION_2	IF_2	IF_5
0x4000345	    0x488b05000000	            mov rax, qword [0x0400034c] 	       176	buffer.c	FUNCTION_2	IF_2	CALL_10
0x400034c	          0x4889c7	                            mov rdi, rax	       176	buffer.c	FUNCTION_2	IF_2	CALL_10
0x400034f	      0xe800000000	                          call 0x4000354	       176	buffer.c	FUNCTION_2	IF_2	CALL_10
0x4000354	      0xb800000000	                              mov eax, 0	       178	buffer.c	FUNCTION_2	IF_2
0x4000359	      0xe98d040000	                           jmp 0x40007eb	       178	buffer.c	FUNCTION_2	IF_2
0x400035e	    0x488b15000000	            mov rdx, qword [0x04000365] 	       183	buffer.c	FUNCTION_2	CALL_11
0x4000365	        0x488d45b0	                   lea rax, [rbp - 0x50]	       183	buffer.c	FUNCTION_2	CALL_11
0x4000369	          0x4889d6	                            mov rsi, rdx	       183	buffer.c	FUNCTION_2	CALL_11
0x400036c	          0x4889c7	                            mov rdi, rax	       183	buffer.c	FUNCTION_2	CALL_11
0x400036f	      0xe800000000	                          call 0x4000374	       183	buffer.c	FUNCTION_2	CALL_11
0x4000374	    0xc70500000000	               mov dword [0x0400037e], 0	       184	buffer.c	FUNCTION_2
0x400037e	    0x488b05000000	            mov rax, qword [0x04000385] 	       187	buffer.c	FUNCTION_2
0x4000385	    0xc780b4000000	               mov dword [rax + 0xb4], 0	       187	buffer.c	FUNCTION_2
0x400038f	    0x488b05000000	            mov rax, qword [0x04000396] 	       189	buffer.c	FUNCTION_2	IF_6
0x4000396	    0x488b80880000	            mov rax, qword [rax + 0x88] 	       189	buffer.c	FUNCTION_2	IF_6
0x400039d	          0x4885c0	                           test rax, rax	       189	buffer.c	FUNCTION_2	IF_6
0x40003a0	     0xf8484010000	                            je 0x400052a	       189	buffer.c	FUNCTION_2	IF_6
0x40003a6	    0x8b0500000000	            mov eax, dword [0x040003ac] 	       191	buffer.c	FUNCTION_2	IF_6
0x40003ac	            0x85c0	                           test eax, eax	       191	buffer.c	FUNCTION_2	IF_6
0x40003ae	     0xf8476010000	                            je 0x400052a	       191	buffer.c	FUNCTION_2	IF_6
0x40003b4	    0x8b0500000000	            mov eax, dword [0x040003ba] 	       195	buffer.c	FUNCTION_2	IF_6
0x40003ba	          0x894594	             mov dword [rbp - 0x6c], eax	       195	buffer.c	FUNCTION_2	IF_6
0x40003bd	    0x488b05000000	            mov rax, qword [0x040003c4] 	       197	buffer.c	FUNCTION_2	IF_6
0x40003c4	    0x8b8008140000	          mov eax, dword [rax + 0x1408] 	       197	buffer.c	FUNCTION_2	IF_6
0x40003ca	          0x894598	             mov dword [rbp - 0x68], eax	       197	buffer.c	FUNCTION_2	IF_6
0x40003cd	    0x8b0500000000	            mov eax, dword [0x040003d3] 	       201	buffer.c	FUNCTION_2	IF_6
0x40003d3	          0x89459c	             mov dword [rbp - 0x64], eax	       201	buffer.c	FUNCTION_2	IF_6
0x40003d6	    0xc70500000000	               mov dword [0x040003e0], 0	       203	buffer.c	FUNCTION_2	IF_6
0x40003e0	    0x488b05000000	            mov rax, qword [0x040003e7] 	       206	buffer.c	FUNCTION_2	IF_6	CALL_12
0x40003e7	    0x488b80880000	            mov rax, qword [rax + 0x88] 	       206	buffer.c	FUNCTION_2	IF_6	CALL_12
0x40003ee	          0x4889c7	                            mov rdi, rax	       206	buffer.c	FUNCTION_2	IF_6	CALL_12
0x40003f1	      0xe800000000	                          call 0x40003f6	       206	buffer.c	FUNCTION_2	IF_6	CALL_12
0x40003f6	          0x8945a0	             mov dword [rbp - 0x60], eax	       206	buffer.c	FUNCTION_2	IF_6	CALL_12
0x40003f9	        0x837da000	               cmp dword [rbp - 0x60], 0	       207	buffer.c	FUNCTION_2	IF_6	IF_7
0x40003fd	            0x7825	                            js 0x4000424	       207	buffer.c	FUNCTION_2	IF_6	IF_7
0x40003ff	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       209	buffer.c	FUNCTION_2	IF_6	IF_7	CALL_13
0x4000402	      0x2500f00000	                         and eax, 0xf000	       209	buffer.c	FUNCTION_2	IF_6	IF_7	CALL_13
0x4000407	      0x3d00100000	                         cmp eax, 0x1000	       207	buffer.c	FUNCTION_2	IF_6	IF_7
0x400040c	            0x740f	                            je 0x400041d	       207	buffer.c	FUNCTION_2	IF_6	IF_7
0x400040e	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       212	buffer.c	FUNCTION_2	IF_6	IF_7	CALL_14
0x4000411	      0x2500f00000	                         and eax, 0xf000	       212	buffer.c	FUNCTION_2	IF_6	IF_7	CALL_14
0x4000416	      0x3d00c00000	                         cmp eax, 0xc000	       212	buffer.c	FUNCTION_2	IF_6	IF_7	CALL_14
0x400041b	            0x7507	                           jne 0x4000424	       212	buffer.c	FUNCTION_2	IF_6	IF_7	CALL_14
0x400041d	    0xc74590010000	               mov dword [rbp - 0x70], 1	       218	buffer.c	FUNCTION_2	IF_6	IF_7
0x4000424	        0x837d9000	               cmp dword [rbp - 0x70], 0	       219	buffer.c	FUNCTION_2	IF_6	IF_8
0x4000428	            0x7411	                            je 0x400043b	       219	buffer.c	FUNCTION_2	IF_6	IF_8
0x400042a	    0x488b05000000	            mov rax, qword [0x04000431] 	       220	buffer.c	FUNCTION_2	IF_6	IF_8
0x4000431	    0xc78008140000	            mov dword [rax + 0x1408], 1 	       220	buffer.c	FUNCTION_2	IF_6	IF_8
0x400043b	      0xbf46000000	                           mov edi, 0x46	       222	buffer.c	FUNCTION_2	IF_6	IF_9	CALL_17
0x4000440	      0xe800000000	                          call 0x4000445	       222	buffer.c	FUNCTION_2	IF_6	IF_9	CALL_17
0x4000445	            0x85c0	                           test eax, eax	       222	buffer.c	FUNCTION_2	IF_6	IF_9	CALL_17
0x4000447	            0x740a	                            je 0x4000453	       222	buffer.c	FUNCTION_2	IF_6	IF_9	CALL_17
0x4000449	    0xc70500000000	               mov dword [0x04000453], 1	       223	buffer.c	FUNCTION_2	IF_6	IF_9
0x4000453	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	       226	buffer.c	FUNCTION_2	IF_6
0x4000459	          0x83c801	                               or eax, 1	       226	buffer.c	FUNCTION_2	IF_6
0x400045c	        0x837d9000	               cmp dword [rbp - 0x70], 0	       226	buffer.c	FUNCTION_2	IF_6
0x4000460	            0x7407	                            je 0x4000469	       226	buffer.c	FUNCTION_2	IF_6
0x4000462	      0xba40000000	                           mov edx, 0x40	       226	buffer.c	FUNCTION_2	IF_6
0x4000467	            0xeb05	                           jmp 0x400046e	       226	buffer.c	FUNCTION_2	IF_6
0x4000469	      0xba00000000	                              mov edx, 0	       226	buffer.c	FUNCTION_2	IF_6
0x400046e	             0x9d0	                             or eax, edx	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4000470	            0x89c1	                            mov ecx, eax	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4000472	    0x488b05000000	            mov rax, qword [0x04000479] 	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4000479	    0x488bb0980000	            mov rsi, qword [rax + 0x98] 	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4000480	    0x488b05000000	            mov rax, qword [0x04000487] 	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4000487	    0x488b80880000	            mov rax, qword [rax + 0x88] 	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x400048e	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4000495	        0x4883ec08	                              sub rsp, 8	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4000499	              0x51	                                push rcx	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x400049a	          0x4989d1	                             mov r9, rdx	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x400049d	    0x41b8ffffff7f	                     mov r8d, 0x7fffffff	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x40004a3	      0xb900000000	                              mov ecx, 0	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x40004a8	      0xba00000000	                              mov edx, 0	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x40004ad	          0x4889c7	                            mov rdi, rax	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x40004b0	      0xe800000000	                          call 0x40004b5	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x40004b5	        0x4883c410	                           add rsp, 0x10	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x40004b9	          0x89458c	             mov dword [rbp - 0x74], eax	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x40004bc	        0x837d9000	               cmp dword [rbp - 0x70], 0	       228	buffer.c	FUNCTION_2	IF_6	IF_10
0x40004c0	            0x7435	                            je 0x40004f7	       228	buffer.c	FUNCTION_2	IF_6	IF_10
0x40004c2	    0x488b05000000	            mov rax, qword [0x040004c9] 	       230	buffer.c	FUNCTION_2	IF_6	IF_10
0x40004c9	          0x8b5598	             mov edx, dword [rbp - 0x68]	       230	buffer.c	FUNCTION_2	IF_6	IF_10
0x40004cc	    0x899008140000	          mov dword [rax + 0x1408], edx 	       230	buffer.c	FUNCTION_2	IF_6	IF_10
0x40004d2	          0x8b458c	             mov eax, dword [rbp - 0x74]	       231	buffer.c	FUNCTION_2	IF_6	IF_10	IF_11
0x40004d5	          0x83f801	                              cmp eax, 1	       231	buffer.c	FUNCTION_2	IF_6	IF_10	IF_11
0x40004d8	            0x751d	                           jne 0x40004f7	       231	buffer.c	FUNCTION_2	IF_6	IF_10	IF_11
0x40004da	    0x8b9578ffffff	             mov edx, dword [rbp - 0x88]	       232	buffer.c	FUNCTION_2	IF_6	IF_10	CALL_19
0x40004e0	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       232	buffer.c	FUNCTION_2	IF_6	IF_10	CALL_19
0x40004e7	          0x4889c6	                            mov rsi, rax	       232	buffer.c	FUNCTION_2	IF_6	IF_10	CALL_19
0x40004ea	      0xbf00000000	                              mov edi, 0	       232	buffer.c	FUNCTION_2	IF_6	IF_10	CALL_19
0x40004ef	      0xe84cfbffff	                    call sym.read_buffer	       232	buffer.c	FUNCTION_2	IF_6	IF_10	CALL_19
0x40004f4	          0x89458c	             mov dword [rbp - 0x74], eax	       232	buffer.c	FUNCTION_2	IF_6	IF_10	CALL_19
0x40004f7	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       235	buffer.c	FUNCTION_2	IF_6
0x40004fa	    0x890500000000	            mov dword [0x04000500], eax 	       235	buffer.c	FUNCTION_2	IF_6
0x4000500	          0x8b459c	             mov eax, dword [rbp - 0x64]	       237	buffer.c	FUNCTION_2	IF_6
0x4000503	    0x890500000000	            mov dword [0x04000509], eax 	       237	buffer.c	FUNCTION_2	IF_6
0x4000509	    0x488b05000000	            mov rax, qword [0x04000510] 	       240	buffer.c	FUNCTION_2	IF_6	IF_12	CALL_20
0x4000510	          0x4889c7	                            mov rdi, rax	       240	buffer.c	FUNCTION_2	IF_6	IF_12	CALL_20
0x4000513	      0xe800000000	                          call 0x4000518	       240	buffer.c	FUNCTION_2	IF_6	IF_12	CALL_20
0x4000518	            0x85c0	                           test eax, eax	       240	buffer.c	FUNCTION_2	IF_6	IF_12	CALL_20
0x400051a	     0xf84a9000000	                            je 0x40005c9	       240	buffer.c	FUNCTION_2	IF_6	IF_12	CALL_20
0x4000520	      0xe800000000	                          call 0x4000525	       241	buffer.c	FUNCTION_2	IF_6	CALL_21
0x4000525	      0xe99f000000	                           jmp 0x40005c9	       194	buffer.c	FUNCTION_2	IF_6
0x400052a	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	       243	buffer.c	FUNCTION_2	ELSE_1	IF_13
0x4000531	     0xf8493000000	                            je 0x40005ca	       243	buffer.c	FUNCTION_2	ELSE_1	IF_13
0x4000537	    0x488b05000000	            mov rax, qword [0x0400053e] 	       245	buffer.c	FUNCTION_2	ELSE_1	IF_13
0x400053e	    0x8b8008140000	          mov eax, dword [rax + 0x1408] 	       245	buffer.c	FUNCTION_2	ELSE_1	IF_13
0x4000544	          0x8945a4	             mov dword [rbp - 0x5c], eax	       245	buffer.c	FUNCTION_2	ELSE_1	IF_13
0x4000547	    0x488b05000000	            mov rax, qword [0x0400054e] 	       253	buffer.c	FUNCTION_2	ELSE_1	IF_13
0x400054e	    0xc78008140000	            mov dword [rax + 0x1408], 1 	       253	buffer.c	FUNCTION_2	ELSE_1	IF_13
0x4000558	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	       254	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_22
0x400055e	          0x83c805	                               or eax, 5	       254	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_22
0x4000561	        0x4883ec08	                              sub rsp, 8	       254	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_22
0x4000565	              0x50	                                push rax	       254	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_22
0x4000566	    0x41b900000000	                              mov r9d, 0	       254	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_22
0x400056c	    0x41b8ffffff7f	                     mov r8d, 0x7fffffff	       254	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_22
0x4000572	      0xb900000000	                              mov ecx, 0	       254	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_22
0x4000577	      0xba00000000	                              mov edx, 0	       254	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_22
0x400057c	      0xbe00000000	                              mov esi, 0	       254	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_22
0x4000581	      0xbf00000000	                              mov edi, 0	       254	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_22
0x4000586	      0xe800000000	                          call 0x400058b	       254	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_22
0x400058b	        0x4883c410	                           add rsp, 0x10	       254	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_22
0x400058f	          0x89458c	             mov dword [rbp - 0x74], eax	       254	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_22
0x4000592	    0x488b05000000	            mov rax, qword [0x04000599] 	       257	buffer.c	FUNCTION_2	ELSE_1	IF_13
0x4000599	          0x8b55a4	             mov edx, dword [rbp - 0x5c]	       257	buffer.c	FUNCTION_2	ELSE_1	IF_13
0x400059c	    0x899008140000	          mov dword [rax + 0x1408], edx 	       257	buffer.c	FUNCTION_2	ELSE_1	IF_13
0x40005a2	          0x8b458c	             mov eax, dword [rbp - 0x74]	       258	buffer.c	FUNCTION_2	ELSE_1	IF_13	IF_14
0x40005a5	          0x83f801	                              cmp eax, 1	       258	buffer.c	FUNCTION_2	ELSE_1	IF_13	IF_14
0x40005a8	            0x7520	                           jne 0x40005ca	       258	buffer.c	FUNCTION_2	ELSE_1	IF_13	IF_14
0x40005aa	    0x8b9578ffffff	             mov edx, dword [rbp - 0x88]	       259	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_23
0x40005b0	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       259	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_23
0x40005b7	          0x4889c6	                            mov rsi, rax	       259	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_23
0x40005ba	      0xbf01000000	                              mov edi, 1	       259	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_23
0x40005bf	      0xe87cfaffff	                    call sym.read_buffer	       259	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_23
0x40005c4	          0x89458c	             mov dword [rbp - 0x74], eax	       259	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_23
0x40005c7	            0xeb01	                           jmp 0x40005ca	       259	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_23
0x40005c9	              0x90	                                     nop	       194	buffer.c	FUNCTION_2	IF_6
0x40005ca	    0x488b05000000	            mov rax, qword [0x040005d1] 	       263	buffer.c	FUNCTION_2	IF_15
0x40005d1	          0x8b407c	            mov eax, dword [rax + 0x7c] 	       263	buffer.c	FUNCTION_2	IF_15
0x40005d4	          0x83e004	                              and eax, 4	       263	buffer.c	FUNCTION_2	IF_15
0x40005d7	            0x85c0	                           test eax, eax	       263	buffer.c	FUNCTION_2	IF_15
0x40005d9	            0x7423	                            je 0x40005fe	       263	buffer.c	FUNCTION_2	IF_15
0x40005db	    0x488b05000000	            mov rax, qword [0x040005e2] 	       265	buffer.c	FUNCTION_2	IF_15	CALL_24
0x40005e2	      0xbe00000000	                              mov esi, 0	       265	buffer.c	FUNCTION_2	IF_15	CALL_24
0x40005e7	          0x4889c7	                            mov rdi, rax	       265	buffer.c	FUNCTION_2	IF_15	CALL_24
0x40005ea	      0xe800000000	                          call 0x40005ef	       265	buffer.c	FUNCTION_2	IF_15	CALL_24
0x40005ef	    0x488b05000000	            mov rax, qword [0x040005f6] 	       267	buffer.c	FUNCTION_2	IF_15	CALL_25
0x40005f6	          0x4889c7	                            mov rdi, rax	       267	buffer.c	FUNCTION_2	IF_15	CALL_25
0x40005f9	      0xe800000000	                          call 0x40005fe	       267	buffer.c	FUNCTION_2	IF_15	CALL_25
0x40005fe	    0x8b0500000000	            mov eax, dword [0x04000604] 	       279	buffer.c	FUNCTION_2	IF_16	CALL_26
0x4000604	            0x85c0	                           test eax, eax	       279	buffer.c	FUNCTION_2	IF_16	CALL_26
0x4000606	            0x7419	                            je 0x4000621	       279	buffer.c	FUNCTION_2	IF_16	CALL_26
0x4000608	    0x488b05000000	            mov rax, qword [0x0400060f] 	       279	buffer.c	FUNCTION_2	IF_16	CALL_26
0x400060f	      0xbe69000000	                           mov esi, 0x69	       279	buffer.c	FUNCTION_2	IF_16	CALL_26
0x4000614	          0x4889c7	                            mov rdi, rax	       279	buffer.c	FUNCTION_2	IF_16	CALL_26
0x4000617	      0xe800000000	                          call 0x400061c	       279	buffer.c	FUNCTION_2	IF_16	CALL_26
0x400061c	          0x4885c0	                           test rax, rax	       279	buffer.c	FUNCTION_2	IF_16	CALL_26
0x400061f	            0x752c	                           jne 0x400064d	       279	buffer.c	FUNCTION_2	IF_16	CALL_26
0x4000621	    0x8b0500000000	            mov eax, dword [0x04000627] 	       280	buffer.c	FUNCTION_2	IF_16
0x4000627	            0x85c0	                           test eax, eax	       280	buffer.c	FUNCTION_2	IF_16
0x4000629	            0x7522	                           jne 0x400064d	       280	buffer.c	FUNCTION_2	IF_16
0x400062b	      0xe800000000	                          call 0x4000630	       282	buffer.c	FUNCTION_2	IF_16	CALL_28
0x4000630	            0x85c0	                           test eax, eax	       282	buffer.c	FUNCTION_2	IF_16	CALL_28
0x4000632	            0x7420	                            je 0x4000654	       282	buffer.c	FUNCTION_2	IF_16	CALL_28
0x4000634	    0x488b05000000	            mov rax, qword [0x0400063b] 	       282	buffer.c	FUNCTION_2	IF_16	CALL_28
0x400063b	      0xbe69000000	                           mov esi, 0x69	       282	buffer.c	FUNCTION_2	IF_16	CALL_28
0x4000640	          0x4889c7	                            mov rdi, rax	       282	buffer.c	FUNCTION_2	IF_16	CALL_28
0x4000643	      0xe800000000	                          call 0x4000648	       282	buffer.c	FUNCTION_2	IF_16	CALL_28
0x4000648	          0x4885c0	                           test rax, rax	       282	buffer.c	FUNCTION_2	IF_16	CALL_28
0x400064b	            0x7407	                            je 0x4000654	       282	buffer.c	FUNCTION_2	IF_16	CALL_28
0x400064d	      0xe800000000	                          call 0x4000652	       285	buffer.c	FUNCTION_2	CALL_29
0x4000652	            0xeb2b	                           jmp 0x400067f	       285	buffer.c	FUNCTION_2	CALL_29
0x4000654	          0x8b458c	             mov eax, dword [rbp - 0x74]	       286	buffer.c	FUNCTION_2	ELSE_2	IF_17
0x4000657	          0x83f801	                              cmp eax, 1	       286	buffer.c	FUNCTION_2	ELSE_2	IF_17
0x400065a	            0x7523	                           jne 0x400067f	       286	buffer.c	FUNCTION_2	ELSE_2	IF_17
0x400065c	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	       286	buffer.c	FUNCTION_2	ELSE_2	IF_17
0x4000663	            0x751a	                           jne 0x400067f	       286	buffer.c	FUNCTION_2	ELSE_2	IF_17
0x4000665	        0x837d9000	               cmp dword [rbp - 0x70], 0	       286	buffer.c	FUNCTION_2	ELSE_2	IF_17
0x4000669	            0x7514	                           jne 0x400067f	       286	buffer.c	FUNCTION_2	ELSE_2	IF_17
0x400066b	    0x488b05000000	            mov rax, qword [0x04000672] 	       287	buffer.c	FUNCTION_2	ELSE_2	IF_17
0x4000672	      0xbe00000000	                              mov esi, 0	       287	buffer.c	FUNCTION_2	ELSE_2	IF_17
0x4000677	          0x4889c7	                            mov rdi, rax	       287	buffer.c	FUNCTION_2	ELSE_2	IF_17
0x400067a	      0xe800000000	                          call 0x400067f	       287	buffer.c	FUNCTION_2	ELSE_2	IF_17
0x400067f	    0x488b05000000	            mov rax, qword [0x04000686] 	       288	buffer.c	FUNCTION_2	CALL_31
0x4000686	          0x4889c7	                            mov rdi, rax	       288	buffer.c	FUNCTION_2	CALL_31
0x4000689	      0xe800000000	                          call 0x400068e	       288	buffer.c	FUNCTION_2	CALL_31
0x400068e	    0x488b05000000	            mov rax, qword [0x04000695] 	       292	buffer.c	FUNCTION_2	CALL_32
0x4000695	    0x488b15000000	            mov rdx, qword [0x0400069c] 	       292	buffer.c	FUNCTION_2	CALL_32
0x400069c	    0x488b92d80000	            mov rdx, qword [rdx + 0xd8] 	       292	buffer.c	FUNCTION_2	CALL_32
0x40006a3	    0x488990f80000	             mov qword [rax + 0xf8], rdx	       292	buffer.c	FUNCTION_2	CALL_32
0x40006aa	    0x488b05000000	            mov rax, qword [0x040006b1] 	       294	buffer.c	FUNCTION_2	CALL_33
0x40006b1	    0x488b15000000	            mov rdx, qword [0x040006b8] 	       294	buffer.c	FUNCTION_2	CALL_33
0x40006b8	    0x488b92d80000	            mov rdx, qword [rdx + 0xd8] 	       294	buffer.c	FUNCTION_2	CALL_33
0x40006bf	    0x488990000100	            mov qword [rax + 0x100], rdx	       294	buffer.c	FUNCTION_2	CALL_33
0x40006c6	      0xe800000000	                          call 0x40006cb	       299	buffer.c	FUNCTION_2	IF_18	CALL_34
0x40006cb	            0x85c0	                           test eax, eax	       299	buffer.c	FUNCTION_2	IF_18	CALL_34
0x40006cd	            0x7417	                            je 0x40006e6	       299	buffer.c	FUNCTION_2	IF_18	CALL_34
0x40006cf	    0x488b05000000	            mov rax, qword [0x040006d6] 	       303	buffer.c	FUNCTION_2	IF_18	IF_19
0x40006d6	    0x488b15000000	            mov rdx, qword [0x040006dd] 	       303	buffer.c	FUNCTION_2	IF_18	IF_19
0x40006dd	          0x8b527c	            mov edx, dword [rdx + 0x7c] 	       303	buffer.c	FUNCTION_2	IF_18	IF_19
0x40006e0	          0x83ca40	                            or edx, 0x40	       303	buffer.c	FUNCTION_2	IF_18	IF_19
0x40006e3	          0x89507c	             mov dword [rax + 0x7c], edx	       303	buffer.c	FUNCTION_2	IF_18	IF_19
0x40006e6	    0x488b05000000	            mov rax, qword [0x040006ed] 	       308	buffer.c	FUNCTION_2	CALL_35
0x40006ed	          0x4889c7	                            mov rdi, rax	       308	buffer.c	FUNCTION_2	CALL_35
0x40006f0	      0xe800000000	                          call 0x40006f5	       308	buffer.c	FUNCTION_2	CALL_35
0x40006f5	    0x488b05000000	            mov rax, qword [0x040006fc] 	       312	buffer.c	FUNCTION_2	IF_20
0x40006fc	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	       312	buffer.c	FUNCTION_2	IF_20
0x4000702	      0x2580000000	                           and eax, 0x80	       312	buffer.c	FUNCTION_2	IF_20
0x4000707	            0x85c0	                           test eax, eax	       312	buffer.c	FUNCTION_2	IF_20
0x4000709	            0x7520	                           jne 0x400072b	       312	buffer.c	FUNCTION_2	IF_20
0x400070b	    0x488b05000000	            mov rax, qword [0x04000712] 	       314	buffer.c	FUNCTION_2	IF_20
0x4000712	    0x48c740780100	               mov qword [rax + 0x78], 1	       314	buffer.c	FUNCTION_2	IF_20
0x400071a	    0x488b05000000	            mov rax, qword [0x04000721] 	       316	buffer.c	FUNCTION_2	IF_20
0x4000721	    0xc78084000000	               mov dword [rax + 0x84], 0	       316	buffer.c	FUNCTION_2	IF_20
0x400072b	    0x488b05000000	            mov rax, qword [0x04000732] 	       320	buffer.c	FUNCTION_2	CALL_36
0x4000732	        0x488d558c	                   lea rdx, [rbp - 0x74]	       320	buffer.c	FUNCTION_2	CALL_36
0x4000736	          0x4989d1	                             mov r9, rdx	       320	buffer.c	FUNCTION_2	CALL_36
0x4000739	          0x4989c0	                             mov r8, rax	       320	buffer.c	FUNCTION_2	CALL_36
0x400073c	      0xb900000000	                              mov ecx, 0	       320	buffer.c	FUNCTION_2	CALL_36
0x4000741	      0xba00000000	                              mov edx, 0	       320	buffer.c	FUNCTION_2	CALL_36
0x4000746	      0xbe00000000	                              mov esi, 0	       320	buffer.c	FUNCTION_2	CALL_36
0x400074b	      0xbf02000000	                              mov edi, 2	       320	buffer.c	FUNCTION_2	CALL_36
0x4000750	      0xe800000000	                          call 0x4000755	       320	buffer.c	FUNCTION_2	CALL_36
0x4000755	          0x8b458c	             mov eax, dword [rbp - 0x74]	       325	buffer.c	FUNCTION_2	IF_21
0x4000758	          0x83f801	                              cmp eax, 1	       325	buffer.c	FUNCTION_2	IF_21
0x400075b	     0xf8587000000	                           jne 0x40007e8	       325	buffer.c	FUNCTION_2	IF_21
0x4000761	        0x488d45b0	                   lea rax, [rbp - 0x50]	       331	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_38
0x4000765	          0x4889c7	                            mov rdi, rax	       331	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_38
0x4000768	      0xe800000000	                          call 0x400076d	       331	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_38
0x400076d	            0x85c0	                           test eax, eax	       331	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_38
0x400076f	            0x7477	                            je 0x40007e8	       331	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_38
0x4000771	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       331	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_38
0x4000775	        0x488b4008	                mov rax, qword [rax + 8]	       331	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_38
0x4000779	          0x4885c0	                           test rax, rax	       331	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_38
0x400077c	            0x746a	                            je 0x40007e8	       331	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_38
0x400077e	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       336	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_39
0x4000782	        0x488d45c0	                   lea rax, [rbp - 0x40]	       336	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_39
0x4000786	          0x4889d6	                            mov rsi, rdx	       336	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_39
0x4000789	          0x4889c7	                            mov rdi, rax	       336	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_39
0x400078c	      0xe800000000	                          call 0x4000791	       336	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_39
0x4000791	      0xbf00000000	                              mov edi, 0	       337	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_40
0x4000796	      0xe800000000	                          call 0x400079b	       337	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_40
0x400079b	    0x488b05000000	            mov rax, qword [0x040007a2] 	       338	buffer.c	FUNCTION_2	IF_21	IF_22
0x40007a2	    0x488b15000000	            mov rdx, qword [0x040007a9] 	       338	buffer.c	FUNCTION_2	IF_21	IF_22
0x40007a9	          0x8b527c	            mov edx, dword [rdx + 0x7c] 	       338	buffer.c	FUNCTION_2	IF_21	IF_22
0x40007ac	          0x83e2f9	                     and edx, 0xfffffff9	       338	buffer.c	FUNCTION_2	IF_21	IF_22
0x40007af	          0x89507c	             mov dword [rax + 0x7c], edx	       338	buffer.c	FUNCTION_2	IF_21	IF_22
0x40007b2	    0x488b05000000	            mov rax, qword [0x040007b9] 	       341	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_41
0x40007b9	        0x488d558c	                   lea rdx, [rbp - 0x74]	       341	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_41
0x40007bd	          0x4989d1	                             mov r9, rdx	       341	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_41
0x40007c0	          0x4989c0	                             mov r8, rax	       341	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_41
0x40007c3	      0xb900000000	                              mov ecx, 0	       341	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_41
0x40007c8	      0xba00000000	                              mov edx, 0	       341	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_41
0x40007cd	      0xbe00000000	                              mov esi, 0	       341	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_41
0x40007d2	      0xbf0d000000	                            mov edi, 0xd	       341	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_41
0x40007d7	      0xe800000000	                          call 0x40007dc	       341	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_41
0x40007dc	        0x488d45c0	                   lea rax, [rbp - 0x40]	       348	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_43
0x40007e0	          0x4889c7	                            mov rdi, rax	       348	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_43
0x40007e3	      0xe800000000	                          call 0x40007e8	       348	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_43
0x40007e8	          0x8b458c	             mov eax, dword [rbp - 0x74]	       352	buffer.c	FUNCTION_2
0x40007eb	        0x488b4df8	                mov rcx, qword [rbp - 8]	       353	buffer.c	FUNCTION_2
0x40007ef	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       353	buffer.c	FUNCTION_2
0x40007f8	            0x7405	                            je 0x40007ff	       353	buffer.c	FUNCTION_2
0x40007fa	      0xe800000000	                          call 0x40007ff	       353	buffer.c	FUNCTION_2
0x40007ff	              0xc9	                                   leave	       353	buffer.c	FUNCTION_2
0x4000800	              0xc3	                                     ret	       353	buffer.c	FUNCTION_2
sign_list_placed	CALL,13:functions,0:SWITCH,0:FOR,1:ELSE,1:DO,0:WHILE,1:IF,3	106
0x400c134	              0x55	                                push rbp	      6088	buffer.c	FUNCTION_99
0x400c135	          0x4889e5	                            mov rbp, rsp	      6088	buffer.c	FUNCTION_99
0x400c138	            0x4155	                                push r13	      6088	buffer.c	FUNCTION_99
0x400c13a	            0x4154	                                push r12	      6088	buffer.c	FUNCTION_99
0x400c13c	              0x53	                                push rbx	      6088	buffer.c	FUNCTION_99
0x400c13d	    0x4881ec382000	                         sub rsp, 0x2038	      6088	buffer.c	FUNCTION_99
0x400c144	    0x4889bdb8dfff	           mov qword [rbp - 0x2048], rdi	      6088	buffer.c	FUNCTION_99
0x400c14b	    0x64488b042528	                mov rax, qword fs:[0x28]	      6088	buffer.c	FUNCTION_99
0x400c154	        0x488945d8	             mov qword [rbp - 0x28], rax	      6088	buffer.c	FUNCTION_99
0x400c158	            0x31c0	                            xor eax, eax	      6088	buffer.c	FUNCTION_99
0x400c15a	      0xbf00000000	                              mov edi, 0	      6093	buffer.c	FUNCTION_99	CALL_2
0x400c15f	      0xe800000000	                          call 0x400c164	      6093	buffer.c	FUNCTION_99	CALL_2
0x400c164	          0x4889c7	                            mov rdi, rax	      6093	buffer.c	FUNCTION_99	CALL_2
0x400c167	      0xe800000000	                          call 0x400c16c	      6093	buffer.c	FUNCTION_99	CALL_2
0x400c16c	      0xbf0a000000	                            mov edi, 0xa	      6094	buffer.c	FUNCTION_99	CALL_3
0x400c171	      0xe800000000	                          call 0x400c176	      6094	buffer.c	FUNCTION_99	CALL_3
0x400c176	    0x4883bdb8dfff	             cmp qword [rbp - 0x2048], 0	      6095	buffer.c	FUNCTION_99	IF_1
0x400c17e	            0x7513	                           jne 0x400c193	      6095	buffer.c	FUNCTION_99	IF_1
0x400c180	    0x488b05000000	            mov rax, qword [0x0400c187] 	      6096	buffer.c	FUNCTION_99	IF_1
0x400c187	    0x488985c0dfff	           mov qword [rbp - 0x2040], rax	      6096	buffer.c	FUNCTION_99	IF_1
0x400c18e	      0xe94f010000	                           jmp 0x400c2e2	      6096	buffer.c	FUNCTION_99	IF_1
0x400c193	    0x488b85b8dfff	           mov rax, qword [rbp - 0x2048]	      6098	buffer.c	FUNCTION_99	ELSE_1
0x400c19a	    0x488985c0dfff	           mov qword [rbp - 0x2040], rax	      6098	buffer.c	FUNCTION_99	ELSE_1
0x400c1a1	      0xe93c010000	                           jmp 0x400c2e2	      6099	buffer.c	FUNCTION_99	ELSE_1	WHILE_1
0x400c1a6	    0x488b85c0dfff	           mov rax, qword [rbp - 0x2040]	      6101	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2
0x400c1ad	    0x488b80201c00	          mov rax, qword [rax + 0x1c20] 	      6101	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2
0x400c1b4	          0x4885c0	                           test rax, rax	      6101	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2
0x400c1b7	            0x7458	                            je 0x400c211	      6101	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2
0x400c1b9	    0x488b85c0dfff	           mov rax, qword [rbp - 0x2040]	      6103	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_5
0x400c1c0	    0x488b98980000	            mov rbx, qword [rax + 0x98] 	      6103	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_5
0x400c1c7	      0xbf00000000	                              mov edi, 0	      6103	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_5
0x400c1cc	      0xe800000000	                          call 0x400c1d1	      6103	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_5
0x400c1d1	          0x4889c2	                            mov rdx, rax	      6103	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_5
0x400c1d4	    0x488d85d0dfff	                 lea rax, [rbp - 0x2030]	      6103	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_5
0x400c1db	          0x4889d9	                            mov rcx, rbx	      6103	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_5
0x400c1de	      0xbe00200000	                         mov esi, 0x2000	      6103	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_5
0x400c1e3	          0x4889c7	                            mov rdi, rax	      6103	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_5
0x400c1e6	      0xb800000000	                              mov eax, 0	      6103	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_5
0x400c1eb	      0xe800000000	                          call 0x400c1f0	      6103	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_5
0x400c1f0	    0x8b1500000000	            mov edx, dword [0x0400c1f6] 	      6104	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_7
0x400c1f6	    0x488d85d0dfff	                 lea rax, [rbp - 0x2030]	      6104	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_7
0x400c1fd	            0x89d6	                            mov esi, edx	      6104	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_7
0x400c1ff	          0x4889c7	                            mov rdi, rax	      6104	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_7
0x400c202	      0xe800000000	                          call 0x400c207	      6104	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_7
0x400c207	      0xbf0a000000	                            mov edi, 0xa	      6105	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_8
0x400c20c	      0xe800000000	                          call 0x400c211	      6105	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_8
0x400c211	    0x488b85c0dfff	           mov rax, qword [rbp - 0x2040]	      6107	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1
0x400c218	    0x488b80201c00	          mov rax, qword [rax + 0x1c20] 	      6107	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1
0x400c21f	    0x488985c8dfff	           mov qword [rbp - 0x2038], rax	      6107	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1
0x400c226	      0xe983000000	                           jmp 0x400c2ae	      6107	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1
0x400c22b	    0x488b85c8dfff	           mov rax, qword [rbp - 0x2038]	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x400c232	          0x8b4010	            mov eax, dword [rax + 0x10] 	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x400c235	            0x89c7	                            mov edi, eax	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x400c237	      0xe800000000	                          call 0x400c23c	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x400c23c	          0x4989c5	                            mov r13, rax	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x400c23f	    0x488b85c8dfff	           mov rax, qword [rbp - 0x2038]	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x400c246	          0x448b20	                   mov r12d, dword [rax]	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x400c249	    0x488b85c8dfff	           mov rax, qword [rbp - 0x2038]	      6110	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_11
0x400c250	        0x488b5808	                mov rbx, qword [rax + 8]	      6110	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_11
0x400c254	      0xbf00000000	                              mov edi, 0	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x400c259	      0xe800000000	                          call 0x400c25e	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x400c25e	          0x4889c2	                            mov rdx, rax	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x400c261	    0x488d85d0dfff	                 lea rax, [rbp - 0x2030]	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x400c268	          0x4d89e9	                             mov r9, r13	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x400c26b	          0x4589e0	                           mov r8d, r12d	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x400c26e	          0x4889d9	                            mov rcx, rbx	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x400c271	      0xbe00200000	                         mov esi, 0x2000	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x400c276	          0x4889c7	                            mov rdi, rax	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x400c279	      0xb800000000	                              mov eax, 0	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x400c27e	      0xe800000000	                          call 0x400c283	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x400c283	    0x488d85d0dfff	                 lea rax, [rbp - 0x2030]	      6111	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_12
0x400c28a	          0x4889c7	                            mov rdi, rax	      6111	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_12
0x400c28d	      0xe800000000	                          call 0x400c292	      6111	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_12
0x400c292	      0xbf0a000000	                            mov edi, 0xa	      6112	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_13
0x400c297	      0xe800000000	                          call 0x400c29c	      6112	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_13
0x400c29c	    0x488b85c8dfff	           mov rax, qword [rbp - 0x2038]	      6107	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1
0x400c2a3	        0x488b4018	            mov rax, qword [rax + 0x18] 	      6107	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1
0x400c2a7	    0x488985c8dfff	           mov qword [rbp - 0x2038], rax	      6107	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1
0x400c2ae	    0x4883bdc8dfff	             cmp qword [rbp - 0x2038], 0	      6107	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1
0x400c2b6	            0x740e	                            je 0x400c2c6	      6107	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1
0x400c2b8	    0x8b0500000000	            mov eax, dword [0x0400c2be] 	      6107	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1
0x400c2be	            0x85c0	                           test eax, eax	      6107	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1
0x400c2c0	     0xf8465ffffff	                            je 0x400c22b	      6107	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1
0x400c2c6	    0x4883bdb8dfff	             cmp qword [rbp - 0x2048], 0	      6114	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_3
0x400c2ce	            0x752c	                           jne 0x400c2fc	      6114	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_3
0x400c2d0	    0x488b85c0dfff	           mov rax, qword [rbp - 0x2040]	      6116	buffer.c	FUNCTION_99	ELSE_1	WHILE_1
0x400c2d7	        0x488b4068	            mov rax, qword [rax + 0x68] 	      6116	buffer.c	FUNCTION_99	ELSE_1	WHILE_1
0x400c2db	    0x488985c0dfff	           mov qword [rbp - 0x2040], rax	      6116	buffer.c	FUNCTION_99	ELSE_1	WHILE_1
0x400c2e2	    0x4883bdc0dfff	             cmp qword [rbp - 0x2040], 0	      6099	buffer.c	FUNCTION_99	ELSE_1	WHILE_1
0x400c2ea	            0x7411	                            je 0x400c2fd	      6099	buffer.c	FUNCTION_99	ELSE_1	WHILE_1
0x400c2ec	    0x8b0500000000	            mov eax, dword [0x0400c2f2] 	      6099	buffer.c	FUNCTION_99	ELSE_1	WHILE_1
0x400c2f2	            0x85c0	                           test eax, eax	      6099	buffer.c	FUNCTION_99	ELSE_1	WHILE_1
0x400c2f4	     0xf84acfeffff	                            je 0x400c1a6	      6099	buffer.c	FUNCTION_99	ELSE_1	WHILE_1
0x400c2fa	            0xeb01	                           jmp 0x400c2fd	      6118	buffer.c	FUNCTION_99
0x400c2fc	              0x90	                                     nop	      6115	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_3
0x400c2fd	              0x90	                                     nop	      6118	buffer.c	FUNCTION_99
0x400c2fe	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6118	buffer.c	FUNCTION_99
0x400c302	    0x644833042528	                xor rax, qword fs:[0x28]	      6118	buffer.c	FUNCTION_99
0x400c30b	            0x7405	                            je 0x400c312	      6118	buffer.c	FUNCTION_99
0x400c30d	      0xe800000000	                          call 0x400c312	      6118	buffer.c	FUNCTION_99
0x400c312	    0x4881c4382000	                         add rsp, 0x2038	      6118	buffer.c	FUNCTION_99
0x400c319	              0x5b	                                 pop rbx	      6118	buffer.c	FUNCTION_99
0x400c31a	            0x415c	                                 pop r12	      6118	buffer.c	FUNCTION_99
0x400c31c	            0x415d	                                 pop r13	      6118	buffer.c	FUNCTION_99
0x400c31e	              0x5d	                                 pop rbp	      6118	buffer.c	FUNCTION_99
0x400c31f	              0xc3	                                     ret	      6118	buffer.c	FUNCTION_99
buf_freeall	CALL,21:functions,0:SWITCH,0:FOR,0:ELSE,0:DO,0:WHILE,0:IF,12	219
0x4001097	              0x55	                                push rbp	       720	buffer.c	FUNCTION_10
0x4001098	          0x4889e5	                            mov rbp, rsp	       720	buffer.c	FUNCTION_10
0x400109b	        0x4883ec60	                           sub rsp, 0x60	       720	buffer.c	FUNCTION_10
0x400109f	        0x48897da8	             mov qword [rbp - 0x58], rdi	       720	buffer.c	FUNCTION_10
0x40010a3	          0x8975a4	             mov dword [rbp - 0x5c], esi	       720	buffer.c	FUNCTION_10
0x40010a6	    0x64488b042528	                mov rax, qword fs:[0x28]	       720	buffer.c	FUNCTION_10
0x40010af	        0x488945f8	                mov qword [rbp - 8], rax	       720	buffer.c	FUNCTION_10
0x40010b3	            0x31c0	                            xor eax, eax	       720	buffer.c	FUNCTION_10
0x40010b5	    0x488b05000000	            mov rax, qword [0x040010bc] 	       721	buffer.c	FUNCTION_10
0x40010bc	        0x483945a8	            cmp qword [rbp - 0x58], rax 	       721	buffer.c	FUNCTION_10
0x40010c0	           0xf94c0	                                 sete al	       721	buffer.c	FUNCTION_10
0x40010c3	           0xfb6c0	                           movzx eax, al	       721	buffer.c	FUNCTION_10
0x40010c6	          0x8945b8	             mov dword [rbp - 0x48], eax	       721	buffer.c	FUNCTION_10
0x40010c9	    0x488b05000000	            mov rax, qword [0x040010d0] 	       723	buffer.c	FUNCTION_10
0x40010d0	          0x4885c0	                           test rax, rax	       723	buffer.c	FUNCTION_10
0x40010d3	            0x7418	                            je 0x40010ed	       723	buffer.c	FUNCTION_10
0x40010d5	    0x488b05000000	            mov rax, qword [0x040010dc] 	       723	buffer.c	FUNCTION_10
0x40010dc	        0x488b4008	                mov rax, qword [rax + 8]	       723	buffer.c	FUNCTION_10
0x40010e0	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	       723	buffer.c	FUNCTION_10
0x40010e4	            0x7507	                           jne 0x40010ed	       723	buffer.c	FUNCTION_10
0x40010e6	      0xb801000000	                              mov eax, 1	       723	buffer.c	FUNCTION_10
0x40010eb	            0xeb05	                           jmp 0x40010f2	       723	buffer.c	FUNCTION_10
0x40010ed	      0xb800000000	                              mov eax, 0	       723	buffer.c	FUNCTION_10
0x40010f2	          0x8945bc	             mov dword [rbp - 0x44], eax	       723	buffer.c	FUNCTION_10
0x40010f5	    0x488b05000000	            mov rax, qword [0x040010fc] 	       724	buffer.c	FUNCTION_10
0x40010fc	        0x488945d0	             mov qword [rbp - 0x30], rax	       724	buffer.c	FUNCTION_10
0x4001100	    0x488b05000000	            mov rax, qword [0x04001107] 	       725	buffer.c	FUNCTION_10
0x4001107	        0x488945d8	             mov qword [rbp - 0x28], rax	       725	buffer.c	FUNCTION_10
0x400110b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       728	buffer.c	FUNCTION_10
0x400110f	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	       728	buffer.c	FUNCTION_10
0x4001115	          0x8d5001	                      lea edx, [rax + 1]	       728	buffer.c	FUNCTION_10
0x4001118	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       728	buffer.c	FUNCTION_10
0x400111c	    0x899080000000	             mov dword [rax + 0x80], edx	       728	buffer.c	FUNCTION_10
0x4001122	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       729	buffer.c	FUNCTION_10	CALL_1
0x4001126	        0x488d45e0	                   lea rax, [rbp - 0x20]	       729	buffer.c	FUNCTION_10	CALL_1
0x400112a	          0x4889d6	                            mov rsi, rdx	       729	buffer.c	FUNCTION_10	CALL_1
0x400112d	          0x4889c7	                            mov rdi, rax	       729	buffer.c	FUNCTION_10	CALL_1
0x4001130	      0xe800000000	                          call 0x4001135	       729	buffer.c	FUNCTION_10	CALL_1
0x4001135	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       730	buffer.c	FUNCTION_10	IF_1
0x4001139	        0x488b4008	                mov rax, qword [rax + 8]	       730	buffer.c	FUNCTION_10	IF_1
0x400113d	          0x4885c0	                           test rax, rax	       730	buffer.c	FUNCTION_10	IF_1
0x4001140	            0x7447	                            je 0x4001189	       730	buffer.c	FUNCTION_10	IF_1
0x4001142	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       732	buffer.c	FUNCTION_10	IF_1	IF_2	CALL_2
0x4001146	    0x488b90980000	            mov rdx, qword [rax + 0x98] 	       732	buffer.c	FUNCTION_10	IF_1	IF_2	CALL_2
0x400114d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       732	buffer.c	FUNCTION_10	IF_1	IF_2	CALL_2
0x4001151	    0x488b80980000	            mov rax, qword [rax + 0x98] 	       732	buffer.c	FUNCTION_10	IF_1	IF_2	CALL_2
0x4001158	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	       732	buffer.c	FUNCTION_10	IF_1	IF_2	CALL_2
0x400115c	          0x4989c8	                             mov r8, rcx	       732	buffer.c	FUNCTION_10	IF_1	IF_2	CALL_2
0x400115f	      0xb900000000	                              mov ecx, 0	       732	buffer.c	FUNCTION_10	IF_1	IF_2	CALL_2
0x4001164	          0x4889c6	                            mov rsi, rax	       732	buffer.c	FUNCTION_10	IF_1	IF_2	CALL_2
0x4001167	      0xbf0c000000	                            mov edi, 0xc	       732	buffer.c	FUNCTION_10	IF_1	IF_2	CALL_2
0x400116c	      0xe800000000	                          call 0x4001171	       732	buffer.c	FUNCTION_10	IF_1	IF_2	CALL_2
0x4001171	            0x85c0	                           test eax, eax	       732	buffer.c	FUNCTION_10	IF_1	IF_2	CALL_2
0x4001173	            0x7414	                            je 0x4001189	       732	buffer.c	FUNCTION_10	IF_1	IF_2	CALL_2
0x4001175	        0x488d45e0	                   lea rax, [rbp - 0x20]	       734	buffer.c	FUNCTION_10	IF_1	IF_2	CALL_3
0x4001179	          0x4889c7	                            mov rdi, rax	       734	buffer.c	FUNCTION_10	IF_1	IF_2	CALL_3
0x400117c	      0xe800000000	                          call 0x4001181	       734	buffer.c	FUNCTION_10	IF_1	IF_2	CALL_3
0x4001181	            0x85c0	                           test eax, eax	       734	buffer.c	FUNCTION_10	IF_1	IF_2	CALL_3
0x4001183	     0xf8438020000	                            je 0x40013c1	       734	buffer.c	FUNCTION_10	IF_1	IF_2	CALL_3
0x4001189	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       738	buffer.c	FUNCTION_10	IF_3
0x400118c	          0x83e001	                              and eax, 1	       738	buffer.c	FUNCTION_10	IF_3
0x400118f	            0x85c0	                           test eax, eax	       738	buffer.c	FUNCTION_10	IF_3
0x4001191	            0x7455	                            je 0x40011e8	       738	buffer.c	FUNCTION_10	IF_3
0x4001193	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       738	buffer.c	FUNCTION_10	IF_3
0x4001197	    0x8b8024140000	          mov eax, dword [rax + 0x1424] 	       738	buffer.c	FUNCTION_10	IF_3
0x400119d	            0x85c0	                           test eax, eax	       738	buffer.c	FUNCTION_10	IF_3
0x400119f	            0x7447	                            je 0x40011e8	       738	buffer.c	FUNCTION_10	IF_3
0x40011a1	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       740	buffer.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x40011a5	    0x488b90980000	            mov rdx, qword [rax + 0x98] 	       740	buffer.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x40011ac	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       740	buffer.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x40011b0	    0x488b80980000	            mov rax, qword [rax + 0x98] 	       740	buffer.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x40011b7	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	       740	buffer.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x40011bb	          0x4989c8	                             mov r8, rcx	       740	buffer.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x40011be	      0xb900000000	                              mov ecx, 0	       740	buffer.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x40011c3	          0x4889c6	                            mov rsi, rax	       740	buffer.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x40011c6	      0xbf01000000	                              mov edi, 1	       740	buffer.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x40011cb	      0xe800000000	                          call 0x40011d0	       740	buffer.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x40011d0	            0x85c0	                           test eax, eax	       740	buffer.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x40011d2	            0x7414	                            je 0x40011e8	       740	buffer.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x40011d4	        0x488d45e0	                   lea rax, [rbp - 0x20]	       742	buffer.c	FUNCTION_10	IF_3	IF_4	CALL_5
0x40011d8	          0x4889c7	                            mov rdi, rax	       742	buffer.c	FUNCTION_10	IF_3	IF_4	CALL_5
0x40011db	      0xe800000000	                          call 0x40011e0	       742	buffer.c	FUNCTION_10	IF_3	IF_4	CALL_5
0x40011e0	            0x85c0	                           test eax, eax	       742	buffer.c	FUNCTION_10	IF_3	IF_4	CALL_5
0x40011e2	     0xf84dc010000	                            je 0x40013c4	       742	buffer.c	FUNCTION_10	IF_3	IF_4	CALL_5
0x40011e8	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       746	buffer.c	FUNCTION_10	IF_5
0x40011eb	          0x83e002	                              and eax, 2	       746	buffer.c	FUNCTION_10	IF_5
0x40011ee	            0x85c0	                           test eax, eax	       746	buffer.c	FUNCTION_10	IF_5
0x40011f0	            0x7447	                            je 0x4001239	       746	buffer.c	FUNCTION_10	IF_5
0x40011f2	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       748	buffer.c	FUNCTION_10	IF_5	IF_6	CALL_6
0x40011f6	    0x488b90980000	            mov rdx, qword [rax + 0x98] 	       748	buffer.c	FUNCTION_10	IF_5	IF_6	CALL_6
0x40011fd	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       748	buffer.c	FUNCTION_10	IF_5	IF_6	CALL_6
0x4001201	    0x488b80980000	            mov rax, qword [rax + 0x98] 	       748	buffer.c	FUNCTION_10	IF_5	IF_6	CALL_6
0x4001208	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	       748	buffer.c	FUNCTION_10	IF_5	IF_6	CALL_6
0x400120c	          0x4989c8	                             mov r8, rcx	       748	buffer.c	FUNCTION_10	IF_5	IF_6	CALL_6
0x400120f	      0xb900000000	                              mov ecx, 0	       748	buffer.c	FUNCTION_10	IF_5	IF_6	CALL_6
0x4001214	          0x4889c6	                            mov rsi, rax	       748	buffer.c	FUNCTION_10	IF_5	IF_6	CALL_6
0x4001217	      0xbf0f000000	                            mov edi, 0xf	       748	buffer.c	FUNCTION_10	IF_5	IF_6	CALL_6
0x400121c	      0xe800000000	                          call 0x4001221	       748	buffer.c	FUNCTION_10	IF_5	IF_6	CALL_6
0x4001221	            0x85c0	                           test eax, eax	       748	buffer.c	FUNCTION_10	IF_5	IF_6	CALL_6
0x4001223	            0x7414	                            je 0x4001239	       748	buffer.c	FUNCTION_10	IF_5	IF_6	CALL_6
0x4001225	        0x488d45e0	                   lea rax, [rbp - 0x20]	       750	buffer.c	FUNCTION_10	IF_5	IF_6	CALL_7
0x4001229	          0x4889c7	                            mov rdi, rax	       750	buffer.c	FUNCTION_10	IF_5	IF_6	CALL_7
0x400122c	      0xe800000000	                          call 0x4001231	       750	buffer.c	FUNCTION_10	IF_5	IF_6	CALL_7
0x4001231	            0x85c0	                           test eax, eax	       750	buffer.c	FUNCTION_10	IF_5	IF_6	CALL_7
0x4001233	     0xf848e010000	                            je 0x40013c7	       750	buffer.c	FUNCTION_10	IF_5	IF_6	CALL_7
0x4001239	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       754	buffer.c	FUNCTION_10
0x400123d	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	       754	buffer.c	FUNCTION_10
0x4001243	          0x8d50ff	                      lea edx, [rax - 1]	       754	buffer.c	FUNCTION_10
0x4001246	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       754	buffer.c	FUNCTION_10
0x400124a	    0x899080000000	             mov dword [rax + 0x80], edx	       754	buffer.c	FUNCTION_10
0x4001250	        0x837dbc00	               cmp dword [rbp - 0x44], 0	       759	buffer.c	FUNCTION_10	IF_7	CALL_8
0x4001254	            0x743a	                            je 0x4001290	       759	buffer.c	FUNCTION_10	IF_7	CALL_8
0x4001256	    0x488b05000000	            mov rax, qword [0x0400125d] 	       759	buffer.c	FUNCTION_10	IF_7	CALL_8
0x400125d	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	       759	buffer.c	FUNCTION_10	IF_7	CALL_8
0x4001261	            0x742d	                            je 0x4001290	       759	buffer.c	FUNCTION_10	IF_7	CALL_8
0x4001263	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       759	buffer.c	FUNCTION_10	IF_7	CALL_8
0x4001267	          0x4889c7	                            mov rdi, rax	       759	buffer.c	FUNCTION_10	IF_7	CALL_8
0x400126a	      0xe800000000	                          call 0x400126f	       759	buffer.c	FUNCTION_10	IF_7	CALL_8
0x400126f	            0x85c0	                           test eax, eax	       759	buffer.c	FUNCTION_10	IF_7	CALL_8
0x4001271	            0x741d	                            je 0x4001290	       759	buffer.c	FUNCTION_10	IF_7	CALL_8
0x4001273	      0xe800000000	                          call 0x4001278	       761	buffer.c	FUNCTION_10	IF_7	CALL_9
0x4001278	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       762	buffer.c	FUNCTION_10	IF_7	CALL_10
0x400127c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       762	buffer.c	FUNCTION_10	IF_7	CALL_10
0x4001280	          0x4889d6	                            mov rsi, rdx	       762	buffer.c	FUNCTION_10	IF_7	CALL_10
0x4001283	          0x4889c7	                            mov rdi, rax	       762	buffer.c	FUNCTION_10	IF_7	CALL_10
0x4001286	      0xe800000000	                          call 0x400128b	       762	buffer.c	FUNCTION_10	IF_7	CALL_10
0x400128b	      0xe800000000	                          call 0x4001290	       763	buffer.c	FUNCTION_10	IF_7	CALL_11
0x4001290	      0xe800000000	                          call 0x4001295	       767	buffer.c	FUNCTION_10	IF_8	CALL_12
0x4001295	            0x85c0	                           test eax, eax	       767	buffer.c	FUNCTION_10	IF_8	CALL_12
0x4001297	     0xf852d010000	                           jne 0x40013ca	       767	buffer.c	FUNCTION_10	IF_8	CALL_12
0x400129d	    0x488b05000000	            mov rax, qword [0x040012a4] 	       777	buffer.c	FUNCTION_10	IF_9
0x40012a4	        0x483945a8	            cmp qword [rbp - 0x58], rax 	       777	buffer.c	FUNCTION_10	IF_9
0x40012a8	            0x750a	                           jne 0x40012b4	       777	buffer.c	FUNCTION_10	IF_9
0x40012aa	        0x837db800	               cmp dword [rbp - 0x48], 0	       777	buffer.c	FUNCTION_10	IF_9
0x40012ae	     0xf8419010000	                            je 0x40013cd	       777	buffer.c	FUNCTION_10	IF_9
0x40012b4	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       780	buffer.c	FUNCTION_10	CALL_13
0x40012b8	          0x4889c7	                            mov rdi, rax	       780	buffer.c	FUNCTION_10	CALL_13
0x40012bb	      0xe800000000	                          call 0x40012c0	       780	buffer.c	FUNCTION_10	CALL_13
0x40012c0	    0x488b05000000	            mov rax, qword [0x040012c7] 	       784	buffer.c	FUNCTION_10	IF_10
0x40012c7	          0x4885c0	                           test rax, rax	       784	buffer.c	FUNCTION_10	IF_10
0x40012ca	            0x7420	                            je 0x40012ec	       784	buffer.c	FUNCTION_10	IF_10
0x40012cc	    0x488b05000000	            mov rax, qword [0x040012d3] 	       784	buffer.c	FUNCTION_10	IF_10
0x40012d3	        0x488b4008	                mov rax, qword [rax + 8]	       784	buffer.c	FUNCTION_10	IF_10
0x40012d7	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	       784	buffer.c	FUNCTION_10	IF_10
0x40012db	            0x750f	                           jne 0x40012ec	       784	buffer.c	FUNCTION_10	IF_10
0x40012dd	    0x488b05000000	            mov rax, qword [0x040012e4] 	       785	buffer.c	FUNCTION_10	CALL_14
0x40012e4	          0x4889c7	                            mov rdi, rax	       785	buffer.c	FUNCTION_10	CALL_14
0x40012e7	      0xe800000000	                          call 0x40012ec	       785	buffer.c	FUNCTION_10	CALL_14
0x40012ec	    0x488b05000000	            mov rax, qword [0x040012f3] 	       794	buffer.c	FUNCTION_10	CALL_15
0x40012f3	        0x488945c8	             mov qword [rbp - 0x38], rax	       794	buffer.c	FUNCTION_10	CALL_15
0x40012f7	            0xeb5c	                           jmp 0x4001355	       794	buffer.c	FUNCTION_10	CALL_15
0x40012f9	    0x488b05000000	            mov rax, qword [0x04001300] 	       794	buffer.c	FUNCTION_10	CALL_15
0x4001300	        0x483945c8	            cmp qword [rbp - 0x38], rax 	       794	buffer.c	FUNCTION_10	CALL_15
0x4001304	            0x740a	                            je 0x4001310	       794	buffer.c	FUNCTION_10	CALL_15
0x4001306	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       794	buffer.c	FUNCTION_10	CALL_15
0x400130a	        0x488b4020	            mov rax, qword [rax + 0x20] 	       794	buffer.c	FUNCTION_10	CALL_15
0x400130e	            0xeb07	                           jmp 0x4001317	       794	buffer.c	FUNCTION_10	CALL_15
0x4001310	    0x488b05000000	            mov rax, qword [0x04001317] 	       794	buffer.c	FUNCTION_10	CALL_15
0x4001317	        0x488945c0	             mov qword [rbp - 0x40], rax	       794	buffer.c	FUNCTION_10	CALL_15
0x400131b	            0xeb26	                           jmp 0x4001343	       794	buffer.c	FUNCTION_10	CALL_15
0x400131d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       795	buffer.c	FUNCTION_10	IF_11
0x4001321	        0x488b4008	                mov rax, qword [rax + 8]	       795	buffer.c	FUNCTION_10	IF_11
0x4001325	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	       795	buffer.c	FUNCTION_10	IF_11
0x4001329	            0x750c	                           jne 0x4001337	       795	buffer.c	FUNCTION_10	IF_11
0x400132b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       796	buffer.c	FUNCTION_10	CALL_16
0x400132f	          0x4889c7	                            mov rdi, rax	       796	buffer.c	FUNCTION_10	CALL_16
0x4001332	      0xe800000000	                          call 0x4001337	       796	buffer.c	FUNCTION_10	CALL_16
0x4001337	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       794	buffer.c	FUNCTION_10	CALL_15
0x400133b	        0x488b4020	            mov rax, qword [rax + 0x20] 	       794	buffer.c	FUNCTION_10	CALL_15
0x400133f	        0x488945c0	             mov qword [rbp - 0x40], rax	       794	buffer.c	FUNCTION_10	CALL_15
0x4001343	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       794	buffer.c	FUNCTION_10	CALL_15
0x4001348	            0x75d3	                           jne 0x400131d	       794	buffer.c	FUNCTION_10	CALL_15
0x400134a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       794	buffer.c	FUNCTION_10	CALL_15
0x400134e	          0x488b00	                    mov rax, qword [rax]	       794	buffer.c	FUNCTION_10	CALL_15
0x4001351	        0x488945c8	             mov qword [rbp - 0x38], rax	       794	buffer.c	FUNCTION_10	CALL_15
0x4001355	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       794	buffer.c	FUNCTION_10	CALL_15
0x400135a	            0x759d	                           jne 0x40012f9	       794	buffer.c	FUNCTION_10	CALL_15
0x400135c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       803	buffer.c	FUNCTION_10	CALL_18
0x4001360	      0xbe01000000	                              mov esi, 1	       803	buffer.c	FUNCTION_10	CALL_18
0x4001365	          0x4889c7	                            mov rdi, rax	       803	buffer.c	FUNCTION_10	CALL_18
0x4001368	      0xe800000000	                          call 0x400136d	       803	buffer.c	FUNCTION_10	CALL_18
0x400136d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       804	buffer.c	FUNCTION_10
0x4001371	    0x48c700000000	                      mov qword [rax], 0	       804	buffer.c	FUNCTION_10
0x4001378	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       805	buffer.c	FUNCTION_10	IF_12
0x400137b	          0x83e004	                              and eax, 4	       805	buffer.c	FUNCTION_10	IF_12
0x400137e	            0x85c0	                           test eax, eax	       805	buffer.c	FUNCTION_10	IF_12
0x4001380	            0x7518	                           jne 0x400139a	       805	buffer.c	FUNCTION_10	IF_12
0x4001382	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       807	buffer.c	FUNCTION_10	IF_12	CALL_19
0x4001386	          0x4889c7	                            mov rdi, rax	       807	buffer.c	FUNCTION_10	IF_12	CALL_19
0x4001389	      0xe800000000	                          call 0x400138e	       807	buffer.c	FUNCTION_10	IF_12	CALL_19
0x400138e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       808	buffer.c	FUNCTION_10	IF_12	CALL_20
0x4001392	          0x4889c7	                            mov rdi, rax	       808	buffer.c	FUNCTION_10	IF_12	CALL_20
0x4001395	      0xe800000000	                          call 0x400139a	       808	buffer.c	FUNCTION_10	IF_12	CALL_20
0x400139a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       811	buffer.c	FUNCTION_10	CALL_21
0x400139e	    0x480568170000	                         add rax, 0x1768	       811	buffer.c	FUNCTION_10	CALL_21
0x40013a4	          0x4889c7	                            mov rdi, rax	       811	buffer.c	FUNCTION_10	CALL_21
0x40013a7	      0xe800000000	                          call 0x40013ac	       811	buffer.c	FUNCTION_10	CALL_21
0x40013ac	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       813	buffer.c	FUNCTION_10
0x40013b0	          0x8b407c	            mov eax, dword [rax + 0x7c] 	       813	buffer.c	FUNCTION_10
0x40013b3	          0x83e0bf	                     and eax, 0xffffffbf	       813	buffer.c	FUNCTION_10
0x40013b6	            0x89c2	                            mov edx, eax	       813	buffer.c	FUNCTION_10
0x40013b8	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       813	buffer.c	FUNCTION_10
0x40013bc	          0x89507c	             mov dword [rax + 0x7c], edx	       813	buffer.c	FUNCTION_10
0x40013bf	            0xeb0d	                           jmp 0x40013ce	       813	buffer.c	FUNCTION_10
0x40013c1	              0x90	                                     nop	       736	buffer.c	FUNCTION_10	IF_1	IF_2
0x40013c2	            0xeb0a	                           jmp 0x40013ce	       736	buffer.c	FUNCTION_10	IF_1	IF_2
0x40013c4	              0x90	                                     nop	       744	buffer.c	FUNCTION_10	IF_3	IF_4
0x40013c5	            0xeb07	                           jmp 0x40013ce	       744	buffer.c	FUNCTION_10	IF_3	IF_4
0x40013c7	              0x90	                                     nop	       752	buffer.c	FUNCTION_10	IF_5	IF_6
0x40013c8	            0xeb04	                           jmp 0x40013ce	       752	buffer.c	FUNCTION_10	IF_5	IF_6
0x40013ca	              0x90	                                     nop	       768	buffer.c	FUNCTION_10	IF_8
0x40013cb	            0xeb01	                           jmp 0x40013ce	       768	buffer.c	FUNCTION_10	IF_8
0x40013cd	              0x90	                                     nop	       778	buffer.c	FUNCTION_10	IF_9
0x40013ce	        0x488b45f8	                mov rax, qword [rbp - 8]	       814	buffer.c	FUNCTION_10
0x40013d2	    0x644833042528	                xor rax, qword fs:[0x28]	       814	buffer.c	FUNCTION_10
0x40013db	            0x7405	                            je 0x40013e2	       814	buffer.c	FUNCTION_10
0x40013dd	      0xe800000000	                          call 0x40013e2	       814	buffer.c	FUNCTION_10
0x40013e2	              0xc9	                                   leave	       814	buffer.c	FUNCTION_10
0x40013e3	              0xc3	                                     ret	       814	buffer.c	FUNCTION_10
restore_win_for_buf	CALL,2:functions,0:SWITCH,0:FOR,0:ELSE,1:DO,0:WHILE,0:IF,1	23
0x400b9f4	              0x55	                                push rbp	      5748	buffer.c	FUNCTION_86
0x400b9f5	          0x4889e5	                            mov rbp, rsp	      5748	buffer.c	FUNCTION_86
0x400b9f8	        0x4883ec20	                           sub rsp, 0x20	      5748	buffer.c	FUNCTION_86
0x400b9fc	        0x48897df8	                mov qword [rbp - 8], rdi	      5748	buffer.c	FUNCTION_86
0x400ba00	        0x488975f0	             mov qword [rbp - 0x10], rsi	      5748	buffer.c	FUNCTION_86
0x400ba04	        0x488955e8	             mov qword [rbp - 0x18], rdx	      5748	buffer.c	FUNCTION_86
0x400ba08	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5749	buffer.c	FUNCTION_86	IF_1
0x400ba0c	          0x488b00	                    mov rax, qword [rax]	      5749	buffer.c	FUNCTION_86	IF_1
0x400ba0f	          0x4885c0	                           test rax, rax	      5749	buffer.c	FUNCTION_86	IF_1
0x400ba12	            0x751a	                           jne 0x400ba2e	      5749	buffer.c	FUNCTION_86	IF_1
0x400ba14	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      5750	buffer.c	FUNCTION_86	CALL_1
0x400ba18	        0x488b45f8	                mov rax, qword [rbp - 8]	      5750	buffer.c	FUNCTION_86	CALL_1
0x400ba1c	      0xba01000000	                              mov edx, 1	      5750	buffer.c	FUNCTION_86	CALL_1
0x400ba21	          0x4889ce	                            mov rsi, rcx	      5750	buffer.c	FUNCTION_86	CALL_1
0x400ba24	          0x4889c7	                            mov rdi, rax	      5750	buffer.c	FUNCTION_86	CALL_1
0x400ba27	      0xe800000000	                          call 0x400ba2c	      5750	buffer.c	FUNCTION_86	CALL_1
0x400ba2c	            0xeb0c	                           jmp 0x400ba3a	      5753	buffer.c	FUNCTION_86
0x400ba2e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5752	buffer.c	FUNCTION_86	CALL_2
0x400ba32	          0x4889c7	                            mov rdi, rax	      5752	buffer.c	FUNCTION_86	CALL_2
0x400ba35	      0xe800000000	                          call 0x400ba3a	      5752	buffer.c	FUNCTION_86	CALL_2
0x400ba3a	              0x90	                                     nop	      5753	buffer.c	FUNCTION_86
0x400ba3b	              0xc9	                                   leave	      5753	buffer.c	FUNCTION_86
0x400ba3c	              0xc3	                                     ret	      5753	buffer.c	FUNCTION_86
buflist_name_nr	CALL,2:functions,0:SWITCH,0:FOR,0:ELSE,0:DO,0:WHILE,0:IF,1	31
0x40053b6	              0x55	                                push rbp	      3058	buffer.c	FUNCTION_46
0x40053b7	          0x4889e5	                            mov rbp, rsp	      3058	buffer.c	FUNCTION_46
0x40053ba	        0x4883ec30	                           sub rsp, 0x30	      3058	buffer.c	FUNCTION_46
0x40053be	          0x897dec	             mov dword [rbp - 0x14], edi	      3058	buffer.c	FUNCTION_46
0x40053c1	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3058	buffer.c	FUNCTION_46
0x40053c5	        0x488955d8	             mov qword [rbp - 0x28], rdx	      3058	buffer.c	FUNCTION_46
0x40053c9	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3061	buffer.c	FUNCTION_46	CALL_1
0x40053cc	            0x89c7	                            mov edi, eax	      3061	buffer.c	FUNCTION_46	CALL_1
0x40053ce	      0xe800000000	                          call 0x40053d3	      3061	buffer.c	FUNCTION_46	CALL_1
0x40053d3	        0x488945f8	                mov qword [rbp - 8], rax	      3061	buffer.c	FUNCTION_46	CALL_1
0x40053d7	      0x48837df800	                  cmp qword [rbp - 8], 0	      3062	buffer.c	FUNCTION_46	IF_1
0x40053dc	            0x7410	                            je 0x40053ee	      3062	buffer.c	FUNCTION_46	IF_1
0x40053de	        0x488b45f8	                mov rax, qword [rbp - 8]	      3062	buffer.c	FUNCTION_46	IF_1
0x40053e2	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      3062	buffer.c	FUNCTION_46	IF_1
0x40053e9	          0x4885c0	                           test rax, rax	      3062	buffer.c	FUNCTION_46	IF_1
0x40053ec	            0x7507	                           jne 0x40053f5	      3062	buffer.c	FUNCTION_46	IF_1
0x40053ee	      0xb800000000	                              mov eax, 0	      3063	buffer.c	FUNCTION_46	IF_1
0x40053f3	            0xeb2d	                           jmp 0x4005422	      3063	buffer.c	FUNCTION_46	IF_1
0x40053f5	        0x488b45f8	                mov rax, qword [rbp - 8]	      3065	buffer.c	FUNCTION_46
0x40053f9	    0x488b90980000	            mov rdx, qword [rax + 0x98] 	      3065	buffer.c	FUNCTION_46
0x4005400	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3065	buffer.c	FUNCTION_46
0x4005404	          0x488910	                    mov qword [rax], rdx	      3065	buffer.c	FUNCTION_46
0x4005407	        0x488b45f8	                mov rax, qword [rbp - 8]	      3066	buffer.c	FUNCTION_46	CALL_2
0x400540b	          0x4889c7	                            mov rdi, rax	      3066	buffer.c	FUNCTION_46	CALL_2
0x400540e	      0xe800000000	                          call 0x4005413	      3066	buffer.c	FUNCTION_46	CALL_2
0x4005413	          0x4889c2	                            mov rdx, rax	      3066	buffer.c	FUNCTION_46	CALL_2
0x4005416	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3066	buffer.c	FUNCTION_46	CALL_2
0x400541a	          0x488910	                    mov qword [rax], rdx	      3066	buffer.c	FUNCTION_46	CALL_2
0x400541d	      0xb801000000	                              mov eax, 1	      3068	buffer.c	FUNCTION_46
0x4005422	              0xc9	                                   leave	      3069	buffer.c	FUNCTION_46
0x4005423	              0xc3	                                     ret	      3069	buffer.c	FUNCTION_46
buf_findsign	CALL,0:functions,0:SWITCH,0:FOR,1:ELSE,0:DO,0:WHILE,0:IF,1	23
0x400bf0c	              0x55	                                push rbp	      5984	buffer.c	FUNCTION_93
0x400bf0d	          0x4889e5	                            mov rbp, rsp	      5984	buffer.c	FUNCTION_93
0x400bf10	        0x48897de8	             mov qword [rbp - 0x18], rdi	      5984	buffer.c	FUNCTION_93
0x400bf14	          0x8975e4	             mov dword [rbp - 0x1c], esi	      5984	buffer.c	FUNCTION_93
0x400bf17	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5987	buffer.c	FUNCTION_93	FOR_1
0x400bf1b	    0x488b80201c00	          mov rax, qword [rax + 0x1c20] 	      5987	buffer.c	FUNCTION_93	FOR_1
0x400bf22	        0x488945f8	                mov qword [rbp - 8], rax	      5987	buffer.c	FUNCTION_93	FOR_1
0x400bf26	            0xeb21	                           jmp 0x400bf49	      5987	buffer.c	FUNCTION_93	FOR_1
0x400bf28	        0x488b45f8	                mov rax, qword [rbp - 8]	      5988	buffer.c	FUNCTION_93	FOR_1	IF_1
0x400bf2c	            0x8b00	                    mov eax, dword [rax]	      5988	buffer.c	FUNCTION_93	FOR_1	IF_1
0x400bf2e	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      5988	buffer.c	FUNCTION_93	FOR_1	IF_1
0x400bf31	            0x750a	                           jne 0x400bf3d	      5988	buffer.c	FUNCTION_93	FOR_1	IF_1
0x400bf33	        0x488b45f8	                mov rax, qword [rbp - 8]	      5989	buffer.c	FUNCTION_93	FOR_1	IF_1
0x400bf37	        0x488b4008	                mov rax, qword [rax + 8]	      5989	buffer.c	FUNCTION_93	FOR_1	IF_1
0x400bf3b	            0xeb18	                           jmp 0x400bf55	      5989	buffer.c	FUNCTION_93	FOR_1	IF_1
0x400bf3d	        0x488b45f8	                mov rax, qword [rbp - 8]	      5987	buffer.c	FUNCTION_93	FOR_1
0x400bf41	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5987	buffer.c	FUNCTION_93	FOR_1
0x400bf45	        0x488945f8	                mov qword [rbp - 8], rax	      5987	buffer.c	FUNCTION_93	FOR_1
0x400bf49	      0x48837df800	                  cmp qword [rbp - 8], 0	      5987	buffer.c	FUNCTION_93	FOR_1
0x400bf4e	            0x75d8	                           jne 0x400bf28	      5987	buffer.c	FUNCTION_93	FOR_1
0x400bf50	      0xb800000000	                              mov eax, 0	      5991	buffer.c	FUNCTION_93
0x400bf55	              0x5d	                                 pop rbp	      5992	buffer.c	FUNCTION_93
0x400bf56	              0xc3	                                     ret	      5992	buffer.c	FUNCTION_93
buf_hashtab_add	CALL,4:functions,0:SWITCH,0:FOR,0:ELSE,0:DO,0:WHILE,0:IF,1	27
0x40008dd	              0x55	                                push rbp	       405	buffer.c	FUNCTION_6
0x40008de	          0x4889e5	                            mov rbp, rsp	       405	buffer.c	FUNCTION_6
0x40008e1	        0x4883ec10	                           sub rsp, 0x10	       405	buffer.c	FUNCTION_6
0x40008e5	        0x48897df8	                mov qword [rbp - 8], rdi	       405	buffer.c	FUNCTION_6
0x40008e9	        0x488b45f8	                mov rax, qword [rbp - 8]	       406	buffer.c	FUNCTION_6	CALL_1
0x40008ed	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	       406	buffer.c	FUNCTION_6	CALL_1
0x40008f3	        0x488b55f8	                mov rdx, qword [rbp - 8]	       406	buffer.c	FUNCTION_6	CALL_1
0x40008f7	    0x488d8abc0000	                   lea rcx, [rdx + 0xbc]	       406	buffer.c	FUNCTION_6	CALL_1
0x40008fe	            0x89c2	                            mov edx, eax	       406	buffer.c	FUNCTION_6	CALL_1
0x4000900	      0xbe00000000	                              mov esi, 0	       406	buffer.c	FUNCTION_6	CALL_1
0x4000905	          0x4889cf	                            mov rdi, rcx	       406	buffer.c	FUNCTION_6	CALL_1
0x4000908	      0xb800000000	                              mov eax, 0	       406	buffer.c	FUNCTION_6	CALL_1
0x400090d	      0xe800000000	                          call 0x4000912	       406	buffer.c	FUNCTION_6	CALL_1
0x4000912	        0x488b45f8	                mov rax, qword [rbp - 8]	       407	buffer.c	FUNCTION_6	IF_1	CALL_2
0x4000916	    0x4805bc000000	                           add rax, 0xbc	       407	buffer.c	FUNCTION_6	IF_1	CALL_2
0x400091c	          0x4889c6	                            mov rsi, rax	       407	buffer.c	FUNCTION_6	IF_1	CALL_2
0x400091f	      0xbf00000000	                              mov edi, 0	       407	buffer.c	FUNCTION_6	IF_1	CALL_2
0x4000924	      0xe800000000	                          call 0x4000929	       407	buffer.c	FUNCTION_6	IF_1	CALL_2
0x4000929	            0x85c0	                           test eax, eax	       407	buffer.c	FUNCTION_6	IF_1	CALL_2
0x400092b	            0x7512	                           jne 0x400093f	       407	buffer.c	FUNCTION_6	IF_1	CALL_2
0x400092d	      0xbf00000000	                              mov edi, 0	       408	buffer.c	FUNCTION_6	CALL_4
0x4000932	      0xe800000000	                          call 0x4000937	       408	buffer.c	FUNCTION_6	CALL_4
0x4000937	          0x4889c7	                            mov rdi, rax	       408	buffer.c	FUNCTION_6	CALL_4
0x400093a	      0xe800000000	                          call 0x400093f	       408	buffer.c	FUNCTION_6	CALL_4
0x400093f	              0x90	                                     nop	       409	buffer.c	FUNCTION_6
0x4000940	              0xc9	                                   leave	       409	buffer.c	FUNCTION_6
0x4000941	              0xc3	                                     ret	       409	buffer.c	FUNCTION_6
buflist_getfile	CALL,18:functions,0:SWITCH,0:FOR,0:ELSE,3:DO,0:WHILE,0:IF,14	171
0x4003ae9	              0x55	                                push rbp	      2242	buffer.c	FUNCTION_28
0x4003aea	          0x4889e5	                            mov rbp, rsp	      2242	buffer.c	FUNCTION_28
0x4003aed	              0x53	                                push rbx	      2242	buffer.c	FUNCTION_28
0x4003aee	        0x4883ec48	                           sub rsp, 0x48	      2242	buffer.c	FUNCTION_28
0x4003af2	          0x897dcc	             mov dword [rbp - 0x34], edi	      2242	buffer.c	FUNCTION_28
0x4003af5	        0x488975c0	             mov qword [rbp - 0x40], rsi	      2242	buffer.c	FUNCTION_28
0x4003af9	          0x8955c8	             mov dword [rbp - 0x38], edx	      2242	buffer.c	FUNCTION_28
0x4003afc	          0x894dbc	             mov dword [rbp - 0x44], ecx	      2242	buffer.c	FUNCTION_28
0x4003aff	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      2244	buffer.c	FUNCTION_28
0x4003b07	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      2248	buffer.c	FUNCTION_28	CALL_1
0x4003b0a	            0x89c7	                            mov edi, eax	      2248	buffer.c	FUNCTION_28	CALL_1
0x4003b0c	      0xe800000000	                          call 0x4003b11	      2248	buffer.c	FUNCTION_28	CALL_1
0x4003b11	        0x488945e0	             mov qword [rbp - 0x20], rax	      2248	buffer.c	FUNCTION_28	CALL_1
0x4003b15	      0x48837de000	               cmp qword [rbp - 0x20], 0	      2249	buffer.c	FUNCTION_28	IF_1
0x4003b1a	            0x7549	                           jne 0x4003b65	      2249	buffer.c	FUNCTION_28	IF_1
0x4003b1c	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      2251	buffer.c	FUNCTION_28	IF_1	IF_2
0x4003b1f	          0x83e002	                              and eax, 2	      2251	buffer.c	FUNCTION_28	IF_1	IF_2
0x4003b22	            0x85c0	                           test eax, eax	      2251	buffer.c	FUNCTION_28	IF_1	IF_2
0x4003b24	            0x741a	                            je 0x4003b40	      2251	buffer.c	FUNCTION_28	IF_1	IF_2
0x4003b26	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      2251	buffer.c	FUNCTION_28	IF_1	IF_2
0x4003b2a	            0x7514	                           jne 0x4003b40	      2251	buffer.c	FUNCTION_28	IF_1	IF_2
0x4003b2c	      0xbf00000000	                              mov edi, 0	      2252	buffer.c	FUNCTION_28	IF_1	CALL_3
0x4003b31	      0xe800000000	                          call 0x4003b36	      2252	buffer.c	FUNCTION_28	IF_1	CALL_3
0x4003b36	          0x4889c7	                            mov rdi, rax	      2252	buffer.c	FUNCTION_28	IF_1	CALL_3
0x4003b39	      0xe800000000	                          call 0x4003b3e	      2252	buffer.c	FUNCTION_28	IF_1	CALL_3
0x4003b3e	            0xeb1b	                           jmp 0x4003b5b	      2252	buffer.c	FUNCTION_28	IF_1	CALL_3
0x4003b40	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      2254	buffer.c	FUNCTION_28	IF_1	CALL_5
0x4003b43	          0x4863d8	                         movsxd rbx, eax	      2254	buffer.c	FUNCTION_28	IF_1	CALL_5
0x4003b46	      0xbf00000000	                              mov edi, 0	      2254	buffer.c	FUNCTION_28	IF_1	CALL_5
0x4003b4b	      0xe800000000	                          call 0x4003b50	      2254	buffer.c	FUNCTION_28	IF_1	CALL_5
0x4003b50	          0x4889de	                            mov rsi, rbx	      2254	buffer.c	FUNCTION_28	IF_1	CALL_5
0x4003b53	          0x4889c7	                            mov rdi, rax	      2254	buffer.c	FUNCTION_28	IF_1	CALL_5
0x4003b56	      0xe800000000	                          call 0x4003b5b	      2254	buffer.c	FUNCTION_28	IF_1	CALL_5
0x4003b5b	      0xb800000000	                              mov eax, 0	      2255	buffer.c	FUNCTION_28	IF_1
0x4003b60	      0xe919020000	                           jmp 0x4003d7e	      2255	buffer.c	FUNCTION_28	IF_1
0x4003b65	    0x488b05000000	            mov rax, qword [0x04003b6c] 	      2259	buffer.c	FUNCTION_28	IF_3
0x4003b6c	        0x483945e0	            cmp qword [rbp - 0x20], rax 	      2259	buffer.c	FUNCTION_28	IF_3
0x4003b70	            0x750a	                           jne 0x4003b7c	      2259	buffer.c	FUNCTION_28	IF_3
0x4003b72	      0xb801000000	                              mov eax, 1	      2260	buffer.c	FUNCTION_28	IF_3
0x4003b77	      0xe902020000	                           jmp 0x4003d7e	      2260	buffer.c	FUNCTION_28	IF_3
0x4003b7c	      0xe800000000	                          call 0x4003b81	      2262	buffer.c	FUNCTION_28	IF_4	CALL_6
0x4003b81	            0x85c0	                           test eax, eax	      2262	buffer.c	FUNCTION_28	IF_4	CALL_6
0x4003b83	            0x740f	                            je 0x4003b94	      2262	buffer.c	FUNCTION_28	IF_4	CALL_6
0x4003b85	      0xe800000000	                          call 0x4003b8a	      2264	buffer.c	FUNCTION_28	IF_4	CALL_7
0x4003b8a	      0xb800000000	                              mov eax, 0	      2265	buffer.c	FUNCTION_28	IF_4
0x4003b8f	      0xe9ea010000	                           jmp 0x4003d7e	      2265	buffer.c	FUNCTION_28	IF_4
0x4003b94	      0xe800000000	                          call 0x4003b99	      2267	buffer.c	FUNCTION_28	IF_5	CALL_8
0x4003b99	            0x85c0	                           test eax, eax	      2267	buffer.c	FUNCTION_28	IF_5	CALL_8
0x4003b9b	            0x740a	                            je 0x4003ba7	      2267	buffer.c	FUNCTION_28	IF_5	CALL_8
0x4003b9d	      0xb800000000	                              mov eax, 0	      2268	buffer.c	FUNCTION_28	IF_5
0x4003ba2	      0xe9d7010000	                           jmp 0x4003d7e	      2268	buffer.c	FUNCTION_28	IF_5
0x4003ba7	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      2271	buffer.c	FUNCTION_28	IF_6
0x4003bac	            0x7527	                           jne 0x4003bd5	      2271	buffer.c	FUNCTION_28	IF_6
0x4003bae	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2273	buffer.c	FUNCTION_28	IF_6	CALL_9
0x4003bb2	          0x4889c7	                            mov rdi, rax	      2273	buffer.c	FUNCTION_28	IF_6	CALL_9
0x4003bb5	      0xe800000000	                          call 0x4003bba	      2273	buffer.c	FUNCTION_28	IF_6	CALL_9
0x4003bba	        0x488945e8	             mov qword [rbp - 0x18], rax	      2273	buffer.c	FUNCTION_28	IF_6	CALL_9
0x4003bbe	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2274	buffer.c	FUNCTION_28	IF_6
0x4003bc2	          0x488b00	                    mov rax, qword [rax]	      2274	buffer.c	FUNCTION_28	IF_6
0x4003bc5	        0x488945c0	             mov qword [rbp - 0x40], rax	      2274	buffer.c	FUNCTION_28	IF_6
0x4003bc9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2275	buffer.c	FUNCTION_28	IF_6
0x4003bcd	          0x8b4008	                mov eax, dword [rax + 8]	      2275	buffer.c	FUNCTION_28	IF_6
0x4003bd0	          0x8945d4	             mov dword [rbp - 0x2c], eax	      2275	buffer.c	FUNCTION_28	IF_6
0x4003bd3	            0xeb07	                           jmp 0x4003bdc	      2275	buffer.c	FUNCTION_28	IF_6
0x4003bd5	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      2278	buffer.c	FUNCTION_28	ELSE_2
0x4003bdc	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      2280	buffer.c	FUNCTION_28	ELSE_2	IF_7
0x4003bdf	          0x83e004	                              and eax, 4	      2280	buffer.c	FUNCTION_28	ELSE_2	IF_7
0x4003be2	            0x85c0	                           test eax, eax	      2280	buffer.c	FUNCTION_28	ELSE_2	IF_7
0x4003be4	     0xf84e7000000	                            je 0x4003cd1	      2280	buffer.c	FUNCTION_28	ELSE_2	IF_7
0x4003bea	    0x8b0500000000	            mov eax, dword [0x04003bf0] 	      2284	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_8
0x4003bf0	          0x83e001	                              and eax, 1	      2284	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_8
0x4003bf3	            0x85c0	                           test eax, eax	      2284	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_8
0x4003bf5	            0x7410	                            je 0x4003c07	      2284	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_8
0x4003bf7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2285	buffer.c	FUNCTION_28	ELSE_2	IF_7	CALL_10
0x4003bfb	          0x4889c7	                            mov rdi, rax	      2285	buffer.c	FUNCTION_28	ELSE_2	IF_7	CALL_10
0x4003bfe	      0xe800000000	                          call 0x4003c03	      2285	buffer.c	FUNCTION_28	ELSE_2	IF_7	CALL_10
0x4003c03	        0x488945d8	             mov qword [rbp - 0x28], rax	      2285	buffer.c	FUNCTION_28	ELSE_2	IF_7	CALL_10
0x4003c07	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      2289	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_9
0x4003c0c	            0x751d	                           jne 0x4003c2b	      2289	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_9
0x4003c0e	    0x8b0500000000	            mov eax, dword [0x04003c14] 	      2289	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_9
0x4003c14	          0x83e002	                              and eax, 2	      2289	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_9
0x4003c17	            0x85c0	                           test eax, eax	      2289	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_9
0x4003c19	            0x7410	                            je 0x4003c2b	      2289	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_9
0x4003c1b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2290	buffer.c	FUNCTION_28	ELSE_2	IF_7	CALL_11
0x4003c1f	          0x4889c7	                            mov rdi, rax	      2290	buffer.c	FUNCTION_28	ELSE_2	IF_7	CALL_11
0x4003c22	      0xe800000000	                          call 0x4003c27	      2290	buffer.c	FUNCTION_28	ELSE_2	IF_7	CALL_11
0x4003c27	        0x488945d8	             mov qword [rbp - 0x28], rax	      2290	buffer.c	FUNCTION_28	ELSE_2	IF_7	CALL_11
0x4003c2b	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      2294	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10
0x4003c30	     0xf859b000000	                           jne 0x4003cd1	      2294	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10
0x4003c36	    0x8b0500000000	            mov eax, dword [0x04003c3c] 	      2294	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10
0x4003c3c	          0x83e01c	                           and eax, 0x1c	      2294	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10
0x4003c3f	            0x85c0	                           test eax, eax	      2294	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10
0x4003c41	     0xf848a000000	                            je 0x4003cd1	      2294	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10
0x4003c47	    0x488b05000000	            mov rax, qword [0x04003c4e] 	      2295	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_12
0x4003c4e	          0x488b00	                    mov rax, qword [rax]	      2295	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_12
0x4003c51	        0x4883f801	                              cmp rax, 1	      2295	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_12
0x4003c55	            0x7511	                           jne 0x4003c68	      2295	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_12
0x4003c57	      0xbf01000000	                              mov edi, 1	      2295	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_12
0x4003c5c	      0xe800000000	                          call 0x4003c61	      2295	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_12
0x4003c61	           0xfb600	                   movzx eax, byte [rax]	      2295	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_12
0x4003c64	            0x84c0	                             test al, al	      2295	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_12
0x4003c66	            0x7469	                            je 0x4003cd1	      2295	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_12
0x4003c68	    0x8b0500000000	            mov eax, dword [0x04003c6e] 	      2297	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	IF_11
0x4003c6e	          0x83e008	                              and eax, 8	      2297	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	IF_11
0x4003c71	            0x85c0	                           test eax, eax	      2297	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	IF_11
0x4003c73	            0x7407	                            je 0x4003c7c	      2297	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	IF_11
0x4003c75	      0xe800000000	                          call 0x4003c7a	      2298	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_13
0x4003c7a	            0xeb33	                           jmp 0x4003caf	      2298	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_13
0x4003c7c	    0x8b0500000000	            mov eax, dword [0x04003c82] 	      2299	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	ELSE_3	IF_12	CALL_14
0x4003c82	          0x83e010	                           and eax, 0x10	      2299	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	ELSE_3	IF_12	CALL_14
0x4003c85	            0x85c0	                           test eax, eax	      2299	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	ELSE_3	IF_12	CALL_14
0x4003c87	            0x7407	                            je 0x4003c90	      2299	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	ELSE_3	IF_12	CALL_14
0x4003c89	      0xb802000000	                              mov eax, 2	      2299	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	ELSE_3	IF_12	CALL_14
0x4003c8e	            0xeb05	                           jmp 0x4003c95	      2299	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	ELSE_3	IF_12	CALL_14
0x4003c90	      0xb800000000	                              mov eax, 0	      2299	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	ELSE_3	IF_12	CALL_14
0x4003c95	            0x89c6	                            mov esi, eax	      2299	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	ELSE_3	IF_12	CALL_14
0x4003c97	      0xbf00000000	                              mov edi, 0	      2299	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	ELSE_3	IF_12	CALL_14
0x4003c9c	      0xe800000000	                          call 0x4003ca1	      2299	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	ELSE_3	IF_12	CALL_14
0x4003ca1	            0x85c0	                           test eax, eax	      2299	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	ELSE_3	IF_12	CALL_14
0x4003ca3	            0x750a	                           jne 0x4003caf	      2299	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	ELSE_3	IF_12	CALL_14
0x4003ca5	      0xb800000000	                              mov eax, 0	      2301	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	ELSE_3	IF_12
0x4003caa	      0xe9cf000000	                           jmp 0x4003d7e	      2301	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	ELSE_3	IF_12
0x4003caf	    0x488b05000000	            mov rax, qword [0x04003cb6] 	      2302	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_15
0x4003cb6	    0xc78088020000	              mov dword [rax + 0x288], 0	      2302	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_15
0x4003cc0	    0x488b05000000	            mov rax, qword [0x04003cc7] 	      2302	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_15
0x4003cc7	    0xc780b0020000	              mov dword [rax + 0x2b0], 0	      2302	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_15
0x4003cd1	    0x8b0500000000	            mov eax, dword [0x04003cd7] 	      2306	buffer.c	FUNCTION_28
0x4003cd7	          0x83c001	                              add eax, 1	      2306	buffer.c	FUNCTION_28
0x4003cda	    0x890500000000	            mov dword [0x04003ce0], eax 	      2306	buffer.c	FUNCTION_28
0x4003ce0	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      2307	buffer.c	FUNCTION_28	IF_13	CALL_17
0x4003ce3	          0x83e001	                              and eax, 1	      2307	buffer.c	FUNCTION_28	IF_13	CALL_17
0x4003ce6	            0x89c2	                            mov edx, eax	      2307	buffer.c	FUNCTION_28	IF_13	CALL_17
0x4003ce8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2307	buffer.c	FUNCTION_28	IF_13	CALL_17
0x4003cec	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      2307	buffer.c	FUNCTION_28	IF_13	CALL_17
0x4003cf2	          0x8b75bc	             mov esi, dword [rbp - 0x44]	      2307	buffer.c	FUNCTION_28	IF_13	CALL_17
0x4003cf5	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	      2307	buffer.c	FUNCTION_28	IF_13	CALL_17
0x4003cf9	          0x4189f1	                            mov r9d, esi	      2307	buffer.c	FUNCTION_28	IF_13	CALL_17
0x4003cfc	          0x4989c8	                             mov r8, rcx	      2307	buffer.c	FUNCTION_28	IF_13	CALL_17
0x4003cff	            0x89d1	                            mov ecx, edx	      2307	buffer.c	FUNCTION_28	IF_13	CALL_17
0x4003d01	      0xba00000000	                              mov edx, 0	      2307	buffer.c	FUNCTION_28	IF_13	CALL_17
0x4003d06	      0xbe00000000	                              mov esi, 0	      2307	buffer.c	FUNCTION_28	IF_13	CALL_17
0x4003d0b	            0x89c7	                            mov edi, eax	      2307	buffer.c	FUNCTION_28	IF_13	CALL_17
0x4003d0d	      0xe800000000	                          call 0x4003d12	      2307	buffer.c	FUNCTION_28	IF_13	CALL_17
0x4003d12	            0x85c0	                           test eax, eax	      2307	buffer.c	FUNCTION_28	IF_13	CALL_17
0x4003d14	            0x7f54	                            jg 0x4003d6a	      2307	buffer.c	FUNCTION_28	IF_13	CALL_17
0x4003d16	    0x8b0500000000	            mov eax, dword [0x04003d1c] 	      2310	buffer.c	FUNCTION_28	IF_13
0x4003d1c	          0x83e801	                              sub eax, 1	      2310	buffer.c	FUNCTION_28	IF_13
0x4003d1f	    0x890500000000	            mov dword [0x04003d25], eax 	      2310	buffer.c	FUNCTION_28	IF_13
0x4003d25	    0x8b0500000000	            mov eax, dword [0x04003d2b] 	      2313	buffer.c	FUNCTION_28	IF_13	IF_14
0x4003d2b	            0x85c0	                           test eax, eax	      2313	buffer.c	FUNCTION_28	IF_13	IF_14
0x4003d2d	            0x7534	                           jne 0x4003d63	      2313	buffer.c	FUNCTION_28	IF_13	IF_14
0x4003d2f	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      2313	buffer.c	FUNCTION_28	IF_13	IF_14
0x4003d33	            0x742e	                            je 0x4003d63	      2313	buffer.c	FUNCTION_28	IF_13	IF_14
0x4003d35	    0x488b05000000	            mov rax, qword [0x04003d3c] 	      2315	buffer.c	FUNCTION_28	IF_13	IF_14
0x4003d3c	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      2315	buffer.c	FUNCTION_28	IF_13	IF_14
0x4003d3f	          0x895040	             mov dword [rax + 0x40], edx	      2315	buffer.c	FUNCTION_28	IF_13	IF_14
0x4003d42	      0xe800000000	                          call 0x4003d47	      2316	buffer.c	FUNCTION_28	IF_13	IF_14	CALL_18
0x4003d47	    0x488b05000000	            mov rax, qword [0x04003d4e] 	      2318	buffer.c	FUNCTION_28	IF_13	IF_14
0x4003d4e	    0xc74044000000	               mov dword [rax + 0x44], 0	      2318	buffer.c	FUNCTION_28	IF_13	IF_14
0x4003d55	    0x488b05000000	            mov rax, qword [0x04003d5c] 	      2320	buffer.c	FUNCTION_28	IF_13	IF_14
0x4003d5c	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      2320	buffer.c	FUNCTION_28	IF_13	IF_14
0x4003d63	      0xb801000000	                              mov eax, 1	      2322	buffer.c	FUNCTION_28	IF_13
0x4003d68	            0xeb14	                           jmp 0x4003d7e	      2322	buffer.c	FUNCTION_28	IF_13
0x4003d6a	    0x8b0500000000	            mov eax, dword [0x04003d70] 	      2324	buffer.c	FUNCTION_28
0x4003d70	          0x83e801	                              sub eax, 1	      2324	buffer.c	FUNCTION_28
0x4003d73	    0x890500000000	            mov dword [0x04003d79], eax 	      2324	buffer.c	FUNCTION_28
0x4003d79	      0xb800000000	                              mov eax, 0	      2325	buffer.c	FUNCTION_28
0x4003d7e	        0x4883c448	                           add rsp, 0x48	      2326	buffer.c	FUNCTION_28
0x4003d82	              0x5b	                                 pop rbx	      2326	buffer.c	FUNCTION_28
0x4003d83	              0x5d	                                 pop rbp	      2326	buffer.c	FUNCTION_28
0x4003d84	              0xc3	                                     ret	      2326	buffer.c	FUNCTION_28
buf_contents_changed	CALL,12:functions,0:SWITCH,0:FOR,1:ELSE,0:DO,0:WHILE,0:IF,6	110
0x400c452	              0x55	                                push rbp	      6169	buffer.c	FUNCTION_102
0x400c453	          0x4889e5	                            mov rbp, rsp	      6169	buffer.c	FUNCTION_102
0x400c456	              0x53	                                push rbx	      6169	buffer.c	FUNCTION_102
0x400c457	    0x4881ec380100	                          sub rsp, 0x138	      6169	buffer.c	FUNCTION_102
0x400c45e	    0x4889bdc8feff	            mov qword [rbp - 0x138], rdi	      6169	buffer.c	FUNCTION_102
0x400c465	    0x64488b042528	                mov rax, qword fs:[0x28]	      6169	buffer.c	FUNCTION_102
0x400c46e	        0x488945e8	             mov qword [rbp - 0x18], rax	      6169	buffer.c	FUNCTION_102
0x400c472	            0x31c0	                            xor eax, eax	      6169	buffer.c	FUNCTION_102
0x400c474	    0xc785dcfeffff	              mov dword [rbp - 0x124], 1	      6171	buffer.c	FUNCTION_102
0x400c47e	      0xb904000000	                              mov ecx, 4	      6177	buffer.c	FUNCTION_102	CALL_1
0x400c483	      0xba01000000	                              mov edx, 1	      6177	buffer.c	FUNCTION_102	CALL_1
0x400c488	      0xbe00000000	                              mov esi, 0	      6177	buffer.c	FUNCTION_102	CALL_1
0x400c48d	      0xbf00000000	                              mov edi, 0	      6177	buffer.c	FUNCTION_102	CALL_1
0x400c492	      0xe800000000	                          call 0x400c497	      6177	buffer.c	FUNCTION_102	CALL_1
0x400c497	    0x488985e8feff	            mov qword [rbp - 0x118], rax	      6177	buffer.c	FUNCTION_102	CALL_1
0x400c49e	    0x4883bde8feff	              cmp qword [rbp - 0x118], 0	      6178	buffer.c	FUNCTION_102	IF_1
0x400c4a6	            0x750a	                           jne 0x400c4b2	      6178	buffer.c	FUNCTION_102	IF_1
0x400c4a8	      0xb801000000	                              mov eax, 1	      6179	buffer.c	FUNCTION_102	IF_1
0x400c4ad	      0xe99b010000	                           jmp 0x400c64d	      6179	buffer.c	FUNCTION_102	IF_1
0x400c4b2	    0x488b95c8feff	            mov rdx, qword [rbp - 0x138]	      6182	buffer.c	FUNCTION_102	IF_2	CALL_2
0x400c4b9	    0x488d8530ffff	                   lea rax, [rbp - 0xd0]	      6182	buffer.c	FUNCTION_102	IF_2	CALL_2
0x400c4c0	          0x4889d6	                            mov rsi, rdx	      6182	buffer.c	FUNCTION_102	IF_2	CALL_2
0x400c4c3	          0x4889c7	                            mov rdi, rax	      6182	buffer.c	FUNCTION_102	IF_2	CALL_2
0x400c4c6	      0xe800000000	                          call 0x400c4cb	      6182	buffer.c	FUNCTION_102	IF_2	CALL_2
0x400c4cb	            0x85c0	                           test eax, eax	      6182	buffer.c	FUNCTION_102	IF_2	CALL_2
0x400c4cd	            0x751e	                           jne 0x400c4ed	      6182	buffer.c	FUNCTION_102	IF_2	CALL_2
0x400c4cf	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      6184	buffer.c	FUNCTION_102	IF_2	CALL_3
0x400c4d6	      0xbe00000000	                              mov esi, 0	      6184	buffer.c	FUNCTION_102	IF_2	CALL_3
0x400c4db	          0x4889c7	                            mov rdi, rax	      6184	buffer.c	FUNCTION_102	IF_2	CALL_3
0x400c4de	      0xe800000000	                          call 0x400c4e3	      6184	buffer.c	FUNCTION_102	IF_2	CALL_3
0x400c4e3	      0xb801000000	                              mov eax, 1	      6185	buffer.c	FUNCTION_102	IF_2
0x400c4e8	      0xe960010000	                           jmp 0x400c64d	      6185	buffer.c	FUNCTION_102	IF_2
0x400c4ed	    0x488b95e8feff	            mov rdx, qword [rbp - 0x118]	      6189	buffer.c	FUNCTION_102	CALL_4
0x400c4f4	    0x488d85f0feff	                  lea rax, [rbp - 0x110]	      6189	buffer.c	FUNCTION_102	CALL_4
0x400c4fb	          0x4889d6	                            mov rsi, rdx	      6189	buffer.c	FUNCTION_102	CALL_4
0x400c4fe	          0x4889c7	                            mov rdi, rax	      6189	buffer.c	FUNCTION_102	CALL_4
0x400c501	      0xe800000000	                          call 0x400c506	      6189	buffer.c	FUNCTION_102	CALL_4
0x400c506	    0x488b05000000	            mov rax, qword [0x0400c50d] 	      6191	buffer.c	FUNCTION_102	IF_3	CALL_5
0x400c50d	          0x4889c7	                            mov rdi, rax	      6191	buffer.c	FUNCTION_102	IF_3	CALL_5
0x400c510	      0xe800000000	                          call 0x400c515	      6191	buffer.c	FUNCTION_102	IF_3	CALL_5
0x400c515	          0x83f801	                              cmp eax, 1	      6191	buffer.c	FUNCTION_102	IF_3	CALL_5
0x400c518	     0xf85e7000000	                           jne 0x400c605	      6191	buffer.c	FUNCTION_102	IF_3	CALL_5
0x400c51e	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0x400c525	    0x488bb0980000	            mov rsi, qword [rax + 0x98] 	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0x400c52c	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0x400c533	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0x400c53a	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0x400c541	        0x4883ec08	                              sub rsp, 8	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0x400c545	            0x6a11	                               push 0x11	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0x400c547	          0x4989d1	                             mov r9, rdx	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0x400c54a	    0x41b8ffffff7f	                     mov r8d, 0x7fffffff	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0x400c550	      0xb900000000	                              mov ecx, 0	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0x400c555	      0xba00000000	                              mov edx, 0	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0x400c55a	          0x4889c7	                            mov rdi, rax	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0x400c55d	      0xe800000000	                          call 0x400c562	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0x400c562	        0x4883c410	                           add rsp, 0x10	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0x400c566	          0x83f801	                              cmp eax, 1	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0x400c569	     0xf8596000000	                           jne 0x400c605	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0x400c56f	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      6197	buffer.c	FUNCTION_102	IF_3	IF_4
0x400c576	          0x488b10	                    mov rdx, qword [rax]	      6197	buffer.c	FUNCTION_102	IF_3	IF_4
0x400c579	    0x488b05000000	            mov rax, qword [0x0400c580] 	      6197	buffer.c	FUNCTION_102	IF_3	IF_4
0x400c580	          0x488b00	                    mov rax, qword [rax]	      6197	buffer.c	FUNCTION_102	IF_3	IF_4
0x400c583	          0x4839c2	                            cmp rdx, rax	      6197	buffer.c	FUNCTION_102	IF_3	IF_4
0x400c586	            0x757d	                           jne 0x400c605	      6197	buffer.c	FUNCTION_102	IF_3	IF_4
0x400c588	    0xc785dcfeffff	              mov dword [rbp - 0x124], 0	      6199	buffer.c	FUNCTION_102	IF_3	IF_4
0x400c592	    0x48c785e0feff	              mov qword [rbp - 0x120], 1	      6200	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1
0x400c59d	            0xeb53	                           jmp 0x400c5f2	      6200	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1
0x400c59f	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0x400c5a6	          0x4889c7	                            mov rdi, rax	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0x400c5a9	      0xe800000000	                          call 0x400c5ae	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0x400c5ae	          0x4889c3	                            mov rbx, rax	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0x400c5b1	    0x488b8de0feff	            mov rcx, qword [rbp - 0x120]	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0x400c5b8	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0x400c5bf	      0xba00000000	                              mov edx, 0	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0x400c5c4	          0x4889ce	                            mov rsi, rcx	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0x400c5c7	          0x4889c7	                            mov rdi, rax	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0x400c5ca	      0xe800000000	                          call 0x400c5cf	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0x400c5cf	          0x4889de	                            mov rsi, rbx	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0x400c5d2	          0x4889c7	                            mov rdi, rax	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0x400c5d5	      0xe800000000	                          call 0x400c5da	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0x400c5da	            0x85c0	                           test eax, eax	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0x400c5dc	            0x740c	                            je 0x400c5ea	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0x400c5de	    0xc785dcfeffff	              mov dword [rbp - 0x124], 1	      6203	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5
0x400c5e8	            0xeb1b	                           jmp 0x400c605	      6204	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5
0x400c5ea	    0x488385e0feff	              add qword [rbp - 0x120], 1	      6200	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1
0x400c5f2	    0x488b05000000	            mov rax, qword [0x0400c5f9] 	      6200	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1
0x400c5f9	          0x488b00	                    mov rax, qword [rax]	      6200	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1
0x400c5fc	    0x483b85e0feff	            cmp rax, qword [rbp - 0x120]	      6200	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1
0x400c603	            0x7d9a	                           jge 0x400c59f	      6200	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1
0x400c605	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      6208	buffer.c	FUNCTION_102	CALL_10
0x400c60c	          0x4889c7	                            mov rdi, rax	      6208	buffer.c	FUNCTION_102	CALL_10
0x400c60f	      0xe800000000	                          call 0x400c614	      6208	buffer.c	FUNCTION_102	CALL_10
0x400c614	    0x488d85f0feff	                  lea rax, [rbp - 0x110]	      6211	buffer.c	FUNCTION_102	CALL_11
0x400c61b	          0x4889c7	                            mov rdi, rax	      6211	buffer.c	FUNCTION_102	CALL_11
0x400c61e	      0xe800000000	                          call 0x400c623	      6211	buffer.c	FUNCTION_102	CALL_11
0x400c623	    0x488b05000000	            mov rax, qword [0x0400c62a] 	      6213	buffer.c	FUNCTION_102	IF_6
0x400c62a	    0x483b85e8feff	            cmp rax, qword [rbp - 0x118]	      6213	buffer.c	FUNCTION_102	IF_6
0x400c631	            0x7414	                            je 0x400c647	      6213	buffer.c	FUNCTION_102	IF_6
0x400c633	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      6214	buffer.c	FUNCTION_102	CALL_12
0x400c63a	      0xbe00000000	                              mov esi, 0	      6214	buffer.c	FUNCTION_102	CALL_12
0x400c63f	          0x4889c7	                            mov rdi, rax	      6214	buffer.c	FUNCTION_102	CALL_12
0x400c642	      0xe800000000	                          call 0x400c647	      6214	buffer.c	FUNCTION_102	CALL_12
0x400c647	    0x8b85dcfeffff	            mov eax, dword [rbp - 0x124]	      6216	buffer.c	FUNCTION_102
0x400c64d	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      6217	buffer.c	FUNCTION_102
0x400c651	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      6217	buffer.c	FUNCTION_102
0x400c65a	            0x7405	                            je 0x400c661	      6217	buffer.c	FUNCTION_102
0x400c65c	      0xe800000000	                          call 0x400c661	      6217	buffer.c	FUNCTION_102
0x400c661	        0x488b5df8	                mov rbx, qword [rbp - 8]	      6217	buffer.c	FUNCTION_102
0x400c665	              0xc9	                                   leave	      6217	buffer.c	FUNCTION_102
0x400c666	              0xc3	                                     ret	      6217	buffer.c	FUNCTION_102
bufref_valid	CALL,1:functions,0:SWITCH,0:FOR,0:ELSE,0:DO,0:WHILE,0:IF,0	27
0x4000847	              0x55	                                push rbp	       375	buffer.c	FUNCTION_4
0x4000848	          0x4889e5	                            mov rbp, rsp	       375	buffer.c	FUNCTION_4
0x400084b	        0x4883ec10	                           sub rsp, 0x10	       375	buffer.c	FUNCTION_4
0x400084f	        0x48897df8	                mov qword [rbp - 8], rdi	       375	buffer.c	FUNCTION_4
0x4000853	        0x488b45f8	                mov rax, qword [rbp - 8]	       376	buffer.c	FUNCTION_4
0x4000857	          0x8b500c	              mov edx, dword [rax + 0xc]	       376	buffer.c	FUNCTION_4
0x400085a	    0x8b0500000000	            mov eax, dword [0x04000860] 	       376	buffer.c	FUNCTION_4
0x4000860	            0x39c2	                            cmp edx, eax	       377	buffer.c	FUNCTION_4	CALL_1
0x4000862	            0x742b	                            je 0x400088f	       377	buffer.c	FUNCTION_4	CALL_1
0x4000864	        0x488b45f8	                mov rax, qword [rbp - 8]	       377	buffer.c	FUNCTION_4	CALL_1
0x4000868	          0x488b00	                    mov rax, qword [rax]	       377	buffer.c	FUNCTION_4	CALL_1
0x400086b	          0x4889c7	                            mov rdi, rax	       377	buffer.c	FUNCTION_4	CALL_1
0x400086e	      0xe800000000	                          call 0x4000873	       377	buffer.c	FUNCTION_4	CALL_1
0x4000873	            0x85c0	                           test eax, eax	       377	buffer.c	FUNCTION_4	CALL_1
0x4000875	            0x741f	                            je 0x4000896	       377	buffer.c	FUNCTION_4	CALL_1
0x4000877	        0x488b45f8	                mov rax, qword [rbp - 8]	       378	buffer.c	FUNCTION_4
0x400087b	          0x8b5008	                mov edx, dword [rax + 8]	       378	buffer.c	FUNCTION_4
0x400087e	        0x488b45f8	                mov rax, qword [rbp - 8]	       378	buffer.c	FUNCTION_4
0x4000882	          0x488b00	                    mov rax, qword [rax]	       378	buffer.c	FUNCTION_4
0x4000885	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	       378	buffer.c	FUNCTION_4
0x400088b	            0x39c2	                            cmp edx, eax	       378	buffer.c	FUNCTION_4
0x400088d	            0x7507	                           jne 0x4000896	       378	buffer.c	FUNCTION_4
0x400088f	      0xb801000000	                              mov eax, 1	       377	buffer.c	FUNCTION_4	CALL_1
0x4000894	            0xeb05	                           jmp 0x400089b	       377	buffer.c	FUNCTION_4	CALL_1
0x4000896	      0xb800000000	                              mov eax, 0	       377	buffer.c	FUNCTION_4	CALL_1
0x400089b	              0xc9	                                   leave	       379	buffer.c	FUNCTION_4
0x400089c	              0xc3	                                     ret	       379	buffer.c	FUNCTION_4
getaltfname	CALL,3:functions,0:SWITCH,0:FOR,0:ELSE,0:DO,0:WHILE,0:IF,2	29
0x40058f1	              0x55	                                push rbp	      3241	buffer.c	FUNCTION_51
0x40058f2	          0x4889e5	                            mov rbp, rsp	      3241	buffer.c	FUNCTION_51
0x40058f5	        0x4883ec30	                           sub rsp, 0x30	      3241	buffer.c	FUNCTION_51
0x40058f9	          0x897ddc	             mov dword [rbp - 0x24], edi	      3241	buffer.c	FUNCTION_51
0x40058fc	    0x64488b042528	                mov rax, qword fs:[0x28]	      3241	buffer.c	FUNCTION_51
0x4005905	        0x488945f8	                mov qword [rbp - 8], rax	      3241	buffer.c	FUNCTION_51
0x4005909	            0x31c0	                            xor eax, eax	      3241	buffer.c	FUNCTION_51
0x400590b	        0x488d55f0	                   lea rdx, [rbp - 0x10]	      3245	buffer.c	FUNCTION_51	IF_1	CALL_1
0x400590f	        0x488d45e8	                   lea rax, [rbp - 0x18]	      3245	buffer.c	FUNCTION_51	IF_1	CALL_1
0x4005913	          0x4889c6	                            mov rsi, rax	      3245	buffer.c	FUNCTION_51	IF_1	CALL_1
0x4005916	      0xbf00000000	                              mov edi, 0	      3245	buffer.c	FUNCTION_51	IF_1	CALL_1
0x400591b	      0xe800000000	                          call 0x4005920	      3245	buffer.c	FUNCTION_51	IF_1	CALL_1
0x4005920	            0x85c0	                           test eax, eax	      3245	buffer.c	FUNCTION_51	IF_1	CALL_1
0x4005922	            0x751f	                           jne 0x4005943	      3245	buffer.c	FUNCTION_51	IF_1	CALL_1
0x4005924	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      3247	buffer.c	FUNCTION_51	IF_1	IF_2
0x4005928	            0x7412	                            je 0x400593c	      3247	buffer.c	FUNCTION_51	IF_1	IF_2
0x400592a	      0xbf00000000	                              mov edi, 0	      3248	buffer.c	FUNCTION_51	IF_1	CALL_3
0x400592f	      0xe800000000	                          call 0x4005934	      3248	buffer.c	FUNCTION_51	IF_1	CALL_3
0x4005934	          0x4889c7	                            mov rdi, rax	      3248	buffer.c	FUNCTION_51	IF_1	CALL_3
0x4005937	      0xe800000000	                          call 0x400593c	      3248	buffer.c	FUNCTION_51	IF_1	CALL_3
0x400593c	      0xb800000000	                              mov eax, 0	      3249	buffer.c	FUNCTION_51	IF_1
0x4005941	            0xeb04	                           jmp 0x4005947	      3249	buffer.c	FUNCTION_51	IF_1
0x4005943	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3251	buffer.c	FUNCTION_51
0x4005947	        0x488b4df8	                mov rcx, qword [rbp - 8]	      3252	buffer.c	FUNCTION_51
0x400594b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3252	buffer.c	FUNCTION_51
0x4005954	            0x7405	                            je 0x400595b	      3252	buffer.c	FUNCTION_51
0x4005956	      0xe800000000	                          call 0x400595b	      3252	buffer.c	FUNCTION_51
0x400595b	              0xc9	                                   leave	      3252	buffer.c	FUNCTION_51
0x400595c	              0xc3	                                     ret	      3252	buffer.c	FUNCTION_51
buf_hashtab_remove	CALL,3:functions,0:SWITCH,0:FOR,0:ELSE,0:DO,0:WHILE,0:IF,1	25
0x4000942	              0x55	                                push rbp	       413	buffer.c	FUNCTION_7
0x4000943	          0x4889e5	                            mov rbp, rsp	       413	buffer.c	FUNCTION_7
0x4000946	        0x4883ec20	                           sub rsp, 0x20	       413	buffer.c	FUNCTION_7
0x400094a	        0x48897de8	             mov qword [rbp - 0x18], rdi	       413	buffer.c	FUNCTION_7
0x400094e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       414	buffer.c	FUNCTION_7	CALL_1
0x4000952	    0x4805bc000000	                           add rax, 0xbc	       414	buffer.c	FUNCTION_7	CALL_1
0x4000958	          0x4889c6	                            mov rsi, rax	       414	buffer.c	FUNCTION_7	CALL_1
0x400095b	      0xbf00000000	                              mov edi, 0	       414	buffer.c	FUNCTION_7	CALL_1
0x4000960	      0xe800000000	                          call 0x4000965	       414	buffer.c	FUNCTION_7	CALL_1
0x4000965	        0x488945f8	                mov qword [rbp - 8], rax	       414	buffer.c	FUNCTION_7	CALL_1
0x4000969	        0x488b45f8	                mov rax, qword [rbp - 8]	       416	buffer.c	FUNCTION_7	IF_1	CALL_2
0x400096d	        0x488b4008	                mov rax, qword [rax + 8]	       416	buffer.c	FUNCTION_7	IF_1	CALL_2
0x4000971	          0x4885c0	                           test rax, rax	       416	buffer.c	FUNCTION_7	IF_1	CALL_2
0x4000974	            0x7421	                            je 0x4000997	       416	buffer.c	FUNCTION_7	IF_1	CALL_2
0x4000976	        0x488b45f8	                mov rax, qword [rbp - 8]	       416	buffer.c	FUNCTION_7	IF_1	CALL_2
0x400097a	        0x488b4008	                mov rax, qword [rax + 8]	       416	buffer.c	FUNCTION_7	IF_1	CALL_2
0x400097e	    0x483d00000000	                              cmp rax, 0	       416	buffer.c	FUNCTION_7	IF_1	CALL_2
0x4000984	            0x7411	                            je 0x4000997	       416	buffer.c	FUNCTION_7	IF_1	CALL_2
0x4000986	        0x488b45f8	                mov rax, qword [rbp - 8]	       417	buffer.c	FUNCTION_7	CALL_3
0x400098a	          0x4889c6	                            mov rsi, rax	       417	buffer.c	FUNCTION_7	CALL_3
0x400098d	      0xbf00000000	                              mov edi, 0	       417	buffer.c	FUNCTION_7	CALL_3
0x4000992	      0xe800000000	                          call 0x4000997	       417	buffer.c	FUNCTION_7	CALL_3
0x4000997	              0x90	                                     nop	       418	buffer.c	FUNCTION_7
0x4000998	              0xc9	                                   leave	       418	buffer.c	FUNCTION_7
0x4000999	              0xc3	                                     ret	       418	buffer.c	FUNCTION_7
buf_delsign	CALL,3:functions,0:SWITCH,0:FOR,1:ELSE,1:DO,0:WHILE,0:IF,3	55
0x400be3c	              0x55	                                push rbp	      5937	buffer.c	FUNCTION_92
0x400be3d	          0x4889e5	                            mov rbp, rsp	      5937	buffer.c	FUNCTION_92
0x400be40	        0x4883ec30	                           sub rsp, 0x30	      5937	buffer.c	FUNCTION_92
0x400be44	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      5937	buffer.c	FUNCTION_92
0x400be48	          0x8975d4	             mov dword [rbp - 0x2c], esi	      5937	buffer.c	FUNCTION_92
0x400be4b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5943	buffer.c	FUNCTION_92
0x400be4f	    0x4805201c0000	                         add rax, 0x1c20	      5943	buffer.c	FUNCTION_92
0x400be55	        0x488945e0	             mov qword [rbp - 0x20], rax	      5943	buffer.c	FUNCTION_92
0x400be59	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      5944	buffer.c	FUNCTION_92
0x400be61	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5945	buffer.c	FUNCTION_92	FOR_1
0x400be65	    0x488b80201c00	          mov rax, qword [rax + 0x1c20] 	      5945	buffer.c	FUNCTION_92	FOR_1
0x400be6c	        0x488945e8	             mov qword [rbp - 0x18], rax	      5945	buffer.c	FUNCTION_92	FOR_1
0x400be70	            0xeb67	                           jmp 0x400bed9	      5945	buffer.c	FUNCTION_92	FOR_1
0x400be72	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5947	buffer.c	FUNCTION_92	FOR_1
0x400be76	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5947	buffer.c	FUNCTION_92	FOR_1
0x400be7a	        0x488945f8	                mov qword [rbp - 8], rax	      5947	buffer.c	FUNCTION_92	FOR_1
0x400be7e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5948	buffer.c	FUNCTION_92	FOR_1	IF_1
0x400be82	            0x8b00	                    mov eax, dword [rax]	      5948	buffer.c	FUNCTION_92	FOR_1	IF_1
0x400be84	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	      5948	buffer.c	FUNCTION_92	FOR_1	IF_1
0x400be87	            0x753c	                           jne 0x400bec5	      5948	buffer.c	FUNCTION_92	FOR_1	IF_1
0x400be89	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5950	buffer.c	FUNCTION_92	FOR_1	IF_1
0x400be8d	        0x488b55f8	                mov rdx, qword [rbp - 8]	      5950	buffer.c	FUNCTION_92	FOR_1	IF_1
0x400be91	          0x488910	                    mov qword [rax], rdx	      5950	buffer.c	FUNCTION_92	FOR_1	IF_1
0x400be94	      0x48837df800	                  cmp qword [rbp - 8], 0	      5952	buffer.c	FUNCTION_92	FOR_1	IF_1	IF_2
0x400be99	            0x7410	                            je 0x400beab	      5952	buffer.c	FUNCTION_92	FOR_1	IF_1	IF_2
0x400be9b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5953	buffer.c	FUNCTION_92	FOR_1	IF_1	IF_2
0x400be9f	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      5953	buffer.c	FUNCTION_92	FOR_1	IF_1	IF_2
0x400bea3	        0x488b45f8	                mov rax, qword [rbp - 8]	      5953	buffer.c	FUNCTION_92	FOR_1	IF_1	IF_2
0x400bea7	        0x48895020	             mov qword [rax + 0x20], rdx	      5953	buffer.c	FUNCTION_92	FOR_1	IF_1	IF_2
0x400beab	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5955	buffer.c	FUNCTION_92	FOR_1	IF_1
0x400beaf	        0x488b4008	                mov rax, qword [rax + 8]	      5955	buffer.c	FUNCTION_92	FOR_1	IF_1
0x400beb3	        0x488945f0	             mov qword [rbp - 0x10], rax	      5955	buffer.c	FUNCTION_92	FOR_1	IF_1
0x400beb7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5956	buffer.c	FUNCTION_92	FOR_1	IF_1	CALL_1
0x400bebb	          0x4889c7	                            mov rdi, rax	      5956	buffer.c	FUNCTION_92	FOR_1	IF_1	CALL_1
0x400bebe	      0xe800000000	                          call 0x400bec3	      5956	buffer.c	FUNCTION_92	FOR_1	IF_1	CALL_1
0x400bec3	            0xeb1b	                           jmp 0x400bee0	      5957	buffer.c	FUNCTION_92	FOR_1	IF_1
0x400bec5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5960	buffer.c	FUNCTION_92	FOR_1	ELSE_1
0x400bec9	        0x4883c018	                           add rax, 0x18	      5960	buffer.c	FUNCTION_92	FOR_1	ELSE_1
0x400becd	        0x488945e0	             mov qword [rbp - 0x20], rax	      5960	buffer.c	FUNCTION_92	FOR_1	ELSE_1
0x400bed1	        0x488b45f8	                mov rax, qword [rbp - 8]	      5945	buffer.c	FUNCTION_92	FOR_1
0x400bed5	        0x488945e8	             mov qword [rbp - 0x18], rax	      5945	buffer.c	FUNCTION_92	FOR_1
0x400bed9	      0x48837de800	               cmp qword [rbp - 0x18], 0	      5945	buffer.c	FUNCTION_92	FOR_1
0x400bede	            0x7592	                           jne 0x400be72	      5945	buffer.c	FUNCTION_92	FOR_1
0x400bee0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5965	buffer.c	FUNCTION_92	ELSE_1	IF_3
0x400bee4	    0x488b80201c00	          mov rax, qword [rax + 0x1c20] 	      5965	buffer.c	FUNCTION_92	ELSE_1	IF_3
0x400beeb	          0x4885c0	                           test rax, rax	      5965	buffer.c	FUNCTION_92	ELSE_1	IF_3
0x400beee	            0x7516	                           jne 0x400bf06	      5965	buffer.c	FUNCTION_92	ELSE_1	IF_3
0x400bef0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5967	buffer.c	FUNCTION_92	ELSE_1	IF_3	CALL_2
0x400bef4	      0xbe28000000	                           mov esi, 0x28	      5967	buffer.c	FUNCTION_92	ELSE_1	IF_3	CALL_2
0x400bef9	          0x4889c7	                            mov rdi, rax	      5967	buffer.c	FUNCTION_92	ELSE_1	IF_3	CALL_2
0x400befc	      0xe800000000	                          call 0x400bf01	      5967	buffer.c	FUNCTION_92	ELSE_1	IF_3	CALL_2
0x400bf01	      0xe800000000	                          call 0x400bf06	      5968	buffer.c	FUNCTION_92	ELSE_1	IF_3	CALL_3
0x400bf06	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5971	buffer.c	FUNCTION_92
0x400bf0a	              0xc9	                                   leave	      5972	buffer.c	FUNCTION_92
0x400bf0b	              0xc3	                                     ret	      5972	buffer.c	FUNCTION_92
buflist_findfpos	CALL,2:functions,0:SWITCH,0:FOR,0:ELSE,1:DO,0:WHILE,0:IF,1	17
0x4004d52	              0x55	                                push rbp	      2927	buffer.c	FUNCTION_43
0x4004d53	          0x4889e5	                            mov rbp, rsp	      2927	buffer.c	FUNCTION_43
0x4004d56	        0x4883ec18	                           sub rsp, 0x18	      2927	buffer.c	FUNCTION_43
0x4004d5a	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2927	buffer.c	FUNCTION_43
0x4004d5e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2931	buffer.c	FUNCTION_43	CALL_2
0x4004d62	      0xbe00000000	                              mov esi, 0	      2931	buffer.c	FUNCTION_43	CALL_2
0x4004d67	          0x4889c7	                            mov rdi, rax	      2931	buffer.c	FUNCTION_43	CALL_2
0x4004d6a	      0xe812feffff	                   call sym.find_wininfo	      2931	buffer.c	FUNCTION_43	CALL_2
0x4004d6f	        0x488945f8	                mov qword [rbp - 8], rax	      2931	buffer.c	FUNCTION_43	CALL_2
0x4004d73	      0x48837df800	                  cmp qword [rbp - 8], 0	      2932	buffer.c	FUNCTION_43	IF_1
0x4004d78	            0x740a	                            je 0x4004d84	      2932	buffer.c	FUNCTION_43	IF_1
0x4004d7a	        0x488b45f8	                mov rax, qword [rbp - 8]	      2933	buffer.c	FUNCTION_43	IF_1
0x4004d7e	        0x4883c018	                           add rax, 0x18	      2933	buffer.c	FUNCTION_43	IF_1
0x4004d82	            0xeb05	                           jmp 0x4004d89	      2933	buffer.c	FUNCTION_43	IF_1
0x4004d84	      0xb800000000	                              mov eax, 0	      2935	buffer.c	FUNCTION_43	ELSE_1
0x4004d89	              0xc9	                                   leave	      2936	buffer.c	FUNCTION_43	ELSE_1
0x4004d8a	              0xc3	                                     ret	      2936	buffer.c	FUNCTION_43	ELSE_1
free_buf_options	CALL,52:functions,0:SWITCH,0:FOR,0:ELSE,0:DO,0:WHILE,0:IF,1	224
0x40036fc	              0x55	                                push rbp	      2119	buffer.c	FUNCTION_27
0x40036fd	          0x4889e5	                            mov rbp, rsp	      2119	buffer.c	FUNCTION_27
0x4003700	        0x4883ec10	                           sub rsp, 0x10	      2119	buffer.c	FUNCTION_27
0x4003704	        0x48897df8	                mov qword [rbp - 8], rdi	      2119	buffer.c	FUNCTION_27
0x4003708	          0x8975f4	              mov dword [rbp - 0xc], esi	      2119	buffer.c	FUNCTION_27
0x400370b	        0x837df400	                cmp dword [rbp - 0xc], 0	      2120	buffer.c	FUNCTION_27	IF_1
0x400370f	            0x7448	                            je 0x4003759	      2120	buffer.c	FUNCTION_27	IF_1
0x4003711	        0x488b45f8	                mov rax, qword [rbp - 8]	      2123	buffer.c	FUNCTION_27	IF_1	CALL_1
0x4003715	    0x480588140000	                         add rax, 0x1488	      2123	buffer.c	FUNCTION_27	IF_1	CALL_1
0x400371b	          0x4889c7	                            mov rdi, rax	      2123	buffer.c	FUNCTION_27	IF_1	CALL_1
0x400371e	      0xe800000000	                          call 0x4003723	      2123	buffer.c	FUNCTION_27	IF_1	CALL_1
0x4003723	        0x488b45f8	                mov rax, qword [rbp - 8]	      2125	buffer.c	FUNCTION_27	IF_1	CALL_2
0x4003727	    0x480590140000	                         add rax, 0x1490	      2125	buffer.c	FUNCTION_27	IF_1	CALL_2
0x400372d	          0x4889c7	                            mov rdi, rax	      2125	buffer.c	FUNCTION_27	IF_1	CALL_2
0x4003730	      0xe800000000	                          call 0x4003735	      2125	buffer.c	FUNCTION_27	IF_1	CALL_2
0x4003735	        0x488b45f8	                mov rax, qword [rbp - 8]	      2126	buffer.c	FUNCTION_27	IF_1	CALL_3
0x4003739	    0x480510140000	                         add rax, 0x1410	      2126	buffer.c	FUNCTION_27	IF_1	CALL_3
0x400373f	          0x4889c7	                            mov rdi, rax	      2126	buffer.c	FUNCTION_27	IF_1	CALL_3
0x4003742	      0xe800000000	                          call 0x4003747	      2126	buffer.c	FUNCTION_27	IF_1	CALL_3
0x4003747	        0x488b45f8	                mov rax, qword [rbp - 8]	      2127	buffer.c	FUNCTION_27	IF_1	CALL_4
0x400374b	    0x480518140000	                         add rax, 0x1418	      2127	buffer.c	FUNCTION_27	IF_1	CALL_4
0x4003751	          0x4889c7	                            mov rdi, rax	      2127	buffer.c	FUNCTION_27	IF_1	CALL_4
0x4003754	      0xe800000000	                          call 0x4003759	      2127	buffer.c	FUNCTION_27	IF_1	CALL_4
0x4003759	        0x488b45f8	                mov rax, qword [rbp - 8]	      2130	buffer.c	FUNCTION_27	CALL_5
0x400375d	    0x4805c0140000	                         add rax, 0x14c0	      2130	buffer.c	FUNCTION_27	CALL_5
0x4003763	          0x4889c7	                            mov rdi, rax	      2130	buffer.c	FUNCTION_27	CALL_5
0x4003766	      0xe800000000	                          call 0x400376b	      2130	buffer.c	FUNCTION_27	CALL_5
0x400376b	        0x488b45f8	                mov rax, qword [rbp - 8]	      2131	buffer.c	FUNCTION_27	CALL_6
0x400376f	    0x4805c8140000	                         add rax, 0x14c8	      2131	buffer.c	FUNCTION_27	CALL_6
0x4003775	          0x4889c7	                            mov rdi, rax	      2131	buffer.c	FUNCTION_27	CALL_6
0x4003778	      0xe800000000	                          call 0x400377d	      2131	buffer.c	FUNCTION_27	CALL_6
0x400377d	        0x488b45f8	                mov rax, qword [rbp - 8]	      2133	buffer.c	FUNCTION_27	CALL_7
0x4003781	    0x4805d0140000	                         add rax, 0x14d0	      2133	buffer.c	FUNCTION_27	CALL_7
0x4003787	          0x4889c7	                            mov rdi, rax	      2133	buffer.c	FUNCTION_27	CALL_7
0x400378a	      0xe800000000	                          call 0x400378f	      2133	buffer.c	FUNCTION_27	CALL_7
0x400378f	        0x488b45f8	                mov rax, qword [rbp - 8]	      2137	buffer.c	FUNCTION_27	CALL_8
0x4003793	    0x4805e0140000	                         add rax, 0x14e0	      2137	buffer.c	FUNCTION_27	CALL_8
0x4003799	          0x4889c7	                            mov rdi, rax	      2137	buffer.c	FUNCTION_27	CALL_8
0x400379c	      0xe800000000	                          call 0x40037a1	      2137	buffer.c	FUNCTION_27	CALL_8
0x40037a1	        0x488b45f8	                mov rax, qword [rbp - 8]	      2138	buffer.c	FUNCTION_27	CALL_9
0x40037a5	    0x4805f0140000	                         add rax, 0x14f0	      2138	buffer.c	FUNCTION_27	CALL_9
0x40037ab	          0x4889c7	                            mov rdi, rax	      2138	buffer.c	FUNCTION_27	CALL_9
0x40037ae	      0xe800000000	                          call 0x40037b3	      2138	buffer.c	FUNCTION_27	CALL_9
0x40037b3	        0x488b45f8	                mov rax, qword [rbp - 8]	      2141	buffer.c	FUNCTION_27	CALL_10
0x40037b7	    0x480538170000	                         add rax, 0x1738	      2141	buffer.c	FUNCTION_27	CALL_10
0x40037bd	          0x4889c7	                            mov rdi, rax	      2141	buffer.c	FUNCTION_27	CALL_10
0x40037c0	      0xe800000000	                          call 0x40037c5	      2141	buffer.c	FUNCTION_27	CALL_10
0x40037c5	        0x488b45f8	                mov rax, qword [rbp - 8]	      2144	buffer.c	FUNCTION_27	CALL_11
0x40037c9	    0x480548170000	                         add rax, 0x1748	      2144	buffer.c	FUNCTION_27	CALL_11
0x40037cf	          0x4889c7	                            mov rdi, rax	      2144	buffer.c	FUNCTION_27	CALL_11
0x40037d2	      0xe800000000	                          call 0x40037d7	      2144	buffer.c	FUNCTION_27	CALL_11
0x40037d7	        0x488b45f8	                mov rax, qword [rbp - 8]	      2146	buffer.c	FUNCTION_27	CALL_12
0x40037db	    0x4805f8140000	                         add rax, 0x14f8	      2146	buffer.c	FUNCTION_27	CALL_12
0x40037e1	          0x4889c7	                            mov rdi, rax	      2146	buffer.c	FUNCTION_27	CALL_12
0x40037e4	      0xe800000000	                          call 0x40037e9	      2146	buffer.c	FUNCTION_27	CALL_12
0x40037e9	        0x488b45f8	                mov rax, qword [rbp - 8]	      2148	buffer.c	FUNCTION_27	CALL_13
0x40037ed	    0x480500150000	                         add rax, 0x1500	      2148	buffer.c	FUNCTION_27	CALL_13
0x40037f3	          0x4889c7	                            mov rdi, rax	      2148	buffer.c	FUNCTION_27	CALL_13
0x40037f6	      0xe800000000	                          call 0x40037fb	      2148	buffer.c	FUNCTION_27	CALL_13
0x40037fb	        0x488b45f8	                mov rax, qword [rbp - 8]	      2151	buffer.c	FUNCTION_27	CALL_14
0x40037ff	    0x480510150000	                         add rax, 0x1510	      2151	buffer.c	FUNCTION_27	CALL_14
0x4003805	          0x4889c7	                            mov rdi, rax	      2151	buffer.c	FUNCTION_27	CALL_14
0x4003808	      0xe800000000	                          call 0x400380d	      2151	buffer.c	FUNCTION_27	CALL_14
0x400380d	        0x488b45f8	                mov rax, qword [rbp - 8]	      2153	buffer.c	FUNCTION_27	CALL_15
0x4003811	    0x480518150000	                         add rax, 0x1518	      2153	buffer.c	FUNCTION_27	CALL_15
0x4003817	          0x4889c7	                            mov rdi, rax	      2153	buffer.c	FUNCTION_27	CALL_15
0x400381a	      0xe800000000	                          call 0x400381f	      2153	buffer.c	FUNCTION_27	CALL_15
0x400381f	        0x488b45f8	                mov rax, qword [rbp - 8]	      2154	buffer.c	FUNCTION_27	CALL_16
0x4003823	    0x480530150000	                         add rax, 0x1530	      2154	buffer.c	FUNCTION_27	CALL_16
0x4003829	          0x4889c7	                            mov rdi, rax	      2154	buffer.c	FUNCTION_27	CALL_16
0x400382c	      0xe800000000	                          call 0x4003831	      2154	buffer.c	FUNCTION_27	CALL_16
0x4003831	        0x488b45f8	                mov rax, qword [rbp - 8]	      2155	buffer.c	FUNCTION_27	CALL_17
0x4003835	    0x4805a0140000	                         add rax, 0x14a0	      2155	buffer.c	FUNCTION_27	CALL_17
0x400383b	          0x4889c7	                            mov rdi, rax	      2155	buffer.c	FUNCTION_27	CALL_17
0x400383e	      0xe800000000	                          call 0x4003843	      2155	buffer.c	FUNCTION_27	CALL_17
0x4003843	        0x488b45f8	                mov rax, qword [rbp - 8]	      2156	buffer.c	FUNCTION_27	CALL_18
0x4003847	    0x4805a8140000	                         add rax, 0x14a8	      2156	buffer.c	FUNCTION_27	CALL_18
0x400384d	          0x4889c7	                            mov rdi, rax	      2156	buffer.c	FUNCTION_27	CALL_18
0x4003850	      0xe800000000	                          call 0x4003855	      2156	buffer.c	FUNCTION_27	CALL_18
0x4003855	        0x488b45f8	                mov rax, qword [rbp - 8]	      2157	buffer.c	FUNCTION_27	CALL_19
0x4003859	    0x4805b8140000	                         add rax, 0x14b8	      2157	buffer.c	FUNCTION_27	CALL_19
0x400385f	          0x4889c7	                            mov rdi, rax	      2157	buffer.c	FUNCTION_27	CALL_19
0x4003862	      0xe800000000	                          call 0x4003867	      2157	buffer.c	FUNCTION_27	CALL_19
0x4003867	        0x488b45f8	                mov rax, qword [rbp - 8]	      2159	buffer.c	FUNCTION_27	CALL_20
0x400386b	    0x4805e8150000	                         add rax, 0x15e8	      2159	buffer.c	FUNCTION_27	CALL_20
0x4003871	          0x4889c7	                            mov rdi, rax	      2159	buffer.c	FUNCTION_27	CALL_20
0x4003874	      0xe800000000	                          call 0x4003879	      2159	buffer.c	FUNCTION_27	CALL_20
0x4003879	        0x488b45f8	                mov rax, qword [rbp - 8]	      2160	buffer.c	FUNCTION_27	CALL_21
0x400387d	    0x480590120000	                         add rax, 0x1290	      2160	buffer.c	FUNCTION_27	CALL_21
0x4003883	          0x4889c7	                            mov rdi, rax	      2160	buffer.c	FUNCTION_27	CALL_21
0x4003886	      0xe800000000	                          call 0x400388b	      2160	buffer.c	FUNCTION_27	CALL_21
0x400388b	        0x488b45f8	                mov rax, qword [rbp - 8]	      2161	buffer.c	FUNCTION_27	CALL_22
0x400388f	    0x480590120000	                         add rax, 0x1290	      2161	buffer.c	FUNCTION_27	CALL_22
0x4003895	          0x4889c7	                            mov rdi, rax	      2161	buffer.c	FUNCTION_27	CALL_22
0x4003898	      0xe800000000	                          call 0x400389d	      2161	buffer.c	FUNCTION_27	CALL_22
0x400389d	        0x488b45f8	                mov rax, qword [rbp - 8]	      2164	buffer.c	FUNCTION_27	CALL_23
0x40038a1	    0x480548140000	                         add rax, 0x1448	      2164	buffer.c	FUNCTION_27	CALL_23
0x40038a7	          0x4889c7	                            mov rdi, rax	      2164	buffer.c	FUNCTION_27	CALL_23
0x40038aa	      0xe800000000	                          call 0x40038af	      2164	buffer.c	FUNCTION_27	CALL_23
0x40038af	        0x488b45f8	                mov rax, qword [rbp - 8]	      2167	buffer.c	FUNCTION_27	CALL_24
0x40038b3	    0x480550140000	                         add rax, 0x1450	      2167	buffer.c	FUNCTION_27	CALL_24
0x40038b9	          0x4889c7	                            mov rdi, rax	      2167	buffer.c	FUNCTION_27	CALL_24
0x40038bc	      0xe800000000	                          call 0x40038c1	      2167	buffer.c	FUNCTION_27	CALL_24
0x40038c1	        0x488b45f8	                mov rax, qword [rbp - 8]	      2169	buffer.c	FUNCTION_27	CALL_25
0x40038c5	    0x480548150000	                         add rax, 0x1548	      2169	buffer.c	FUNCTION_27	CALL_25
0x40038cb	          0x4889c7	                            mov rdi, rax	      2169	buffer.c	FUNCTION_27	CALL_25
0x40038ce	      0xe800000000	                          call 0x40038d3	      2169	buffer.c	FUNCTION_27	CALL_25
0x40038d3	        0x488b45f8	                mov rax, qword [rbp - 8]	      2171	buffer.c	FUNCTION_27	CALL_26
0x40038d7	    0x4805a0150000	                         add rax, 0x15a0	      2171	buffer.c	FUNCTION_27	CALL_26
0x40038dd	          0x4889c7	                            mov rdi, rax	      2171	buffer.c	FUNCTION_27	CALL_26
0x40038e0	      0xe800000000	                          call 0x40038e5	      2171	buffer.c	FUNCTION_27	CALL_26
0x40038e5	        0x488b45f8	                mov rax, qword [rbp - 8]	      2172	buffer.c	FUNCTION_27	CALL_27
0x40038e9	    0x4805181c0000	                         add rax, 0x1c18	      2172	buffer.c	FUNCTION_27	CALL_27
0x40038ef	          0x4889c7	                            mov rdi, rax	      2172	buffer.c	FUNCTION_27	CALL_27
0x40038f2	      0xe800000000	                          call 0x40038f7	      2172	buffer.c	FUNCTION_27	CALL_27
0x40038f7	        0x488b45f8	                mov rax, qword [rbp - 8]	      2175	buffer.c	FUNCTION_27	CALL_28
0x40038fb	    0x4805d01b0000	                         add rax, 0x1bd0	      2175	buffer.c	FUNCTION_27	CALL_28
0x4003901	          0x4889c7	                            mov rdi, rax	      2175	buffer.c	FUNCTION_27	CALL_28
0x4003904	      0xe800000000	                          call 0x4003909	      2175	buffer.c	FUNCTION_27	CALL_28
0x4003909	        0x488b45f8	                mov rax, qword [rbp - 8]	      2176	buffer.c	FUNCTION_27	CALL_29
0x400390d	    0x4805e01b0000	                         add rax, 0x1be0	      2176	buffer.c	FUNCTION_27	CALL_29
0x4003913	          0x4889c7	                            mov rdi, rax	      2176	buffer.c	FUNCTION_27	CALL_29
0x4003916	      0xe800000000	                          call 0x400391b	      2176	buffer.c	FUNCTION_27	CALL_29
0x400391b	        0x488b45f8	                mov rax, qword [rbp - 8]	      2177	buffer.c	FUNCTION_27	CALL_30
0x400391f	    0x488b80d81b00	          mov rax, qword [rax + 0x1bd8] 	      2177	buffer.c	FUNCTION_27	CALL_30
0x4003926	          0x4889c7	                            mov rdi, rax	      2177	buffer.c	FUNCTION_27	CALL_30
0x4003929	      0xe800000000	                          call 0x400392e	      2177	buffer.c	FUNCTION_27	CALL_30
0x400392e	        0x488b45f8	                mov rax, qword [rbp - 8]	      2178	buffer.c	FUNCTION_27
0x4003932	    0x48c780d81b00	            mov qword [rax + 0x1bd8], 0 	      2178	buffer.c	FUNCTION_27
0x400393d	        0x488b45f8	                mov rax, qword [rbp - 8]	      2179	buffer.c	FUNCTION_27	CALL_31
0x4003941	    0x4805e81b0000	                         add rax, 0x1be8	      2179	buffer.c	FUNCTION_27	CALL_31
0x4003947	          0x4889c7	                            mov rdi, rax	      2179	buffer.c	FUNCTION_27	CALL_31
0x400394a	      0xe800000000	                          call 0x400394f	      2179	buffer.c	FUNCTION_27	CALL_31
0x400394f	        0x488b45f8	                mov rax, qword [rbp - 8]	      2182	buffer.c	FUNCTION_27	CALL_32
0x4003953	    0x480588150000	                         add rax, 0x1588	      2182	buffer.c	FUNCTION_27	CALL_32
0x4003959	          0x4889c7	                            mov rdi, rax	      2182	buffer.c	FUNCTION_27	CALL_32
0x400395c	      0xe800000000	                          call 0x4003961	      2182	buffer.c	FUNCTION_27	CALL_32
0x4003961	        0x488b45f8	                mov rax, qword [rbp - 8]	      2184	buffer.c	FUNCTION_27	CALL_33
0x4003965	    0x480598140000	                         add rax, 0x1498	      2184	buffer.c	FUNCTION_27	CALL_33
0x400396b	          0x4889c7	                            mov rdi, rax	      2184	buffer.c	FUNCTION_27	CALL_33
0x400396e	      0xe800000000	                          call 0x4003973	      2184	buffer.c	FUNCTION_27	CALL_33
0x4003973	        0x488b45f8	                mov rax, qword [rbp - 8]	      2186	buffer.c	FUNCTION_27	CALL_34
0x4003977	    0x480538140000	                         add rax, 0x1438	      2186	buffer.c	FUNCTION_27	CALL_34
0x400397d	          0x4889c7	                            mov rdi, rax	      2186	buffer.c	FUNCTION_27	CALL_34
0x4003980	      0xe800000000	                          call 0x4003985	      2186	buffer.c	FUNCTION_27	CALL_34
0x4003985	        0x488b45f8	                mov rax, qword [rbp - 8]	      2187	buffer.c	FUNCTION_27	CALL_35
0x4003989	    0x480530140000	                         add rax, 0x1430	      2187	buffer.c	FUNCTION_27	CALL_35
0x400398f	          0x4889c7	                            mov rdi, rax	      2187	buffer.c	FUNCTION_27	CALL_35
0x4003992	      0xe800000000	                          call 0x4003997	      2187	buffer.c	FUNCTION_27	CALL_35
0x4003997	        0x488b45f8	                mov rax, qword [rbp - 8]	      2190	buffer.c	FUNCTION_27	CALL_36
0x400399b	    0x480540140000	                         add rax, 0x1440	      2190	buffer.c	FUNCTION_27	CALL_36
0x40039a1	          0x4889c7	                            mov rdi, rax	      2190	buffer.c	FUNCTION_27	CALL_36
0x40039a4	      0xe800000000	                          call 0x40039a9	      2190	buffer.c	FUNCTION_27	CALL_36
0x40039a9	        0x488b45f8	                mov rax, qword [rbp - 8]	      2193	buffer.c	FUNCTION_27	CALL_37
0x40039ad	    0x480558140000	                         add rax, 0x1458	      2193	buffer.c	FUNCTION_27	CALL_37
0x40039b3	          0x4889c7	                            mov rdi, rax	      2193	buffer.c	FUNCTION_27	CALL_37
0x40039b6	      0xe800000000	                          call 0x40039bb	      2193	buffer.c	FUNCTION_27	CALL_37
0x40039bb	        0x488b45f8	                mov rax, qword [rbp - 8]	      2196	buffer.c	FUNCTION_27	CALL_38
0x40039bf	    0x480560140000	                         add rax, 0x1460	      2196	buffer.c	FUNCTION_27	CALL_38
0x40039c5	          0x4889c7	                            mov rdi, rax	      2196	buffer.c	FUNCTION_27	CALL_38
0x40039c8	      0xe800000000	                          call 0x40039cd	      2196	buffer.c	FUNCTION_27	CALL_38
0x40039cd	        0x488b45f8	                mov rax, qword [rbp - 8]	      2197	buffer.c	FUNCTION_27	CALL_39
0x40039d1	    0x480568140000	                         add rax, 0x1468	      2197	buffer.c	FUNCTION_27	CALL_39
0x40039d7	          0x4889c7	                            mov rdi, rax	      2197	buffer.c	FUNCTION_27	CALL_39
0x40039da	      0xe800000000	                          call 0x40039df	      2197	buffer.c	FUNCTION_27	CALL_39
0x40039df	        0x488b45f8	                mov rax, qword [rbp - 8]	      2200	buffer.c	FUNCTION_27	CALL_40
0x40039e3	    0x4805f0150000	                         add rax, 0x15f0	      2200	buffer.c	FUNCTION_27	CALL_40
0x40039e9	          0x4889c7	                            mov rdi, rax	      2200	buffer.c	FUNCTION_27	CALL_40
0x40039ec	      0xe800000000	                          call 0x40039f1	      2200	buffer.c	FUNCTION_27	CALL_40
0x40039f1	        0x488b45f8	                mov rax, qword [rbp - 8]	      2201	buffer.c	FUNCTION_27	CALL_41
0x40039f5	    0x4805f8150000	                         add rax, 0x15f8	      2201	buffer.c	FUNCTION_27	CALL_41
0x40039fb	          0x4889c7	                            mov rdi, rax	      2201	buffer.c	FUNCTION_27	CALL_41
0x40039fe	      0xe800000000	                          call 0x4003a03	      2201	buffer.c	FUNCTION_27	CALL_41
0x4003a03	        0x488b45f8	                mov rax, qword [rbp - 8]	      2202	buffer.c	FUNCTION_27	CALL_42
0x4003a07	    0x480500160000	                         add rax, 0x1600	      2202	buffer.c	FUNCTION_27	CALL_42
0x4003a0d	          0x4889c7	                            mov rdi, rax	      2202	buffer.c	FUNCTION_27	CALL_42
0x4003a10	      0xe800000000	                          call 0x4003a15	      2202	buffer.c	FUNCTION_27	CALL_42
0x4003a15	        0x488b45f8	                mov rax, qword [rbp - 8]	      2204	buffer.c	FUNCTION_27	CALL_43
0x4003a19	    0x480508160000	                         add rax, 0x1608	      2204	buffer.c	FUNCTION_27	CALL_43
0x4003a1f	          0x4889c7	                            mov rdi, rax	      2204	buffer.c	FUNCTION_27	CALL_43
0x4003a22	      0xe800000000	                          call 0x4003a27	      2204	buffer.c	FUNCTION_27	CALL_43
0x4003a27	        0x488b45f8	                mov rax, qword [rbp - 8]	      2205	buffer.c	FUNCTION_27	CALL_44
0x4003a2b	    0x480510160000	                         add rax, 0x1610	      2205	buffer.c	FUNCTION_27	CALL_44
0x4003a31	          0x4889c7	                            mov rdi, rax	      2205	buffer.c	FUNCTION_27	CALL_44
0x4003a34	      0xe800000000	                          call 0x4003a39	      2205	buffer.c	FUNCTION_27	CALL_44
0x4003a39	        0x488b45f8	                mov rax, qword [rbp - 8]	      2206	buffer.c	FUNCTION_27	CALL_45
0x4003a3d	    0x480520160000	                         add rax, 0x1620	      2206	buffer.c	FUNCTION_27	CALL_45
0x4003a43	          0x4889c7	                            mov rdi, rax	      2206	buffer.c	FUNCTION_27	CALL_45
0x4003a46	      0xe800000000	                          call 0x4003a4b	      2206	buffer.c	FUNCTION_27	CALL_45
0x4003a4b	        0x488b45f8	                mov rax, qword [rbp - 8]	      2207	buffer.c	FUNCTION_27	CALL_46
0x4003a4f	    0x480528160000	                         add rax, 0x1628	      2207	buffer.c	FUNCTION_27	CALL_46
0x4003a55	          0x4889c7	                            mov rdi, rax	      2207	buffer.c	FUNCTION_27	CALL_46
0x4003a58	      0xe800000000	                          call 0x4003a5d	      2207	buffer.c	FUNCTION_27	CALL_46
0x4003a5d	        0x488b45f8	                mov rax, qword [rbp - 8]	      2209	buffer.c	FUNCTION_27	CALL_47
0x4003a61	    0x480538160000	                         add rax, 0x1638	      2209	buffer.c	FUNCTION_27	CALL_47
0x4003a67	          0x4889c7	                            mov rdi, rax	      2209	buffer.c	FUNCTION_27	CALL_47
0x4003a6a	      0xe800000000	                          call 0x4003a6f	      2209	buffer.c	FUNCTION_27	CALL_47
0x4003a6f	        0x488b45f8	                mov rax, qword [rbp - 8]	      2210	buffer.c	FUNCTION_27	CALL_48
0x4003a73	    0x480540160000	                         add rax, 0x1640	      2210	buffer.c	FUNCTION_27	CALL_48
0x4003a79	          0x4889c7	                            mov rdi, rax	      2210	buffer.c	FUNCTION_27	CALL_48
0x4003a7c	      0xe800000000	                          call 0x4003a81	      2210	buffer.c	FUNCTION_27	CALL_48
0x4003a81	        0x488b45f8	                mov rax, qword [rbp - 8]	      2213	buffer.c	FUNCTION_27	CALL_49
0x4003a85	    0x480558150000	                         add rax, 0x1558	      2213	buffer.c	FUNCTION_27	CALL_49
0x4003a8b	          0x4889c7	                            mov rdi, rax	      2213	buffer.c	FUNCTION_27	CALL_49
0x4003a8e	      0xe800000000	                          call 0x4003a93	      2213	buffer.c	FUNCTION_27	CALL_49
0x4003a93	        0x488b45f8	                mov rax, qword [rbp - 8]	      2215	buffer.c	FUNCTION_27
0x4003a97	    0xc78018160000	   mov dword [rax + 0x1618], 0xffffffff 	      2215	buffer.c	FUNCTION_27
0x4003aa1	        0x488b45f8	                mov rax, qword [rbp - 8]	      2216	buffer.c	FUNCTION_27
0x4003aa5	    0x48c780481600	mov qword [rax + 0x1648], 0xfffffffffffe1dc0 	      2216	buffer.c	FUNCTION_27
0x4003ab0	        0x488b45f8	                mov rax, qword [rbp - 8]	      2218	buffer.c	FUNCTION_27	CALL_50
0x4003ab4	    0x480558160000	                         add rax, 0x1658	      2218	buffer.c	FUNCTION_27	CALL_50
0x4003aba	          0x4889c7	                            mov rdi, rax	      2218	buffer.c	FUNCTION_27	CALL_50
0x4003abd	      0xe800000000	                          call 0x4003ac2	      2218	buffer.c	FUNCTION_27	CALL_50
0x4003ac2	        0x488b45f8	                mov rax, qword [rbp - 8]	      2220	buffer.c	FUNCTION_27	CALL_51
0x4003ac6	    0x4805f8130000	                         add rax, 0x13f8	      2220	buffer.c	FUNCTION_27	CALL_51
0x4003acc	          0x4889c7	                            mov rdi, rax	      2220	buffer.c	FUNCTION_27	CALL_51
0x4003acf	      0xe800000000	                          call 0x4003ad4	      2220	buffer.c	FUNCTION_27	CALL_51
0x4003ad4	        0x488b45f8	                mov rax, qword [rbp - 8]	      2222	buffer.c	FUNCTION_27	CALL_52
0x4003ad8	    0x480528150000	                         add rax, 0x1528	      2222	buffer.c	FUNCTION_27	CALL_52
0x4003ade	          0x4889c7	                            mov rdi, rax	      2222	buffer.c	FUNCTION_27	CALL_52
0x4003ae1	      0xe800000000	                          call 0x4003ae6	      2222	buffer.c	FUNCTION_27	CALL_52
0x4003ae6	              0x90	                                     nop	      2224	buffer.c	FUNCTION_27
0x4003ae7	              0xc9	                                   leave	      2224	buffer.c	FUNCTION_27
0x4003ae8	              0xc3	                                     ret	      2224	buffer.c	FUNCTION_27
curbuf_reusable	CALL,2:functions,0:SWITCH,0:FOR,0:ELSE,0:DO,0:WHILE,0:IF,0	34
0x4002d83	              0x55	                                push rbp	      1850	buffer.c	FUNCTION_25
0x4002d84	          0x4889e5	                            mov rbp, rsp	      1850	buffer.c	FUNCTION_25
0x4002d87	    0x488b05000000	            mov rax, qword [0x04002d8e] 	      1851	buffer.c	FUNCTION_25
0x4002d8e	          0x4885c0	                           test rax, rax	      1855	buffer.c	FUNCTION_25	CALL_2
0x4002d91	            0x7463	                            je 0x4002df6	      1855	buffer.c	FUNCTION_25	CALL_2
0x4002d93	    0x488b05000000	            mov rax, qword [0x04002d9a] 	      1852	buffer.c	FUNCTION_25
0x4002d9a	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      1852	buffer.c	FUNCTION_25
0x4002da1	          0x4885c0	                           test rax, rax	      1852	buffer.c	FUNCTION_25
0x4002da4	            0x7550	                           jne 0x4002df6	      1852	buffer.c	FUNCTION_25
0x4002da6	    0x488b05000000	            mov rax, qword [0x04002dad] 	      1853	buffer.c	FUNCTION_25
0x4002dad	          0x8b4078	            mov eax, dword [rax + 0x78] 	      1853	buffer.c	FUNCTION_25
0x4002db0	          0x83f801	                              cmp eax, 1	      1853	buffer.c	FUNCTION_25
0x4002db3	            0x7f41	                            jg 0x4002df6	      1853	buffer.c	FUNCTION_25
0x4002db5	    0x488b05000000	            mov rax, qword [0x04002dbc] 	      1854	buffer.c	FUNCTION_25	CALL_1
0x4002dbc	        0x488b4008	                mov rax, qword [rax + 8]	      1854	buffer.c	FUNCTION_25	CALL_1
0x4002dc0	          0x4885c0	                           test rax, rax	      1854	buffer.c	FUNCTION_25	CALL_1
0x4002dc3	            0x7421	                            je 0x4002de6	      1854	buffer.c	FUNCTION_25	CALL_1
0x4002dc5	    0x488b05000000	            mov rax, qword [0x04002dcc] 	      1854	buffer.c	FUNCTION_25	CALL_1
0x4002dcc	          0x488b00	                    mov rax, qword [rax]	      1854	buffer.c	FUNCTION_25	CALL_1
0x4002dcf	        0x4883f801	                              cmp rax, 1	      1854	buffer.c	FUNCTION_25	CALL_1
0x4002dd3	            0x7521	                           jne 0x4002df6	      1854	buffer.c	FUNCTION_25	CALL_1
0x4002dd5	      0xbf01000000	                              mov edi, 1	      1854	buffer.c	FUNCTION_25	CALL_1
0x4002dda	      0xe800000000	                          call 0x4002ddf	      1854	buffer.c	FUNCTION_25	CALL_1
0x4002ddf	           0xfb600	                   movzx eax, byte [rax]	      1854	buffer.c	FUNCTION_25	CALL_1
0x4002de2	            0x84c0	                             test al, al	      1854	buffer.c	FUNCTION_25	CALL_1
0x4002de4	            0x7510	                           jne 0x4002df6	      1854	buffer.c	FUNCTION_25	CALL_1
0x4002de6	      0xe800000000	                          call 0x4002deb	      1855	buffer.c	FUNCTION_25	CALL_2
0x4002deb	            0x85c0	                           test eax, eax	      1855	buffer.c	FUNCTION_25	CALL_2
0x4002ded	            0x7507	                           jne 0x4002df6	      1855	buffer.c	FUNCTION_25	CALL_2
0x4002def	      0xb801000000	                              mov eax, 1	      1855	buffer.c	FUNCTION_25	CALL_2
0x4002df4	            0xeb05	                           jmp 0x4002dfb	      1855	buffer.c	FUNCTION_25	CALL_2
0x4002df6	      0xb800000000	                              mov eax, 0	      1855	buffer.c	FUNCTION_25	CALL_2
0x4002dfb	              0x5d	                                 pop rbp	      1856	buffer.c	FUNCTION_25
0x4002dfc	              0xc3	                                     ret	      1856	buffer.c	FUNCTION_25
sign_mark_adjust	CALL,0:functions,0:SWITCH,0:FOR,1:ELSE,2:DO,0:WHILE,0:IF,3	49
0x400c320	              0x55	                                push rbp	      6129	buffer.c	FUNCTION_100
0x400c321	          0x4889e5	                            mov rbp, rsp	      6129	buffer.c	FUNCTION_100
0x400c324	        0x48897de8	             mov qword [rbp - 0x18], rdi	      6129	buffer.c	FUNCTION_100
0x400c328	        0x488975e0	             mov qword [rbp - 0x20], rsi	      6129	buffer.c	FUNCTION_100
0x400c32c	        0x488955d8	             mov qword [rbp - 0x28], rdx	      6129	buffer.c	FUNCTION_100
0x400c330	        0x48894dd0	             mov qword [rbp - 0x30], rcx	      6129	buffer.c	FUNCTION_100
0x400c334	    0x488b05000000	            mov rax, qword [0x0400c33b] 	      6132	buffer.c	FUNCTION_100	FOR_1
0x400c33b	    0x488b80201c00	          mov rax, qword [rax + 0x1c20] 	      6132	buffer.c	FUNCTION_100	FOR_1
0x400c342	        0x488945f8	                mov qword [rbp - 8], rax	      6132	buffer.c	FUNCTION_100	FOR_1
0x400c346	            0xeb7e	                           jmp 0x400c3c6	      6132	buffer.c	FUNCTION_100	FOR_1
0x400c348	        0x488b45f8	                mov rax, qword [rbp - 8]	      6134	buffer.c	FUNCTION_100	FOR_1	IF_1
0x400c34c	        0x488b4008	                mov rax, qword [rax + 8]	      6134	buffer.c	FUNCTION_100	FOR_1	IF_1
0x400c350	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      6134	buffer.c	FUNCTION_100	FOR_1	IF_1
0x400c354	            0x7c3f	                            jl 0x400c395	      6134	buffer.c	FUNCTION_100	FOR_1	IF_1
0x400c356	        0x488b45f8	                mov rax, qword [rbp - 8]	      6134	buffer.c	FUNCTION_100	FOR_1	IF_1
0x400c35a	        0x488b4008	                mov rax, qword [rax + 8]	      6134	buffer.c	FUNCTION_100	FOR_1	IF_1
0x400c35e	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      6134	buffer.c	FUNCTION_100	FOR_1	IF_1
0x400c362	            0x7f31	                            jg 0x400c395	      6134	buffer.c	FUNCTION_100	FOR_1	IF_1
0x400c364	    0x48817dd8ffff	     cmp qword [rbp - 0x28], 0x7fffffff 	      6136	buffer.c	FUNCTION_100	FOR_1	IF_1	IF_2
0x400c36c	            0x750e	                           jne 0x400c37c	      6136	buffer.c	FUNCTION_100	FOR_1	IF_1	IF_2
0x400c36e	        0x488b45f8	                mov rax, qword [rbp - 8]	      6137	buffer.c	FUNCTION_100	FOR_1	IF_1	IF_2
0x400c372	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      6137	buffer.c	FUNCTION_100	FOR_1	IF_1	IF_2
0x400c376	        0x48895008	                mov qword [rax + 8], rdx	      6137	buffer.c	FUNCTION_100	FOR_1	IF_1	IF_2
0x400c37a	            0xeb3e	                           jmp 0x400c3ba	      6136	buffer.c	FUNCTION_100	FOR_1	IF_1	IF_2
0x400c37c	        0x488b45f8	                mov rax, qword [rbp - 8]	      6139	buffer.c	FUNCTION_100	FOR_1	IF_1	ELSE_1
0x400c380	        0x488b5008	                mov rdx, qword [rax + 8]	      6139	buffer.c	FUNCTION_100	FOR_1	IF_1	ELSE_1
0x400c384	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6139	buffer.c	FUNCTION_100	FOR_1	IF_1	ELSE_1
0x400c388	          0x4801c2	                            add rdx, rax	      6139	buffer.c	FUNCTION_100	FOR_1	IF_1	ELSE_1
0x400c38b	        0x488b45f8	                mov rax, qword [rbp - 8]	      6139	buffer.c	FUNCTION_100	FOR_1	IF_1	ELSE_1
0x400c38f	        0x48895008	                mov qword [rax + 8], rdx	      6139	buffer.c	FUNCTION_100	FOR_1	IF_1	ELSE_1
0x400c393	            0xeb25	                           jmp 0x400c3ba	      6136	buffer.c	FUNCTION_100	FOR_1	IF_1	IF_2
0x400c395	        0x488b45f8	                mov rax, qword [rbp - 8]	      6141	buffer.c	FUNCTION_100	FOR_1	ELSE_2	IF_3
0x400c399	        0x488b4008	                mov rax, qword [rax + 8]	      6141	buffer.c	FUNCTION_100	FOR_1	ELSE_2	IF_3
0x400c39d	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      6141	buffer.c	FUNCTION_100	FOR_1	ELSE_2	IF_3
0x400c3a1	            0x7e17	                           jle 0x400c3ba	      6141	buffer.c	FUNCTION_100	FOR_1	ELSE_2	IF_3
0x400c3a3	        0x488b45f8	                mov rax, qword [rbp - 8]	      6142	buffer.c	FUNCTION_100	FOR_1	ELSE_2	IF_3
0x400c3a7	        0x488b5008	                mov rdx, qword [rax + 8]	      6142	buffer.c	FUNCTION_100	FOR_1	ELSE_2	IF_3
0x400c3ab	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6142	buffer.c	FUNCTION_100	FOR_1	ELSE_2	IF_3
0x400c3af	          0x4801c2	                            add rdx, rax	      6142	buffer.c	FUNCTION_100	FOR_1	ELSE_2	IF_3
0x400c3b2	        0x488b45f8	                mov rax, qword [rbp - 8]	      6142	buffer.c	FUNCTION_100	FOR_1	ELSE_2	IF_3
0x400c3b6	        0x48895008	                mov qword [rax + 8], rdx	      6142	buffer.c	FUNCTION_100	FOR_1	ELSE_2	IF_3
0x400c3ba	        0x488b45f8	                mov rax, qword [rbp - 8]	      6132	buffer.c	FUNCTION_100	FOR_1
0x400c3be	        0x488b4018	            mov rax, qword [rax + 0x18] 	      6132	buffer.c	FUNCTION_100	FOR_1
0x400c3c2	        0x488945f8	                mov qword [rbp - 8], rax	      6132	buffer.c	FUNCTION_100	FOR_1
0x400c3c6	      0x48837df800	                  cmp qword [rbp - 8], 0	      6132	buffer.c	FUNCTION_100	FOR_1
0x400c3cb	     0xf8577ffffff	                           jne 0x400c348	      6132	buffer.c	FUNCTION_100	FOR_1
0x400c3d1	              0x90	                                     nop	      6144	buffer.c	FUNCTION_100
0x400c3d2	              0x5d	                                 pop rbp	      6144	buffer.c	FUNCTION_100
0x400c3d3	              0xc3	                                     ret	      6144	buffer.c	FUNCTION_100
buflist_findname_exp	CALL,3:functions,0:SWITCH,0:FOR,0:ELSE,0:DO,0:WHILE,0:IF,1	22
0x4003e06	              0x55	                                push rbp	      2361	buffer.c	FUNCTION_30
0x4003e07	          0x4889e5	                            mov rbp, rsp	      2361	buffer.c	FUNCTION_30
0x4003e0a	        0x4883ec20	                           sub rsp, 0x20	      2361	buffer.c	FUNCTION_30
0x4003e0e	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2361	buffer.c	FUNCTION_30
0x4003e12	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      2363	buffer.c	FUNCTION_30
0x4003e1a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2366	buffer.c	FUNCTION_30	CALL_1
0x4003e1e	      0xbe01000000	                              mov esi, 1	      2366	buffer.c	FUNCTION_30	CALL_1
0x4003e23	          0x4889c7	                            mov rdi, rax	      2366	buffer.c	FUNCTION_30	CALL_1
0x4003e26	      0xe800000000	                          call 0x4003e2b	      2366	buffer.c	FUNCTION_30	CALL_1
0x4003e2b	        0x488945f8	                mov qword [rbp - 8], rax	      2366	buffer.c	FUNCTION_30	CALL_1
0x4003e2f	      0x48837df800	                  cmp qword [rbp - 8], 0	      2373	buffer.c	FUNCTION_30	IF_1
0x4003e34	            0x741c	                            je 0x4003e52	      2373	buffer.c	FUNCTION_30	IF_1
0x4003e36	        0x488b45f8	                mov rax, qword [rbp - 8]	      2375	buffer.c	FUNCTION_30	IF_1	CALL_2
0x4003e3a	          0x4889c7	                            mov rdi, rax	      2375	buffer.c	FUNCTION_30	IF_1	CALL_2
0x4003e3d	      0xe800000000	                          call 0x4003e42	      2375	buffer.c	FUNCTION_30	IF_1	CALL_2
0x4003e42	        0x488945f0	             mov qword [rbp - 0x10], rax	      2375	buffer.c	FUNCTION_30	IF_1	CALL_2
0x4003e46	        0x488b45f8	                mov rax, qword [rbp - 8]	      2376	buffer.c	FUNCTION_30	IF_1	CALL_3
0x4003e4a	          0x4889c7	                            mov rdi, rax	      2376	buffer.c	FUNCTION_30	IF_1	CALL_3
0x4003e4d	      0xe800000000	                          call 0x4003e52	      2376	buffer.c	FUNCTION_30	IF_1	CALL_3
0x4003e52	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2378	buffer.c	FUNCTION_30
0x4003e56	              0xc9	                                   leave	      2379	buffer.c	FUNCTION_30
0x4003e57	              0xc3	                                     ret	      2379	buffer.c	FUNCTION_30
set_bufref	CALL,0:functions,0:SWITCH,0:FOR,0:ELSE,0:DO,0:WHILE,0:IF,0	21
0x4000801	              0x55	                                push rbp	       360	buffer.c	FUNCTION_3
0x4000802	          0x4889e5	                            mov rbp, rsp	       360	buffer.c	FUNCTION_3
0x4000805	        0x48897df8	                mov qword [rbp - 8], rdi	       360	buffer.c	FUNCTION_3
0x4000809	        0x488975f0	             mov qword [rbp - 0x10], rsi	       360	buffer.c	FUNCTION_3
0x400080d	        0x488b45f8	                mov rax, qword [rbp - 8]	       361	buffer.c	FUNCTION_3
0x4000811	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       361	buffer.c	FUNCTION_3
0x4000815	          0x488910	                    mov qword [rax], rdx	       361	buffer.c	FUNCTION_3
0x4000818	      0x48837df000	               cmp qword [rbp - 0x10], 0	       362	buffer.c	FUNCTION_3
0x400081d	            0x740c	                            je 0x400082b	       362	buffer.c	FUNCTION_3
0x400081f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       362	buffer.c	FUNCTION_3
0x4000823	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	       362	buffer.c	FUNCTION_3
0x4000829	            0xeb05	                           jmp 0x4000830	       362	buffer.c	FUNCTION_3
0x400082b	      0xb800000000	                              mov eax, 0	       362	buffer.c	FUNCTION_3
0x4000830	        0x488b55f8	                mov rdx, qword [rbp - 8]	       362	buffer.c	FUNCTION_3
0x4000834	          0x894208	                mov dword [rdx + 8], eax	       362	buffer.c	FUNCTION_3
0x4000837	    0x8b1500000000	            mov edx, dword [0x0400083d] 	       363	buffer.c	FUNCTION_3
0x400083d	        0x488b45f8	                mov rax, qword [rbp - 8]	       363	buffer.c	FUNCTION_3
0x4000841	          0x89500c	              mov dword [rax + 0xc], edx	       363	buffer.c	FUNCTION_3
0x4000844	              0x90	                                     nop	       364	buffer.c	FUNCTION_3
0x4000845	              0x5d	                                 pop rbp	       364	buffer.c	FUNCTION_3
0x4000846	              0xc3	                                     ret	       364	buffer.c	FUNCTION_3
fileinfo	CALL,38:functions,0:SWITCH,0:FOR,0:ELSE,8:DO,0:WHILE,0:IF,10	371
0x4005c67	              0x55	                                push rbp	      3401	buffer.c	FUNCTION_59
0x4005c68	          0x4889e5	                            mov rbp, rsp	      3401	buffer.c	FUNCTION_59
0x4005c6b	            0x4157	                                push r15	      3401	buffer.c	FUNCTION_59
0x4005c6d	            0x4156	                                push r14	      3401	buffer.c	FUNCTION_59
0x4005c6f	            0x4155	                                push r13	      3401	buffer.c	FUNCTION_59
0x4005c71	            0x4154	                                push r12	      3401	buffer.c	FUNCTION_59
0x4005c73	              0x53	                                push rbx	      3401	buffer.c	FUNCTION_59
0x4005c74	        0x4883ec48	                           sub rsp, 0x48	      3401	buffer.c	FUNCTION_59
0x4005c78	          0x897d9c	             mov dword [rbp - 0x64], edi	      3401	buffer.c	FUNCTION_59
0x4005c7b	          0x897598	             mov dword [rbp - 0x68], esi	      3401	buffer.c	FUNCTION_59
0x4005c7e	          0x895594	             mov dword [rbp - 0x6c], edx	      3401	buffer.c	FUNCTION_59
0x4005c81	      0xbf01040000	                          mov edi, 0x401	      3408	buffer.c	FUNCTION_59	CALL_1
0x4005c86	      0xe800000000	                          call 0x4005c8b	      3408	buffer.c	FUNCTION_59	CALL_1
0x4005c8b	        0x488945c0	             mov qword [rbp - 0x40], rax	      3408	buffer.c	FUNCTION_59	CALL_1
0x4005c8f	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      3409	buffer.c	FUNCTION_59	IF_1
0x4005c94	     0xf845d050000	                            je 0x40061f7	      3409	buffer.c	FUNCTION_59	IF_1
0x4005c9a	        0x837d9c01	               cmp dword [rbp - 0x64], 1	      3412	buffer.c	FUNCTION_59	IF_2
0x4005c9e	            0x7e46	                           jle 0x4005ce6	      3412	buffer.c	FUNCTION_59	IF_2
0x4005ca0	    0x488b05000000	            mov rax, qword [0x04005ca7] 	      3414	buffer.c	FUNCTION_59	IF_2	CALL_2
0x4005ca7	    0x8b90b8000000	            mov edx, dword [rax + 0xb8] 	      3414	buffer.c	FUNCTION_59	IF_2	CALL_2
0x4005cad	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3414	buffer.c	FUNCTION_59	IF_2	CALL_2
0x4005cb1	            0x89d1	                            mov ecx, edx	      3414	buffer.c	FUNCTION_59	IF_2	CALL_2
0x4005cb3	      0xba00000000	                              mov edx, 0	      3414	buffer.c	FUNCTION_59	IF_2	CALL_2
0x4005cb8	      0xbe01040000	                          mov esi, 0x401	      3414	buffer.c	FUNCTION_59	IF_2	CALL_2
0x4005cbd	          0x4889c7	                            mov rdi, rax	      3414	buffer.c	FUNCTION_59	IF_2	CALL_2
0x4005cc0	      0xb800000000	                              mov eax, 0	      3414	buffer.c	FUNCTION_59	IF_2	CALL_2
0x4005cc5	      0xe800000000	                          call 0x4005cca	      3414	buffer.c	FUNCTION_59	IF_2	CALL_2
0x4005cca	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3415	buffer.c	FUNCTION_59	IF_2	CALL_3
0x4005cce	          0x4889c7	                            mov rdi, rax	      3415	buffer.c	FUNCTION_59	IF_2	CALL_3
0x4005cd1	      0xe800000000	                          call 0x4005cd6	      3415	buffer.c	FUNCTION_59	IF_2	CALL_3
0x4005cd6	          0x4889c2	                            mov rdx, rax	      3415	buffer.c	FUNCTION_59	IF_2	CALL_3
0x4005cd9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3415	buffer.c	FUNCTION_59	IF_2	CALL_3
0x4005cdd	          0x4801d0	                            add rax, rdx	      3415	buffer.c	FUNCTION_59	IF_2	CALL_3
0x4005ce0	        0x488945b8	             mov qword [rbp - 0x48], rax	      3415	buffer.c	FUNCTION_59	IF_2	CALL_3
0x4005ce4	            0xeb08	                           jmp 0x4005cee	      3415	buffer.c	FUNCTION_59	IF_2	CALL_3
0x4005ce6	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3418	buffer.c	FUNCTION_59	ELSE_1
0x4005cea	        0x488945b8	             mov qword [rbp - 0x48], rax	      3418	buffer.c	FUNCTION_59	ELSE_1
0x4005cee	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3420	buffer.c	FUNCTION_59
0x4005cf2	        0x488d5001	                      lea rdx, [rax + 1]	      3420	buffer.c	FUNCTION_59
0x4005cf6	        0x488955b8	             mov qword [rbp - 0x48], rdx	      3420	buffer.c	FUNCTION_59
0x4005cfa	          0xc60022	                    mov byte [rax], 0x22	      3420	buffer.c	FUNCTION_59
0x4005cfd	    0x488b05000000	            mov rax, qword [0x04005d04] 	      3421	buffer.c	FUNCTION_59	IF_3	CALL_4
0x4005d04	          0x4889c7	                            mov rdi, rax	      3421	buffer.c	FUNCTION_59	IF_3	CALL_4
0x4005d07	      0xe800000000	                          call 0x4005d0c	      3421	buffer.c	FUNCTION_59	IF_3	CALL_4
0x4005d0c	          0x4885c0	                           test rax, rax	      3421	buffer.c	FUNCTION_59	IF_3	CALL_4
0x4005d0f	            0x7445	                            je 0x4005d56	      3421	buffer.c	FUNCTION_59	IF_3	CALL_4
0x4005d11	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      3422	buffer.c	FUNCTION_59	CALL_6
0x4005d15	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3422	buffer.c	FUNCTION_59	CALL_6
0x4005d19	          0x4829c2	                            sub rdx, rax	      3422	buffer.c	FUNCTION_59	CALL_6
0x4005d1c	          0x4889d0	                            mov rax, rdx	      3422	buffer.c	FUNCTION_59	CALL_6
0x4005d1f	      0xba00040000	                          mov edx, 0x400	      3422	buffer.c	FUNCTION_59	CALL_6
0x4005d24	          0x4829c2	                            sub rdx, rax	      3422	buffer.c	FUNCTION_59	CALL_6
0x4005d27	          0x4889d0	                            mov rax, rdx	      3422	buffer.c	FUNCTION_59	CALL_6
0x4005d2a	          0x4889c3	                            mov rbx, rax	      3422	buffer.c	FUNCTION_59	CALL_6
0x4005d2d	    0x488b05000000	            mov rax, qword [0x04005d34] 	      3422	buffer.c	FUNCTION_59	CALL_6
0x4005d34	          0x4889c7	                            mov rdi, rax	      3422	buffer.c	FUNCTION_59	CALL_6
0x4005d37	      0xe800000000	                          call 0x4005d3c	      3422	buffer.c	FUNCTION_59	CALL_6
0x4005d3c	          0x4889c1	                            mov rcx, rax	      3422	buffer.c	FUNCTION_59	CALL_6
0x4005d3f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3422	buffer.c	FUNCTION_59	CALL_6
0x4005d43	          0x4889da	                            mov rdx, rbx	      3422	buffer.c	FUNCTION_59	CALL_6
0x4005d46	          0x4889ce	                            mov rsi, rcx	      3422	buffer.c	FUNCTION_59	CALL_6
0x4005d49	          0x4889c7	                            mov rdi, rax	      3422	buffer.c	FUNCTION_59	CALL_6
0x4005d4c	      0xe800000000	                          call 0x4005d51	      3422	buffer.c	FUNCTION_59	CALL_6
0x4005d51	      0xe982000000	                           jmp 0x4005dd8	      3422	buffer.c	FUNCTION_59	CALL_6
0x4005d56	        0x837d9c00	               cmp dword [rbp - 0x64], 0	      3425	buffer.c	FUNCTION_59	ELSE_2	IF_4
0x4005d5a	            0x7527	                           jne 0x4005d83	      3425	buffer.c	FUNCTION_59	ELSE_2	IF_4
0x4005d5c	    0x488b05000000	            mov rax, qword [0x04005d63] 	      3425	buffer.c	FUNCTION_59	ELSE_2	IF_4
0x4005d63	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      3425	buffer.c	FUNCTION_59	ELSE_2	IF_4
0x4005d6a	          0x4885c0	                           test rax, rax	      3425	buffer.c	FUNCTION_59	ELSE_2	IF_4
0x4005d6d	            0x7414	                            je 0x4005d83	      3425	buffer.c	FUNCTION_59	ELSE_2	IF_4
0x4005d6f	    0x488b05000000	            mov rax, qword [0x04005d76] 	      3426	buffer.c	FUNCTION_59	ELSE_2	IF_4
0x4005d76	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      3426	buffer.c	FUNCTION_59	ELSE_2	IF_4
0x4005d7d	        0x488945b0	             mov qword [rbp - 0x50], rax	      3426	buffer.c	FUNCTION_59	ELSE_2	IF_4
0x4005d81	            0xeb12	                           jmp 0x4005d95	      3426	buffer.c	FUNCTION_59	ELSE_2	IF_4
0x4005d83	    0x488b05000000	            mov rax, qword [0x04005d8a] 	      3428	buffer.c	FUNCTION_59	ELSE_2	ELSE_3
0x4005d8a	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      3428	buffer.c	FUNCTION_59	ELSE_2	ELSE_3
0x4005d91	        0x488945b0	             mov qword [rbp - 0x50], rax	      3428	buffer.c	FUNCTION_59	ELSE_2	ELSE_3
0x4005d95	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      3430	buffer.c	FUNCTION_59	ELSE_2
0x4005d99	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3430	buffer.c	FUNCTION_59	ELSE_2
0x4005d9d	          0x4829c2	                            sub rdx, rax	      3430	buffer.c	FUNCTION_59	ELSE_2
0x4005da0	          0x4889d0	                            mov rax, rdx	      3430	buffer.c	FUNCTION_59	ELSE_2
0x4005da3	      0xba01040000	                          mov edx, 0x401	      3429	buffer.c	FUNCTION_59	ELSE_2	CALL_7
0x4005da8	            0x29c2	                            sub edx, eax	      3429	buffer.c	FUNCTION_59	ELSE_2	CALL_7
0x4005daa	            0x89d0	                            mov eax, edx	      3429	buffer.c	FUNCTION_59	ELSE_2	CALL_7
0x4005dac	            0x89c1	                            mov ecx, eax	      3429	buffer.c	FUNCTION_59	ELSE_2	CALL_7
0x4005dae	        0x837d9800	               cmp dword [rbp - 0x68], 0	      3429	buffer.c	FUNCTION_59	ELSE_2	CALL_7
0x4005db2	            0x7409	                            je 0x4005dbd	      3429	buffer.c	FUNCTION_59	ELSE_2	CALL_7
0x4005db4	    0x488b05000000	            mov rax, qword [0x04005dbb] 	      3429	buffer.c	FUNCTION_59	ELSE_2	CALL_7
0x4005dbb	            0xeb05	                           jmp 0x4005dc2	      3429	buffer.c	FUNCTION_59	ELSE_2	CALL_7
0x4005dbd	      0xb800000000	                              mov eax, 0	      3429	buffer.c	FUNCTION_59	ELSE_2	CALL_7
0x4005dc2	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      3429	buffer.c	FUNCTION_59	ELSE_2	CALL_7
0x4005dc6	        0x488b75b0	             mov rsi, qword [rbp - 0x50]	      3429	buffer.c	FUNCTION_59	ELSE_2	CALL_7
0x4005dca	    0x41b801000000	                              mov r8d, 1	      3429	buffer.c	FUNCTION_59	ELSE_2	CALL_7
0x4005dd0	          0x4889c7	                            mov rdi, rax	      3429	buffer.c	FUNCTION_59	ELSE_2	CALL_7
0x4005dd3	      0xe800000000	                          call 0x4005dd8	      3429	buffer.c	FUNCTION_59	ELSE_2	CALL_7
0x4005dd8	      0xe800000000	                          call 0x4005ddd	      3449	buffer.c	FUNCTION_59	CALL_20
0x4005ddd	            0x85c0	                           test eax, eax	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005ddf	            0x7522	                           jne 0x4005e03	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005de1	    0x488b05000000	            mov rax, qword [0x04005de8] 	      3449	buffer.c	FUNCTION_59	CALL_20
0x4005de8	          0x8b407c	            mov eax, dword [rax + 0x7c] 	      3449	buffer.c	FUNCTION_59	CALL_20
0x4005deb	          0x83e058	                           and eax, 0x58	      3449	buffer.c	FUNCTION_59	CALL_20
0x4005dee	            0x85c0	                           test eax, eax	      3449	buffer.c	FUNCTION_59	CALL_20
0x4005df0	            0x7511	                           jne 0x4005e03	      3449	buffer.c	FUNCTION_59	CALL_20
0x4005df2	    0x488b05000000	            mov rax, qword [0x04005df9] 	      3450	buffer.c	FUNCTION_59
0x4005df9	    0x8b8060150000	          mov eax, dword [rax + 0x1560] 	      3450	buffer.c	FUNCTION_59
0x4005dff	            0x85c0	                           test eax, eax	      3450	buffer.c	FUNCTION_59
0x4005e01	            0x7408	                            je 0x4005e0b	      3450	buffer.c	FUNCTION_59
0x4005e03	    0x41bf00000000	                             mov r15d, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005e09	            0xeb06	                           jmp 0x4005e11	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005e0b	    0x41bf00000000	                             mov r15d, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005e11	    0x488b05000000	            mov rax, qword [0x04005e18] 	      3447	buffer.c	FUNCTION_59	CALL_18
0x4005e18	    0x8b8060150000	          mov eax, dword [rax + 0x1560] 	      3447	buffer.c	FUNCTION_59	CALL_18
0x4005e1e	            0x85c0	                           test eax, eax	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005e20	            0x742c	                            je 0x4005e4e	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005e22	      0xbf72000000	                           mov edi, 0x72	      3447	buffer.c	FUNCTION_59	CALL_18
0x4005e27	      0xe800000000	                          call 0x4005e2c	      3447	buffer.c	FUNCTION_59	CALL_18
0x4005e2c	            0x85c0	                           test eax, eax	      3448	buffer.c	FUNCTION_59	CALL_19
0x4005e2e	            0x740f	                            je 0x4005e3f	      3448	buffer.c	FUNCTION_59	CALL_19
0x4005e30	      0xbf00000000	                              mov edi, 0	      3448	buffer.c	FUNCTION_59	CALL_19
0x4005e35	      0xe800000000	                          call 0x4005e3a	      3448	buffer.c	FUNCTION_59	CALL_19
0x4005e3a	          0x4889c3	                            mov rbx, rax	      3448	buffer.c	FUNCTION_59	CALL_19
0x4005e3d	            0xeb14	                           jmp 0x4005e53	      3448	buffer.c	FUNCTION_59	CALL_19
0x4005e3f	      0xbf00000000	                              mov edi, 0	      3448	buffer.c	FUNCTION_59	CALL_19
0x4005e44	      0xe800000000	                          call 0x4005e49	      3448	buffer.c	FUNCTION_59	CALL_19
0x4005e49	          0x4889c3	                            mov rbx, rax	      3448	buffer.c	FUNCTION_59	CALL_19
0x4005e4c	            0xeb05	                           jmp 0x4005e53	      3448	buffer.c	FUNCTION_59	CALL_19
0x4005e4e	      0xbb00000000	                              mov ebx, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005e53	    0x488b05000000	            mov rax, qword [0x04005e5a] 	      3446	buffer.c	FUNCTION_59	CALL_16
0x4005e5a	          0x8b407c	            mov eax, dword [rax + 0x7c] 	      3446	buffer.c	FUNCTION_59	CALL_16
0x4005e5d	          0x83e040	                           and eax, 0x40	      3446	buffer.c	FUNCTION_59	CALL_16
0x4005e60	            0x85c0	                           test eax, eax	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005e62	            0x740f	                            je 0x4005e73	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005e64	      0xbf00000000	                              mov edi, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005e69	      0xe800000000	                          call 0x4005e6e	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005e6e	          0x4989c4	                            mov r12, rax	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005e71	            0xeb06	                           jmp 0x4005e79	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005e73	    0x41bc00000000	                             mov r12d, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005e79	    0x488b05000000	            mov rax, qword [0x04005e80] 	      3441	buffer.c	FUNCTION_59
0x4005e80	          0x8b407c	            mov eax, dword [rax + 0x7c] 	      3441	buffer.c	FUNCTION_59
0x4005e83	          0x83e010	                           and eax, 0x10	      3441	buffer.c	FUNCTION_59
0x4005e86	            0x85c0	                           test eax, eax	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005e88	            0x7422	                            je 0x4005eac	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005e8a	    0x488b05000000	            mov rax, qword [0x04005e91] 	      3443	buffer.c	FUNCTION_59	CALL_14
0x4005e91	          0x4889c7	                            mov rdi, rax	      3443	buffer.c	FUNCTION_59	CALL_14
0x4005e94	      0xe800000000	                          call 0x4005e99	      3443	buffer.c	FUNCTION_59	CALL_14
0x4005e99	            0x85c0	                           test eax, eax	      3443	buffer.c	FUNCTION_59	CALL_14
0x4005e9b	            0x750f	                           jne 0x4005eac	      3443	buffer.c	FUNCTION_59	CALL_14
0x4005e9d	      0xbf00000000	                              mov edi, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005ea2	      0xe800000000	                          call 0x4005ea7	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005ea7	          0x4989c6	                            mov r14, rax	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005eaa	            0xeb06	                           jmp 0x4005eb2	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005eac	    0x41be00000000	                             mov r14d, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005eb2	    0x488b05000000	            mov rax, qword [0x04005eb9] 	      3436	buffer.c	FUNCTION_59
0x4005eb9	          0x8b407c	            mov eax, dword [rax + 0x7c] 	      3436	buffer.c	FUNCTION_59
0x4005ebc	          0x83e008	                              and eax, 8	      3436	buffer.c	FUNCTION_59
0x4005ebf	            0x85c0	                           test eax, eax	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005ec1	            0x7422	                            je 0x4005ee5	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005ec3	    0x488b05000000	            mov rax, qword [0x04005eca] 	      3438	buffer.c	FUNCTION_59	CALL_12
0x4005eca	          0x4889c7	                            mov rdi, rax	      3438	buffer.c	FUNCTION_59	CALL_12
0x4005ecd	      0xe800000000	                          call 0x4005ed2	      3438	buffer.c	FUNCTION_59	CALL_12
0x4005ed2	            0x85c0	                           test eax, eax	      3438	buffer.c	FUNCTION_59	CALL_12
0x4005ed4	            0x750f	                           jne 0x4005ee5	      3438	buffer.c	FUNCTION_59	CALL_12
0x4005ed6	      0xbf00000000	                              mov edi, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005edb	      0xe800000000	                          call 0x4005ee0	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005ee0	          0x4989c5	                            mov r13, rax	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005ee3	            0xeb06	                           jmp 0x4005eeb	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005ee5	    0x41bd00000000	                             mov r13d, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005eeb	      0xe800000000	                          call 0x4005ef0	      3434	buffer.c	FUNCTION_59	CALL_10
0x4005ef0	            0x85c0	                           test eax, eax	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005ef2	            0x7421	                            je 0x4005f15	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005ef4	      0xbf6d000000	                           mov edi, 0x6d	      3434	buffer.c	FUNCTION_59	CALL_10
0x4005ef9	      0xe800000000	                          call 0x4005efe	      3434	buffer.c	FUNCTION_59	CALL_10
0x4005efe	            0x85c0	                           test eax, eax	      3435	buffer.c	FUNCTION_59	CALL_11
0x4005f00	            0x750c	                           jne 0x4005f0e	      3435	buffer.c	FUNCTION_59	CALL_11
0x4005f02	      0xbf00000000	                              mov edi, 0	      3435	buffer.c	FUNCTION_59	CALL_11
0x4005f07	      0xe800000000	                          call 0x4005f0c	      3435	buffer.c	FUNCTION_59	CALL_11
0x4005f0c	            0xeb0c	                           jmp 0x4005f1a	      3435	buffer.c	FUNCTION_59	CALL_11
0x4005f0e	      0xb800000000	                              mov eax, 0	      3435	buffer.c	FUNCTION_59	CALL_11
0x4005f13	            0xeb05	                           jmp 0x4005f1a	      3435	buffer.c	FUNCTION_59	CALL_11
0x4005f15	      0xb800000000	                              mov eax, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005f1a	        0x488b7dc0	             mov rdi, qword [rbp - 0x40]	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005f1e	        0x4883ec08	                              sub rsp, 8	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005f22	            0x4157	                                push r15	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005f24	              0x53	                                push rbx	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005f25	            0x4154	                                push r12	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005f27	          0x4d89f1	                             mov r9, r14	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005f2a	          0x4d89e8	                             mov r8, r13	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005f2d	          0x4889c1	                            mov rcx, rax	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005f30	      0xba00000000	                              mov edx, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005f35	      0xbe01040000	                          mov esi, 0x401	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005f3a	      0xb800000000	                              mov eax, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005f3f	      0xe800000000	                          call 0x4005f44	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005f44	        0x4883c420	                           add rsp, 0x20	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005f48	    0x488b05000000	            mov rax, qword [0x04005f4f] 	      3454	buffer.c	FUNCTION_59	IF_5
0x4005f4f	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3454	buffer.c	FUNCTION_59	IF_5
0x4005f53	    0x483d40420f00	                        cmp rax, 0xf4240	      3454	buffer.c	FUNCTION_59	IF_5
0x4005f59	            0x7e4a	                           jle 0x4005fa5	      3454	buffer.c	FUNCTION_59	IF_5
0x4005f5b	    0x488b05000000	            mov rax, qword [0x04005f62] 	      3455	buffer.c	FUNCTION_59	IF_5
0x4005f62	        0x488b7038	            mov rsi, qword [rax + 0x38] 	      3455	buffer.c	FUNCTION_59	IF_5
0x4005f66	    0x488b05000000	            mov rax, qword [0x04005f6d] 	      3456	buffer.c	FUNCTION_59	IF_5
0x4005f6d	          0x488b08	                    mov rcx, qword [rax]	      3456	buffer.c	FUNCTION_59	IF_5
0x4005f70	    0x48ba0bd7a370	          movabs rdx, 0xa3d70a3d70a3d70b	      3456	buffer.c	FUNCTION_59	IF_5
0x4005f7a	          0x4889c8	                            mov rax, rcx	      3456	buffer.c	FUNCTION_59	IF_5
0x4005f7d	          0x48f7ea	                                imul rdx	      3456	buffer.c	FUNCTION_59	IF_5
0x4005f80	        0x488d040a	                    lea rax, [rdx + rcx]	      3456	buffer.c	FUNCTION_59	IF_5
0x4005f84	        0x48c1f806	                              sar rax, 6	      3456	buffer.c	FUNCTION_59	IF_5
0x4005f88	          0x4889c2	                            mov rdx, rax	      3456	buffer.c	FUNCTION_59	IF_5
0x4005f8b	          0x4889c8	                            mov rax, rcx	      3456	buffer.c	FUNCTION_59	IF_5
0x4005f8e	        0x48c1f83f	                           sar rax, 0x3f	      3456	buffer.c	FUNCTION_59	IF_5
0x4005f92	          0x4889d3	                            mov rbx, rdx	      3456	buffer.c	FUNCTION_59	IF_5
0x4005f95	          0x4829c3	                            sub rbx, rax	      3456	buffer.c	FUNCTION_59	IF_5
0x4005f98	          0x4889f0	                            mov rax, rsi	      3455	buffer.c	FUNCTION_59	IF_5
0x4005f9b	            0x4899	                                     cqo	      3455	buffer.c	FUNCTION_59	IF_5
0x4005f9d	          0x48f7fb	                                idiv rbx	      3455	buffer.c	FUNCTION_59	IF_5
0x4005fa0	          0x8945ac	             mov dword [rbp - 0x54], eax	      3455	buffer.c	FUNCTION_59	IF_5
0x4005fa3	            0xeb3c	                           jmp 0x4005fe1	      3455	buffer.c	FUNCTION_59	IF_5
0x4005fa5	    0x488b05000000	            mov rax, qword [0x04005fac] 	      3458	buffer.c	FUNCTION_59	ELSE_4
0x4005fac	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3458	buffer.c	FUNCTION_59	ELSE_4
0x4005fb0	          0x4889d0	                            mov rax, rdx	      3458	buffer.c	FUNCTION_59	ELSE_4
0x4005fb3	        0x48c1e002	                              shl rax, 2	      3458	buffer.c	FUNCTION_59	ELSE_4
0x4005fb7	          0x4801d0	                            add rax, rdx	      3458	buffer.c	FUNCTION_59	ELSE_4
0x4005fba	    0x488d14850000	                        lea rdx, [rax*4]	      3458	buffer.c	FUNCTION_59	ELSE_4
0x4005fc2	          0x4801d0	                            add rax, rdx	      3458	buffer.c	FUNCTION_59	ELSE_4
0x4005fc5	        0x48c1e002	                              shl rax, 2	      3458	buffer.c	FUNCTION_59	ELSE_4
0x4005fc9	          0x4889c1	                            mov rcx, rax	      3458	buffer.c	FUNCTION_59	ELSE_4
0x4005fcc	    0x488b05000000	            mov rax, qword [0x04005fd3] 	      3459	buffer.c	FUNCTION_59	ELSE_4
0x4005fd3	          0x488b18	                    mov rbx, qword [rax]	      3459	buffer.c	FUNCTION_59	ELSE_4
0x4005fd6	          0x4889c8	                            mov rax, rcx	      3458	buffer.c	FUNCTION_59	ELSE_4
0x4005fd9	            0x4899	                                     cqo	      3458	buffer.c	FUNCTION_59	ELSE_4
0x4005fdb	          0x48f7fb	                                idiv rbx	      3458	buffer.c	FUNCTION_59	ELSE_4
0x4005fde	          0x8945ac	             mov dword [rbp - 0x54], eax	      3458	buffer.c	FUNCTION_59	ELSE_4
0x4005fe1	    0x488b05000000	            mov rax, qword [0x04005fe8] 	      3460	buffer.c	FUNCTION_59	IF_6
0x4005fe8	          0x8b4010	            mov eax, dword [rax + 0x10] 	      3460	buffer.c	FUNCTION_59	IF_6
0x4005feb	          0x83e001	                              and eax, 1	      3460	buffer.c	FUNCTION_59	IF_6
0x4005fee	            0x85c0	                           test eax, eax	      3460	buffer.c	FUNCTION_59	IF_6
0x4005ff0	            0x7430	                            je 0x4006022	      3460	buffer.c	FUNCTION_59	IF_6
0x4005ff2	      0xbf00000000	                              mov edi, 0	      3462	buffer.c	FUNCTION_59	IF_6	CALL_22
0x4005ff7	      0xe800000000	                          call 0x4005ffc	      3462	buffer.c	FUNCTION_59	IF_6	CALL_22
0x4005ffc	          0x4889c2	                            mov rdx, rax	      3462	buffer.c	FUNCTION_59	IF_6	CALL_22
0x4005fff	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3462	buffer.c	FUNCTION_59	IF_6	CALL_22
0x4006003	          0x4889d1	                            mov rcx, rdx	      3462	buffer.c	FUNCTION_59	IF_6	CALL_22
0x4006006	      0xba00000000	                              mov edx, 0	      3462	buffer.c	FUNCTION_59	IF_6	CALL_22
0x400600b	      0xbe01040000	                          mov esi, 0x401	      3462	buffer.c	FUNCTION_59	IF_6	CALL_22
0x4006010	          0x4889c7	                            mov rdi, rax	      3462	buffer.c	FUNCTION_59	IF_6	CALL_22
0x4006013	      0xb800000000	                              mov eax, 0	      3462	buffer.c	FUNCTION_59	IF_6	CALL_22
0x4006018	      0xe800000000	                          call 0x400601d	      3462	buffer.c	FUNCTION_59	IF_6	CALL_22
0x400601d	      0xe91d010000	                           jmp 0x400613f	      3462	buffer.c	FUNCTION_59	IF_6	CALL_22
0x4006022	    0x8b0500000000	            mov eax, dword [0x04006028] 	      3465	buffer.c	FUNCTION_59	ELSE_5	IF_7
0x4006028	            0x85c0	                           test eax, eax	      3465	buffer.c	FUNCTION_59	ELSE_5	IF_7
0x400602a	            0x747e	                            je 0x40060aa	      3465	buffer.c	FUNCTION_59	ELSE_5	IF_7
0x400602c	    0x488b05000000	            mov rax, qword [0x04006033] 	      3468	buffer.c	FUNCTION_59	ELSE_5	IF_7	IF_8
0x4006033	          0x488b00	                    mov rax, qword [rax]	      3468	buffer.c	FUNCTION_59	ELSE_5	IF_7	IF_8
0x4006036	        0x4883f801	                              cmp rax, 1	      3468	buffer.c	FUNCTION_59	ELSE_5	IF_7	IF_8
0x400603a	            0x7530	                           jne 0x400606c	      3468	buffer.c	FUNCTION_59	ELSE_5	IF_7	IF_8
0x400603c	      0xbf00000000	                              mov edi, 0	      3469	buffer.c	FUNCTION_59	ELSE_5	IF_7	CALL_24
0x4006041	      0xe800000000	                          call 0x4006046	      3469	buffer.c	FUNCTION_59	ELSE_5	IF_7	CALL_24
0x4006046	          0x4889c6	                            mov rsi, rax	      3469	buffer.c	FUNCTION_59	ELSE_5	IF_7	CALL_24
0x4006049	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      3469	buffer.c	FUNCTION_59	ELSE_5	IF_7	CALL_24
0x400604c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3469	buffer.c	FUNCTION_59	ELSE_5	IF_7	CALL_24
0x4006050	            0x89d1	                            mov ecx, edx	      3469	buffer.c	FUNCTION_59	ELSE_5	IF_7	CALL_24
0x4006052	          0x4889f2	                            mov rdx, rsi	      3469	buffer.c	FUNCTION_59	ELSE_5	IF_7	CALL_24
0x4006055	      0xbe01040000	                          mov esi, 0x401	      3469	buffer.c	FUNCTION_59	ELSE_5	IF_7	CALL_24
0x400605a	          0x4889c7	                            mov rdi, rax	      3469	buffer.c	FUNCTION_59	ELSE_5	IF_7	CALL_24
0x400605d	      0xb800000000	                              mov eax, 0	      3469	buffer.c	FUNCTION_59	ELSE_5	IF_7	CALL_24
0x4006062	      0xe800000000	                          call 0x4006067	      3469	buffer.c	FUNCTION_59	ELSE_5	IF_7	CALL_24
0x4006067	      0xe9d3000000	                           jmp 0x400613f	      3469	buffer.c	FUNCTION_59	ELSE_5	IF_7	CALL_24
0x400606c	    0x488b05000000	            mov rax, qword [0x04006073] 	      3472	buffer.c	FUNCTION_59	ELSE_5	IF_7	ELSE_6
0x4006073	          0x488b18	                    mov rbx, qword [rax]	      3472	buffer.c	FUNCTION_59	ELSE_5	IF_7	ELSE_6
0x4006076	      0xbf00000000	                              mov edi, 0	      3471	buffer.c	FUNCTION_59	ELSE_5	IF_7	ELSE_6	CALL_26
0x400607b	      0xe800000000	                          call 0x4006080	      3471	buffer.c	FUNCTION_59	ELSE_5	IF_7	ELSE_6	CALL_26
0x4006080	          0x4889c6	                            mov rsi, rax	      3471	buffer.c	FUNCTION_59	ELSE_5	IF_7	ELSE_6	CALL_26
0x4006083	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      3471	buffer.c	FUNCTION_59	ELSE_5	IF_7	ELSE_6	CALL_26
0x4006086	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3471	buffer.c	FUNCTION_59	ELSE_5	IF_7	ELSE_6	CALL_26
0x400608a	          0x4189d0	                            mov r8d, edx	      3471	buffer.c	FUNCTION_59	ELSE_5	IF_7	ELSE_6	CALL_26
0x400608d	          0x4889d9	                            mov rcx, rbx	      3471	buffer.c	FUNCTION_59	ELSE_5	IF_7	ELSE_6	CALL_26
0x4006090	          0x4889f2	                            mov rdx, rsi	      3471	buffer.c	FUNCTION_59	ELSE_5	IF_7	ELSE_6	CALL_26
0x4006093	      0xbe01040000	                          mov esi, 0x401	      3471	buffer.c	FUNCTION_59	ELSE_5	IF_7	ELSE_6	CALL_26
0x4006098	          0x4889c7	                            mov rdi, rax	      3471	buffer.c	FUNCTION_59	ELSE_5	IF_7	ELSE_6	CALL_26
0x400609b	      0xb800000000	                              mov eax, 0	      3471	buffer.c	FUNCTION_59	ELSE_5	IF_7	ELSE_6	CALL_26
0x40060a0	      0xe800000000	                          call 0x40060a5	      3471	buffer.c	FUNCTION_59	ELSE_5	IF_7	ELSE_6	CALL_26
0x40060a5	      0xe995000000	                           jmp 0x400613f	      3471	buffer.c	FUNCTION_59	ELSE_5	IF_7	ELSE_6	CALL_26
0x40060aa	    0x488b05000000	            mov rax, qword [0x040060b1] 	      3480	buffer.c	FUNCTION_59	ELSE_7
0x40060b1	          0x4c8b20	                    mov r12, qword [rax]	      3480	buffer.c	FUNCTION_59	ELSE_7
0x40060b4	    0x488b05000000	            mov rax, qword [0x040060bb] 	      3479	buffer.c	FUNCTION_59	ELSE_7
0x40060bb	        0x488b5838	            mov rbx, qword [rax + 0x38] 	      3479	buffer.c	FUNCTION_59	ELSE_7
0x40060bf	      0xbf00000000	                              mov edi, 0	      3477	buffer.c	FUNCTION_59	ELSE_7	CALL_27
0x40060c4	      0xe800000000	                          call 0x40060c9	      3477	buffer.c	FUNCTION_59	ELSE_7	CALL_27
0x40060c9	          0x4889c6	                            mov rsi, rax	      3477	buffer.c	FUNCTION_59	ELSE_7	CALL_27
0x40060cc	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      3477	buffer.c	FUNCTION_59	ELSE_7	CALL_27
0x40060cf	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3477	buffer.c	FUNCTION_59	ELSE_7	CALL_27
0x40060d3	          0x4189d1	                            mov r9d, edx	      3477	buffer.c	FUNCTION_59	ELSE_7	CALL_27
0x40060d6	          0x4d89e0	                             mov r8, r12	      3477	buffer.c	FUNCTION_59	ELSE_7	CALL_27
0x40060d9	          0x4889d9	                            mov rcx, rbx	      3477	buffer.c	FUNCTION_59	ELSE_7	CALL_27
0x40060dc	          0x4889f2	                            mov rdx, rsi	      3477	buffer.c	FUNCTION_59	ELSE_7	CALL_27
0x40060df	      0xbe01040000	                          mov esi, 0x401	      3477	buffer.c	FUNCTION_59	ELSE_7	CALL_27
0x40060e4	          0x4889c7	                            mov rdi, rax	      3477	buffer.c	FUNCTION_59	ELSE_7	CALL_27
0x40060e7	      0xb800000000	                              mov eax, 0	      3477	buffer.c	FUNCTION_59	ELSE_7	CALL_27
0x40060ec	      0xe800000000	                          call 0x40060f1	      3477	buffer.c	FUNCTION_59	ELSE_7	CALL_27
0x40060f1	      0xe800000000	                          call 0x40060f6	      3482	buffer.c	FUNCTION_59	ELSE_7	CALL_29
0x40060f6	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3483	buffer.c	FUNCTION_59	ELSE_7	CALL_30
0x40060fa	          0x4889c7	                            mov rdi, rax	      3483	buffer.c	FUNCTION_59	ELSE_7	CALL_30
0x40060fd	      0xe800000000	                          call 0x4006102	      3483	buffer.c	FUNCTION_59	ELSE_7	CALL_30
0x4006102	        0x488945c8	             mov qword [rbp - 0x38], rax	      3483	buffer.c	FUNCTION_59	ELSE_7	CALL_30
0x4006106	    0x488b05000000	            mov rax, qword [0x0400610d] 	      3485	buffer.c	FUNCTION_59	ELSE_7
0x400610d	    0x8b80d8000000	            mov eax, dword [rax + 0xd8] 	      3485	buffer.c	FUNCTION_59	ELSE_7
0x4006113	          0x8d4801	                      lea ecx, [rax + 1]	      3484	buffer.c	FUNCTION_59	ELSE_7	CALL_31
0x4006116	    0x488b05000000	            mov rax, qword [0x0400611d] 	      3485	buffer.c	FUNCTION_59	ELSE_7
0x400611d	          0x8b4040	            mov eax, dword [rax + 0x40] 	      3485	buffer.c	FUNCTION_59	ELSE_7
0x4006120	          0x8d5001	                      lea edx, [rax + 1]	      3484	buffer.c	FUNCTION_59	ELSE_7	CALL_31
0x4006123	      0xb801040000	                          mov eax, 0x401	      3484	buffer.c	FUNCTION_59	ELSE_7	CALL_31
0x4006128	        0x482b45c8	             sub rax, qword [rbp - 0x38]	      3484	buffer.c	FUNCTION_59	ELSE_7	CALL_31
0x400612c	        0x488b7dc0	             mov rdi, qword [rbp - 0x40]	      3484	buffer.c	FUNCTION_59	ELSE_7	CALL_31
0x4006130	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	      3484	buffer.c	FUNCTION_59	ELSE_7	CALL_31
0x4006134	          0x4801f7	                            add rdi, rsi	      3484	buffer.c	FUNCTION_59	ELSE_7	CALL_31
0x4006137	          0x4889c6	                            mov rsi, rax	      3484	buffer.c	FUNCTION_59	ELSE_7	CALL_31
0x400613a	      0xe800000000	                          call 0x400613f	      3484	buffer.c	FUNCTION_59	ELSE_7	CALL_31
0x400613f	      0xbf66000000	                           mov edi, 0x66	      3488	buffer.c	FUNCTION_59	CALL_33
0x4006144	      0xe800000000	                          call 0x4006149	      3488	buffer.c	FUNCTION_59	CALL_33
0x4006149	            0x85c0	                           test eax, eax	      3488	buffer.c	FUNCTION_59	CALL_33
0x400614b	           0xf94c0	                                 sete al	      3488	buffer.c	FUNCTION_59	CALL_33
0x400614e	           0xfb6d0	                           movzx edx, al	      3488	buffer.c	FUNCTION_59	CALL_33
0x4006151	    0x488b05000000	            mov rax, qword [0x04006158] 	      3488	buffer.c	FUNCTION_59	CALL_33
0x4006158	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	      3488	buffer.c	FUNCTION_59	CALL_33
0x400615c	            0x89d1	                            mov ecx, edx	      3488	buffer.c	FUNCTION_59	CALL_33
0x400615e	      0xba01040000	                          mov edx, 0x401	      3488	buffer.c	FUNCTION_59	CALL_33
0x4006163	          0x4889c7	                            mov rdi, rax	      3488	buffer.c	FUNCTION_59	CALL_33
0x4006166	      0xe8db3a0000	              call sym.append_arg_number	      3488	buffer.c	FUNCTION_59	CALL_33
0x400616b	        0x837d9400	               cmp dword [rbp - 0x6c], 0	      3490	buffer.c	FUNCTION_59	IF_9
0x400616f	            0x742f	                            je 0x40061a0	      3490	buffer.c	FUNCTION_59	IF_9
0x4006171	      0xe800000000	                          call 0x4006176	      3494	buffer.c	FUNCTION_59	IF_9	CALL_34
0x4006176	    0x8b0500000000	            mov eax, dword [0x0400617c] 	      3495	buffer.c	FUNCTION_59	IF_9
0x400617c	          0x8945ac	             mov dword [rbp - 0x54], eax	      3495	buffer.c	FUNCTION_59	IF_9
0x400617f	    0xc70500000000	               mov dword [0x04006189], 1	      3496	buffer.c	FUNCTION_59	IF_9
0x4006189	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3497	buffer.c	FUNCTION_59	IF_9	CALL_35
0x400618d	          0x4889c7	                            mov rdi, rax	      3497	buffer.c	FUNCTION_59	IF_9	CALL_35
0x4006190	      0xe800000000	                          call 0x4006195	      3497	buffer.c	FUNCTION_59	IF_9	CALL_35
0x4006195	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      3498	buffer.c	FUNCTION_59	IF_9
0x4006198	    0x890500000000	            mov dword [0x0400619e], eax 	      3498	buffer.c	FUNCTION_59	IF_9
0x400619e	            0xeb49	                           jmp 0x40061e9	      3498	buffer.c	FUNCTION_59	IF_9
0x40061a0	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3502	buffer.c	FUNCTION_59	ELSE_8	CALL_36
0x40061a4	      0xba00000000	                              mov edx, 0	      3502	buffer.c	FUNCTION_59	ELSE_8	CALL_36
0x40061a9	      0xbe00000000	                              mov esi, 0	      3502	buffer.c	FUNCTION_59	ELSE_8	CALL_36
0x40061ae	          0x4889c7	                            mov rdi, rax	      3502	buffer.c	FUNCTION_59	ELSE_8	CALL_36
0x40061b1	      0xe800000000	                          call 0x40061b6	      3502	buffer.c	FUNCTION_59	ELSE_8	CALL_36
0x40061b6	        0x488945b8	             mov qword [rbp - 0x48], rax	      3502	buffer.c	FUNCTION_59	ELSE_8	CALL_36
0x40061ba	    0x8b0500000000	            mov eax, dword [0x040061c0] 	      3503	buffer.c	FUNCTION_59	ELSE_8	IF_10
0x40061c0	            0x85c0	                           test eax, eax	      3503	buffer.c	FUNCTION_59	ELSE_8	IF_10
0x40061c2	            0x7514	                           jne 0x40061d8	      3503	buffer.c	FUNCTION_59	ELSE_8	IF_10
0x40061c4	    0x8b0500000000	            mov eax, dword [0x040061ca] 	      3503	buffer.c	FUNCTION_59	ELSE_8	IF_10
0x40061ca	            0x85c0	                           test eax, eax	      3503	buffer.c	FUNCTION_59	ELSE_8	IF_10
0x40061cc	            0x741b	                            je 0x40061e9	      3503	buffer.c	FUNCTION_59	ELSE_8	IF_10
0x40061ce	    0x8b0500000000	            mov eax, dword [0x040061d4] 	      3503	buffer.c	FUNCTION_59	ELSE_8	IF_10
0x40061d4	            0x85c0	                           test eax, eax	      3503	buffer.c	FUNCTION_59	ELSE_8	IF_10
0x40061d6	            0x7511	                           jne 0x40061e9	      3503	buffer.c	FUNCTION_59	ELSE_8	IF_10
0x40061d8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3509	buffer.c	FUNCTION_59	ELSE_8	CALL_37
0x40061dc	      0xbe00000000	                              mov esi, 0	      3509	buffer.c	FUNCTION_59	ELSE_8	CALL_37
0x40061e1	          0x4889c7	                            mov rdi, rax	      3509	buffer.c	FUNCTION_59	ELSE_8	CALL_37
0x40061e4	      0xe800000000	                          call 0x40061e9	      3509	buffer.c	FUNCTION_59	ELSE_8	CALL_37
0x40061e9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3512	buffer.c	FUNCTION_59	CALL_38
0x40061ed	          0x4889c7	                            mov rdi, rax	      3512	buffer.c	FUNCTION_59	CALL_38
0x40061f0	      0xe800000000	                          call 0x40061f5	      3512	buffer.c	FUNCTION_59	CALL_38
0x40061f5	            0xeb01	                           jmp 0x40061f8	      3512	buffer.c	FUNCTION_59	CALL_38
0x40061f7	              0x90	                                     nop	      3410	buffer.c	FUNCTION_59	IF_1
0x40061f8	        0x488d65d8	                   lea rsp, [rbp - 0x28]	      3513	buffer.c	FUNCTION_59
0x40061fc	              0x5b	                                 pop rbx	      3513	buffer.c	FUNCTION_59
0x40061fd	            0x415c	                                 pop r12	      3513	buffer.c	FUNCTION_59
0x40061ff	            0x415d	                                 pop r13	      3513	buffer.c	FUNCTION_59
0x4006201	            0x415e	                                 pop r14	      3513	buffer.c	FUNCTION_59
0x4006203	            0x415f	                                 pop r15	      3513	buffer.c	FUNCTION_59
0x4006205	              0x5d	                                 pop rbp	      3513	buffer.c	FUNCTION_59
0x4006206	              0xc3	                                     ret	      3513	buffer.c	FUNCTION_59
buf_same_ino	CALL,0:functions,0:SWITCH,0:FOR,0:ELSE,0:DO,0:WHILE,0:IF,0	25
0x4005c10	              0x55	                                push rbp	      3386	buffer.c	ELSE_1	FUNCTION_58
0x4005c11	          0x4889e5	                            mov rbp, rsp	      3386	buffer.c	ELSE_1	FUNCTION_58
0x4005c14	        0x48897df8	                mov qword [rbp - 8], rdi	      3386	buffer.c	ELSE_1	FUNCTION_58
0x4005c18	        0x488975f0	             mov qword [rbp - 0x10], rsi	      3386	buffer.c	ELSE_1	FUNCTION_58
0x4005c1c	        0x488b45f8	                mov rax, qword [rbp - 8]	      3387	buffer.c	ELSE_1	FUNCTION_58
0x4005c20	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      3387	buffer.c	ELSE_1	FUNCTION_58
0x4005c26	            0x85c0	                           test eax, eax	      3389	buffer.c	ELSE_1	FUNCTION_58
0x4005c28	            0x7436	                            je 0x4005c60	      3389	buffer.c	ELSE_1	FUNCTION_58
0x4005c2a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3388	buffer.c	ELSE_1	FUNCTION_58
0x4005c2e	          0x488b10	                    mov rdx, qword [rax]	      3388	buffer.c	ELSE_1	FUNCTION_58
0x4005c31	        0x488b45f8	                mov rax, qword [rbp - 8]	      3388	buffer.c	ELSE_1	FUNCTION_58
0x4005c35	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	      3388	buffer.c	ELSE_1	FUNCTION_58
0x4005c3c	          0x4839c2	                            cmp rdx, rax	      3388	buffer.c	ELSE_1	FUNCTION_58
0x4005c3f	            0x751f	                           jne 0x4005c60	      3388	buffer.c	ELSE_1	FUNCTION_58
0x4005c41	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3389	buffer.c	ELSE_1	FUNCTION_58
0x4005c45	        0x488b5008	                mov rdx, qword [rax + 8]	      3389	buffer.c	ELSE_1	FUNCTION_58
0x4005c49	        0x488b45f8	                mov rax, qword [rbp - 8]	      3389	buffer.c	ELSE_1	FUNCTION_58
0x4005c4d	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	      3389	buffer.c	ELSE_1	FUNCTION_58
0x4005c54	          0x4839c2	                            cmp rdx, rax	      3389	buffer.c	ELSE_1	FUNCTION_58
0x4005c57	            0x7507	                           jne 0x4005c60	      3389	buffer.c	ELSE_1	FUNCTION_58
0x4005c59	      0xb801000000	                              mov eax, 1	      3389	buffer.c	ELSE_1	FUNCTION_58
0x4005c5e	            0xeb05	                           jmp 0x4005c65	      3389	buffer.c	ELSE_1	FUNCTION_58
0x4005c60	      0xb800000000	                              mov eax, 0	      3389	buffer.c	ELSE_1	FUNCTION_58
0x4005c65	              0x5d	                                 pop rbp	      3390	buffer.c	ELSE_1	FUNCTION_58
0x4005c66	              0xc3	                                     ret	      3390	buffer.c	ELSE_1	FUNCTION_58
free_buffer	CALL,14:functions,0:SWITCH,0:FOR,0:ELSE,1:DO,0:WHILE,0:IF,1	49
0x40013e4	              0x55	                                push rbp	       822	buffer.c	FUNCTION_11
0x40013e5	          0x4889e5	                            mov rbp, rsp	       822	buffer.c	FUNCTION_11
0x40013e8	        0x4883ec10	                           sub rsp, 0x10	       822	buffer.c	FUNCTION_11
0x40013ec	        0x48897df8	                mov qword [rbp - 8], rdi	       822	buffer.c	FUNCTION_11
0x40013f0	    0x8b0500000000	            mov eax, dword [0x040013f6] 	       823	buffer.c	FUNCTION_11
0x40013f6	          0x83c001	                              add eax, 1	       823	buffer.c	FUNCTION_11
0x40013f9	    0x890500000000	            mov dword [0x040013ff], eax 	       823	buffer.c	FUNCTION_11
0x40013ff	        0x488b45f8	                mov rax, qword [rbp - 8]	       824	buffer.c	FUNCTION_11	CALL_1
0x4001403	      0xbe01000000	                              mov esi, 1	       824	buffer.c	FUNCTION_11	CALL_1
0x4001408	          0x4889c7	                            mov rdi, rax	       824	buffer.c	FUNCTION_11	CALL_1
0x400140b	      0xe814010000	              call sym.free_buffer_stuff	       824	buffer.c	FUNCTION_11	CALL_1
0x4001410	        0x488b45f8	                mov rax, qword [rbp - 8]	       827	buffer.c	FUNCTION_11	CALL_2
0x4001414	    0x488d90d00000	                   lea rdx, [rax + 0xd0]	       827	buffer.c	FUNCTION_11	CALL_2
0x400141b	        0x488b45f8	                mov rax, qword [rbp - 8]	       827	buffer.c	FUNCTION_11	CALL_2
0x400141f	    0x488b80301700	          mov rax, qword [rax + 0x1730] 	       827	buffer.c	FUNCTION_11	CALL_2
0x4001426	          0x4889d6	                            mov rsi, rdx	       827	buffer.c	FUNCTION_11	CALL_2
0x4001429	          0x4889c7	                            mov rdi, rax	       827	buffer.c	FUNCTION_11	CALL_2
0x400142c	      0xe800000000	                          call 0x4001431	       827	buffer.c	FUNCTION_11	CALL_2
0x4001431	        0x488b45f8	                mov rax, qword [rbp - 8]	       828	buffer.c	FUNCTION_11	CALL_3
0x4001435	    0x488b80301700	          mov rax, qword [rax + 0x1730] 	       828	buffer.c	FUNCTION_11	CALL_3
0x400143c	          0x4889c7	                            mov rdi, rax	       828	buffer.c	FUNCTION_11	CALL_3
0x400143f	      0xe800000000	                          call 0x4001444	       828	buffer.c	FUNCTION_11	CALL_3
0x4001444	        0x488b45f8	                mov rax, qword [rbp - 8]	       849	buffer.c	FUNCTION_11	CALL_10
0x4001448	          0x4889c7	                            mov rdi, rax	       849	buffer.c	FUNCTION_11	CALL_10
0x400144b	      0xe800000000	                          call 0x4001450	       849	buffer.c	FUNCTION_11	CALL_10
0x4001450	        0x488b45f8	                mov rax, qword [rbp - 8]	       852	buffer.c	FUNCTION_11	CALL_11
0x4001454	          0x4889c7	                            mov rdi, rax	       852	buffer.c	FUNCTION_11	CALL_11
0x4001457	      0xe800000000	                          call 0x400145c	       852	buffer.c	FUNCTION_11	CALL_11
0x400145c	        0x488b45f8	                mov rax, qword [rbp - 8]	       855	buffer.c	FUNCTION_11	CALL_12
0x4001460	          0x4889c7	                            mov rdi, rax	       855	buffer.c	FUNCTION_11	CALL_12
0x4001463	      0xe8daf4ffff	             call sym.buf_hashtab_remove	       855	buffer.c	FUNCTION_11	CALL_12
0x4001468	        0x488b45f8	                mov rax, qword [rbp - 8]	       857	buffer.c	FUNCTION_11	CALL_13
0x400146c	          0x4889c7	                            mov rdi, rax	       857	buffer.c	FUNCTION_11	CALL_13
0x400146f	      0xe800000000	                          call 0x4001474	       857	buffer.c	FUNCTION_11	CALL_13
0x4001474	    0x8b0500000000	            mov eax, dword [0x0400147a] 	       859	buffer.c	FUNCTION_11	IF_1
0x400147a	            0x85c0	                           test eax, eax	       859	buffer.c	FUNCTION_11	IF_1
0x400147c	            0x741c	                            je 0x400149a	       859	buffer.c	FUNCTION_11	IF_1
0x400147e	    0x488b15000000	            mov rdx, qword [0x04001485] 	       863	buffer.c	FUNCTION_11	IF_1
0x4001485	        0x488b45f8	                mov rax, qword [rbp - 8]	       863	buffer.c	FUNCTION_11	IF_1
0x4001489	        0x48895068	             mov qword [rax + 0x68], rdx	       863	buffer.c	FUNCTION_11	IF_1
0x400148d	        0x488b45f8	                mov rax, qword [rbp - 8]	       864	buffer.c	FUNCTION_11	IF_1
0x4001491	    0x488905000000	            mov qword [0x04001498], rax 	       864	buffer.c	FUNCTION_11	IF_1
0x4001498	            0xeb0c	                           jmp 0x40014a6	       868	buffer.c	FUNCTION_11
0x400149a	        0x488b45f8	                mov rax, qword [rbp - 8]	       867	buffer.c	FUNCTION_11	CALL_14
0x400149e	          0x4889c7	                            mov rdi, rax	       867	buffer.c	FUNCTION_11	CALL_14
0x40014a1	      0xe800000000	                          call 0x40014a6	       867	buffer.c	FUNCTION_11	CALL_14
0x40014a6	              0x90	                                     nop	       868	buffer.c	FUNCTION_11
0x40014a7	              0xc9	                                   leave	       868	buffer.c	FUNCTION_11
0x40014a8	              0xc3	                                     ret	       868	buffer.c	FUNCTION_11
buflist_altfpos	CALL,1:functions,0:SWITCH,0:FOR,0:ELSE,0:DO,0:WHILE,0:IF,0	16
0x40059a5	              0x55	                                push rbp	      3296	buffer.c	FUNCTION_54
0x40059a6	          0x4889e5	                            mov rbp, rsp	      3296	buffer.c	FUNCTION_54
0x40059a9	        0x4883ec10	                           sub rsp, 0x10	      3296	buffer.c	FUNCTION_54
0x40059ad	        0x48897df8	                mov qword [rbp - 8], rdi	      3296	buffer.c	FUNCTION_54
0x40059b1	        0x488b45f8	                mov rax, qword [rbp - 8]	      3297	buffer.c	FUNCTION_54	CALL_1
0x40059b5	          0x8b4840	            mov ecx, dword [rax + 0x40] 	      3297	buffer.c	FUNCTION_54	CALL_1
0x40059b8	        0x488b45f8	                mov rax, qword [rbp - 8]	      3297	buffer.c	FUNCTION_54	CALL_1
0x40059bc	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3297	buffer.c	FUNCTION_54	CALL_1
0x40059c0	    0x488b05000000	            mov rax, qword [0x040059c7] 	      3297	buffer.c	FUNCTION_54	CALL_1
0x40059c7	        0x488b75f8	                mov rsi, qword [rbp - 8]	      3297	buffer.c	FUNCTION_54	CALL_1
0x40059cb	    0x41b801000000	                              mov r8d, 1	      3297	buffer.c	FUNCTION_54	CALL_1
0x40059d1	          0x4889c7	                            mov rdi, rax	      3297	buffer.c	FUNCTION_54	CALL_1
0x40059d4	      0xe866efffff	                call sym.buflist_setfpos	      3297	buffer.c	FUNCTION_54	CALL_1
0x40059d9	              0x90	                                     nop	      3298	buffer.c	FUNCTION_54
0x40059da	              0xc9	                                   leave	      3298	buffer.c	FUNCTION_54
0x40059db	              0xc3	                                     ret	      3298	buffer.c	FUNCTION_54
buflist_findpat	CALL,15:functions,0:SWITCH,0:FOR,3:ELSE,3:DO,0:WHILE,0:IF,16	218
0x4003f38	              0x55	                                push rbp	      2435	buffer.c	FUNCTION_33
0x4003f39	          0x4889e5	                            mov rbp, rsp	      2435	buffer.c	FUNCTION_33
0x4003f3c	    0x4881ec200100	                          sub rsp, 0x120	      2435	buffer.c	FUNCTION_33
0x4003f43	    0x4889bdf8feff	            mov qword [rbp - 0x108], rdi	      2435	buffer.c	FUNCTION_33
0x4003f4a	    0x4889b5f0feff	            mov qword [rbp - 0x110], rsi	      2435	buffer.c	FUNCTION_33
0x4003f51	    0x8995ecfeffff	            mov dword [rbp - 0x114], edx	      2435	buffer.c	FUNCTION_33
0x4003f57	    0x898de8feffff	            mov dword [rbp - 0x118], ecx	      2435	buffer.c	FUNCTION_33
0x4003f5d	    0x448985e4feff	            mov dword [rbp - 0x11c], r8d	      2435	buffer.c	FUNCTION_33
0x4003f64	    0x64488b042528	                mov rax, qword fs:[0x28]	      2435	buffer.c	FUNCTION_33
0x4003f6d	        0x488945f8	                mov qword [rbp - 8], rax	      2435	buffer.c	FUNCTION_33
0x4003f71	            0x31c0	                            xor eax, eax	      2435	buffer.c	FUNCTION_33
0x4003f73	    0xc78508ffffff	     mov dword [rbp - 0xf8], 0xffffffff 	      2437	buffer.c	FUNCTION_33
0x4003f7d	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      2445	buffer.c	FUNCTION_33	IF_1
0x4003f84	        0x4883c001	                              add rax, 1	      2445	buffer.c	FUNCTION_33	IF_1
0x4003f88	    0x483b85f0feff	            cmp rax, qword [rbp - 0x110]	      2445	buffer.c	FUNCTION_33	IF_1
0x4003f8f	     0xf858b000000	                           jne 0x4004020	      2445	buffer.c	FUNCTION_33	IF_1
0x4003f95	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      2445	buffer.c	FUNCTION_33	IF_1
0x4003f9c	           0xfb600	                   movzx eax, byte [rax]	      2445	buffer.c	FUNCTION_33	IF_1
0x4003f9f	            0x3c25	                            cmp al, 0x25	      2445	buffer.c	FUNCTION_33	IF_1
0x4003fa1	            0x740e	                            je 0x4003fb1	      2445	buffer.c	FUNCTION_33	IF_1
0x4003fa3	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      2445	buffer.c	FUNCTION_33	IF_1
0x4003faa	           0xfb600	                   movzx eax, byte [rax]	      2445	buffer.c	FUNCTION_33	IF_1
0x4003fad	            0x3c23	                            cmp al, 0x23	      2445	buffer.c	FUNCTION_33	IF_1
0x4003faf	            0x756f	                           jne 0x4004020	      2445	buffer.c	FUNCTION_33	IF_1
0x4003fb1	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      2447	buffer.c	FUNCTION_33	IF_1	IF_2
0x4003fb8	           0xfb600	                   movzx eax, byte [rax]	      2447	buffer.c	FUNCTION_33	IF_1	IF_2
0x4003fbb	            0x3c25	                            cmp al, 0x25	      2447	buffer.c	FUNCTION_33	IF_1	IF_2
0x4003fbd	            0x7515	                           jne 0x4003fd4	      2447	buffer.c	FUNCTION_33	IF_1	IF_2
0x4003fbf	    0x488b05000000	            mov rax, qword [0x04003fc6] 	      2448	buffer.c	FUNCTION_33	IF_1	IF_2
0x4003fc6	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      2448	buffer.c	FUNCTION_33	IF_1	IF_2
0x4003fcc	    0x898508ffffff	             mov dword [rbp - 0xf8], eax	      2448	buffer.c	FUNCTION_33	IF_1	IF_2
0x4003fd2	            0xeb13	                           jmp 0x4003fe7	      2448	buffer.c	FUNCTION_33	IF_1	IF_2
0x4003fd4	    0x488b05000000	            mov rax, qword [0x04003fdb] 	      2450	buffer.c	FUNCTION_33	IF_1	ELSE_1
0x4003fdb	    0x8b8078010000	           mov eax, dword [rax + 0x178] 	      2450	buffer.c	FUNCTION_33	IF_1	ELSE_1
0x4003fe1	    0x898508ffffff	             mov dword [rbp - 0xf8], eax	      2450	buffer.c	FUNCTION_33	IF_1	ELSE_1
0x4003fe7	    0x83bde8feffff	              cmp dword [rbp - 0x118], 0	      2452	buffer.c	FUNCTION_33	IF_1	IF_3	CALL_2
0x4003fee	     0xf84f5020000	                            je 0x40042e9	      2452	buffer.c	FUNCTION_33	IF_1	IF_3	CALL_2
0x4003ff4	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      2452	buffer.c	FUNCTION_33	IF_1	IF_3	CALL_2
0x4003ffa	            0x89c7	                            mov edi, eax	      2452	buffer.c	FUNCTION_33	IF_1	IF_3	CALL_2
0x4003ffc	      0xe800000000	                          call 0x4004001	      2452	buffer.c	FUNCTION_33	IF_1	IF_3	CALL_2
0x4004001	          0x4889c7	                            mov rdi, rax	      2452	buffer.c	FUNCTION_33	IF_1	IF_3	CALL_2
0x4004004	      0xe800000000	                          call 0x4004009	      2452	buffer.c	FUNCTION_33	IF_1	IF_3	CALL_2
0x4004009	            0x85c0	                           test eax, eax	      2452	buffer.c	FUNCTION_33	IF_1	IF_3	CALL_2
0x400400b	     0xf85d8020000	                           jne 0x40042e9	      2452	buffer.c	FUNCTION_33	IF_1	IF_3	CALL_2
0x4004011	    0xc78508ffffff	     mov dword [rbp - 0xf8], 0xffffffff 	      2453	buffer.c	FUNCTION_33	IF_1	IF_3
0x400401b	      0xe9c9020000	                           jmp 0x40042e9	      2452	buffer.c	FUNCTION_33	IF_1	IF_3	CALL_2
0x4004020	    0x488bb5f0feff	            mov rsi, qword [rbp - 0x110]	      2468	buffer.c	FUNCTION_33	ELSE_2	CALL_3
0x4004027	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      2468	buffer.c	FUNCTION_33	ELSE_2	CALL_3
0x400402e	      0xb900000000	                              mov ecx, 0	      2468	buffer.c	FUNCTION_33	ELSE_2	CALL_3
0x4004033	      0xba00000000	                              mov edx, 0	      2468	buffer.c	FUNCTION_33	ELSE_2	CALL_3
0x4004038	          0x4889c7	                            mov rdi, rax	      2468	buffer.c	FUNCTION_33	ELSE_2	CALL_3
0x400403b	      0xe800000000	                          call 0x4004040	      2468	buffer.c	FUNCTION_33	ELSE_2	CALL_3
0x4004040	    0x48898530ffff	             mov qword [rbp - 0xd0], rax	      2468	buffer.c	FUNCTION_33	ELSE_2	CALL_3
0x4004047	    0x4883bd30ffff	               cmp qword [rbp - 0xd0], 0	      2469	buffer.c	FUNCTION_33	ELSE_2	IF_4
0x400404f	            0x750a	                           jne 0x400405b	      2469	buffer.c	FUNCTION_33	ELSE_2	IF_4
0x4004051	      0xb8ffffffff	                     mov eax, 0xffffffff	      2470	buffer.c	FUNCTION_33	ELSE_2	IF_4
0x4004056	      0xe9e7020000	                           jmp 0x4004342	      2470	buffer.c	FUNCTION_33	ELSE_2	IF_4
0x400405b	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      2471	buffer.c	FUNCTION_33	ELSE_2	CALL_4
0x4004062	          0x4889c7	                            mov rdi, rax	      2471	buffer.c	FUNCTION_33	ELSE_2	CALL_4
0x4004065	      0xe800000000	                          call 0x400406a	      2471	buffer.c	FUNCTION_33	ELSE_2	CALL_4
0x400406a	        0x488d50ff	                      lea rdx, [rax - 1]	      2471	buffer.c	FUNCTION_33	ELSE_2	CALL_4
0x400406e	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      2471	buffer.c	FUNCTION_33	ELSE_2	CALL_4
0x4004075	          0x4801d0	                            add rax, rdx	      2471	buffer.c	FUNCTION_33	ELSE_2	CALL_4
0x4004078	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	      2471	buffer.c	FUNCTION_33	ELSE_2	CALL_4
0x400407f	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2472	buffer.c	FUNCTION_33	ELSE_2
0x4004086	    0x483b8530ffff	             cmp rax, qword [rbp - 0xd0]	      2472	buffer.c	FUNCTION_33	ELSE_2
0x400408d	            0x7615	                           jbe 0x40040a4	      2472	buffer.c	FUNCTION_33	ELSE_2
0x400408f	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2472	buffer.c	FUNCTION_33	ELSE_2
0x4004096	           0xfb600	                   movzx eax, byte [rax]	      2472	buffer.c	FUNCTION_33	ELSE_2
0x4004099	            0x3c24	                            cmp al, 0x24	      2472	buffer.c	FUNCTION_33	ELSE_2
0x400409b	            0x7507	                           jne 0x40040a4	      2472	buffer.c	FUNCTION_33	ELSE_2
0x400409d	      0xb801000000	                              mov eax, 1	      2472	buffer.c	FUNCTION_33	ELSE_2
0x40040a2	            0xeb05	                           jmp 0x40040a9	      2472	buffer.c	FUNCTION_33	ELSE_2
0x40040a4	      0xb800000000	                              mov eax, 0	      2472	buffer.c	FUNCTION_33	ELSE_2
0x40040a9	    0x898514ffffff	             mov dword [rbp - 0xec], eax	      2472	buffer.c	FUNCTION_33	ELSE_2
0x40040af	    0xc7850cffffff	               mov dword [rbp - 0xf4], 1	      2476	buffer.c	FUNCTION_33	ELSE_2
0x40040b9	    0xc78510ffffff	               mov dword [rbp - 0xf0], 0	      2479	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2
0x40040c3	      0xe9d6010000	                           jmp 0x400429e	      2479	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2
0x40040c8	    0x83bd14ffffff	               cmp dword [rbp - 0xec], 0	      2484	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_5
0x40040cf	            0x741e	                            je 0x40040ef	      2484	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_5
0x40040d1	    0x83bd10ffffff	               cmp dword [rbp - 0xf0], 1	      2485	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_5
0x40040d8	            0x7f07	                            jg 0x40040e1	      2485	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_5
0x40040da	      0xba00000000	                              mov edx, 0	      2485	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_5
0x40040df	            0xeb05	                           jmp 0x40040e6	      2485	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_5
0x40040e1	      0xba24000000	                           mov edx, 0x24	      2485	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_5
0x40040e6	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2485	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_5
0x40040ed	            0x8810	                      mov byte [rax], dl	      2485	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_5
0x40040ef	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      2486	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2
0x40040f6	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      2486	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2
0x40040fd	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      2487	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_6
0x4004104	           0xfb600	                   movzx eax, byte [rax]	      2487	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_6
0x4004107	            0x3c5e	                            cmp al, 0x5e	      2487	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_6
0x4004109	            0x7515	                           jne 0x4004120	      2487	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_6
0x400410b	    0x8b8510ffffff	             mov eax, dword [rbp - 0xf0]	      2487	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_6
0x4004111	          0x83e001	                              and eax, 1	      2487	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_6
0x4004114	            0x85c0	                           test eax, eax	      2487	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_6
0x4004116	            0x7508	                           jne 0x4004120	      2487	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_6
0x4004118	    0x48838520ffff	               add qword [rbp - 0xe0], 1	      2488	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_6
0x4004120	    0x8b0500000000	            mov eax, dword [0x04004126] 	      2489	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	CALL_5
0x4004126	            0x85c0	                           test eax, eax	      2489	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	CALL_5
0x4004128	           0xf95c0	                                setne al	      2489	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	CALL_5
0x400412b	           0xfb6d0	                           movzx edx, al	      2489	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	CALL_5
0x400412e	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      2489	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	CALL_5
0x4004135	            0x89d6	                            mov esi, edx	      2489	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	CALL_5
0x4004137	          0x4889c7	                            mov rdi, rax	      2489	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	CALL_5
0x400413a	      0xe800000000	                          call 0x400413f	      2489	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	CALL_5
0x400413f	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      2489	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	CALL_5
0x4004146	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2490	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_7
0x400414d	          0x4885c0	                           test rax, rax	      2490	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_7
0x4004150	            0x7519	                           jne 0x400416b	      2490	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_7
0x4004152	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      2492	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_7	CALL_6
0x4004159	          0x4889c7	                            mov rdi, rax	      2492	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_7	CALL_6
0x400415c	      0xe800000000	                          call 0x4004161	      2492	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_7	CALL_6
0x4004161	      0xb8ffffffff	                     mov eax, 0xffffffff	      2493	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_7
0x4004166	      0xe9d7010000	                           jmp 0x4004342	      2493	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_7
0x400416b	    0x488b05000000	            mov rax, qword [0x04004172] 	      2496	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3
0x4004172	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      2496	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3
0x4004179	      0xe9f3000000	                           jmp 0x4004271	      2496	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3
0x400417e	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2497	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8
0x4004185	    0x8b8024140000	          mov eax, dword [rax + 0x1424] 	      2497	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8
0x400418b	    0x3b850cffffff	             cmp eax, dword [rbp - 0xf4]	      2497	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8
0x4004191	     0xf85c8000000	                           jne 0x400425f	      2497	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8
0x4004197	    0x83bde8feffff	              cmp dword [rbp - 0x118], 0	      2499	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	CALL_7
0x400419e	            0x7417	                            je 0x40041b7	      2499	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	CALL_7
0x40041a0	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2499	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	CALL_7
0x40041a7	          0x4889c7	                            mov rdi, rax	      2499	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	CALL_7
0x40041aa	      0xe800000000	                          call 0x40041af	      2499	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	CALL_7
0x40041af	            0x85c0	                           test eax, eax	      2499	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	CALL_7
0x40041b1	     0xf84a8000000	                            je 0x400425f	      2499	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	CALL_7
0x40041b7	    0x488b8d18ffff	             mov rcx, qword [rbp - 0xe8]	      2501	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	CALL_8
0x40041be	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	      2501	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	CALL_8
0x40041c5	      0xba00000000	                              mov edx, 0	      2501	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	CALL_8
0x40041ca	          0x4889ce	                            mov rsi, rcx	      2501	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	CALL_8
0x40041cd	          0x4889c7	                            mov rdi, rax	      2501	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	CALL_8
0x40041d0	      0xe833050000	                  call sym.buflist_match	      2501	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	CALL_8
0x40041d5	          0x4885c0	                           test rax, rax	      2501	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	CALL_8
0x40041d8	     0xf8481000000	                            je 0x400425f	      2501	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	CALL_8
0x40041de	    0x83bde4feffff	              cmp dword [rbp - 0x11c], 0	      2503	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9
0x40041e5	            0x744d	                            je 0x4004234	      2503	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9
0x40041e7	    0x488b05000000	            mov rax, qword [0x040041ee] 	      2509	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9	CALL_9
0x40041ee	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	      2509	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9	CALL_9
0x40041f5	            0xeb26	                           jmp 0x400421d	      2509	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9	CALL_9
0x40041f7	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2510	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9	IF_10
0x40041fe	        0x488b4008	                mov rax, qword [rax + 8]	      2510	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9	IF_10
0x4004202	    0x483b8518ffff	             cmp rax, qword [rbp - 0xe8]	      2510	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9	IF_10
0x4004209	            0x741e	                            je 0x4004229	      2510	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9	IF_10
0x400420b	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2509	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9	CALL_9
0x4004212	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2509	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9	CALL_9
0x4004216	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	      2509	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9	CALL_9
0x400421d	    0x4883bd28ffff	               cmp qword [rbp - 0xd8], 0	      2509	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9	CALL_9
0x4004225	            0x75d0	                           jne 0x40041f7	      2509	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9	CALL_9
0x4004227	            0xeb01	                           jmp 0x400422a	      2509	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9	CALL_9
0x4004229	              0x90	                                     nop	      2511	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9	IF_10
0x400422a	    0x4883bd28ffff	               cmp qword [rbp - 0xd8], 0	      2512	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9	IF_11
0x4004232	            0x742a	                            je 0x400425e	      2512	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9	IF_11
0x4004234	    0x83bd08ffffff	               cmp dword [rbp - 0xf8], 0	      2515	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_12
0x400423b	            0x780c	                            js 0x4004249	      2515	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_12
0x400423d	    0xc78508ffffff	     mov dword [rbp - 0xf8], 0xfffffffe 	      2517	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_12
0x4004247	            0xeb36	                           jmp 0x400427f	      2518	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_12
0x4004249	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2520	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8
0x4004250	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      2520	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8
0x4004256	    0x898508ffffff	             mov dword [rbp - 0xf8], eax	      2520	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8
0x400425c	            0xeb01	                           jmp 0x400425f	      2520	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8
0x400425e	              0x90	                                     nop	      2513	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9	IF_11
0x400425f	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2496	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3
0x4004266	        0x488b4070	            mov rax, qword [rax + 0x70] 	      2496	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3
0x400426a	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      2496	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3
0x4004271	    0x4883bd18ffff	               cmp qword [rbp - 0xe8], 0	      2496	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3
0x4004279	     0xf85fffeffff	                           jne 0x400417e	      2496	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3
0x400427f	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2523	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	CALL_10
0x4004286	          0x4889c7	                            mov rdi, rax	      2523	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	CALL_10
0x4004289	      0xe800000000	                          call 0x400428e	      2523	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	CALL_10
0x400428e	    0x83bd08ffffff	               cmp dword [rbp - 0xf8], 0	      2524	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_13
0x4004295	            0x7916	                           jns 0x40042ad	      2524	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_13
0x4004297	    0x838510ffffff	               add dword [rbp - 0xf0], 1	      2479	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2
0x400429e	    0x83bd10ffffff	               cmp dword [rbp - 0xf0], 3	      2479	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2
0x40042a5	     0xf8e1dfeffff	                           jle 0x40040c8	      2479	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2
0x40042ab	            0xeb01	                           jmp 0x40042ae	      2479	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2
0x40042ad	              0x90	                                     nop	      2525	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_13
0x40042ae	    0x83bdecfeffff	              cmp dword [rbp - 0x114], 0	      2530	buffer.c	FUNCTION_33	ELSE_2	FOR_1	IF_14
0x40042b5	            0x7421	                            je 0x40042d8	      2530	buffer.c	FUNCTION_33	ELSE_2	FOR_1	IF_14
0x40042b7	    0x83bd0cffffff	               cmp dword [rbp - 0xf4], 0	      2530	buffer.c	FUNCTION_33	ELSE_2	FOR_1	IF_14
0x40042be	            0x7418	                            je 0x40042d8	      2530	buffer.c	FUNCTION_33	ELSE_2	FOR_1	IF_14
0x40042c0	    0x83bd08ffffff	cmp dword [rbp - 0xf8], 0xffffffffffffffff	      2530	buffer.c	FUNCTION_33	ELSE_2	FOR_1	IF_14
0x40042c7	            0x750f	                           jne 0x40042d8	      2530	buffer.c	FUNCTION_33	ELSE_2	FOR_1	IF_14
0x40042c9	    0xc7850cffffff	               mov dword [rbp - 0xf4], 0	      2532	buffer.c	FUNCTION_33	ELSE_2	FOR_1
0x40042d3	      0xe9e1fdffff	                           jmp 0x40040b9	      2533	buffer.c	FUNCTION_33	ELSE_2	FOR_1
0x40042d8	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      2535	buffer.c	FUNCTION_33	ELSE_2	CALL_11
0x40042df	          0x4889c7	                            mov rdi, rax	      2535	buffer.c	FUNCTION_33	ELSE_2	CALL_11
0x40042e2	      0xe800000000	                          call 0x40042e7	      2535	buffer.c	FUNCTION_33	ELSE_2	CALL_11
0x40042e7	            0xeb01	                           jmp 0x40042ea	      2535	buffer.c	FUNCTION_33	ELSE_2	CALL_11
0x40042e9	              0x90	                                     nop	      2452	buffer.c	FUNCTION_33	IF_1	IF_3	CALL_2
0x40042ea	    0x83bd08ffffff	cmp dword [rbp - 0xf8], 0xfffffffffffffffe	      2538	buffer.c	FUNCTION_33	IF_15
0x40042f1	            0x7521	                           jne 0x4004314	      2538	buffer.c	FUNCTION_33	IF_15
0x40042f3	      0xbf00000000	                              mov edi, 0	      2539	buffer.c	FUNCTION_33	CALL_13
0x40042f8	      0xe800000000	                          call 0x40042fd	      2539	buffer.c	FUNCTION_33	CALL_13
0x40042fd	          0x4889c2	                            mov rdx, rax	      2539	buffer.c	FUNCTION_33	CALL_13
0x4004300	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      2539	buffer.c	FUNCTION_33	CALL_13
0x4004307	          0x4889c6	                            mov rsi, rax	      2539	buffer.c	FUNCTION_33	CALL_13
0x400430a	          0x4889d7	                            mov rdi, rdx	      2539	buffer.c	FUNCTION_33	CALL_13
0x400430d	      0xe800000000	                          call 0x4004312	      2539	buffer.c	FUNCTION_33	CALL_13
0x4004312	            0xeb28	                           jmp 0x400433c	      2539	buffer.c	FUNCTION_33	CALL_13
0x4004314	    0x83bd08ffffff	               cmp dword [rbp - 0xf8], 0	      2540	buffer.c	FUNCTION_33	ELSE_3	IF_16
0x400431b	            0x791f	                           jns 0x400433c	      2540	buffer.c	FUNCTION_33	ELSE_3	IF_16
0x400431d	      0xbf00000000	                              mov edi, 0	      2541	buffer.c	FUNCTION_33	ELSE_3	IF_16
0x4004322	      0xe800000000	                          call 0x4004327	      2541	buffer.c	FUNCTION_33	ELSE_3	IF_16
0x4004327	          0x4889c2	                            mov rdx, rax	      2541	buffer.c	FUNCTION_33	ELSE_3	IF_16
0x400432a	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      2541	buffer.c	FUNCTION_33	ELSE_3	IF_16
0x4004331	          0x4889c6	                            mov rsi, rax	      2541	buffer.c	FUNCTION_33	ELSE_3	IF_16
0x4004334	          0x4889d7	                            mov rdi, rdx	      2541	buffer.c	FUNCTION_33	ELSE_3	IF_16
0x4004337	      0xe800000000	                          call 0x400433c	      2541	buffer.c	FUNCTION_33	ELSE_3	IF_16
0x400433c	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      2542	buffer.c	FUNCTION_33
0x4004342	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2543	buffer.c	FUNCTION_33
0x4004346	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2543	buffer.c	FUNCTION_33
0x400434f	            0x7405	                            je 0x4004356	      2543	buffer.c	FUNCTION_33
0x4004351	      0xe800000000	                          call 0x4004356	      2543	buffer.c	FUNCTION_33
0x4004356	              0xc9	                                   leave	      2543	buffer.c	FUNCTION_33
0x4004357	              0xc3	                                     ret	      2543	buffer.c	FUNCTION_33
wininfo_other_tab_diff	CALL,1:functions,0:SWITCH,0:FOR,0:ELSE,0:DO,0:WHILE,0:IF,2	26
0x4004b2b	              0x55	                                push rbp	      2825	buffer.c	FUNCTION_40
0x4004b2c	          0x4889e5	                            mov rbp, rsp	      2825	buffer.c	FUNCTION_40
0x4004b2f	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2825	buffer.c	FUNCTION_40
0x4004b33	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2828	buffer.c	FUNCTION_40	IF_1
0x4004b37	          0x8b4040	            mov eax, dword [rax + 0x40] 	      2828	buffer.c	FUNCTION_40	IF_1
0x4004b3a	            0x85c0	                           test eax, eax	      2828	buffer.c	FUNCTION_40	IF_1
0x4004b3c	            0x743c	                            je 0x4004b7a	      2828	buffer.c	FUNCTION_40	IF_1
0x4004b3e	    0x488b05000000	            mov rax, qword [0x04004b45] 	      2830	buffer.c	FUNCTION_40	IF_1	CALL_1
0x4004b45	        0x488945f8	                mov qword [rbp - 8], rax	      2830	buffer.c	FUNCTION_40	IF_1	CALL_1
0x4004b49	            0xeb21	                           jmp 0x4004b6c	      2830	buffer.c	FUNCTION_40	IF_1	CALL_1
0x4004b4b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2833	buffer.c	FUNCTION_40	IF_1	IF_2
0x4004b4f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2833	buffer.c	FUNCTION_40	IF_1	IF_2
0x4004b53	        0x483b45f8	                cmp rax, qword [rbp - 8]	      2833	buffer.c	FUNCTION_40	IF_1	IF_2
0x4004b57	            0x7507	                           jne 0x4004b60	      2833	buffer.c	FUNCTION_40	IF_1	IF_2
0x4004b59	      0xb800000000	                              mov eax, 0	      2834	buffer.c	FUNCTION_40	IF_1	IF_2
0x4004b5e	            0xeb1f	                           jmp 0x4004b7f	      2834	buffer.c	FUNCTION_40	IF_1	IF_2
0x4004b60	        0x488b45f8	                mov rax, qword [rbp - 8]	      2830	buffer.c	FUNCTION_40	IF_1	CALL_1
0x4004b64	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2830	buffer.c	FUNCTION_40	IF_1	CALL_1
0x4004b68	        0x488945f8	                mov qword [rbp - 8], rax	      2830	buffer.c	FUNCTION_40	IF_1	CALL_1
0x4004b6c	      0x48837df800	                  cmp qword [rbp - 8], 0	      2830	buffer.c	FUNCTION_40	IF_1	CALL_1
0x4004b71	            0x75d8	                           jne 0x4004b4b	      2830	buffer.c	FUNCTION_40	IF_1	CALL_1
0x4004b73	      0xb801000000	                              mov eax, 1	      2835	buffer.c	FUNCTION_40	IF_1
0x4004b78	            0xeb05	                           jmp 0x4004b7f	      2835	buffer.c	FUNCTION_40	IF_1
0x4004b7a	      0xb800000000	                              mov eax, 0	      2837	buffer.c	FUNCTION_40
0x4004b7f	              0x5d	                                 pop rbp	      2838	buffer.c	FUNCTION_40
0x4004b80	              0xc3	                                     ret	      2838	buffer.c	FUNCTION_40
no_write_message_nobang	CALL,5:functions,0:SWITCH,0:FOR,0:ELSE,1:DO,0:WHILE,0:IF,1	22
0x4002d37	              0x55	                                push rbp	      1829	buffer.c	FUNCTION_24
0x4002d38	          0x4889e5	                            mov rbp, rsp	      1829	buffer.c	FUNCTION_24
0x4002d3b	        0x4883ec10	                           sub rsp, 0x10	      1829	buffer.c	FUNCTION_24
0x4002d3f	        0x48897df8	                mov qword [rbp - 8], rdi	      1829	buffer.c	FUNCTION_24
0x4002d43	        0x488b45f8	                mov rax, qword [rbp - 8]	      1831	buffer.c	FUNCTION_24	IF_1	CALL_1
0x4002d47	    0x488b80481c00	          mov rax, qword [rax + 0x1c48] 	      1831	buffer.c	FUNCTION_24	IF_1	CALL_1
0x4002d4e	          0x4889c7	                            mov rdi, rax	      1831	buffer.c	FUNCTION_24	IF_1	CALL_1
0x4002d51	      0xe800000000	                          call 0x4002d56	      1831	buffer.c	FUNCTION_24	IF_1	CALL_1
0x4002d56	            0x85c0	                           test eax, eax	      1831	buffer.c	FUNCTION_24	IF_1	CALL_1
0x4002d58	            0x7414	                            je 0x4002d6e	      1831	buffer.c	FUNCTION_24	IF_1	CALL_1
0x4002d5a	      0xbf00000000	                              mov edi, 0	      1832	buffer.c	FUNCTION_24	CALL_3
0x4002d5f	      0xe800000000	                          call 0x4002d64	      1832	buffer.c	FUNCTION_24	CALL_3
0x4002d64	          0x4889c7	                            mov rdi, rax	      1832	buffer.c	FUNCTION_24	CALL_3
0x4002d67	      0xe800000000	                          call 0x4002d6c	      1832	buffer.c	FUNCTION_24	CALL_3
0x4002d6c	            0xeb12	                           jmp 0x4002d80	      1836	buffer.c	FUNCTION_24
0x4002d6e	      0xbf00000000	                              mov edi, 0	      1835	buffer.c	FUNCTION_24	CALL_5
0x4002d73	      0xe800000000	                          call 0x4002d78	      1835	buffer.c	FUNCTION_24	CALL_5
0x4002d78	          0x4889c7	                            mov rdi, rax	      1835	buffer.c	FUNCTION_24	CALL_5
0x4002d7b	      0xe800000000	                          call 0x4002d80	      1835	buffer.c	FUNCTION_24	CALL_5
0x4002d80	              0x90	                                     nop	      1836	buffer.c	FUNCTION_24
0x4002d81	              0xc9	                                   leave	      1836	buffer.c	FUNCTION_24
0x4002d82	              0xc3	                                     ret	      1836	buffer.c	FUNCTION_24
bt_dontwrite	CALL,0:functions,0:SWITCH,0:FOR,0:ELSE,0:DO,0:WHILE,0:IF,0	20
0x400b740	              0x55	                                push rbp	      5638	buffer.c	FUNCTION_81
0x400b741	          0x4889e5	                            mov rbp, rsp	      5638	buffer.c	FUNCTION_81
0x400b744	        0x48897df8	                mov qword [rbp - 8], rdi	      5638	buffer.c	FUNCTION_81
0x400b748	      0x48837df800	                  cmp qword [rbp - 8], 0	      5639	buffer.c	FUNCTION_81
0x400b74d	            0x742b	                            je 0x400b77a	      5639	buffer.c	FUNCTION_81
0x400b74f	        0x488b45f8	                mov rax, qword [rbp - 8]	      5639	buffer.c	FUNCTION_81
0x400b753	    0x488b80181400	          mov rax, qword [rax + 0x1418] 	      5639	buffer.c	FUNCTION_81
0x400b75a	           0xfb600	                   movzx eax, byte [rax]	      5639	buffer.c	FUNCTION_81
0x400b75d	            0x3c6e	                            cmp al, 0x6e	      5639	buffer.c	FUNCTION_81
0x400b75f	            0x7412	                            je 0x400b773	      5639	buffer.c	FUNCTION_81
0x400b761	        0x488b45f8	                mov rax, qword [rbp - 8]	      5639	buffer.c	FUNCTION_81
0x400b765	    0x488b80181400	          mov rax, qword [rax + 0x1418] 	      5639	buffer.c	FUNCTION_81
0x400b76c	           0xfb600	                   movzx eax, byte [rax]	      5639	buffer.c	FUNCTION_81
0x400b76f	            0x3c74	                            cmp al, 0x74	      5639	buffer.c	FUNCTION_81
0x400b771	            0x7507	                           jne 0x400b77a	      5639	buffer.c	FUNCTION_81
0x400b773	      0xb801000000	                              mov eax, 1	      5639	buffer.c	FUNCTION_81
0x400b778	            0xeb05	                           jmp 0x400b77f	      5639	buffer.c	FUNCTION_81
0x400b77a	      0xb800000000	                              mov eax, 0	      5639	buffer.c	FUNCTION_81
0x400b77f	              0x5d	                                 pop rbp	      5640	buffer.c	FUNCTION_81
0x400b780	              0xc3	                                     ret	      5640	buffer.c	FUNCTION_81
find_wininfo	CALL,2:functions,0:SWITCH,0:FOR,2:ELSE,1:DO,0:WHILE,0:IF,4	53
0x4004b81	              0x55	                                push rbp	      2852	buffer.c	FUNCTION_41
0x4004b82	          0x4889e5	                            mov rbp, rsp	      2852	buffer.c	FUNCTION_41
0x4004b85	        0x4883ec20	                           sub rsp, 0x20	      2852	buffer.c	FUNCTION_41
0x4004b89	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2852	buffer.c	FUNCTION_41
0x4004b8d	          0x8975e4	             mov dword [rbp - 0x1c], esi	      2852	buffer.c	FUNCTION_41
0x4004b90	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2855	buffer.c	FUNCTION_41	FOR_1
0x4004b94	    0x488b80280100	           mov rax, qword [rax + 0x128] 	      2855	buffer.c	FUNCTION_41	FOR_1
0x4004b9b	        0x488945f8	                mov qword [rbp - 8], rax	      2855	buffer.c	FUNCTION_41	FOR_1
0x4004b9f	            0xeb35	                           jmp 0x4004bd6	      2855	buffer.c	FUNCTION_41	FOR_1
0x4004ba1	        0x488b45f8	                mov rax, qword [rbp - 8]	      2856	buffer.c	FUNCTION_41	FOR_1	IF_1
0x4004ba5	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      2856	buffer.c	FUNCTION_41	FOR_1	IF_1
0x4004ba9	    0x488b05000000	            mov rax, qword [0x04004bb0] 	      2856	buffer.c	FUNCTION_41	FOR_1	IF_1
0x4004bb0	          0x4839c2	                            cmp rdx, rax	      2856	buffer.c	FUNCTION_41	FOR_1	IF_1
0x4004bb3	            0x7516	                           jne 0x4004bcb	      2856	buffer.c	FUNCTION_41	FOR_1	IF_1
0x4004bb5	        0x837de400	               cmp dword [rbp - 0x1c], 0	      2858	buffer.c	FUNCTION_41	FOR_1	IF_1	CALL_1
0x4004bb9	            0x7422	                            je 0x4004bdd	      2858	buffer.c	FUNCTION_41	FOR_1	IF_1	CALL_1
0x4004bbb	        0x488b45f8	                mov rax, qword [rbp - 8]	      2858	buffer.c	FUNCTION_41	FOR_1	IF_1	CALL_1
0x4004bbf	          0x4889c7	                            mov rdi, rax	      2858	buffer.c	FUNCTION_41	FOR_1	IF_1	CALL_1
0x4004bc2	      0xe864ffffff	         call sym.wininfo_other_tab_diff	      2858	buffer.c	FUNCTION_41	FOR_1	IF_1	CALL_1
0x4004bc7	            0x85c0	                           test eax, eax	      2858	buffer.c	FUNCTION_41	FOR_1	IF_1	CALL_1
0x4004bc9	            0x7412	                            je 0x4004bdd	      2858	buffer.c	FUNCTION_41	FOR_1	IF_1	CALL_1
0x4004bcb	        0x488b45f8	                mov rax, qword [rbp - 8]	      2855	buffer.c	FUNCTION_41	FOR_1
0x4004bcf	          0x488b00	                    mov rax, qword [rax]	      2855	buffer.c	FUNCTION_41	FOR_1
0x4004bd2	        0x488945f8	                mov qword [rbp - 8], rax	      2855	buffer.c	FUNCTION_41	FOR_1
0x4004bd6	      0x48837df800	                  cmp qword [rbp - 8], 0	      2855	buffer.c	FUNCTION_41	FOR_1
0x4004bdb	            0x75c4	                           jne 0x4004ba1	      2855	buffer.c	FUNCTION_41	FOR_1
0x4004bdd	      0x48837df800	                  cmp qword [rbp - 8], 0	      2865	buffer.c	FUNCTION_41	IF_2
0x4004be2	            0x754d	                           jne 0x4004c31	      2865	buffer.c	FUNCTION_41	IF_2
0x4004be4	        0x837de400	               cmp dword [rbp - 0x1c], 0	      2868	buffer.c	FUNCTION_41	IF_2	IF_3
0x4004be8	            0x7435	                            je 0x4004c1f	      2868	buffer.c	FUNCTION_41	IF_2	IF_3
0x4004bea	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2870	buffer.c	FUNCTION_41	IF_2	IF_3	FOR_2
0x4004bee	    0x488b80280100	           mov rax, qword [rax + 0x128] 	      2870	buffer.c	FUNCTION_41	IF_2	IF_3	FOR_2
0x4004bf5	        0x488945f8	                mov qword [rbp - 8], rax	      2870	buffer.c	FUNCTION_41	IF_2	IF_3	FOR_2
0x4004bf9	            0xeb1b	                           jmp 0x4004c16	      2870	buffer.c	FUNCTION_41	IF_2	IF_3	FOR_2
0x4004bfb	        0x488b45f8	                mov rax, qword [rbp - 8]	      2871	buffer.c	FUNCTION_41	IF_2	IF_3	FOR_2	IF_4	CALL_2
0x4004bff	          0x4889c7	                            mov rdi, rax	      2871	buffer.c	FUNCTION_41	IF_2	IF_3	FOR_2	IF_4	CALL_2
0x4004c02	      0xe824ffffff	         call sym.wininfo_other_tab_diff	      2871	buffer.c	FUNCTION_41	IF_2	IF_3	FOR_2	IF_4	CALL_2
0x4004c07	            0x85c0	                           test eax, eax	      2871	buffer.c	FUNCTION_41	IF_2	IF_3	FOR_2	IF_4	CALL_2
0x4004c09	            0x7425	                            je 0x4004c30	      2871	buffer.c	FUNCTION_41	IF_2	IF_3	FOR_2	IF_4	CALL_2
0x4004c0b	        0x488b45f8	                mov rax, qword [rbp - 8]	      2870	buffer.c	FUNCTION_41	IF_2	IF_3	FOR_2
0x4004c0f	          0x488b00	                    mov rax, qword [rax]	      2870	buffer.c	FUNCTION_41	IF_2	IF_3	FOR_2
0x4004c12	        0x488945f8	                mov qword [rbp - 8], rax	      2870	buffer.c	FUNCTION_41	IF_2	IF_3	FOR_2
0x4004c16	      0x48837df800	                  cmp qword [rbp - 8], 0	      2870	buffer.c	FUNCTION_41	IF_2	IF_3	FOR_2
0x4004c1b	            0x75de	                           jne 0x4004bfb	      2870	buffer.c	FUNCTION_41	IF_2	IF_3	FOR_2
0x4004c1d	            0xeb12	                           jmp 0x4004c31	      2870	buffer.c	FUNCTION_41	IF_2	IF_3	FOR_2
0x4004c1f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2876	buffer.c	FUNCTION_41	IF_2	ELSE_1
0x4004c23	    0x488b80280100	           mov rax, qword [rax + 0x128] 	      2876	buffer.c	FUNCTION_41	IF_2	ELSE_1
0x4004c2a	        0x488945f8	                mov qword [rbp - 8], rax	      2876	buffer.c	FUNCTION_41	IF_2	ELSE_1
0x4004c2e	            0xeb01	                           jmp 0x4004c31	      2876	buffer.c	FUNCTION_41	IF_2	ELSE_1
0x4004c30	              0x90	                                     nop	      2872	buffer.c	FUNCTION_41	IF_2	IF_3	FOR_2	IF_4
0x4004c31	        0x488b45f8	                mov rax, qword [rbp - 8]	      2878	buffer.c	FUNCTION_41	ELSE_1
0x4004c35	              0xc9	                                   leave	      2879	buffer.c	FUNCTION_41	ELSE_1
0x4004c36	              0xc3	                                     ret	      2879	buffer.c	FUNCTION_41	ELSE_1
free_buffer_stuff	CALL,14:functions,0:SWITCH,0:FOR,0:ELSE,0:DO,0:WHILE,0:IF,1	72
0x4001524	              0x55	                                push rbp	       896	buffer.c	FUNCTION_13
0x4001525	          0x4889e5	                            mov rbp, rsp	       896	buffer.c	FUNCTION_13
0x4001528	        0x4883ec20	                           sub rsp, 0x20	       896	buffer.c	FUNCTION_13
0x400152c	        0x48897de8	             mov qword [rbp - 0x18], rdi	       896	buffer.c	FUNCTION_13
0x4001530	          0x8975e4	             mov dword [rbp - 0x1c], esi	       896	buffer.c	FUNCTION_13
0x4001533	        0x837de400	               cmp dword [rbp - 0x1c], 0	       897	buffer.c	FUNCTION_13	IF_1
0x4001537	            0x742f	                            je 0x4001568	       897	buffer.c	FUNCTION_13	IF_1
0x4001539	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       899	buffer.c	FUNCTION_13	IF_1	CALL_1
0x400153d	          0x4889c7	                            mov rdi, rax	       899	buffer.c	FUNCTION_13	IF_1	CALL_1
0x4001540	      0xe810010000	                  call sym.clear_wininfo	       899	buffer.c	FUNCTION_13	IF_1	CALL_1
0x4001545	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       900	buffer.c	FUNCTION_13	IF_1	CALL_2
0x4001549	      0xbe01000000	                              mov esi, 1	       900	buffer.c	FUNCTION_13	IF_1	CALL_2
0x400154e	          0x4889c7	                            mov rdi, rax	       900	buffer.c	FUNCTION_13	IF_1	CALL_2
0x4001551	      0xe800000000	                          call 0x4001556	       900	buffer.c	FUNCTION_13	IF_1	CALL_2
0x4001556	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       902	buffer.c	FUNCTION_13	IF_1	CALL_3
0x400155a	    0x4805b01a0000	                         add rax, 0x1ab0	       902	buffer.c	FUNCTION_13	IF_1	CALL_3
0x4001560	          0x4889c7	                            mov rdi, rax	       902	buffer.c	FUNCTION_13	IF_1	CALL_3
0x4001563	      0xe800000000	                          call 0x4001568	       902	buffer.c	FUNCTION_13	IF_1	CALL_3
0x4001568	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       907	buffer.c	FUNCTION_13	CALL_4
0x400156c	    0x488b80d80000	            mov rax, qword [rax + 0xd8] 	       907	buffer.c	FUNCTION_13	CALL_4
0x4001573	        0x488945f8	                mov qword [rbp - 8], rax	       907	buffer.c	FUNCTION_13	CALL_4
0x4001577	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       909	buffer.c	FUNCTION_13	CALL_5
0x400157b	    0x488b80301700	          mov rax, qword [rax + 0x1730] 	       909	buffer.c	FUNCTION_13	CALL_5
0x4001582	        0x4883c010	                           add rax, 0x10	       909	buffer.c	FUNCTION_13	CALL_5
0x4001586	          0x4889c7	                            mov rdi, rax	       909	buffer.c	FUNCTION_13	CALL_5
0x4001589	      0xe800000000	                          call 0x400158e	       909	buffer.c	FUNCTION_13	CALL_5
0x400158e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       910	buffer.c	FUNCTION_13	CALL_6
0x4001592	    0x488b80301700	          mov rax, qword [rax + 0x1730] 	       910	buffer.c	FUNCTION_13	CALL_6
0x4001599	        0x4883c010	                           add rax, 0x10	       910	buffer.c	FUNCTION_13	CALL_6
0x400159d	          0x4889c7	                            mov rdi, rax	       910	buffer.c	FUNCTION_13	CALL_6
0x40015a0	      0xe800000000	                          call 0x40015a5	       910	buffer.c	FUNCTION_13	CALL_6
0x40015a5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       911	buffer.c	FUNCTION_13	CALL_7
0x40015a9	          0x4889c7	                            mov rdi, rax	       911	buffer.c	FUNCTION_13	CALL_7
0x40015ac	      0xe8f8feffff	               call sym.init_changedtick	       911	buffer.c	FUNCTION_13	CALL_7
0x40015b1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       912	buffer.c	FUNCTION_13	CALL_8
0x40015b5	        0x488b55f8	                mov rdx, qword [rbp - 8]	       912	buffer.c	FUNCTION_13	CALL_8
0x40015b9	    0x488990d80000	             mov qword [rax + 0xd8], rdx	       912	buffer.c	FUNCTION_13	CALL_8
0x40015c0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       916	buffer.c	FUNCTION_13	CALL_9
0x40015c4	    0x4805c8110000	                         add rax, 0x11c8	       916	buffer.c	FUNCTION_13	CALL_9
0x40015ca	          0x4889c7	                            mov rdi, rax	       916	buffer.c	FUNCTION_13	CALL_9
0x40015cd	      0xe800000000	                          call 0x40015d2	       916	buffer.c	FUNCTION_13	CALL_9
0x40015d2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       919	buffer.c	FUNCTION_13	CALL_10
0x40015d6	          0x4889c7	                            mov rdi, rax	       919	buffer.c	FUNCTION_13	CALL_10
0x40015d9	      0xe800000000	                          call 0x40015de	       919	buffer.c	FUNCTION_13	CALL_10
0x40015de	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       922	buffer.c	FUNCTION_13	CALL_11
0x40015e2	          0x4889c7	                            mov rdi, rax	       922	buffer.c	FUNCTION_13	CALL_11
0x40015e5	      0xe800000000	                          call 0x40015ea	       922	buffer.c	FUNCTION_13	CALL_11
0x40015ea	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       925	buffer.c	FUNCTION_13	CALL_12
0x40015ee	      0xb900000000	                              mov ecx, 0	       925	buffer.c	FUNCTION_13	CALL_12
0x40015f3	      0xba01000000	                              mov edx, 1	       925	buffer.c	FUNCTION_13	CALL_12
0x40015f8	      0xbe3f300000	                         mov esi, 0x303f	       925	buffer.c	FUNCTION_13	CALL_12
0x40015fd	          0x4889c7	                            mov rdi, rax	       925	buffer.c	FUNCTION_13	CALL_12
0x4001600	      0xe800000000	                          call 0x4001605	       925	buffer.c	FUNCTION_13	CALL_12
0x4001605	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       926	buffer.c	FUNCTION_13	CALL_13
0x4001609	      0xb901000000	                              mov ecx, 1	       926	buffer.c	FUNCTION_13	CALL_13
0x400160e	      0xba01000000	                              mov edx, 1	       926	buffer.c	FUNCTION_13	CALL_13
0x4001613	      0xbe3f300000	                         mov esi, 0x303f	       926	buffer.c	FUNCTION_13	CALL_13
0x4001618	          0x4889c7	                            mov rdi, rax	       926	buffer.c	FUNCTION_13	CALL_13
0x400161b	      0xe800000000	                          call 0x4001620	       926	buffer.c	FUNCTION_13	CALL_13
0x4001620	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       929	buffer.c	FUNCTION_13	CALL_14
0x4001624	    0x488b80081700	          mov rax, qword [rax + 0x1708] 	       929	buffer.c	FUNCTION_13	CALL_14
0x400162b	          0x4885c0	                           test rax, rax	       929	buffer.c	FUNCTION_13	CALL_14
0x400162e	            0x7422	                            je 0x4001652	       929	buffer.c	FUNCTION_13	CALL_14
0x4001630	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       929	buffer.c	FUNCTION_13	CALL_14
0x4001634	    0x488b80081700	          mov rax, qword [rax + 0x1708] 	       929	buffer.c	FUNCTION_13	CALL_14
0x400163b	          0x4889c7	                            mov rdi, rax	       929	buffer.c	FUNCTION_13	CALL_14
0x400163e	      0xe800000000	                          call 0x4001643	       929	buffer.c	FUNCTION_13	CALL_14
0x4001643	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       929	buffer.c	FUNCTION_13	CALL_14
0x4001647	    0x48c780081700	            mov qword [rax + 0x1708], 0 	       929	buffer.c	FUNCTION_13	CALL_14
0x4001652	              0x90	                                     nop	       931	buffer.c	FUNCTION_13
0x4001653	              0xc9	                                   leave	       931	buffer.c	FUNCTION_13
0x4001654	              0xc3	                                     ret	       931	buffer.c	FUNCTION_13
build_stl_str_hl	CALL,65:functions,0:SWITCH,2:FOR,20:ELSE,21:DO,0:WHILE,12:IF,98	2508
0x4006cf4	              0x55	                                push rbp	      3823	buffer.c	FUNCTION_65
0x4006cf5	          0x4889e5	                            mov rbp, rsp	      3823	buffer.c	FUNCTION_65
0x4006cf8	              0x53	                                push rbx	      3823	buffer.c	FUNCTION_65
0x4006cf9	    0x4881ec280a00	                          sub rsp, 0xa28	      3823	buffer.c	FUNCTION_65
0x4006d00	    0x4889bd08f6ff	            mov qword [rbp - 0x9f8], rdi	      3823	buffer.c	FUNCTION_65
0x4006d07	    0x4889b500f6ff	            mov qword [rbp - 0xa00], rsi	      3823	buffer.c	FUNCTION_65
0x4006d0e	    0x488995f8f5ff	            mov qword [rbp - 0xa08], rdx	      3823	buffer.c	FUNCTION_65
0x4006d15	    0x48898df0f5ff	            mov qword [rbp - 0xa10], rcx	      3823	buffer.c	FUNCTION_65
0x4006d1c	    0x448985ecf5ff	            mov dword [rbp - 0xa14], r8d	      3823	buffer.c	FUNCTION_65
0x4006d23	    0x44898de8f5ff	            mov dword [rbp - 0xa18], r9d	      3823	buffer.c	FUNCTION_65
0x4006d2a	        0x488b4518	            mov rax, qword [rbp + 0x18] 	      3823	buffer.c	FUNCTION_65
0x4006d2e	    0x488985e0f5ff	            mov qword [rbp - 0xa20], rax	      3823	buffer.c	FUNCTION_65
0x4006d35	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      3823	buffer.c	FUNCTION_65
0x4006d39	    0x488985d8f5ff	            mov qword [rbp - 0xa28], rax	      3823	buffer.c	FUNCTION_65
0x4006d40	    0x64488b042528	                mov rax, qword fs:[0x28]	      3823	buffer.c	FUNCTION_65
0x4006d49	        0x488945e8	             mov qword [rbp - 0x18], rax	      3823	buffer.c	FUNCTION_65
0x4006d4d	            0x31c0	                            xor eax, eax	      3823	buffer.c	FUNCTION_65
0x4006d4f	    0x488b85f0f5ff	            mov rax, qword [rbp - 0xa10]	      3872	buffer.c	FUNCTION_65
0x4006d56	    0x488985a0f6ff	            mov qword [rbp - 0x960], rax	      3872	buffer.c	FUNCTION_65
0x4006d5d	    0x8b0500000000	            mov eax, dword [0x04006d63] 	      3874	buffer.c	FUNCTION_65
0x4006d63	    0x898558f6ffff	            mov dword [rbp - 0x9a8], eax	      3874	buffer.c	FUNCTION_65
0x4006d69	    0x488b05000000	            mov rax, qword [0x04006d70] 	      3875	buffer.c	FUNCTION_65
0x4006d70	    0x8b8028010000	           mov eax, dword [rax + 0x128] 	      3875	buffer.c	FUNCTION_65
0x4006d76	    0x89855cf6ffff	            mov dword [rbp - 0x9a4], eax	      3875	buffer.c	FUNCTION_65
0x4006d7c	    0x488b85f0f5ff	            mov rax, qword [rbp - 0xa10]	      3882	buffer.c	FUNCTION_65	IF_1
0x4006d83	           0xfb600	                   movzx eax, byte [rax]	      3882	buffer.c	FUNCTION_65	IF_1
0x4006d86	            0x3c25	                            cmp al, 0x25	      3882	buffer.c	FUNCTION_65	IF_1
0x4006d88	            0x7551	                           jne 0x4006ddb	      3882	buffer.c	FUNCTION_65	IF_1
0x4006d8a	    0x488b85f0f5ff	            mov rax, qword [rbp - 0xa10]	      3882	buffer.c	FUNCTION_65	IF_1
0x4006d91	        0x4883c001	                              add rax, 1	      3882	buffer.c	FUNCTION_65	IF_1
0x4006d95	           0xfb600	                   movzx eax, byte [rax]	      3882	buffer.c	FUNCTION_65	IF_1
0x4006d98	            0x3c21	                            cmp al, 0x21	      3882	buffer.c	FUNCTION_65	IF_1
0x4006d9a	            0x753f	                           jne 0x4006ddb	      3882	buffer.c	FUNCTION_65	IF_1
0x4006d9c	    0x488b85f0f5ff	            mov rax, qword [rbp - 0xa10]	      3884	buffer.c	FUNCTION_65	IF_1	CALL_1
0x4006da3	        0x488d4802	                      lea rcx, [rax + 2]	      3884	buffer.c	FUNCTION_65	IF_1	CALL_1
0x4006da7	    0x8b85ecf5ffff	            mov eax, dword [rbp - 0xa14]	      3884	buffer.c	FUNCTION_65	IF_1	CALL_1
0x4006dad	            0x89c2	                            mov edx, eax	      3884	buffer.c	FUNCTION_65	IF_1	CALL_1
0x4006daf	      0xbe00000000	                              mov esi, 0	      3884	buffer.c	FUNCTION_65	IF_1	CALL_1
0x4006db4	          0x4889cf	                            mov rdi, rcx	      3884	buffer.c	FUNCTION_65	IF_1	CALL_1
0x4006db7	      0xe800000000	                          call 0x4006dbc	      3884	buffer.c	FUNCTION_65	IF_1	CALL_1
0x4006dbc	    0x488985a0f6ff	            mov qword [rbp - 0x960], rax	      3884	buffer.c	FUNCTION_65	IF_1	CALL_1
0x4006dc3	    0x4883bda0f6ff	              cmp qword [rbp - 0x960], 0	      3885	buffer.c	FUNCTION_65	IF_1	IF_2
0x4006dcb	            0x750e	                           jne 0x4006ddb	      3885	buffer.c	FUNCTION_65	IF_1	IF_2
0x4006dcd	    0x488b85f0f5ff	            mov rax, qword [rbp - 0xa10]	      3886	buffer.c	FUNCTION_65	IF_1	IF_2
0x4006dd4	    0x488985a0f6ff	            mov qword [rbp - 0x960], rax	      3886	buffer.c	FUNCTION_65	IF_1	IF_2
0x4006ddb	    0x83bde8f5ffff	              cmp dword [rbp - 0xa18], 0	      3890	buffer.c	FUNCTION_65	IF_3
0x4006de2	            0x750c	                           jne 0x4006df0	      3890	buffer.c	FUNCTION_65	IF_3
0x4006de4	    0xc785e8f5ffff	          mov dword [rbp - 0xa18], 0x20 	      3891	buffer.c	FUNCTION_65	IF_3
0x4006dee	            0xeb20	                           jmp 0x4006e10	      3891	buffer.c	FUNCTION_65	IF_3
0x4006df0	    0x488b05000000	            mov rax, qword [0x04006df7] 	      3894	buffer.c	FUNCTION_65	ELSE_1	IF_4	CALL_2
0x4006df7	    0x8b95e8f5ffff	            mov edx, dword [rbp - 0xa18]	      3894	buffer.c	FUNCTION_65	ELSE_1	IF_4	CALL_2
0x4006dfd	            0x89d7	                            mov edi, edx	      3894	buffer.c	FUNCTION_65	ELSE_1	IF_4	CALL_2
0x4006dff	            0xffd0	                                call rax	      3894	buffer.c	FUNCTION_65	ELSE_1	IF_4	CALL_2
0x4006e01	          0x83f801	                              cmp eax, 1	      3894	buffer.c	FUNCTION_65	ELSE_1	IF_4	CALL_2
0x4006e04	            0x7e0a	                           jle 0x4006e10	      3894	buffer.c	FUNCTION_65	ELSE_1	IF_4	CALL_2
0x4006e06	    0xc785e8f5ffff	          mov dword [rbp - 0xa18], 0x2d 	      3895	buffer.c	FUNCTION_65	ELSE_1	IF_4
0x4006e10	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      3900	buffer.c	FUNCTION_65	CALL_3
0x4006e17	        0x488b4838	            mov rcx, qword [rax + 0x38] 	      3900	buffer.c	FUNCTION_65	CALL_3
0x4006e1b	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      3900	buffer.c	FUNCTION_65	CALL_3
0x4006e22	        0x488b4008	                mov rax, qword [rax + 8]	      3900	buffer.c	FUNCTION_65	CALL_3
0x4006e26	      0xba00000000	                              mov edx, 0	      3900	buffer.c	FUNCTION_65	CALL_3
0x4006e2b	          0x4889ce	                            mov rsi, rcx	      3900	buffer.c	FUNCTION_65	CALL_3
0x4006e2e	          0x4889c7	                            mov rdi, rax	      3900	buffer.c	FUNCTION_65	CALL_3
0x4006e31	      0xe800000000	                          call 0x4006e36	      3900	buffer.c	FUNCTION_65	CALL_3
0x4006e36	    0x48898578f6ff	            mov qword [rbp - 0x988], rax	      3900	buffer.c	FUNCTION_65	CALL_3
0x4006e3d	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      3901	buffer.c	FUNCTION_65
0x4006e44	           0xfb600	                   movzx eax, byte [rax]	      3901	buffer.c	FUNCTION_65
0x4006e47	            0x84c0	                             test al, al	      3901	buffer.c	FUNCTION_65
0x4006e49	           0xf94c0	                                 sete al	      3901	buffer.c	FUNCTION_65
0x4006e4c	           0xfb6c0	                           movzx eax, al	      3901	buffer.c	FUNCTION_65
0x4006e4f	    0x898560f6ffff	            mov dword [rbp - 0x9a0], eax	      3901	buffer.c	FUNCTION_65
0x4006e55	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      3905	buffer.c	FUNCTION_65	IF_5	CALL_4
0x4006e5c	          0x8b5840	            mov ebx, dword [rax + 0x40] 	      3905	buffer.c	FUNCTION_65	IF_5	CALL_4
0x4006e5f	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      3905	buffer.c	FUNCTION_65	IF_5	CALL_4
0x4006e66	          0x4889c7	                            mov rdi, rax	      3905	buffer.c	FUNCTION_65	IF_5	CALL_4
0x4006e69	      0xe800000000	                          call 0x4006e6e	      3905	buffer.c	FUNCTION_65	IF_5	CALL_4
0x4006e6e	            0x39c3	                            cmp ebx, eax	      3905	buffer.c	FUNCTION_65	IF_5	CALL_4
0x4006e70	            0x7e0c	                           jle 0x4006e7e	      3905	buffer.c	FUNCTION_65	IF_5	CALL_4
0x4006e72	    0xc78520f6ffff	              mov dword [rbp - 0x9e0], 0	      3906	buffer.c	FUNCTION_65	IF_5
0x4006e7c	            0xeb29	                           jmp 0x4006ea7	      3906	buffer.c	FUNCTION_65	IF_5
0x4006e7e	    0x488b05000000	            mov rax, qword [0x04006e85] 	      3909	buffer.c	FUNCTION_65	ELSE_2
0x4006e85	    0x488b9508f6ff	            mov rdx, qword [rbp - 0x9f8]	      3909	buffer.c	FUNCTION_65	ELSE_2
0x4006e8c	          0x8b5240	            mov edx, dword [rdx + 0x40] 	      3909	buffer.c	FUNCTION_65	ELSE_2
0x4006e8f	          0x4863ca	                         movsxd rcx, edx	      3909	buffer.c	FUNCTION_65	ELSE_2
0x4006e92	    0x488b9578f6ff	            mov rdx, qword [rbp - 0x988]	      3909	buffer.c	FUNCTION_65	ELSE_2
0x4006e99	          0x4801ca	                            add rdx, rcx	      3909	buffer.c	FUNCTION_65	ELSE_2
0x4006e9c	          0x4889d7	                            mov rdi, rdx	      3909	buffer.c	FUNCTION_65	ELSE_2
0x4006e9f	            0xffd0	                                call rax	      3909	buffer.c	FUNCTION_65	ELSE_2
0x4006ea1	    0x898520f6ffff	            mov dword [rbp - 0x9e0], eax	      3909	buffer.c	FUNCTION_65	ELSE_2
0x4006ea7	    0xc78548f6ffff	              mov dword [rbp - 0x9b8], 0	      3914	buffer.c	FUNCTION_65
0x4006eb1	    0x488b8500f6ff	            mov rax, qword [rbp - 0xa00]	      3915	buffer.c	FUNCTION_65
0x4006eb8	    0x48898578f6ff	            mov qword [rbp - 0x988], rax	      3915	buffer.c	FUNCTION_65
0x4006ebf	    0xc7853cf6ffff	              mov dword [rbp - 0x9c4], 0	      3916	buffer.c	FUNCTION_65
0x4006ec9	    0xc78524f6ffff	              mov dword [rbp - 0x9dc], 1	      3917	buffer.c	FUNCTION_65
0x4006ed3	    0xc78528f6ffff	              mov dword [rbp - 0x9d8], 0	      3918	buffer.c	FUNCTION_65
0x4006edd	    0x488b85a0f6ff	            mov rax, qword [rbp - 0x960]	      3919	buffer.c	FUNCTION_65	FOR_1
0x4006ee4	    0x48898568f6ff	            mov qword [rbp - 0x998], rax	      3919	buffer.c	FUNCTION_65	FOR_1
0x4006eeb	      0xe95c220000	                           jmp 0x400914c	      3919	buffer.c	FUNCTION_65	FOR_1
0x4006ef0	    0x83bd3cf6ffff	          cmp dword [rbp - 0x9c4], 0x50 	      3921	buffer.c	FUNCTION_65	FOR_1	IF_6
0x4006ef7	            0x7543	                           jne 0x4006f3c	      3921	buffer.c	FUNCTION_65	FOR_1	IF_6
0x4006ef9	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      3925	buffer.c	FUNCTION_65	FOR_1	IF_6	IF_7
0x4006f00	        0x488d4806	                      lea rcx, [rax + 6]	      3925	buffer.c	FUNCTION_65	FOR_1	IF_6	IF_7
0x4006f04	    0x488b9500f6ff	            mov rdx, qword [rbp - 0xa00]	      3925	buffer.c	FUNCTION_65	FOR_1	IF_6	IF_7
0x4006f0b	    0x488b85f8f5ff	            mov rax, qword [rbp - 0xa08]	      3925	buffer.c	FUNCTION_65	FOR_1	IF_6	IF_7
0x4006f12	          0x4801d0	                            add rax, rdx	      3925	buffer.c	FUNCTION_65	FOR_1	IF_6	IF_7
0x4006f15	          0x4839c1	                            cmp rcx, rax	      3925	buffer.c	FUNCTION_65	FOR_1	IF_6	IF_7
0x4006f18	     0xf8342220000	                           jae 0x4009160	      3925	buffer.c	FUNCTION_65	FOR_1	IF_6	IF_7
0x4006f1e	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      3927	buffer.c	FUNCTION_65	FOR_1	IF_6	IF_7	CALL_5
0x4006f25	    0xc70020453534	            mov dword [rax], 0x34354520 	      3927	buffer.c	FUNCTION_65	FOR_1	IF_6	IF_7	CALL_5
0x4006f2b	        0xc6400431	                mov byte [rax + 4], 0x31	      3927	buffer.c	FUNCTION_65	FOR_1	IF_6	IF_7	CALL_5
0x4006f2f	    0x48838578f6ff	              add qword [rbp - 0x988], 5	      3928	buffer.c	FUNCTION_65	FOR_1	IF_6	IF_7
0x4006f37	      0xe924220000	                           jmp 0x4009160	      3930	buffer.c	FUNCTION_65	FOR_1	IF_6
0x4006f3c	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      3933	buffer.c	FUNCTION_65	FOR_1	IF_8
0x4006f43	           0xfb600	                   movzx eax, byte [rax]	      3933	buffer.c	FUNCTION_65	FOR_1	IF_8
0x4006f46	            0x84c0	                             test al, al	      3933	buffer.c	FUNCTION_65	FOR_1	IF_8
0x4006f48	            0x744f	                            je 0x4006f99	      3933	buffer.c	FUNCTION_65	FOR_1	IF_8
0x4006f4a	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      3933	buffer.c	FUNCTION_65	FOR_1	IF_8
0x4006f51	           0xfb600	                   movzx eax, byte [rax]	      3933	buffer.c	FUNCTION_65	FOR_1	IF_8
0x4006f54	            0x3c25	                            cmp al, 0x25	      3933	buffer.c	FUNCTION_65	FOR_1	IF_8
0x4006f56	            0x7441	                            je 0x4006f99	      3933	buffer.c	FUNCTION_65	FOR_1	IF_8
0x4006f58	    0xc78528f6ffff	              mov dword [rbp - 0x9d8], 0	      3934	buffer.c	FUNCTION_65	FOR_1	IF_8
0x4006f62	    0x8b8528f6ffff	            mov eax, dword [rbp - 0x9d8]	      3934	buffer.c	FUNCTION_65	FOR_1	IF_8
0x4006f68	    0x898524f6ffff	            mov dword [rbp - 0x9dc], eax	      3934	buffer.c	FUNCTION_65	FOR_1	IF_8
0x4006f6e	            0xeb29	                           jmp 0x4006f99	      3939	buffer.c	FUNCTION_65	FOR_1	WHILE_1
0x4006f70	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      3940	buffer.c	FUNCTION_65	FOR_1	WHILE_1
0x4006f77	        0x488d5001	                      lea rdx, [rax + 1]	      3940	buffer.c	FUNCTION_65	FOR_1	WHILE_1
0x4006f7b	    0x48899578f6ff	            mov qword [rbp - 0x988], rdx	      3940	buffer.c	FUNCTION_65	FOR_1	WHILE_1
0x4006f82	    0x488b9568f6ff	            mov rdx, qword [rbp - 0x998]	      3940	buffer.c	FUNCTION_65	FOR_1	WHILE_1
0x4006f89	        0x488d4a01	                      lea rcx, [rdx + 1]	      3940	buffer.c	FUNCTION_65	FOR_1	WHILE_1
0x4006f8d	    0x48898d68f6ff	            mov qword [rbp - 0x998], rcx	      3940	buffer.c	FUNCTION_65	FOR_1	WHILE_1
0x4006f94	           0xfb612	                   movzx edx, byte [rdx]	      3940	buffer.c	FUNCTION_65	FOR_1	WHILE_1
0x4006f97	            0x8810	                      mov byte [rax], dl	      3940	buffer.c	FUNCTION_65	FOR_1	WHILE_1
0x4006f99	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      3939	buffer.c	FUNCTION_65	FOR_1	WHILE_1
0x4006fa0	           0xfb600	                   movzx eax, byte [rax]	      3939	buffer.c	FUNCTION_65	FOR_1	WHILE_1
0x4006fa3	            0x84c0	                             test al, al	      3939	buffer.c	FUNCTION_65	FOR_1	WHILE_1
0x4006fa5	            0x742f	                            je 0x4006fd6	      3939	buffer.c	FUNCTION_65	FOR_1	WHILE_1
0x4006fa7	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      3939	buffer.c	FUNCTION_65	FOR_1	WHILE_1
0x4006fae	           0xfb600	                   movzx eax, byte [rax]	      3939	buffer.c	FUNCTION_65	FOR_1	WHILE_1
0x4006fb1	            0x3c25	                            cmp al, 0x25	      3939	buffer.c	FUNCTION_65	FOR_1	WHILE_1
0x4006fb3	            0x7421	                            je 0x4006fd6	      3939	buffer.c	FUNCTION_65	FOR_1	WHILE_1
0x4006fb5	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      3939	buffer.c	FUNCTION_65	FOR_1	WHILE_1
0x4006fbc	        0x488d4801	                      lea rcx, [rax + 1]	      3939	buffer.c	FUNCTION_65	FOR_1	WHILE_1
0x4006fc0	    0x488b9500f6ff	            mov rdx, qword [rbp - 0xa00]	      3939	buffer.c	FUNCTION_65	FOR_1	WHILE_1
0x4006fc7	    0x488b85f8f5ff	            mov rax, qword [rbp - 0xa08]	      3939	buffer.c	FUNCTION_65	FOR_1	WHILE_1
0x4006fce	          0x4801d0	                            add rax, rdx	      3939	buffer.c	FUNCTION_65	FOR_1	WHILE_1
0x4006fd1	          0x4839c1	                            cmp rcx, rax	      3939	buffer.c	FUNCTION_65	FOR_1	WHILE_1
0x4006fd4	            0x729a	                            jb 0x4006f70	      3939	buffer.c	FUNCTION_65	FOR_1	WHILE_1
0x4006fd6	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      3941	buffer.c	FUNCTION_65	FOR_1	IF_9
0x4006fdd	           0xfb600	                   movzx eax, byte [rax]	      3941	buffer.c	FUNCTION_65	FOR_1	IF_9
0x4006fe0	            0x84c0	                             test al, al	      3941	buffer.c	FUNCTION_65	FOR_1	IF_9
0x4006fe2	     0xf8485210000	                            je 0x400916d	      3941	buffer.c	FUNCTION_65	FOR_1	IF_9
0x4006fe8	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      3941	buffer.c	FUNCTION_65	FOR_1	IF_9
0x4006fef	        0x488d4801	                      lea rcx, [rax + 1]	      3941	buffer.c	FUNCTION_65	FOR_1	IF_9
0x4006ff3	    0x488b9500f6ff	            mov rdx, qword [rbp - 0xa00]	      3941	buffer.c	FUNCTION_65	FOR_1	IF_9
0x4006ffa	    0x488b85f8f5ff	            mov rax, qword [rbp - 0xa08]	      3941	buffer.c	FUNCTION_65	FOR_1	IF_9
0x4007001	          0x4801d0	                            add rax, rdx	      3941	buffer.c	FUNCTION_65	FOR_1	IF_9
0x4007004	          0x4839c1	                            cmp rcx, rax	      3941	buffer.c	FUNCTION_65	FOR_1	IF_9
0x4007007	     0xf8360210000	                           jae 0x400916d	      3941	buffer.c	FUNCTION_65	FOR_1	IF_9
0x400700d	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      3947	buffer.c	FUNCTION_65	FOR_1
0x4007014	        0x4883c001	                              add rax, 1	      3947	buffer.c	FUNCTION_65	FOR_1
0x4007018	    0x48898568f6ff	            mov qword [rbp - 0x998], rax	      3947	buffer.c	FUNCTION_65	FOR_1
0x400701f	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      3948	buffer.c	FUNCTION_65	FOR_1	IF_10
0x4007026	           0xfb600	                   movzx eax, byte [rax]	      3948	buffer.c	FUNCTION_65	FOR_1	IF_10
0x4007029	            0x84c0	                             test al, al	      3948	buffer.c	FUNCTION_65	FOR_1	IF_10
0x400702b	     0xf8432210000	                            je 0x4009163	      3948	buffer.c	FUNCTION_65	FOR_1	IF_10
0x4007031	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      3950	buffer.c	FUNCTION_65	FOR_1	IF_11
0x4007038	           0xfb600	                   movzx eax, byte [rax]	      3950	buffer.c	FUNCTION_65	FOR_1	IF_11
0x400703b	            0x3c25	                            cmp al, 0x25	      3950	buffer.c	FUNCTION_65	FOR_1	IF_11
0x400703d	            0x7569	                           jne 0x40070a8	      3950	buffer.c	FUNCTION_65	FOR_1	IF_11
0x400703f	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      3952	buffer.c	FUNCTION_65	FOR_1	IF_11	IF_12
0x4007046	        0x488d4801	                      lea rcx, [rax + 1]	      3952	buffer.c	FUNCTION_65	FOR_1	IF_11	IF_12
0x400704a	    0x488b9500f6ff	            mov rdx, qword [rbp - 0xa00]	      3952	buffer.c	FUNCTION_65	FOR_1	IF_11	IF_12
0x4007051	    0x488b85f8f5ff	            mov rax, qword [rbp - 0xa08]	      3952	buffer.c	FUNCTION_65	FOR_1	IF_11	IF_12
0x4007058	          0x4801d0	                            add rax, rdx	      3952	buffer.c	FUNCTION_65	FOR_1	IF_11	IF_12
0x400705b	          0x4839c1	                            cmp rcx, rax	      3952	buffer.c	FUNCTION_65	FOR_1	IF_11	IF_12
0x400705e	     0xf8302210000	                           jae 0x4009166	      3952	buffer.c	FUNCTION_65	FOR_1	IF_11	IF_12
0x4007064	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      3954	buffer.c	FUNCTION_65	FOR_1	IF_11
0x400706b	        0x488d5001	                      lea rdx, [rax + 1]	      3954	buffer.c	FUNCTION_65	FOR_1	IF_11
0x400706f	    0x48899578f6ff	            mov qword [rbp - 0x988], rdx	      3954	buffer.c	FUNCTION_65	FOR_1	IF_11
0x4007076	    0x488b9568f6ff	            mov rdx, qword [rbp - 0x998]	      3954	buffer.c	FUNCTION_65	FOR_1	IF_11
0x400707d	        0x488d4a01	                      lea rcx, [rdx + 1]	      3954	buffer.c	FUNCTION_65	FOR_1	IF_11
0x4007081	    0x48898d68f6ff	            mov qword [rbp - 0x998], rcx	      3954	buffer.c	FUNCTION_65	FOR_1	IF_11
0x4007088	           0xfb612	                   movzx edx, byte [rdx]	      3954	buffer.c	FUNCTION_65	FOR_1	IF_11
0x400708b	            0x8810	                      mov byte [rax], dl	      3954	buffer.c	FUNCTION_65	FOR_1	IF_11
0x400708d	    0xc78528f6ffff	              mov dword [rbp - 0x9d8], 0	      3955	buffer.c	FUNCTION_65	FOR_1	IF_11
0x4007097	    0x8b8528f6ffff	            mov eax, dword [rbp - 0x9d8]	      3955	buffer.c	FUNCTION_65	FOR_1	IF_11
0x400709d	    0x898524f6ffff	            mov dword [rbp - 0x9dc], eax	      3955	buffer.c	FUNCTION_65	FOR_1	IF_11
0x40070a3	      0xe9a4200000	                           jmp 0x400914c	      3956	buffer.c	FUNCTION_65	FOR_1	IF_11
0x40070a8	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      3958	buffer.c	FUNCTION_65	FOR_1	IF_13
0x40070af	           0xfb600	                   movzx eax, byte [rax]	      3958	buffer.c	FUNCTION_65	FOR_1	IF_13
0x40070b2	            0x3c3d	                            cmp al, 0x3d	      3958	buffer.c	FUNCTION_65	FOR_1	IF_13
0x40070b4	     0xf8585000000	                           jne 0x400713f	      3958	buffer.c	FUNCTION_65	FOR_1	IF_13
0x40070ba	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      3960	buffer.c	FUNCTION_65	FOR_1	IF_13
0x40070c1	        0x4883c001	                              add rax, 1	      3960	buffer.c	FUNCTION_65	FOR_1	IF_13
0x40070c5	    0x48898568f6ff	            mov qword [rbp - 0x998], rax	      3960	buffer.c	FUNCTION_65	FOR_1	IF_13
0x40070cc	    0x83bd48f6ffff	              cmp dword [rbp - 0x9b8], 0	      3961	buffer.c	FUNCTION_65	FOR_1	IF_13	IF_14
0x40070d3	            0x7e05	                           jle 0x40070da	      3961	buffer.c	FUNCTION_65	FOR_1	IF_13	IF_14
0x40070d5	      0xe972200000	                           jmp 0x400914c	      3962	buffer.c	FUNCTION_65	FOR_1	IF_13	IF_14
0x40070da	    0x8b853cf6ffff	            mov eax, dword [rbp - 0x9c4]	      3963	buffer.c	FUNCTION_65	FOR_1	IF_13
0x40070e0	          0x4863d0	                         movsxd rdx, eax	      3963	buffer.c	FUNCTION_65	FOR_1	IF_13
0x40070e3	          0x4889d0	                            mov rax, rdx	      3963	buffer.c	FUNCTION_65	FOR_1	IF_13
0x40070e6	          0x4801c0	                            add rax, rax	      3963	buffer.c	FUNCTION_65	FOR_1	IF_13
0x40070e9	          0x4801d0	                            add rax, rdx	      3963	buffer.c	FUNCTION_65	FOR_1	IF_13
0x40070ec	        0x48c1e003	                              shl rax, 3	      3963	buffer.c	FUNCTION_65	FOR_1	IF_13
0x40070f0	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      3963	buffer.c	FUNCTION_65	FOR_1	IF_13
0x40070f4	          0x4801d8	                            add rax, rbx	      3963	buffer.c	FUNCTION_65	FOR_1	IF_13
0x40070f7	    0x482de0070000	                          sub rax, 0x7e0	      3963	buffer.c	FUNCTION_65	FOR_1	IF_13
0x40070fd	    0xc70003000000	                      mov dword [rax], 3	      3963	buffer.c	FUNCTION_65	FOR_1	IF_13
0x4007103	    0x8b853cf6ffff	            mov eax, dword [rbp - 0x9c4]	      3964	buffer.c	FUNCTION_65	FOR_1	IF_13
0x4007109	          0x8d5001	                      lea edx, [rax + 1]	      3964	buffer.c	FUNCTION_65	FOR_1	IF_13
0x400710c	    0x89953cf6ffff	            mov dword [rbp - 0x9c4], edx	      3964	buffer.c	FUNCTION_65	FOR_1	IF_13
0x4007112	          0x4863d0	                         movsxd rdx, eax	      3964	buffer.c	FUNCTION_65	FOR_1	IF_13
0x4007115	          0x4889d0	                            mov rax, rdx	      3964	buffer.c	FUNCTION_65	FOR_1	IF_13
0x4007118	          0x4801c0	                            add rax, rax	      3964	buffer.c	FUNCTION_65	FOR_1	IF_13
0x400711b	          0x4801d0	                            add rax, rdx	      3964	buffer.c	FUNCTION_65	FOR_1	IF_13
0x400711e	        0x48c1e003	                              shl rax, 3	      3964	buffer.c	FUNCTION_65	FOR_1	IF_13
0x4007122	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      3964	buffer.c	FUNCTION_65	FOR_1	IF_13
0x4007126	          0x4801d8	                            add rax, rbx	      3964	buffer.c	FUNCTION_65	FOR_1	IF_13
0x4007129	    0x488d9010f8ff	                  lea rdx, [rax - 0x7f0]	      3964	buffer.c	FUNCTION_65	FOR_1	IF_13
0x4007130	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      3964	buffer.c	FUNCTION_65	FOR_1	IF_13
0x4007137	          0x488902	                    mov qword [rdx], rax	      3964	buffer.c	FUNCTION_65	FOR_1	IF_13
0x400713a	      0xe90d200000	                           jmp 0x400914c	      3965	buffer.c	FUNCTION_65	FOR_1	IF_13
0x400713f	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      3967	buffer.c	FUNCTION_65	FOR_1	IF_15
0x4007146	           0xfb600	                   movzx eax, byte [rax]	      3967	buffer.c	FUNCTION_65	FOR_1	IF_15
0x4007149	            0x3c3c	                            cmp al, 0x3c	      3967	buffer.c	FUNCTION_65	FOR_1	IF_15
0x400714b	            0x7577	                           jne 0x40071c4	      3967	buffer.c	FUNCTION_65	FOR_1	IF_15
0x400714d	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      3969	buffer.c	FUNCTION_65	FOR_1	IF_15
0x4007154	        0x4883c001	                              add rax, 1	      3969	buffer.c	FUNCTION_65	FOR_1	IF_15
0x4007158	    0x48898568f6ff	            mov qword [rbp - 0x998], rax	      3969	buffer.c	FUNCTION_65	FOR_1	IF_15
0x400715f	    0x8b853cf6ffff	            mov eax, dword [rbp - 0x9c4]	      3970	buffer.c	FUNCTION_65	FOR_1	IF_15
0x4007165	          0x4863d0	                         movsxd rdx, eax	      3970	buffer.c	FUNCTION_65	FOR_1	IF_15
0x4007168	          0x4889d0	                            mov rax, rdx	      3970	buffer.c	FUNCTION_65	FOR_1	IF_15
0x400716b	          0x4801c0	                            add rax, rax	      3970	buffer.c	FUNCTION_65	FOR_1	IF_15
0x400716e	          0x4801d0	                            add rax, rdx	      3970	buffer.c	FUNCTION_65	FOR_1	IF_15
0x4007171	        0x48c1e003	                              shl rax, 3	      3970	buffer.c	FUNCTION_65	FOR_1	IF_15
0x4007175	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      3970	buffer.c	FUNCTION_65	FOR_1	IF_15
0x4007179	          0x4801d8	                            add rax, rbx	      3970	buffer.c	FUNCTION_65	FOR_1	IF_15
0x400717c	    0x482de0070000	                          sub rax, 0x7e0	      3970	buffer.c	FUNCTION_65	FOR_1	IF_15
0x4007182	    0xc70006000000	                      mov dword [rax], 6	      3970	buffer.c	FUNCTION_65	FOR_1	IF_15
0x4007188	    0x8b853cf6ffff	            mov eax, dword [rbp - 0x9c4]	      3971	buffer.c	FUNCTION_65	FOR_1	IF_15
0x400718e	          0x8d5001	                      lea edx, [rax + 1]	      3971	buffer.c	FUNCTION_65	FOR_1	IF_15
0x4007191	    0x89953cf6ffff	            mov dword [rbp - 0x9c4], edx	      3971	buffer.c	FUNCTION_65	FOR_1	IF_15
0x4007197	          0x4863d0	                         movsxd rdx, eax	      3971	buffer.c	FUNCTION_65	FOR_1	IF_15
0x400719a	          0x4889d0	                            mov rax, rdx	      3971	buffer.c	FUNCTION_65	FOR_1	IF_15
0x400719d	          0x4801c0	                            add rax, rax	      3971	buffer.c	FUNCTION_65	FOR_1	IF_15
0x40071a0	          0x4801d0	                            add rax, rdx	      3971	buffer.c	FUNCTION_65	FOR_1	IF_15
0x40071a3	        0x48c1e003	                              shl rax, 3	      3971	buffer.c	FUNCTION_65	FOR_1	IF_15
0x40071a7	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      3971	buffer.c	FUNCTION_65	FOR_1	IF_15
0x40071ab	          0x4801d8	                            add rax, rbx	      3971	buffer.c	FUNCTION_65	FOR_1	IF_15
0x40071ae	    0x488d9010f8ff	                  lea rdx, [rax - 0x7f0]	      3971	buffer.c	FUNCTION_65	FOR_1	IF_15
0x40071b5	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      3971	buffer.c	FUNCTION_65	FOR_1	IF_15
0x40071bc	          0x488902	                    mov qword [rdx], rax	      3971	buffer.c	FUNCTION_65	FOR_1	IF_15
0x40071bf	      0xe9881f0000	                           jmp 0x400914c	      3972	buffer.c	FUNCTION_65	FOR_1	IF_15
0x40071c4	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      3974	buffer.c	FUNCTION_65	FOR_1	IF_16
0x40071cb	           0xfb600	                   movzx eax, byte [rax]	      3974	buffer.c	FUNCTION_65	FOR_1	IF_16
0x40071ce	            0x3c29	                            cmp al, 0x29	      3974	buffer.c	FUNCTION_65	FOR_1	IF_16
0x40071d0	     0xf85bc070000	                           jne 0x4007992	      3974	buffer.c	FUNCTION_65	FOR_1	IF_16
0x40071d6	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      3976	buffer.c	FUNCTION_65	FOR_1	IF_16
0x40071dd	        0x4883c001	                              add rax, 1	      3976	buffer.c	FUNCTION_65	FOR_1	IF_16
0x40071e1	    0x48898568f6ff	            mov qword [rbp - 0x998], rax	      3976	buffer.c	FUNCTION_65	FOR_1	IF_16
0x40071e8	    0x83bd48f6ffff	              cmp dword [rbp - 0x9b8], 0	      3977	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_17
0x40071ef	            0x7f05	                            jg 0x40071f6	      3977	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_17
0x40071f1	      0xe9561f0000	                           jmp 0x400914c	      3978	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_17
0x40071f6	    0x83ad48f6ffff	              sub dword [rbp - 0x9b8], 1	      3979	buffer.c	FUNCTION_65	FOR_1	IF_16
0x40071fd	    0x8b8548f6ffff	            mov eax, dword [rbp - 0x9b8]	      3981	buffer.c	FUNCTION_65	FOR_1	IF_16
0x4007203	            0x4898	                                    cdqe	      3981	buffer.c	FUNCTION_65	FOR_1	IF_16
0x4007205	    0x8b8485c0f6ff	    mov eax, dword [rbp + rax*4 - 0x940]	      3981	buffer.c	FUNCTION_65	FOR_1	IF_16
0x400720c	          0x4863d0	                         movsxd rdx, eax	      3981	buffer.c	FUNCTION_65	FOR_1	IF_16
0x400720f	          0x4889d0	                            mov rax, rdx	      3981	buffer.c	FUNCTION_65	FOR_1	IF_16
0x4007212	          0x4801c0	                            add rax, rax	      3981	buffer.c	FUNCTION_65	FOR_1	IF_16
0x4007215	          0x4801d0	                            add rax, rdx	      3981	buffer.c	FUNCTION_65	FOR_1	IF_16
0x4007218	        0x48c1e003	                              shl rax, 3	      3981	buffer.c	FUNCTION_65	FOR_1	IF_16
0x400721c	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      3981	buffer.c	FUNCTION_65	FOR_1	IF_16
0x4007220	          0x4801d8	                            add rax, rbx	      3981	buffer.c	FUNCTION_65	FOR_1	IF_16
0x4007223	    0x482df0070000	                          sub rax, 0x7f0	      3981	buffer.c	FUNCTION_65	FOR_1	IF_16
0x4007229	          0x488b00	                    mov rax, qword [rax]	      3981	buffer.c	FUNCTION_65	FOR_1	IF_16
0x400722c	    0x48898570f6ff	            mov qword [rbp - 0x990], rax	      3981	buffer.c	FUNCTION_65	FOR_1	IF_16
0x4007233	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      3982	buffer.c	FUNCTION_65	FOR_1	IF_16
0x400723a	          0xc60000	                       mov byte [rax], 0	      3982	buffer.c	FUNCTION_65	FOR_1	IF_16
0x400723d	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      3983	buffer.c	FUNCTION_65	FOR_1	IF_16	CALL_6
0x4007244	          0x4889c7	                            mov rdi, rax	      3983	buffer.c	FUNCTION_65	FOR_1	IF_16	CALL_6
0x4007247	      0xe800000000	                          call 0x400724c	      3983	buffer.c	FUNCTION_65	FOR_1	IF_16	CALL_6
0x400724c	            0x4898	                                    cdqe	      3983	buffer.c	FUNCTION_65	FOR_1	IF_16	CALL_6
0x400724e	    0x48898580f6ff	            mov qword [rbp - 0x980], rax	      3983	buffer.c	FUNCTION_65	FOR_1	IF_16	CALL_6
0x4007255	    0x8b8548f6ffff	            mov eax, dword [rbp - 0x9b8]	      3984	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18
0x400725b	            0x4898	                                    cdqe	      3984	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18
0x400725d	    0x8b8485c0f6ff	    mov eax, dword [rbp + rax*4 - 0x940]	      3984	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18
0x4007264	          0x83c001	                              add eax, 1	      3984	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18
0x4007267	    0x3b853cf6ffff	            cmp eax, dword [rbp - 0x9c4]	      3984	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18
0x400726d	     0xf8dca010000	                           jge 0x400743d	      3984	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18
0x4007273	    0x8b8548f6ffff	            mov eax, dword [rbp - 0x9b8]	      3985	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18
0x4007279	            0x4898	                                    cdqe	      3985	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18
0x400727b	    0x8b8485c0f6ff	    mov eax, dword [rbp + rax*4 - 0x940]	      3985	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18
0x4007282	          0x4863d0	                         movsxd rdx, eax	      3985	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18
0x4007285	          0x4889d0	                            mov rax, rdx	      3985	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18
0x4007288	          0x4801c0	                            add rax, rax	      3985	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18
0x400728b	          0x4801d0	                            add rax, rdx	      3985	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18
0x400728e	        0x48c1e003	                              shl rax, 3	      3985	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18
0x4007292	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      3985	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18
0x4007296	          0x4801d8	                            add rax, rbx	      3985	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18
0x4007299	    0x482de8070000	                          sub rax, 0x7e8	      3985	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18
0x400729f	            0x8b00	                    mov eax, dword [rax]	      3985	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18
0x40072a1	            0x85c0	                           test eax, eax	      3985	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18
0x40072a3	     0xf8594010000	                           jne 0x400743d	      3985	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18
0x40072a9	    0xc78540f6ffff	              mov dword [rbp - 0x9c0], 0	      3989	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18
0x40072b3	    0x8b8540f6ffff	            mov eax, dword [rbp - 0x9c0]	      3989	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18
0x40072b9	    0x898544f6ffff	            mov dword [rbp - 0x9bc], eax	      3989	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18
0x40072bf	    0x8b8548f6ffff	            mov eax, dword [rbp - 0x9b8]	      3990	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2
0x40072c5	            0x4898	                                    cdqe	      3990	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2
0x40072c7	    0x8b8485c0f6ff	    mov eax, dword [rbp + rax*4 - 0x940]	      3990	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2
0x40072ce	          0x83e801	                              sub eax, 1	      3990	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2
0x40072d1	            0x4898	                                    cdqe	      3990	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2
0x40072d3	    0x48898588f6ff	            mov qword [rbp - 0x978], rax	      3990	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2
0x40072da	            0xeb67	                           jmp 0x4007343	      3990	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2
0x40072dc	    0x488b9588f6ff	            mov rdx, qword [rbp - 0x978]	      3992	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2	IF_19
0x40072e3	          0x4889d0	                            mov rax, rdx	      3992	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2	IF_19
0x40072e6	          0x4801c0	                            add rax, rax	      3992	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2	IF_19
0x40072e9	          0x4801d0	                            add rax, rdx	      3992	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2	IF_19
0x40072ec	        0x48c1e003	                              shl rax, 3	      3992	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2	IF_19
0x40072f0	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      3992	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2	IF_19
0x40072f4	          0x4801d8	                            add rax, rbx	      3992	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2	IF_19
0x40072f7	    0x482de0070000	                          sub rax, 0x7e0	      3992	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2	IF_19
0x40072fd	            0x8b00	                    mov eax, dword [rax]	      3992	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2	IF_19
0x40072ff	          0x83f804	                              cmp eax, 4	      3992	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2	IF_19
0x4007302	            0x7537	                           jne 0x400733b	      3992	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2	IF_19
0x4007304	    0x488b9588f6ff	            mov rdx, qword [rbp - 0x978]	      3994	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2	IF_19
0x400730b	          0x4889d0	                            mov rax, rdx	      3994	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2	IF_19
0x400730e	          0x4801c0	                            add rax, rax	      3994	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2	IF_19
0x4007311	          0x4801d0	                            add rax, rdx	      3994	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2	IF_19
0x4007314	        0x48c1e003	                              shl rax, 3	      3994	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2	IF_19
0x4007318	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      3994	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2	IF_19
0x400731c	          0x4801d8	                            add rax, rbx	      3994	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2	IF_19
0x400731f	    0x482de8070000	                          sub rax, 0x7e8	      3994	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2	IF_19
0x4007325	            0x8b00	                    mov eax, dword [rax]	      3994	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2	IF_19
0x4007327	    0x898540f6ffff	            mov dword [rbp - 0x9c0], eax	      3994	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2	IF_19
0x400732d	    0x8b8540f6ffff	            mov eax, dword [rbp - 0x9c0]	      3994	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2	IF_19
0x4007333	    0x898544f6ffff	            mov dword [rbp - 0x9bc], eax	      3994	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2	IF_19
0x4007339	            0xeb12	                           jmp 0x400734d	      3995	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2	IF_19
0x400733b	    0x4883ad88f6ff	              sub qword [rbp - 0x978], 1	      3990	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2
0x4007343	    0x4883bd88f6ff	              cmp qword [rbp - 0x978], 0	      3990	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2
0x400734b	            0x798f	                           jns 0x40072dc	      3990	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2
0x400734d	    0x8b8548f6ffff	            mov eax, dword [rbp - 0x9b8]	      3998	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3
0x4007353	            0x4898	                                    cdqe	      3998	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3
0x4007355	    0x8b8485c0f6ff	    mov eax, dword [rbp + rax*4 - 0x940]	      3998	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3
0x400735c	          0x83c001	                              add eax, 1	      3998	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3
0x400735f	            0x4898	                                    cdqe	      3998	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3
0x4007361	    0x48898588f6ff	            mov qword [rbp - 0x978], rax	      3998	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3
0x4007368	      0xe980000000	                           jmp 0x40073ed	      3998	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3
0x400736d	    0x488b9588f6ff	            mov rdx, qword [rbp - 0x978]	      4000	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_20
0x4007374	          0x4889d0	                            mov rax, rdx	      4000	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_20
0x4007377	          0x4801c0	                            add rax, rax	      4000	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_20
0x400737a	          0x4801d0	                            add rax, rdx	      4000	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_20
0x400737d	        0x48c1e003	                              shl rax, 3	      4000	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_20
0x4007381	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      4000	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_20
0x4007385	          0x4801d8	                            add rax, rbx	      4000	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_20
0x4007388	    0x482de0070000	                          sub rax, 0x7e0	      4000	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_20
0x400738e	            0x8b00	                    mov eax, dword [rax]	      4000	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_20
0x4007390	            0x85c0	                           test eax, eax	      4000	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_20
0x4007392	            0x7470	                            je 0x4007404	      4000	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_20
0x4007394	    0x488b9588f6ff	            mov rdx, qword [rbp - 0x978]	      4002	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_21
0x400739b	          0x4889d0	                            mov rax, rdx	      4002	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_21
0x400739e	          0x4801c0	                            add rax, rax	      4002	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_21
0x40073a1	          0x4801d0	                            add rax, rdx	      4002	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_21
0x40073a4	        0x48c1e003	                              shl rax, 3	      4002	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_21
0x40073a8	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      4002	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_21
0x40073ac	          0x4801d8	                            add rax, rbx	      4002	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_21
0x40073af	    0x482de0070000	                          sub rax, 0x7e0	      4002	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_21
0x40073b5	            0x8b00	                    mov eax, dword [rax]	      4002	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_21
0x40073b7	          0x83f804	                              cmp eax, 4	      4002	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_21
0x40073ba	            0x7529	                           jne 0x40073e5	      4002	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_21
0x40073bc	    0x488b9588f6ff	            mov rdx, qword [rbp - 0x978]	      4003	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_21
0x40073c3	          0x4889d0	                            mov rax, rdx	      4003	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_21
0x40073c6	          0x4801c0	                            add rax, rax	      4003	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_21
0x40073c9	          0x4801d0	                            add rax, rdx	      4003	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_21
0x40073cc	        0x48c1e003	                              shl rax, 3	      4003	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_21
0x40073d0	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      4003	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_21
0x40073d4	          0x4801d8	                            add rax, rbx	      4003	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_21
0x40073d7	    0x482de8070000	                          sub rax, 0x7e8	      4003	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_21
0x40073dd	            0x8b00	                    mov eax, dword [rax]	      4003	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_21
0x40073df	    0x898540f6ffff	            mov dword [rbp - 0x9c0], eax	      4003	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_21
0x40073e5	    0x48838588f6ff	              add qword [rbp - 0x978], 1	      3998	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3
0x40073ed	    0x8b853cf6ffff	            mov eax, dword [rbp - 0x9c4]	      3998	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3
0x40073f3	            0x4898	                                    cdqe	      3998	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3
0x40073f5	    0x483b8588f6ff	            cmp rax, qword [rbp - 0x978]	      3998	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3
0x40073fc	     0xf8f6bffffff	                            jg 0x400736d	      3998	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3
0x4007402	            0xeb01	                           jmp 0x4007405	      3998	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3
0x4007404	              0x90	                                     nop	      4001	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_20
0x4007405	    0x8b853cf6ffff	            mov eax, dword [rbp - 0x9c4]	      4005	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	IF_22
0x400740b	            0x4898	                                    cdqe	      4005	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	IF_22
0x400740d	    0x483b8588f6ff	            cmp rax, qword [rbp - 0x978]	      4005	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	IF_22
0x4007414	            0x7527	                           jne 0x400743d	      4005	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	IF_22
0x4007416	    0x8b8544f6ffff	            mov eax, dword [rbp - 0x9bc]	      4005	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	IF_22
0x400741c	    0x3b8540f6ffff	            cmp eax, dword [rbp - 0x9c0]	      4005	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	IF_22
0x4007422	            0x7519	                           jne 0x400743d	      4005	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	IF_22
0x4007424	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4007	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	IF_22
0x400742b	    0x48898578f6ff	            mov qword [rbp - 0x988], rax	      4007	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	IF_22
0x4007432	    0x48c78580f6ff	              mov qword [rbp - 0x980], 0	      4008	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	IF_22
0x400743d	    0x8b8548f6ffff	            mov eax, dword [rbp - 0x9b8]	      4011	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23
0x4007443	            0x4898	                                    cdqe	      4011	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23
0x4007445	    0x8b8485c0f6ff	    mov eax, dword [rbp + rax*4 - 0x940]	      4011	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23
0x400744c	          0x4863d0	                         movsxd rdx, eax	      4011	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23
0x400744f	          0x4889d0	                            mov rax, rdx	      4011	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23
0x4007452	          0x4801c0	                            add rax, rax	      4011	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23
0x4007455	          0x4801d0	                            add rax, rdx	      4011	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23
0x4007458	        0x48c1e003	                              shl rax, 3	      4011	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23
0x400745c	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      4011	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23
0x4007460	          0x4801d8	                            add rax, rbx	      4011	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23
0x4007463	    0x482de4070000	                          sub rax, 0x7e4	      4011	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23
0x4007469	            0x8b00	                    mov eax, dword [rax]	      4011	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23
0x400746b	            0x4898	                                    cdqe	      4011	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23
0x400746d	    0x483b8580f6ff	            cmp rax, qword [rbp - 0x980]	      4011	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23
0x4007474	     0xf8db3020000	                           jge 0x400772d	      4011	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23
0x400747a	    0x8b0500000000	            mov eax, dword [0x04007480] 	      4015	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24
0x4007480	            0x85c0	                           test eax, eax	      4015	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24
0x4007482	     0xf8494000000	                            je 0x400751c	      4015	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24
0x4007488	    0x48c78588f6ff	              mov qword [rbp - 0x978], 0	      4018	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24
0x4007493	            0xeb48	                           jmp 0x40074dd	      4019	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2
0x4007495	    0x488b9570f6ff	            mov rdx, qword [rbp - 0x990]	      4021	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2	CALL_7
0x400749c	    0x488b8588f6ff	            mov rax, qword [rbp - 0x978]	      4021	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2	CALL_7
0x40074a3	          0x4801d0	                            add rax, rdx	      4021	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2	CALL_7
0x40074a6	          0x4889c7	                            mov rdi, rax	      4021	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2	CALL_7
0x40074a9	      0xe800000000	                          call 0x40074ae	      4021	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2	CALL_7
0x40074ae	            0x4898	                                    cdqe	      4021	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2	CALL_7
0x40074b0	    0x48298580f6ff	            sub qword [rbp - 0x980], rax	      4021	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2	CALL_7
0x40074b7	    0x488b05000000	            mov rax, qword [0x040074be] 	      4022	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2
0x40074be	    0x488b8d70f6ff	            mov rcx, qword [rbp - 0x990]	      4022	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2
0x40074c5	    0x488b9588f6ff	            mov rdx, qword [rbp - 0x978]	      4022	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2
0x40074cc	          0x4801ca	                            add rdx, rcx	      4022	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2
0x40074cf	          0x4889d7	                            mov rdi, rdx	      4022	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2
0x40074d2	            0xffd0	                                call rax	      4022	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2
0x40074d4	            0x4898	                                    cdqe	      4022	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2
0x40074d6	    0x48018588f6ff	           add qword [rbp - 0x978], rax 	      4022	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2
0x40074dd	    0x8b8548f6ffff	            mov eax, dword [rbp - 0x9b8]	      4019	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2
0x40074e3	            0x4898	                                    cdqe	      4019	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2
0x40074e5	    0x8b8485c0f6ff	    mov eax, dword [rbp + rax*4 - 0x940]	      4019	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2
0x40074ec	          0x4863d0	                         movsxd rdx, eax	      4019	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2
0x40074ef	          0x4889d0	                            mov rax, rdx	      4019	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2
0x40074f2	          0x4801c0	                            add rax, rax	      4019	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2
0x40074f5	          0x4801d0	                            add rax, rdx	      4019	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2
0x40074f8	        0x48c1e003	                              shl rax, 3	      4019	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2
0x40074fc	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      4019	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2
0x4007500	          0x4801d8	                            add rax, rbx	      4019	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2
0x4007503	    0x482de4070000	                          sub rax, 0x7e4	      4019	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2
0x4007509	            0x8b00	                    mov eax, dword [rax]	      4019	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2
0x400750b	            0x4898	                                    cdqe	      4019	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2
0x400750d	    0x483b8580f6ff	            cmp rax, qword [rbp - 0x980]	      4019	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2
0x4007514	     0xf8e7bffffff	                           jle 0x4007495	      4019	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2
0x400751a	            0xeb55	                           jmp 0x4007571	      4019	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2
0x400751c	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4027	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	ELSE_3
0x4007523	    0x488b9570f6ff	            mov rdx, qword [rbp - 0x990]	      4027	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	ELSE_3
0x400752a	          0x4829d0	                            sub rax, rdx	      4027	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	ELSE_3
0x400752d	          0x4889c1	                            mov rcx, rax	      4027	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	ELSE_3
0x4007530	    0x8b8548f6ffff	            mov eax, dword [rbp - 0x9b8]	      4027	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	ELSE_3
0x4007536	            0x4898	                                    cdqe	      4027	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	ELSE_3
0x4007538	    0x8b8485c0f6ff	    mov eax, dword [rbp + rax*4 - 0x940]	      4027	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	ELSE_3
0x400753f	          0x4863d0	                         movsxd rdx, eax	      4027	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	ELSE_3
0x4007542	          0x4889d0	                            mov rax, rdx	      4027	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	ELSE_3
0x4007545	          0x4801c0	                            add rax, rax	      4027	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	ELSE_3
0x4007548	          0x4801d0	                            add rax, rdx	      4027	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	ELSE_3
0x400754b	        0x48c1e003	                              shl rax, 3	      4027	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	ELSE_3
0x400754f	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      4027	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	ELSE_3
0x4007553	          0x4801d8	                            add rax, rbx	      4027	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	ELSE_3
0x4007556	    0x482de4070000	                          sub rax, 0x7e4	      4027	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	ELSE_3
0x400755c	            0x8b00	                    mov eax, dword [rax]	      4027	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	ELSE_3
0x400755e	            0x4898	                                    cdqe	      4027	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	ELSE_3
0x4007560	          0x4829c1	                            sub rcx, rax	      4027	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	ELSE_3
0x4007563	          0x4889c8	                            mov rax, rcx	      4027	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	ELSE_3
0x4007566	        0x4883c001	                              add rax, 1	      4027	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	ELSE_3
0x400756a	    0x48898588f6ff	            mov qword [rbp - 0x978], rax	      4027	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	ELSE_3
0x4007571	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4029	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23
0x4007578	          0xc6003c	                    mov byte [rax], 0x3c	      4029	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23
0x400757b	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4030	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	CALL_8
0x4007582	    0x488b8d70f6ff	            mov rcx, qword [rbp - 0x990]	      4030	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	CALL_8
0x4007589	    0x488b9588f6ff	            mov rdx, qword [rbp - 0x978]	      4030	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	CALL_8
0x4007590	          0x4801ca	                            add rdx, rcx	      4030	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	CALL_8
0x4007593	          0x4829d0	                            sub rax, rdx	      4030	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	CALL_8
0x4007596	          0x4889c6	                            mov rsi, rax	      4030	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	CALL_8
0x4007599	    0x488b9570f6ff	            mov rdx, qword [rbp - 0x990]	      4030	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	CALL_8
0x40075a0	    0x488b8588f6ff	            mov rax, qword [rbp - 0x978]	      4030	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	CALL_8
0x40075a7	        0x488d0c02	                    lea rcx, [rdx + rax]	      4030	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	CALL_8
0x40075ab	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4030	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	CALL_8
0x40075b2	        0x4883c001	                              add rax, 1	      4030	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	CALL_8
0x40075b6	          0x4889f2	                            mov rdx, rsi	      4030	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	CALL_8
0x40075b9	          0x4889ce	                            mov rsi, rcx	      4030	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	CALL_8
0x40075bc	          0x4889c7	                            mov rdi, rax	      4030	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	CALL_8
0x40075bf	      0xe800000000	                          call 0x40075c4	      4030	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	CALL_8
0x40075c4	    0x488b8588f6ff	            mov rax, qword [rbp - 0x978]	      4031	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23
0x40075cb	      0xba01000000	                              mov edx, 1	      4031	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23
0x40075d0	          0x4829c2	                            sub rdx, rax	      4031	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23
0x40075d3	          0x4889d0	                            mov rax, rdx	      4031	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23
0x40075d6	    0x48018578f6ff	           add qword [rbp - 0x988], rax 	      4031	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23
0x40075dd	            0xeb1a	                           jmp 0x40075f9	      4034	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	WHILE_3
0x40075df	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4035	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	WHILE_3
0x40075e6	        0x488d5001	                      lea rdx, [rax + 1]	      4035	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	WHILE_3
0x40075ea	    0x48899578f6ff	            mov qword [rbp - 0x988], rdx	      4035	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	WHILE_3
0x40075f1	    0x8b95e8f5ffff	            mov edx, dword [rbp - 0xa18]	      4035	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	WHILE_3
0x40075f7	            0x8810	                      mov byte [rax], dl	      4035	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	WHILE_3
0x40075f9	    0x48838580f6ff	              add qword [rbp - 0x980], 1	      4034	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	WHILE_3
0x4007601	    0x8b8548f6ffff	            mov eax, dword [rbp - 0x9b8]	      4034	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	WHILE_3
0x4007607	            0x4898	                                    cdqe	      4034	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	WHILE_3
0x4007609	    0x8b8485c0f6ff	    mov eax, dword [rbp + rax*4 - 0x940]	      4034	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	WHILE_3
0x4007610	          0x4863d0	                         movsxd rdx, eax	      4034	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	WHILE_3
0x4007613	          0x4889d0	                            mov rax, rdx	      4034	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	WHILE_3
0x4007616	          0x4801c0	                            add rax, rax	      4034	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	WHILE_3
0x4007619	          0x4801d0	                            add rax, rdx	      4034	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	WHILE_3
0x400761c	        0x48c1e003	                              shl rax, 3	      4034	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	WHILE_3
0x4007620	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      4034	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	WHILE_3
0x4007624	          0x4801d8	                            add rax, rbx	      4034	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	WHILE_3
0x4007627	    0x482de8070000	                          sub rax, 0x7e8	      4034	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	WHILE_3
0x400762d	            0x8b00	                    mov eax, dword [rax]	      4034	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	WHILE_3
0x400762f	            0x4898	                                    cdqe	      4034	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	WHILE_3
0x4007631	    0x48398580f6ff	           cmp qword [rbp - 0x980], rax 	      4034	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	WHILE_3
0x4007638	            0x7ca5	                            jl 0x40075df	      4034	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	WHILE_3
0x400763a	    0x8b8548f6ffff	            mov eax, dword [rbp - 0x9b8]	      4039	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x4007640	            0x4898	                                    cdqe	      4039	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x4007642	    0x8b8485c0f6ff	    mov eax, dword [rbp + rax*4 - 0x940]	      4039	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x4007649	          0x83c001	                              add eax, 1	      4039	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x400764c	            0x4898	                                    cdqe	      4039	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x400764e	    0x48898580f6ff	            mov qword [rbp - 0x980], rax	      4039	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x4007655	      0xe9b9000000	                           jmp 0x4007713	      4039	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x400765a	    0x488b9580f6ff	            mov rdx, qword [rbp - 0x980]	      4041	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x4007661	          0x4889d0	                            mov rax, rdx	      4041	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x4007664	          0x4801c0	                            add rax, rax	      4041	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x4007667	          0x4801d0	                            add rax, rdx	      4041	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x400766a	        0x48c1e003	                              shl rax, 3	      4041	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x400766e	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      4041	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x4007672	          0x4801d8	                            add rax, rbx	      4041	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x4007675	    0x482df0070000	                          sub rax, 0x7f0	      4041	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x400767b	          0x488b00	                    mov rax, qword [rax]	      4041	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x400767e	    0x488b9588f6ff	            mov rdx, qword [rbp - 0x978]	      4041	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x4007685	          0x48f7da	                                 neg rdx	      4041	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x4007688	        0x488d0c10	                    lea rcx, [rax + rdx]	      4041	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x400768c	    0x488b9580f6ff	            mov rdx, qword [rbp - 0x980]	      4041	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x4007693	          0x4889d0	                            mov rax, rdx	      4041	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x4007696	          0x4801c0	                            add rax, rax	      4041	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x4007699	          0x4801d0	                            add rax, rdx	      4041	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x400769c	        0x48c1e003	                              shl rax, 3	      4041	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x40076a0	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      4041	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x40076a4	          0x4801d8	                            add rax, rbx	      4041	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x40076a7	    0x482df0070000	                          sub rax, 0x7f0	      4041	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x40076ad	          0x488908	                    mov qword [rax], rcx	      4041	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x40076b0	    0x488b9580f6ff	            mov rdx, qword [rbp - 0x980]	      4042	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4	IF_25
0x40076b7	          0x4889d0	                            mov rax, rdx	      4042	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4	IF_25
0x40076ba	          0x4801c0	                            add rax, rax	      4042	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4	IF_25
0x40076bd	          0x4801d0	                            add rax, rdx	      4042	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4	IF_25
0x40076c0	        0x48c1e003	                              shl rax, 3	      4042	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4	IF_25
0x40076c4	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      4042	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4	IF_25
0x40076c8	          0x4801d8	                            add rax, rbx	      4042	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4	IF_25
0x40076cb	    0x482df0070000	                          sub rax, 0x7f0	      4042	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4	IF_25
0x40076d1	          0x488b10	                    mov rdx, qword [rax]	      4042	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4	IF_25
0x40076d4	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4042	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4	IF_25
0x40076db	          0x4839c2	                            cmp rdx, rax	      4042	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4	IF_25
0x40076de	            0x732b	                           jae 0x400770b	      4042	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4	IF_25
0x40076e0	    0x488b8d70f6ff	            mov rcx, qword [rbp - 0x990]	      4043	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4	IF_25
0x40076e7	    0x488b9580f6ff	            mov rdx, qword [rbp - 0x980]	      4043	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4	IF_25
0x40076ee	          0x4889d0	                            mov rax, rdx	      4043	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4	IF_25
0x40076f1	          0x4801c0	                            add rax, rax	      4043	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4	IF_25
0x40076f4	          0x4801d0	                            add rax, rdx	      4043	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4	IF_25
0x40076f7	        0x48c1e003	                              shl rax, 3	      4043	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4	IF_25
0x40076fb	        0x488d75f0	                   lea rsi, [rbp - 0x10]	      4043	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4	IF_25
0x40076ff	          0x4801f0	                            add rax, rsi	      4043	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4	IF_25
0x4007702	    0x482df0070000	                          sub rax, 0x7f0	      4043	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4	IF_25
0x4007708	          0x488908	                    mov qword [rax], rcx	      4043	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4	IF_25
0x400770b	    0x48838580f6ff	              add qword [rbp - 0x980], 1	      4039	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x4007713	    0x8b853cf6ffff	            mov eax, dword [rbp - 0x9c4]	      4039	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x4007719	            0x4898	                                    cdqe	      4039	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x400771b	    0x483b8580f6ff	            cmp rax, qword [rbp - 0x980]	      4039	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x4007722	     0xf8f32ffffff	                            jg 0x400765a	      4039	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x4007728	      0xe91f1a0000	                           jmp 0x400914c	      4039	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x400772d	    0x8b8548f6ffff	            mov eax, dword [rbp - 0x9b8]	      4046	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	CALL_9
0x4007733	            0x4898	                                    cdqe	      4046	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	CALL_9
0x4007735	    0x8b8485c0f6ff	    mov eax, dword [rbp + rax*4 - 0x940]	      4046	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	CALL_9
0x400773c	          0x4863d0	                         movsxd rdx, eax	      4046	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	CALL_9
0x400773f	          0x4889d0	                            mov rax, rdx	      4046	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	CALL_9
0x4007742	          0x4801c0	                            add rax, rax	      4046	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	CALL_9
0x4007745	          0x4801d0	                            add rax, rdx	      4046	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	CALL_9
0x4007748	        0x48c1e003	                              shl rax, 3	      4046	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	CALL_9
0x400774c	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      4046	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	CALL_9
0x4007750	          0x4801d8	                            add rax, rbx	      4046	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	CALL_9
0x4007753	    0x482de8070000	                          sub rax, 0x7e8	      4046	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	CALL_9
0x4007759	            0x8b00	                    mov eax, dword [rax]	      4046	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	CALL_9
0x400775b	              0x99	                                     cdq	      4046	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	CALL_9
0x400775c	            0x31d0	                            xor eax, edx	      4046	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	CALL_9
0x400775e	            0x29d0	                            sub eax, edx	      4046	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	CALL_9
0x4007760	            0x4898	                                    cdqe	      4046	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	CALL_9
0x4007762	    0x483b8580f6ff	            cmp rax, qword [rbp - 0x980]	      4046	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	CALL_9
0x4007769	     0xf8edd190000	                           jle 0x400914c	      4046	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	CALL_9
0x400776f	    0x8b8548f6ffff	            mov eax, dword [rbp - 0x9b8]	      4049	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26
0x4007775	            0x4898	                                    cdqe	      4049	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26
0x4007777	    0x8b8485c0f6ff	    mov eax, dword [rbp + rax*4 - 0x940]	      4049	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26
0x400777e	          0x4863d0	                         movsxd rdx, eax	      4049	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26
0x4007781	          0x4889d0	                            mov rax, rdx	      4049	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26
0x4007784	          0x4801c0	                            add rax, rax	      4049	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26
0x4007787	          0x4801d0	                            add rax, rdx	      4049	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26
0x400778a	        0x48c1e003	                              shl rax, 3	      4049	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26
0x400778e	        0x488d75f0	                   lea rsi, [rbp - 0x10]	      4049	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26
0x4007792	          0x4801f0	                            add rax, rsi	      4049	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26
0x4007795	    0x482de8070000	                          sub rax, 0x7e8	      4049	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26
0x400779b	            0x8b00	                    mov eax, dword [rax]	      4049	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26
0x400779d	            0x4898	                                    cdqe	      4049	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26
0x400779f	    0x48898588f6ff	            mov qword [rbp - 0x978], rax	      4049	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26
0x40077a6	    0x4883bd88f6ff	              cmp qword [rbp - 0x978], 0	      4050	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	IF_27
0x40077ae	            0x7968	                           jns 0x4007818	      4050	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	IF_27
0x40077b0	    0x48f79d88f6ff	                 neg qword [rbp - 0x978]	      4053	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	IF_27
0x40077b7	            0xeb1a	                           jmp 0x40077d3	      4054	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	IF_27	WHILE_4
0x40077b9	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4055	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	IF_27	WHILE_4
0x40077c0	        0x488d5001	                      lea rdx, [rax + 1]	      4055	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	IF_27	WHILE_4
0x40077c4	    0x48899578f6ff	            mov qword [rbp - 0x988], rdx	      4055	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	IF_27	WHILE_4
0x40077cb	    0x8b95e8f5ffff	            mov edx, dword [rbp - 0xa18]	      4055	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	IF_27	WHILE_4
0x40077d1	            0x8810	                      mov byte [rax], dl	      4055	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	IF_27	WHILE_4
0x40077d3	    0x488b8580f6ff	            mov rax, qword [rbp - 0x980]	      4054	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	IF_27	WHILE_4
0x40077da	        0x488d5001	                      lea rdx, [rax + 1]	      4054	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	IF_27	WHILE_4
0x40077de	    0x48899580f6ff	            mov qword [rbp - 0x980], rdx	      4054	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	IF_27	WHILE_4
0x40077e5	    0x483b8588f6ff	            cmp rax, qword [rbp - 0x978]	      4054	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	IF_27	WHILE_4
0x40077ec	     0xf8d5a190000	                           jge 0x400914c	      4054	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	IF_27	WHILE_4
0x40077f2	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4054	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	IF_27	WHILE_4
0x40077f9	        0x488d4801	                      lea rcx, [rax + 1]	      4054	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	IF_27	WHILE_4
0x40077fd	    0x488b9500f6ff	            mov rdx, qword [rbp - 0xa00]	      4054	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	IF_27	WHILE_4
0x4007804	    0x488b85f8f5ff	            mov rax, qword [rbp - 0xa08]	      4054	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	IF_27	WHILE_4
0x400780b	          0x4801d0	                            add rax, rdx	      4054	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	IF_27	WHILE_4
0x400780e	          0x4839c1	                            cmp rcx, rax	      4054	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	IF_27	WHILE_4
0x4007811	            0x72a6	                            jb 0x40077b9	      4054	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	IF_27	WHILE_4
0x4007813	      0xe934190000	                           jmp 0x400914c	      4054	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	IF_27	WHILE_4
0x4007818	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4060	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	CALL_10
0x400781f	    0x488b9570f6ff	            mov rdx, qword [rbp - 0x990]	      4060	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	CALL_10
0x4007826	          0x4829d0	                            sub rax, rdx	      4060	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	CALL_10
0x4007829	          0x4889c7	                            mov rdi, rax	      4060	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	CALL_10
0x400782c	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4060	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	CALL_10
0x4007833	    0x488b9570f6ff	            mov rdx, qword [rbp - 0x990]	      4060	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	CALL_10
0x400783a	    0x488bb588f6ff	            mov rsi, qword [rbp - 0x978]	      4060	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	CALL_10
0x4007841	    0x488b8d80f6ff	            mov rcx, qword [rbp - 0x980]	      4060	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	CALL_10
0x4007848	          0x4829ce	                            sub rsi, rcx	      4060	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	CALL_10
0x400784b	          0x4889f1	                            mov rcx, rsi	      4060	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	CALL_10
0x400784e	          0x4801d1	                            add rcx, rdx	      4060	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	CALL_10
0x4007851	          0x4889fa	                            mov rdx, rdi	      4060	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	CALL_10
0x4007854	          0x4889c6	                            mov rsi, rax	      4060	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	CALL_10
0x4007857	          0x4889cf	                            mov rdi, rcx	      4060	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	CALL_10
0x400785a	      0xe800000000	                          call 0x400785f	      4060	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	CALL_10
0x400785f	    0x488b8588f6ff	            mov rax, qword [rbp - 0x978]	      4061	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5
0x4007866	    0x482b8580f6ff	            sub rax, qword [rbp - 0x980]	      4061	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5
0x400786d	    0x48898580f6ff	            mov qword [rbp - 0x980], rax	      4061	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5
0x4007874	    0x488b9580f6ff	            mov rdx, qword [rbp - 0x980]	      4062	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	IF_28
0x400787b	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4062	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	IF_28
0x4007882	        0x488d0c02	                    lea rcx, [rdx + rax]	      4062	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	IF_28
0x4007886	    0x488b9500f6ff	            mov rdx, qword [rbp - 0xa00]	      4062	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	IF_28
0x400788d	    0x488b85f8f5ff	            mov rax, qword [rbp - 0xa08]	      4062	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	IF_28
0x4007894	          0x4801d0	                            add rax, rdx	      4062	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	IF_28
0x4007897	          0x4839c1	                            cmp rcx, rax	      4062	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	IF_28
0x400789a	            0x722c	                            jb 0x40078c8	      4062	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	IF_28
0x400789c	    0x488b9500f6ff	            mov rdx, qword [rbp - 0xa00]	      4063	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	IF_28
0x40078a3	    0x488b85f8f5ff	            mov rax, qword [rbp - 0xa08]	      4063	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	IF_28
0x40078aa	          0x4801d0	                            add rax, rdx	      4063	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	IF_28
0x40078ad	          0x4889c2	                            mov rdx, rax	      4063	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	IF_28
0x40078b0	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4063	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	IF_28
0x40078b7	          0x4829c2	                            sub rdx, rax	      4063	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	IF_28
0x40078ba	          0x4889d0	                            mov rax, rdx	      4063	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	IF_28
0x40078bd	        0x4883e801	                              sub rax, 1	      4063	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	IF_28
0x40078c1	    0x48898580f6ff	            mov qword [rbp - 0x980], rax	      4063	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	IF_28
0x40078c8	    0x488b8580f6ff	            mov rax, qword [rbp - 0x980]	      4064	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5
0x40078cf	    0x48018578f6ff	           add qword [rbp - 0x988], rax 	      4064	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5
0x40078d6	    0x8b8548f6ffff	            mov eax, dword [rbp - 0x9b8]	      4065	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x40078dc	            0x4898	                                    cdqe	      4065	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x40078de	    0x8b8485c0f6ff	    mov eax, dword [rbp + rax*4 - 0x940]	      4065	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x40078e5	          0x83c001	                              add eax, 1	      4065	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x40078e8	            0x4898	                                    cdqe	      4065	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x40078ea	    0x48898588f6ff	            mov qword [rbp - 0x978], rax	      4065	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x40078f1	            0xeb5b	                           jmp 0x400794e	      4065	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x40078f3	    0x488b9588f6ff	            mov rdx, qword [rbp - 0x978]	      4066	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x40078fa	          0x4889d0	                            mov rax, rdx	      4066	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x40078fd	          0x4801c0	                            add rax, rax	      4066	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x4007900	          0x4801d0	                            add rax, rdx	      4066	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x4007903	        0x48c1e003	                              shl rax, 3	      4066	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x4007907	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      4066	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x400790b	          0x4801d8	                            add rax, rbx	      4066	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x400790e	    0x482df0070000	                          sub rax, 0x7f0	      4066	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x4007914	          0x488b10	                    mov rdx, qword [rax]	      4066	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x4007917	    0x488b8580f6ff	            mov rax, qword [rbp - 0x980]	      4066	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x400791e	        0x488d0c02	                    lea rcx, [rdx + rax]	      4066	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x4007922	    0x488b9588f6ff	            mov rdx, qword [rbp - 0x978]	      4066	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x4007929	          0x4889d0	                            mov rax, rdx	      4066	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x400792c	          0x4801c0	                            add rax, rax	      4066	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x400792f	          0x4801d0	                            add rax, rdx	      4066	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x4007932	        0x48c1e003	                              shl rax, 3	      4066	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x4007936	        0x488d75f0	                   lea rsi, [rbp - 0x10]	      4066	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x400793a	          0x4801f0	                            add rax, rsi	      4066	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x400793d	    0x482df0070000	                          sub rax, 0x7f0	      4066	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x4007943	          0x488908	                    mov qword [rax], rcx	      4066	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x4007946	    0x48838588f6ff	              add qword [rbp - 0x978], 1	      4065	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x400794e	    0x8b853cf6ffff	            mov eax, dword [rbp - 0x9c4]	      4065	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x4007954	            0x4898	                                    cdqe	      4065	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x4007956	    0x483b8588f6ff	            cmp rax, qword [rbp - 0x978]	      4065	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x400795d	            0x7f94	                            jg 0x40078f3	      4065	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x400795f	            0xeb22	                           jmp 0x4007983	      4067	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_6
0x4007961	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4068	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_6
0x4007968	        0x488d5001	                      lea rdx, [rax + 1]	      4068	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_6
0x400796c	    0x48899570f6ff	            mov qword [rbp - 0x990], rdx	      4068	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_6
0x4007973	    0x8b95e8f5ffff	            mov edx, dword [rbp - 0xa18]	      4068	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_6
0x4007979	            0x8810	                      mov byte [rax], dl	      4068	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_6
0x400797b	    0x4883ad80f6ff	              sub qword [rbp - 0x980], 1	      4067	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_6
0x4007983	    0x4883bd80f6ff	              cmp qword [rbp - 0x980], 0	      4067	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_6
0x400798b	            0x7fd4	                            jg 0x4007961	      4067	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_6
0x400798d	      0xe9ba170000	                           jmp 0x400914c	      4071	buffer.c	FUNCTION_65	FOR_1	IF_16
0x4007992	    0xc7854cf6ffff	              mov dword [rbp - 0x9b4], 0	      4073	buffer.c	FUNCTION_65	FOR_1
0x400799c	    0xc78550f6ffff	         mov dword [rbp - 0x9b0], 0x270f	      4074	buffer.c	FUNCTION_65	FOR_1
0x40079a6	    0xc78554f6ffff	              mov dword [rbp - 0x9ac], 0	      4075	buffer.c	FUNCTION_65	FOR_1
0x40079b0	    0x48c78580f6ff	              mov qword [rbp - 0x980], 1	      4076	buffer.c	FUNCTION_65	FOR_1
0x40079bb	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4077	buffer.c	FUNCTION_65	FOR_1	IF_29
0x40079c2	           0xfb600	                   movzx eax, byte [rax]	      4077	buffer.c	FUNCTION_65	FOR_1	IF_29
0x40079c5	            0x3c30	                            cmp al, 0x30	      4077	buffer.c	FUNCTION_65	FOR_1	IF_29
0x40079c7	            0x751c	                           jne 0x40079e5	      4077	buffer.c	FUNCTION_65	FOR_1	IF_29
0x40079c9	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4079	buffer.c	FUNCTION_65	FOR_1	IF_29
0x40079d0	        0x4883c001	                              add rax, 1	      4079	buffer.c	FUNCTION_65	FOR_1	IF_29
0x40079d4	    0x48898568f6ff	            mov qword [rbp - 0x998], rax	      4079	buffer.c	FUNCTION_65	FOR_1	IF_29
0x40079db	    0xc78554f6ffff	              mov dword [rbp - 0x9ac], 1	      4080	buffer.c	FUNCTION_65	FOR_1	IF_29
0x40079e5	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4082	buffer.c	FUNCTION_65	FOR_1	IF_30
0x40079ec	           0xfb600	                   movzx eax, byte [rax]	      4082	buffer.c	FUNCTION_65	FOR_1	IF_30
0x40079ef	            0x3c2d	                            cmp al, 0x2d	      4082	buffer.c	FUNCTION_65	FOR_1	IF_30
0x40079f1	            0x751d	                           jne 0x4007a10	      4082	buffer.c	FUNCTION_65	FOR_1	IF_30
0x40079f3	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4084	buffer.c	FUNCTION_65	FOR_1	IF_30
0x40079fa	        0x4883c001	                              add rax, 1	      4084	buffer.c	FUNCTION_65	FOR_1	IF_30
0x40079fe	    0x48898568f6ff	            mov qword [rbp - 0x998], rax	      4084	buffer.c	FUNCTION_65	FOR_1	IF_30
0x4007a05	    0x48c78580f6ff	mov qword [rbp - 0x980], 0xffffffffffffffff	      4085	buffer.c	FUNCTION_65	FOR_1	IF_30
0x4007a10	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4087	buffer.c	FUNCTION_65	FOR_1	IF_31	CALL_11
0x4007a17	           0xfb600	                   movzx eax, byte [rax]	      4087	buffer.c	FUNCTION_65	FOR_1	IF_31	CALL_11
0x4007a1a	           0xfb6c0	                           movzx eax, al	      4087	buffer.c	FUNCTION_65	FOR_1	IF_31	CALL_11
0x4007a1d	          0x83e830	                           sub eax, 0x30	      4087	buffer.c	FUNCTION_65	FOR_1	IF_31	CALL_11
0x4007a20	          0x83f809	                              cmp eax, 9	      4087	buffer.c	FUNCTION_65	FOR_1	IF_31	CALL_11
0x4007a23	            0x7728	                            ja 0x4007a4d	      4087	buffer.c	FUNCTION_65	FOR_1	IF_31	CALL_11
0x4007a25	    0x488d8568f6ff	                  lea rax, [rbp - 0x998]	      4089	buffer.c	FUNCTION_65	FOR_1	IF_31	CALL_12
0x4007a2c	          0x4889c7	                            mov rdi, rax	      4089	buffer.c	FUNCTION_65	FOR_1	IF_31	CALL_12
0x4007a2f	      0xe800000000	                          call 0x4007a34	      4089	buffer.c	FUNCTION_65	FOR_1	IF_31	CALL_12
0x4007a34	    0x89854cf6ffff	            mov dword [rbp - 0x9b4], eax	      4089	buffer.c	FUNCTION_65	FOR_1	IF_31	CALL_12
0x4007a3a	    0x83bd4cf6ffff	              cmp dword [rbp - 0x9b4], 0	      4090	buffer.c	FUNCTION_65	FOR_1	IF_31	IF_32
0x4007a41	            0x790a	                           jns 0x4007a4d	      4090	buffer.c	FUNCTION_65	FOR_1	IF_31	IF_32
0x4007a43	    0xc7854cf6ffff	              mov dword [rbp - 0x9b4], 0	      4091	buffer.c	FUNCTION_65	FOR_1	IF_31	IF_32
0x4007a4d	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4093	buffer.c	FUNCTION_65	FOR_1	IF_33
0x4007a54	           0xfb600	                   movzx eax, byte [rax]	      4093	buffer.c	FUNCTION_65	FOR_1	IF_33
0x4007a57	            0x3c2a	                            cmp al, 0x2a	      4093	buffer.c	FUNCTION_65	FOR_1	IF_33
0x4007a59	     0xf85b0000000	                           jne 0x4007b0f	      4093	buffer.c	FUNCTION_65	FOR_1	IF_33
0x4007a5f	    0x8b853cf6ffff	            mov eax, dword [rbp - 0x9c4]	      4095	buffer.c	FUNCTION_65	FOR_1	IF_33
0x4007a65	          0x4863d0	                         movsxd rdx, eax	      4095	buffer.c	FUNCTION_65	FOR_1	IF_33
0x4007a68	          0x4889d0	                            mov rax, rdx	      4095	buffer.c	FUNCTION_65	FOR_1	IF_33
0x4007a6b	          0x4801c0	                            add rax, rax	      4095	buffer.c	FUNCTION_65	FOR_1	IF_33
0x4007a6e	          0x4801d0	                            add rax, rdx	      4095	buffer.c	FUNCTION_65	FOR_1	IF_33
0x4007a71	        0x48c1e003	                              shl rax, 3	      4095	buffer.c	FUNCTION_65	FOR_1	IF_33
0x4007a75	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      4095	buffer.c	FUNCTION_65	FOR_1	IF_33
0x4007a79	          0x4801d8	                            add rax, rbx	      4095	buffer.c	FUNCTION_65	FOR_1	IF_33
0x4007a7c	    0x482de0070000	                          sub rax, 0x7e0	      4095	buffer.c	FUNCTION_65	FOR_1	IF_33
0x4007a82	    0xc70004000000	                      mov dword [rax], 4	      4095	buffer.c	FUNCTION_65	FOR_1	IF_33
0x4007a88	    0x8b853cf6ffff	            mov eax, dword [rbp - 0x9c4]	      4096	buffer.c	FUNCTION_65	FOR_1	IF_33
0x4007a8e	          0x4863d0	                         movsxd rdx, eax	      4096	buffer.c	FUNCTION_65	FOR_1	IF_33
0x4007a91	          0x4889d0	                            mov rax, rdx	      4096	buffer.c	FUNCTION_65	FOR_1	IF_33
0x4007a94	          0x4801c0	                            add rax, rax	      4096	buffer.c	FUNCTION_65	FOR_1	IF_33
0x4007a97	          0x4801d0	                            add rax, rdx	      4096	buffer.c	FUNCTION_65	FOR_1	IF_33
0x4007a9a	        0x48c1e003	                              shl rax, 3	      4096	buffer.c	FUNCTION_65	FOR_1	IF_33
0x4007a9e	        0x488d75f0	                   lea rsi, [rbp - 0x10]	      4096	buffer.c	FUNCTION_65	FOR_1	IF_33
0x4007aa2	          0x4801f0	                            add rax, rsi	      4096	buffer.c	FUNCTION_65	FOR_1	IF_33
0x4007aa5	    0x488d9010f8ff	                  lea rdx, [rax - 0x7f0]	      4096	buffer.c	FUNCTION_65	FOR_1	IF_33
0x4007aac	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4096	buffer.c	FUNCTION_65	FOR_1	IF_33
0x4007ab3	          0x488902	                    mov qword [rdx], rax	      4096	buffer.c	FUNCTION_65	FOR_1	IF_33
0x4007ab6	    0x83bd4cf6ffff	              cmp dword [rbp - 0x9b4], 9	      4097	buffer.c	FUNCTION_65	FOR_1	IF_33
0x4007abd	            0x7f08	                            jg 0x4007ac7	      4097	buffer.c	FUNCTION_65	FOR_1	IF_33
0x4007abf	    0x8b8d4cf6ffff	            mov ecx, dword [rbp - 0x9b4]	      4097	buffer.c	FUNCTION_65	FOR_1	IF_33
0x4007ac5	            0xeb05	                           jmp 0x4007acc	      4097	buffer.c	FUNCTION_65	FOR_1	IF_33
0x4007ac7	      0xb901000000	                              mov ecx, 1	      4097	buffer.c	FUNCTION_65	FOR_1	IF_33
0x4007acc	    0x8b853cf6ffff	            mov eax, dword [rbp - 0x9c4]	      4097	buffer.c	FUNCTION_65	FOR_1	IF_33
0x4007ad2	          0x4863d0	                         movsxd rdx, eax	      4097	buffer.c	FUNCTION_65	FOR_1	IF_33
0x4007ad5	          0x4889d0	                            mov rax, rdx	      4097	buffer.c	FUNCTION_65	FOR_1	IF_33
0x4007ad8	          0x4801c0	                            add rax, rax	      4097	buffer.c	FUNCTION_65	FOR_1	IF_33
0x4007adb	          0x4801d0	                            add rax, rdx	      4097	buffer.c	FUNCTION_65	FOR_1	IF_33
0x4007ade	        0x48c1e003	                              shl rax, 3	      4097	buffer.c	FUNCTION_65	FOR_1	IF_33
0x4007ae2	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      4097	buffer.c	FUNCTION_65	FOR_1	IF_33
0x4007ae6	          0x4801d8	                            add rax, rbx	      4097	buffer.c	FUNCTION_65	FOR_1	IF_33
0x4007ae9	    0x482de8070000	                          sub rax, 0x7e8	      4097	buffer.c	FUNCTION_65	FOR_1	IF_33
0x4007aef	            0x8908	                    mov dword [rax], ecx	      4097	buffer.c	FUNCTION_65	FOR_1	IF_33
0x4007af1	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4098	buffer.c	FUNCTION_65	FOR_1	IF_33
0x4007af8	        0x4883c001	                              add rax, 1	      4098	buffer.c	FUNCTION_65	FOR_1	IF_33
0x4007afc	    0x48898568f6ff	            mov qword [rbp - 0x998], rax	      4098	buffer.c	FUNCTION_65	FOR_1	IF_33
0x4007b03	    0x83853cf6ffff	              add dword [rbp - 0x9c4], 1	      4099	buffer.c	FUNCTION_65	FOR_1	IF_33
0x4007b0a	      0xe93d160000	                           jmp 0x400914c	      4100	buffer.c	FUNCTION_65	FOR_1	IF_33
0x4007b0f	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4102	buffer.c	FUNCTION_65	FOR_1	IF_34
0x4007b16	           0xfb600	                   movzx eax, byte [rax]	      4102	buffer.c	FUNCTION_65	FOR_1	IF_34
0x4007b19	            0x3c54	                            cmp al, 0x54	      4102	buffer.c	FUNCTION_65	FOR_1	IF_34
0x4007b1b	            0x7412	                            je 0x4007b2f	      4102	buffer.c	FUNCTION_65	FOR_1	IF_34
0x4007b1d	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4102	buffer.c	FUNCTION_65	FOR_1	IF_34
0x4007b24	           0xfb600	                   movzx eax, byte [rax]	      4102	buffer.c	FUNCTION_65	FOR_1	IF_34
0x4007b27	            0x3c58	                            cmp al, 0x58	      4102	buffer.c	FUNCTION_65	FOR_1	IF_34
0x4007b29	     0xf856f010000	                           jne 0x4007c9e	      4102	buffer.c	FUNCTION_65	FOR_1	IF_34
0x4007b2f	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4104	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35
0x4007b36	           0xfb600	                   movzx eax, byte [rax]	      4104	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35
0x4007b39	            0x3c58	                            cmp al, 0x58	      4104	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35
0x4007b3b	     0xf85bc000000	                           jne 0x4007bfd	      4104	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35
0x4007b41	    0x83bd4cf6ffff	              cmp dword [rbp - 0x9b4], 0	      4106	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36
0x4007b48	     0xf85a9000000	                           jne 0x4007bf7	      4106	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36
0x4007b4e	    0x8b853cf6ffff	            mov eax, dword [rbp - 0x9c4]	      4110	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7
0x4007b54	          0x83e801	                              sub eax, 1	      4110	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7
0x4007b57	            0x4898	                                    cdqe	      4110	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7
0x4007b59	    0x48898588f6ff	            mov qword [rbp - 0x978], rax	      4110	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7
0x4007b60	      0xe982000000	                           jmp 0x4007be7	      4110	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7
0x4007b65	    0x488b9588f6ff	            mov rdx, qword [rbp - 0x978]	      4111	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x4007b6c	          0x4889d0	                            mov rax, rdx	      4111	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x4007b6f	          0x4801c0	                            add rax, rax	      4111	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x4007b72	          0x4801d0	                            add rax, rdx	      4111	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x4007b75	        0x48c1e003	                              shl rax, 3	      4111	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x4007b79	        0x488d75f0	                   lea rsi, [rbp - 0x10]	      4111	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x4007b7d	          0x4801f0	                            add rax, rsi	      4111	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x4007b80	    0x482de0070000	                          sub rax, 0x7e0	      4111	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x4007b86	            0x8b00	                    mov eax, dword [rax]	      4111	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x4007b88	          0x83f805	                              cmp eax, 5	      4111	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x4007b8b	            0x7552	                           jne 0x4007bdf	      4111	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x4007b8d	    0x488b9588f6ff	            mov rdx, qword [rbp - 0x978]	      4111	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x4007b94	          0x4889d0	                            mov rax, rdx	      4111	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x4007b97	          0x4801c0	                            add rax, rax	      4111	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x4007b9a	          0x4801d0	                            add rax, rdx	      4111	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x4007b9d	        0x48c1e003	                              shl rax, 3	      4111	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x4007ba1	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      4111	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x4007ba5	          0x4801d8	                            add rax, rbx	      4111	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x4007ba8	    0x482de8070000	                          sub rax, 0x7e8	      4111	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x4007bae	            0x8b00	                    mov eax, dword [rax]	      4111	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x4007bb0	            0x85c0	                           test eax, eax	      4111	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x4007bb2	            0x782b	                            js 0x4007bdf	      4111	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x4007bb4	    0x488b9588f6ff	            mov rdx, qword [rbp - 0x978]	      4113	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x4007bbb	          0x4889d0	                            mov rax, rdx	      4113	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x4007bbe	          0x4801c0	                            add rax, rax	      4113	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x4007bc1	          0x4801d0	                            add rax, rdx	      4113	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x4007bc4	        0x48c1e003	                              shl rax, 3	      4113	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x4007bc8	        0x488d75f0	                   lea rsi, [rbp - 0x10]	      4113	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x4007bcc	          0x4801f0	                            add rax, rsi	      4113	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x4007bcf	    0x482de8070000	                          sub rax, 0x7e8	      4113	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x4007bd5	            0x8b00	                    mov eax, dword [rax]	      4113	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x4007bd7	    0x89854cf6ffff	            mov dword [rbp - 0x9b4], eax	      4113	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x4007bdd	            0xeb1e	                           jmp 0x4007bfd	      4114	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x4007bdf	    0x4883ad88f6ff	              sub qword [rbp - 0x978], 1	      4110	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7
0x4007be7	    0x4883bd88f6ff	              cmp qword [rbp - 0x978], 0	      4110	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7
0x4007bef	     0xf8970ffffff	                           jns 0x4007b65	      4110	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7
0x4007bf5	            0xeb06	                           jmp 0x4007bfd	      4110	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7
0x4007bf7	    0xf79d4cf6ffff	                 neg dword [rbp - 0x9b4]	      4119	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	ELSE_6
0x4007bfd	    0x8b853cf6ffff	            mov eax, dword [rbp - 0x9c4]	      4121	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x4007c03	          0x4863d0	                         movsxd rdx, eax	      4121	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x4007c06	          0x4889d0	                            mov rax, rdx	      4121	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x4007c09	          0x4801c0	                            add rax, rax	      4121	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x4007c0c	          0x4801d0	                            add rax, rdx	      4121	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x4007c0f	        0x48c1e003	                              shl rax, 3	      4121	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x4007c13	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      4121	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x4007c17	          0x4801d8	                            add rax, rbx	      4121	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x4007c1a	    0x482de0070000	                          sub rax, 0x7e0	      4121	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x4007c20	    0xc70005000000	                      mov dword [rax], 5	      4121	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x4007c26	    0x8b853cf6ffff	            mov eax, dword [rbp - 0x9c4]	      4122	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x4007c2c	          0x4863d0	                         movsxd rdx, eax	      4122	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x4007c2f	          0x4889d0	                            mov rax, rdx	      4122	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x4007c32	          0x4801c0	                            add rax, rax	      4122	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x4007c35	          0x4801d0	                            add rax, rdx	      4122	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x4007c38	        0x48c1e003	                              shl rax, 3	      4122	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x4007c3c	        0x488d75f0	                   lea rsi, [rbp - 0x10]	      4122	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x4007c40	          0x4801f0	                            add rax, rsi	      4122	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x4007c43	    0x488d9010f8ff	                  lea rdx, [rax - 0x7f0]	      4122	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x4007c4a	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4122	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x4007c51	          0x488902	                    mov qword [rdx], rax	      4122	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x4007c54	    0x8b853cf6ffff	            mov eax, dword [rbp - 0x9c4]	      4123	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x4007c5a	          0x4863d0	                         movsxd rdx, eax	      4123	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x4007c5d	          0x4889d0	                            mov rax, rdx	      4123	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x4007c60	          0x4801c0	                            add rax, rax	      4123	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x4007c63	          0x4801d0	                            add rax, rdx	      4123	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x4007c66	        0x48c1e003	                              shl rax, 3	      4123	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x4007c6a	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      4123	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x4007c6e	          0x4801d8	                            add rax, rbx	      4123	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x4007c71	    0x488d9018f8ff	                  lea rdx, [rax - 0x7e8]	      4123	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x4007c78	    0x8b854cf6ffff	            mov eax, dword [rbp - 0x9b4]	      4123	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x4007c7e	            0x8902	                    mov dword [rdx], eax	      4123	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x4007c80	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4124	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x4007c87	        0x4883c001	                              add rax, 1	      4124	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x4007c8b	    0x48898568f6ff	            mov qword [rbp - 0x998], rax	      4124	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x4007c92	    0x83853cf6ffff	              add dword [rbp - 0x9c4], 1	      4125	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x4007c99	      0xe9ae140000	                           jmp 0x400914c	      4126	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x4007c9e	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4128	buffer.c	FUNCTION_65	FOR_1	ELSE_6	IF_38
0x4007ca5	           0xfb600	                   movzx eax, byte [rax]	      4128	buffer.c	FUNCTION_65	FOR_1	ELSE_6	IF_38
0x4007ca8	            0x3c2e	                            cmp al, 0x2e	      4128	buffer.c	FUNCTION_65	FOR_1	ELSE_6	IF_38
0x4007caa	            0x754f	                           jne 0x4007cfb	      4128	buffer.c	FUNCTION_65	FOR_1	ELSE_6	IF_38
0x4007cac	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4130	buffer.c	FUNCTION_65	FOR_1	ELSE_6	IF_38
0x4007cb3	        0x4883c001	                              add rax, 1	      4130	buffer.c	FUNCTION_65	FOR_1	ELSE_6	IF_38
0x4007cb7	    0x48898568f6ff	            mov qword [rbp - 0x998], rax	      4130	buffer.c	FUNCTION_65	FOR_1	ELSE_6	IF_38
0x4007cbe	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4131	buffer.c	FUNCTION_65	FOR_1	ELSE_6	IF_38	IF_39	CALL_13
0x4007cc5	           0xfb600	                   movzx eax, byte [rax]	      4131	buffer.c	FUNCTION_65	FOR_1	ELSE_6	IF_38	IF_39	CALL_13
0x4007cc8	           0xfb6c0	                           movzx eax, al	      4131	buffer.c	FUNCTION_65	FOR_1	ELSE_6	IF_38	IF_39	CALL_13
0x4007ccb	          0x83e830	                           sub eax, 0x30	      4131	buffer.c	FUNCTION_65	FOR_1	ELSE_6	IF_38	IF_39	CALL_13
0x4007cce	          0x83f809	                              cmp eax, 9	      4131	buffer.c	FUNCTION_65	FOR_1	ELSE_6	IF_38	IF_39	CALL_13
0x4007cd1	            0x7728	                            ja 0x4007cfb	      4131	buffer.c	FUNCTION_65	FOR_1	ELSE_6	IF_38	IF_39	CALL_13
0x4007cd3	    0x488d8568f6ff	                  lea rax, [rbp - 0x998]	      4133	buffer.c	FUNCTION_65	FOR_1	ELSE_6	IF_38	IF_39	CALL_14
0x4007cda	          0x4889c7	                            mov rdi, rax	      4133	buffer.c	FUNCTION_65	FOR_1	ELSE_6	IF_38	IF_39	CALL_14
0x4007cdd	      0xe800000000	                          call 0x4007ce2	      4133	buffer.c	FUNCTION_65	FOR_1	ELSE_6	IF_38	IF_39	CALL_14
0x4007ce2	    0x898550f6ffff	            mov dword [rbp - 0x9b0], eax	      4133	buffer.c	FUNCTION_65	FOR_1	ELSE_6	IF_38	IF_39	CALL_14
0x4007ce8	    0x83bd50f6ffff	              cmp dword [rbp - 0x9b0], 0	      4134	buffer.c	FUNCTION_65	FOR_1	ELSE_6	IF_38	IF_39	IF_40
0x4007cef	            0x7f0a	                            jg 0x4007cfb	      4134	buffer.c	FUNCTION_65	FOR_1	ELSE_6	IF_38	IF_39	IF_40
0x4007cf1	    0xc78550f6ffff	          mov dword [rbp - 0x9b0], 0x32 	      4135	buffer.c	FUNCTION_65	FOR_1	ELSE_6	IF_38	IF_39	IF_40
0x4007cfb	      0xb832000000	                           mov eax, 0x32	      4138	buffer.c	FUNCTION_65	FOR_1
0x4007d00	    0x83bd4cf6ffff	          cmp dword [rbp - 0x9b4], 0x32 	      4138	buffer.c	FUNCTION_65	FOR_1
0x4007d07	     0xf4e854cf6ff	         cmovle eax, dword [rbp - 0x9b4]	      4138	buffer.c	FUNCTION_65	FOR_1
0x4007d0e	            0x89c2	                            mov edx, eax	      4138	buffer.c	FUNCTION_65	FOR_1
0x4007d10	    0x488b8580f6ff	            mov rax, qword [rbp - 0x980]	      4138	buffer.c	FUNCTION_65	FOR_1
0x4007d17	           0xfafc2	                           imul eax, edx	      4138	buffer.c	FUNCTION_65	FOR_1
0x4007d1a	    0x89854cf6ffff	            mov dword [rbp - 0x9b4], eax	      4138	buffer.c	FUNCTION_65	FOR_1
0x4007d20	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4139	buffer.c	FUNCTION_65	FOR_1	IF_41
0x4007d27	           0xfb600	                   movzx eax, byte [rax]	      4139	buffer.c	FUNCTION_65	FOR_1	IF_41
0x4007d2a	            0x3c28	                            cmp al, 0x28	      4139	buffer.c	FUNCTION_65	FOR_1	IF_41
0x4007d2c	     0xf85eb000000	                           jne 0x4007e1d	      4139	buffer.c	FUNCTION_65	FOR_1	IF_41
0x4007d32	    0x8b8548f6ffff	            mov eax, dword [rbp - 0x9b8]	      4141	buffer.c	FUNCTION_65	FOR_1	IF_41
0x4007d38	          0x8d5001	                      lea edx, [rax + 1]	      4141	buffer.c	FUNCTION_65	FOR_1	IF_41
0x4007d3b	    0x899548f6ffff	            mov dword [rbp - 0x9b8], edx	      4141	buffer.c	FUNCTION_65	FOR_1	IF_41
0x4007d41	            0x4898	                                    cdqe	      4141	buffer.c	FUNCTION_65	FOR_1	IF_41
0x4007d43	    0x8b953cf6ffff	            mov edx, dword [rbp - 0x9c4]	      4141	buffer.c	FUNCTION_65	FOR_1	IF_41
0x4007d49	    0x899485c0f6ff	    mov dword [rbp + rax*4 - 0x940], edx	      4141	buffer.c	FUNCTION_65	FOR_1	IF_41
0x4007d50	    0x8b853cf6ffff	            mov eax, dword [rbp - 0x9c4]	      4142	buffer.c	FUNCTION_65	FOR_1	IF_41
0x4007d56	          0x4863d0	                         movsxd rdx, eax	      4142	buffer.c	FUNCTION_65	FOR_1	IF_41
0x4007d59	          0x4889d0	                            mov rax, rdx	      4142	buffer.c	FUNCTION_65	FOR_1	IF_41
0x4007d5c	          0x4801c0	                            add rax, rax	      4142	buffer.c	FUNCTION_65	FOR_1	IF_41
0x4007d5f	          0x4801d0	                            add rax, rdx	      4142	buffer.c	FUNCTION_65	FOR_1	IF_41
0x4007d62	        0x48c1e003	                              shl rax, 3	      4142	buffer.c	FUNCTION_65	FOR_1	IF_41
0x4007d66	        0x488d75f0	                   lea rsi, [rbp - 0x10]	      4142	buffer.c	FUNCTION_65	FOR_1	IF_41
0x4007d6a	          0x4801f0	                            add rax, rsi	      4142	buffer.c	FUNCTION_65	FOR_1	IF_41
0x4007d6d	    0x482de0070000	                          sub rax, 0x7e0	      4142	buffer.c	FUNCTION_65	FOR_1	IF_41
0x4007d73	    0xc70002000000	                      mov dword [rax], 2	      4142	buffer.c	FUNCTION_65	FOR_1	IF_41
0x4007d79	    0x8b853cf6ffff	            mov eax, dword [rbp - 0x9c4]	      4143	buffer.c	FUNCTION_65	FOR_1	IF_41
0x4007d7f	          0x4863d0	                         movsxd rdx, eax	      4143	buffer.c	FUNCTION_65	FOR_1	IF_41
0x4007d82	          0x4889d0	                            mov rax, rdx	      4143	buffer.c	FUNCTION_65	FOR_1	IF_41
0x4007d85	          0x4801c0	                            add rax, rax	      4143	buffer.c	FUNCTION_65	FOR_1	IF_41
0x4007d88	          0x4801d0	                            add rax, rdx	      4143	buffer.c	FUNCTION_65	FOR_1	IF_41
0x4007d8b	        0x48c1e003	                              shl rax, 3	      4143	buffer.c	FUNCTION_65	FOR_1	IF_41
0x4007d8f	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      4143	buffer.c	FUNCTION_65	FOR_1	IF_41
0x4007d93	          0x4801d8	                            add rax, rbx	      4143	buffer.c	FUNCTION_65	FOR_1	IF_41
0x4007d96	    0x488d9010f8ff	                  lea rdx, [rax - 0x7f0]	      4143	buffer.c	FUNCTION_65	FOR_1	IF_41
0x4007d9d	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4143	buffer.c	FUNCTION_65	FOR_1	IF_41
0x4007da4	          0x488902	                    mov qword [rdx], rax	      4143	buffer.c	FUNCTION_65	FOR_1	IF_41
0x4007da7	    0x8b853cf6ffff	            mov eax, dword [rbp - 0x9c4]	      4144	buffer.c	FUNCTION_65	FOR_1	IF_41
0x4007dad	          0x4863d0	                         movsxd rdx, eax	      4144	buffer.c	FUNCTION_65	FOR_1	IF_41
0x4007db0	          0x4889d0	                            mov rax, rdx	      4144	buffer.c	FUNCTION_65	FOR_1	IF_41
0x4007db3	          0x4801c0	                            add rax, rax	      4144	buffer.c	FUNCTION_65	FOR_1	IF_41
0x4007db6	          0x4801d0	                            add rax, rdx	      4144	buffer.c	FUNCTION_65	FOR_1	IF_41
0x4007db9	        0x48c1e003	                              shl rax, 3	      4144	buffer.c	FUNCTION_65	FOR_1	IF_41
0x4007dbd	        0x488d75f0	                   lea rsi, [rbp - 0x10]	      4144	buffer.c	FUNCTION_65	FOR_1	IF_41
0x4007dc1	          0x4801f0	                            add rax, rsi	      4144	buffer.c	FUNCTION_65	FOR_1	IF_41
0x4007dc4	    0x488d9018f8ff	                  lea rdx, [rax - 0x7e8]	      4144	buffer.c	FUNCTION_65	FOR_1	IF_41
0x4007dcb	    0x8b854cf6ffff	            mov eax, dword [rbp - 0x9b4]	      4144	buffer.c	FUNCTION_65	FOR_1	IF_41
0x4007dd1	            0x8902	                    mov dword [rdx], eax	      4144	buffer.c	FUNCTION_65	FOR_1	IF_41
0x4007dd3	    0x8b853cf6ffff	            mov eax, dword [rbp - 0x9c4]	      4145	buffer.c	FUNCTION_65	FOR_1	IF_41
0x4007dd9	          0x4863d0	                         movsxd rdx, eax	      4145	buffer.c	FUNCTION_65	FOR_1	IF_41
0x4007ddc	          0x4889d0	                            mov rax, rdx	      4145	buffer.c	FUNCTION_65	FOR_1	IF_41
0x4007ddf	          0x4801c0	                            add rax, rax	      4145	buffer.c	FUNCTION_65	FOR_1	IF_41
0x4007de2	          0x4801d0	                            add rax, rdx	      4145	buffer.c	FUNCTION_65	FOR_1	IF_41
0x4007de5	        0x48c1e003	                              shl rax, 3	      4145	buffer.c	FUNCTION_65	FOR_1	IF_41
0x4007de9	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      4145	buffer.c	FUNCTION_65	FOR_1	IF_41
0x4007ded	          0x4801d8	                            add rax, rbx	      4145	buffer.c	FUNCTION_65	FOR_1	IF_41
0x4007df0	    0x488d901cf8ff	                  lea rdx, [rax - 0x7e4]	      4145	buffer.c	FUNCTION_65	FOR_1	IF_41
0x4007df7	    0x8b8550f6ffff	            mov eax, dword [rbp - 0x9b0]	      4145	buffer.c	FUNCTION_65	FOR_1	IF_41
0x4007dfd	            0x8902	                    mov dword [rdx], eax	      4145	buffer.c	FUNCTION_65	FOR_1	IF_41
0x4007dff	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4146	buffer.c	FUNCTION_65	FOR_1	IF_41
0x4007e06	        0x4883c001	                              add rax, 1	      4146	buffer.c	FUNCTION_65	FOR_1	IF_41
0x4007e0a	    0x48898568f6ff	            mov qword [rbp - 0x998], rax	      4146	buffer.c	FUNCTION_65	FOR_1	IF_41
0x4007e11	    0x83853cf6ffff	              add dword [rbp - 0x9c4], 1	      4147	buffer.c	FUNCTION_65	FOR_1	IF_41
0x4007e18	      0xe92f130000	                           jmp 0x400914c	      4148	buffer.c	FUNCTION_65	FOR_1	IF_41
0x4007e1d	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4150	buffer.c	FUNCTION_65	FOR_1	IF_42	CALL_15
0x4007e24	           0xfb600	                   movzx eax, byte [rax]	      4150	buffer.c	FUNCTION_65	FOR_1	IF_42	CALL_15
0x4007e27	           0xfb6c0	                           movzx eax, al	      4150	buffer.c	FUNCTION_65	FOR_1	IF_42	CALL_15
0x4007e2a	            0x89c6	                            mov esi, eax	      4150	buffer.c	FUNCTION_65	FOR_1	IF_42	CALL_15
0x4007e2c	      0xbf00000000	                              mov edi, 0	      4150	buffer.c	FUNCTION_65	FOR_1	IF_42	CALL_15
0x4007e31	      0xe800000000	                          call 0x4007e36	      4150	buffer.c	FUNCTION_65	FOR_1	IF_42	CALL_15
0x4007e36	          0x4885c0	                           test rax, rax	      4150	buffer.c	FUNCTION_65	FOR_1	IF_42	CALL_15
0x4007e39	            0x7517	                           jne 0x4007e52	      4150	buffer.c	FUNCTION_65	FOR_1	IF_42	CALL_15
0x4007e3b	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4152	buffer.c	FUNCTION_65	FOR_1	IF_42
0x4007e42	        0x4883c001	                              add rax, 1	      4152	buffer.c	FUNCTION_65	FOR_1	IF_42
0x4007e46	    0x48898568f6ff	            mov qword [rbp - 0x998], rax	      4152	buffer.c	FUNCTION_65	FOR_1	IF_42
0x4007e4d	      0xe9fa120000	                           jmp 0x400914c	      4153	buffer.c	FUNCTION_65	FOR_1	IF_42
0x4007e52	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4155	buffer.c	FUNCTION_65	FOR_1
0x4007e59	        0x488d5001	                      lea rdx, [rax + 1]	      4155	buffer.c	FUNCTION_65	FOR_1
0x4007e5d	    0x48899568f6ff	            mov qword [rbp - 0x998], rdx	      4155	buffer.c	FUNCTION_65	FOR_1
0x4007e64	           0xfb600	                   movzx eax, byte [rax]	      4155	buffer.c	FUNCTION_65	FOR_1
0x4007e67	    0x88851bf6ffff	              mov byte [rbp - 0x9e5], al	      4155	buffer.c	FUNCTION_65	FOR_1
0x4007e6d	    0xc6851af6ffff	           mov byte [rbp - 0x9e6], 0x44 	      4158	buffer.c	FUNCTION_65	FOR_1
0x4007e74	    0xc7852cf6ffff	              mov dword [rbp - 0x9d4], 0	      4159	buffer.c	FUNCTION_65	FOR_1
0x4007e7e	    0xc78530f6ffff	              mov dword [rbp - 0x9d0], 1	      4160	buffer.c	FUNCTION_65	FOR_1
0x4007e88	    0x48c78598f6ff	mov qword [rbp - 0x968], 0xffffffffffffffff	      4161	buffer.c	FUNCTION_65	FOR_1
0x4007e93	    0x48c78590f6ff	              mov qword [rbp - 0x970], 0	      4162	buffer.c	FUNCTION_65	FOR_1
0x4007e9e	     0xfb6851bf6ff	           movzx eax, byte [rbp - 0x9e5]	      4163	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4007ea5	          0x83e823	                           sub eax, 0x23	      4163	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4007ea8	          0x83f858	                           cmp eax, 0x58	      4163	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4007eab	     0xf873e0b0000	                            ja 0x40089ef	      4163	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4007eb1	            0x89c0	                            mov eax, eax	      4163	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4007eb3	    0x488b04c50000	                  mov rax, qword [rax*8]	      4163	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4007ebb	            0xffe0	                                 jmp rax	      4163	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4007ebd	    0xc78530f6ffff	              mov dword [rbp - 0x9d0], 0	      4168	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4007ec7	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4169	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_43	CALL_16
0x4007ece	        0x488b4008	                mov rax, qword [rax + 8]	      4169	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_43	CALL_16
0x4007ed2	          0x4889c7	                            mov rdi, rax	      4169	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_43	CALL_16
0x4007ed5	      0xe800000000	                          call 0x4007eda	      4169	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_43	CALL_16
0x4007eda	          0x4885c0	                           test rax, rax	      4169	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_43	CALL_16
0x4007edd	            0x742f	                            je 0x4007f0e	      4169	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_43	CALL_16
0x4007edf	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4170	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_18
0x4007ee6	        0x488b4008	                mov rax, qword [rax + 8]	      4170	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_18
0x4007eea	          0x4889c7	                            mov rdi, rax	      4170	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_18
0x4007eed	      0xe800000000	                          call 0x4007ef2	      4170	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_18
0x4007ef2	          0x4889c1	                            mov rcx, rax	      4170	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_18
0x4007ef5	    0x488b05000000	            mov rax, qword [0x04007efc] 	      4170	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_18
0x4007efc	      0xbaff0f0000	                          mov edx, 0xfff	      4170	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_18
0x4007f01	          0x4889ce	                            mov rsi, rcx	      4170	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_18
0x4007f04	          0x4889c7	                            mov rdi, rax	      4170	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_18
0x4007f07	      0xe800000000	                          call 0x4007f0c	      4170	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_18
0x4007f0c	            0xeb62	                           jmp 0x4007f70	      4170	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_18
0x4007f0e	    0x80bd1bf6ffff	           cmp byte [rbp - 0x9e5], 0x46 	      4174	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	ELSE_7
0x4007f15	            0x7514	                           jne 0x4007f2b	      4174	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	ELSE_7
0x4007f17	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4173	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	ELSE_7
0x4007f1e	        0x488b4008	                mov rax, qword [rax + 8]	      4173	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	ELSE_7
0x4007f22	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      4174	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	ELSE_7
0x4007f29	            0xeb12	                           jmp 0x4007f3d	      4174	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	ELSE_7
0x4007f2b	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4174	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	ELSE_7
0x4007f32	        0x488b4008	                mov rax, qword [rax + 8]	      4174	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	ELSE_7
0x4007f36	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      4174	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	ELSE_7
0x4007f3d	    0x48898570f6ff	            mov qword [rbp - 0x990], rax	      4173	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	ELSE_7
0x4007f44	    0x488b15000000	            mov rdx, qword [0x04007f4b] 	      4175	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	ELSE_7	CALL_19
0x4007f4b	    0x488bb570f6ff	            mov rsi, qword [rbp - 0x990]	      4175	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	ELSE_7	CALL_19
0x4007f52	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4175	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	ELSE_7	CALL_19
0x4007f59	        0x488b4008	                mov rax, qword [rax + 8]	      4175	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	ELSE_7	CALL_19
0x4007f5d	    0x41b801000000	                              mov r8d, 1	      4175	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	ELSE_7	CALL_19
0x4007f63	      0xb900100000	                         mov ecx, 0x1000	      4175	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	ELSE_7	CALL_19
0x4007f68	          0x4889c7	                            mov rdi, rax	      4175	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	ELSE_7	CALL_19
0x4007f6b	      0xe800000000	                          call 0x4007f70	      4175	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	ELSE_7	CALL_19
0x4007f70	    0x488b05000000	            mov rax, qword [0x04007f77] 	      4177	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_20
0x4007f77	      0xbe00100000	                         mov esi, 0x1000	      4177	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_20
0x4007f7c	          0x4889c7	                            mov rdi, rax	      4177	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_20
0x4007f7f	      0xe800000000	                          call 0x4007f84	      4177	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_20
0x4007f84	    0x80bd1bf6ffff	           cmp byte [rbp - 0x9e5], 0x74 	      4178	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_44
0x4007f8b	            0x7413	                            je 0x4007fa0	      4178	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_44
0x4007f8d	    0x488b05000000	            mov rax, qword [0x04007f94] 	      4179	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_44
0x4007f94	    0x48898590f6ff	            mov qword [rbp - 0x970], rax	      4179	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_44
0x4007f9b	      0xe94f0a0000	                           jmp 0x40089ef	      4182	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4007fa0	    0x488b05000000	            mov rax, qword [0x04007fa7] 	      4181	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_21
0x4007fa7	          0x4889c7	                            mov rdi, rax	      4181	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_21
0x4007faa	      0xe800000000	                          call 0x4007faf	      4181	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_21
0x4007faf	    0x48898590f6ff	            mov qword [rbp - 0x970], rax	      4181	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_21
0x4007fb6	      0xe9340a0000	                           jmp 0x40089ef	      4182	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4007fbb	    0xc7852cf6ffff	              mov dword [rbp - 0x9d4], 1	      4185	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4007fc5	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4186	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4007fcc	    0x48898570f6ff	            mov qword [rbp - 0x990], rax	      4186	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4007fd3	            0xeb29	                           jmp 0x4007ffe	      4187	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_5
0x4007fd5	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4188	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_5
0x4007fdc	        0x488d5001	                      lea rdx, [rax + 1]	      4188	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_5
0x4007fe0	    0x48899578f6ff	            mov qword [rbp - 0x988], rdx	      4188	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_5
0x4007fe7	    0x488b9568f6ff	            mov rdx, qword [rbp - 0x998]	      4188	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_5
0x4007fee	        0x488d4a01	                      lea rcx, [rdx + 1]	      4188	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_5
0x4007ff2	    0x48898d68f6ff	            mov qword [rbp - 0x998], rcx	      4188	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_5
0x4007ff9	           0xfb612	                   movzx edx, byte [rdx]	      4188	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_5
0x4007ffc	            0x8810	                      mov byte [rax], dl	      4188	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_5
0x4007ffe	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4187	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_5
0x4008005	           0xfb600	                   movzx eax, byte [rax]	      4187	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_5
0x4008008	            0x3c7d	                            cmp al, 0x7d	      4187	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_5
0x400800a	            0x742f	                            je 0x400803b	      4187	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_5
0x400800c	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4187	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_5
0x4008013	           0xfb600	                   movzx eax, byte [rax]	      4187	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_5
0x4008016	            0x84c0	                             test al, al	      4187	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_5
0x4008018	            0x7421	                            je 0x400803b	      4187	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_5
0x400801a	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4187	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_5
0x4008021	        0x488d4801	                      lea rcx, [rax + 1]	      4187	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_5
0x4008025	    0x488b9500f6ff	            mov rdx, qword [rbp - 0xa00]	      4187	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_5
0x400802c	    0x488b85f8f5ff	            mov rax, qword [rbp - 0xa08]	      4187	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_5
0x4008033	          0x4801d0	                            add rax, rdx	      4187	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_5
0x4008036	          0x4839c1	                            cmp rcx, rax	      4187	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_5
0x4008039	            0x729a	                            jb 0x4007fd5	      4187	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_5
0x400803b	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4189	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_45
0x4008042	           0xfb600	                   movzx eax, byte [rax]	      4189	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_45
0x4008045	            0x3c7d	                            cmp al, 0x7d	      4189	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_45
0x4008047	     0xf857d090000	                           jne 0x40089ca	      4189	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_45
0x400804d	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4191	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4008054	        0x4883c001	                              add rax, 1	      4191	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4008058	    0x48898568f6ff	            mov qword [rbp - 0x998], rax	      4191	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x400805f	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4192	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4008066	          0xc60000	                       mov byte [rax], 0	      4192	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4008069	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4193	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4008070	    0x48898578f6ff	            mov qword [rbp - 0x988], rax	      4193	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4008077	    0x488b05000000	            mov rax, qword [0x0400807e] 	      4196	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_22
0x400807e	    0x8b90b8000000	            mov edx, dword [rax + 0xb8] 	      4196	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_22
0x4008084	        0x488d45a0	                   lea rax, [rbp - 0x60]	      4196	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_22
0x4008088	            0x89d1	                            mov ecx, edx	      4196	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_22
0x400808a	      0xba00000000	                              mov edx, 0	      4196	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_22
0x400808f	      0xbe46000000	                           mov esi, 0x46	      4196	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_22
0x4008094	          0x4889c7	                            mov rdi, rax	      4196	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_22
0x4008097	      0xb800000000	                              mov eax, 0	      4196	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_22
0x400809c	      0xe800000000	                          call 0x40080a1	      4196	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_22
0x40080a1	        0x488d45a0	                   lea rax, [rbp - 0x60]	      4197	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_23
0x40080a5	          0x4889c6	                            mov rsi, rax	      4197	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_23
0x40080a8	      0xbf00000000	                              mov edi, 0	      4197	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_23
0x40080ad	      0xe800000000	                          call 0x40080b2	      4197	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_23
0x40080b2	    0x488b05000000	            mov rax, qword [0x040080b9] 	      4199	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40080b9	    0x488985b0f6ff	            mov qword [rbp - 0x950], rax	      4199	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40080c0	    0x488b05000000	            mov rax, qword [0x040080c7] 	      4200	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40080c7	    0x488985b8f6ff	            mov qword [rbp - 0x948], rax	      4200	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40080ce	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4201	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40080d5	    0x488905000000	            mov qword [0x040080dc], rax 	      4201	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40080dc	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4202	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40080e3	        0x488b4008	                mov rax, qword [rax + 8]	      4202	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40080e7	    0x488905000000	            mov qword [0x040080ee], rax 	      4202	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40080ee	    0x8b95ecf5ffff	            mov edx, dword [rbp - 0xa14]	      4204	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_24
0x40080f4	    0x488d8d70f6ff	                  lea rcx, [rbp - 0x990]	      4204	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_24
0x40080fb	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4204	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_24
0x4008102	          0x4889ce	                            mov rsi, rcx	      4204	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_24
0x4008105	          0x4889c7	                            mov rdi, rax	      4204	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_24
0x4008108	      0xe800000000	                          call 0x400810d	      4204	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_24
0x400810d	    0x48898590f6ff	            mov qword [rbp - 0x970], rax	      4204	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_24
0x4008114	    0x488b85b8f6ff	            mov rax, qword [rbp - 0x948]	      4206	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x400811b	    0x488905000000	            mov qword [0x04008122], rax 	      4206	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4008122	    0x488b85b0f6ff	            mov rax, qword [rbp - 0x950]	      4207	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4008129	    0x488905000000	            mov qword [0x04008130], rax 	      4207	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4008130	      0xbe01000000	                              mov esi, 1	      4208	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_25
0x4008135	      0xbf00000000	                              mov edi, 0	      4208	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_25
0x400813a	      0xe800000000	                          call 0x400813f	      4208	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_25
0x400813f	    0x4883bd90f6ff	              cmp qword [rbp - 0x970], 0	      4210	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_46
0x4008147	     0xf8480080000	                            je 0x40089cd	      4210	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_46
0x400814d	    0x488b8590f6ff	            mov rax, qword [rbp - 0x970]	      4210	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_46
0x4008154	           0xfb600	                   movzx eax, byte [rax]	      4210	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_46
0x4008157	            0x84c0	                             test al, al	      4210	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_46
0x4008159	     0xf846e080000	                            je 0x40089cd	      4210	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_46
0x400815f	    0x488b8590f6ff	            mov rax, qword [rbp - 0x970]	      4212	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_46	IF_47	CALL_26
0x4008166	          0x4889c7	                            mov rdi, rax	      4212	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_46	IF_47	CALL_26
0x4008169	      0xe800000000	                          call 0x400816e	      4212	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_46	IF_47	CALL_26
0x400816e	           0xfb600	                   movzx eax, byte [rax]	      4212	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_46	IF_47	CALL_26
0x4008171	            0x84c0	                             test al, al	      4212	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_46	IF_47	CALL_26
0x4008173	     0xf8554080000	                           jne 0x40089cd	      4212	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_46	IF_47	CALL_26
0x4008179	    0x488b8590f6ff	            mov rax, qword [rbp - 0x970]	      4214	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_46	IF_47	CALL_27
0x4008180	          0x4889c7	                            mov rdi, rax	      4214	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_46	IF_47	CALL_27
0x4008183	      0xe800000000	                          call 0x4008188	      4214	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_46	IF_47	CALL_27
0x4008188	            0x4898	                                    cdqe	      4214	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_46	IF_47	CALL_27
0x400818a	    0x48898598f6ff	            mov qword [rbp - 0x968], rax	      4214	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_46	IF_47	CALL_27
0x4008191	    0x4883bd90f6ff	              cmp qword [rbp - 0x970], 0	      4215	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_46	IF_47	CALL_28
0x4008199	            0x741a	                            je 0x40081b5	      4215	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_46	IF_47	CALL_28
0x400819b	    0x488b8590f6ff	            mov rax, qword [rbp - 0x970]	      4215	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_46	IF_47	CALL_28
0x40081a2	          0x4889c7	                            mov rdi, rax	      4215	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_46	IF_47	CALL_28
0x40081a5	      0xe800000000	                          call 0x40081aa	      4215	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_46	IF_47	CALL_28
0x40081aa	    0x48c78590f6ff	              mov qword [rbp - 0x970], 0	      4215	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_46	IF_47	CALL_28
0x40081b5	    0xc7852cf6ffff	              mov dword [rbp - 0x9d4], 0	      4216	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_46	IF_47
0x40081bf	      0xe909080000	                           jmp 0x40089cd	      4220	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40081c4	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4223	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40081cb	        0x488b4008	                mov rax, qword [rax + 8]	      4223	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40081cf	          0x8b4010	            mov eax, dword [rax + 0x10] 	      4223	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40081d2	          0x83e001	                              and eax, 1	      4223	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40081d5	            0x85c0	                           test eax, eax	      4224	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40081d7	            0x750d	                           jne 0x40081e6	      4224	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40081d9	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4224	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40081e0	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4224	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40081e4	            0xeb05	                           jmp 0x40081eb	      4224	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40081e6	      0xb800000000	                              mov eax, 0	      4224	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40081eb	    0x48898598f6ff	            mov qword [rbp - 0x968], rax	      4223	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40081f2	      0xe9f8070000	                           jmp 0x40089ef	      4225	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40081f7	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4228	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40081fe	        0x488b4008	                mov rax, qword [rax + 8]	      4228	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4008202	          0x488b00	                    mov rax, qword [rax]	      4228	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4008205	    0x48898598f6ff	            mov qword [rbp - 0x968], rax	      4228	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x400820c	      0xe9de070000	                           jmp 0x40089ef	      4229	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4008211	    0x8b0500000000	            mov eax, dword [0x04008217] 	      4232	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4008217	          0x83e010	                           and eax, 0x10	      4232	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x400821a	            0x85c0	                           test eax, eax	      4232	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x400821c	            0x7509	                           jne 0x4008227	      4232	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x400821e	    0x83bd60f6ffff	              cmp dword [rbp - 0x9a0], 0	      4232	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4008225	            0x7511	                           jne 0x4008238	      4232	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4008227	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4233	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x400822e	          0x8b4040	            mov eax, dword [rax + 0x40] 	      4233	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4008231	          0x83c001	                              add eax, 1	      4233	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4008234	            0x4898	                                    cdqe	      4232	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4008236	            0xeb05	                           jmp 0x400823d	      4232	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4008238	      0xb800000000	                              mov eax, 0	      4232	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x400823d	    0x48898598f6ff	            mov qword [rbp - 0x968], rax	      4232	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4008244	      0xe9a6070000	                           jmp 0x40089ef	      4234	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4008249	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4239	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4008250	    0x8b80d8000000	            mov eax, dword [rax + 0xd8] 	      4239	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4008256	    0x89851cf6ffff	            mov dword [rbp - 0x9e4], eax	      4239	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x400825c	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4240	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_48
0x4008263	    0x8b8034020000	           mov eax, dword [rax + 0x234] 	      4240	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_48
0x4008269	            0x85c0	                           test eax, eax	      4240	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_48
0x400826b	            0x745b	                            je 0x40082c8	      4240	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_48
0x400826d	    0x8b0500000000	            mov eax, dword [0x04008273] 	      4240	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_48
0x4008273	            0x85c0	                           test eax, eax	      4240	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_48
0x4008275	            0x7551	                           jne 0x40082c8	      4240	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_48
0x4008277	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4242	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_48
0x400827e	    0xc78034020000	              mov dword [rax + 0x234], 0	      4242	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_48
0x4008288	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4243	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_48	CALL_29
0x400828f	        0x488d7038	                   lea rsi, [rax + 0x38]	      4243	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_48	CALL_29
0x4008293	    0x488d951cf6ff	                  lea rdx, [rbp - 0x9e4]	      4243	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_48	CALL_29
0x400829a	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4243	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_48	CALL_29
0x40082a1	    0x41b800000000	                              mov r8d, 0	      4243	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_48	CALL_29
0x40082a7	          0x4889d1	                            mov rcx, rdx	      4243	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_48	CALL_29
0x40082aa	      0xba00000000	                              mov edx, 0	      4243	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_48	CALL_29
0x40082af	          0x4889c7	                            mov rdi, rax	      4243	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_48	CALL_29
0x40082b2	      0xe800000000	                          call 0x40082b7	      4243	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_48	CALL_29
0x40082b7	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4244	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_48
0x40082be	    0xc78034020000	              mov dword [rax + 0x234], 1	      4244	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_48
0x40082c8	    0x8b851cf6ffff	            mov eax, dword [rbp - 0x9e4]	      4246	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40082ce	          0x83c001	                              add eax, 1	      4246	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40082d1	    0x89851cf6ffff	            mov dword [rbp - 0x9e4], eax	      4246	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40082d7	    0x80bd1bf6ffff	           cmp byte [rbp - 0x9e5], 0x56 	      4248	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_49
0x40082de	            0x7538	                           jne 0x4008318	      4248	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_49
0x40082e0	    0x8b0500000000	            mov eax, dword [0x040082e6] 	      4249	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_49
0x40082e6	          0x83e010	                           and eax, 0x10	      4249	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_49
0x40082e9	            0x85c0	                           test eax, eax	      4250	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_49
0x40082eb	            0x7509	                           jne 0x40082f6	      4250	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_49
0x40082ed	    0x83bd60f6ffff	              cmp dword [rbp - 0x9a0], 0	      4249	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_49
0x40082f4	            0x750f	                           jne 0x4008305	      4249	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_49
0x40082f6	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4250	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_49
0x40082fd	          0x8b4040	            mov eax, dword [rax + 0x40] 	      4250	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_49
0x4008300	          0x8d5001	                      lea edx, [rax + 1]	      4250	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_49
0x4008303	            0xeb05	                           jmp 0x400830a	      4250	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_49
0x4008305	      0xba00000000	                              mov edx, 0	      4250	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_49
0x400830a	    0x8b851cf6ffff	            mov eax, dword [rbp - 0x9e4]	      4249	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_49
0x4008310	            0x39c2	                            cmp edx, eax	      4249	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_49
0x4008312	     0xf84b8060000	                            je 0x40089d0	      4249	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_49
0x4008318	    0x8b851cf6ffff	            mov eax, dword [rbp - 0x9e4]	      4252	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x400831e	            0x4898	                                    cdqe	      4252	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4008320	    0x48898598f6ff	            mov qword [rbp - 0x968], rax	      4252	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4008327	      0xe9c3060000	                           jmp 0x40089ef	      4253	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x400832c	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4256	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4008333	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      4256	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4008337	          0x4889d0	                            mov rax, rdx	      4256	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x400833a	        0x48c1e002	                              shl rax, 2	      4256	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x400833e	          0x4801d0	                            add rax, rdx	      4256	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4008341	    0x488d14850000	                        lea rdx, [rax*4]	      4256	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4008349	          0x4801d0	                            add rax, rdx	      4256	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x400834c	        0x48c1e002	                              shl rax, 2	      4256	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4008350	          0x4889c1	                            mov rcx, rax	      4256	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4008353	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4257	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x400835a	        0x488b4008	                mov rax, qword [rax + 8]	      4257	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x400835e	          0x488b38	                    mov rdi, qword [rax]	      4257	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4008361	          0x4889c8	                            mov rax, rcx	      4256	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4008364	            0x4899	                                     cqo	      4256	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4008366	          0x48f7ff	                                idiv rdi	      4256	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4008369	            0x4898	                                    cdqe	      4256	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x400836b	    0x48898598f6ff	            mov qword [rbp - 0x968], rax	      4256	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4008372	      0xe978060000	                           jmp 0x40089ef	      4258	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4008377	        0x488d45a0	                   lea rax, [rbp - 0x60]	      4261	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x400837b	    0x48898590f6ff	            mov qword [rbp - 0x970], rax	      4261	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4008382	    0x488b8d90f6ff	            mov rcx, qword [rbp - 0x970]	      4262	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_30
0x4008389	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4262	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_30
0x4008390	      0xba46000000	                           mov edx, 0x46	      4262	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_30
0x4008395	          0x4889ce	                            mov rsi, rcx	      4262	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_30
0x4008398	          0x4889c7	                            mov rdi, rax	      4262	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_30
0x400839b	      0xe800000000	                          call 0x40083a0	      4262	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_30
0x40083a0	      0xe94a060000	                           jmp 0x40089ef	      4263	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40083a5	    0xc78530f6ffff	              mov dword [rbp - 0x9d0], 0	      4266	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40083af	        0xc645a000	                mov byte [rbp - 0x60], 0	      4267	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40083b3	        0x488d75a0	                   lea rsi, [rbp - 0x60]	      4268	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_50	CALL_31
0x40083b7	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4268	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_50	CALL_31
0x40083be	      0xb900000000	                              mov ecx, 0	      4268	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_50	CALL_31
0x40083c3	      0xba46000000	                           mov edx, 0x46	      4268	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_50	CALL_31
0x40083c8	          0x4889c7	                            mov rdi, rax	      4268	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_50	CALL_31
0x40083cb	      0xe876180000	              call sym.append_arg_number	      4268	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_50	CALL_31
0x40083d0	            0x85c0	                           test eax, eax	      4268	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_50	CALL_31
0x40083d2	     0xf84fb050000	                            je 0x40089d3	      4268	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_50	CALL_31
0x40083d8	        0x488d45a0	                   lea rax, [rbp - 0x60]	      4269	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_50
0x40083dc	    0x48898590f6ff	            mov qword [rbp - 0x970], rax	      4269	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_50
0x40083e3	      0xe9eb050000	                           jmp 0x40089d3	      4270	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40083e8	    0xc78530f6ffff	              mov dword [rbp - 0x9d0], 0	      4273	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40083f2	        0x488d55a0	                   lea rdx, [rbp - 0x60]	      4274	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_51	CALL_32
0x40083f6	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4274	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_51	CALL_32
0x40083fd	      0xb946000000	                           mov ecx, 0x46	      4274	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_51	CALL_32
0x4008402	      0xbe00000000	                              mov esi, 0	      4274	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_51	CALL_32
0x4008407	          0x4889c7	                            mov rdi, rax	      4274	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_51	CALL_32
0x400840a	      0xe800000000	                          call 0x400840f	      4274	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_51	CALL_32
0x400840f	            0x85c0	                           test eax, eax	      4274	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_51	CALL_32
0x4008411	     0xf84bf050000	                            je 0x40089d6	      4274	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_51	CALL_32
0x4008417	        0x488d45a0	                   lea rax, [rbp - 0x60]	      4275	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_51
0x400841b	    0x48898590f6ff	            mov qword [rbp - 0x970], rax	      4275	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_51
0x4008422	      0xe9af050000	                           jmp 0x40089d6	      4276	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4008427	    0x488b05000000	            mov rax, qword [0x0400842e] 	      4279	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x400842e	    0x48898598f6ff	            mov qword [rbp - 0x968], rax	      4279	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4008435	      0xe9b5050000	                           jmp 0x40089ef	      4283	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x400843a	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4286	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4008441	        0x488b4008	                mov rax, qword [rax + 8]	      4286	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4008445	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      4286	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x400844b	            0x4898	                                    cdqe	      4286	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x400844d	    0x48898598f6ff	            mov qword [rbp - 0x968], rax	      4286	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4008454	      0xe996050000	                           jmp 0x40089ef	      4287	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4008459	    0xc6851af6ffff	           mov byte [rbp - 0x9e6], 0x58 	      4290	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4008460	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4294	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_33
0x4008467	        0x488b4838	            mov rcx, qword [rax + 0x38] 	      4294	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_33
0x400846b	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4294	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_33
0x4008472	        0x488b4008	                mov rax, qword [rax + 8]	      4294	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_33
0x4008476	      0xba00000000	                              mov edx, 0	      4294	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_33
0x400847b	          0x4889ce	                            mov rsi, rcx	      4294	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_33
0x400847e	          0x4889c7	                            mov rdi, rax	      4294	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_33
0x4008481	      0xe800000000	                          call 0x4008486	      4294	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_33
0x4008486	    0x48898580f6ff	            mov qword [rbp - 0x980], rax	      4294	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_33
0x400848d	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4295	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4008494	        0x488b4008	                mov rax, qword [rax + 8]	      4295	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4008498	          0x8b4010	            mov eax, dword [rax + 0x10] 	      4295	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x400849b	          0x83e001	                              and eax, 1	      4295	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x400849e	            0x85c0	                           test eax, eax	      4296	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40084a0	            0x7543	                           jne 0x40084e5	      4296	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40084a2	    0x4883bd80f6ff	              cmp qword [rbp - 0x980], 0	      4295	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40084aa	            0x7839	                            js 0x40084e5	      4295	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40084ac	    0x488b8580f6ff	            mov rax, qword [rbp - 0x980]	      4296	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40084b3	        0x488d5001	                      lea rdx, [rax + 1]	      4296	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40084b7	    0x8b0500000000	            mov eax, dword [0x040084bd] 	      4296	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40084bd	          0x83e010	                           and eax, 0x10	      4296	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40084c0	            0x85c0	                           test eax, eax	      4296	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40084c2	            0x7509	                           jne 0x40084cd	      4296	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40084c4	    0x83bd60f6ffff	              cmp dword [rbp - 0x9a0], 0	      4296	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40084cb	            0x750e	                           jne 0x40084db	      4296	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40084cd	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4297	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40084d4	          0x8b4040	            mov eax, dword [rax + 0x40] 	      4297	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40084d7	            0x4898	                                    cdqe	      4296	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40084d9	            0xeb05	                           jmp 0x40084e0	      4296	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40084db	      0xb800000000	                              mov eax, 0	      4296	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40084e0	          0x4801d0	                            add rax, rdx	      4296	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40084e3	            0xeb05	                           jmp 0x40084ea	      4296	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40084e5	      0xb800000000	                              mov eax, 0	      4296	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40084ea	    0x48898598f6ff	            mov qword [rbp - 0x968], rax	      4295	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40084f1	      0xe9f9040000	                           jmp 0x40089ef	      4299	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40084f6	    0xc6851af6ffff	           mov byte [rbp - 0x9e6], 0x58 	      4302	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40084fd	    0x8b8520f6ffff	            mov eax, dword [rbp - 0x9e0]	      4305	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4008503	            0x4898	                                    cdqe	      4305	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4008505	    0x48898598f6ff	            mov qword [rbp - 0x968], rax	      4305	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x400850c	    0x4883bd98f6ff	           cmp qword [rbp - 0x968], 0xa 	      4306	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_52
0x4008514	            0x7510	                           jne 0x4008526	      4306	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_52
0x4008516	    0x48c78598f6ff	              mov qword [rbp - 0x968], 0	      4307	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_52
0x4008521	      0xe9b3040000	                           jmp 0x40089d9	      4310	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4008526	    0x4883bd98f6ff	           cmp qword [rbp - 0x968], 0xd 	      4308	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	ELSE_9	IF_53	CALL_34
0x400852e	     0xf85a5040000	                           jne 0x40089d9	      4308	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	ELSE_9	IF_53	CALL_34
0x4008534	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4308	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	ELSE_9	IF_53	CALL_34
0x400853b	        0x488b4008	                mov rax, qword [rax + 8]	      4308	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	ELSE_9	IF_53	CALL_34
0x400853f	          0x4889c7	                            mov rdi, rax	      4308	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	ELSE_9	IF_53	CALL_34
0x4008542	      0xe800000000	                          call 0x4008547	      4308	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	ELSE_9	IF_53	CALL_34
0x4008547	          0x83f802	                              cmp eax, 2	      4308	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	ELSE_9	IF_53	CALL_34
0x400854a	     0xf8589040000	                           jne 0x40089d9	      4308	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	ELSE_9	IF_53	CALL_34
0x4008550	    0x48c78598f6ff	            mov qword [rbp - 0x968], 0xa	      4309	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	ELSE_9	IF_53
0x400855b	      0xe979040000	                           jmp 0x40089d9	      4310	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4008560	    0xc7852cf6ffff	              mov dword [rbp - 0x9d4], 1	      4314	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x400856a	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4315	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_54
0x4008571	        0x488b4008	                mov rax, qword [rax + 8]	      4315	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_54
0x4008575	    0x8b8060150000	          mov eax, dword [rax + 0x1560] 	      4315	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_54
0x400857b	            0x85c0	                           test eax, eax	      4315	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_54
0x400857d	     0xf8459040000	                            je 0x40089dc	      4315	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_54
0x4008583	    0x80bd1bf6ffff	           cmp byte [rbp - 0x9e5], 0x52 	      4316	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_35
0x400858a	            0x740c	                            je 0x4008598	      4316	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_35
0x400858c	      0xbf00000000	                              mov edi, 0	      4316	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_35
0x4008591	      0xe800000000	                          call 0x4008596	      4316	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_35
0x4008596	            0xeb05	                           jmp 0x400859d	      4316	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_35
0x4008598	      0xb800000000	                              mov eax, 0	      4316	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_35
0x400859d	    0x48898590f6ff	            mov qword [rbp - 0x970], rax	      4316	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_35
0x40085a4	      0xe933040000	                           jmp 0x40089dc	      4317	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40085a9	    0xc7852cf6ffff	              mov dword [rbp - 0x9d4], 1	      4321	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40085b3	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4322	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_55
0x40085ba	        0x488b4008	                mov rax, qword [rax + 8]	      4322	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_55
0x40085be	    0x8b8058170000	          mov eax, dword [rax + 0x1758] 	      4322	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_55
0x40085c4	            0x85c0	                           test eax, eax	      4322	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_55
0x40085c6	     0xf8413040000	                            je 0x40089df	      4322	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_55
0x40085cc	    0x80bd1bf6ffff	           cmp byte [rbp - 0x9e5], 0x48 	      4323	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_55
0x40085d3	            0x740c	                            je 0x40085e1	      4323	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_55
0x40085d5	      0xbf00000000	                              mov edi, 0	      4323	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_55
0x40085da	      0xe800000000	                          call 0x40085df	      4323	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_55
0x40085df	            0xeb05	                           jmp 0x40085e6	      4323	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_55
0x40085e1	      0xb800000000	                              mov eax, 0	      4323	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_55
0x40085e6	    0x48898590f6ff	            mov qword [rbp - 0x970], rax	      4323	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_55
0x40085ed	      0xe9ed030000	                           jmp 0x40089df	      4325	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40085f2	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4328	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_56
0x40085f9	        0x488b4008	                mov rax, qword [rax + 8]	      4328	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_56
0x40085fd	    0x488b80981400	          mov rax, qword [rax + 0x1498] 	      4328	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_56
0x4008604	           0xfb600	                   movzx eax, byte [rax]	      4328	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_56
0x4008607	            0x84c0	                             test al, al	      4328	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_56
0x4008609	     0xf84d3030000	                            je 0x40089e2	      4328	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_56
0x400860f	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4329	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_56	CALL_37
0x4008616	        0x488b4008	                mov rax, qword [rax + 8]	      4329	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_56	CALL_37
0x400861a	    0x488b80981400	          mov rax, qword [rax + 0x1498] 	      4329	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_56	CALL_37
0x4008621	          0x4889c7	                            mov rdi, rax	      4329	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_56	CALL_37
0x4008624	      0xe800000000	                          call 0x4008629	      4329	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_56	CALL_37
0x4008629	        0x4883f842	                           cmp rax, 0x42	      4329	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_56	CALL_37
0x400862d	     0xf87af030000	                            ja 0x40089e2	      4329	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_56	CALL_37
0x4008633	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4332	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_56
0x400863a	        0x488b4008	                mov rax, qword [rax + 8]	      4332	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_56
0x400863e	    0x488b90981400	          mov rdx, qword [rax + 0x1498] 	      4331	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_56	CALL_38
0x4008645	        0x488d45a0	                   lea rax, [rbp - 0x60]	      4331	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_56	CALL_38
0x4008649	          0x4889d1	                            mov rcx, rdx	      4331	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_56	CALL_38
0x400864c	      0xba00000000	                              mov edx, 0	      4331	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_56	CALL_38
0x4008651	      0xbe46000000	                           mov esi, 0x46	      4331	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_56	CALL_38
0x4008656	          0x4889c7	                            mov rdi, rax	      4331	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_56	CALL_38
0x4008659	      0xb800000000	                              mov eax, 0	      4331	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_56	CALL_38
0x400865e	      0xe800000000	                          call 0x4008663	      4331	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_56	CALL_38
0x4008663	        0x488d45a0	                   lea rax, [rbp - 0x60]	      4333	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_56
0x4008667	    0x48898590f6ff	            mov qword [rbp - 0x970], rax	      4333	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_56
0x400866e	      0xe96f030000	                           jmp 0x40089e2	      4335	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4008673	    0xc7852cf6ffff	              mov dword [rbp - 0x9d4], 1	      4338	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x400867d	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4339	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57
0x4008684	        0x488b4008	                mov rax, qword [rax + 8]	      4339	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57
0x4008688	    0x488b80981400	          mov rax, qword [rax + 0x1498] 	      4339	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57
0x400868f	           0xfb600	                   movzx eax, byte [rax]	      4339	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57
0x4008692	            0x84c0	                             test al, al	      4339	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57
0x4008694	     0xf844b030000	                            je 0x40089e5	      4339	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57
0x400869a	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4340	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	CALL_39
0x40086a1	        0x488b4008	                mov rax, qword [rax + 8]	      4340	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	CALL_39
0x40086a5	    0x488b80981400	          mov rax, qword [rax + 0x1498] 	      4340	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	CALL_39
0x40086ac	          0x4889c7	                            mov rdi, rax	      4340	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	CALL_39
0x40086af	      0xe800000000	                          call 0x40086b4	      4340	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	CALL_39
0x40086b4	        0x4883f843	                           cmp rax, 0x43	      4340	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	CALL_39
0x40086b8	     0xf8727030000	                            ja 0x40089e5	      4340	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	CALL_39
0x40086be	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4343	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57
0x40086c5	        0x488b4008	                mov rax, qword [rax + 8]	      4343	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57
0x40086c9	    0x488b90981400	          mov rdx, qword [rax + 0x1498] 	      4342	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	CALL_40
0x40086d0	        0x488d45a0	                   lea rax, [rbp - 0x60]	      4342	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	CALL_40
0x40086d4	          0x4889d1	                            mov rcx, rdx	      4342	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	CALL_40
0x40086d7	      0xba00000000	                              mov edx, 0	      4342	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	CALL_40
0x40086dc	      0xbe46000000	                           mov esi, 0x46	      4342	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	CALL_40
0x40086e1	          0x4889c7	                            mov rdi, rax	      4342	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	CALL_40
0x40086e4	      0xb800000000	                              mov eax, 0	      4342	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	CALL_40
0x40086e9	      0xe800000000	                          call 0x40086ee	      4342	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	CALL_40
0x40086ee	        0x488d45a0	                   lea rax, [rbp - 0x60]	      4344	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	FOR_8
0x40086f2	    0x48898570f6ff	            mov qword [rbp - 0x990], rax	      4344	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	FOR_8
0x40086f9	            0xeb2f	                           jmp 0x400872a	      4344	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	FOR_8
0x40086fb	    0x488b9d70f6ff	            mov rbx, qword [rbp - 0x990]	      4345	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	CALL_41
0x4008702	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4345	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	CALL_41
0x4008709	           0xfb600	                   movzx eax, byte [rax]	      4345	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	CALL_41
0x400870c	           0xfb6c0	                           movzx eax, al	      4345	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	CALL_41
0x400870f	            0x89c7	                            mov edi, eax	      4345	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	CALL_41
0x4008711	      0xe800000000	                          call 0x4008716	      4345	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	CALL_41
0x4008716	            0x8803	                      mov byte [rbx], al	      4345	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	CALL_41
0x4008718	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4344	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	FOR_8
0x400871f	        0x4883c001	                              add rax, 1	      4344	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	FOR_8
0x4008723	    0x48898570f6ff	            mov qword [rbp - 0x990], rax	      4344	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	FOR_8
0x400872a	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4344	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	FOR_8
0x4008731	           0xfb600	                   movzx eax, byte [rax]	      4344	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	FOR_8
0x4008734	            0x84c0	                             test al, al	      4344	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	FOR_8
0x4008736	            0x75c3	                           jne 0x40086fb	      4344	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	FOR_8
0x4008738	        0x488d45a0	                   lea rax, [rbp - 0x60]	      4346	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57
0x400873c	    0x48898590f6ff	            mov qword [rbp - 0x970], rax	      4346	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57
0x4008743	      0xe99d020000	                           jmp 0x40089e5	      4348	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4008748	    0xc7852cf6ffff	              mov dword [rbp - 0x9d4], 1	      4353	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x4008752	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4354	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_58
0x4008759	    0x8b8050020000	           mov eax, dword [rax + 0x250] 	      4354	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_58
0x400875f	            0x85c0	                           test eax, eax	      4354	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_58
0x4008761	     0xf8481020000	                            je 0x40089e8	      4354	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_58
0x4008767	    0x80bd1bf6ffff	           cmp byte [rbp - 0x9e5], 0x57 	      4355	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_58
0x400876e	            0x740c	                            je 0x400877c	      4355	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_58
0x4008770	      0xbf00000000	                              mov edi, 0	      4355	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_58
0x4008775	      0xe800000000	                          call 0x400877a	      4355	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_58
0x400877a	            0xeb05	                           jmp 0x4008781	      4355	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_58
0x400877c	      0xb800000000	                              mov eax, 0	      4355	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_58
0x4008781	    0x48898590f6ff	            mov qword [rbp - 0x970], rax	      4355	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_58
0x4008788	      0xe95b020000	                           jmp 0x40089e8	      4357	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x400878d	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4360	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_59	CALL_43
0x4008794	        0x488b4008	                mov rax, qword [rax + 8]	      4360	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_59	CALL_43
0x4008798	          0x4889c7	                            mov rdi, rax	      4360	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_59	CALL_43
0x400879b	      0xe800000000	                          call 0x40087a0	      4360	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_59	CALL_43
0x40087a0	            0x85c0	                           test eax, eax	      4360	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_59	CALL_43
0x40087a2	     0xf8443020000	                            je 0x40089eb	      4360	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_59	CALL_43
0x40087a8	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4361	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_59
0x40087af	    0x488b80501900	          mov rax, qword [rax + 0x1950] 	      4361	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_59
0x40087b6	          0x4885c0	                           test rax, rax	      4361	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_59
0x40087b9	            0x7411	                            je 0x40087cc	      4361	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_59
0x40087bb	    0x488b05000000	            mov rax, qword [0x040087c2] 	      4362	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_59	CALL_44
0x40087c2	          0x4889c7	                            mov rdi, rax	      4361	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_59
0x40087c5	      0xe800000000	                          call 0x40087ca	      4361	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_59
0x40087ca	            0xeb0f	                           jmp 0x40087db	      4361	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_59
0x40087cc	    0x488b05000000	            mov rax, qword [0x040087d3] 	      4363	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_45
0x40087d3	          0x4889c7	                            mov rdi, rax	      4361	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_59
0x40087d6	      0xe800000000	                          call 0x40087db	      4361	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_59
0x40087db	    0x48898590f6ff	            mov qword [rbp - 0x970], rax	      4361	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_59
0x40087e2	      0xe904020000	                           jmp 0x40089eb	      4364	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40087e7	    0xc7852cf6ffff	              mov dword [rbp - 0x9d4], 1	      4369	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40087f1	    0x80bd1bf6ffff	           cmp byte [rbp - 0x9e5], 0x4d 	      4370	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2
0x40087f8	           0xf94c0	                                 sete al	      4370	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2
0x40087fb	           0xfb6d8	                           movzx ebx, al	      4370	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2
0x40087fe	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4371	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2	CALL_46
0x4008805	        0x488b4008	                mov rax, qword [rax + 8]	      4371	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2	CALL_46
0x4008809	          0x4889c7	                            mov rdi, rax	      4371	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2	CALL_46
0x400880c	      0xe800000000	                          call 0x4008811	      4371	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2	CALL_46
0x4008811	             0x1c0	                            add eax, eax	      4371	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2	CALL_46
0x4008813	          0x8d1403	                    lea edx, [rbx + rax]	      4371	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2	CALL_46
0x4008816	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4372	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2
0x400881d	        0x488b4008	                mov rax, qword [rax + 8]	      4372	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2
0x4008821	    0x8b8040150000	          mov eax, dword [rax + 0x1540] 	      4372	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2
0x4008827	            0x85c0	                           test eax, eax	      4372	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2
0x4008829	            0x7507	                           jne 0x4008832	      4372	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2
0x400882b	      0xb804000000	                              mov eax, 4	      4372	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2
0x4008830	            0xeb05	                           jmp 0x4008837	      4372	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2
0x4008832	      0xb800000000	                              mov eax, 0	      4372	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2
0x4008837	             0x1d0	                            add eax, edx	      4372	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2
0x4008839	          0x83f807	                              cmp eax, 7	      4370	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2
0x400883c	     0xf87ac010000	                            ja 0x40089ee	      4370	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2
0x4008842	            0x89c0	                            mov eax, eax	      4370	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2
0x4008844	    0x488b04c50000	                  mov rax, qword [rax*8]	      4370	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2
0x400884c	            0xffe0	                                 jmp rax	      4370	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2
0x400884e	    0x48c78590f6ff	              mov qword [rbp - 0x970], 0	      4374	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2
0x4008859	            0xeb40	                           jmp 0x400889b	      4374	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2
0x400885b	    0x48c78590f6ff	              mov qword [rbp - 0x970], 0	      4375	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2
0x4008866	            0xeb33	                           jmp 0x400889b	      4375	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2
0x4008868	    0x48c78590f6ff	              mov qword [rbp - 0x970], 0	      4376	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2
0x4008873	            0xeb26	                           jmp 0x400889b	      4376	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2
0x4008875	    0x48c78590f6ff	              mov qword [rbp - 0x970], 0	      4377	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2
0x4008880	            0xeb19	                           jmp 0x400889b	      4377	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2
0x4008882	    0x48c78590f6ff	              mov qword [rbp - 0x970], 0	      4378	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2
0x400888d	            0xeb0c	                           jmp 0x400889b	      4378	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2
0x400888f	    0x48c78590f6ff	              mov qword [rbp - 0x970], 0	      4379	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2
0x400889a	              0x90	                                     nop	      4379	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2
0x400889b	      0xe94e010000	                           jmp 0x40089ee	      4381	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40088a0	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4384	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40088a7	    0x48898570f6ff	            mov qword [rbp - 0x990], rax	      4384	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40088ae	            0xeb12	                           jmp 0x40088c2	      4385	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_6
0x40088b0	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4386	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_6
0x40088b7	        0x4883c001	                              add rax, 1	      4386	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_6
0x40088bb	    0x48898568f6ff	            mov qword [rbp - 0x998], rax	      4386	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_6
0x40088c2	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4385	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_6
0x40088c9	           0xfb600	                   movzx eax, byte [rax]	      4385	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_6
0x40088cc	            0x3c23	                            cmp al, 0x23	      4385	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_6
0x40088ce	            0x740e	                            je 0x40088de	      4385	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_6
0x40088d0	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4385	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_6
0x40088d7	           0xfb600	                   movzx eax, byte [rax]	      4385	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_6
0x40088da	            0x84c0	                             test al, al	      4385	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_6
0x40088dc	            0x75d2	                           jne 0x40088b0	      4385	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_6
0x40088de	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4387	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60
0x40088e5	           0xfb600	                   movzx eax, byte [rax]	      4387	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60
0x40088e8	            0x3c23	                            cmp al, 0x23	      4387	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60
0x40088ea	     0xf85b1000000	                           jne 0x40089a1	      4387	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60
0x40088f0	    0x8b853cf6ffff	            mov eax, dword [rbp - 0x9c4]	      4389	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60
0x40088f6	          0x4863d0	                         movsxd rdx, eax	      4389	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60
0x40088f9	          0x4889d0	                            mov rax, rdx	      4389	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60
0x40088fc	          0x4801c0	                            add rax, rax	      4389	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60
0x40088ff	          0x4801d0	                            add rax, rdx	      4389	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60
0x4008902	        0x48c1e003	                              shl rax, 3	      4389	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60
0x4008906	        0x488d75f0	                   lea rsi, [rbp - 0x10]	      4389	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60
0x400890a	          0x4801f0	                            add rax, rsi	      4389	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60
0x400890d	    0x482de0070000	                          sub rax, 0x7e0	      4389	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60
0x4008913	    0xc70004000000	                      mov dword [rax], 4	      4389	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60
0x4008919	    0x8b853cf6ffff	            mov eax, dword [rbp - 0x9c4]	      4390	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60
0x400891f	          0x4863d0	                         movsxd rdx, eax	      4390	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60
0x4008922	          0x4889d0	                            mov rax, rdx	      4390	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60
0x4008925	          0x4801c0	                            add rax, rax	      4390	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60
0x4008928	          0x4801d0	                            add rax, rdx	      4390	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60
0x400892b	        0x48c1e003	                              shl rax, 3	      4390	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60
0x400892f	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      4390	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60
0x4008933	          0x4801d8	                            add rax, rbx	      4390	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60
0x4008936	    0x488d9010f8ff	                  lea rdx, [rax - 0x7f0]	      4390	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60
0x400893d	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4390	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60
0x4008944	          0x488902	                    mov qword [rdx], rax	      4390	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60
0x4008947	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4391	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60	CALL_47
0x400894e	          0x4889c2	                            mov rdx, rax	      4391	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60	CALL_47
0x4008951	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4391	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60	CALL_47
0x4008958	          0x4829c2	                            sub rdx, rax	      4391	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60	CALL_47
0x400895b	          0x4889d0	                            mov rax, rdx	      4391	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60	CALL_47
0x400895e	            0x89c2	                            mov edx, eax	      4391	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60	CALL_47
0x4008960	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4391	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60	CALL_47
0x4008967	            0x89d6	                            mov esi, edx	      4391	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60	CALL_47
0x4008969	          0x4889c7	                            mov rdi, rax	      4391	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60	CALL_47
0x400896c	      0xe800000000	                          call 0x4008971	      4391	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60	CALL_47
0x4008971	            0xf7d8	                                 neg eax	      4391	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60	CALL_47
0x4008973	            0x89c1	                            mov ecx, eax	      4391	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60	CALL_47
0x4008975	    0x8b853cf6ffff	            mov eax, dword [rbp - 0x9c4]	      4391	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60	CALL_47
0x400897b	          0x4863d0	                         movsxd rdx, eax	      4391	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60	CALL_47
0x400897e	          0x4889d0	                            mov rax, rdx	      4391	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60	CALL_47
0x4008981	          0x4801c0	                            add rax, rax	      4391	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60	CALL_47
0x4008984	          0x4801d0	                            add rax, rdx	      4391	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60	CALL_47
0x4008987	        0x48c1e003	                              shl rax, 3	      4391	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60	CALL_47
0x400898b	        0x488d75f0	                   lea rsi, [rbp - 0x10]	      4391	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60	CALL_47
0x400898f	          0x4801f0	                            add rax, rsi	      4391	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60	CALL_47
0x4008992	    0x482de8070000	                          sub rax, 0x7e8	      4391	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60	CALL_47
0x4008998	            0x8908	                    mov dword [rax], ecx	      4391	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60	CALL_47
0x400899a	    0x83853cf6ffff	              add dword [rbp - 0x9c4], 1	      4392	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60
0x40089a1	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4394	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_61
0x40089a8	           0xfb600	                   movzx eax, byte [rax]	      4394	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_61
0x40089ab	            0x84c0	                             test al, al	      4394	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_61
0x40089ad	     0xf8499070000	                            je 0x400914c	      4394	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_61
0x40089b3	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4395	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_61
0x40089ba	        0x4883c001	                              add rax, 1	      4395	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_61
0x40089be	    0x48898568f6ff	            mov qword [rbp - 0x998], rax	      4395	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_61
0x40089c5	      0xe982070000	                           jmp 0x400914c	      4396	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40089ca	              0x90	                                     nop	      4190	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_45
0x40089cb	            0xeb22	                           jmp 0x40089ef	      4190	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_45
0x40089cd	              0x90	                                     nop	      4220	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40089ce	            0xeb1f	                           jmp 0x40089ef	      4220	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40089d0	              0x90	                                     nop	      4251	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_49
0x40089d1	            0xeb1c	                           jmp 0x40089ef	      4251	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_49
0x40089d3	              0x90	                                     nop	      4270	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40089d4	            0xeb19	                           jmp 0x40089ef	      4270	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40089d6	              0x90	                                     nop	      4276	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40089d7	            0xeb16	                           jmp 0x40089ef	      4276	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40089d9	              0x90	                                     nop	      4310	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40089da	            0xeb13	                           jmp 0x40089ef	      4310	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40089dc	              0x90	                                     nop	      4317	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40089dd	            0xeb10	                           jmp 0x40089ef	      4317	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40089df	              0x90	                                     nop	      4325	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40089e0	            0xeb0d	                           jmp 0x40089ef	      4325	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40089e2	              0x90	                                     nop	      4335	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40089e3	            0xeb0a	                           jmp 0x40089ef	      4335	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40089e5	              0x90	                                     nop	      4348	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40089e6	            0xeb07	                           jmp 0x40089ef	      4348	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40089e8	              0x90	                                     nop	      4357	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40089e9	            0xeb04	                           jmp 0x40089ef	      4357	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40089eb	              0x90	                                     nop	      4364	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40089ec	            0xeb01	                           jmp 0x40089ef	      4364	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40089ee	              0x90	                                     nop	      4381	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x40089ef	    0x8b853cf6ffff	            mov eax, dword [rbp - 0x9c4]	      4399	buffer.c	FUNCTION_65	FOR_1
0x40089f5	          0x4863d0	                         movsxd rdx, eax	      4399	buffer.c	FUNCTION_65	FOR_1
0x40089f8	          0x4889d0	                            mov rax, rdx	      4399	buffer.c	FUNCTION_65	FOR_1
0x40089fb	          0x4801c0	                            add rax, rax	      4399	buffer.c	FUNCTION_65	FOR_1
0x40089fe	          0x4801d0	                            add rax, rdx	      4399	buffer.c	FUNCTION_65	FOR_1
0x4008a01	        0x48c1e003	                              shl rax, 3	      4399	buffer.c	FUNCTION_65	FOR_1
0x4008a05	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      4399	buffer.c	FUNCTION_65	FOR_1
0x4008a09	          0x4801d8	                            add rax, rbx	      4399	buffer.c	FUNCTION_65	FOR_1
0x4008a0c	    0x488d9010f8ff	                  lea rdx, [rax - 0x7f0]	      4399	buffer.c	FUNCTION_65	FOR_1
0x4008a13	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4399	buffer.c	FUNCTION_65	FOR_1
0x4008a1a	          0x488902	                    mov qword [rdx], rax	      4399	buffer.c	FUNCTION_65	FOR_1
0x4008a1d	    0x8b853cf6ffff	            mov eax, dword [rbp - 0x9c4]	      4400	buffer.c	FUNCTION_65	FOR_1
0x4008a23	          0x4863d0	                         movsxd rdx, eax	      4400	buffer.c	FUNCTION_65	FOR_1
0x4008a26	          0x4889d0	                            mov rax, rdx	      4400	buffer.c	FUNCTION_65	FOR_1
0x4008a29	          0x4801c0	                            add rax, rax	      4400	buffer.c	FUNCTION_65	FOR_1
0x4008a2c	          0x4801d0	                            add rax, rdx	      4400	buffer.c	FUNCTION_65	FOR_1
0x4008a2f	        0x48c1e003	                              shl rax, 3	      4400	buffer.c	FUNCTION_65	FOR_1
0x4008a33	        0x488d75f0	                   lea rsi, [rbp - 0x10]	      4400	buffer.c	FUNCTION_65	FOR_1
0x4008a37	          0x4801f0	                            add rax, rsi	      4400	buffer.c	FUNCTION_65	FOR_1
0x4008a3a	    0x482de0070000	                          sub rax, 0x7e0	      4400	buffer.c	FUNCTION_65	FOR_1
0x4008a40	    0xc70000000000	                      mov dword [rax], 0	      4400	buffer.c	FUNCTION_65	FOR_1
0x4008a46	    0x4883bd90f6ff	              cmp qword [rbp - 0x970], 0	      4401	buffer.c	FUNCTION_65	FOR_1	IF_62
0x4008a4e	     0xf8466030000	                            je 0x4008dba	      4401	buffer.c	FUNCTION_65	FOR_1	IF_62
0x4008a54	    0x488b8590f6ff	            mov rax, qword [rbp - 0x970]	      4401	buffer.c	FUNCTION_65	FOR_1	IF_62
0x4008a5b	           0xfb600	                   movzx eax, byte [rax]	      4401	buffer.c	FUNCTION_65	FOR_1	IF_62
0x4008a5e	            0x84c0	                             test al, al	      4401	buffer.c	FUNCTION_65	FOR_1	IF_62
0x4008a60	     0xf8454030000	                            je 0x4008dba	      4401	buffer.c	FUNCTION_65	FOR_1	IF_62
0x4008a66	    0x488b8590f6ff	            mov rax, qword [rbp - 0x970]	      4403	buffer.c	FUNCTION_65	FOR_1	IF_62
0x4008a6d	    0x48898570f6ff	            mov qword [rbp - 0x990], rax	      4403	buffer.c	FUNCTION_65	FOR_1	IF_62
0x4008a74	    0x83bd2cf6ffff	              cmp dword [rbp - 0x9d4], 0	      4404	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_63
0x4008a7b	            0x746a	                            je 0x4008ae7	      4404	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_63
0x4008a7d	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4406	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_63	IF_64
0x4008a84	           0xfb600	                   movzx eax, byte [rax]	      4406	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_63	IF_64
0x4008a87	            0x84c0	                             test al, al	      4406	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_63	IF_64
0x4008a89	            0x7452	                            je 0x4008add	      4406	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_63	IF_64
0x4008a8b	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4406	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_63	IF_64
0x4008a92	        0x4883c001	                              add rax, 1	      4406	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_63	IF_64
0x4008a96	           0xfb600	                   movzx eax, byte [rax]	      4406	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_63	IF_64
0x4008a99	            0x84c0	                             test al, al	      4406	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_63	IF_64
0x4008a9b	            0x7440	                            je 0x4008add	      4406	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_63	IF_64
0x4008a9d	    0x83bd28f6ffff	              cmp dword [rbp - 0x9d8], 0	      4407	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_63	IF_64
0x4008aa4	            0x750e	                           jne 0x4008ab4	      4407	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_63	IF_64
0x4008aa6	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4407	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_63	IF_64
0x4008aad	           0xfb600	                   movzx eax, byte [rax]	      4407	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_63	IF_64
0x4008ab0	            0x3c2c	                            cmp al, 0x2c	      4407	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_63	IF_64
0x4008ab2	            0x7417	                            je 0x4008acb	      4407	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_63	IF_64
0x4008ab4	    0x83bd24f6ffff	              cmp dword [rbp - 0x9dc], 0	      4408	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_63	IF_64
0x4008abb	            0x7420	                            je 0x4008add	      4408	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_63	IF_64
0x4008abd	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4408	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_63	IF_64
0x4008ac4	           0xfb600	                   movzx eax, byte [rax]	      4408	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_63	IF_64
0x4008ac7	            0x3c20	                            cmp al, 0x20	      4408	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_63	IF_64
0x4008ac9	            0x7512	                           jne 0x4008add	      4408	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_63	IF_64
0x4008acb	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4409	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_63	IF_64
0x4008ad2	        0x4883c001	                              add rax, 1	      4409	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_63	IF_64
0x4008ad6	    0x48898570f6ff	            mov qword [rbp - 0x990], rax	      4409	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_63	IF_64
0x4008add	    0xc78524f6ffff	              mov dword [rbp - 0x9dc], 1	      4410	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_63
0x4008ae7	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4412	buffer.c	FUNCTION_65	FOR_1	IF_62	CALL_48
0x4008aee	          0x4889c7	                            mov rdi, rax	      4412	buffer.c	FUNCTION_65	FOR_1	IF_62	CALL_48
0x4008af1	      0xe800000000	                          call 0x4008af6	      4412	buffer.c	FUNCTION_65	FOR_1	IF_62	CALL_48
0x4008af6	            0x4898	                                    cdqe	      4412	buffer.c	FUNCTION_65	FOR_1	IF_62	CALL_48
0x4008af8	    0x48898580f6ff	            mov qword [rbp - 0x980], rax	      4412	buffer.c	FUNCTION_65	FOR_1	IF_62	CALL_48
0x4008aff	    0x4883bd80f6ff	              cmp qword [rbp - 0x980], 0	      4413	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_65
0x4008b07	            0x7e0a	                           jle 0x4008b13	      4413	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_65
0x4008b09	    0xc78528f6ffff	              mov dword [rbp - 0x9d8], 1	      4414	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_65
0x4008b13	    0x8b8550f6ffff	            mov eax, dword [rbp - 0x9b0]	      4415	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66
0x4008b19	            0x4898	                                    cdqe	      4415	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66
0x4008b1b	    0x483b8580f6ff	            cmp rax, qword [rbp - 0x980]	      4415	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66
0x4008b22	     0xf8dc3000000	                           jge 0x4008beb	      4415	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66
0x4008b28	            0xeb72	                           jmp 0x4008b9c	      4417	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	WHILE_7
0x4008b2a	    0x8b0500000000	            mov eax, dword [0x04008b30] 	      4419	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	WHILE_7	IF_67
0x4008b30	            0x85c0	                           test eax, eax	      4419	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	WHILE_7	IF_67
0x4008b32	            0x7440	                            je 0x4008b74	      4419	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	WHILE_7	IF_67
0x4008b34	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4421	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	WHILE_7	IF_67	CALL_49
0x4008b3b	          0x4889c7	                            mov rdi, rax	      4421	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	WHILE_7	IF_67	CALL_49
0x4008b3e	      0xe800000000	                          call 0x4008b43	      4421	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	WHILE_7	IF_67	CALL_49
0x4008b43	            0x4898	                                    cdqe	      4421	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	WHILE_7	IF_67	CALL_49
0x4008b45	    0x48298580f6ff	            sub qword [rbp - 0x980], rax	      4421	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	WHILE_7	IF_67	CALL_49
0x4008b4c	    0x488b05000000	            mov rax, qword [0x04008b53] 	      4422	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	WHILE_7	IF_67
0x4008b53	    0x488b9570f6ff	            mov rdx, qword [rbp - 0x990]	      4422	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	WHILE_7	IF_67
0x4008b5a	          0x4889d7	                            mov rdi, rdx	      4422	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	WHILE_7	IF_67
0x4008b5d	            0xffd0	                                call rax	      4422	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	WHILE_7	IF_67
0x4008b5f	    0x488b9570f6ff	            mov rdx, qword [rbp - 0x990]	      4422	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	WHILE_7	IF_67
0x4008b66	            0x4898	                                    cdqe	      4422	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	WHILE_7	IF_67
0x4008b68	          0x4801d0	                            add rax, rdx	      4422	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	WHILE_7	IF_67
0x4008b6b	    0x48898570f6ff	            mov qword [rbp - 0x990], rax	      4422	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	WHILE_7	IF_67
0x4008b72	            0xeb28	                           jmp 0x4008b9c	      4422	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	WHILE_7	IF_67
0x4008b74	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4426	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	CALL_50
0x4008b7b	        0x488d5001	                      lea rdx, [rax + 1]	      4426	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	CALL_50
0x4008b7f	    0x48899570f6ff	            mov qword [rbp - 0x990], rdx	      4426	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	CALL_50
0x4008b86	           0xfb600	                   movzx eax, byte [rax]	      4426	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	CALL_50
0x4008b89	           0xfb6c0	                           movzx eax, al	      4426	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	CALL_50
0x4008b8c	            0x89c7	                            mov edi, eax	      4426	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	CALL_50
0x4008b8e	      0xe800000000	                          call 0x4008b93	      4426	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	CALL_50
0x4008b93	            0x4898	                                    cdqe	      4426	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	CALL_50
0x4008b95	    0x48298580f6ff	            sub qword [rbp - 0x980], rax	      4426	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	CALL_50
0x4008b9c	    0x8b8550f6ffff	            mov eax, dword [rbp - 0x9b0]	      4417	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	WHILE_7
0x4008ba2	            0x4898	                                    cdqe	      4417	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	WHILE_7
0x4008ba4	    0x483b8580f6ff	            cmp rax, qword [rbp - 0x980]	      4417	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	WHILE_7
0x4008bab	     0xf8e79ffffff	                           jle 0x4008b2a	      4417	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	WHILE_7
0x4008bb1	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4427	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	IF_68
0x4008bb8	        0x488d4801	                      lea rcx, [rax + 1]	      4427	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	IF_68
0x4008bbc	    0x488b9500f6ff	            mov rdx, qword [rbp - 0xa00]	      4427	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	IF_68
0x4008bc3	    0x488b85f8f5ff	            mov rax, qword [rbp - 0xa08]	      4427	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	IF_68
0x4008bca	          0x4801d0	                            add rax, rdx	      4427	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	IF_68
0x4008bcd	          0x4839c1	                            cmp rcx, rax	      4427	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	IF_68
0x4008bd0	     0xf8393050000	                           jae 0x4009169	      4427	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	IF_68
0x4008bd6	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4429	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66
0x4008bdd	        0x488d5001	                      lea rdx, [rax + 1]	      4429	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66
0x4008be1	    0x48899578f6ff	            mov qword [rbp - 0x988], rdx	      4429	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66
0x4008be8	          0xc6003c	                    mov byte [rax], 0x3c	      4429	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66
0x4008beb	    0x83bd4cf6ffff	              cmp dword [rbp - 0x9b4], 0	      4431	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69
0x4008bf2	     0xf8eb3000000	                           jle 0x4008cab	      4431	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69
0x4008bf8	            0xeb6f	                           jmp 0x4008c69	      4433	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9
0x4008bfa	    0x488b8580f6ff	            mov rax, qword [rbp - 0x980]	      4436	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9	IF_70	CALL_51
0x4008c01	        0x488d5001	                      lea rdx, [rax + 1]	      4436	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9	IF_70	CALL_51
0x4008c05	    0x8b854cf6ffff	            mov eax, dword [rbp - 0x9b4]	      4436	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9	IF_70	CALL_51
0x4008c0b	            0x4898	                                    cdqe	      4436	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9	IF_70	CALL_51
0x4008c0d	          0x4839c2	                            cmp rdx, rax	      4436	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9	IF_70	CALL_51
0x4008c10	            0x7535	                           jne 0x4008c47	      4436	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9	IF_70	CALL_51
0x4008c12	    0x83bde8f5ffff	          cmp dword [rbp - 0xa18], 0x2d 	      4436	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9	IF_70	CALL_51
0x4008c19	            0x752c	                           jne 0x4008c47	      4436	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9	IF_70	CALL_51
0x4008c1b	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4436	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9	IF_70	CALL_51
0x4008c22	           0xfb600	                   movzx eax, byte [rax]	      4436	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9	IF_70	CALL_51
0x4008c25	           0xfb6c0	                           movzx eax, al	      4436	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9	IF_70	CALL_51
0x4008c28	          0x83e830	                           sub eax, 0x30	      4436	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9	IF_70	CALL_51
0x4008c2b	          0x83f809	                              cmp eax, 9	      4436	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9	IF_70	CALL_51
0x4008c2e	            0x7717	                            ja 0x4008c47	      4436	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9	IF_70	CALL_51
0x4008c30	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4437	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9	IF_70
0x4008c37	        0x488d5001	                      lea rdx, [rax + 1]	      4437	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9	IF_70
0x4008c3b	    0x48899578f6ff	            mov qword [rbp - 0x988], rdx	      4437	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9	IF_70
0x4008c42	          0xc60020	                    mov byte [rax], 0x20	      4437	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9	IF_70
0x4008c45	            0xeb1a	                           jmp 0x4008c61	      4437	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9	IF_70
0x4008c47	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4439	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9	ELSE_11
0x4008c4e	        0x488d5001	                      lea rdx, [rax + 1]	      4439	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9	ELSE_11
0x4008c52	    0x48899578f6ff	            mov qword [rbp - 0x988], rdx	      4439	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9	ELSE_11
0x4008c59	    0x8b95e8f5ffff	            mov edx, dword [rbp - 0xa18]	      4439	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9	ELSE_11
0x4008c5f	            0x8810	                      mov byte [rax], dl	      4439	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9	ELSE_11
0x4008c61	    0x48838580f6ff	              add qword [rbp - 0x980], 1	      4433	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9
0x4008c69	    0x8b854cf6ffff	            mov eax, dword [rbp - 0x9b4]	      4433	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9
0x4008c6f	            0x4898	                                    cdqe	      4433	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9
0x4008c71	    0x483b8580f6ff	            cmp rax, qword [rbp - 0x980]	      4433	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9
0x4008c78	            0x7e25	                           jle 0x4008c9f	      4433	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9
0x4008c7a	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4433	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9
0x4008c81	        0x488d4801	                      lea rcx, [rax + 1]	      4433	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9
0x4008c85	    0x488b9500f6ff	            mov rdx, qword [rbp - 0xa00]	      4433	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9
0x4008c8c	    0x488b85f8f5ff	            mov rax, qword [rbp - 0xa08]	      4433	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9
0x4008c93	          0x4801d0	                            add rax, rdx	      4433	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9
0x4008c96	          0x4839c1	                            cmp rcx, rax	      4433	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9
0x4008c99	     0xf825bffffff	                            jb 0x4008bfa	      4433	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9
0x4008c9f	    0xc7854cf6ffff	              mov dword [rbp - 0x9b4], 0	      4441	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	ELSE_11
0x4008ca9	            0xeb7d	                           jmp 0x4008d28	      4441	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	ELSE_11
0x4008cab	    0xf79d4cf6ffff	                 neg dword [rbp - 0x9b4]	      4444	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12
0x4008cb1	            0xeb75	                           jmp 0x4008d28	      4445	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8
0x4008cb3	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4447	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8
0x4008cba	        0x488d5001	                      lea rdx, [rax + 1]	      4447	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8
0x4008cbe	    0x48899578f6ff	            mov qword [rbp - 0x988], rdx	      4447	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8
0x4008cc5	    0x488b9570f6ff	            mov rdx, qword [rbp - 0x990]	      4447	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8
0x4008ccc	        0x488d4a01	                      lea rcx, [rdx + 1]	      4447	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8
0x4008cd0	    0x48898d70f6ff	            mov qword [rbp - 0x990], rcx	      4447	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8
0x4008cd7	           0xfb612	                   movzx edx, byte [rdx]	      4447	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8
0x4008cda	            0x8810	                      mov byte [rax], dl	      4447	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8
0x4008cdc	    0x83bd30f6ffff	              cmp dword [rbp - 0x9d0], 0	      4450	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8	IF_71
0x4008ce3	            0x7443	                            je 0x4008d28	      4450	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8	IF_71
0x4008ce5	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4450	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8	IF_71
0x4008cec	        0x4883e801	                              sub rax, 1	      4450	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8	IF_71
0x4008cf0	           0xfb600	                   movzx eax, byte [rax]	      4450	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8	IF_71
0x4008cf3	            0x3c20	                            cmp al, 0x20	      4450	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8	IF_71
0x4008cf5	            0x7531	                           jne 0x4008d28	      4450	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8	IF_71
0x4008cf7	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4451	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8	IF_71	CALL_52
0x4008cfe	           0xfb600	                   movzx eax, byte [rax]	      4451	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8	IF_71	CALL_52
0x4008d01	           0xfb6c0	                           movzx eax, al	      4451	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8	IF_71	CALL_52
0x4008d04	          0x83e830	                           sub eax, 0x30	      4451	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8	IF_71	CALL_52
0x4008d07	          0x83f809	                              cmp eax, 9	      4451	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8	IF_71	CALL_52
0x4008d0a	            0x7709	                            ja 0x4008d15	      4451	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8	IF_71	CALL_52
0x4008d0c	    0x83bde8f5ffff	          cmp dword [rbp - 0xa18], 0x2d 	      4451	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8	IF_71	CALL_52
0x4008d13	            0x7413	                            je 0x4008d28	      4451	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8	IF_71	CALL_52
0x4008d15	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4452	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8	IF_71
0x4008d1c	        0x4883e801	                              sub rax, 1	      4452	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8	IF_71
0x4008d20	    0x8b95e8f5ffff	            mov edx, dword [rbp - 0xa18]	      4452	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8	IF_71
0x4008d26	            0x8810	                      mov byte [rax], dl	      4452	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8	IF_71
0x4008d28	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4445	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8
0x4008d2f	           0xfb600	                   movzx eax, byte [rax]	      4445	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8
0x4008d32	            0x84c0	                             test al, al	      4445	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8
0x4008d34	            0x7449	                            je 0x4008d7f	      4445	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8
0x4008d36	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4445	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8
0x4008d3d	        0x488d4801	                      lea rcx, [rax + 1]	      4445	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8
0x4008d41	    0x488b9500f6ff	            mov rdx, qword [rbp - 0xa00]	      4445	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8
0x4008d48	    0x488b85f8f5ff	            mov rax, qword [rbp - 0xa08]	      4445	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8
0x4008d4f	          0x4801d0	                            add rax, rdx	      4445	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8
0x4008d52	          0x4839c1	                            cmp rcx, rax	      4445	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8
0x4008d55	     0xf8258ffffff	                            jb 0x4008cb3	      4445	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8
0x4008d5b	            0xeb22	                           jmp 0x4008d7f	      4454	buffer.c	FUNCTION_65	FOR_1	IF_62	FOR_10
0x4008d5d	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4455	buffer.c	FUNCTION_65	FOR_1	IF_62	FOR_10
0x4008d64	        0x488d5001	                      lea rdx, [rax + 1]	      4455	buffer.c	FUNCTION_65	FOR_1	IF_62	FOR_10
0x4008d68	    0x48899578f6ff	            mov qword [rbp - 0x988], rdx	      4455	buffer.c	FUNCTION_65	FOR_1	IF_62	FOR_10
0x4008d6f	    0x8b95e8f5ffff	            mov edx, dword [rbp - 0xa18]	      4455	buffer.c	FUNCTION_65	FOR_1	IF_62	FOR_10
0x4008d75	            0x8810	                      mov byte [rax], dl	      4455	buffer.c	FUNCTION_65	FOR_1	IF_62	FOR_10
0x4008d77	    0x48838580f6ff	              add qword [rbp - 0x980], 1	      4454	buffer.c	FUNCTION_65	FOR_1	IF_62	FOR_10
0x4008d7f	    0x8b854cf6ffff	            mov eax, dword [rbp - 0x9b4]	      4454	buffer.c	FUNCTION_65	FOR_1	IF_62	FOR_10
0x4008d85	            0x4898	                                    cdqe	      4454	buffer.c	FUNCTION_65	FOR_1	IF_62	FOR_10
0x4008d87	    0x483b8580f6ff	            cmp rax, qword [rbp - 0x980]	      4454	buffer.c	FUNCTION_65	FOR_1	IF_62	FOR_10
0x4008d8e	     0xf8e63030000	                           jle 0x40090f7	      4454	buffer.c	FUNCTION_65	FOR_1	IF_62	FOR_10
0x4008d94	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4454	buffer.c	FUNCTION_65	FOR_1	IF_62	FOR_10
0x4008d9b	        0x488d4801	                      lea rcx, [rax + 1]	      4454	buffer.c	FUNCTION_65	FOR_1	IF_62	FOR_10
0x4008d9f	    0x488b9500f6ff	            mov rdx, qword [rbp - 0xa00]	      4454	buffer.c	FUNCTION_65	FOR_1	IF_62	FOR_10
0x4008da6	    0x488b85f8f5ff	            mov rax, qword [rbp - 0xa08]	      4454	buffer.c	FUNCTION_65	FOR_1	IF_62	FOR_10
0x4008dad	          0x4801d0	                            add rax, rdx	      4454	buffer.c	FUNCTION_65	FOR_1	IF_62	FOR_10
0x4008db0	          0x4839c1	                            cmp rcx, rax	      4454	buffer.c	FUNCTION_65	FOR_1	IF_62	FOR_10
0x4008db3	            0x72a8	                            jb 0x4008d5d	      4454	buffer.c	FUNCTION_65	FOR_1	IF_62	FOR_10
0x4008db5	      0xe93d030000	                           jmp 0x40090f7	      4401	buffer.c	FUNCTION_65	FOR_1	IF_62
0x4008dba	    0x4883bd98f6ff	              cmp qword [rbp - 0x968], 0	      4457	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x4008dc2	     0xf8804030000	                            js 0x40090cc	      4457	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x4008dc8	    0x80bd1af6ffff	           cmp byte [rbp - 0x9e6], 0x44 	      4459	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x4008dcf	            0x7417	                            je 0x4008de8	      4459	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x4008dd1	    0x80bd1af6ffff	           cmp byte [rbp - 0x9e6], 0x4f 	      4459	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x4008dd8	            0x7507	                           jne 0x4008de1	      4459	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x4008dda	      0xb808000000	                              mov eax, 8	      4459	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x4008ddf	            0xeb0c	                           jmp 0x4008ded	      4459	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x4008de1	      0xb810000000	                           mov eax, 0x10	      4459	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x4008de6	            0xeb05	                           jmp 0x4008ded	      4459	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x4008de8	      0xb80a000000	                            mov eax, 0xa	      4459	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x4008ded	    0x898564f6ffff	            mov dword [rbp - 0x99c], eax	      4459	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x4008df3	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4462	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_73
0x4008dfa	        0x488d4814	                   lea rcx, [rax + 0x14]	      4462	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_73
0x4008dfe	    0x488b9500f6ff	            mov rdx, qword [rbp - 0xa00]	      4462	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_73
0x4008e05	    0x488b85f8f5ff	            mov rax, qword [rbp - 0xa08]	      4462	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_73
0x4008e0c	          0x4801d0	                            add rax, rdx	      4462	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_73
0x4008e0f	          0x4839c1	                            cmp rcx, rax	      4462	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_73
0x4008e12	     0xf8354030000	                           jae 0x400916c	      4462	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_73
0x4008e18	    0xc78528f6ffff	              mov dword [rbp - 0x9d8], 1	      4464	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x4008e22	        0x488d4580	                   lea rax, [rbp - 0x80]	      4465	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x4008e26	    0x48898570f6ff	            mov qword [rbp - 0x990], rax	      4465	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x4008e2d	    0x80bd1bf6ffff	           cmp byte [rbp - 0x9e5], 0x56 	      4466	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_74
0x4008e34	            0x751c	                           jne 0x4008e52	      4466	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_74
0x4008e36	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4468	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_74
0x4008e3d	        0x488d5001	                      lea rdx, [rax + 1]	      4468	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_74
0x4008e41	    0x48899570f6ff	            mov qword [rbp - 0x990], rdx	      4468	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_74
0x4008e48	          0xc6002d	                    mov byte [rax], 0x2d	      4468	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_74
0x4008e4b	    0x83ad4cf6ffff	              sub dword [rbp - 0x9b4], 1	      4469	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_74
0x4008e52	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4471	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x4008e59	        0x488d5001	                      lea rdx, [rax + 1]	      4471	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x4008e5d	    0x48899570f6ff	            mov qword [rbp - 0x990], rdx	      4471	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x4008e64	          0xc60025	                    mov byte [rax], 0x25	      4471	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x4008e67	    0x83bd54f6ffff	              cmp dword [rbp - 0x9ac], 0	      4472	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_75
0x4008e6e	            0x7415	                            je 0x4008e85	      4472	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_75
0x4008e70	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4473	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_75
0x4008e77	        0x488d5001	                      lea rdx, [rax + 1]	      4473	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_75
0x4008e7b	    0x48899570f6ff	            mov qword [rbp - 0x990], rdx	      4473	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_75
0x4008e82	          0xc60030	                    mov byte [rax], 0x30	      4473	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_75
0x4008e85	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4474	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x4008e8c	        0x488d5001	                      lea rdx, [rax + 1]	      4474	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x4008e90	    0x48899570f6ff	            mov qword [rbp - 0x990], rdx	      4474	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x4008e97	          0xc6002a	                    mov byte [rax], 0x2a	      4474	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x4008e9a	    0x488b9570f6ff	            mov rdx, qword [rbp - 0x990]	      4475	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x4008ea1	        0x488d4201	                      lea rax, [rdx + 1]	      4475	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x4008ea5	    0x48898570f6ff	            mov qword [rbp - 0x990], rax	      4475	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x4008eac	    0x83bd64f6ffff	          cmp dword [rbp - 0x99c], 0x10 	      4475	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x4008eb3	            0x7417	                            je 0x4008ecc	      4475	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x4008eb5	    0x83bd64f6ffff	              cmp dword [rbp - 0x99c], 8	      4475	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x4008ebc	            0x7507	                           jne 0x4008ec5	      4475	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x4008ebe	      0xb86f000000	                           mov eax, 0x6f	      4475	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x4008ec3	            0xeb0e	                           jmp 0x4008ed3	      4475	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x4008ec5	      0xb864000000	                           mov eax, 0x64	      4475	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x4008eca	            0xeb07	                           jmp 0x4008ed3	      4475	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x4008ecc	     0xfb6851af6ff	           movzx eax, byte [rbp - 0x9e6]	      4475	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x4008ed3	            0x8802	                      mov byte [rdx], al	      4475	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x4008ed5	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4476	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x4008edc	          0xc60000	                       mov byte [rax], 0	      4476	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x4008edf	    0x488b8598f6ff	            mov rax, qword [rbp - 0x968]	      4478	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	FOR_11
0x4008ee6	    0x48898588f6ff	            mov qword [rbp - 0x978], rax	      4478	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	FOR_11
0x4008eed	    0x48c78580f6ff	              mov qword [rbp - 0x980], 1	      4478	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	FOR_11
0x4008ef8	            0xeb24	                           jmp 0x4008f1e	      4478	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	FOR_11
0x4008efa	    0x48838580f6ff	              add qword [rbp - 0x980], 1	      4479	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	FOR_11
0x4008f02	    0x8b8564f6ffff	            mov eax, dword [rbp - 0x99c]	      4478	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	FOR_11
0x4008f08	          0x4863d8	                         movsxd rbx, eax	      4478	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	FOR_11
0x4008f0b	    0x488b8588f6ff	            mov rax, qword [rbp - 0x978]	      4478	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	FOR_11
0x4008f12	            0x4899	                                     cqo	      4478	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	FOR_11
0x4008f14	          0x48f7fb	                                idiv rbx	      4478	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	FOR_11
0x4008f17	    0x48898588f6ff	            mov qword [rbp - 0x978], rax	      4478	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	FOR_11
0x4008f1e	    0x8b8564f6ffff	            mov eax, dword [rbp - 0x99c]	      4478	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	FOR_11
0x4008f24	            0x4898	                                    cdqe	      4478	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	FOR_11
0x4008f26	    0x483b8588f6ff	            cmp rax, qword [rbp - 0x978]	      4478	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	FOR_11
0x4008f2d	            0x7ecb	                           jle 0x4008efa	      4478	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	FOR_11
0x4008f2f	    0x80bd1bf6ffff	           cmp byte [rbp - 0x9e5], 0x56 	      4480	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_76
0x4008f36	            0x7508	                           jne 0x4008f40	      4480	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_76
0x4008f38	    0x48838580f6ff	              add qword [rbp - 0x980], 1	      4481	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_76
0x4008f40	    0x8b8550f6ffff	            mov eax, dword [rbp - 0x9b0]	      4482	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77
0x4008f46	            0x4898	                                    cdqe	      4482	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77
0x4008f48	    0x483b8580f6ff	            cmp rax, qword [rbp - 0x980]	      4482	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77
0x4008f4f	     0xf8d13010000	                           jge 0x4009068	      4482	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77
0x4008f55	    0x48838580f6ff	              add qword [rbp - 0x980], 2	      4484	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77
0x4008f5d	    0x8b8550f6ffff	            mov eax, dword [rbp - 0x9b0]	      4485	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77
0x4008f63	            0x4898	                                    cdqe	      4485	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77
0x4008f65	    0x488b9580f6ff	            mov rdx, qword [rbp - 0x980]	      4485	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77
0x4008f6c	          0x4829c2	                            sub rdx, rax	      4485	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77
0x4008f6f	          0x4889d0	                            mov rax, rdx	      4485	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77
0x4008f72	    0x48898588f6ff	            mov qword [rbp - 0x978], rax	      4485	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77
0x4008f79	            0xeb1c	                           jmp 0x4008f97	      4486	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	WHILE_9
0x4008f7b	    0x8b8564f6ffff	            mov eax, dword [rbp - 0x99c]	      4487	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	WHILE_9
0x4008f81	          0x4863f0	                         movsxd rsi, eax	      4487	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	WHILE_9
0x4008f84	    0x488b8598f6ff	            mov rax, qword [rbp - 0x968]	      4487	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	WHILE_9
0x4008f8b	            0x4899	                                     cqo	      4487	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	WHILE_9
0x4008f8d	          0x48f7fe	                                idiv rsi	      4487	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	WHILE_9
0x4008f90	    0x48898598f6ff	            mov qword [rbp - 0x968], rax	      4487	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	WHILE_9
0x4008f97	    0x488b8580f6ff	            mov rax, qword [rbp - 0x980]	      4486	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	WHILE_9
0x4008f9e	        0x488d50ff	                      lea rdx, [rax - 1]	      4486	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	WHILE_9
0x4008fa2	    0x48899580f6ff	            mov qword [rbp - 0x980], rdx	      4486	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	WHILE_9
0x4008fa9	    0x8b9550f6ffff	            mov edx, dword [rbp - 0x9b0]	      4486	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	WHILE_9
0x4008faf	          0x4863d2	                         movsxd rdx, edx	      4486	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	WHILE_9
0x4008fb2	          0x4839d0	                            cmp rax, rdx	      4486	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	WHILE_9
0x4008fb5	            0x7fc4	                            jg 0x4008f7b	      4486	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	WHILE_9
0x4008fb7	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4488	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77
0x4008fbe	        0x488d5001	                      lea rdx, [rax + 1]	      4488	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77
0x4008fc2	    0x48899570f6ff	            mov qword [rbp - 0x990], rdx	      4488	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77
0x4008fc9	          0xc6003e	                    mov byte [rax], 0x3e	      4488	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77
0x4008fcc	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4489	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77
0x4008fd3	        0x488d5001	                      lea rdx, [rax + 1]	      4489	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77
0x4008fd7	    0x48899570f6ff	            mov qword [rbp - 0x990], rdx	      4489	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77
0x4008fde	          0xc60025	                    mov byte [rax], 0x25	      4489	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77
0x4008fe1	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4490	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77
0x4008fe8	    0x488b9570f6ff	            mov rdx, qword [rbp - 0x990]	      4490	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77
0x4008fef	         0xfb652fd	               movzx edx, byte [rdx - 3]	      4490	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77
0x4008ff3	            0x8810	                      mov byte [rax], dl	      4490	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77
0x4008ff5	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4491	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77
0x4008ffc	        0x4883c001	                              add rax, 1	      4491	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77
0x4009000	    0x48898570f6ff	            mov qword [rbp - 0x990], rax	      4491	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77
0x4009007	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4491	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77
0x400900e	          0xc60000	                       mov byte [rax], 0	      4491	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77
0x4009011	    0x488b9578f6ff	            mov rdx, qword [rbp - 0x988]	      4492	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	CALL_53
0x4009018	    0x488b8500f6ff	            mov rax, qword [rbp - 0xa00]	      4492	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	CALL_53
0x400901f	          0x4829c2	                            sub rdx, rax	      4492	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	CALL_53
0x4009022	          0x4889d0	                            mov rax, rdx	      4492	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	CALL_53
0x4009025	          0x4889c2	                            mov rdx, rax	      4492	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	CALL_53
0x4009028	    0x488b85f8f5ff	            mov rax, qword [rbp - 0xa08]	      4492	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	CALL_53
0x400902f	          0x4829d0	                            sub rax, rdx	      4492	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	CALL_53
0x4009032	          0x4889c6	                            mov rsi, rax	      4492	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	CALL_53
0x4009035	    0x488bbd88f6ff	            mov rdi, qword [rbp - 0x978]	      4492	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	CALL_53
0x400903c	    0x488b8d98f6ff	            mov rcx, qword [rbp - 0x968]	      4492	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	CALL_53
0x4009043	        0x488d5580	                   lea rdx, [rbp - 0x80]	      4492	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	CALL_53
0x4009047	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4492	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	CALL_53
0x400904e	          0x4989f9	                             mov r9, rdi	      4492	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	CALL_53
0x4009051	          0x4989c8	                             mov r8, rcx	      4492	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	CALL_53
0x4009054	      0xb900000000	                              mov ecx, 0	      4492	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	CALL_53
0x4009059	          0x4889c7	                            mov rdi, rax	      4492	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	CALL_53
0x400905c	      0xb800000000	                              mov eax, 0	      4492	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	CALL_53
0x4009061	      0xe800000000	                          call 0x4009066	      4492	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	CALL_53
0x4009066	            0xeb4c	                           jmp 0x40090b4	      4492	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	CALL_53
0x4009068	    0x488b9578f6ff	            mov rdx, qword [rbp - 0x988]	      4496	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	ELSE_14	CALL_54
0x400906f	    0x488b8500f6ff	            mov rax, qword [rbp - 0xa00]	      4496	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	ELSE_14	CALL_54
0x4009076	          0x4829c2	                            sub rdx, rax	      4496	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	ELSE_14	CALL_54
0x4009079	          0x4889d0	                            mov rax, rdx	      4496	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	ELSE_14	CALL_54
0x400907c	          0x4889c2	                            mov rdx, rax	      4496	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	ELSE_14	CALL_54
0x400907f	    0x488b85f8f5ff	            mov rax, qword [rbp - 0xa08]	      4496	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	ELSE_14	CALL_54
0x4009086	          0x4829d0	                            sub rax, rdx	      4496	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	ELSE_14	CALL_54
0x4009089	          0x4889c6	                            mov rsi, rax	      4496	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	ELSE_14	CALL_54
0x400908c	    0x488bbd98f6ff	            mov rdi, qword [rbp - 0x968]	      4496	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	ELSE_14	CALL_54
0x4009093	    0x8b8d4cf6ffff	            mov ecx, dword [rbp - 0x9b4]	      4496	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	ELSE_14	CALL_54
0x4009099	        0x488d5580	                   lea rdx, [rbp - 0x80]	      4496	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	ELSE_14	CALL_54
0x400909d	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4496	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	ELSE_14	CALL_54
0x40090a4	          0x4989f8	                             mov r8, rdi	      4496	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	ELSE_14	CALL_54
0x40090a7	          0x4889c7	                            mov rdi, rax	      4496	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	ELSE_14	CALL_54
0x40090aa	      0xb800000000	                              mov eax, 0	      4496	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	ELSE_14	CALL_54
0x40090af	      0xe800000000	                          call 0x40090b4	      4496	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	ELSE_14	CALL_54
0x40090b4	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4498	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	CALL_55
0x40090bb	          0x4889c7	                            mov rdi, rax	      4498	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	CALL_55
0x40090be	      0xe800000000	                          call 0x40090c3	      4498	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	CALL_55
0x40090c3	    0x48018578f6ff	           add qword [rbp - 0x988], rax 	      4498	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	CALL_55
0x40090ca	            0xeb2c	                           jmp 0x40090f8	      4498	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	CALL_55
0x40090cc	    0x8b853cf6ffff	            mov eax, dword [rbp - 0x9c4]	      4501	buffer.c	FUNCTION_65	FOR_1	ELSE_15
0x40090d2	          0x4863d0	                         movsxd rdx, eax	      4501	buffer.c	FUNCTION_65	FOR_1	ELSE_15
0x40090d5	          0x4889d0	                            mov rax, rdx	      4501	buffer.c	FUNCTION_65	FOR_1	ELSE_15
0x40090d8	          0x4801c0	                            add rax, rax	      4501	buffer.c	FUNCTION_65	FOR_1	ELSE_15
0x40090db	          0x4801d0	                            add rax, rdx	      4501	buffer.c	FUNCTION_65	FOR_1	ELSE_15
0x40090de	        0x48c1e003	                              shl rax, 3	      4501	buffer.c	FUNCTION_65	FOR_1	ELSE_15
0x40090e2	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      4501	buffer.c	FUNCTION_65	FOR_1	ELSE_15
0x40090e6	          0x4801d8	                            add rax, rbx	      4501	buffer.c	FUNCTION_65	FOR_1	ELSE_15
0x40090e9	    0x482de0070000	                          sub rax, 0x7e0	      4501	buffer.c	FUNCTION_65	FOR_1	ELSE_15
0x40090ef	    0xc70001000000	                      mov dword [rax], 1	      4501	buffer.c	FUNCTION_65	FOR_1	ELSE_15
0x40090f5	            0xeb01	                           jmp 0x40090f8	      4501	buffer.c	FUNCTION_65	FOR_1	ELSE_15
0x40090f7	              0x90	                                     nop	      4401	buffer.c	FUNCTION_65	FOR_1	IF_62
0x40090f8	    0x80bd1bf6ffff	           cmp byte [rbp - 0x9e5], 0x7b 	      4503	buffer.c	FUNCTION_65	FOR_1	IF_78
0x40090ff	            0x750f	                           jne 0x4009110	      4503	buffer.c	FUNCTION_65	FOR_1	IF_78
0x4009101	    0x488b8590f6ff	            mov rax, qword [rbp - 0x970]	      4504	buffer.c	FUNCTION_65	FOR_1	CALL_56
0x4009108	          0x4889c7	                            mov rdi, rax	      4504	buffer.c	FUNCTION_65	FOR_1	CALL_56
0x400910b	      0xe800000000	                          call 0x4009110	      4504	buffer.c	FUNCTION_65	FOR_1	CALL_56
0x4009110	    0x4883bd98f6ff	              cmp qword [rbp - 0x968], 0	      4506	buffer.c	FUNCTION_65	FOR_1	IF_79
0x4009118	            0x7921	                           jns 0x400913b	      4506	buffer.c	FUNCTION_65	FOR_1	IF_79
0x400911a	    0x83bd2cf6ffff	              cmp dword [rbp - 0x9d4], 0	      4506	buffer.c	FUNCTION_65	FOR_1	IF_79
0x4009121	            0x7522	                           jne 0x4009145	      4506	buffer.c	FUNCTION_65	FOR_1	IF_79
0x4009123	    0x4883bd90f6ff	              cmp qword [rbp - 0x970], 0	      4506	buffer.c	FUNCTION_65	FOR_1	IF_79
0x400912b	            0x7418	                            je 0x4009145	      4506	buffer.c	FUNCTION_65	FOR_1	IF_79
0x400912d	    0x488b8590f6ff	            mov rax, qword [rbp - 0x970]	      4506	buffer.c	FUNCTION_65	FOR_1	IF_79
0x4009134	           0xfb600	                   movzx eax, byte [rax]	      4506	buffer.c	FUNCTION_65	FOR_1	IF_79
0x4009137	            0x84c0	                             test al, al	      4506	buffer.c	FUNCTION_65	FOR_1	IF_79
0x4009139	            0x740a	                            je 0x4009145	      4506	buffer.c	FUNCTION_65	FOR_1	IF_79
0x400913b	    0xc78524f6ffff	              mov dword [rbp - 0x9dc], 0	      4507	buffer.c	FUNCTION_65	FOR_1	IF_79
0x4009145	    0x83853cf6ffff	              add dword [rbp - 0x9c4], 1	      4508	buffer.c	FUNCTION_65	FOR_1
0x400914c	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      3919	buffer.c	FUNCTION_65	FOR_1
0x4009153	           0xfb600	                   movzx eax, byte [rax]	      3919	buffer.c	FUNCTION_65	FOR_1
0x4009156	            0x84c0	                             test al, al	      3919	buffer.c	FUNCTION_65	FOR_1
0x4009158	     0xf8592ddffff	                           jne 0x4006ef0	      3919	buffer.c	FUNCTION_65	FOR_1
0x400915e	            0xeb0d	                           jmp 0x400916d	      3919	buffer.c	FUNCTION_65	FOR_1
0x4009160	              0x90	                                     nop	      3930	buffer.c	FUNCTION_65	FOR_1	IF_6
0x4009161	            0xeb0a	                           jmp 0x400916d	      3930	buffer.c	FUNCTION_65	FOR_1	IF_6
0x4009163	              0x90	                                     nop	      3949	buffer.c	FUNCTION_65	FOR_1	IF_10
0x4009164	            0xeb07	                           jmp 0x400916d	      3949	buffer.c	FUNCTION_65	FOR_1	IF_10
0x4009166	              0x90	                                     nop	      3953	buffer.c	FUNCTION_65	FOR_1	IF_11	IF_12
0x4009167	            0xeb04	                           jmp 0x400916d	      3953	buffer.c	FUNCTION_65	FOR_1	IF_11	IF_12
0x4009169	              0x90	                                     nop	      4428	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	IF_68
0x400916a	            0xeb01	                           jmp 0x400916d	      4428	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	IF_68
0x400916c	              0x90	                                     nop	      4463	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_73
0x400916d	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4510	buffer.c	FUNCTION_65
0x4009174	          0xc60000	                       mov byte [rax], 0	      4510	buffer.c	FUNCTION_65
0x4009177	    0x8b853cf6ffff	            mov eax, dword [rbp - 0x9c4]	      4511	buffer.c	FUNCTION_65
0x400917d	    0x898538f6ffff	            mov dword [rbp - 0x9c8], eax	      4511	buffer.c	FUNCTION_65
0x4009183	    0x488b85a0f6ff	            mov rax, qword [rbp - 0x960]	      4514	buffer.c	FUNCTION_65	IF_80
0x400918a	    0x483b85f0f5ff	            cmp rax, qword [rbp - 0xa10]	      4514	buffer.c	FUNCTION_65	IF_80
0x4009191	            0x740f	                            je 0x40091a2	      4514	buffer.c	FUNCTION_65	IF_80
0x4009193	    0x488b85a0f6ff	            mov rax, qword [rbp - 0x960]	      4515	buffer.c	FUNCTION_65	CALL_57
0x400919a	          0x4889c7	                            mov rdi, rax	      4515	buffer.c	FUNCTION_65	CALL_57
0x400919d	      0xe800000000	                          call 0x40091a2	      4515	buffer.c	FUNCTION_65	CALL_57
0x40091a2	    0x488b8500f6ff	            mov rax, qword [rbp - 0xa00]	      4518	buffer.c	FUNCTION_65	CALL_58
0x40091a9	          0x4889c7	                            mov rdi, rax	      4518	buffer.c	FUNCTION_65	CALL_58
0x40091ac	      0xe800000000	                          call 0x40091b1	      4518	buffer.c	FUNCTION_65	CALL_58
0x40091b1	    0x898534f6ffff	            mov dword [rbp - 0x9cc], eax	      4518	buffer.c	FUNCTION_65	CALL_58
0x40091b7	        0x837d1000	               cmp dword [rbp + 0x10], 0	      4519	buffer.c	FUNCTION_65	IF_81
0x40091bb	     0xf8e53040000	                           jle 0x4009614	      4519	buffer.c	FUNCTION_65	IF_81
0x40091c1	    0x8b8534f6ffff	            mov eax, dword [rbp - 0x9cc]	      4519	buffer.c	FUNCTION_65	IF_81
0x40091c7	          0x3b4510	            cmp eax, dword [rbp + 0x10] 	      4519	buffer.c	FUNCTION_65	IF_81
0x40091ca	     0xf8e44040000	                           jle 0x4009614	      4519	buffer.c	FUNCTION_65	IF_81
0x40091d0	    0x48c78580f6ff	              mov qword [rbp - 0x980], 0	      4522	buffer.c	FUNCTION_65	IF_81
0x40091db	    0x83bd38f6ffff	              cmp dword [rbp - 0x9c8], 0	      4523	buffer.c	FUNCTION_65	IF_81	IF_82
0x40091e2	            0x7570	                           jne 0x4009254	      4523	buffer.c	FUNCTION_65	IF_81	IF_82
0x40091e4	    0x488b8500f6ff	            mov rax, qword [rbp - 0xa00]	      4524	buffer.c	FUNCTION_65	IF_81	IF_82
0x40091eb	    0x48898568f6ff	            mov qword [rbp - 0x998], rax	      4524	buffer.c	FUNCTION_65	IF_81	IF_82
0x40091f2	      0xe998000000	                           jmp 0x400928f	      4524	buffer.c	FUNCTION_65	IF_81	IF_82
0x40091f7	    0x488b9580f6ff	            mov rdx, qword [rbp - 0x980]	      4528	buffer.c	FUNCTION_65	IF_81	ELSE_16	FOR_12	IF_83
0x40091fe	          0x4889d0	                            mov rax, rdx	      4528	buffer.c	FUNCTION_65	IF_81	ELSE_16	FOR_12	IF_83
0x4009201	          0x4801c0	                            add rax, rax	      4528	buffer.c	FUNCTION_65	IF_81	ELSE_16	FOR_12	IF_83
0x4009204	          0x4801d0	                            add rax, rdx	      4528	buffer.c	FUNCTION_65	IF_81	ELSE_16	FOR_12	IF_83
0x4009207	        0x48c1e003	                              shl rax, 3	      4528	buffer.c	FUNCTION_65	IF_81	ELSE_16	FOR_12	IF_83
0x400920b	        0x488d75f0	                   lea rsi, [rbp - 0x10]	      4528	buffer.c	FUNCTION_65	IF_81	ELSE_16	FOR_12	IF_83
0x400920f	          0x4801f0	                            add rax, rsi	      4528	buffer.c	FUNCTION_65	IF_81	ELSE_16	FOR_12	IF_83
0x4009212	    0x482de0070000	                          sub rax, 0x7e0	      4528	buffer.c	FUNCTION_65	IF_81	ELSE_16	FOR_12	IF_83
0x4009218	            0x8b00	                    mov eax, dword [rax]	      4528	buffer.c	FUNCTION_65	IF_81	ELSE_16	FOR_12	IF_83
0x400921a	          0x83f806	                              cmp eax, 6	      4528	buffer.c	FUNCTION_65	IF_81	ELSE_16	FOR_12	IF_83
0x400921d	            0x752d	                           jne 0x400924c	      4528	buffer.c	FUNCTION_65	IF_81	ELSE_16	FOR_12	IF_83
0x400921f	    0x488b9580f6ff	            mov rdx, qword [rbp - 0x980]	      4531	buffer.c	FUNCTION_65	IF_81	ELSE_16	FOR_12	IF_83
0x4009226	          0x4889d0	                            mov rax, rdx	      4531	buffer.c	FUNCTION_65	IF_81	ELSE_16	FOR_12	IF_83
0x4009229	          0x4801c0	                            add rax, rax	      4531	buffer.c	FUNCTION_65	IF_81	ELSE_16	FOR_12	IF_83
0x400922c	          0x4801d0	                            add rax, rdx	      4531	buffer.c	FUNCTION_65	IF_81	ELSE_16	FOR_12	IF_83
0x400922f	        0x48c1e003	                              shl rax, 3	      4531	buffer.c	FUNCTION_65	IF_81	ELSE_16	FOR_12	IF_83
0x4009233	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      4531	buffer.c	FUNCTION_65	IF_81	ELSE_16	FOR_12	IF_83
0x4009237	          0x4801d8	                            add rax, rbx	      4531	buffer.c	FUNCTION_65	IF_81	ELSE_16	FOR_12	IF_83
0x400923a	    0x482df0070000	                          sub rax, 0x7f0	      4531	buffer.c	FUNCTION_65	IF_81	ELSE_16	FOR_12	IF_83
0x4009240	          0x488b00	                    mov rax, qword [rax]	      4531	buffer.c	FUNCTION_65	IF_81	ELSE_16	FOR_12	IF_83
0x4009243	    0x48898568f6ff	            mov qword [rbp - 0x998], rax	      4531	buffer.c	FUNCTION_65	IF_81	ELSE_16	FOR_12	IF_83
0x400924a	            0xeb19	                           jmp 0x4009265	      4532	buffer.c	FUNCTION_65	IF_81	ELSE_16	FOR_12	IF_83
0x400924c	    0x48838580f6ff	              add qword [rbp - 0x980], 1	      4527	buffer.c	FUNCTION_65	IF_81	ELSE_16	FOR_12
0x4009254	    0x8b8538f6ffff	            mov eax, dword [rbp - 0x9c8]	      4527	buffer.c	FUNCTION_65	IF_81	ELSE_16	FOR_12
0x400925a	            0x4898	                                    cdqe	      4527	buffer.c	FUNCTION_65	IF_81	ELSE_16	FOR_12
0x400925c	    0x483b8580f6ff	            cmp rax, qword [rbp - 0x980]	      4527	buffer.c	FUNCTION_65	IF_81	ELSE_16	FOR_12
0x4009263	            0x7f92	                            jg 0x40091f7	      4527	buffer.c	FUNCTION_65	IF_81	ELSE_16	FOR_12
0x4009265	    0x8b8538f6ffff	            mov eax, dword [rbp - 0x9c8]	      4534	buffer.c	FUNCTION_65	IF_81	ELSE_16	IF_84
0x400926b	            0x4898	                                    cdqe	      4534	buffer.c	FUNCTION_65	IF_81	ELSE_16	IF_84
0x400926d	    0x483b8580f6ff	            cmp rax, qword [rbp - 0x980]	      4534	buffer.c	FUNCTION_65	IF_81	ELSE_16	IF_84
0x4009274	            0x7519	                           jne 0x400928f	      4534	buffer.c	FUNCTION_65	IF_81	ELSE_16	IF_84
0x4009276	    0x488b8500f8ff	            mov rax, qword [rbp - 0x800]	      4537	buffer.c	FUNCTION_65	IF_81	ELSE_16	IF_84
0x400927d	    0x48898568f6ff	            mov qword [rbp - 0x998], rax	      4537	buffer.c	FUNCTION_65	IF_81	ELSE_16	IF_84
0x4009284	    0x48c78580f6ff	              mov qword [rbp - 0x980], 0	      4538	buffer.c	FUNCTION_65	IF_81	ELSE_16	IF_84
0x400928f	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4542	buffer.c	FUNCTION_65	IF_81	IF_85	CALL_59
0x4009296	          0x4889c7	                            mov rdi, rax	      4542	buffer.c	FUNCTION_65	IF_81	IF_85	CALL_59
0x4009299	      0xe800000000	                          call 0x400929e	      4542	buffer.c	FUNCTION_65	IF_81	IF_85	CALL_59
0x400929e	            0x89c2	                            mov edx, eax	      4542	buffer.c	FUNCTION_65	IF_81	IF_85	CALL_59
0x40092a0	    0x8b8534f6ffff	            mov eax, dword [rbp - 0x9cc]	      4542	buffer.c	FUNCTION_65	IF_81	IF_85	CALL_59
0x40092a6	            0x29d0	                            sub eax, edx	      4542	buffer.c	FUNCTION_65	IF_81	IF_85	CALL_59
0x40092a8	          0x3b4510	            cmp eax, dword [rbp + 0x10] 	      4542	buffer.c	FUNCTION_65	IF_81	IF_85	CALL_59
0x40092ab	     0xf8c43010000	                            jl 0x40093f4	      4542	buffer.c	FUNCTION_65	IF_81	IF_85	CALL_59
0x40092b1	    0x8b0500000000	            mov eax, dword [0x040092b7] 	      4546	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86
0x40092b7	            0x85c0	                           test eax, eax	      4546	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86
0x40092b9	     0xf8491000000	                            je 0x4009350	      4546	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86
0x40092bf	    0x488b8500f6ff	            mov rax, qword [rbp - 0xa00]	      4548	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86
0x40092c6	    0x48898568f6ff	            mov qword [rbp - 0x998], rax	      4548	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86
0x40092cd	    0xc78534f6ffff	              mov dword [rbp - 0x9cc], 0	      4549	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86
0x40092d7	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4552	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86	FOR_13	CALL_60
0x40092de	          0x4889c7	                            mov rdi, rax	      4552	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86	FOR_13	CALL_60
0x40092e1	      0xe800000000	                          call 0x40092e6	      4552	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86	FOR_13	CALL_60
0x40092e6	     0x18534f6ffff	            add dword [rbp - 0x9cc], eax	      4552	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86	FOR_13	CALL_60
0x40092ec	    0x8b8534f6ffff	            mov eax, dword [rbp - 0x9cc]	      4553	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86	FOR_13	IF_87
0x40092f2	          0x3b4510	            cmp eax, dword [rbp + 0x10] 	      4553	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86	FOR_13	IF_87
0x40092f5	            0x7d28	                           jge 0x400931f	      4553	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86	FOR_13	IF_87
0x40092f7	    0x488b05000000	            mov rax, qword [0x040092fe] 	      4555	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86	FOR_13
0x40092fe	    0x488b9568f6ff	            mov rdx, qword [rbp - 0x998]	      4555	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86	FOR_13
0x4009305	          0x4889d7	                            mov rdi, rdx	      4555	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86	FOR_13
0x4009308	            0xffd0	                                call rax	      4555	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86	FOR_13
0x400930a	    0x488b9568f6ff	            mov rdx, qword [rbp - 0x998]	      4555	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86	FOR_13
0x4009311	            0x4898	                                    cdqe	      4555	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86	FOR_13
0x4009313	          0x4801d0	                            add rax, rdx	      4555	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86	FOR_13
0x4009316	    0x48898568f6ff	            mov qword [rbp - 0x998], rax	      4555	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86	FOR_13
0x400931d	            0xebb8	                           jmp 0x40092d7	      4556	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86	FOR_13
0x400931f	              0x90	                                     nop	      4554	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86	FOR_13	IF_87
0x4009320	            0xeb1a	                           jmp 0x400933c	      4558	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86	WHILE_10
0x4009322	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4559	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86	WHILE_10
0x4009329	        0x488d5001	                      lea rdx, [rax + 1]	      4559	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86	WHILE_10
0x400932d	    0x48899568f6ff	            mov qword [rbp - 0x998], rdx	      4559	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86	WHILE_10
0x4009334	    0x8b95e8f5ffff	            mov edx, dword [rbp - 0xa18]	      4559	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86	WHILE_10
0x400933a	            0x8810	                      mov byte [rax], dl	      4559	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86	WHILE_10
0x400933c	    0x838534f6ffff	              add dword [rbp - 0x9cc], 1	      4558	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86	WHILE_10
0x4009343	    0x8b8534f6ffff	            mov eax, dword [rbp - 0x9cc]	      4558	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86	WHILE_10
0x4009349	          0x3b4510	            cmp eax, dword [rbp + 0x10] 	      4558	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86	WHILE_10
0x400934c	            0x7cd4	                            jl 0x4009322	      4558	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86	WHILE_10
0x400934e	            0xeb1a	                           jmp 0x400936a	      4558	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86	WHILE_10
0x4009350	          0x8b4510	            mov eax, dword [rbp + 0x10] 	      4563	buffer.c	FUNCTION_65	IF_81	IF_85	ELSE_17
0x4009353	            0x4898	                                    cdqe	      4563	buffer.c	FUNCTION_65	IF_81	IF_85	ELSE_17
0x4009355	        0x488d50ff	                      lea rdx, [rax - 1]	      4563	buffer.c	FUNCTION_65	IF_81	IF_85	ELSE_17
0x4009359	    0x488b8500f6ff	            mov rax, qword [rbp - 0xa00]	      4563	buffer.c	FUNCTION_65	IF_81	IF_85	ELSE_17
0x4009360	          0x4801d0	                            add rax, rdx	      4563	buffer.c	FUNCTION_65	IF_81	IF_85	ELSE_17
0x4009363	    0x48898568f6ff	            mov qword [rbp - 0x998], rax	      4563	buffer.c	FUNCTION_65	IF_81	IF_85	ELSE_17
0x400936a	    0x48c78580f6ff	              mov qword [rbp - 0x980], 0	      4564	buffer.c	FUNCTION_65	IF_81	IF_85	FOR_14
0x4009375	            0xeb38	                           jmp 0x40093af	      4564	buffer.c	FUNCTION_65	IF_81	IF_85	FOR_14
0x4009377	    0x488b9580f6ff	            mov rdx, qword [rbp - 0x980]	      4565	buffer.c	FUNCTION_65	IF_81	IF_85	FOR_14	IF_88
0x400937e	          0x4889d0	                            mov rax, rdx	      4565	buffer.c	FUNCTION_65	IF_81	IF_85	FOR_14	IF_88
0x4009381	          0x4801c0	                            add rax, rax	      4565	buffer.c	FUNCTION_65	IF_81	IF_85	FOR_14	IF_88
0x4009384	          0x4801d0	                            add rax, rdx	      4565	buffer.c	FUNCTION_65	IF_81	IF_85	FOR_14	IF_88
0x4009387	        0x48c1e003	                              shl rax, 3	      4565	buffer.c	FUNCTION_65	IF_81	IF_85	FOR_14	IF_88
0x400938b	        0x488d75f0	                   lea rsi, [rbp - 0x10]	      4565	buffer.c	FUNCTION_65	IF_81	IF_85	FOR_14	IF_88
0x400938f	          0x4801f0	                            add rax, rsi	      4565	buffer.c	FUNCTION_65	IF_81	IF_85	FOR_14	IF_88
0x4009392	    0x482df0070000	                          sub rax, 0x7f0	      4565	buffer.c	FUNCTION_65	IF_81	IF_85	FOR_14	IF_88
0x4009398	          0x488b10	                    mov rdx, qword [rax]	      4565	buffer.c	FUNCTION_65	IF_81	IF_85	FOR_14	IF_88
0x400939b	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4565	buffer.c	FUNCTION_65	IF_81	IF_85	FOR_14	IF_88
0x40093a2	          0x4839c2	                            cmp rdx, rax	      4565	buffer.c	FUNCTION_65	IF_81	IF_85	FOR_14	IF_88
0x40093a5	            0x771b	                            ja 0x40093c2	      4565	buffer.c	FUNCTION_65	IF_81	IF_85	FOR_14	IF_88
0x40093a7	    0x48838580f6ff	              add qword [rbp - 0x980], 1	      4564	buffer.c	FUNCTION_65	IF_81	IF_85	FOR_14
0x40093af	    0x8b8538f6ffff	            mov eax, dword [rbp - 0x9c8]	      4564	buffer.c	FUNCTION_65	IF_81	IF_85	FOR_14
0x40093b5	            0x4898	                                    cdqe	      4564	buffer.c	FUNCTION_65	IF_81	IF_85	FOR_14
0x40093b7	    0x483b8580f6ff	            cmp rax, qword [rbp - 0x980]	      4564	buffer.c	FUNCTION_65	IF_81	IF_85	FOR_14
0x40093be	            0x7fb7	                            jg 0x4009377	      4564	buffer.c	FUNCTION_65	IF_81	IF_85	FOR_14
0x40093c0	            0xeb01	                           jmp 0x40093c3	      4564	buffer.c	FUNCTION_65	IF_81	IF_85	FOR_14
0x40093c2	              0x90	                                     nop	      4566	buffer.c	FUNCTION_65	IF_81	IF_85	FOR_14	IF_88
0x40093c3	    0x488b8580f6ff	            mov rax, qword [rbp - 0x980]	      4567	buffer.c	FUNCTION_65	IF_81	IF_85
0x40093ca	    0x898538f6ffff	            mov dword [rbp - 0x9c8], eax	      4567	buffer.c	FUNCTION_65	IF_81	IF_85
0x40093d0	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4568	buffer.c	FUNCTION_65	IF_81	IF_85
0x40093d7	        0x488d5001	                      lea rdx, [rax + 1]	      4568	buffer.c	FUNCTION_65	IF_81	IF_85
0x40093db	    0x48899568f6ff	            mov qword [rbp - 0x998], rdx	      4568	buffer.c	FUNCTION_65	IF_81	IF_85
0x40093e2	          0xc6003e	                    mov byte [rax], 0x3e	      4568	buffer.c	FUNCTION_65	IF_81	IF_85
0x40093e5	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4569	buffer.c	FUNCTION_65	IF_81	IF_85
0x40093ec	          0xc60000	                       mov byte [rax], 0	      4569	buffer.c	FUNCTION_65	IF_81	IF_85
0x40093ef	      0xe912020000	                           jmp 0x4009606	      4569	buffer.c	FUNCTION_65	IF_81	IF_85
0x40093f4	    0x8b0500000000	            mov eax, dword [0x040093fa] 	      4574	buffer.c	FUNCTION_65	IF_81	ELSE_18	IF_89
0x40093fa	            0x85c0	                           test eax, eax	      4574	buffer.c	FUNCTION_65	IF_81	ELSE_18	IF_89
0x40093fc	            0x745f	                            je 0x400945d	      4574	buffer.c	FUNCTION_65	IF_81	ELSE_18	IF_89
0x40093fe	    0x48c78588f6ff	              mov qword [rbp - 0x978], 0	      4576	buffer.c	FUNCTION_65	IF_81	ELSE_18	IF_89
0x4009409	            0xeb45	                           jmp 0x4009450	      4577	buffer.c	FUNCTION_65	IF_81	ELSE_18	IF_89	WHILE_11
0x400940b	    0x488b9568f6ff	            mov rdx, qword [rbp - 0x998]	      4579	buffer.c	FUNCTION_65	IF_81	ELSE_18	IF_89	WHILE_11	CALL_61
0x4009412	    0x488b8588f6ff	            mov rax, qword [rbp - 0x978]	      4579	buffer.c	FUNCTION_65	IF_81	ELSE_18	IF_89	WHILE_11	CALL_61
0x4009419	          0x4801d0	                            add rax, rdx	      4579	buffer.c	FUNCTION_65	IF_81	ELSE_18	IF_89	WHILE_11	CALL_61
0x400941c	          0x4889c7	                            mov rdi, rax	      4579	buffer.c	FUNCTION_65	IF_81	ELSE_18	IF_89	WHILE_11	CALL_61
0x400941f	      0xe800000000	                          call 0x4009424	      4579	buffer.c	FUNCTION_65	IF_81	ELSE_18	IF_89	WHILE_11	CALL_61
0x4009424	    0x298534f6ffff	            sub dword [rbp - 0x9cc], eax	      4579	buffer.c	FUNCTION_65	IF_81	ELSE_18	IF_89	WHILE_11	CALL_61
0x400942a	    0x488b05000000	            mov rax, qword [0x04009431] 	      4580	buffer.c	FUNCTION_65	IF_81	ELSE_18	IF_89	WHILE_11
0x4009431	    0x488b8d68f6ff	            mov rcx, qword [rbp - 0x998]	      4580	buffer.c	FUNCTION_65	IF_81	ELSE_18	IF_89	WHILE_11
0x4009438	    0x488b9588f6ff	            mov rdx, qword [rbp - 0x978]	      4580	buffer.c	FUNCTION_65	IF_81	ELSE_18	IF_89	WHILE_11
0x400943f	          0x4801ca	                            add rdx, rcx	      4580	buffer.c	FUNCTION_65	IF_81	ELSE_18	IF_89	WHILE_11
0x4009442	          0x4889d7	                            mov rdi, rdx	      4580	buffer.c	FUNCTION_65	IF_81	ELSE_18	IF_89	WHILE_11
0x4009445	            0xffd0	                                call rax	      4580	buffer.c	FUNCTION_65	IF_81	ELSE_18	IF_89	WHILE_11
0x4009447	            0x4898	                                    cdqe	      4580	buffer.c	FUNCTION_65	IF_81	ELSE_18	IF_89	WHILE_11
0x4009449	    0x48018588f6ff	           add qword [rbp - 0x978], rax 	      4580	buffer.c	FUNCTION_65	IF_81	ELSE_18	IF_89	WHILE_11
0x4009450	    0x8b8534f6ffff	            mov eax, dword [rbp - 0x9cc]	      4577	buffer.c	FUNCTION_65	IF_81	ELSE_18	IF_89	WHILE_11
0x4009456	          0x3b4510	            cmp eax, dword [rbp + 0x10] 	      4577	buffer.c	FUNCTION_65	IF_81	ELSE_18	IF_89	WHILE_11
0x4009459	            0x7db0	                           jge 0x400940b	      4577	buffer.c	FUNCTION_65	IF_81	ELSE_18	IF_89	WHILE_11
0x400945b	            0xeb15	                           jmp 0x4009472	      4577	buffer.c	FUNCTION_65	IF_81	ELSE_18	IF_89	WHILE_11
0x400945d	    0x8b8534f6ffff	            mov eax, dword [rbp - 0x9cc]	      4585	buffer.c	FUNCTION_65	IF_81	ELSE_18	ELSE_19
0x4009463	          0x2b4510	             sub eax, dword [rbp + 0x10]	      4585	buffer.c	FUNCTION_65	IF_81	ELSE_18	ELSE_19
0x4009466	          0x83c001	                              add eax, 1	      4585	buffer.c	FUNCTION_65	IF_81	ELSE_18	ELSE_19
0x4009469	            0x4898	                                    cdqe	      4585	buffer.c	FUNCTION_65	IF_81	ELSE_18	ELSE_19
0x400946b	    0x48898588f6ff	            mov qword [rbp - 0x978], rax	      4585	buffer.c	FUNCTION_65	IF_81	ELSE_18	ELSE_19
0x4009472	    0x488b9568f6ff	            mov rdx, qword [rbp - 0x998]	      4586	buffer.c	FUNCTION_65	IF_81	ELSE_18
0x4009479	    0x488b8588f6ff	            mov rax, qword [rbp - 0x978]	      4586	buffer.c	FUNCTION_65	IF_81	ELSE_18
0x4009480	          0x4801d0	                            add rax, rdx	      4586	buffer.c	FUNCTION_65	IF_81	ELSE_18
0x4009483	    0x48898578f6ff	            mov qword [rbp - 0x988], rax	      4586	buffer.c	FUNCTION_65	IF_81	ELSE_18
0x400948a	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4587	buffer.c	FUNCTION_65	IF_81	ELSE_18	CALL_62
0x4009491	          0x4889c7	                            mov rdi, rax	      4587	buffer.c	FUNCTION_65	IF_81	ELSE_18	CALL_62
0x4009494	      0xe800000000	                          call 0x4009499	      4587	buffer.c	FUNCTION_65	IF_81	ELSE_18	CALL_62
0x4009499	        0x488d5001	                      lea rdx, [rax + 1]	      4587	buffer.c	FUNCTION_65	IF_81	ELSE_18	CALL_62
0x400949d	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4587	buffer.c	FUNCTION_65	IF_81	ELSE_18	CALL_62
0x40094a4	        0x488d4801	                      lea rcx, [rax + 1]	      4587	buffer.c	FUNCTION_65	IF_81	ELSE_18	CALL_62
0x40094a8	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4587	buffer.c	FUNCTION_65	IF_81	ELSE_18	CALL_62
0x40094af	          0x4889c6	                            mov rsi, rax	      4587	buffer.c	FUNCTION_65	IF_81	ELSE_18	CALL_62
0x40094b2	          0x4889cf	                            mov rdi, rcx	      4587	buffer.c	FUNCTION_65	IF_81	ELSE_18	CALL_62
0x40094b5	      0xe800000000	                          call 0x40094ba	      4587	buffer.c	FUNCTION_65	IF_81	ELSE_18	CALL_62
0x40094ba	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4588	buffer.c	FUNCTION_65	IF_81	ELSE_18
0x40094c1	          0xc6003c	                    mov byte [rax], 0x3c	      4588	buffer.c	FUNCTION_65	IF_81	ELSE_18
0x40094c4	            0xeb44	                           jmp 0x400950a	      4591	buffer.c	FUNCTION_65	IF_81	ELSE_18	WHILE_12
0x40094c6	    0x488b9d68f6ff	            mov rbx, qword [rbp - 0x998]	      4593	buffer.c	FUNCTION_65	IF_81	ELSE_18	WHILE_12	CALL_63
0x40094cd	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4593	buffer.c	FUNCTION_65	IF_81	ELSE_18	WHILE_12	CALL_63
0x40094d4	          0x4889c7	                            mov rdi, rax	      4593	buffer.c	FUNCTION_65	IF_81	ELSE_18	WHILE_12	CALL_63
0x40094d7	      0xe800000000	                          call 0x40094dc	      4593	buffer.c	FUNCTION_65	IF_81	ELSE_18	WHILE_12	CALL_63
0x40094dc	          0x4801d8	                            add rax, rbx	      4593	buffer.c	FUNCTION_65	IF_81	ELSE_18	WHILE_12	CALL_63
0x40094df	    0x48898568f6ff	            mov qword [rbp - 0x998], rax	      4593	buffer.c	FUNCTION_65	IF_81	ELSE_18	WHILE_12	CALL_63
0x40094e6	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4594	buffer.c	FUNCTION_65	IF_81	ELSE_18	WHILE_12
0x40094ed	        0x488d5001	                      lea rdx, [rax + 1]	      4594	buffer.c	FUNCTION_65	IF_81	ELSE_18	WHILE_12
0x40094f1	    0x48899568f6ff	            mov qword [rbp - 0x998], rdx	      4594	buffer.c	FUNCTION_65	IF_81	ELSE_18	WHILE_12
0x40094f8	    0x8b95e8f5ffff	            mov edx, dword [rbp - 0xa18]	      4594	buffer.c	FUNCTION_65	IF_81	ELSE_18	WHILE_12
0x40094fe	            0x8810	                      mov byte [rax], dl	      4594	buffer.c	FUNCTION_65	IF_81	ELSE_18	WHILE_12
0x4009500	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4595	buffer.c	FUNCTION_65	IF_81	ELSE_18	WHILE_12
0x4009507	          0xc60000	                       mov byte [rax], 0	      4595	buffer.c	FUNCTION_65	IF_81	ELSE_18	WHILE_12
0x400950a	    0x838534f6ffff	              add dword [rbp - 0x9cc], 1	      4591	buffer.c	FUNCTION_65	IF_81	ELSE_18	WHILE_12
0x4009511	    0x8b8534f6ffff	            mov eax, dword [rbp - 0x9cc]	      4591	buffer.c	FUNCTION_65	IF_81	ELSE_18	WHILE_12
0x4009517	          0x3b4510	            cmp eax, dword [rbp + 0x10] 	      4591	buffer.c	FUNCTION_65	IF_81	ELSE_18	WHILE_12
0x400951a	            0x7caa	                            jl 0x40094c6	      4591	buffer.c	FUNCTION_65	IF_81	ELSE_18	WHILE_12
0x400951c	    0x4883ad88f6ff	              sub qword [rbp - 0x978], 1	      4598	buffer.c	FUNCTION_65	IF_81	ELSE_18
0x4009524	      0xe9c8000000	                           jmp 0x40095f1	      4599	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15
0x4009529	    0x488b9580f6ff	            mov rdx, qword [rbp - 0x980]	      4601	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x4009530	          0x4889d0	                            mov rax, rdx	      4601	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x4009533	          0x4801c0	                            add rax, rax	      4601	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x4009536	          0x4801d0	                            add rax, rdx	      4601	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x4009539	        0x48c1e003	                              shl rax, 3	      4601	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x400953d	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      4601	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x4009541	          0x4801d8	                            add rax, rbx	      4601	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x4009544	    0x482df0070000	                          sub rax, 0x7f0	      4601	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x400954a	          0x488b00	                    mov rax, qword [rax]	      4601	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x400954d	    0x488b9588f6ff	            mov rdx, qword [rbp - 0x978]	      4601	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x4009554	          0x48f7da	                                 neg rdx	      4601	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x4009557	          0x4801c2	                            add rdx, rax	      4601	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x400955a	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4601	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x4009561	          0x4839c2	                            cmp rdx, rax	      4601	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x4009564	            0x7258	                            jb 0x40095be	      4601	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x4009566	    0x488b9580f6ff	            mov rdx, qword [rbp - 0x980]	      4602	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x400956d	          0x4889d0	                            mov rax, rdx	      4602	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x4009570	          0x4801c0	                            add rax, rax	      4602	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x4009573	          0x4801d0	                            add rax, rdx	      4602	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x4009576	        0x48c1e003	                              shl rax, 3	      4602	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x400957a	        0x488d75f0	                   lea rsi, [rbp - 0x10]	      4602	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x400957e	          0x4801f0	                            add rax, rsi	      4602	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x4009581	    0x482df0070000	                          sub rax, 0x7f0	      4602	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x4009587	          0x488b00	                    mov rax, qword [rax]	      4602	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x400958a	    0x488b9588f6ff	            mov rdx, qword [rbp - 0x978]	      4602	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x4009591	          0x48f7da	                                 neg rdx	      4602	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x4009594	        0x488d0c10	                    lea rcx, [rax + rdx]	      4602	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x4009598	    0x488b9580f6ff	            mov rdx, qword [rbp - 0x980]	      4602	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x400959f	          0x4889d0	                            mov rax, rdx	      4602	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x40095a2	          0x4801c0	                            add rax, rax	      4602	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x40095a5	          0x4801d0	                            add rax, rdx	      4602	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x40095a8	        0x48c1e003	                              shl rax, 3	      4602	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x40095ac	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      4602	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x40095b0	          0x4801d8	                            add rax, rbx	      4602	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x40095b3	    0x482df0070000	                          sub rax, 0x7f0	      4602	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x40095b9	          0x488908	                    mov qword [rax], rcx	      4602	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x40095bc	            0xeb2b	                           jmp 0x40095e9	      4602	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x40095be	    0x488b8d68f6ff	            mov rcx, qword [rbp - 0x998]	      4604	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	ELSE_20
0x40095c5	    0x488b9580f6ff	            mov rdx, qword [rbp - 0x980]	      4604	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	ELSE_20
0x40095cc	          0x4889d0	                            mov rax, rdx	      4604	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	ELSE_20
0x40095cf	          0x4801c0	                            add rax, rax	      4604	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	ELSE_20
0x40095d2	          0x4801d0	                            add rax, rdx	      4604	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	ELSE_20
0x40095d5	        0x48c1e003	                              shl rax, 3	      4604	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	ELSE_20
0x40095d9	        0x488d7df0	                   lea rdi, [rbp - 0x10]	      4604	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	ELSE_20
0x40095dd	          0x4801f8	                            add rax, rdi	      4604	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	ELSE_20
0x40095e0	    0x482df0070000	                          sub rax, 0x7f0	      4604	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	ELSE_20
0x40095e6	          0x488908	                    mov qword [rax], rcx	      4604	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	ELSE_20
0x40095e9	    0x48838580f6ff	              add qword [rbp - 0x980], 1	      4599	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15
0x40095f1	    0x8b8538f6ffff	            mov eax, dword [rbp - 0x9c8]	      4599	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15
0x40095f7	            0x4898	                                    cdqe	      4599	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15
0x40095f9	    0x483b8580f6ff	            cmp rax, qword [rbp - 0x980]	      4599	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15
0x4009600	     0xf8f23ffffff	                            jg 0x4009529	      4599	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15
0x4009606	          0x8b4510	            mov eax, dword [rbp + 0x10] 	      4607	buffer.c	FUNCTION_65	IF_81	ELSE_20
0x4009609	    0x898534f6ffff	            mov dword [rbp - 0x9cc], eax	      4607	buffer.c	FUNCTION_65	IF_81	ELSE_20
0x400960f	      0xe93b020000	                           jmp 0x400984f	      4607	buffer.c	FUNCTION_65	IF_81	ELSE_20
0x4009614	    0x8b8534f6ffff	            mov eax, dword [rbp - 0x9cc]	      4609	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	CALL_64
0x400961a	          0x3b4510	            cmp eax, dword [rbp + 0x10] 	      4609	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	CALL_64
0x400961d	     0xf8d2c020000	                           jge 0x400984f	      4609	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	CALL_64
0x4009623	    0x488b8500f6ff	            mov rax, qword [rbp - 0xa00]	      4609	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	CALL_64
0x400962a	          0x4889c7	                            mov rdi, rax	      4609	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	CALL_64
0x400962d	      0xe800000000	                          call 0x4009632	      4609	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	CALL_64
0x4009632	          0x4889c2	                            mov rdx, rax	      4609	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	CALL_64
0x4009635	          0x8b4510	            mov eax, dword [rbp + 0x10] 	      4609	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	CALL_64
0x4009638	            0x4898	                                    cdqe	      4609	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	CALL_64
0x400963a	          0x4801c2	                            add rdx, rax	      4609	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	CALL_64
0x400963d	    0x8b8534f6ffff	            mov eax, dword [rbp - 0x9cc]	      4609	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	CALL_64
0x4009643	            0x4898	                                    cdqe	      4609	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	CALL_64
0x4009645	          0x4829c2	                            sub rdx, rax	      4609	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	CALL_64
0x4009648	          0x4889d0	                            mov rax, rdx	      4609	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	CALL_64
0x400964b	        0x4883c001	                              add rax, 1	      4609	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	CALL_64
0x400964f	    0x483b85f8f5ff	            cmp rax, qword [rbp - 0xa08]	      4609	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	CALL_64
0x4009656	     0xf83f3010000	                           jae 0x400984f	      4609	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	CALL_64
0x400965c	    0x48c78580f6ff	              mov qword [rbp - 0x980], 0	      4612	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	FOR_16
0x4009667	            0xeb30	                           jmp 0x4009699	      4612	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	FOR_16
0x4009669	    0x488b9580f6ff	            mov rdx, qword [rbp - 0x980]	      4613	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	FOR_16	IF_92
0x4009670	          0x4889d0	                            mov rax, rdx	      4613	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	FOR_16	IF_92
0x4009673	          0x4801c0	                            add rax, rax	      4613	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	FOR_16	IF_92
0x4009676	          0x4801d0	                            add rax, rdx	      4613	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	FOR_16	IF_92
0x4009679	        0x48c1e003	                              shl rax, 3	      4613	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	FOR_16	IF_92
0x400967d	        0x488d75f0	                   lea rsi, [rbp - 0x10]	      4613	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	FOR_16	IF_92
0x4009681	          0x4801f0	                            add rax, rsi	      4613	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	FOR_16	IF_92
0x4009684	    0x482de0070000	                          sub rax, 0x7e0	      4613	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	FOR_16	IF_92
0x400968a	            0x8b00	                    mov eax, dword [rax]	      4613	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	FOR_16	IF_92
0x400968c	          0x83f803	                              cmp eax, 3	      4613	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	FOR_16	IF_92
0x400968f	            0x741b	                            je 0x40096ac	      4613	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	FOR_16	IF_92
0x4009691	    0x48838580f6ff	              add qword [rbp - 0x980], 1	      4612	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	FOR_16
0x4009699	    0x8b8538f6ffff	            mov eax, dword [rbp - 0x9c8]	      4612	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	FOR_16
0x400969f	            0x4898	                                    cdqe	      4612	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	FOR_16
0x40096a1	    0x483b8580f6ff	            cmp rax, qword [rbp - 0x980]	      4612	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	FOR_16
0x40096a8	            0x7fbf	                            jg 0x4009669	      4612	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	FOR_16
0x40096aa	            0xeb01	                           jmp 0x40096ad	      4612	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	FOR_16
0x40096ac	              0x90	                                     nop	      4614	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	FOR_16	IF_92
0x40096ad	    0x8b8538f6ffff	            mov eax, dword [rbp - 0x9c8]	      4615	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93
0x40096b3	            0x4898	                                    cdqe	      4615	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93
0x40096b5	    0x483b8580f6ff	            cmp rax, qword [rbp - 0x980]	      4615	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93
0x40096bc	     0xf8e8d010000	                           jle 0x400984f	      4615	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93
0x40096c2	    0x488b9580f6ff	            mov rdx, qword [rbp - 0x980]	      4617	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93
0x40096c9	          0x4889d0	                            mov rax, rdx	      4617	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93
0x40096cc	          0x4801c0	                            add rax, rax	      4617	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93
0x40096cf	          0x4801d0	                            add rax, rdx	      4617	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93
0x40096d2	        0x48c1e003	                              shl rax, 3	      4617	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93
0x40096d6	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      4617	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93
0x40096da	          0x4801d8	                            add rax, rbx	      4617	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93
0x40096dd	    0x482df0070000	                          sub rax, 0x7f0	      4617	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93
0x40096e3	          0x488b00	                    mov rax, qword [rax]	      4617	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93
0x40096e6	          0x8b5510	            mov edx, dword [rbp + 0x10] 	      4617	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93
0x40096e9	          0x4863ca	                         movsxd rcx, edx	      4617	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93
0x40096ec	    0x8b9534f6ffff	            mov edx, dword [rbp - 0x9cc]	      4617	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93
0x40096f2	          0x4863d2	                         movsxd rdx, edx	      4617	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93
0x40096f5	          0x4829d1	                            sub rcx, rdx	      4617	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93
0x40096f8	          0x4889ca	                            mov rdx, rcx	      4617	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93
0x40096fb	          0x4801d0	                            add rax, rdx	      4617	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93
0x40096fe	    0x48898578f6ff	            mov qword [rbp - 0x988], rax	      4617	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93
0x4009705	    0x488b9580f6ff	            mov rdx, qword [rbp - 0x980]	      4618	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	CALL_65
0x400970c	          0x4889d0	                            mov rax, rdx	      4618	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	CALL_65
0x400970f	          0x4801c0	                            add rax, rax	      4618	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	CALL_65
0x4009712	          0x4801d0	                            add rax, rdx	      4618	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	CALL_65
0x4009715	        0x48c1e003	                              shl rax, 3	      4618	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	CALL_65
0x4009719	        0x488d7df0	                   lea rdi, [rbp - 0x10]	      4618	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	CALL_65
0x400971d	          0x4801f8	                            add rax, rdi	      4618	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	CALL_65
0x4009720	    0x482df0070000	                          sub rax, 0x7f0	      4618	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	CALL_65
0x4009726	          0x488b00	                    mov rax, qword [rax]	      4618	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	CALL_65
0x4009729	          0x4889c7	                            mov rdi, rax	      4618	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	CALL_65
0x400972c	      0xe800000000	                          call 0x4009731	      4618	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	CALL_65
0x4009731	        0x488d7001	                      lea rsi, [rax + 1]	      4618	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	CALL_65
0x4009735	    0x488b9580f6ff	            mov rdx, qword [rbp - 0x980]	      4618	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	CALL_65
0x400973c	          0x4889d0	                            mov rax, rdx	      4618	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	CALL_65
0x400973f	          0x4801c0	                            add rax, rax	      4618	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	CALL_65
0x4009742	          0x4801d0	                            add rax, rdx	      4618	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	CALL_65
0x4009745	        0x48c1e003	                              shl rax, 3	      4618	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	CALL_65
0x4009749	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      4618	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	CALL_65
0x400974d	          0x4801d8	                            add rax, rbx	      4618	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	CALL_65
0x4009750	    0x482df0070000	                          sub rax, 0x7f0	      4618	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	CALL_65
0x4009756	          0x488b08	                    mov rcx, qword [rax]	      4618	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	CALL_65
0x4009759	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4618	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	CALL_65
0x4009760	          0x4889f2	                            mov rdx, rsi	      4618	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	CALL_65
0x4009763	          0x4889ce	                            mov rsi, rcx	      4618	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	CALL_65
0x4009766	          0x4889c7	                            mov rdi, rax	      4618	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	CALL_65
0x4009769	      0xe800000000	                          call 0x400976e	      4618	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	CALL_65
0x400976e	    0x488b9580f6ff	            mov rdx, qword [rbp - 0x980]	      4619	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_17
0x4009775	          0x4889d0	                            mov rax, rdx	      4619	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_17
0x4009778	          0x4801c0	                            add rax, rax	      4619	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_17
0x400977b	          0x4801d0	                            add rax, rdx	      4619	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_17
0x400977e	        0x48c1e003	                              shl rax, 3	      4619	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_17
0x4009782	        0x488d75f0	                   lea rsi, [rbp - 0x10]	      4619	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_17
0x4009786	          0x4801f0	                            add rax, rsi	      4619	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_17
0x4009789	    0x482df0070000	                          sub rax, 0x7f0	      4619	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_17
0x400978f	          0x488b00	                    mov rax, qword [rax]	      4619	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_17
0x4009792	    0x48898568f6ff	            mov qword [rbp - 0x998], rax	      4619	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_17
0x4009799	            0xeb21	                           jmp 0x40097bc	      4619	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_17
0x400979b	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4620	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_17
0x40097a2	    0x8b95e8f5ffff	            mov edx, dword [rbp - 0xa18]	      4620	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_17
0x40097a8	            0x8810	                      mov byte [rax], dl	      4620	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_17
0x40097aa	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4619	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_17
0x40097b1	        0x4883c001	                              add rax, 1	      4619	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_17
0x40097b5	    0x48898568f6ff	            mov qword [rbp - 0x998], rax	      4619	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_17
0x40097bc	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4619	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_17
0x40097c3	    0x483b8578f6ff	            cmp rax, qword [rbp - 0x988]	      4619	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_17
0x40097ca	            0x72cf	                            jb 0x400979b	      4619	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_17
0x40097cc	    0x48838580f6ff	              add qword [rbp - 0x980], 1	      4621	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_18
0x40097d4	            0xeb5f	                           jmp 0x4009835	      4621	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_18
0x40097d6	    0x488b9580f6ff	            mov rdx, qword [rbp - 0x980]	      4622	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_18
0x40097dd	          0x4889d0	                            mov rax, rdx	      4622	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_18
0x40097e0	          0x4801c0	                            add rax, rax	      4622	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_18
0x40097e3	          0x4801d0	                            add rax, rdx	      4622	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_18
0x40097e6	        0x48c1e003	                              shl rax, 3	      4622	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_18
0x40097ea	        0x488d7df0	                   lea rdi, [rbp - 0x10]	      4622	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_18
0x40097ee	          0x4801f8	                            add rax, rdi	      4622	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_18
0x40097f1	    0x482df0070000	                          sub rax, 0x7f0	      4622	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_18
0x40097f7	          0x488b10	                    mov rdx, qword [rax]	      4622	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_18
0x40097fa	          0x8b4510	            mov eax, dword [rbp + 0x10] 	      4622	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_18
0x40097fd	    0x2b8534f6ffff	            sub eax, dword [rbp - 0x9cc]	      4622	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_18
0x4009803	            0x4898	                                    cdqe	      4622	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_18
0x4009805	        0x488d0c02	                    lea rcx, [rdx + rax]	      4622	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_18
0x4009809	    0x488b9580f6ff	            mov rdx, qword [rbp - 0x980]	      4622	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_18
0x4009810	          0x4889d0	                            mov rax, rdx	      4622	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_18
0x4009813	          0x4801c0	                            add rax, rax	      4622	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_18
0x4009816	          0x4801d0	                            add rax, rdx	      4622	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_18
0x4009819	        0x48c1e003	                              shl rax, 3	      4622	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_18
0x400981d	        0x488d75f0	                   lea rsi, [rbp - 0x10]	      4622	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_18
0x4009821	          0x4801f0	                            add rax, rsi	      4622	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_18
0x4009824	    0x482df0070000	                          sub rax, 0x7f0	      4622	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_18
0x400982a	          0x488908	                    mov qword [rax], rcx	      4622	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_18
0x400982d	    0x48838580f6ff	              add qword [rbp - 0x980], 1	      4621	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_18
0x4009835	    0x8b8538f6ffff	            mov eax, dword [rbp - 0x9c8]	      4621	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_18
0x400983b	            0x4898	                                    cdqe	      4621	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_18
0x400983d	    0x483b8580f6ff	            cmp rax, qword [rbp - 0x980]	      4621	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_18
0x4009844	            0x7f90	                            jg 0x40097d6	      4621	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_18
0x4009846	          0x8b4510	            mov eax, dword [rbp + 0x10] 	      4623	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93
0x4009849	    0x898534f6ffff	            mov dword [rbp - 0x9cc], eax	      4623	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93
0x400984f	    0x4883bde0f5ff	              cmp qword [rbp - 0xa20], 0	      4628	buffer.c	FUNCTION_65	IF_94
0x4009857	     0xf84e2000000	                            je 0x400993f	      4628	buffer.c	FUNCTION_65	IF_94
0x400985d	    0x488b85e0f5ff	            mov rax, qword [rbp - 0xa20]	      4630	buffer.c	FUNCTION_65	IF_94
0x4009864	    0x488985a8f6ff	            mov qword [rbp - 0x958], rax	      4630	buffer.c	FUNCTION_65	IF_94
0x400986b	    0x48c78580f6ff	              mov qword [rbp - 0x980], 0	      4631	buffer.c	FUNCTION_65	IF_94	FOR_19
0x4009876	      0xe993000000	                           jmp 0x400990e	      4631	buffer.c	FUNCTION_65	IF_94	FOR_19
0x400987b	    0x488b9580f6ff	            mov rdx, qword [rbp - 0x980]	      4633	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x4009882	          0x4889d0	                            mov rax, rdx	      4633	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x4009885	          0x4801c0	                            add rax, rax	      4633	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x4009888	          0x4801d0	                            add rax, rdx	      4633	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x400988b	        0x48c1e003	                              shl rax, 3	      4633	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x400988f	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      4633	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x4009893	          0x4801d8	                            add rax, rbx	      4633	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x4009896	    0x482de0070000	                          sub rax, 0x7e0	      4633	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x400989c	            0x8b00	                    mov eax, dword [rax]	      4633	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x400989e	          0x83f804	                              cmp eax, 4	      4633	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x40098a1	            0x7563	                           jne 0x4009906	      4633	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x40098a3	    0x488b9580f6ff	            mov rdx, qword [rbp - 0x980]	      4635	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x40098aa	          0x4889d0	                            mov rax, rdx	      4635	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x40098ad	          0x4801c0	                            add rax, rax	      4635	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x40098b0	          0x4801d0	                            add rax, rdx	      4635	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x40098b3	        0x48c1e003	                              shl rax, 3	      4635	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x40098b7	        0x488d7df0	                   lea rdi, [rbp - 0x10]	      4635	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x40098bb	          0x4801f8	                            add rax, rdi	      4635	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x40098be	    0x482df0070000	                          sub rax, 0x7f0	      4635	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x40098c4	          0x488b10	                    mov rdx, qword [rax]	      4635	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x40098c7	    0x488b85a8f6ff	            mov rax, qword [rbp - 0x958]	      4635	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x40098ce	          0x488910	                    mov qword [rax], rdx	      4635	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x40098d1	    0x488b9580f6ff	            mov rdx, qword [rbp - 0x980]	      4636	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x40098d8	          0x4889d0	                            mov rax, rdx	      4636	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x40098db	          0x4801c0	                            add rax, rax	      4636	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x40098de	          0x4801d0	                            add rax, rdx	      4636	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x40098e1	        0x48c1e003	                              shl rax, 3	      4636	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x40098e5	        0x488d75f0	                   lea rsi, [rbp - 0x10]	      4636	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x40098e9	          0x4801f0	                            add rax, rsi	      4636	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x40098ec	    0x482de8070000	                          sub rax, 0x7e8	      4636	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x40098f2	            0x8b10	                    mov edx, dword [rax]	      4636	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x40098f4	    0x488b85a8f6ff	            mov rax, qword [rbp - 0x958]	      4636	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x40098fb	          0x895008	                mov dword [rax + 8], edx	      4636	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x40098fe	    0x488385a8f6ff	           add qword [rbp - 0x958], 0x10	      4637	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x4009906	    0x48838580f6ff	              add qword [rbp - 0x980], 1	      4631	buffer.c	FUNCTION_65	IF_94	FOR_19
0x400990e	    0x8b8538f6ffff	            mov eax, dword [rbp - 0x9c8]	      4631	buffer.c	FUNCTION_65	IF_94	FOR_19
0x4009914	            0x4898	                                    cdqe	      4631	buffer.c	FUNCTION_65	IF_94	FOR_19
0x4009916	    0x483b8580f6ff	            cmp rax, qword [rbp - 0x980]	      4631	buffer.c	FUNCTION_65	IF_94	FOR_19
0x400991d	     0xf8f58ffffff	                            jg 0x400987b	      4631	buffer.c	FUNCTION_65	IF_94	FOR_19
0x4009923	    0x488b85a8f6ff	            mov rax, qword [rbp - 0x958]	      4640	buffer.c	FUNCTION_65	IF_94
0x400992a	    0x48c700000000	                      mov qword [rax], 0	      4640	buffer.c	FUNCTION_65	IF_94
0x4009931	    0x488b85a8f6ff	            mov rax, qword [rbp - 0x958]	      4641	buffer.c	FUNCTION_65	IF_94
0x4009938	    0xc74008000000	                  mov dword [rax + 8], 0	      4641	buffer.c	FUNCTION_65	IF_94
0x400993f	    0x4883bdd8f5ff	              cmp qword [rbp - 0xa28], 0	      4645	buffer.c	FUNCTION_65	IF_96
0x4009947	     0xf84e2000000	                            je 0x4009a2f	      4645	buffer.c	FUNCTION_65	IF_96
0x400994d	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	      4647	buffer.c	FUNCTION_65	IF_96
0x4009954	    0x488985a8f6ff	            mov qword [rbp - 0x958], rax	      4647	buffer.c	FUNCTION_65	IF_96
0x400995b	    0x48c78580f6ff	              mov qword [rbp - 0x980], 0	      4648	buffer.c	FUNCTION_65	IF_96	FOR_20
0x4009966	      0xe993000000	                           jmp 0x40099fe	      4648	buffer.c	FUNCTION_65	IF_96	FOR_20
0x400996b	    0x488b9580f6ff	            mov rdx, qword [rbp - 0x980]	      4650	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x4009972	          0x4889d0	                            mov rax, rdx	      4650	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x4009975	          0x4801c0	                            add rax, rax	      4650	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x4009978	          0x4801d0	                            add rax, rdx	      4650	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x400997b	        0x48c1e003	                              shl rax, 3	      4650	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x400997f	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      4650	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x4009983	          0x4801d8	                            add rax, rbx	      4650	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x4009986	    0x482de0070000	                          sub rax, 0x7e0	      4650	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x400998c	            0x8b00	                    mov eax, dword [rax]	      4650	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x400998e	          0x83f805	                              cmp eax, 5	      4650	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x4009991	            0x7563	                           jne 0x40099f6	      4650	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x4009993	    0x488b9580f6ff	            mov rdx, qword [rbp - 0x980]	      4652	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x400999a	          0x4889d0	                            mov rax, rdx	      4652	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x400999d	          0x4801c0	                            add rax, rax	      4652	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x40099a0	          0x4801d0	                            add rax, rdx	      4652	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x40099a3	        0x48c1e003	                              shl rax, 3	      4652	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x40099a7	        0x488d7df0	                   lea rdi, [rbp - 0x10]	      4652	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x40099ab	          0x4801f8	                            add rax, rdi	      4652	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x40099ae	    0x482df0070000	                          sub rax, 0x7f0	      4652	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x40099b4	          0x488b10	                    mov rdx, qword [rax]	      4652	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x40099b7	    0x488b85a8f6ff	            mov rax, qword [rbp - 0x958]	      4652	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x40099be	          0x488910	                    mov qword [rax], rdx	      4652	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x40099c1	    0x488b9580f6ff	            mov rdx, qword [rbp - 0x980]	      4653	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x40099c8	          0x4889d0	                            mov rax, rdx	      4653	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x40099cb	          0x4801c0	                            add rax, rax	      4653	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x40099ce	          0x4801d0	                            add rax, rdx	      4653	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x40099d1	        0x48c1e003	                              shl rax, 3	      4653	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x40099d5	        0x488d75f0	                   lea rsi, [rbp - 0x10]	      4653	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x40099d9	          0x4801f0	                            add rax, rsi	      4653	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x40099dc	    0x482de8070000	                          sub rax, 0x7e8	      4653	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x40099e2	            0x8b10	                    mov edx, dword [rax]	      4653	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x40099e4	    0x488b85a8f6ff	            mov rax, qword [rbp - 0x958]	      4653	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x40099eb	          0x895008	                mov dword [rax + 8], edx	      4653	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x40099ee	    0x488385a8f6ff	           add qword [rbp - 0x958], 0x10	      4654	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x40099f6	    0x48838580f6ff	              add qword [rbp - 0x980], 1	      4648	buffer.c	FUNCTION_65	IF_96	FOR_20
0x40099fe	    0x8b8538f6ffff	            mov eax, dword [rbp - 0x9c8]	      4648	buffer.c	FUNCTION_65	IF_96	FOR_20
0x4009a04	            0x4898	                                    cdqe	      4648	buffer.c	FUNCTION_65	IF_96	FOR_20
0x4009a06	    0x483b8580f6ff	            cmp rax, qword [rbp - 0x980]	      4648	buffer.c	FUNCTION_65	IF_96	FOR_20
0x4009a0d	     0xf8f58ffffff	                            jg 0x400996b	      4648	buffer.c	FUNCTION_65	IF_96	FOR_20
0x4009a13	    0x488b85a8f6ff	            mov rax, qword [rbp - 0x958]	      4657	buffer.c	FUNCTION_65	IF_96
0x4009a1a	    0x48c700000000	                      mov qword [rax], 0	      4657	buffer.c	FUNCTION_65	IF_96
0x4009a21	    0x488b85a8f6ff	            mov rax, qword [rbp - 0x958]	      4658	buffer.c	FUNCTION_65	IF_96
0x4009a28	    0xc74008000000	                  mov dword [rax + 8], 0	      4658	buffer.c	FUNCTION_65	IF_96
0x4009a2f	    0x8b0500000000	            mov eax, dword [0x04009a35] 	      4663	buffer.c	FUNCTION_65	IF_98
0x4009a35	            0x85c0	                           test eax, eax	      4663	buffer.c	FUNCTION_65	IF_98
0x4009a37	            0x741f	                            je 0x4009a58	      4663	buffer.c	FUNCTION_65	IF_98
0x4009a39	    0x8b8558f6ffff	            mov eax, dword [rbp - 0x9a8]	      4665	buffer.c	FUNCTION_65	IF_98
0x4009a3f	    0x890500000000	            mov dword [0x04009a45], eax 	      4665	buffer.c	FUNCTION_65	IF_98
0x4009a45	    0x488b05000000	            mov rax, qword [0x04009a4c] 	      4666	buffer.c	FUNCTION_65	IF_98
0x4009a4c	    0x8b955cf6ffff	            mov edx, dword [rbp - 0x9a4]	      4666	buffer.c	FUNCTION_65	IF_98
0x4009a52	    0x899028010000	            mov dword [rax + 0x128], edx	      4666	buffer.c	FUNCTION_65	IF_98
0x4009a58	    0x8b8534f6ffff	            mov eax, dword [rbp - 0x9cc]	      4669	buffer.c	FUNCTION_65
0x4009a5e	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      4670	buffer.c	FUNCTION_65
0x4009a62	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      4670	buffer.c	FUNCTION_65
0x4009a6b	            0x7405	                            je 0x4009a72	      4670	buffer.c	FUNCTION_65
0x4009a6d	      0xe800000000	                          call 0x4009a72	      4670	buffer.c	FUNCTION_65
0x4009a72	    0x4881c4280a00	                          add rsp, 0xa28	      4670	buffer.c	FUNCTION_65
0x4009a79	              0x5b	                                 pop rbx	      4670	buffer.c	FUNCTION_65
0x4009a7a	              0x5d	                                 pop rbp	      4670	buffer.c	FUNCTION_65
0x4009a7b	              0xc3	                                     ret	      4670	buffer.c	FUNCTION_65
empty_curbuf	CALL,8:functions,0:SWITCH,0:FOR,0:ELSE,0:DO,0:WHILE,0:IF,4	76
0x4001c69	              0x55	                                push rbp	      1216	buffer.c	FUNCTION_18
0x4001c6a	          0x4889e5	                            mov rbp, rsp	      1216	buffer.c	FUNCTION_18
0x4001c6d	        0x4883ec40	                           sub rsp, 0x40	      1216	buffer.c	FUNCTION_18
0x4001c71	          0x897dcc	             mov dword [rbp - 0x34], edi	      1216	buffer.c	FUNCTION_18
0x4001c74	          0x8975c8	             mov dword [rbp - 0x38], esi	      1216	buffer.c	FUNCTION_18
0x4001c77	          0x8955c4	             mov dword [rbp - 0x3c], edx	      1216	buffer.c	FUNCTION_18
0x4001c7a	    0x64488b042528	                mov rax, qword fs:[0x28]	      1216	buffer.c	FUNCTION_18
0x4001c83	        0x488945f8	                mov qword [rbp - 8], rax	      1216	buffer.c	FUNCTION_18
0x4001c87	            0x31c0	                            xor eax, eax	      1216	buffer.c	FUNCTION_18
0x4001c89	    0x488b05000000	            mov rax, qword [0x04001c90] 	      1218	buffer.c	FUNCTION_18
0x4001c90	        0x488945d8	             mov qword [rbp - 0x28], rax	      1218	buffer.c	FUNCTION_18
0x4001c94	        0x837dc402	               cmp dword [rbp - 0x3c], 2	      1221	buffer.c	FUNCTION_18	IF_1
0x4001c98	            0x751c	                           jne 0x4001cb6	      1221	buffer.c	FUNCTION_18	IF_1
0x4001c9a	      0xbf00000000	                              mov edi, 0	      1223	buffer.c	FUNCTION_18	IF_1	CALL_2
0x4001c9f	      0xe800000000	                          call 0x4001ca4	      1223	buffer.c	FUNCTION_18	IF_1	CALL_2
0x4001ca4	          0x4889c7	                            mov rdi, rax	      1223	buffer.c	FUNCTION_18	IF_1	CALL_2
0x4001ca7	      0xe800000000	                          call 0x4001cac	      1223	buffer.c	FUNCTION_18	IF_1	CALL_2
0x4001cac	      0xb800000000	                              mov eax, 0	      1224	buffer.c	FUNCTION_18	IF_1
0x4001cb1	      0xe9ca000000	                           jmp 0x4001d80	      1224	buffer.c	FUNCTION_18	IF_1
0x4001cb6	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1227	buffer.c	FUNCTION_18	CALL_3
0x4001cba	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1227	buffer.c	FUNCTION_18	CALL_3
0x4001cbe	          0x4889d6	                            mov rsi, rdx	      1227	buffer.c	FUNCTION_18	CALL_3
0x4001cc1	          0x4889c7	                            mov rdi, rax	      1227	buffer.c	FUNCTION_18	CALL_3
0x4001cc4	      0xe800000000	                          call 0x4001cc9	      1227	buffer.c	FUNCTION_18	CALL_3
0x4001cc9	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      1228	buffer.c	FUNCTION_18	IF_2
0x4001ccd	            0x7411	                            je 0x4001ce0	      1228	buffer.c	FUNCTION_18	IF_2
0x4001ccf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1230	buffer.c	FUNCTION_18	CALL_4
0x4001cd3	      0xbe01000000	                              mov esi, 1	      1230	buffer.c	FUNCTION_18	CALL_4
0x4001cd8	          0x4889c7	                            mov rdi, rax	      1230	buffer.c	FUNCTION_18	CALL_4
0x4001cdb	      0xe800000000	                          call 0x4001ce0	      1230	buffer.c	FUNCTION_18	CALL_4
0x4001ce0	      0xe800000000	                          call 0x4001ce5	      1232	buffer.c	FUNCTION_18	CALL_5
0x4001ce5	    0x488b05000000	            mov rax, qword [0x04001cec] 	      1233	buffer.c	FUNCTION_18	CALL_6
0x4001cec	        0x837dc800	               cmp dword [rbp - 0x38], 0	      1233	buffer.c	FUNCTION_18	CALL_6
0x4001cf0	            0x7407	                            je 0x4001cf9	      1233	buffer.c	FUNCTION_18	CALL_6
0x4001cf2	      0xba08000000	                              mov edx, 8	      1233	buffer.c	FUNCTION_18	CALL_6
0x4001cf7	            0xeb05	                           jmp 0x4001cfe	      1233	buffer.c	FUNCTION_18	CALL_6
0x4001cf9	      0xba00000000	                              mov edx, 0	      1233	buffer.c	FUNCTION_18	CALL_6
0x4001cfe	        0x4883ec08	                              sub rsp, 8	      1233	buffer.c	FUNCTION_18	CALL_6
0x4001d02	              0x50	                                push rax	      1233	buffer.c	FUNCTION_18	CALL_6
0x4001d03	          0x4189d1	                            mov r9d, edx	      1233	buffer.c	FUNCTION_18	CALL_6
0x4001d06	    0x41b801000000	                              mov r8d, 1	      1233	buffer.c	FUNCTION_18	CALL_6
0x4001d0c	      0xb900000000	                              mov ecx, 0	      1233	buffer.c	FUNCTION_18	CALL_6
0x4001d11	      0xba00000000	                              mov edx, 0	      1233	buffer.c	FUNCTION_18	CALL_6
0x4001d16	      0xbe00000000	                              mov esi, 0	      1233	buffer.c	FUNCTION_18	CALL_6
0x4001d1b	      0xbf00000000	                              mov edi, 0	      1233	buffer.c	FUNCTION_18	CALL_6
0x4001d20	      0xe800000000	                          call 0x4001d25	      1233	buffer.c	FUNCTION_18	CALL_6
0x4001d25	        0x4883c410	                           add rsp, 0x10	      1233	buffer.c	FUNCTION_18	CALL_6
0x4001d29	          0x8945d4	             mov dword [rbp - 0x2c], eax	      1233	buffer.c	FUNCTION_18	CALL_6
0x4001d2c	    0x488b05000000	            mov rax, qword [0x04001d33] 	      1241	buffer.c	FUNCTION_18	IF_3	CALL_7
0x4001d33	        0x483945d8	            cmp qword [rbp - 0x28], rax 	      1241	buffer.c	FUNCTION_18	IF_3	CALL_7
0x4001d37	            0x7434	                            je 0x4001d6d	      1241	buffer.c	FUNCTION_18	IF_3	CALL_7
0x4001d39	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1241	buffer.c	FUNCTION_18	IF_3	CALL_7
0x4001d3d	          0x4889c7	                            mov rdi, rax	      1241	buffer.c	FUNCTION_18	IF_3	CALL_7
0x4001d40	      0xe800000000	                          call 0x4001d45	      1241	buffer.c	FUNCTION_18	IF_3	CALL_7
0x4001d45	            0x85c0	                           test eax, eax	      1241	buffer.c	FUNCTION_18	IF_3	CALL_7
0x4001d47	            0x7424	                            je 0x4001d6d	      1241	buffer.c	FUNCTION_18	IF_3	CALL_7
0x4001d49	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1241	buffer.c	FUNCTION_18	IF_3	CALL_7
0x4001d4d	          0x8b4078	            mov eax, dword [rax + 0x78] 	      1241	buffer.c	FUNCTION_18	IF_3	CALL_7
0x4001d50	            0x85c0	                           test eax, eax	      1241	buffer.c	FUNCTION_18	IF_3	CALL_7
0x4001d52	            0x7519	                           jne 0x4001d6d	      1241	buffer.c	FUNCTION_18	IF_3	CALL_7
0x4001d54	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      1242	buffer.c	FUNCTION_18	CALL_8
0x4001d57	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1242	buffer.c	FUNCTION_18	CALL_8
0x4001d5b	      0xb900000000	                              mov ecx, 0	      1242	buffer.c	FUNCTION_18	CALL_8
0x4001d60	          0x4889c6	                            mov rsi, rax	      1242	buffer.c	FUNCTION_18	CALL_8
0x4001d63	      0xbf00000000	                              mov edi, 0	      1242	buffer.c	FUNCTION_18	CALL_8
0x4001d68	      0xe800000000	                          call 0x4001d6d	      1242	buffer.c	FUNCTION_18	CALL_8
0x4001d6d	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      1243	buffer.c	FUNCTION_18	IF_4
0x4001d71	            0x750a	                           jne 0x4001d7d	      1243	buffer.c	FUNCTION_18	IF_4
0x4001d73	    0xc70500000000	               mov dword [0x04001d7d], 0	      1244	buffer.c	FUNCTION_18	IF_4
0x4001d7d	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1245	buffer.c	FUNCTION_18
0x4001d80	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1246	buffer.c	FUNCTION_18
0x4001d84	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1246	buffer.c	FUNCTION_18
0x4001d8d	            0x7405	                            je 0x4001d94	      1246	buffer.c	FUNCTION_18
0x4001d8f	      0xe800000000	                          call 0x4001d94	      1246	buffer.c	FUNCTION_18
0x4001d94	              0xc9	                                   leave	      1246	buffer.c	FUNCTION_18
0x4001d95	              0xc3	                                     ret	      1246	buffer.c	FUNCTION_18
buflist_setfpos	CALL,5:functions,0:SWITCH,0:FOR,1:ELSE,2:DO,0:WHILE,0:IF,10	129
0x400493f	              0x55	                                push rbp	      2757	buffer.c	FUNCTION_39
0x4004940	          0x4889e5	                            mov rbp, rsp	      2757	buffer.c	FUNCTION_39
0x4004943	        0x4883ec30	                           sub rsp, 0x30	      2757	buffer.c	FUNCTION_39
0x4004947	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2757	buffer.c	FUNCTION_39
0x400494b	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2757	buffer.c	FUNCTION_39
0x400494f	        0x488955d8	             mov qword [rbp - 0x28], rdx	      2757	buffer.c	FUNCTION_39
0x4004953	          0x894dd4	             mov dword [rbp - 0x2c], ecx	      2757	buffer.c	FUNCTION_39
0x4004956	        0x448945d0	             mov dword [rbp - 0x30], r8d	      2757	buffer.c	FUNCTION_39
0x400495a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2760	buffer.c	FUNCTION_39	FOR_1
0x400495e	    0x488b80280100	           mov rax, qword [rax + 0x128] 	      2760	buffer.c	FUNCTION_39	FOR_1
0x4004965	        0x488945f8	                mov qword [rbp - 8], rax	      2760	buffer.c	FUNCTION_39	FOR_1
0x4004969	            0xeb19	                           jmp 0x4004984	      2760	buffer.c	FUNCTION_39	FOR_1
0x400496b	        0x488b45f8	                mov rax, qword [rbp - 8]	      2761	buffer.c	FUNCTION_39	FOR_1	IF_1
0x400496f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2761	buffer.c	FUNCTION_39	FOR_1	IF_1
0x4004973	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      2761	buffer.c	FUNCTION_39	FOR_1	IF_1
0x4004977	            0x7414	                            je 0x400498d	      2761	buffer.c	FUNCTION_39	FOR_1	IF_1
0x4004979	        0x488b45f8	                mov rax, qword [rbp - 8]	      2760	buffer.c	FUNCTION_39	FOR_1
0x400497d	          0x488b00	                    mov rax, qword [rax]	      2760	buffer.c	FUNCTION_39	FOR_1
0x4004980	        0x488945f8	                mov qword [rbp - 8], rax	      2760	buffer.c	FUNCTION_39	FOR_1
0x4004984	      0x48837df800	                  cmp qword [rbp - 8], 0	      2760	buffer.c	FUNCTION_39	FOR_1
0x4004989	            0x75e0	                           jne 0x400496b	      2760	buffer.c	FUNCTION_39	FOR_1
0x400498b	            0xeb01	                           jmp 0x400498e	      2760	buffer.c	FUNCTION_39	FOR_1
0x400498d	              0x90	                                     nop	      2762	buffer.c	FUNCTION_39	FOR_1	IF_1
0x400498e	      0x48837df800	                  cmp qword [rbp - 8], 0	      2763	buffer.c	FUNCTION_39	IF_2
0x4004993	            0x753d	                           jne 0x40049d2	      2763	buffer.c	FUNCTION_39	IF_2
0x4004995	      0xbf08020000	                          mov edi, 0x208	      2766	buffer.c	FUNCTION_39	IF_2	CALL_1
0x400499a	      0xe800000000	                          call 0x400499f	      2766	buffer.c	FUNCTION_39	IF_2	CALL_1
0x400499f	        0x488945f8	                mov qword [rbp - 8], rax	      2766	buffer.c	FUNCTION_39	IF_2	CALL_1
0x40049a3	      0x48837df800	                  cmp qword [rbp - 8], 0	      2767	buffer.c	FUNCTION_39	IF_2	IF_3
0x40049a8	     0xf8477010000	                            je 0x4004b25	      2767	buffer.c	FUNCTION_39	IF_2	IF_3
0x40049ae	        0x488b45f8	                mov rax, qword [rbp - 8]	      2769	buffer.c	FUNCTION_39	IF_2
0x40049b2	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2769	buffer.c	FUNCTION_39	IF_2
0x40049b6	        0x48895010	             mov qword [rax + 0x10], rdx	      2769	buffer.c	FUNCTION_39	IF_2
0x40049ba	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      2770	buffer.c	FUNCTION_39	IF_2	IF_4
0x40049bf	     0xf8592000000	                           jne 0x4004a57	      2770	buffer.c	FUNCTION_39	IF_2	IF_4
0x40049c5	    0x48c745d80100	               mov qword [rbp - 0x28], 1	      2771	buffer.c	FUNCTION_39	IF_2	IF_4
0x40049cd	      0xe985000000	                           jmp 0x4004a57	      2771	buffer.c	FUNCTION_39	IF_2	IF_4
0x40049d2	        0x488b45f8	                mov rax, qword [rbp - 8]	      2776	buffer.c	FUNCTION_39	ELSE_1	IF_5
0x40049d6	        0x488b4008	                mov rax, qword [rax + 8]	      2776	buffer.c	FUNCTION_39	ELSE_1	IF_5
0x40049da	          0x4885c0	                           test rax, rax	      2776	buffer.c	FUNCTION_39	ELSE_1	IF_5
0x40049dd	            0x7414	                            je 0x40049f3	      2776	buffer.c	FUNCTION_39	ELSE_1	IF_5
0x40049df	        0x488b45f8	                mov rax, qword [rbp - 8]	      2777	buffer.c	FUNCTION_39	ELSE_1	IF_5
0x40049e3	        0x488b4008	                mov rax, qword [rax + 8]	      2777	buffer.c	FUNCTION_39	ELSE_1	IF_5
0x40049e7	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2777	buffer.c	FUNCTION_39	ELSE_1	IF_5
0x40049eb	          0x488b12	                    mov rdx, qword [rdx]	      2777	buffer.c	FUNCTION_39	ELSE_1	IF_5
0x40049ee	          0x488910	                    mov qword [rax], rdx	      2777	buffer.c	FUNCTION_39	ELSE_1	IF_5
0x40049f1	            0xeb12	                           jmp 0x4004a05	      2777	buffer.c	FUNCTION_39	ELSE_1	IF_5
0x40049f3	        0x488b45f8	                mov rax, qword [rbp - 8]	      2779	buffer.c	FUNCTION_39	ELSE_1	ELSE_2
0x40049f7	          0x488b10	                    mov rdx, qword [rax]	      2779	buffer.c	FUNCTION_39	ELSE_1	ELSE_2
0x40049fa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2779	buffer.c	FUNCTION_39	ELSE_1	ELSE_2
0x40049fe	    0x488990280100	            mov qword [rax + 0x128], rdx	      2779	buffer.c	FUNCTION_39	ELSE_1	ELSE_2
0x4004a05	        0x488b45f8	                mov rax, qword [rbp - 8]	      2780	buffer.c	FUNCTION_39	ELSE_1	IF_6
0x4004a09	          0x488b00	                    mov rax, qword [rax]	      2780	buffer.c	FUNCTION_39	ELSE_1	IF_6
0x4004a0c	          0x4885c0	                           test rax, rax	      2780	buffer.c	FUNCTION_39	ELSE_1	IF_6
0x4004a0f	            0x7413	                            je 0x4004a24	      2780	buffer.c	FUNCTION_39	ELSE_1	IF_6
0x4004a11	        0x488b45f8	                mov rax, qword [rbp - 8]	      2781	buffer.c	FUNCTION_39	ELSE_1	IF_6
0x4004a15	          0x488b00	                    mov rax, qword [rax]	      2781	buffer.c	FUNCTION_39	ELSE_1	IF_6
0x4004a18	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2781	buffer.c	FUNCTION_39	ELSE_1	IF_6
0x4004a1c	        0x488b5208	                mov rdx, qword [rdx + 8]	      2781	buffer.c	FUNCTION_39	ELSE_1	IF_6
0x4004a20	        0x48895008	                mov qword [rax + 8], rdx	      2781	buffer.c	FUNCTION_39	ELSE_1	IF_6
0x4004a24	        0x837dd000	               cmp dword [rbp - 0x30], 0	      2782	buffer.c	FUNCTION_39	ELSE_1	IF_7
0x4004a28	            0x742d	                            je 0x4004a57	      2782	buffer.c	FUNCTION_39	ELSE_1	IF_7
0x4004a2a	        0x488b45f8	                mov rax, qword [rbp - 8]	      2782	buffer.c	FUNCTION_39	ELSE_1	IF_7
0x4004a2e	          0x8b4028	            mov eax, dword [rax + 0x28] 	      2782	buffer.c	FUNCTION_39	ELSE_1	IF_7
0x4004a31	            0x85c0	                           test eax, eax	      2782	buffer.c	FUNCTION_39	ELSE_1	IF_7
0x4004a33	            0x7422	                            je 0x4004a57	      2782	buffer.c	FUNCTION_39	ELSE_1	IF_7
0x4004a35	        0x488b45f8	                mov rax, qword [rbp - 8]	      2784	buffer.c	FUNCTION_39	ELSE_1	IF_7	CALL_2
0x4004a39	        0x4883c030	                           add rax, 0x30	      2784	buffer.c	FUNCTION_39	ELSE_1	IF_7	CALL_2
0x4004a3d	          0x4889c7	                            mov rdi, rax	      2784	buffer.c	FUNCTION_39	ELSE_1	IF_7	CALL_2
0x4004a40	      0xe800000000	                          call 0x4004a45	      2784	buffer.c	FUNCTION_39	ELSE_1	IF_7	CALL_2
0x4004a45	        0x488b45f8	                mov rax, qword [rbp - 8]	      2786	buffer.c	FUNCTION_39	ELSE_1	IF_7	CALL_3
0x4004a49	    0x4805f0010000	                          add rax, 0x1f0	      2786	buffer.c	FUNCTION_39	ELSE_1	IF_7	CALL_3
0x4004a4f	          0x4889c7	                            mov rdi, rax	      2786	buffer.c	FUNCTION_39	ELSE_1	IF_7	CALL_3
0x4004a52	      0xe800000000	                          call 0x4004a57	      2786	buffer.c	FUNCTION_39	ELSE_1	IF_7	CALL_3
0x4004a57	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      2790	buffer.c	FUNCTION_39	IF_8
0x4004a5c	            0x7416	                            je 0x4004a74	      2790	buffer.c	FUNCTION_39	IF_8
0x4004a5e	        0x488b45f8	                mov rax, qword [rbp - 8]	      2792	buffer.c	FUNCTION_39	IF_8
0x4004a62	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2792	buffer.c	FUNCTION_39	IF_8
0x4004a66	        0x48895018	             mov qword [rax + 0x18], rdx	      2792	buffer.c	FUNCTION_39	IF_8
0x4004a6a	        0x488b45f8	                mov rax, qword [rbp - 8]	      2793	buffer.c	FUNCTION_39	IF_8
0x4004a6e	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      2793	buffer.c	FUNCTION_39	IF_8
0x4004a71	          0x895020	             mov dword [rax + 0x20], edx	      2793	buffer.c	FUNCTION_39	IF_8
0x4004a74	        0x837dd000	               cmp dword [rbp - 0x30], 0	      2795	buffer.c	FUNCTION_39	IF_9
0x4004a78	            0x7460	                            je 0x4004ada	      2795	buffer.c	FUNCTION_39	IF_9
0x4004a7a	        0x488b45f8	                mov rax, qword [rbp - 8]	      2798	buffer.c	FUNCTION_39	IF_9	CALL_4
0x4004a7e	        0x488d5030	                   lea rdx, [rax + 0x30]	      2798	buffer.c	FUNCTION_39	IF_9	CALL_4
0x4004a82	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2798	buffer.c	FUNCTION_39	IF_9	CALL_4
0x4004a86	    0x4805b0010000	                          add rax, 0x1b0	      2798	buffer.c	FUNCTION_39	IF_9	CALL_4
0x4004a8c	          0x4889d6	                            mov rsi, rdx	      2798	buffer.c	FUNCTION_39	IF_9	CALL_4
0x4004a8f	          0x4889c7	                            mov rdi, rax	      2798	buffer.c	FUNCTION_39	IF_9	CALL_4
0x4004a92	      0xe800000000	                          call 0x4004a97	      2798	buffer.c	FUNCTION_39	IF_9	CALL_4
0x4004a97	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2800	buffer.c	FUNCTION_39	IF_9
0x4004a9b	     0xfb680200100	          movzx eax, byte [rax + 0x120] 	      2800	buffer.c	FUNCTION_39	IF_9
0x4004aa2	           0xfbed0	                           movsx edx, al	      2800	buffer.c	FUNCTION_39	IF_9
0x4004aa5	        0x488b45f8	                mov rax, qword [rbp - 8]	      2800	buffer.c	FUNCTION_39	IF_9
0x4004aa9	    0x8990e8010000	            mov dword [rax + 0x1e8], edx	      2800	buffer.c	FUNCTION_39	IF_9
0x4004aaf	        0x488b45f8	                mov rax, qword [rbp - 8]	      2801	buffer.c	FUNCTION_39	IF_9	CALL_5
0x4004ab3	    0x488d90f00100	                  lea rdx, [rax + 0x1f0]	      2801	buffer.c	FUNCTION_39	IF_9	CALL_5
0x4004aba	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2801	buffer.c	FUNCTION_39	IF_9	CALL_5
0x4004abe	    0x480508010000	                          add rax, 0x108	      2801	buffer.c	FUNCTION_39	IF_9	CALL_5
0x4004ac4	          0x4889d6	                            mov rsi, rdx	      2801	buffer.c	FUNCTION_39	IF_9	CALL_5
0x4004ac7	          0x4889c7	                            mov rdi, rax	      2801	buffer.c	FUNCTION_39	IF_9	CALL_5
0x4004aca	      0xe800000000	                          call 0x4004acf	      2801	buffer.c	FUNCTION_39	IF_9	CALL_5
0x4004acf	        0x488b45f8	                mov rax, qword [rbp - 8]	      2803	buffer.c	FUNCTION_39	IF_9
0x4004ad3	    0xc74028010000	               mov dword [rax + 0x28], 1	      2803	buffer.c	FUNCTION_39	IF_9
0x4004ada	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2807	buffer.c	FUNCTION_39
0x4004ade	    0x488b90280100	           mov rdx, qword [rax + 0x128] 	      2807	buffer.c	FUNCTION_39
0x4004ae5	        0x488b45f8	                mov rax, qword [rbp - 8]	      2807	buffer.c	FUNCTION_39
0x4004ae9	          0x488910	                    mov qword [rax], rdx	      2807	buffer.c	FUNCTION_39
0x4004aec	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2808	buffer.c	FUNCTION_39
0x4004af0	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2808	buffer.c	FUNCTION_39
0x4004af4	    0x488990280100	            mov qword [rax + 0x128], rdx	      2808	buffer.c	FUNCTION_39
0x4004afb	        0x488b45f8	                mov rax, qword [rbp - 8]	      2809	buffer.c	FUNCTION_39
0x4004aff	    0x48c740080000	                  mov qword [rax + 8], 0	      2809	buffer.c	FUNCTION_39
0x4004b07	        0x488b45f8	                mov rax, qword [rbp - 8]	      2810	buffer.c	FUNCTION_39	IF_10
0x4004b0b	          0x488b00	                    mov rax, qword [rax]	      2810	buffer.c	FUNCTION_39	IF_10
0x4004b0e	          0x4885c0	                           test rax, rax	      2810	buffer.c	FUNCTION_39	IF_10
0x4004b11	            0x7415	                            je 0x4004b28	      2810	buffer.c	FUNCTION_39	IF_10
0x4004b13	        0x488b45f8	                mov rax, qword [rbp - 8]	      2811	buffer.c	FUNCTION_39	IF_10
0x4004b17	          0x488b00	                    mov rax, qword [rax]	      2811	buffer.c	FUNCTION_39	IF_10
0x4004b1a	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2811	buffer.c	FUNCTION_39	IF_10
0x4004b1e	        0x48895008	                mov qword [rax + 8], rdx	      2811	buffer.c	FUNCTION_39	IF_10
0x4004b22	              0x90	                                     nop	      2813	buffer.c	FUNCTION_39
0x4004b23	            0xeb03	                           jmp 0x4004b28	      2813	buffer.c	FUNCTION_39
0x4004b25	              0x90	                                     nop	      2768	buffer.c	FUNCTION_39	IF_2	IF_3
0x4004b26	            0xeb01	                           jmp 0x4004b29	      2768	buffer.c	FUNCTION_39	IF_2	IF_3
0x4004b28	              0x90	                                     nop	      2813	buffer.c	FUNCTION_39
0x4004b29	              0xc9	                                   leave	      2814	buffer.c	FUNCTION_39
0x4004b2a	              0xc3	                                     ret	      2814	buffer.c	FUNCTION_39
handle_swap_exists	CALL,12:functions,0:SWITCH,0:FOR,0:ELSE,2:DO,0:WHILE,0:IF,5	87
0x40017c0	              0x55	                                push rbp	      1009	buffer.c	FUNCTION_16
0x40017c1	          0x4889e5	                            mov rbp, rsp	      1009	buffer.c	FUNCTION_16
0x40017c4	        0x4883ec40	                           sub rsp, 0x40	      1009	buffer.c	FUNCTION_16
0x40017c8	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1009	buffer.c	FUNCTION_16
0x40017cc	    0x64488b042528	                mov rax, qword fs:[0x28]	      1009	buffer.c	FUNCTION_16
0x40017d5	        0x488945f8	                mov qword [rbp - 8], rax	      1009	buffer.c	FUNCTION_16
0x40017d9	            0x31c0	                            xor eax, eax	      1009	buffer.c	FUNCTION_16
0x40017db	    0x488b05000000	            mov rax, qword [0x040017e2] 	      1014	buffer.c	FUNCTION_16
0x40017e2	    0x488b80b81500	          mov rax, qword [rax + 0x15b8] 	      1014	buffer.c	FUNCTION_16
0x40017e9	        0x488945d8	             mov qword [rbp - 0x28], rax	      1014	buffer.c	FUNCTION_16
0x40017ed	    0x8b0500000000	            mov eax, dword [0x040017f3] 	      1018	buffer.c	FUNCTION_16	IF_1
0x40017f3	          0x83f802	                              cmp eax, 2	      1018	buffer.c	FUNCTION_16	IF_1
0x40017f6	     0xf85d8000000	                           jne 0x40018d4	      1018	buffer.c	FUNCTION_16	IF_1
0x40017fc	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1023	buffer.c	FUNCTION_16	IF_1	CALL_1
0x4001800	          0x4889c7	                            mov rdi, rax	      1023	buffer.c	FUNCTION_16	IF_1	CALL_1
0x4001803	      0xe800000000	                          call 0x4001808	      1023	buffer.c	FUNCTION_16	IF_1	CALL_1
0x4001808	    0xc70500000000	               mov dword [0x04001812], 0	      1029	buffer.c	FUNCTION_16	IF_1
0x4001812	    0xc70500000000	               mov dword [0x0400181c], 1	      1030	buffer.c	FUNCTION_16	IF_1
0x400181c	    0x488b35000000	            mov rsi, qword [0x04001823] 	      1031	buffer.c	FUNCTION_16	IF_1	CALL_2
0x4001823	    0x488b05000000	            mov rax, qword [0x0400182a] 	      1031	buffer.c	FUNCTION_16	IF_1	CALL_2
0x400182a	      0xb900000000	                              mov ecx, 0	      1031	buffer.c	FUNCTION_16	IF_1	CALL_2
0x400182f	      0xba02000000	                              mov edx, 2	      1031	buffer.c	FUNCTION_16	IF_1	CALL_2
0x4001834	          0x4889c7	                            mov rdi, rax	      1031	buffer.c	FUNCTION_16	IF_1	CALL_2
0x4001837	      0xe800000000	                          call 0x400183c	      1031	buffer.c	FUNCTION_16	IF_1	CALL_2
0x400183c	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      1032	buffer.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x4001841	            0x7423	                            je 0x4001866	      1032	buffer.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x4001843	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1032	buffer.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x4001847	          0x4889c7	                            mov rdi, rax	      1032	buffer.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x400184a	      0xe800000000	                          call 0x400184f	      1032	buffer.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x400184f	            0x85c0	                           test eax, eax	      1032	buffer.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x4001851	            0x7413	                            je 0x4001866	      1032	buffer.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x4001853	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1033	buffer.c	FUNCTION_16	IF_1	IF_2
0x4001857	          0x488b10	                    mov rdx, qword [rax]	      1033	buffer.c	FUNCTION_16	IF_1	IF_2
0x400185a	    0x488b05000000	            mov rax, qword [0x04001861] 	      1033	buffer.c	FUNCTION_16	IF_1	IF_2
0x4001861	          0x4839c2	                            cmp rdx, rax	      1033	buffer.c	FUNCTION_16	IF_1	IF_2
0x4001864	            0x751f	                           jne 0x4001885	      1033	buffer.c	FUNCTION_16	IF_1	IF_2
0x4001866	      0xb903000000	                              mov ecx, 3	      1034	buffer.c	FUNCTION_16	IF_1	CALL_4
0x400186b	      0xba01000000	                              mov edx, 1	      1034	buffer.c	FUNCTION_16	IF_1	CALL_4
0x4001870	      0xbe00000000	                              mov esi, 0	      1034	buffer.c	FUNCTION_16	IF_1	CALL_4
0x4001875	      0xbf00000000	                              mov edi, 0	      1034	buffer.c	FUNCTION_16	IF_1	CALL_4
0x400187a	      0xe800000000	                          call 0x400187f	      1034	buffer.c	FUNCTION_16	IF_1	CALL_4
0x400187f	        0x488945d0	             mov qword [rbp - 0x30], rax	      1034	buffer.c	FUNCTION_16	IF_1	CALL_4
0x4001883	            0xeb0b	                           jmp 0x4001890	      1034	buffer.c	FUNCTION_16	IF_1	CALL_4
0x4001885	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1036	buffer.c	FUNCTION_16	IF_1	ELSE_1
0x4001889	          0x488b00	                    mov rax, qword [rax]	      1036	buffer.c	FUNCTION_16	IF_1	ELSE_1
0x400188c	        0x488945d0	             mov qword [rbp - 0x30], rax	      1036	buffer.c	FUNCTION_16	IF_1	ELSE_1
0x4001890	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      1037	buffer.c	FUNCTION_16	IF_1	ELSE_1	IF_3
0x4001895	            0x742f	                            je 0x40018c6	      1037	buffer.c	FUNCTION_16	IF_1	ELSE_1	IF_3
0x4001897	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1039	buffer.c	FUNCTION_16	IF_1	ELSE_1	IF_3	CALL_5
0x400189b	          0x4889c7	                            mov rdi, rax	      1039	buffer.c	FUNCTION_16	IF_1	ELSE_1	IF_3	CALL_5
0x400189e	      0xe800000000	                          call 0x40018a3	      1039	buffer.c	FUNCTION_16	IF_1	ELSE_1	IF_3	CALL_5
0x40018a3	    0x488b05000000	            mov rax, qword [0x040018aa] 	      1041	buffer.c	FUNCTION_16	IF_1	ELSE_1	IF_3	IF_4
0x40018aa	    0x488b80b81500	          mov rax, qword [rax + 0x15b8] 	      1041	buffer.c	FUNCTION_16	IF_1	ELSE_1	IF_3	IF_4
0x40018b1	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      1041	buffer.c	FUNCTION_16	IF_1	ELSE_1	IF_3	IF_4
0x40018b5	            0x740f	                            je 0x40018c6	      1041	buffer.c	FUNCTION_16	IF_1	ELSE_1	IF_3	IF_4
0x40018b7	    0x488b05000000	            mov rax, qword [0x040018be] 	      1042	buffer.c	FUNCTION_16	IF_1	ELSE_1	IF_3	CALL_6
0x40018be	          0x4889c7	                            mov rdi, rax	      1042	buffer.c	FUNCTION_16	IF_1	ELSE_1	IF_3	CALL_6
0x40018c1	      0xe800000000	                          call 0x40018c6	      1042	buffer.c	FUNCTION_16	IF_1	ELSE_1	IF_3	CALL_6
0x40018c6	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1050	buffer.c	FUNCTION_16	IF_1	CALL_7
0x40018ca	          0x4889c7	                            mov rdi, rax	      1050	buffer.c	FUNCTION_16	IF_1	CALL_7
0x40018cd	      0xe800000000	                          call 0x40018d2	      1050	buffer.c	FUNCTION_16	IF_1	CALL_7
0x40018d2	            0xeb52	                           jmp 0x4001926	      1050	buffer.c	FUNCTION_16	IF_1	CALL_7
0x40018d4	    0x8b0500000000	            mov eax, dword [0x040018da] 	      1053	buffer.c	FUNCTION_16	ELSE_2	IF_5
0x40018da	          0x83f803	                              cmp eax, 3	      1053	buffer.c	FUNCTION_16	ELSE_2	IF_5
0x40018dd	            0x7547	                           jne 0x4001926	      1053	buffer.c	FUNCTION_16	ELSE_2	IF_5
0x40018df	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1058	buffer.c	FUNCTION_16	ELSE_2	IF_5	CALL_8
0x40018e3	          0x4889c7	                            mov rdi, rax	      1058	buffer.c	FUNCTION_16	ELSE_2	IF_5	CALL_8
0x40018e6	      0xe800000000	                          call 0x40018eb	      1058	buffer.c	FUNCTION_16	ELSE_2	IF_5	CALL_8
0x40018eb	    0xc70500000000	               mov dword [0x040018f5], 1	      1062	buffer.c	FUNCTION_16	ELSE_2	IF_5
0x40018f5	      0xe800000000	                          call 0x40018fa	      1063	buffer.c	FUNCTION_16	ELSE_2	IF_5	CALL_9
0x40018fa	      0xbf00000000	                              mov edi, 0	      1064	buffer.c	FUNCTION_16	ELSE_2	IF_5	CALL_10
0x40018ff	      0xe800000000	                          call 0x4001904	      1064	buffer.c	FUNCTION_16	ELSE_2	IF_5	CALL_10
0x4001904	    0x8b0500000000	            mov eax, dword [0x0400190a] 	      1065	buffer.c	FUNCTION_16	ELSE_2	IF_5
0x400190a	    0x890500000000	            mov dword [0x04001910], eax 	      1065	buffer.c	FUNCTION_16	ELSE_2	IF_5
0x4001910	      0xbf00000000	                              mov edi, 0	      1066	buffer.c	FUNCTION_16	ELSE_2	IF_5	CALL_11
0x4001915	      0xe800000000	                          call 0x400191a	      1066	buffer.c	FUNCTION_16	ELSE_2	IF_5	CALL_11
0x400191a	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1071	buffer.c	FUNCTION_16	ELSE_2	IF_5	CALL_12
0x400191e	          0x4889c7	                            mov rdi, rax	      1071	buffer.c	FUNCTION_16	ELSE_2	IF_5	CALL_12
0x4001921	      0xe800000000	                          call 0x4001926	      1071	buffer.c	FUNCTION_16	ELSE_2	IF_5	CALL_12
0x4001926	    0xc70500000000	               mov dword [0x04001930], 0	      1074	buffer.c	FUNCTION_16
0x4001930	              0x90	                                     nop	      1075	buffer.c	FUNCTION_16
0x4001931	        0x488b45f8	                mov rax, qword [rbp - 8]	      1075	buffer.c	FUNCTION_16
0x4001935	    0x644833042528	                xor rax, qword fs:[0x28]	      1075	buffer.c	FUNCTION_16
0x400193e	            0x7405	                            je 0x4001945	      1075	buffer.c	FUNCTION_16
0x4001940	      0xe800000000	                          call 0x4001945	      1075	buffer.c	FUNCTION_16
0x4001945	              0xc9	                                   leave	      1075	buffer.c	FUNCTION_16
0x4001946	              0xc3	                                     ret	      1075	buffer.c	FUNCTION_16
buf_getsigntype	CALL,3:functions,0:SWITCH,0:FOR,1:ELSE,0:DO,0:WHILE,0:IF,1	52
0x400bd92	              0x55	                                push rbp	      5914	buffer.c	FUNCTION_91
0x400bd93	          0x4889e5	                            mov rbp, rsp	      5914	buffer.c	FUNCTION_91
0x400bd96	        0x4883ec30	                           sub rsp, 0x30	      5914	buffer.c	FUNCTION_91
0x400bd9a	        0x48897de8	             mov qword [rbp - 0x18], rdi	      5914	buffer.c	FUNCTION_91
0x400bd9e	        0x488975e0	             mov qword [rbp - 0x20], rsi	      5914	buffer.c	FUNCTION_91
0x400bda2	          0x8955dc	             mov dword [rbp - 0x24], edx	      5914	buffer.c	FUNCTION_91
0x400bda5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5917	buffer.c	FUNCTION_91	FOR_1
0x400bda9	    0x488b80201c00	          mov rax, qword [rax + 0x1c20] 	      5917	buffer.c	FUNCTION_91	FOR_1
0x400bdb0	        0x488945f8	                mov qword [rbp - 8], rax	      5917	buffer.c	FUNCTION_91	FOR_1
0x400bdb4	            0xeb78	                           jmp 0x400be2e	      5917	buffer.c	FUNCTION_91	FOR_1
0x400bdb6	        0x488b45f8	                mov rax, qword [rbp - 8]	      5918	buffer.c	FUNCTION_91	FOR_1	IF_1
0x400bdba	        0x488b4008	                mov rax, qword [rax + 8]	      5918	buffer.c	FUNCTION_91	FOR_1	IF_1
0x400bdbe	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      5918	buffer.c	FUNCTION_91	FOR_1	IF_1
0x400bdc2	            0x755e	                           jne 0x400be22	      5918	buffer.c	FUNCTION_91	FOR_1	IF_1
0x400bdc4	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      5919	buffer.c	FUNCTION_91	FOR_1	IF_1
0x400bdc8	            0x744f	                            je 0x400be19	      5919	buffer.c	FUNCTION_91	FOR_1	IF_1
0x400bdca	        0x837ddc02	               cmp dword [rbp - 0x24], 2	      5921	buffer.c	FUNCTION_91	FOR_1	IF_1
0x400bdce	            0x7513	                           jne 0x400bde3	      5921	buffer.c	FUNCTION_91	FOR_1	IF_1
0x400bdd0	        0x488b45f8	                mov rax, qword [rbp - 8]	      5922	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_1
0x400bdd4	          0x8b4010	            mov eax, dword [rax + 0x10] 	      5922	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_1
0x400bdd7	            0x89c7	                            mov edi, eax	      5922	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_1
0x400bdd9	      0xe800000000	                          call 0x400bdde	      5922	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_1
0x400bdde	          0x4885c0	                           test rax, rax	      5922	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_1
0x400bde1	            0x7536	                           jne 0x400be19	      5922	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_1
0x400bde3	        0x837ddc03	               cmp dword [rbp - 0x24], 3	      5924	buffer.c	FUNCTION_91	FOR_1	IF_1
0x400bde7	            0x7513	                           jne 0x400bdfc	      5924	buffer.c	FUNCTION_91	FOR_1	IF_1
0x400bde9	        0x488b45f8	                mov rax, qword [rbp - 8]	      5925	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_2
0x400bded	          0x8b4010	            mov eax, dword [rax + 0x10] 	      5925	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_2
0x400bdf0	            0x89c7	                            mov edi, eax	      5925	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_2
0x400bdf2	      0xe800000000	                          call 0x400bdf7	      5925	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_2
0x400bdf7	          0x4885c0	                           test rax, rax	      5925	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_2
0x400bdfa	            0x751d	                           jne 0x400be19	      5925	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_2
0x400bdfc	        0x837ddc01	               cmp dword [rbp - 0x24], 1	      5926	buffer.c	FUNCTION_91	FOR_1	IF_1
0x400be00	            0x7520	                           jne 0x400be22	      5926	buffer.c	FUNCTION_91	FOR_1	IF_1
0x400be02	        0x488b45f8	                mov rax, qword [rbp - 8]	      5927	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_3
0x400be06	          0x8b4010	            mov eax, dword [rax + 0x10] 	      5927	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_3
0x400be09	      0xbe01000000	                              mov esi, 1	      5927	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_3
0x400be0e	            0x89c7	                            mov edi, eax	      5927	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_3
0x400be10	      0xe800000000	                          call 0x400be15	      5927	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_3
0x400be15	            0x85c0	                           test eax, eax	      5927	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_3
0x400be17	            0x7409	                            je 0x400be22	      5927	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_3
0x400be19	        0x488b45f8	                mov rax, qword [rbp - 8]	      5928	buffer.c	FUNCTION_91	FOR_1	IF_1
0x400be1d	          0x8b4010	            mov eax, dword [rax + 0x10] 	      5928	buffer.c	FUNCTION_91	FOR_1	IF_1
0x400be20	            0xeb18	                           jmp 0x400be3a	      5928	buffer.c	FUNCTION_91	FOR_1	IF_1
0x400be22	        0x488b45f8	                mov rax, qword [rbp - 8]	      5917	buffer.c	FUNCTION_91	FOR_1
0x400be26	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5917	buffer.c	FUNCTION_91	FOR_1
0x400be2a	        0x488945f8	                mov qword [rbp - 8], rax	      5917	buffer.c	FUNCTION_91	FOR_1
0x400be2e	      0x48837df800	                  cmp qword [rbp - 8], 0	      5917	buffer.c	FUNCTION_91	FOR_1
0x400be33	            0x7581	                           jne 0x400bdb6	      5917	buffer.c	FUNCTION_91	FOR_1
0x400be35	      0xb800000000	                              mov eax, 0	      5929	buffer.c	FUNCTION_91
0x400be3a	              0xc9	                                   leave	      5930	buffer.c	FUNCTION_91
0x400be3b	              0xc3	                                     ret	      5930	buffer.c	FUNCTION_91
