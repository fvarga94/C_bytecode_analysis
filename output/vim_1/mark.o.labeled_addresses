setmark	DO,0:FOR,0:WHILE,0:ELSE,0:functions,0:IF,0:CALL,1:SWITCH,0	8
0x40010f6	        0x4883ec08	                              sub rsp, 8	        45	mark.c	FUNCTION_1
0x40010fa	    0x488b05000000	            mov rax, qword [0x04001101] 	        46	mark.c	FUNCTION_1	CALL_1
0x4001101	    0x8b90b8000000	            mov edx, dword [rax + 0xb8] 	        46	mark.c	FUNCTION_1	CALL_1
0x4001107	    0x488b05000000	            mov rax, qword [0x0400110e] 	        46	mark.c	FUNCTION_1	CALL_1
0x400110e	        0x488d7038	                   lea rsi, [rax + 0x38]	        46	mark.c	FUNCTION_1	CALL_1
0x4001112	      0xe800000000	                          call 0x4001117	        46	mark.c	FUNCTION_1	CALL_1
0x4001117	        0x4883c408	                              add rsp, 8	        47	mark.c	FUNCTION_1
0x400111b	              0xc3	                                     ret	        47	mark.c	FUNCTION_1
movemark	DO,0:FOR,1:WHILE,0:ELSE,1:functions,0:IF,8:CALL,5:SWITCH,0	91
0x400268f	              0x55	                                push rbp	       220	mark.c	FUNCTION_5
0x4002690	              0x53	                                push rbx	       220	mark.c	FUNCTION_5
0x4002691	        0x4883ec08	                              sub rsp, 8	       220	mark.c	FUNCTION_5
0x4002695	            0x89fd	                            mov ebp, edi	       220	mark.c	FUNCTION_5
0x4002697	      0xbe01000000	                              mov esi, 1	       224	mark.c	FUNCTION_5	CALL_1
0x400269c	    0x488b3d000000	            mov rdi, qword [0x040026a3] 	       224	mark.c	FUNCTION_5	CALL_1
0x40026a3	      0xe800000000	                          call 0x40026a8	       224	mark.c	FUNCTION_5	CALL_1
0x40026a8	    0x488b05000000	            mov rax, qword [0x040026af] 	       226	mark.c	FUNCTION_5	IF_1
0x40026af	    0x8b9040150000	          mov edx, dword [rax + 0x1540] 	       226	mark.c	FUNCTION_5	IF_1
0x40026b5	            0x85d2	                           test edx, edx	       226	mark.c	FUNCTION_5	IF_1
0x40026b7	     0xf84fb000000	                            je 0x40027b8	       226	mark.c	FUNCTION_5	IF_1
0x40026bd	    0x8b8044150000	          mov eax, dword [rax + 0x1544] 	       231	mark.c	FUNCTION_5	FOR_1	IF_2
0x40026c3	            0x89e9	                            mov ecx, ebp	       231	mark.c	FUNCTION_5	FOR_1	IF_2
0x40026c5	             0x1c1	                            add ecx, eax	       231	mark.c	FUNCTION_5	FOR_1	IF_2
0x40026c7	     0xf88f2000000	                            js 0x40027bf	       231	mark.c	FUNCTION_5	FOR_1	IF_2
0x40026cd	            0x39ca	                            cmp edx, ecx	       232	mark.c	FUNCTION_5	FOR_1	IF_2
0x40026cf	            0x7f13	                            jg 0x40026e4	       232	mark.c	FUNCTION_5	FOR_1	IF_2
0x40026d1	      0xe9f0000000	                           jmp 0x40027c6	       232	mark.c	FUNCTION_5	FOR_1	IF_2
0x40026d6	    0x8b9240150000	          mov edx, dword [rdx + 0x1540] 	       232	mark.c	FUNCTION_5	FOR_1	IF_2
0x40026dc	            0x39d1	                            cmp ecx, edx	       232	mark.c	FUNCTION_5	FOR_1	IF_2
0x40026de	     0xf8de9000000	                           jge 0x40027cd	       232	mark.c	FUNCTION_5	FOR_1	IF_2
0x40026e4	            0x39d0	                            cmp eax, edx	       240	mark.c	FUNCTION_5	FOR_1	IF_3
0x40026e6	            0x7523	                           jne 0x400270b	       240	mark.c	FUNCTION_5	FOR_1	IF_3
0x40026e8	      0xe800000000	                          call 0x40026ed	       242	mark.c	FUNCTION_5	FOR_1	IF_3	CALL_2
0x40026ed	    0x488b15000000	            mov rdx, qword [0x040026f4] 	       243	mark.c	FUNCTION_5	FOR_1	IF_3
0x40026f4	    0x8b8244150000	          mov eax, dword [rdx + 0x1544] 	       243	mark.c	FUNCTION_5	FOR_1	IF_3
0x40026fa	          0x83e801	                              sub eax, 1	       243	mark.c	FUNCTION_5	FOR_1	IF_3
0x40026fd	    0x898244150000	          mov dword [rdx + 0x1544], eax 	       243	mark.c	FUNCTION_5	FOR_1	IF_3
0x4002703	             0x1e8	                            add eax, ebp	       244	mark.c	FUNCTION_5	FOR_1	IF_3	IF_4
0x4002705	     0xf88c9000000	                            js 0x40027d4	       244	mark.c	FUNCTION_5	FOR_1	IF_3	IF_4
0x400270b	    0x488b15000000	            mov rdx, qword [0x04002712] 	       248	mark.c	FUNCTION_5	FOR_1
0x4002712	            0x89e8	                            mov eax, ebp	       248	mark.c	FUNCTION_5	FOR_1
0x4002714	     0x38244150000	           add eax, dword [rdx + 0x1544]	       248	mark.c	FUNCTION_5	FOR_1
0x400271a	    0x898244150000	          mov dword [rdx + 0x1544], eax 	       248	mark.c	FUNCTION_5	FOR_1
0x4002720	            0x4898	                                    cdqe	       250	mark.c	FUNCTION_5	FOR_1
0x4002722	        0x488d0480	                  lea rax, [rax + rax*4]	       250	mark.c	FUNCTION_5	FOR_1
0x4002726	    0x488d9cc2a005	         lea rbx, [rdx + rax*8 + 0x5a0] 	       250	mark.c	FUNCTION_5	FOR_1
0x400272e	        0x837b1000	               cmp dword [rbx + 0x10], 0	       251	mark.c	FUNCTION_5	FOR_1	IF_5
0x4002732	            0x7508	                           jne 0x400273c	       251	mark.c	FUNCTION_5	FOR_1	IF_5
0x4002734	          0x4889df	                            mov rdi, rbx	       252	mark.c	FUNCTION_5	FOR_1	CALL_3
0x4002737	      0xe800000000	                          call 0x400273c	       252	mark.c	FUNCTION_5	FOR_1	CALL_3
0x400273c	          0x8b7b10	            mov edi, dword [rbx + 0x10] 	       253	mark.c	FUNCTION_5	FOR_1	IF_6
0x400273f	    0x488b05000000	            mov rax, qword [0x04002746] 	       253	mark.c	FUNCTION_5	FOR_1	IF_6
0x4002746	    0x3bb8b8000000	            cmp edi, dword [rax + 0xb8] 	       253	mark.c	FUNCTION_5	FOR_1	IF_6
0x400274c	            0x7465	                            je 0x40027b3	       253	mark.c	FUNCTION_5	FOR_1	IF_6
0x400274e	      0xe800000000	                          call 0x4002753	       256	mark.c	FUNCTION_5	FOR_1	IF_6	IF_7	CALL_4
0x4002753	          0x4885c0	                           test rax, rax	       256	mark.c	FUNCTION_5	FOR_1	IF_6	IF_7	CALL_4
0x4002756	            0x7523	                           jne 0x400277b	       256	mark.c	FUNCTION_5	FOR_1	IF_6	IF_7	CALL_4
0x4002758	            0x89e8	                            mov eax, ebp	       258	mark.c	FUNCTION_5	FOR_1	IF_6	IF_7
0x400275a	          0xc1f81f	                           sar eax, 0x1f	       258	mark.c	FUNCTION_5	FOR_1	IF_6	IF_7
0x400275d	          0x83c801	                               or eax, 1	       258	mark.c	FUNCTION_5	FOR_1	IF_6	IF_7
0x4002760	             0x1c5	                            add ebp, eax	       258	mark.c	FUNCTION_5	FOR_1	IF_6	IF_7
0x4002762	    0x488b15000000	            mov rdx, qword [0x04002769] 	       231	mark.c	FUNCTION_5	FOR_1	IF_2
0x4002769	    0x8b8244150000	          mov eax, dword [rdx + 0x1544] 	       231	mark.c	FUNCTION_5	FOR_1	IF_2
0x400276f	            0x89c1	                            mov ecx, eax	       231	mark.c	FUNCTION_5	FOR_1	IF_2
0x4002771	             0x1e9	                            add ecx, ebp	       231	mark.c	FUNCTION_5	FOR_1	IF_2
0x4002773	     0xf895dffffff	                           jns 0x40026d6	       231	mark.c	FUNCTION_5	FOR_1	IF_2
0x4002779	            0xeb60	                           jmp 0x40027db	       231	mark.c	FUNCTION_5	FOR_1	IF_2
0x400277b	          0x8b7b10	            mov edi, dword [rbx + 0x10] 	       261	mark.c	FUNCTION_5	FOR_1	IF_6	IF_8	CALL_5
0x400277e	      0xb900000000	                              mov ecx, 0	       261	mark.c	FUNCTION_5	FOR_1	IF_6	IF_8	CALL_5
0x4002783	      0xba00000000	                              mov edx, 0	       261	mark.c	FUNCTION_5	FOR_1	IF_6	IF_8	CALL_5
0x4002788	          0x488b33	                    mov rsi, qword [rbx]	       261	mark.c	FUNCTION_5	FOR_1	IF_6	IF_8	CALL_5
0x400278b	      0xe800000000	                          call 0x4002790	       261	mark.c	FUNCTION_5	FOR_1	IF_6	IF_8	CALL_5
0x4002790	            0x85c0	                           test eax, eax	       261	mark.c	FUNCTION_5	FOR_1	IF_6	IF_8	CALL_5
0x4002792	            0x744e	                            je 0x40027e2	       261	mark.c	FUNCTION_5	FOR_1	IF_6	IF_8	CALL_5
0x4002794	          0x488b0b	                    mov rcx, qword [rbx]	       265	mark.c	FUNCTION_5	FOR_1	IF_6
0x4002797	        0x488b5b08	                mov rbx, qword [rbx + 8]	       265	mark.c	FUNCTION_5	FOR_1	IF_6
0x400279b	    0x488b05000000	            mov rax, qword [0x040027a2] 	       265	mark.c	FUNCTION_5	FOR_1	IF_6
0x40027a2	        0x48894838	             mov qword [rax + 0x38], rcx	       265	mark.c	FUNCTION_5	FOR_1	IF_6
0x40027a6	        0x48895840	             mov qword [rax + 0x40], rbx	       265	mark.c	FUNCTION_5	FOR_1	IF_6
0x40027aa	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       266	mark.c	FUNCTION_5	FOR_1	IF_6
0x40027b1	            0xeb34	                           jmp 0x40027e7	       266	mark.c	FUNCTION_5	FOR_1	IF_6
0x40027b3	          0x4889d8	                            mov rax, rbx	       269	mark.c	FUNCTION_5	FOR_1	ELSE_1
0x40027b6	            0xeb2f	                           jmp 0x40027e7	       269	mark.c	FUNCTION_5	FOR_1	ELSE_1
0x40027b8	      0xb800000000	                              mov eax, 0	       227	mark.c	FUNCTION_5	IF_1
0x40027bd	            0xeb28	                           jmp 0x40027e7	       227	mark.c	FUNCTION_5	IF_1
0x40027bf	      0xb800000000	                              mov eax, 0	       233	mark.c	FUNCTION_5	FOR_1	IF_2
0x40027c4	            0xeb21	                           jmp 0x40027e7	       233	mark.c	FUNCTION_5	FOR_1	IF_2
0x40027c6	      0xb800000000	                              mov eax, 0	       233	mark.c	FUNCTION_5	FOR_1	IF_2
0x40027cb	            0xeb1a	                           jmp 0x40027e7	       233	mark.c	FUNCTION_5	FOR_1	IF_2
0x40027cd	      0xb800000000	                              mov eax, 0	       233	mark.c	FUNCTION_5	FOR_1	IF_2
0x40027d2	            0xeb13	                           jmp 0x40027e7	       233	mark.c	FUNCTION_5	FOR_1	IF_2
0x40027d4	      0xb800000000	                              mov eax, 0	       245	mark.c	FUNCTION_5	FOR_1	IF_3	IF_4
0x40027d9	            0xeb0c	                           jmp 0x40027e7	       245	mark.c	FUNCTION_5	FOR_1	IF_3	IF_4
0x40027db	      0xb800000000	                              mov eax, 0	       233	mark.c	FUNCTION_5	FOR_1	IF_2
0x40027e0	            0xeb05	                           jmp 0x40027e7	       233	mark.c	FUNCTION_5	FOR_1	IF_2
0x40027e2	      0xb800000000	                              mov eax, 0	       263	mark.c	FUNCTION_5	FOR_1	IF_6	IF_8
0x40027e7	        0x4883c408	                              add rsp, 8	       272	mark.c	FUNCTION_5
0x40027eb	              0x5b	                                 pop rbx	       272	mark.c	FUNCTION_5
0x40027ec	              0x5d	                                 pop rbp	       272	mark.c	FUNCTION_5
0x40027ed	              0xc3	                                     ret	       272	mark.c	FUNCTION_5
write_buffer_marks	DO,0:FOR,2:WHILE,0:ELSE,0:functions,0:IF,1:CALL,10:SWITCH,0	89
0x4000bdd	            0x4155	                                push r13	      1857	mark.c	FUNCTION_42
0x4000bdf	            0x4154	                                push r12	      1857	mark.c	FUNCTION_42
0x4000be1	              0x55	                                push rbp	      1857	mark.c	FUNCTION_42
0x4000be2	              0x53	                                push rbx	      1857	mark.c	FUNCTION_42
0x4000be3	        0x4883ec28	                           sub rsp, 0x28	      1857	mark.c	FUNCTION_42
0x4000be7	          0x4889fb	                            mov rbx, rdi	      1857	mark.c	FUNCTION_42
0x4000bea	          0x4989f4	                            mov r12, rsi	      1857	mark.c	FUNCTION_42
0x4000bed	    0x64488b042528	                mov rax, qword fs:[0x28]	      1857	mark.c	FUNCTION_42
0x4000bf6	      0x4889442418	             mov qword [rsp + 0x18], rax	      1857	mark.c	FUNCTION_42
0x4000bfb	            0x31c0	                            xor eax, eax	      1857	mark.c	FUNCTION_42
0x4000bfd	    0x488bb7880000	            mov rsi, qword [rdi + 0x88] 	      1861	mark.c	FUNCTION_42	CALL_1
0x4000c04	    0x41b801000000	                              mov r8d, 1	      1861	mark.c	FUNCTION_42	CALL_1
0x4000c0a	      0xb901040000	                          mov ecx, 0x401	      1861	mark.c	FUNCTION_42	CALL_1
0x4000c0f	    0x488b15000000	            mov rdx, qword [0x04000c16] 	      1861	mark.c	FUNCTION_42	CALL_1
0x4000c16	      0xbf00000000	                              mov edi, 0	      1861	mark.c	FUNCTION_42	CALL_1
0x4000c1b	      0xe800000000	                          call 0x4000c20	      1861	mark.c	FUNCTION_42	CALL_1
0x4000c20	          0x4c89e1	                            mov rcx, r12	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000c23	      0xba03000000	                              mov edx, 3	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000c28	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000c2d	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000c32	      0xe800000000	                          call 0x4000c37	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000c37	    0x488b35000000	            mov rsi, qword [0x04000c3e] 	      1863	mark.c	FUNCTION_42	CALL_3
0x4000c3e	          0x4c89e7	                            mov rdi, r12	      1863	mark.c	FUNCTION_42	CALL_3
0x4000c41	      0xe800000000	                          call 0x4000c46	      1863	mark.c	FUNCTION_42	CALL_3
0x4000c46	    0x488b83500100	           mov rax, qword [rbx + 0x150] 	      1867	mark.c	FUNCTION_42
0x4000c4d	        0x48890424	                    mov qword [rsp], rax	      1867	mark.c	FUNCTION_42
0x4000c51	    0xc74424080000	                  mov dword [rsp + 8], 0	      1868	mark.c	FUNCTION_42
0x4000c59	          0x4889e2	                            mov rdx, rsp	      1869	mark.c	FUNCTION_42	CALL_4
0x4000c5c	      0xbe2a000000	                           mov esi, 0x2a	      1869	mark.c	FUNCTION_42	CALL_4
0x4000c61	          0x4c89e7	                            mov rdi, r12	      1869	mark.c	FUNCTION_42	CALL_4
0x4000c64	      0xe85dfeffff	                 call sym.write_one_mark	      1869	mark.c	FUNCTION_42	CALL_4
0x4000c69	    0x488d93280300	                  lea rdx, [rbx + 0x328]	      1871	mark.c	FUNCTION_42	CALL_5
0x4000c70	      0xbe22000000	                           mov esi, 0x22	      1871	mark.c	FUNCTION_42	CALL_5
0x4000c75	          0x4c89e7	                            mov rdi, r12	      1871	mark.c	FUNCTION_42	CALL_5
0x4000c78	      0xe849feffff	                 call sym.write_one_mark	      1871	mark.c	FUNCTION_42	CALL_5
0x4000c7d	    0x488d93380300	                  lea rdx, [rbx + 0x338]	      1872	mark.c	FUNCTION_42	CALL_6
0x4000c84	      0xbe5e000000	                           mov esi, 0x5e	      1872	mark.c	FUNCTION_42	CALL_6
0x4000c89	          0x4c89e7	                            mov rdi, r12	      1872	mark.c	FUNCTION_42	CALL_6
0x4000c8c	      0xe835feffff	                 call sym.write_one_mark	      1872	mark.c	FUNCTION_42	CALL_6
0x4000c91	    0x488d93480300	                  lea rdx, [rbx + 0x348]	      1873	mark.c	FUNCTION_42	CALL_7
0x4000c98	      0xbe2e000000	                           mov esi, 0x2e	      1873	mark.c	FUNCTION_42	CALL_7
0x4000c9d	          0x4c89e7	                            mov rdi, r12	      1873	mark.c	FUNCTION_42	CALL_7
0x4000ca0	      0xe821feffff	                 call sym.write_one_mark	      1873	mark.c	FUNCTION_42	CALL_7
0x4000ca5	    0x83bb98090000	              cmp dword [rbx + 0x998], 0	      1876	mark.c	FUNCTION_42	FOR_1
0x4000cac	            0x7e5a	                           jle 0x4000d08	      1876	mark.c	FUNCTION_42	FOR_1
0x4000cae	    0x4c8dab540300	                  lea r13, [rbx + 0x354]	      1876	mark.c	FUNCTION_42	FOR_1
0x4000cb5	      0xbd00000000	                              mov ebp, 0	      1876	mark.c	FUNCTION_42	FOR_1
0x4000cba	            0x85ed	                           test ebp, ebp	      1879	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x4000cbc	            0x741e	                            je 0x4000cdc	      1879	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x4000cbe	        0x498b4d04	                mov rcx, qword [r13 + 4]	      1879	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x4000cc2	        0x49394df4	              cmp qword [r13 - 0xc], rcx	      1879	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x4000cc6	            0x7514	                           jne 0x4000cdc	      1879	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x4000cc8	        0x418b4d0c	              mov ecx, dword [r13 + 0xc]	      1879	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x4000ccc	        0x41394dfc	                cmp dword [r13 - 4], ecx	      1879	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x4000cd0	            0x750a	                           jne 0x4000cdc	      1879	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x4000cd2	        0x418b4d10	            mov ecx, dword [r13 + 0x10] 	      1879	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x4000cd6	        0x41394d00	                    cmp dword [r13], ecx	      1879	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x4000cda	            0x741d	                            je 0x4000cf9	      1879	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x4000cdc	          0x4863c5	                         movsxd rax, ebp	      1881	mark.c	FUNCTION_42	FOR_1	CALL_9
0x4000cdf	        0x4883c035	                           add rax, 0x35	      1881	mark.c	FUNCTION_42	FOR_1	CALL_9
0x4000ce3	        0x48c1e004	                              shl rax, 4	      1881	mark.c	FUNCTION_42	FOR_1	CALL_9
0x4000ce7	      0x488d540308	                lea rdx, [rbx + rax + 8]	      1881	mark.c	FUNCTION_42	FOR_1	CALL_9
0x4000cec	      0xbe2b000000	                           mov esi, 0x2b	      1881	mark.c	FUNCTION_42	FOR_1	CALL_9
0x4000cf1	          0x4c89e7	                            mov rdi, r12	      1881	mark.c	FUNCTION_42	FOR_1	CALL_9
0x4000cf4	      0xe8cdfdffff	                 call sym.write_one_mark	      1881	mark.c	FUNCTION_42	FOR_1	CALL_9
0x4000cf9	          0x83c501	                              add ebp, 1	      1876	mark.c	FUNCTION_42	FOR_1
0x4000cfc	        0x4983c510	                           add r13, 0x10	      1876	mark.c	FUNCTION_42	FOR_1
0x4000d00	    0x39ab98090000	           cmp dword [rbx + 0x998], ebp 	      1876	mark.c	FUNCTION_42	FOR_1
0x4000d06	            0x7fb2	                            jg 0x4000cba	      1876	mark.c	FUNCTION_42	FOR_1
0x4000d08	    0x4881c3580100	                          add rbx, 0x158	      1876	mark.c	FUNCTION_42	FOR_1
0x4000d0f	      0xbd61000000	                           mov ebp, 0x61	      1876	mark.c	FUNCTION_42	FOR_1
0x4000d14	          0x4889da	                            mov rdx, rbx	      1885	mark.c	FUNCTION_42	CALL_10
0x4000d17	            0x89ee	                            mov esi, ebp	      1885	mark.c	FUNCTION_42	CALL_10
0x4000d19	          0x4c89e7	                            mov rdi, r12	      1885	mark.c	FUNCTION_42	CALL_10
0x4000d1c	      0xe8a5fdffff	                 call sym.write_one_mark	      1885	mark.c	FUNCTION_42	CALL_10
0x4000d21	          0x83c501	                              add ebp, 1	      1885	mark.c	FUNCTION_42	CALL_10
0x4000d24	        0x4883c310	                           add rbx, 0x10	      1885	mark.c	FUNCTION_42	CALL_10
0x4000d28	          0x83fd7b	                           cmp ebp, 0x7b	      1884	mark.c	FUNCTION_42	FOR_2
0x4000d2b	            0x75e7	                           jne 0x4000d14	      1884	mark.c	FUNCTION_42	FOR_2
0x4000d2d	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1886	mark.c	FUNCTION_42
0x4000d32	    0x644833042528	                xor rax, qword fs:[0x28]	      1886	mark.c	FUNCTION_42
0x4000d3b	            0x7405	                            je 0x4000d42	      1886	mark.c	FUNCTION_42
0x4000d3d	      0xe800000000	                          call 0x4000d42	      1886	mark.c	FUNCTION_42
0x4000d42	        0x4883c428	                           add rsp, 0x28	      1886	mark.c	FUNCTION_42
0x4000d46	              0x5b	                                 pop rbx	      1886	mark.c	FUNCTION_42
0x4000d47	              0x5d	                                 pop rbp	      1886	mark.c	FUNCTION_42
0x4000d48	            0x415c	                                 pop r12	      1886	mark.c	FUNCTION_42
0x4000d4a	            0x415d	                                 pop r13	      1886	mark.c	FUNCTION_42
0x4000d4c	              0xc3	                                     ret	      1886	mark.c	FUNCTION_42
removable	DO,0:FOR,1:WHILE,0:ELSE,0:functions,0:IF,3:CALL,5:SWITCH,0	58
0x40032c5	            0x4154	                                push r12	      1820	mark.c	FUNCTION_40
0x40032c7	              0x55	                                push rbp	      1820	mark.c	FUNCTION_40
0x40032c8	              0x53	                                push rbx	      1820	mark.c	FUNCTION_40
0x40032c9	        0x4883ec50	                           sub rsp, 0x50	      1820	mark.c	FUNCTION_40
0x40032cd	          0x4889fe	                            mov rsi, rdi	      1820	mark.c	FUNCTION_40
0x40032d0	    0x64488b042528	                mov rax, qword fs:[0x28]	      1820	mark.c	FUNCTION_40
0x40032d9	      0x4889442448	             mov qword [rsp + 0x48], rax	      1820	mark.c	FUNCTION_40
0x40032de	            0x31c0	                            xor eax, eax	      1820	mark.c	FUNCTION_40
0x40032e0	      0xbf00000000	                              mov edi, 0	      1826	mark.c	FUNCTION_40	CALL_1
0x40032e5	      0xe800000000	                          call 0x40032ea	      1826	mark.c	FUNCTION_40	CALL_1
0x40032ea	          0x4885c0	                           test rax, rax	      1827	mark.c	FUNCTION_40	IF_1
0x40032ed	     0xf8486000000	                            je 0x4003379	      1827	mark.c	FUNCTION_40	IF_1
0x40032f3	          0x4889c3	                            mov rbx, rax	      1827	mark.c	FUNCTION_40	IF_1
0x40032f6	    0x488b05000000	            mov rax, qword [0x040032fd] 	      1829	mark.c	FUNCTION_40	IF_1	FOR_1
0x40032fd	      0x4889442408	                mov qword [rsp + 8], rax	      1829	mark.c	FUNCTION_40	IF_1	FOR_1
0x4003302	      0x488d6c2411	                   lea rbp, [rsp + 0x11]	      1834	mark.c	FUNCTION_40	IF_1	FOR_1	IF_2	CALL_3
0x4003307	    0x49c7c4ffffff	             mov r12, 0xffffffffffffffff	      1834	mark.c	FUNCTION_40	IF_1	FOR_1	IF_2	CALL_3
0x400330e	            0xeb49	                           jmp 0x4003359	      1829	mark.c	FUNCTION_40	IF_1	FOR_1
0x4003310	      0xb900000000	                              mov ecx, 0	      1831	mark.c	FUNCTION_40	IF_1	FOR_1	CALL_2
0x4003315	      0xba33000000	                           mov edx, 0x33	      1831	mark.c	FUNCTION_40	IF_1	FOR_1	CALL_2
0x400331a	      0x488d742410	                   lea rsi, [rsp + 0x10]	      1831	mark.c	FUNCTION_40	IF_1	FOR_1	CALL_2
0x400331f	      0x488d7c2408	                      lea rdi, [rsp + 8]	      1831	mark.c	FUNCTION_40	IF_1	FOR_1	CALL_2
0x4003324	      0xe800000000	                          call 0x4003329	      1831	mark.c	FUNCTION_40	IF_1	FOR_1	CALL_2
0x4003329	      0x807c241072	            cmp byte [rsp + 0x10], 0x72 	      1832	mark.c	FUNCTION_40	IF_1	FOR_1	IF_2
0x400332e	            0x7529	                           jne 0x4003359	      1832	mark.c	FUNCTION_40	IF_1	FOR_1	IF_2
0x4003330	      0xb800000000	                              mov eax, 0	      1834	mark.c	FUNCTION_40	IF_1	FOR_1	IF_2	CALL_3
0x4003335	          0x4c89e1	                            mov rcx, r12	      1834	mark.c	FUNCTION_40	IF_1	FOR_1	IF_2	CALL_3
0x4003338	          0x4889ef	                            mov rdi, rbp	      1834	mark.c	FUNCTION_40	IF_1	FOR_1	IF_2	CALL_3
0x400333b	            0xf2ae	              repne scasb al, byte [rdi]	      1834	mark.c	FUNCTION_40	IF_1	FOR_1	IF_2	CALL_3
0x400333d	          0x4889c8	                            mov rax, rcx	      1834	mark.c	FUNCTION_40	IF_1	FOR_1	IF_2	CALL_3
0x4003340	          0x48f7d0	                                 not rax	      1834	mark.c	FUNCTION_40	IF_1	FOR_1	IF_2	CALL_3
0x4003343	        0x488d50ff	                      lea rdx, [rax - 1]	      1834	mark.c	FUNCTION_40	IF_1	FOR_1	IF_2	CALL_3
0x4003347	          0x4863d2	                         movsxd rdx, edx	      1835	mark.c	FUNCTION_40	IF_1	FOR_1	IF_2	IF_3	CALL_4
0x400334a	          0x4889de	                            mov rsi, rbx	      1835	mark.c	FUNCTION_40	IF_1	FOR_1	IF_2	IF_3	CALL_4
0x400334d	          0x4889ef	                            mov rdi, rbp	      1835	mark.c	FUNCTION_40	IF_1	FOR_1	IF_2	IF_3	CALL_4
0x4003350	      0xe800000000	                          call 0x4003355	      1835	mark.c	FUNCTION_40	IF_1	FOR_1	IF_2	IF_3	CALL_4
0x4003355	            0x85c0	                           test eax, eax	      1835	mark.c	FUNCTION_40	IF_1	FOR_1	IF_2	IF_3	CALL_4
0x4003357	            0x7411	                            je 0x400336a	      1835	mark.c	FUNCTION_40	IF_1	FOR_1	IF_2	IF_3	CALL_4
0x4003359	      0x488b442408	                mov rax, qword [rsp + 8]	      1829	mark.c	FUNCTION_40	IF_1	FOR_1
0x400335e	          0x803800	                       cmp byte [rax], 0	      1829	mark.c	FUNCTION_40	IF_1	FOR_1
0x4003361	            0x75ad	                           jne 0x4003310	      1829	mark.c	FUNCTION_40	IF_1	FOR_1
0x4003363	      0xbd00000000	                              mov ebp, 0	      1823	mark.c	FUNCTION_40
0x4003368	            0xeb05	                           jmp 0x400336f	      1823	mark.c	FUNCTION_40
0x400336a	      0xbd01000000	                              mov ebp, 1	      1837	mark.c	FUNCTION_40	IF_1	FOR_1	IF_2	IF_3
0x400336f	          0x4889df	                            mov rdi, rbx	      1842	mark.c	FUNCTION_40	IF_1	CALL_5
0x4003372	      0xe800000000	                          call 0x4003377	      1842	mark.c	FUNCTION_40	IF_1	CALL_5
0x4003377	            0xeb05	                           jmp 0x400337e	      1842	mark.c	FUNCTION_40	IF_1	CALL_5
0x4003379	      0xbd00000000	                              mov ebp, 0	      1823	mark.c	FUNCTION_40
0x400337e	            0x89e8	                            mov eax, ebp	      1845	mark.c	FUNCTION_40
0x4003380	      0x488b5c2448	            mov rbx, qword [rsp + 0x48] 	      1845	mark.c	FUNCTION_40
0x4003385	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1845	mark.c	FUNCTION_40
0x400338e	            0x7405	                            je 0x4003395	      1845	mark.c	FUNCTION_40
0x4003390	      0xe800000000	                          call 0x4003395	      1845	mark.c	FUNCTION_40
0x4003395	        0x4883c450	                           add rsp, 0x50	      1845	mark.c	FUNCTION_40
0x4003399	              0x5b	                                 pop rbx	      1845	mark.c	FUNCTION_40
0x400339a	              0x5d	                                 pop rbp	      1845	mark.c	FUNCTION_40
0x400339b	            0x415c	                                 pop r12	      1845	mark.c	FUNCTION_40
0x400339d	              0xc3	                                     ret	      1845	mark.c	FUNCTION_40
ex_delmarks	DO,0:FOR,2:WHILE,0:ELSE,7:functions,0:IF,8:CALL,16:SWITCH,1	167
0x4001c62	            0x4157	                                push r15	       805	mark.c	FUNCTION_20
0x4001c64	            0x4156	                                push r14	       805	mark.c	FUNCTION_20
0x4001c66	            0x4155	                                push r13	       805	mark.c	FUNCTION_20
0x4001c68	            0x4154	                                push r12	       805	mark.c	FUNCTION_20
0x4001c6a	              0x55	                                push rbp	       805	mark.c	FUNCTION_20
0x4001c6b	              0x53	                                push rbx	       805	mark.c	FUNCTION_20
0x4001c6c	        0x4883ec08	                              sub rsp, 8	       805	mark.c	FUNCTION_20
0x4001c70	          0x4c8b27	                    mov r12, qword [rdi]	       813	mark.c	FUNCTION_20	IF_1
0x4001c73	      0x410fb61c24	                   movzx ebx, byte [r12]	       813	mark.c	FUNCTION_20	IF_1
0x4001c78	            0x84db	                             test bl, bl	       813	mark.c	FUNCTION_20	IF_1
0x4001c7a	     0xf8584020000	                           jne 0x4001f04	       813	mark.c	FUNCTION_20	IF_1
0x4001c80	        0x837f3400	               cmp dword [rdi + 0x34], 0	       813	mark.c	FUNCTION_20	IF_1
0x4001c84	     0xf845c020000	                            je 0x4001ee6	       813	mark.c	FUNCTION_20	IF_1
0x4001c8a	    0x488b3d000000	            mov rdi, qword [0x04001c91] 	       815	mark.c	FUNCTION_20	CALL_1
0x4001c91	      0xe800000000	                          call 0x4001c96	       815	mark.c	FUNCTION_20	CALL_1
0x4001c96	      0xe978020000	                           jmp 0x4001f13	       815	mark.c	FUNCTION_20	CALL_1
0x4001c9b	      0xba05000000	                              mov edx, 5	       817	mark.c	FUNCTION_20	ELSE_1	IF_2
0x4001ca0	      0xbe00000000	                              mov esi, 0	       817	mark.c	FUNCTION_20	ELSE_1	IF_2
0x4001ca5	      0xbf00000000	                              mov edi, 0	       817	mark.c	FUNCTION_20	ELSE_1	IF_2
0x4001caa	      0xe800000000	                          call 0x4001caf	       817	mark.c	FUNCTION_20	ELSE_1	IF_2
0x4001caf	          0x4889c7	                            mov rdi, rax	       817	mark.c	FUNCTION_20	ELSE_1	IF_2
0x4001cb2	      0xe800000000	                          call 0x4001cb7	       817	mark.c	FUNCTION_20	ELSE_1	IF_2
0x4001cb7	      0xe957020000	                           jmp 0x4001f13	       817	mark.c	FUNCTION_20	ELSE_1	IF_2
0x4001cbc	           0xfb6eb	                           movzx ebp, bl	       825	mark.c	FUNCTION_20	ELSE_3	FOR_1	CALL_6
0x4001cbf	        0x448d6d9f	                  lea r13d, [rbp - 0x61]	       825	mark.c	FUNCTION_20	ELSE_3	FOR_1	CALL_6
0x4001cc3	          0x83ed30	                           sub ebp, 0x30	       826	mark.c	FUNCTION_20	ELSE_3	FOR_1	CALL_7
0x4001cc6	          0x83fd09	                              cmp ebp, 9	       827	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	CALL_8
0x4001cc9	            0x7610	                           jbe 0x4001cdb	       827	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	CALL_8
0x4001ccb	            0x89d8	                            mov eax, ebx	       827	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	CALL_8
0x4001ccd	          0x83e0df	                     and eax, 0xffffffdf	       827	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	CALL_8
0x4001cd0	          0x83e841	                           sub eax, 0x41	       827	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	CALL_8
0x4001cd3	            0x3c19	                            cmp al, 0x19	       827	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	CALL_8
0x4001cd5	     0xf8714010000	                            ja 0x4001def	       827	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	CALL_8
0x4001cdb	    0x41807c24012d	                cmp byte [r12 + 1], 0x2d	       829	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5
0x4001ce1	            0x756d	                           jne 0x4001d50	       829	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5
0x4001ce3	           0xfb6db	                           movzx ebx, bl	       832	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5
0x4001ce6	    0x410fb6442402	               movzx eax, byte [r12 + 2]	       833	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5
0x4001cec	        0x440fb6f0	                          movzx r14d, al	       833	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5
0x4001cf0	        0x4183fd19	                          cmp r13d, 0x19	       834	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6	CALL_9
0x4001cf4	            0x770d	                            ja 0x4001d03	       834	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6	CALL_9
0x4001cf6	          0x4489f0	                           mov eax, r14d	       834	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6	CALL_9
0x4001cf9	          0x83e861	                           sub eax, 0x61	       834	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6	CALL_9
0x4001cfc	          0x83f819	                           cmp eax, 0x19	       834	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6	CALL_9
0x4001cff	            0x761f	                           jbe 0x4001d20	       834	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6	CALL_9
0x4001d01	            0xeb22	                           jmp 0x4001d25	       834	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6	CALL_9
0x4001d03	          0x83fd09	                              cmp ebp, 9	       834	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6	CALL_9
0x4001d06	            0x770d	                            ja 0x4001d15	       834	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6	CALL_9
0x4001d08	           0xfb6c0	                           movzx eax, al	       837	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6
0x4001d0b	          0x83e830	                           sub eax, 0x30	       837	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6
0x4001d0e	          0x83f809	                              cmp eax, 9	       837	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6
0x4001d11	            0x760d	                           jbe 0x4001d20	       837	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6
0x4001d13	            0xeb10	                           jmp 0x4001d25	       837	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6
0x4001d15	           0xfb6c0	                           movzx eax, al	       837	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6
0x4001d18	          0x83e841	                           sub eax, 0x41	       837	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6
0x4001d1b	          0x83f819	                           cmp eax, 0x19	       837	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6
0x4001d1e	            0x7705	                            ja 0x4001d25	       837	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6
0x4001d20	          0x4439f3	                           cmp ebx, r14d	       837	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6
0x4001d23	            0x7e24	                           jle 0x4001d49	       837	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6
0x4001d25	      0xba05000000	                              mov edx, 5	       839	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x4001d2a	      0xbe00000000	                              mov esi, 0	       839	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x4001d2f	      0xbf00000000	                              mov edi, 0	       839	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x4001d34	      0xe800000000	                          call 0x4001d39	       839	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x4001d39	          0x4c89e6	                            mov rsi, r12	       839	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x4001d3c	          0x4889c7	                            mov rdi, rax	       839	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x4001d3f	      0xe800000000	                          call 0x4001d44	       839	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x4001d44	      0xe9ca010000	                           jmp 0x4001f13	       840	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6
0x4001d49	      0x4d8d7c2402	                      lea r15, [r12 + 2]	       842	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5
0x4001d4e	            0xeb09	                           jmp 0x4001d59	       842	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5
0x4001d50	           0xfb6db	                           movzx ebx, bl	       846	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4
0x4001d53	          0x4189de	                           mov r14d, ebx	       846	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4
0x4001d56	          0x4d89e7	                            mov r15, r12	       846	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4
0x4001d59	        0x4183fd19	                          cmp r13d, 0x19	       850	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	IF_7
0x4001d5d	            0x771e	                            ja 0x4001d7d	       850	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	IF_7
0x4001d5f	          0x8d439f	                   lea eax, [rbx - 0x61]	       851	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	IF_7
0x4001d62	            0x4898	                                    cdqe	       851	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	IF_7
0x4001d64	        0x4883c015	                           add rax, 0x15	       851	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	IF_7
0x4001d68	        0x48c1e004	                              shl rax, 4	       851	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	IF_7
0x4001d6c	    0x480305000000	             add rax, qword [0x04001d73]	       851	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	IF_7
0x4001d73	    0x48c740080000	                  mov qword [rax + 8], 0	       851	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	IF_7
0x4001d7b	            0xeb61	                           jmp 0x4001dde	       851	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	IF_7
0x4001d7d	          0x8d43ea	                   lea eax, [rbx - 0x16]	       851	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	IF_7
0x4001d80	        0x448d63bf	                  lea r12d, [rbx - 0x41]	       851	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	IF_7
0x4001d84	          0x83fd09	                              cmp ebp, 9	       851	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	IF_7
0x4001d87	        0x440f46e0	                        cmovbe r12d, eax	       851	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	IF_7
0x4001d8b	          0x4963c4	                        movsxd rax, r12d	       858	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5
0x4001d8e	    0x488d14850000	                        lea rdx, [rax*4]	       858	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5
0x4001d96	        0x488d0c02	                    lea rcx, [rdx + rax]	       858	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5
0x4001d9a	    0x48c704cd0000	                    mov qword [rcx*8], 0	       858	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5
0x4001da6	    0x488b3ccd0000	                  mov rdi, qword [rcx*8]	       859	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5	CALL_14
0x4001dae	          0x4885ff	                           test rdi, rdi	       859	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5	CALL_14
0x4001db1	            0x7418	                            je 0x4001dcb	       859	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5	CALL_14
0x4001db3	      0xe800000000	                          call 0x4001db8	       859	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5	CALL_14
0x4001db8	          0x4963c4	                        movsxd rax, r12d	       859	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5	CALL_14
0x4001dbb	        0x488d0480	                  lea rax, [rax + rax*4]	       859	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5	CALL_14
0x4001dbf	    0x48c704c50000	                    mov qword [rax*8], 0	       859	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5	CALL_14
0x4001dcb	          0x4d63e4	                        movsxd r12, r12d	       861	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5
0x4001dce	        0x4b8d04a4	                  lea rax, [r12 + r12*4]	       861	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5
0x4001dd2	    0x48c704c50000	                    mov qword [rax*8], 0	       861	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5
0x4001dde	          0x83c301	                              add ebx, 1	       848	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2
0x4001de1	          0x4439f3	                           cmp ebx, r14d	       848	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2
0x4001de4	     0xf8e6fffffff	                           jle 0x4001d59	       848	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2
0x4001dea	      0xe9e4000000	                           jmp 0x4001ed3	       848	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2
0x4001def	          0x83eb20	                           sub ebx, 0x20	       867	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x4001df2	          0x80fb3e	                            cmp bl, 0x3e	       867	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x4001df5	     0xf87b4000000	                            ja 0x4001eaf	       867	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x4001dfb	           0xfb6db	                           movzx ebx, bl	       867	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x4001dfe	    0xff24dd000000	                       jmp qword [rbx*8]	       867	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x4001e05	    0x488b05000000	            mov rax, qword [0x04001e0c] 	       869	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x4001e0c	    0x48c780280300	              mov qword [rax + 0x328], 0	       869	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x4001e17	          0x4d89e7	                            mov r15, r12	       869	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x4001e1a	      0xe9b4000000	                           jmp 0x4001ed3	       869	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x4001e1f	    0x488b05000000	            mov rax, qword [0x04001e26] 	       870	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x4001e26	    0x48c780380300	              mov qword [rax + 0x338], 0	       870	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x4001e31	          0x4d89e7	                            mov r15, r12	       870	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x4001e34	      0xe99a000000	                           jmp 0x4001ed3	       870	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x4001e39	    0x488b05000000	            mov rax, qword [0x04001e40] 	       871	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x4001e40	    0x48c780480300	              mov qword [rax + 0x348], 0	       871	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x4001e4b	          0x4d89e7	                            mov r15, r12	       871	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x4001e4e	      0xe980000000	                           jmp 0x4001ed3	       871	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x4001e53	    0x488b05000000	            mov rax, qword [0x04001e5a] 	       872	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x4001e5a	    0x48c780e01100	            mov qword [rax + 0x11e0], 0 	       872	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x4001e65	          0x4d89e7	                            mov r15, r12	       872	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x4001e68	            0xeb69	                           jmp 0x4001ed3	       872	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x4001e6a	    0x488b05000000	            mov rax, qword [0x04001e71] 	       873	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x4001e71	    0x48c780001200	            mov qword [rax + 0x1200], 0 	       873	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x4001e7c	          0x4d89e7	                            mov r15, r12	       873	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x4001e7f	            0xeb52	                           jmp 0x4001ed3	       873	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x4001e81	    0x488b05000000	            mov rax, qword [0x04001e88] 	       874	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x4001e88	    0x48c780f80200	              mov qword [rax + 0x2f8], 0	       874	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x4001e93	          0x4d89e7	                            mov r15, r12	       874	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x4001e96	            0xeb3b	                           jmp 0x4001ed3	       874	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x4001e98	    0x488b05000000	            mov rax, qword [0x04001e9f] 	       875	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x4001e9f	    0x48c780080300	              mov qword [rax + 0x308], 0	       875	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x4001eaa	          0x4d89e7	                            mov r15, r12	       875	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x4001ead	            0xeb24	                           jmp 0x4001ed3	       875	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x4001eaf	      0xba05000000	                              mov edx, 5	       877	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1	CALL_16
0x4001eb4	      0xbe00000000	                              mov esi, 0	       877	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1	CALL_16
0x4001eb9	      0xbf00000000	                              mov edi, 0	       877	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1	CALL_16
0x4001ebe	      0xe800000000	                          call 0x4001ec3	       877	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1	CALL_16
0x4001ec3	          0x4c89e6	                            mov rsi, r12	       877	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1	CALL_16
0x4001ec6	          0x4889c7	                            mov rdi, rax	       877	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1	CALL_16
0x4001ec9	      0xe800000000	                          call 0x4001ece	       877	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1	CALL_16
0x4001ece	            0xeb43	                           jmp 0x4001f13	       878	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x4001ed0	          0x4d89e7	                            mov r15, r12	       867	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x4001ed3	        0x4d8d6701	                      lea r12, [r15 + 1]	       823	mark.c	FUNCTION_20	ELSE_3	FOR_1
0x4001ed7	      0x410fb65f01	               movzx ebx, byte [r15 + 1]	       823	mark.c	FUNCTION_20	ELSE_3	FOR_1
0x4001edc	            0x84db	                             test bl, bl	       823	mark.c	FUNCTION_20	ELSE_3	FOR_1
0x4001ede	     0xf85d8fdffff	                           jne 0x4001cbc	       823	mark.c	FUNCTION_20	ELSE_3	FOR_1
0x4001ee4	            0xeb2d	                           jmp 0x4001f13	       823	mark.c	FUNCTION_20	ELSE_3	FOR_1
0x4001ee6	      0xba05000000	                              mov edx, 5	       819	mark.c	FUNCTION_20	ELSE_2	IF_3
0x4001eeb	      0xbe00000000	                              mov esi, 0	       819	mark.c	FUNCTION_20	ELSE_2	IF_3
0x4001ef0	      0xbf00000000	                              mov edi, 0	       819	mark.c	FUNCTION_20	ELSE_2	IF_3
0x4001ef5	      0xe800000000	                          call 0x4001efa	       819	mark.c	FUNCTION_20	ELSE_2	IF_3
0x4001efa	          0x4889c7	                            mov rdi, rax	       819	mark.c	FUNCTION_20	ELSE_2	IF_3
0x4001efd	      0xe800000000	                          call 0x4001f02	       819	mark.c	FUNCTION_20	ELSE_2	IF_3
0x4001f02	            0xeb0f	                           jmp 0x4001f13	       819	mark.c	FUNCTION_20	ELSE_2	IF_3
0x4001f04	        0x837f3400	               cmp dword [rdi + 0x34], 0	       816	mark.c	FUNCTION_20	ELSE_1	IF_2
0x4001f08	     0xf84aefdffff	                            je 0x4001cbc	       816	mark.c	FUNCTION_20	ELSE_1	IF_2
0x4001f0e	      0xe988fdffff	                           jmp 0x4001c9b	       816	mark.c	FUNCTION_20	ELSE_1	IF_2
0x4001f13	        0x4883c408	                              add rsp, 8	       882	mark.c	FUNCTION_20
0x4001f17	              0x5b	                                 pop rbx	       882	mark.c	FUNCTION_20
0x4001f18	              0x5d	                                 pop rbp	       882	mark.c	FUNCTION_20
0x4001f19	            0x415c	                                 pop r12	       882	mark.c	FUNCTION_20
0x4001f1b	            0x415d	                                 pop r13	       882	mark.c	FUNCTION_20
0x4001f1d	            0x415e	                                 pop r14	       882	mark.c	FUNCTION_20
0x4001f1f	            0x415f	                                 pop r15	       882	mark.c	FUNCTION_20
0x4001f21	              0xc3	                                     ret	       882	mark.c	FUNCTION_20
fmarks_check_one	DO,0:FOR,0:WHILE,0:ELSE,0:functions,0:IF,1:CALL,2:SWITCH,0	27
0x400006d	        0x837f1000	               cmp dword [rdi + 0x10], 0	       591	mark.c	FUNCTION_13	IF_1
0x4000071	            0x754c	                           jne 0x40000bf	       591	mark.c	FUNCTION_13	IF_1
0x4000073	        0x488b4f18	            mov rcx, qword [rdi + 0x18] 	       592	mark.c	FUNCTION_13	IF_1
0x4000077	          0x4885c9	                           test rcx, rcx	       592	mark.c	FUNCTION_13	IF_1
0x400007a	            0x7443	                            je 0x40000bf	       592	mark.c	FUNCTION_13	IF_1
0x400007c	              0x55	                                push rbp	       590	mark.c	FUNCTION_13
0x400007d	              0x53	                                push rbx	       590	mark.c	FUNCTION_13
0x400007e	        0x4883ec08	                              sub rsp, 8	       590	mark.c	FUNCTION_13
0x4000082	          0x4889d5	                            mov rbp, rdx	       590	mark.c	FUNCTION_13
0x4000085	          0x4889f0	                            mov rax, rsi	       590	mark.c	FUNCTION_13
0x4000088	          0x4889fb	                            mov rbx, rdi	       590	mark.c	FUNCTION_13
0x400008b	          0x4889ce	                            mov rsi, rcx	       593	mark.c	FUNCTION_13	IF_1	CALL_1
0x400008e	          0x4889c7	                            mov rdi, rax	       593	mark.c	FUNCTION_13	IF_1	CALL_1
0x4000091	      0xe800000000	                          call 0x4000096	       593	mark.c	FUNCTION_13	IF_1	CALL_1
0x4000096	            0x85c0	                           test eax, eax	       593	mark.c	FUNCTION_13	IF_1	CALL_1
0x4000098	            0x751f	                           jne 0x40000b9	       593	mark.c	FUNCTION_13	IF_1	CALL_1
0x400009a	    0x8b85b8000000	            mov eax, dword [rbp + 0xb8] 	       595	mark.c	FUNCTION_13	IF_1
0x40000a0	          0x894310	             mov dword [rbx + 0x10], eax	       595	mark.c	FUNCTION_13	IF_1
0x40000a3	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       596	mark.c	FUNCTION_13	IF_1	CALL_2
0x40000a7	          0x4885ff	                           test rdi, rdi	       596	mark.c	FUNCTION_13	IF_1	CALL_2
0x40000aa	            0x740d	                            je 0x40000b9	       596	mark.c	FUNCTION_13	IF_1	CALL_2
0x40000ac	      0xe800000000	                          call 0x40000b1	       596	mark.c	FUNCTION_13	IF_1	CALL_2
0x40000b1	    0x48c743180000	               mov qword [rbx + 0x18], 0	       596	mark.c	FUNCTION_13	IF_1	CALL_2
0x40000b9	        0x4883c408	                              add rsp, 8	       598	mark.c	FUNCTION_13
0x40000bd	              0x5b	                                 pop rbx	       598	mark.c	FUNCTION_13
0x40000be	              0x5d	                                 pop rbp	       598	mark.c	FUNCTION_13
0x40000bf	            0xf3c3	                                     ret	       598	mark.c	FUNCTION_13
ex_jumps	DO,0:FOR,1:WHILE,0:ELSE,0:functions,0:IF,4:CALL,14:SWITCH,0	103
0x40027ee	            0x4155	                                push r13	       890	mark.c	FUNCTION_21
0x40027f0	            0x4154	                                push r12	       890	mark.c	FUNCTION_21
0x40027f2	              0x55	                                push rbp	       890	mark.c	FUNCTION_21
0x40027f3	              0x53	                                push rbx	       890	mark.c	FUNCTION_21
0x40027f4	        0x4883ec08	                              sub rsp, 8	       890	mark.c	FUNCTION_21
0x40027f8	      0xbe01000000	                              mov esi, 1	       894	mark.c	FUNCTION_21	CALL_1
0x40027fd	    0x488b3d000000	            mov rdi, qword [0x04002804] 	       894	mark.c	FUNCTION_21	CALL_1
0x4002804	      0xe800000000	                          call 0x4002809	       894	mark.c	FUNCTION_21	CALL_1
0x4002809	      0xba05000000	                              mov edx, 5	       897	mark.c	FUNCTION_21	CALL_3
0x400280e	      0xbe00000000	                              mov esi, 0	       897	mark.c	FUNCTION_21	CALL_3
0x4002813	      0xbf00000000	                              mov edi, 0	       897	mark.c	FUNCTION_21	CALL_3
0x4002818	      0xe800000000	                          call 0x400281d	       897	mark.c	FUNCTION_21	CALL_3
0x400281d	          0x4889c7	                            mov rdi, rax	       897	mark.c	FUNCTION_21	CALL_3
0x4002820	      0xe800000000	                          call 0x4002825	       897	mark.c	FUNCTION_21	CALL_3
0x4002825	    0x488b05000000	            mov rax, qword [0x0400282c] 	       898	mark.c	FUNCTION_21	FOR_1
0x400282c	    0x83b840150000	             cmp dword [rax + 0x1540], 0	       898	mark.c	FUNCTION_21	FOR_1
0x4002833	     0xf8e5c010000	                           jle 0x4002995	       898	mark.c	FUNCTION_21	FOR_1
0x4002839	    0x8b1500000000	            mov edx, dword [0x0400283f] 	       898	mark.c	FUNCTION_21	FOR_1
0x400283f	            0x85d2	                           test edx, edx	       898	mark.c	FUNCTION_21	FOR_1
0x4002841	     0xf854e010000	                           jne 0x4002995	       898	mark.c	FUNCTION_21	FOR_1
0x4002847	      0xbb00000000	                              mov ebx, 0	       898	mark.c	FUNCTION_21	FOR_1
0x400284c	      0xbd3e000000	                           mov ebp, 0x3e	       912	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_7
0x4002851	          0x4863d3	                         movsxd rdx, ebx	       900	mark.c	FUNCTION_21	FOR_1	IF_1
0x4002854	        0x488d1492	                  lea rdx, [rdx + rdx*4]	       900	mark.c	FUNCTION_21	FOR_1	IF_1
0x4002858	    0x4883bcd0a005	      cmp qword [rax + rdx*8 + 0x5a0], 0	       900	mark.c	FUNCTION_21	FOR_1	IF_1
0x4002861	     0xf8409010000	                            je 0x4002970	       900	mark.c	FUNCTION_21	FOR_1	IF_1
0x4002867	          0x4863d3	                         movsxd rdx, ebx	       902	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_4
0x400286a	        0x488d1492	                  lea rdx, [rdx + rdx*4]	       902	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_4
0x400286e	    0x488dbcd0a005	         lea rdi, [rax + rdx*8 + 0x5a0] 	       902	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_4
0x4002876	      0xbe10000000	                           mov esi, 0x10	       902	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_4
0x400287b	      0xe800000000	                          call 0x4002880	       902	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_4
0x4002880	          0x4989c5	                            mov r13, rax	       902	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_4
0x4002883	          0x4885c0	                           test rax, rax	       903	mark.c	FUNCTION_21	FOR_1	IF_1	IF_2
0x4002886	     0xf84e9000000	                            je 0x4002975	       903	mark.c	FUNCTION_21	FOR_1	IF_1	IF_2
0x400288c	      0xbf0a000000	                            mov edi, 0xa	       906	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_5
0x4002891	      0xe800000000	                          call 0x4002896	       906	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_5
0x4002896	    0x448b25000000	           mov r12d, dword [0x0400289d] 	       907	mark.c	FUNCTION_21	FOR_1	IF_1	IF_3
0x400289d	          0x4585e4	                         test r12d, r12d	       907	mark.c	FUNCTION_21	FOR_1	IF_1	IF_3
0x40028a0	            0x740d	                            je 0x40028af	       907	mark.c	FUNCTION_21	FOR_1	IF_1	IF_3
0x40028a2	          0x4c89ef	                            mov rdi, r13	       909	mark.c	FUNCTION_21	FOR_1	IF_1	IF_3	CALL_6
0x40028a5	      0xe800000000	                          call 0x40028aa	       909	mark.c	FUNCTION_21	FOR_1	IF_1	IF_3	CALL_6
0x40028aa	      0xe9e6000000	                           jmp 0x4002995	       910	mark.c	FUNCTION_21	FOR_1	IF_1	IF_3
0x40028af	    0x488b35000000	            mov rsi, qword [0x040028b6] 	       917	mark.c	FUNCTION_21	FOR_1	IF_1
0x40028b6	          0x4863c3	                         movsxd rax, ebx	       912	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_7
0x40028b9	    0x488d14850000	                        lea rdx, [rax*4]	       912	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_7
0x40028c1	        0x488d0c02	                    lea rcx, [rdx + rax]	       912	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_7
0x40028c5	    0x8bbccea80500	   mov edi, dword [rsi + rcx*8 + 0x5a8] 	       912	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_7
0x40028cc	          0x4889c8	                            mov rax, rcx	       912	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_7
0x40028cf	    0x8b9644150000	          mov edx, dword [rsi + 0x1544] 	       914	mark.c	FUNCTION_21	FOR_1	IF_1
0x40028d5	          0x4189d9	                            mov r9d, ebx	       912	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_7
0x40028d8	          0x4129d1	                            sub r9d, edx	       912	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_7
0x40028db	            0x89d1	                            mov ecx, edx	       912	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_7
0x40028dd	            0x29d9	                            sub ecx, ebx	       912	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_7
0x40028df	            0x39da	                            cmp edx, ebx	       912	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_7
0x40028e1	        0x440f4dc9	                         cmovge r9d, ecx	       912	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_7
0x40028e5	            0x39da	                            cmp edx, ebx	       912	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_7
0x40028e7	              0x57	                                push rdi	        33	stdio2.h	FUNCTION_46	CALL_2
0x40028e8	    0xffb4c6a00500	        push qword [rsi + rax*8 + 0x5a0]	        33	stdio2.h	FUNCTION_46	CALL_2
0x40028ef	    0x41b820000000	                           mov r8d, 0x20	        33	stdio2.h	FUNCTION_46	CALL_2
0x40028f5	        0x440f44c5	                          cmove r8d, ebp	        33	stdio2.h	FUNCTION_46	CALL_2
0x40028f9	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_46	CALL_2
0x40028fe	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_46	CALL_2
0x4002905	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_46	CALL_2
0x400290a	    0x488b3d000000	            mov rdi, qword [0x04002911] 	        33	stdio2.h	FUNCTION_46	CALL_2
0x4002911	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_46	CALL_2
0x4002916	      0xe800000000	                          call 0x400291b	        33	stdio2.h	FUNCTION_46	CALL_2
0x400291b	    0x488b3d000000	            mov rdi, qword [0x04002922] 	       918	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_8
0x4002922	      0xe800000000	                          call 0x4002927	       918	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_8
0x4002927	          0x4863c3	                         movsxd rax, ebx	       920	mark.c	FUNCTION_21	FOR_1	IF_1
0x400292a	        0x488d0480	                  lea rax, [rax + rax*4]	       920	mark.c	FUNCTION_21	FOR_1	IF_1
0x400292e	        0x48c1e003	                              shl rax, 3	       920	mark.c	FUNCTION_21	FOR_1	IF_1
0x4002932	    0x480305000000	             add rax, qword [0x04002939]	       920	mark.c	FUNCTION_21	FOR_1	IF_1
0x4002939	    0x488b15000000	            mov rdx, qword [0x04002940] 	       920	mark.c	FUNCTION_21	FOR_1	IF_1
0x4002940	        0x4883c410	                           add rsp, 0x10	       919	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_9
0x4002944	    0x8bb2b8000000	            mov esi, dword [rdx + 0xb8] 	       919	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_9
0x400294a	    0x39b0b0050000	           cmp dword [rax + 0x5b0], esi 	       919	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_9
0x4002950	    0x440f44250000	          cmove r12d, dword [0x04002958]	       919	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_9
0x4002958	          0x4489e6	                           mov esi, r12d	       919	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_9
0x400295b	          0x4c89ef	                            mov rdi, r13	       919	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_9
0x400295e	      0xe800000000	                          call 0x4002963	       919	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_9
0x4002963	          0x4c89ef	                            mov rdi, r13	       922	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_11
0x4002966	      0xe800000000	                          call 0x400296b	       922	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_11
0x400296b	      0xe800000000	                          call 0x4002970	       923	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_12
0x4002970	      0xe800000000	                          call 0x4002975	       925	mark.c	FUNCTION_21	FOR_1	CALL_13
0x4002975	          0x83c301	                              add ebx, 1	       898	mark.c	FUNCTION_21	FOR_1
0x4002978	    0x488b05000000	            mov rax, qword [0x0400297f] 	       898	mark.c	FUNCTION_21	FOR_1
0x400297f	    0x399840150000	          cmp dword [rax + 0x1540], ebx 	       898	mark.c	FUNCTION_21	FOR_1
0x4002985	            0x7e0e	                           jle 0x4002995	       898	mark.c	FUNCTION_21	FOR_1
0x4002987	    0x8b1500000000	            mov edx, dword [0x0400298d] 	       898	mark.c	FUNCTION_21	FOR_1
0x400298d	            0x85d2	                           test edx, edx	       898	mark.c	FUNCTION_21	FOR_1
0x400298f	     0xf84bcfeffff	                            je 0x4002851	       898	mark.c	FUNCTION_21	FOR_1
0x4002995	    0x488b05000000	            mov rax, qword [0x0400299c] 	       927	mark.c	FUNCTION_21	IF_4
0x400299c	    0x8bb040150000	          mov esi, dword [rax + 0x1540] 	       927	mark.c	FUNCTION_21	IF_4
0x40029a2	    0x39b044150000	          cmp dword [rax + 0x1544], esi 	       927	mark.c	FUNCTION_21	IF_4
0x40029a8	            0x750a	                           jne 0x40029b4	       927	mark.c	FUNCTION_21	IF_4
0x40029aa	      0xbf00000000	                              mov edi, 0	       928	mark.c	FUNCTION_21	CALL_14
0x40029af	      0xe800000000	                          call 0x40029b4	       928	mark.c	FUNCTION_21	CALL_14
0x40029b4	        0x4883c408	                              add rsp, 8	       929	mark.c	FUNCTION_21
0x40029b8	              0x5b	                                 pop rbx	       929	mark.c	FUNCTION_21
0x40029b9	              0x5d	                                 pop rbp	       929	mark.c	FUNCTION_21
0x40029ba	            0x415c	                                 pop r12	       929	mark.c	FUNCTION_21
0x40029bc	            0x415d	                                 pop r13	       929	mark.c	FUNCTION_21
0x40029be	              0xc3	                                     ret	       929	mark.c	FUNCTION_21
mark_line	DO,0:FOR,1:WHILE,0:ELSE,0:functions,0:IF,3:CALL,6:SWITCH,0	59
0x40000c1	            0x4155	                                push r13	       683	mark.c	FUNCTION_17
0x40000c3	            0x4154	                                push r12	       683	mark.c	FUNCTION_17
0x40000c5	              0x55	                                push rbp	       683	mark.c	FUNCTION_17
0x40000c6	              0x53	                                push rbx	       683	mark.c	FUNCTION_17
0x40000c7	        0x4883ec08	                              sub rsp, 8	       683	mark.c	FUNCTION_17
0x40000cb	          0x488b3f	                    mov rdi, qword [rdi]	       687	mark.c	FUNCTION_17	IF_1
0x40000ce	          0x4885ff	                           test rdi, rdi	       687	mark.c	FUNCTION_17	IF_1
0x40000d1	            0x740f	                            je 0x40000e2	       687	mark.c	FUNCTION_17	IF_1
0x40000d3	          0x4189f4	                           mov r12d, esi	       687	mark.c	FUNCTION_17	IF_1
0x40000d6	    0x488b05000000	            mov rax, qword [0x040000dd] 	       687	mark.c	FUNCTION_17	IF_1
0x40000dd	          0x483b38	                    cmp rdi, qword [rax]	       687	mark.c	FUNCTION_17	IF_1
0x40000e0	            0x7e0f	                           jle 0x40000f1	       687	mark.c	FUNCTION_17	IF_1
0x40000e2	      0xbf00000000	                              mov edi, 0	       688	mark.c	FUNCTION_17	CALL_1
0x40000e7	      0xe800000000	                          call 0x40000ec	       688	mark.c	FUNCTION_17	CALL_1
0x40000ec	      0xe985000000	                           jmp 0x4000176	       688	mark.c	FUNCTION_17	CALL_1
0x40000f1	    0x488b1d000000	            mov rbx, qword [0x040000f8] 	       689	mark.c	FUNCTION_17	CALL_4
0x40000f8	      0xe800000000	                          call 0x40000fd	       689	mark.c	FUNCTION_17	CALL_4
0x40000fd	          0x4889c7	                            mov rdi, rax	       689	mark.c	FUNCTION_17	CALL_4
0x4000100	      0xe800000000	                          call 0x4000105	       689	mark.c	FUNCTION_17	CALL_4
0x4000105	            0x89de	                            mov esi, ebx	       689	mark.c	FUNCTION_17	CALL_4
0x4000107	          0x4889c7	                            mov rdi, rax	       689	mark.c	FUNCTION_17	CALL_4
0x400010a	      0xe800000000	                          call 0x400010f	       689	mark.c	FUNCTION_17	CALL_4
0x400010f	          0x4989c5	                            mov r13, rax	       689	mark.c	FUNCTION_17	CALL_4
0x4000112	          0x4885c0	                           test rax, rax	       690	mark.c	FUNCTION_17	IF_2
0x4000115	            0x745a	                            je 0x4000171	       690	mark.c	FUNCTION_17	IF_2
0x4000117	          0x803800	                       cmp byte [rax], 0	       694	mark.c	FUNCTION_17	FOR_1	CALL_5
0x400011a	            0x744a	                            je 0x4000166	       694	mark.c	FUNCTION_17	FOR_1	CALL_5
0x400011c	          0x4889c3	                            mov rbx, rax	       694	mark.c	FUNCTION_17	FOR_1	CALL_5
0x400011f	      0xbd00000000	                              mov ebp, 0	       694	mark.c	FUNCTION_17	FOR_1	CALL_5
0x4000124	          0x4d63e4	                        movsxd r12, r12d	       697	mark.c	FUNCTION_17	FOR_1	IF_3
0x4000127	          0x4889df	                            mov rdi, rbx	       696	mark.c	FUNCTION_17	FOR_1	CALL_6
0x400012a	      0xe800000000	                          call 0x400012f	       696	mark.c	FUNCTION_17	FOR_1	CALL_6
0x400012f	             0x1c5	                            add ebp, eax	       696	mark.c	FUNCTION_17	FOR_1	CALL_6
0x4000131	          0x4863d5	                         movsxd rdx, ebp	       697	mark.c	FUNCTION_17	FOR_1	IF_3
0x4000134	    0x488b05000000	            mov rax, qword [0x0400013b] 	       697	mark.c	FUNCTION_17	FOR_1	IF_3
0x400013b	          0x4c29e0	                            sub rax, r12	       697	mark.c	FUNCTION_17	FOR_1	IF_3
0x400013e	          0x4839c2	                            cmp rdx, rax	       697	mark.c	FUNCTION_17	FOR_1	IF_3
0x4000141	            0x7d26	                           jge 0x4000169	       697	mark.c	FUNCTION_17	FOR_1	IF_3
0x4000143	      0xb801000000	                              mov eax, 1	       694	mark.c	FUNCTION_17	FOR_1	CALL_5
0x4000148	    0x833d00000000	               cmp dword [0x0400014f], 0	       694	mark.c	FUNCTION_17	FOR_1	CALL_5
0x400014f	            0x7409	                            je 0x400015a	       694	mark.c	FUNCTION_17	FOR_1	CALL_5
0x4000151	          0x4889df	                            mov rdi, rbx	       694	mark.c	FUNCTION_17	FOR_1	CALL_5
0x4000154	    0xff1500000000	                 call qword [0x0400015a]	       694	mark.c	FUNCTION_17	FOR_1	CALL_5
0x400015a	            0x4898	                                    cdqe	       694	mark.c	FUNCTION_17	FOR_1	CALL_5
0x400015c	          0x4801c3	                            add rbx, rax	       694	mark.c	FUNCTION_17	FOR_1	CALL_5
0x400015f	          0x803b00	                       cmp byte [rbx], 0	       694	mark.c	FUNCTION_17	FOR_1	CALL_5
0x4000162	            0x75c3	                           jne 0x4000127	       694	mark.c	FUNCTION_17	FOR_1	CALL_5
0x4000164	            0xeb03	                           jmp 0x4000169	       694	mark.c	FUNCTION_17	FOR_1	CALL_5
0x4000166	          0x4889c3	                            mov rbx, rax	       694	mark.c	FUNCTION_17	FOR_1	CALL_5
0x4000169	          0xc60300	                       mov byte [rbx], 0	       700	mark.c	FUNCTION_17
0x400016c	          0x4c89e8	                            mov rax, r13	       701	mark.c	FUNCTION_17
0x400016f	            0xeb05	                           jmp 0x4000176	       701	mark.c	FUNCTION_17
0x4000171	      0xb800000000	                              mov eax, 0	       691	mark.c	FUNCTION_17	IF_2
0x4000176	        0x4883c408	                              add rsp, 8	       702	mark.c	FUNCTION_17
0x400017a	              0x5b	                                 pop rbx	       702	mark.c	FUNCTION_17
0x400017b	              0x5d	                                 pop rbp	       702	mark.c	FUNCTION_17
0x400017c	            0x415c	                                 pop r12	       702	mark.c	FUNCTION_17
0x400017e	            0x415d	                                 pop r13	       702	mark.c	FUNCTION_17
0x4000180	              0xc3	                                     ret	       702	mark.c	FUNCTION_17
free_jumplist	DO,0:FOR,1:WHILE,0:ELSE,0:functions,0:IF,0:CALL,1:SWITCH,0	18
0x4002a5a	    0x83bf40150000	             cmp dword [rdi + 0x1540], 0	      1374	mark.c	FUNCTION_30	FOR_1
0x4002a61	            0x7e31	                           jle 0x4002a94	      1374	mark.c	FUNCTION_30	FOR_1
0x4002a63	            0x4154	                                push r12	      1371	mark.c	FUNCTION_30
0x4002a65	              0x55	                                push rbp	      1371	mark.c	FUNCTION_30
0x4002a66	              0x53	                                push rbx	      1371	mark.c	FUNCTION_30
0x4002a67	          0x4989fc	                            mov r12, rdi	      1371	mark.c	FUNCTION_30
0x4002a6a	    0x488dafb80500	                  lea rbp, [rdi + 0x5b8]	      1371	mark.c	FUNCTION_30
0x4002a71	      0xbb00000000	                              mov ebx, 0	      1374	mark.c	FUNCTION_30	FOR_1
0x4002a76	        0x488b7d00	                    mov rdi, qword [rbp]	      1375	mark.c	FUNCTION_30	CALL_1
0x4002a7a	      0xe800000000	                          call 0x4002a7f	      1375	mark.c	FUNCTION_30	CALL_1
0x4002a7f	          0x83c301	                              add ebx, 1	      1374	mark.c	FUNCTION_30	FOR_1
0x4002a82	        0x4883c528	                           add rbp, 0x28	      1374	mark.c	FUNCTION_30	FOR_1
0x4002a86	    0x41399c244015	          cmp dword [r12 + 0x1540], ebx 	      1374	mark.c	FUNCTION_30	FOR_1
0x4002a8e	            0x7fe6	                            jg 0x4002a76	      1374	mark.c	FUNCTION_30	FOR_1
0x4002a90	              0x5b	                                 pop rbx	      1376	mark.c	FUNCTION_30
0x4002a91	              0x5d	                                 pop rbp	      1376	mark.c	FUNCTION_30
0x4002a92	            0x415c	                                 pop r12	      1376	mark.c	FUNCTION_30
0x4002a94	            0xf3c3	                                     ret	      1376	mark.c	FUNCTION_30
fmarks_check_names	DO,0:FOR,1:WHILE,0:ELSE,0:functions,1:IF,2:CALL,3:SWITCH,0	50
0x4001814	    0x488bb7880000	            mov rsi, qword [rdi + 0x88] 	       567	mark.c	FUNCTION_12	IF_1
0x400181b	          0x4885f6	                           test rsi, rsi	       567	mark.c	FUNCTION_12	IF_1
0x400181e	     0xf8499000000	                            je 0x40018bd	       567	mark.c	FUNCTION_12	IF_1
0x4001824	            0x4155	                                push r13	       560	mark.c	FUNCTION_12
0x4001826	            0x4154	                                push r12	       560	mark.c	FUNCTION_12
0x4001828	              0x55	                                push rbp	       560	mark.c	FUNCTION_12
0x4001829	              0x53	                                push rbx	       560	mark.c	FUNCTION_12
0x400182a	        0x4883ec08	                              sub rsp, 8	       560	mark.c	FUNCTION_12
0x400182e	          0x4989fc	                            mov r12, rdi	       560	mark.c	FUNCTION_12
0x4001831	      0xe800000000	                          call 0x4001836	       570	mark.c	FUNCTION_12	CALL_1
0x4001836	          0x4989c5	                            mov r13, rax	       570	mark.c	FUNCTION_12	CALL_1
0x4001839	          0x4885c0	                           test rax, rax	       571	mark.c	FUNCTION_12	IF_2
0x400183c	            0x7475	                            je 0x40018b3	       571	mark.c	FUNCTION_12	IF_2
0x400183e	      0xbb00000000	                              mov ebx, 0	       571	mark.c	FUNCTION_12	IF_2
0x4001843	      0xbd00000000	                              mov ebp, 0	       571	mark.c	FUNCTION_12	IF_2
0x4001848	          0x4c89e2	                            mov rdx, r12	       575	mark.c	FUNCTION_12	CALL_2
0x400184b	          0x4c89ee	                            mov rsi, r13	       575	mark.c	FUNCTION_12	CALL_2
0x400184e	          0x4889df	                            mov rdi, rbx	       575	mark.c	FUNCTION_12	CALL_2
0x4001851	      0xe817e8ffff	               call sym.fmarks_check_one	       575	mark.c	FUNCTION_12	CALL_2
0x4001856	        0x4883c328	                           add rbx, 0x28	       575	mark.c	FUNCTION_12	CALL_2
0x400185a	          0x4839dd	                            cmp rbp, rbx	       574	mark.c	FUNCTION_12	FOR_1
0x400185d	            0x75e9	                           jne 0x4001848	       574	mark.c	FUNCTION_12	FOR_1
0x400185f	    0x488b2d000000	            mov rbp, qword [0x04001866] 	       578	mark.c	FUNCTION_12
0x4001866	          0x4885ed	                           test rbp, rbp	       578	mark.c	FUNCTION_12
0x4001869	            0x7530	                           jne 0x400189b	       578	mark.c	FUNCTION_12
0x400186b	            0xeb3e	                           jmp 0x40018ab	       578	mark.c	FUNCTION_12
0x400186d	          0x4863c3	                         movsxd rax, ebx	       581	mark.c	FUNCTION_12	FUNCTION_1	CALL_1
0x4001870	        0x488d0480	                  lea rax, [rax + rax*4]	       581	mark.c	FUNCTION_12	FUNCTION_1	CALL_1
0x4001874	    0x488dbcc5a005	         lea rdi, [rbp + rax*8 + 0x5a0] 	       581	mark.c	FUNCTION_12	FUNCTION_1	CALL_1
0x400187c	          0x4c89e2	                            mov rdx, r12	       581	mark.c	FUNCTION_12	FUNCTION_1	CALL_1
0x400187f	          0x4c89ee	                            mov rsi, r13	       581	mark.c	FUNCTION_12	FUNCTION_1	CALL_1
0x4001882	      0xe8e6e7ffff	               call sym.fmarks_check_one	       581	mark.c	FUNCTION_12	FUNCTION_1	CALL_1
0x4001887	          0x83c301	                              add ebx, 1	       580	mark.c	FUNCTION_12	FUNCTION_1	FOR_1
0x400188a	    0x399d40150000	          cmp dword [rbp + 0x1540], ebx 	       580	mark.c	FUNCTION_12	FUNCTION_1	FOR_1
0x4001890	            0x7fdb	                            jg 0x400186d	       580	mark.c	FUNCTION_12	FUNCTION_1	FOR_1
0x4001892	        0x488b6d20	            mov rbp, qword [rbp + 0x20] 	       578	mark.c	FUNCTION_12
0x4001896	          0x4885ed	                           test rbp, rbp	       578	mark.c	FUNCTION_12
0x4001899	            0x7410	                            je 0x40018ab	       578	mark.c	FUNCTION_12
0x400189b	      0xbb00000000	                              mov ebx, 0	       580	mark.c	FUNCTION_12	FUNCTION_1	FOR_1
0x40018a0	    0x83bd40150000	             cmp dword [rbp + 0x1540], 0	       580	mark.c	FUNCTION_12	FUNCTION_1	FOR_1
0x40018a7	            0x7fc4	                            jg 0x400186d	       580	mark.c	FUNCTION_12	FUNCTION_1	FOR_1
0x40018a9	            0xebe7	                           jmp 0x4001892	       580	mark.c	FUNCTION_12	FUNCTION_1	FOR_1
0x40018ab	          0x4c89ef	                            mov rdi, r13	       585	mark.c	FUNCTION_12	CALL_3
0x40018ae	      0xe800000000	                          call 0x40018b3	       585	mark.c	FUNCTION_12	CALL_3
0x40018b3	        0x4883c408	                              add rsp, 8	       586	mark.c	FUNCTION_12
0x40018b7	              0x5b	                                 pop rbx	       586	mark.c	FUNCTION_12
0x40018b8	              0x5d	                                 pop rbp	       586	mark.c	FUNCTION_12
0x40018b9	            0x415c	                                 pop r12	       586	mark.c	FUNCTION_12
0x40018bb	            0x415d	                                 pop r13	       586	mark.c	FUNCTION_12
0x40018bd	            0xf3c3	                                     ret	       586	mark.c	FUNCTION_12
check_mark	DO,0:FOR,0:WHILE,0:ELSE,0:functions,0:IF,4:CALL,6:SWITCH,0	37
0x40018bf	        0x4883ec08	                              sub rsp, 8	       606	mark.c	FUNCTION_14
0x40018c3	          0x4885ff	                           test rdi, rdi	       607	mark.c	FUNCTION_14	IF_1
0x40018c6	            0x751e	                           jne 0x40018e6	       607	mark.c	FUNCTION_14	IF_1
0x40018c8	      0xba05000000	                              mov edx, 5	       609	mark.c	FUNCTION_14	IF_1	CALL_2
0x40018cd	      0xbe00000000	                              mov esi, 0	       609	mark.c	FUNCTION_14	IF_1	CALL_2
0x40018d2	      0xe800000000	                          call 0x40018d7	       609	mark.c	FUNCTION_14	IF_1	CALL_2
0x40018d7	          0x4889c7	                            mov rdi, rax	       609	mark.c	FUNCTION_14	IF_1	CALL_2
0x40018da	      0xe800000000	                          call 0x40018df	       609	mark.c	FUNCTION_14	IF_1	CALL_2
0x40018df	      0xb800000000	                              mov eax, 0	       610	mark.c	FUNCTION_14	IF_1
0x40018e4	            0xeb67	                           jmp 0x400194d	       610	mark.c	FUNCTION_14	IF_1
0x40018e6	          0x488b17	                    mov rdx, qword [rdi]	       612	mark.c	FUNCTION_14	IF_2
0x40018e9	          0x4885d2	                           test rdx, rdx	       612	mark.c	FUNCTION_14	IF_2
0x40018ec	            0x7f2d	                            jg 0x400191b	       612	mark.c	FUNCTION_14	IF_2
0x40018ee	      0xb800000000	                              mov eax, 0	       618	mark.c	FUNCTION_14	IF_2
0x40018f3	          0x4885d2	                           test rdx, rdx	       616	mark.c	FUNCTION_14	IF_2	IF_3
0x40018f6	            0x7555	                           jne 0x400194d	       616	mark.c	FUNCTION_14	IF_2	IF_3
0x40018f8	      0xba05000000	                              mov edx, 5	       617	mark.c	FUNCTION_14	IF_2	CALL_4
0x40018fd	      0xbe00000000	                              mov esi, 0	       617	mark.c	FUNCTION_14	IF_2	CALL_4
0x4001902	      0xbf00000000	                              mov edi, 0	       617	mark.c	FUNCTION_14	IF_2	CALL_4
0x4001907	      0xe800000000	                          call 0x400190c	       617	mark.c	FUNCTION_14	IF_2	CALL_4
0x400190c	          0x4889c7	                            mov rdi, rax	       617	mark.c	FUNCTION_14	IF_2	CALL_4
0x400190f	      0xe800000000	                          call 0x4001914	       617	mark.c	FUNCTION_14	IF_2	CALL_4
0x4001914	      0xb800000000	                              mov eax, 0	       618	mark.c	FUNCTION_14	IF_2
0x4001919	            0xeb32	                           jmp 0x400194d	       618	mark.c	FUNCTION_14	IF_2
0x400191b	      0xb801000000	                              mov eax, 1	       625	mark.c	FUNCTION_14
0x4001920	    0x488b0d000000	            mov rcx, qword [0x04001927] 	       620	mark.c	FUNCTION_14	IF_4
0x4001927	          0x483b11	                    cmp rdx, qword [rcx]	       620	mark.c	FUNCTION_14	IF_4
0x400192a	            0x7e21	                           jle 0x400194d	       620	mark.c	FUNCTION_14	IF_4
0x400192c	      0xba05000000	                              mov edx, 5	       622	mark.c	FUNCTION_14	IF_4	CALL_6
0x4001931	      0xbe00000000	                              mov esi, 0	       622	mark.c	FUNCTION_14	IF_4	CALL_6
0x4001936	      0xbf00000000	                              mov edi, 0	       622	mark.c	FUNCTION_14	IF_4	CALL_6
0x400193b	      0xe800000000	                          call 0x4001940	       622	mark.c	FUNCTION_14	IF_4	CALL_6
0x4001940	          0x4889c7	                            mov rdi, rax	       622	mark.c	FUNCTION_14	IF_4	CALL_6
0x4001943	      0xe800000000	                          call 0x4001948	       622	mark.c	FUNCTION_14	IF_4	CALL_6
0x4001948	      0xb800000000	                              mov eax, 0	       623	mark.c	FUNCTION_14	IF_4
0x400194d	        0x4883c408	                              add rsp, 8	       626	mark.c	FUNCTION_14
0x4001951	              0xc3	                                     ret	       626	mark.c	FUNCTION_14
getnextmark	DO,0:FOR,1:WHILE,0:ELSE,2:functions,0:IF,6:CALL,4:SWITCH,0	101
0x40011d5	              0x55	                                push rbp	       475	mark.c	ELSE_16	FUNCTION_10
0x40011d6	              0x53	                                push rbx	       475	mark.c	ELSE_16	FUNCTION_10
0x40011d7	          0x4c8b17	                    mov r10, qword [rdi]	       480	mark.c	ELSE_16	FUNCTION_10
0x40011da	          0x8b5f08	                mov ebx, dword [rdi + 8]	       480	mark.c	ELSE_16	FUNCTION_10
0x40011dd	          0x8b6f0c	              mov ebp, dword [rdi + 0xc]	       480	mark.c	ELSE_16	FUNCTION_10
0x40011e0	            0x85d2	                           test edx, edx	       486	mark.c	ELSE_16	FUNCTION_10	IF_1
0x40011e2	           0xf95c0	                                setne al	       486	mark.c	ELSE_16	FUNCTION_10	IF_1
0x40011e5	          0x83feff	             cmp esi, 0xffffffffffffffff	       486	mark.c	ELSE_16	FUNCTION_10	IF_1
0x40011e8	            0x7504	                           jne 0x40011ee	       486	mark.c	ELSE_16	FUNCTION_10	IF_1
0x40011ea	            0x84c0	                             test al, al	       486	mark.c	ELSE_16	FUNCTION_10	IF_1
0x40011ec	            0x7511	                           jne 0x40011ff	       486	mark.c	ELSE_16	FUNCTION_10	IF_1
0x40011ee	          0x83fe01	                              cmp esi, 1	       488	mark.c	ELSE_16	FUNCTION_10	ELSE_1	IF_2
0x40011f1	            0x7511	                           jne 0x4001204	       488	mark.c	ELSE_16	FUNCTION_10	ELSE_1	IF_2
0x40011f3	            0x84c0	                             test al, al	       489	mark.c	ELSE_16	FUNCTION_10	ELSE_1	IF_2
0x40011f5	      0xb8ffffff7f	                     mov eax, 0x7fffffff	       489	mark.c	ELSE_16	FUNCTION_10	ELSE_1	IF_2
0x40011fa	           0xf45d8	                         cmovne ebx, eax	       489	mark.c	ELSE_16	FUNCTION_10	ELSE_1	IF_2
0x40011fd	            0xeb05	                           jmp 0x4001204	       489	mark.c	ELSE_16	FUNCTION_10	ELSE_1	IF_2
0x40011ff	      0xbb00000000	                              mov ebx, 0	       487	mark.c	ELSE_16	FUNCTION_10	IF_1
0x4001204	    0x4c8b0d000000	              mov r9, qword [0x0400120b]	       493	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3
0x400120b	    0x498d91580100	                   lea rdx, [r9 + 0x158]	       493	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3
0x4001212	    0x4981c1f80200	                           add r9, 0x2f8	       493	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3
0x4001219	      0xb800000000	                              mov eax, 0	       477	mark.c	ELSE_16	FUNCTION_10
0x400121e	          0x4889d7	                            mov rdi, rdx	       477	mark.c	ELSE_16	FUNCTION_10
0x4001221	          0x488b0a	                    mov rcx, qword [rdx]	       493	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3
0x4001224	          0x4885c9	                           test rcx, rcx	       493	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3
0x4001227	     0xf8ec3000000	                           jle 0x40012f0	       493	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3
0x400122d	          0x83fe01	                              cmp esi, 1	       495	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4
0x4001230	            0x7565	                           jne 0x4001297	       495	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4
0x4001232	          0x4885c0	                           test rax, rax	       497	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x4001235	            0x7437	                            je 0x400126e	       497	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x4001237	          0x4c8b00	                     mov r8, qword [rax]	       497	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x400123a	          0x4c39c1	                             cmp rcx, r8	       497	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x400123d	            0x740a	                            je 0x4001249	       497	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x400123f	          0x4c39c1	                             cmp rcx, r8	       497	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x4001242	            0x7c2a	                            jl 0x400126e	       497	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x4001244	      0xe9a7000000	                           jmp 0x40012f0	       497	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x4001249	        0x448b5a08	               mov r11d, dword [rdx + 8]	       497	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x400124d	        0x448b4008	                mov r8d, dword [rax + 8]	       497	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x4001251	          0x4539c3	                           cmp r11d, r8d	       497	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x4001254	            0x740a	                            je 0x4001260	       497	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x4001256	          0x4539c3	                           cmp r11d, r8d	       497	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x4001259	            0x7c13	                            jl 0x400126e	       497	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x400125b	      0xe990000000	                           jmp 0x40012f0	       497	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x4001260	        0x448b580c	            mov r11d, dword [rax + 0xc] 	       497	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x4001264	        0x44395a0c	            cmp dword [rdx + 0xc], r11d 	       497	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x4001268	     0xf8d82000000	                           jge 0x40012f0	       497	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x400126e	          0x4939ca	                            cmp r10, rcx	       498	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x4001271	            0x7408	                            je 0x400127b	       498	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x4001273	          0x4939ca	                            cmp r10, rcx	       498	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x4001276	           0xf9cc1	                                 setl cl	       498	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x4001279	            0xeb14	                           jmp 0x400128f	       498	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x400127b	          0x8b4f08	                mov ecx, dword [rdi + 8]	       498	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x400127e	            0x39d9	                            cmp ecx, ebx	       498	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x4001280	            0x7407	                            je 0x4001289	       498	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x4001282	            0x39d9	                            cmp ecx, ebx	       498	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x4001284	           0xf9fc1	                                 setg cl	       498	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x4001287	            0xeb06	                           jmp 0x400128f	       498	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x4001289	          0x3b6f0c	              cmp ebp, dword [rdi + 0xc]	       498	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x400128c	           0xf9cc1	                                 setl cl	       498	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x400128f	            0x84c9	                             test cl, cl	       499	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5
0x4001291	        0x480f45c7	                         cmovne rax, rdi	       499	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5
0x4001295	            0xeb59	                           jmp 0x40012f0	       499	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5
0x4001297	          0x4885c0	                           test rax, rax	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x400129a	            0x742d	                            je 0x40012c9	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x400129c	          0x4c8b00	                     mov r8, qword [rax]	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x400129f	          0x4c39c1	                             cmp rcx, r8	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x40012a2	            0x7407	                            je 0x40012ab	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x40012a4	          0x4c39c1	                             cmp rcx, r8	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x40012a7	            0x7f20	                            jg 0x40012c9	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x40012a9	            0xeb45	                           jmp 0x40012f0	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x40012ab	        0x448b5808	               mov r11d, dword [rax + 8]	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x40012af	        0x448b4208	                mov r8d, dword [rdx + 8]	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x40012b3	          0x4539c3	                           cmp r11d, r8d	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x40012b6	            0x7407	                            je 0x40012bf	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x40012b8	          0x4539c3	                           cmp r11d, r8d	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x40012bb	            0x7c0c	                            jl 0x40012c9	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x40012bd	            0xeb31	                           jmp 0x40012f0	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x40012bf	        0x448b5a0c	            mov r11d, dword [rdx + 0xc] 	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x40012c3	        0x4439580c	            cmp dword [rax + 0xc], r11d 	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x40012c7	            0x7d27	                           jge 0x40012f0	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x40012c9	          0x4939ca	                            cmp r10, rcx	       504	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x40012cc	            0x7408	                            je 0x40012d6	       504	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x40012ce	          0x4939ca	                            cmp r10, rcx	       504	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x40012d1	           0xf9fc1	                                 setg cl	       504	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x40012d4	            0xeb14	                           jmp 0x40012ea	       504	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x40012d6	          0x8b4f08	                mov ecx, dword [rdi + 8]	       504	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x40012d9	            0x39d9	                            cmp ecx, ebx	       504	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x40012db	            0x7407	                            je 0x40012e4	       504	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x40012dd	            0x39d9	                            cmp ecx, ebx	       504	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x40012df	           0xf9cc1	                                 setl cl	       504	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x40012e2	            0xeb06	                           jmp 0x40012ea	       504	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x40012e4	          0x3b6f0c	              cmp ebp, dword [rdi + 0xc]	       504	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x40012e7	           0xf9fc1	                                 setg cl	       504	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x40012ea	            0x84c9	                             test cl, cl	       505	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6
0x40012ec	        0x480f45c7	                         cmovne rax, rdi	       505	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6
0x40012f0	        0x4883c210	                           add rdx, 0x10	       505	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6
0x40012f4	          0x4c39ca	                             cmp rdx, r9	       491	mark.c	ELSE_16	FUNCTION_10	FOR_1
0x40012f7	     0xf8521ffffff	                           jne 0x400121e	       491	mark.c	ELSE_16	FUNCTION_10	FOR_1
0x40012fd	              0x5b	                                 pop rbx	       511	mark.c	ELSE_16	FUNCTION_10
0x40012fe	              0x5d	                                 pop rbp	       511	mark.c	ELSE_16	FUNCTION_10
0x40012ff	              0xc3	                                     ret	       511	mark.c	ELSE_16	FUNCTION_10
read_viminfo_filemark	DO,0:FOR,1:WHILE,0:ELSE,3:functions,0:IF,5:CALL,11:SWITCH,0	138
0x4002ae7	            0x4155	                                push r13	      1401	mark.c	FUNCTION_33
0x4002ae9	            0x4154	                                push r12	      1401	mark.c	FUNCTION_33
0x4002aeb	              0x55	                                push rbp	      1401	mark.c	FUNCTION_33
0x4002aec	              0x53	                                push rbx	      1401	mark.c	FUNCTION_33
0x4002aed	        0x4883ec18	                           sub rsp, 0x18	      1401	mark.c	FUNCTION_33
0x4002af1	          0x4889fb	                            mov rbx, rdi	      1401	mark.c	FUNCTION_33
0x4002af4	    0x64488b042528	                mov rax, qword fs:[0x28]	      1401	mark.c	FUNCTION_33
0x4002afd	      0x4889442408	                mov qword [rsp + 8], rax	      1401	mark.c	FUNCTION_33
0x4002b02	            0x31c0	                            xor eax, eax	      1401	mark.c	FUNCTION_33
0x4002b04	          0x488b2f	                    mov rbp, qword [rdi]	      1408	mark.c	FUNCTION_33
0x4002b07	        0x488d4501	                      lea rax, [rbp + 1]	      1408	mark.c	FUNCTION_33
0x4002b0b	        0x48890424	                    mov qword [rsp], rax	      1408	mark.c	FUNCTION_33
0x4002b0f	      0x440fb66d01	              movzx r13d, byte [rbp + 1]	      1411	mark.c	FUNCTION_33	IF_1
0x4002b14	          0x4584ed	                         test r13b, r13b	      1409	mark.c	FUNCTION_33	IF_1
0x4002b17	     0xf88c0010000	                            js 0x4002cdd	      1409	mark.c	FUNCTION_33	IF_1
0x4002b1d	          0x4189f4	                           mov r12d, esi	      1409	mark.c	FUNCTION_33	IF_1
0x4002b20	         0xfb64500	                   movzx eax, byte [rbp]	      1413	mark.c	FUNCTION_33	IF_1	CALL_2
0x4002b24	            0x3c27	                            cmp al, 0x27	      1411	mark.c	FUNCTION_33	IF_1
0x4002b26	            0x752c	                           jne 0x4002b54	      1411	mark.c	FUNCTION_33	IF_1
0x4002b28	        0x410fb6c5	                         movzx eax, r13b	      1413	mark.c	FUNCTION_33	IF_1	CALL_2
0x4002b2c	          0x83e830	                           sub eax, 0x30	      1413	mark.c	FUNCTION_33	IF_1	CALL_2
0x4002b2f	          0x83f809	                              cmp eax, 9	      1413	mark.c	FUNCTION_33	IF_1	CALL_2
0x4002b32	     0xf86d7010000	                           jbe 0x4002d0f	      1413	mark.c	FUNCTION_33	IF_1	CALL_2
0x4002b38	      0xe800000000	                          call 0x4002b3d	      1413	mark.c	FUNCTION_33	IF_1	CALL_2
0x4002b3d	        0x410fb6d5	                         movzx edx, r13b	      1413	mark.c	FUNCTION_33	IF_1	CALL_2
0x4002b41	          0x488b08	                    mov rcx, qword [rax]	      1413	mark.c	FUNCTION_33	IF_1	CALL_2
0x4002b44	      0xf644510101	         test byte [rcx + rdx*2 + 1], 1 	      1413	mark.c	FUNCTION_33	IF_1	CALL_2
0x4002b49	     0xf85b1010000	                           jne 0x4002d00	      1413	mark.c	FUNCTION_33	IF_1	CALL_2
0x4002b4f	      0xe989010000	                           jmp 0x4002cdd	      1413	mark.c	FUNCTION_33	IF_1	CALL_2
0x4002b54	            0x3c2d	                            cmp al, 0x2d	      1414	mark.c	FUNCTION_33	IF_1
0x4002b56	     0xf8581010000	                           jne 0x4002cdd	      1414	mark.c	FUNCTION_33	IF_1
0x4002b5c	        0x4180fd27	                          cmp r13b, 0x27	      1414	mark.c	FUNCTION_33	IF_1
0x4002b60	     0xf8577010000	                           jne 0x4002cdd	      1414	mark.c	FUNCTION_33	IF_1
0x4002b66	     0xf85ac000000	                           jne 0x4002c18	      1416	mark.c	FUNCTION_33	IF_1	IF_2
0x4002b6c	    0x4c8b05000000	              mov r8, qword [0x04002b73]	      1420	mark.c	FUNCTION_33	IF_1	IF_2	IF_3
0x4002b73	    0x458b88401500	           mov r9d, dword [r8 + 0x1540] 	      1420	mark.c	FUNCTION_33	IF_1	IF_2	IF_3
0x4002b7a	        0x4183f964	                           cmp r9d, 0x64	      1420	mark.c	FUNCTION_33	IF_1	IF_2	IF_3
0x4002b7e	     0xf8459010000	                            je 0x4002cdd	      1420	mark.c	FUNCTION_33	IF_1	IF_2	IF_3
0x4002b84	          0x4585c9	                           test r9d, r9d	      1424	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x4002b87	            0x7e5d	                           jle 0x4002be6	      1424	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x4002b89	          0x4489c8	                            mov eax, r9d	      1424	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x4002b8c	          0x8d48ff	                      lea ecx, [rax - 1]	      1425	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x4002b8f	            0x4898	                                    cdqe	      1425	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x4002b91	        0x488d0480	                  lea rax, [rax + rax*4]	      1425	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x4002b95	        0x498d34c0	                   lea rsi, [r8 + rax*8]	      1425	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x4002b99	    0x488d86a00500	                  lea rax, [rsi + 0x5a0]	      1425	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x4002ba0	          0x4863d1	                         movsxd rdx, ecx	      1425	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x4002ba3	        0x488d1492	                  lea rdx, [rdx + rdx*4]	      1425	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x4002ba7	        0x498d3cd0	                   lea rdi, [r8 + rdx*8]	      1425	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x4002bab	    0x488d97a00500	                  lea rdx, [rdi + 0x5a0]	      1425	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x4002bb2	    0x488bbfa00500	           mov rdi, qword [rdi + 0x5a0] 	      1425	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x4002bb9	    0x4889bea00500	            mov qword [rsi + 0x5a0], rdi	      1425	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x4002bc0	        0x488b7208	                mov rsi, qword [rdx + 8]	      1425	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x4002bc4	        0x48897008	                mov qword [rax + 8], rsi	      1425	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x4002bc8	        0x488b7210	            mov rsi, qword [rdx + 0x10] 	      1425	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x4002bcc	        0x48897010	             mov qword [rax + 0x10], rsi	      1425	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x4002bd0	        0x488b7218	            mov rsi, qword [rdx + 0x18] 	      1425	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x4002bd4	        0x48897018	             mov qword [rax + 0x18], rsi	      1425	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x4002bd8	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	      1425	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x4002bdc	        0x48895020	             mov qword [rax + 0x20], rdx	      1425	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x4002be0	            0x89c8	                            mov eax, ecx	      1424	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x4002be2	            0x85c9	                           test ecx, ecx	      1424	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x4002be4	            0x75a6	                           jne 0x4002b8c	      1424	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x4002be6	    0x418380441500	              add dword [r8 + 0x1544], 1	      1426	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1
0x4002bee	        0x4183c101	                              add r9d, 1	      1427	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1
0x4002bf2	    0x458988401500	           mov dword [r8 + 0x1540], r9d 	      1427	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1
0x4002bf9	    0x4d8da8a00500	                   lea r13, [r8 + 0x5a0]	      1428	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1
0x4002c00	    0x49c780a00500	               mov qword [r8 + 0x5a0], 0	      1429	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1
0x4002c0b	    0x49c780b80500	               mov qword [r8 + 0x5b8], 0	      1430	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1
0x4002c16	            0xeb38	                           jmp 0x4002c50	      1430	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1
0x4002c18	        0x410fb6c5	                         movzx eax, r13b	      1436	mark.c	FUNCTION_33	IF_1	ELSE_2	IF_4	CALL_3
0x4002c1c	          0x83e830	                           sub eax, 0x30	      1436	mark.c	FUNCTION_33	IF_1	ELSE_2	IF_4	CALL_3
0x4002c1f	          0x83f809	                              cmp eax, 9	      1436	mark.c	FUNCTION_33	IF_1	ELSE_2	IF_4	CALL_3
0x4002c22	            0x7717	                            ja 0x4002c3b	      1436	mark.c	FUNCTION_33	IF_1	ELSE_2	IF_4	CALL_3
0x4002c24	        0x410fb6c5	                         movzx eax, r13b	      1437	mark.c	FUNCTION_33	IF_1	ELSE_2	IF_4
0x4002c28	          0x83e816	                           sub eax, 0x16	      1437	mark.c	FUNCTION_33	IF_1	ELSE_2	IF_4
0x4002c2b	            0x4898	                                    cdqe	      1437	mark.c	FUNCTION_33	IF_1	ELSE_2	IF_4
0x4002c2d	        0x488d0480	                  lea rax, [rax + rax*4]	      1437	mark.c	FUNCTION_33	IF_1	ELSE_2	IF_4
0x4002c31	    0x4c8d2cc50000	                        lea r13, [rax*8]	      1437	mark.c	FUNCTION_33	IF_1	ELSE_2	IF_4
0x4002c39	            0xeb15	                           jmp 0x4002c50	      1437	mark.c	FUNCTION_33	IF_1	ELSE_2	IF_4
0x4002c3b	        0x410fb6c5	                         movzx eax, r13b	      1439	mark.c	FUNCTION_33	IF_1	ELSE_3
0x4002c3f	          0x83e841	                           sub eax, 0x41	      1439	mark.c	FUNCTION_33	IF_1	ELSE_3
0x4002c42	            0x4898	                                    cdqe	      1439	mark.c	FUNCTION_33	IF_1	ELSE_3
0x4002c44	        0x488d0480	                  lea rax, [rax + rax*4]	      1439	mark.c	FUNCTION_33	IF_1	ELSE_3
0x4002c48	    0x4c8d2cc50000	                        lea r13, [rax*8]	      1439	mark.c	FUNCTION_33	IF_1	ELSE_3
0x4002c50	          0x4d85ed	                           test r13, r13	      1440	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5
0x4002c53	     0xf8484000000	                            je 0x4002cdd	      1440	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5
0x4002c59	      0x49837d0000	                      cmp qword [r13], 0	      1440	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5
0x4002c5e	            0x7405	                            je 0x4002c65	      1440	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5
0x4002c60	          0x4585e4	                         test r12d, r12d	      1440	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5
0x4002c63	            0x7478	                            je 0x4002cdd	      1440	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5
0x4002c65	        0x488d7d02	                      lea rdi, [rbp + 2]	      1442	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_4
0x4002c69	      0xe800000000	                          call 0x4002c6e	      1442	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_4
0x4002c6e	        0x48890424	                    mov qword [rsp], rax	      1442	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_4
0x4002c72	          0x4889e7	                            mov rdi, rsp	      1443	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_5
0x4002c75	      0xe800000000	                          call 0x4002c7a	      1443	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_5
0x4002c7a	        0x49894500	                    mov qword [r13], rax	      1443	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_5
0x4002c7e	        0x488b3c24	                    mov rdi, qword [rsp]	      1444	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_6
0x4002c82	      0xe800000000	                          call 0x4002c87	      1444	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_6
0x4002c87	        0x48890424	                    mov qword [rsp], rax	      1444	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_6
0x4002c8b	          0x4889e7	                            mov rdi, rsp	      1445	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_7
0x4002c8e	      0xe800000000	                          call 0x4002c93	      1445	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_7
0x4002c93	        0x41894508	                mov dword [r13 + 8], eax	      1445	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_7
0x4002c97	    0x41c7450c0000	                mov dword [r13 + 0xc], 0	      1447	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5
0x4002c9f	    0x41c745100000	               mov dword [r13 + 0x10], 0	      1449	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5
0x4002ca7	        0x488b3c24	                    mov rdi, qword [rsp]	      1450	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_8
0x4002cab	      0xe800000000	                          call 0x4002cb0	      1450	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_8
0x4002cb0	        0x48890424	                    mov qword [rsp], rax	      1450	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_8
0x4002cb4	        0x498b7d18	            mov rdi, qword [r13 + 0x18] 	      1451	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_9
0x4002cb8	      0xe800000000	                          call 0x4002cbd	      1451	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_9
0x4002cbd	        0x488b3424	                    mov rsi, qword [rsp]	      1452	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_10
0x4002cc1	          0x482b33	                    sub rsi, qword [rbx]	      1452	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_10
0x4002cc4	      0xba00000000	                              mov edx, 0	      1452	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_10
0x4002cc9	          0x4889df	                            mov rdi, rbx	      1452	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_10
0x4002ccc	      0xe800000000	                          call 0x4002cd1	      1452	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_10
0x4002cd1	        0x49894518	             mov qword [r13 + 0x18], rax	      1452	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_10
0x4002cd5	    0x49c745200000	               mov qword [r13 + 0x20], 0	      1454	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5
0x4002cdd	        0x488b5308	                mov rdx, qword [rbx + 8]	      1457	mark.c	FUNCTION_33	CALL_11
0x4002ce1	      0xbe00020000	                          mov esi, 0x200	      1457	mark.c	FUNCTION_33	CALL_11
0x4002ce6	          0x488b3b	                    mov rdi, qword [rbx]	      1457	mark.c	FUNCTION_33	CALL_11
0x4002ce9	      0xe800000000	                          call 0x4002cee	      1457	mark.c	FUNCTION_33	CALL_11
0x4002cee	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      1458	mark.c	FUNCTION_33
0x4002cf3	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1458	mark.c	FUNCTION_33
0x4002cfc	            0x7425	                            je 0x4002d23	      1458	mark.c	FUNCTION_33
0x4002cfe	            0xeb1e	                           jmp 0x4002d1e	      1458	mark.c	FUNCTION_33
0x4002d00	        0x4180fd27	                          cmp r13b, 0x27	      1416	mark.c	FUNCTION_33	IF_1	IF_2
0x4002d04	     0xf8531ffffff	                           jne 0x4002c3b	      1416	mark.c	FUNCTION_33	IF_1	IF_2
0x4002d0a	      0xe95dfeffff	                           jmp 0x4002b6c	      1416	mark.c	FUNCTION_33	IF_1	IF_2
0x4002d0f	        0x4180fd27	                          cmp r13b, 0x27	      1416	mark.c	FUNCTION_33	IF_1	IF_2
0x4002d13	     0xf850bffffff	                           jne 0x4002c24	      1416	mark.c	FUNCTION_33	IF_1	IF_2
0x4002d19	      0xe94efeffff	                           jmp 0x4002b6c	      1416	mark.c	FUNCTION_33	IF_1	IF_2
0x4002d1e	      0xe800000000	                          call 0x4002d23	      1458	mark.c	FUNCTION_33
0x4002d23	        0x4883c418	                           add rsp, 0x18	      1458	mark.c	FUNCTION_33
0x4002d27	              0x5b	                                 pop rbx	      1458	mark.c	FUNCTION_33
0x4002d28	              0x5d	                                 pop rbp	      1458	mark.c	FUNCTION_33
0x4002d29	            0x415c	                                 pop r12	      1458	mark.c	FUNCTION_33
0x4002d2b	            0x415d	                                 pop r13	      1458	mark.c	FUNCTION_33
0x4002d2d	              0xc3	                                     ret	      1458	mark.c	FUNCTION_33
movechangelist	DO,0:FOR,0:WHILE,0:ELSE,2:functions,0:IF,5:CALL,0:SWITCH,0	28
0x4001175	    0x488b0d000000	            mov rcx, qword [0x0400117c] 	       282	mark.c	FUNCTION_6	IF_1
0x400117c	    0x8b9198090000	           mov edx, dword [rcx + 0x998] 	       282	mark.c	FUNCTION_6	IF_1
0x4001182	            0x85d2	                           test edx, edx	       282	mark.c	FUNCTION_6	IF_1
0x4001184	            0x743d	                            je 0x40011c3	       282	mark.c	FUNCTION_6	IF_1
0x4001186	    0x488b35000000	            mov rsi, qword [0x0400118d] 	       285	mark.c	FUNCTION_6
0x400118d	    0x8b8648150000	          mov eax, dword [rsi + 0x1548] 	       285	mark.c	FUNCTION_6
0x4001193	             0x1c7	                            add edi, eax	       286	mark.c	FUNCTION_6	IF_2
0x4001195	            0x790b	                           jns 0x40011a2	       286	mark.c	FUNCTION_6	IF_2
0x4001197	            0x85c0	                           test eax, eax	       288	mark.c	FUNCTION_6	IF_2	IF_3
0x4001199	            0x742e	                            je 0x40011c9	       288	mark.c	FUNCTION_6	IF_2	IF_3
0x400119b	      0xbf00000000	                              mov edi, 0	       290	mark.c	FUNCTION_6	IF_2
0x40011a0	            0xeb0b	                           jmp 0x40011ad	       290	mark.c	FUNCTION_6	IF_2
0x40011a2	            0x39fa	                            cmp edx, edi	       292	mark.c	FUNCTION_6	ELSE_1	IF_4
0x40011a4	            0x7f07	                            jg 0x40011ad	       292	mark.c	FUNCTION_6	ELSE_1	IF_4
0x40011a6	          0x8d7aff	                      lea edi, [rdx - 1]	       294	mark.c	FUNCTION_6	ELSE_1	IF_4	IF_5
0x40011a9	            0x39f8	                            cmp eax, edi	       294	mark.c	FUNCTION_6	ELSE_1	IF_4	IF_5
0x40011ab	            0x7422	                            je 0x40011cf	       294	mark.c	FUNCTION_6	ELSE_1	IF_4	IF_5
0x40011ad	    0x89be48150000	          mov dword [rsi + 0x1548], edi 	       300	mark.c	FUNCTION_6	ELSE_2
0x40011b3	          0x4863ff	                         movsxd rdi, edi	       301	mark.c	FUNCTION_6	ELSE_2
0x40011b6	        0x48c1e704	                              shl rdi, 4	       301	mark.c	FUNCTION_6	ELSE_2
0x40011ba	    0x488d84395803	           lea rax, [rcx + rdi + 0x358] 	       301	mark.c	FUNCTION_6	ELSE_2
0x40011c2	              0xc3	                                     ret	       301	mark.c	FUNCTION_6	ELSE_2
0x40011c3	      0xb800000000	                              mov eax, 0	       283	mark.c	FUNCTION_6	IF_1
0x40011c8	              0xc3	                                     ret	       283	mark.c	FUNCTION_6	IF_1
0x40011c9	      0xb800000000	                              mov eax, 0	       289	mark.c	FUNCTION_6	IF_2	IF_3
0x40011ce	              0xc3	                                     ret	       289	mark.c	FUNCTION_6	IF_2	IF_3
0x40011cf	      0xb800000000	                              mov eax, 0	       295	mark.c	FUNCTION_6	ELSE_1	IF_4	IF_5
0x40011d4	              0xc3	                                     ret	       302	mark.c	FUNCTION_6	ELSE_2
write_viminfo_filemarks	DO,0:FOR,5:WHILE,0:ELSE,3:functions,0:IF,9:CALL,19:SWITCH,0	292
0x40033c8	            0x4157	                                push r15	      1668	mark.c	FUNCTION_38
0x40033ca	            0x4156	                                push r14	      1668	mark.c	FUNCTION_38
0x40033cc	            0x4155	                                push r13	      1668	mark.c	FUNCTION_38
0x40033ce	            0x4154	                                push r12	      1668	mark.c	FUNCTION_38
0x40033d0	              0x55	                                push rbp	      1668	mark.c	FUNCTION_38
0x40033d1	              0x53	                                push rbx	      1668	mark.c	FUNCTION_38
0x40033d2	        0x4883ec18	                           sub rsp, 0x18	      1668	mark.c	FUNCTION_38
0x40033d6	          0x4889fb	                            mov rbx, rdi	      1668	mark.c	FUNCTION_38
0x40033d9	      0xbf66000000	                           mov edi, 0x66	      1676	mark.c	FUNCTION_38	IF_1	CALL_1
0x40033de	      0xe800000000	                          call 0x40033e3	      1676	mark.c	FUNCTION_38	IF_1	CALL_1
0x40033e3	            0x85c0	                           test eax, eax	      1676	mark.c	FUNCTION_38	IF_1	CALL_1
0x40033e5	     0xf8485040000	                            je 0x4003870	      1676	mark.c	FUNCTION_38	IF_1	CALL_1
0x40033eb	      0xba05000000	                              mov edx, 5	      1679	mark.c	FUNCTION_38	CALL_3
0x40033f0	      0xbe00000000	                              mov esi, 0	      1679	mark.c	FUNCTION_38	CALL_3
0x40033f5	      0xbf00000000	                              mov edi, 0	      1679	mark.c	FUNCTION_38	CALL_3
0x40033fa	      0xe800000000	                          call 0x40033ff	      1679	mark.c	FUNCTION_38	CALL_3
0x40033ff	          0x4889de	                            mov rsi, rbx	      1679	mark.c	FUNCTION_38	CALL_3
0x4003402	          0x4889c7	                            mov rdi, rax	      1679	mark.c	FUNCTION_38	CALL_3
0x4003405	      0xe800000000	                          call 0x400340a	      1679	mark.c	FUNCTION_38	CALL_3
0x400340a	    0x41be00000000	                             mov r14d, 0	      1679	mark.c	FUNCTION_38	CALL_3
0x4003410	    0x41bc00000000	                             mov r12d, 0	      1679	mark.c	FUNCTION_38	CALL_3
0x4003416	          0x4c89f5	                            mov rbp, r14	      1679	mark.c	FUNCTION_38	CALL_3
0x4003419	    0x41bd41000000	                          mov r13d, 0x41	      1679	mark.c	FUNCTION_38	CALL_3
0x400341f	    0x488b35000000	            mov rsi, qword [0x04003426] 	      1684	mark.c	FUNCTION_38	FOR_1	IF_2
0x4003426	          0x4885f6	                           test rsi, rsi	      1684	mark.c	FUNCTION_38	FOR_1	IF_2
0x4003429	            0x741a	                            je 0x4003445	      1684	mark.c	FUNCTION_38	FOR_1	IF_2
0x400342b	          0x4889e8	                            mov rax, rbp	      1684	mark.c	FUNCTION_38	FOR_1	IF_2
0x400342e	          0x4c29f0	                            sub rax, r14	      1684	mark.c	FUNCTION_38	FOR_1	IF_2
0x4003431	          0x4801c6	                            add rsi, rax	      1684	mark.c	FUNCTION_38	FOR_1	IF_2
0x4003434	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      1684	mark.c	FUNCTION_38	FOR_1	IF_2
0x4003438	        0x48394620	            cmp qword [rsi + 0x20], rax 	      1684	mark.c	FUNCTION_38	FOR_1	IF_2
0x400343c	            0x7f0a	                            jg 0x4003448	      1684	mark.c	FUNCTION_38	FOR_1	IF_2
0x400343e	      0x48837d0000	                      cmp qword [rbp], 0	      1685	mark.c	FUNCTION_38	FOR_1	IF_2
0x4003443	            0x7403	                            je 0x4003448	      1685	mark.c	FUNCTION_38	FOR_1	IF_2
0x4003445	          0x4889ee	                            mov rsi, rbp	      1688	mark.c	FUNCTION_38	FOR_1	ELSE_1
0x4003448	          0x4489e9	                           mov ecx, r13d	      1689	mark.c	FUNCTION_38	FOR_1	CALL_4
0x400344b	      0xba27000000	                           mov edx, 0x27	      1689	mark.c	FUNCTION_38	FOR_1	CALL_4
0x4003450	          0x4889df	                            mov rdi, rbx	      1689	mark.c	FUNCTION_38	FOR_1	CALL_4
0x4003453	      0xe89ad6ffff	             call sym.write_one_filemark	      1689	mark.c	FUNCTION_38	FOR_1	CALL_4
0x4003458	        0x4883c528	                           add rbp, 0x28	      1689	mark.c	FUNCTION_38	FOR_1	CALL_4
0x400345c	        0x4183c501	                             add r13d, 1	      1689	mark.c	FUNCTION_38	FOR_1	CALL_4
0x4003460	          0x4939ec	                            cmp r12, rbp	      1682	mark.c	FUNCTION_38	FOR_1
0x4003463	            0x75ba	                           jne 0x400341f	      1682	mark.c	FUNCTION_38	FOR_1
0x4003465	    0x488b3d000000	            mov rdi, qword [0x0400346c] 	      1698	mark.c	FUNCTION_38	IF_3	CALL_5
0x400346c	    0x4883bf880000	               cmp qword [rdi + 0x88], 0	      1698	mark.c	FUNCTION_38	IF_3	CALL_5
0x4003474	     0xf8463010000	                            je 0x40035dd	      1698	mark.c	FUNCTION_38	IF_3	CALL_5
0x400347a	      0xe81fffffff	               call sym.skip_for_viminfo	      1698	mark.c	FUNCTION_38	IF_3	CALL_5
0x400347f	          0x4189c6	                           mov r14d, eax	      1698	mark.c	FUNCTION_38	IF_3	CALL_5
0x4003482	            0x85c0	                           test eax, eax	      1698	mark.c	FUNCTION_38	IF_3	CALL_5
0x4003484	     0xf8553010000	                           jne 0x40035dd	      1698	mark.c	FUNCTION_38	IF_3	CALL_5
0x400348a	    0x488b05000000	            mov rax, qword [0x04003491] 	      1700	mark.c	FUNCTION_38	IF_3	CALL_6
0x4003491	    0x8bb8b8000000	            mov edi, dword [rax + 0xb8] 	      1700	mark.c	FUNCTION_38	IF_3	CALL_6
0x4003497	      0xba00000000	                              mov edx, 0	      1700	mark.c	FUNCTION_38	IF_3	CALL_6
0x400349c	      0xbe01000000	                              mov esi, 1	      1700	mark.c	FUNCTION_38	IF_3	CALL_6
0x40034a1	      0xe800000000	                          call 0x40034a6	      1700	mark.c	FUNCTION_38	IF_3	CALL_6
0x40034a6	          0x4989c7	                            mov r15, rax	      1700	mark.c	FUNCTION_38	IF_3	CALL_6
0x40034a9	    0x488b05000000	            mov rax, qword [0x040034b0] 	      1702	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x40034b0	        0x4c8b6838	            mov r13, qword [rax + 0x38] 	      1702	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x40034b4	    0x488b05000000	            mov rax, qword [0x040034bb] 	      1704	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x40034bb	      0x4889442408	                mov qword [rsp + 8], rax	      1704	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x40034c0	      0xbd1a000000	                           mov ebp, 0x1a	      1701	mark.c	FUNCTION_38	IF_3	FOR_2
0x40034c5	        0x4d392c24	                    cmp qword [r12], r13	      1702	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x40034c9	            0x7540	                           jne 0x400350b	      1702	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x40034cb	      0x498b742418	            mov rsi, qword [r12 + 0x18] 	      1703	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x40034d0	          0x4885f6	                           test rsi, rsi	      1703	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x40034d3	            0x7515	                           jne 0x40034ea	      1703	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x40034d5	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1703	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x40034da	    0x8b89b8000000	            mov ecx, dword [rcx + 0xb8] 	      1703	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x40034e0	      0x41394c2410	            cmp dword [r12 + 0x10], ecx 	      1703	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x40034e5	           0xf94c0	                                 sete al	      1703	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x40034e8	            0xeb1d	                           jmp 0x4003507	      1703	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x40034ea	          0x4d85ff	                           test r15, r15	      1706	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4	CALL_7
0x40034ed	            0x7412	                            je 0x4003501	      1706	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4	CALL_7
0x40034ef	          0x4c89ff	                            mov rdi, r15	      1706	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4	CALL_7
0x40034f2	      0xe800000000	                          call 0x40034f7	      1706	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4	CALL_7
0x40034f7	            0x85c0	                           test eax, eax	      1706	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4	CALL_7
0x40034f9	           0xf94c0	                                 sete al	      1706	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4	CALL_7
0x40034fc	           0xfb6c0	                           movzx eax, al	      1706	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4	CALL_7
0x40034ff	            0xeb03	                           jmp 0x4003504	      1706	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4	CALL_7
0x4003501	          0x4489f0	                           mov eax, r14d	      1706	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4	CALL_7
0x4003504	          0x83e001	                              and eax, 1	      1703	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x4003507	            0x84c0	                             test al, al	      1703	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x4003509	            0x7511	                           jne 0x400351c	      1703	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x400350b	          0x83c501	                              add ebp, 1	      1701	mark.c	FUNCTION_38	IF_3	FOR_2
0x400350e	        0x4983c428	                           add r12, 0x28	      1701	mark.c	FUNCTION_38	IF_3	FOR_2
0x4003512	          0x83fd23	                           cmp ebp, 0x23	      1701	mark.c	FUNCTION_38	IF_3	FOR_2
0x4003515	            0x75ae	                           jne 0x40034c5	      1701	mark.c	FUNCTION_38	IF_3	FOR_2
0x4003517	      0xe93b030000	                           jmp 0x4003857	      1701	mark.c	FUNCTION_38	IF_3	FOR_2
0x400351c	          0x4c89ff	                            mov rdi, r15	      1708	mark.c	FUNCTION_38	IF_3	CALL_8
0x400351f	      0xe800000000	                          call 0x4003524	      1708	mark.c	FUNCTION_38	IF_3	CALL_8
0x4003524	          0x4863c5	                         movsxd rax, ebp	      1710	mark.c	FUNCTION_38	IF_3	CALL_9
0x4003527	        0x488d0480	                  lea rax, [rax + rax*4]	      1710	mark.c	FUNCTION_38	IF_3	CALL_9
0x400352b	    0x488b3cc50000	                  mov rdi, qword [rax*8]	      1710	mark.c	FUNCTION_38	IF_3	CALL_9
0x4003533	      0xe800000000	                          call 0x4003538	      1710	mark.c	FUNCTION_38	IF_3	CALL_9
0x4003538	          0x83fd1a	                           cmp ebp, 0x1a	      1711	mark.c	FUNCTION_38	IF_3	FOR_3
0x400353b	            0x7e59	                           jle 0x4003596	      1711	mark.c	FUNCTION_38	IF_3	FOR_3
0x400353d	          0x8d4dff	                      lea ecx, [rbp - 1]	      1712	mark.c	FUNCTION_38	IF_3	FOR_3
0x4003540	          0x4863ed	                         movsxd rbp, ebp	      1712	mark.c	FUNCTION_38	IF_3	FOR_3
0x4003543	      0x488d74ad00	                  lea rsi, [rbp + rbp*4]	      1712	mark.c	FUNCTION_38	IF_3	FOR_3
0x4003548	    0x488d04f50000	                        lea rax, [rsi*8]	      1712	mark.c	FUNCTION_38	IF_3	FOR_3
0x4003550	          0x4863d1	                         movsxd rdx, ecx	      1712	mark.c	FUNCTION_38	IF_3	FOR_3
0x4003553	        0x488d3c92	                  lea rdi, [rdx + rdx*4]	      1712	mark.c	FUNCTION_38	IF_3	FOR_3
0x4003557	    0x488d14fd0000	                        lea rdx, [rdi*8]	      1712	mark.c	FUNCTION_38	IF_3	FOR_3
0x400355f	    0x488b3cfd0000	                  mov rdi, qword [rdi*8]	      1712	mark.c	FUNCTION_38	IF_3	FOR_3
0x4003567	    0x48893cf50000	                  mov qword [rsi*8], rdi	      1712	mark.c	FUNCTION_38	IF_3	FOR_3
0x400356f	        0x488b7208	                mov rsi, qword [rdx + 8]	      1712	mark.c	FUNCTION_38	IF_3	FOR_3
0x4003573	        0x48897008	                mov qword [rax + 8], rsi	      1712	mark.c	FUNCTION_38	IF_3	FOR_3
0x4003577	        0x488b7210	            mov rsi, qword [rdx + 0x10] 	      1712	mark.c	FUNCTION_38	IF_3	FOR_3
0x400357b	        0x48897010	             mov qword [rax + 0x10], rsi	      1712	mark.c	FUNCTION_38	IF_3	FOR_3
0x400357f	        0x488b7218	            mov rsi, qword [rdx + 0x18] 	      1712	mark.c	FUNCTION_38	IF_3	FOR_3
0x4003583	        0x48897018	             mov qword [rax + 0x18], rsi	      1712	mark.c	FUNCTION_38	IF_3	FOR_3
0x4003587	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	      1712	mark.c	FUNCTION_38	IF_3	FOR_3
0x400358b	        0x48895020	             mov qword [rax + 0x20], rdx	      1712	mark.c	FUNCTION_38	IF_3	FOR_3
0x400358f	            0x89cd	                            mov ebp, ecx	      1711	mark.c	FUNCTION_38	IF_3	FOR_3
0x4003591	          0x83f91a	                           cmp ecx, 0x1a	      1711	mark.c	FUNCTION_38	IF_3	FOR_3
0x4003594	            0x75a7	                           jne 0x400353d	      1711	mark.c	FUNCTION_38	IF_3	FOR_3
0x4003596	    0x488b05000000	            mov rax, qword [0x0400359d] 	      1713	mark.c	FUNCTION_38	IF_3
0x400359d	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      1713	mark.c	FUNCTION_38	IF_3
0x40035a1	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1713	mark.c	FUNCTION_38	IF_3
0x40035a5	    0x488905000000	            mov qword [0x040035ac], rax 	      1713	mark.c	FUNCTION_38	IF_3
0x40035ac	    0x488915000000	            mov qword [0x040035b3], rdx 	      1713	mark.c	FUNCTION_38	IF_3
0x40035b3	    0x488b05000000	            mov rax, qword [0x040035ba] 	      1714	mark.c	FUNCTION_38	IF_3
0x40035ba	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      1714	mark.c	FUNCTION_38	IF_3
0x40035c0	    0x890500000000	            mov dword [0x040035c6], eax 	      1714	mark.c	FUNCTION_38	IF_3
0x40035c6	    0x48c705000000	               mov qword [0x040035d1], 0	      1715	mark.c	FUNCTION_38	IF_3
0x40035d1	      0xe800000000	                          call 0x40035d6	      1716	mark.c	FUNCTION_38	IF_3	CALL_10
0x40035d6	    0x488905000000	            mov qword [0x040035dd], rax 	      1716	mark.c	FUNCTION_38	IF_3	CALL_10
0x40035dd	      0xbd30000000	                           mov ebp, 0x30	      1706	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4	CALL_7
0x40035e2	    0x41bc1a000000	                          mov r12d, 0x1a	      1706	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4	CALL_7
0x40035e8	    0x41be1a000000	                          mov r14d, 0x1a	      1706	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4	CALL_7
0x40035ee	    0x488b05000000	            mov rax, qword [0x040035f5] 	      1724	mark.c	FUNCTION_38	FOR_4
0x40035f5	          0x4885c0	                           test rax, rax	      1724	mark.c	FUNCTION_38	FOR_4
0x40035f8	     0xf84e6010000	                            je 0x40037e4	      1724	mark.c	FUNCTION_38	FOR_4
0x40035fe	          0x4963d6	                        movsxd rdx, r14d	      1724	mark.c	FUNCTION_38	FOR_4
0x4003601	        0x488d1492	                  lea rdx, [rdx + rdx*4]	      1724	mark.c	FUNCTION_38	FOR_4
0x4003605	        0x488d04d0	                  lea rax, [rax + rdx*8]	      1724	mark.c	FUNCTION_38	FOR_4
0x4003609	          0x4885c0	                           test rax, rax	      1726	mark.c	FUNCTION_38	FOR_4	IF_5
0x400360c	     0xf841d020000	                            je 0x400382f	      1726	mark.c	FUNCTION_38	FOR_4	IF_5
0x4003612	          0x488b08	                    mov rcx, qword [rax]	      1727	mark.c	FUNCTION_38	FOR_4	IF_5
0x4003615	          0x4885c9	                           test rcx, rcx	      1727	mark.c	FUNCTION_38	FOR_4	IF_5
0x4003618	     0xf84df010000	                            je 0x40037fd	      1727	mark.c	FUNCTION_38	FOR_4	IF_5
0x400361e	          0x4963d4	                        movsxd rdx, r12d	      1728	mark.c	FUNCTION_38	FOR_4	IF_5
0x4003621	        0x488d1492	                  lea rdx, [rdx + rdx*4]	      1728	mark.c	FUNCTION_38	FOR_4	IF_5
0x4003625	    0x488b3cd50000	                  mov rdi, qword [rdx*8]	      1728	mark.c	FUNCTION_38	FOR_4	IF_5
0x400362d	        0x48397820	            cmp qword [rax + 0x20], rdi 	      1728	mark.c	FUNCTION_38	FOR_4	IF_5
0x4003631	            0x7f16	                            jg 0x4003649	      1728	mark.c	FUNCTION_38	FOR_4	IF_5
0x4003633	          0x4963d4	                        movsxd rdx, r12d	      1729	mark.c	FUNCTION_38	FOR_4	IF_5
0x4003636	        0x488d1492	                  lea rdx, [rdx + rdx*4]	      1729	mark.c	FUNCTION_38	FOR_4	IF_5
0x400363a	    0x48833cd50000	                    cmp qword [rdx*8], 0	      1729	mark.c	FUNCTION_38	FOR_4	IF_5
0x4003643	     0xf85b4010000	                           jne 0x40037fd	      1729	mark.c	FUNCTION_38	FOR_4	IF_5
0x4003649	        0x4183c601	                             add r14d, 1	      1732	mark.c	FUNCTION_38	FOR_4	IF_5
0x400364d	          0x4989c5	                            mov r13, rax	      1724	mark.c	FUNCTION_38	FOR_4
0x4003650	            0xeb6b	                           jmp 0x40036bd	      1732	mark.c	FUNCTION_38	FOR_4	IF_5
0x4003652	          0x4963d4	                        movsxd rdx, r12d	      1739	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x4003655	        0x488d1492	                  lea rdx, [rdx + rdx*4]	      1739	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x4003659	    0x488b0cd50000	                  mov rcx, qword [rdx*8]	      1739	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x4003661	        0x48394820	            cmp qword [rax + 0x20], rcx 	      1739	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x4003665	            0x7549	                           jne 0x40036b0	      1739	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x4003667	          0x8b5010	            mov edx, dword [rax + 0x10] 	      1740	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x400366a	            0x85d2	                           test edx, edx	      1740	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x400366c	            0x7410	                            je 0x400367e	      1740	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x400366e	          0x4963cc	                        movsxd rcx, r12d	      1741	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x4003671	        0x488d0c89	                  lea rcx, [rcx + rcx*4]	      1741	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x4003675	    0x3b14cd000000	                  cmp edx, dword [rcx*8]	      1741	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x400367c	            0x7429	                            je 0x40036a7	      1741	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x400367e	        0x488b7818	            mov rdi, qword [rax + 0x18] 	      1742	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x4003682	          0x4885ff	                           test rdi, rdi	      1742	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x4003685	            0x742e	                            je 0x40036b5	      1742	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x4003687	          0x4d63e4	                        movsxd r12, r12d	      1743	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x400368a	        0x4b8d04a4	                  lea rax, [r12 + r12*4]	      1743	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x400368e	    0x488b34c50000	                  mov rsi, qword [rax*8]	      1743	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x4003696	          0x4885f6	                           test rsi, rsi	      1743	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x4003699	            0x741f	                            je 0x40036ba	      1743	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x400369b	      0xe800000000	                          call 0x40036a0	      1744	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6	CALL_11
0x40036a0	          0x4589fc	                          mov r12d, r15d	      1744	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6	CALL_11
0x40036a3	            0x85c0	                           test eax, eax	      1744	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6	CALL_11
0x40036a5	            0x7516	                           jne 0x40036bd	      1744	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6	CALL_11
0x40036a7	        0x4183c601	                             add r14d, 1	      1745	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x40036ab	          0x4589fc	                          mov r12d, r15d	      1745	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x40036ae	            0xeb0d	                           jmp 0x40036bd	      1745	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x40036b0	          0x4589fc	                          mov r12d, r15d	      1745	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x40036b3	            0xeb08	                           jmp 0x40036bd	      1745	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x40036b5	          0x4589fc	                          mov r12d, r15d	      1745	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x40036b8	            0xeb03	                           jmp 0x40036bd	      1745	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x40036ba	          0x4589fc	                          mov r12d, r15d	      1745	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x40036bd	            0x89e9	                            mov ecx, ebp	      1747	mark.c	FUNCTION_38	FOR_4	CALL_12
0x40036bf	      0xba27000000	                           mov edx, 0x27	      1747	mark.c	FUNCTION_38	FOR_4	CALL_12
0x40036c4	          0x4c89ee	                            mov rsi, r13	      1747	mark.c	FUNCTION_38	FOR_4	CALL_12
0x40036c7	          0x4889df	                            mov rdi, rbx	      1747	mark.c	FUNCTION_38	FOR_4	CALL_12
0x40036ca	      0xe823d4ffff	             call sym.write_one_filemark	      1747	mark.c	FUNCTION_38	FOR_4	CALL_12
0x40036cf	          0x83c501	                              add ebp, 1	      1747	mark.c	FUNCTION_38	FOR_4	CALL_12
0x40036d2	          0x83fd3a	                           cmp ebp, 0x3a	      1722	mark.c	FUNCTION_38	FOR_4
0x40036d5	     0xf8513ffffff	                           jne 0x40035ee	      1722	mark.c	FUNCTION_38	FOR_4
0x40036db	      0xba05000000	                              mov edx, 5	      1752	mark.c	FUNCTION_38	CALL_14
0x40036e0	      0xbe00000000	                              mov esi, 0	      1752	mark.c	FUNCTION_38	CALL_14
0x40036e5	      0xbf00000000	                              mov edi, 0	      1752	mark.c	FUNCTION_38	CALL_14
0x40036ea	      0xe800000000	                          call 0x40036ef	      1752	mark.c	FUNCTION_38	CALL_14
0x40036ef	          0x4889de	                            mov rsi, rbx	      1752	mark.c	FUNCTION_38	CALL_14
0x40036f2	          0x4889c7	                            mov rdi, rax	      1752	mark.c	FUNCTION_38	CALL_14
0x40036f5	      0xe800000000	                          call 0x40036fa	      1752	mark.c	FUNCTION_38	CALL_14
0x40036fa	      0xe800000000	                          call 0x40036ff	      1753	mark.c	FUNCTION_38	CALL_15
0x40036ff	      0xbe00000000	                              mov esi, 0	      1754	mark.c	FUNCTION_38	CALL_16
0x4003704	    0x488b3d000000	            mov rdi, qword [0x0400370b] 	      1754	mark.c	FUNCTION_38	CALL_16
0x400370b	      0xe800000000	                          call 0x4003710	      1754	mark.c	FUNCTION_38	CALL_16
0x4003710	    0x488b05000000	            mov rax, qword [0x04003717] 	      1756	mark.c	FUNCTION_38
0x4003717	    0x448ba8401500	         mov r13d, dword [rax + 0x1540] 	      1756	mark.c	FUNCTION_38
0x400371e	        0x4183ed01	                             sub r13d, 1	      1756	mark.c	FUNCTION_38
0x4003722	    0x41bc64000000	                          mov r12d, 0x64	      1756	mark.c	FUNCTION_38
0x4003728	    0x41be00000000	                             mov r14d, 0	      1755	mark.c	FUNCTION_38
0x400372e	          0x4585ed	                         test r13d, r13d	      1761	mark.c	FUNCTION_38	FOR_5
0x4003731	     0xf8811010000	                            js 0x4003848	      1761	mark.c	FUNCTION_38	FOR_5
0x4003737	          0x4963c5	                        movsxd rax, r13d	      1761	mark.c	FUNCTION_38	FOR_5
0x400373a	        0x488d1480	                  lea rdx, [rax + rax*4]	      1761	mark.c	FUNCTION_38	FOR_5
0x400373e	    0x488b05000000	            mov rax, qword [0x04003745] 	      1761	mark.c	FUNCTION_38	FOR_5
0x4003745	    0x488d84d0a005	         lea rax, [rax + rdx*8 + 0x5a0] 	      1761	mark.c	FUNCTION_38	FOR_5
0x400374d	      0xbd00000000	                              mov ebp, 0	      1762	mark.c	FUNCTION_38	FOR_5
0x4003752	    0x443935000000	           cmp dword [0x04003759], r14d 	      1762	mark.c	FUNCTION_38	FOR_5
0x4003759	            0x7e19	                           jle 0x4003774	      1762	mark.c	FUNCTION_38	FOR_5
0x400375b	            0xeb05	                           jmp 0x4003762	      1762	mark.c	FUNCTION_38	FOR_5
0x400375d	      0xb800000000	                              mov eax, 0	      1761	mark.c	FUNCTION_38	FOR_5
0x4003762	          0x4963d6	                        movsxd rdx, r14d	      1762	mark.c	FUNCTION_38	FOR_5
0x4003765	        0x488d0c92	                  lea rcx, [rdx + rdx*4]	      1762	mark.c	FUNCTION_38	FOR_5
0x4003769	    0x488b15000000	            mov rdx, qword [0x04003770] 	      1762	mark.c	FUNCTION_38	FOR_5
0x4003770	        0x488d2cca	                  lea rbp, [rdx + rcx*8]	      1762	mark.c	FUNCTION_38	FOR_5
0x4003774	          0x4885c0	                           test rax, rax	      1763	mark.c	FUNCTION_38	FOR_5	IF_7
0x4003777	            0x7509	                           jne 0x4003782	      1763	mark.c	FUNCTION_38	FOR_5	IF_7
0x4003779	          0x4885ed	                           test rbp, rbp	      1763	mark.c	FUNCTION_38	FOR_5	IF_7
0x400377c	     0xf84ee000000	                            je 0x4003870	      1763	mark.c	FUNCTION_38	FOR_5	IF_7
0x4003782	          0x4885c0	                           test rax, rax	      1765	mark.c	FUNCTION_38	FOR_5	IF_8
0x4003785	            0x740f	                            je 0x4003796	      1765	mark.c	FUNCTION_38	FOR_5	IF_8
0x4003787	          0x4885ed	                           test rbp, rbp	      1765	mark.c	FUNCTION_38	FOR_5	IF_8
0x400378a	            0x7410	                            je 0x400379c	      1765	mark.c	FUNCTION_38	FOR_5	IF_8
0x400378c	        0x488b4d20	            mov rcx, qword [rbp + 0x20] 	      1765	mark.c	FUNCTION_38	FOR_5	IF_8
0x4003790	        0x48394820	            cmp qword [rax + 0x20], rcx 	      1765	mark.c	FUNCTION_38	FOR_5	IF_8
0x4003794	            0x7d06	                           jge 0x400379c	      1765	mark.c	FUNCTION_38	FOR_5	IF_8
0x4003796	        0x4183c601	                             add r14d, 1	      1768	mark.c	FUNCTION_38	FOR_5	IF_8
0x400379a	            0xeb07	                           jmp 0x40037a3	      1768	mark.c	FUNCTION_38	FOR_5	IF_8
0x400379c	        0x4183ed01	                             sub r13d, 1	      1771	mark.c	FUNCTION_38	FOR_5	ELSE_3
0x40037a0	          0x4889c5	                            mov rbp, rax	      1771	mark.c	FUNCTION_38	FOR_5	ELSE_3
0x40037a3	          0x8b7d10	            mov edi, dword [rbp + 0x10] 	      1772	mark.c	FUNCTION_38	FOR_5	IF_9
0x40037a6	            0x85ff	                           test edi, edi	      1772	mark.c	FUNCTION_38	FOR_5	IF_9
0x40037a8	            0x7416	                            je 0x40037c0	      1772	mark.c	FUNCTION_38	FOR_5	IF_9
0x40037aa	      0xe800000000	                          call 0x40037af	      1773	mark.c	FUNCTION_38	FOR_5	IF_9	CALL_17
0x40037af	          0x4885c0	                           test rax, rax	      1773	mark.c	FUNCTION_38	FOR_5	IF_9	CALL_17
0x40037b2	            0x7421	                            je 0x40037d5	      1773	mark.c	FUNCTION_38	FOR_5	IF_9	CALL_17
0x40037b4	          0x4889c7	                            mov rdi, rax	      1774	mark.c	FUNCTION_38	FOR_5	IF_9	CALL_18
0x40037b7	      0xe8e2fbffff	               call sym.skip_for_viminfo	      1774	mark.c	FUNCTION_38	FOR_5	IF_9	CALL_18
0x40037bc	            0x85c0	                           test eax, eax	      1774	mark.c	FUNCTION_38	FOR_5	IF_9	CALL_18
0x40037be	            0x7515	                           jne 0x40037d5	      1774	mark.c	FUNCTION_38	FOR_5	IF_9	CALL_18
0x40037c0	      0xb927000000	                           mov ecx, 0x27	      1775	mark.c	FUNCTION_38	FOR_5	CALL_19
0x40037c5	      0xba2d000000	                           mov edx, 0x2d	      1775	mark.c	FUNCTION_38	FOR_5	CALL_19
0x40037ca	          0x4889ee	                            mov rsi, rbp	      1775	mark.c	FUNCTION_38	FOR_5	CALL_19
0x40037cd	          0x4889df	                            mov rdi, rbx	      1775	mark.c	FUNCTION_38	FOR_5	CALL_19
0x40037d0	      0xe81dd3ffff	             call sym.write_one_filemark	      1775	mark.c	FUNCTION_38	FOR_5	CALL_19
0x40037d5	        0x4183ec01	                             sub r12d, 1	      1757	mark.c	FUNCTION_38	FOR_5
0x40037d9	     0xf854fffffff	                           jne 0x400372e	      1757	mark.c	FUNCTION_38	FOR_5
0x40037df	      0xe98c000000	                           jmp 0x4003870	      1757	mark.c	FUNCTION_38	FOR_5
0x40037e4	          0x4963c4	                        movsxd rax, r12d	      1736	mark.c	FUNCTION_38	FOR_4	ELSE_2
0x40037e7	        0x488d0480	                  lea rax, [rax + rax*4]	      1736	mark.c	FUNCTION_38	FOR_4	ELSE_2
0x40037eb	    0x4c8d2cc50000	                        lea r13, [rax*8]	      1736	mark.c	FUNCTION_38	FOR_4	ELSE_2
0x40037f3	      0x458d642401	                     lea r12d, [r12 + 1]	      1736	mark.c	FUNCTION_38	FOR_4	ELSE_2
0x40037f8	      0xe9c0feffff	                           jmp 0x40036bd	      1736	mark.c	FUNCTION_38	FOR_4	ELSE_2
0x40037fd	      0x458d7c2401	                     lea r15d, [r12 + 1]	      1736	mark.c	FUNCTION_38	FOR_4	ELSE_2
0x4003802	          0x4963d4	                        movsxd rdx, r12d	      1736	mark.c	FUNCTION_38	FOR_4	ELSE_2
0x4003805	    0x488d34950000	                        lea rsi, [rdx*4]	      1736	mark.c	FUNCTION_38	FOR_4	ELSE_2
0x400380d	        0x488d3c16	                    lea rdi, [rsi + rdx]	      1736	mark.c	FUNCTION_38	FOR_4	ELSE_2
0x4003811	    0x4c8d2cfd0000	                        lea r13, [rdi*8]	      1736	mark.c	FUNCTION_38	FOR_4	ELSE_2
0x4003819	    0x483b0cfd0000	                  cmp rcx, qword [rdi*8]	      1738	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x4003821	     0xf842bfeffff	                            je 0x4003652	      1738	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x4003827	          0x4589fc	                          mov r12d, r15d	      1738	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x400382a	      0xe98efeffff	                           jmp 0x40036bd	      1738	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x400382f	          0x4963c4	                        movsxd rax, r12d	      1736	mark.c	FUNCTION_38	FOR_4	ELSE_2
0x4003832	        0x488d0480	                  lea rax, [rax + rax*4]	      1736	mark.c	FUNCTION_38	FOR_4	ELSE_2
0x4003836	    0x4c8d2cc50000	                        lea r13, [rax*8]	      1736	mark.c	FUNCTION_38	FOR_4	ELSE_2
0x400383e	      0x458d642401	                     lea r12d, [r12 + 1]	      1736	mark.c	FUNCTION_38	FOR_4	ELSE_2
0x4003843	      0xe975feffff	                           jmp 0x40036bd	      1736	mark.c	FUNCTION_38	FOR_4	ELSE_2
0x4003848	    0x443935000000	           cmp dword [0x0400384f], r14d 	      1762	mark.c	FUNCTION_38	FOR_5
0x400384f	     0xf8f08ffffff	                            jg 0x400375d	      1762	mark.c	FUNCTION_38	FOR_5
0x4003855	            0xeb19	                           jmp 0x4003870	      1762	mark.c	FUNCTION_38	FOR_5
0x4003857	          0x4c89ff	                            mov rdi, r15	      1708	mark.c	FUNCTION_38	IF_3	CALL_8
0x400385a	      0xe800000000	                          call 0x400385f	      1708	mark.c	FUNCTION_38	IF_3	CALL_8
0x400385f	    0x488b3d000000	            mov rdi, qword [0x04003866] 	      1710	mark.c	FUNCTION_38	IF_3	CALL_9
0x4003866	      0xe800000000	                          call 0x400386b	      1710	mark.c	FUNCTION_38	IF_3	CALL_9
0x400386b	      0xe9cdfcffff	                           jmp 0x400353d	      1710	mark.c	FUNCTION_38	IF_3	CALL_9
0x4003870	        0x4883c418	                           add rsp, 0x18	      1778	mark.c	FUNCTION_38
0x4003874	              0x5b	                                 pop rbx	      1778	mark.c	FUNCTION_38
0x4003875	              0x5d	                                 pop rbp	      1778	mark.c	FUNCTION_38
0x4003876	            0x415c	                                 pop r12	      1778	mark.c	FUNCTION_38
0x4003878	            0x415d	                                 pop r13	      1778	mark.c	FUNCTION_38
0x400387a	            0x415e	                                 pop r14	      1778	mark.c	FUNCTION_38
0x400387c	            0x415f	                                 pop r15	      1778	mark.c	FUNCTION_38
0x400387e	              0xc3	                                     ret	      1778	mark.c	FUNCTION_38
write_viminfo_marks	DO,0:FOR,0:WHILE,0:ELSE,0:functions,1:IF,0:CALL,4:SWITCH,0	86
0x400387f	            0x4155	                                push r13	      1895	mark.c	FUNCTION_43
0x4003881	            0x4154	                                push r12	      1895	mark.c	FUNCTION_43
0x4003883	              0x55	                                push rbp	      1895	mark.c	FUNCTION_43
0x4003884	              0x53	                                push rbx	      1895	mark.c	FUNCTION_43
0x4003885	        0x4883ec08	                              sub rsp, 8	      1895	mark.c	FUNCTION_43
0x4003889	          0x4989fc	                            mov r12, rdi	      1895	mark.c	FUNCTION_43
0x400388c	          0x4989f5	                            mov r13, rsi	      1895	mark.c	FUNCTION_43
0x400388f	    0x488b2d000000	            mov rbp, qword [0x04003896] 	      1905	mark.c	FUNCTION_43	CALL_1
0x4003896	          0x4885ed	                           test rbp, rbp	      1905	mark.c	FUNCTION_43	CALL_1
0x4003899	            0x7435	                            je 0x40038d0	      1905	mark.c	FUNCTION_43	CALL_1
0x400389b	    0x48392d000000	            cmp qword [0x040038a2], rbp 	      1905	mark.c	FUNCTION_43	CALL_1
0x40038a2	            0x7406	                            je 0x40038aa	      1905	mark.c	FUNCTION_43	CALL_1
0x40038a4	        0x488b5d20	            mov rbx, qword [rbp + 0x20] 	      1905	mark.c	FUNCTION_43	CALL_1
0x40038a8	            0xeb07	                           jmp 0x40038b1	      1905	mark.c	FUNCTION_43	CALL_1
0x40038aa	    0x488b1d000000	            mov rbx, qword [0x040038b1] 	      1905	mark.c	FUNCTION_43	CALL_1
0x40038b1	          0x4885db	                           test rbx, rbx	      1905	mark.c	FUNCTION_43	CALL_1
0x40038b4	            0x7411	                            je 0x40038c7	      1905	mark.c	FUNCTION_43	CALL_1
0x40038b6	          0x4889df	                            mov rdi, rbx	      1906	mark.c	FUNCTION_43	CALL_2
0x40038b9	      0xe800000000	                          call 0x40038be	      1906	mark.c	FUNCTION_43	CALL_2
0x40038be	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      1905	mark.c	FUNCTION_43	CALL_1
0x40038c2	          0x4885db	                           test rbx, rbx	      1905	mark.c	FUNCTION_43	CALL_1
0x40038c5	            0x75ef	                           jne 0x40038b6	      1905	mark.c	FUNCTION_43	CALL_1
0x40038c7	        0x488b6d00	                    mov rbp, qword [rbp]	      1905	mark.c	FUNCTION_43	CALL_1
0x40038cb	          0x4885ed	                           test rbp, rbp	      1905	mark.c	FUNCTION_43	CALL_1
0x40038ce	            0x75cb	                           jne 0x400389b	      1905	mark.c	FUNCTION_43	CALL_1
0x40038d0	      0xba05000000	                              mov edx, 5	      1908	mark.c	FUNCTION_43	CALL_4
0x40038d5	      0xbe00000000	                              mov esi, 0	      1908	mark.c	FUNCTION_43	CALL_4
0x40038da	      0xbf00000000	                              mov edi, 0	      1908	mark.c	FUNCTION_43	CALL_4
0x40038df	      0xe800000000	                          call 0x40038e4	      1908	mark.c	FUNCTION_43	CALL_4
0x40038e4	          0x4c89e6	                            mov rsi, r12	      1908	mark.c	FUNCTION_43	CALL_4
0x40038e7	          0x4889c7	                            mov rdi, rax	      1908	mark.c	FUNCTION_43	CALL_4
0x40038ea	      0xe800000000	                          call 0x40038ef	      1908	mark.c	FUNCTION_43	CALL_4
0x40038ef	    0x488b1d000000	            mov rbx, qword [0x040038f6] 	      1909	mark.c	FUNCTION_43
0x40038f6	          0x4885db	                           test rbx, rbx	      1909	mark.c	FUNCTION_43
0x40038f9	     0xf84ab000000	                            je 0x40039aa	      1909	mark.c	FUNCTION_43
0x40038ff	    0x83bb10120000	             cmp dword [rbx + 0x1210], 0	      1915	mark.c	FUNCTION_43	FUNCTION_1	IF_1
0x4003906	     0xf8481000000	                            je 0x400398d	      1915	mark.c	FUNCTION_43	FUNCTION_1	IF_1
0x400390c	    0x4883bb280300	              cmp qword [rbx + 0x328], 0	      1917	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_2
0x4003914	     0xf8582000000	                           jne 0x400399c	      1917	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_2
0x400391a	    0x4883bb580100	              cmp qword [rbx + 0x158], 0	      1923	mark.c	FUNCTION_43	FUNCTION_1	IF_1	ELSE_1	FOR_1	IF_3
0x4003922	            0x7578	                           jne 0x400399c	      1923	mark.c	FUNCTION_43	FUNCTION_1	IF_1	ELSE_1	FOR_1	IF_3
0x4003924	    0x488d83680100	                  lea rax, [rbx + 0x168]	      1923	mark.c	FUNCTION_43	FUNCTION_1	IF_1	ELSE_1	FOR_1	IF_3
0x400392b	    0x488d93f80200	                  lea rdx, [rbx + 0x2f8]	      1923	mark.c	FUNCTION_43	FUNCTION_1	IF_1	ELSE_1	FOR_1	IF_3
0x4003932	        0x48833800	                      cmp qword [rax], 0	      1923	mark.c	FUNCTION_43	FUNCTION_1	IF_1	ELSE_1	FOR_1	IF_3
0x4003936	            0x7564	                           jne 0x400399c	      1923	mark.c	FUNCTION_43	FUNCTION_1	IF_1	ELSE_1	FOR_1	IF_3
0x4003938	        0x4883c010	                           add rax, 0x10	      1923	mark.c	FUNCTION_43	FUNCTION_1	IF_1	ELSE_1	FOR_1	IF_3
0x400393c	          0x4839c2	                            cmp rdx, rax	      1922	mark.c	FUNCTION_43	FUNCTION_1	IF_1	ELSE_1	FOR_1
0x400393f	            0x75f1	                           jne 0x4003932	      1922	mark.c	FUNCTION_43	FUNCTION_1	IF_1	ELSE_1	FOR_1
0x4003941	            0xeb4a	                           jmp 0x400398d	      1922	mark.c	FUNCTION_43	FUNCTION_1	IF_1	ELSE_1	FOR_1
0x4003943	          0x803800	                       cmp byte [rax], 0	      1930	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4
0x4003946	            0x7445	                            je 0x400398d	      1930	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4
0x4003948	          0x4889df	                            mov rdi, rbx	      1931	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	CALL_1
0x400394b	      0xe84efaffff	               call sym.skip_for_viminfo	      1931	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	CALL_1
0x4003950	            0x85c0	                           test eax, eax	      1931	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	CALL_1
0x4003952	            0x7539	                           jne 0x400398d	      1931	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	CALL_1
0x4003954	          0x4d85ed	                           test r13, r13	      1933	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	IF_5
0x4003957	            0x750d	                           jne 0x4003966	      1933	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	IF_5
0x4003959	          0x4c89e6	                            mov rsi, r12	      1934	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	CALL_2
0x400395c	          0x4889df	                            mov rdi, rbx	      1934	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	CALL_2
0x400395f	      0xe879d2ffff	             call sym.write_buffer_marks	      1934	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	CALL_2
0x4003964	            0xeb27	                           jmp 0x400398d	      1934	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	CALL_2
0x4003966	      0xbe01000000	                              mov esi, 1	      1935	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	ELSE_2	IF_6	CALL_3
0x400396b	          0x4c89ef	                            mov rdi, r13	      1935	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	ELSE_2	IF_6	CALL_3
0x400396e	      0xe800000000	                          call 0x4003973	      1935	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	ELSE_2	IF_6	CALL_3
0x4003973	          0x83f801	                              cmp eax, 1	      1935	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	ELSE_2	IF_6	CALL_3
0x4003976	            0x7515	                           jne 0x400398d	      1935	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	ELSE_2	IF_6	CALL_3
0x4003978	        0x498b5510	            mov rdx, qword [r13 + 0x10] 	      1936	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	ELSE_2	IF_6
0x400397c	        0x418b4500	                    mov eax, dword [r13]	      1936	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	ELSE_2	IF_6
0x4003980	          0x8d4801	                      lea ecx, [rax + 1]	      1936	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	ELSE_2	IF_6
0x4003983	        0x41894d00	                    mov dword [r13], ecx	      1936	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	ELSE_2	IF_6
0x4003987	            0x4898	                                    cdqe	      1936	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	ELSE_2	IF_6
0x4003989	        0x48891cc2	            mov qword [rdx + rax*8], rbx	      1936	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	ELSE_2	IF_6
0x400398d	        0x488b5b68	            mov rbx, qword [rbx + 0x68] 	      1909	mark.c	FUNCTION_43
0x4003991	          0x4885db	                           test rbx, rbx	      1909	mark.c	FUNCTION_43
0x4003994	     0xf8565ffffff	                           jne 0x40038ff	      1909	mark.c	FUNCTION_43
0x400399a	            0xeb0e	                           jmp 0x40039aa	      1909	mark.c	FUNCTION_43
0x400399c	    0x488b83880000	            mov rax, qword [rbx + 0x88] 	      1929	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4
0x40039a3	          0x4885c0	                           test rax, rax	      1929	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4
0x40039a6	            0x759b	                           jne 0x4003943	      1929	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4
0x40039a8	            0xebe3	                           jmp 0x400398d	      1929	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4
0x40039aa	        0x4883c408	                              add rsp, 8	      1940	mark.c	FUNCTION_43
0x40039ae	              0x5b	                                 pop rbx	      1940	mark.c	FUNCTION_43
0x40039af	              0x5d	                                 pop rbp	      1940	mark.c	FUNCTION_43
0x40039b0	            0x415c	                                 pop r12	      1940	mark.c	FUNCTION_43
0x40039b2	            0x415d	                                 pop r13	      1940	mark.c	FUNCTION_43
0x40039b4	              0xc3	                                     ret	      1940	mark.c	FUNCTION_43
cleanup_jumplist	DO,0:FOR,3:WHILE,0:ELSE,1:functions,0:IF,6:CALL,2:SWITCH,0	90
0x400253e	            0x4155	                                push r13	      1309	mark.c	FUNCTION_28
0x4002540	            0x4154	                                push r12	      1309	mark.c	FUNCTION_28
0x4002542	              0x55	                                push rbp	      1309	mark.c	FUNCTION_28
0x4002543	              0x53	                                push rbx	      1309	mark.c	FUNCTION_28
0x4002544	        0x4883ec08	                              sub rsp, 8	      1309	mark.c	FUNCTION_28
0x4002548	          0x4889fb	                            mov rbx, rdi	      1309	mark.c	FUNCTION_28
0x400254b	            0x85f6	                           test esi, esi	      1313	mark.c	FUNCTION_28	IF_1
0x400254d	            0x7415	                            je 0x4002564	      1313	mark.c	FUNCTION_28	IF_1
0x400254f	    0x8b8f40150000	          mov ecx, dword [rdi + 0x1540] 	      1318	mark.c	FUNCTION_28	IF_1	FOR_1
0x4002555	            0x85c9	                           test ecx, ecx	      1318	mark.c	FUNCTION_28	IF_1	FOR_1
0x4002557	            0x7f23	                            jg 0x400257c	      1318	mark.c	FUNCTION_28	IF_1	FOR_1
0x4002559	    0x41bd00000000	                             mov r13d, 0	      1318	mark.c	FUNCTION_28	IF_1	FOR_1
0x400255f	      0xe90a010000	                           jmp 0x400266e	      1318	mark.c	FUNCTION_28	IF_1	FOR_1
0x4002564	    0x488daba00500	                  lea rbp, [rbx + 0x5a0]	      1318	mark.c	FUNCTION_28	IF_1	FOR_1
0x400256b	    0x41bd00000000	                             mov r13d, 0	      1339	mark.c	FUNCTION_28	FOR_2	IF_5
0x4002571	    0x41bc00000000	                             mov r12d, 0	      1339	mark.c	FUNCTION_28	FOR_2	IF_5
0x4002577	      0xe9e3000000	                           jmp 0x400265f	      1339	mark.c	FUNCTION_28	FOR_2	IF_5
0x400257c	    0x488dafa00500	                  lea rbp, [rdi + 0x5a0]	      1339	mark.c	FUNCTION_28	FOR_2	IF_5
0x4002583	    0x41bc00000000	                             mov r12d, 0	      1318	mark.c	FUNCTION_28	IF_1	FOR_1
0x4002589	          0x4889ef	                            mov rdi, rbp	      1318	mark.c	FUNCTION_28	IF_1	FOR_1
0x400258c	        0x837d1000	               cmp dword [rbp + 0x10], 0	      1320	mark.c	FUNCTION_28	IF_1	FOR_1	IF_2
0x4002590	            0x750c	                           jne 0x400259e	      1320	mark.c	FUNCTION_28	IF_1	FOR_1	IF_2
0x4002592	      0x48837d0000	                      cmp qword [rbp], 0	      1320	mark.c	FUNCTION_28	IF_1	FOR_1	IF_2
0x4002597	            0x7405	                            je 0x400259e	      1320	mark.c	FUNCTION_28	IF_1	FOR_1	IF_2
0x4002599	      0xe800000000	                          call 0x400259e	      1322	mark.c	FUNCTION_28	IF_1	FOR_1	CALL_1
0x400259e	        0x4183c401	                             add r12d, 1	      1318	mark.c	FUNCTION_28	IF_1	FOR_1
0x40025a2	        0x4883c528	                           add rbp, 0x28	      1318	mark.c	FUNCTION_28	IF_1	FOR_1
0x40025a6	    0x4439a3401500	         cmp dword [rbx + 0x1540], r12d 	      1318	mark.c	FUNCTION_28	IF_1	FOR_1
0x40025ad	            0x7fda	                            jg 0x4002589	      1318	mark.c	FUNCTION_28	IF_1	FOR_1
0x40025af	            0xebb3	                           jmp 0x4002564	      1318	mark.c	FUNCTION_28	IF_1	FOR_1
0x40025b1	    0x443ba3441500	         cmp r12d, dword [rbx + 0x1544] 	      1329	mark.c	FUNCTION_28	FOR_2	IF_3
0x40025b8	            0x7507	                           jne 0x40025c1	      1329	mark.c	FUNCTION_28	FOR_2	IF_3
0x40025ba	    0x4489ab441500	         mov dword [rbx + 0x1544], r13d 	      1330	mark.c	FUNCTION_28	FOR_2	IF_3
0x40025c1	        0x4183c401	                             add r12d, 1	      1331	mark.c	FUNCTION_28	FOR_2	FOR_3
0x40025c5	          0x4439e1	                           cmp ecx, r12d	      1331	mark.c	FUNCTION_28	FOR_2	FOR_3
0x40025c8	            0x7e45	                           jle 0x400260f	      1331	mark.c	FUNCTION_28	FOR_2	FOR_3
0x40025ca	          0x4989e8	                             mov r8, rbp	      1331	mark.c	FUNCTION_28	FOR_2	FOR_3
0x40025cd	          0x8b7510	            mov esi, dword [rbp + 0x10] 	      1333	mark.c	FUNCTION_28	FOR_2	FOR_3	IF_4
0x40025d0	            0x85f6	                           test esi, esi	      1334	mark.c	FUNCTION_28	FOR_2	FOR_3	IF_4
0x40025d2	        0x400f95c7	                               setne dil	      1334	mark.c	FUNCTION_28	FOR_2	FOR_3	IF_4
0x40025d6	          0x4489e0	                           mov eax, r12d	      1334	mark.c	FUNCTION_28	FOR_2	FOR_3	IF_4
0x40025d9	          0x4863d0	                         movsxd rdx, eax	      1332	mark.c	FUNCTION_28	FOR_2	FOR_3	IF_4
0x40025dc	        0x488d1492	                  lea rdx, [rdx + rdx*4]	      1332	mark.c	FUNCTION_28	FOR_2	FOR_3	IF_4
0x40025e0	    0x39b4d3b00500	   cmp dword [rbx + rdx*8 + 0x5b0], esi 	      1334	mark.c	FUNCTION_28	FOR_2	FOR_3	IF_4
0x40025e7	            0x7519	                           jne 0x4002602	      1334	mark.c	FUNCTION_28	FOR_2	FOR_3	IF_4
0x40025e9	          0x4084ff	                           test dil, dil	      1334	mark.c	FUNCTION_28	FOR_2	FOR_3	IF_4
0x40025ec	            0x7414	                            je 0x4002602	      1334	mark.c	FUNCTION_28	FOR_2	FOR_3	IF_4
0x40025ee	          0x4863d0	                         movsxd rdx, eax	      1335	mark.c	FUNCTION_28	FOR_2	FOR_3	IF_4
0x40025f1	        0x488d1492	                  lea rdx, [rdx + rdx*4]	      1335	mark.c	FUNCTION_28	FOR_2	FOR_3	IF_4
0x40025f5	          0x4d8b08	                      mov r9, qword [r8]	      1335	mark.c	FUNCTION_28	FOR_2	FOR_3	IF_4
0x40025f8	    0x4c398cd3a005	    cmp qword [rbx + rdx*8 + 0x5a0], r9 	      1335	mark.c	FUNCTION_28	FOR_2	FOR_3	IF_4
0x4002600	            0x7409	                            je 0x400260b	      1335	mark.c	FUNCTION_28	FOR_2	FOR_3	IF_4
0x4002602	          0x83c001	                              add eax, 1	      1331	mark.c	FUNCTION_28	FOR_2	FOR_3
0x4002605	            0x39c1	                            cmp ecx, eax	      1331	mark.c	FUNCTION_28	FOR_2	FOR_3
0x4002607	            0x7fd0	                            jg 0x40025d9	      1331	mark.c	FUNCTION_28	FOR_2	FOR_3
0x4002609	            0xeb04	                           jmp 0x400260f	      1331	mark.c	FUNCTION_28	FOR_2	FOR_3
0x400260b	            0x39c1	                            cmp ecx, eax	      1338	mark.c	FUNCTION_28	FOR_2	IF_5
0x400260d	            0x7f43	                            jg 0x4002652	      1338	mark.c	FUNCTION_28	FOR_2	IF_5
0x400260f	          0x4963c5	                        movsxd rax, r13d	      1339	mark.c	FUNCTION_28	FOR_2	IF_5
0x4002612	        0x488d0480	                  lea rax, [rax + rax*4]	      1339	mark.c	FUNCTION_28	FOR_2	IF_5
0x4002616	        0x488d14c3	                  lea rdx, [rbx + rax*8]	      1339	mark.c	FUNCTION_28	FOR_2	IF_5
0x400261a	    0x488d82a00500	                  lea rax, [rdx + 0x5a0]	      1339	mark.c	FUNCTION_28	FOR_2	IF_5
0x4002621	        0x488b4d00	                    mov rcx, qword [rbp]	      1339	mark.c	FUNCTION_28	FOR_2	IF_5
0x4002625	    0x48898aa00500	            mov qword [rdx + 0x5a0], rcx	      1339	mark.c	FUNCTION_28	FOR_2	IF_5
0x400262c	        0x488b5508	                mov rdx, qword [rbp + 8]	      1339	mark.c	FUNCTION_28	FOR_2	IF_5
0x4002630	        0x48895008	                mov qword [rax + 8], rdx	      1339	mark.c	FUNCTION_28	FOR_2	IF_5
0x4002634	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      1339	mark.c	FUNCTION_28	FOR_2	IF_5
0x4002638	        0x48895010	             mov qword [rax + 0x10], rdx	      1339	mark.c	FUNCTION_28	FOR_2	IF_5
0x400263c	        0x488b5518	            mov rdx, qword [rbp + 0x18] 	      1339	mark.c	FUNCTION_28	FOR_2	IF_5
0x4002640	        0x48895018	             mov qword [rax + 0x18], rdx	      1339	mark.c	FUNCTION_28	FOR_2	IF_5
0x4002644	        0x488b5520	            mov rdx, qword [rbp + 0x20] 	      1339	mark.c	FUNCTION_28	FOR_2	IF_5
0x4002648	        0x48895020	             mov qword [rax + 0x20], rdx	      1339	mark.c	FUNCTION_28	FOR_2	IF_5
0x400264c	        0x458d6d01	                     lea r13d, [r13 + 1]	      1339	mark.c	FUNCTION_28	FOR_2	IF_5
0x4002650	            0xeb09	                           jmp 0x400265b	      1339	mark.c	FUNCTION_28	FOR_2	IF_5
0x4002652	        0x498b7818	              mov rdi, qword [r8 + 0x18]	      1341	mark.c	FUNCTION_28	FOR_2	CALL_2
0x4002656	      0xe800000000	                          call 0x400265b	      1341	mark.c	FUNCTION_28	FOR_2	CALL_2
0x400265b	        0x4883c528	                           add rbp, 0x28	      1341	mark.c	FUNCTION_28	FOR_2	CALL_2
0x400265f	    0x8b8b40150000	          mov ecx, dword [rbx + 0x1540] 	      1327	mark.c	FUNCTION_28	FOR_2
0x4002665	          0x4139cc	                           cmp r12d, ecx	      1327	mark.c	FUNCTION_28	FOR_2
0x4002668	     0xf8c43ffffff	                            jl 0x40025b1	      1327	mark.c	FUNCTION_28	FOR_2
0x400266e	    0x398b44150000	          cmp dword [rbx + 0x1544], ecx 	      1343	mark.c	FUNCTION_28	IF_6
0x4002674	            0x7507	                           jne 0x400267d	      1343	mark.c	FUNCTION_28	IF_6
0x4002676	    0x4489ab441500	         mov dword [rbx + 0x1544], r13d 	      1344	mark.c	FUNCTION_28	IF_6
0x400267d	    0x4489ab401500	         mov dword [rbx + 0x1540], r13d 	      1345	mark.c	FUNCTION_28
0x4002684	        0x4883c408	                              add rsp, 8	      1346	mark.c	FUNCTION_28
0x4002688	              0x5b	                                 pop rbx	      1346	mark.c	FUNCTION_28
0x4002689	              0x5d	                                 pop rbp	      1346	mark.c	FUNCTION_28
0x400268a	            0x415c	                                 pop r12	      1346	mark.c	FUNCTION_28
0x400268c	            0x415d	                                 pop r13	      1346	mark.c	FUNCTION_28
0x400268e	              0xc3	                                     ret	      1346	mark.c	FUNCTION_28
write_one_filemark	DO,0:FOR,0:WHILE,0:ELSE,1:functions,0:IF,4:CALL,7:SWITCH,0	69
0x4000af2	        0x48833e00	                      cmp qword [rsi], 0	      1789	mark.c	FUNCTION_39	IF_1
0x4000af6	     0xf84df000000	                            je 0x4000bdb	      1789	mark.c	FUNCTION_39	IF_1
0x4000afc	            0x4156	                                push r14	      1786	mark.c	FUNCTION_39
0x4000afe	            0x4155	                                push r13	      1786	mark.c	FUNCTION_39
0x4000b00	            0x4154	                                push r12	      1786	mark.c	FUNCTION_39
0x4000b02	              0x55	                                push rbp	      1786	mark.c	FUNCTION_39
0x4000b03	              0x53	                                push rbx	      1786	mark.c	FUNCTION_39
0x4000b04	          0x4189cc	                           mov r12d, ecx	      1786	mark.c	FUNCTION_39
0x4000b07	          0x4189d5	                           mov r13d, edx	      1786	mark.c	FUNCTION_39
0x4000b0a	          0x4889f3	                            mov rbx, rsi	      1786	mark.c	FUNCTION_39
0x4000b0d	          0x4989fe	                            mov r14, rdi	      1786	mark.c	FUNCTION_39
0x4000b10	          0x8b7e10	            mov edi, dword [rsi + 0x10] 	      1792	mark.c	FUNCTION_39	IF_2
0x4000b13	            0x85ff	                           test edi, edi	      1792	mark.c	FUNCTION_39	IF_2
0x4000b15	            0x741c	                            je 0x4000b33	      1792	mark.c	FUNCTION_39	IF_2
0x4000b17	      0xba00000000	                              mov edx, 0	      1793	mark.c	FUNCTION_39	CALL_1
0x4000b1c	      0xbe01000000	                              mov esi, 1	      1793	mark.c	FUNCTION_39	CALL_1
0x4000b21	      0xe800000000	                          call 0x4000b26	      1793	mark.c	FUNCTION_39	CALL_1
0x4000b26	          0x4889c5	                            mov rbp, rax	      1793	mark.c	FUNCTION_39	CALL_1
0x4000b29	          0x4885c0	                           test rax, rax	      1796	mark.c	FUNCTION_39	ELSE_1	IF_3
0x4000b2c	            0x7512	                           jne 0x4000b40	      1796	mark.c	FUNCTION_39	ELSE_1	IF_3
0x4000b2e	      0xe992000000	                           jmp 0x4000bc5	      1796	mark.c	FUNCTION_39	ELSE_1	IF_3
0x4000b33	        0x488b6e18	            mov rbp, qword [rsi + 0x18] 	      1795	mark.c	FUNCTION_39	ELSE_1
0x4000b37	          0x4885ed	                           test rbp, rbp	      1796	mark.c	FUNCTION_39	ELSE_1	IF_3
0x4000b3a	     0xf8493000000	                            je 0x4000bd3	      1796	mark.c	FUNCTION_39	ELSE_1	IF_3
0x4000b40	        0x807d0000	                       cmp byte [rbp], 0	      1796	mark.c	FUNCTION_39	ELSE_1	IF_3
0x4000b44	            0x747f	                            je 0x4000bc5	      1796	mark.c	FUNCTION_39	ELSE_1	IF_3
0x4000b46	        0x4883ec08	                              sub rsp, 8	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000b4a	        0x48634308	            movsxd rax, dword [rbx + 8] 	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000b4e	              0x50	                                push rax	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000b4f	          0x4c8b0b	                     mov r9, qword [rbx]	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000b52	          0x4589e0	                           mov r8d, r12d	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000b55	          0x4489e9	                           mov ecx, r13d	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000b58	      0xba00000000	                              mov edx, 0	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000b5d	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000b62	          0x4c89f7	                            mov rdi, r14	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000b65	      0xb800000000	                              mov eax, 0	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000b6a	      0xe800000000	                          call 0x4000b6f	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000b6f	          0x4889ee	                            mov rsi, rbp	      1800	mark.c	FUNCTION_39	ELSE_1	IF_3	CALL_3
0x4000b72	          0x4c89f7	                            mov rdi, r14	      1800	mark.c	FUNCTION_39	ELSE_1	IF_3	CALL_3
0x4000b75	      0xe800000000	                          call 0x4000b7a	      1800	mark.c	FUNCTION_39	ELSE_1	IF_3	CALL_3
0x4000b7a	          0xff7320	                 push qword [rbx + 0x20]	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000b7d	        0x48634308	            movsxd rax, dword [rbx + 8] 	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000b81	              0x50	                                push rax	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000b82	          0x4c8b0b	                     mov r9, qword [rbx]	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000b85	          0x4589e0	                           mov r8d, r12d	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000b88	      0xb904000000	                              mov ecx, 4	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000b8d	      0xba00000000	                              mov edx, 0	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000b92	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000b97	          0x4c89f7	                            mov rdi, r14	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000b9a	      0xb800000000	                              mov eax, 0	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000b9f	      0xe800000000	                          call 0x4000ba4	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000ba4	        0x4883c420	                           add rsp, 0x20	      1807	mark.c	FUNCTION_39	ELSE_1	IF_3	CALL_5
0x4000ba8	      0xbaba010000	                          mov edx, 0x1ba	      1807	mark.c	FUNCTION_39	ELSE_1	IF_3	CALL_5
0x4000bad	          0x4889ee	                            mov rsi, rbp	      1807	mark.c	FUNCTION_39	ELSE_1	IF_3	CALL_5
0x4000bb0	          0x4c89f7	                            mov rdi, r14	      1807	mark.c	FUNCTION_39	ELSE_1	IF_3	CALL_5
0x4000bb3	      0xe800000000	                          call 0x4000bb8	      1807	mark.c	FUNCTION_39	ELSE_1	IF_3	CALL_5
0x4000bb8	          0x4c89f6	                            mov rsi, r14	      1808	mark.c	FUNCTION_39	ELSE_1	IF_3	CALL_6
0x4000bbb	      0xbf0a000000	                            mov edi, 0xa	      1808	mark.c	FUNCTION_39	ELSE_1	IF_3	CALL_6
0x4000bc0	      0xe800000000	                          call 0x4000bc5	      1808	mark.c	FUNCTION_39	ELSE_1	IF_3	CALL_6
0x4000bc5	        0x837b1000	               cmp dword [rbx + 0x10], 0	      1811	mark.c	FUNCTION_39	IF_4
0x4000bc9	            0x7408	                            je 0x4000bd3	      1811	mark.c	FUNCTION_39	IF_4
0x4000bcb	          0x4889ef	                            mov rdi, rbp	      1812	mark.c	FUNCTION_39	CALL_7
0x4000bce	      0xe800000000	                          call 0x4000bd3	      1812	mark.c	FUNCTION_39	CALL_7
0x4000bd3	              0x5b	                                 pop rbx	      1813	mark.c	FUNCTION_39
0x4000bd4	              0x5d	                                 pop rbp	      1813	mark.c	FUNCTION_39
0x4000bd5	            0x415c	                                 pop r12	      1813	mark.c	FUNCTION_39
0x4000bd7	            0x415d	                                 pop r13	      1813	mark.c	FUNCTION_39
0x4000bd9	            0x415e	                                 pop r14	      1813	mark.c	FUNCTION_39
0x4000bdb	            0xf3c3	                                     ret	      1813	mark.c	FUNCTION_39
mark_adjust	DO,0:FOR,0:WHILE,0:ELSE,0:functions,0:IF,0:CALL,1:SWITCH,0	5
0x40020a6	        0x4883ec08	                              sub rsp, 8	      1025	mark.c	FUNCTION_24
0x40020aa	    0x41b801000000	                              mov r8d, 1	      1026	mark.c	FUNCTION_24	CALL_1
0x40020b0	      0xe85de2ffff	           call sym.mark_adjust_internal	      1026	mark.c	FUNCTION_24	CALL_1
0x40020b5	        0x4883c408	                              add rsp, 8	      1027	mark.c	FUNCTION_24
0x40020b9	              0xc3	                                     ret	      1027	mark.c	FUNCTION_24
getmark_buf_fnum	DO,0:FOR,0:WHILE,0:ELSE,16:functions,0:IF,24:CALL,9:SWITCH,0	240
0x40013c4	            0x4156	                                push r14	       334	mark.c	FUNCTION_9
0x40013c6	            0x4155	                                push r13	       334	mark.c	FUNCTION_9
0x40013c8	            0x4154	                                push r12	       334	mark.c	FUNCTION_9
0x40013ca	              0x55	                                push rbp	       334	mark.c	FUNCTION_9
0x40013cb	              0x53	                                push rbx	       334	mark.c	FUNCTION_9
0x40013cc	    0x4881ec900000	                           sub rsp, 0x90	       334	mark.c	FUNCTION_9
0x40013d3	    0x64488b042528	                mov rax, qword fs:[0x28]	       334	mark.c	FUNCTION_9
0x40013dc	    0x488984248800	             mov qword [rsp + 0x88], rax	       334	mark.c	FUNCTION_9
0x40013e4	            0x31c0	                            xor eax, eax	       334	mark.c	FUNCTION_9
0x40013e6	          0x83fe7e	                           cmp esi, 0x7e	       346	mark.c	FUNCTION_9	IF_2
0x40013e9	     0xf87bb030000	                            ja 0x40017aa	       346	mark.c	FUNCTION_9	IF_2
0x40013ef	          0x4889fd	                            mov rbp, rdi	       346	mark.c	FUNCTION_9	IF_2
0x40013f2	          0x4189d5	                           mov r13d, edx	       346	mark.c	FUNCTION_9	IF_2
0x40013f5	          0x4989cc	                            mov r12, rcx	       346	mark.c	FUNCTION_9	IF_2
0x40013f8	          0x83fe27	                           cmp esi, 0x27	       350	mark.c	FUNCTION_9	ELSE_1	IF_3
0x40013fb	            0x7405	                            je 0x4001402	       350	mark.c	FUNCTION_9	ELSE_1	IF_3
0x40013fd	          0x83fe60	                           cmp esi, 0x60	       350	mark.c	FUNCTION_9	ELSE_1	IF_3
0x4001400	            0x752d	                           jne 0x400142f	       350	mark.c	FUNCTION_9	ELSE_1	IF_3
0x4001402	    0x488b05000000	            mov rax, qword [0x04001409] 	       352	mark.c	FUNCTION_9	ELSE_1	IF_3
0x4001409	    0x488b90880500	           mov rdx, qword [rax + 0x588] 	       352	mark.c	FUNCTION_9	ELSE_1	IF_3
0x4001410	    0x488b80800500	           mov rax, qword [rax + 0x580] 	       352	mark.c	FUNCTION_9	ELSE_1	IF_3
0x4001417	    0x488905000000	            mov qword [0x0400141e], rax 	       352	mark.c	FUNCTION_9	ELSE_1	IF_3
0x400141e	    0x488915000000	            mov qword [0x04001425], rdx 	       352	mark.c	FUNCTION_9	ELSE_1	IF_3
0x4001425	      0xb800000000	                              mov eax, 0	       353	mark.c	FUNCTION_9	ELSE_1	IF_3
0x400142a	      0xe98c030000	                           jmp 0x40017bb	       353	mark.c	FUNCTION_9	ELSE_1	IF_3
0x400142f	    0x488d87280300	                  lea rax, [rdi + 0x328]	       356	mark.c	FUNCTION_9	ELSE_2	IF_4
0x4001436	          0x83fe22	                           cmp esi, 0x22	       355	mark.c	FUNCTION_9	ELSE_2	IF_4
0x4001439	     0xf847c030000	                            je 0x40017bb	       355	mark.c	FUNCTION_9	ELSE_2	IF_4
0x400143f	    0x488d87380300	                  lea rax, [rdi + 0x338]	       358	mark.c	FUNCTION_9	ELSE_3	IF_5
0x4001446	          0x83fe5e	                           cmp esi, 0x5e	       357	mark.c	FUNCTION_9	ELSE_3	IF_5
0x4001449	     0xf846c030000	                            je 0x40017bb	       357	mark.c	FUNCTION_9	ELSE_3	IF_5
0x400144f	    0x488d87480300	                  lea rax, [rdi + 0x348]	       360	mark.c	FUNCTION_9	ELSE_4	IF_6
0x4001456	          0x83fe2e	                           cmp esi, 0x2e	       359	mark.c	FUNCTION_9	ELSE_4	IF_6
0x4001459	     0xf845c030000	                            je 0x40017bb	       359	mark.c	FUNCTION_9	ELSE_4	IF_6
0x400145f	    0x488d87e01100	                 lea rax, [rdi + 0x11e0]	       362	mark.c	FUNCTION_9	ELSE_5	IF_7
0x4001466	          0x83fe5b	                           cmp esi, 0x5b	       361	mark.c	FUNCTION_9	ELSE_5	IF_7
0x4001469	     0xf844c030000	                            je 0x40017bb	       361	mark.c	FUNCTION_9	ELSE_5	IF_7
0x400146f	    0x488d87001200	                 lea rax, [rdi + 0x1200]	       364	mark.c	FUNCTION_9	ELSE_6	IF_8
0x4001476	          0x83fe5d	                           cmp esi, 0x5d	       363	mark.c	FUNCTION_9	ELSE_6	IF_8
0x4001479	     0xf843c030000	                            je 0x40017bb	       363	mark.c	FUNCTION_9	ELSE_6	IF_8
0x400147f	          0x8d4685	                   lea eax, [rsi - 0x7b]	       365	mark.c	FUNCTION_9	ELSE_7	IF_9
0x4001482	      0xa9fdffffff	                    test eax, 0xfffffffd	       365	mark.c	FUNCTION_9	ELSE_7	IF_9
0x4001487	     0xf8596000000	                           jne 0x4001523	       365	mark.c	FUNCTION_9	ELSE_7	IF_9
0x400148d	    0x8b1d00000000	            mov ebx, dword [0x04001493] 	       369	mark.c	FUNCTION_9	ELSE_7	IF_9
0x4001493	    0x488b05000000	            mov rax, qword [0x0400149a] 	       371	mark.c	FUNCTION_9	ELSE_7	IF_9
0x400149a	        0x4c8b6838	            mov r13, qword [rax + 0x38] 	       371	mark.c	FUNCTION_9	ELSE_7	IF_9
0x400149e	        0x448b6040	           mov r12d, dword [rax + 0x40] 	       371	mark.c	FUNCTION_9	ELSE_7	IF_9
0x40014a2	          0x8b6844	            mov ebp, dword [rax + 0x44] 	       371	mark.c	FUNCTION_9	ELSE_7	IF_9
0x40014a5	    0xc70500000000	               mov dword [0x040014af], 1	       372	mark.c	FUNCTION_9	ELSE_7	IF_9
0x40014af	          0x83fe7d	                           cmp esi, 0x7d	       373	mark.c	FUNCTION_9	ELSE_7	IF_9	IF_10	CALL_1
0x40014b2	        0x400f94c6	                                sete sil	       373	mark.c	FUNCTION_9	ELSE_7	IF_9	IF_10	CALL_1
0x40014b6	        0x400fb6f6	                          movzx esi, sil	       373	mark.c	FUNCTION_9	ELSE_7	IF_9	IF_10	CALL_1
0x40014ba	        0x8d7436ff	                lea esi, [rsi + rsi - 1]	       373	mark.c	FUNCTION_9	ELSE_7	IF_9	IF_10	CALL_1
0x40014be	    0x41b800000000	                              mov r8d, 0	       373	mark.c	FUNCTION_9	ELSE_7	IF_9	IF_10	CALL_1
0x40014c4	      0xb900000000	                              mov ecx, 0	       373	mark.c	FUNCTION_9	ELSE_7	IF_9	IF_10	CALL_1
0x40014c9	      0xba01000000	                              mov edx, 1	       373	mark.c	FUNCTION_9	ELSE_7	IF_9	IF_10	CALL_1
0x40014ce	      0x488d7c2414	                   lea rdi, [rsp + 0x14]	       373	mark.c	FUNCTION_9	ELSE_7	IF_9	IF_10	CALL_1
0x40014d3	      0xe800000000	                          call 0x40014d8	       373	mark.c	FUNCTION_9	ELSE_7	IF_9	IF_10	CALL_1
0x40014d8	      0xba00000000	                              mov edx, 0	       339	mark.c	FUNCTION_9
0x40014dd	            0x85c0	                           test eax, eax	       373	mark.c	FUNCTION_9	ELSE_7	IF_9	IF_10	CALL_1
0x40014df	            0x7422	                            je 0x4001503	       373	mark.c	FUNCTION_9	ELSE_7	IF_9	IF_10	CALL_1
0x40014e1	    0x488b05000000	            mov rax, qword [0x040014e8] 	       376	mark.c	FUNCTION_9	ELSE_7	IF_9	IF_10
0x40014e8	        0x488b5040	            mov rdx, qword [rax + 0x40] 	       376	mark.c	FUNCTION_9	ELSE_7	IF_9	IF_10
0x40014ec	        0x488b4038	            mov rax, qword [rax + 0x38] 	       376	mark.c	FUNCTION_9	ELSE_7	IF_9	IF_10
0x40014f0	    0x488905000000	            mov qword [0x040014f7], rax 	       376	mark.c	FUNCTION_9	ELSE_7	IF_9	IF_10
0x40014f7	    0x488915000000	            mov qword [0x040014fe], rdx 	       376	mark.c	FUNCTION_9	ELSE_7	IF_9	IF_10
0x40014fe	      0xba00000000	                              mov edx, 0	       377	mark.c	FUNCTION_9	ELSE_7	IF_9	IF_10
0x4001503	    0x488b05000000	            mov rax, qword [0x0400150a] 	       379	mark.c	FUNCTION_9	ELSE_7	IF_9
0x400150a	        0x4c896838	             mov qword [rax + 0x38], r13	       379	mark.c	FUNCTION_9	ELSE_7	IF_9
0x400150e	        0x44896040	            mov dword [rax + 0x40], r12d	       379	mark.c	FUNCTION_9	ELSE_7	IF_9
0x4001512	          0x896844	             mov dword [rax + 0x44], ebp	       379	mark.c	FUNCTION_9	ELSE_7	IF_9
0x4001515	    0x891d00000000	            mov dword [0x0400151b], ebx 	       380	mark.c	FUNCTION_9	ELSE_7	IF_9
0x400151b	          0x4889d0	                            mov rax, rdx	       380	mark.c	FUNCTION_9	ELSE_7	IF_9
0x400151e	      0xe998020000	                           jmp 0x40017bb	       380	mark.c	FUNCTION_9	ELSE_7	IF_9
0x4001523	          0x8d46d8	                   lea eax, [rsi - 0x28]	       382	mark.c	FUNCTION_9	ELSE_8	IF_11
0x4001526	          0x83f801	                              cmp eax, 1	       382	mark.c	FUNCTION_9	ELSE_8	IF_11
0x4001529	     0xf8786000000	                            ja 0x40015b5	       382	mark.c	FUNCTION_9	ELSE_8	IF_11
0x400152f	    0x8b1d00000000	            mov ebx, dword [0x04001535] 	       385	mark.c	FUNCTION_9	ELSE_8	IF_11
0x4001535	    0x488b05000000	            mov rax, qword [0x0400153c] 	       387	mark.c	FUNCTION_9	ELSE_8	IF_11
0x400153c	        0x4c8b6838	            mov r13, qword [rax + 0x38] 	       387	mark.c	FUNCTION_9	ELSE_8	IF_11
0x4001540	        0x448b6040	           mov r12d, dword [rax + 0x40] 	       387	mark.c	FUNCTION_9	ELSE_8	IF_11
0x4001544	          0x8b6844	            mov ebp, dword [rax + 0x44] 	       387	mark.c	FUNCTION_9	ELSE_8	IF_11
0x4001547	    0xc70500000000	               mov dword [0x04001551], 1	       388	mark.c	FUNCTION_9	ELSE_8	IF_11
0x4001551	          0x83fe29	                           cmp esi, 0x29	       389	mark.c	FUNCTION_9	ELSE_8	IF_11	IF_12	CALL_2
0x4001554	        0x400f94c7	                                sete dil	       389	mark.c	FUNCTION_9	ELSE_8	IF_11	IF_12	CALL_2
0x4001558	        0x400fb6ff	                          movzx edi, dil	       389	mark.c	FUNCTION_9	ELSE_8	IF_11	IF_12	CALL_2
0x400155c	        0x8d7c3fff	                lea edi, [rdi + rdi - 1]	       389	mark.c	FUNCTION_9	ELSE_8	IF_11	IF_12	CALL_2
0x4001560	      0xbe01000000	                              mov esi, 1	       389	mark.c	FUNCTION_9	ELSE_8	IF_11	IF_12	CALL_2
0x4001565	      0xe800000000	                          call 0x400156a	       389	mark.c	FUNCTION_9	ELSE_8	IF_11	IF_12	CALL_2
0x400156a	      0xba00000000	                              mov edx, 0	       339	mark.c	FUNCTION_9
0x400156f	            0x85c0	                           test eax, eax	       389	mark.c	FUNCTION_9	ELSE_8	IF_11	IF_12	CALL_2
0x4001571	            0x7422	                            je 0x4001595	       389	mark.c	FUNCTION_9	ELSE_8	IF_11	IF_12	CALL_2
0x4001573	    0x488b05000000	            mov rax, qword [0x0400157a] 	       391	mark.c	FUNCTION_9	ELSE_8	IF_11	IF_12
0x400157a	        0x488b5040	            mov rdx, qword [rax + 0x40] 	       391	mark.c	FUNCTION_9	ELSE_8	IF_11	IF_12
0x400157e	        0x488b4038	            mov rax, qword [rax + 0x38] 	       391	mark.c	FUNCTION_9	ELSE_8	IF_11	IF_12
0x4001582	    0x488905000000	            mov qword [0x04001589], rax 	       391	mark.c	FUNCTION_9	ELSE_8	IF_11	IF_12
0x4001589	    0x488915000000	            mov qword [0x04001590], rdx 	       391	mark.c	FUNCTION_9	ELSE_8	IF_11	IF_12
0x4001590	      0xba00000000	                              mov edx, 0	       392	mark.c	FUNCTION_9	ELSE_8	IF_11	IF_12
0x4001595	    0x488b05000000	            mov rax, qword [0x0400159c] 	       394	mark.c	FUNCTION_9	ELSE_8	IF_11
0x400159c	        0x4c896838	             mov qword [rax + 0x38], r13	       394	mark.c	FUNCTION_9	ELSE_8	IF_11
0x40015a0	        0x44896040	            mov dword [rax + 0x40], r12d	       394	mark.c	FUNCTION_9	ELSE_8	IF_11
0x40015a4	          0x896844	             mov dword [rax + 0x44], ebp	       394	mark.c	FUNCTION_9	ELSE_8	IF_11
0x40015a7	    0x891d00000000	            mov dword [0x040015ad], ebx 	       395	mark.c	FUNCTION_9	ELSE_8	IF_11
0x40015ad	          0x4889d0	                            mov rax, rdx	       395	mark.c	FUNCTION_9	ELSE_8	IF_11
0x40015b0	      0xe906020000	                           jmp 0x40017bb	       395	mark.c	FUNCTION_9	ELSE_8	IF_11
0x40015b5	            0x89f0	                            mov eax, esi	       397	mark.c	FUNCTION_9	ELSE_9	IF_13
0x40015b7	          0x83e0fd	                     and eax, 0xfffffffd	       397	mark.c	FUNCTION_9	ELSE_9	IF_13
0x40015ba	          0x83f83c	                           cmp eax, 0x3c	       397	mark.c	FUNCTION_9	ELSE_9	IF_13
0x40015bd	     0xf85be000000	                           jne 0x4001681	       397	mark.c	FUNCTION_9	ELSE_9	IF_13
0x40015c3	          0x83fe3c	                           cmp esi, 0x3c	       401	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0x40015c6	           0xf94c1	                                 sete cl	       401	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0x40015c9	           0xfb6c9	                           movzx ecx, cl	       401	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0x40015cc	    0x488b97f80200	           mov rdx, qword [rdi + 0x2f8] 	       401	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0x40015d3	    0x488b87080300	           mov rax, qword [rdi + 0x308] 	       401	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0x40015da	          0x4839c2	                            cmp rdx, rax	       401	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0x40015dd	            0x740d	                            je 0x40015ec	       401	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0x40015df	          0x4839c2	                            cmp rdx, rax	       401	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0x40015e2	        0x400f9cc7	                                setl dil	       401	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0x40015e6	        0x400fb6ff	                          movzx edi, dil	       401	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0x40015ea	            0xeb33	                           jmp 0x400161f	       401	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0x40015ec	    0x448b87000300	           mov r8d, dword [rdi + 0x300] 	       401	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0x40015f3	    0x8bbf10030000	           mov edi, dword [rdi + 0x310] 	       401	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0x40015f9	          0x4139f8	                            cmp r8d, edi	       401	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0x40015fc	            0x740d	                            je 0x400160b	       401	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0x40015fe	          0x4139f8	                            cmp r8d, edi	       401	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0x4001601	        0x400f9cc7	                                setl dil	       401	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0x4001605	        0x400fb6ff	                          movzx edi, dil	       401	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0x4001609	            0xeb14	                           jmp 0x400161f	       401	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0x400160b	    0x8b9d14030000	           mov ebx, dword [rbp + 0x314] 	       401	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0x4001611	    0x399d04030000	           cmp dword [rbp + 0x304], ebx 	       401	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0x4001617	        0x400f9cc7	                                setl dil	       401	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0x400161b	        0x400fb6ff	                          movzx edi, dil	       401	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0x400161f	          0x4885c0	                           test rax, rax	       401	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0x4001622	            0x7404	                            je 0x4001628	       401	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0x4001624	            0x39cf	                            cmp edi, ecx	       401	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0x4001626	            0x750e	                           jne 0x4001636	       401	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0x4001628	          0x4885d2	                           test rdx, rdx	       402	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14
0x400162b	            0x7409	                            je 0x4001636	       402	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14
0x400162d	    0x488d95f80200	                  lea rdx, [rbp + 0x2f8]	       399	mark.c	FUNCTION_9	ELSE_9	IF_13
0x4001634	            0xeb07	                           jmp 0x400163d	       399	mark.c	FUNCTION_9	ELSE_9	IF_13
0x4001636	    0x488d95080300	                  lea rdx, [rbp + 0x308]	       400	mark.c	FUNCTION_9	ELSE_9	IF_13
0x400163d	          0x4889d0	                            mov rax, rdx	       400	mark.c	FUNCTION_9	ELSE_9	IF_13
0x4001640	    0x83bd18030000	          cmp dword [rbp + 0x318], 0x56 	       409	mark.c	FUNCTION_9	ELSE_9	IF_13	ELSE_10	IF_15
0x4001647	     0xf856e010000	                           jne 0x40017bb	       409	mark.c	FUNCTION_9	ELSE_9	IF_13	ELSE_10	IF_15
0x400164d	          0x488b02	                    mov rax, qword [rdx]	       411	mark.c	FUNCTION_9	ELSE_9	IF_13	ELSE_10	IF_15
0x4001650	    0x488905000000	            mov qword [0x04001657], rax 	       411	mark.c	FUNCTION_9	ELSE_9	IF_13	ELSE_10	IF_15
0x4001657	          0x83fe3c	                           cmp esi, 0x3c	       414	mark.c	FUNCTION_9	ELSE_9	IF_13	ELSE_10	IF_15	IF_16
0x400165a	      0xba00000000	                              mov edx, 0	       414	mark.c	FUNCTION_9	ELSE_9	IF_13	ELSE_10	IF_15	IF_16
0x400165f	      0xb8ffffff7f	                     mov eax, 0x7fffffff	       414	mark.c	FUNCTION_9	ELSE_9	IF_13	ELSE_10	IF_15	IF_16
0x4001664	           0xf44c2	                          cmove eax, edx	       414	mark.c	FUNCTION_9	ELSE_9	IF_13	ELSE_10	IF_15	IF_16
0x4001667	    0x890500000000	            mov dword [0x0400166d], eax 	       414	mark.c	FUNCTION_9	ELSE_9	IF_13	ELSE_10	IF_15	IF_16
0x400166d	    0xc70500000000	               mov dword [0x04001677], 0	       418	mark.c	FUNCTION_9	ELSE_9	IF_13	ELSE_10	IF_15	ELSE_11
0x4001677	      0xb800000000	                              mov eax, 0	       412	mark.c	FUNCTION_9	ELSE_9	IF_13	ELSE_10	IF_15
0x400167c	      0xe93a010000	                           jmp 0x40017bb	       412	mark.c	FUNCTION_9	ELSE_9	IF_13	ELSE_10	IF_15
0x4001681	          0x8d469f	                   lea eax, [rsi - 0x61]	       422	mark.c	FUNCTION_9	ELSE_11	ELSE_12	IF_17	CALL_4
0x4001684	          0x83f819	                           cmp eax, 0x19	       422	mark.c	FUNCTION_9	ELSE_11	ELSE_12	IF_17	CALL_4
0x4001687	            0x7714	                            ja 0x400169d	       422	mark.c	FUNCTION_9	ELSE_11	ELSE_12	IF_17	CALL_4
0x4001689	            0x4898	                                    cdqe	       424	mark.c	FUNCTION_9	ELSE_11	ELSE_12	IF_17
0x400168b	        0x4883c015	                           add rax, 0x15	       424	mark.c	FUNCTION_9	ELSE_11	ELSE_12	IF_17
0x400168f	        0x48c1e004	                              shl rax, 4	       424	mark.c	FUNCTION_9	ELSE_11	ELSE_12	IF_17
0x4001693	      0x488d440708	                lea rax, [rdi + rax + 8]	       424	mark.c	FUNCTION_9	ELSE_11	ELSE_12	IF_17
0x4001698	      0xe91e010000	                           jmp 0x40017bb	       424	mark.c	FUNCTION_9	ELSE_11	ELSE_12	IF_17
0x400169d	          0x8d46d0	                   lea eax, [rsi - 0x30]	       426	mark.c	FUNCTION_9	ELSE_13	IF_18	CALL_6
0x40016a0	          0x8d56bf	                   lea edx, [rsi - 0x41]	       426	mark.c	FUNCTION_9	ELSE_13	IF_18	CALL_6
0x40016a3	          0x83fa19	                           cmp edx, 0x19	       426	mark.c	FUNCTION_9	ELSE_13	IF_18	CALL_6
0x40016a6	            0x7609	                           jbe 0x40016b1	       426	mark.c	FUNCTION_9	ELSE_13	IF_18	CALL_6
0x40016a8	          0x83f809	                              cmp eax, 9	       426	mark.c	FUNCTION_9	ELSE_13	IF_18	CALL_6
0x40016ab	     0xf8700010000	                            ja 0x40017b1	       426	mark.c	FUNCTION_9	ELSE_13	IF_18	CALL_6
0x40016b1	          0x8d5eea	                   lea ebx, [rsi - 0x16]	       429	mark.c	FUNCTION_9	ELSE_13	IF_18	IF_19
0x40016b4	          0x83ee41	                           sub esi, 0x41	       429	mark.c	FUNCTION_9	ELSE_13	IF_18	IF_19
0x40016b7	          0x83f809	                              cmp eax, 9	       429	mark.c	FUNCTION_9	ELSE_13	IF_18	IF_19
0x40016ba	           0xf47de	                          cmova ebx, esi	       429	mark.c	FUNCTION_9	ELSE_13	IF_18	IF_19
0x40016bd	          0x4863c3	                         movsxd rax, ebx	       432	mark.c	FUNCTION_9	ELSE_13	IF_18
0x40016c0	    0x488d14850000	                        lea rdx, [rax*4]	       432	mark.c	FUNCTION_9	ELSE_13	IF_18
0x40016c8	        0x488d0c02	                    lea rcx, [rdx + rax]	       432	mark.c	FUNCTION_9	ELSE_13	IF_18
0x40016cc	    0x4c8d34cd0000	                        lea r14, [rcx*8]	       432	mark.c	FUNCTION_9	ELSE_13	IF_18
0x40016d4	    0x833ccd000000	                    cmp dword [rcx*8], 0	       434	mark.c	FUNCTION_9	ELSE_13	IF_18	IF_20
0x40016dc	            0x7508	                           jne 0x40016e6	       434	mark.c	FUNCTION_9	ELSE_13	IF_18	IF_20
0x40016de	          0x4c89f7	                            mov rdi, r14	       435	mark.c	FUNCTION_9	ELSE_13	IF_18	CALL_8
0x40016e1	      0xe800000000	                          call 0x40016e6	       435	mark.c	FUNCTION_9	ELSE_13	IF_18	CALL_8
0x40016e6	          0x4d85e4	                           test r12, r12	       437	mark.c	FUNCTION_9	ELSE_13	IF_18	IF_21
0x40016e9	            0x741a	                            je 0x4001705	       437	mark.c	FUNCTION_9	ELSE_13	IF_18	IF_21
0x40016eb	          0x4863db	                         movsxd rbx, ebx	       438	mark.c	FUNCTION_9	ELSE_13	IF_18	IF_21
0x40016ee	        0x488d049b	                  lea rax, [rbx + rbx*4]	       438	mark.c	FUNCTION_9	ELSE_13	IF_18	IF_21
0x40016f2	    0x8b04c5000000	                  mov eax, dword [rax*8]	       438	mark.c	FUNCTION_9	ELSE_13	IF_18	IF_21
0x40016f9	        0x41890424	                    mov dword [r12], eax	       438	mark.c	FUNCTION_9	ELSE_13	IF_18	IF_21
0x40016fd	          0x4c89f0	                            mov rax, r14	       432	mark.c	FUNCTION_9	ELSE_13	IF_18
0x4001700	      0xe9b6000000	                           jmp 0x40017bb	       432	mark.c	FUNCTION_9	ELSE_13	IF_18
0x4001705	          0x4863c3	                         movsxd rax, ebx	       439	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22
0x4001708	        0x488d0480	                  lea rax, [rax + rax*4]	       439	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22
0x400170c	    0x8b3cc5000000	                  mov edi, dword [rax*8]	       439	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22
0x4001713	    0x3bbdb8000000	            cmp edi, dword [rbp + 0xb8] 	       439	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22
0x4001719	     0xf8499000000	                            je 0x40017b8	       439	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22
0x400171f	          0x4863c3	                         movsxd rax, ebx	       444	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23
0x4001722	        0x488d0480	                  lea rax, [rax + rax*4]	       444	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23
0x4001726	    0x48833cc50000	                    cmp qword [rax*8], 0	       445	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23
0x400172f	           0xf95c2	                                setne dl	       445	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23
0x4001732	            0x85ff	                           test edi, edi	       445	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23
0x4001734	           0xf95c0	                                setne al	       445	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23
0x4001737	            0x84c2	                             test dl, al	       445	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23
0x4001739	            0x745d	                            je 0x4001798	       445	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23
0x400173b	          0x4585ed	                         test r13d, r13d	       445	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23
0x400173e	            0x7458	                            je 0x4001798	       445	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23
0x4001740	      0xb900000000	                              mov ecx, 0	       447	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23	IF_24	CALL_9
0x4001745	      0xba01000000	                              mov edx, 1	       447	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23	IF_24	CALL_9
0x400174a	      0xbe01000000	                              mov esi, 1	       447	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23	IF_24	CALL_9
0x400174f	      0xe800000000	                          call 0x4001754	       447	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23	IF_24	CALL_9
0x4001754	          0x83f801	                              cmp eax, 1	       447	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23	IF_24	CALL_9
0x4001757	            0x752d	                           jne 0x4001786	       447	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23	IF_24	CALL_9
0x4001759	          0x4863c3	                         movsxd rax, ebx	       451	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23	IF_24
0x400175c	        0x486bc028	                     imul rax, rax, 0x28	       451	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23	IF_24
0x4001760	    0x488b88000000	                    mov rcx, qword [rax]	       451	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23	IF_24
0x4001767	    0x488b98000000	                    mov rbx, qword [rax]	       451	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23	IF_24
0x400176e	    0x488b05000000	            mov rax, qword [0x04001775] 	       451	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23	IF_24
0x4001775	        0x48894838	             mov qword [rax + 0x38], rcx	       451	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23	IF_24
0x4001779	        0x48895840	             mov qword [rax + 0x40], rbx	       451	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23	IF_24
0x400177d	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       452	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23	IF_24
0x4001784	            0xeb35	                           jmp 0x40017bb	       452	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23	IF_24
0x4001786	    0x48c705000000	mov qword [0x04001791], 0xffffffffffffffff 	       454	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23
0x4001791	      0xb800000000	                              mov eax, 0	       442	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22
0x4001796	            0xeb23	                           jmp 0x40017bb	       454	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23
0x4001798	    0x48c705000000	               mov qword [0x040017a3], 0	       457	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	ELSE_16
0x40017a3	      0xb800000000	                              mov eax, 0	       442	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22
0x40017a8	            0xeb11	                           jmp 0x40017bb	       442	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22
0x40017aa	      0xb800000000	                              mov eax, 0	       339	mark.c	FUNCTION_9
0x40017af	            0xeb0a	                           jmp 0x40017bb	       339	mark.c	FUNCTION_9
0x40017b1	      0xb800000000	                              mov eax, 0	       339	mark.c	FUNCTION_9
0x40017b6	            0xeb03	                           jmp 0x40017bb	       339	mark.c	FUNCTION_9
0x40017b8	          0x4c89f0	                            mov rax, r14	       432	mark.c	FUNCTION_9	ELSE_13	IF_18
0x40017bb	    0x488b9c248800	            mov rbx, qword [rsp + 0x88] 	       463	mark.c	FUNCTION_9	ELSE_16
0x40017c3	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       463	mark.c	FUNCTION_9	ELSE_16
0x40017cc	            0x7405	                            je 0x40017d3	       463	mark.c	FUNCTION_9	ELSE_16
0x40017ce	      0xe800000000	                          call 0x40017d3	       463	mark.c	FUNCTION_9	ELSE_16
0x40017d3	    0x4881c4900000	                           add rsp, 0x90	       463	mark.c	FUNCTION_9	ELSE_16
0x40017da	              0x5b	                                 pop rbx	       463	mark.c	FUNCTION_9	ELSE_16
0x40017db	              0x5d	                                 pop rbp	       463	mark.c	FUNCTION_9	ELSE_16
0x40017dc	            0x415c	                                 pop r12	       463	mark.c	FUNCTION_9	ELSE_16
0x40017de	            0x415d	                                 pop r13	       463	mark.c	FUNCTION_9	ELSE_16
0x40017e0	            0x415e	                                 pop r14	       463	mark.c	FUNCTION_9	ELSE_16
0x40017e2	              0xc3	                                     ret	       463	mark.c	FUNCTION_9	ELSE_16
ex_changes	DO,0:FOR,1:WHILE,0:ELSE,0:functions,0:IF,4:CALL,12:SWITCH,0	88
0x4001f22	            0x4154	                                push r12	       944	mark.c	FUNCTION_23
0x4001f24	              0x55	                                push rbp	       944	mark.c	FUNCTION_23
0x4001f25	              0x53	                                push rbx	       944	mark.c	FUNCTION_23
0x4001f26	      0xba05000000	                              mov edx, 5	       949	mark.c	FUNCTION_23	CALL_2
0x4001f2b	      0xbe00000000	                              mov esi, 0	       949	mark.c	FUNCTION_23	CALL_2
0x4001f30	      0xbf00000000	                              mov edi, 0	       949	mark.c	FUNCTION_23	CALL_2
0x4001f35	      0xe800000000	                          call 0x4001f3a	       949	mark.c	FUNCTION_23	CALL_2
0x4001f3a	          0x4889c7	                            mov rdi, rax	       949	mark.c	FUNCTION_23	CALL_2
0x4001f3d	      0xe800000000	                          call 0x4001f42	       949	mark.c	FUNCTION_23	CALL_2
0x4001f42	    0x488b15000000	            mov rdx, qword [0x04001f49] 	       951	mark.c	FUNCTION_23	FOR_1
0x4001f49	    0x83ba98090000	              cmp dword [rdx + 0x998], 0	       951	mark.c	FUNCTION_23	FOR_1
0x4001f50	     0xf8e25010000	                           jle 0x400207b	       951	mark.c	FUNCTION_23	FOR_1
0x4001f56	    0x8b0500000000	            mov eax, dword [0x04001f5c] 	       951	mark.c	FUNCTION_23	FOR_1
0x4001f5c	            0x85c0	                           test eax, eax	       951	mark.c	FUNCTION_23	FOR_1
0x4001f5e	     0xf8517010000	                           jne 0x400207b	       951	mark.c	FUNCTION_23	FOR_1
0x4001f64	      0xbb00000000	                              mov ebx, 0	       951	mark.c	FUNCTION_23	FOR_1
0x4001f69	      0xbd3e000000	                           mov ebp, 0x3e	       958	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_4
0x4001f6e	          0x4863c3	                         movsxd rax, ebx	       953	mark.c	FUNCTION_23	FOR_1	IF_1
0x4001f71	        0x4883c035	                           add rax, 0x35	       953	mark.c	FUNCTION_23	FOR_1	IF_1
0x4001f75	        0x48c1e004	                              shl rax, 4	       953	mark.c	FUNCTION_23	FOR_1	IF_1
0x4001f79	    0x48837c020800	            cmp qword [rdx + rax + 8], 0	       953	mark.c	FUNCTION_23	FOR_1	IF_1
0x4001f7f	     0xf84d1000000	                            je 0x4002056	       953	mark.c	FUNCTION_23	FOR_1	IF_1
0x4001f85	      0xbf0a000000	                            mov edi, 0xa	       955	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_3
0x4001f8a	      0xe800000000	                          call 0x4001f8f	       955	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_3
0x4001f8f	    0x8b0500000000	            mov eax, dword [0x04001f95] 	       956	mark.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x4001f95	            0x85c0	                           test eax, eax	       956	mark.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x4001f97	     0xf85de000000	                           jne 0x400207b	       956	mark.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x4001f9d	          0x4863c3	                         movsxd rax, ebx	       956	mark.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x4001fa0	        0x48c1e004	                              shl rax, 4	       956	mark.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x4001fa4	    0x480305000000	             add rax, qword [0x04001fab]	       956	mark.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x4001fab	    0x8bb060030000	           mov esi, dword [rax + 0x360] 	       958	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_4
0x4001fb1	    0x488b15000000	            mov rdx, qword [0x04001fb8] 	       960	mark.c	FUNCTION_23	FOR_1	IF_1
0x4001fb8	    0x8b9248150000	          mov edx, dword [rdx + 0x1548] 	       960	mark.c	FUNCTION_23	FOR_1	IF_1
0x4001fbe	          0x4189d9	                            mov r9d, ebx	       958	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_4
0x4001fc1	          0x4129d1	                            sub r9d, edx	       958	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_4
0x4001fc4	            0x89d1	                            mov ecx, edx	       958	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_4
0x4001fc6	            0x29d9	                            sub ecx, ebx	       958	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_4
0x4001fc8	            0x39da	                            cmp edx, ebx	       958	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_4
0x4001fca	        0x440f4dc9	                         cmovge r9d, ecx	       958	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_4
0x4001fce	            0x39da	                            cmp edx, ebx	       958	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_4
0x4001fd0	              0x56	                                push rsi	        33	stdio2.h	FUNCTION_46	CALL_2
0x4001fd1	    0xffb058030000	                push qword [rax + 0x358]	        33	stdio2.h	FUNCTION_46	CALL_2
0x4001fd7	    0x41b820000000	                           mov r8d, 0x20	        33	stdio2.h	FUNCTION_46	CALL_2
0x4001fdd	        0x440f44c5	                          cmove r8d, ebp	        33	stdio2.h	FUNCTION_46	CALL_2
0x4001fe1	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_46	CALL_2
0x4001fe6	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_46	CALL_2
0x4001fed	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_46	CALL_2
0x4001ff2	    0x488b3d000000	            mov rdi, qword [0x04001ff9] 	        33	stdio2.h	FUNCTION_46	CALL_2
0x4001ff9	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_46	CALL_2
0x4001ffe	      0xe800000000	                          call 0x4002003	        33	stdio2.h	FUNCTION_46	CALL_2
0x4002003	    0x488b3d000000	            mov rdi, qword [0x0400200a] 	       964	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_5
0x400200a	      0xe800000000	                          call 0x400200f	       964	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_5
0x400200f	          0x4863fb	                         movsxd rdi, ebx	       965	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_6
0x4002012	        0x4883c735	                           add rdi, 0x35	       965	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_6
0x4002016	        0x48c1e704	                              shl rdi, 4	       965	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_6
0x400201a	    0x48033d000000	             add rdi, qword [0x04002021]	       965	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_6
0x4002021	        0x4883c708	                              add rdi, 8	       965	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_6
0x4002025	      0xbe11000000	                           mov esi, 0x11	       965	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_6
0x400202a	      0xe892e0ffff	                      call sym.mark_line	       965	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_6
0x400202f	          0x4989c4	                            mov r12, rax	       965	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_6
0x4002032	        0x4883c410	                           add rsp, 0x10	       966	mark.c	FUNCTION_23	FOR_1	IF_1	IF_3
0x4002036	          0x4885c0	                           test rax, rax	       966	mark.c	FUNCTION_23	FOR_1	IF_1	IF_3
0x4002039	            0x7440	                            je 0x400207b	       966	mark.c	FUNCTION_23	FOR_1	IF_1	IF_3
0x400203b	    0x8b3500000000	            mov esi, dword [0x04002041] 	       968	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_8
0x4002041	          0x4889c7	                            mov rdi, rax	       968	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_8
0x4002044	      0xe800000000	                          call 0x4002049	       968	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_8
0x4002049	          0x4c89e7	                            mov rdi, r12	       969	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_9
0x400204c	      0xe800000000	                          call 0x4002051	       969	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_9
0x4002051	      0xe800000000	                          call 0x4002056	       970	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_10
0x4002056	      0xe800000000	                          call 0x400205b	       972	mark.c	FUNCTION_23	FOR_1	CALL_11
0x400205b	          0x83c301	                              add ebx, 1	       951	mark.c	FUNCTION_23	FOR_1
0x400205e	    0x488b15000000	            mov rdx, qword [0x04002065] 	       951	mark.c	FUNCTION_23	FOR_1
0x4002065	    0x399a98090000	           cmp dword [rdx + 0x998], ebx 	       951	mark.c	FUNCTION_23	FOR_1
0x400206b	            0x7e0e	                           jle 0x400207b	       951	mark.c	FUNCTION_23	FOR_1
0x400206d	    0x8b0500000000	            mov eax, dword [0x04002073] 	       951	mark.c	FUNCTION_23	FOR_1
0x4002073	            0x85c0	                           test eax, eax	       951	mark.c	FUNCTION_23	FOR_1
0x4002075	     0xf84f3feffff	                            je 0x4001f6e	       951	mark.c	FUNCTION_23	FOR_1
0x400207b	    0x488b05000000	            mov rax, qword [0x04002082] 	       974	mark.c	FUNCTION_23	IF_4
0x4002082	    0x488b15000000	            mov rdx, qword [0x04002089] 	       974	mark.c	FUNCTION_23	IF_4
0x4002089	    0x8b8098090000	           mov eax, dword [rax + 0x998] 	       974	mark.c	FUNCTION_23	IF_4
0x400208f	    0x398248150000	          cmp dword [rdx + 0x1548], eax 	       974	mark.c	FUNCTION_23	IF_4
0x4002095	            0x750a	                           jne 0x40020a1	       974	mark.c	FUNCTION_23	IF_4
0x4002097	      0xbf00000000	                              mov edi, 0	       975	mark.c	FUNCTION_23	CALL_12
0x400209c	      0xe800000000	                          call 0x40020a1	       975	mark.c	FUNCTION_23	CALL_12
0x40020a1	              0x5b	                                 pop rbx	       976	mark.c	FUNCTION_23
0x40020a2	              0x5d	                                 pop rbp	       976	mark.c	FUNCTION_23
0x40020a3	            0x415c	                                 pop r12	       976	mark.c	FUNCTION_23
0x40020a5	              0xc3	                                     ret	       976	mark.c	FUNCTION_23
getmark_buf	DO,0:FOR,0:WHILE,0:ELSE,0:functions,0:IF,0:CALL,1:SWITCH,0	5
0x40017e3	        0x4883ec08	                              sub rsp, 8	       318	mark.c	ELSE_2	FUNCTION_7
0x40017e7	      0xb900000000	                              mov ecx, 0	       319	mark.c	ELSE_2	FUNCTION_7	CALL_1
0x40017ec	      0xe800000000	                          call 0x40017f1	       319	mark.c	ELSE_2	FUNCTION_7	CALL_1
0x40017f1	        0x4883c408	                              add rsp, 8	       320	mark.c	ELSE_2	FUNCTION_7
0x40017f5	              0xc3	                                     ret	       320	mark.c	ELSE_2	FUNCTION_7
checkpcmark	DO,0:FOR,0:WHILE,0:ELSE,0:functions,0:IF,1:CALL,1:SWITCH,0	17
0x400111c	    0x488b05000000	            mov rax, qword [0x04001123] 	       205	mark.c	FUNCTION_4	IF_1
0x4001123	    0x4883b8900500	              cmp qword [rax + 0x590], 0	       205	mark.c	FUNCTION_4	IF_1
0x400112b	            0x7446	                            je 0x4001173	       205	mark.c	FUNCTION_4	IF_1
0x400112d	    0x488b90800500	           mov rdx, qword [rax + 0x580] 	       206	mark.c	FUNCTION_4	IF_1	CALL_1
0x4001134	        0x483b5038	            cmp rdx, qword [rax + 0x38] 	       206	mark.c	FUNCTION_4	IF_1	CALL_1
0x4001138	            0x750d	                           jne 0x4001147	       206	mark.c	FUNCTION_4	IF_1	CALL_1
0x400113a	        0x488b4840	            mov rcx, qword [rax + 0x40] 	       206	mark.c	FUNCTION_4	IF_1	CALL_1
0x400113e	    0x483988880500	           cmp qword [rax + 0x588], rcx 	       206	mark.c	FUNCTION_4	IF_1	CALL_1
0x4001145	            0x7405	                            je 0x400114c	       206	mark.c	FUNCTION_4	IF_1	CALL_1
0x4001147	          0x4885d2	                           test rdx, rdx	       207	mark.c	FUNCTION_4	IF_1
0x400114a	            0x7527	                           jne 0x4001173	       207	mark.c	FUNCTION_4	IF_1
0x400114c	    0x488bb0900500	           mov rsi, qword [rax + 0x590] 	       209	mark.c	FUNCTION_4	IF_1
0x4001153	    0x488bb8980500	           mov rdi, qword [rax + 0x598] 	       209	mark.c	FUNCTION_4	IF_1
0x400115a	    0x4889b0800500	            mov qword [rax + 0x580], rsi	       209	mark.c	FUNCTION_4	IF_1
0x4001161	    0x4889b8880500	            mov qword [rax + 0x588], rdi	       209	mark.c	FUNCTION_4	IF_1
0x4001168	    0x48c780900500	              mov qword [rax + 0x590], 0	       210	mark.c	FUNCTION_4	IF_1
0x4001173	            0xf3c3	                                     ret	       210	mark.c	FUNCTION_4	IF_1
setmark_pos	DO,0:FOR,0:WHILE,0:ELSE,3:functions,0:IF,13:CALL,8:SWITCH,0	130
0x4000ec3	            0x85ff	                           test edi, edi	        61	mark.c	FUNCTION_2	IF_1
0x4000ec5	     0xf881b020000	                            js 0x40010e6	        61	mark.c	FUNCTION_2	IF_1
0x4000ecb	            0x4154	                                push r12	        56	mark.c	FUNCTION_2
0x4000ecd	              0x55	                                push rbp	        56	mark.c	FUNCTION_2
0x4000ece	              0x53	                                push rbx	        56	mark.c	FUNCTION_2
0x4000ecf	          0x4189d4	                           mov r12d, edx	        56	mark.c	FUNCTION_2
0x4000ed2	          0x4889f5	                            mov rbp, rsi	        56	mark.c	FUNCTION_2
0x4000ed5	            0x89fb	                            mov ebx, edi	        56	mark.c	FUNCTION_2
0x4000ed7	          0x83ff27	                           cmp edi, 0x27	        64	mark.c	FUNCTION_2	IF_2
0x4000eda	            0x7405	                            je 0x4000ee1	        64	mark.c	FUNCTION_2	IF_2
0x4000edc	          0x83ff60	                           cmp edi, 0x60	        64	mark.c	FUNCTION_2	IF_2
0x4000edf	            0x7562	                           jne 0x4000f43	        64	mark.c	FUNCTION_2	IF_2
0x4000ee1	    0x488b05000000	            mov rax, qword [0x04000ee8] 	        66	mark.c	FUNCTION_2	IF_2	IF_3
0x4000ee8	        0x488d5038	                   lea rdx, [rax + 0x38]	        66	mark.c	FUNCTION_2	IF_2	IF_3
0x4000eec	          0x4839d5	                            cmp rbp, rdx	        66	mark.c	FUNCTION_2	IF_2	IF_3
0x4000eef	            0x7532	                           jne 0x4000f23	        66	mark.c	FUNCTION_2	IF_2	IF_3
0x4000ef1	      0xe800000000	                          call 0x4000ef6	        68	mark.c	FUNCTION_2	IF_2	IF_3	CALL_1
0x4000ef6	    0x488b05000000	            mov rax, qword [0x04000efd] 	        70	mark.c	FUNCTION_2	IF_2	IF_3
0x4000efd	    0x488b88800500	           mov rcx, qword [rax + 0x580] 	        70	mark.c	FUNCTION_2	IF_2	IF_3
0x4000f04	    0x488b98880500	           mov rbx, qword [rax + 0x588] 	        70	mark.c	FUNCTION_2	IF_2	IF_3
0x4000f0b	    0x488988900500	            mov qword [rax + 0x590], rcx	        70	mark.c	FUNCTION_2	IF_2	IF_3
0x4000f12	    0x488998980500	            mov qword [rax + 0x598], rbx	        70	mark.c	FUNCTION_2	IF_2	IF_3
0x4000f19	      0xb801000000	                              mov eax, 1	        74	mark.c	FUNCTION_2	IF_2
0x4000f1e	      0xe9ce010000	                           jmp 0x40010f1	        74	mark.c	FUNCTION_2	IF_2
0x4000f23	        0x488b4d00	                    mov rcx, qword [rbp]	        73	mark.c	FUNCTION_2	IF_2	ELSE_1
0x4000f27	        0x488b5d08	                mov rbx, qword [rbp + 8]	        73	mark.c	FUNCTION_2	IF_2	ELSE_1
0x4000f2b	    0x488988800500	            mov qword [rax + 0x580], rcx	        73	mark.c	FUNCTION_2	IF_2	ELSE_1
0x4000f32	    0x488998880500	            mov qword [rax + 0x588], rbx	        73	mark.c	FUNCTION_2	IF_2	ELSE_1
0x4000f39	      0xb801000000	                              mov eax, 1	        74	mark.c	FUNCTION_2	IF_2
0x4000f3e	      0xe9ae010000	                           jmp 0x40010f1	        74	mark.c	FUNCTION_2	IF_2
0x4000f43	            0x89d7	                            mov edi, edx	        77	mark.c	FUNCTION_2	CALL_2
0x4000f45	      0xe800000000	                          call 0x4000f4a	        77	mark.c	FUNCTION_2	CALL_2
0x4000f4a	          0x4889c1	                            mov rcx, rax	        77	mark.c	FUNCTION_2	CALL_2
0x4000f4d	          0x4885c0	                           test rax, rax	        78	mark.c	FUNCTION_2	IF_4
0x4000f50	     0xf8496010000	                            je 0x40010ec	        78	mark.c	FUNCTION_2	IF_4
0x4000f56	          0x83fb22	                           cmp ebx, 0x22	        81	mark.c	FUNCTION_2	IF_5
0x4000f59	            0x7520	                           jne 0x4000f7b	        81	mark.c	FUNCTION_2	IF_5
0x4000f5b	        0x488b4500	                    mov rax, qword [rbp]	        83	mark.c	FUNCTION_2	IF_5
0x4000f5f	        0x488b5508	                mov rdx, qword [rbp + 8]	        83	mark.c	FUNCTION_2	IF_5
0x4000f63	    0x488981280300	            mov qword [rcx + 0x328], rax	        83	mark.c	FUNCTION_2	IF_5
0x4000f6a	    0x488991300300	            mov qword [rcx + 0x330], rdx	        83	mark.c	FUNCTION_2	IF_5
0x4000f71	      0xb801000000	                              mov eax, 1	        84	mark.c	FUNCTION_2	IF_5
0x4000f76	      0xe976010000	                           jmp 0x40010f1	        84	mark.c	FUNCTION_2	IF_5
0x4000f7b	          0x83fb5b	                           cmp ebx, 0x5b	        89	mark.c	FUNCTION_2	IF_6
0x4000f7e	            0x7520	                           jne 0x4000fa0	        89	mark.c	FUNCTION_2	IF_6
0x4000f80	        0x488b4500	                    mov rax, qword [rbp]	        91	mark.c	FUNCTION_2	IF_6
0x4000f84	        0x488b5508	                mov rdx, qword [rbp + 8]	        91	mark.c	FUNCTION_2	IF_6
0x4000f88	    0x488981e01100	          mov qword [rcx + 0x11e0], rax 	        91	mark.c	FUNCTION_2	IF_6
0x4000f8f	    0x488991e81100	          mov qword [rcx + 0x11e8], rdx 	        91	mark.c	FUNCTION_2	IF_6
0x4000f96	      0xb801000000	                              mov eax, 1	        92	mark.c	FUNCTION_2	IF_6
0x4000f9b	      0xe951010000	                           jmp 0x40010f1	        92	mark.c	FUNCTION_2	IF_6
0x4000fa0	          0x83fb5d	                           cmp ebx, 0x5d	        94	mark.c	FUNCTION_2	IF_7
0x4000fa3	            0x7520	                           jne 0x4000fc5	        94	mark.c	FUNCTION_2	IF_7
0x4000fa5	        0x488b4500	                    mov rax, qword [rbp]	        96	mark.c	FUNCTION_2	IF_7
0x4000fa9	        0x488b5508	                mov rdx, qword [rbp + 8]	        96	mark.c	FUNCTION_2	IF_7
0x4000fad	    0x488981001200	          mov qword [rcx + 0x1200], rax 	        96	mark.c	FUNCTION_2	IF_7
0x4000fb4	    0x488991081200	          mov qword [rcx + 0x1208], rdx 	        96	mark.c	FUNCTION_2	IF_7
0x4000fbb	      0xb801000000	                              mov eax, 1	        97	mark.c	FUNCTION_2	IF_7
0x4000fc0	      0xe92c010000	                           jmp 0x40010f1	        97	mark.c	FUNCTION_2	IF_7
0x4000fc5	            0x89da	                            mov edx, ebx	       100	mark.c	FUNCTION_2	IF_8
0x4000fc7	          0x83e2fd	                     and edx, 0xfffffffd	       100	mark.c	FUNCTION_2	IF_8
0x4000fca	          0x83fa3c	                           cmp edx, 0x3c	       100	mark.c	FUNCTION_2	IF_8
0x4000fcd	            0x7554	                           jne 0x4001023	       100	mark.c	FUNCTION_2	IF_8
0x4000fcf	          0x83fb3c	                           cmp ebx, 0x3c	       102	mark.c	FUNCTION_2	IF_8	IF_9
0x4000fd2	            0x7518	                           jne 0x4000fec	       102	mark.c	FUNCTION_2	IF_8	IF_9
0x4000fd4	        0x488b4500	                    mov rax, qword [rbp]	       103	mark.c	FUNCTION_2	IF_8	IF_9
0x4000fd8	        0x488b5508	                mov rdx, qword [rbp + 8]	       103	mark.c	FUNCTION_2	IF_8	IF_9
0x4000fdc	    0x488981f80200	            mov qword [rcx + 0x2f8], rax	       103	mark.c	FUNCTION_2	IF_8	IF_9
0x4000fe3	    0x488991000300	            mov qword [rcx + 0x300], rdx	       103	mark.c	FUNCTION_2	IF_8	IF_9
0x4000fea	            0xeb16	                           jmp 0x4001002	       103	mark.c	FUNCTION_2	IF_8	IF_9
0x4000fec	        0x488b4500	                    mov rax, qword [rbp]	       105	mark.c	FUNCTION_2	IF_8	ELSE_2
0x4000ff0	        0x488b5508	                mov rdx, qword [rbp + 8]	       105	mark.c	FUNCTION_2	IF_8	ELSE_2
0x4000ff4	    0x488981080300	            mov qword [rcx + 0x308], rax	       105	mark.c	FUNCTION_2	IF_8	ELSE_2
0x4000ffb	    0x488991100300	            mov qword [rcx + 0x310], rdx	       105	mark.c	FUNCTION_2	IF_8	ELSE_2
0x4001002	      0xb801000000	                              mov eax, 1	       109	mark.c	FUNCTION_2	IF_8
0x4001007	    0x83b918030000	              cmp dword [rcx + 0x318], 0	       106	mark.c	FUNCTION_2	IF_8	IF_10
0x400100e	     0xf85dd000000	                           jne 0x40010f1	       106	mark.c	FUNCTION_2	IF_8	IF_10
0x4001014	    0xc78118030000	          mov dword [rcx + 0x318], 0x76 	       108	mark.c	FUNCTION_2	IF_8	IF_10
0x400101e	      0xe9ce000000	                           jmp 0x40010f1	       108	mark.c	FUNCTION_2	IF_8	IF_10
0x4001023	          0x8d439f	                   lea eax, [rbx - 0x61]	       112	mark.c	FUNCTION_2	IF_11	CALL_3
0x4001026	          0x83f819	                           cmp eax, 0x19	       112	mark.c	FUNCTION_2	IF_11	CALL_3
0x4001029	            0x7727	                            ja 0x4001052	       112	mark.c	FUNCTION_2	IF_11	CALL_3
0x400102b	          0x4863d0	                         movsxd rdx, eax	       115	mark.c	FUNCTION_2	IF_11
0x400102e	        0x4883c215	                           add rdx, 0x15	       115	mark.c	FUNCTION_2	IF_11
0x4001032	        0x48c1e204	                              shl rdx, 4	       115	mark.c	FUNCTION_2	IF_11
0x4001036	        0x488b7500	                    mov rsi, qword [rbp]	       115	mark.c	FUNCTION_2	IF_11
0x400103a	        0x488b7d08	                mov rdi, qword [rbp + 8]	       115	mark.c	FUNCTION_2	IF_11
0x400103e	      0x4889741108	          mov qword [rcx + rdx + 8], rsi	       115	mark.c	FUNCTION_2	IF_11
0x4001043	      0x48897c1110	       mov qword [rcx + rdx + 0x10], rdi	       115	mark.c	FUNCTION_2	IF_11
0x4001048	      0xb801000000	                              mov eax, 1	       116	mark.c	FUNCTION_2	IF_11
0x400104d	      0xe99f000000	                           jmp 0x40010f1	       116	mark.c	FUNCTION_2	IF_11
0x4001052	          0x8d53d0	                   lea edx, [rbx - 0x30]	       118	mark.c	FUNCTION_2	IF_12	CALL_5
0x4001055	          0x8d43bf	                   lea eax, [rbx - 0x41]	       118	mark.c	FUNCTION_2	IF_12	CALL_5
0x4001058	          0x83f819	                           cmp eax, 0x19	       118	mark.c	FUNCTION_2	IF_12	CALL_5
0x400105b	            0x760e	                           jbe 0x400106b	       118	mark.c	FUNCTION_2	IF_12	CALL_5
0x400105d	      0xb800000000	                              mov eax, 0	       132	mark.c	FUNCTION_2
0x4001062	          0x83fa09	                              cmp edx, 9	       118	mark.c	FUNCTION_2	IF_12	CALL_5
0x4001065	     0xf8786000000	                            ja 0x40010f1	       118	mark.c	FUNCTION_2	IF_12	CALL_5
0x400106b	          0x8d43ea	                   lea eax, [rbx - 0x16]	       121	mark.c	FUNCTION_2	IF_12	IF_13
0x400106e	          0x83eb41	                           sub ebx, 0x41	       121	mark.c	FUNCTION_2	IF_12	IF_13
0x4001071	          0x83fa09	                              cmp edx, 9	       121	mark.c	FUNCTION_2	IF_12	IF_13
0x4001074	           0xf46d8	                         cmovbe ebx, eax	       121	mark.c	FUNCTION_2	IF_12	IF_13
0x4001077	          0x4863c3	                         movsxd rax, ebx	       124	mark.c	FUNCTION_2	IF_12
0x400107a	    0x488d14850000	                        lea rdx, [rax*4]	       124	mark.c	FUNCTION_2	IF_12
0x4001082	        0x488d0c02	                    lea rcx, [rdx + rax]	       124	mark.c	FUNCTION_2	IF_12
0x4001086	        0x488b7500	                    mov rsi, qword [rbp]	       124	mark.c	FUNCTION_2	IF_12
0x400108a	        0x488b7d08	                mov rdi, qword [rbp + 8]	       124	mark.c	FUNCTION_2	IF_12
0x400108e	    0x488934cd0000	                  mov qword [rcx*8], rsi	       124	mark.c	FUNCTION_2	IF_12
0x4001096	    0x48893ccd0000	                  mov qword [rcx*8], rdi	       124	mark.c	FUNCTION_2	IF_12
0x400109e	    0x448924cd0000	                 mov dword [rcx*8], r12d	       125	mark.c	FUNCTION_2	IF_12
0x40010a6	    0x488b3ccd0000	                  mov rdi, qword [rcx*8]	       126	mark.c	FUNCTION_2	IF_12	CALL_7
0x40010ae	          0x4885ff	                           test rdi, rdi	       126	mark.c	FUNCTION_2	IF_12	CALL_7
0x40010b1	            0x7418	                            je 0x40010cb	       126	mark.c	FUNCTION_2	IF_12	CALL_7
0x40010b3	      0xe800000000	                          call 0x40010b8	       126	mark.c	FUNCTION_2	IF_12	CALL_7
0x40010b8	          0x4863c3	                         movsxd rax, ebx	       126	mark.c	FUNCTION_2	IF_12	CALL_7
0x40010bb	        0x488d0480	                  lea rax, [rax + rax*4]	       126	mark.c	FUNCTION_2	IF_12	CALL_7
0x40010bf	    0x48c704c50000	                    mov qword [rax*8], 0	       126	mark.c	FUNCTION_2	IF_12	CALL_7
0x40010cb	      0xe800000000	                          call 0x40010d0	       128	mark.c	FUNCTION_2	IF_12	CALL_8
0x40010d0	          0x4863db	                         movsxd rbx, ebx	       128	mark.c	FUNCTION_2	IF_12	CALL_8
0x40010d3	        0x488d149b	                  lea rdx, [rbx + rbx*4]	       128	mark.c	FUNCTION_2	IF_12	CALL_8
0x40010d7	    0x488904d50000	                  mov qword [rdx*8], rax	       128	mark.c	FUNCTION_2	IF_12	CALL_8
0x40010df	      0xb801000000	                              mov eax, 1	       130	mark.c	FUNCTION_2	IF_12
0x40010e4	            0xeb0b	                           jmp 0x40010f1	       130	mark.c	FUNCTION_2	IF_12
0x40010e6	      0xb800000000	                              mov eax, 0	        62	mark.c	FUNCTION_2	IF_1
0x40010eb	              0xc3	                                     ret	       133	mark.c	FUNCTION_2
0x40010ec	      0xb800000000	                              mov eax, 0	        79	mark.c	FUNCTION_2	IF_4
0x40010f1	              0x5b	                                 pop rbx	       133	mark.c	FUNCTION_2
0x40010f2	              0x5d	                                 pop rbp	       133	mark.c	FUNCTION_2
0x40010f3	            0x415c	                                 pop r12	       133	mark.c	FUNCTION_2
0x40010f5	              0xc3	                                     ret	       133	mark.c	FUNCTION_2
prepare_viminfo_marks	DO,0:FOR,0:WHILE,0:ELSE,0:functions,0:IF,0:CALL,2:SWITCH,0	10
0x4002d2e	        0x4883ec08	                              sub rsp, 8	      1471	mark.c	FUNCTION_34
0x4002d32	      0xbfa0050000	                          mov edi, 0x5a0	      1472	mark.c	FUNCTION_34	CALL_1
0x4002d37	      0xe800000000	                          call 0x4002d3c	      1472	mark.c	FUNCTION_34	CALL_1
0x4002d3c	    0x488905000000	            mov qword [0x04002d43], rax 	      1472	mark.c	FUNCTION_34	CALL_1
0x4002d43	      0xbfa00f0000	                          mov edi, 0xfa0	      1475	mark.c	FUNCTION_34	CALL_2
0x4002d48	      0xe800000000	                          call 0x4002d4d	      1475	mark.c	FUNCTION_34	CALL_2
0x4002d4d	    0x488905000000	            mov qword [0x04002d54], rax 	      1475	mark.c	FUNCTION_34	CALL_2
0x4002d54	    0xc70500000000	               mov dword [0x04002d5e], 0	      1477	mark.c	FUNCTION_34
0x4002d5e	        0x4883c408	                              add rsp, 8	      1479	mark.c	FUNCTION_34
0x4002d62	              0xc3	                                     ret	      1479	mark.c	FUNCTION_34
clrallmarks	DO,0:FOR,2:WHILE,0:ELSE,0:functions,0:IF,1:CALL,0:SWITCH,0	26
0x4001952	    0x833d00000000	cmp dword [0x04001959], 0xffffffffffffffff	       638	mark.c	FUNCTION_15	IF_1
0x4001959	            0x752a	                           jne 0x4001985	       638	mark.c	FUNCTION_15	IF_1
0x400195b	      0xb800000000	                              mov eax, 0	       638	mark.c	FUNCTION_15	IF_1
0x4001960	      0xba00000000	                              mov edx, 0	       638	mark.c	FUNCTION_15	IF_1
0x4001965	    0x48c700000000	                      mov qword [rax], 0	       641	mark.c	FUNCTION_15	IF_1	FOR_1
0x400196c	    0x48c740180000	               mov qword [rax + 0x18], 0	       642	mark.c	FUNCTION_15	IF_1	FOR_1
0x4001974	    0x48c740200000	               mov qword [rax + 0x20], 0	       644	mark.c	FUNCTION_15	IF_1	FOR_1
0x400197c	        0x4883c028	                           add rax, 0x28	       644	mark.c	FUNCTION_15	IF_1	FOR_1
0x4001980	          0x4839d0	                            cmp rax, rdx	       639	mark.c	FUNCTION_15	IF_1	FOR_1
0x4001983	            0x75e0	                           jne 0x4001965	       639	mark.c	FUNCTION_15	IF_1	FOR_1
0x4001985	    0x488d87580100	                  lea rax, [rdi + 0x158]	       639	mark.c	FUNCTION_15	IF_1	FOR_1
0x400198c	    0x488d97f80200	                  lea rdx, [rdi + 0x2f8]	       639	mark.c	FUNCTION_15	IF_1	FOR_1
0x4001993	    0x48c700000000	                      mov qword [rax], 0	       649	mark.c	FUNCTION_15	FOR_2
0x400199a	        0x4883c010	                           add rax, 0x10	       649	mark.c	FUNCTION_15	FOR_2
0x400199e	          0x4839c2	                            cmp rdx, rax	       648	mark.c	FUNCTION_15	FOR_2
0x40019a1	            0x75f0	                           jne 0x4001993	       648	mark.c	FUNCTION_15	FOR_2
0x40019a3	    0xc70500000000	           mov dword [0x040019ad], 0x1a 	       648	mark.c	FUNCTION_15	FOR_2
0x40019ad	    0x48c787e01100	            mov qword [rdi + 0x11e0], 0 	       650	mark.c	FUNCTION_15
0x40019b8	    0x48c787001200	            mov qword [rdi + 0x1200], 0 	       651	mark.c	FUNCTION_15
0x40019c3	    0x48c787280300	              mov qword [rdi + 0x328], 1	       652	mark.c	FUNCTION_15
0x40019ce	    0xc78730030000	              mov dword [rdi + 0x330], 0	       653	mark.c	FUNCTION_15
0x40019d8	    0xc78734030000	              mov dword [rdi + 0x334], 0	       655	mark.c	FUNCTION_15
0x40019e2	    0x48c787380300	              mov qword [rdi + 0x338], 0	       657	mark.c	FUNCTION_15
0x40019ed	    0x48c787480300	              mov qword [rdi + 0x348], 0	       658	mark.c	FUNCTION_15
0x40019f8	    0xc78798090000	              mov dword [rdi + 0x998], 0	       660	mark.c	FUNCTION_15
0x4001a02	              0xc3	                                     ret	       660	mark.c	FUNCTION_15
copy_viminfo_marks	DO,0:FOR,0:WHILE,6:ELSE,4:functions,1:IF,31:CALL,33:SWITCH,1	488
0x40039b5	            0x4157	                                push r15	      1972	mark.c	FUNCTION_45
0x40039b7	            0x4156	                                push r14	      1972	mark.c	FUNCTION_45
0x40039b9	            0x4155	                                push r13	      1972	mark.c	FUNCTION_45
0x40039bb	            0x4154	                                push r12	      1972	mark.c	FUNCTION_45
0x40039bd	              0x55	                                push rbp	      1972	mark.c	FUNCTION_45
0x40039be	              0x53	                                push rbx	      1972	mark.c	FUNCTION_45
0x40039bf	    0x4881ec880000	                           sub rsp, 0x88	      1972	mark.c	FUNCTION_45
0x40039c6	          0x4989fd	                            mov r13, rdi	      1972	mark.c	FUNCTION_45
0x40039c9	          0x4989f7	                            mov r15, rsi	      1972	mark.c	FUNCTION_45
0x40039cc	          0x4889d5	                            mov rbp, rdx	      1972	mark.c	FUNCTION_45
0x40039cf	          0x4189cc	                           mov r12d, ecx	      1972	mark.c	FUNCTION_45
0x40039d2	      0x448944244c	             mov dword [rsp + 0x4c], r8d	      1972	mark.c	FUNCTION_45
0x40039d7	    0x64488b042528	                mov rax, qword fs:[0x28]	      1972	mark.c	FUNCTION_45
0x40039e0	      0x4889442478	             mov qword [rsp + 0x78], rax	      1972	mark.c	FUNCTION_45
0x40039e5	            0x31c0	                            xor eax, eax	      1972	mark.c	FUNCTION_45
0x40039e7	          0x488b1f	                    mov rbx, qword [rdi]	      1973	mark.c	FUNCTION_45
0x40039ea	      0xbf00020000	                          mov edi, 0x200	      1990	mark.c	FUNCTION_45	IF_1	CALL_1
0x40039ef	      0xe800000000	                          call 0x40039f4	      1990	mark.c	FUNCTION_45	IF_1	CALL_1
0x40039f4	      0x4889442418	             mov qword [rsp + 0x18], rax	      1990	mark.c	FUNCTION_45	IF_1	CALL_1
0x40039f9	          0x4885c0	                           test rax, rax	      1990	mark.c	FUNCTION_45	IF_1	CALL_1
0x40039fc	     0xf84c3070000	                            je 0x40041c5	      1990	mark.c	FUNCTION_45	IF_1	CALL_1
0x4003a02	          0xc60000	                       mov byte [rax], 0	      1992	mark.c	FUNCTION_45
0x4003a05	          0x4d85ff	                           test r15, r15	      1994	mark.c	FUNCTION_45	IF_2
0x4003a08	     0xf849c060000	                            je 0x40040aa	      1994	mark.c	FUNCTION_45	IF_2
0x4003a0e	          0x8b7500	                    mov esi, dword [rbp]	      1994	mark.c	FUNCTION_45	IF_2
0x4003a11	    0x48c744243000	               mov qword [rsp + 0x30], 0	      1988	mark.c	FUNCTION_45
0x4003a1a	            0x85f6	                           test esi, esi	      1994	mark.c	FUNCTION_45	IF_2
0x4003a1c	     0xf8e9e060000	                           jle 0x40040c0	      1994	mark.c	FUNCTION_45	IF_2
0x4003a22	          0x4863f6	                         movsxd rsi, esi	      1997	mark.c	FUNCTION_45	IF_2	CALL_2
0x4003a25	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	      1997	mark.c	FUNCTION_45	IF_2	CALL_2
0x4003a29	      0xb900000000	                              mov ecx, 0	      1997	mark.c	FUNCTION_45	IF_2	CALL_2
0x4003a2e	      0xba08000000	                              mov edx, 8	      1997	mark.c	FUNCTION_45	IF_2	CALL_2
0x4003a33	      0xe800000000	                          call 0x4003a38	      1997	mark.c	FUNCTION_45	IF_2	CALL_2
0x4003a38	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      1999	mark.c	FUNCTION_45	IF_2
0x4003a3c	          0x488b00	                    mov rax, qword [rax]	      1999	mark.c	FUNCTION_45	IF_2
0x4003a3f	      0x4889442430	             mov qword [rsp + 0x30], rax	      1999	mark.c	FUNCTION_45	IF_2
0x4003a44	      0xe977060000	                           jmp 0x40040c0	      1999	mark.c	FUNCTION_45	IF_2
0x4003a49	      0xe800000000	                          call 0x4003a4e	      2005	mark.c	FUNCTION_45	IF_3	CALL_3
0x4003a4e	      0x4889442440	             mov qword [rsp + 0x40], rax	      2005	mark.c	FUNCTION_45	IF_3	CALL_3
0x4003a53	          0x4885c0	                           test rax, rax	      2006	mark.c	FUNCTION_45	IF_3	IF_4
0x4003a56	     0xf8490060000	                            je 0x40040ec	      2006	mark.c	FUNCTION_45	IF_3	IF_4
0x4003a5c	          0x4889c6	                            mov rsi, rax	      2007	mark.c	FUNCTION_45	IF_3	CALL_4
0x4003a5f	      0xbf39000000	                           mov edi, 0x39	      2007	mark.c	FUNCTION_45	IF_3	CALL_4
0x4003a64	      0xe800000000	                          call 0x4003a69	      2007	mark.c	FUNCTION_45	IF_3	CALL_4
0x4003a69	      0xe97e060000	                           jmp 0x40040ec	      2007	mark.c	FUNCTION_45	IF_3	CALL_4
0x4003a6e	      0x837c240800	                  cmp dword [rsp + 8], 0	      2012	mark.c	FUNCTION_45	WHILE_1
0x4003a73	     0xf8e22060000	                           jle 0x400409b	      2012	mark.c	FUNCTION_45	WHILE_1
0x4003a79	      0xc644244b00	                mov byte [rsp + 0x4b], 0	      2012	mark.c	FUNCTION_45	WHILE_1
0x4003a7e	    0x48c744244000	               mov qword [rsp + 0x40], 0	      1984	mark.c	FUNCTION_45
0x4003a87	            0xeb0e	                           jmp 0x4003a97	      1984	mark.c	FUNCTION_45
0x4003a89	      0xc644244b01	                mov byte [rsp + 0x4b], 1	      2012	mark.c	FUNCTION_45	WHILE_1
0x4003a8e	    0x48c744243000	               mov qword [rsp + 0x30], 0	      1988	mark.c	FUNCTION_45
0x4003a97	    0xc74424200000	               mov dword [rsp + 0x20], 0	      1988	mark.c	FUNCTION_45
0x4003a9f	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      1988	mark.c	FUNCTION_45
0x4003aa7	        0x488d4301	                      lea rax, [rbx + 1]	      2030	mark.c	FUNCTION_45	WHILE_1	CALL_9
0x4003aab	      0x4889442438	             mov qword [rsp + 0x38], rax	      2030	mark.c	FUNCTION_45	WHILE_1	CALL_9
0x4003ab0	        0x488d4302	                      lea rax, [rbx + 2]	      2152	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	CALL_29
0x4003ab4	      0x4889442428	             mov qword [rsp + 0x28], rax	      2152	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	CALL_29
0x4003ab9	           0xfb603	                   movzx eax, byte [rbx]	      2014	mark.c	FUNCTION_45	WHILE_1	IF_5
0x4003abc	            0x3c3e	                            cmp al, 0x3e	      2014	mark.c	FUNCTION_45	WHILE_1	IF_5
0x4003abe	            0x745e	                            je 0x4003b1e	      2014	mark.c	FUNCTION_45	WHILE_1	IF_5
0x4003ac0	            0x3c23	                            cmp al, 0x23	      2016	mark.c	FUNCTION_45	WHILE_1	IF_5	IF_6
0x4003ac2	            0x7710	                            ja 0x4003ad4	      2016	mark.c	FUNCTION_45	WHILE_1	IF_5	IF_6
0x4003ac4	    0x48ba00240000	                 movabs rdx, 0x800002400	      2016	mark.c	FUNCTION_45	WHILE_1	IF_5	IF_6
0x4003ace	        0x480fa3c2	                             bt rdx, rax	      2016	mark.c	FUNCTION_45	WHILE_1	IF_5	IF_6
0x4003ad2	            0x722c	                            jb 0x4003b00	      2016	mark.c	FUNCTION_45	WHILE_1	IF_5	IF_6
0x4003ad4	      0xba05000000	                              mov edx, 5	      2018	mark.c	FUNCTION_45	WHILE_1	IF_5	IF_6	IF_7	CALL_7
0x4003ad9	      0xbe00000000	                              mov esi, 0	      2018	mark.c	FUNCTION_45	WHILE_1	IF_5	IF_6	IF_7	CALL_7
0x4003ade	      0xbf00000000	                              mov edi, 0	      2018	mark.c	FUNCTION_45	WHILE_1	IF_5	IF_6	IF_7	CALL_7
0x4003ae3	      0xe800000000	                          call 0x4003ae8	      2018	mark.c	FUNCTION_45	WHILE_1	IF_5	IF_6	IF_7	CALL_7
0x4003ae8	          0x4889da	                            mov rdx, rbx	      2018	mark.c	FUNCTION_45	WHILE_1	IF_5	IF_6	IF_7	CALL_7
0x4003aeb	          0x4889c6	                            mov rsi, rax	      2018	mark.c	FUNCTION_45	WHILE_1	IF_5	IF_6	IF_7	CALL_7
0x4003aee	      0xbf00000000	                              mov edi, 0	      2018	mark.c	FUNCTION_45	WHILE_1	IF_5	IF_6	IF_7	CALL_7
0x4003af3	      0xe800000000	                          call 0x4003af8	      2018	mark.c	FUNCTION_45	WHILE_1	IF_5	IF_6	IF_7	CALL_7
0x4003af8	            0x85c0	                           test eax, eax	      2018	mark.c	FUNCTION_45	WHILE_1	IF_5	IF_6	IF_7	CALL_7
0x4003afa	     0xf854f050000	                           jne 0x400404f	      2018	mark.c	FUNCTION_45	WHILE_1	IF_5	IF_6	IF_7	CALL_7
0x4003b00	        0x498b5508	                mov rdx, qword [r13 + 8]	      2021	mark.c	FUNCTION_45	WHILE_1	IF_5	CALL_8
0x4003b04	      0xbe00020000	                          mov esi, 0x200	      2021	mark.c	FUNCTION_45	WHILE_1	IF_5	CALL_8
0x4003b09	          0x4889df	                            mov rdi, rbx	      2021	mark.c	FUNCTION_45	WHILE_1	IF_5	CALL_8
0x4003b0c	      0xe800000000	                          call 0x4003b11	      2021	mark.c	FUNCTION_45	WHILE_1	IF_5	CALL_8
0x4003b11	            0x85c0	                           test eax, eax	      2012	mark.c	FUNCTION_45	WHILE_1
0x4003b13	     0xf841d050000	                            je 0x4004036	      2012	mark.c	FUNCTION_45	WHILE_1
0x4003b19	      0xe931050000	                           jmp 0x400404f	      2012	mark.c	FUNCTION_45	WHILE_1
0x4003b1e	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      2030	mark.c	FUNCTION_45	WHILE_1	CALL_9
0x4003b23	      0xe800000000	                          call 0x4003b28	      2030	mark.c	FUNCTION_45	WHILE_1	CALL_9
0x4003b28	        0x492b4500	                    sub rax, qword [r13]	      2031	mark.c	FUNCTION_45	WHILE_1	CALL_10
0x4003b2c	          0x4889c6	                            mov rsi, rax	      2031	mark.c	FUNCTION_45	WHILE_1	CALL_10
0x4003b2f	      0xba00000000	                              mov edx, 0	      2031	mark.c	FUNCTION_45	WHILE_1	CALL_10
0x4003b34	          0x4c89ef	                            mov rdi, r13	      2031	mark.c	FUNCTION_45	WHILE_1	CALL_10
0x4003b37	      0xe800000000	                          call 0x4003b3c	      2031	mark.c	FUNCTION_45	WHILE_1	CALL_10
0x4003b3c	          0x4989c4	                            mov r12, rax	      2031	mark.c	FUNCTION_45	WHILE_1	CALL_10
0x4003b3f	          0x4885c0	                           test rax, rax	      2032	mark.c	FUNCTION_45	WHILE_1	IF_8
0x4003b42	     0xf84ee040000	                            je 0x4004036	      2032	mark.c	FUNCTION_45	WHILE_1	IF_8
0x4003b48	      0xb800000000	                              mov eax, 0	      2034	mark.c	FUNCTION_45	WHILE_1	CALL_11
0x4003b4d	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      2034	mark.c	FUNCTION_45	WHILE_1	CALL_11
0x4003b54	          0x4c89e7	                            mov rdi, r12	      2034	mark.c	FUNCTION_45	WHILE_1	CALL_11
0x4003b57	            0xf2ae	              repne scasb al, byte [rdi]	      2034	mark.c	FUNCTION_45	WHILE_1	CALL_11
0x4003b59	          0x48f7d1	                                 not rcx	      2034	mark.c	FUNCTION_45	WHILE_1	CALL_11
0x4003b5c	      0x4d8d740cff	                lea r14, [r12 + rcx - 1]	      2034	mark.c	FUNCTION_45	WHILE_1	CALL_11
0x4003b61	          0x4d39f4	                            cmp r12, r14	      2035	mark.c	FUNCTION_45	WHILE_1	WHILE_2	CALL_12
0x4003b64	            0x750b	                           jne 0x4003b71	      2035	mark.c	FUNCTION_45	WHILE_1	WHILE_2	CALL_12
0x4003b66	            0xeb1f	                           jmp 0x4003b87	      2035	mark.c	FUNCTION_45	WHILE_1	WHILE_2	CALL_12
0x4003b68	        0x4983ee01	                              sub r14, 1	      2036	mark.c	FUNCTION_45	WHILE_1	WHILE_2
0x4003b6c	          0x4d39f4	                            cmp r12, r14	      2035	mark.c	FUNCTION_45	WHILE_1	WHILE_2	CALL_12
0x4003b6f	            0x7416	                            je 0x4003b87	      2035	mark.c	FUNCTION_45	WHILE_1	WHILE_2	CALL_12
0x4003b71	        0x410fb63e	                   movzx edi, byte [r14]	      2035	mark.c	FUNCTION_45	WHILE_1	WHILE_2	CALL_12
0x4003b75	          0x4084ff	                           test dil, dil	      2035	mark.c	FUNCTION_45	WHILE_1	WHILE_2	CALL_12
0x4003b78	            0x74ee	                            je 0x4003b68	      2035	mark.c	FUNCTION_45	WHILE_1	WHILE_2	CALL_12
0x4003b7a	        0x400fb6ff	                          movzx edi, dil	      2035	mark.c	FUNCTION_45	WHILE_1	WHILE_2	CALL_12
0x4003b7e	      0xe800000000	                          call 0x4003b83	      2035	mark.c	FUNCTION_45	WHILE_1	WHILE_2	CALL_12
0x4003b83	            0x85c0	                           test eax, eax	      2035	mark.c	FUNCTION_45	WHILE_1	WHILE_2	CALL_12
0x4003b85	            0x75e1	                           jne 0x4003b68	      2035	mark.c	FUNCTION_45	WHILE_1	WHILE_2	CALL_12
0x4003b87	        0x41803e01	                       cmp byte [r14], 1	      2038	mark.c	FUNCTION_45	WHILE_1	IF_9
0x4003b8b	        0x4983deff	             sbb r14, 0xffffffffffffffff	      2038	mark.c	FUNCTION_45	WHILE_1	IF_9
0x4003b8f	        0x41c60600	                       mov byte [r14], 0	      2039	mark.c	FUNCTION_45	WHILE_1
0x4003b93	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      2042	mark.c	FUNCTION_45	WHILE_1	IF_10
0x4003b98	          0x4885c0	                           test rax, rax	      2042	mark.c	FUNCTION_45	WHILE_1	IF_10
0x4003b9b	            0x7410	                            je 0x4003bad	      2042	mark.c	FUNCTION_45	WHILE_1	IF_10
0x4003b9d	      0xbaffffffff	                     mov edx, 0xffffffff	      2043	mark.c	FUNCTION_45	WHILE_1	CALL_13
0x4003ba2	          0x4c89e6	                            mov rsi, r12	      2043	mark.c	FUNCTION_45	WHILE_1	CALL_13
0x4003ba5	          0x4889c7	                            mov rdi, rax	      2043	mark.c	FUNCTION_45	WHILE_1	CALL_13
0x4003ba8	      0xe800000000	                          call 0x4003bad	      2043	mark.c	FUNCTION_45	WHILE_1	CALL_13
0x4003bad	      0x807c244b00	                cmp byte [rsp + 0x4b], 0	      2051	mark.c	FUNCTION_45	WHILE_1	IF_11
0x4003bb2	            0x7476	                            je 0x4003c2a	      2051	mark.c	FUNCTION_45	WHILE_1	IF_11
0x4003bb4	      0xf644244c02	               test byte [rsp + 0x4c], 2	      2053	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12
0x4003bb9	     0xf8466020000	                            je 0x4003e25	      2053	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12
0x4003bbf	    0x488b05000000	            mov rax, qword [0x04003bc6] 	      2053	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12
0x4003bc6	    0x488bb0880000	            mov rsi, qword [rax + 0x88] 	      2053	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12
0x4003bcd	    0xc74424100000	               mov dword [rsp + 0x10], 0	      2050	mark.c	FUNCTION_45	WHILE_1
0x4003bd5	    0x41be00000000	                             mov r14d, 0	      2050	mark.c	FUNCTION_45	WHILE_1
0x4003bdb	          0x4885f6	                           test rsi, rsi	      2053	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12
0x4003bde	     0xf845f020000	                            je 0x4003e43	      2053	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12
0x4003be4	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      2055	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12	IF_13
0x4003be9	          0x803800	                       cmp byte [rax], 0	      2055	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12	IF_13
0x4003bec	            0x7518	                           jne 0x4003c06	      2055	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12	IF_13
0x4003bee	    0x41b801000000	                              mov r8d, 1	      2056	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12	CALL_14
0x4003bf4	      0xb900020000	                          mov ecx, 0x200	      2056	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12	CALL_14
0x4003bf9	          0x4889c2	                            mov rdx, rax	      2056	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12	CALL_14
0x4003bfc	      0xbf00000000	                              mov edi, 0	      2056	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12	CALL_14
0x4003c01	      0xe800000000	                          call 0x4003c06	      2056	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12	CALL_14
0x4003c06	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      2057	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12	IF_14	CALL_15
0x4003c0b	          0x4c89e7	                            mov rdi, r12	      2057	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12	IF_14	CALL_15
0x4003c0e	      0xe800000000	                          call 0x4003c13	      2057	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12	IF_14	CALL_15
0x4003c13	            0x85c0	                           test eax, eax	      2050	mark.c	FUNCTION_45	WHILE_1
0x4003c15	        0x410f94c6	                               sete r14b	      2050	mark.c	FUNCTION_45	WHILE_1
0x4003c19	        0x450fb6f6	                        movzx r14d, r14b	      2050	mark.c	FUNCTION_45	WHILE_1
0x4003c1d	    0xc74424100000	               mov dword [rsp + 0x10], 0	      2050	mark.c	FUNCTION_45	WHILE_1
0x4003c25	      0xe919020000	                           jmp 0x4003e43	      2050	mark.c	FUNCTION_45	WHILE_1
0x4003c2a	    0x4c8b35000000	            mov r14, qword [0x04003c31] 	      2064	mark.c	FUNCTION_45	WHILE_1	ELSE_1	CALL_16
0x4003c31	          0x4d85f6	                           test r14, r14	      2064	mark.c	FUNCTION_45	WHILE_1	ELSE_1	CALL_16
0x4003c34	            0x7465	                            je 0x4003c9b	      2064	mark.c	FUNCTION_45	WHILE_1	ELSE_1	CALL_16
0x4003c36	      0x48895c2410	             mov qword [rsp + 0x10], rbx	      2064	mark.c	FUNCTION_45	WHILE_1	ELSE_1	CALL_16
0x4003c3b	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	      2064	mark.c	FUNCTION_45	WHILE_1	ELSE_1	CALL_16
0x4003c40	    0x498bb6880000	            mov rsi, qword [r14 + 0x88] 	      2065	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_15
0x4003c47	          0x4885f6	                           test rsi, rsi	      2065	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_15
0x4003c4a	            0x7427	                            je 0x4003c73	      2065	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_15
0x4003c4c	    0x41b801000000	                              mov r8d, 1	      2067	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_15	CALL_17
0x4003c52	      0xb900020000	                          mov ecx, 0x200	      2067	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_15	CALL_17
0x4003c57	          0x4889da	                            mov rdx, rbx	      2067	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_15	CALL_17
0x4003c5a	      0xbf00000000	                              mov edi, 0	      2067	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_15	CALL_17
0x4003c5f	      0xe800000000	                          call 0x4003c64	      2067	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_15	CALL_17
0x4003c64	          0x4889de	                            mov rsi, rbx	      2068	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_15	IF_16	CALL_18
0x4003c67	          0x4c89e7	                            mov rdi, r12	      2068	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_15	IF_16	CALL_18
0x4003c6a	      0xe800000000	                          call 0x4003c6f	      2068	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_15	IF_16	CALL_18
0x4003c6f	            0x85c0	                           test eax, eax	      2068	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_15	IF_16	CALL_18
0x4003c71	            0x7410	                            je 0x4003c83	      2068	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_15	IF_16	CALL_18
0x4003c73	        0x4d8b7668	            mov r14, qword [r14 + 0x68] 	      2064	mark.c	FUNCTION_45	WHILE_1	ELSE_1	CALL_16
0x4003c77	          0x4d85f6	                           test r14, r14	      2064	mark.c	FUNCTION_45	WHILE_1	ELSE_1	CALL_16
0x4003c7a	            0x75c4	                           jne 0x4003c40	      2064	mark.c	FUNCTION_45	WHILE_1	ELSE_1	CALL_16
0x4003c7c	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      2064	mark.c	FUNCTION_45	WHILE_1	ELSE_1	CALL_16
0x4003c81	            0xeb18	                           jmp 0x4003c9b	      2064	mark.c	FUNCTION_45	WHILE_1	ELSE_1	CALL_16
0x4003c83	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      2064	mark.c	FUNCTION_45	WHILE_1	ELSE_1	CALL_16
0x4003c88	          0x4d85f6	                           test r14, r14	      2075	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17
0x4003c8b	            0x740e	                            je 0x4003c9b	      2075	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17
0x4003c8d	    0x4183be101200	             cmp dword [r14 + 0x1210], 0	      2075	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17
0x4003c95	     0xf859a010000	                           jne 0x4003e35	      2075	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17
0x4003c9b	    0x48837c243000	               cmp qword [rsp + 0x30], 0	      2079	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18
0x4003ca1	     0xf84bf040000	                            je 0x4004166	      2079	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18
0x4003ca7	          0x4c89ef	                            mov rdi, r13	      2084	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x4003caa	      0xe800000000	                          call 0x4003caf	      2084	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x4003caf	            0x85c0	                           test eax, eax	      2084	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x4003cb1	     0xf85af040000	                           jne 0x4004166	      2084	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x4003cb7	          0x803b09	                       cmp byte [rbx], 9	      2084	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x4003cba	     0xf85a6040000	                           jne 0x4004166	      2084	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x4003cc0	        0x807b012a	                cmp byte [rbx + 1], 0x2a	      2087	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20
0x4003cc4	            0x7420	                            je 0x4003ce6	      2087	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20
0x4003cc6	        0x8b4c2408	                mov ecx, dword [rsp + 8]	      2111	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x4003cca	        0x394c240c	              cmp dword [rsp + 0xc], ecx	      2111	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x4003cce	     0xf8d31040000	                           jge 0x4004105	      2111	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x4003cd4	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      2112	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x4003cd8	          0x394500	                    cmp dword [rbp], eax	      2112	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x4003cdb	     0xf8fa8000000	                            jg 0x4003d89	      2112	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x4003ce1	      0xe929040000	                           jmp 0x400410f	      2112	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x4003ce6	      0x488d542458	                   lea rdx, [rsp + 0x58]	      2091	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	CALL_20
0x4003ceb	      0xbe00000000	                              mov esi, 0	      2091	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	CALL_20
0x4003cf0	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      2091	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	CALL_20
0x4003cf5	      0xb800000000	                              mov eax, 0	      2091	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	CALL_20
0x4003cfa	      0xe800000000	                          call 0x4003cff	      2091	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	CALL_20
0x4003cff	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      2092	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3
0x4003d04	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	      2092	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3
0x4003d09	    0x483988500100	           cmp qword [rax + 0x150], rcx 	      2092	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3
0x4003d10	            0x7e67	                           jle 0x4003d79	      2092	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3
0x4003d12	      0x448b74240c	            mov r14d, dword [rsp + 0xc] 	      2092	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3
0x4003d17	      0x48895c2410	             mov qword [rsp + 0x10], rbx	      2092	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3
0x4003d1c	        0x8b5c2420	            mov ebx, dword [rsp + 0x20] 	      2092	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3
0x4003d20	          0x4889c7	                            mov rdi, rax	      2092	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3
0x4003d23	          0x4c89fe	                            mov rsi, r15	      2094	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3	CALL_21
0x4003d26	      0xe8b2ceffff	             call sym.write_buffer_marks	      2094	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3	CALL_21
0x4003d2b	        0x4183c601	                             add r14d, 1	      2095	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3	IF_21
0x4003d2f	      0x443b742408	               cmp r14d, dword [rsp + 8]	      2095	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3	IF_21
0x4003d34	     0xf8da5000000	                           jge 0x4003ddf	      2095	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3	IF_21
0x4003d3a	          0x83c301	                              add ebx, 1	      2097	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3	IF_22
0x4003d3d	          0x8b4500	                    mov eax, dword [rbp]	      2097	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3	IF_22
0x4003d40	            0x39c3	                            cmp ebx, eax	      2097	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3	IF_22
0x4003d42	     0xf8461040000	                            je 0x40041a9	      2097	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3	IF_22
0x4003d48	          0x4863c3	                         movsxd rax, ebx	      2102	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3
0x4003d4b	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      2102	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3
0x4003d4f	        0x488b3cc2	            mov rdi, qword [rdx + rax*8]	      2102	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3
0x4003d53	      0x488b442458	            mov rax, qword [rsp + 0x58] 	      2092	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3
0x4003d58	    0x483987500100	           cmp qword [rdi + 0x150], rax 	      2092	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3
0x4003d5f	            0x7fc2	                            jg 0x4003d23	      2092	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3
0x4003d61	      0x448974240c	             mov dword [rsp + 0xc], r14d	      2092	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3
0x4003d66	        0x895c2420	             mov dword [rsp + 0x20], ebx	      2092	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3
0x4003d6a	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      2092	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3
0x4003d6f	      0x48897c2430	             mov qword [rsp + 0x30], rdi	      2092	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3
0x4003d74	      0xe9c6030000	                           jmp 0x400413f	      2092	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3
0x4003d79	        0x8b4c2408	                mov ecx, dword [rsp + 8]	      2122	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_23
0x4003d7d	        0x394c240c	              cmp dword [rsp + 0xc], ecx	      2122	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_23
0x4003d81	     0xf8cb8030000	                            jl 0x400413f	      2122	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_23
0x4003d87	            0xeb5f	                           jmp 0x4003de8	      2122	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_23
0x4003d89	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      2122	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_23
0x4003d8d	      0x48895c2410	             mov qword [rsp + 0x10], rbx	      2122	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_23
0x4003d92	        0x8b5c240c	              mov ebx, dword [rsp + 0xc]	      2122	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_23
0x4003d96	      0x4c896c2420	             mov qword [rsp + 0x20], r13	      2122	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_23
0x4003d9b	      0x448b6c2408	               mov r13d, dword [rsp + 8]	      2122	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_23
0x4003da0	        0x448d7001	                     lea r14d, [rax + 1]	      2115	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x4003da4	            0x4898	                                    cdqe	      2114	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x4003da6	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      2114	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x4003daa	        0x488b3cc2	            mov rdi, qword [rdx + rax*8]	      2116	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4	CALL_22
0x4003dae	          0x4c89fe	                            mov rsi, r15	      2116	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4	CALL_22
0x4003db1	      0xe827ceffff	             call sym.write_buffer_marks	      2116	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4	CALL_22
0x4003db6	          0x83c301	                              add ebx, 1	      2117	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x4003db9	          0x4439eb	                           cmp ebx, r13d	      2111	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x4003dbc	            0x7d31	                           jge 0x4003def	      2111	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x4003dbe	          0x4489f0	                           mov eax, r14d	      2115	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x4003dc1	        0x44397500	                   cmp dword [rbp], r14d	      2112	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x4003dc5	            0x7fd9	                            jg 0x4003da0	      2112	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x4003dc7	        0x895c240c	              mov dword [rsp + 0xc], ebx	      2112	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x4003dcb	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      2112	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x4003dd0	      0x4c8b6c2420	            mov r13, qword [rsp + 0x20] 	      2112	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x4003dd5	      0x4489742420	            mov dword [rsp + 0x20], r14d	      2115	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x4003dda	      0xe930030000	                           jmp 0x400410f	      2115	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x4003ddf	      0x448974240c	             mov dword [rsp + 0xc], r14d	      2115	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x4003de4	        0x895c2420	             mov dword [rsp + 0x20], ebx	      2115	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x4003de8	      0x448b742420	           mov r14d, dword [rsp + 0x20] 	      1988	mark.c	FUNCTION_45
0x4003ded	            0xeb04	                           jmp 0x4003df3	      1988	mark.c	FUNCTION_45
0x4003def	        0x895c240c	              mov dword [rsp + 0xc], ebx	      1988	mark.c	FUNCTION_45
0x4003df3	          0x4c89e7	                            mov rdi, r12	      2124	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_23	CALL_23
0x4003df6	      0xe800000000	                          call 0x4003dfb	      2124	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_23	CALL_23
0x4003dfb	      0x4489742420	            mov dword [rsp + 0x20], r14d	      2125	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_23
0x4003e00	      0xe94a020000	                           jmp 0x400404f	      2125	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_23
0x4003e05	          0x4c89fe	                            mov rsi, r15	      2133	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_26
0x4003e08	          0x4889df	                            mov rdi, rbx	      2133	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_26
0x4003e0b	      0xe800000000	                          call 0x4003e10	      2133	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_26
0x4003e10	      0x8344240c01	                add dword [rsp + 0xc], 1	      2135	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17
0x4003e15	    0xc74424100100	               mov dword [rsp + 0x10], 1	      2136	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17
0x4003e1d	    0x41be00000000	                             mov r14d, 0	      2050	mark.c	FUNCTION_45	WHILE_1
0x4003e23	            0xeb1e	                           jmp 0x4003e43	      2050	mark.c	FUNCTION_45	WHILE_1
0x4003e25	    0xc74424100000	               mov dword [rsp + 0x10], 0	      2050	mark.c	FUNCTION_45	WHILE_1
0x4003e2d	    0x41be00000000	                             mov r14d, 0	      2050	mark.c	FUNCTION_45	WHILE_1
0x4003e33	            0xeb0e	                           jmp 0x4003e43	      2050	mark.c	FUNCTION_45	WHILE_1
0x4003e35	    0xc74424100000	               mov dword [rsp + 0x10], 0	      2050	mark.c	FUNCTION_45	WHILE_1
0x4003e3d	    0x41be00000000	                             mov r14d, 0	      2050	mark.c	FUNCTION_45	WHILE_1
0x4003e43	          0x4c89e7	                            mov rdi, r12	      2139	mark.c	FUNCTION_45	WHILE_1	CALL_27
0x4003e46	      0xe800000000	                          call 0x4003e4b	      2139	mark.c	FUNCTION_45	WHILE_1	CALL_27
0x4003e4b	    0xc744246c0000	               mov dword [rsp + 0x6c], 0	      2142	mark.c	FUNCTION_45	WHILE_1
0x4003e53	      0xe990010000	                           jmp 0x4003fe8	      2144	mark.c	FUNCTION_45	WHILE_1	WHILE_5	CALL_28
0x4003e58	          0x4585f6	                         test r14d, r14d	      2146	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25
0x4003e5b	     0xf8475010000	                            je 0x4003fd6	      2146	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25
0x4003e61	        0x807b0100	                   cmp byte [rbx + 1], 0	      2148	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26
0x4003e65	     0xf847d010000	                            je 0x4003fe8	      2148	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26
0x4003e6b	      0x488d4c2458	                   lea rcx, [rsp + 0x58]	      2152	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	CALL_29
0x4003e70	      0x488d542460	                   lea rdx, [rsp + 0x60]	      2152	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	CALL_29
0x4003e75	      0xbe00000000	                              mov esi, 0	      2152	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	CALL_29
0x4003e7a	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      2152	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	CALL_29
0x4003e7f	      0xb800000000	                              mov eax, 0	      2152	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	CALL_29
0x4003e84	      0xe800000000	                          call 0x4003e89	      2152	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	CALL_29
0x4003e89	        0x8b442458	            mov eax, dword [rsp + 0x58] 	      2153	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26
0x4003e8d	        0x89442468	             mov dword [rsp + 0x68], eax	      2153	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26
0x4003e91	         0xfb64301	               movzx eax, byte [rbx + 1]	      2154	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4003e95	            0x3c2b	                            cmp al, 0x2b	      2154	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4003e97	     0xf848e000000	                            je 0x4003f2b	      2154	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4003e9d	            0x3c2b	                            cmp al, 0x2b	      2154	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4003e9f	            0x7711	                            ja 0x4003eb2	      2154	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4003ea1	            0x3c22	                            cmp al, 0x22	      2154	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4003ea3	            0x741a	                            je 0x4003ebf	      2154	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4003ea5	            0x3c2a	                            cmp al, 0x2a	      2154	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4003ea7	     0xf84e4000000	                            je 0x4003f91	      2154	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4003ead	      0xe9f4000000	                           jmp 0x4003fa6	      2154	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4003eb2	            0x3c2e	                            cmp al, 0x2e	      2154	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4003eb4	            0x7451	                            je 0x4003f07	      2154	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4003eb6	            0x3c5e	                            cmp al, 0x5e	      2154	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4003eb8	            0x7429	                            je 0x4003ee3	      2154	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4003eba	      0xe9e7000000	                           jmp 0x4003fa6	      2154	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4003ebf	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	      2156	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4003ec4	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      2156	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4003ec9	    0x488b05000000	            mov rax, qword [0x04003ed0] 	      2156	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4003ed0	    0x4889b0280300	            mov qword [rax + 0x328], rsi	      2156	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4003ed7	    0x4889b8300300	            mov qword [rax + 0x330], rdi	      2156	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4003ede	      0xe905010000	                           jmp 0x4003fe8	      2156	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4003ee3	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	      2157	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4003ee8	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      2157	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4003eed	    0x488b05000000	            mov rax, qword [0x04003ef4] 	      2157	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4003ef4	    0x4889b0380300	            mov qword [rax + 0x338], rsi	      2157	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4003efb	    0x4889b8400300	            mov qword [rax + 0x340], rdi	      2157	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4003f02	      0xe9e1000000	                           jmp 0x4003fe8	      2157	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4003f07	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	      2158	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4003f0c	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      2158	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4003f11	    0x488b05000000	            mov rax, qword [0x04003f18] 	      2158	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4003f18	    0x4889b0480300	            mov qword [rax + 0x348], rsi	      2158	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4003f1f	    0x4889b8500300	            mov qword [rax + 0x350], rdi	      2158	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4003f26	      0xe9bd000000	                           jmp 0x4003fe8	      2158	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4003f2b	    0x4c8b25000000	            mov r12, qword [0x04003f32] 	      2163	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_27
0x4003f32	    0x418b84249809	           mov eax, dword [r12 + 0x998] 	      2163	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_27
0x4003f3a	          0x83f864	                           cmp eax, 0x64	      2163	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_27
0x4003f3d	            0x751c	                           jne 0x4003f5b	      2163	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_27
0x4003f3f	    0x498db4246803	                  lea rsi, [r12 + 0x368]	        59	string3.h	FUNCTION_67	CALL_3
0x4003f47	    0x498dbc245803	                  lea rdi, [r12 + 0x358]	        59	string3.h	FUNCTION_67	CALL_3
0x4003f4f	      0xba30060000	                          mov edx, 0x630	        59	string3.h	FUNCTION_67	CALL_3
0x4003f54	      0xe800000000	                          call 0x4003f59	        59	string3.h	FUNCTION_67	CALL_3
0x4003f59	            0xeb0b	                           jmp 0x4003f66	        59	string3.h	FUNCTION_67	CALL_3
0x4003f5b	          0x83c001	                              add eax, 1	      2169	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	ELSE_3
0x4003f5e	    0x418984249809	            mov dword [r12 + 0x998], eax	      2169	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	ELSE_3
0x4003f66	    0x418b84249809	           mov eax, dword [r12 + 0x998] 	      2171	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4003f6e	          0x83e801	                              sub eax, 1	      2171	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4003f71	            0x4898	                                    cdqe	      2171	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4003f73	        0x4883c035	                           add rax, 0x35	      2171	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4003f77	        0x48c1e004	                              shl rax, 4	      2171	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4003f7b	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	      2171	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4003f80	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      2171	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4003f85	      0x4989740408	          mov qword [r12 + rax + 8], rsi	      2171	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4003f8a	      0x49897c0410	       mov qword [r12 + rax + 0x10], rdi	      2171	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4003f8f	            0xeb57	                           jmp 0x4003fe8	      2173	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4003f91	      0x488b542460	            mov rdx, qword [rsp + 0x60] 	      2177	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4003f96	    0x488b05000000	            mov rax, qword [0x04003f9d] 	      2177	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4003f9d	    0x488990500100	            mov qword [rax + 0x150], rdx	      2177	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4003fa4	            0xeb42	                           jmp 0x4003fe8	      2177	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4003fa6	           0xfb6c0	                           movzx eax, al	      2179	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_28
0x4003fa9	          0x83e861	                           sub eax, 0x61	      2179	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_28
0x4003fac	          0x83f819	                           cmp eax, 0x19	      2179	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_28
0x4003faf	            0x7737	                            ja 0x4003fe8	      2179	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_28
0x4003fb1	            0x4898	                                    cdqe	      2180	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_28
0x4003fb3	        0x4883c015	                           add rax, 0x15	      2180	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_28
0x4003fb7	        0x48c1e004	                              shl rax, 4	      2180	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_28
0x4003fbb	    0x480305000000	             add rax, qword [0x04003fc2]	      2180	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_28
0x4003fc2	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	      2180	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_28
0x4003fc7	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      2180	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_28
0x4003fcc	        0x48897008	                mov qword [rax + 8], rsi	      2180	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_28
0x4003fd0	        0x48897810	             mov qword [rax + 0x10], rdi	      2180	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_28
0x4003fd4	            0xeb12	                           jmp 0x4003fe8	      2180	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_28
0x4003fd6	      0x837c241000	               cmp dword [rsp + 0x10], 0	      2184	mark.c	FUNCTION_45	WHILE_1	WHILE_5	ELSE_4	IF_29
0x4003fdb	            0x740b	                            je 0x4003fe8	      2184	mark.c	FUNCTION_45	WHILE_1	WHILE_5	ELSE_4	IF_29
0x4003fdd	          0x4c89fe	                            mov rsi, r15	      2185	mark.c	FUNCTION_45	WHILE_1	WHILE_5	ELSE_4	IF_29
0x4003fe0	          0x4889df	                            mov rdi, rbx	      2185	mark.c	FUNCTION_45	WHILE_1	WHILE_5	ELSE_4	IF_29
0x4003fe3	      0xe800000000	                          call 0x4003fe8	      2185	mark.c	FUNCTION_45	WHILE_1	WHILE_5	ELSE_4	IF_29
0x4003fe8	          0x4c89ef	                            mov rdi, r13	      2144	mark.c	FUNCTION_45	WHILE_1	WHILE_5	CALL_28
0x4003feb	      0xe800000000	                          call 0x4003ff0	      2144	mark.c	FUNCTION_45	WHILE_1	WHILE_5	CALL_28
0x4003ff0	            0x85c0	                           test eax, eax	      2144	mark.c	FUNCTION_45	WHILE_1	WHILE_5	CALL_28
0x4003ff2	     0xf85a3010000	                           jne 0x400419b	      2144	mark.c	FUNCTION_45	WHILE_1	WHILE_5	CALL_28
0x4003ff8	          0x803b09	                       cmp byte [rbx], 9	      2144	mark.c	FUNCTION_45	WHILE_1	WHILE_5	CALL_28
0x4003ffb	     0xf8457feffff	                            je 0x4003e58	      2144	mark.c	FUNCTION_45	WHILE_1	WHILE_5	CALL_28
0x4004001	      0xe987010000	                           jmp 0x400418d	      2144	mark.c	FUNCTION_45	WHILE_1	WHILE_5	CALL_28
0x4004006	    0x488b05000000	            mov rax, qword [0x0400400d] 	      2193	mark.c	FUNCTION_45	WHILE_1	IF_30
0x400400d	          0x4885c0	                           test rax, rax	      2193	mark.c	FUNCTION_45	WHILE_1	IF_30
0x4004010	            0x743d	                            je 0x400404f	      2193	mark.c	FUNCTION_45	WHILE_1	IF_30
0x4004012	    0x488b15000000	            mov rdx, qword [0x04004019] 	      2195	mark.c	FUNCTION_45	WHILE_1	IF_30	FUNCTION_1	IF_1
0x4004019	        0x48395008	                cmp qword [rax + 8], rdx	      2195	mark.c	FUNCTION_45	WHILE_1	IF_30	FUNCTION_1	IF_1
0x400401d	            0x750c	                           jne 0x400402b	      2195	mark.c	FUNCTION_45	WHILE_1	IF_30	FUNCTION_1	IF_1
0x400401f	    0x8b8a98090000	           mov ecx, dword [rdx + 0x998] 	      2196	mark.c	FUNCTION_45	WHILE_1	IF_30	FUNCTION_1	IF_1
0x4004025	    0x898848150000	          mov dword [rax + 0x1548], ecx 	      2196	mark.c	FUNCTION_45	WHILE_1	IF_30	FUNCTION_1	IF_1
0x400402b	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2193	mark.c	FUNCTION_45	WHILE_1	IF_30
0x400402f	          0x4885c0	                           test rax, rax	      2193	mark.c	FUNCTION_45	WHILE_1	IF_30
0x4004032	            0x75e5	                           jne 0x4004019	      2193	mark.c	FUNCTION_45	WHILE_1	IF_30
0x4004034	            0xeb19	                           jmp 0x400404f	      2193	mark.c	FUNCTION_45	WHILE_1	IF_30
0x4004036	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      2012	mark.c	FUNCTION_45	WHILE_1
0x400403a	        0x394c2408	                cmp dword [rsp + 8], ecx	      2012	mark.c	FUNCTION_45	WHILE_1
0x400403e	     0xf8f75faffff	                            jg 0x4003ab9	      2012	mark.c	FUNCTION_45	WHILE_1
0x4004044	      0x807c244b00	                cmp byte [rsp + 0x4b], 0	      2012	mark.c	FUNCTION_45	WHILE_1
0x4004049	     0xf856afaffff	                           jne 0x4003ab9	      2012	mark.c	FUNCTION_45	WHILE_1
0x400404f	          0x4d85ff	                           test r15, r15	      2203	mark.c	FUNCTION_45	IF_31
0x4004052	            0x7447	                            je 0x400409b	      2203	mark.c	FUNCTION_45	IF_31
0x4004054	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      2205	mark.c	FUNCTION_45	IF_31	WHILE_6
0x4004058	        0x8b442408	                mov eax, dword [rsp + 8]	      2205	mark.c	FUNCTION_45	IF_31	WHILE_6
0x400405c	            0x39c2	                            cmp edx, eax	      2205	mark.c	FUNCTION_45	IF_31	WHILE_6
0x400405e	            0x7d3b	                           jge 0x400409b	      2205	mark.c	FUNCTION_45	IF_31	WHILE_6
0x4004060	        0x8b4c2420	            mov ecx, dword [rsp + 0x20] 	      2205	mark.c	FUNCTION_45	IF_31	WHILE_6
0x4004064	          0x394d00	                    cmp dword [rbp], ecx	      2205	mark.c	FUNCTION_45	IF_31	WHILE_6
0x4004067	            0x7e32	                           jle 0x400409b	      2205	mark.c	FUNCTION_45	IF_31	WHILE_6
0x4004069	          0x8d5901	                      lea ebx, [rcx + 1]	      2205	mark.c	FUNCTION_45	IF_31	WHILE_6
0x400406c	          0x4189c5	                           mov r13d, eax	      2205	mark.c	FUNCTION_45	IF_31	WHILE_6
0x400406f	          0x4101cd	                           add r13d, ecx	      2205	mark.c	FUNCTION_45	IF_31	WHILE_6
0x4004072	          0x4129d5	                           sub r13d, edx	      2205	mark.c	FUNCTION_45	IF_31	WHILE_6
0x4004075	          0x4189dc	                           mov r12d, ebx	      2207	mark.c	FUNCTION_45	IF_31	WHILE_6
0x4004078	          0x8d43ff	                      lea eax, [rbx - 1]	      2207	mark.c	FUNCTION_45	IF_31	WHILE_6
0x400407b	            0x4898	                                    cdqe	      2207	mark.c	FUNCTION_45	IF_31	WHILE_6
0x400407d	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      2207	mark.c	FUNCTION_45	IF_31	WHILE_6
0x4004081	        0x488b3cc2	            mov rdi, qword [rdx + rax*8]	      2208	mark.c	FUNCTION_45	IF_31	WHILE_6	CALL_32
0x4004085	          0x4c89fe	                            mov rsi, r15	      2208	mark.c	FUNCTION_45	IF_31	WHILE_6	CALL_32
0x4004088	      0xe850cbffff	             call sym.write_buffer_marks	      2208	mark.c	FUNCTION_45	IF_31	WHILE_6	CALL_32
0x400408d	          0x4439eb	                           cmp ebx, r13d	      2205	mark.c	FUNCTION_45	IF_31	WHILE_6
0x4004090	            0x7409	                            je 0x400409b	      2205	mark.c	FUNCTION_45	IF_31	WHILE_6
0x4004092	          0x83c301	                              add ebx, 1	      2205	mark.c	FUNCTION_45	IF_31	WHILE_6
0x4004095	        0x44396500	                   cmp dword [rbp], r12d	      2205	mark.c	FUNCTION_45	IF_31	WHILE_6
0x4004099	            0x7fda	                            jg 0x4004075	      2205	mark.c	FUNCTION_45	IF_31	WHILE_6
0x400409b	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      2212	mark.c	FUNCTION_45	CALL_33
0x40040a0	      0xe800000000	                          call 0x40040a5	      2212	mark.c	FUNCTION_45	CALL_33
0x40040a5	      0xe91b010000	                           jmp 0x40041c5	      2212	mark.c	FUNCTION_45	CALL_33
0x40040aa	      0xf644244c0c	            test byte [rsp + 0x4c], 0xc 	      2003	mark.c	FUNCTION_45	IF_3
0x40040af	     0xf8594f9ffff	                           jne 0x4003a49	      2003	mark.c	FUNCTION_45	IF_3
0x40040b5	    0x48c744244000	               mov qword [rsp + 0x40], 0	      1984	mark.c	FUNCTION_45
0x40040be	            0xeb2c	                           jmp 0x40040ec	      1984	mark.c	FUNCTION_45
0x40040c0	      0xbf27000000	                           mov edi, 0x27	      2011	mark.c	FUNCTION_45	CALL_5
0x40040c5	      0xe800000000	                          call 0x40040ca	      2011	mark.c	FUNCTION_45	CALL_5
0x40040ca	        0x89442408	                mov dword [rsp + 8], eax	      2011	mark.c	FUNCTION_45	CALL_5
0x40040ce	          0x4585e4	                         test r12d, r12d	      2012	mark.c	FUNCTION_45	WHILE_1
0x40040d1	     0xf8497f9ffff	                            je 0x4003a6e	      2012	mark.c	FUNCTION_45	WHILE_1
0x40040d7	    0xc74424200000	               mov dword [rsp + 0x20], 0	      1987	mark.c	FUNCTION_45
0x40040df	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      1986	mark.c	FUNCTION_45
0x40040e7	      0xe968ffffff	                           jmp 0x4004054	      1986	mark.c	FUNCTION_45
0x40040ec	      0xbf27000000	                           mov edi, 0x27	      2011	mark.c	FUNCTION_45	CALL_5
0x40040f1	      0xe800000000	                          call 0x40040f6	      2011	mark.c	FUNCTION_45	CALL_5
0x40040f6	        0x89442408	                mov dword [rsp + 8], eax	      2011	mark.c	FUNCTION_45	CALL_5
0x40040fa	          0x4585e4	                         test r12d, r12d	      2012	mark.c	FUNCTION_45	WHILE_1
0x40040fd	     0xf8486f9ffff	                            je 0x4003a89	      2012	mark.c	FUNCTION_45	WHILE_1
0x4004103	            0xeb96	                           jmp 0x400409b	      2012	mark.c	FUNCTION_45	WHILE_1
0x4004105	      0x448b742420	           mov r14d, dword [rsp + 0x20] 	      2111	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x400410a	      0xe9e4fcffff	                           jmp 0x4003df3	      2111	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x400410f	          0x4c89f9	                            mov rcx, r15	      2130	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_24
0x4004112	      0xba03000000	                              mov edx, 3	      2130	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_24
0x4004117	      0xbe01000000	                              mov esi, 1	      2130	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_24
0x400411c	      0xbf00000000	                              mov edi, 0	      2130	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_24
0x4004121	      0xe800000000	                          call 0x4004126	      2130	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_24
0x4004126	          0x4c89e6	                            mov rsi, r12	      2131	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_25
0x4004129	          0x4c89ff	                            mov rdi, r15	      2131	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_25
0x400412c	      0xe800000000	                          call 0x4004131	      2131	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_25
0x4004131	    0x48c744243000	               mov qword [rsp + 0x30], 0	      2131	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_25
0x400413a	      0xe9c6fcffff	                           jmp 0x4003e05	      2131	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_25
0x400413f	          0x4c89f9	                            mov rcx, r15	      2130	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_24
0x4004142	      0xba03000000	                              mov edx, 3	      2130	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_24
0x4004147	      0xbe01000000	                              mov esi, 1	      2130	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_24
0x400414c	      0xbf00000000	                              mov edi, 0	      2130	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_24
0x4004151	      0xe800000000	                          call 0x4004156	      2130	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_24
0x4004156	          0x4c89e6	                            mov rsi, r12	      2131	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_25
0x4004159	          0x4c89ff	                            mov rdi, r15	      2131	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_25
0x400415c	      0xe800000000	                          call 0x4004161	      2131	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_25
0x4004161	      0xe99ffcffff	                           jmp 0x4003e05	      2131	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_25
0x4004166	          0x4c89f9	                            mov rcx, r15	      2130	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_24
0x4004169	      0xba03000000	                              mov edx, 3	      2130	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_24
0x400416e	      0xbe01000000	                              mov esi, 1	      2130	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_24
0x4004173	      0xbf00000000	                              mov edi, 0	      2130	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_24
0x4004178	      0xe800000000	                          call 0x400417d	      2130	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_24
0x400417d	          0x4c89e6	                            mov rsi, r12	      2131	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_25
0x4004180	          0x4c89ff	                            mov rdi, r15	      2131	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_25
0x4004183	      0xe800000000	                          call 0x4004188	      2131	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_25
0x4004188	      0xe983fcffff	                           jmp 0x4003e10	      2131	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_25
0x400418d	          0x4585f6	                         test r14d, r14d	      2188	mark.c	FUNCTION_45	WHILE_1	IF_30
0x4004190	     0xf84a0feffff	                            je 0x4004036	      2188	mark.c	FUNCTION_45	WHILE_1	IF_30
0x4004196	      0xe96bfeffff	                           jmp 0x4004006	      2188	mark.c	FUNCTION_45	WHILE_1	IF_30
0x400419b	          0x4585f6	                         test r14d, r14d	      2188	mark.c	FUNCTION_45	WHILE_1	IF_30
0x400419e	     0xf8562feffff	                           jne 0x4004006	      2188	mark.c	FUNCTION_45	WHILE_1	IF_30
0x40041a4	      0xe9a6feffff	                           jmp 0x400404f	      2188	mark.c	FUNCTION_45	WHILE_1	IF_30
0x40041a9	      0x448974240c	             mov dword [rsp + 0xc], r14d	      2188	mark.c	FUNCTION_45	WHILE_1	IF_30
0x40041ae	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      2188	mark.c	FUNCTION_45	WHILE_1	IF_30
0x40041b3	        0x89442420	             mov dword [rsp + 0x20], eax	      2097	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3	IF_22
0x40041b7	    0x48c744243000	               mov qword [rsp + 0x30], 0	      2099	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3	IF_22
0x40041c0	      0xe97affffff	                           jmp 0x400413f	      2099	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3	IF_22
0x40041c5	      0x488b442478	            mov rax, qword [rsp + 0x78] 	      2213	mark.c	FUNCTION_45
0x40041ca	    0x644833042528	                xor rax, qword fs:[0x28]	      2213	mark.c	FUNCTION_45
0x40041d3	            0x7405	                            je 0x40041da	      2213	mark.c	FUNCTION_45
0x40041d5	      0xe800000000	                          call 0x40041da	      2213	mark.c	FUNCTION_45
0x40041da	    0x4881c4880000	                           add rsp, 0x88	      2213	mark.c	FUNCTION_45
0x40041e1	              0x5b	                                 pop rbx	      2213	mark.c	FUNCTION_45
0x40041e2	              0x5d	                                 pop rbp	      2213	mark.c	FUNCTION_45
0x40041e3	            0x415c	                                 pop r12	      2213	mark.c	FUNCTION_45
0x40041e5	            0x415d	                                 pop r13	      2213	mark.c	FUNCTION_45
0x40041e7	            0x415e	                                 pop r14	      2213	mark.c	FUNCTION_45
0x40041e9	            0x415f	                                 pop r15	      2213	mark.c	FUNCTION_45
0x40041eb	              0xc3	                                     ret	      2213	mark.c	FUNCTION_45
setpcmark	DO,0:FOR,2:WHILE,1:ELSE,0:functions,0:IF,3:CALL,2:SWITCH,0	74
0x4000d4d	    0x833d00000000	               cmp dword [0x04000d54], 0	       151	mark.c	FUNCTION_3	IF_1
0x4000d54	     0xf8567010000	                           jne 0x4000ec1	       151	mark.c	FUNCTION_3	IF_1
0x4000d5a	    0x833d00000000	               cmp dword [0x04000d61], 0	       151	mark.c	FUNCTION_3	IF_1
0x4000d61	     0xf855a010000	                           jne 0x4000ec1	       151	mark.c	FUNCTION_3	IF_1
0x4000d67	    0x833d00000000	               cmp dword [0x04000d6e], 0	       151	mark.c	FUNCTION_3	IF_1
0x4000d6e	     0xf854d010000	                           jne 0x4000ec1	       151	mark.c	FUNCTION_3	IF_1
0x4000d74	            0x4154	                                push r12	       141	mark.c	FUNCTION_3
0x4000d76	              0x55	                                push rbp	       141	mark.c	FUNCTION_3
0x4000d77	              0x53	                                push rbx	       141	mark.c	FUNCTION_3
0x4000d78	    0x488b05000000	            mov rax, qword [0x04000d7f] 	       154	mark.c	FUNCTION_3
0x4000d7f	    0x488b88800500	           mov rcx, qword [rax + 0x580] 	       154	mark.c	FUNCTION_3
0x4000d86	    0x488b98880500	           mov rbx, qword [rax + 0x588] 	       154	mark.c	FUNCTION_3
0x4000d8d	    0x488988900500	            mov qword [rax + 0x590], rcx	       154	mark.c	FUNCTION_3
0x4000d94	    0x488998980500	            mov qword [rax + 0x598], rbx	       154	mark.c	FUNCTION_3
0x4000d9b	        0x488b4838	            mov rcx, qword [rax + 0x38] 	       155	mark.c	FUNCTION_3
0x4000d9f	        0x488b5840	            mov rbx, qword [rax + 0x40] 	       155	mark.c	FUNCTION_3
0x4000da3	    0x488988800500	            mov qword [rax + 0x580], rcx	       155	mark.c	FUNCTION_3
0x4000daa	    0x488998880500	            mov qword [rax + 0x588], rbx	       155	mark.c	FUNCTION_3
0x4000db1	    0x8b9840150000	          mov ebx, dword [rax + 0x1540] 	       177	mark.c	FUNCTION_3	IF_3
0x4000db7	          0x8d5301	                      lea edx, [rbx + 1]	       177	mark.c	FUNCTION_3	IF_3
0x4000dba	          0x83fa64	                           cmp edx, 0x64	       177	mark.c	FUNCTION_3	IF_3
0x4000dbd	            0x7f08	                            jg 0x4000dc7	       177	mark.c	FUNCTION_3	IF_3
0x4000dbf	    0x899040150000	          mov dword [rax + 0x1540], edx 	       177	mark.c	FUNCTION_3	IF_3
0x4000dc5	            0xeb7f	                           jmp 0x4000e46	       177	mark.c	FUNCTION_3	IF_3
0x4000dc7	    0xc78040150000	         mov dword [rax + 0x1540], 0x64 	       179	mark.c	FUNCTION_3	IF_3
0x4000dd1	    0x488bb8b80500	           mov rdi, qword [rax + 0x5b8] 	       180	mark.c	FUNCTION_3	IF_3	CALL_1
0x4000dd8	      0xe800000000	                          call 0x4000ddd	       180	mark.c	FUNCTION_3	IF_3	CALL_1
0x4000ddd	      0xb801000000	                              mov eax, 1	       181	mark.c	FUNCTION_3	IF_3	FOR_2
0x4000de2	    0x488b0d000000	            mov rcx, qword [0x04000de9] 	       182	mark.c	FUNCTION_3	IF_3	FOR_2
0x4000de9	          0x8d50ff	                      lea edx, [rax - 1]	       182	mark.c	FUNCTION_3	IF_3	FOR_2
0x4000dec	          0x4863d2	                         movsxd rdx, edx	       182	mark.c	FUNCTION_3	IF_3	FOR_2
0x4000def	        0x488d1492	                  lea rdx, [rdx + rdx*4]	       182	mark.c	FUNCTION_3	IF_3	FOR_2
0x4000df3	        0x488d34d1	                  lea rsi, [rcx + rdx*8]	       182	mark.c	FUNCTION_3	IF_3	FOR_2
0x4000df7	    0x488d96a00500	                  lea rdx, [rsi + 0x5a0]	       182	mark.c	FUNCTION_3	IF_3	FOR_2
0x4000dfe	          0x4863f8	                         movsxd rdi, eax	       182	mark.c	FUNCTION_3	IF_3	FOR_2
0x4000e01	        0x488d3cbf	                  lea rdi, [rdi + rdi*4]	       182	mark.c	FUNCTION_3	IF_3	FOR_2
0x4000e05	        0x488d3cf9	                  lea rdi, [rcx + rdi*8]	       182	mark.c	FUNCTION_3	IF_3	FOR_2
0x4000e09	    0x488d8fa00500	                  lea rcx, [rdi + 0x5a0]	       182	mark.c	FUNCTION_3	IF_3	FOR_2
0x4000e10	    0x488bbfa00500	           mov rdi, qword [rdi + 0x5a0] 	       182	mark.c	FUNCTION_3	IF_3	FOR_2
0x4000e17	    0x4889bea00500	            mov qword [rsi + 0x5a0], rdi	       182	mark.c	FUNCTION_3	IF_3	FOR_2
0x4000e1e	        0x488b7108	                mov rsi, qword [rcx + 8]	       182	mark.c	FUNCTION_3	IF_3	FOR_2
0x4000e22	        0x48897208	                mov qword [rdx + 8], rsi	       182	mark.c	FUNCTION_3	IF_3	FOR_2
0x4000e26	        0x488b7110	            mov rsi, qword [rcx + 0x10] 	       182	mark.c	FUNCTION_3	IF_3	FOR_2
0x4000e2a	        0x48897210	             mov qword [rdx + 0x10], rsi	       182	mark.c	FUNCTION_3	IF_3	FOR_2
0x4000e2e	        0x488b7118	            mov rsi, qword [rcx + 0x18] 	       182	mark.c	FUNCTION_3	IF_3	FOR_2
0x4000e32	        0x48897218	             mov qword [rdx + 0x18], rsi	       182	mark.c	FUNCTION_3	IF_3	FOR_2
0x4000e36	        0x488b4920	            mov rcx, qword [rcx + 0x20] 	       182	mark.c	FUNCTION_3	IF_3	FOR_2
0x4000e3a	        0x48894a20	             mov qword [rdx + 0x20], rcx	       182	mark.c	FUNCTION_3	IF_3	FOR_2
0x4000e3e	          0x83c001	                              add eax, 1	       181	mark.c	FUNCTION_3	IF_3	FOR_2
0x4000e41	          0x83f864	                           cmp eax, 0x64	       181	mark.c	FUNCTION_3	IF_3	FOR_2
0x4000e44	            0x759c	                           jne 0x4000de2	       181	mark.c	FUNCTION_3	IF_3	FOR_2
0x4000e46	    0x488b2d000000	            mov rbp, qword [0x04000e4d] 	       184	mark.c	FUNCTION_3
0x4000e4d	    0x8b9d40150000	          mov ebx, dword [rbp + 0x1540] 	       184	mark.c	FUNCTION_3
0x4000e53	    0x899d44150000	          mov dword [rbp + 0x1544], ebx 	       184	mark.c	FUNCTION_3
0x4000e59	          0x83eb01	                              sub ebx, 1	       185	mark.c	FUNCTION_3
0x4000e5c	          0x4863db	                         movsxd rbx, ebx	       187	mark.c	FUNCTION_3
0x4000e5f	    0x4c8d249d0000	                        lea r12, [rbx*4]	       187	mark.c	FUNCTION_3
0x4000e67	        0x498d041c	                    lea rax, [r12 + rbx]	       187	mark.c	FUNCTION_3
0x4000e6b	    0x488bb5800500	           mov rsi, qword [rbp + 0x580] 	       187	mark.c	FUNCTION_3
0x4000e72	    0x488bbd880500	           mov rdi, qword [rbp + 0x588] 	       187	mark.c	FUNCTION_3
0x4000e79	    0x4889b4c5a005	   mov qword [rbp + rax*8 + 0x5a0], rsi 	       187	mark.c	FUNCTION_3
0x4000e81	    0x4889bcc5a805	   mov qword [rbp + rax*8 + 0x5a8], rdi 	       187	mark.c	FUNCTION_3
0x4000e89	    0x488b05000000	            mov rax, qword [0x04000e90] 	       188	mark.c	FUNCTION_3
0x4000e90	    0x8b90b8000000	            mov edx, dword [rax + 0xb8] 	       188	mark.c	FUNCTION_3
0x4000e96	        0x498d041c	                    lea rax, [r12 + rbx]	       188	mark.c	FUNCTION_3
0x4000e9a	    0x8994c5b00500	   mov dword [rbp + rax*8 + 0x5b0], edx 	       188	mark.c	FUNCTION_3
0x4000ea1	    0x48c784c5b805	     mov qword [rbp + rax*8 + 0x5b8], 0 	       189	mark.c	FUNCTION_3
0x4000ead	      0xe800000000	                          call 0x4000eb2	       191	mark.c	FUNCTION_3	CALL_2
0x4000eb2	          0x4c01e3	                            add rbx, r12	       191	mark.c	FUNCTION_3	CALL_2
0x4000eb5	    0x488984ddc005	   mov qword [rbp + rbx*8 + 0x5c0], rax 	       191	mark.c	FUNCTION_3	CALL_2
0x4000ebd	              0x5b	                                 pop rbx	       194	mark.c	FUNCTION_3
0x4000ebe	              0x5d	                                 pop rbp	       194	mark.c	FUNCTION_3
0x4000ebf	            0x415c	                                 pop r12	       194	mark.c	FUNCTION_3
0x4000ec1	            0xf3c3	                                     ret	       194	mark.c	FUNCTION_3
fname2fnum	DO,0:FOR,0:WHILE,0:ELSE,1:functions,0:IF,2:CALL,7:SWITCH,0	46
0x4001300	        0x488b7718	            mov rsi, qword [rdi + 0x18] 	       523	mark.c	FUNCTION_11	IF_1
0x4001304	          0x4885f6	                           test rsi, rsi	       523	mark.c	FUNCTION_11	IF_1
0x4001307	     0xf84b5000000	                            je 0x40013c2	       523	mark.c	FUNCTION_11	IF_1
0x400130d	              0x53	                                push rbx	       520	mark.c	FUNCTION_11
0x400130e	          0x4889fb	                            mov rbx, rdi	       520	mark.c	FUNCTION_11
0x4001311	          0x803e7e	                    cmp byte [rsi], 0x7e	       529	mark.c	FUNCTION_11	IF_1	IF_2
0x4001314	            0x755d	                           jne 0x4001373	       529	mark.c	FUNCTION_11	IF_1	IF_2
0x4001316	        0x807e012f	                cmp byte [rsi + 1], 0x2f	       529	mark.c	FUNCTION_11	IF_1	IF_2
0x400131a	            0x7557	                           jne 0x4001373	       529	mark.c	FUNCTION_11	IF_1	IF_2
0x400131c	      0xba00100000	                         mov edx, 0x1000	       537	mark.c	FUNCTION_11	IF_1	IF_2	CALL_1
0x4001321	    0x488b35000000	            mov rsi, qword [0x04001328] 	       537	mark.c	FUNCTION_11	IF_1	IF_2	CALL_1
0x4001328	      0xbf00000000	                              mov edi, 0	       537	mark.c	FUNCTION_11	IF_1	IF_2	CALL_1
0x400132d	      0xe800000000	                          call 0x4001332	       537	mark.c	FUNCTION_11	IF_1	IF_2	CALL_1
0x4001332	    0x4c8b05000000	              mov r8, qword [0x04001339]	       538	mark.c	FUNCTION_11	IF_1	IF_2	CALL_2
0x4001339	      0xb800000000	                              mov eax, 0	       538	mark.c	FUNCTION_11	IF_1	IF_2	CALL_2
0x400133e	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       538	mark.c	FUNCTION_11	IF_1	IF_2	CALL_2
0x4001345	          0x4c89c7	                             mov rdi, r8	       538	mark.c	FUNCTION_11	IF_1	IF_2	CALL_2
0x4001348	            0xf2ae	              repne scasb al, byte [rdi]	       538	mark.c	FUNCTION_11	IF_1	IF_2	CALL_2
0x400134a	          0x4889c8	                            mov rax, rcx	       538	mark.c	FUNCTION_11	IF_1	IF_2	CALL_2
0x400134d	          0x48f7d0	                                 not rax	       538	mark.c	FUNCTION_11	IF_1	IF_2	CALL_2
0x4001350	        0x4883e801	                              sub rax, 1	       538	mark.c	FUNCTION_11	IF_1	IF_2	CALL_2
0x4001354	      0xbaff0f0000	                          mov edx, 0xfff	       539	mark.c	FUNCTION_11	IF_1	IF_2	CALL_3
0x4001359	            0x29c2	                            sub edx, eax	       539	mark.c	FUNCTION_11	IF_1	IF_2	CALL_3
0x400135b	          0x4863d2	                         movsxd rdx, edx	       539	mark.c	FUNCTION_11	IF_1	IF_2	CALL_3
0x400135e	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	       539	mark.c	FUNCTION_11	IF_1	IF_2	CALL_3
0x4001362	        0x4883c602	                              add rsi, 2	       539	mark.c	FUNCTION_11	IF_1	IF_2	CALL_3
0x4001366	            0x4898	                                    cdqe	       539	mark.c	FUNCTION_11	IF_1	IF_2	CALL_3
0x4001368	        0x498d3c00	                     lea rdi, [r8 + rax]	       539	mark.c	FUNCTION_11	IF_1	IF_2	CALL_3
0x400136c	      0xe800000000	                          call 0x4001371	       539	mark.c	FUNCTION_11	IF_1	IF_2	CALL_3
0x4001371	            0xeb11	                           jmp 0x4001384	       534	mark.c	FUNCTION_11	IF_1	IF_2
0x4001373	      0xbaff0f0000	                          mov edx, 0xfff	       542	mark.c	FUNCTION_11	IF_1	CALL_4
0x4001378	    0x488b3d000000	            mov rdi, qword [0x0400137f] 	       542	mark.c	FUNCTION_11	IF_1	CALL_4
0x400137f	      0xe800000000	                          call 0x4001384	       542	mark.c	FUNCTION_11	IF_1	CALL_4
0x4001384	      0xbe01040000	                          mov esi, 0x401	       545	mark.c	FUNCTION_11	IF_1	CALL_5
0x4001389	    0x488b3d000000	            mov rdi, qword [0x04001390] 	       545	mark.c	FUNCTION_11	IF_1	CALL_5
0x4001390	      0xe800000000	                          call 0x4001395	       545	mark.c	FUNCTION_11	IF_1	CALL_5
0x4001395	    0x488b35000000	            mov rsi, qword [0x0400139c] 	       546	mark.c	FUNCTION_11	IF_1	CALL_6
0x400139c	    0x488b3d000000	            mov rdi, qword [0x040013a3] 	       546	mark.c	FUNCTION_11	IF_1	CALL_6
0x40013a3	      0xe800000000	                          call 0x40013a8	       546	mark.c	FUNCTION_11	IF_1	CALL_6
0x40013a8	      0xb900000000	                              mov ecx, 0	       549	mark.c	FUNCTION_11	IF_1	CALL_7
0x40013ad	      0xba01000000	                              mov edx, 1	       549	mark.c	FUNCTION_11	IF_1	CALL_7
0x40013b2	          0x4889c6	                            mov rsi, rax	       549	mark.c	FUNCTION_11	IF_1	CALL_7
0x40013b5	    0x488b3d000000	            mov rdi, qword [0x040013bc] 	       549	mark.c	FUNCTION_11	IF_1	CALL_7
0x40013bc	      0xe800000000	                          call 0x40013c1	       549	mark.c	FUNCTION_11	IF_1	CALL_7
0x40013c1	              0x5b	                                 pop rbx	       551	mark.c	FUNCTION_11
0x40013c2	            0xf3c3	                                     ret	       551	mark.c	FUNCTION_11
skip_for_viminfo	DO,0:FOR,0:WHILE,0:ELSE,0:functions,0:IF,0:CALL,2:SWITCH,0	14
0x400339e	              0x53	                                push rbx	      1658	mark.c	FUNCTION_37
0x400339f	          0x4889fb	                            mov rbx, rdi	      1658	mark.c	FUNCTION_37
0x40033a2	      0xe800000000	                          call 0x40033a7	      1661	mark.c	FUNCTION_37	CALL_1
0x40033a7	      0xba01000000	                              mov edx, 1	      1661	mark.c	FUNCTION_37	CALL_1
0x40033ac	            0x85c0	                           test eax, eax	      1661	mark.c	FUNCTION_37	CALL_1
0x40033ae	            0x7514	                           jne 0x40033c4	      1661	mark.c	FUNCTION_37	CALL_1
0x40033b0	    0x488bbb880000	            mov rdi, qword [rbx + 0x88] 	      1663	mark.c	FUNCTION_37	CALL_2
0x40033b7	      0xe800000000	                          call 0x40033bc	      1663	mark.c	FUNCTION_37	CALL_2
0x40033bc	            0x85c0	                           test eax, eax	      1661	mark.c	FUNCTION_37	CALL_1
0x40033be	           0xf95c2	                                setne dl	      1661	mark.c	FUNCTION_37	CALL_1
0x40033c1	           0xfb6d2	                           movzx edx, dl	      1661	mark.c	FUNCTION_37	CALL_1
0x40033c4	            0x89d0	                            mov eax, edx	      1664	mark.c	FUNCTION_37
0x40033c6	              0x5b	                                 pop rbx	      1664	mark.c	FUNCTION_37
0x40033c7	              0xc3	                                     ret	      1664	mark.c	FUNCTION_37
set_last_cursor	DO,0:FOR,0:WHILE,0:ELSE,0:functions,0:IF,1:CALL,0:SWITCH,0	8
0x4002ac6	        0x488b4708	                mov rax, qword [rdi + 8]	      1382	mark.c	FUNCTION_31	IF_1
0x4002aca	          0x4885c0	                           test rax, rax	      1382	mark.c	FUNCTION_31	IF_1
0x4002acd	            0x7416	                            je 0x4002ae5	      1382	mark.c	FUNCTION_31	IF_1
0x4002acf	        0x488b7738	            mov rsi, qword [rdi + 0x38] 	      1383	mark.c	FUNCTION_31	IF_1
0x4002ad3	        0x488b7f40	            mov rdi, qword [rdi + 0x40] 	      1383	mark.c	FUNCTION_31	IF_1
0x4002ad7	    0x4889b0280300	            mov qword [rax + 0x328], rsi	      1383	mark.c	FUNCTION_31	IF_1
0x4002ade	    0x4889b8300300	            mov qword [rax + 0x330], rdi	      1383	mark.c	FUNCTION_31	IF_1
0x4002ae5	            0xf3c3	                                     ret	      1383	mark.c	FUNCTION_31	IF_1
copy_jumplist	DO,0:FOR,1:WHILE,0:ELSE,0:functions,0:IF,1:CALL,1:SWITCH,0	43
0x40029bf	            0x4156	                                push r14	      1353	mark.c	FUNCTION_29
0x40029c1	            0x4155	                                push r13	      1353	mark.c	FUNCTION_29
0x40029c3	            0x4154	                                push r12	      1353	mark.c	FUNCTION_29
0x40029c5	              0x55	                                push rbp	      1353	mark.c	FUNCTION_29
0x40029c6	              0x53	                                push rbx	      1353	mark.c	FUNCTION_29
0x40029c7	          0x4989fd	                            mov r13, rdi	      1353	mark.c	FUNCTION_29
0x40029ca	          0x4989f6	                            mov r14, rsi	      1353	mark.c	FUNCTION_29
0x40029cd	    0x8b8740150000	          mov eax, dword [rdi + 0x1540] 	      1356	mark.c	FUNCTION_29	FOR_1
0x40029d3	            0x85c0	                           test eax, eax	      1356	mark.c	FUNCTION_29	FOR_1
0x40029d5	            0x7e65	                           jle 0x4002a3c	      1356	mark.c	FUNCTION_29	FOR_1
0x40029d7	    0x488d9fa00500	                  lea rbx, [rdi + 0x5a0]	      1356	mark.c	FUNCTION_29	FOR_1
0x40029de	    0x488daea00500	                  lea rbp, [rsi + 0x5a0]	      1356	mark.c	FUNCTION_29	FOR_1
0x40029e5	    0x41bc00000000	                             mov r12d, 0	      1356	mark.c	FUNCTION_29	FOR_1
0x40029eb	          0x488b03	                    mov rax, qword [rbx]	      1358	mark.c	FUNCTION_29	FOR_1
0x40029ee	        0x48894500	                    mov qword [rbp], rax	      1358	mark.c	FUNCTION_29	FOR_1
0x40029f2	        0x488b4308	                mov rax, qword [rbx + 8]	      1358	mark.c	FUNCTION_29	FOR_1
0x40029f6	        0x48894508	                mov qword [rbp + 8], rax	      1358	mark.c	FUNCTION_29	FOR_1
0x40029fa	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1358	mark.c	FUNCTION_29	FOR_1
0x40029fe	        0x48894510	            mov qword [rbp + 0x10], rax 	      1358	mark.c	FUNCTION_29	FOR_1
0x4002a02	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1358	mark.c	FUNCTION_29	FOR_1
0x4002a06	        0x48894518	            mov qword [rbp + 0x18], rax 	      1358	mark.c	FUNCTION_29	FOR_1
0x4002a0a	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      1358	mark.c	FUNCTION_29	FOR_1
0x4002a0e	        0x48894520	            mov qword [rbp + 0x20], rax 	      1358	mark.c	FUNCTION_29	FOR_1
0x4002a12	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      1359	mark.c	FUNCTION_29	FOR_1	IF_1
0x4002a16	          0x4885ff	                           test rdi, rdi	      1359	mark.c	FUNCTION_29	FOR_1	IF_1
0x4002a19	            0x7409	                            je 0x4002a24	      1359	mark.c	FUNCTION_29	FOR_1	IF_1
0x4002a1b	      0xe800000000	                          call 0x4002a20	      1360	mark.c	FUNCTION_29	FOR_1	CALL_1
0x4002a20	        0x48894518	            mov qword [rbp + 0x18], rax 	      1360	mark.c	FUNCTION_29	FOR_1	CALL_1
0x4002a24	        0x4183c401	                             add r12d, 1	      1356	mark.c	FUNCTION_29	FOR_1
0x4002a28	    0x418b85401500	          mov eax, dword [r13 + 0x1540] 	      1356	mark.c	FUNCTION_29	FOR_1
0x4002a2f	        0x4883c328	                           add rbx, 0x28	      1356	mark.c	FUNCTION_29	FOR_1
0x4002a33	        0x4883c528	                           add rbp, 0x28	      1356	mark.c	FUNCTION_29	FOR_1
0x4002a37	          0x4439e0	                           cmp eax, r12d	      1356	mark.c	FUNCTION_29	FOR_1
0x4002a3a	            0x7faf	                            jg 0x40029eb	      1356	mark.c	FUNCTION_29	FOR_1
0x4002a3c	    0x418986401500	          mov dword [r14 + 0x1540], eax 	      1362	mark.c	FUNCTION_29
0x4002a43	    0x418b85441500	          mov eax, dword [r13 + 0x1544] 	      1363	mark.c	FUNCTION_29
0x4002a4a	    0x418986441500	          mov dword [r14 + 0x1544], eax 	      1363	mark.c	FUNCTION_29
0x4002a51	              0x5b	                                 pop rbx	      1364	mark.c	FUNCTION_29
0x4002a52	              0x5d	                                 pop rbp	      1364	mark.c	FUNCTION_29
0x4002a53	            0x415c	                                 pop r12	      1364	mark.c	FUNCTION_29
0x4002a55	            0x415d	                                 pop r13	      1364	mark.c	FUNCTION_29
0x4002a57	            0x415e	                                 pop r14	      1364	mark.c	FUNCTION_29
0x4002a59	              0xc3	                                     ret	      1364	mark.c	FUNCTION_29
mark_col_adjust	DO,0:FOR,3:WHILE,0:ELSE,0:functions,1:IF,3:CALL,11:SWITCH,0	314
0x40020ce	          0x4889c8	                            mov rax, rcx	      1233	mark.c	FUNCTION_27	IF_1
0x40020d1	          0x4809d0	                             or rax, rdx	      1233	mark.c	FUNCTION_27	IF_1
0x40020d4	     0xf8462040000	                            je 0x400253c	      1233	mark.c	FUNCTION_27	IF_1
0x40020da	    0x833d00000000	               cmp dword [0x040020e1], 0	      1233	mark.c	FUNCTION_27	IF_1
0x40020e1	     0xf8555040000	                           jne 0x400253c	      1233	mark.c	FUNCTION_27	IF_1
0x40020e7	            0x4155	                                push r13	      1227	mark.c	FUNCTION_27
0x40020e9	            0x4154	                                push r12	      1227	mark.c	FUNCTION_27
0x40020eb	              0x55	                                push rbp	      1227	mark.c	FUNCTION_27
0x40020ec	              0x53	                                push rbx	      1227	mark.c	FUNCTION_27
0x40020ed	    0x4c8b1d000000	            mov r11, qword [0x040020f4] 	      1229	mark.c	FUNCTION_27
0x40020f4	    0x458b83b80000	            mov r8d, dword [r11 + 0xb8] 	      1229	mark.c	FUNCTION_27
0x40020fb	      0xb800000000	                              mov eax, 0	      1229	mark.c	FUNCTION_27
0x4002100	    0x4d8d8b600100	                   lea r9, [r11 + 0x160]	      1229	mark.c	FUNCTION_27
0x4002107	    0x41ba00000000	                             mov r10d, 0	      1229	mark.c	FUNCTION_27
0x400210d	        0x4c8d243a	                    lea r12, [rdx + rdi]	      1239	mark.c	FUNCTION_27	FOR_1	CALL_1
0x4002111	          0x4189cd	                           mov r13d, ecx	      1239	mark.c	FUNCTION_27	FOR_1	CALL_1
0x4002114	          0x41f7dd	                                neg r13d	      1239	mark.c	FUNCTION_27	FOR_1	CALL_1
0x4002117	          0x4c89cb	                             mov rbx, r9	      1239	mark.c	FUNCTION_27	FOR_1	CALL_1
0x400211a	        0x493979f8	                 cmp qword [r9 - 8], rdi	      1239	mark.c	FUNCTION_27	FOR_1	CALL_1
0x400211e	            0x7522	                           jne 0x4002142	      1239	mark.c	FUNCTION_27	FOR_1	CALL_1
0x4002120	          0x418b29	                     mov ebp, dword [r9]	      1239	mark.c	FUNCTION_27	FOR_1	CALL_1
0x4002123	            0x39f5	                            cmp ebp, esi	      1239	mark.c	FUNCTION_27	FOR_1	CALL_1
0x4002125	            0x7c1b	                            jl 0x4002142	      1239	mark.c	FUNCTION_27	FOR_1	CALL_1
0x4002127	        0x4d8961f8	                 mov qword [r9 - 8], r12	      1239	mark.c	FUNCTION_27	FOR_1	CALL_1
0x400212b	          0x4885c9	                           test rcx, rcx	      1239	mark.c	FUNCTION_27	FOR_1	CALL_1
0x400212e	            0x790e	                           jns 0x400213e	      1239	mark.c	FUNCTION_27	FOR_1	CALL_1
0x4002130	          0x4439ed	                           cmp ebp, r13d	      1239	mark.c	FUNCTION_27	FOR_1	CALL_1
0x4002133	            0x7f09	                            jg 0x400213e	      1239	mark.c	FUNCTION_27	FOR_1	CALL_1
0x4002135	    0x41c701000000	                       mov dword [r9], 0	      1239	mark.c	FUNCTION_27	FOR_1	CALL_1
0x400213c	            0xeb04	                           jmp 0x4002142	      1239	mark.c	FUNCTION_27	FOR_1	CALL_1
0x400213e	             0x1cd	                            add ebp, ecx	      1239	mark.c	FUNCTION_27	FOR_1	CALL_1
0x4002140	            0x892b	                    mov dword [rbx], ebp	      1239	mark.c	FUNCTION_27	FOR_1	CALL_1
0x4002142	          0x4889c3	                            mov rbx, rax	      1239	mark.c	FUNCTION_27	FOR_1	CALL_1
0x4002145	        0x443b4008	                cmp r8d, dword [rax + 8]	      1240	mark.c	FUNCTION_27	FOR_1	IF_2
0x4002149	            0x7526	                           jne 0x4002171	      1240	mark.c	FUNCTION_27	FOR_1	IF_2
0x400214b	        0x483b78f8	                cmp rdi, qword [rax - 8]	      1241	mark.c	FUNCTION_27	FOR_1	CALL_2
0x400214f	            0x7520	                           jne 0x4002171	      1241	mark.c	FUNCTION_27	FOR_1	CALL_2
0x4002151	            0x8b28	                    mov ebp, dword [rax]	      1241	mark.c	FUNCTION_27	FOR_1	CALL_2
0x4002153	            0x39ee	                            cmp esi, ebp	      1241	mark.c	FUNCTION_27	FOR_1	CALL_2
0x4002155	            0x7f1a	                            jg 0x4002171	      1241	mark.c	FUNCTION_27	FOR_1	CALL_2
0x4002157	        0x4c8960f8	                mov qword [rax - 8], r12	      1241	mark.c	FUNCTION_27	FOR_1	CALL_2
0x400215b	          0x4885c9	                           test rcx, rcx	      1241	mark.c	FUNCTION_27	FOR_1	CALL_2
0x400215e	            0x790d	                           jns 0x400216d	      1241	mark.c	FUNCTION_27	FOR_1	CALL_2
0x4002160	          0x4439ed	                           cmp ebp, r13d	      1241	mark.c	FUNCTION_27	FOR_1	CALL_2
0x4002163	            0x7f08	                            jg 0x400216d	      1241	mark.c	FUNCTION_27	FOR_1	CALL_2
0x4002165	    0xc70000000000	                      mov dword [rax], 0	      1241	mark.c	FUNCTION_27	FOR_1	CALL_2
0x400216b	            0xeb04	                           jmp 0x4002171	      1241	mark.c	FUNCTION_27	FOR_1	CALL_2
0x400216d	             0x1cd	                            add ebp, ecx	      1241	mark.c	FUNCTION_27	FOR_1	CALL_2
0x400216f	            0x892b	                    mov dword [rbx], ebp	      1241	mark.c	FUNCTION_27	FOR_1	CALL_2
0x4002171	        0x4883c028	                           add rax, 0x28	      1241	mark.c	FUNCTION_27	FOR_1	CALL_2
0x4002175	        0x4983c110	                            add r9, 0x10	      1241	mark.c	FUNCTION_27	FOR_1	CALL_2
0x4002179	          0x4c39d0	                            cmp rax, r10	      1237	mark.c	FUNCTION_27	FOR_1
0x400217c	            0x7599	                           jne 0x4002117	      1237	mark.c	FUNCTION_27	FOR_1
0x400217e	    0x41b900000000	                              mov r9d, 0	      1237	mark.c	FUNCTION_27	FOR_1
0x4002184	        0x4c8d243a	                    lea r12, [rdx + rdi]	      1246	mark.c	FUNCTION_27	FOR_2	CALL_3
0x4002188	            0x89cd	                            mov ebp, ecx	      1246	mark.c	FUNCTION_27	FOR_2	CALL_3
0x400218a	            0xf7dd	                                 neg ebp	      1246	mark.c	FUNCTION_27	FOR_2	CALL_3
0x400218c	          0x4c89d0	                            mov rax, r10	      1246	mark.c	FUNCTION_27	FOR_2	CALL_3
0x400218f	        0x453b4208	                cmp r8d, dword [r10 + 8]	      1245	mark.c	FUNCTION_27	FOR_2	IF_3
0x4002193	            0x7527	                           jne 0x40021bc	      1245	mark.c	FUNCTION_27	FOR_2	IF_3
0x4002195	        0x493b7af8	                cmp rdi, qword [r10 - 8]	      1246	mark.c	FUNCTION_27	FOR_2	CALL_3
0x4002199	            0x7521	                           jne 0x40021bc	      1246	mark.c	FUNCTION_27	FOR_2	CALL_3
0x400219b	          0x418b1a	                    mov ebx, dword [r10]	      1246	mark.c	FUNCTION_27	FOR_2	CALL_3
0x400219e	            0x39de	                            cmp esi, ebx	      1246	mark.c	FUNCTION_27	FOR_2	CALL_3
0x40021a0	            0x7f1a	                            jg 0x40021bc	      1246	mark.c	FUNCTION_27	FOR_2	CALL_3
0x40021a2	        0x4d8962f8	                mov qword [r10 - 8], r12	      1246	mark.c	FUNCTION_27	FOR_2	CALL_3
0x40021a6	          0x4885c9	                           test rcx, rcx	      1246	mark.c	FUNCTION_27	FOR_2	CALL_3
0x40021a9	            0x790d	                           jns 0x40021b8	      1246	mark.c	FUNCTION_27	FOR_2	CALL_3
0x40021ab	            0x39eb	                            cmp ebx, ebp	      1246	mark.c	FUNCTION_27	FOR_2	CALL_3
0x40021ad	            0x7f09	                            jg 0x40021b8	      1246	mark.c	FUNCTION_27	FOR_2	CALL_3
0x40021af	    0x41c702000000	                      mov dword [r10], 0	      1246	mark.c	FUNCTION_27	FOR_2	CALL_3
0x40021b6	            0xeb04	                           jmp 0x40021bc	      1246	mark.c	FUNCTION_27	FOR_2	CALL_3
0x40021b8	             0x1cb	                            add ebx, ecx	      1246	mark.c	FUNCTION_27	FOR_2	CALL_3
0x40021ba	            0x8918	                    mov dword [rax], ebx	      1246	mark.c	FUNCTION_27	FOR_2	CALL_3
0x40021bc	        0x4983c228	                           add r10, 0x28	      1246	mark.c	FUNCTION_27	FOR_2	CALL_3
0x40021c0	          0x4d39ca	                             cmp r10, r9	      1243	mark.c	FUNCTION_27	FOR_2
0x40021c3	            0x75c7	                           jne 0x400218c	      1243	mark.c	FUNCTION_27	FOR_2
0x40021c5	    0x493bbb380300	           cmp rdi, qword [r11 + 0x338] 	      1250	mark.c	FUNCTION_27	CALL_4
0x40021cc	            0x753c	                           jne 0x400220a	      1250	mark.c	FUNCTION_27	CALL_4
0x40021ce	    0x418b83400300	           mov eax, dword [r11 + 0x340] 	      1250	mark.c	FUNCTION_27	CALL_4
0x40021d5	            0x39c6	                            cmp esi, eax	      1250	mark.c	FUNCTION_27	CALL_4
0x40021d7	            0x7f31	                            jg 0x400220a	      1250	mark.c	FUNCTION_27	CALL_4
0x40021d9	        0x4c8d0c3a	                     lea r9, [rdx + rdi]	      1250	mark.c	FUNCTION_27	CALL_4
0x40021dd	    0x4d898b380300	             mov qword [r11 + 0x338], r9	      1250	mark.c	FUNCTION_27	CALL_4
0x40021e4	          0x4885c9	                           test rcx, rcx	      1250	mark.c	FUNCTION_27	CALL_4
0x40021e7	            0x7918	                           jns 0x4002201	      1250	mark.c	FUNCTION_27	CALL_4
0x40021e9	          0x4189c9	                            mov r9d, ecx	      1250	mark.c	FUNCTION_27	CALL_4
0x40021ec	          0x41f7d9	                                 neg r9d	      1250	mark.c	FUNCTION_27	CALL_4
0x40021ef	          0x4439c8	                            cmp eax, r9d	      1250	mark.c	FUNCTION_27	CALL_4
0x40021f2	            0x7f0d	                            jg 0x4002201	      1250	mark.c	FUNCTION_27	CALL_4
0x40021f4	    0x41c783400300	              mov dword [r11 + 0x340], 0	      1250	mark.c	FUNCTION_27	CALL_4
0x40021ff	            0xeb09	                           jmp 0x400220a	      1250	mark.c	FUNCTION_27	CALL_4
0x4002201	             0x1c8	                            add eax, ecx	      1250	mark.c	FUNCTION_27	CALL_4
0x4002203	    0x418983400300	            mov dword [r11 + 0x340], eax	      1250	mark.c	FUNCTION_27	CALL_4
0x400220a	    0x493bbb480300	           cmp rdi, qword [r11 + 0x348] 	      1253	mark.c	FUNCTION_27	CALL_5
0x4002211	            0x753c	                           jne 0x400224f	      1253	mark.c	FUNCTION_27	CALL_5
0x4002213	    0x418b83500300	           mov eax, dword [r11 + 0x350] 	      1253	mark.c	FUNCTION_27	CALL_5
0x400221a	            0x39c6	                            cmp esi, eax	      1253	mark.c	FUNCTION_27	CALL_5
0x400221c	            0x7f31	                            jg 0x400224f	      1253	mark.c	FUNCTION_27	CALL_5
0x400221e	        0x4c8d0c3a	                     lea r9, [rdx + rdi]	      1253	mark.c	FUNCTION_27	CALL_5
0x4002222	    0x4d898b480300	             mov qword [r11 + 0x348], r9	      1253	mark.c	FUNCTION_27	CALL_5
0x4002229	          0x4885c9	                           test rcx, rcx	      1253	mark.c	FUNCTION_27	CALL_5
0x400222c	            0x7918	                           jns 0x4002246	      1253	mark.c	FUNCTION_27	CALL_5
0x400222e	          0x4189c9	                            mov r9d, ecx	      1253	mark.c	FUNCTION_27	CALL_5
0x4002231	          0x41f7d9	                                 neg r9d	      1253	mark.c	FUNCTION_27	CALL_5
0x4002234	          0x4439c8	                            cmp eax, r9d	      1253	mark.c	FUNCTION_27	CALL_5
0x4002237	            0x7f0d	                            jg 0x4002246	      1253	mark.c	FUNCTION_27	CALL_5
0x4002239	    0x41c783500300	              mov dword [r11 + 0x350], 0	      1253	mark.c	FUNCTION_27	CALL_5
0x4002244	            0xeb09	                           jmp 0x400224f	      1253	mark.c	FUNCTION_27	CALL_5
0x4002246	             0x1c8	                            add eax, ecx	      1253	mark.c	FUNCTION_27	CALL_5
0x4002248	    0x418983500300	            mov dword [r11 + 0x350], eax	      1253	mark.c	FUNCTION_27	CALL_5
0x400224f	    0x458b8b980900	           mov r9d, dword [r11 + 0x998] 	      1257	mark.c	FUNCTION_27	FOR_3
0x4002256	          0x4585c9	                           test r9d, r9d	      1257	mark.c	FUNCTION_27	FOR_3
0x4002259	            0x7e53	                           jle 0x40022ae	      1257	mark.c	FUNCTION_27	FOR_3
0x400225b	    0x498d83600300	                  lea rax, [r11 + 0x360]	      1257	mark.c	FUNCTION_27	FOR_3
0x4002262	        0x458d51ff	                      lea r10d, [r9 - 1]	      1257	mark.c	FUNCTION_27	FOR_3
0x4002266	        0x4983c237	                           add r10, 0x37	      1257	mark.c	FUNCTION_27	FOR_3
0x400226a	        0x49c1e204	                              shl r10, 4	      1257	mark.c	FUNCTION_27	FOR_3
0x400226e	          0x4d01da	                            add r10, r11	      1257	mark.c	FUNCTION_27	FOR_3
0x4002271	        0x488d2c3a	                    lea rbp, [rdx + rdi]	      1258	mark.c	FUNCTION_27	CALL_6
0x4002275	          0x4189cc	                           mov r12d, ecx	      1258	mark.c	FUNCTION_27	CALL_6
0x4002278	          0x41f7dc	                                neg r12d	      1258	mark.c	FUNCTION_27	CALL_6
0x400227b	          0x4989c1	                             mov r9, rax	      1258	mark.c	FUNCTION_27	CALL_6
0x400227e	        0x483b78f8	                cmp rdi, qword [rax - 8]	      1258	mark.c	FUNCTION_27	CALL_6
0x4002282	            0x7521	                           jne 0x40022a5	      1258	mark.c	FUNCTION_27	CALL_6
0x4002284	            0x8b18	                    mov ebx, dword [rax]	      1258	mark.c	FUNCTION_27	CALL_6
0x4002286	            0x39de	                            cmp esi, ebx	      1258	mark.c	FUNCTION_27	CALL_6
0x4002288	            0x7f1b	                            jg 0x40022a5	      1258	mark.c	FUNCTION_27	CALL_6
0x400228a	        0x488968f8	                mov qword [rax - 8], rbp	      1258	mark.c	FUNCTION_27	CALL_6
0x400228e	          0x4885c9	                           test rcx, rcx	      1258	mark.c	FUNCTION_27	CALL_6
0x4002291	            0x790d	                           jns 0x40022a0	      1258	mark.c	FUNCTION_27	CALL_6
0x4002293	          0x4439e3	                           cmp ebx, r12d	      1258	mark.c	FUNCTION_27	CALL_6
0x4002296	            0x7f08	                            jg 0x40022a0	      1258	mark.c	FUNCTION_27	CALL_6
0x4002298	    0xc70000000000	                      mov dword [rax], 0	      1258	mark.c	FUNCTION_27	CALL_6
0x400229e	            0xeb05	                           jmp 0x40022a5	      1258	mark.c	FUNCTION_27	CALL_6
0x40022a0	             0x1cb	                            add ebx, ecx	      1258	mark.c	FUNCTION_27	CALL_6
0x40022a2	          0x418919	                     mov dword [r9], ebx	      1258	mark.c	FUNCTION_27	CALL_6
0x40022a5	        0x4883c010	                           add rax, 0x10	      1258	mark.c	FUNCTION_27	CALL_6
0x40022a9	          0x4c39d0	                            cmp rax, r10	      1257	mark.c	FUNCTION_27	FOR_3
0x40022ac	            0x75cd	                           jne 0x400227b	      1257	mark.c	FUNCTION_27	FOR_3
0x40022ae	    0x493bbbf80200	           cmp rdi, qword [r11 + 0x2f8] 	      1262	mark.c	FUNCTION_27	CALL_7
0x40022b5	            0x753c	                           jne 0x40022f3	      1262	mark.c	FUNCTION_27	CALL_7
0x40022b7	    0x418b83000300	           mov eax, dword [r11 + 0x300] 	      1262	mark.c	FUNCTION_27	CALL_7
0x40022be	            0x39c6	                            cmp esi, eax	      1262	mark.c	FUNCTION_27	CALL_7
0x40022c0	            0x7f31	                            jg 0x40022f3	      1262	mark.c	FUNCTION_27	CALL_7
0x40022c2	        0x4c8d0c3a	                     lea r9, [rdx + rdi]	      1262	mark.c	FUNCTION_27	CALL_7
0x40022c6	    0x4d898bf80200	             mov qword [r11 + 0x2f8], r9	      1262	mark.c	FUNCTION_27	CALL_7
0x40022cd	          0x4885c9	                           test rcx, rcx	      1262	mark.c	FUNCTION_27	CALL_7
0x40022d0	            0x7918	                           jns 0x40022ea	      1262	mark.c	FUNCTION_27	CALL_7
0x40022d2	          0x4189c9	                            mov r9d, ecx	      1262	mark.c	FUNCTION_27	CALL_7
0x40022d5	          0x41f7d9	                                 neg r9d	      1262	mark.c	FUNCTION_27	CALL_7
0x40022d8	          0x4439c8	                            cmp eax, r9d	      1262	mark.c	FUNCTION_27	CALL_7
0x40022db	            0x7f0d	                            jg 0x40022ea	      1262	mark.c	FUNCTION_27	CALL_7
0x40022dd	    0x41c783000300	              mov dword [r11 + 0x300], 0	      1262	mark.c	FUNCTION_27	CALL_7
0x40022e8	            0xeb09	                           jmp 0x40022f3	      1262	mark.c	FUNCTION_27	CALL_7
0x40022ea	             0x1c8	                            add eax, ecx	      1262	mark.c	FUNCTION_27	CALL_7
0x40022ec	    0x418983000300	            mov dword [r11 + 0x300], eax	      1262	mark.c	FUNCTION_27	CALL_7
0x40022f3	    0x493bbb080300	           cmp rdi, qword [r11 + 0x308] 	      1263	mark.c	FUNCTION_27	CALL_8
0x40022fa	            0x753c	                           jne 0x4002338	      1263	mark.c	FUNCTION_27	CALL_8
0x40022fc	    0x418b83100300	           mov eax, dword [r11 + 0x310] 	      1263	mark.c	FUNCTION_27	CALL_8
0x4002303	            0x39c6	                            cmp esi, eax	      1263	mark.c	FUNCTION_27	CALL_8
0x4002305	            0x7f31	                            jg 0x4002338	      1263	mark.c	FUNCTION_27	CALL_8
0x4002307	        0x4c8d0c3a	                     lea r9, [rdx + rdi]	      1263	mark.c	FUNCTION_27	CALL_8
0x400230b	    0x4d898b080300	             mov qword [r11 + 0x308], r9	      1263	mark.c	FUNCTION_27	CALL_8
0x4002312	          0x4885c9	                           test rcx, rcx	      1263	mark.c	FUNCTION_27	CALL_8
0x4002315	            0x7918	                           jns 0x400232f	      1263	mark.c	FUNCTION_27	CALL_8
0x4002317	          0x4189c9	                            mov r9d, ecx	      1263	mark.c	FUNCTION_27	CALL_8
0x400231a	          0x41f7d9	                                 neg r9d	      1263	mark.c	FUNCTION_27	CALL_8
0x400231d	          0x4439c8	                            cmp eax, r9d	      1263	mark.c	FUNCTION_27	CALL_8
0x4002320	            0x7f0d	                            jg 0x400232f	      1263	mark.c	FUNCTION_27	CALL_8
0x4002322	    0x41c783100300	              mov dword [r11 + 0x310], 0	      1263	mark.c	FUNCTION_27	CALL_8
0x400232d	            0xeb09	                           jmp 0x4002338	      1263	mark.c	FUNCTION_27	CALL_8
0x400232f	             0x1c8	                            add eax, ecx	      1263	mark.c	FUNCTION_27	CALL_8
0x4002331	    0x418983100300	            mov dword [r11 + 0x310], eax	      1263	mark.c	FUNCTION_27	CALL_8
0x4002338	    0x4c8b25000000	            mov r12, qword [0x0400233f] 	      1266	mark.c	FUNCTION_27	CALL_9
0x400233f	    0x493bbc248005	           cmp rdi, qword [r12 + 0x580] 	      1266	mark.c	FUNCTION_27	CALL_9
0x4002347	            0x7540	                           jne 0x4002389	      1266	mark.c	FUNCTION_27	CALL_9
0x4002349	    0x418b84248805	           mov eax, dword [r12 + 0x588] 	      1266	mark.c	FUNCTION_27	CALL_9
0x4002351	            0x39c6	                            cmp esi, eax	      1266	mark.c	FUNCTION_27	CALL_9
0x4002353	            0x7f34	                            jg 0x4002389	      1266	mark.c	FUNCTION_27	CALL_9
0x4002355	        0x4c8d0c3a	                     lea r9, [rdx + rdi]	      1266	mark.c	FUNCTION_27	CALL_9
0x4002359	    0x4d898c248005	             mov qword [r12 + 0x580], r9	      1266	mark.c	FUNCTION_27	CALL_9
0x4002361	          0x4885c9	                           test rcx, rcx	      1266	mark.c	FUNCTION_27	CALL_9
0x4002364	            0x7919	                           jns 0x400237f	      1266	mark.c	FUNCTION_27	CALL_9
0x4002366	          0x4189c9	                            mov r9d, ecx	      1266	mark.c	FUNCTION_27	CALL_9
0x4002369	          0x41f7d9	                                 neg r9d	      1266	mark.c	FUNCTION_27	CALL_9
0x400236c	          0x4439c8	                            cmp eax, r9d	      1266	mark.c	FUNCTION_27	CALL_9
0x400236f	            0x7f0e	                            jg 0x400237f	      1266	mark.c	FUNCTION_27	CALL_9
0x4002371	    0x41c784248805	              mov dword [r12 + 0x588], 0	      1266	mark.c	FUNCTION_27	CALL_9
0x400237d	            0xeb0a	                           jmp 0x4002389	      1266	mark.c	FUNCTION_27	CALL_9
0x400237f	             0x1c8	                            add eax, ecx	      1266	mark.c	FUNCTION_27	CALL_9
0x4002381	    0x418984248805	            mov dword [r12 + 0x588], eax	      1266	mark.c	FUNCTION_27	CALL_9
0x4002389	    0x493bbc249005	           cmp rdi, qword [r12 + 0x590] 	      1269	mark.c	FUNCTION_27	CALL_10
0x4002391	            0x7540	                           jne 0x40023d3	      1269	mark.c	FUNCTION_27	CALL_10
0x4002393	    0x418b84249805	           mov eax, dword [r12 + 0x598] 	      1269	mark.c	FUNCTION_27	CALL_10
0x400239b	            0x39c6	                            cmp esi, eax	      1269	mark.c	FUNCTION_27	CALL_10
0x400239d	            0x7f34	                            jg 0x40023d3	      1269	mark.c	FUNCTION_27	CALL_10
0x400239f	        0x4c8d0c3a	                     lea r9, [rdx + rdi]	      1269	mark.c	FUNCTION_27	CALL_10
0x40023a3	    0x4d898c249005	             mov qword [r12 + 0x590], r9	      1269	mark.c	FUNCTION_27	CALL_10
0x40023ab	          0x4885c9	                           test rcx, rcx	      1269	mark.c	FUNCTION_27	CALL_10
0x40023ae	            0x7919	                           jns 0x40023c9	      1269	mark.c	FUNCTION_27	CALL_10
0x40023b0	          0x4189c9	                            mov r9d, ecx	      1269	mark.c	FUNCTION_27	CALL_10
0x40023b3	          0x41f7d9	                                 neg r9d	      1269	mark.c	FUNCTION_27	CALL_10
0x40023b6	          0x4439c8	                            cmp eax, r9d	      1269	mark.c	FUNCTION_27	CALL_10
0x40023b9	            0x7f0e	                            jg 0x40023c9	      1269	mark.c	FUNCTION_27	CALL_10
0x40023bb	    0x41c784249805	              mov dword [r12 + 0x598], 0	      1269	mark.c	FUNCTION_27	CALL_10
0x40023c7	            0xeb0a	                           jmp 0x40023d3	      1269	mark.c	FUNCTION_27	CALL_10
0x40023c9	             0x1c8	                            add eax, ecx	      1269	mark.c	FUNCTION_27	CALL_10
0x40023cb	    0x418984249805	            mov dword [r12 + 0x598], eax	      1269	mark.c	FUNCTION_27	CALL_10
0x40023d3	    0x483b3d000000	            cmp rdi, qword [0x040023da] 	      1272	mark.c	FUNCTION_27	CALL_11
0x40023da	            0x7539	                           jne 0x4002415	      1272	mark.c	FUNCTION_27	CALL_11
0x40023dc	    0x8b0500000000	            mov eax, dword [0x040023e2] 	      1272	mark.c	FUNCTION_27	CALL_11
0x40023e2	            0x39c6	                            cmp esi, eax	      1272	mark.c	FUNCTION_27	CALL_11
0x40023e4	            0x7f2f	                            jg 0x4002415	      1272	mark.c	FUNCTION_27	CALL_11
0x40023e6	        0x4c8d0c3a	                     lea r9, [rdx + rdi]	      1272	mark.c	FUNCTION_27	CALL_11
0x40023ea	    0x4c890d000000	              mov qword [0x040023f1], r9	      1272	mark.c	FUNCTION_27	CALL_11
0x40023f1	          0x4885c9	                           test rcx, rcx	      1272	mark.c	FUNCTION_27	CALL_11
0x40023f4	            0x7917	                           jns 0x400240d	      1272	mark.c	FUNCTION_27	CALL_11
0x40023f6	          0x4189c9	                            mov r9d, ecx	      1272	mark.c	FUNCTION_27	CALL_11
0x40023f9	          0x41f7d9	                                 neg r9d	      1272	mark.c	FUNCTION_27	CALL_11
0x40023fc	          0x4439c8	                            cmp eax, r9d	      1272	mark.c	FUNCTION_27	CALL_11
0x40023ff	            0x7f0c	                            jg 0x400240d	      1272	mark.c	FUNCTION_27	CALL_11
0x4002401	    0xc70500000000	               mov dword [0x0400240b], 0	      1272	mark.c	FUNCTION_27	CALL_11
0x400240b	            0xeb08	                           jmp 0x4002415	      1272	mark.c	FUNCTION_27	CALL_11
0x400240d	             0x1c8	                            add eax, ecx	      1272	mark.c	FUNCTION_27	CALL_11
0x400240f	    0x890500000000	            mov dword [0x04002415], eax 	      1272	mark.c	FUNCTION_27	CALL_11
0x4002415	    0x488b1d000000	            mov rbx, qword [0x0400241c] 	      1277	mark.c	FUNCTION_27
0x400241c	        0x488d2c3a	                    lea rbp, [rdx + rdi]	      1283	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x4002420	          0x4189cd	                           mov r13d, ecx	      1283	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x4002423	          0x41f7dd	                                neg r13d	      1283	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x4002426	          0x4885db	                           test rbx, rbx	      1277	mark.c	FUNCTION_27
0x4002429	     0xf85de000000	                           jne 0x400250d	      1277	mark.c	FUNCTION_27
0x400242f	      0xe902010000	                           jmp 0x4002536	      1277	mark.c	FUNCTION_27
0x4002434	          0x4889c2	                            mov rdx, rax	      1277	mark.c	FUNCTION_27
0x4002437	        0x443b4008	                cmp r8d, dword [rax + 8]	      1282	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x400243b	            0x752a	                           jne 0x4002467	      1282	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x400243d	        0x483b78f8	                cmp rdi, qword [rax - 8]	      1283	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x4002441	            0x7524	                           jne 0x4002467	      1283	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x4002443	          0x448b10	                   mov r10d, dword [rax]	      1283	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x4002446	          0x4439d6	                           cmp esi, r10d	      1283	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x4002449	            0x7f1c	                            jg 0x4002467	      1283	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x400244b	        0x488968f8	                mov qword [rax - 8], rbp	      1283	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x400244f	          0x4885c9	                           test rcx, rcx	      1283	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x4002452	            0x790d	                           jns 0x4002461	      1283	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x4002454	          0x4539ea	                          cmp r10d, r13d	      1283	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x4002457	            0x7f08	                            jg 0x4002461	      1283	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x4002459	    0xc70000000000	                      mov dword [rax], 0	      1283	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x400245f	            0xeb06	                           jmp 0x4002467	      1283	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x4002461	          0x4101ca	                           add r10d, ecx	      1283	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x4002464	          0x448912	                   mov dword [rdx], r10d	      1283	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x4002467	        0x4883c028	                           add rax, 0x28	      1283	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x400246b	          0x4c39c8	                             cmp rax, r9	      1281	mark.c	FUNCTION_27	FUNCTION_1	FOR_1
0x400246e	            0x75c4	                           jne 0x4002434	      1281	mark.c	FUNCTION_27	FUNCTION_1	FOR_1
0x4002470	        0x4c3b5b08	                cmp r11, qword [rbx + 8]	      1286	mark.c	FUNCTION_27	FUNCTION_1	IF_2
0x4002474	     0xf858a000000	                           jne 0x4002504	      1286	mark.c	FUNCTION_27	FUNCTION_1	IF_2
0x400247a	    0x8b9384180000	          mov edx, dword [rbx + 0x1884] 	      1289	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2
0x4002480	            0x85d2	                           test edx, edx	      1289	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2
0x4002482	            0x7e52	                           jle 0x40024d6	      1289	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2
0x4002484	    0x488d83701500	                 lea rax, [rbx + 0x1570]	      1289	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2
0x400248b	          0x8d52ff	                      lea edx, [rdx - 1]	      1289	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2
0x400248e	        0x488d1492	                  lea rdx, [rdx + rdx*4]	      1289	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2
0x4002492	    0x4c8d8cd39815	          lea r9, [rbx + rdx*8 + 0x1598]	      1289	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2
0x400249a	          0x4889c2	                            mov rdx, rax	      1289	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2
0x400249d	        0x443b4008	                cmp r8d, dword [rax + 8]	      1290	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x40024a1	            0x752a	                           jne 0x40024cd	      1290	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x40024a3	        0x483b78f8	                cmp rdi, qword [rax - 8]	      1291	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x40024a7	            0x7524	                           jne 0x40024cd	      1291	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x40024a9	          0x448b10	                   mov r10d, dword [rax]	      1291	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x40024ac	          0x4439d6	                           cmp esi, r10d	      1291	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x40024af	            0x7f1c	                            jg 0x40024cd	      1291	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x40024b1	        0x488968f8	                mov qword [rax - 8], rbp	      1291	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x40024b5	          0x4885c9	                           test rcx, rcx	      1291	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x40024b8	            0x790d	                           jns 0x40024c7	      1291	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x40024ba	          0x4539ea	                          cmp r10d, r13d	      1291	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x40024bd	            0x7f08	                            jg 0x40024c7	      1291	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x40024bf	    0xc70000000000	                      mov dword [rax], 0	      1291	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x40024c5	            0xeb06	                           jmp 0x40024cd	      1291	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x40024c7	          0x4101ca	                           add r10d, ecx	      1291	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x40024ca	          0x448912	                   mov dword [rdx], r10d	      1291	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x40024cd	        0x4883c028	                           add rax, 0x28	      1291	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x40024d1	          0x4c39c8	                             cmp rax, r9	      1289	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2
0x40024d4	            0x75c4	                           jne 0x400249a	      1289	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2
0x40024d6	          0x4939dc	                            cmp r12, rbx	      1294	mark.c	FUNCTION_27	FUNCTION_1	IF_2	IF_4
0x40024d9	            0x7429	                            je 0x4002504	      1294	mark.c	FUNCTION_27	FUNCTION_1	IF_2	IF_4
0x40024db	        0x483b7b38	            cmp rdi, qword [rbx + 0x38] 	      1295	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x40024df	            0x7523	                           jne 0x4002504	      1295	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x40024e1	          0x8b4340	            mov eax, dword [rbx + 0x40] 	      1295	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x40024e4	            0x39c6	                            cmp esi, eax	      1295	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x40024e6	            0x7f1c	                            jg 0x4002504	      1295	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x40024e8	        0x48896b38	             mov qword [rbx + 0x38], rbp	      1295	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x40024ec	          0x4885c9	                           test rcx, rcx	      1295	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x40024ef	            0x790e	                           jns 0x40024ff	      1295	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x40024f1	          0x4439e8	                           cmp eax, r13d	      1295	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x40024f4	            0x7f09	                            jg 0x40024ff	      1295	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x40024f6	    0xc74340000000	               mov dword [rbx + 0x40], 0	      1295	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x40024fd	            0xeb05	                           jmp 0x4002504	      1295	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x40024ff	             0x1c8	                            add eax, ecx	      1295	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x4002501	          0x894340	             mov dword [rbx + 0x40], eax	      1295	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x4002504	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      1277	mark.c	FUNCTION_27
0x4002508	          0x4885db	                           test rbx, rbx	      1277	mark.c	FUNCTION_27
0x400250b	            0x7429	                            je 0x4002536	      1277	mark.c	FUNCTION_27
0x400250d	    0x8b9340150000	          mov edx, dword [rbx + 0x1540] 	      1281	mark.c	FUNCTION_27	FUNCTION_1	FOR_1
0x4002513	            0x85d2	                           test edx, edx	      1281	mark.c	FUNCTION_27	FUNCTION_1	FOR_1
0x4002515	     0xf8e55ffffff	                           jle 0x4002470	      1281	mark.c	FUNCTION_27	FUNCTION_1	FOR_1
0x400251b	    0x488d83a80500	                  lea rax, [rbx + 0x5a8]	      1281	mark.c	FUNCTION_27	FUNCTION_1	FOR_1
0x4002522	          0x8d52ff	                      lea edx, [rdx - 1]	      1281	mark.c	FUNCTION_27	FUNCTION_1	FOR_1
0x4002525	        0x488d1492	                  lea rdx, [rdx + rdx*4]	      1281	mark.c	FUNCTION_27	FUNCTION_1	FOR_1
0x4002529	    0x4c8d8cd3d005	          lea r9, [rbx + rdx*8 + 0x5d0] 	      1281	mark.c	FUNCTION_27	FUNCTION_1	FOR_1
0x4002531	      0xe9fefeffff	                           jmp 0x4002434	      1281	mark.c	FUNCTION_27	FUNCTION_1	FOR_1
0x4002536	              0x5b	                                 pop rbx	      1298	mark.c	FUNCTION_27
0x4002537	              0x5d	                                 pop rbp	      1298	mark.c	FUNCTION_27
0x4002538	            0x415c	                                 pop r12	      1298	mark.c	FUNCTION_27
0x400253a	            0x415d	                                 pop r13	      1298	mark.c	FUNCTION_27
0x400253c	            0xf3c3	                                     ret	      1298	mark.c	FUNCTION_27
mark_adjust_internal	DO,0:FOR,3:WHILE,0:ELSE,0:functions,1:IF,6:CALL,19:SWITCH,0	553
0x4000312	            0x4157	                                push r15	      1046	mark.c	FUNCTION_26
0x4000314	            0x4156	                                push r14	      1046	mark.c	FUNCTION_26
0x4000316	            0x4155	                                push r13	      1046	mark.c	FUNCTION_26
0x4000318	            0x4154	                                push r12	      1046	mark.c	FUNCTION_26
0x400031a	              0x55	                                push rbp	      1046	mark.c	FUNCTION_26
0x400031b	              0x53	                                push rbx	      1046	mark.c	FUNCTION_26
0x400031c	        0x4883ec28	                           sub rsp, 0x28	      1046	mark.c	FUNCTION_26
0x4000320	          0x4839fe	                            cmp rsi, rdi	      1054	mark.c	FUNCTION_26	IF_1
0x4000323	            0x7d09	                           jge 0x400032e	      1054	mark.c	FUNCTION_26	IF_1
0x4000325	          0x4885c9	                           test rcx, rcx	      1054	mark.c	FUNCTION_26	IF_1
0x4000328	     0xf8489070000	                            je 0x4000ab7	      1054	mark.c	FUNCTION_26	IF_1
0x400032e	      0x4489442414	             mov dword [rsp + 0x14], r8d	      1054	mark.c	FUNCTION_26	IF_1
0x4000333	          0x4989cd	                            mov r13, rcx	      1054	mark.c	FUNCTION_26	IF_1
0x4000336	          0x4989d6	                            mov r14, rdx	      1054	mark.c	FUNCTION_26	IF_1
0x4000339	          0x4889f5	                            mov rbp, rsi	      1054	mark.c	FUNCTION_26	IF_1
0x400033c	          0x4989fc	                            mov r12, rdi	      1054	mark.c	FUNCTION_26	IF_1
0x400033f	    0x488b0d000000	            mov rcx, qword [0x04000346] 	      1048	mark.c	FUNCTION_26
0x4000346	    0x8b99b8000000	            mov ebx, dword [rcx + 0xb8] 	      1048	mark.c	FUNCTION_26
0x400034c	    0x833d00000000	               cmp dword [0x04000353], 0	      1057	mark.c	FUNCTION_26	IF_2
0x4000353	     0xf857d030000	                           jne 0x40006d6	      1057	mark.c	FUNCTION_26	IF_2
0x4000359	    0x488db9580100	                  lea rdi, [rcx + 0x158]	      1057	mark.c	FUNCTION_26	IF_2
0x4000360	      0xb800000000	                              mov eax, 0	      1057	mark.c	FUNCTION_26	IF_2
0x4000365	      0xbe00000000	                              mov esi, 0	      1057	mark.c	FUNCTION_26	IF_2
0x400036a	          0x4989f8	                             mov r8, rdi	      1057	mark.c	FUNCTION_26	IF_2
0x400036d	          0x488b17	                    mov rdx, qword [rdi]	      1062	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x4000370	          0x4839d5	                            cmp rbp, rdx	      1062	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x4000373	            0x7c1f	                            jl 0x4000394	      1062	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x4000375	          0x4939d4	                            cmp r12, rdx	      1062	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x4000378	            0x7f1a	                            jg 0x4000394	      1062	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x400037a	    0x4981feffffff	                     cmp r14, 0x7fffffff	      1062	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x4000381	            0x7509	                           jne 0x400038c	      1062	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x4000383	    0x48c707000000	                      mov qword [rdi], 0	      1062	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x400038a	            0xeb18	                           jmp 0x40003a4	      1062	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x400038c	          0x4c01f2	                            add rdx, r14	      1062	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x400038f	          0x488917	                    mov qword [rdi], rdx	      1062	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x4000392	            0xeb10	                           jmp 0x40003a4	      1062	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x4000394	          0x4839d5	                            cmp rbp, rdx	      1062	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x4000397	            0x7d0b	                           jge 0x40003a4	      1062	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x4000399	          0x4d85ed	                           test r13, r13	      1062	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x400039c	            0x7406	                            je 0x40003a4	      1062	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x400039e	          0x4c01ea	                            add rdx, r13	      1062	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x40003a1	          0x498910	                     mov qword [r8], rdx	      1062	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x40003a4	          0x4989c0	                             mov r8, rax	      1062	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x40003a7	          0x3b5810	            cmp ebx, dword [rax + 0x10] 	      1063	mark.c	FUNCTION_26	IF_2	FOR_1	IF_3
0x40003aa	            0x7533	                           jne 0x40003df	      1063	mark.c	FUNCTION_26	IF_2	FOR_1	IF_3
0x40003ac	          0x488b10	                    mov rdx, qword [rax]	      1064	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x40003af	          0x4839d5	                            cmp rbp, rdx	      1064	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x40003b2	            0x7c1b	                            jl 0x40003cf	      1064	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x40003b4	          0x4939d4	                            cmp r12, rdx	      1064	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x40003b7	            0x7f16	                            jg 0x40003cf	      1064	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x40003b9	    0x4981feffffff	                     cmp r14, 0x7fffffff	      1064	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x40003c0	            0x7505	                           jne 0x40003c7	      1064	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x40003c2	          0x4c8920	                    mov qword [rax], r12	      1064	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x40003c5	            0xeb18	                           jmp 0x40003df	      1064	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x40003c7	          0x4c01f2	                            add rdx, r14	      1064	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x40003ca	          0x488910	                    mov qword [rax], rdx	      1064	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x40003cd	            0xeb10	                           jmp 0x40003df	      1064	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x40003cf	          0x4839d5	                            cmp rbp, rdx	      1064	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x40003d2	            0x7d0b	                           jge 0x40003df	      1064	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x40003d4	          0x4d85ed	                           test r13, r13	      1064	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x40003d7	            0x7406	                            je 0x40003df	      1064	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x40003d9	          0x4c01ea	                            add rdx, r13	      1064	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x40003dc	          0x498910	                     mov qword [r8], rdx	      1064	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x40003df	        0x4883c710	                           add rdi, 0x10	      1064	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x40003e3	        0x4883c028	                           add rax, 0x28	      1064	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x40003e7	          0x4839f0	                            cmp rax, rsi	      1060	mark.c	FUNCTION_26	IF_2	FOR_1
0x40003ea	     0xf857affffff	                           jne 0x400036a	      1060	mark.c	FUNCTION_26	IF_2	FOR_1
0x40003f0	      0xbf00000000	                              mov edi, 0	      1060	mark.c	FUNCTION_26	IF_2	FOR_1
0x40003f5	          0x4889f2	                            mov rdx, rsi	      1060	mark.c	FUNCTION_26	IF_2	FOR_1
0x40003f8	          0x3b5e10	            cmp ebx, dword [rsi + 0x10] 	      1068	mark.c	FUNCTION_26	IF_2	FOR_2	IF_4
0x40003fb	            0x7533	                           jne 0x4000430	      1068	mark.c	FUNCTION_26	IF_2	FOR_2	IF_4
0x40003fd	          0x488b06	                    mov rax, qword [rsi]	      1069	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x4000400	          0x4839c5	                            cmp rbp, rax	      1069	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x4000403	            0x7c1b	                            jl 0x4000420	      1069	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x4000405	          0x4939c4	                            cmp r12, rax	      1069	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x4000408	            0x7f16	                            jg 0x4000420	      1069	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x400040a	    0x4981feffffff	                     cmp r14, 0x7fffffff	      1069	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x4000411	            0x7505	                           jne 0x4000418	      1069	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x4000413	          0x4c8926	                    mov qword [rsi], r12	      1069	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x4000416	            0xeb18	                           jmp 0x4000430	      1069	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x4000418	          0x4c01f0	                            add rax, r14	      1069	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x400041b	          0x488906	                    mov qword [rsi], rax	      1069	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x400041e	            0xeb10	                           jmp 0x4000430	      1069	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x4000420	          0x4839c5	                            cmp rbp, rax	      1069	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x4000423	            0x7d0b	                           jge 0x4000430	      1069	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x4000425	          0x4d85ed	                           test r13, r13	      1069	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x4000428	            0x7406	                            je 0x4000430	      1069	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x400042a	          0x4c01e8	                            add rax, r13	      1069	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x400042d	          0x488902	                    mov qword [rdx], rax	      1069	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x4000430	        0x4883c628	                           add rsi, 0x28	      1069	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x4000434	          0x4839fe	                            cmp rsi, rdi	      1066	mark.c	FUNCTION_26	IF_2	FOR_2
0x4000437	            0x75bc	                           jne 0x40003f5	      1066	mark.c	FUNCTION_26	IF_2	FOR_2
0x4000439	    0x488b81380300	           mov rax, qword [rcx + 0x338] 	      1073	mark.c	FUNCTION_26	IF_2	CALL_5
0x4000440	          0x4839c5	                            cmp rbp, rax	      1073	mark.c	FUNCTION_26	IF_2	CALL_5
0x4000443	            0x7c49	                            jl 0x400048e	      1073	mark.c	FUNCTION_26	IF_2	CALL_5
0x4000445	          0x4939c4	                            cmp r12, rax	      1073	mark.c	FUNCTION_26	IF_2	CALL_5
0x4000448	            0x7f44	                            jg 0x400048e	      1073	mark.c	FUNCTION_26	IF_2	CALL_5
0x400044a	    0x4981feffffff	                     cmp r14, 0x7fffffff	      1073	mark.c	FUNCTION_26	IF_2	CALL_5
0x4000451	            0x751e	                           jne 0x4000471	      1073	mark.c	FUNCTION_26	IF_2	CALL_5
0x4000453	    0x48c781380300	              mov qword [rcx + 0x338], 0	      1073	mark.c	FUNCTION_26	IF_2	CALL_5
0x400045e	    0x488b81480300	           mov rax, qword [rcx + 0x348] 	      1076	mark.c	FUNCTION_26	IF_2	CALL_6
0x4000465	          0x4939c4	                            cmp r12, rax	      1076	mark.c	FUNCTION_26	IF_2	CALL_6
0x4000468	            0x7f6b	                            jg 0x40004d5	      1076	mark.c	FUNCTION_26	IF_2	CALL_6
0x400046a	          0x4839c5	                            cmp rbp, rax	      1076	mark.c	FUNCTION_26	IF_2	CALL_6
0x400046d	            0x7d4d	                           jge 0x40004bc	      1076	mark.c	FUNCTION_26	IF_2	CALL_6
0x400046f	            0xeb64	                           jmp 0x40004d5	      1076	mark.c	FUNCTION_26	IF_2	CALL_6
0x4000471	          0x4c01f0	                            add rax, r14	      1073	mark.c	FUNCTION_26	IF_2	CALL_5
0x4000474	    0x488981380300	            mov qword [rcx + 0x338], rax	      1073	mark.c	FUNCTION_26	IF_2	CALL_5
0x400047b	    0x488b81480300	           mov rax, qword [rcx + 0x348] 	      1076	mark.c	FUNCTION_26	IF_2	CALL_6
0x4000482	          0x4939c4	                            cmp r12, rax	      1076	mark.c	FUNCTION_26	IF_2	CALL_6
0x4000485	            0x7f4e	                            jg 0x40004d5	      1076	mark.c	FUNCTION_26	IF_2	CALL_6
0x4000487	          0x4839c5	                            cmp rbp, rax	      1076	mark.c	FUNCTION_26	IF_2	CALL_6
0x400048a	            0x7d3d	                           jge 0x40004c9	      1076	mark.c	FUNCTION_26	IF_2	CALL_6
0x400048c	            0xeb47	                           jmp 0x40004d5	      1076	mark.c	FUNCTION_26	IF_2	CALL_6
0x400048e	          0x4839c5	                            cmp rbp, rax	      1073	mark.c	FUNCTION_26	IF_2	CALL_5
0x4000491	            0x7d0f	                           jge 0x40004a2	      1073	mark.c	FUNCTION_26	IF_2	CALL_5
0x4000493	          0x4d85ed	                           test r13, r13	      1073	mark.c	FUNCTION_26	IF_2	CALL_5
0x4000496	            0x740a	                            je 0x40004a2	      1073	mark.c	FUNCTION_26	IF_2	CALL_5
0x4000498	          0x4c01e8	                            add rax, r13	      1073	mark.c	FUNCTION_26	IF_2	CALL_5
0x400049b	    0x488981380300	            mov qword [rcx + 0x338], rax	      1073	mark.c	FUNCTION_26	IF_2	CALL_5
0x40004a2	    0x488b81480300	           mov rax, qword [rcx + 0x348] 	      1076	mark.c	FUNCTION_26	IF_2	CALL_6
0x40004a9	          0x4839c5	                            cmp rbp, rax	      1076	mark.c	FUNCTION_26	IF_2	CALL_6
0x40004ac	            0x7c27	                            jl 0x40004d5	      1076	mark.c	FUNCTION_26	IF_2	CALL_6
0x40004ae	          0x4939c4	                            cmp r12, rax	      1076	mark.c	FUNCTION_26	IF_2	CALL_6
0x40004b1	            0x7f22	                            jg 0x40004d5	      1076	mark.c	FUNCTION_26	IF_2	CALL_6
0x40004b3	    0x4981feffffff	                     cmp r14, 0x7fffffff	      1076	mark.c	FUNCTION_26	IF_2	CALL_6
0x40004ba	            0x750d	                           jne 0x40004c9	      1076	mark.c	FUNCTION_26	IF_2	CALL_6
0x40004bc	    0x48c781480300	              mov qword [rcx + 0x348], 0	      1076	mark.c	FUNCTION_26	IF_2	CALL_6
0x40004c7	            0xeb20	                           jmp 0x40004e9	      1076	mark.c	FUNCTION_26	IF_2	CALL_6
0x40004c9	          0x4c01f0	                            add rax, r14	      1076	mark.c	FUNCTION_26	IF_2	CALL_6
0x40004cc	    0x488981480300	            mov qword [rcx + 0x348], rax	      1076	mark.c	FUNCTION_26	IF_2	CALL_6
0x40004d3	            0xeb14	                           jmp 0x40004e9	      1076	mark.c	FUNCTION_26	IF_2	CALL_6
0x40004d5	          0x4839c5	                            cmp rbp, rax	      1076	mark.c	FUNCTION_26	IF_2	CALL_6
0x40004d8	            0x7d0f	                           jge 0x40004e9	      1076	mark.c	FUNCTION_26	IF_2	CALL_6
0x40004da	          0x4d85ed	                           test r13, r13	      1076	mark.c	FUNCTION_26	IF_2	CALL_6
0x40004dd	            0x740a	                            je 0x40004e9	      1076	mark.c	FUNCTION_26	IF_2	CALL_6
0x40004df	          0x4c01e8	                            add rax, r13	      1076	mark.c	FUNCTION_26	IF_2	CALL_6
0x40004e2	    0x488981480300	            mov qword [rcx + 0x348], rax	      1076	mark.c	FUNCTION_26	IF_2	CALL_6
0x40004e9	    0x488b81280300	           mov rax, qword [rcx + 0x328] 	      1079	mark.c	FUNCTION_26	IF_2	IF_5	CALL_7
0x40004f0	        0x4883f801	                              cmp rax, 1	      1079	mark.c	FUNCTION_26	IF_2	IF_5	CALL_7
0x40004f4	            0x7510	                           jne 0x4000506	      1079	mark.c	FUNCTION_26	IF_2	IF_5	CALL_7
0x40004f6	    0x488b3d000000	            mov rdi, qword [0x040004fd] 	      1079	mark.c	FUNCTION_26	IF_2	IF_5	CALL_7
0x40004fd	    0x4839b9300300	           cmp qword [rcx + 0x330], rdi 	      1079	mark.c	FUNCTION_26	IF_2	IF_5	CALL_7
0x4000504	            0x741e	                            je 0x4000524	      1079	mark.c	FUNCTION_26	IF_2	IF_5	CALL_7
0x4000506	          0x4839c5	                            cmp rbp, rax	      1080	mark.c	FUNCTION_26	IF_2	CALL_8
0x4000509	            0x7c31	                            jl 0x400053c	      1080	mark.c	FUNCTION_26	IF_2	CALL_8
0x400050b	          0x4939c4	                            cmp r12, rax	      1080	mark.c	FUNCTION_26	IF_2	CALL_8
0x400050e	            0x7f2c	                            jg 0x400053c	      1080	mark.c	FUNCTION_26	IF_2	CALL_8
0x4000510	    0x4981feffffff	                     cmp r14, 0x7fffffff	      1080	mark.c	FUNCTION_26	IF_2	CALL_8
0x4000517	            0x7517	                           jne 0x4000530	      1080	mark.c	FUNCTION_26	IF_2	CALL_8
0x4000519	    0x48c781280300	              mov qword [rcx + 0x328], 0	      1080	mark.c	FUNCTION_26	IF_2	CALL_8
0x4000524	    0x8b9198090000	           mov edx, dword [rcx + 0x998] 	      1085	mark.c	FUNCTION_26	IF_2	FOR_3
0x400052a	            0x85d2	                           test edx, edx	      1085	mark.c	FUNCTION_26	IF_2	FOR_3
0x400052c	            0x7f24	                            jg 0x4000552	      1085	mark.c	FUNCTION_26	IF_2	FOR_3
0x400052e	            0xeb77	                           jmp 0x40005a7	      1085	mark.c	FUNCTION_26	IF_2	FOR_3
0x4000530	          0x4c01f0	                            add rax, r14	      1080	mark.c	FUNCTION_26	IF_2	CALL_8
0x4000533	    0x488981280300	            mov qword [rcx + 0x328], rax	      1080	mark.c	FUNCTION_26	IF_2	CALL_8
0x400053a	            0xebe8	                           jmp 0x4000524	      1080	mark.c	FUNCTION_26	IF_2	CALL_8
0x400053c	          0x4839c5	                            cmp rbp, rax	      1080	mark.c	FUNCTION_26	IF_2	CALL_8
0x400053f	            0x7de3	                           jge 0x4000524	      1080	mark.c	FUNCTION_26	IF_2	CALL_8
0x4000541	          0x4d85ed	                           test r13, r13	      1080	mark.c	FUNCTION_26	IF_2	CALL_8
0x4000544	            0x74de	                            je 0x4000524	      1080	mark.c	FUNCTION_26	IF_2	CALL_8
0x4000546	          0x4c01e8	                            add rax, r13	      1080	mark.c	FUNCTION_26	IF_2	CALL_8
0x4000549	    0x488981280300	            mov qword [rcx + 0x328], rax	      1080	mark.c	FUNCTION_26	IF_2	CALL_8
0x4000550	            0xebd2	                           jmp 0x4000524	      1080	mark.c	FUNCTION_26	IF_2	CALL_8
0x4000552	    0x488d81580300	                  lea rax, [rcx + 0x358]	      1080	mark.c	FUNCTION_26	IF_2	CALL_8
0x4000559	          0x8d52ff	                      lea edx, [rdx - 1]	      1080	mark.c	FUNCTION_26	IF_2	CALL_8
0x400055c	        0x48c1e204	                              shl rdx, 4	      1080	mark.c	FUNCTION_26	IF_2	CALL_8
0x4000560	    0x488dbc116803	           lea rdi, [rcx + rdx + 0x368] 	      1080	mark.c	FUNCTION_26	IF_2	CALL_8
0x4000568	          0x4889c6	                            mov rsi, rax	      1080	mark.c	FUNCTION_26	IF_2	CALL_8
0x400056b	          0x488b10	                    mov rdx, qword [rax]	      1086	mark.c	FUNCTION_26	IF_2	CALL_9
0x400056e	          0x4839d5	                            cmp rbp, rdx	      1086	mark.c	FUNCTION_26	IF_2	CALL_9
0x4000571	            0x7c1b	                            jl 0x400058e	      1086	mark.c	FUNCTION_26	IF_2	CALL_9
0x4000573	          0x4939d4	                            cmp r12, rdx	      1086	mark.c	FUNCTION_26	IF_2	CALL_9
0x4000576	            0x7f16	                            jg 0x400058e	      1086	mark.c	FUNCTION_26	IF_2	CALL_9
0x4000578	    0x4981feffffff	                     cmp r14, 0x7fffffff	      1086	mark.c	FUNCTION_26	IF_2	CALL_9
0x400057f	            0x7505	                           jne 0x4000586	      1086	mark.c	FUNCTION_26	IF_2	CALL_9
0x4000581	          0x4c8920	                    mov qword [rax], r12	      1086	mark.c	FUNCTION_26	IF_2	CALL_9
0x4000584	            0xeb18	                           jmp 0x400059e	      1086	mark.c	FUNCTION_26	IF_2	CALL_9
0x4000586	          0x4c01f2	                            add rdx, r14	      1086	mark.c	FUNCTION_26	IF_2	CALL_9
0x4000589	          0x488910	                    mov qword [rax], rdx	      1086	mark.c	FUNCTION_26	IF_2	CALL_9
0x400058c	            0xeb10	                           jmp 0x400059e	      1086	mark.c	FUNCTION_26	IF_2	CALL_9
0x400058e	          0x4839d5	                            cmp rbp, rdx	      1086	mark.c	FUNCTION_26	IF_2	CALL_9
0x4000591	            0x7d0b	                           jge 0x400059e	      1086	mark.c	FUNCTION_26	IF_2	CALL_9
0x4000593	          0x4d85ed	                           test r13, r13	      1086	mark.c	FUNCTION_26	IF_2	CALL_9
0x4000596	            0x7406	                            je 0x400059e	      1086	mark.c	FUNCTION_26	IF_2	CALL_9
0x4000598	          0x4c01ea	                            add rdx, r13	      1086	mark.c	FUNCTION_26	IF_2	CALL_9
0x400059b	          0x488916	                    mov qword [rsi], rdx	      1086	mark.c	FUNCTION_26	IF_2	CALL_9
0x400059e	        0x4883c010	                           add rax, 0x10	      1086	mark.c	FUNCTION_26	IF_2	CALL_9
0x40005a2	          0x4839f8	                            cmp rax, rdi	      1085	mark.c	FUNCTION_26	IF_2	FOR_3
0x40005a5	            0x75c1	                           jne 0x4000568	      1085	mark.c	FUNCTION_26	IF_2	FOR_3
0x40005a7	    0x488b81f80200	           mov rax, qword [rcx + 0x2f8] 	      1090	mark.c	FUNCTION_26	IF_2	CALL_10
0x40005ae	          0x4839c5	                            cmp rbp, rax	      1090	mark.c	FUNCTION_26	IF_2	CALL_10
0x40005b1	            0x7c45	                            jl 0x40005f8	      1090	mark.c	FUNCTION_26	IF_2	CALL_10
0x40005b3	          0x4939c4	                            cmp r12, rax	      1090	mark.c	FUNCTION_26	IF_2	CALL_10
0x40005b6	            0x7f40	                            jg 0x40005f8	      1090	mark.c	FUNCTION_26	IF_2	CALL_10
0x40005b8	    0x4981feffffff	                     cmp r14, 0x7fffffff	      1090	mark.c	FUNCTION_26	IF_2	CALL_10
0x40005bf	            0x751a	                           jne 0x40005db	      1090	mark.c	FUNCTION_26	IF_2	CALL_10
0x40005c1	    0x4c89a1f80200	            mov qword [rcx + 0x2f8], r12	      1090	mark.c	FUNCTION_26	IF_2	CALL_10
0x40005c8	    0x488b81080300	           mov rax, qword [rcx + 0x308] 	      1091	mark.c	FUNCTION_26	IF_2	CALL_11
0x40005cf	          0x4c39e0	                            cmp rax, r12	      1091	mark.c	FUNCTION_26	IF_2	CALL_11
0x40005d2	            0x7c67	                            jl 0x400063b	      1091	mark.c	FUNCTION_26	IF_2	CALL_11
0x40005d4	          0x4839e8	                            cmp rax, rbp	      1091	mark.c	FUNCTION_26	IF_2	CALL_11
0x40005d7	            0x7e4d	                           jle 0x4000626	      1091	mark.c	FUNCTION_26	IF_2	CALL_11
0x40005d9	            0xeb60	                           jmp 0x400063b	      1091	mark.c	FUNCTION_26	IF_2	CALL_11
0x40005db	          0x4c01f0	                            add rax, r14	      1090	mark.c	FUNCTION_26	IF_2	CALL_10
0x40005de	    0x488981f80200	            mov qword [rcx + 0x2f8], rax	      1090	mark.c	FUNCTION_26	IF_2	CALL_10
0x40005e5	    0x488b81080300	           mov rax, qword [rcx + 0x308] 	      1091	mark.c	FUNCTION_26	IF_2	CALL_11
0x40005ec	          0x4939c4	                            cmp r12, rax	      1091	mark.c	FUNCTION_26	IF_2	CALL_11
0x40005ef	            0x7f4a	                            jg 0x400063b	      1091	mark.c	FUNCTION_26	IF_2	CALL_11
0x40005f1	          0x4839c5	                            cmp rbp, rax	      1091	mark.c	FUNCTION_26	IF_2	CALL_11
0x40005f4	            0x7d39	                           jge 0x400062f	      1091	mark.c	FUNCTION_26	IF_2	CALL_11
0x40005f6	            0xeb43	                           jmp 0x400063b	      1091	mark.c	FUNCTION_26	IF_2	CALL_11
0x40005f8	          0x4839c5	                            cmp rbp, rax	      1090	mark.c	FUNCTION_26	IF_2	CALL_10
0x40005fb	            0x7d0f	                           jge 0x400060c	      1090	mark.c	FUNCTION_26	IF_2	CALL_10
0x40005fd	          0x4d85ed	                           test r13, r13	      1090	mark.c	FUNCTION_26	IF_2	CALL_10
0x4000600	            0x740a	                            je 0x400060c	      1090	mark.c	FUNCTION_26	IF_2	CALL_10
0x4000602	          0x4c01e8	                            add rax, r13	      1090	mark.c	FUNCTION_26	IF_2	CALL_10
0x4000605	    0x488981f80200	            mov qword [rcx + 0x2f8], rax	      1090	mark.c	FUNCTION_26	IF_2	CALL_10
0x400060c	    0x488b81080300	           mov rax, qword [rcx + 0x308] 	      1091	mark.c	FUNCTION_26	IF_2	CALL_11
0x4000613	          0x4839c5	                            cmp rbp, rax	      1091	mark.c	FUNCTION_26	IF_2	CALL_11
0x4000616	            0x7c23	                            jl 0x400063b	      1091	mark.c	FUNCTION_26	IF_2	CALL_11
0x4000618	          0x4939c4	                            cmp r12, rax	      1091	mark.c	FUNCTION_26	IF_2	CALL_11
0x400061b	            0x7f1e	                            jg 0x400063b	      1091	mark.c	FUNCTION_26	IF_2	CALL_11
0x400061d	    0x4981feffffff	                     cmp r14, 0x7fffffff	      1091	mark.c	FUNCTION_26	IF_2	CALL_11
0x4000624	            0x7509	                           jne 0x400062f	      1091	mark.c	FUNCTION_26	IF_2	CALL_11
0x4000626	    0x4c89a1080300	            mov qword [rcx + 0x308], r12	      1091	mark.c	FUNCTION_26	IF_2	CALL_11
0x400062d	            0xeb20	                           jmp 0x400064f	      1091	mark.c	FUNCTION_26	IF_2	CALL_11
0x400062f	          0x4c01f0	                            add rax, r14	      1091	mark.c	FUNCTION_26	IF_2	CALL_11
0x4000632	    0x488981080300	            mov qword [rcx + 0x308], rax	      1091	mark.c	FUNCTION_26	IF_2	CALL_11
0x4000639	            0xeb14	                           jmp 0x400064f	      1091	mark.c	FUNCTION_26	IF_2	CALL_11
0x400063b	          0x4839c5	                            cmp rbp, rax	      1091	mark.c	FUNCTION_26	IF_2	CALL_11
0x400063e	            0x7d0f	                           jge 0x400064f	      1091	mark.c	FUNCTION_26	IF_2	CALL_11
0x4000640	          0x4d85ed	                           test r13, r13	      1091	mark.c	FUNCTION_26	IF_2	CALL_11
0x4000643	            0x740a	                            je 0x400064f	      1091	mark.c	FUNCTION_26	IF_2	CALL_11
0x4000645	          0x4c01e8	                            add rax, r13	      1091	mark.c	FUNCTION_26	IF_2	CALL_11
0x4000648	    0x488981080300	            mov qword [rcx + 0x308], rax	      1091	mark.c	FUNCTION_26	IF_2	CALL_11
0x400064f	          0x4d89e8	                             mov r8, r13	      1095	mark.c	FUNCTION_26	IF_2	CALL_12
0x4000652	          0x4c89f1	                            mov rcx, r14	      1095	mark.c	FUNCTION_26	IF_2	CALL_12
0x4000655	          0x4889ea	                            mov rdx, rbp	      1095	mark.c	FUNCTION_26	IF_2	CALL_12
0x4000658	          0x4c89e6	                            mov rsi, r12	      1095	mark.c	FUNCTION_26	IF_2	CALL_12
0x400065b	      0xbf00000000	                              mov edi, 0	      1095	mark.c	FUNCTION_26	IF_2	CALL_12
0x4000660	      0xe800000000	                          call 0x4000665	      1095	mark.c	FUNCTION_26	IF_2	CALL_12
0x4000665	    0x488b05000000	            mov rax, qword [0x0400066c] 	      1097	mark.c	FUNCTION_26	IF_2	CALL_13
0x400066c	      0x4889442408	                mov qword [rsp + 8], rax	      1097	mark.c	FUNCTION_26	IF_2	CALL_13
0x4000671	          0x4885c0	                           test rax, rax	      1097	mark.c	FUNCTION_26	IF_2	CALL_13
0x4000674	            0x744f	                            je 0x40006c5	      1097	mark.c	FUNCTION_26	IF_2	CALL_13
0x4000676	      0x488b442408	                mov rax, qword [rsp + 8]	      1097	mark.c	FUNCTION_26	IF_2	CALL_13
0x400067b	    0x483905000000	            cmp qword [0x04000682], rax 	      1097	mark.c	FUNCTION_26	IF_2	CALL_13
0x4000682	            0x7406	                            je 0x400068a	      1097	mark.c	FUNCTION_26	IF_2	CALL_13
0x4000684	        0x4c8b7820	            mov r15, qword [rax + 0x20] 	      1097	mark.c	FUNCTION_26	IF_2	CALL_13
0x4000688	            0xeb07	                           jmp 0x4000691	      1097	mark.c	FUNCTION_26	IF_2	CALL_13
0x400068a	    0x4c8b3d000000	            mov r15, qword [0x04000691] 	      1097	mark.c	FUNCTION_26	IF_2	CALL_13
0x4000691	          0x4d85ff	                           test r15, r15	      1097	mark.c	FUNCTION_26	IF_2	CALL_13
0x4000694	            0x741d	                            je 0x40006b3	      1097	mark.c	FUNCTION_26	IF_2	CALL_13
0x4000696	          0x4d89e8	                             mov r8, r13	      1098	mark.c	FUNCTION_26	IF_2	CALL_14
0x4000699	          0x4c89f1	                            mov rcx, r14	      1098	mark.c	FUNCTION_26	IF_2	CALL_14
0x400069c	          0x4889ea	                            mov rdx, rbp	      1098	mark.c	FUNCTION_26	IF_2	CALL_14
0x400069f	          0x4c89e6	                            mov rsi, r12	      1098	mark.c	FUNCTION_26	IF_2	CALL_14
0x40006a2	          0x4c89ff	                            mov rdi, r15	      1098	mark.c	FUNCTION_26	IF_2	CALL_14
0x40006a5	      0xe800000000	                          call 0x40006aa	      1098	mark.c	FUNCTION_26	IF_2	CALL_14
0x40006aa	        0x4d8b7f20	            mov r15, qword [r15 + 0x20] 	      1097	mark.c	FUNCTION_26	IF_2	CALL_13
0x40006ae	          0x4d85ff	                           test r15, r15	      1097	mark.c	FUNCTION_26	IF_2	CALL_13
0x40006b1	            0x75e3	                           jne 0x4000696	      1097	mark.c	FUNCTION_26	IF_2	CALL_13
0x40006b3	      0x488b442408	                mov rax, qword [rsp + 8]	      1097	mark.c	FUNCTION_26	IF_2	CALL_13
0x40006b8	          0x488b00	                    mov rax, qword [rax]	      1097	mark.c	FUNCTION_26	IF_2	CALL_13
0x40006bb	      0x4889442408	                mov qword [rsp + 8], rax	      1097	mark.c	FUNCTION_26	IF_2	CALL_13
0x40006c0	          0x4885c0	                           test rax, rax	      1097	mark.c	FUNCTION_26	IF_2	CALL_13
0x40006c3	            0x75b1	                           jne 0x4000676	      1097	mark.c	FUNCTION_26	IF_2	CALL_13
0x40006c5	          0x4c89e9	                            mov rcx, r13	      1102	mark.c	FUNCTION_26	IF_2	CALL_15
0x40006c8	          0x4c89f2	                            mov rdx, r14	      1102	mark.c	FUNCTION_26	IF_2	CALL_15
0x40006cb	          0x4889ee	                            mov rsi, rbp	      1102	mark.c	FUNCTION_26	IF_2	CALL_15
0x40006ce	          0x4c89e7	                            mov rdi, r12	      1102	mark.c	FUNCTION_26	IF_2	CALL_15
0x40006d1	      0xe800000000	                          call 0x40006d6	      1102	mark.c	FUNCTION_26	IF_2	CALL_15
0x40006d6	    0x488b15000000	            mov rdx, qword [0x040006dd] 	      1107	mark.c	FUNCTION_26	CALL_16
0x40006dd	    0x488b82800500	           mov rax, qword [rdx + 0x580] 	      1107	mark.c	FUNCTION_26	CALL_16
0x40006e4	          0x4839c5	                            cmp rbp, rax	      1107	mark.c	FUNCTION_26	CALL_16
0x40006e7	            0x7c49	                            jl 0x4000732	      1107	mark.c	FUNCTION_26	CALL_16
0x40006e9	          0x4939c4	                            cmp r12, rax	      1107	mark.c	FUNCTION_26	CALL_16
0x40006ec	            0x7f44	                            jg 0x4000732	      1107	mark.c	FUNCTION_26	CALL_16
0x40006ee	    0x4981feffffff	                     cmp r14, 0x7fffffff	      1107	mark.c	FUNCTION_26	CALL_16
0x40006f5	            0x751e	                           jne 0x4000715	      1107	mark.c	FUNCTION_26	CALL_16
0x40006f7	    0x48c782800500	              mov qword [rdx + 0x580], 0	      1107	mark.c	FUNCTION_26	CALL_16
0x4000702	    0x488b82900500	           mov rax, qword [rdx + 0x590] 	      1110	mark.c	FUNCTION_26	CALL_17
0x4000709	          0x4839c5	                            cmp rbp, rax	      1110	mark.c	FUNCTION_26	CALL_17
0x400070c	            0x7c6b	                            jl 0x4000779	      1110	mark.c	FUNCTION_26	CALL_17
0x400070e	          0x4939c4	                            cmp r12, rax	      1110	mark.c	FUNCTION_26	CALL_17
0x4000711	            0x7e4d	                           jle 0x4000760	      1110	mark.c	FUNCTION_26	CALL_17
0x4000713	            0xeb64	                           jmp 0x4000779	      1110	mark.c	FUNCTION_26	CALL_17
0x4000715	          0x4c01f0	                            add rax, r14	      1107	mark.c	FUNCTION_26	CALL_16
0x4000718	    0x488982800500	            mov qword [rdx + 0x580], rax	      1107	mark.c	FUNCTION_26	CALL_16
0x400071f	    0x488b82900500	           mov rax, qword [rdx + 0x590] 	      1110	mark.c	FUNCTION_26	CALL_17
0x4000726	          0x4839c5	                            cmp rbp, rax	      1110	mark.c	FUNCTION_26	CALL_17
0x4000729	            0x7c4e	                            jl 0x4000779	      1110	mark.c	FUNCTION_26	CALL_17
0x400072b	          0x4939c4	                            cmp r12, rax	      1110	mark.c	FUNCTION_26	CALL_17
0x400072e	            0x7e3d	                           jle 0x400076d	      1110	mark.c	FUNCTION_26	CALL_17
0x4000730	            0xeb47	                           jmp 0x4000779	      1110	mark.c	FUNCTION_26	CALL_17
0x4000732	          0x4839c5	                            cmp rbp, rax	      1107	mark.c	FUNCTION_26	CALL_16
0x4000735	            0x7d0f	                           jge 0x4000746	      1107	mark.c	FUNCTION_26	CALL_16
0x4000737	          0x4d85ed	                           test r13, r13	      1107	mark.c	FUNCTION_26	CALL_16
0x400073a	            0x740a	                            je 0x4000746	      1107	mark.c	FUNCTION_26	CALL_16
0x400073c	          0x4c01e8	                            add rax, r13	      1107	mark.c	FUNCTION_26	CALL_16
0x400073f	    0x488982800500	            mov qword [rdx + 0x580], rax	      1107	mark.c	FUNCTION_26	CALL_16
0x4000746	    0x488b82900500	           mov rax, qword [rdx + 0x590] 	      1110	mark.c	FUNCTION_26	CALL_17
0x400074d	          0x4839c5	                            cmp rbp, rax	      1110	mark.c	FUNCTION_26	CALL_17
0x4000750	            0x7c27	                            jl 0x4000779	      1110	mark.c	FUNCTION_26	CALL_17
0x4000752	          0x4939c4	                            cmp r12, rax	      1110	mark.c	FUNCTION_26	CALL_17
0x4000755	            0x7f22	                            jg 0x4000779	      1110	mark.c	FUNCTION_26	CALL_17
0x4000757	    0x4981feffffff	                     cmp r14, 0x7fffffff	      1110	mark.c	FUNCTION_26	CALL_17
0x400075e	            0x750d	                           jne 0x400076d	      1110	mark.c	FUNCTION_26	CALL_17
0x4000760	    0x48c782900500	              mov qword [rdx + 0x590], 0	      1110	mark.c	FUNCTION_26	CALL_17
0x400076b	            0xeb20	                           jmp 0x400078d	      1110	mark.c	FUNCTION_26	CALL_17
0x400076d	          0x4c01f0	                            add rax, r14	      1110	mark.c	FUNCTION_26	CALL_17
0x4000770	    0x488982900500	            mov qword [rdx + 0x590], rax	      1110	mark.c	FUNCTION_26	CALL_17
0x4000777	            0xeb14	                           jmp 0x400078d	      1110	mark.c	FUNCTION_26	CALL_17
0x4000779	          0x4839c5	                            cmp rbp, rax	      1110	mark.c	FUNCTION_26	CALL_17
0x400077c	            0x7d0f	                           jge 0x400078d	      1110	mark.c	FUNCTION_26	CALL_17
0x400077e	          0x4d85ed	                           test r13, r13	      1110	mark.c	FUNCTION_26	CALL_17
0x4000781	            0x740a	                            je 0x400078d	      1110	mark.c	FUNCTION_26	CALL_17
0x4000783	          0x4c01e8	                            add rax, r13	      1110	mark.c	FUNCTION_26	CALL_17
0x4000786	    0x488982900500	            mov qword [rdx + 0x590], rax	      1110	mark.c	FUNCTION_26	CALL_17
0x400078d	    0x488b05000000	            mov rax, qword [0x04000794] 	      1113	mark.c	FUNCTION_26	IF_6
0x4000794	          0x4885c0	                           test rax, rax	      1113	mark.c	FUNCTION_26	IF_6
0x4000797	            0x743c	                            je 0x40007d5	      1113	mark.c	FUNCTION_26	IF_6
0x4000799	          0x4839c5	                            cmp rbp, rax	      1114	mark.c	FUNCTION_26	CALL_18
0x400079c	            0x7c23	                            jl 0x40007c1	      1114	mark.c	FUNCTION_26	CALL_18
0x400079e	          0x4939c4	                            cmp r12, rax	      1114	mark.c	FUNCTION_26	CALL_18
0x40007a1	            0x7f1e	                            jg 0x40007c1	      1114	mark.c	FUNCTION_26	CALL_18
0x40007a3	    0x4981feffffff	                     cmp r14, 0x7fffffff	      1114	mark.c	FUNCTION_26	CALL_18
0x40007aa	            0x7509	                           jne 0x40007b5	      1114	mark.c	FUNCTION_26	CALL_18
0x40007ac	    0x4c8925000000	            mov qword [0x040007b3], r12 	      1114	mark.c	FUNCTION_26	CALL_18
0x40007b3	            0xeb20	                           jmp 0x40007d5	      1114	mark.c	FUNCTION_26	CALL_18
0x40007b5	          0x4c01f0	                            add rax, r14	      1114	mark.c	FUNCTION_26	CALL_18
0x40007b8	    0x488905000000	            mov qword [0x040007bf], rax 	      1114	mark.c	FUNCTION_26	CALL_18
0x40007bf	            0xeb14	                           jmp 0x40007d5	      1114	mark.c	FUNCTION_26	CALL_18
0x40007c1	          0x4839c5	                            cmp rbp, rax	      1114	mark.c	FUNCTION_26	CALL_18
0x40007c4	            0x7d0f	                           jge 0x40007d5	      1114	mark.c	FUNCTION_26	CALL_18
0x40007c6	          0x4d85ed	                           test r13, r13	      1114	mark.c	FUNCTION_26	CALL_18
0x40007c9	            0x740a	                            je 0x40007d5	      1114	mark.c	FUNCTION_26	CALL_18
0x40007cb	          0x4c01e8	                            add rax, r13	      1114	mark.c	FUNCTION_26	CALL_18
0x40007ce	    0x488905000000	            mov qword [0x040007d5], rax 	      1114	mark.c	FUNCTION_26	CALL_18
0x40007d5	    0x488b05000000	            mov rax, qword [0x040007dc] 	      1119	mark.c	FUNCTION_26
0x40007dc	      0x4889442408	                mov qword [rsp + 8], rax	      1119	mark.c	FUNCTION_26
0x40007e1	          0x4885c0	                           test rax, rax	      1119	mark.c	FUNCTION_26
0x40007e4	     0xf8496020000	                            je 0x4000a80	      1119	mark.c	FUNCTION_26
0x40007ea	      0x498d4424ff	                      lea rax, [r12 - 1]	      1178	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12	IF_13	ELSE_4
0x40007ef	      0x4889442418	             mov qword [rsp + 0x18], rax	      1178	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12	IF_13	ELSE_4
0x40007f4	      0x488b442408	                mov rax, qword [rsp + 8]	      1119	mark.c	FUNCTION_26
0x40007f9	    0x483905000000	            cmp qword [0x04000800], rax 	      1119	mark.c	FUNCTION_26
0x4000800	            0x7406	                            je 0x4000808	      1119	mark.c	FUNCTION_26
0x4000802	        0x4c8b7820	            mov r15, qword [rax + 0x20] 	      1119	mark.c	FUNCTION_26
0x4000806	            0xeb07	                           jmp 0x400080f	      1119	mark.c	FUNCTION_26
0x4000808	    0x4c8b3d000000	            mov r15, qword [0x0400080f] 	      1119	mark.c	FUNCTION_26
0x400080f	          0x4d85ff	                           test r15, r15	      1119	mark.c	FUNCTION_26
0x4000812	     0xf8452020000	                            je 0x4000a6a	      1119	mark.c	FUNCTION_26
0x4000818	    0x833d00000000	               cmp dword [0x0400081f], 0	      1122	mark.c	FUNCTION_26	FUNCTION_1	IF_1
0x400081f	     0xf8580020000	                           jne 0x4000aa5	      1122	mark.c	FUNCTION_26	FUNCTION_1	IF_1
0x4000825	    0x418b97401500	          mov edx, dword [r15 + 0x1540] 	      1125	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1
0x400082c	            0x85d2	                           test edx, edx	      1125	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1
0x400082e	     0xf8e5f020000	                           jle 0x4000a93	      1125	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1
0x4000834	    0x498d87a00500	                  lea rax, [r15 + 0x5a0]	      1125	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1
0x400083b	          0x8d52ff	                      lea edx, [rdx - 1]	      1125	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1
0x400083e	        0x488d1492	                  lea rdx, [rdx + rdx*4]	      1125	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1
0x4000842	    0x498db4d7c805	         lea rsi, [r15 + rdx*8 + 0x5c8] 	      1125	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1
0x400084a	          0x4889c1	                            mov rcx, rax	      1125	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1
0x400084d	          0x3b5810	            cmp ebx, dword [rax + 0x10] 	      1126	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x4000850	            0x7533	                           jne 0x4000885	      1126	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x4000852	          0x488b10	                    mov rdx, qword [rax]	      1127	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x4000855	          0x4839d5	                            cmp rbp, rdx	      1127	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x4000858	            0x7c1b	                            jl 0x4000875	      1127	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x400085a	          0x4939d4	                            cmp r12, rdx	      1127	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x400085d	            0x7f16	                            jg 0x4000875	      1127	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x400085f	    0x4981feffffff	                     cmp r14, 0x7fffffff	      1127	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x4000866	            0x7505	                           jne 0x400086d	      1127	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x4000868	          0x4c8920	                    mov qword [rax], r12	      1127	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x400086b	            0xeb18	                           jmp 0x4000885	      1127	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x400086d	          0x4c01f2	                            add rdx, r14	      1127	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x4000870	          0x488910	                    mov qword [rax], rdx	      1127	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x4000873	            0xeb10	                           jmp 0x4000885	      1127	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x4000875	          0x4839d5	                            cmp rbp, rdx	      1127	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x4000878	            0x7d0b	                           jge 0x4000885	      1127	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x400087a	          0x4d85ed	                           test r13, r13	      1127	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x400087d	            0x7406	                            je 0x4000885	      1127	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x400087f	          0x4c01ea	                            add rdx, r13	      1127	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x4000882	          0x488911	                    mov qword [rcx], rdx	      1127	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x4000885	        0x4883c028	                           add rax, 0x28	      1127	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x4000889	          0x4839c6	                            cmp rsi, rax	      1125	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1
0x400088c	            0x75bc	                           jne 0x400084a	      1125	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1
0x400088e	      0xe900020000	                           jmp 0x4000a93	      1125	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1
0x4000893	    0x418b97841800	          mov edx, dword [r15 + 0x1884] 	      1134	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2
0x400089a	            0x85d2	                           test edx, edx	      1134	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2
0x400089c	            0x7e5a	                           jle 0x40008f8	      1134	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2
0x400089e	    0x498d87681500	                 lea rax, [r15 + 0x1568]	      1134	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2
0x40008a5	          0x8d52ff	                      lea edx, [rdx - 1]	      1134	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2
0x40008a8	        0x488d1492	                  lea rdx, [rdx + rdx*4]	      1134	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2
0x40008ac	    0x498d8cd79015	         lea rcx, [r15 + rdx*8 + 0x1590]	      1134	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2
0x40008b4	          0x4889c2	                            mov rdx, rax	      1134	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2
0x40008b7	          0x3b5810	            cmp ebx, dword [rax + 0x10] 	      1135	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x40008ba	            0x7533	                           jne 0x40008ef	      1135	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x40008bc	          0x488b30	                    mov rsi, qword [rax]	      1136	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x40008bf	          0x4839f5	                            cmp rbp, rsi	      1136	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x40008c2	            0x7c1b	                            jl 0x40008df	      1136	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x40008c4	          0x4939f4	                            cmp r12, rsi	      1136	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x40008c7	            0x7f16	                            jg 0x40008df	      1136	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x40008c9	    0x4981feffffff	                     cmp r14, 0x7fffffff	      1136	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x40008d0	            0x7505	                           jne 0x40008d7	      1136	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x40008d2	          0x4c8920	                    mov qword [rax], r12	      1136	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x40008d5	            0xeb18	                           jmp 0x40008ef	      1136	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x40008d7	          0x4c01f6	                            add rsi, r14	      1136	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x40008da	          0x488930	                    mov qword [rax], rsi	      1136	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x40008dd	            0xeb10	                           jmp 0x40008ef	      1136	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x40008df	          0x4839f5	                            cmp rbp, rsi	      1136	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x40008e2	            0x7d0b	                           jge 0x40008ef	      1136	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x40008e4	          0x4d85ed	                           test r13, r13	      1136	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x40008e7	            0x7406	                            je 0x40008ef	      1136	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x40008e9	          0x4c01ee	                            add rsi, r13	      1136	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x40008ec	          0x488932	                    mov qword [rdx], rsi	      1136	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x40008ef	        0x4883c028	                           add rax, 0x28	      1136	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x40008f3	          0x4839c1	                            cmp rcx, rax	      1134	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2
0x40008f6	            0x75bc	                           jne 0x40008b4	      1134	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2
0x40008f8	        0x498b4758	            mov rax, qword [r15 + 0x58] 	      1139	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6
0x40008fc	          0x4885c0	                           test rax, rax	      1139	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6
0x40008ff	     0xf8486000000	                            je 0x400098b	      1139	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6
0x4000905	          0x4839c5	                            cmp rbp, rax	      1141	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x4000908	            0x7c39	                            jl 0x4000943	      1141	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x400090a	          0x4939c4	                            cmp r12, rax	      1141	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x400090d	            0x7f34	                            jg 0x4000943	      1141	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x400090f	    0x4981feffffff	                     cmp r14, 0x7fffffff	      1141	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x4000916	            0x7514	                           jne 0x400092c	      1141	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x4000918	        0x4d896758	             mov qword [r15 + 0x58], r12	      1141	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x400091c	        0x498b4768	            mov rax, qword [r15 + 0x68] 	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x4000920	          0x4839c5	                            cmp rbp, rax	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x4000923	            0x7c55	                            jl 0x400097a	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x4000925	          0x4939c4	                            cmp r12, rax	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x4000928	            0x7e41	                           jle 0x400096b	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x400092a	            0xeb4e	                           jmp 0x400097a	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x400092c	          0x4c01f0	                            add rax, r14	      1141	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x400092f	        0x49894758	             mov qword [r15 + 0x58], rax	      1141	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x4000933	        0x498b4768	            mov rax, qword [r15 + 0x68] 	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x4000937	          0x4839c5	                            cmp rbp, rax	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x400093a	            0x7c3e	                            jl 0x400097a	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x400093c	          0x4939c4	                            cmp r12, rax	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x400093f	            0x7e30	                           jle 0x4000971	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x4000941	            0xeb37	                           jmp 0x400097a	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x4000943	          0x4839c5	                            cmp rbp, rax	      1141	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x4000946	            0x7d0c	                           jge 0x4000954	      1141	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x4000948	          0x4d85ed	                           test r13, r13	      1141	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x400094b	            0x7407	                            je 0x4000954	      1141	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x400094d	          0x4c01e8	                            add rax, r13	      1141	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x4000950	        0x49894758	             mov qword [r15 + 0x58], rax	      1141	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x4000954	        0x498b4768	            mov rax, qword [r15 + 0x68] 	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x4000958	          0x4839c5	                            cmp rbp, rax	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x400095b	            0x7c1d	                            jl 0x400097a	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x400095d	          0x4939c4	                            cmp r12, rax	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x4000960	            0x7f18	                            jg 0x400097a	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x4000962	    0x4981feffffff	                     cmp r14, 0x7fffffff	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x4000969	            0x7506	                           jne 0x4000971	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x400096b	        0x4d896768	             mov qword [r15 + 0x68], r12	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x400096f	            0xeb1a	                           jmp 0x400098b	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x4000971	          0x4c01f0	                            add rax, r14	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x4000974	        0x49894768	             mov qword [r15 + 0x68], rax	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x4000978	            0xeb11	                           jmp 0x400098b	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x400097a	          0x4839c5	                            cmp rbp, rax	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x400097d	            0x7d0c	                           jge 0x400098b	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x400097f	          0x4d85ed	                           test r13, r13	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x4000982	            0x7407	                            je 0x400098b	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x4000984	          0x4c01e8	                            add rax, r13	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x4000987	        0x49894768	             mov qword [r15 + 0x68], rax	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x400098b	    0x4c393d000000	            cmp qword [0x04000992], r15 	      1147	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7
0x4000992	     0xf84aa000000	                            je 0x4000a42	      1147	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7
0x4000998	        0x498b4778	            mov rax, qword [r15 + 0x78] 	      1149	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_8
0x400099c	          0x4839c5	                            cmp rbp, rax	      1149	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_8
0x400099f	            0x7c37	                            jl 0x40009d8	      1149	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_8
0x40009a1	          0x4939c4	                            cmp r12, rax	      1149	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_8
0x40009a4	            0x7f32	                            jg 0x40009d8	      1149	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_8
0x40009a6	    0x4981feffffff	                     cmp r14, 0x7fffffff	      1151	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_8	IF_9
0x40009ad	            0x7515	                           jne 0x40009c4	      1151	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_8	IF_9
0x40009af	        0x4983fc01	                              cmp r12, 1	      1153	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_8	IF_9	IF_10
0x40009b3	      0xb801000000	                              mov eax, 1	      1154	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_8	IF_9	IF_10
0x40009b8	    0x480f4f442418	           cmovg rax, qword [rsp + 0x18]	      1154	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_8	IF_9	IF_10
0x40009be	        0x49894778	             mov qword [r15 + 0x78], rax	      1154	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_8	IF_9	IF_10
0x40009c2	            0xeb07	                           jmp 0x40009cb	      1154	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_8	IF_9	IF_10
0x40009c4	          0x4c01f0	                            add rax, r14	      1159	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_8	ELSE_1	ELSE_2
0x40009c7	        0x49894778	             mov qword [r15 + 0x78], rax	      1159	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_8	ELSE_1	ELSE_2
0x40009cb	    0x41c787840000	               mov dword [r15 + 0x84], 0	      1161	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_8	ELSE_1	ELSE_2
0x40009d6	            0xeb1c	                           jmp 0x40009f4	      1161	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_8	ELSE_1	ELSE_2
0x40009d8	          0x4839c5	                            cmp rbp, rax	      1164	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	ELSE_1	ELSE_2	ELSE_3	IF_11
0x40009db	            0x7d17	                           jge 0x40009f4	      1164	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	ELSE_1	ELSE_2	ELSE_3	IF_11
0x40009dd	          0x4d85ed	                           test r13, r13	      1164	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	ELSE_1	ELSE_2	ELSE_3	IF_11
0x40009e0	            0x7412	                            je 0x40009f4	      1164	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	ELSE_1	ELSE_2	ELSE_3	IF_11
0x40009e2	          0x4c01e8	                            add rax, r13	      1166	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	ELSE_1	ELSE_2	ELSE_3	IF_11
0x40009e5	        0x49894778	             mov qword [r15 + 0x78], rax	      1166	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	ELSE_1	ELSE_2	ELSE_3	IF_11
0x40009e9	    0x41c787840000	               mov dword [r15 + 0x84], 0	      1168	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	ELSE_1	ELSE_2	ELSE_3	IF_11
0x40009f4	        0x498b4738	            mov rax, qword [r15 + 0x38] 	      1171	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12
0x40009f8	          0x4839c5	                            cmp rbp, rax	      1171	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12
0x40009fb	            0x7c34	                            jl 0x4000a31	      1171	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12
0x40009fd	          0x4939c4	                            cmp r12, rax	      1171	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12
0x4000a00	            0x7f2f	                            jg 0x4000a31	      1171	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12
0x4000a02	    0x4981feffffff	                     cmp r14, 0x7fffffff	      1173	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12	IF_13
0x4000a09	            0x751d	                           jne 0x4000a28	      1173	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12	IF_13
0x4000a0b	        0x4983fc01	                              cmp r12, 1	      1175	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12	IF_13	IF_14
0x4000a0f	      0xb801000000	                              mov eax, 1	      1176	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12	IF_13	IF_14
0x4000a14	    0x480f4f442418	           cmovg rax, qword [rsp + 0x18]	      1176	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12	IF_13	IF_14
0x4000a1a	        0x49894738	             mov qword [r15 + 0x38], rax	      1176	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12	IF_13	IF_14
0x4000a1e	    0x41c747400000	               mov dword [r15 + 0x40], 0	      1179	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12	IF_13
0x4000a26	            0xeb1a	                           jmp 0x4000a42	      1179	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12	IF_13
0x4000a28	          0x4c01f0	                            add rax, r14	      1182	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12	ELSE_5
0x4000a2b	        0x49894738	             mov qword [r15 + 0x38], rax	      1182	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12	ELSE_5
0x4000a2f	            0xeb11	                           jmp 0x4000a42	      1182	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12	ELSE_5
0x4000a31	          0x4839c5	                            cmp rbp, rax	      1184	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	ELSE_6	IF_15
0x4000a34	            0x7d0c	                           jge 0x4000a42	      1184	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	ELSE_6	IF_15
0x4000a36	          0x4d85ed	                           test r13, r13	      1184	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	ELSE_6	IF_15
0x4000a39	            0x7407	                            je 0x4000a42	      1184	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	ELSE_6	IF_15
0x4000a3b	          0x4c01e8	                            add rax, r13	      1185	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	ELSE_6	IF_15
0x4000a3e	        0x49894738	             mov qword [r15 + 0x38], rax	      1185	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	ELSE_6	IF_15
0x4000a42	      0x837c241400	               cmp dword [rsp + 0x14], 0	      1190	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_16
0x4000a47	            0x7414	                            je 0x4000a5d	      1190	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_16
0x4000a49	          0x4d89e8	                             mov r8, r13	      1191	mark.c	FUNCTION_26	FUNCTION_1	IF_3	CALL_5
0x4000a4c	          0x4c89f1	                            mov rcx, r14	      1191	mark.c	FUNCTION_26	FUNCTION_1	IF_3	CALL_5
0x4000a4f	          0x4889ea	                            mov rdx, rbp	      1191	mark.c	FUNCTION_26	FUNCTION_1	IF_3	CALL_5
0x4000a52	          0x4c89e6	                            mov rsi, r12	      1191	mark.c	FUNCTION_26	FUNCTION_1	IF_3	CALL_5
0x4000a55	          0x4c89ff	                            mov rdi, r15	      1191	mark.c	FUNCTION_26	FUNCTION_1	IF_3	CALL_5
0x4000a58	      0xe800000000	                          call 0x4000a5d	      1191	mark.c	FUNCTION_26	FUNCTION_1	IF_3	CALL_5
0x4000a5d	        0x4d8b7f20	            mov r15, qword [r15 + 0x20] 	      1119	mark.c	FUNCTION_26
0x4000a61	          0x4d85ff	                           test r15, r15	      1119	mark.c	FUNCTION_26
0x4000a64	     0xf85aefdffff	                           jne 0x4000818	      1119	mark.c	FUNCTION_26
0x4000a6a	      0x488b442408	                mov rax, qword [rsp + 8]	      1119	mark.c	FUNCTION_26
0x4000a6f	          0x488b00	                    mov rax, qword [rax]	      1119	mark.c	FUNCTION_26
0x4000a72	      0x4889442408	                mov qword [rsp + 8], rax	      1119	mark.c	FUNCTION_26
0x4000a77	          0x4885c0	                           test rax, rax	      1119	mark.c	FUNCTION_26
0x4000a7a	     0xf8574fdffff	                           jne 0x40007f4	      1119	mark.c	FUNCTION_26
0x4000a80	          0x4c89e9	                            mov rcx, r13	      1198	mark.c	FUNCTION_26	CALL_19
0x4000a83	          0x4c89f2	                            mov rdx, r14	      1198	mark.c	FUNCTION_26	CALL_19
0x4000a86	          0x4889ee	                            mov rsi, rbp	      1198	mark.c	FUNCTION_26	CALL_19
0x4000a89	          0x4c89e7	                            mov rdi, r12	      1198	mark.c	FUNCTION_26	CALL_19
0x4000a8c	      0xe800000000	                          call 0x4000a91	      1198	mark.c	FUNCTION_26	CALL_19
0x4000a91	            0xeb24	                           jmp 0x4000ab7	      1198	mark.c	FUNCTION_26	CALL_19
0x4000a93	    0x488b05000000	            mov rax, qword [0x04000a9a] 	      1130	mark.c	FUNCTION_26	FUNCTION_1	IF_3
0x4000a9a	        0x49394708	                cmp qword [r15 + 8], rax	      1130	mark.c	FUNCTION_26	FUNCTION_1	IF_3
0x4000a9e	            0x75bd	                           jne 0x4000a5d	      1130	mark.c	FUNCTION_26	FUNCTION_1	IF_3
0x4000aa0	      0xe9eefdffff	                           jmp 0x4000893	      1130	mark.c	FUNCTION_26	FUNCTION_1	IF_3
0x4000aa5	    0x488b05000000	            mov rax, qword [0x04000aac] 	      1130	mark.c	FUNCTION_26	FUNCTION_1	IF_3
0x4000aac	        0x49394708	                cmp qword [r15 + 8], rax	      1130	mark.c	FUNCTION_26	FUNCTION_1	IF_3
0x4000ab0	            0x75ab	                           jne 0x4000a5d	      1130	mark.c	FUNCTION_26	FUNCTION_1	IF_3
0x4000ab2	      0xe941feffff	                           jmp 0x40008f8	      1130	mark.c	FUNCTION_26	FUNCTION_1	IF_3
0x4000ab7	        0x4883c428	                           add rsp, 0x28	      1200	mark.c	FUNCTION_26
0x4000abb	              0x5b	                                 pop rbx	      1200	mark.c	FUNCTION_26
0x4000abc	              0x5d	                                 pop rbp	      1200	mark.c	FUNCTION_26
0x4000abd	            0x415c	                                 pop r12	      1200	mark.c	FUNCTION_26
0x4000abf	            0x415d	                                 pop r13	      1200	mark.c	FUNCTION_26
0x4000ac1	            0x415e	                                 pop r14	      1200	mark.c	FUNCTION_26
0x4000ac3	            0x415f	                                 pop r15	      1200	mark.c	FUNCTION_26
0x4000ac5	              0xc3	                                     ret	      1200	mark.c	FUNCTION_26
fm_getname	DO,0:FOR,0:WHILE,0:ELSE,0:functions,0:IF,1:CALL,2:SWITCH,0	13
0x4001a03	        0x4883ec08	                              sub rsp, 8	       671	mark.c	FUNCTION_16
0x4001a07	          0x8b4710	            mov eax, dword [rdi + 0x10] 	       672	mark.c	FUNCTION_16	IF_1
0x4001a0a	    0x488b15000000	            mov rdx, qword [0x04001a11] 	       672	mark.c	FUNCTION_16	IF_1
0x4001a11	    0x3b82b8000000	            cmp eax, dword [rdx + 0xb8] 	       672	mark.c	FUNCTION_16	IF_1
0x4001a17	            0x7507	                           jne 0x4001a20	       672	mark.c	FUNCTION_16	IF_1
0x4001a19	      0xe8a3e6ffff	                      call sym.mark_line	       673	mark.c	FUNCTION_16	CALL_1
0x4001a1e	            0xeb11	                           jmp 0x4001a31	       673	mark.c	FUNCTION_16	CALL_1
0x4001a20	      0xba01000000	                              mov edx, 1	       674	mark.c	FUNCTION_16	CALL_2
0x4001a25	      0xbe00000000	                              mov esi, 0	       674	mark.c	FUNCTION_16	CALL_2
0x4001a2a	            0x89c7	                            mov edi, eax	       674	mark.c	FUNCTION_16	CALL_2
0x4001a2c	      0xe800000000	                          call 0x4001a31	       674	mark.c	FUNCTION_16	CALL_2
0x4001a31	        0x4883c408	                              add rsp, 8	       675	mark.c	FUNCTION_16
0x4001a35	              0xc3	                                     ret	       675	mark.c	FUNCTION_16
getmark	DO,0:FOR,0:WHILE,0:ELSE,0:functions,0:IF,0:CALL,1:SWITCH,0	8
0x40017f6	        0x4883ec08	                              sub rsp, 8	       324	mark.c	FUNCTION_8
0x40017fa	            0x89f2	                            mov edx, esi	       324	mark.c	FUNCTION_8
0x40017fc	      0xb900000000	                              mov ecx, 0	       325	mark.c	FUNCTION_8	CALL_1
0x4001801	            0x89fe	                            mov esi, edi	       325	mark.c	FUNCTION_8	CALL_1
0x4001803	    0x488b3d000000	            mov rdi, qword [0x0400180a] 	       325	mark.c	FUNCTION_8	CALL_1
0x400180a	      0xe800000000	                          call 0x400180f	       325	mark.c	FUNCTION_8	CALL_1
0x400180f	        0x4883c408	                              add rsp, 8	       326	mark.c	FUNCTION_8
0x4001813	              0xc3	                                     ret	       326	mark.c	FUNCTION_8
write_one_mark	DO,0:FOR,0:WHILE,0:ELSE,0:functions,0:IF,1:CALL,1:SWITCH,0	12
0x4000ac6	          0x4c8b02	                     mov r8, qword [rdx]	      1850	mark.c	FUNCTION_41	IF_1
0x4000ac9	          0x4d85c0	                             test r8, r8	      1850	mark.c	FUNCTION_41	IF_1
0x4000acc	            0x7422	                            je 0x4000af0	      1850	mark.c	FUNCTION_41	IF_1
0x4000ace	        0x4883ec08	                              sub rsp, 8	      1849	mark.c	FUNCTION_41
0x4000ad2	            0x89f1	                            mov ecx, esi	      1849	mark.c	FUNCTION_41
0x4000ad4	        0x448b4a08	                mov r9d, dword [rdx + 8]	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000ad8	      0xba00000000	                              mov edx, 0	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000add	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000ae2	      0xb800000000	                              mov eax, 0	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000ae7	      0xe800000000	                          call 0x4000aec	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000aec	        0x4883c408	                              add rsp, 8	      1852	mark.c	FUNCTION_41
0x4000af0	            0xf3c3	                                     ret	      1852	mark.c	FUNCTION_41
ex_clearjumps	DO,0:FOR,0:WHILE,0:ELSE,0:functions,0:IF,0:CALL,1:SWITCH,0	8
0x4002a96	        0x4883ec08	                              sub rsp, 8	       933	mark.c	FUNCTION_22
0x4002a9a	    0x488b3d000000	            mov rdi, qword [0x04002aa1] 	       934	mark.c	FUNCTION_22	CALL_1
0x4002aa1	      0xe800000000	                          call 0x4002aa6	       934	mark.c	FUNCTION_22	CALL_1
0x4002aa6	    0x488b05000000	            mov rax, qword [0x04002aad] 	       935	mark.c	FUNCTION_22
0x4002aad	    0xc78040150000	            mov dword [rax + 0x1540], 0 	       935	mark.c	FUNCTION_22
0x4002ab7	    0xc78044150000	            mov dword [rax + 0x1544], 0 	       936	mark.c	FUNCTION_22
0x4002ac1	        0x4883c408	                              add rsp, 8	       937	mark.c	FUNCTION_22
0x4002ac5	              0xc3	                                     ret	       937	mark.c	FUNCTION_22
handle_viminfo_mark	DO,0:FOR,5:WHILE,0:ELSE,9:functions,0:IF,20:CALL,7:SWITCH,0	279
0x4002e0b	          0x833f04	                      cmp dword [rdi], 4	      1517	mark.c	FUNCTION_36	IF_1
0x4002e0e	     0xf8eaf040000	                           jle 0x40032c3	      1517	mark.c	FUNCTION_36	IF_1
0x4002e14	            0x4157	                                push r15	      1507	mark.c	FUNCTION_36
0x4002e16	            0x4156	                                push r14	      1507	mark.c	FUNCTION_36
0x4002e18	            0x4155	                                push r13	      1507	mark.c	FUNCTION_36
0x4002e1a	            0x4154	                                push r12	      1507	mark.c	FUNCTION_36
0x4002e1c	              0x55	                                push rbp	      1507	mark.c	FUNCTION_36
0x4002e1d	              0x53	                                push rbx	      1507	mark.c	FUNCTION_36
0x4002e1e	        0x4883ec18	                           sub rsp, 0x18	      1507	mark.c	FUNCTION_36
0x4002e22	        0x488b5f10	            mov rbx, qword [rdi + 0x10] 	      1508	mark.c	FUNCTION_36
0x4002e26	          0x833b00	                      cmp dword [rbx], 0	      1518	mark.c	FUNCTION_36	IF_1
0x4002e29	     0xf8586040000	                           jne 0x40032b5	      1518	mark.c	FUNCTION_36	IF_1
0x4002e2f	        0x837b2000	               cmp dword [rbx + 0x20], 0	      1519	mark.c	FUNCTION_36	IF_1
0x4002e33	     0xf857c040000	                           jne 0x40032b5	      1519	mark.c	FUNCTION_36	IF_1
0x4002e39	        0x837b4000	               cmp dword [rbx + 0x40], 0	      1520	mark.c	FUNCTION_36	IF_1
0x4002e3d	     0xf8572040000	                           jne 0x40032b5	      1520	mark.c	FUNCTION_36	IF_1
0x4002e43	        0x837b6000	               cmp dword [rbx + 0x60], 0	      1521	mark.c	FUNCTION_36	IF_1
0x4002e47	     0xf8568040000	                           jne 0x40032b5	      1521	mark.c	FUNCTION_36	IF_1
0x4002e4d	    0x83bb80000000	               cmp dword [rbx + 0x80], 1	      1522	mark.c	FUNCTION_36	IF_1
0x4002e54	     0xf855b040000	                           jne 0x40032b5	      1522	mark.c	FUNCTION_36	IF_1
0x4002e5a	        0x4c8b6b08	                mov r13, qword [rbx + 8]	      1525	mark.c	FUNCTION_36
0x4002e5e	        0x418d45d0	                   lea eax, [r13 - 0x30]	      1526	mark.c	FUNCTION_36	IF_2	CALL_2
0x4002e62	        0x4183fd27	                          cmp r13d, 0x27	      1526	mark.c	FUNCTION_36	IF_2	CALL_2
0x4002e66	            0x7412	                            je 0x4002e7a	      1526	mark.c	FUNCTION_36	IF_2	CALL_2
0x4002e68	          0x83f809	                              cmp eax, 9	      1526	mark.c	FUNCTION_36	IF_2	CALL_2
0x4002e6b	            0x760d	                           jbe 0x4002e7a	      1526	mark.c	FUNCTION_36	IF_2	CALL_2
0x4002e6d	        0x418d55bf	                   lea edx, [r13 - 0x41]	      1526	mark.c	FUNCTION_36	IF_2	CALL_2
0x4002e71	          0x83fa19	                           cmp edx, 0x19	      1526	mark.c	FUNCTION_36	IF_2	CALL_2
0x4002e74	     0xf873b040000	                            ja 0x40032b5	      1526	mark.c	FUNCTION_36	IF_2	CALL_2
0x4002e7a	        0x4c8b6328	            mov r12, qword [rbx + 0x28] 	      1528	mark.c	FUNCTION_36
0x4002e7e	        0x4c8b7348	            mov r14, qword [rbx + 0x48] 	      1529	mark.c	FUNCTION_36
0x4002e82	          0x4d85e4	                           test r12, r12	      1530	mark.c	FUNCTION_36	IF_3
0x4002e85	     0xf8e2a040000	                           jle 0x40032b5	      1530	mark.c	FUNCTION_36	IF_3
0x4002e8b	          0x4489f2	                           mov edx, r14d	      1530	mark.c	FUNCTION_36	IF_3
0x4002e8e	          0xc1ea1f	                           shr edx, 0x1f	      1530	mark.c	FUNCTION_36	IF_3
0x4002e91	            0x84d2	                             test dl, dl	      1530	mark.c	FUNCTION_36	IF_3
0x4002e93	     0xf851c040000	                           jne 0x40032b5	      1530	mark.c	FUNCTION_36	IF_3
0x4002e99	            0x89f5	                            mov ebp, esi	      1530	mark.c	FUNCTION_36	IF_3
0x4002e9b	        0x4c8b7b68	            mov r15, qword [rbx + 0x68] 	      1532	mark.c	FUNCTION_36
0x4002e9f	        0x4183fd27	                          cmp r13d, 0x27	      1534	mark.c	FUNCTION_36	IF_4
0x4002ea3	     0xf8525020000	                           jne 0x40030ce	      1534	mark.c	FUNCTION_36	IF_4
0x4002ea9	    0x488b15000000	            mov rdx, qword [0x04002eb0] 	      1537	mark.c	FUNCTION_36	IF_4	IF_5
0x4002eb0	          0x4885d2	                           test rdx, rdx	      1537	mark.c	FUNCTION_36	IF_4	IF_5
0x4002eb3	            0x7427	                            je 0x4002edc	      1537	mark.c	FUNCTION_36	IF_4	IF_5
0x4002eb5	    0x8b0500000000	            mov eax, dword [0x04002ebb] 	      1539	mark.c	FUNCTION_36	IF_4	IF_5	IF_6
0x4002ebb	          0x83f863	                           cmp eax, 0x63	      1539	mark.c	FUNCTION_36	IF_4	IF_5	IF_6
0x4002ebe	     0xf8ff1030000	                            jg 0x40032b5	      1539	mark.c	FUNCTION_36	IF_4	IF_5	IF_6
0x4002ec4	          0x8d4801	                      lea ecx, [rax + 1]	      1540	mark.c	FUNCTION_36	IF_4	IF_5	IF_6
0x4002ec7	    0x890d00000000	            mov dword [0x04002ecd], ecx 	      1540	mark.c	FUNCTION_36	IF_4	IF_5	IF_6
0x4002ecd	            0x4898	                                    cdqe	      1540	mark.c	FUNCTION_36	IF_4	IF_5	IF_6
0x4002ecf	        0x488d0480	                  lea rax, [rax + rax*4]	      1540	mark.c	FUNCTION_36	IF_4	IF_5	IF_6
0x4002ed3	        0x4c8d2cc2	                  lea r13, [rdx + rax*8]	      1540	mark.c	FUNCTION_36	IF_4	IF_5	IF_6
0x4002ed7	      0xe9ef020000	                           jmp 0x40031cb	      1540	mark.c	FUNCTION_36	IF_4	IF_5	IF_6
0x4002edc	          0x4d85ff	                           test r15, r15	      1548	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7
0x4002edf	            0x7466	                            je 0x4002f47	      1548	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7
0x4002ee1	    0x488b15000000	            mov rdx, qword [0x04002ee8] 	      1550	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	FOR_1
0x4002ee8	    0x8b8a40150000	          mov ecx, dword [rdx + 0x1540] 	      1550	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	FOR_1
0x4002eee	          0x4189cd	                           mov r13d, ecx	      1550	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	FOR_1
0x4002ef1	        0x4183ed01	                             sub r13d, 1	      1550	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	FOR_1
0x4002ef5	     0xf8850030000	                            js 0x400324b	      1550	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	FOR_1
0x4002efb	          0x4963c5	                        movsxd rax, r13d	      1551	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	FOR_1	IF_8
0x4002efe	        0x486bc028	                     imul rax, rax, 0x28	      1551	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	FOR_1	IF_8
0x4002f02	    0x4c3bbc02c005	     cmp r15, qword [rdx + rax + 0x5c0] 	      1551	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	FOR_1	IF_8
0x4002f0a	            0x7e2c	                           jle 0x4002f38	      1551	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	FOR_1	IF_8
0x4002f0c	            0xeb11	                           jmp 0x4002f1f	      1551	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	FOR_1	IF_8
0x4002f0e	          0x4963c5	                        movsxd rax, r13d	      1551	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	FOR_1	IF_8
0x4002f11	        0x488d0480	                  lea rax, [rax + rax*4]	      1551	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	FOR_1	IF_8
0x4002f15	    0x4c3bbcc2c005	   cmp r15, qword [rdx + rax*8 + 0x5c0] 	      1551	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	FOR_1	IF_8
0x4002f1d	            0x7e19	                           jle 0x4002f38	      1551	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	FOR_1	IF_8
0x4002f1f	        0x4183c501	                             add r13d, 1	      1553	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	FOR_1	IF_8
0x4002f23	          0x83f963	                           cmp ecx, 0x63	      1557	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	IF_9
0x4002f26	            0x7f38	                            jg 0x4002f60	      1557	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	IF_9
0x4002f28	          0x4489e8	                           mov eax, r13d	      1557	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	IF_9
0x4002f2b	          0xc1e81f	                           shr eax, 0x1f	      1557	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	IF_9
0x4002f2e	            0x84c0	                             test al, al	      1557	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	IF_9
0x4002f30	     0xf8549030000	                           jne 0x400327f	      1557	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	IF_9
0x4002f36	            0xeb28	                           jmp 0x4002f60	      1557	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	IF_9
0x4002f38	        0x4183ed01	                             sub r13d, 1	      1550	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	FOR_1
0x4002f3c	        0x4183fdff	            cmp r13d, 0xffffffffffffffff	      1550	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	FOR_1
0x4002f40	            0x75cc	                           jne 0x4002f0e	      1550	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	FOR_1
0x4002f42	      0xe904030000	                           jmp 0x400324b	      1550	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	FOR_1
0x4002f47	    0x488b05000000	            mov rax, qword [0x04002f4e] 	      1561	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_2	IF_10
0x4002f4e	    0x83b840150000	         cmp dword [rax + 0x1540], 0x63 	      1561	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_2	IF_10
0x4002f55	        0x410f9fc5	                               setg r13b	      1561	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_2	IF_10
0x4002f59	        0x450fb6ed	                        movzx r13d, r13b	      1561	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_2	IF_10
0x4002f5d	          0x41f7dd	                                neg r13d	      1561	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_2	IF_10
0x4002f60	          0x4585ed	                         test r13d, r13d	      1567	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11
0x4002f63	     0xf884c030000	                            js 0x40032b5	      1567	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11
0x4002f69	    0x4c8b05000000	              mov r8, qword [0x04002f70]	      1569	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12
0x4002f70	    0x458b88401500	           mov r9d, dword [r8 + 0x1540] 	      1569	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12
0x4002f77	        0x4183f964	                           cmp r9d, 0x64	      1569	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12
0x4002f7b	            0x7411	                            je 0x4002f8e	      1569	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12
0x4002f7d	          0x4489c8	                            mov eax, r9d	      1580	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x4002f80	          0x4539e9	                           cmp r9d, r13d	      1580	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x4002f83	     0xf8f91000000	                            jg 0x400301a	      1580	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x4002f89	      0xe9e7000000	                           jmp 0x4003075	      1580	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x4002f8e	        0x418d45ff	                      lea eax, [r13 - 1]	      1572	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12
0x4002f92	        0x8944240c	              mov dword [rsp + 0xc], eax	      1572	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12
0x4002f96	    0x498bb8b80500	            mov rdi, qword [r8 + 0x5b8] 	      1573	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	CALL_3
0x4002f9d	      0xe800000000	                          call 0x4002fa2	      1573	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	CALL_3
0x4002fa2	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      1574	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x4002fa7	     0xf8ee0000000	                           jle 0x400308d	      1574	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x4002fad	        0x4183ed01	                             sub r13d, 1	      1574	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x4002fb1	      0xb800000000	                              mov eax, 0	      1574	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x4002fb6	    0x488b15000000	            mov rdx, qword [0x04002fbd] 	      1575	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x4002fbd	          0x8d4801	                      lea ecx, [rax + 1]	      1575	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x4002fc0	            0x4898	                                    cdqe	      1575	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x4002fc2	        0x488d0480	                  lea rax, [rax + rax*4]	      1575	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x4002fc6	        0x488d34c2	                  lea rsi, [rdx + rax*8]	      1575	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x4002fca	    0x488d86a00500	                  lea rax, [rsi + 0x5a0]	      1575	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x4002fd1	          0x4863f9	                         movsxd rdi, ecx	      1575	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x4002fd4	        0x488d3cbf	                  lea rdi, [rdi + rdi*4]	      1575	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x4002fd8	        0x488d3cfa	                  lea rdi, [rdx + rdi*8]	      1575	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x4002fdc	    0x488d97a00500	                  lea rdx, [rdi + 0x5a0]	      1575	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x4002fe3	    0x488bbfa00500	           mov rdi, qword [rdi + 0x5a0] 	      1575	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x4002fea	    0x4889bea00500	            mov qword [rsi + 0x5a0], rdi	      1575	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x4002ff1	        0x488b7208	                mov rsi, qword [rdx + 8]	      1575	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x4002ff5	        0x48897008	                mov qword [rax + 8], rsi	      1575	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x4002ff9	        0x488b7210	            mov rsi, qword [rdx + 0x10] 	      1575	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x4002ffd	        0x48897010	             mov qword [rax + 0x10], rsi	      1575	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x4003001	        0x488b7218	            mov rsi, qword [rdx + 0x18] 	      1575	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x4003005	        0x48897018	             mov qword [rax + 0x18], rsi	      1575	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x4003009	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	      1575	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x400300d	        0x48895020	             mov qword [rax + 0x20], rdx	      1575	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x4003011	            0x89c8	                            mov eax, ecx	      1574	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x4003013	          0x4439e9	                           cmp ecx, r13d	      1574	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x4003016	            0x759e	                           jne 0x4002fb6	      1574	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x4003018	            0xeb73	                           jmp 0x400308d	      1574	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x400301a	          0x8d48ff	                      lea ecx, [rax - 1]	      1581	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x400301d	            0x4898	                                    cdqe	      1581	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x400301f	        0x488d0480	                  lea rax, [rax + rax*4]	      1581	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x4003023	        0x498d34c0	                   lea rsi, [r8 + rax*8]	      1581	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x4003027	    0x488d86a00500	                  lea rax, [rsi + 0x5a0]	      1581	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x400302e	          0x4863d1	                         movsxd rdx, ecx	      1581	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x4003031	        0x488d1492	                  lea rdx, [rdx + rdx*4]	      1581	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x4003035	        0x498d3cd0	                   lea rdi, [r8 + rdx*8]	      1581	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x4003039	    0x488d97a00500	                  lea rdx, [rdi + 0x5a0]	      1581	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x4003040	    0x488bbfa00500	           mov rdi, qword [rdi + 0x5a0] 	      1581	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x4003047	    0x4889bea00500	            mov qword [rsi + 0x5a0], rdi	      1581	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x400304e	        0x488b7208	                mov rsi, qword [rdx + 8]	      1581	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x4003052	        0x48897008	                mov qword [rax + 8], rsi	      1581	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x4003056	        0x488b7210	            mov rsi, qword [rdx + 0x10] 	      1581	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x400305a	        0x48897010	             mov qword [rax + 0x10], rsi	      1581	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x400305e	        0x488b7218	            mov rsi, qword [rdx + 0x18] 	      1581	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x4003062	        0x48897018	             mov qword [rax + 0x18], rsi	      1581	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x4003066	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	      1581	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x400306a	        0x48895020	             mov qword [rax + 0x20], rdx	      1581	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x400306e	            0x89c8	                            mov eax, ecx	      1580	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x4003070	          0x4439e9	                           cmp ecx, r13d	      1580	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x4003073	            0x75a5	                           jne 0x400301a	      1580	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x4003075	    0x418380441500	              add dword [r8 + 0x1544], 1	      1582	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4
0x400307d	        0x4183c101	                              add r9d, 1	      1583	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4
0x4003081	    0x458988401500	           mov dword [r8 + 0x1540], r9d 	      1583	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4
0x4003088	      0x44896c240c	             mov dword [rsp + 0xc], r13d	      1583	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4
0x400308d	    0x488b15000000	            mov rdx, qword [0x04003094] 	      1585	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11
0x4003094	      0x486344240c	          movsxd rax, dword [rsp + 0xc] 	      1585	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11
0x4003099	        0x486bc028	                     imul rax, rax, 0x28	      1585	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11
0x400309d	    0x4c8dac02a005	           lea r13, [rdx + rax + 0x5a0] 	      1585	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11
0x40030a5	          0x4801d0	                            add rax, rdx	      1586	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11
0x40030a8	    0x48c780a00500	              mov qword [rax + 0x5a0], 0	      1586	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11
0x40030b3	    0x48c780b80500	              mov qword [rax + 0x5b8], 0	      1587	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11
0x40030be	    0x48c780c00500	              mov qword [rax + 0x5c0], 0	      1588	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11
0x40030c9	      0xe9fd000000	                           jmp 0x40031cb	      1588	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11
0x40030ce	          0x83f809	                              cmp eax, 9	      1597	mark.c	FUNCTION_36	ELSE_5	IF_13	CALL_4
0x40030d1	     0xf87bc000000	                            ja 0x4003193	      1597	mark.c	FUNCTION_36	ELSE_5	IF_13	CALL_4
0x40030d7	    0x488b05000000	            mov rax, qword [0x040030de] 	      1599	mark.c	FUNCTION_36	ELSE_5	IF_13	IF_14
0x40030de	        0x4183ed16	                          sub r13d, 0x16	      1600	mark.c	FUNCTION_36	ELSE_5	IF_13	IF_14
0x40030e2	          0x4885c0	                           test rax, rax	      1599	mark.c	FUNCTION_36	ELSE_5	IF_13	IF_14
0x40030e5	     0xf85b8000000	                           jne 0x40031a3	      1599	mark.c	FUNCTION_36	ELSE_5	IF_13	IF_14
0x40030eb	    0x4c3b3d000000	            cmp r15, qword [0x040030f2] 	      1608	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_4	IF_15
0x40030f2	     0xf8fa6010000	                            jg 0x400329e	      1608	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_4	IF_15
0x40030f8	      0xb800000000	                              mov eax, 0	      1608	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_4	IF_15
0x40030fd	    0x41bd1b000000	                          mov r13d, 0x1b	      1607	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_4
0x4003103	          0x4c3b38	                    cmp r15, qword [rax]	      1608	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_4	IF_15
0x4003106	            0x7f13	                            jg 0x400311b	      1608	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_4	IF_15
0x4003108	        0x4183c501	                             add r13d, 1	      1607	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_4
0x400310c	        0x4883c028	                           add rax, 0x28	      1607	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_4
0x4003110	        0x4183fd24	                          cmp r13d, 0x24	      1607	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_4
0x4003114	            0x75ed	                           jne 0x4003103	      1607	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_4
0x4003116	      0xe99a010000	                           jmp 0x40032b5	      1607	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_4
0x400311b	        0x4183fd24	                          cmp r13d, 0x24	      1610	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	IF_16
0x400311f	     0xf8490010000	                            je 0x40032b5	      1610	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	IF_16
0x4003125	    0x488b3d000000	            mov rdi, qword [0x0400312c] 	      1615	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	CALL_5
0x400312c	      0xe800000000	                          call 0x4003131	      1615	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	CALL_5
0x4003131	        0x4183fd22	                          cmp r13d, 0x22	      1616	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x4003135	            0x7f48	                            jg 0x400317f	      1616	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x4003137	      0xb800000000	                              mov eax, 0	      1616	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x400313c	      0xb922000000	                           mov ecx, 0x22	      1616	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x4003141	          0x4429e9	                           sub ecx, r13d	      1616	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x4003144	        0x486bc9d8	       imul rcx, rcx, 0xffffffffffffffd8	      1616	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x4003148	    0x4881c1000000	                              add rcx, 0	      1616	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x400314f	          0x488b10	                    mov rdx, qword [rax]	      1617	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x4003152	        0x48895028	             mov qword [rax + 0x28], rdx	      1617	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x4003156	        0x488b5008	                mov rdx, qword [rax + 8]	      1617	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x400315a	        0x48895030	             mov qword [rax + 0x30], rdx	      1617	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x400315e	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1617	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x4003162	        0x48895038	             mov qword [rax + 0x38], rdx	      1617	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x4003166	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      1617	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x400316a	        0x48895040	             mov qword [rax + 0x40], rdx	      1617	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x400316e	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      1617	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x4003172	        0x48895048	             mov qword [rax + 0x48], rdx	      1617	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x4003176	        0x4883e828	                           sub rax, 0x28	      1617	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x400317a	          0x4839c8	                            cmp rax, rcx	      1616	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x400317d	            0x75d0	                           jne 0x400314f	      1616	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x400317f	          0x4963c5	                        movsxd rax, r13d	      1618	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6
0x4003182	        0x486bc028	                     imul rax, rax, 0x28	      1618	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6
0x4003186	    0x48c780000000	                      mov qword [rax], 0	      1618	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6
0x4003191	            0xeb04	                           jmp 0x4003197	      1618	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6
0x4003193	        0x4183ed41	                          sub r13d, 0x41	      1622	mark.c	FUNCTION_36	ELSE_5	ELSE_7
0x4003197	    0x488b05000000	            mov rax, qword [0x0400319e] 	      1623	mark.c	FUNCTION_36	ELSE_5	IF_17
0x400319e	          0x4885c0	                           test rax, rax	      1623	mark.c	FUNCTION_36	ELSE_5	IF_17
0x40031a1	            0x7416	                            je 0x40031b9	      1623	mark.c	FUNCTION_36	ELSE_5	IF_17
0x40031a3	          0x4d63ed	                        movsxd r13, r13d	      1624	mark.c	FUNCTION_36	ELSE_5	IF_17
0x40031a6	      0x4b8d54ad00	                  lea rdx, [r13 + r13*4]	      1624	mark.c	FUNCTION_36	ELSE_5	IF_17
0x40031ab	        0x4c8d2cd0	                  lea r13, [rax + rdx*8]	      1624	mark.c	FUNCTION_36	ELSE_5	IF_17
0x40031af	          0x4d85ed	                           test r13, r13	      1629	mark.c	FUNCTION_36	ELSE_8	IF_18
0x40031b2	            0x753f	                           jne 0x40031f3	      1629	mark.c	FUNCTION_36	ELSE_8	IF_18
0x40031b4	      0xe9fc000000	                           jmp 0x40032b5	      1629	mark.c	FUNCTION_36	ELSE_8	IF_18
0x40031b9	          0x4d63ed	                        movsxd r13, r13d	      1626	mark.c	FUNCTION_36	ELSE_5	ELSE_8
0x40031bc	      0x4b8d44ad00	                  lea rax, [r13 + r13*4]	      1626	mark.c	FUNCTION_36	ELSE_5	ELSE_8
0x40031c1	    0x4c8d2cc50000	                        lea r13, [rax*8]	      1626	mark.c	FUNCTION_36	ELSE_5	ELSE_8
0x40031c9	            0xeb13	                           jmp 0x40031de	      1626	mark.c	FUNCTION_36	ELSE_5	ELSE_8
0x40031cb	          0x4d85ed	                           test r13, r13	      1629	mark.c	FUNCTION_36	ELSE_8	IF_18
0x40031ce	     0xf84e1000000	                            je 0x40032b5	      1629	mark.c	FUNCTION_36	ELSE_8	IF_18
0x40031d4	    0x48833d000000	               cmp qword [0x040031dc], 0	      1631	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19
0x40031dc	            0x7515	                           jne 0x40031f3	      1631	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19
0x40031de	      0x49837d0000	                      cmp qword [r13], 0	      1631	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19
0x40031e3	            0x740e	                            je 0x40031f3	      1631	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19
0x40031e5	        0x4d3b7d20	            cmp r15, qword [r13 + 0x20] 	      1632	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19
0x40031e9	            0x7f08	                            jg 0x40031f3	      1632	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19
0x40031eb	            0x85ed	                           test ebp, ebp	      1632	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19
0x40031ed	     0xf84c2000000	                            je 0x40032b5	      1632	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19
0x40031f3	        0x4d896500	                    mov qword [r13], r12	      1634	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19
0x40031f7	        0x45897508	               mov dword [r13 + 8], r14d	      1635	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19
0x40031fb	    0x41c7450c0000	                mov dword [r13 + 0xc], 0	      1637	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19
0x4003203	    0x41c745100000	               mov dword [r13 + 0x10], 0	      1639	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19
0x400320b	        0x498b7d18	            mov rdi, qword [r13 + 0x18] 	      1640	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19	CALL_6
0x400320f	      0xe800000000	                          call 0x4003214	      1640	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19	CALL_6
0x4003214	    0x83bb9c000000	               cmp dword [rbx + 0x9c], 0	      1641	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19	IF_20
0x400321b	            0x7418	                            je 0x4003235	      1641	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19	IF_20
0x400321d	    0x488b83900000	            mov rax, qword [rbx + 0x90] 	      1643	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19	IF_20
0x4003224	        0x49894518	             mov qword [r13 + 0x18], rax	      1643	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19	IF_20
0x4003228	    0x48c783900000	               mov qword [rbx + 0x90], 0	      1644	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19	IF_20
0x4003233	            0xeb10	                           jmp 0x4003245	      1644	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19	IF_20
0x4003235	    0x488bbb900000	            mov rdi, qword [rbx + 0x90] 	      1647	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19	CALL_7
0x400323c	      0xe800000000	                          call 0x4003241	      1647	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19	CALL_7
0x4003241	        0x49894518	             mov qword [r13 + 0x18], rax	      1647	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19	CALL_7
0x4003245	        0x4d897d20	             mov qword [r13 + 0x20], r15	      1648	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19
0x4003249	            0xeb6a	                           jmp 0x40032b5	      1648	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19
0x400324b	          0x83f963	                           cmp ecx, 0x63	      1557	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	IF_9
0x400324e	            0x7f65	                            jg 0x40032b5	      1557	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	IF_9
0x4003250	          0x4489e8	                           mov eax, r13d	      1557	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	IF_9
0x4003253	          0xc1e81f	                           shr eax, 0x1f	      1557	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	IF_9
0x4003256	    0x41bd00000000	                             mov r13d, 0	      1559	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	IF_9
0x400325c	            0x84c0	                             test al, al	      1557	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	IF_9
0x400325e	     0xf8505fdffff	                           jne 0x4002f69	      1557	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	IF_9
0x4003264	            0xeb4f	                           jmp 0x40032b5	      1557	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	IF_9
0x4003266	    0x498bb8b80500	            mov rdi, qword [r8 + 0x5b8] 	      1573	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	CALL_3
0x400326d	      0xe800000000	                          call 0x4003272	      1573	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	CALL_3
0x4003272	    0xc744240cffff	      mov dword [rsp + 0xc], 0xffffffff 	      1572	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12
0x400327a	      0xe90efeffff	                           jmp 0x400308d	      1572	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12
0x400327f	    0x4c8b05000000	              mov r8, qword [0x04003286]	      1569	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12
0x4003286	    0x458b88401500	           mov r9d, dword [r8 + 0x1540] 	      1569	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12
0x400328d	        0x4183f964	                           cmp r9d, 0x64	      1569	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12
0x4003291	            0x74d3	                            je 0x4003266	      1569	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12
0x4003293	    0x41bd00000000	                             mov r13d, 0	      1559	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	IF_9
0x4003299	      0xe9dffcffff	                           jmp 0x4002f7d	      1559	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	IF_9
0x400329e	    0x488b3d000000	            mov rdi, qword [0x040032a5] 	      1615	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	CALL_5
0x40032a5	      0xe800000000	                          call 0x40032aa	      1615	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	CALL_5
0x40032aa	    0x41bd1a000000	                          mov r13d, 0x1a	      1615	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	CALL_5
0x40032b0	      0xe982feffff	                           jmp 0x4003137	      1615	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	CALL_5
0x40032b5	        0x4883c418	                           add rsp, 0x18	      1651	mark.c	FUNCTION_36
0x40032b9	              0x5b	                                 pop rbx	      1651	mark.c	FUNCTION_36
0x40032ba	              0x5d	                                 pop rbp	      1651	mark.c	FUNCTION_36
0x40032bb	            0x415c	                                 pop r12	      1651	mark.c	FUNCTION_36
0x40032bd	            0x415d	                                 pop r13	      1651	mark.c	FUNCTION_36
0x40032bf	            0x415e	                                 pop r14	      1651	mark.c	FUNCTION_36
0x40032c1	            0x415f	                                 pop r15	      1651	mark.c	FUNCTION_36
0x40032c3	            0xf3c3	                                     ret	      1651	mark.c	FUNCTION_36
show_one_mark	DO,0:FOR,0:WHILE,0:ELSE,3:functions,0:IF,9:CALL,15:SWITCH,0	102
0x4000181	            0x4156	                                push r14	       752	mark.c	FUNCTION_19
0x4000183	            0x4155	                                push r13	       752	mark.c	FUNCTION_19
0x4000185	            0x4154	                                push r12	       752	mark.c	FUNCTION_19
0x4000187	              0x55	                                push rbp	       752	mark.c	FUNCTION_19
0x4000188	              0x53	                                push rbx	       752	mark.c	FUNCTION_19
0x4000189	          0x4889f5	                            mov rbp, rsi	       752	mark.c	FUNCTION_19
0x400018c	          0x83ffff	             cmp edi, 0xffffffffffffffff	       756	mark.c	FUNCTION_19	IF_1
0x400018f	            0x7562	                           jne 0x40001f3	       756	mark.c	FUNCTION_19	IF_1
0x4000191	    0x833d00000000	               cmp dword [0x04000198], 0	       758	mark.c	FUNCTION_19	IF_1	IF_2
0x4000198	            0x740f	                            je 0x40001a9	       758	mark.c	FUNCTION_19	IF_1	IF_2
0x400019a	    0xc70500000000	               mov dword [0x040001a4], 0	       759	mark.c	FUNCTION_19	IF_1	IF_2
0x40001a4	      0xe960010000	                           jmp 0x4000309	       759	mark.c	FUNCTION_19	IF_1	IF_2
0x40001a9	          0x4885f6	                           test rsi, rsi	       762	mark.c	FUNCTION_19	IF_1	ELSE_1	IF_3
0x40001ac	            0x7521	                           jne 0x40001cf	       762	mark.c	FUNCTION_19	IF_1	ELSE_1	IF_3
0x40001ae	      0xba05000000	                              mov edx, 5	       763	mark.c	FUNCTION_19	IF_1	ELSE_1	CALL_2
0x40001b3	      0xbe00000000	                              mov esi, 0	       763	mark.c	FUNCTION_19	IF_1	ELSE_1	CALL_2
0x40001b8	      0xbf00000000	                              mov edi, 0	       763	mark.c	FUNCTION_19	IF_1	ELSE_1	CALL_2
0x40001bd	      0xe800000000	                          call 0x40001c2	       763	mark.c	FUNCTION_19	IF_1	ELSE_1	CALL_2
0x40001c2	          0x4889c7	                            mov rdi, rax	       763	mark.c	FUNCTION_19	IF_1	ELSE_1	CALL_2
0x40001c5	      0xe800000000	                          call 0x40001ca	       763	mark.c	FUNCTION_19	IF_1	ELSE_1	CALL_2
0x40001ca	      0xe93a010000	                           jmp 0x4000309	       763	mark.c	FUNCTION_19	IF_1	ELSE_1	CALL_2
0x40001cf	      0xba05000000	                              mov edx, 5	       765	mark.c	FUNCTION_19	IF_1	ELSE_1	CALL_4
0x40001d4	      0xbe00000000	                              mov esi, 0	       765	mark.c	FUNCTION_19	IF_1	ELSE_1	CALL_4
0x40001d9	      0xbf00000000	                              mov edi, 0	       765	mark.c	FUNCTION_19	IF_1	ELSE_1	CALL_4
0x40001de	      0xe800000000	                          call 0x40001e3	       765	mark.c	FUNCTION_19	IF_1	ELSE_1	CALL_4
0x40001e3	          0x4889ee	                            mov rsi, rbp	       765	mark.c	FUNCTION_19	IF_1	ELSE_1	CALL_4
0x40001e6	          0x4889c7	                            mov rdi, rax	       765	mark.c	FUNCTION_19	IF_1	ELSE_1	CALL_4
0x40001e9	      0xe800000000	                          call 0x40001ee	       765	mark.c	FUNCTION_19	IF_1	ELSE_1	CALL_4
0x40001ee	      0xe916010000	                           jmp 0x4000309	       765	mark.c	FUNCTION_19	IF_1	ELSE_1	CALL_4
0x40001f3	            0x89fb	                            mov ebx, edi	       765	mark.c	FUNCTION_19	IF_1	ELSE_1	CALL_4
0x40001f5	          0x4989d4	                            mov r12, rdx	       765	mark.c	FUNCTION_19	IF_1	ELSE_1	CALL_4
0x40001f8	          0x4989cd	                            mov r13, rcx	       765	mark.c	FUNCTION_19	IF_1	ELSE_1	CALL_4
0x40001fb	          0x4589c6	                           mov r14d, r8d	       765	mark.c	FUNCTION_19	IF_1	ELSE_1	CALL_4
0x40001fe	    0x8b0500000000	            mov eax, dword [0x04000204] 	       769	mark.c	FUNCTION_19	ELSE_3	IF_4
0x4000204	            0x85c0	                           test eax, eax	       769	mark.c	FUNCTION_19	ELSE_3	IF_4
0x4000206	     0xf85fd000000	                           jne 0x4000309	       769	mark.c	FUNCTION_19	ELSE_3	IF_4
0x400020c	          0x4885f6	                           test rsi, rsi	       770	mark.c	FUNCTION_19	ELSE_3	IF_4	CALL_5
0x400020f	            0x7413	                            je 0x4000224	       770	mark.c	FUNCTION_19	ELSE_3	IF_4	CALL_5
0x4000211	            0x89fe	                            mov esi, edi	       770	mark.c	FUNCTION_19	ELSE_3	IF_4	CALL_5
0x4000213	          0x4889ef	                            mov rdi, rbp	       770	mark.c	FUNCTION_19	ELSE_3	IF_4	CALL_5
0x4000216	      0xe800000000	                          call 0x400021b	       770	mark.c	FUNCTION_19	ELSE_3	IF_4	CALL_5
0x400021b	          0x4885c0	                           test rax, rax	       770	mark.c	FUNCTION_19	ELSE_3	IF_4	CALL_5
0x400021e	     0xf84e5000000	                            je 0x4000309	       770	mark.c	FUNCTION_19	ELSE_3	IF_4	CALL_5
0x4000224	      0x49833c2400	                      cmp qword [r12], 0	       771	mark.c	FUNCTION_19	ELSE_3	IF_4
0x4000229	     0xf84da000000	                            je 0x4000309	       771	mark.c	FUNCTION_19	ELSE_3	IF_4
0x400022f	    0x833d00000000	               cmp dword [0x04000236], 0	       773	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_5
0x4000236	            0x7526	                           jne 0x400025e	       773	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_5
0x4000238	      0xba05000000	                              mov edx, 5	       776	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_5	CALL_7
0x400023d	      0xbe00000000	                              mov esi, 0	       776	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_5	CALL_7
0x4000242	      0xbf00000000	                              mov edi, 0	       776	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_5	CALL_7
0x4000247	      0xe800000000	                          call 0x400024c	       776	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_5	CALL_7
0x400024c	          0x4889c7	                            mov rdi, rax	       776	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_5	CALL_7
0x400024f	      0xe800000000	                          call 0x4000254	       776	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_5	CALL_7
0x4000254	    0xc70500000000	               mov dword [0x0400025e], 1	       777	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_5
0x400025e	      0xbf0a000000	                            mov edi, 0xa	       779	mark.c	FUNCTION_19	ELSE_3	IF_4	CALL_8
0x4000263	      0xe800000000	                          call 0x4000268	       779	mark.c	FUNCTION_19	ELSE_3	IF_4	CALL_8
0x4000268	    0x8b2d00000000	            mov ebp, dword [0x0400026e] 	       780	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6
0x400026e	            0x85ed	                           test ebp, ebp	       780	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6
0x4000270	     0xf858e000000	                           jne 0x4000304	       780	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6
0x4000276	        0x4883ec08	                              sub rsp, 8	        33	stdio2.h	FUNCTION_46	CALL_2
0x400027a	      0x418b442408	                mov eax, dword [r12 + 8]	        33	stdio2.h	FUNCTION_46	CALL_2
0x400027f	              0x50	                                push rax	        33	stdio2.h	FUNCTION_46	CALL_2
0x4000280	        0x4d8b0c24	                     mov r9, qword [r12]	        33	stdio2.h	FUNCTION_46	CALL_2
0x4000284	          0x4189d8	                            mov r8d, ebx	        33	stdio2.h	FUNCTION_46	CALL_2
0x4000287	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_46	CALL_2
0x400028c	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_46	CALL_2
0x4000293	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_46	CALL_2
0x4000298	    0x488b3d000000	            mov rdi, qword [0x0400029f] 	        33	stdio2.h	FUNCTION_46	CALL_2
0x400029f	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_46	CALL_2
0x40002a4	      0xe800000000	                          call 0x40002a9	        33	stdio2.h	FUNCTION_46	CALL_2
0x40002a9	    0x488b3d000000	            mov rdi, qword [0x040002b0] 	       783	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	CALL_10
0x40002b0	      0xe800000000	                          call 0x40002b5	       783	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	CALL_10
0x40002b5	        0x4883c410	                           add rsp, 0x10	       784	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	IF_7
0x40002b9	          0x4d85ed	                           test r13, r13	       784	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	IF_7
0x40002bc	            0x751c	                           jne 0x40002da	       784	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	IF_7
0x40002be	          0x4585f6	                         test r14d, r14d	       784	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	IF_7
0x40002c1	            0x7417	                            je 0x40002da	       784	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	IF_7
0x40002c3	      0xbe0f000000	                            mov esi, 0xf	       786	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	IF_7	CALL_11
0x40002c8	          0x4c89e7	                            mov rdi, r12	       786	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	IF_7	CALL_11
0x40002cb	      0xe8f1fdffff	                      call sym.mark_line	       786	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	IF_7	CALL_11
0x40002d0	          0x4989c5	                            mov r13, rax	       786	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	IF_7	CALL_11
0x40002d3	      0xbb01000000	                              mov ebx, 1	       787	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	IF_7
0x40002d8	            0xeb05	                           jmp 0x40002df	       787	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	IF_7
0x40002da	      0xbb00000000	                              mov ebx, 0	       754	mark.c	FUNCTION_19
0x40002df	          0x4d85ed	                           test r13, r13	       789	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	IF_8
0x40002e2	            0x7420	                            je 0x4000304	       789	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	IF_8
0x40002e4	          0x4585f6	                         test r14d, r14d	       791	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	IF_8	CALL_13
0x40002e7	     0xf452d000000	          cmovne ebp, dword [0x040002ee]	       791	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	IF_8	CALL_13
0x40002ee	            0x89ee	                            mov esi, ebp	       791	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	IF_8	CALL_13
0x40002f0	          0x4c89ef	                            mov rdi, r13	       791	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	IF_8	CALL_13
0x40002f3	      0xe800000000	                          call 0x40002f8	       791	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	IF_8	CALL_13
0x40002f8	            0x85db	                           test ebx, ebx	       792	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	IF_8	IF_9
0x40002fa	            0x7408	                            je 0x4000304	       792	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	IF_8	IF_9
0x40002fc	          0x4c89ef	                            mov rdi, r13	       793	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	IF_8	CALL_14
0x40002ff	      0xe800000000	                          call 0x4000304	       793	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	IF_8	CALL_14
0x4000304	      0xe800000000	                          call 0x4000309	       796	mark.c	FUNCTION_19	ELSE_3	IF_4	CALL_15
0x4000309	              0x5b	                                 pop rbx	       798	mark.c	FUNCTION_19
0x400030a	              0x5d	                                 pop rbp	       798	mark.c	FUNCTION_19
0x400030b	            0x415c	                                 pop r12	       798	mark.c	FUNCTION_19
0x400030d	            0x415d	                                 pop r13	       798	mark.c	FUNCTION_19
0x400030f	            0x415e	                                 pop r14	       798	mark.c	FUNCTION_19
0x4000311	              0xc3	                                     ret	       798	mark.c	FUNCTION_19
mark_adjust_nofold	DO,0:FOR,0:WHILE,0:ELSE,0:functions,0:IF,0:CALL,1:SWITCH,0	5
0x40020ba	        0x4883ec08	                              sub rsp, 8	      1035	mark.c	FUNCTION_25
0x40020be	    0x41b800000000	                              mov r8d, 0	      1036	mark.c	FUNCTION_25	CALL_1
0x40020c4	      0xe849e2ffff	           call sym.mark_adjust_internal	      1036	mark.c	FUNCTION_25	CALL_1
0x40020c9	        0x4883c408	                              add rsp, 8	      1037	mark.c	FUNCTION_25
0x40020cd	              0xc3	                                     ret	      1037	mark.c	FUNCTION_25
buf_compare	DO,0:FOR,0:WHILE,0:ELSE,0:functions,0:IF,1:CALL,0:SWITCH,0	13
0x4000040	          0x488b07	                    mov rax, qword [rdi]	      1954	mark.c	FUNCTION_44	IF_1
0x4000043	    0x488b90500100	           mov rdx, qword [rax + 0x150] 	      1954	mark.c	FUNCTION_44	IF_1
0x400004a	          0x488b06	                    mov rax, qword [rsi]	      1954	mark.c	FUNCTION_44	IF_1
0x400004d	    0x488b80500100	           mov rax, qword [rax + 0x150] 	      1954	mark.c	FUNCTION_44	IF_1
0x4000054	          0x4839c2	                            cmp rdx, rax	      1954	mark.c	FUNCTION_44	IF_1
0x4000057	            0x740e	                            je 0x4000067	      1954	mark.c	FUNCTION_44	IF_1
0x4000059	          0x4839c2	                            cmp rdx, rax	      1956	mark.c	FUNCTION_44
0x400005c	           0xf9ec0	                                setle al	      1956	mark.c	FUNCTION_44
0x400005f	           0xfb6c0	                           movzx eax, al	      1956	mark.c	FUNCTION_44
0x4000062	        0x8d4400ff	                lea eax, [rax + rax - 1]	      1956	mark.c	FUNCTION_44
0x4000066	              0xc3	                                     ret	      1956	mark.c	FUNCTION_44
0x4000067	      0xb800000000	                              mov eax, 0	      1955	mark.c	FUNCTION_44	IF_1
0x400006c	              0xc3	                                     ret	      1957	mark.c	FUNCTION_44
finish_viminfo_marks	DO,0:FOR,2:WHILE,0:ELSE,0:functions,0:IF,2:CALL,4:SWITCH,0	37
0x4002d63	              0x53	                                push rbx	      1483	mark.c	FUNCTION_35
0x4002d64	    0x48833d000000	               cmp qword [0x04002d6c], 0	      1486	mark.c	FUNCTION_35	IF_1
0x4002d6c	            0x743f	                            je 0x4002dad	      1486	mark.c	FUNCTION_35	IF_1
0x4002d6e	      0xbb00000000	                              mov ebx, 0	      1486	mark.c	FUNCTION_35	IF_1
0x4002d73	    0x488b05000000	            mov rax, qword [0x04002d7a] 	      1489	mark.c	FUNCTION_35	IF_1	CALL_1
0x4002d7a	      0x488b7c1818	      mov rdi, qword [rax + rbx + 0x18] 	      1489	mark.c	FUNCTION_35	IF_1	CALL_1
0x4002d7f	      0xe800000000	                          call 0x4002d84	      1489	mark.c	FUNCTION_35	IF_1	CALL_1
0x4002d84	        0x4883c328	                           add rbx, 0x28	      1489	mark.c	FUNCTION_35	IF_1	CALL_1
0x4002d88	    0x4881fba00500	                          cmp rbx, 0x5a0	      1488	mark.c	FUNCTION_35	IF_1	FOR_1
0x4002d8f	            0x75e2	                           jne 0x4002d73	      1488	mark.c	FUNCTION_35	IF_1	FOR_1
0x4002d91	    0x488b3d000000	            mov rdi, qword [0x04002d98] 	      1490	mark.c	FUNCTION_35	IF_1	CALL_2
0x4002d98	          0x4885ff	                           test rdi, rdi	      1490	mark.c	FUNCTION_35	IF_1	CALL_2
0x4002d9b	            0x7410	                            je 0x4002dad	      1490	mark.c	FUNCTION_35	IF_1	CALL_2
0x4002d9d	      0xe800000000	                          call 0x4002da2	      1490	mark.c	FUNCTION_35	IF_1	CALL_2
0x4002da2	    0x48c705000000	               mov qword [0x04002dad], 0	      1490	mark.c	FUNCTION_35	IF_1	CALL_2
0x4002dad	    0x488b3d000000	            mov rdi, qword [0x04002db4] 	      1493	mark.c	FUNCTION_35	IF_2
0x4002db4	          0x4885ff	                           test rdi, rdi	      1493	mark.c	FUNCTION_35	IF_2
0x4002db7	            0x7450	                            je 0x4002e09	      1493	mark.c	FUNCTION_35	IF_2
0x4002db9	    0x833d00000000	               cmp dword [0x04002dc0], 0	      1495	mark.c	FUNCTION_35	IF_2	FOR_2
0x4002dc0	            0x7e37	                           jle 0x4002df9	      1495	mark.c	FUNCTION_35	IF_2	FOR_2
0x4002dc2	      0xbb00000000	                              mov ebx, 0	      1495	mark.c	FUNCTION_35	IF_2	FOR_2
0x4002dc7	          0x4863c3	                         movsxd rax, ebx	      1496	mark.c	FUNCTION_35	IF_2	CALL_3
0x4002dca	        0x488d0480	                  lea rax, [rax + rax*4]	      1496	mark.c	FUNCTION_35	IF_2	CALL_3
0x4002dce	        0x48c1e003	                              shl rax, 3	      1496	mark.c	FUNCTION_35	IF_2	CALL_3
0x4002dd2	    0x480305000000	             add rax, qword [0x04002dd9]	      1496	mark.c	FUNCTION_35	IF_2	CALL_3
0x4002dd9	        0x488b7818	            mov rdi, qword [rax + 0x18] 	      1496	mark.c	FUNCTION_35	IF_2	CALL_3
0x4002ddd	      0xe800000000	                          call 0x4002de2	      1496	mark.c	FUNCTION_35	IF_2	CALL_3
0x4002de2	          0x83c301	                              add ebx, 1	      1495	mark.c	FUNCTION_35	IF_2	FOR_2
0x4002de5	    0x391d00000000	            cmp dword [0x04002deb], ebx 	      1495	mark.c	FUNCTION_35	IF_2	FOR_2
0x4002deb	            0x7fda	                            jg 0x4002dc7	      1495	mark.c	FUNCTION_35	IF_2	FOR_2
0x4002ded	    0x488b3d000000	            mov rdi, qword [0x04002df4] 	      1497	mark.c	FUNCTION_35	IF_2	CALL_4
0x4002df4	          0x4885ff	                           test rdi, rdi	      1497	mark.c	FUNCTION_35	IF_2	CALL_4
0x4002df7	            0x7410	                            je 0x4002e09	      1497	mark.c	FUNCTION_35	IF_2	CALL_4
0x4002df9	      0xe800000000	                          call 0x4002dfe	      1497	mark.c	FUNCTION_35	IF_2	CALL_4
0x4002dfe	    0x48c705000000	               mov qword [0x04002e09], 0	      1497	mark.c	FUNCTION_35	IF_2	CALL_4
0x4002e09	              0x5b	                                 pop rbx	      1500	mark.c	FUNCTION_35
0x4002e0a	              0xc3	                                     ret	      1500	mark.c	FUNCTION_35
do_marks	DO,0:FOR,2:WHILE,0:ELSE,1:functions,0:IF,4:CALL,13:SWITCH,0	127
0x4001a36	            0x4156	                                push r14	       709	mark.c	FUNCTION_18
0x4001a38	            0x4155	                                push r13	       709	mark.c	FUNCTION_18
0x4001a3a	            0x4154	                                push r12	       709	mark.c	FUNCTION_18
0x4001a3c	              0x55	                                push rbp	       709	mark.c	FUNCTION_18
0x4001a3d	              0x53	                                push rbx	       709	mark.c	FUNCTION_18
0x4001a3e	          0x488b2f	                    mov rbp, qword [rdi]	       710	mark.c	FUNCTION_18
0x4001a41	          0x4885ed	                           test rbp, rbp	       714	mark.c	FUNCTION_18	IF_1
0x4001a44	            0x740d	                            je 0x4001a53	       714	mark.c	FUNCTION_18	IF_1
0x4001a46	        0x807d0000	                       cmp byte [rbp], 0	       715	mark.c	FUNCTION_18	IF_1
0x4001a4a	      0xb800000000	                              mov eax, 0	       715	mark.c	FUNCTION_18	IF_1
0x4001a4f	        0x480f44e8	                          cmove rbp, rax	       715	mark.c	FUNCTION_18	IF_1
0x4001a53	    0x488b05000000	            mov rax, qword [0x04001a5a] 	       717	mark.c	FUNCTION_18	CALL_1
0x4001a5a	    0x488d90800500	                  lea rdx, [rax + 0x580]	       717	mark.c	FUNCTION_18	CALL_1
0x4001a61	    0x41b801000000	                              mov r8d, 1	       717	mark.c	FUNCTION_18	CALL_1
0x4001a67	      0xb900000000	                              mov ecx, 0	       717	mark.c	FUNCTION_18	CALL_1
0x4001a6c	          0x4889ee	                            mov rsi, rbp	       717	mark.c	FUNCTION_18	CALL_1
0x4001a6f	      0xbf27000000	                           mov edi, 0x27	       717	mark.c	FUNCTION_18	CALL_1
0x4001a74	      0xe808e7ffff	                  call sym.show_one_mark	       717	mark.c	FUNCTION_18	CALL_1
0x4001a79	      0xbb00000000	                              mov ebx, 0	       718	mark.c	FUNCTION_18	FOR_1
0x4001a7e	          0x4863d3	                         movsxd rdx, ebx	       719	mark.c	FUNCTION_18	CALL_2
0x4001a81	        0x4883c215	                           add rdx, 0x15	       719	mark.c	FUNCTION_18	CALL_2
0x4001a85	        0x48c1e204	                              shl rdx, 4	       719	mark.c	FUNCTION_18	CALL_2
0x4001a89	    0x480315000000	             add rdx, qword [0x04001a90]	       719	mark.c	FUNCTION_18	CALL_2
0x4001a90	        0x4883c208	                              add rdx, 8	       719	mark.c	FUNCTION_18	CALL_2
0x4001a94	          0x8d7b61	                   lea edi, [rbx + 0x61]	       719	mark.c	FUNCTION_18	CALL_2
0x4001a97	    0x41b801000000	                              mov r8d, 1	       719	mark.c	FUNCTION_18	CALL_2
0x4001a9d	      0xb900000000	                              mov ecx, 0	       719	mark.c	FUNCTION_18	CALL_2
0x4001aa2	          0x4889ee	                            mov rsi, rbp	       719	mark.c	FUNCTION_18	CALL_2
0x4001aa5	      0xe8d7e6ffff	                  call sym.show_one_mark	       719	mark.c	FUNCTION_18	CALL_2
0x4001aaa	          0x83c301	                              add ebx, 1	       718	mark.c	FUNCTION_18	FOR_1
0x4001aad	          0x83fb1a	                           cmp ebx, 0x1a	       718	mark.c	FUNCTION_18	FOR_1
0x4001ab0	            0x75cc	                           jne 0x4001a7e	       718	mark.c	FUNCTION_18	FOR_1
0x4001ab2	    0x41bc00000000	                             mov r12d, 0	       718	mark.c	FUNCTION_18	FOR_1
0x4001ab8	      0xbb00000000	                              mov ebx, 0	       718	mark.c	FUNCTION_18	FOR_1
0x4001abd	          0x4d89e5	                            mov r13, r12	       718	mark.c	FUNCTION_18	FOR_1
0x4001ac0	    0x41837c241000	               cmp dword [r12 + 0x10], 0	       722	mark.c	FUNCTION_18	FOR_2	IF_2
0x4001ac6	            0x7412	                            je 0x4001ada	       722	mark.c	FUNCTION_18	FOR_2	IF_2
0x4001ac8	      0xbe0f000000	                            mov esi, 0xf	       723	mark.c	FUNCTION_18	FOR_2	CALL_3
0x4001acd	          0x4c89e7	                            mov rdi, r12	       723	mark.c	FUNCTION_18	FOR_2	CALL_3
0x4001ad0	      0xe800000000	                          call 0x4001ad5	       723	mark.c	FUNCTION_18	FOR_2	CALL_3
0x4001ad5	          0x4989c6	                            mov r14, rax	       723	mark.c	FUNCTION_18	FOR_2	CALL_3
0x4001ad8	            0xeb05	                           jmp 0x4001adf	       723	mark.c	FUNCTION_18	FOR_2	CALL_3
0x4001ada	      0x4d8b742418	            mov r14, qword [r12 + 0x18] 	       725	mark.c	FUNCTION_18	FOR_2	ELSE_1
0x4001adf	          0x4d85f6	                           test r14, r14	       726	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3
0x4001ae2	            0x7442	                            je 0x4001b26	       726	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3
0x4001ae4	    0x488b05000000	            mov rax, qword [0x04001aeb] 	       728	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	CALL_4
0x4001aeb	        0x418b4d10	            mov ecx, dword [r13 + 0x10] 	       728	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	CALL_4
0x4001aef	    0x3988b8000000	            cmp dword [rax + 0xb8], ecx 	       728	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	CALL_4
0x4001af5	        0x410f94c0	                                sete r8b	       728	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	CALL_4
0x4001af9	        0x450fb6c0	                          movzx r8d, r8b	       728	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	CALL_4
0x4001afd	          0x8d7b16	                   lea edi, [rbx + 0x16]	       728	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	CALL_4
0x4001b00	          0x8d4341	                   lea eax, [rbx + 0x41]	       728	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	CALL_4
0x4001b03	          0x83fb1a	                           cmp ebx, 0x1a	       728	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	CALL_4
0x4001b06	           0xf4cf8	                          cmovl edi, eax	       728	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	CALL_4
0x4001b09	          0x4c89f1	                            mov rcx, r14	       728	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	CALL_4
0x4001b0c	          0x4c89ea	                            mov rdx, r13	       728	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	CALL_4
0x4001b0f	          0x4889ee	                            mov rsi, rbp	       728	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	CALL_4
0x4001b12	      0xe86ae6ffff	                  call sym.show_one_mark	       728	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	CALL_4
0x4001b17	      0x41837d1000	               cmp dword [r13 + 0x10], 0	       731	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	IF_4
0x4001b1c	            0x7408	                            je 0x4001b26	       731	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	IF_4
0x4001b1e	          0x4c89f7	                            mov rdi, r14	       732	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	CALL_5
0x4001b21	      0xe800000000	                          call 0x4001b26	       732	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	CALL_5
0x4001b26	          0x83c301	                              add ebx, 1	       720	mark.c	FUNCTION_18	FOR_2
0x4001b29	        0x4983c428	                           add r12, 0x28	       720	mark.c	FUNCTION_18	FOR_2
0x4001b2d	          0x83fb24	                           cmp ebx, 0x24	       720	mark.c	FUNCTION_18	FOR_2
0x4001b30	            0x758b	                           jne 0x4001abd	       720	mark.c	FUNCTION_18	FOR_2
0x4001b32	    0x488b05000000	            mov rax, qword [0x04001b39] 	       735	mark.c	FUNCTION_18	CALL_6
0x4001b39	    0x488d90280300	                  lea rdx, [rax + 0x328]	       735	mark.c	FUNCTION_18	CALL_6
0x4001b40	    0x41b801000000	                              mov r8d, 1	       735	mark.c	FUNCTION_18	CALL_6
0x4001b46	      0xb900000000	                              mov ecx, 0	       735	mark.c	FUNCTION_18	CALL_6
0x4001b4b	          0x4889ee	                            mov rsi, rbp	       735	mark.c	FUNCTION_18	CALL_6
0x4001b4e	      0xbf22000000	                           mov edi, 0x22	       735	mark.c	FUNCTION_18	CALL_6
0x4001b53	      0xe829e6ffff	                  call sym.show_one_mark	       735	mark.c	FUNCTION_18	CALL_6
0x4001b58	    0x488b05000000	            mov rax, qword [0x04001b5f] 	       736	mark.c	FUNCTION_18	CALL_7
0x4001b5f	    0x488d90e01100	                 lea rdx, [rax + 0x11e0]	       736	mark.c	FUNCTION_18	CALL_7
0x4001b66	    0x41b801000000	                              mov r8d, 1	       736	mark.c	FUNCTION_18	CALL_7
0x4001b6c	      0xb900000000	                              mov ecx, 0	       736	mark.c	FUNCTION_18	CALL_7
0x4001b71	          0x4889ee	                            mov rsi, rbp	       736	mark.c	FUNCTION_18	CALL_7
0x4001b74	      0xbf5b000000	                           mov edi, 0x5b	       736	mark.c	FUNCTION_18	CALL_7
0x4001b79	      0xe803e6ffff	                  call sym.show_one_mark	       736	mark.c	FUNCTION_18	CALL_7
0x4001b7e	    0x488b05000000	            mov rax, qword [0x04001b85] 	       737	mark.c	FUNCTION_18	CALL_8
0x4001b85	    0x488d90001200	                 lea rdx, [rax + 0x1200]	       737	mark.c	FUNCTION_18	CALL_8
0x4001b8c	    0x41b801000000	                              mov r8d, 1	       737	mark.c	FUNCTION_18	CALL_8
0x4001b92	      0xb900000000	                              mov ecx, 0	       737	mark.c	FUNCTION_18	CALL_8
0x4001b97	          0x4889ee	                            mov rsi, rbp	       737	mark.c	FUNCTION_18	CALL_8
0x4001b9a	      0xbf5d000000	                           mov edi, 0x5d	       737	mark.c	FUNCTION_18	CALL_8
0x4001b9f	      0xe8dde5ffff	                  call sym.show_one_mark	       737	mark.c	FUNCTION_18	CALL_8
0x4001ba4	    0x488b05000000	            mov rax, qword [0x04001bab] 	       738	mark.c	FUNCTION_18	CALL_9
0x4001bab	    0x488d90380300	                  lea rdx, [rax + 0x338]	       738	mark.c	FUNCTION_18	CALL_9
0x4001bb2	    0x41b801000000	                              mov r8d, 1	       738	mark.c	FUNCTION_18	CALL_9
0x4001bb8	      0xb900000000	                              mov ecx, 0	       738	mark.c	FUNCTION_18	CALL_9
0x4001bbd	          0x4889ee	                            mov rsi, rbp	       738	mark.c	FUNCTION_18	CALL_9
0x4001bc0	      0xbf5e000000	                           mov edi, 0x5e	       738	mark.c	FUNCTION_18	CALL_9
0x4001bc5	      0xe8b7e5ffff	                  call sym.show_one_mark	       738	mark.c	FUNCTION_18	CALL_9
0x4001bca	    0x488b05000000	            mov rax, qword [0x04001bd1] 	       739	mark.c	FUNCTION_18	CALL_10
0x4001bd1	    0x488d90480300	                  lea rdx, [rax + 0x348]	       739	mark.c	FUNCTION_18	CALL_10
0x4001bd8	    0x41b801000000	                              mov r8d, 1	       739	mark.c	FUNCTION_18	CALL_10
0x4001bde	      0xb900000000	                              mov ecx, 0	       739	mark.c	FUNCTION_18	CALL_10
0x4001be3	          0x4889ee	                            mov rsi, rbp	       739	mark.c	FUNCTION_18	CALL_10
0x4001be6	      0xbf2e000000	                           mov edi, 0x2e	       739	mark.c	FUNCTION_18	CALL_10
0x4001beb	      0xe891e5ffff	                  call sym.show_one_mark	       739	mark.c	FUNCTION_18	CALL_10
0x4001bf0	    0x488b05000000	            mov rax, qword [0x04001bf7] 	       740	mark.c	FUNCTION_18	CALL_11
0x4001bf7	    0x488d90f80200	                  lea rdx, [rax + 0x2f8]	       740	mark.c	FUNCTION_18	CALL_11
0x4001bfe	    0x41b801000000	                              mov r8d, 1	       740	mark.c	FUNCTION_18	CALL_11
0x4001c04	      0xb900000000	                              mov ecx, 0	       740	mark.c	FUNCTION_18	CALL_11
0x4001c09	          0x4889ee	                            mov rsi, rbp	       740	mark.c	FUNCTION_18	CALL_11
0x4001c0c	      0xbf3c000000	                           mov edi, 0x3c	       740	mark.c	FUNCTION_18	CALL_11
0x4001c11	      0xe86be5ffff	                  call sym.show_one_mark	       740	mark.c	FUNCTION_18	CALL_11
0x4001c16	    0x488b05000000	            mov rax, qword [0x04001c1d] 	       741	mark.c	FUNCTION_18	CALL_12
0x4001c1d	    0x488d90080300	                  lea rdx, [rax + 0x308]	       741	mark.c	FUNCTION_18	CALL_12
0x4001c24	    0x41b801000000	                              mov r8d, 1	       741	mark.c	FUNCTION_18	CALL_12
0x4001c2a	      0xb900000000	                              mov ecx, 0	       741	mark.c	FUNCTION_18	CALL_12
0x4001c2f	          0x4889ee	                            mov rsi, rbp	       741	mark.c	FUNCTION_18	CALL_12
0x4001c32	      0xbf3e000000	                           mov edi, 0x3e	       741	mark.c	FUNCTION_18	CALL_12
0x4001c37	      0xe845e5ffff	                  call sym.show_one_mark	       741	mark.c	FUNCTION_18	CALL_12
0x4001c3c	    0x41b800000000	                              mov r8d, 0	       742	mark.c	FUNCTION_18	CALL_13
0x4001c42	      0xb900000000	                              mov ecx, 0	       742	mark.c	FUNCTION_18	CALL_13
0x4001c47	      0xba00000000	                              mov edx, 0	       742	mark.c	FUNCTION_18	CALL_13
0x4001c4c	          0x4889ee	                            mov rsi, rbp	       742	mark.c	FUNCTION_18	CALL_13
0x4001c4f	      0xbfffffffff	                     mov edi, 0xffffffff	       742	mark.c	FUNCTION_18	CALL_13
0x4001c54	      0xe828e5ffff	                  call sym.show_one_mark	       742	mark.c	FUNCTION_18	CALL_13
0x4001c59	              0x5b	                                 pop rbx	       743	mark.c	FUNCTION_18
0x4001c5a	              0x5d	                                 pop rbp	       743	mark.c	FUNCTION_18
0x4001c5b	            0x415c	                                 pop r12	       743	mark.c	FUNCTION_18
0x4001c5d	            0x415d	                                 pop r13	       743	mark.c	FUNCTION_18
0x4001c5f	            0x415e	                                 pop r14	       743	mark.c	FUNCTION_18
0x4001c61	              0xc3	                                     ret	       743	mark.c	FUNCTION_18
