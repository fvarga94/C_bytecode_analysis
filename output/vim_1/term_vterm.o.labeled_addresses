utf8_seqlen	ELSE,0:FOR,0:CALL,0:IF,5:DO,0:WHILE,0:functions,0:SWITCH,0	26
0x4000159	              0x55	                                push rbp	         9	utf8.h	FUNCTION_1
0x400015a	          0x4889e5	                            mov rbp, rsp	         9	utf8.h	FUNCTION_1
0x400015d	        0x48897df8	                mov qword [rbp - 8], rdi	         9	utf8.h	FUNCTION_1
0x4000161	      0x48837df87f	               cmp qword [rbp - 8], 0x7f	        10	utf8.h	FUNCTION_1	IF_1
0x4000166	            0x7f07	                            jg 0x400016f	        10	utf8.h	FUNCTION_1	IF_1
0x4000168	      0xb801000000	                              mov eax, 1	        10	utf8.h	FUNCTION_1	IF_1
0x400016d	            0xeb49	                           jmp 0x40001b8	        10	utf8.h	FUNCTION_1	IF_1
0x400016f	    0x48817df8ff07	              cmp qword [rbp - 8], 0x7ff	        11	utf8.h	FUNCTION_1	IF_2
0x4000177	            0x7f07	                            jg 0x4000180	        11	utf8.h	FUNCTION_1	IF_2
0x4000179	      0xb802000000	                              mov eax, 2	        11	utf8.h	FUNCTION_1	IF_2
0x400017e	            0xeb38	                           jmp 0x40001b8	        11	utf8.h	FUNCTION_1	IF_2
0x4000180	    0x48817df8ffff	            cmp qword [rbp - 8], 0xffff 	        12	utf8.h	FUNCTION_1	IF_3
0x4000188	            0x7f07	                            jg 0x4000191	        12	utf8.h	FUNCTION_1	IF_3
0x400018a	      0xb803000000	                              mov eax, 3	        12	utf8.h	FUNCTION_1	IF_3
0x400018f	            0xeb27	                           jmp 0x40001b8	        12	utf8.h	FUNCTION_1	IF_3
0x4000191	    0x48817df8ffff	          cmp qword [rbp - 8], 0x1fffff 	        13	utf8.h	FUNCTION_1	IF_4
0x4000199	            0x7f07	                            jg 0x40001a2	        13	utf8.h	FUNCTION_1	IF_4
0x400019b	      0xb804000000	                              mov eax, 4	        13	utf8.h	FUNCTION_1	IF_4
0x40001a0	            0xeb16	                           jmp 0x40001b8	        13	utf8.h	FUNCTION_1	IF_4
0x40001a2	    0x48817df8ffff	         cmp qword [rbp - 8], 0x3ffffff 	        14	utf8.h	FUNCTION_1	IF_5
0x40001aa	            0x7f07	                            jg 0x40001b3	        14	utf8.h	FUNCTION_1	IF_5
0x40001ac	      0xb805000000	                              mov eax, 5	        14	utf8.h	FUNCTION_1	IF_5
0x40001b1	            0xeb05	                           jmp 0x40001b8	        14	utf8.h	FUNCTION_1	IF_5
0x40001b3	      0xb806000000	                              mov eax, 6	        15	utf8.h	FUNCTION_1
0x40001b8	              0x5d	                                 pop rbp	        16	utf8.h	FUNCTION_1
0x40001b9	              0xc3	                                     ret	        16	utf8.h	FUNCTION_1
vterm_get_utf8	ELSE,0:FOR,0:CALL,0:IF,0:DO,0:WHILE,0:functions,0:SWITCH,0	9
0x40005e0	              0x55	                                push rbp	       108	vterm.c	FUNCTION_12
0x40005e1	          0x4889e5	                            mov rbp, rsp	       108	vterm.c	FUNCTION_12
0x40005e4	        0x48897df8	                mov qword [rbp - 8], rdi	       108	vterm.c	FUNCTION_12
0x40005e8	        0x488b45f8	                mov rax, qword [rbp - 8]	       109	vterm.c	FUNCTION_12
0x40005ec	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       109	vterm.c	FUNCTION_12
0x40005f0	          0x83e001	                              and eax, 1	       109	vterm.c	FUNCTION_12
0x40005f3	           0xfb6c0	                           movzx eax, al	       109	vterm.c	FUNCTION_12
0x40005f6	              0x5d	                                 pop rbp	       110	vterm.c	FUNCTION_12
0x40005f7	              0xc3	                                     ret	       110	vterm.c	FUNCTION_12
vterm_allocator_malloc	ELSE,0:FOR,0:CALL,0:IF,0:DO,0:WHILE,0:functions,0:SWITCH,0	16
0x40004d2	              0x55	                                push rbp	        81	vterm.c	FUNCTION_8
0x40004d3	          0x4889e5	                            mov rbp, rsp	        81	vterm.c	FUNCTION_8
0x40004d6	        0x4883ec10	                           sub rsp, 0x10	        81	vterm.c	FUNCTION_8
0x40004da	        0x48897df8	                mov qword [rbp - 8], rdi	        81	vterm.c	FUNCTION_8
0x40004de	        0x488975f0	             mov qword [rbp - 0x10], rsi	        81	vterm.c	FUNCTION_8
0x40004e2	        0x488b45f8	                mov rax, qword [rbp - 8]	        82	vterm.c	FUNCTION_8
0x40004e6	          0x488b00	                    mov rax, qword [rax]	        82	vterm.c	FUNCTION_8
0x40004e9	          0x488b00	                    mov rax, qword [rax]	        82	vterm.c	FUNCTION_8
0x40004ec	        0x488b55f8	                mov rdx, qword [rbp - 8]	        82	vterm.c	FUNCTION_8
0x40004f0	        0x488b4a08	                mov rcx, qword [rdx + 8]	        82	vterm.c	FUNCTION_8
0x40004f4	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        82	vterm.c	FUNCTION_8
0x40004f8	          0x4889ce	                            mov rsi, rcx	        82	vterm.c	FUNCTION_8
0x40004fb	          0x4889d7	                            mov rdi, rdx	        82	vterm.c	FUNCTION_8
0x40004fe	            0xffd0	                                call rax	        82	vterm.c	FUNCTION_8
0x4000500	              0xc9	                                   leave	        83	vterm.c	FUNCTION_8
0x4000501	              0xc3	                                     ret	        83	vterm.c	FUNCTION_8
vterm_scroll_rect	ELSE,4:FOR,0:CALL,2:IF,8:DO,0:WHILE,0:functions,0:SWITCH,0	140
0x4000d65	              0x55	                                push rbp	       302	vterm.c	FUNCTION_26
0x4000d66	          0x4889e5	                            mov rbp, rsp	       302	vterm.c	FUNCTION_26
0x4000d69	        0x4883ec60	                           sub rsp, 0x60	       302	vterm.c	FUNCTION_26
0x4000d6d	          0x4889f8	                            mov rax, rdi	       302	vterm.c	FUNCTION_26
0x4000d70	          0x4989f2	                            mov r10, rsi	       302	vterm.c	FUNCTION_26
0x4000d73	          0x4889c6	                            mov rsi, rax	       302	vterm.c	FUNCTION_26
0x4000d76	          0x4889d7	                            mov rdi, rdx	       302	vterm.c	FUNCTION_26
0x4000d79	          0x4c89d7	                            mov rdi, r10	       302	vterm.c	FUNCTION_26
0x4000d7c	        0x488975c0	             mov qword [rbp - 0x40], rsi	       302	vterm.c	FUNCTION_26
0x4000d80	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       302	vterm.c	FUNCTION_26
0x4000d84	          0x8955bc	             mov dword [rbp - 0x44], edx	       302	vterm.c	FUNCTION_26
0x4000d87	          0x894db8	             mov dword [rbp - 0x48], ecx	       302	vterm.c	FUNCTION_26
0x4000d8a	        0x4c8945b0	              mov qword [rbp - 0x50], r8	       302	vterm.c	FUNCTION_26
0x4000d8e	        0x4c894da8	              mov qword [rbp - 0x58], r9	       302	vterm.c	FUNCTION_26
0x4000d92	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       306	vterm.c	FUNCTION_26	IF_1	CALL_1
0x4000d95	              0x99	                                     cdq	       306	vterm.c	FUNCTION_26	IF_1	CALL_1
0x4000d96	            0x89d0	                            mov eax, edx	       306	vterm.c	FUNCTION_26	IF_1	CALL_1
0x4000d98	          0x3345bc	             xor eax, dword [rbp - 0x44]	       306	vterm.c	FUNCTION_26	IF_1	CALL_1
0x4000d9b	            0x29d0	                            sub eax, edx	       306	vterm.c	FUNCTION_26	IF_1	CALL_1
0x4000d9d	          0x8b4dc4	             mov ecx, dword [rbp - 0x3c]	       306	vterm.c	FUNCTION_26	IF_1	CALL_1
0x4000da0	          0x8b55c0	             mov edx, dword [rbp - 0x40]	       306	vterm.c	FUNCTION_26	IF_1	CALL_1
0x4000da3	            0x29d1	                            sub ecx, edx	       306	vterm.c	FUNCTION_26	IF_1	CALL_1
0x4000da5	            0x89ca	                            mov edx, ecx	       306	vterm.c	FUNCTION_26	IF_1	CALL_1
0x4000da7	            0x39d0	                            cmp eax, edx	       306	vterm.c	FUNCTION_26	IF_1	CALL_1
0x4000da9	            0x7d19	                           jge 0x4000dc4	       306	vterm.c	FUNCTION_26	IF_1	CALL_1
0x4000dab	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       307	vterm.c	FUNCTION_26	IF_1	CALL_2
0x4000dae	              0x99	                                     cdq	       307	vterm.c	FUNCTION_26	IF_1	CALL_2
0x4000daf	            0x89d0	                            mov eax, edx	       307	vterm.c	FUNCTION_26	IF_1	CALL_2
0x4000db1	          0x3345b8	             xor eax, dword [rbp - 0x48]	       307	vterm.c	FUNCTION_26	IF_1	CALL_2
0x4000db4	            0x29d0	                            sub eax, edx	       307	vterm.c	FUNCTION_26	IF_1	CALL_2
0x4000db6	          0x8b4dcc	             mov ecx, dword [rbp - 0x34]	       307	vterm.c	FUNCTION_26	IF_1	CALL_2
0x4000db9	          0x8b55c8	             mov edx, dword [rbp - 0x38]	       307	vterm.c	FUNCTION_26	IF_1	CALL_2
0x4000dbc	            0x29d1	                            sub ecx, edx	       307	vterm.c	FUNCTION_26	IF_1	CALL_2
0x4000dbe	            0x89ca	                            mov edx, ecx	       307	vterm.c	FUNCTION_26	IF_1	CALL_2
0x4000dc0	            0x39d0	                            cmp eax, edx	       306	vterm.c	FUNCTION_26	IF_1	CALL_1
0x4000dc2	            0x7c1c	                            jl 0x4000de0	       306	vterm.c	FUNCTION_26	IF_1	CALL_1
0x4000dc4	        0x488b7dc0	             mov rdi, qword [rbp - 0x40]	       309	vterm.c	FUNCTION_26	IF_1
0x4000dc8	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	       309	vterm.c	FUNCTION_26	IF_1
0x4000dcc	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       309	vterm.c	FUNCTION_26	IF_1
0x4000dd0	        0x488b4d10	            mov rcx, qword [rbp + 0x10] 	       309	vterm.c	FUNCTION_26	IF_1
0x4000dd4	      0xba00000000	                              mov edx, 0	       309	vterm.c	FUNCTION_26	IF_1
0x4000dd9	            0xffd0	                                call rax	       309	vterm.c	FUNCTION_26	IF_1
0x4000ddb	      0xe91f010000	                           jmp 0x4000eff	       309	vterm.c	FUNCTION_26	IF_1
0x4000de0	        0x837db800	               cmp dword [rbp - 0x48], 0	       313	vterm.c	FUNCTION_26	IF_2
0x4000de4	            0x7822	                            js 0x4000e08	       313	vterm.c	FUNCTION_26	IF_2
0x4000de6	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       318	vterm.c	FUNCTION_26	IF_2
0x4000de9	          0x8945f8	                mov dword [rbp - 8], eax	       318	vterm.c	FUNCTION_26	IF_2
0x4000dec	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       319	vterm.c	FUNCTION_26	IF_2
0x4000def	          0x2b45b8	             sub eax, dword [rbp - 0x48]	       319	vterm.c	FUNCTION_26	IF_2
0x4000df2	          0x8945fc	                mov dword [rbp - 4], eax	       319	vterm.c	FUNCTION_26	IF_2
0x4000df5	          0x8b55c8	             mov edx, dword [rbp - 0x38]	       320	vterm.c	FUNCTION_26	IF_2
0x4000df8	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       320	vterm.c	FUNCTION_26	IF_2
0x4000dfb	             0x1d0	                            add eax, edx	       320	vterm.c	FUNCTION_26	IF_2
0x4000dfd	          0x8945e8	             mov dword [rbp - 0x18], eax	       320	vterm.c	FUNCTION_26	IF_2
0x4000e00	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       321	vterm.c	FUNCTION_26	IF_2
0x4000e03	          0x8945ec	             mov dword [rbp - 0x14], eax	       321	vterm.c	FUNCTION_26	IF_2
0x4000e06	            0xeb28	                           jmp 0x4000e30	       321	vterm.c	FUNCTION_26	IF_2
0x4000e08	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       328	vterm.c	FUNCTION_26	ELSE_1
0x4000e0b	            0xf7d8	                                 neg eax	       328	vterm.c	FUNCTION_26	ELSE_1
0x4000e0d	          0x8945d8	             mov dword [rbp - 0x28], eax	       328	vterm.c	FUNCTION_26	ELSE_1
0x4000e10	          0x8b55c8	             mov edx, dword [rbp - 0x38]	       329	vterm.c	FUNCTION_26	ELSE_1
0x4000e13	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       329	vterm.c	FUNCTION_26	ELSE_1
0x4000e16	             0x1d0	                            add eax, edx	       329	vterm.c	FUNCTION_26	ELSE_1
0x4000e18	          0x8945f8	                mov dword [rbp - 8], eax	       329	vterm.c	FUNCTION_26	ELSE_1
0x4000e1b	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       330	vterm.c	FUNCTION_26	ELSE_1
0x4000e1e	          0x8945fc	                mov dword [rbp - 4], eax	       330	vterm.c	FUNCTION_26	ELSE_1
0x4000e21	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       331	vterm.c	FUNCTION_26	ELSE_1
0x4000e24	          0x8945e8	             mov dword [rbp - 0x18], eax	       331	vterm.c	FUNCTION_26	ELSE_1
0x4000e27	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       332	vterm.c	FUNCTION_26	ELSE_1
0x4000e2a	          0x2b45d8	             sub eax, dword [rbp - 0x28]	       332	vterm.c	FUNCTION_26	ELSE_1
0x4000e2d	          0x8945ec	             mov dword [rbp - 0x14], eax	       332	vterm.c	FUNCTION_26	ELSE_1
0x4000e30	        0x837dbc00	               cmp dword [rbp - 0x44], 0	       335	vterm.c	FUNCTION_26	IF_3
0x4000e34	            0x7822	                            js 0x4000e58	       335	vterm.c	FUNCTION_26	IF_3
0x4000e36	          0x8b45c0	             mov eax, dword [rbp - 0x40]	       336	vterm.c	FUNCTION_26	IF_3
0x4000e39	          0x8945f0	             mov dword [rbp - 0x10], eax	       336	vterm.c	FUNCTION_26	IF_3
0x4000e3c	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       337	vterm.c	FUNCTION_26	IF_3
0x4000e3f	          0x2b45bc	             sub eax, dword [rbp - 0x44]	       337	vterm.c	FUNCTION_26	IF_3
0x4000e42	          0x8945f4	              mov dword [rbp - 0xc], eax	       337	vterm.c	FUNCTION_26	IF_3
0x4000e45	          0x8b55c0	             mov edx, dword [rbp - 0x40]	       338	vterm.c	FUNCTION_26	IF_3
0x4000e48	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       338	vterm.c	FUNCTION_26	IF_3
0x4000e4b	             0x1d0	                            add eax, edx	       338	vterm.c	FUNCTION_26	IF_3
0x4000e4d	          0x8945e0	             mov dword [rbp - 0x20], eax	       338	vterm.c	FUNCTION_26	IF_3
0x4000e50	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       339	vterm.c	FUNCTION_26	IF_3
0x4000e53	          0x8945e4	             mov dword [rbp - 0x1c], eax	       339	vterm.c	FUNCTION_26	IF_3
0x4000e56	            0xeb28	                           jmp 0x4000e80	       339	vterm.c	FUNCTION_26	IF_3
0x4000e58	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       342	vterm.c	FUNCTION_26	ELSE_2
0x4000e5b	            0xf7d8	                                 neg eax	       342	vterm.c	FUNCTION_26	ELSE_2
0x4000e5d	          0x8945dc	             mov dword [rbp - 0x24], eax	       342	vterm.c	FUNCTION_26	ELSE_2
0x4000e60	          0x8b55c0	             mov edx, dword [rbp - 0x40]	       343	vterm.c	FUNCTION_26	ELSE_2
0x4000e63	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       343	vterm.c	FUNCTION_26	ELSE_2
0x4000e66	             0x1d0	                            add eax, edx	       343	vterm.c	FUNCTION_26	ELSE_2
0x4000e68	          0x8945f0	             mov dword [rbp - 0x10], eax	       343	vterm.c	FUNCTION_26	ELSE_2
0x4000e6b	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       344	vterm.c	FUNCTION_26	ELSE_2
0x4000e6e	          0x8945f4	              mov dword [rbp - 0xc], eax	       344	vterm.c	FUNCTION_26	ELSE_2
0x4000e71	          0x8b45c0	             mov eax, dword [rbp - 0x40]	       345	vterm.c	FUNCTION_26	ELSE_2
0x4000e74	          0x8945e0	             mov dword [rbp - 0x20], eax	       345	vterm.c	FUNCTION_26	ELSE_2
0x4000e77	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       346	vterm.c	FUNCTION_26	ELSE_2
0x4000e7a	          0x2b45dc	             sub eax, dword [rbp - 0x24]	       346	vterm.c	FUNCTION_26	ELSE_2
0x4000e7d	          0x8945e4	             mov dword [rbp - 0x1c], eax	       346	vterm.c	FUNCTION_26	ELSE_2
0x4000e80	      0x48837db000	               cmp qword [rbp - 0x50], 0	       349	vterm.c	FUNCTION_26	IF_4
0x4000e85	            0x7421	                            je 0x4000ea8	       349	vterm.c	FUNCTION_26	IF_4
0x4000e87	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       350	vterm.c	FUNCTION_26	IF_4
0x4000e8b	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       350	vterm.c	FUNCTION_26	IF_4
0x4000e8f	        0x488b7df0	             mov rdi, qword [rbp - 0x10]	       350	vterm.c	FUNCTION_26	IF_4
0x4000e93	        0x488b75f8	                mov rsi, qword [rbp - 8]	       350	vterm.c	FUNCTION_26	IF_4
0x4000e97	        0x4c8b4db0	              mov r9, qword [rbp - 0x50]	       350	vterm.c	FUNCTION_26	IF_4
0x4000e9b	        0x4c8b4510	              mov r8, qword [rbp + 0x10]	       350	vterm.c	FUNCTION_26	IF_4
0x4000e9f	          0x4889d1	                            mov rcx, rdx	       350	vterm.c	FUNCTION_26	IF_4
0x4000ea2	          0x4889c2	                            mov rdx, rax	       350	vterm.c	FUNCTION_26	IF_4
0x4000ea5	          0x41ffd1	                                 call r9	       350	vterm.c	FUNCTION_26	IF_4
0x4000ea8	        0x837dbc00	               cmp dword [rbp - 0x44], 0	       352	vterm.c	FUNCTION_26	IF_5
0x4000eac	            0x7e0b	                           jle 0x4000eb9	       352	vterm.c	FUNCTION_26	IF_5
0x4000eae	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       353	vterm.c	FUNCTION_26	IF_5
0x4000eb1	          0x2b45bc	             sub eax, dword [rbp - 0x44]	       353	vterm.c	FUNCTION_26	IF_5
0x4000eb4	          0x8945c0	             mov dword [rbp - 0x40], eax	       353	vterm.c	FUNCTION_26	IF_5
0x4000eb7	            0xeb0f	                           jmp 0x4000ec8	       353	vterm.c	FUNCTION_26	IF_5
0x4000eb9	        0x837dbc00	               cmp dword [rbp - 0x44], 0	       354	vterm.c	FUNCTION_26	ELSE_3	IF_6
0x4000ebd	            0x7909	                           jns 0x4000ec8	       354	vterm.c	FUNCTION_26	ELSE_3	IF_6
0x4000ebf	          0x8b45c0	             mov eax, dword [rbp - 0x40]	       355	vterm.c	FUNCTION_26	ELSE_3	IF_6
0x4000ec2	          0x2b45bc	             sub eax, dword [rbp - 0x44]	       355	vterm.c	FUNCTION_26	ELSE_3	IF_6
0x4000ec5	          0x8945c4	             mov dword [rbp - 0x3c], eax	       355	vterm.c	FUNCTION_26	ELSE_3	IF_6
0x4000ec8	        0x837db800	               cmp dword [rbp - 0x48], 0	       357	vterm.c	FUNCTION_26	IF_7
0x4000ecc	            0x7e0b	                           jle 0x4000ed9	       357	vterm.c	FUNCTION_26	IF_7
0x4000ece	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       358	vterm.c	FUNCTION_26	IF_7
0x4000ed1	          0x2b45b8	             sub eax, dword [rbp - 0x48]	       358	vterm.c	FUNCTION_26	IF_7
0x4000ed4	          0x8945c8	             mov dword [rbp - 0x38], eax	       358	vterm.c	FUNCTION_26	IF_7
0x4000ed7	            0xeb0f	                           jmp 0x4000ee8	       358	vterm.c	FUNCTION_26	IF_7
0x4000ed9	        0x837db800	               cmp dword [rbp - 0x48], 0	       359	vterm.c	FUNCTION_26	ELSE_4	IF_8
0x4000edd	            0x7909	                           jns 0x4000ee8	       359	vterm.c	FUNCTION_26	ELSE_4	IF_8
0x4000edf	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       360	vterm.c	FUNCTION_26	ELSE_4	IF_8
0x4000ee2	          0x2b45b8	             sub eax, dword [rbp - 0x48]	       360	vterm.c	FUNCTION_26	ELSE_4	IF_8
0x4000ee5	          0x8945cc	             mov dword [rbp - 0x34], eax	       360	vterm.c	FUNCTION_26	ELSE_4	IF_8
0x4000ee8	        0x488b7dc0	             mov rdi, qword [rbp - 0x40]	       362	vterm.c	FUNCTION_26
0x4000eec	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	       362	vterm.c	FUNCTION_26
0x4000ef0	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       362	vterm.c	FUNCTION_26
0x4000ef4	        0x488b4d10	            mov rcx, qword [rbp + 0x10] 	       362	vterm.c	FUNCTION_26
0x4000ef8	      0xba00000000	                              mov edx, 0	       362	vterm.c	FUNCTION_26
0x4000efd	            0xffd0	                                call rax	       362	vterm.c	FUNCTION_26
0x4000eff	              0xc9	                                   leave	       363	vterm.c	FUNCTION_26
0x4000f00	              0xc3	                                     ret	       363	vterm.c	FUNCTION_26
vterm_new	ELSE,0:FOR,0:CALL,1:IF,0:DO,0:WHILE,0:functions,0:SWITCH,0	13
0x40002fa	              0x55	                                push rbp	        35	vterm.c	FUNCTION_5
0x40002fb	          0x4889e5	                            mov rbp, rsp	        35	vterm.c	FUNCTION_5
0x40002fe	        0x4883ec10	                           sub rsp, 0x10	        35	vterm.c	FUNCTION_5
0x4000302	          0x897dfc	                mov dword [rbp - 4], edi	        35	vterm.c	FUNCTION_5
0x4000305	          0x8975f8	                mov dword [rbp - 8], esi	        35	vterm.c	FUNCTION_5
0x4000308	          0x8b75f8	                mov esi, dword [rbp - 8]	        36	vterm.c	FUNCTION_5	CALL_1
0x400030b	          0x8b45fc	                mov eax, dword [rbp - 4]	        36	vterm.c	FUNCTION_5	CALL_1
0x400030e	      0xb900000000	                              mov ecx, 0	        36	vterm.c	FUNCTION_5	CALL_1
0x4000313	      0xba00000000	                              mov edx, 0	        36	vterm.c	FUNCTION_5	CALL_1
0x4000318	            0x89c7	                            mov edi, eax	        36	vterm.c	FUNCTION_5	CALL_1
0x400031a	      0xe800000000	                          call 0x400031f	        36	vterm.c	FUNCTION_5	CALL_1
0x400031f	              0xc9	                                   leave	        37	vterm.c	FUNCTION_5
0x4000320	              0xc3	                                     ret	        37	vterm.c	FUNCTION_5
vterm_get_attr_type	ELSE,0:FOR,0:CALL,0:IF,0:DO,0:WHILE,0:functions,0:SWITCH,1	31
0x4000c97	              0x55	                                push rbp	       261	vterm.c	FUNCTION_24
0x4000c98	          0x4889e5	                            mov rbp, rsp	       261	vterm.c	FUNCTION_24
0x4000c9b	          0x897dfc	                mov dword [rbp - 4], edi	       261	vterm.c	FUNCTION_24
0x4000c9e	        0x837dfc0a	                cmp dword [rbp - 4], 0xa	       262	vterm.c	FUNCTION_24	SWITCH_1
0x4000ca2	            0x7753	                            ja 0x4000cf7	       262	vterm.c	FUNCTION_24	SWITCH_1
0x4000ca4	          0x8b45fc	                mov eax, dword [rbp - 4]	       262	vterm.c	FUNCTION_24	SWITCH_1
0x4000ca7	    0x488b04c50000	                  mov rax, qword [rax*8]	       262	vterm.c	FUNCTION_24	SWITCH_1
0x4000caf	            0xffe0	                                 jmp rax	       262	vterm.c	FUNCTION_24	SWITCH_1
0x4000cb1	      0xb801000000	                              mov eax, 1	       263	vterm.c	FUNCTION_24	SWITCH_1
0x4000cb6	            0xeb44	                           jmp 0x4000cfc	       263	vterm.c	FUNCTION_24	SWITCH_1
0x4000cb8	      0xb802000000	                              mov eax, 2	       264	vterm.c	FUNCTION_24	SWITCH_1
0x4000cbd	            0xeb3d	                           jmp 0x4000cfc	       264	vterm.c	FUNCTION_24	SWITCH_1
0x4000cbf	      0xb801000000	                              mov eax, 1	       265	vterm.c	FUNCTION_24	SWITCH_1
0x4000cc4	            0xeb36	                           jmp 0x4000cfc	       265	vterm.c	FUNCTION_24	SWITCH_1
0x4000cc6	      0xb801000000	                              mov eax, 1	       266	vterm.c	FUNCTION_24	SWITCH_1
0x4000ccb	            0xeb2f	                           jmp 0x4000cfc	       266	vterm.c	FUNCTION_24	SWITCH_1
0x4000ccd	      0xb801000000	                              mov eax, 1	       267	vterm.c	FUNCTION_24	SWITCH_1
0x4000cd2	            0xeb28	                           jmp 0x4000cfc	       267	vterm.c	FUNCTION_24	SWITCH_1
0x4000cd4	      0xb801000000	                              mov eax, 1	       268	vterm.c	FUNCTION_24	SWITCH_1
0x4000cd9	            0xeb21	                           jmp 0x4000cfc	       268	vterm.c	FUNCTION_24	SWITCH_1
0x4000cdb	      0xb802000000	                              mov eax, 2	       269	vterm.c	FUNCTION_24	SWITCH_1
0x4000ce0	            0xeb1a	                           jmp 0x4000cfc	       269	vterm.c	FUNCTION_24	SWITCH_1
0x4000ce2	      0xb804000000	                              mov eax, 4	       270	vterm.c	FUNCTION_24	SWITCH_1
0x4000ce7	            0xeb13	                           jmp 0x4000cfc	       270	vterm.c	FUNCTION_24	SWITCH_1
0x4000ce9	      0xb804000000	                              mov eax, 4	       271	vterm.c	FUNCTION_24	SWITCH_1
0x4000cee	            0xeb0c	                           jmp 0x4000cfc	       271	vterm.c	FUNCTION_24	SWITCH_1
0x4000cf0	      0xb800000000	                              mov eax, 0	       273	vterm.c	FUNCTION_24	SWITCH_1
0x4000cf5	            0xeb05	                           jmp 0x4000cfc	       273	vterm.c	FUNCTION_24	SWITCH_1
0x4000cf7	      0xb800000000	                              mov eax, 0	       275	vterm.c	FUNCTION_24
0x4000cfc	              0x5d	                                 pop rbp	       276	vterm.c	FUNCTION_24
0x4000cfd	              0xc3	                                     ret	       276	vterm.c	FUNCTION_24
vterm_output_read	ELSE,0:FOR,0:CALL,2:IF,2:DO,0:WHILE,0:functions,0:SWITCH,0	46
0x4000bd7	              0x55	                                push rbp	       246	vterm.c	FUNCTION_23
0x4000bd8	          0x4889e5	                            mov rbp, rsp	       246	vterm.c	FUNCTION_23
0x4000bdb	        0x4883ec20	                           sub rsp, 0x20	       246	vterm.c	FUNCTION_23
0x4000bdf	        0x48897df8	                mov qword [rbp - 8], rdi	       246	vterm.c	FUNCTION_23
0x4000be3	        0x488975f0	             mov qword [rbp - 0x10], rsi	       246	vterm.c	FUNCTION_23
0x4000be7	        0x488955e8	             mov qword [rbp - 0x18], rdx	       246	vterm.c	FUNCTION_23
0x4000beb	        0x488b45f8	                mov rax, qword [rbp - 8]	       247	vterm.c	FUNCTION_23	IF_1
0x4000bef	    0x488b80100100	           mov rax, qword [rax + 0x110] 	       247	vterm.c	FUNCTION_23	IF_1
0x4000bf6	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       247	vterm.c	FUNCTION_23	IF_1
0x4000bfa	            0x730f	                           jae 0x4000c0b	       247	vterm.c	FUNCTION_23	IF_1
0x4000bfc	        0x488b45f8	                mov rax, qword [rbp - 8]	       248	vterm.c	FUNCTION_23	IF_1
0x4000c00	    0x488b80100100	           mov rax, qword [rax + 0x110] 	       248	vterm.c	FUNCTION_23	IF_1
0x4000c07	        0x488945e8	             mov qword [rbp - 0x18], rax	       248	vterm.c	FUNCTION_23	IF_1
0x4000c0b	        0x488b45f8	                mov rax, qword [rbp - 8]	       250	vterm.c	FUNCTION_23	CALL_1
0x4000c0f	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	       250	vterm.c	FUNCTION_23	CALL_1
0x4000c16	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       250	vterm.c	FUNCTION_23	CALL_1
0x4000c1a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       250	vterm.c	FUNCTION_23	CALL_1
0x4000c1e	          0x4889ce	                            mov rsi, rcx	       250	vterm.c	FUNCTION_23	CALL_1
0x4000c21	          0x4889c7	                            mov rdi, rax	       250	vterm.c	FUNCTION_23	CALL_1
0x4000c24	      0xe800000000	                          call 0x4000c29	       250	vterm.c	FUNCTION_23	CALL_1
0x4000c29	        0x488b45f8	                mov rax, qword [rbp - 8]	       252	vterm.c	FUNCTION_23	IF_2
0x4000c2d	    0x488b80100100	           mov rax, qword [rax + 0x110] 	       252	vterm.c	FUNCTION_23	IF_2
0x4000c34	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       252	vterm.c	FUNCTION_23	IF_2
0x4000c38	            0x763a	                           jbe 0x4000c74	       252	vterm.c	FUNCTION_23	IF_2
0x4000c3a	        0x488b45f8	                mov rax, qword [rbp - 8]	       253	vterm.c	FUNCTION_23	CALL_2
0x4000c3e	    0x488b80100100	           mov rax, qword [rax + 0x110] 	       253	vterm.c	FUNCTION_23	CALL_2
0x4000c45	        0x482b45e8	             sub rax, qword [rbp - 0x18]	       253	vterm.c	FUNCTION_23	CALL_2
0x4000c49	          0x4889c2	                            mov rdx, rax	       253	vterm.c	FUNCTION_23	CALL_2
0x4000c4c	        0x488b45f8	                mov rax, qword [rbp - 8]	       253	vterm.c	FUNCTION_23	CALL_2
0x4000c50	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	       253	vterm.c	FUNCTION_23	CALL_2
0x4000c57	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       253	vterm.c	FUNCTION_23	CALL_2
0x4000c5b	          0x4801c1	                            add rcx, rax	       253	vterm.c	FUNCTION_23	CALL_2
0x4000c5e	        0x488b45f8	                mov rax, qword [rbp - 8]	       253	vterm.c	FUNCTION_23	CALL_2
0x4000c62	    0x488b80000100	           mov rax, qword [rax + 0x100] 	       253	vterm.c	FUNCTION_23	CALL_2
0x4000c69	          0x4889ce	                            mov rsi, rcx	       253	vterm.c	FUNCTION_23	CALL_2
0x4000c6c	          0x4889c7	                            mov rdi, rax	       253	vterm.c	FUNCTION_23	CALL_2
0x4000c6f	      0xe800000000	                          call 0x4000c74	       253	vterm.c	FUNCTION_23	CALL_2
0x4000c74	        0x488b45f8	                mov rax, qword [rbp - 8]	       255	vterm.c	FUNCTION_23
0x4000c78	    0x488b80100100	           mov rax, qword [rax + 0x110] 	       255	vterm.c	FUNCTION_23
0x4000c7f	        0x482b45e8	             sub rax, qword [rbp - 0x18]	       255	vterm.c	FUNCTION_23
0x4000c83	          0x4889c2	                            mov rdx, rax	       255	vterm.c	FUNCTION_23
0x4000c86	        0x488b45f8	                mov rax, qword [rbp - 8]	       255	vterm.c	FUNCTION_23
0x4000c8a	    0x488990100100	            mov qword [rax + 0x110], rdx	       255	vterm.c	FUNCTION_23
0x4000c91	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       257	vterm.c	FUNCTION_23
0x4000c95	              0xc9	                                   leave	       258	vterm.c	FUNCTION_23
0x4000c96	              0xc3	                                     ret	       258	vterm.c	FUNCTION_23
vterm_pos_cmp	ELSE,0:FOR,0:CALL,0:IF,0:DO,0:WHILE,0:functions,0:SWITCH,0	19
0x4000040	              0x55	                                push rbp	        46	vterm.h	FUNCTION_28
0x4000041	          0x4889e5	                            mov rbp, rsp	        46	vterm.h	FUNCTION_28
0x4000044	        0x48897df0	             mov qword [rbp - 0x10], rdi	        46	vterm.h	FUNCTION_28
0x4000048	        0x488975e0	             mov qword [rbp - 0x20], rsi	        46	vterm.h	FUNCTION_28
0x400004c	          0x8b55f0	             mov edx, dword [rbp - 0x10]	        47	vterm.h	FUNCTION_28
0x400004f	          0x8b45e0	             mov eax, dword [rbp - 0x20]	        47	vterm.h	FUNCTION_28
0x4000052	            0x39c2	                            cmp edx, eax	        47	vterm.h	FUNCTION_28
0x4000054	            0x750c	                           jne 0x4000062	        47	vterm.h	FUNCTION_28
0x4000056	          0x8b55f4	              mov edx, dword [rbp - 0xc]	        47	vterm.h	FUNCTION_28
0x4000059	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	        47	vterm.h	FUNCTION_28
0x400005c	            0x29c2	                            sub edx, eax	        47	vterm.h	FUNCTION_28
0x400005e	            0x89d0	                            mov eax, edx	        47	vterm.h	FUNCTION_28
0x4000060	            0xeb0a	                           jmp 0x400006c	        47	vterm.h	FUNCTION_28
0x4000062	          0x8b55f0	             mov edx, dword [rbp - 0x10]	        47	vterm.h	FUNCTION_28
0x4000065	          0x8b45e0	             mov eax, dword [rbp - 0x20]	        47	vterm.h	FUNCTION_28
0x4000068	            0x29c2	                            sub edx, eax	        47	vterm.h	FUNCTION_28
0x400006a	            0x89d0	                            mov eax, edx	        47	vterm.h	FUNCTION_28
0x400006c	              0x5d	                                 pop rbp	        48	vterm.h	FUNCTION_28
0x400006d	              0xc3	                                     ret	        48	vterm.h	FUNCTION_28
vterm_output_get_buffer_remaining	ELSE,0:FOR,0:CALL,0:IF,0:DO,0:WHILE,0:functions,0:SWITCH,0	11
0x4000bb1	              0x55	                                push rbp	       241	vterm.c	FUNCTION_22
0x4000bb2	          0x4889e5	                            mov rbp, rsp	       241	vterm.c	FUNCTION_22
0x4000bb5	        0x48897df8	                mov qword [rbp - 8], rdi	       241	vterm.c	FUNCTION_22
0x4000bb9	        0x488b45f8	                mov rax, qword [rbp - 8]	       242	vterm.c	FUNCTION_22
0x4000bbd	    0x488b90080100	           mov rdx, qword [rax + 0x108] 	       242	vterm.c	FUNCTION_22
0x4000bc4	        0x488b45f8	                mov rax, qword [rbp - 8]	       242	vterm.c	FUNCTION_22
0x4000bc8	    0x488b80100100	           mov rax, qword [rax + 0x110] 	       242	vterm.c	FUNCTION_22
0x4000bcf	          0x4829c2	                            sub rdx, rax	       242	vterm.c	FUNCTION_22
0x4000bd2	          0x4889d0	                            mov rax, rdx	       242	vterm.c	FUNCTION_22
0x4000bd5	              0x5d	                                 pop rbp	       243	vterm.c	FUNCTION_22
0x4000bd6	              0xc3	                                     ret	       243	vterm.c	FUNCTION_22
outbuffer_is_full	ELSE,0:FOR,0:CALL,0:IF,0:DO,0:WHILE,0:functions,0:SWITCH,0	13
0x40006c6	              0x55	                                push rbp	       129	vterm.c	FUNCTION_15
0x40006c7	          0x4889e5	                            mov rbp, rsp	       129	vterm.c	FUNCTION_15
0x40006ca	        0x48897df8	                mov qword [rbp - 8], rdi	       129	vterm.c	FUNCTION_15
0x40006ce	        0x488b45f8	                mov rax, qword [rbp - 8]	       130	vterm.c	FUNCTION_15
0x40006d2	    0x488b90100100	           mov rdx, qword [rax + 0x110] 	       130	vterm.c	FUNCTION_15
0x40006d9	        0x488b45f8	                mov rax, qword [rbp - 8]	       130	vterm.c	FUNCTION_15
0x40006dd	    0x488b80080100	           mov rax, qword [rax + 0x108] 	       130	vterm.c	FUNCTION_15
0x40006e4	        0x4883e801	                              sub rax, 1	       130	vterm.c	FUNCTION_15
0x40006e8	          0x4839c2	                            cmp rdx, rax	       130	vterm.c	FUNCTION_15
0x40006eb	           0xf93c0	                                setae al	       130	vterm.c	FUNCTION_15
0x40006ee	           0xfb6c0	                           movzx eax, al	       130	vterm.c	FUNCTION_15
0x40006f1	              0x5d	                                 pop rbp	       131	vterm.c	FUNCTION_15
0x40006f2	              0xc3	                                     ret	       131	vterm.c	FUNCTION_15
default_free	ELSE,0:FOR,0:CALL,1:IF,0:DO,0:WHILE,0:functions,0:SWITCH,0	11
0x40002db	              0x55	                                push rbp	        25	vterm.c	FUNCTION_4
0x40002dc	          0x4889e5	                            mov rbp, rsp	        25	vterm.c	FUNCTION_4
0x40002df	        0x4883ec10	                           sub rsp, 0x10	        25	vterm.c	FUNCTION_4
0x40002e3	        0x48897df8	                mov qword [rbp - 8], rdi	        25	vterm.c	FUNCTION_4
0x40002e7	        0x488975f0	             mov qword [rbp - 0x10], rsi	        25	vterm.c	FUNCTION_4
0x40002eb	        0x488b45f8	                mov rax, qword [rbp - 8]	        26	vterm.c	FUNCTION_4	CALL_1
0x40002ef	          0x4889c7	                            mov rdi, rax	        26	vterm.c	FUNCTION_4	CALL_1
0x40002f2	      0xe800000000	                          call 0x40002f7	        26	vterm.c	FUNCTION_4	CALL_1
0x40002f7	              0x90	                                     nop	        27	vterm.c	FUNCTION_4
0x40002f8	              0xc9	                                   leave	        27	vterm.c	FUNCTION_4
0x40002f9	              0xc3	                                     ret	        27	vterm.c	FUNCTION_4
vterm_get_size	ELSE,0:FOR,0:CALL,0:IF,2:DO,0:WHILE,0:functions,0:SWITCH,0	20
0x4000534	              0x55	                                push rbp	        91	vterm.c	FUNCTION_10
0x4000535	          0x4889e5	                            mov rbp, rsp	        91	vterm.c	FUNCTION_10
0x4000538	        0x48897df8	                mov qword [rbp - 8], rdi	        91	vterm.c	FUNCTION_10
0x400053c	        0x488975f0	             mov qword [rbp - 0x10], rsi	        91	vterm.c	FUNCTION_10
0x4000540	        0x488955e8	             mov qword [rbp - 0x18], rdx	        91	vterm.c	FUNCTION_10
0x4000544	      0x48837df000	               cmp qword [rbp - 0x10], 0	        92	vterm.c	FUNCTION_10	IF_1
0x4000549	            0x740d	                            je 0x4000558	        92	vterm.c	FUNCTION_10	IF_1
0x400054b	        0x488b45f8	                mov rax, qword [rbp - 8]	        93	vterm.c	FUNCTION_10	IF_1
0x400054f	          0x8b5010	            mov edx, dword [rax + 0x10] 	        93	vterm.c	FUNCTION_10	IF_1
0x4000552	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        93	vterm.c	FUNCTION_10	IF_1
0x4000556	            0x8910	                    mov dword [rax], edx	        93	vterm.c	FUNCTION_10	IF_1
0x4000558	      0x48837de800	               cmp qword [rbp - 0x18], 0	        94	vterm.c	FUNCTION_10	IF_2
0x400055d	            0x740d	                            je 0x400056c	        94	vterm.c	FUNCTION_10	IF_2
0x400055f	        0x488b45f8	                mov rax, qword [rbp - 8]	        95	vterm.c	FUNCTION_10	IF_2
0x4000563	          0x8b5014	            mov edx, dword [rax + 0x14] 	        95	vterm.c	FUNCTION_10	IF_2
0x4000566	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        95	vterm.c	FUNCTION_10	IF_2
0x400056a	            0x8910	                    mov dword [rax], edx	        95	vterm.c	FUNCTION_10	IF_2
0x400056c	              0x90	                                     nop	        96	vterm.c	FUNCTION_10
0x400056d	              0x5d	                                 pop rbp	        96	vterm.c	FUNCTION_10
0x400056e	              0xc3	                                     ret	        96	vterm.c	FUNCTION_10
vterm_push_output_sprintf	ELSE,0:FOR,0:CALL,3:IF,0:DO,0:WHILE,0:functions,0:SWITCH,0	41
0x40007c7	              0x55	                                push rbp	       185	vterm.c	FUNCTION_17
0x40007c8	          0x4889e5	                            mov rbp, rsp	       185	vterm.c	FUNCTION_17
0x40007cb	    0x4881ece00000	                           sub rsp, 0xe0	       185	vterm.c	FUNCTION_17
0x40007d2	    0x4889bd28ffff	             mov qword [rbp - 0xd8], rdi	       185	vterm.c	FUNCTION_17
0x40007d9	    0x4889b520ffff	             mov qword [rbp - 0xe0], rsi	       185	vterm.c	FUNCTION_17
0x40007e0	    0x48899560ffff	             mov qword [rbp - 0xa0], rdx	       185	vterm.c	FUNCTION_17
0x40007e7	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	       185	vterm.c	FUNCTION_17
0x40007ee	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	       185	vterm.c	FUNCTION_17
0x40007f5	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	       185	vterm.c	FUNCTION_17
0x40007fc	            0x84c0	                             test al, al	       185	vterm.c	FUNCTION_17
0x40007fe	            0x7420	                            je 0x4000820	       185	vterm.c	FUNCTION_17
0x4000800	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	       185	vterm.c	FUNCTION_17
0x4000804	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	       185	vterm.c	FUNCTION_17
0x4000808	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	       185	vterm.c	FUNCTION_17
0x400080c	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	       185	vterm.c	FUNCTION_17
0x4000810	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	       185	vterm.c	FUNCTION_17
0x4000814	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	       185	vterm.c	FUNCTION_17
0x4000818	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	       185	vterm.c	FUNCTION_17
0x400081c	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	       185	vterm.c	FUNCTION_17
0x4000820	    0x64488b042528	                mov rax, qword fs:[0x28]	       185	vterm.c	FUNCTION_17
0x4000829	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       185	vterm.c	FUNCTION_17
0x4000830	            0x31c0	                            xor eax, eax	       185	vterm.c	FUNCTION_17
0x4000832	    0xc78530ffffff	           mov dword [rbp - 0xd0], 0x10 	       187	vterm.c	FUNCTION_17	CALL_1
0x400083c	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	       187	vterm.c	FUNCTION_17	CALL_1
0x4000846	        0x488d4510	                   lea rax, [rbp + 0x10]	       187	vterm.c	FUNCTION_17	CALL_1
0x400084a	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       187	vterm.c	FUNCTION_17	CALL_1
0x4000851	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       187	vterm.c	FUNCTION_17	CALL_1
0x4000858	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       187	vterm.c	FUNCTION_17	CALL_1
0x400085f	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	       188	vterm.c	FUNCTION_17	CALL_2
0x4000866	    0x488b8d20ffff	             mov rcx, qword [rbp - 0xe0]	       188	vterm.c	FUNCTION_17	CALL_2
0x400086d	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       188	vterm.c	FUNCTION_17	CALL_2
0x4000874	          0x4889ce	                            mov rsi, rcx	       188	vterm.c	FUNCTION_17	CALL_2
0x4000877	          0x4889c7	                            mov rdi, rax	       188	vterm.c	FUNCTION_17	CALL_2
0x400087a	      0xe800000000	                          call 0x400087f	       188	vterm.c	FUNCTION_17	CALL_2
0x400087f	              0x90	                                     nop	       190	vterm.c	FUNCTION_17
0x4000880	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       190	vterm.c	FUNCTION_17
0x4000887	    0x644833042528	                xor rax, qword fs:[0x28]	       190	vterm.c	FUNCTION_17
0x4000890	            0x7405	                            je 0x4000897	       190	vterm.c	FUNCTION_17
0x4000892	      0xe800000000	                          call 0x4000897	       190	vterm.c	FUNCTION_17
0x4000897	              0xc9	                                   leave	       190	vterm.c	FUNCTION_17
0x4000898	              0xc3	                                     ret	       190	vterm.c	FUNCTION_17
fill_utf8	ELSE,0:FOR,0:CALL,1:IF,0:DO,0:WHILE,1:functions,0:SWITCH,1	73
0x40001ba	              0x55	                                push rbp	        24	utf8.h	FUNCTION_2
0x40001bb	          0x4889e5	                            mov rbp, rsp	        24	utf8.h	FUNCTION_2
0x40001be	        0x4883ec20	                           sub rsp, 0x20	        24	utf8.h	FUNCTION_2
0x40001c2	        0x48897de8	             mov qword [rbp - 0x18], rdi	        24	utf8.h	FUNCTION_2
0x40001c6	        0x488975e0	             mov qword [rbp - 0x20], rsi	        24	utf8.h	FUNCTION_2
0x40001ca	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        25	utf8.h	FUNCTION_2	CALL_1
0x40001ce	          0x4889c7	                            mov rdi, rax	        25	utf8.h	FUNCTION_2	CALL_1
0x40001d1	      0xe800000000	                          call 0x40001d6	        25	utf8.h	FUNCTION_2	CALL_1
0x40001d6	          0x8945fc	                mov dword [rbp - 4], eax	        25	utf8.h	FUNCTION_2	CALL_1
0x40001d9	          0x8b45fc	                mov eax, dword [rbp - 4]	        28	utf8.h	FUNCTION_2
0x40001dc	          0x8945f8	                mov dword [rbp - 8], eax	        28	utf8.h	FUNCTION_2
0x40001df	            0xeb22	                           jmp 0x4000203	        29	utf8.h	FUNCTION_2	WHILE_1
0x40001e1	        0x836df801	                  sub dword [rbp - 8], 1	        30	utf8.h	FUNCTION_2	WHILE_1
0x40001e5	          0x8b45f8	                mov eax, dword [rbp - 8]	        31	utf8.h	FUNCTION_2	WHILE_1
0x40001e8	          0x4863d0	                         movsxd rdx, eax	        31	utf8.h	FUNCTION_2	WHILE_1
0x40001eb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        31	utf8.h	FUNCTION_2	WHILE_1
0x40001ef	          0x4801d0	                            add rax, rdx	        31	utf8.h	FUNCTION_2	WHILE_1
0x40001f2	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        31	utf8.h	FUNCTION_2	WHILE_1
0x40001f6	          0x83e23f	                           and edx, 0x3f	        31	utf8.h	FUNCTION_2	WHILE_1
0x40001f9	          0x83ca80	                      or edx, 0xffffff80	        31	utf8.h	FUNCTION_2	WHILE_1
0x40001fc	            0x8810	                      mov byte [rax], dl	        31	utf8.h	FUNCTION_2	WHILE_1
0x40001fe	      0x48c17de806	               sar qword [rbp - 0x18], 6	        32	utf8.h	FUNCTION_2	WHILE_1
0x4000203	        0x837df801	                  cmp dword [rbp - 8], 1	        29	utf8.h	FUNCTION_2	WHILE_1
0x4000207	            0x7fd8	                            jg 0x40001e1	        29	utf8.h	FUNCTION_2	WHILE_1
0x4000209	        0x837dfc06	                  cmp dword [rbp - 4], 6	        35	utf8.h	FUNCTION_2	SWITCH_1
0x400020d	     0xf8781000000	                            ja 0x4000294	        35	utf8.h	FUNCTION_2	SWITCH_1
0x4000213	          0x8b45fc	                mov eax, dword [rbp - 4]	        35	utf8.h	FUNCTION_2	SWITCH_1
0x4000216	    0x488b04c50000	                  mov rax, qword [rax*8]	        35	utf8.h	FUNCTION_2	SWITCH_1
0x400021e	            0xffe0	                                 jmp rax	        35	utf8.h	FUNCTION_2	SWITCH_1
0x4000220	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        36	utf8.h	FUNCTION_2	SWITCH_1
0x4000224	          0x83e07f	                           and eax, 0x7f	        36	utf8.h	FUNCTION_2	SWITCH_1
0x4000227	            0x89c2	                            mov edx, eax	        36	utf8.h	FUNCTION_2	SWITCH_1
0x4000229	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        36	utf8.h	FUNCTION_2	SWITCH_1
0x400022d	            0x8810	                      mov byte [rax], dl	        36	utf8.h	FUNCTION_2	SWITCH_1
0x400022f	            0xeb63	                           jmp 0x4000294	        36	utf8.h	FUNCTION_2	SWITCH_1
0x4000231	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        37	utf8.h	FUNCTION_2	SWITCH_1
0x4000235	          0x83e01f	                           and eax, 0x1f	        37	utf8.h	FUNCTION_2	SWITCH_1
0x4000238	          0x83c8c0	                      or eax, 0xffffffc0	        37	utf8.h	FUNCTION_2	SWITCH_1
0x400023b	            0x89c2	                            mov edx, eax	        37	utf8.h	FUNCTION_2	SWITCH_1
0x400023d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        37	utf8.h	FUNCTION_2	SWITCH_1
0x4000241	            0x8810	                      mov byte [rax], dl	        37	utf8.h	FUNCTION_2	SWITCH_1
0x4000243	            0xeb4f	                           jmp 0x4000294	        37	utf8.h	FUNCTION_2	SWITCH_1
0x4000245	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        38	utf8.h	FUNCTION_2	SWITCH_1
0x4000249	          0x83e00f	                            and eax, 0xf	        38	utf8.h	FUNCTION_2	SWITCH_1
0x400024c	          0x83c8e0	                      or eax, 0xffffffe0	        38	utf8.h	FUNCTION_2	SWITCH_1
0x400024f	            0x89c2	                            mov edx, eax	        38	utf8.h	FUNCTION_2	SWITCH_1
0x4000251	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        38	utf8.h	FUNCTION_2	SWITCH_1
0x4000255	            0x8810	                      mov byte [rax], dl	        38	utf8.h	FUNCTION_2	SWITCH_1
0x4000257	            0xeb3b	                           jmp 0x4000294	        38	utf8.h	FUNCTION_2	SWITCH_1
0x4000259	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        39	utf8.h	FUNCTION_2	SWITCH_1
0x400025d	          0x83e007	                              and eax, 7	        39	utf8.h	FUNCTION_2	SWITCH_1
0x4000260	          0x83c8f0	                      or eax, 0xfffffff0	        39	utf8.h	FUNCTION_2	SWITCH_1
0x4000263	            0x89c2	                            mov edx, eax	        39	utf8.h	FUNCTION_2	SWITCH_1
0x4000265	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        39	utf8.h	FUNCTION_2	SWITCH_1
0x4000269	            0x8810	                      mov byte [rax], dl	        39	utf8.h	FUNCTION_2	SWITCH_1
0x400026b	            0xeb27	                           jmp 0x4000294	        39	utf8.h	FUNCTION_2	SWITCH_1
0x400026d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        40	utf8.h	FUNCTION_2	SWITCH_1
0x4000271	          0x83e003	                              and eax, 3	        40	utf8.h	FUNCTION_2	SWITCH_1
0x4000274	          0x83c8f8	                      or eax, 0xfffffff8	        40	utf8.h	FUNCTION_2	SWITCH_1
0x4000277	            0x89c2	                            mov edx, eax	        40	utf8.h	FUNCTION_2	SWITCH_1
0x4000279	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        40	utf8.h	FUNCTION_2	SWITCH_1
0x400027d	            0x8810	                      mov byte [rax], dl	        40	utf8.h	FUNCTION_2	SWITCH_1
0x400027f	            0xeb13	                           jmp 0x4000294	        40	utf8.h	FUNCTION_2	SWITCH_1
0x4000281	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        41	utf8.h	FUNCTION_2	SWITCH_1
0x4000285	          0x83e001	                              and eax, 1	        41	utf8.h	FUNCTION_2	SWITCH_1
0x4000288	          0x83c8fc	                      or eax, 0xfffffffc	        41	utf8.h	FUNCTION_2	SWITCH_1
0x400028b	            0x89c2	                            mov edx, eax	        41	utf8.h	FUNCTION_2	SWITCH_1
0x400028d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        41	utf8.h	FUNCTION_2	SWITCH_1
0x4000291	            0x8810	                      mov byte [rax], dl	        41	utf8.h	FUNCTION_2	SWITCH_1
0x4000293	              0x90	                                     nop	        41	utf8.h	FUNCTION_2	SWITCH_1
0x4000294	          0x8b45fc	                mov eax, dword [rbp - 4]	        44	utf8.h	FUNCTION_2
0x4000297	              0xc9	                                   leave	        45	utf8.h	FUNCTION_2
0x4000298	              0xc3	                                     ret	        45	utf8.h	FUNCTION_2
vterm_rect_contains	ELSE,0:FOR,0:CALL,0:IF,0:DO,0:WHILE,0:functions,0:SWITCH,0	32
0x400006e	              0x55	                                push rbp	        64	vterm.h	FUNCTION_29
0x400006f	          0x4889e5	                            mov rbp, rsp	        64	vterm.h	FUNCTION_29
0x4000072	              0x53	                                push rbx	        64	vterm.h	FUNCTION_29
0x4000073	          0x4889f8	                            mov rax, rdi	        64	vterm.h	FUNCTION_29
0x4000076	          0x4889c1	                            mov rcx, rax	        64	vterm.h	FUNCTION_29
0x4000079	          0x4889d3	                            mov rbx, rdx	        64	vterm.h	FUNCTION_29
0x400007c	          0x4889f3	                            mov rbx, rsi	        64	vterm.h	FUNCTION_29
0x400007f	        0x48894de0	             mov qword [rbp - 0x20], rcx	        64	vterm.h	FUNCTION_29
0x4000083	        0x48895de8	             mov qword [rbp - 0x18], rbx	        64	vterm.h	FUNCTION_29
0x4000087	        0x488955d0	             mov qword [rbp - 0x30], rdx	        64	vterm.h	FUNCTION_29
0x400008b	          0x8b55d0	             mov edx, dword [rbp - 0x30]	        65	vterm.h	FUNCTION_29
0x400008e	          0x8b45e0	             mov eax, dword [rbp - 0x20]	        65	vterm.h	FUNCTION_29
0x4000091	            0x39c2	                            cmp edx, eax	        66	vterm.h	FUNCTION_29
0x4000093	            0x7c25	                            jl 0x40000ba	        66	vterm.h	FUNCTION_29
0x4000095	          0x8b55d0	             mov edx, dword [rbp - 0x30]	        65	vterm.h	FUNCTION_29
0x4000098	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	        65	vterm.h	FUNCTION_29
0x400009b	            0x39c2	                            cmp edx, eax	        65	vterm.h	FUNCTION_29
0x400009d	            0x7d1b	                           jge 0x40000ba	        65	vterm.h	FUNCTION_29
0x400009f	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	        66	vterm.h	FUNCTION_29
0x40000a2	          0x8b45e8	             mov eax, dword [rbp - 0x18]	        66	vterm.h	FUNCTION_29
0x40000a5	            0x39c2	                            cmp edx, eax	        65	vterm.h	FUNCTION_29
0x40000a7	            0x7c11	                            jl 0x40000ba	        65	vterm.h	FUNCTION_29
0x40000a9	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	        66	vterm.h	FUNCTION_29
0x40000ac	          0x8b45ec	             mov eax, dword [rbp - 0x14]	        66	vterm.h	FUNCTION_29
0x40000af	            0x39c2	                            cmp edx, eax	        66	vterm.h	FUNCTION_29
0x40000b1	            0x7d07	                           jge 0x40000ba	        66	vterm.h	FUNCTION_29
0x40000b3	      0xb801000000	                              mov eax, 1	        66	vterm.h	FUNCTION_29
0x40000b8	            0xeb05	                           jmp 0x40000bf	        66	vterm.h	FUNCTION_29
0x40000ba	      0xb800000000	                              mov eax, 0	        66	vterm.h	FUNCTION_29
0x40000bf	              0x5b	                                 pop rbx	        67	vterm.h	FUNCTION_29
0x40000c0	              0x5d	                                 pop rbp	        67	vterm.h	FUNCTION_29
0x40000c1	              0xc3	                                     ret	        67	vterm.h	FUNCTION_29
default_malloc	ELSE,0:FOR,0:CALL,2:IF,1:DO,0:WHILE,0:functions,0:SWITCH,0	19
0x4000299	              0x55	                                push rbp	        17	vterm.c	FUNCTION_3
0x400029a	          0x4889e5	                            mov rbp, rsp	        17	vterm.c	FUNCTION_3
0x400029d	        0x4883ec20	                           sub rsp, 0x20	        17	vterm.c	FUNCTION_3
0x40002a1	        0x48897de8	             mov qword [rbp - 0x18], rdi	        17	vterm.c	FUNCTION_3
0x40002a5	        0x488975e0	             mov qword [rbp - 0x20], rsi	        17	vterm.c	FUNCTION_3
0x40002a9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        18	vterm.c	FUNCTION_3	CALL_1
0x40002ad	          0x4889c7	                            mov rdi, rax	        18	vterm.c	FUNCTION_3	CALL_1
0x40002b0	      0xe800000000	                          call 0x40002b5	        18	vterm.c	FUNCTION_3	CALL_1
0x40002b5	        0x488945f8	                mov qword [rbp - 8], rax	        18	vterm.c	FUNCTION_3	CALL_1
0x40002b9	      0x48837df800	                  cmp qword [rbp - 8], 0	        19	vterm.c	FUNCTION_3	IF_1
0x40002be	            0x7415	                            je 0x40002d5	        19	vterm.c	FUNCTION_3	IF_1
0x40002c0	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        20	vterm.c	FUNCTION_3	CALL_2
0x40002c4	        0x488b45f8	                mov rax, qword [rbp - 8]	        20	vterm.c	FUNCTION_3	CALL_2
0x40002c8	      0xbe00000000	                              mov esi, 0	        20	vterm.c	FUNCTION_3	CALL_2
0x40002cd	          0x4889c7	                            mov rdi, rax	        20	vterm.c	FUNCTION_3	CALL_2
0x40002d0	      0xe800000000	                          call 0x40002d5	        20	vterm.c	FUNCTION_3	CALL_2
0x40002d5	        0x488b45f8	                mov rax, qword [rbp - 8]	        21	vterm.c	FUNCTION_3
0x40002d9	              0xc9	                                   leave	        22	vterm.c	FUNCTION_3
0x40002da	              0xc3	                                     ret	        22	vterm.c	FUNCTION_3
vterm_push_output_vsprintf	ELSE,1:FOR,0:CALL,3:IF,4:DO,0:WHILE,0:functions,0:SWITCH,0	54
0x40006f3	              0x55	                                push rbp	       146	vterm.c	FUNCTION_16
0x40006f4	          0x4889e5	                            mov rbp, rsp	       146	vterm.c	FUNCTION_16
0x40006f7	        0x4883ec30	                           sub rsp, 0x30	       146	vterm.c	FUNCTION_16
0x40006fb	        0x48897de8	             mov qword [rbp - 0x18], rdi	       146	vterm.c	FUNCTION_16
0x40006ff	        0x488975e0	             mov qword [rbp - 0x20], rsi	       146	vterm.c	FUNCTION_16
0x4000703	        0x488955d8	             mov qword [rbp - 0x28], rdx	       146	vterm.c	FUNCTION_16
0x4000707	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       153	vterm.c	FUNCTION_16	IF_1	CALL_1
0x400070b	          0x4889c7	                            mov rdi, rax	       153	vterm.c	FUNCTION_16	IF_1	CALL_1
0x400070e	      0xe8b3ffffff	              call sym.outbuffer_is_full	       153	vterm.c	FUNCTION_16	IF_1	CALL_1
0x4000713	            0x85c0	                           test eax, eax	       153	vterm.c	FUNCTION_16	IF_1	CALL_1
0x4000715	     0xf85a9000000	                           jne 0x40007c4	       153	vterm.c	FUNCTION_16	IF_1	CALL_1
0x400071b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       160	vterm.c	FUNCTION_16
0x400071f	    0x488b90080100	           mov rdx, qword [rax + 0x108] 	       160	vterm.c	FUNCTION_16
0x4000726	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       160	vterm.c	FUNCTION_16
0x400072a	    0x488b80100100	           mov rax, qword [rax + 0x110] 	       160	vterm.c	FUNCTION_16
0x4000731	          0x4889d6	                            mov rsi, rdx	       159	vterm.c	FUNCTION_16
0x4000734	          0x4829c6	                            sub rsi, rax	       159	vterm.c	FUNCTION_16
0x4000737	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       159	vterm.c	FUNCTION_16
0x400073b	    0x488b90000100	           mov rdx, qword [rax + 0x100] 	       159	vterm.c	FUNCTION_16
0x4000742	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       159	vterm.c	FUNCTION_16
0x4000746	    0x488b80100100	           mov rax, qword [rax + 0x110] 	       159	vterm.c	FUNCTION_16
0x400074d	        0x488d3c02	                    lea rdi, [rdx + rax]	       159	vterm.c	FUNCTION_16
0x4000751	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       159	vterm.c	FUNCTION_16
0x4000755	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       159	vterm.c	FUNCTION_16
0x4000759	          0x4889d1	                            mov rcx, rdx	       159	vterm.c	FUNCTION_16
0x400075c	          0x4889c2	                            mov rdx, rax	       159	vterm.c	FUNCTION_16
0x400075f	      0xe800000000	                          call 0x4000764	       159	vterm.c	FUNCTION_16
0x4000764	          0x8945fc	                mov dword [rbp - 4], eax	       159	vterm.c	FUNCTION_16
0x4000767	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       163	vterm.c	FUNCTION_16	IF_2
0x400076b	    0x488b80080100	           mov rax, qword [rax + 0x108] 	       163	vterm.c	FUNCTION_16	IF_2
0x4000772	            0x89c2	                            mov edx, eax	       163	vterm.c	FUNCTION_16	IF_2
0x4000774	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       163	vterm.c	FUNCTION_16	IF_2
0x4000778	    0x488b80100100	           mov rax, qword [rax + 0x110] 	       163	vterm.c	FUNCTION_16	IF_2
0x400077f	            0x29c2	                            sub edx, eax	       163	vterm.c	FUNCTION_16	IF_2
0x4000781	            0x89d0	                            mov eax, edx	       163	vterm.c	FUNCTION_16	IF_2
0x4000783	          0x3b45fc	                cmp eax, dword [rbp - 4]	       163	vterm.c	FUNCTION_16	IF_2
0x4000786	            0x751c	                           jne 0x40007a4	       163	vterm.c	FUNCTION_16	IF_2
0x4000788	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       165	vterm.c	FUNCTION_16	IF_2
0x400078c	    0x488b80080100	           mov rax, qword [rax + 0x108] 	       165	vterm.c	FUNCTION_16	IF_2
0x4000793	        0x488d50ff	                      lea rdx, [rax - 1]	       165	vterm.c	FUNCTION_16	IF_2
0x4000797	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       165	vterm.c	FUNCTION_16	IF_2
0x400079b	    0x488990100100	            mov qword [rax + 0x110], rdx	       165	vterm.c	FUNCTION_16	IF_2
0x40007a2	            0xeb21	                           jmp 0x40007c5	       165	vterm.c	FUNCTION_16	IF_2
0x40007a4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       168	vterm.c	FUNCTION_16	ELSE_1
0x40007a8	    0x488b90100100	           mov rdx, qword [rax + 0x110] 	       168	vterm.c	FUNCTION_16	ELSE_1
0x40007af	          0x8b45fc	                mov eax, dword [rbp - 4]	       168	vterm.c	FUNCTION_16	ELSE_1
0x40007b2	            0x4898	                                    cdqe	       168	vterm.c	FUNCTION_16	ELSE_1
0x40007b4	          0x4801c2	                            add rdx, rax	       168	vterm.c	FUNCTION_16	ELSE_1
0x40007b7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       168	vterm.c	FUNCTION_16	ELSE_1
0x40007bb	    0x488990100100	            mov qword [rax + 0x110], rdx	       168	vterm.c	FUNCTION_16	ELSE_1
0x40007c2	            0xeb01	                           jmp 0x40007c5	       168	vterm.c	FUNCTION_16	ELSE_1
0x40007c4	              0x90	                                     nop	       155	vterm.c	FUNCTION_16	IF_1
0x40007c5	              0xc9	                                   leave	       182	vterm.c	FUNCTION_16
0x40007c6	              0xc3	                                     ret	       182	vterm.c	FUNCTION_16
vterm_allocator_free	ELSE,0:FOR,0:CALL,0:IF,0:DO,0:WHILE,0:functions,0:SWITCH,0	17
0x4000502	              0x55	                                push rbp	        86	vterm.c	FUNCTION_9
0x4000503	          0x4889e5	                            mov rbp, rsp	        86	vterm.c	FUNCTION_9
0x4000506	        0x4883ec10	                           sub rsp, 0x10	        86	vterm.c	FUNCTION_9
0x400050a	        0x48897df8	                mov qword [rbp - 8], rdi	        86	vterm.c	FUNCTION_9
0x400050e	        0x488975f0	             mov qword [rbp - 0x10], rsi	        86	vterm.c	FUNCTION_9
0x4000512	        0x488b45f8	                mov rax, qword [rbp - 8]	        87	vterm.c	FUNCTION_9
0x4000516	          0x488b00	                    mov rax, qword [rax]	        87	vterm.c	FUNCTION_9
0x4000519	        0x488b4008	                mov rax, qword [rax + 8]	        87	vterm.c	FUNCTION_9
0x400051d	        0x488b55f8	                mov rdx, qword [rbp - 8]	        87	vterm.c	FUNCTION_9
0x4000521	        0x488b4a08	                mov rcx, qword [rdx + 8]	        87	vterm.c	FUNCTION_9
0x4000525	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        87	vterm.c	FUNCTION_9
0x4000529	          0x4889ce	                            mov rsi, rcx	        87	vterm.c	FUNCTION_9
0x400052c	          0x4889d7	                            mov rdi, rdx	        87	vterm.c	FUNCTION_9
0x400052f	            0xffd0	                                call rax	        87	vterm.c	FUNCTION_9
0x4000531	              0x90	                                     nop	        88	vterm.c	FUNCTION_9
0x4000532	              0xc9	                                   leave	        88	vterm.c	FUNCTION_9
0x4000533	              0xc3	                                     ret	        88	vterm.c	FUNCTION_9
vterm_free	ELSE,0:FOR,0:CALL,5:IF,2:DO,0:WHILE,0:functions,0:SWITCH,0	40
0x4000436	              0x55	                                push rbp	        67	vterm.c	FUNCTION_7
0x4000437	          0x4889e5	                            mov rbp, rsp	        67	vterm.c	FUNCTION_7
0x400043a	        0x4883ec10	                           sub rsp, 0x10	        67	vterm.c	FUNCTION_7
0x400043e	        0x48897df8	                mov qword [rbp - 8], rdi	        67	vterm.c	FUNCTION_7
0x4000442	        0x488b45f8	                mov rax, qword [rbp - 8]	        68	vterm.c	FUNCTION_7	IF_1
0x4000446	    0x488b80200100	           mov rax, qword [rax + 0x120] 	        68	vterm.c	FUNCTION_7	IF_1
0x400044d	          0x4885c0	                           test rax, rax	        68	vterm.c	FUNCTION_7	IF_1
0x4000450	            0x7413	                            je 0x4000465	        68	vterm.c	FUNCTION_7	IF_1
0x4000452	        0x488b45f8	                mov rax, qword [rbp - 8]	        69	vterm.c	FUNCTION_7	CALL_1
0x4000456	    0x488b80200100	           mov rax, qword [rax + 0x120] 	        69	vterm.c	FUNCTION_7	CALL_1
0x400045d	          0x4889c7	                            mov rdi, rax	        69	vterm.c	FUNCTION_7	CALL_1
0x4000460	      0xe800000000	                          call 0x4000465	        69	vterm.c	FUNCTION_7	CALL_1
0x4000465	        0x488b45f8	                mov rax, qword [rbp - 8]	        71	vterm.c	FUNCTION_7	IF_2
0x4000469	    0x488b80180100	           mov rax, qword [rax + 0x118] 	        71	vterm.c	FUNCTION_7	IF_2
0x4000470	          0x4885c0	                           test rax, rax	        71	vterm.c	FUNCTION_7	IF_2
0x4000473	            0x7413	                            je 0x4000488	        71	vterm.c	FUNCTION_7	IF_2
0x4000475	        0x488b45f8	                mov rax, qword [rbp - 8]	        72	vterm.c	FUNCTION_7	CALL_2
0x4000479	    0x488b80180100	           mov rax, qword [rax + 0x118] 	        72	vterm.c	FUNCTION_7	CALL_2
0x4000480	          0x4889c7	                            mov rdi, rax	        72	vterm.c	FUNCTION_7	CALL_2
0x4000483	      0xe800000000	                          call 0x4000488	        72	vterm.c	FUNCTION_7	CALL_2
0x4000488	        0x488b45f8	                mov rax, qword [rbp - 8]	        74	vterm.c	FUNCTION_7	CALL_3
0x400048c	    0x488b90e80000	            mov rdx, qword [rax + 0xe8] 	        74	vterm.c	FUNCTION_7	CALL_3
0x4000493	        0x488b45f8	                mov rax, qword [rbp - 8]	        74	vterm.c	FUNCTION_7	CALL_3
0x4000497	          0x4889d6	                            mov rsi, rdx	        74	vterm.c	FUNCTION_7	CALL_3
0x400049a	          0x4889c7	                            mov rdi, rax	        74	vterm.c	FUNCTION_7	CALL_3
0x400049d	      0xe800000000	                          call 0x40004a2	        74	vterm.c	FUNCTION_7	CALL_3
0x40004a2	        0x488b45f8	                mov rax, qword [rbp - 8]	        75	vterm.c	FUNCTION_7	CALL_4
0x40004a6	    0x488b90000100	           mov rdx, qword [rax + 0x100] 	        75	vterm.c	FUNCTION_7	CALL_4
0x40004ad	        0x488b45f8	                mov rax, qword [rbp - 8]	        75	vterm.c	FUNCTION_7	CALL_4
0x40004b1	          0x4889d6	                            mov rsi, rdx	        75	vterm.c	FUNCTION_7	CALL_4
0x40004b4	          0x4889c7	                            mov rdi, rax	        75	vterm.c	FUNCTION_7	CALL_4
0x40004b7	      0xe800000000	                          call 0x40004bc	        75	vterm.c	FUNCTION_7	CALL_4
0x40004bc	        0x488b55f8	                mov rdx, qword [rbp - 8]	        77	vterm.c	FUNCTION_7	CALL_5
0x40004c0	        0x488b45f8	                mov rax, qword [rbp - 8]	        77	vterm.c	FUNCTION_7	CALL_5
0x40004c4	          0x4889d6	                            mov rsi, rdx	        77	vterm.c	FUNCTION_7	CALL_5
0x40004c7	          0x4889c7	                            mov rdi, rax	        77	vterm.c	FUNCTION_7	CALL_5
0x40004ca	      0xe800000000	                          call 0x40004cf	        77	vterm.c	FUNCTION_7	CALL_5
0x40004cf	              0x90	                                     nop	        78	vterm.c	FUNCTION_7
0x40004d0	              0xc9	                                   leave	        78	vterm.c	FUNCTION_7
0x40004d1	              0xc3	                                     ret	        78	vterm.c	FUNCTION_7
vterm_set_utf8	ELSE,0:FOR,0:CALL,0:IF,0:DO,0:WHILE,0:functions,0:SWITCH,0	17
0x40005f8	              0x55	                                push rbp	       113	vterm.c	FUNCTION_13
0x40005f9	          0x4889e5	                            mov rbp, rsp	       113	vterm.c	FUNCTION_13
0x40005fc	        0x48897df8	                mov qword [rbp - 8], rdi	       113	vterm.c	FUNCTION_13
0x4000600	          0x8975f4	              mov dword [rbp - 0xc], esi	       113	vterm.c	FUNCTION_13
0x4000603	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       114	vterm.c	FUNCTION_13
0x4000606	          0x83e001	                              and eax, 1	       114	vterm.c	FUNCTION_13
0x4000609	            0x89c2	                            mov edx, eax	       114	vterm.c	FUNCTION_13
0x400060b	        0x488b45f8	                mov rax, qword [rbp - 8]	       114	vterm.c	FUNCTION_13
0x400060f	            0x89d1	                            mov ecx, edx	       114	vterm.c	FUNCTION_13
0x4000611	          0x83e101	                              and ecx, 1	       114	vterm.c	FUNCTION_13
0x4000614	         0xfb65018	           movzx edx, byte [rax + 0x18] 	       114	vterm.c	FUNCTION_13
0x4000618	          0x83e2fe	                     and edx, 0xfffffffe	       114	vterm.c	FUNCTION_13
0x400061b	             0x9ca	                             or edx, ecx	       114	vterm.c	FUNCTION_13
0x400061d	          0x885018	               mov byte [rax + 0x18], dl	       114	vterm.c	FUNCTION_13
0x4000620	              0x90	                                     nop	       115	vterm.c	FUNCTION_13
0x4000621	              0x5d	                                 pop rbp	       115	vterm.c	FUNCTION_13
0x4000622	              0xc3	                                     ret	       115	vterm.c	FUNCTION_13
vterm_output_get_buffer_current	ELSE,0:FOR,0:CALL,0:IF,0:DO,0:WHILE,0:functions,0:SWITCH,0	7
0x4000b9c	              0x55	                                push rbp	       236	vterm.c	FUNCTION_21
0x4000b9d	          0x4889e5	                            mov rbp, rsp	       236	vterm.c	FUNCTION_21
0x4000ba0	        0x48897df8	                mov qword [rbp - 8], rdi	       236	vterm.c	FUNCTION_21
0x4000ba4	        0x488b45f8	                mov rax, qword [rbp - 8]	       237	vterm.c	FUNCTION_21
0x4000ba8	    0x488b80100100	           mov rax, qword [rax + 0x110] 	       237	vterm.c	FUNCTION_21
0x4000baf	              0x5d	                                 pop rbp	       238	vterm.c	FUNCTION_21
0x4000bb0	              0xc3	                                     ret	       238	vterm.c	FUNCTION_21
vterm_new_with_allocator	ELSE,0:FOR,0:CALL,2:IF,0:DO,0:WHILE,0:functions,0:SWITCH,0	61
0x4000321	              0x55	                                push rbp	        40	vterm.c	FUNCTION_6
0x4000322	          0x4889e5	                            mov rbp, rsp	        40	vterm.c	FUNCTION_6
0x4000325	        0x4883ec30	                           sub rsp, 0x30	        40	vterm.c	FUNCTION_6
0x4000329	          0x897dec	             mov dword [rbp - 0x14], edi	        40	vterm.c	FUNCTION_6
0x400032c	          0x8975e8	             mov dword [rbp - 0x18], esi	        40	vterm.c	FUNCTION_6
0x400032f	        0x488955e0	             mov qword [rbp - 0x20], rdx	        40	vterm.c	FUNCTION_6
0x4000333	        0x48894dd8	             mov qword [rbp - 0x28], rcx	        40	vterm.c	FUNCTION_6
0x4000337	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        42	vterm.c	FUNCTION_6
0x400033b	          0x488b00	                    mov rax, qword [rax]	        42	vterm.c	FUNCTION_6
0x400033e	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	        42	vterm.c	FUNCTION_6
0x4000342	          0x4889d6	                            mov rsi, rdx	        42	vterm.c	FUNCTION_6
0x4000345	      0xbf28010000	                          mov edi, 0x128	        42	vterm.c	FUNCTION_6
0x400034a	            0xffd0	                                call rax	        42	vterm.c	FUNCTION_6
0x400034c	        0x488945f8	                mov qword [rbp - 8], rax	        42	vterm.c	FUNCTION_6
0x4000350	        0x488b45f8	                mov rax, qword [rbp - 8]	        44	vterm.c	FUNCTION_6
0x4000354	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	        44	vterm.c	FUNCTION_6
0x4000358	          0x488910	                    mov qword [rax], rdx	        44	vterm.c	FUNCTION_6
0x400035b	        0x488b45f8	                mov rax, qword [rbp - 8]	        45	vterm.c	FUNCTION_6
0x400035f	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	        45	vterm.c	FUNCTION_6
0x4000363	        0x48895008	                mov qword [rax + 8], rdx	        45	vterm.c	FUNCTION_6
0x4000367	        0x488b45f8	                mov rax, qword [rbp - 8]	        47	vterm.c	FUNCTION_6
0x400036b	          0x8b55ec	             mov edx, dword [rbp - 0x14]	        47	vterm.c	FUNCTION_6
0x400036e	          0x895010	             mov dword [rax + 0x10], edx	        47	vterm.c	FUNCTION_6
0x4000371	        0x488b45f8	                mov rax, qword [rbp - 8]	        48	vterm.c	FUNCTION_6
0x4000375	          0x8b55e8	             mov edx, dword [rbp - 0x18]	        48	vterm.c	FUNCTION_6
0x4000378	          0x895014	             mov dword [rax + 0x14], edx	        48	vterm.c	FUNCTION_6
0x400037b	        0x488b45f8	                mov rax, qword [rbp - 8]	        50	vterm.c	FUNCTION_6
0x400037f	    0xc74020000000	               mov dword [rax + 0x20], 0	        50	vterm.c	FUNCTION_6
0x4000386	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	vterm.c	FUNCTION_6
0x400038a	    0x48c780d00000	               mov qword [rax + 0xd0], 0	        52	vterm.c	FUNCTION_6
0x4000395	        0x488b45f8	                mov rax, qword [rbp - 8]	        53	vterm.c	FUNCTION_6
0x4000399	    0x48c780d80000	               mov qword [rax + 0xd8], 0	        53	vterm.c	FUNCTION_6
0x40003a4	        0x488b45f8	                mov rax, qword [rbp - 8]	        55	vterm.c	FUNCTION_6
0x40003a8	    0x48c780f00000	          mov qword [rax + 0xf0], 0x1f4 	        55	vterm.c	FUNCTION_6
0x40003b3	        0x488b45f8	                mov rax, qword [rbp - 8]	        56	vterm.c	FUNCTION_6
0x40003b7	    0x48c780f80000	               mov qword [rax + 0xf8], 0	        56	vterm.c	FUNCTION_6
0x40003c2	        0x488b45f8	                mov rax, qword [rbp - 8]	        57	vterm.c	FUNCTION_6	CALL_1
0x40003c6	    0x488b90f00000	            mov rdx, qword [rax + 0xf0] 	        57	vterm.c	FUNCTION_6	CALL_1
0x40003cd	        0x488b45f8	                mov rax, qword [rbp - 8]	        57	vterm.c	FUNCTION_6	CALL_1
0x40003d1	          0x4889d6	                            mov rsi, rdx	        57	vterm.c	FUNCTION_6	CALL_1
0x40003d4	          0x4889c7	                            mov rdi, rax	        57	vterm.c	FUNCTION_6	CALL_1
0x40003d7	      0xe800000000	                          call 0x40003dc	        57	vterm.c	FUNCTION_6	CALL_1
0x40003dc	          0x4889c2	                            mov rdx, rax	        57	vterm.c	FUNCTION_6	CALL_1
0x40003df	        0x488b45f8	                mov rax, qword [rbp - 8]	        57	vterm.c	FUNCTION_6	CALL_1
0x40003e3	    0x488990e80000	             mov qword [rax + 0xe8], rdx	        57	vterm.c	FUNCTION_6	CALL_1
0x40003ea	        0x488b45f8	                mov rax, qword [rbp - 8]	        59	vterm.c	FUNCTION_6
0x40003ee	    0x48c780080100	          mov qword [rax + 0x108], 0xc8 	        59	vterm.c	FUNCTION_6
0x40003f9	        0x488b45f8	                mov rax, qword [rbp - 8]	        60	vterm.c	FUNCTION_6
0x40003fd	    0x48c780100100	              mov qword [rax + 0x110], 0	        60	vterm.c	FUNCTION_6
0x4000408	        0x488b45f8	                mov rax, qword [rbp - 8]	        61	vterm.c	FUNCTION_6	CALL_2
0x400040c	    0x488b90080100	           mov rdx, qword [rax + 0x108] 	        61	vterm.c	FUNCTION_6	CALL_2
0x4000413	        0x488b45f8	                mov rax, qword [rbp - 8]	        61	vterm.c	FUNCTION_6	CALL_2
0x4000417	          0x4889d6	                            mov rsi, rdx	        61	vterm.c	FUNCTION_6	CALL_2
0x400041a	          0x4889c7	                            mov rdi, rax	        61	vterm.c	FUNCTION_6	CALL_2
0x400041d	      0xe800000000	                          call 0x4000422	        61	vterm.c	FUNCTION_6	CALL_2
0x4000422	          0x4889c2	                            mov rdx, rax	        61	vterm.c	FUNCTION_6	CALL_2
0x4000425	        0x488b45f8	                mov rax, qword [rbp - 8]	        61	vterm.c	FUNCTION_6	CALL_2
0x4000429	    0x488990000100	            mov qword [rax + 0x100], rdx	        61	vterm.c	FUNCTION_6	CALL_2
0x4000430	        0x488b45f8	                mov rax, qword [rbp - 8]	        63	vterm.c	FUNCTION_6
0x4000434	              0xc9	                                   leave	        64	vterm.c	FUNCTION_6
0x4000435	              0xc3	                                     ret	        64	vterm.c	FUNCTION_6
vterm_set_size	ELSE,0:FOR,0:CALL,0:IF,1:DO,0:WHILE,0:functions,0:SWITCH,0	33
0x400056f	              0x55	                                push rbp	        99	vterm.c	FUNCTION_11
0x4000570	          0x4889e5	                            mov rbp, rsp	        99	vterm.c	FUNCTION_11
0x4000573	        0x4883ec10	                           sub rsp, 0x10	        99	vterm.c	FUNCTION_11
0x4000577	        0x48897df8	                mov qword [rbp - 8], rdi	        99	vterm.c	FUNCTION_11
0x400057b	          0x8975f4	              mov dword [rbp - 0xc], esi	        99	vterm.c	FUNCTION_11
0x400057e	          0x8955f0	             mov dword [rbp - 0x10], edx	        99	vterm.c	FUNCTION_11
0x4000581	        0x488b45f8	                mov rax, qword [rbp - 8]	       100	vterm.c	FUNCTION_11
0x4000585	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       100	vterm.c	FUNCTION_11
0x4000588	          0x895010	             mov dword [rax + 0x10], edx	       100	vterm.c	FUNCTION_11
0x400058b	        0x488b45f8	                mov rax, qword [rbp - 8]	       101	vterm.c	FUNCTION_11
0x400058f	          0x8b55f0	             mov edx, dword [rbp - 0x10]	       101	vterm.c	FUNCTION_11
0x4000592	          0x895014	             mov dword [rax + 0x14], edx	       101	vterm.c	FUNCTION_11
0x4000595	        0x488b45f8	                mov rax, qword [rbp - 8]	       103	vterm.c	FUNCTION_11	IF_1
0x4000599	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	       103	vterm.c	FUNCTION_11	IF_1
0x40005a0	          0x4885c0	                           test rax, rax	       103	vterm.c	FUNCTION_11	IF_1
0x40005a3	            0x7438	                            je 0x40005dd	       103	vterm.c	FUNCTION_11	IF_1
0x40005a5	        0x488b45f8	                mov rax, qword [rbp - 8]	       103	vterm.c	FUNCTION_11	IF_1
0x40005a9	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	       103	vterm.c	FUNCTION_11	IF_1
0x40005b0	        0x488b4030	            mov rax, qword [rax + 0x30] 	       103	vterm.c	FUNCTION_11	IF_1
0x40005b4	          0x4885c0	                           test rax, rax	       103	vterm.c	FUNCTION_11	IF_1
0x40005b7	            0x7424	                            je 0x40005dd	       103	vterm.c	FUNCTION_11	IF_1
0x40005b9	        0x488b45f8	                mov rax, qword [rbp - 8]	       104	vterm.c	FUNCTION_11	IF_1
0x40005bd	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	       104	vterm.c	FUNCTION_11	IF_1
0x40005c4	        0x488b4030	            mov rax, qword [rax + 0x30] 	       104	vterm.c	FUNCTION_11	IF_1
0x40005c8	        0x488b55f8	                mov rdx, qword [rbp - 8]	       104	vterm.c	FUNCTION_11	IF_1
0x40005cc	    0x488b92d80000	            mov rdx, qword [rdx + 0xd8] 	       104	vterm.c	FUNCTION_11	IF_1
0x40005d3	          0x8b75f0	             mov esi, dword [rbp - 0x10]	       104	vterm.c	FUNCTION_11	IF_1
0x40005d6	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	       104	vterm.c	FUNCTION_11	IF_1
0x40005d9	            0x89cf	                            mov edi, ecx	       104	vterm.c	FUNCTION_11	IF_1
0x40005db	            0xffd0	                                call rax	       104	vterm.c	FUNCTION_11	IF_1
0x40005dd	              0x90	                                     nop	       105	vterm.c	FUNCTION_11
0x40005de	              0xc9	                                   leave	       105	vterm.c	FUNCTION_11
0x40005df	              0xc3	                                     ret	       105	vterm.c	FUNCTION_11
vterm_output_get_buffer_size	ELSE,0:FOR,0:CALL,0:IF,0:DO,0:WHILE,0:functions,0:SWITCH,0	7
0x4000b87	              0x55	                                push rbp	       231	vterm.c	FUNCTION_20
0x4000b88	          0x4889e5	                            mov rbp, rsp	       231	vterm.c	FUNCTION_20
0x4000b8b	        0x48897df8	                mov qword [rbp - 8], rdi	       231	vterm.c	FUNCTION_20
0x4000b8f	        0x488b45f8	                mov rax, qword [rbp - 8]	       232	vterm.c	FUNCTION_20
0x4000b93	    0x488b80080100	           mov rax, qword [rax + 0x108] 	       232	vterm.c	FUNCTION_20
0x4000b9a	              0x5d	                                 pop rbp	       233	vterm.c	FUNCTION_20
0x4000b9b	              0xc3	                                     ret	       233	vterm.c	FUNCTION_20
vterm_color_equal	ELSE,0:FOR,0:CALL,0:IF,0:DO,0:WHILE,0:functions,0:SWITCH,0	21
0x400011d	              0x55	                                push rbp	        61	vterm_internal.h	FUNCTION_31
0x400011e	          0x4889e5	                            mov rbp, rsp	        61	vterm_internal.h	FUNCTION_31
0x4000121	          0x897df0	             mov dword [rbp - 0x10], edi	        61	vterm_internal.h	FUNCTION_31
0x4000124	          0x8975e0	             mov dword [rbp - 0x20], esi	        61	vterm_internal.h	FUNCTION_31
0x4000127	         0xfb655f0	            movzx edx, byte [rbp - 0x10]	        62	vterm_internal.h	FUNCTION_31
0x400012b	         0xfb645e0	            movzx eax, byte [rbp - 0x20]	        62	vterm_internal.h	FUNCTION_31
0x400012f	            0x38c2	                              cmp dl, al	        62	vterm_internal.h	FUNCTION_31
0x4000131	            0x751f	                           jne 0x4000152	        62	vterm_internal.h	FUNCTION_31
0x4000133	         0xfb655f1	             movzx edx, byte [rbp - 0xf]	        62	vterm_internal.h	FUNCTION_31
0x4000137	         0xfb645e1	            movzx eax, byte [rbp - 0x1f]	        62	vterm_internal.h	FUNCTION_31
0x400013b	            0x38c2	                              cmp dl, al	        62	vterm_internal.h	FUNCTION_31
0x400013d	            0x7513	                           jne 0x4000152	        62	vterm_internal.h	FUNCTION_31
0x400013f	         0xfb655f2	             movzx edx, byte [rbp - 0xe]	        62	vterm_internal.h	FUNCTION_31
0x4000143	         0xfb645e2	            movzx eax, byte [rbp - 0x1e]	        62	vterm_internal.h	FUNCTION_31
0x4000147	            0x38c2	                              cmp dl, al	        62	vterm_internal.h	FUNCTION_31
0x4000149	            0x7507	                           jne 0x4000152	        62	vterm_internal.h	FUNCTION_31
0x400014b	      0xb801000000	                              mov eax, 1	        62	vterm_internal.h	FUNCTION_31
0x4000150	            0xeb05	                           jmp 0x4000157	        62	vterm_internal.h	FUNCTION_31
0x4000152	      0xb800000000	                              mov eax, 0	        62	vterm_internal.h	FUNCTION_31
0x4000157	              0x5d	                                 pop rbp	        63	vterm_internal.h	FUNCTION_31
0x4000158	              0xc3	                                     ret	        63	vterm_internal.h	FUNCTION_31
vterm_rect_move	ELSE,0:FOR,0:CALL,0:IF,0:DO,0:WHILE,0:functions,0:SWITCH,0	32
0x40000c2	              0x55	                                push rbp	        76	vterm.h	FUNCTION_30
0x40000c3	          0x4889e5	                            mov rbp, rsp	        76	vterm.h	FUNCTION_30
0x40000c6	        0x48897df8	                mov qword [rbp - 8], rdi	        76	vterm.h	FUNCTION_30
0x40000ca	          0x8975f4	              mov dword [rbp - 0xc], esi	        76	vterm.h	FUNCTION_30
0x40000cd	          0x8955f0	             mov dword [rbp - 0x10], edx	        76	vterm.h	FUNCTION_30
0x40000d0	        0x488b45f8	                mov rax, qword [rbp - 8]	        77	vterm.h	FUNCTION_30
0x40000d4	            0x8b10	                    mov edx, dword [rax]	        77	vterm.h	FUNCTION_30
0x40000d6	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        77	vterm.h	FUNCTION_30
0x40000d9	             0x1c2	                            add edx, eax	        77	vterm.h	FUNCTION_30
0x40000db	        0x488b45f8	                mov rax, qword [rbp - 8]	        77	vterm.h	FUNCTION_30
0x40000df	            0x8910	                    mov dword [rax], edx	        77	vterm.h	FUNCTION_30
0x40000e1	        0x488b45f8	                mov rax, qword [rbp - 8]	        77	vterm.h	FUNCTION_30
0x40000e5	          0x8b5004	                mov edx, dword [rax + 4]	        77	vterm.h	FUNCTION_30
0x40000e8	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        77	vterm.h	FUNCTION_30
0x40000eb	             0x1c2	                            add edx, eax	        77	vterm.h	FUNCTION_30
0x40000ed	        0x488b45f8	                mov rax, qword [rbp - 8]	        77	vterm.h	FUNCTION_30
0x40000f1	          0x895004	                mov dword [rax + 4], edx	        77	vterm.h	FUNCTION_30
0x40000f4	        0x488b45f8	                mov rax, qword [rbp - 8]	        78	vterm.h	FUNCTION_30
0x40000f8	          0x8b5008	                mov edx, dword [rax + 8]	        78	vterm.h	FUNCTION_30
0x40000fb	          0x8b45f0	             mov eax, dword [rbp - 0x10]	        78	vterm.h	FUNCTION_30
0x40000fe	             0x1c2	                            add edx, eax	        78	vterm.h	FUNCTION_30
0x4000100	        0x488b45f8	                mov rax, qword [rbp - 8]	        78	vterm.h	FUNCTION_30
0x4000104	          0x895008	                mov dword [rax + 8], edx	        78	vterm.h	FUNCTION_30
0x4000107	        0x488b45f8	                mov rax, qword [rbp - 8]	        78	vterm.h	FUNCTION_30
0x400010b	          0x8b500c	              mov edx, dword [rax + 0xc]	        78	vterm.h	FUNCTION_30
0x400010e	          0x8b45f0	             mov eax, dword [rbp - 0x10]	        78	vterm.h	FUNCTION_30
0x4000111	             0x1c2	                            add edx, eax	        78	vterm.h	FUNCTION_30
0x4000113	        0x488b45f8	                mov rax, qword [rbp - 8]	        78	vterm.h	FUNCTION_30
0x4000117	          0x89500c	              mov dword [rax + 0xc], edx	        78	vterm.h	FUNCTION_30
0x400011a	              0x90	                                     nop	        79	vterm.h	FUNCTION_30
0x400011b	              0x5d	                                 pop rbp	        79	vterm.h	FUNCTION_30
0x400011c	              0xc3	                                     ret	        79	vterm.h	FUNCTION_30
vterm_push_output_sprintf_dcs	ELSE,1:FOR,0:CALL,7:IF,2:DO,0:WHILE,0:functions,0:SWITCH,0	76
0x4000a0a	              0x55	                                push rbp	       211	vterm.c	FUNCTION_19
0x4000a0b	          0x4889e5	                            mov rbp, rsp	       211	vterm.c	FUNCTION_19
0x4000a0e	    0x4881ecf00000	                           sub rsp, 0xf0	       211	vterm.c	FUNCTION_19
0x4000a15	    0x4889bd18ffff	             mov qword [rbp - 0xe8], rdi	       211	vterm.c	FUNCTION_19
0x4000a1c	    0x4889b510ffff	             mov qword [rbp - 0xf0], rsi	       211	vterm.c	FUNCTION_19
0x4000a23	    0x48899560ffff	             mov qword [rbp - 0xa0], rdx	       211	vterm.c	FUNCTION_19
0x4000a2a	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	       211	vterm.c	FUNCTION_19
0x4000a31	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	       211	vterm.c	FUNCTION_19
0x4000a38	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	       211	vterm.c	FUNCTION_19
0x4000a3f	            0x84c0	                             test al, al	       211	vterm.c	FUNCTION_19
0x4000a41	            0x7420	                            je 0x4000a63	       211	vterm.c	FUNCTION_19
0x4000a43	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	       211	vterm.c	FUNCTION_19
0x4000a47	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	       211	vterm.c	FUNCTION_19
0x4000a4b	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	       211	vterm.c	FUNCTION_19
0x4000a4f	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	       211	vterm.c	FUNCTION_19
0x4000a53	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	       211	vterm.c	FUNCTION_19
0x4000a57	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	       211	vterm.c	FUNCTION_19
0x4000a5b	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	       211	vterm.c	FUNCTION_19
0x4000a5f	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	       211	vterm.c	FUNCTION_19
0x4000a63	    0x64488b042528	                mov rax, qword fs:[0x28]	       211	vterm.c	FUNCTION_19
0x4000a6c	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       211	vterm.c	FUNCTION_19
0x4000a73	            0x31c0	                            xor eax, eax	       211	vterm.c	FUNCTION_19
0x4000a75	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       212	vterm.c	FUNCTION_19
0x4000a7c	    0x488b80100100	           mov rax, qword [rax + 0x110] 	       212	vterm.c	FUNCTION_19
0x4000a83	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	       212	vterm.c	FUNCTION_19
0x4000a8a	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       215	vterm.c	FUNCTION_19	IF_1
0x4000a91	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       215	vterm.c	FUNCTION_19	IF_1
0x4000a95	          0x83e002	                              and eax, 2	       215	vterm.c	FUNCTION_19	IF_1
0x4000a98	            0x84c0	                             test al, al	       215	vterm.c	FUNCTION_19	IF_1
0x4000a9a	            0x7520	                           jne 0x4000abc	       215	vterm.c	FUNCTION_19	IF_1
0x4000a9c	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       216	vterm.c	FUNCTION_19	CALL_1
0x4000aa3	      0xba50000000	                           mov edx, 0x50	       216	vterm.c	FUNCTION_19	CALL_1
0x4000aa8	      0xbe00000000	                              mov esi, 0	       216	vterm.c	FUNCTION_19	CALL_1
0x4000aad	          0x4889c7	                            mov rdi, rax	       216	vterm.c	FUNCTION_19	CALL_1
0x4000ab0	      0xb800000000	                              mov eax, 0	       216	vterm.c	FUNCTION_19	CALL_1
0x4000ab5	      0xe800000000	                          call 0x4000aba	       216	vterm.c	FUNCTION_19	CALL_1
0x4000aba	            0xeb1e	                           jmp 0x4000ada	       216	vterm.c	FUNCTION_19	CALL_1
0x4000abc	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       218	vterm.c	FUNCTION_19	CALL_2
0x4000ac3	      0xba90000000	                           mov edx, 0x90	       218	vterm.c	FUNCTION_19	CALL_2
0x4000ac8	      0xbe00000000	                              mov esi, 0	       218	vterm.c	FUNCTION_19	CALL_2
0x4000acd	          0x4889c7	                            mov rdi, rax	       218	vterm.c	FUNCTION_19	CALL_2
0x4000ad0	      0xb800000000	                              mov eax, 0	       218	vterm.c	FUNCTION_19	CALL_2
0x4000ad5	      0xe800000000	                          call 0x4000ada	       218	vterm.c	FUNCTION_19	CALL_2
0x4000ada	    0xc78530ffffff	           mov dword [rbp - 0xd0], 0x10 	       220	vterm.c	FUNCTION_19	CALL_3
0x4000ae4	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	       220	vterm.c	FUNCTION_19	CALL_3
0x4000aee	        0x488d4510	                   lea rax, [rbp + 0x10]	       220	vterm.c	FUNCTION_19	CALL_3
0x4000af2	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       220	vterm.c	FUNCTION_19	CALL_3
0x4000af9	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       220	vterm.c	FUNCTION_19	CALL_3
0x4000b00	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       220	vterm.c	FUNCTION_19	CALL_3
0x4000b07	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	       221	vterm.c	FUNCTION_19	CALL_4
0x4000b0e	    0x488b8d10ffff	             mov rcx, qword [rbp - 0xf0]	       221	vterm.c	FUNCTION_19	CALL_4
0x4000b15	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       221	vterm.c	FUNCTION_19	CALL_4
0x4000b1c	          0x4889ce	                            mov rsi, rcx	       221	vterm.c	FUNCTION_19	CALL_4
0x4000b1f	          0x4889c7	                            mov rdi, rax	       221	vterm.c	FUNCTION_19	CALL_4
0x4000b22	      0xe800000000	                          call 0x4000b27	       221	vterm.c	FUNCTION_19	CALL_4
0x4000b27	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       224	vterm.c	FUNCTION_19	CALL_6
0x4000b2e	      0xba00000000	                              mov edx, 0	       224	vterm.c	FUNCTION_19	CALL_6
0x4000b33	      0xbe9c000000	                           mov esi, 0x9c	       224	vterm.c	FUNCTION_19	CALL_6
0x4000b38	          0x4889c7	                            mov rdi, rax	       224	vterm.c	FUNCTION_19	CALL_6
0x4000b3b	      0xb800000000	                              mov eax, 0	       224	vterm.c	FUNCTION_19	CALL_6
0x4000b40	      0xe800000000	                          call 0x4000b45	       224	vterm.c	FUNCTION_19	CALL_6
0x4000b45	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       226	vterm.c	FUNCTION_19	IF_2	CALL_7
0x4000b4c	          0x4889c7	                            mov rdi, rax	       226	vterm.c	FUNCTION_19	IF_2	CALL_7
0x4000b4f	      0xe872fbffff	              call sym.outbuffer_is_full	       226	vterm.c	FUNCTION_19	IF_2	CALL_7
0x4000b54	            0x85c0	                           test eax, eax	       226	vterm.c	FUNCTION_19	IF_2	CALL_7
0x4000b56	            0x7415	                            je 0x4000b6d	       226	vterm.c	FUNCTION_19	IF_2	CALL_7
0x4000b58	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       227	vterm.c	FUNCTION_19	IF_2
0x4000b5f	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	       227	vterm.c	FUNCTION_19	IF_2
0x4000b66	    0x488990100100	            mov qword [rax + 0x110], rdx	       227	vterm.c	FUNCTION_19	IF_2
0x4000b6d	              0x90	                                     nop	       228	vterm.c	FUNCTION_19
0x4000b6e	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       228	vterm.c	FUNCTION_19
0x4000b75	    0x644833042528	                xor rax, qword fs:[0x28]	       228	vterm.c	FUNCTION_19
0x4000b7e	            0x7405	                            je 0x4000b85	       228	vterm.c	FUNCTION_19
0x4000b80	      0xe800000000	                          call 0x4000b85	       228	vterm.c	FUNCTION_19
0x4000b85	              0xc9	                                   leave	       228	vterm.c	FUNCTION_19
0x4000b86	              0xc3	                                     ret	       228	vterm.c	FUNCTION_19
vterm_get_prop_type	ELSE,0:FOR,0:CALL,0:IF,0:DO,0:WHILE,0:functions,0:SWITCH,1	31
0x4000cfe	              0x55	                                push rbp	       279	vterm.c	FUNCTION_25
0x4000cff	          0x4889e5	                            mov rbp, rsp	       279	vterm.c	FUNCTION_25
0x4000d02	          0x897dfc	                mov dword [rbp - 4], edi	       279	vterm.c	FUNCTION_25
0x4000d05	        0x837dfc0a	                cmp dword [rbp - 4], 0xa	       280	vterm.c	FUNCTION_25	SWITCH_1
0x4000d09	            0x7753	                            ja 0x4000d5e	       280	vterm.c	FUNCTION_25	SWITCH_1
0x4000d0b	          0x8b45fc	                mov eax, dword [rbp - 4]	       280	vterm.c	FUNCTION_25	SWITCH_1
0x4000d0e	    0x488b04c50000	                  mov rax, qword [rax*8]	       280	vterm.c	FUNCTION_25	SWITCH_1
0x4000d16	            0xffe0	                                 jmp rax	       280	vterm.c	FUNCTION_25	SWITCH_1
0x4000d18	      0xb801000000	                              mov eax, 1	       281	vterm.c	FUNCTION_25	SWITCH_1
0x4000d1d	            0xeb44	                           jmp 0x4000d63	       281	vterm.c	FUNCTION_25	SWITCH_1
0x4000d1f	      0xb801000000	                              mov eax, 1	       282	vterm.c	FUNCTION_25	SWITCH_1
0x4000d24	            0xeb3d	                           jmp 0x4000d63	       282	vterm.c	FUNCTION_25	SWITCH_1
0x4000d26	      0xb801000000	                              mov eax, 1	       283	vterm.c	FUNCTION_25	SWITCH_1
0x4000d2b	            0xeb36	                           jmp 0x4000d63	       283	vterm.c	FUNCTION_25	SWITCH_1
0x4000d2d	      0xb803000000	                              mov eax, 3	       284	vterm.c	FUNCTION_25	SWITCH_1
0x4000d32	            0xeb2f	                           jmp 0x4000d63	       284	vterm.c	FUNCTION_25	SWITCH_1
0x4000d34	      0xb803000000	                              mov eax, 3	       285	vterm.c	FUNCTION_25	SWITCH_1
0x4000d39	            0xeb28	                           jmp 0x4000d63	       285	vterm.c	FUNCTION_25	SWITCH_1
0x4000d3b	      0xb801000000	                              mov eax, 1	       286	vterm.c	FUNCTION_25	SWITCH_1
0x4000d40	            0xeb21	                           jmp 0x4000d63	       286	vterm.c	FUNCTION_25	SWITCH_1
0x4000d42	      0xb802000000	                              mov eax, 2	       287	vterm.c	FUNCTION_25	SWITCH_1
0x4000d47	            0xeb1a	                           jmp 0x4000d63	       287	vterm.c	FUNCTION_25	SWITCH_1
0x4000d49	      0xb802000000	                              mov eax, 2	       288	vterm.c	FUNCTION_25	SWITCH_1
0x4000d4e	            0xeb13	                           jmp 0x4000d63	       288	vterm.c	FUNCTION_25	SWITCH_1
0x4000d50	      0xb803000000	                              mov eax, 3	       289	vterm.c	FUNCTION_25	SWITCH_1
0x4000d55	            0xeb0c	                           jmp 0x4000d63	       289	vterm.c	FUNCTION_25	SWITCH_1
0x4000d57	      0xb800000000	                              mov eax, 0	       291	vterm.c	FUNCTION_25	SWITCH_1
0x4000d5c	            0xeb05	                           jmp 0x4000d63	       291	vterm.c	FUNCTION_25	SWITCH_1
0x4000d5e	      0xb800000000	                              mov eax, 0	       293	vterm.c	FUNCTION_25
0x4000d63	              0x5d	                                 pop rbp	       294	vterm.c	FUNCTION_25
0x4000d64	              0xc3	                                     ret	       294	vterm.c	FUNCTION_25
vterm_copy_cells	ELSE,2:FOR,2:CALL,0:IF,2:DO,0:WHILE,0:functions,0:SWITCH,0	91
0x4000f01	              0x55	                                push rbp	       369	vterm.c	FUNCTION_27
0x4000f02	          0x4889e5	                            mov rbp, rsp	       369	vterm.c	FUNCTION_27
0x4000f05	        0x4883ec70	                           sub rsp, 0x70	       369	vterm.c	FUNCTION_27
0x4000f09	          0x4889f8	                            mov rax, rdi	       369	vterm.c	FUNCTION_27
0x4000f0c	          0x4989f2	                            mov r10, rsi	       369	vterm.c	FUNCTION_27
0x4000f0f	          0x4889c6	                            mov rsi, rax	       369	vterm.c	FUNCTION_27
0x4000f12	          0x4889d7	                            mov rdi, rdx	       369	vterm.c	FUNCTION_27
0x4000f15	          0x4c89d7	                            mov rdi, r10	       369	vterm.c	FUNCTION_27
0x4000f18	        0x488975b0	             mov qword [rbp - 0x50], rsi	       369	vterm.c	FUNCTION_27
0x4000f1c	        0x48897db8	             mov qword [rbp - 0x48], rdi	       369	vterm.c	FUNCTION_27
0x4000f20	        0x488955a0	             mov qword [rbp - 0x60], rdx	       369	vterm.c	FUNCTION_27
0x4000f24	        0x48894da8	             mov qword [rbp - 0x58], rcx	       369	vterm.c	FUNCTION_27
0x4000f28	        0x4c894598	              mov qword [rbp - 0x68], r8	       369	vterm.c	FUNCTION_27
0x4000f2c	        0x4c894d90	              mov qword [rbp - 0x70], r9	       369	vterm.c	FUNCTION_27
0x4000f30	          0x8b55a0	             mov edx, dword [rbp - 0x60]	       370	vterm.c	FUNCTION_27
0x4000f33	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       370	vterm.c	FUNCTION_27
0x4000f36	            0x29c2	                            sub edx, eax	       370	vterm.c	FUNCTION_27
0x4000f38	            0x89d0	                            mov eax, edx	       370	vterm.c	FUNCTION_27
0x4000f3a	          0x8945d8	             mov dword [rbp - 0x28], eax	       370	vterm.c	FUNCTION_27
0x4000f3d	          0x8b55a8	             mov edx, dword [rbp - 0x58]	       371	vterm.c	FUNCTION_27
0x4000f40	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       371	vterm.c	FUNCTION_27
0x4000f43	            0x29c2	                            sub edx, eax	       371	vterm.c	FUNCTION_27
0x4000f45	            0x89d0	                            mov eax, edx	       371	vterm.c	FUNCTION_27
0x4000f47	          0x8945dc	             mov dword [rbp - 0x24], eax	       371	vterm.c	FUNCTION_27
0x4000f4a	        0x837dd800	               cmp dword [rbp - 0x28], 0	       378	vterm.c	FUNCTION_27	IF_1
0x4000f4e	            0x791b	                           jns 0x4000f6b	       378	vterm.c	FUNCTION_27	IF_1
0x4000f50	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       379	vterm.c	FUNCTION_27	IF_1
0x4000f53	          0x83e801	                              sub eax, 1	       379	vterm.c	FUNCTION_27	IF_1
0x4000f56	          0x8945c0	             mov dword [rbp - 0x40], eax	       379	vterm.c	FUNCTION_27	IF_1
0x4000f59	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       380	vterm.c	FUNCTION_27	IF_1
0x4000f5c	          0x83e801	                              sub eax, 1	       380	vterm.c	FUNCTION_27	IF_1
0x4000f5f	          0x8945c4	             mov dword [rbp - 0x3c], eax	       380	vterm.c	FUNCTION_27	IF_1
0x4000f62	    0xc745d0ffffff	     mov dword [rbp - 0x30], 0xffffffff 	       381	vterm.c	FUNCTION_27	IF_1
0x4000f69	            0xeb13	                           jmp 0x4000f7e	       381	vterm.c	FUNCTION_27	IF_1
0x4000f6b	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       384	vterm.c	FUNCTION_27	ELSE_1
0x4000f6e	          0x8945c0	             mov dword [rbp - 0x40], eax	       384	vterm.c	FUNCTION_27	ELSE_1
0x4000f71	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       385	vterm.c	FUNCTION_27	ELSE_1
0x4000f74	          0x8945c4	             mov dword [rbp - 0x3c], eax	       385	vterm.c	FUNCTION_27	ELSE_1
0x4000f77	    0xc745d0010000	               mov dword [rbp - 0x30], 1	       386	vterm.c	FUNCTION_27	ELSE_1
0x4000f7e	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       389	vterm.c	FUNCTION_27	IF_2
0x4000f82	            0x791b	                           jns 0x4000f9f	       389	vterm.c	FUNCTION_27	IF_2
0x4000f84	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       390	vterm.c	FUNCTION_27	IF_2
0x4000f87	          0x83e801	                              sub eax, 1	       390	vterm.c	FUNCTION_27	IF_2
0x4000f8a	          0x8945c8	             mov dword [rbp - 0x38], eax	       390	vterm.c	FUNCTION_27	IF_2
0x4000f8d	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       391	vterm.c	FUNCTION_27	IF_2
0x4000f90	          0x83e801	                              sub eax, 1	       391	vterm.c	FUNCTION_27	IF_2
0x4000f93	          0x8945cc	             mov dword [rbp - 0x34], eax	       391	vterm.c	FUNCTION_27	IF_2
0x4000f96	    0xc745d4ffffff	     mov dword [rbp - 0x2c], 0xffffffff 	       392	vterm.c	FUNCTION_27	IF_2
0x4000f9d	            0xeb13	                           jmp 0x4000fb2	       392	vterm.c	FUNCTION_27	IF_2
0x4000f9f	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       395	vterm.c	FUNCTION_27	ELSE_2
0x4000fa2	          0x8945c8	             mov dword [rbp - 0x38], eax	       395	vterm.c	FUNCTION_27	ELSE_2
0x4000fa5	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       396	vterm.c	FUNCTION_27	ELSE_2
0x4000fa8	          0x8945cc	             mov dword [rbp - 0x34], eax	       396	vterm.c	FUNCTION_27	ELSE_2
0x4000fab	    0xc745d4010000	               mov dword [rbp - 0x2c], 1	       397	vterm.c	FUNCTION_27	ELSE_2
0x4000fb2	          0x8b45c0	             mov eax, dword [rbp - 0x40]	       400	vterm.c	FUNCTION_27	FOR_1
0x4000fb5	          0x8945e0	             mov dword [rbp - 0x20], eax	       400	vterm.c	FUNCTION_27	FOR_1
0x4000fb8	            0xeb51	                           jmp 0x400100b	       400	vterm.c	FUNCTION_27	FOR_1
0x4000fba	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       401	vterm.c	FUNCTION_27	FOR_1	FOR_2
0x4000fbd	          0x8945e4	             mov dword [rbp - 0x1c], eax	       401	vterm.c	FUNCTION_27	FOR_1	FOR_2
0x4000fc0	            0xeb36	                           jmp 0x4000ff8	       401	vterm.c	FUNCTION_27	FOR_1	FOR_2
0x4000fc2	          0x8b55e0	             mov edx, dword [rbp - 0x20]	       403	vterm.c	FUNCTION_27	FOR_1	FOR_2
0x4000fc5	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       403	vterm.c	FUNCTION_27	FOR_1	FOR_2
0x4000fc8	             0x1d0	                            add eax, edx	       403	vterm.c	FUNCTION_27	FOR_1	FOR_2
0x4000fca	          0x8945f0	             mov dword [rbp - 0x10], eax	       403	vterm.c	FUNCTION_27	FOR_1	FOR_2
0x4000fcd	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       404	vterm.c	FUNCTION_27	FOR_1	FOR_2
0x4000fd0	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       404	vterm.c	FUNCTION_27	FOR_1	FOR_2
0x4000fd3	             0x1d0	                            add eax, edx	       404	vterm.c	FUNCTION_27	FOR_1	FOR_2
0x4000fd5	          0x8945f4	              mov dword [rbp - 0xc], eax	       404	vterm.c	FUNCTION_27	FOR_1	FOR_2
0x4000fd8	        0x488b5590	             mov rdx, qword [rbp - 0x70]	       405	vterm.c	FUNCTION_27	FOR_1	FOR_2
0x4000fdc	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       405	vterm.c	FUNCTION_27	FOR_1	FOR_2
0x4000fe0	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       405	vterm.c	FUNCTION_27	FOR_1	FOR_2
0x4000fe4	        0x488b4598	             mov rax, qword [rbp - 0x68]	       405	vterm.c	FUNCTION_27	FOR_1	FOR_2
0x4000fe8	          0x4889cf	                            mov rdi, rcx	       405	vterm.c	FUNCTION_27	FOR_1	FOR_2
0x4000feb	            0xffd0	                                call rax	       405	vterm.c	FUNCTION_27	FOR_1	FOR_2
0x4000fed	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       401	vterm.c	FUNCTION_27	FOR_1	FOR_2
0x4000ff0	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       401	vterm.c	FUNCTION_27	FOR_1	FOR_2
0x4000ff3	             0x1d0	                            add eax, edx	       401	vterm.c	FUNCTION_27	FOR_1	FOR_2
0x4000ff5	          0x8945e4	             mov dword [rbp - 0x1c], eax	       401	vterm.c	FUNCTION_27	FOR_1	FOR_2
0x4000ff8	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       401	vterm.c	FUNCTION_27	FOR_1	FOR_2
0x4000ffb	          0x3b45cc	             cmp eax, dword [rbp - 0x34]	       401	vterm.c	FUNCTION_27	FOR_1	FOR_2
0x4000ffe	            0x75c2	                           jne 0x4000fc2	       401	vterm.c	FUNCTION_27	FOR_1	FOR_2
0x4001000	          0x8b55e0	             mov edx, dword [rbp - 0x20]	       400	vterm.c	FUNCTION_27	FOR_1
0x4001003	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       400	vterm.c	FUNCTION_27	FOR_1
0x4001006	             0x1d0	                            add eax, edx	       400	vterm.c	FUNCTION_27	FOR_1
0x4001008	          0x8945e0	             mov dword [rbp - 0x20], eax	       400	vterm.c	FUNCTION_27	FOR_1
0x400100b	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       400	vterm.c	FUNCTION_27	FOR_1
0x400100e	          0x3b45c4	             cmp eax, dword [rbp - 0x3c]	       400	vterm.c	FUNCTION_27	FOR_1
0x4001011	            0x75a7	                           jne 0x4000fba	       400	vterm.c	FUNCTION_27	FOR_1
0x4001013	              0x90	                                     nop	       407	vterm.c	FUNCTION_27
0x4001014	              0xc9	                                   leave	       407	vterm.c	FUNCTION_27
0x4001015	              0xc3	                                     ret	       407	vterm.c	FUNCTION_27
vterm_push_output_sprintf_ctrl	ELSE,1:FOR,0:CALL,6:IF,2:DO,0:WHILE,0:functions,0:SWITCH,0	74
0x4000899	              0x55	                                push rbp	       193	vterm.c	FUNCTION_18
0x400089a	          0x4889e5	                            mov rbp, rsp	       193	vterm.c	FUNCTION_18
0x400089d	    0x4881ec000100	                          sub rsp, 0x100	       193	vterm.c	FUNCTION_18
0x40008a4	    0x4889bd18ffff	             mov qword [rbp - 0xe8], rdi	       193	vterm.c	FUNCTION_18
0x40008ab	    0x48899508ffff	             mov qword [rbp - 0xf8], rdx	       193	vterm.c	FUNCTION_18
0x40008b2	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	       193	vterm.c	FUNCTION_18
0x40008b9	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	       193	vterm.c	FUNCTION_18
0x40008c0	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	       193	vterm.c	FUNCTION_18
0x40008c7	            0x84c0	                             test al, al	       193	vterm.c	FUNCTION_18
0x40008c9	            0x7420	                            je 0x40008eb	       193	vterm.c	FUNCTION_18
0x40008cb	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	       193	vterm.c	FUNCTION_18
0x40008cf	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	       193	vterm.c	FUNCTION_18
0x40008d3	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	       193	vterm.c	FUNCTION_18
0x40008d7	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	       193	vterm.c	FUNCTION_18
0x40008db	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	       193	vterm.c	FUNCTION_18
0x40008df	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	       193	vterm.c	FUNCTION_18
0x40008e3	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	       193	vterm.c	FUNCTION_18
0x40008e7	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	       193	vterm.c	FUNCTION_18
0x40008eb	    0x4088b514ffff	              mov byte [rbp - 0xec], sil	       193	vterm.c	FUNCTION_18
0x40008f2	    0x64488b042528	                mov rax, qword fs:[0x28]	       193	vterm.c	FUNCTION_18
0x40008fb	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       193	vterm.c	FUNCTION_18
0x4000902	            0x31c0	                            xor eax, eax	       193	vterm.c	FUNCTION_18
0x4000904	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       194	vterm.c	FUNCTION_18
0x400090b	    0x488b80100100	           mov rax, qword [rax + 0x110] 	       194	vterm.c	FUNCTION_18
0x4000912	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	       194	vterm.c	FUNCTION_18
0x4000919	     0xfb68514ffff	            movzx eax, byte [rbp - 0xec]	       197	vterm.c	FUNCTION_18	IF_1
0x4000920	            0x84c0	                             test al, al	       197	vterm.c	FUNCTION_18	IF_1
0x4000922	            0x7937	                           jns 0x400095b	       197	vterm.c	FUNCTION_18	IF_1
0x4000924	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       197	vterm.c	FUNCTION_18	IF_1
0x400092b	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       197	vterm.c	FUNCTION_18	IF_1
0x400092f	          0x83e002	                              and eax, 2	       197	vterm.c	FUNCTION_18	IF_1
0x4000932	            0x84c0	                             test al, al	       197	vterm.c	FUNCTION_18	IF_1
0x4000934	            0x7525	                           jne 0x400095b	       197	vterm.c	FUNCTION_18	IF_1
0x4000936	     0xfb68514ffff	            movzx eax, byte [rbp - 0xec]	       198	vterm.c	FUNCTION_18	CALL_1
0x400093d	          0x8d50c0	                   lea edx, [rax - 0x40]	       198	vterm.c	FUNCTION_18	CALL_1
0x4000940	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       198	vterm.c	FUNCTION_18	CALL_1
0x4000947	      0xbe00000000	                              mov esi, 0	       198	vterm.c	FUNCTION_18	CALL_1
0x400094c	          0x4889c7	                            mov rdi, rax	       198	vterm.c	FUNCTION_18	CALL_1
0x400094f	      0xb800000000	                              mov eax, 0	       198	vterm.c	FUNCTION_18	CALL_1
0x4000954	      0xe800000000	                          call 0x4000959	       198	vterm.c	FUNCTION_18	CALL_1
0x4000959	            0xeb20	                           jmp 0x400097b	       198	vterm.c	FUNCTION_18	CALL_1
0x400095b	     0xfb69514ffff	            movzx edx, byte [rbp - 0xec]	       200	vterm.c	FUNCTION_18	CALL_2
0x4000962	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       200	vterm.c	FUNCTION_18	CALL_2
0x4000969	      0xbe00000000	                              mov esi, 0	       200	vterm.c	FUNCTION_18	CALL_2
0x400096e	          0x4889c7	                            mov rdi, rax	       200	vterm.c	FUNCTION_18	CALL_2
0x4000971	      0xb800000000	                              mov eax, 0	       200	vterm.c	FUNCTION_18	CALL_2
0x4000976	      0xe800000000	                          call 0x400097b	       200	vterm.c	FUNCTION_18	CALL_2
0x400097b	    0xc78530ffffff	           mov dword [rbp - 0xd0], 0x18 	       202	vterm.c	FUNCTION_18	CALL_3
0x4000985	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	       202	vterm.c	FUNCTION_18	CALL_3
0x400098f	        0x488d4510	                   lea rax, [rbp + 0x10]	       202	vterm.c	FUNCTION_18	CALL_3
0x4000993	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       202	vterm.c	FUNCTION_18	CALL_3
0x400099a	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       202	vterm.c	FUNCTION_18	CALL_3
0x40009a1	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       202	vterm.c	FUNCTION_18	CALL_3
0x40009a8	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	       203	vterm.c	FUNCTION_18	CALL_4
0x40009af	    0x488b8d08ffff	             mov rcx, qword [rbp - 0xf8]	       203	vterm.c	FUNCTION_18	CALL_4
0x40009b6	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       203	vterm.c	FUNCTION_18	CALL_4
0x40009bd	          0x4889ce	                            mov rsi, rcx	       203	vterm.c	FUNCTION_18	CALL_4
0x40009c0	          0x4889c7	                            mov rdi, rax	       203	vterm.c	FUNCTION_18	CALL_4
0x40009c3	      0xe800000000	                          call 0x40009c8	       203	vterm.c	FUNCTION_18	CALL_4
0x40009c8	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       206	vterm.c	FUNCTION_18	IF_2	CALL_6
0x40009cf	          0x4889c7	                            mov rdi, rax	       206	vterm.c	FUNCTION_18	IF_2	CALL_6
0x40009d2	      0xe8effcffff	              call sym.outbuffer_is_full	       206	vterm.c	FUNCTION_18	IF_2	CALL_6
0x40009d7	            0x85c0	                           test eax, eax	       206	vterm.c	FUNCTION_18	IF_2	CALL_6
0x40009d9	            0x7415	                            je 0x40009f0	       206	vterm.c	FUNCTION_18	IF_2	CALL_6
0x40009db	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       207	vterm.c	FUNCTION_18	IF_2
0x40009e2	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	       207	vterm.c	FUNCTION_18	IF_2
0x40009e9	    0x488990100100	            mov qword [rax + 0x110], rdx	       207	vterm.c	FUNCTION_18	IF_2
0x40009f0	              0x90	                                     nop	       208	vterm.c	FUNCTION_18
0x40009f1	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       208	vterm.c	FUNCTION_18
0x40009f8	    0x644833042528	                xor rax, qword fs:[0x28]	       208	vterm.c	FUNCTION_18
0x4000a01	            0x7405	                            je 0x4000a08	       208	vterm.c	FUNCTION_18
0x4000a03	      0xe800000000	                          call 0x4000a08	       208	vterm.c	FUNCTION_18
0x4000a08	              0xc9	                                   leave	       208	vterm.c	FUNCTION_18
0x4000a09	              0xc3	                                     ret	       208	vterm.c	FUNCTION_18
vterm_push_output_bytes	ELSE,0:FOR,0:CALL,1:IF,1:DO,0:WHILE,0:functions,0:SWITCH,0	40
0x4000623	              0x55	                                push rbp	       118	vterm.c	FUNCTION_14
0x4000624	          0x4889e5	                            mov rbp, rsp	       118	vterm.c	FUNCTION_14
0x4000627	        0x4883ec20	                           sub rsp, 0x20	       118	vterm.c	FUNCTION_14
0x400062b	        0x48897df8	                mov qword [rbp - 8], rdi	       118	vterm.c	FUNCTION_14
0x400062f	        0x488975f0	             mov qword [rbp - 0x10], rsi	       118	vterm.c	FUNCTION_14
0x4000633	        0x488955e8	             mov qword [rbp - 0x18], rdx	       118	vterm.c	FUNCTION_14
0x4000637	        0x488b45f8	                mov rax, qword [rbp - 8]	       119	vterm.c	FUNCTION_14	IF_1
0x400063b	    0x488b90080100	           mov rdx, qword [rax + 0x108] 	       119	vterm.c	FUNCTION_14	IF_1
0x4000642	        0x488b45f8	                mov rax, qword [rbp - 8]	       119	vterm.c	FUNCTION_14	IF_1
0x4000646	    0x488b80100100	           mov rax, qword [rax + 0x110] 	       119	vterm.c	FUNCTION_14	IF_1
0x400064d	          0x4829c2	                            sub rdx, rax	       119	vterm.c	FUNCTION_14	IF_1
0x4000650	          0x4889d0	                            mov rax, rdx	       119	vterm.c	FUNCTION_14	IF_1
0x4000653	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       119	vterm.c	FUNCTION_14	IF_1
0x4000657	            0x7320	                           jae 0x4000679	       119	vterm.c	FUNCTION_14	IF_1
0x4000659	        0x488b45f8	                mov rax, qword [rbp - 8]	       121	vterm.c	FUNCTION_14	IF_1
0x400065d	    0x488b90080100	           mov rdx, qword [rax + 0x108] 	       121	vterm.c	FUNCTION_14	IF_1
0x4000664	        0x488b45f8	                mov rax, qword [rbp - 8]	       121	vterm.c	FUNCTION_14	IF_1
0x4000668	    0x488b80100100	           mov rax, qword [rax + 0x110] 	       121	vterm.c	FUNCTION_14	IF_1
0x400066f	          0x4829c2	                            sub rdx, rax	       121	vterm.c	FUNCTION_14	IF_1
0x4000672	          0x4889d0	                            mov rax, rdx	       121	vterm.c	FUNCTION_14	IF_1
0x4000675	        0x488945e8	             mov qword [rbp - 0x18], rax	       121	vterm.c	FUNCTION_14	IF_1
0x4000679	        0x488b45f8	                mov rax, qword [rbp - 8]	       124	vterm.c	FUNCTION_14	CALL_1
0x400067d	    0x488b90000100	           mov rdx, qword [rax + 0x100] 	       124	vterm.c	FUNCTION_14	CALL_1
0x4000684	        0x488b45f8	                mov rax, qword [rbp - 8]	       124	vterm.c	FUNCTION_14	CALL_1
0x4000688	    0x488b80100100	           mov rax, qword [rax + 0x110] 	       124	vterm.c	FUNCTION_14	CALL_1
0x400068f	        0x488d0c02	                    lea rcx, [rdx + rax]	       124	vterm.c	FUNCTION_14	CALL_1
0x4000693	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       124	vterm.c	FUNCTION_14	CALL_1
0x4000697	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       124	vterm.c	FUNCTION_14	CALL_1
0x400069b	          0x4889c6	                            mov rsi, rax	       124	vterm.c	FUNCTION_14	CALL_1
0x400069e	          0x4889cf	                            mov rdi, rcx	       124	vterm.c	FUNCTION_14	CALL_1
0x40006a1	      0xe800000000	                          call 0x40006a6	       124	vterm.c	FUNCTION_14	CALL_1
0x40006a6	        0x488b45f8	                mov rax, qword [rbp - 8]	       125	vterm.c	FUNCTION_14
0x40006aa	    0x488b90100100	           mov rdx, qword [rax + 0x110] 	       125	vterm.c	FUNCTION_14
0x40006b1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       125	vterm.c	FUNCTION_14
0x40006b5	          0x4801c2	                            add rdx, rax	       125	vterm.c	FUNCTION_14
0x40006b8	        0x488b45f8	                mov rax, qword [rbp - 8]	       125	vterm.c	FUNCTION_14
0x40006bc	    0x488990100100	            mov qword [rax + 0x110], rdx	       125	vterm.c	FUNCTION_14
0x40006c3	              0x90	                                     nop	       126	vterm.c	FUNCTION_14
0x40006c4	              0xc9	                                   leave	       126	vterm.c	FUNCTION_14
0x40006c5	              0xc3	                                     ret	       126	vterm.c	FUNCTION_14
