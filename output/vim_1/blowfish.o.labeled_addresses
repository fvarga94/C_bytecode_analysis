bf_e_block	FOR,0:ELSE,0:WHILE,0:functions,0:DO,0:CALL,16:SWITCH,0:IF,0	233
0x4000040	              0x53	                                push rbx	       355	blowfish.c	FUNCTION_1
0x4000041	            0x8b0e	                    mov ecx, dword [rsi]	       357	blowfish.c	FUNCTION_1
0x4000043	            0x330f	                    xor ecx, dword [rdi]	       360	blowfish.c	FUNCTION_1	CALL_2
0x4000045	            0x8b02	                    mov eax, dword [rdx]	       360	blowfish.c	FUNCTION_1	CALL_2
0x4000047	          0x334704	                xor eax, dword [rdi + 4]	       360	blowfish.c	FUNCTION_1	CALL_2
0x400004a	          0x4989c9	                             mov r9, rcx	       360	blowfish.c	FUNCTION_1	CALL_2
0x400004d	        0x49c1e910	                            shr r9, 0x10	       360	blowfish.c	FUNCTION_1	CALL_2
0x4000051	    0x4181e1ff0000	                           and r9d, 0xff	       360	blowfish.c	FUNCTION_1	CALL_2
0x4000058	          0x4189c8	                            mov r8d, ecx	       360	blowfish.c	FUNCTION_1	CALL_2
0x400005b	        0x41c1e818	                           shr r8d, 0x18	       360	blowfish.c	FUNCTION_1	CALL_2
0x400005f	          0x4589c0	                            mov r8d, r8d	       360	blowfish.c	FUNCTION_1	CALL_2
0x4000062	      0x468b448748	     mov r8d, dword [rdi + r8*4 + 0x48] 	       360	blowfish.c	FUNCTION_1	CALL_2
0x4000067	    0x4603848f4804	     add r8d, dword [rdi + r9*4 + 0x448]	       360	blowfish.c	FUNCTION_1	CALL_2
0x400006f	           0xfb6dd	                           movzx ebx, ch	       360	blowfish.c	FUNCTION_1	CALL_2
0x4000072	    0x4433849f4808	    xor r8d, dword [rdi + rbx*4 + 0x848]	       360	blowfish.c	FUNCTION_1	CALL_2
0x400007a	        0x440fb6c9	                           movzx r9d, cl	       360	blowfish.c	FUNCTION_1	CALL_2
0x400007e	    0x4603848f480c	     add r8d, dword [rdi + r9*4 + 0xc48]	       360	blowfish.c	FUNCTION_1	CALL_2
0x4000086	          0x4431c0	                            xor eax, r8d	       360	blowfish.c	FUNCTION_1	CALL_2
0x4000089	          0x334f08	                xor ecx, dword [rdi + 8]	       360	blowfish.c	FUNCTION_1	CALL_2
0x400008c	          0x4989c1	                             mov r9, rax	       360	blowfish.c	FUNCTION_1	CALL_2
0x400008f	        0x49c1e910	                            shr r9, 0x10	       360	blowfish.c	FUNCTION_1	CALL_2
0x4000093	    0x4181e1ff0000	                           and r9d, 0xff	       360	blowfish.c	FUNCTION_1	CALL_2
0x400009a	          0x4189c0	                            mov r8d, eax	       360	blowfish.c	FUNCTION_1	CALL_2
0x400009d	        0x41c1e818	                           shr r8d, 0x18	       360	blowfish.c	FUNCTION_1	CALL_2
0x40000a1	          0x4589c0	                            mov r8d, r8d	       360	blowfish.c	FUNCTION_1	CALL_2
0x40000a4	      0x468b448748	     mov r8d, dword [rdi + r8*4 + 0x48] 	       361	blowfish.c	FUNCTION_1	CALL_4
0x40000a9	    0x4603848f4804	     add r8d, dword [rdi + r9*4 + 0x448]	       361	blowfish.c	FUNCTION_1	CALL_4
0x40000b1	           0xfb6dc	                           movzx ebx, ah	       360	blowfish.c	FUNCTION_1	CALL_2
0x40000b4	    0x4433849f4808	    xor r8d, dword [rdi + rbx*4 + 0x848]	       361	blowfish.c	FUNCTION_1	CALL_4
0x40000bc	        0x440fb6c8	                           movzx r9d, al	       360	blowfish.c	FUNCTION_1	CALL_2
0x40000c0	    0x4603848f480c	     add r8d, dword [rdi + r9*4 + 0xc48]	       361	blowfish.c	FUNCTION_1	CALL_4
0x40000c8	          0x4431c1	                            xor ecx, r8d	       361	blowfish.c	FUNCTION_1	CALL_4
0x40000cb	          0x33470c	              xor eax, dword [rdi + 0xc]	       361	blowfish.c	FUNCTION_1	CALL_4
0x40000ce	          0x4989c9	                             mov r9, rcx	       361	blowfish.c	FUNCTION_1	CALL_4
0x40000d1	        0x49c1e910	                            shr r9, 0x10	       361	blowfish.c	FUNCTION_1	CALL_4
0x40000d5	    0x4181e1ff0000	                           and r9d, 0xff	       361	blowfish.c	FUNCTION_1	CALL_4
0x40000dc	          0x4189c8	                            mov r8d, ecx	       361	blowfish.c	FUNCTION_1	CALL_4
0x40000df	        0x41c1e818	                           shr r8d, 0x18	       361	blowfish.c	FUNCTION_1	CALL_4
0x40000e3	          0x4589c0	                            mov r8d, r8d	       361	blowfish.c	FUNCTION_1	CALL_4
0x40000e6	      0x468b448748	     mov r8d, dword [rdi + r8*4 + 0x48] 	       361	blowfish.c	FUNCTION_1	CALL_4
0x40000eb	    0x4603848f4804	     add r8d, dword [rdi + r9*4 + 0x448]	       361	blowfish.c	FUNCTION_1	CALL_4
0x40000f3	           0xfb6dd	                           movzx ebx, ch	       361	blowfish.c	FUNCTION_1	CALL_4
0x40000f6	    0x4433849f4808	    xor r8d, dword [rdi + rbx*4 + 0x848]	       361	blowfish.c	FUNCTION_1	CALL_4
0x40000fe	        0x440fb6c9	                           movzx r9d, cl	       361	blowfish.c	FUNCTION_1	CALL_4
0x4000102	    0x4603848f480c	     add r8d, dword [rdi + r9*4 + 0xc48]	       361	blowfish.c	FUNCTION_1	CALL_4
0x400010a	          0x4431c0	                            xor eax, r8d	       361	blowfish.c	FUNCTION_1	CALL_4
0x400010d	          0x334f10	             xor ecx, dword [rdi + 0x10]	       361	blowfish.c	FUNCTION_1	CALL_4
0x4000110	          0x4989c1	                             mov r9, rax	       361	blowfish.c	FUNCTION_1	CALL_4
0x4000113	        0x49c1e910	                            shr r9, 0x10	       361	blowfish.c	FUNCTION_1	CALL_4
0x4000117	    0x4181e1ff0000	                           and r9d, 0xff	       361	blowfish.c	FUNCTION_1	CALL_4
0x400011e	          0x4189c0	                            mov r8d, eax	       361	blowfish.c	FUNCTION_1	CALL_4
0x4000121	        0x41c1e818	                           shr r8d, 0x18	       361	blowfish.c	FUNCTION_1	CALL_4
0x4000125	          0x4589c0	                            mov r8d, r8d	       361	blowfish.c	FUNCTION_1	CALL_4
0x4000128	      0x468b448748	     mov r8d, dword [rdi + r8*4 + 0x48] 	       362	blowfish.c	FUNCTION_1	CALL_6
0x400012d	    0x4603848f4804	     add r8d, dword [rdi + r9*4 + 0x448]	       362	blowfish.c	FUNCTION_1	CALL_6
0x4000135	           0xfb6dc	                           movzx ebx, ah	       361	blowfish.c	FUNCTION_1	CALL_4
0x4000138	    0x4433849f4808	    xor r8d, dword [rdi + rbx*4 + 0x848]	       362	blowfish.c	FUNCTION_1	CALL_6
0x4000140	        0x440fb6c8	                           movzx r9d, al	       361	blowfish.c	FUNCTION_1	CALL_4
0x4000144	    0x4603848f480c	     add r8d, dword [rdi + r9*4 + 0xc48]	       362	blowfish.c	FUNCTION_1	CALL_6
0x400014c	          0x4431c1	                            xor ecx, r8d	       362	blowfish.c	FUNCTION_1	CALL_6
0x400014f	          0x334714	             xor eax, dword [rdi + 0x14]	       362	blowfish.c	FUNCTION_1	CALL_6
0x4000152	          0x4989c9	                             mov r9, rcx	       362	blowfish.c	FUNCTION_1	CALL_6
0x4000155	        0x49c1e910	                            shr r9, 0x10	       362	blowfish.c	FUNCTION_1	CALL_6
0x4000159	    0x4181e1ff0000	                           and r9d, 0xff	       362	blowfish.c	FUNCTION_1	CALL_6
0x4000160	          0x4189c8	                            mov r8d, ecx	       362	blowfish.c	FUNCTION_1	CALL_6
0x4000163	        0x41c1e818	                           shr r8d, 0x18	       362	blowfish.c	FUNCTION_1	CALL_6
0x4000167	          0x4589c0	                            mov r8d, r8d	       362	blowfish.c	FUNCTION_1	CALL_6
0x400016a	      0x468b448748	     mov r8d, dword [rdi + r8*4 + 0x48] 	       362	blowfish.c	FUNCTION_1	CALL_6
0x400016f	    0x4603848f4804	     add r8d, dword [rdi + r9*4 + 0x448]	       362	blowfish.c	FUNCTION_1	CALL_6
0x4000177	           0xfb6dd	                           movzx ebx, ch	       362	blowfish.c	FUNCTION_1	CALL_6
0x400017a	    0x4433849f4808	    xor r8d, dword [rdi + rbx*4 + 0x848]	       362	blowfish.c	FUNCTION_1	CALL_6
0x4000182	        0x440fb6c9	                           movzx r9d, cl	       362	blowfish.c	FUNCTION_1	CALL_6
0x4000186	    0x4603848f480c	     add r8d, dword [rdi + r9*4 + 0xc48]	       362	blowfish.c	FUNCTION_1	CALL_6
0x400018e	          0x4431c0	                            xor eax, r8d	       362	blowfish.c	FUNCTION_1	CALL_6
0x4000191	          0x334f18	             xor ecx, dword [rdi + 0x18]	       362	blowfish.c	FUNCTION_1	CALL_6
0x4000194	          0x4989c1	                             mov r9, rax	       362	blowfish.c	FUNCTION_1	CALL_6
0x4000197	        0x49c1e910	                            shr r9, 0x10	       362	blowfish.c	FUNCTION_1	CALL_6
0x400019b	    0x4181e1ff0000	                           and r9d, 0xff	       362	blowfish.c	FUNCTION_1	CALL_6
0x40001a2	          0x4189c0	                            mov r8d, eax	       362	blowfish.c	FUNCTION_1	CALL_6
0x40001a5	        0x41c1e818	                           shr r8d, 0x18	       362	blowfish.c	FUNCTION_1	CALL_6
0x40001a9	          0x4589c0	                            mov r8d, r8d	       362	blowfish.c	FUNCTION_1	CALL_6
0x40001ac	      0x468b448748	     mov r8d, dword [rdi + r8*4 + 0x48] 	       363	blowfish.c	FUNCTION_1	CALL_8
0x40001b1	    0x4603848f4804	     add r8d, dword [rdi + r9*4 + 0x448]	       363	blowfish.c	FUNCTION_1	CALL_8
0x40001b9	           0xfb6dc	                           movzx ebx, ah	       362	blowfish.c	FUNCTION_1	CALL_6
0x40001bc	    0x4433849f4808	    xor r8d, dword [rdi + rbx*4 + 0x848]	       363	blowfish.c	FUNCTION_1	CALL_8
0x40001c4	        0x440fb6c8	                           movzx r9d, al	       362	blowfish.c	FUNCTION_1	CALL_6
0x40001c8	    0x4603848f480c	     add r8d, dword [rdi + r9*4 + 0xc48]	       363	blowfish.c	FUNCTION_1	CALL_8
0x40001d0	          0x4431c1	                            xor ecx, r8d	       363	blowfish.c	FUNCTION_1	CALL_8
0x40001d3	          0x33471c	             xor eax, dword [rdi + 0x1c]	       363	blowfish.c	FUNCTION_1	CALL_8
0x40001d6	          0x4989c9	                             mov r9, rcx	       363	blowfish.c	FUNCTION_1	CALL_8
0x40001d9	        0x49c1e910	                            shr r9, 0x10	       363	blowfish.c	FUNCTION_1	CALL_8
0x40001dd	    0x4181e1ff0000	                           and r9d, 0xff	       363	blowfish.c	FUNCTION_1	CALL_8
0x40001e4	          0x4189c8	                            mov r8d, ecx	       363	blowfish.c	FUNCTION_1	CALL_8
0x40001e7	        0x41c1e818	                           shr r8d, 0x18	       363	blowfish.c	FUNCTION_1	CALL_8
0x40001eb	          0x4589c0	                            mov r8d, r8d	       363	blowfish.c	FUNCTION_1	CALL_8
0x40001ee	      0x468b448748	     mov r8d, dword [rdi + r8*4 + 0x48] 	       363	blowfish.c	FUNCTION_1	CALL_8
0x40001f3	    0x4603848f4804	     add r8d, dword [rdi + r9*4 + 0x448]	       363	blowfish.c	FUNCTION_1	CALL_8
0x40001fb	           0xfb6dd	                           movzx ebx, ch	       363	blowfish.c	FUNCTION_1	CALL_8
0x40001fe	    0x4433849f4808	    xor r8d, dword [rdi + rbx*4 + 0x848]	       363	blowfish.c	FUNCTION_1	CALL_8
0x4000206	        0x440fb6c9	                           movzx r9d, cl	       363	blowfish.c	FUNCTION_1	CALL_8
0x400020a	    0x4603848f480c	     add r8d, dword [rdi + r9*4 + 0xc48]	       363	blowfish.c	FUNCTION_1	CALL_8
0x4000212	          0x4431c0	                            xor eax, r8d	       363	blowfish.c	FUNCTION_1	CALL_8
0x4000215	          0x334f20	             xor ecx, dword [rdi + 0x20]	       363	blowfish.c	FUNCTION_1	CALL_8
0x4000218	          0x4989c1	                             mov r9, rax	       363	blowfish.c	FUNCTION_1	CALL_8
0x400021b	        0x49c1e910	                            shr r9, 0x10	       363	blowfish.c	FUNCTION_1	CALL_8
0x400021f	    0x4181e1ff0000	                           and r9d, 0xff	       363	blowfish.c	FUNCTION_1	CALL_8
0x4000226	          0x4189c0	                            mov r8d, eax	       363	blowfish.c	FUNCTION_1	CALL_8
0x4000229	        0x41c1e818	                           shr r8d, 0x18	       363	blowfish.c	FUNCTION_1	CALL_8
0x400022d	          0x4589c0	                            mov r8d, r8d	       363	blowfish.c	FUNCTION_1	CALL_8
0x4000230	      0x468b448748	     mov r8d, dword [rdi + r8*4 + 0x48] 	       364	blowfish.c	FUNCTION_1	CALL_10
0x4000235	    0x4603848f4804	     add r8d, dword [rdi + r9*4 + 0x448]	       364	blowfish.c	FUNCTION_1	CALL_10
0x400023d	           0xfb6dc	                           movzx ebx, ah	       363	blowfish.c	FUNCTION_1	CALL_8
0x4000240	    0x4433849f4808	    xor r8d, dword [rdi + rbx*4 + 0x848]	       364	blowfish.c	FUNCTION_1	CALL_10
0x4000248	        0x440fb6c8	                           movzx r9d, al	       363	blowfish.c	FUNCTION_1	CALL_8
0x400024c	    0x4603848f480c	     add r8d, dword [rdi + r9*4 + 0xc48]	       364	blowfish.c	FUNCTION_1	CALL_10
0x4000254	          0x4431c1	                            xor ecx, r8d	       364	blowfish.c	FUNCTION_1	CALL_10
0x4000257	          0x334724	             xor eax, dword [rdi + 0x24]	       364	blowfish.c	FUNCTION_1	CALL_10
0x400025a	          0x4989c9	                             mov r9, rcx	       364	blowfish.c	FUNCTION_1	CALL_10
0x400025d	        0x49c1e910	                            shr r9, 0x10	       364	blowfish.c	FUNCTION_1	CALL_10
0x4000261	    0x4181e1ff0000	                           and r9d, 0xff	       364	blowfish.c	FUNCTION_1	CALL_10
0x4000268	          0x4189c8	                            mov r8d, ecx	       364	blowfish.c	FUNCTION_1	CALL_10
0x400026b	        0x41c1e818	                           shr r8d, 0x18	       364	blowfish.c	FUNCTION_1	CALL_10
0x400026f	          0x4589c0	                            mov r8d, r8d	       364	blowfish.c	FUNCTION_1	CALL_10
0x4000272	      0x468b448748	     mov r8d, dword [rdi + r8*4 + 0x48] 	       364	blowfish.c	FUNCTION_1	CALL_10
0x4000277	    0x4603848f4804	     add r8d, dword [rdi + r9*4 + 0x448]	       364	blowfish.c	FUNCTION_1	CALL_10
0x400027f	           0xfb6dd	                           movzx ebx, ch	       364	blowfish.c	FUNCTION_1	CALL_10
0x4000282	    0x4433849f4808	    xor r8d, dword [rdi + rbx*4 + 0x848]	       364	blowfish.c	FUNCTION_1	CALL_10
0x400028a	        0x440fb6c9	                           movzx r9d, cl	       364	blowfish.c	FUNCTION_1	CALL_10
0x400028e	    0x4603848f480c	     add r8d, dword [rdi + r9*4 + 0xc48]	       364	blowfish.c	FUNCTION_1	CALL_10
0x4000296	          0x4431c0	                            xor eax, r8d	       364	blowfish.c	FUNCTION_1	CALL_10
0x4000299	          0x334f28	             xor ecx, dword [rdi + 0x28]	       364	blowfish.c	FUNCTION_1	CALL_10
0x400029c	          0x4989c1	                             mov r9, rax	       364	blowfish.c	FUNCTION_1	CALL_10
0x400029f	        0x49c1e910	                            shr r9, 0x10	       364	blowfish.c	FUNCTION_1	CALL_10
0x40002a3	    0x4181e1ff0000	                           and r9d, 0xff	       364	blowfish.c	FUNCTION_1	CALL_10
0x40002aa	          0x4189c0	                            mov r8d, eax	       364	blowfish.c	FUNCTION_1	CALL_10
0x40002ad	        0x41c1e818	                           shr r8d, 0x18	       364	blowfish.c	FUNCTION_1	CALL_10
0x40002b1	          0x4589c0	                            mov r8d, r8d	       364	blowfish.c	FUNCTION_1	CALL_10
0x40002b4	      0x468b448748	     mov r8d, dword [rdi + r8*4 + 0x48] 	       365	blowfish.c	FUNCTION_1	CALL_12
0x40002b9	    0x4603848f4804	     add r8d, dword [rdi + r9*4 + 0x448]	       365	blowfish.c	FUNCTION_1	CALL_12
0x40002c1	           0xfb6dc	                           movzx ebx, ah	       364	blowfish.c	FUNCTION_1	CALL_10
0x40002c4	    0x4433849f4808	    xor r8d, dword [rdi + rbx*4 + 0x848]	       365	blowfish.c	FUNCTION_1	CALL_12
0x40002cc	        0x440fb6c8	                           movzx r9d, al	       364	blowfish.c	FUNCTION_1	CALL_10
0x40002d0	    0x4603848f480c	     add r8d, dword [rdi + r9*4 + 0xc48]	       365	blowfish.c	FUNCTION_1	CALL_12
0x40002d8	          0x4431c1	                            xor ecx, r8d	       365	blowfish.c	FUNCTION_1	CALL_12
0x40002db	          0x33472c	             xor eax, dword [rdi + 0x2c]	       365	blowfish.c	FUNCTION_1	CALL_12
0x40002de	          0x4989c9	                             mov r9, rcx	       365	blowfish.c	FUNCTION_1	CALL_12
0x40002e1	        0x49c1e910	                            shr r9, 0x10	       365	blowfish.c	FUNCTION_1	CALL_12
0x40002e5	    0x4181e1ff0000	                           and r9d, 0xff	       365	blowfish.c	FUNCTION_1	CALL_12
0x40002ec	          0x4189c8	                            mov r8d, ecx	       365	blowfish.c	FUNCTION_1	CALL_12
0x40002ef	        0x41c1e818	                           shr r8d, 0x18	       365	blowfish.c	FUNCTION_1	CALL_12
0x40002f3	          0x4589c0	                            mov r8d, r8d	       365	blowfish.c	FUNCTION_1	CALL_12
0x40002f6	      0x468b448748	     mov r8d, dword [rdi + r8*4 + 0x48] 	       365	blowfish.c	FUNCTION_1	CALL_12
0x40002fb	    0x4603848f4804	     add r8d, dword [rdi + r9*4 + 0x448]	       365	blowfish.c	FUNCTION_1	CALL_12
0x4000303	           0xfb6dd	                           movzx ebx, ch	       365	blowfish.c	FUNCTION_1	CALL_12
0x4000306	    0x4433849f4808	    xor r8d, dword [rdi + rbx*4 + 0x848]	       365	blowfish.c	FUNCTION_1	CALL_12
0x400030e	        0x440fb6c9	                           movzx r9d, cl	       365	blowfish.c	FUNCTION_1	CALL_12
0x4000312	    0x4603848f480c	     add r8d, dword [rdi + r9*4 + 0xc48]	       365	blowfish.c	FUNCTION_1	CALL_12
0x400031a	          0x4431c0	                            xor eax, r8d	       365	blowfish.c	FUNCTION_1	CALL_12
0x400031d	          0x334f30	             xor ecx, dword [rdi + 0x30]	       365	blowfish.c	FUNCTION_1	CALL_12
0x4000320	          0x4989c1	                             mov r9, rax	       365	blowfish.c	FUNCTION_1	CALL_12
0x4000323	        0x49c1e910	                            shr r9, 0x10	       365	blowfish.c	FUNCTION_1	CALL_12
0x4000327	    0x4181e1ff0000	                           and r9d, 0xff	       365	blowfish.c	FUNCTION_1	CALL_12
0x400032e	          0x4189c0	                            mov r8d, eax	       365	blowfish.c	FUNCTION_1	CALL_12
0x4000331	        0x41c1e818	                           shr r8d, 0x18	       365	blowfish.c	FUNCTION_1	CALL_12
0x4000335	          0x4589c0	                            mov r8d, r8d	       365	blowfish.c	FUNCTION_1	CALL_12
0x4000338	      0x468b448748	     mov r8d, dword [rdi + r8*4 + 0x48] 	       366	blowfish.c	FUNCTION_1	CALL_14
0x400033d	    0x4603848f4804	     add r8d, dword [rdi + r9*4 + 0x448]	       366	blowfish.c	FUNCTION_1	CALL_14
0x4000345	           0xfb6dc	                           movzx ebx, ah	       365	blowfish.c	FUNCTION_1	CALL_12
0x4000348	    0x4433849f4808	    xor r8d, dword [rdi + rbx*4 + 0x848]	       366	blowfish.c	FUNCTION_1	CALL_14
0x4000350	        0x440fb6c8	                           movzx r9d, al	       365	blowfish.c	FUNCTION_1	CALL_12
0x4000354	    0x4603848f480c	     add r8d, dword [rdi + r9*4 + 0xc48]	       366	blowfish.c	FUNCTION_1	CALL_14
0x400035c	          0x4431c1	                            xor ecx, r8d	       366	blowfish.c	FUNCTION_1	CALL_14
0x400035f	          0x334734	             xor eax, dword [rdi + 0x34]	       366	blowfish.c	FUNCTION_1	CALL_14
0x4000362	          0x4989c9	                             mov r9, rcx	       366	blowfish.c	FUNCTION_1	CALL_14
0x4000365	        0x49c1e910	                            shr r9, 0x10	       366	blowfish.c	FUNCTION_1	CALL_14
0x4000369	    0x4181e1ff0000	                           and r9d, 0xff	       366	blowfish.c	FUNCTION_1	CALL_14
0x4000370	          0x4189c8	                            mov r8d, ecx	       366	blowfish.c	FUNCTION_1	CALL_14
0x4000373	        0x41c1e818	                           shr r8d, 0x18	       366	blowfish.c	FUNCTION_1	CALL_14
0x4000377	          0x4589c0	                            mov r8d, r8d	       366	blowfish.c	FUNCTION_1	CALL_14
0x400037a	      0x468b448748	     mov r8d, dword [rdi + r8*4 + 0x48] 	       366	blowfish.c	FUNCTION_1	CALL_14
0x400037f	    0x4603848f4804	     add r8d, dword [rdi + r9*4 + 0x448]	       366	blowfish.c	FUNCTION_1	CALL_14
0x4000387	           0xfb6dd	                           movzx ebx, ch	       366	blowfish.c	FUNCTION_1	CALL_14
0x400038a	    0x4433849f4808	    xor r8d, dword [rdi + rbx*4 + 0x848]	       366	blowfish.c	FUNCTION_1	CALL_14
0x4000392	        0x440fb6c9	                           movzx r9d, cl	       366	blowfish.c	FUNCTION_1	CALL_14
0x4000396	    0x4603848f480c	     add r8d, dword [rdi + r9*4 + 0xc48]	       366	blowfish.c	FUNCTION_1	CALL_14
0x400039e	          0x4431c0	                            xor eax, r8d	       366	blowfish.c	FUNCTION_1	CALL_14
0x40003a1	          0x334f38	             xor ecx, dword [rdi + 0x38]	       366	blowfish.c	FUNCTION_1	CALL_14
0x40003a4	          0x4989c1	                             mov r9, rax	       366	blowfish.c	FUNCTION_1	CALL_14
0x40003a7	        0x49c1e910	                            shr r9, 0x10	       366	blowfish.c	FUNCTION_1	CALL_14
0x40003ab	    0x4181e1ff0000	                           and r9d, 0xff	       366	blowfish.c	FUNCTION_1	CALL_14
0x40003b2	          0x4189c0	                            mov r8d, eax	       366	blowfish.c	FUNCTION_1	CALL_14
0x40003b5	        0x41c1e818	                           shr r8d, 0x18	       366	blowfish.c	FUNCTION_1	CALL_14
0x40003b9	          0x4589c0	                            mov r8d, r8d	       366	blowfish.c	FUNCTION_1	CALL_14
0x40003bc	      0x468b448748	     mov r8d, dword [rdi + r8*4 + 0x48] 	       367	blowfish.c	FUNCTION_1	CALL_16
0x40003c1	    0x4603848f4804	     add r8d, dword [rdi + r9*4 + 0x448]	       367	blowfish.c	FUNCTION_1	CALL_16
0x40003c9	           0xfb6dc	                           movzx ebx, ah	       366	blowfish.c	FUNCTION_1	CALL_14
0x40003cc	    0x4433849f4808	    xor r8d, dword [rdi + rbx*4 + 0x848]	       367	blowfish.c	FUNCTION_1	CALL_16
0x40003d4	        0x440fb6c8	                           movzx r9d, al	       366	blowfish.c	FUNCTION_1	CALL_14
0x40003d8	    0x4603848f480c	     add r8d, dword [rdi + r9*4 + 0xc48]	       367	blowfish.c	FUNCTION_1	CALL_16
0x40003e0	          0x4431c1	                            xor ecx, r8d	       367	blowfish.c	FUNCTION_1	CALL_16
0x40003e3	          0x33473c	             xor eax, dword [rdi + 0x3c]	       367	blowfish.c	FUNCTION_1	CALL_16
0x40003e6	          0x4989c9	                             mov r9, rcx	       367	blowfish.c	FUNCTION_1	CALL_16
0x40003e9	        0x49c1e910	                            shr r9, 0x10	       367	blowfish.c	FUNCTION_1	CALL_16
0x40003ed	    0x4181e1ff0000	                           and r9d, 0xff	       367	blowfish.c	FUNCTION_1	CALL_16
0x40003f4	          0x4189c8	                            mov r8d, ecx	       367	blowfish.c	FUNCTION_1	CALL_16
0x40003f7	        0x41c1e818	                           shr r8d, 0x18	       367	blowfish.c	FUNCTION_1	CALL_16
0x40003fb	          0x4589c0	                            mov r8d, r8d	       367	blowfish.c	FUNCTION_1	CALL_16
0x40003fe	      0x468b448748	     mov r8d, dword [rdi + r8*4 + 0x48] 	       367	blowfish.c	FUNCTION_1	CALL_16
0x4000403	    0x4603848f4804	     add r8d, dword [rdi + r9*4 + 0x448]	       367	blowfish.c	FUNCTION_1	CALL_16
0x400040b	           0xfb6dd	                           movzx ebx, ch	       367	blowfish.c	FUNCTION_1	CALL_16
0x400040e	    0x4433849f4808	    xor r8d, dword [rdi + rbx*4 + 0x848]	       367	blowfish.c	FUNCTION_1	CALL_16
0x4000416	        0x440fb6c9	                           movzx r9d, cl	       367	blowfish.c	FUNCTION_1	CALL_16
0x400041a	    0x4603848f480c	     add r8d, dword [rdi + r9*4 + 0xc48]	       367	blowfish.c	FUNCTION_1	CALL_16
0x4000422	          0x4431c0	                            xor eax, r8d	       367	blowfish.c	FUNCTION_1	CALL_16
0x4000425	          0x4989c1	                             mov r9, rax	       367	blowfish.c	FUNCTION_1	CALL_16
0x4000428	        0x49c1e910	                            shr r9, 0x10	       367	blowfish.c	FUNCTION_1	CALL_16
0x400042c	    0x4181e1ff0000	                           and r9d, 0xff	       367	blowfish.c	FUNCTION_1	CALL_16
0x4000433	          0x4189c0	                            mov r8d, eax	       367	blowfish.c	FUNCTION_1	CALL_16
0x4000436	        0x41c1e818	                           shr r8d, 0x18	       367	blowfish.c	FUNCTION_1	CALL_16
0x400043a	          0x4589c0	                            mov r8d, r8d	       367	blowfish.c	FUNCTION_1	CALL_16
0x400043d	      0x468b448748	     mov r8d, dword [rdi + r8*4 + 0x48] 	       367	blowfish.c	FUNCTION_1	CALL_16
0x4000442	    0x4603848f4804	     add r8d, dword [rdi + r9*4 + 0x448]	       367	blowfish.c	FUNCTION_1	CALL_16
0x400044a	           0xfb6dc	                           movzx ebx, ah	       367	blowfish.c	FUNCTION_1	CALL_16
0x400044d	    0x4433849f4808	    xor r8d, dword [rdi + rbx*4 + 0x848]	       367	blowfish.c	FUNCTION_1	CALL_16
0x4000455	        0x440fb6c8	                           movzx r9d, al	       367	blowfish.c	FUNCTION_1	CALL_16
0x4000459	    0x4603848f480c	     add r8d, dword [rdi + r9*4 + 0xc48]	       367	blowfish.c	FUNCTION_1	CALL_16
0x4000461	          0x334f40	             xor ecx, dword [rdi + 0x40]	       368	blowfish.c	FUNCTION_1
0x4000464	          0x4431c1	                            xor ecx, r8d	       368	blowfish.c	FUNCTION_1
0x4000467	          0x334744	             xor eax, dword [rdi + 0x44]	       373	blowfish.c	FUNCTION_1
0x400046a	            0x8906	                    mov dword [rsi], eax	       373	blowfish.c	FUNCTION_1
0x400046c	            0x890a	                    mov dword [rdx], ecx	       374	blowfish.c	FUNCTION_1
0x400046e	              0x5b	                                 pop rbx	       375	blowfish.c	FUNCTION_1
0x400046f	              0xc3	                                     ret	       375	blowfish.c	FUNCTION_1
crypt_blowfish_decode	FOR,1:ELSE,0:WHILE,0:functions,0:DO,0:CALL,2:SWITCH,0:IF,0	46
0x40008d1	            0x4156	                                push r14	       633	blowfish.c	FUNCTION_8
0x40008d3	            0x4155	                                push r13	       633	blowfish.c	FUNCTION_8
0x40008d5	            0x4154	                                push r12	       633	blowfish.c	FUNCTION_8
0x40008d7	              0x55	                                push rbp	       633	blowfish.c	FUNCTION_8
0x40008d8	              0x53	                                push rbx	       633	blowfish.c	FUNCTION_8
0x40008d9	        0x488b5f08	                mov rbx, qword [rdi + 8]	       634	blowfish.c	FUNCTION_8
0x40008dd	          0x4885d2	                           test rdx, rdx	       638	blowfish.c	FUNCTION_8	FOR_1
0x40008e0	     0xf8497000000	                            je 0x400097d	       638	blowfish.c	FUNCTION_8	FOR_1
0x40008e6	          0x4989ce	                            mov r14, rcx	       638	blowfish.c	FUNCTION_8	FOR_1
0x40008e9	          0x4989d4	                            mov r12, rdx	       638	blowfish.c	FUNCTION_8	FOR_1
0x40008ec	          0x4989f5	                            mov r13, rsi	       638	blowfish.c	FUNCTION_8	FOR_1
0x40008ef	      0xbd00000000	                              mov ebp, 0	       638	blowfish.c	FUNCTION_8	FOR_1
0x40008f4	    0x8b8348100000	          mov eax, dword [rbx + 0x1048] 	       640	blowfish.c	FUNCTION_8	FOR_1	CALL_1
0x40008fa	            0xa807	                              test al, 7	       640	blowfish.c	FUNCTION_8	FOR_1	CALL_1
0x40008fc	            0x7512	                           jne 0x4000910	       640	blowfish.c	FUNCTION_8	FOR_1	CALL_1
0x40008fe	            0x4898	                                    cdqe	       640	blowfish.c	FUNCTION_8	FOR_1	CALL_1
0x4000900	    0x488db4035010	           lea rsi, [rbx + rax + 0x1050]	       640	blowfish.c	FUNCTION_8	FOR_1	CALL_1
0x4000908	          0x4889df	                            mov rdi, rbx	       640	blowfish.c	FUNCTION_8	FOR_1	CALL_1
0x400090b	      0xe8a8fbffff	                    call sym.bf_e_cblock	       640	blowfish.c	FUNCTION_8	FOR_1	CALL_1
0x4000910	    0x8b8348100000	          mov eax, dword [rbx + 0x1048] 	       640	blowfish.c	FUNCTION_8	FOR_1	CALL_1
0x4000916	          0x4863d0	                         movsxd rdx, eax	       640	blowfish.c	FUNCTION_8	FOR_1	CALL_1
0x4000919	     0xfb694135010	   movzx edx, byte [rbx + rdx + 0x1050] 	       640	blowfish.c	FUNCTION_8	FOR_1	CALL_1
0x4000921	          0x83c001	                              add eax, 1	       640	blowfish.c	FUNCTION_8	FOR_1	CALL_1
0x4000924	    0x898348100000	          mov dword [rbx + 0x1048], eax 	       640	blowfish.c	FUNCTION_8	FOR_1	CALL_1
0x400092a	    0x3b8390100000	          cmp eax, dword [rbx + 0x1090] 	       640	blowfish.c	FUNCTION_8	FOR_1	CALL_1
0x4000930	            0x750a	                           jne 0x400093c	       640	blowfish.c	FUNCTION_8	FOR_1	CALL_1
0x4000932	    0xc78348100000	            mov dword [rbx + 0x1048], 0 	       640	blowfish.c	FUNCTION_8	FOR_1	CALL_1
0x400093c	      0x4132542d00	                xor dl, byte [r13 + rbp]	       641	blowfish.c	FUNCTION_8	FOR_1
0x4000941	        0x4188142e	                mov byte [r14 + rbp], dl	       641	blowfish.c	FUNCTION_8	FOR_1
0x4000945	    0x8b834c100000	          mov eax, dword [rbx + 0x104c] 	       642	blowfish.c	FUNCTION_8	FOR_1	CALL_2
0x400094b	          0x4863c8	                         movsxd rcx, eax	       642	blowfish.c	FUNCTION_8	FOR_1	CALL_2
0x400094e	    0x30940b501000	       xor byte [rbx + rcx + 0x1050], dl	       642	blowfish.c	FUNCTION_8	FOR_1	CALL_2
0x4000955	          0x83c001	                              add eax, 1	       642	blowfish.c	FUNCTION_8	FOR_1	CALL_2
0x4000958	    0x89834c100000	          mov dword [rbx + 0x104c], eax 	       642	blowfish.c	FUNCTION_8	FOR_1	CALL_2
0x400095e	    0x3b8390100000	          cmp eax, dword [rbx + 0x1090] 	       642	blowfish.c	FUNCTION_8	FOR_1	CALL_2
0x4000964	            0x750a	                           jne 0x4000970	       642	blowfish.c	FUNCTION_8	FOR_1	CALL_2
0x4000966	    0xc7834c100000	            mov dword [rbx + 0x104c], 0 	       642	blowfish.c	FUNCTION_8	FOR_1	CALL_2
0x4000970	        0x4883c501	                              add rbp, 1	       638	blowfish.c	FUNCTION_8	FOR_1
0x4000974	          0x4939ec	                            cmp r12, rbp	       638	blowfish.c	FUNCTION_8	FOR_1
0x4000977	     0xf8577ffffff	                           jne 0x40008f4	       638	blowfish.c	FUNCTION_8	FOR_1
0x400097d	              0x5b	                                 pop rbx	       644	blowfish.c	FUNCTION_8
0x400097e	              0x5d	                                 pop rbp	       644	blowfish.c	FUNCTION_8
0x400097f	            0x415c	                                 pop r12	       644	blowfish.c	FUNCTION_8
0x4000981	            0x415d	                                 pop r13	       644	blowfish.c	FUNCTION_8
0x4000983	            0x415e	                                 pop r14	       644	blowfish.c	FUNCTION_8
0x4000985	              0xc3	                                     ret	       644	blowfish.c	FUNCTION_8
bf_key_init	FOR,7:ELSE,0:WHILE,0:functions,0:DO,0:CALL,9:SWITCH,0:IF,1	137
0x4000506	            0x4157	                                push r15	       412	blowfish.c	FUNCTION_3
0x4000508	            0x4156	                                push r14	       412	blowfish.c	FUNCTION_3
0x400050a	            0x4155	                                push r13	       412	blowfish.c	FUNCTION_3
0x400050c	            0x4154	                                push r12	       412	blowfish.c	FUNCTION_3
0x400050e	              0x55	                                push rbp	       412	blowfish.c	FUNCTION_3
0x400050f	              0x53	                                push rbx	       412	blowfish.c	FUNCTION_3
0x4000510	        0x4883ec28	                           sub rsp, 0x28	       412	blowfish.c	FUNCTION_3
0x4000514	          0x4889fd	                            mov rbp, rdi	       412	blowfish.c	FUNCTION_3
0x4000517	          0x4889f7	                            mov rdi, rsi	       412	blowfish.c	FUNCTION_3
0x400051a	          0x4989d5	                            mov r13, rdx	       412	blowfish.c	FUNCTION_3
0x400051d	          0x4189ce	                           mov r14d, ecx	       412	blowfish.c	FUNCTION_3
0x4000520	    0x64488b042528	                mov rax, qword fs:[0x28]	       412	blowfish.c	FUNCTION_3
0x4000529	      0x4889442418	             mov qword [rsp + 0x18], rax	       412	blowfish.c	FUNCTION_3
0x400052e	            0x31c0	                            xor eax, eax	       412	blowfish.c	FUNCTION_3
0x4000530	            0x89ca	                            mov edx, ecx	       421	blowfish.c	FUNCTION_3	CALL_1
0x4000532	          0x4c89ee	                            mov rsi, r13	       421	blowfish.c	FUNCTION_3	CALL_1
0x4000535	      0xe800000000	                          call 0x400053a	       421	blowfish.c	FUNCTION_3	CALL_1
0x400053a	          0x4989c4	                            mov r12, rax	       421	blowfish.c	FUNCTION_3	CALL_1
0x400053d	      0xbbe8030000	                          mov ebx, 0x3e8	       421	blowfish.c	FUNCTION_3	CALL_1
0x4000542	          0x4489f2	                           mov edx, r14d	       423	blowfish.c	FUNCTION_3	CALL_2
0x4000545	          0x4c89ee	                            mov rsi, r13	       423	blowfish.c	FUNCTION_3	CALL_2
0x4000548	          0x4c89e7	                            mov rdi, r12	       423	blowfish.c	FUNCTION_3	CALL_2
0x400054b	      0xe800000000	                          call 0x4000550	       423	blowfish.c	FUNCTION_3	CALL_2
0x4000550	          0x4989c4	                            mov r12, rax	       423	blowfish.c	FUNCTION_3	CALL_2
0x4000553	          0x83eb01	                              sub ebx, 1	       422	blowfish.c	FUNCTION_3	FOR_1
0x4000556	            0x75ea	                           jne 0x4000542	       422	blowfish.c	FUNCTION_3	FOR_1
0x4000558	      0xb800000000	                              mov eax, 0	       426	blowfish.c	FUNCTION_3	CALL_3
0x400055d	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       426	blowfish.c	FUNCTION_3	CALL_3
0x4000564	          0x4c89e7	                            mov rdi, r12	       426	blowfish.c	FUNCTION_3	CALL_3
0x4000567	            0xf2ae	              repne scasb al, byte [rdi]	       426	blowfish.c	FUNCTION_3	CALL_3
0x4000569	          0x4889c8	                            mov rax, rcx	       426	blowfish.c	FUNCTION_3	CALL_3
0x400056c	          0x48f7d0	                                 not rax	       426	blowfish.c	FUNCTION_3	CALL_3
0x400056f	        0x4883e801	                              sub rax, 1	       426	blowfish.c	FUNCTION_3	CALL_3
0x4000573	            0x89c2	                            mov edx, eax	       426	blowfish.c	FUNCTION_3	CALL_3
0x4000575	          0xc1ea1f	                           shr edx, 0x1f	       426	blowfish.c	FUNCTION_3	CALL_3
0x4000578	             0x1d0	                            add eax, edx	       426	blowfish.c	FUNCTION_3	CALL_3
0x400057a	            0xd1f8	                              sar eax, 1	       426	blowfish.c	FUNCTION_3	CALL_3
0x400057c	          0x4189c5	                           mov r13d, eax	       426	blowfish.c	FUNCTION_3	CALL_3
0x400057f	            0x85c0	                           test eax, eax	       427	blowfish.c	FUNCTION_3	IF_1
0x4000581	            0x740d	                            je 0x4000590	       427	blowfish.c	FUNCTION_3	IF_1
0x4000583	          0x4d89e6	                            mov r14, r12	       427	blowfish.c	FUNCTION_3	IF_1
0x4000586	        0x448d3c00	                   lea r15d, [rax + rax]	       427	blowfish.c	FUNCTION_3	IF_1
0x400058a	            0x85c0	                           test eax, eax	       432	blowfish.c	FUNCTION_3	FOR_2
0x400058c	            0x7f23	                            jg 0x40005b1	       432	blowfish.c	FUNCTION_3	FOR_2
0x400058e	            0xeb4e	                           jmp 0x40005de	       432	blowfish.c	FUNCTION_3	FOR_2
0x4000590	      0xba05000000	                              mov edx, 5	       429	blowfish.c	FUNCTION_3	IF_1	CALL_5
0x4000595	      0xbe00000000	                              mov esi, 0	       429	blowfish.c	FUNCTION_3	IF_1	CALL_5
0x400059a	      0xbf00000000	                              mov edi, 0	       429	blowfish.c	FUNCTION_3	IF_1	CALL_5
0x400059f	      0xe800000000	                          call 0x40005a4	       429	blowfish.c	FUNCTION_3	IF_1	CALL_5
0x40005a4	          0x4889c7	                            mov rdi, rax	       429	blowfish.c	FUNCTION_3	IF_1	CALL_5
0x40005a7	      0xe800000000	                          call 0x40005ac	       429	blowfish.c	FUNCTION_3	IF_1	CALL_5
0x40005ac	      0xe913010000	                           jmp 0x40006c4	       429	blowfish.c	FUNCTION_3	IF_1	CALL_5
0x40005b1	          0x4863fb	                         movsxd rdi, ebx	       434	blowfish.c	FUNCTION_3	FOR_2	CALL_6
0x40005b4	          0x4c01e7	                            add rdi, r12	       434	blowfish.c	FUNCTION_3	FOR_2	CALL_6
0x40005b7	      0x488d54240c	                    lea rdx, [rsp + 0xc]	       434	blowfish.c	FUNCTION_3	FOR_2	CALL_6
0x40005bc	      0xbe00000000	                              mov esi, 0	       434	blowfish.c	FUNCTION_3	FOR_2	CALL_6
0x40005c1	      0xb800000000	                              mov eax, 0	       434	blowfish.c	FUNCTION_3	FOR_2	CALL_6
0x40005c6	      0xe800000000	                          call 0x40005cb	       434	blowfish.c	FUNCTION_3	FOR_2	CALL_6
0x40005cb	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       435	blowfish.c	FUNCTION_3	FOR_2
0x40005cf	          0x418806	                      mov byte [r14], al	       435	blowfish.c	FUNCTION_3	FOR_2
0x40005d2	          0x83c302	                              add ebx, 2	       435	blowfish.c	FUNCTION_3	FOR_2
0x40005d5	        0x4983c601	                              add r14, 1	       435	blowfish.c	FUNCTION_3	FOR_2
0x40005d9	          0x4139df	                           cmp r15d, ebx	       432	blowfish.c	FUNCTION_3	FOR_2
0x40005dc	            0x75d3	                           jne 0x40005b1	       432	blowfish.c	FUNCTION_3	FOR_2
0x40005de	        0x488d7d48	                   lea rdi, [rbp + 0x48]	        59	string3.h	FUNCTION_12	CALL_3
0x40005e2	      0xba00100000	                         mov edx, 0x1000	        59	string3.h	FUNCTION_12	CALL_3
0x40005e7	      0xbe00000000	                              mov esi, 0	        59	string3.h	FUNCTION_12	CALL_3
0x40005ec	      0xe800000000	                          call 0x40005f1	        59	string3.h	FUNCTION_12	CALL_3
0x40005f1	      0xbf00000000	                              mov edi, 0	        59	string3.h	FUNCTION_12	CALL_3
0x40005f6	    0x41b804000000	                              mov r8d, 4	        59	string3.h	FUNCTION_12	CALL_3
0x40005fc	            0xeb35	                           jmp 0x4000633	        59	string3.h	FUNCTION_12	CALL_3
0x40005fe	            0x89d1	                            mov ecx, edx	       446	blowfish.c	FUNCTION_3	FOR_3	FOR_4
0x4000600	          0xc1e108	                              shl ecx, 8	       446	blowfish.c	FUNCTION_3	FOR_3	FOR_4
0x4000603	          0x8d7001	                      lea esi, [rax + 1]	       446	blowfish.c	FUNCTION_3	FOR_3	FOR_4
0x4000606	              0x99	                                     cdq	       446	blowfish.c	FUNCTION_3	FOR_3	FOR_4
0x4000607	          0x41f7fd	                               idiv r13d	       446	blowfish.c	FUNCTION_3	FOR_3	FOR_4
0x400060a	          0x4863c2	                         movsxd rax, edx	       446	blowfish.c	FUNCTION_3	FOR_3	FOR_4
0x400060d	      0x410fb61404	             movzx edx, byte [r12 + rax]	       446	blowfish.c	FUNCTION_3	FOR_3	FOR_4
0x4000612	             0x9ca	                             or edx, ecx	       446	blowfish.c	FUNCTION_3	FOR_3	FOR_4
0x4000614	            0x89f0	                            mov eax, esi	       446	blowfish.c	FUNCTION_3	FOR_3	FOR_4
0x4000616	          0x4439ce	                            cmp esi, r9d	       445	blowfish.c	FUNCTION_3	FOR_3	FOR_4
0x4000619	            0x75e3	                           jne 0x40005fe	       445	blowfish.c	FUNCTION_3	FOR_3	FOR_4
0x400061b	    0x339700000000	                    xor edx, dword [rdi]	       447	blowfish.c	FUNCTION_3	FOR_3
0x4000621	        0x89543d00	              mov dword [rbp + rdi], edx	       447	blowfish.c	FUNCTION_3	FOR_3
0x4000625	        0x4183c004	                              add r8d, 4	       447	blowfish.c	FUNCTION_3	FOR_3
0x4000629	        0x4883c704	                              add rdi, 4	       447	blowfish.c	FUNCTION_3	FOR_3
0x400062d	        0x4883ff48	                           cmp rdi, 0x48	       442	blowfish.c	FUNCTION_3	FOR_3
0x4000631	            0x740c	                            je 0x400063f	       442	blowfish.c	FUNCTION_3	FOR_3
0x4000633	            0x89f8	                            mov eax, edi	       442	blowfish.c	FUNCTION_3	FOR_3
0x4000635	          0x4589c1	                            mov r9d, r8d	       442	blowfish.c	FUNCTION_3	FOR_3
0x4000638	      0xba00000000	                              mov edx, 0	       421	blowfish.c	FUNCTION_3	CALL_1
0x400063d	            0xebbf	                           jmp 0x40005fe	       421	blowfish.c	FUNCTION_3	CALL_1
0x400063f	    0xc74424140000	               mov dword [rsp + 0x14], 0	       450	blowfish.c	FUNCTION_3
0x4000647	    0xc74424100000	               mov dword [rsp + 0x10], 0	       450	blowfish.c	FUNCTION_3
0x400064f	          0x4989ec	                            mov r12, rbp	       450	blowfish.c	FUNCTION_3
0x4000652	        0x488d5d48	                   lea rbx, [rbp + 0x48]	       450	blowfish.c	FUNCTION_3
0x4000656	      0x488d542414	                   lea rdx, [rsp + 0x14]	       453	blowfish.c	FUNCTION_3	FOR_5	CALL_8
0x400065b	      0x488d742410	                   lea rsi, [rsp + 0x10]	       453	blowfish.c	FUNCTION_3	FOR_5	CALL_8
0x4000660	          0x4889ef	                            mov rdi, rbp	       453	blowfish.c	FUNCTION_3	FOR_5	CALL_8
0x4000663	      0xe8d8f9ffff	                     call sym.bf_e_block	       453	blowfish.c	FUNCTION_3	FOR_5	CALL_8
0x4000668	        0x8b442410	            mov eax, dword [rsp + 0x10] 	       454	blowfish.c	FUNCTION_3	FOR_5
0x400066c	        0x41890424	                    mov dword [r12], eax	       454	blowfish.c	FUNCTION_3	FOR_5
0x4000670	        0x8b442414	            mov eax, dword [rsp + 0x14] 	       455	blowfish.c	FUNCTION_3	FOR_5
0x4000674	      0x4189442404	                mov dword [r12 + 4], eax	       455	blowfish.c	FUNCTION_3	FOR_5
0x4000679	        0x4983c408	                              add r12, 8	       455	blowfish.c	FUNCTION_3	FOR_5
0x400067d	          0x4939dc	                            cmp r12, rbx	       451	blowfish.c	FUNCTION_3	FOR_5
0x4000680	            0x75d4	                           jne 0x4000656	       451	blowfish.c	FUNCTION_3	FOR_5
0x4000682	    0x4c8dad481000	                 lea r13, [rbp + 0x1048]	       451	blowfish.c	FUNCTION_3	FOR_5
0x4000689	            0xeb30	                           jmp 0x40006bb	       451	blowfish.c	FUNCTION_3	FOR_5
0x400068b	      0x488d542414	                   lea rdx, [rsp + 0x14]	       462	blowfish.c	FUNCTION_3	FOR_6	FOR_7	CALL_9
0x4000690	      0x488d742410	                   lea rsi, [rsp + 0x10]	       462	blowfish.c	FUNCTION_3	FOR_6	FOR_7	CALL_9
0x4000695	          0x4889ef	                            mov rdi, rbp	       462	blowfish.c	FUNCTION_3	FOR_6	FOR_7	CALL_9
0x4000698	      0xe8a3f9ffff	                     call sym.bf_e_block	       462	blowfish.c	FUNCTION_3	FOR_6	FOR_7	CALL_9
0x400069d	        0x8b442410	            mov eax, dword [rsp + 0x10] 	       463	blowfish.c	FUNCTION_3	FOR_6	FOR_7
0x40006a1	            0x8903	                    mov dword [rbx], eax	       463	blowfish.c	FUNCTION_3	FOR_6	FOR_7
0x40006a3	        0x8b442414	            mov eax, dword [rsp + 0x14] 	       464	blowfish.c	FUNCTION_3	FOR_6	FOR_7
0x40006a7	          0x894304	                mov dword [rbx + 4], eax	       464	blowfish.c	FUNCTION_3	FOR_6	FOR_7
0x40006aa	        0x4883c308	                              add rbx, 8	       464	blowfish.c	FUNCTION_3	FOR_6	FOR_7
0x40006ae	          0x4c39e3	                            cmp rbx, r12	       460	blowfish.c	FUNCTION_3	FOR_6	FOR_7
0x40006b1	            0x75d8	                           jne 0x400068b	       460	blowfish.c	FUNCTION_3	FOR_6	FOR_7
0x40006b3	          0x4c89e3	                            mov rbx, r12	       460	blowfish.c	FUNCTION_3	FOR_6	FOR_7
0x40006b6	          0x4d39ec	                            cmp r12, r13	       458	blowfish.c	FUNCTION_3	FOR_6
0x40006b9	            0x7409	                            je 0x40006c4	       458	blowfish.c	FUNCTION_3	FOR_6
0x40006bb	    0x4c8da3000400	                  lea r12, [rbx + 0x400]	       458	blowfish.c	FUNCTION_3	FOR_6
0x40006c2	            0xebc7	                           jmp 0x400068b	       458	blowfish.c	FUNCTION_3	FOR_6
0x40006c4	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       467	blowfish.c	FUNCTION_3
0x40006c9	    0x644833042528	                xor rax, qword fs:[0x28]	       467	blowfish.c	FUNCTION_3
0x40006d2	            0x7405	                            je 0x40006d9	       467	blowfish.c	FUNCTION_3
0x40006d4	      0xe800000000	                          call 0x40006d9	       467	blowfish.c	FUNCTION_3
0x40006d9	        0x4883c428	                           add rsp, 0x28	       467	blowfish.c	FUNCTION_3
0x40006dd	              0x5b	                                 pop rbx	       467	blowfish.c	FUNCTION_3
0x40006de	              0x5d	                                 pop rbp	       467	blowfish.c	FUNCTION_3
0x40006df	            0x415c	                                 pop r12	       467	blowfish.c	FUNCTION_3
0x40006e1	            0x415d	                                 pop r13	       467	blowfish.c	FUNCTION_3
0x40006e3	            0x415e	                                 pop r14	       467	blowfish.c	FUNCTION_3
0x40006e5	            0x415f	                                 pop r15	       467	blowfish.c	FUNCTION_3
0x40006e7	              0xc3	                                     ret	       467	blowfish.c	FUNCTION_3
bf_self_test	FOR,1:ELSE,0:WHILE,0:functions,0:DO,0:CALL,14:SWITCH,0:IF,5	71
0x40006e8	              0x55	                                push rbp	       518	blowfish.c	FUNCTION_5
0x40006e9	              0x53	                                push rbx	       518	blowfish.c	FUNCTION_5
0x40006ea	    0x4881ecb81000	                         sub rsp, 0x10b8	       518	blowfish.c	FUNCTION_5
0x40006f1	    0x64488b042528	                mov rax, qword fs:[0x28]	       518	blowfish.c	FUNCTION_5
0x40006fa	    0x48898424a810	          mov qword [rsp + 0x10a8], rax 	       518	blowfish.c	FUNCTION_5
0x4000702	            0x31c0	                            xor eax, eax	       518	blowfish.c	FUNCTION_5
0x4000704	      0x488d5c2410	                   lea rbx, [rsp + 0x10]	        90	string3.h	FUNCTION_14	CALL_6
0x4000709	      0xb912020000	                          mov ecx, 0x212	        90	string3.h	FUNCTION_14	CALL_6
0x400070e	          0x4889df	                            mov rdi, rbx	        90	string3.h	FUNCTION_14	CALL_6
0x4000711	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_14	CALL_6
0x4000714	    0xc78424a01000	         mov dword [rsp + 0x10a0], 0x40 	       526	blowfish.c	FUNCTION_5
0x400071f	      0xba0a52fa6f	                     mov edx, 0x6ffa520a	       535	blowfish.c	FUNCTION_5	IF_2	CALL_4
0x4000724	      0xbe00000000	                              mov esi, 0	       535	blowfish.c	FUNCTION_5	IF_2	CALL_4
0x4000729	      0xbf00000000	                              mov edi, 0	       535	blowfish.c	FUNCTION_5	IF_2	CALL_4
0x400072e	      0xe83dfdffff	                call sym.bf_check_tables	       535	blowfish.c	FUNCTION_5	IF_2	CALL_4
0x4000733	            0x85c0	                           test eax, eax	       536	blowfish.c	FUNCTION_5	IF_2
0x4000735	        0x400f94c5	                                sete bpl	       536	blowfish.c	FUNCTION_5	IF_2
0x4000739	        0x400fb6ed	                          movzx ebp, bpl	       536	blowfish.c	FUNCTION_5	IF_2
0x400073d	      0xbf00000000	                              mov edi, 0	       543	blowfish.c	FUNCTION_5	FOR_1	CALL_7
0x4000742	      0xb800000000	                              mov eax, 0	       543	blowfish.c	FUNCTION_5	FOR_1	CALL_7
0x4000747	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       543	blowfish.c	FUNCTION_5	FOR_1	CALL_7
0x400074e	            0xf2ae	              repne scasb al, byte [rdi]	       543	blowfish.c	FUNCTION_5	FOR_1	CALL_7
0x4000750	          0x48f7d1	                                 not rcx	       543	blowfish.c	FUNCTION_5	FOR_1	CALL_7
0x4000753	        0x4883e901	                              sub rcx, 1	       543	blowfish.c	FUNCTION_5	FOR_1	CALL_7
0x4000757	      0xba00000000	                              mov edx, 0	       541	blowfish.c	FUNCTION_5	FOR_1	CALL_6
0x400075c	      0xbe00000000	                              mov esi, 0	       541	blowfish.c	FUNCTION_5	FOR_1	CALL_6
0x4000761	          0x4889df	                            mov rdi, rbx	       541	blowfish.c	FUNCTION_5	FOR_1	CALL_6
0x4000764	      0xe89dfdffff	                    call sym.bf_key_init	       541	blowfish.c	FUNCTION_5	FOR_1	CALL_6
0x4000769	        0x488d7348	                   lea rsi, [rbx + 0x48]	       544	blowfish.c	FUNCTION_5	FOR_1	IF_3	CALL_8
0x400076d	    0x8b1500000000	            mov edx, dword [0x04000773] 	       544	blowfish.c	FUNCTION_5	FOR_1	IF_3	CALL_8
0x4000773	          0x4889df	                            mov rdi, rbx	       544	blowfish.c	FUNCTION_5	FOR_1	IF_3	CALL_8
0x4000776	      0xe8f5fcffff	                call sym.bf_check_tables	       544	blowfish.c	FUNCTION_5	FOR_1	IF_3	CALL_8
0x400077b	          0x83f801	                              cmp eax, 1	       545	blowfish.c	FUNCTION_5	FOR_1	IF_3
0x400077e	          0x83d500	                              adc ebp, 0	       545	blowfish.c	FUNCTION_5	FOR_1	IF_3
0x4000781	    0x488b05000000	            mov rax, qword [0x04000788] 	       545	blowfish.c	FUNCTION_5	FOR_1	IF_3
0x4000788	        0x48890424	                    mov qword [rsp], rax	       545	blowfish.c	FUNCTION_5	FOR_1	IF_3
0x400078c	          0x4889e6	                            mov rsi, rsp	       549	blowfish.c	FUNCTION_5	FOR_1	CALL_10
0x400078f	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       549	blowfish.c	FUNCTION_5	FOR_1	CALL_10
0x4000794	      0xe81ffdffff	                    call sym.bf_e_cblock	       549	blowfish.c	FUNCTION_5	FOR_1	CALL_10
0x4000799	      0xba08000000	                              mov edx, 8	       550	blowfish.c	FUNCTION_5	FOR_1	IF_4	CALL_11
0x400079e	      0xbe00000000	                              mov esi, 0	       550	blowfish.c	FUNCTION_5	FOR_1	IF_4	CALL_11
0x40007a3	          0x4889e7	                            mov rdi, rsp	       550	blowfish.c	FUNCTION_5	FOR_1	IF_4	CALL_11
0x40007a6	      0xe800000000	                          call 0x40007ab	       550	blowfish.c	FUNCTION_5	FOR_1	IF_4	CALL_11
0x40007ab	            0x85c0	                           test eax, eax	       550	blowfish.c	FUNCTION_5	FOR_1	IF_4	CALL_11
0x40007ad	            0x7439	                            je 0x40007e8	       550	blowfish.c	FUNCTION_5	FOR_1	IF_4	CALL_11
0x40007af	            0x85ed	                           test ebp, ebp	       552	blowfish.c	FUNCTION_5	FOR_1	IF_4	IF_5	CALL_12
0x40007b1	            0x7532	                           jne 0x40007e5	       552	blowfish.c	FUNCTION_5	FOR_1	IF_4	IF_5	CALL_12
0x40007b3	      0xba08000000	                              mov edx, 8	       552	blowfish.c	FUNCTION_5	FOR_1	IF_4	IF_5	CALL_12
0x40007b8	      0xbe00000000	                              mov esi, 0	       552	blowfish.c	FUNCTION_5	FOR_1	IF_4	IF_5	CALL_12
0x40007bd	          0x4889e7	                            mov rdi, rsp	       552	blowfish.c	FUNCTION_5	FOR_1	IF_4	IF_5	CALL_12
0x40007c0	      0xe800000000	                          call 0x40007c5	       552	blowfish.c	FUNCTION_5	FOR_1	IF_4	IF_5	CALL_12
0x40007c5	            0x85c0	                           test eax, eax	       552	blowfish.c	FUNCTION_5	FOR_1	IF_4	IF_5	CALL_12
0x40007c7	            0x751c	                           jne 0x40007e5	       552	blowfish.c	FUNCTION_5	FOR_1	IF_4	IF_5	CALL_12
0x40007c9	      0xba05000000	                              mov edx, 5	       553	blowfish.c	FUNCTION_5	FOR_1	IF_4	CALL_14
0x40007ce	      0xbe00000000	                              mov esi, 0	       553	blowfish.c	FUNCTION_5	FOR_1	IF_4	CALL_14
0x40007d3	      0xbf00000000	                              mov edi, 0	       553	blowfish.c	FUNCTION_5	FOR_1	IF_4	CALL_14
0x40007d8	      0xe800000000	                          call 0x40007dd	       553	blowfish.c	FUNCTION_5	FOR_1	IF_4	CALL_14
0x40007dd	          0x4889c7	                            mov rdi, rax	       553	blowfish.c	FUNCTION_5	FOR_1	IF_4	CALL_14
0x40007e0	      0xe800000000	                          call 0x40007e5	       553	blowfish.c	FUNCTION_5	FOR_1	IF_4	CALL_14
0x40007e5	          0x83c501	                              add ebp, 1	       554	blowfish.c	FUNCTION_5	FOR_1	IF_4
0x40007e8	            0x85ed	                           test ebp, ebp	       558	blowfish.c	FUNCTION_5
0x40007ea	           0xf9ec0	                                setle al	       558	blowfish.c	FUNCTION_5
0x40007ed	           0xfb6c0	                           movzx eax, al	       558	blowfish.c	FUNCTION_5
0x40007f0	    0x488b9424a810	          mov rdx, qword [rsp + 0x10a8] 	       559	blowfish.c	FUNCTION_5
0x40007f8	    0x644833142528	                xor rdx, qword fs:[0x28]	       559	blowfish.c	FUNCTION_5
0x4000801	            0x7405	                            je 0x4000808	       559	blowfish.c	FUNCTION_5
0x4000803	      0xe800000000	                          call 0x4000808	       559	blowfish.c	FUNCTION_5
0x4000808	    0x4881c4b81000	                         add rsp, 0x10b8	       559	blowfish.c	FUNCTION_5
0x400080f	              0x5b	                                 pop rbx	       559	blowfish.c	FUNCTION_5
0x4000810	              0x5d	                                 pop rbp	       559	blowfish.c	FUNCTION_5
0x4000811	              0xc3	                                     ret	       559	blowfish.c	FUNCTION_5
bf_check_tables	FOR,3:ELSE,0:WHILE,0:functions,0:DO,0:CALL,0:SWITCH,0:IF,0	23
0x4000470	          0x4889f8	                            mov rax, rdi	       477	blowfish.c	FUNCTION_4
0x4000473	        0x4883c748	                           add rdi, 0x48	       477	blowfish.c	FUNCTION_4
0x4000477	      0xb900000000	                              mov ecx, 0	       479	blowfish.c	FUNCTION_4
0x400047c	            0x3308	                    xor ecx, dword [rax]	       482	blowfish.c	FUNCTION_4	FOR_1
0x400047e	        0x4883c004	                              add rax, 4	       482	blowfish.c	FUNCTION_4	FOR_1
0x4000482	          0x4839f8	                            cmp rax, rdi	       481	blowfish.c	FUNCTION_4	FOR_1
0x4000485	            0x75f5	                           jne 0x400047c	       481	blowfish.c	FUNCTION_4	FOR_1
0x4000487	          0x4889f0	                            mov rax, rsi	       481	blowfish.c	FUNCTION_4	FOR_1
0x400048a	    0x488dbe001000	                 lea rdi, [rsi + 0x1000]	       481	blowfish.c	FUNCTION_4	FOR_1
0x4000491	            0xeb13	                           jmp 0x40004a6	       481	blowfish.c	FUNCTION_4	FOR_1
0x4000493	            0x3308	                    xor ecx, dword [rax]	       485	blowfish.c	FUNCTION_4	FOR_2	FOR_3
0x4000495	        0x4883c004	                              add rax, 4	       485	blowfish.c	FUNCTION_4	FOR_2	FOR_3
0x4000499	          0x4839f0	                            cmp rax, rsi	       484	blowfish.c	FUNCTION_4	FOR_2	FOR_3
0x400049c	            0x75f5	                           jne 0x4000493	       484	blowfish.c	FUNCTION_4	FOR_2	FOR_3
0x400049e	          0x4889f0	                            mov rax, rsi	       484	blowfish.c	FUNCTION_4	FOR_2	FOR_3
0x40004a1	          0x4839fe	                            cmp rsi, rdi	       483	blowfish.c	FUNCTION_4	FOR_2
0x40004a4	            0x7409	                            je 0x40004af	       483	blowfish.c	FUNCTION_4	FOR_2
0x40004a6	    0x488db0000400	                  lea rsi, [rax + 0x400]	       483	blowfish.c	FUNCTION_4	FOR_2
0x40004ad	            0xebe4	                           jmp 0x4000493	       483	blowfish.c	FUNCTION_4	FOR_2
0x40004af	            0x39d1	                            cmp ecx, edx	       486	blowfish.c	FUNCTION_4
0x40004b1	           0xf94c0	                                 sete al	       486	blowfish.c	FUNCTION_4
0x40004b4	           0xfb6c0	                           movzx eax, al	       486	blowfish.c	FUNCTION_4
0x40004b7	              0xc3	                                     ret	       487	blowfish.c	FUNCTION_4
crypt_blowfish_init	FOR,0:ELSE,0:WHILE,0:functions,0:DO,0:CALL,4:SWITCH,0:IF,1	66
0x40009e2	            0x4157	                                push r15	       654	blowfish.c	FUNCTION_9
0x40009e4	            0x4156	                                push r14	       654	blowfish.c	FUNCTION_9
0x40009e6	            0x4155	                                push r13	       654	blowfish.c	FUNCTION_9
0x40009e8	            0x4154	                                push r12	       654	blowfish.c	FUNCTION_9
0x40009ea	              0x55	                                push rbp	       654	blowfish.c	FUNCTION_9
0x40009eb	              0x53	                                push rbx	       654	blowfish.c	FUNCTION_9
0x40009ec	        0x4883ec18	                           sub rsp, 0x18	       654	blowfish.c	FUNCTION_9
0x40009f0	          0x4989fd	                            mov r13, rdi	       654	blowfish.c	FUNCTION_9
0x40009f3	      0x4889742408	                mov qword [rsp + 8], rsi	       654	blowfish.c	FUNCTION_9
0x40009f8	          0x4989d6	                            mov r14, rdx	       654	blowfish.c	FUNCTION_9
0x40009fb	          0x4189cf	                           mov r15d, ecx	       654	blowfish.c	FUNCTION_9
0x40009fe	          0x4d89c4	                             mov r12, r8	       654	blowfish.c	FUNCTION_9
0x4000a01	          0x4489cd	                            mov ebp, r9d	       654	blowfish.c	FUNCTION_9
0x4000a04	      0xbf94100000	                         mov edi, 0x1094	       655	blowfish.c	FUNCTION_9	CALL_1
0x4000a09	      0xe800000000	                          call 0x4000a0e	       655	blowfish.c	FUNCTION_9	CALL_1
0x4000a0e	          0x4889c3	                            mov rbx, rax	       655	blowfish.c	FUNCTION_9	CALL_1
0x4000a11	        0x49894508	                mov qword [r13 + 8], rax	       657	blowfish.c	FUNCTION_9
0x4000a15	      0x41837d0001	                      cmp dword [r13], 1	       661	blowfish.c	FUNCTION_9
0x4000a1a	      0xba08000000	                              mov edx, 8	       661	blowfish.c	FUNCTION_9
0x4000a1f	      0xb840000000	                           mov eax, 0x40	       661	blowfish.c	FUNCTION_9
0x4000a24	           0xf45c2	                         cmovne eax, edx	       661	blowfish.c	FUNCTION_9
0x4000a27	    0x898390100000	          mov dword [rbx + 0x1090], eax 	       661	blowfish.c	FUNCTION_9
0x4000a2d	      0xe800000000	                          call 0x4000a32	       663	blowfish.c	FUNCTION_9	IF_1	CALL_2
0x4000a32	            0x85c0	                           test eax, eax	       663	blowfish.c	FUNCTION_9	IF_1	CALL_2
0x4000a34	     0xf8480000000	                            je 0x4000aba	       663	blowfish.c	FUNCTION_9	IF_1	CALL_2
0x4000a3a	          0x4489f9	                           mov ecx, r15d	       666	blowfish.c	FUNCTION_9	CALL_3
0x4000a3d	          0x4c89f2	                            mov rdx, r14	       666	blowfish.c	FUNCTION_9	CALL_3
0x4000a40	      0x488b742408	                mov rsi, qword [rsp + 8]	       666	blowfish.c	FUNCTION_9	CALL_3
0x4000a45	          0x4889df	                            mov rdi, rbx	       666	blowfish.c	FUNCTION_9	CALL_3
0x4000a48	      0xe8b9faffff	                    call sym.bf_key_init	       666	blowfish.c	FUNCTION_9	CALL_3
0x4000a4d	    0xc7834c100000	            mov dword [rbx + 0x104c], 0 	       576	blowfish.c	FUNCTION_6
0x4000a57	    0xc78348100000	            mov dword [rbx + 0x1048], 0 	       576	blowfish.c	FUNCTION_6
0x4000a61	    0x486393901000	       movsxd rdx, dword [rbx + 0x1090] 	        90	string3.h	FUNCTION_14	CALL_6
0x4000a68	    0x488dbb501000	                 lea rdi, [rbx + 0x1050]	        90	string3.h	FUNCTION_14	CALL_6
0x4000a6f	      0xbe00000000	                              mov esi, 0	        90	string3.h	FUNCTION_14	CALL_6
0x4000a74	      0xe800000000	                          call 0x4000a79	        90	string3.h	FUNCTION_14	CALL_6
0x4000a79	            0x85ed	                           test ebp, ebp	       578	blowfish.c	FUNCTION_6	IF_1
0x4000a7b	            0x7e3d	                           jle 0x4000aba	       578	blowfish.c	FUNCTION_6	IF_1
0x4000a7d	    0x8bbb90100000	          mov edi, dword [rbx + 0x1090] 	       580	blowfish.c	FUNCTION_6	IF_1
0x4000a83	            0x39fd	                            cmp ebp, edi	       580	blowfish.c	FUNCTION_6	IF_1
0x4000a85	          0x4189f8	                            mov r8d, edi	       580	blowfish.c	FUNCTION_6	IF_1
0x4000a88	        0x440f4dc5	                         cmovge r8d, ebp	       580	blowfish.c	FUNCTION_6	IF_1
0x4000a8c	          0x4585c0	                           test r8d, r8d	       581	blowfish.c	FUNCTION_6	IF_1	FOR_1
0x4000a8f	            0x7e29	                           jle 0x4000aba	       581	blowfish.c	FUNCTION_6	IF_1	FOR_1
0x4000a91	      0xb900000000	                              mov ecx, 0	       581	blowfish.c	FUNCTION_6	IF_1	FOR_1
0x4000a96	            0x89c8	                            mov eax, ecx	       582	blowfish.c	FUNCTION_6	IF_1	FOR_1
0x4000a98	              0x99	                                     cdq	       582	blowfish.c	FUNCTION_6	IF_1	FOR_1
0x4000a99	            0xf7ff	                                idiv edi	       582	blowfish.c	FUNCTION_6	IF_1	FOR_1
0x4000a9b	          0x4863f2	                         movsxd rsi, edx	       582	blowfish.c	FUNCTION_6	IF_1	FOR_1
0x4000a9e	            0x89c8	                            mov eax, ecx	       582	blowfish.c	FUNCTION_6	IF_1	FOR_1
0x4000aa0	              0x99	                                     cdq	       582	blowfish.c	FUNCTION_6	IF_1	FOR_1
0x4000aa1	            0xf7fd	                                idiv ebp	       582	blowfish.c	FUNCTION_6	IF_1	FOR_1
0x4000aa3	          0x4863d2	                         movsxd rdx, edx	       582	blowfish.c	FUNCTION_6	IF_1	FOR_1
0x4000aa6	      0x410fb60414	             movzx eax, byte [r12 + rdx]	       582	blowfish.c	FUNCTION_6	IF_1	FOR_1
0x4000aab	    0x308433501000	       xor byte [rbx + rsi + 0x1050], al	       582	blowfish.c	FUNCTION_6	IF_1	FOR_1
0x4000ab2	          0x83c101	                              add ecx, 1	       581	blowfish.c	FUNCTION_6	IF_1	FOR_1
0x4000ab5	          0x4139c8	                            cmp r8d, ecx	       581	blowfish.c	FUNCTION_6	IF_1	FOR_1
0x4000ab8	            0x75dc	                           jne 0x4000a96	       581	blowfish.c	FUNCTION_6	IF_1	FOR_1
0x4000aba	        0x4883c418	                           add rsp, 0x18	       668	blowfish.c	FUNCTION_9
0x4000abe	              0x5b	                                 pop rbx	       668	blowfish.c	FUNCTION_9
0x4000abf	              0x5d	                                 pop rbp	       668	blowfish.c	FUNCTION_9
0x4000ac0	            0x415c	                                 pop r12	       668	blowfish.c	FUNCTION_9
0x4000ac2	            0x415d	                                 pop r13	       668	blowfish.c	FUNCTION_9
0x4000ac4	            0x415e	                                 pop r14	       668	blowfish.c	FUNCTION_9
0x4000ac6	            0x415f	                                 pop r15	       668	blowfish.c	FUNCTION_9
0x4000ac8	              0xc3	                                     ret	       668	blowfish.c	FUNCTION_9
blowfish_self_test	FOR,0:ELSE,0:WHILE,0:functions,0:DO,0:CALL,6:SWITCH,0:IF,2	27
0x4000986	              0x53	                                push rbx	       676	blowfish.c	FUNCTION_10
0x4000987	      0xe800000000	                          call 0x400098c	       677	blowfish.c	FUNCTION_10	IF_1	CALL_1
0x400098c	            0x85c0	                           test eax, eax	       677	blowfish.c	FUNCTION_10	IF_1	CALL_1
0x400098e	            0x7520	                           jne 0x40009b0	       677	blowfish.c	FUNCTION_10	IF_1	CALL_1
0x4000990	            0x89c3	                            mov ebx, eax	       677	blowfish.c	FUNCTION_10	IF_1	CALL_1
0x4000992	      0xba05000000	                              mov edx, 5	       679	blowfish.c	FUNCTION_10	IF_1	CALL_3
0x4000997	      0xbe00000000	                              mov esi, 0	       679	blowfish.c	FUNCTION_10	IF_1	CALL_3
0x400099c	      0xbf00000000	                              mov edi, 0	       679	blowfish.c	FUNCTION_10	IF_1	CALL_3
0x40009a1	      0xe800000000	                          call 0x40009a6	       679	blowfish.c	FUNCTION_10	IF_1	CALL_3
0x40009a6	          0x4889c7	                            mov rdi, rax	       679	blowfish.c	FUNCTION_10	IF_1	CALL_3
0x40009a9	      0xe800000000	                          call 0x40009ae	       679	blowfish.c	FUNCTION_10	IF_1	CALL_3
0x40009ae	            0xeb2e	                           jmp 0x40009de	       680	blowfish.c	FUNCTION_10	IF_1
0x40009b0	      0xe833fdffff	                   call sym.bf_self_test	       682	blowfish.c	FUNCTION_10	IF_2	CALL_4
0x40009b5	            0x89c3	                            mov ebx, eax	       682	blowfish.c	FUNCTION_10	IF_2	CALL_4
0x40009b7	            0x85c0	                           test eax, eax	       682	blowfish.c	FUNCTION_10	IF_2	CALL_4
0x40009b9	            0x751e	                           jne 0x40009d9	       682	blowfish.c	FUNCTION_10	IF_2	CALL_4
0x40009bb	      0xba05000000	                              mov edx, 5	       684	blowfish.c	FUNCTION_10	IF_2	CALL_6
0x40009c0	      0xbe00000000	                              mov esi, 0	       684	blowfish.c	FUNCTION_10	IF_2	CALL_6
0x40009c5	      0xbf00000000	                              mov edi, 0	       684	blowfish.c	FUNCTION_10	IF_2	CALL_6
0x40009ca	      0xe800000000	                          call 0x40009cf	       684	blowfish.c	FUNCTION_10	IF_2	CALL_6
0x40009cf	          0x4889c7	                            mov rdi, rax	       684	blowfish.c	FUNCTION_10	IF_2	CALL_6
0x40009d2	      0xe800000000	                          call 0x40009d7	       684	blowfish.c	FUNCTION_10	IF_2	CALL_6
0x40009d7	            0xeb05	                           jmp 0x40009de	       685	blowfish.c	FUNCTION_10	IF_2
0x40009d9	      0xbb01000000	                              mov ebx, 1	       687	blowfish.c	FUNCTION_10
0x40009de	            0x89d8	                            mov eax, ebx	       688	blowfish.c	FUNCTION_10
0x40009e0	              0x5b	                                 pop rbx	       688	blowfish.c	FUNCTION_10
0x40009e1	              0xc3	                                     ret	       688	blowfish.c	FUNCTION_10
crypt_blowfish_encode	FOR,1:ELSE,0:WHILE,0:functions,0:DO,0:CALL,2:SWITCH,0:IF,0	52
0x4000812	            0x4157	                                push r15	       610	blowfish.c	FUNCTION_7
0x4000814	            0x4156	                                push r14	       610	blowfish.c	FUNCTION_7
0x4000816	            0x4155	                                push r13	       610	blowfish.c	FUNCTION_7
0x4000818	            0x4154	                                push r12	       610	blowfish.c	FUNCTION_7
0x400081a	              0x55	                                push rbp	       610	blowfish.c	FUNCTION_7
0x400081b	              0x53	                                push rbx	       610	blowfish.c	FUNCTION_7
0x400081c	        0x4883ec08	                              sub rsp, 8	       610	blowfish.c	FUNCTION_7
0x4000820	        0x488b5f08	                mov rbx, qword [rdi + 8]	       611	blowfish.c	FUNCTION_7
0x4000824	          0x4885d2	                           test rdx, rdx	       615	blowfish.c	FUNCTION_7	FOR_1
0x4000827	     0xf8495000000	                            je 0x40008c2	       615	blowfish.c	FUNCTION_7	FOR_1
0x400082d	          0x4989cf	                            mov r15, rcx	       615	blowfish.c	FUNCTION_7	FOR_1
0x4000830	          0x4989d5	                            mov r13, rdx	       615	blowfish.c	FUNCTION_7	FOR_1
0x4000833	          0x4989f6	                            mov r14, rsi	       615	blowfish.c	FUNCTION_7	FOR_1
0x4000836	      0xbd00000000	                              mov ebp, 0	       615	blowfish.c	FUNCTION_7	FOR_1
0x400083b	      0x450fb6242e	            movzx r12d, byte [r14 + rbp]	       617	blowfish.c	FUNCTION_7	FOR_1
0x4000840	    0x8b8348100000	          mov eax, dword [rbx + 0x1048] 	       618	blowfish.c	FUNCTION_7	FOR_1	CALL_1
0x4000846	            0xa807	                              test al, 7	       618	blowfish.c	FUNCTION_7	FOR_1	CALL_1
0x4000848	            0x7512	                           jne 0x400085c	       618	blowfish.c	FUNCTION_7	FOR_1	CALL_1
0x400084a	            0x4898	                                    cdqe	       618	blowfish.c	FUNCTION_7	FOR_1	CALL_1
0x400084c	    0x488db4035010	           lea rsi, [rbx + rax + 0x1050]	       618	blowfish.c	FUNCTION_7	FOR_1	CALL_1
0x4000854	          0x4889df	                            mov rdi, rbx	       618	blowfish.c	FUNCTION_7	FOR_1	CALL_1
0x4000857	      0xe85cfcffff	                    call sym.bf_e_cblock	       618	blowfish.c	FUNCTION_7	FOR_1	CALL_1
0x400085c	    0x8b8348100000	          mov eax, dword [rbx + 0x1048] 	       618	blowfish.c	FUNCTION_7	FOR_1	CALL_1
0x4000862	          0x4863d0	                         movsxd rdx, eax	       618	blowfish.c	FUNCTION_7	FOR_1	CALL_1
0x4000865	     0xfb6b4135010	   movzx esi, byte [rbx + rdx + 0x1050] 	       618	blowfish.c	FUNCTION_7	FOR_1	CALL_1
0x400086d	          0x83c001	                              add eax, 1	       618	blowfish.c	FUNCTION_7	FOR_1	CALL_1
0x4000870	    0x898348100000	          mov dword [rbx + 0x1048], eax 	       618	blowfish.c	FUNCTION_7	FOR_1	CALL_1
0x4000876	    0x8b9390100000	          mov edx, dword [rbx + 0x1090] 	       618	blowfish.c	FUNCTION_7	FOR_1	CALL_1
0x400087c	            0x39d0	                            cmp eax, edx	       618	blowfish.c	FUNCTION_7	FOR_1	CALL_1
0x400087e	            0x750a	                           jne 0x400088a	       618	blowfish.c	FUNCTION_7	FOR_1	CALL_1
0x4000880	    0xc78348100000	            mov dword [rbx + 0x1048], 0 	       618	blowfish.c	FUNCTION_7	FOR_1	CALL_1
0x400088a	    0x8b834c100000	          mov eax, dword [rbx + 0x104c] 	       619	blowfish.c	FUNCTION_7	FOR_1	CALL_2
0x4000890	          0x4863c8	                         movsxd rcx, eax	       619	blowfish.c	FUNCTION_7	FOR_1	CALL_2
0x4000893	    0x4430a40b5010	     xor byte [rbx + rcx + 0x1050], r12b	       619	blowfish.c	FUNCTION_7	FOR_1	CALL_2
0x400089b	          0x83c001	                              add eax, 1	       619	blowfish.c	FUNCTION_7	FOR_1	CALL_2
0x400089e	            0x39c2	                            cmp edx, eax	       619	blowfish.c	FUNCTION_7	FOR_1	CALL_2
0x40008a0	      0xbf00000000	                              mov edi, 0	       619	blowfish.c	FUNCTION_7	FOR_1	CALL_2
0x40008a5	           0xf44c7	                          cmove eax, edi	       619	blowfish.c	FUNCTION_7	FOR_1	CALL_2
0x40008a8	    0x89834c100000	          mov dword [rbx + 0x104c], eax 	       619	blowfish.c	FUNCTION_7	FOR_1	CALL_2
0x40008ae	          0x4131f4	                           xor r12d, esi	       620	blowfish.c	FUNCTION_7	FOR_1
0x40008b1	        0x4588242f	              mov byte [r15 + rbp], r12b	       620	blowfish.c	FUNCTION_7	FOR_1
0x40008b5	        0x4883c501	                              add rbp, 1	       615	blowfish.c	FUNCTION_7	FOR_1
0x40008b9	          0x4939ed	                            cmp r13, rbp	       615	blowfish.c	FUNCTION_7	FOR_1
0x40008bc	     0xf8579ffffff	                           jne 0x400083b	       615	blowfish.c	FUNCTION_7	FOR_1
0x40008c2	        0x4883c408	                              add rsp, 8	       622	blowfish.c	FUNCTION_7
0x40008c6	              0x5b	                                 pop rbx	       622	blowfish.c	FUNCTION_7
0x40008c7	              0x5d	                                 pop rbp	       622	blowfish.c	FUNCTION_7
0x40008c8	            0x415c	                                 pop r12	       622	blowfish.c	FUNCTION_7
0x40008ca	            0x415d	                                 pop r13	       622	blowfish.c	FUNCTION_7
0x40008cc	            0x415e	                                 pop r14	       622	blowfish.c	FUNCTION_7
0x40008ce	            0x415f	                                 pop r15	       622	blowfish.c	FUNCTION_7
0x40008d0	              0xc3	                                     ret	       622	blowfish.c	FUNCTION_7
bf_e_cblock	FOR,0:ELSE,0:WHILE,0:functions,0:DO,0:CALL,7:SWITCH,0:IF,0	20
0x40004b8	              0x53	                                push rbx	       390	blowfish.c	FUNCTION_2
0x40004b9	        0x4883ec10	                           sub rsp, 0x10	       390	blowfish.c	FUNCTION_2
0x40004bd	          0x4889f3	                            mov rbx, rsi	       390	blowfish.c	FUNCTION_2
0x40004c0	    0x64488b042528	                mov rax, qword fs:[0x28]	       390	blowfish.c	FUNCTION_2
0x40004c9	      0x4889442408	                mov qword [rsp + 8], rax	       390	blowfish.c	FUNCTION_2
0x40004ce	            0x31c0	                            xor eax, eax	       390	blowfish.c	FUNCTION_2
0x40004d0	          0x488b06	                    mov rax, qword [rsi]	       390	blowfish.c	FUNCTION_2
0x40004d3	        0x48890424	                    mov qword [rsp], rax	       390	blowfish.c	FUNCTION_2
0x40004d7	      0x488d542404	                      lea rdx, [rsp + 4]	       396	blowfish.c	FUNCTION_2	CALL_4
0x40004dc	          0x4889e6	                            mov rsi, rsp	       396	blowfish.c	FUNCTION_2	CALL_4
0x40004df	      0xe85cfbffff	                     call sym.bf_e_block	       396	blowfish.c	FUNCTION_2	CALL_4
0x40004e4	        0x488b0424	                    mov rax, qword [rsp]	        53	string3.h	FUNCTION_11	CALL_3
0x40004e8	          0x488903	                    mov qword [rbx], rax	        53	string3.h	FUNCTION_11	CALL_3
0x40004eb	      0x488b442408	                mov rax, qword [rsp + 8]	       400	blowfish.c	FUNCTION_2
0x40004f0	    0x644833042528	                xor rax, qword fs:[0x28]	       400	blowfish.c	FUNCTION_2
0x40004f9	            0x7405	                            je 0x4000500	       400	blowfish.c	FUNCTION_2
0x40004fb	      0xe800000000	                          call 0x4000500	       400	blowfish.c	FUNCTION_2
0x4000500	        0x4883c410	                           add rsp, 0x10	       400	blowfish.c	FUNCTION_2
0x4000504	              0x5b	                                 pop rbx	       400	blowfish.c	FUNCTION_2
0x4000505	              0xc3	                                     ret	       400	blowfish.c	FUNCTION_2
