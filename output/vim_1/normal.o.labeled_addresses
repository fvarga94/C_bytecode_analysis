nv_colon	CALL,10:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,4:IF,9	88
0x4002cc7	              0x55	                                push rbp	      5364	normal.c	FUNCTION_58
0x4002cc8	              0x53	                                push rbx	      5364	normal.c	FUNCTION_58
0x4002cc9	        0x4883ec08	                              sub rsp, 8	      5364	normal.c	FUNCTION_58
0x4002ccd	          0x4889fb	                            mov rbx, rdi	      5364	normal.c	FUNCTION_58
0x4002cd0	    0x833d00000000	               cmp dword [0x04002cd7], 0	      5368	normal.c	FUNCTION_58	IF_1
0x4002cd7	            0x740a	                            je 0x4002ce3	      5368	normal.c	FUNCTION_58	IF_1
0x4002cd9	      0xe880eeffff	                    call sym.nv_operator	      5369	normal.c	FUNCTION_58	CALL_1
0x4002cde	      0xe931010000	                           jmp 0x4002e14	      5369	normal.c	FUNCTION_58	CALL_1
0x4002ce3	          0x488b07	                    mov rax, qword [rdi]	      5372	normal.c	FUNCTION_58	ELSE_1	IF_2
0x4002ce6	          0x833800	                      cmp dword [rax], 0	      5372	normal.c	FUNCTION_58	ELSE_1	IF_2
0x4002ce9	            0x7413	                            je 0x4002cfe	      5372	normal.c	FUNCTION_58	ELSE_1	IF_2
0x4002ceb	    0xc74008000000	                  mov dword [rax + 8], 0	      5375	normal.c	FUNCTION_58	ELSE_1	IF_2
0x4002cf2	          0x488b07	                    mov rax, qword [rdi]	      5376	normal.c	FUNCTION_58	ELSE_1	IF_2
0x4002cf5	    0xc74014000000	               mov dword [rax + 0x14], 0	      5376	normal.c	FUNCTION_58	ELSE_1	IF_2
0x4002cfc	            0xeb33	                           jmp 0x4002d31	      5376	normal.c	FUNCTION_58	ELSE_1	IF_2
0x4002cfe	      0x48837f2800	               cmp qword [rdi + 0x28], 0	      5378	normal.c	FUNCTION_58	ELSE_1	ELSE_2	IF_3
0x4002d03	     0xf84f2000000	                            je 0x4002dfb	      5378	normal.c	FUNCTION_58	ELSE_1	ELSE_2	IF_3
0x4002d09	      0xbf2e000000	                           mov edi, 0x2e	      5381	normal.c	FUNCTION_58	ELSE_1	ELSE_2	IF_3	CALL_2
0x4002d0e	      0xe800000000	                          call 0x4002d13	      5381	normal.c	FUNCTION_58	ELSE_1	ELSE_2	IF_3	CALL_2
0x4002d13	      0x48837b2801	               cmp qword [rbx + 0x28], 1	      5382	normal.c	FUNCTION_58	ELSE_1	ELSE_2	IF_3	IF_4
0x4002d18	            0x7e17	                           jle 0x4002d31	      5382	normal.c	FUNCTION_58	ELSE_1	ELSE_2	IF_3	IF_4
0x4002d1a	      0xbf00000000	                              mov edi, 0	      5384	normal.c	FUNCTION_58	ELSE_1	ELSE_2	IF_3	IF_4	CALL_3
0x4002d1f	      0xe800000000	                          call 0x4002d24	      5384	normal.c	FUNCTION_58	ELSE_1	ELSE_2	IF_3	IF_4	CALL_3
0x4002d24	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      5385	normal.c	FUNCTION_58	ELSE_1	ELSE_2	IF_3	IF_4	CALL_4
0x4002d28	        0x488d78ff	                      lea rdi, [rax - 1]	      5385	normal.c	FUNCTION_58	ELSE_1	ELSE_2	IF_3	IF_4	CALL_4
0x4002d2c	      0xe800000000	                          call 0x4002d31	      5385	normal.c	FUNCTION_58	ELSE_1	ELSE_2	IF_3	IF_4	CALL_4
0x4002d31	    0x833d00000000	               cmp dword [0x04002d38], 0	      5390	normal.c	FUNCTION_58	ELSE_1	IF_5
0x4002d38	            0x7405	                            je 0x4002d3f	      5390	normal.c	FUNCTION_58	ELSE_1	IF_5
0x4002d3a	      0xe800000000	                          call 0x4002d3f	      5391	normal.c	FUNCTION_58	ELSE_1	CALL_5
0x4002d3f	    0x8b2d00000000	            mov ebp, dword [0x04002d45] 	      5393	normal.c	FUNCTION_58	ELSE_1
0x4002d45	          0x488b03	                    mov rax, qword [rbx]	      5397	normal.c	FUNCTION_58	ELSE_1
0x4002d48	            0x8b08	                    mov ecx, dword [rax]	      5397	normal.c	FUNCTION_58	ELSE_1
0x4002d4a	            0x85c9	                           test ecx, ecx	      5396	normal.c	FUNCTION_58	ELSE_1	CALL_6
0x4002d4c	      0xb820000000	                           mov eax, 0x20	      5396	normal.c	FUNCTION_58	ELSE_1	CALL_6
0x4002d51	           0xf45c8	                         cmovne ecx, eax	      5396	normal.c	FUNCTION_58	ELSE_1	CALL_6
0x4002d54	      0xba00000000	                              mov edx, 0	      5396	normal.c	FUNCTION_58	ELSE_1	CALL_6
0x4002d59	      0xbe00000000	                              mov esi, 0	      5396	normal.c	FUNCTION_58	ELSE_1	CALL_6
0x4002d5e	      0xbf00000000	                              mov edi, 0	      5396	normal.c	FUNCTION_58	ELSE_1	CALL_6
0x4002d63	      0xe800000000	                          call 0x4002d68	      5396	normal.c	FUNCTION_58	ELSE_1	CALL_6
0x4002d68	    0x8b1500000000	            mov edx, dword [0x04002d6e] 	      5400	normal.c	FUNCTION_58	ELSE_1	IF_6
0x4002d6e	            0x39ea	                            cmp edx, ebp	      5400	normal.c	FUNCTION_58	ELSE_1	IF_6
0x4002d70	            0x7410	                            je 0x4002d82	      5400	normal.c	FUNCTION_58	ELSE_1	IF_6
0x4002d72	          0x83fa01	                              cmp edx, 1	      5403	normal.c	FUNCTION_58	ELSE_1	IF_6	IF_7
0x4002d75	            0x19d2	                            sbb edx, edx	      5403	normal.c	FUNCTION_58	ELSE_1	IF_6	IF_7
0x4002d77	            0xf7d2	                                 not edx	      5403	normal.c	FUNCTION_58	ELSE_1	IF_6	IF_7
0x4002d79	          0x83e269	                           and edx, 0x69	      5403	normal.c	FUNCTION_58	ELSE_1	IF_6	IF_7
0x4002d7c	    0x891500000000	            mov dword [0x04002d82], edx 	      5403	normal.c	FUNCTION_58	ELSE_1	IF_6	IF_7
0x4002d82	            0x85c0	                           test eax, eax	      5408	normal.c	FUNCTION_58	ELSE_1	IF_8
0x4002d84	            0x7520	                           jne 0x4002da6	      5408	normal.c	FUNCTION_58	ELSE_1	IF_8
0x4002d86	          0x488b03	                    mov rax, qword [rbx]	      5410	normal.c	FUNCTION_58	ELSE_1	CALL_7
0x4002d89	    0xc70000000000	                      mov dword [rax], 0	      3676	normal.c	FUNCTION_24
0x4002d8f	    0xc74004000000	                  mov dword [rax + 4], 0	      3677	normal.c	FUNCTION_24
0x4002d96	    0xc7400c000000	                mov dword [rax + 0xc], 0	      3678	normal.c	FUNCTION_24
0x4002d9d	    0xc74010000000	               mov dword [rax + 0x10], 0	      3679	normal.c	FUNCTION_24
0x4002da4	            0xeb6e	                           jmp 0x4002e14	      3679	normal.c	FUNCTION_24
0x4002da6	          0x488b03	                    mov rax, qword [rbx]	      5411	normal.c	FUNCTION_58	ELSE_1	ELSE_4	IF_9
0x4002da9	          0x833800	                      cmp dword [rax], 0	      5411	normal.c	FUNCTION_58	ELSE_1	ELSE_4	IF_9
0x4002dac	            0x7466	                            je 0x4002e14	      5411	normal.c	FUNCTION_58	ELSE_1	ELSE_4	IF_9
0x4002dae	        0x488b7820	            mov rdi, qword [rax + 0x20] 	      5412	normal.c	FUNCTION_58	ELSE_1	ELSE_4	IF_9
0x4002db2	    0x488b15000000	            mov rdx, qword [0x04002db9] 	      5412	normal.c	FUNCTION_58	ELSE_1	ELSE_4	IF_9
0x4002db9	          0x483b3a	                    cmp rdi, qword [rdx]	      5412	normal.c	FUNCTION_58	ELSE_1	ELSE_4	IF_9
0x4002dbc	            0x7f33	                            jg 0x4002df1	      5412	normal.c	FUNCTION_58	ELSE_1	ELSE_4	IF_9
0x4002dbe	          0x8b6828	            mov ebp, dword [rax + 0x28] 	      5413	normal.c	FUNCTION_58	ELSE_1	ELSE_4	IF_9
0x4002dc1	      0xe800000000	                          call 0x4002dc6	      5414	normal.c	FUNCTION_58	ELSE_1	ELSE_4	IF_9	CALL_9
0x4002dc6	          0x4889c7	                            mov rdi, rax	      5414	normal.c	FUNCTION_58	ELSE_1	ELSE_4	IF_9	CALL_9
0x4002dc9	      0xb800000000	                              mov eax, 0	      5414	normal.c	FUNCTION_58	ELSE_1	ELSE_4	IF_9	CALL_9
0x4002dce	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      5414	normal.c	FUNCTION_58	ELSE_1	ELSE_4	IF_9	CALL_9
0x4002dd5	            0xf2ae	              repne scasb al, byte [rdi]	      5414	normal.c	FUNCTION_58	ELSE_1	ELSE_4	IF_9	CALL_9
0x4002dd7	          0x4889ce	                            mov rsi, rcx	      5414	normal.c	FUNCTION_58	ELSE_1	ELSE_4	IF_9	CALL_9
0x4002dda	          0x48f7d6	                                 not rsi	      5414	normal.c	FUNCTION_58	ELSE_1	ELSE_4	IF_9	CALL_9
0x4002ddd	          0x4889f1	                            mov rcx, rsi	      5414	normal.c	FUNCTION_58	ELSE_1	ELSE_4	IF_9	CALL_9
0x4002de0	        0x4883e901	                              sub rcx, 1	      5414	normal.c	FUNCTION_58	ELSE_1	ELSE_4	IF_9	CALL_9
0x4002de4	            0x39cd	                            cmp ebp, ecx	      5413	normal.c	FUNCTION_58	ELSE_1	ELSE_4	IF_9
0x4002de6	            0x7f09	                            jg 0x4002df1	      5413	normal.c	FUNCTION_58	ELSE_1	ELSE_4	IF_9
0x4002de8	    0x833d00000000	               cmp dword [0x04002def], 0	      5415	normal.c	FUNCTION_58	ELSE_1	ELSE_4	IF_9
0x4002def	            0x7423	                            je 0x4002e14	      5415	normal.c	FUNCTION_58	ELSE_1	ELSE_4	IF_9
0x4002df1	          0x488b3b	                    mov rdi, qword [rbx]	      5419	normal.c	FUNCTION_58	ELSE_1	ELSE_4	IF_9
0x4002df4	      0xe83fd4ffff	                    call sym.clearopbeep	      5419	normal.c	FUNCTION_58	ELSE_1	ELSE_4	IF_9
0x4002df9	            0xeb19	                           jmp 0x4002e14	      5421	normal.c	FUNCTION_58
0x4002dfb	    0x8b0d00000000	            mov ecx, dword [0x04002e01] 	      5390	normal.c	FUNCTION_58	ELSE_1	IF_5
0x4002e01	    0x8b2d00000000	            mov ebp, dword [0x04002e07] 	      5393	normal.c	FUNCTION_58	ELSE_1
0x4002e07	            0x85c9	                           test ecx, ecx	      5390	normal.c	FUNCTION_58	ELSE_1	IF_5
0x4002e09	     0xf8445ffffff	                            je 0x4002d54	      5390	normal.c	FUNCTION_58	ELSE_1	IF_5
0x4002e0f	      0xe926ffffff	                           jmp 0x4002d3a	      5390	normal.c	FUNCTION_58	ELSE_1	IF_5
0x4002e14	        0x4883c408	                              add rsp, 8	      5421	normal.c	FUNCTION_58
0x4002e18	              0x5b	                                 pop rbx	      5421	normal.c	FUNCTION_58
0x4002e19	              0x5d	                                 pop rbp	      5421	normal.c	FUNCTION_58
0x4002e1a	              0xc3	                                     ret	      5421	normal.c	FUNCTION_58
nv_cursorhold	CALL,1:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,0:IF,0	12
0x40001d1	              0x53	                                push rbx	      9581	normal.c	FUNCTION_139
0x40001d2	          0x4889fb	                            mov rbx, rdi	      9581	normal.c	FUNCTION_139
0x40001d5	    0x4c8b05000000	              mov r8, qword [0x040001dc]	      9582	normal.c	FUNCTION_139	CALL_1
0x40001dc	      0xb900000000	                              mov ecx, 0	      9582	normal.c	FUNCTION_139	CALL_1
0x40001e1	      0xba00000000	                              mov edx, 0	      9582	normal.c	FUNCTION_139	CALL_1
0x40001e6	      0xbe00000000	                              mov esi, 0	      9582	normal.c	FUNCTION_139	CALL_1
0x40001eb	      0xbf1c000000	                           mov edi, 0x1c	      9582	normal.c	FUNCTION_139	CALL_1
0x40001f0	      0xe800000000	                          call 0x40001f5	      9582	normal.c	FUNCTION_139	CALL_1
0x40001f5	    0xc70500000000	               mov dword [0x040001ff], 1	      9583	normal.c	FUNCTION_139
0x40001ff	        0x834b3c01	                or dword [rbx + 0x3c], 1	      9584	normal.c	FUNCTION_139
0x4000203	              0x5b	                                 pop rbx	      9585	normal.c	FUNCTION_139
0x4000204	              0xc3	                                     ret	      9585	normal.c	FUNCTION_139
init_normal_cmds	CALL,1:SWITCH,0:DO,0:FOR,2:functions,0:WHILE,0:ELSE,0:IF,1	30
0x400383b	      0xb800000000	                              mov eax, 0	       466	normal.c	FUNCTION_2
0x4003840	    0x668984000000	                mov word [rax + rax], ax	       471	normal.c	FUNCTION_2	FOR_1
0x4003848	        0x4883c001	                              add rax, 1	       471	normal.c	FUNCTION_2	FOR_1
0x400384c	    0x483dc2000000	                           cmp rax, 0xc2	       470	normal.c	FUNCTION_2	FOR_1
0x4003852	            0x75ec	                           jne 0x4003840	       470	normal.c	FUNCTION_2	FOR_1
0x4003854	        0x4883ec08	                              sub rsp, 8	       466	normal.c	FUNCTION_2
0x4003858	      0xb900000000	                              mov ecx, 0	       474	normal.c	FUNCTION_2	CALL_1
0x400385d	      0xba02000000	                              mov edx, 2	       474	normal.c	FUNCTION_2	CALL_1
0x4003862	      0xbec2000000	                           mov esi, 0xc2	       474	normal.c	FUNCTION_2	CALL_1
0x4003867	      0xbf00000000	                              mov edi, 0	       474	normal.c	FUNCTION_2	CALL_1
0x400386c	      0xe800000000	                          call 0x4003871	       474	normal.c	FUNCTION_2	CALL_1
0x4003871	    0x480fbf050000	           movsx rax, word [0x04003879] 	       478	normal.c	FUNCTION_2	FOR_2	IF_1
0x4003879	        0x488d0440	                  lea rax, [rax + rax*2]	       478	normal.c	FUNCTION_2	FOR_2	IF_1
0x400387d	    0x833cc5000000	                    cmp dword [rax*8], 0	       478	normal.c	FUNCTION_2	FOR_2	IF_1
0x4003885	            0x752a	                           jne 0x40038b1	       478	normal.c	FUNCTION_2	FOR_2	IF_1
0x4003887	      0xb801000000	                              mov eax, 1	       478	normal.c	FUNCTION_2	FOR_2	IF_1
0x400388c	          0x4863d0	                         movsxd rdx, eax	       478	normal.c	FUNCTION_2	FOR_2	IF_1
0x400388f	    0x480fbf941200	             movsx rdx, word [rdx + rdx]	       478	normal.c	FUNCTION_2	FOR_2	IF_1
0x4003898	        0x488d1452	                  lea rdx, [rdx + rdx*2]	       478	normal.c	FUNCTION_2	FOR_2	IF_1
0x400389c	    0x3b04d5000000	                  cmp eax, dword [rdx*8]	       478	normal.c	FUNCTION_2	FOR_2	IF_1
0x40038a3	            0x7511	                           jne 0x40038b6	       478	normal.c	FUNCTION_2	FOR_2	IF_1
0x40038a5	          0x83c001	                              add eax, 1	       477	normal.c	FUNCTION_2	FOR_2
0x40038a8	      0x3dc1000000	                           cmp eax, 0xc1	       477	normal.c	FUNCTION_2	FOR_2
0x40038ad	            0x7edd	                           jle 0x400388c	       477	normal.c	FUNCTION_2	FOR_2
0x40038af	            0xeb05	                           jmp 0x40038b6	       477	normal.c	FUNCTION_2	FOR_2
0x40038b1	      0xb800000000	                              mov eax, 0	       477	normal.c	FUNCTION_2	FOR_2
0x40038b6	          0x83e801	                              sub eax, 1	       480	normal.c	FUNCTION_2
0x40038b9	    0x890500000000	            mov dword [0x040038bf], eax 	       480	normal.c	FUNCTION_2
0x40038bf	        0x4883c408	                              add rsp, 8	       481	normal.c	FUNCTION_2
0x40038c3	              0xc3	                                     ret	       481	normal.c	FUNCTION_2
checkclearopq	CALL,1:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,0:IF,1	10
0x4000261	        0x4883ec08	                              sub rsp, 8	      3666	normal.c	FUNCTION_23
0x4000265	          0x833f00	                      cmp dword [rdi], 0	      3667	normal.c	FUNCTION_23	IF_1
0x4000268	            0x750a	                           jne 0x4000274	      3667	normal.c	FUNCTION_23	IF_1
0x400026a	    0x8b0500000000	            mov eax, dword [0x04000270] 	      3667	normal.c	FUNCTION_23	IF_1
0x4000270	            0x85c0	                           test eax, eax	      3667	normal.c	FUNCTION_23	IF_1
0x4000272	            0x740a	                            je 0x400027e	      3667	normal.c	FUNCTION_23	IF_1
0x4000274	      0xe8bfffffff	                    call sym.clearopbeep	      3669	normal.c	FUNCTION_23	CALL_1
0x4000279	      0xb801000000	                              mov eax, 1	      3670	normal.c	FUNCTION_23
0x400027e	        0x4883c408	                              add rsp, 8	      3671	normal.c	FUNCTION_23
0x4000282	              0xc3	                                     ret	      3671	normal.c	FUNCTION_23
n_start_visual_mode	CALL,7:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,0:IF,3	39
0x40022d8	              0x53	                                push rbx	      7797	normal.c	FUNCTION_104
0x40022d9	            0x89fb	                            mov ebx, edi	      7797	normal.c	FUNCTION_104
0x40022db	      0xe800000000	                          call 0x40022e0	      7800	normal.c	FUNCTION_104	CALL_1
0x40022e0	    0x891d00000000	            mov dword [0x040022e6], ebx 	      7803	normal.c	FUNCTION_104
0x40022e6	    0xc70500000000	               mov dword [0x040022f0], 1	      7804	normal.c	FUNCTION_104
0x40022f0	    0xc70500000000	               mov dword [0x040022fa], 1	      7805	normal.c	FUNCTION_104
0x40022fa	          0x83fb16	                           cmp ebx, 0x16	      7810	normal.c	FUNCTION_104	IF_1	CALL_2
0x40022fd	            0x752a	                           jne 0x4002329	      7810	normal.c	FUNCTION_104	IF_1	CALL_2
0x40022ff	    0xf60500000000	               test byte [0x04002306], 5	      7810	normal.c	FUNCTION_104	IF_1	CALL_2
0x4002306	            0x7421	                            je 0x4002329	      7810	normal.c	FUNCTION_104	IF_1	CALL_2
0x4002308	      0xe800000000	                          call 0x400230d	      7810	normal.c	FUNCTION_104	IF_1	CALL_2
0x400230d	          0x83f809	                              cmp eax, 9	      7810	normal.c	FUNCTION_104	IF_1	CALL_2
0x4002310	            0x7517	                           jne 0x4002329	      7810	normal.c	FUNCTION_104	IF_1	CALL_2
0x4002312	      0xe800000000	                          call 0x4002317	      7812	normal.c	FUNCTION_104	IF_1	CALL_3
0x4002317	    0x488b05000000	            mov rax, qword [0x0400231e] 	      7813	normal.c	FUNCTION_104	IF_1	CALL_4
0x400231e	    0x8bb8d8000000	            mov edi, dword [rax + 0xd8] 	      7813	normal.c	FUNCTION_104	IF_1	CALL_4
0x4002324	      0xe800000000	                          call 0x4002329	      7813	normal.c	FUNCTION_104	IF_1	CALL_4
0x4002329	    0x488b05000000	            mov rax, qword [0x04002330] 	      7816	normal.c	FUNCTION_104
0x4002330	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      7816	normal.c	FUNCTION_104
0x4002334	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7816	normal.c	FUNCTION_104
0x4002338	    0x488905000000	            mov qword [0x0400233f], rax 	      7816	normal.c	FUNCTION_104
0x400233f	    0x488915000000	            mov qword [0x04002346], rdx 	      7816	normal.c	FUNCTION_104
0x4002346	      0xe800000000	                          call 0x400234b	      7819	normal.c	FUNCTION_104	CALL_5
0x400234b	      0xe800000000	                          call 0x4002350	      7823	normal.c	FUNCTION_104	CALL_6
0x4002350	      0xe800000000	                          call 0x4002355	      7827	normal.c	FUNCTION_104	CALL_7
0x4002355	    0x833d00000000	               cmp dword [0x0400235c], 0	      7830	normal.c	FUNCTION_104	IF_2
0x400235c	            0x7413	                            je 0x4002371	      7830	normal.c	FUNCTION_104	IF_2
0x400235e	    0x833d00000000	               cmp dword [0x04002365], 0	      7830	normal.c	FUNCTION_104	IF_2
0x4002365	            0x750a	                           jne 0x4002371	      7830	normal.c	FUNCTION_104	IF_2
0x4002367	    0xc70500000000	               mov dword [0x04002371], 1	      7831	normal.c	FUNCTION_104	IF_2
0x4002371	    0xc70500000000	               mov dword [0x0400237b], 0	      7835	normal.c	FUNCTION_104
0x400237b	    0x488b05000000	            mov rax, qword [0x04002382] 	      7840	normal.c	FUNCTION_104	IF_3
0x4002382	    0x83b828010000	          cmp dword [rax + 0x128], 0x13 	      7840	normal.c	FUNCTION_104	IF_3
0x4002389	            0x7f0c	                            jg 0x4002397	      7840	normal.c	FUNCTION_104	IF_3
0x400238b	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      7842	normal.c	FUNCTION_104	IF_3
0x400238f	        0x48895058	             mov qword [rax + 0x58], rdx	      7842	normal.c	FUNCTION_104	IF_3
0x4002393	        0x48895068	             mov qword [rax + 0x68], rdx	      7843	normal.c	FUNCTION_104	IF_3
0x4002397	              0x5b	                                 pop rbx	      7845	normal.c	FUNCTION_104
0x4002398	              0xc3	                                     ret	      7845	normal.c	FUNCTION_104
nv_right	CALL,14:SWITCH,0:DO,0:FOR,1:functions,0:WHILE,0:ELSE,5:IF,13	141
0x40011c5	            0x4155	                                push r13	      5981	normal.c	FUNCTION_70
0x40011c7	            0x4154	                                push r12	      5981	normal.c	FUNCTION_70
0x40011c9	              0x55	                                push rbp	      5981	normal.c	FUNCTION_70
0x40011ca	              0x53	                                push rbx	      5981	normal.c	FUNCTION_70
0x40011cb	        0x4883ec08	                              sub rsp, 8	      5981	normal.c	FUNCTION_70
0x40011cf	          0x4889fd	                            mov rbp, rdi	      5981	normal.c	FUNCTION_70
0x40011d2	    0x8b0500000000	            mov eax, dword [0x040011d8] 	      5985	normal.c	FUNCTION_70	IF_1
0x40011d8	            0xa806	                              test al, 6	      5985	normal.c	FUNCTION_70	IF_1
0x40011da	            0x7418	                            je 0x40011f4	      5985	normal.c	FUNCTION_70	IF_1
0x40011dc	            0xa804	                              test al, 4	      5988	normal.c	FUNCTION_70	IF_1	IF_2
0x40011de	            0x7407	                            je 0x40011e7	      5988	normal.c	FUNCTION_70	IF_1	IF_2
0x40011e0	    0xc74738010000	               mov dword [rdi + 0x38], 1	      5989	normal.c	FUNCTION_70	IF_1	IF_2
0x40011e7	          0x4889ef	                            mov rdi, rbp	      5990	normal.c	FUNCTION_70	IF_1	CALL_1
0x40011ea	      0xe832feffff	                     call sym.nv_wordcmd	      5990	normal.c	FUNCTION_70	IF_1	CALL_1
0x40011ef	      0xe90b020000	                           jmp 0x40013ff	      5991	normal.c	FUNCTION_70	IF_1
0x40011f4	          0x488b07	                    mov rax, qword [rdi]	      5994	normal.c	FUNCTION_70
0x40011f7	    0xc74008000000	                  mov dword [rax + 8], 0	      5994	normal.c	FUNCTION_70
0x40011fe	          0x488b07	                    mov rax, qword [rdi]	      5995	normal.c	FUNCTION_70
0x4001201	    0xc74014000000	               mov dword [rax + 0x14], 0	      5995	normal.c	FUNCTION_70
0x4001208	    0x41bc00000000	                             mov r12d, 0	      5996	normal.c	FUNCTION_70
0x400120e	    0x833d00000000	               cmp dword [0x04001215], 0	      5996	normal.c	FUNCTION_70
0x4001215	            0x7412	                            je 0x4001229	      5996	normal.c	FUNCTION_70
0x4001217	    0x488b05000000	            mov rax, qword [0x0400121e] 	      5996	normal.c	FUNCTION_70
0x400121e	          0x80386f	                    cmp byte [rax], 0x6f	      5996	normal.c	FUNCTION_70
0x4001221	        0x410f95c4	                              setne r12b	      5996	normal.c	FUNCTION_70
0x4001225	        0x450fb6e4	                        movzx r12d, r12b	      5996	normal.c	FUNCTION_70
0x4001229	      0xe800000000	                          call 0x400122e	      6003	normal.c	FUNCTION_70	IF_3	CALL_2
0x400122e	            0x85c0	                           test eax, eax	      6004	normal.c	FUNCTION_70	IF_3
0x4001230	      0xb800000000	                              mov eax, 0	      6004	normal.c	FUNCTION_70	IF_3
0x4001235	        0x440f45e0	                        cmovne r12d, eax	      6004	normal.c	FUNCTION_70	IF_3
0x4001239	        0x488b5d30	            mov rbx, qword [rbp + 0x30] 	      6007	normal.c	FUNCTION_70	FOR_1
0x400123d	          0x4885db	                           test rbx, rbx	      6007	normal.c	FUNCTION_70	FOR_1
0x4001240	     0xf8eb9010000	                           jle 0x40013ff	      6007	normal.c	FUNCTION_70	FOR_1
0x4001246	          0x4585e4	                         test r12d, r12d	      6009	normal.c	FUNCTION_70	FOR_1	IF_4	CALL_3
0x4001249	     0xf859d010000	                           jne 0x40013ec	      6009	normal.c	FUNCTION_70	FOR_1	IF_4	CALL_3
0x400124f	      0xe800000000	                          call 0x4001254	      6009	normal.c	FUNCTION_70	FOR_1	IF_4	CALL_3
0x4001254	            0x85c0	                           test eax, eax	      6009	normal.c	FUNCTION_70	FOR_1	IF_4	CALL_3
0x4001256	     0xf855e010000	                           jne 0x40013ba	      6009	normal.c	FUNCTION_70	FOR_1	IF_4	CALL_3
0x400125c	        0x837d0c20	            cmp dword [rbp + 0xc], 0x20 	      6018	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5
0x4001260	            0x7516	                           jne 0x4001278	      6018	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5
0x4001262	      0xbe73000000	                           mov esi, 0x73	      6019	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	CALL_5
0x4001267	    0x488b3d000000	            mov rdi, qword [0x0400126e] 	      6019	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	CALL_5
0x400126e	      0xe800000000	                          call 0x4001273	      6019	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	CALL_5
0x4001273	          0x4885c0	                           test rax, rax	      6019	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	CALL_5
0x4001276	            0x753f	                           jne 0x40012b7	      6019	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	CALL_5
0x4001278	        0x837d0c6c	            cmp dword [rbp + 0xc], 0x6c 	      6020	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5
0x400127c	            0x7516	                           jne 0x4001294	      6020	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5
0x400127e	      0xbe6c000000	                           mov esi, 0x6c	      6021	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	CALL_6
0x4001283	    0x488b3d000000	            mov rdi, qword [0x0400128a] 	      6021	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	CALL_6
0x400128a	      0xe800000000	                          call 0x400128f	      6021	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	CALL_6
0x400128f	          0x4885c0	                           test rax, rax	      6021	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	CALL_6
0x4001292	            0x7523	                           jne 0x40012b7	      6021	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	CALL_6
0x4001294	    0x817d0c958dff	      cmp dword [rbp + 0xc], 0xffff8d95 	      6022	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5
0x400129b	     0xf8587000000	                           jne 0x4001328	      6022	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5
0x40012a1	      0xbe3e000000	                           mov esi, 0x3e	      6023	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	CALL_7
0x40012a6	    0x488b3d000000	            mov rdi, qword [0x040012ad] 	      6023	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	CALL_7
0x40012ad	      0xe800000000	                          call 0x40012b2	      6023	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	CALL_7
0x40012b2	          0x4885c0	                           test rax, rax	      6023	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	CALL_7
0x40012b5	            0x7471	                            je 0x4001328	      6023	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	CALL_7
0x40012b7	    0x488b05000000	            mov rax, qword [0x040012be] 	      6024	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5
0x40012be	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      6024	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5
0x40012c2	    0x488b05000000	            mov rax, qword [0x040012c9] 	      6024	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5
0x40012c9	          0x483b38	                    cmp rdi, qword [rax]	      6024	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5
0x40012cc	            0x7d5a	                           jge 0x4001328	      6024	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5
0x40012ce	        0x488b4500	                    mov rax, qword [rbp]	      6029	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	IF_6
0x40012d2	          0x833800	                      cmp dword [rax], 0	      6029	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	IF_6
0x40012d5	            0x7420	                            je 0x40012f7	      6029	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	IF_6
0x40012d7	        0x83781400	               cmp dword [rax + 0x14], 0	      6030	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	IF_6
0x40012db	            0x751a	                           jne 0x40012f7	      6030	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	IF_6
0x40012dd	      0xe800000000	                          call 0x40012e2	      6031	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	IF_6	CALL_8
0x40012e2	          0x803800	                       cmp byte [rax], 0	      6031	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	IF_6	CALL_8
0x40012e5	            0x7410	                            je 0x40012f7	      6031	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	IF_6	CALL_8
0x40012e7	        0x488b4500	                    mov rax, qword [rbp]	      6032	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	IF_6
0x40012eb	    0xc74014010000	               mov dword [rax + 0x14], 1	      6032	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	IF_6
0x40012f2	      0xe9c3000000	                           jmp 0x40013ba	      6032	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	IF_6
0x40012f7	    0x488b05000000	            mov rax, qword [0x040012fe] 	      6035	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	ELSE_1
0x40012fe	      0x4883403801	               add qword [rax + 0x38], 1	      6035	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	ELSE_1
0x4001303	    0xc74040000000	               mov dword [rax + 0x40], 0	      6036	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	ELSE_1
0x400130a	    0xc74044000000	               mov dword [rax + 0x44], 0	      6038	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	ELSE_1
0x4001311	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      6040	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	ELSE_1
0x4001318	        0x488b4500	                    mov rax, qword [rbp]	      6041	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	ELSE_1
0x400131c	    0xc74014000000	               mov dword [rax + 0x14], 0	      6041	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	ELSE_1
0x4001323	      0xe992000000	                           jmp 0x40013ba	      6041	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	ELSE_1
0x4001328	        0x488b4500	                    mov rax, qword [rbp]	      6045	normal.c	FUNCTION_70	FOR_1	IF_4	IF_7
0x400132c	          0x833800	                      cmp dword [rax], 0	      6045	normal.c	FUNCTION_70	FOR_1	IF_4	IF_7
0x400132f	            0x7517	                           jne 0x4001348	      6045	normal.c	FUNCTION_70	FOR_1	IF_4	IF_7
0x4001331	        0x4c8b6530	            mov r12, qword [rbp + 0x30] 	      6048	normal.c	FUNCTION_70	FOR_1	IF_4	IF_7	IF_8
0x4001335	          0x4939dc	                            cmp r12, rbx	      6048	normal.c	FUNCTION_70	FOR_1	IF_4	IF_7	IF_8
0x4001338	     0xf858c000000	                           jne 0x40013ca	      6048	normal.c	FUNCTION_70	FOR_1	IF_4	IF_7	IF_8
0x400133e	      0xe800000000	                          call 0x4001343	      6049	normal.c	FUNCTION_70	FOR_1	IF_4	IF_7	CALL_9
0x4001343	          0x4c89e3	                            mov rbx, r12	      6049	normal.c	FUNCTION_70	FOR_1	IF_4	IF_7	CALL_9
0x4001346	            0xeb7c	                           jmp 0x40013c4	      6049	normal.c	FUNCTION_70	FOR_1	IF_4	IF_7	CALL_9
0x4001348	    0x488b05000000	            mov rax, qword [0x0400134f] 	      6053	normal.c	FUNCTION_70	FOR_1	IF_4	ELSE_2	IF_9	CALL_10
0x400134f	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      6053	normal.c	FUNCTION_70	FOR_1	IF_4	ELSE_2	IF_9	CALL_10
0x4001353	      0xe800000000	                          call 0x4001358	      6053	normal.c	FUNCTION_70	FOR_1	IF_4	ELSE_2	IF_9	CALL_10
0x4001358	          0x803800	                       cmp byte [rax], 0	      6053	normal.c	FUNCTION_70	FOR_1	IF_4	ELSE_2	IF_9	CALL_10
0x400135b	            0x7467	                            je 0x40013c4	      6053	normal.c	FUNCTION_70	FOR_1	IF_4	ELSE_2	IF_9	CALL_10
0x400135d	        0x488b4500	                    mov rax, qword [rbp]	      6054	normal.c	FUNCTION_70	FOR_1	IF_4	ELSE_2	IF_9
0x4001361	    0xc74014010000	               mov dword [rax + 0x14], 1	      6054	normal.c	FUNCTION_70	FOR_1	IF_4	ELSE_2	IF_9
0x4001368	            0xeb5a	                           jmp 0x40013c4	      6054	normal.c	FUNCTION_70	FOR_1	IF_4	ELSE_2	IF_9
0x400136a	    0x488b05000000	            mov rax, qword [0x04001371] 	      6060	normal.c	FUNCTION_70	FOR_1	ELSE_3	IF_10
0x4001371	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      6060	normal.c	FUNCTION_70	FOR_1	ELSE_3	IF_10
0x4001378	      0xe800000000	                          call 0x400137d	      6062	normal.c	FUNCTION_70	FOR_1	ELSE_3	IF_10	IF_11	CALL_11
0x400137d	            0x85c0	                           test eax, eax	      6062	normal.c	FUNCTION_70	FOR_1	ELSE_3	IF_10	IF_11	CALL_11
0x400137f	            0x7407	                            je 0x4001388	      6062	normal.c	FUNCTION_70	FOR_1	ELSE_3	IF_10	IF_11	CALL_11
0x4001381	      0xe800000000	                          call 0x4001386	      6063	normal.c	FUNCTION_70	FOR_1	ELSE_3	IF_10	CALL_12
0x4001386	            0xeb32	                           jmp 0x40013ba	      6063	normal.c	FUNCTION_70	FOR_1	ELSE_3	IF_10	CALL_12
0x4001388	    0x833d00000000	               cmp dword [0x0400138f], 0	      6068	normal.c	FUNCTION_70	FOR_1	ELSE_3	IF_10	ELSE_4	IF_12
0x400138f	            0x741e	                            je 0x40013af	      6068	normal.c	FUNCTION_70	FOR_1	ELSE_3	IF_10	ELSE_4	IF_12
0x4001391	    0x4c8b2d000000	            mov r13, qword [0x04001398] 	      6070	normal.c	FUNCTION_70	FOR_1	ELSE_3	IF_10	ELSE_4	CALL_13
0x4001398	      0xe800000000	                          call 0x400139d	      6070	normal.c	FUNCTION_70	FOR_1	ELSE_3	IF_10	ELSE_4	CALL_13
0x400139d	          0x4889c7	                            mov rdi, rax	      6070	normal.c	FUNCTION_70	FOR_1	ELSE_3	IF_10	ELSE_4	CALL_13
0x40013a0	          0x41ffd5	                                call r13	      6070	normal.c	FUNCTION_70	FOR_1	ELSE_3	IF_10	ELSE_4	CALL_13
0x40013a3	    0x488b15000000	            mov rdx, qword [0x040013aa] 	      6069	normal.c	FUNCTION_70	FOR_1	ELSE_3	IF_10	ELSE_4	IF_12
0x40013aa	           0x14240	             add dword [rdx + 0x40], eax	      6069	normal.c	FUNCTION_70	FOR_1	ELSE_3	IF_10	ELSE_4	IF_12
0x40013ad	            0xeb0b	                           jmp 0x40013ba	      6069	normal.c	FUNCTION_70	FOR_1	ELSE_3	IF_10	ELSE_4	IF_12
0x40013af	    0x488b05000000	            mov rax, qword [0x040013b6] 	      6073	normal.c	FUNCTION_70	FOR_1	ELSE_3	IF_10	ELSE_4	ELSE_5
0x40013b6	        0x83404001	               add dword [rax + 0x40], 1	      6073	normal.c	FUNCTION_70	FOR_1	ELSE_3	IF_10	ELSE_4	ELSE_5
0x40013ba	        0x4883eb01	                              sub rbx, 1	      6007	normal.c	FUNCTION_70	FOR_1
0x40013be	     0xf8582feffff	                           jne 0x4001246	      6007	normal.c	FUNCTION_70	FOR_1
0x40013c4	        0x48395d30	            cmp qword [rbp + 0x30], rbx 	      6078	normal.c	FUNCTION_70	IF_13
0x40013c8	            0x7435	                            je 0x40013ff	      6078	normal.c	FUNCTION_70	IF_13
0x40013ca	    0xf60500000000	               test byte [0x040013d1], 4	      6078	normal.c	FUNCTION_70	IF_13
0x40013d1	            0x742c	                            je 0x40013ff	      6078	normal.c	FUNCTION_70	IF_13
0x40013d3	    0x833d00000000	               cmp dword [0x040013da], 0	      6078	normal.c	FUNCTION_70	IF_13
0x40013da	            0x7423	                            je 0x40013ff	      6078	normal.c	FUNCTION_70	IF_13
0x40013dc	        0x488b4500	                    mov rax, qword [rbp]	      6079	normal.c	FUNCTION_70	IF_13
0x40013e0	          0x833800	                      cmp dword [rax], 0	      6079	normal.c	FUNCTION_70	IF_13
0x40013e3	            0x751a	                           jne 0x40013ff	      6079	normal.c	FUNCTION_70	IF_13
0x40013e5	      0xe800000000	                          call 0x40013ea	      6080	normal.c	FUNCTION_70	CALL_14
0x40013ea	            0xeb13	                           jmp 0x40013ff	      6080	normal.c	FUNCTION_70	CALL_14
0x40013ec	      0xe800000000	                          call 0x40013f1	      6010	normal.c	FUNCTION_70	FOR_1	IF_4	CALL_4
0x40013f1	          0x803800	                       cmp byte [rax], 0	      6010	normal.c	FUNCTION_70	FOR_1	IF_4	CALL_4
0x40013f4	     0xf8462feffff	                            je 0x400125c	      6010	normal.c	FUNCTION_70	FOR_1	IF_4	CALL_4
0x40013fa	      0xe96bffffff	                           jmp 0x400136a	      6010	normal.c	FUNCTION_70	FOR_1	IF_4	CALL_4
0x40013ff	        0x4883c408	                              add rsp, 8	      6082	normal.c	FUNCTION_70
0x4001403	              0x5b	                                 pop rbx	      6082	normal.c	FUNCTION_70
0x4001404	              0x5d	                                 pop rbp	      6082	normal.c	FUNCTION_70
0x4001405	            0x415c	                                 pop r12	      6082	normal.c	FUNCTION_70
0x4001407	            0x415d	                                 pop r13	      6082	normal.c	FUNCTION_70
0x4001409	              0xc3	                                     ret	      6082	normal.c	FUNCTION_70
nv_csearch	CALL,8:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,3:IF,4	68
0x40016c8	              0x55	                                push rbp	      6417	normal.c	FUNCTION_80
0x40016c9	              0x53	                                push rbx	      6417	normal.c	FUNCTION_80
0x40016ca	        0x4883ec18	                           sub rsp, 0x18	      6417	normal.c	FUNCTION_80
0x40016ce	          0x4889fb	                            mov rbx, rdi	      6417	normal.c	FUNCTION_80
0x40016d1	    0x64488b042528	                mov rax, qword fs:[0x28]	      6417	normal.c	FUNCTION_80
0x40016da	      0x4889442408	                mov qword [rsp + 8], rax	      6417	normal.c	FUNCTION_80
0x40016df	            0x31c0	                            xor eax, eax	      6417	normal.c	FUNCTION_80
0x40016e1	          0x8b6f0c	              mov ebp, dword [rdi + 0xc]	      6420	normal.c	FUNCTION_80	IF_1
0x40016e4	          0x83e5df	                     and ebp, 0xffffffdf	      6420	normal.c	FUNCTION_80	IF_1
0x40016e7	          0x83fd54	                           cmp ebp, 0x54	      6421	normal.c	FUNCTION_80	IF_1
0x40016ea	        0x400f94c6	                                sete sil	      6421	normal.c	FUNCTION_80	IF_1
0x40016ee	          0x488b07	                    mov rax, qword [rdi]	      6425	normal.c	FUNCTION_80
0x40016f1	    0xc74008000000	                  mov dword [rax + 8], 0	      6425	normal.c	FUNCTION_80
0x40016f8	        0x837f1000	               cmp dword [rdi + 0x10], 0	      6426	normal.c	FUNCTION_80	IF_2	CALL_2
0x40016fc	            0x780d	                            js 0x400170b	      6426	normal.c	FUNCTION_80	IF_2	CALL_2
0x40016fe	        0x400fb6f6	                          movzx esi, sil	      6426	normal.c	FUNCTION_80	IF_2	CALL_2
0x4001702	      0xe800000000	                          call 0x4001707	      6426	normal.c	FUNCTION_80	IF_2	CALL_2
0x4001707	            0x85c0	                           test eax, eax	      6426	normal.c	FUNCTION_80	IF_2	CALL_2
0x4001709	            0x750d	                           jne 0x4001718	      6426	normal.c	FUNCTION_80	IF_2	CALL_2
0x400170b	          0x488b3b	                    mov rdi, qword [rbx]	      6427	normal.c	FUNCTION_80	CALL_3
0x400170e	      0xe825ebffff	                    call sym.clearopbeep	      6427	normal.c	FUNCTION_80	CALL_3
0x4001713	      0xe999000000	                           jmp 0x40017b1	      6427	normal.c	FUNCTION_80	CALL_3
0x4001718	    0x488b05000000	            mov rax, qword [0x0400171f] 	      6430	normal.c	FUNCTION_80	ELSE_2
0x400171f	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      6430	normal.c	FUNCTION_80	ELSE_2
0x4001726	      0xe800000000	                          call 0x400172b	      6433	normal.c	FUNCTION_80	ELSE_2	IF_3	CALL_5
0x400172b	          0x83f809	                              cmp eax, 9	      6433	normal.c	FUNCTION_80	ELSE_2	IF_3	CALL_5
0x400172e	            0x754c	                           jne 0x400177c	      6433	normal.c	FUNCTION_80	ELSE_2	IF_3	CALL_5
0x4001730	      0xe800000000	                          call 0x4001735	      6433	normal.c	FUNCTION_80	ELSE_2	IF_3	CALL_5
0x4001735	            0x85c0	                           test eax, eax	      6433	normal.c	FUNCTION_80	ELSE_2	IF_3	CALL_5
0x4001737	            0x7443	                            je 0x400177c	      6433	normal.c	FUNCTION_80	ELSE_2	IF_3	CALL_5
0x4001739	        0x837b3801	               cmp dword [rbx + 0x38], 1	      6433	normal.c	FUNCTION_80	ELSE_2	IF_3	CALL_5
0x400173d	            0x753d	                           jne 0x400177c	      6433	normal.c	FUNCTION_80	ELSE_2	IF_3	CALL_5
0x400173f	          0x83fd54	                           cmp ebp, 0x54	      6434	normal.c	FUNCTION_80	ELSE_2	IF_3
0x4001742	            0x7408	                            je 0x400174c	      6434	normal.c	FUNCTION_80	ELSE_2	IF_3
0x4001744	          0x488b03	                    mov rax, qword [rbx]	      6434	normal.c	FUNCTION_80	ELSE_2	IF_3
0x4001747	          0x833800	                      cmp dword [rax], 0	      6434	normal.c	FUNCTION_80	ELSE_2	IF_3
0x400174a	            0x7430	                            je 0x400177c	      6434	normal.c	FUNCTION_80	ELSE_2	IF_3
0x400174c	    0x488b3d000000	            mov rdi, qword [0x04001753] 	      6438	normal.c	FUNCTION_80	ELSE_2	IF_3	CALL_6
0x4001753	        0x488d7738	                   lea rsi, [rdi + 0x38]	      6438	normal.c	FUNCTION_80	ELSE_2	IF_3	CALL_6
0x4001757	      0x4c8d442404	                       lea r8, [rsp + 4]	      6438	normal.c	FUNCTION_80	ELSE_2	IF_3	CALL_6
0x400175c	      0xb900000000	                              mov ecx, 0	      6438	normal.c	FUNCTION_80	ELSE_2	IF_3	CALL_6
0x4001761	          0x4889e2	                            mov rdx, rsp	      6438	normal.c	FUNCTION_80	ELSE_2	IF_3	CALL_6
0x4001764	      0xe800000000	                          call 0x4001769	      6438	normal.c	FUNCTION_80	ELSE_2	IF_3	CALL_6
0x4001769	        0x8b442404	                mov eax, dword [rsp + 4]	      6439	normal.c	FUNCTION_80	ELSE_2	IF_3
0x400176d	          0x2b0424	                    sub eax, dword [rsp]	      6439	normal.c	FUNCTION_80	ELSE_2	IF_3
0x4001770	    0x488b15000000	            mov rdx, qword [0x04001777] 	      6439	normal.c	FUNCTION_80	ELSE_2	IF_3
0x4001777	          0x894244	             mov dword [rdx + 0x44], eax	      6439	normal.c	FUNCTION_80	ELSE_2	IF_3
0x400177a	            0xeb0e	                           jmp 0x400178a	      6435	normal.c	FUNCTION_80	ELSE_2	IF_3
0x400177c	    0x488b05000000	            mov rax, qword [0x04001783] 	      6442	normal.c	FUNCTION_80	ELSE_2	ELSE_3
0x4001783	    0xc74044000000	               mov dword [rax + 0x44], 0	      6442	normal.c	FUNCTION_80	ELSE_2	ELSE_3
0x400178a	          0x4889df	                            mov rdi, rbx	      6444	normal.c	FUNCTION_80	ELSE_2	CALL_7
0x400178d	      0xe80cecffff	                 call sym.adjust_for_sel	      6444	normal.c	FUNCTION_80	ELSE_2	CALL_7
0x4001792	    0xf60500000000	               test byte [0x04001799], 4	      6446	normal.c	FUNCTION_80	ELSE_2	IF_4
0x4001799	            0x7416	                            je 0x40017b1	      6446	normal.c	FUNCTION_80	ELSE_2	IF_4
0x400179b	    0x833d00000000	               cmp dword [0x040017a2], 0	      6446	normal.c	FUNCTION_80	ELSE_2	IF_4
0x40017a2	            0x740d	                            je 0x40017b1	      6446	normal.c	FUNCTION_80	ELSE_2	IF_4
0x40017a4	          0x488b03	                    mov rax, qword [rbx]	      6446	normal.c	FUNCTION_80	ELSE_2	IF_4
0x40017a7	          0x833800	                      cmp dword [rax], 0	      6446	normal.c	FUNCTION_80	ELSE_2	IF_4
0x40017aa	            0x7505	                           jne 0x40017b1	      6446	normal.c	FUNCTION_80	ELSE_2	IF_4
0x40017ac	      0xe800000000	                          call 0x40017b1	      6447	normal.c	FUNCTION_80	ELSE_2	CALL_8
0x40017b1	      0x488b442408	                mov rax, qword [rsp + 8]	      6450	normal.c	FUNCTION_80
0x40017b6	    0x644833042528	                xor rax, qword fs:[0x28]	      6450	normal.c	FUNCTION_80
0x40017bf	            0x7405	                            je 0x40017c6	      6450	normal.c	FUNCTION_80
0x40017c1	      0xe800000000	                          call 0x40017c6	      6450	normal.c	FUNCTION_80
0x40017c6	        0x4883c418	                           add rsp, 0x18	      6450	normal.c	FUNCTION_80
0x40017ca	              0x5b	                                 pop rbx	      6450	normal.c	FUNCTION_80
0x40017cb	              0x5d	                                 pop rbp	      6450	normal.c	FUNCTION_80
0x40017cc	              0xc3	                                     ret	      6450	normal.c	FUNCTION_80
nv_ctrlh	CALL,2:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,1:IF,1	11
0x4002227	        0x4883ec08	                              sub rsp, 8	      5444	normal.c	FUNCTION_60
0x400222b	    0x833d00000000	               cmp dword [0x04002232], 0	      5445	normal.c	FUNCTION_60	IF_1
0x4002232	            0x7417	                            je 0x400224b	      5445	normal.c	FUNCTION_60	IF_1
0x4002234	    0x833d00000000	               cmp dword [0x0400223b], 0	      5445	normal.c	FUNCTION_60	IF_1
0x400223b	            0x740e	                            je 0x400224b	      5445	normal.c	FUNCTION_60	IF_1
0x400223d	    0xc7470c780000	            mov dword [rdi + 0xc], 0x78 	      5447	normal.c	FUNCTION_60	IF_1
0x4002244	      0xe83effffff	                        call sym.v_visop	      5448	normal.c	FUNCTION_60	IF_1	CALL_1
0x4002249	            0xeb05	                           jmp 0x4002250	      5448	normal.c	FUNCTION_60	IF_1	CALL_1
0x400224b	      0xe820f2ffff	                        call sym.nv_left	      5451	normal.c	FUNCTION_60	CALL_2
0x4002250	        0x4883c408	                              add rsp, 8	      5452	normal.c	FUNCTION_60
0x4002254	              0xc3	                                     ret	      5452	normal.c	FUNCTION_60
find_start_of_word	CALL,3:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,1:ELSE,0:IF,1	35
0x4002b5b	            0x4155	                                push r13	      3184	normal.c	FUNCTION_10
0x4002b5d	            0x4154	                                push r12	      3184	normal.c	FUNCTION_10
0x4002b5f	              0x55	                                push rbp	      3184	normal.c	FUNCTION_10
0x4002b60	              0x53	                                push rbx	      3184	normal.c	FUNCTION_10
0x4002b61	        0x4883ec08	                              sub rsp, 8	      3184	normal.c	FUNCTION_10
0x4002b65	          0x4989fc	                            mov r12, rdi	      3184	normal.c	FUNCTION_10
0x4002b68	          0x488b3f	                    mov rdi, qword [rdi]	      3189	normal.c	FUNCTION_10	CALL_1
0x4002b6b	      0xe800000000	                          call 0x4002b70	      3189	normal.c	FUNCTION_10	CALL_1
0x4002b70	          0x4889c5	                            mov rbp, rax	      3189	normal.c	FUNCTION_10	CALL_1
0x4002b73	      0x49637c2408	            movsxd rdi, dword [r12 + 8] 	      3190	normal.c	FUNCTION_10	CALL_2
0x4002b78	          0x4801c7	                            add rdi, rax	      3190	normal.c	FUNCTION_10	CALL_2
0x4002b7b	      0xe87bffffff	                call sym.get_mouse_class	      3190	normal.c	FUNCTION_10	CALL_2
0x4002b80	          0x4189c5	                           mov r13d, eax	      3190	normal.c	FUNCTION_10	CALL_2
0x4002b83	            0xeb28	                           jmp 0x4002bad	      3192	normal.c	FUNCTION_10	WHILE_1
0x4002b85	            0xffcb	                                 dec ebx	      3194	normal.c	FUNCTION_10	WHILE_1
0x4002b87	          0x4863f3	                         movsxd rsi, ebx	      3196	normal.c	FUNCTION_10	WHILE_1
0x4002b8a	          0x4801ee	                            add rsi, rbp	      3196	normal.c	FUNCTION_10	WHILE_1
0x4002b8d	          0x4889ef	                            mov rdi, rbp	      3196	normal.c	FUNCTION_10	WHILE_1
0x4002b90	    0xff1500000000	                 call qword [0x04002b96]	      3196	normal.c	FUNCTION_10	WHILE_1
0x4002b96	            0x29c3	                            sub ebx, eax	      3196	normal.c	FUNCTION_10	WHILE_1
0x4002b98	          0x4863fb	                         movsxd rdi, ebx	      3198	normal.c	FUNCTION_10	WHILE_1	IF_1	CALL_3
0x4002b9b	          0x4801ef	                            add rdi, rbp	      3198	normal.c	FUNCTION_10	WHILE_1	IF_1	CALL_3
0x4002b9e	      0xe858ffffff	                call sym.get_mouse_class	      3198	normal.c	FUNCTION_10	WHILE_1	IF_1	CALL_3
0x4002ba3	          0x4139c5	                           cmp r13d, eax	      3198	normal.c	FUNCTION_10	WHILE_1	IF_1	CALL_3
0x4002ba6	            0x750e	                           jne 0x4002bb6	      3198	normal.c	FUNCTION_10	WHILE_1	IF_1	CALL_3
0x4002ba8	      0x41895c2408	                mov dword [r12 + 8], ebx	      3200	normal.c	FUNCTION_10	WHILE_1
0x4002bad	      0x418b5c2408	                mov ebx, dword [r12 + 8]	      3192	normal.c	FUNCTION_10	WHILE_1
0x4002bb2	            0x85db	                           test ebx, ebx	      3192	normal.c	FUNCTION_10	WHILE_1
0x4002bb4	            0x7fcf	                            jg 0x4002b85	      3192	normal.c	FUNCTION_10	WHILE_1
0x4002bb6	        0x4883c408	                              add rsp, 8	      3202	normal.c	FUNCTION_10
0x4002bba	              0x5b	                                 pop rbx	      3202	normal.c	FUNCTION_10
0x4002bbb	              0x5d	                                 pop rbp	      3202	normal.c	FUNCTION_10
0x4002bbc	            0x415c	                                 pop r12	      3202	normal.c	FUNCTION_10
0x4002bbe	            0x415d	                                 pop r13	      3202	normal.c	FUNCTION_10
0x4002bc0	              0xc3	                                     ret	      3202	normal.c	FUNCTION_10
nv_screengo	CALL,16:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,1:ELSE,8:IF,20	234
0x40009d0	            0x4157	                                push r15	      4453	normal.c	FUNCTION_46
0x40009d2	            0x4156	                                push r14	      4453	normal.c	FUNCTION_46
0x40009d4	            0x4155	                                push r13	      4453	normal.c	FUNCTION_46
0x40009d6	            0x4154	                                push r12	      4453	normal.c	FUNCTION_46
0x40009d8	              0x55	                                push rbp	      4453	normal.c	FUNCTION_46
0x40009d9	              0x53	                                push rbx	      4453	normal.c	FUNCTION_46
0x40009da	        0x4883ec08	                              sub rsp, 8	      4453	normal.c	FUNCTION_46
0x40009de	          0x4889fb	                            mov rbx, rdi	      4453	normal.c	FUNCTION_46
0x40009e1	          0x4189f6	                           mov r14d, esi	      4453	normal.c	FUNCTION_46
0x40009e4	          0x4889d5	                            mov rbp, rdx	      4453	normal.c	FUNCTION_46
0x40009e7	      0xe800000000	                          call 0x40009ec	      4454	normal.c	FUNCTION_46	CALL_2
0x40009ec	          0x4889c7	                            mov rdi, rax	      4454	normal.c	FUNCTION_46	CALL_2
0x40009ef	      0xe800000000	                          call 0x40009f4	      4454	normal.c	FUNCTION_46	CALL_2
0x40009f4	          0x4189c5	                           mov r13d, eax	      4454	normal.c	FUNCTION_46	CALL_2
0x40009f7	    0xc74308000000	                  mov dword [rbx + 8], 0	      4463	normal.c	FUNCTION_46
0x40009fe	    0x488b05000000	            mov rax, qword [0x04000a05] 	      4464	normal.c	FUNCTION_46
0x4000a05	    0x817848ffffff	     cmp dword [rax + 0x48], 0x7fffffff 	      4464	normal.c	FUNCTION_46
0x4000a0c	           0xf94c0	                                 sete al	      4464	normal.c	FUNCTION_46
0x4000a0f	           0xfb6c0	                           movzx eax, al	      4464	normal.c	FUNCTION_46
0x4000a12	          0x894314	             mov dword [rbx + 0x14], eax	      4464	normal.c	FUNCTION_46
0x4000a15	      0xe800000000	                          call 0x4000a1a	      4466	normal.c	FUNCTION_46	CALL_3
0x4000a1a	            0x89c3	                            mov ebx, eax	      4466	normal.c	FUNCTION_46	CALL_3
0x4000a1c	      0xe800000000	                          call 0x4000a21	      4467	normal.c	FUNCTION_46	CALL_4
0x4000a21	    0x488b0d000000	            mov rcx, qword [0x04000a28] 	      4468	normal.c	FUNCTION_46
0x4000a28	    0x8b91ac000000	            mov edx, dword [rcx + 0xac] 	      4468	normal.c	FUNCTION_46
0x4000a2e	          0x4189d4	                           mov r12d, edx	      4468	normal.c	FUNCTION_46
0x4000a31	          0x4129dc	                           sub r12d, ebx	      4468	normal.c	FUNCTION_46
0x4000a34	            0x29c3	                            sub ebx, eax	      4469	normal.c	FUNCTION_46
0x4000a36	            0x89d0	                            mov eax, edx	      4470	normal.c	FUNCTION_46	IF_1
0x4000a38	            0x29d8	                            sub eax, ebx	      4470	normal.c	FUNCTION_46	IF_1
0x4000a3a	            0x89c3	                            mov ebx, eax	      4470	normal.c	FUNCTION_46	IF_1
0x4000a3c	      0xb801000000	                              mov eax, 1	      4471	normal.c	FUNCTION_46	IF_1
0x4000a41	           0xf44d8	                          cmove ebx, eax	      4471	normal.c	FUNCTION_46	IF_1
0x4000a44	            0x85d2	                           test edx, edx	      4473	normal.c	FUNCTION_46	IF_2
0x4000a46	     0xf848f020000	                            je 0x4000cdb	      4473	normal.c	FUNCTION_46	IF_2
0x4000a4c	          0x8b7148	            mov esi, dword [rcx + 0x48] 	      4479	normal.c	FUNCTION_46	IF_2	IF_3
0x4000a4f	    0x81feffffff7f	                     cmp esi, 0x7fffffff	      4479	normal.c	FUNCTION_46	IF_2	IF_3
0x4000a55	            0x755e	                           jne 0x4000ab5	      4479	normal.c	FUNCTION_46	IF_2	IF_3
0x4000a57	      0xe800000000	                          call 0x4000a5c	      4482	normal.c	FUNCTION_46	IF_2	IF_3	CALL_5
0x4000a5c	          0x4585e4	                         test r12d, r12d	      4483	normal.c	FUNCTION_46	IF_2	IF_3	IF_4
0x4000a5f	            0x7f19	                            jg 0x4000a7a	      4483	normal.c	FUNCTION_46	IF_2	IF_3	IF_4
0x4000a61	    0x488b05000000	            mov rax, qword [0x04000a68] 	      4484	normal.c	FUNCTION_46	IF_2	IF_3	IF_4
0x4000a68	    0xc74048000000	               mov dword [rax + 0x48], 0	      4484	normal.c	FUNCTION_46	IF_2	IF_3	IF_4
0x4000a6f	    0x41bf01000000	                             mov r15d, 1	      4481	normal.c	FUNCTION_46	IF_2	IF_3
0x4000a75	      0xe981010000	                           jmp 0x4000bfb	      4481	normal.c	FUNCTION_46	IF_2	IF_3
0x4000a7a	    0x488b35000000	            mov rsi, qword [0x04000a81] 	      4487	normal.c	FUNCTION_46	IF_2	IF_3	ELSE_1
0x4000a81	      0x418d4c24ff	                      lea ecx, [r12 - 1]	      4487	normal.c	FUNCTION_46	IF_2	IF_3	ELSE_1
0x4000a86	          0x894e48	             mov dword [rsi + 0x48], ecx	      4487	normal.c	FUNCTION_46	IF_2	IF_3	ELSE_1
0x4000a89	    0x8b86d8000000	            mov eax, dword [rsi + 0xd8] 	      4488	normal.c	FUNCTION_46	IF_2	IF_3	ELSE_1	IF_5
0x4000a8f	    0x41bf01000000	                             mov r15d, 1	      4481	normal.c	FUNCTION_46	IF_2	IF_3
0x4000a95	            0x39c1	                            cmp ecx, eax	      4488	normal.c	FUNCTION_46	IF_2	IF_3	ELSE_1	IF_5
0x4000a97	     0xf8d5e010000	                           jge 0x4000bfb	      4488	normal.c	FUNCTION_46	IF_2	IF_3	ELSE_1	IF_5
0x4000a9d	            0x29c8	                            sub eax, ecx	      4489	normal.c	FUNCTION_46	IF_2	IF_3	ELSE_1	IF_5
0x4000a9f	          0x83e801	                              sub eax, 1	      4489	normal.c	FUNCTION_46	IF_2	IF_3	ELSE_1	IF_5
0x4000aa2	              0x99	                                     cdq	      4489	normal.c	FUNCTION_46	IF_2	IF_3	ELSE_1	IF_5
0x4000aa3	            0xf7fb	                                idiv ebx	      4489	normal.c	FUNCTION_46	IF_2	IF_3	ELSE_1	IF_5
0x4000aa5	          0x83c001	                              add eax, 1	      4489	normal.c	FUNCTION_46	IF_2	IF_3	ELSE_1	IF_5
0x4000aa8	           0xfafc3	                           imul eax, ebx	      4489	normal.c	FUNCTION_46	IF_2	IF_3	ELSE_1	IF_5
0x4000aab	             0x1c8	                            add eax, ecx	      4489	normal.c	FUNCTION_46	IF_2	IF_3	ELSE_1	IF_5
0x4000aad	          0x894648	             mov dword [rsi + 0x48], eax	      4489	normal.c	FUNCTION_46	IF_2	IF_3	ELSE_1	IF_5
0x4000ab0	      0xe946010000	                           jmp 0x4000bfb	      4489	normal.c	FUNCTION_46	IF_2	IF_3	ELSE_1	IF_5
0x4000ab5	          0x4489e0	                           mov eax, r12d	      4498	normal.c	FUNCTION_46	IF_2	ELSE_2	ELSE_3
0x4000ab8	          0x4539e5	                          cmp r13d, r12d	      4495	normal.c	FUNCTION_46	IF_2	ELSE_2	IF_6
0x4000abb	            0x7e15	                           jle 0x4000ad2	      4495	normal.c	FUNCTION_46	IF_2	ELSE_2	IF_6
0x4000abd	          0x4489e8	                           mov eax, r13d	      4496	normal.c	FUNCTION_46	IF_2	ELSE_2	IF_6
0x4000ac0	          0x4429e0	                           sub eax, r12d	      4496	normal.c	FUNCTION_46	IF_2	ELSE_2	IF_6
0x4000ac3	          0x83e801	                              sub eax, 1	      4496	normal.c	FUNCTION_46	IF_2	ELSE_2	IF_6
0x4000ac6	              0x99	                                     cdq	      4496	normal.c	FUNCTION_46	IF_2	ELSE_2	IF_6
0x4000ac7	            0xf7fb	                                idiv ebx	      4496	normal.c	FUNCTION_46	IF_2	ELSE_2	IF_6
0x4000ac9	          0x83c001	                              add eax, 1	      4496	normal.c	FUNCTION_46	IF_2	ELSE_2	IF_6
0x4000acc	           0xfafc3	                           imul eax, ebx	      4496	normal.c	FUNCTION_46	IF_2	ELSE_2	IF_6
0x4000acf	          0x4401e0	                           add eax, r12d	      4496	normal.c	FUNCTION_46	IF_2	ELSE_2	IF_6
0x4000ad2	          0x8d5001	                      lea edx, [rax + 1]	      4499	normal.c	FUNCTION_46	IF_2	ELSE_2	IF_7
0x4000ad5	    0x41bf00000000	                             mov r15d, 0	      4456	normal.c	FUNCTION_46
0x4000adb	            0x39d6	                            cmp esi, edx	      4499	normal.c	FUNCTION_46	IF_2	ELSE_2	IF_7
0x4000add	     0xf8e18010000	                           jle 0x4000bfb	      4499	normal.c	FUNCTION_46	IF_2	ELSE_2	IF_7
0x4000ae3	            0x89f7	                            mov edi, esi	      4500	normal.c	FUNCTION_46	IF_2	ELSE_2	IF_7
0x4000ae5	            0x29c7	                            sub edi, eax	      4500	normal.c	FUNCTION_46	IF_2	ELSE_2	IF_7
0x4000ae7	            0x89f8	                            mov eax, edi	      4500	normal.c	FUNCTION_46	IF_2	ELSE_2	IF_7
0x4000ae9	              0x99	                                     cdq	      4500	normal.c	FUNCTION_46	IF_2	ELSE_2	IF_7
0x4000aea	            0xf7fb	                                idiv ebx	      4500	normal.c	FUNCTION_46	IF_2	ELSE_2	IF_7
0x4000aec	          0x83c001	                              add eax, 1	      4500	normal.c	FUNCTION_46	IF_2	ELSE_2	IF_7
0x4000aef	           0xfafc3	                           imul eax, ebx	      4500	normal.c	FUNCTION_46	IF_2	ELSE_2	IF_7
0x4000af2	            0x29c6	                            sub esi, eax	      4500	normal.c	FUNCTION_46	IF_2	ELSE_2	IF_7
0x4000af4	          0x897148	             mov dword [rcx + 0x48], esi	      4500	normal.c	FUNCTION_46	IF_2	ELSE_2	IF_7
0x4000af7	      0xe9ff000000	                           jmp 0x4000bfb	      4500	normal.c	FUNCTION_46	IF_2	ELSE_2	IF_7
0x4000afc	        0x4183feff	            cmp r14d, 0xffffffffffffffff	      4506	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8
0x4000b00	            0x7579	                           jne 0x4000b7b	      4506	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8
0x4000b02	    0x488b35000000	            mov rsi, qword [0x04000b09] 	      4508	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	IF_9
0x4000b09	          0x8b4648	            mov eax, dword [rsi + 0x48] 	      4508	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	IF_9
0x4000b0c	            0x39c3	                            cmp ebx, eax	      4508	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	IF_9
0x4000b0e	            0x7f0a	                            jg 0x4000b1a	      4508	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	IF_9
0x4000b10	            0x29d8	                            sub eax, ebx	      4510	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	IF_9
0x4000b12	          0x894648	             mov dword [rsi + 0x48], eax	      4510	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	IF_9
0x4000b15	      0xe9dd000000	                           jmp 0x4000bf7	      4510	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	IF_9
0x4000b1a	        0x488b7e38	            mov rdi, qword [rsi + 0x38] 	      4514	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	IF_10
0x4000b1e	        0x4883ff01	                              cmp rdi, 1	      4514	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	IF_10
0x4000b22	     0xf84e3000000	                            je 0x4000c0b	      4514	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	IF_10
0x4000b28	        0x4883ef01	                              sub rdi, 1	      4519	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4
0x4000b2c	        0x48897e38	             mov qword [rsi + 0x38], rdi	      4519	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4
0x4000b30	    0xf60500000000	               test byte [0x04000b37], 1	      4523	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	IF_11
0x4000b37	            0x750e	                           jne 0x4000b47	      4523	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	IF_11
0x4000b39	        0x4883c638	                           add rsi, 0x38	      4524	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	IF_11	CALL_6
0x4000b3d	      0xba00000000	                              mov edx, 0	      4524	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	IF_11	CALL_6
0x4000b42	      0xe800000000	                          call 0x4000b47	      4524	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	IF_11	CALL_6
0x4000b47	      0xe800000000	                          call 0x4000b4c	      4527	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	CALL_8
0x4000b4c	          0x4889c7	                            mov rdi, rax	      4527	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	CALL_8
0x4000b4f	      0xe800000000	                          call 0x4000b54	      4527	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	CALL_8
0x4000b54	          0x4189c5	                           mov r13d, eax	      4527	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	CALL_8
0x4000b57	          0x4139c4	                           cmp r12d, eax	      4528	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	IF_12
0x4000b5a	     0xf8d97000000	                           jge 0x4000bf7	      4528	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	IF_12
0x4000b60	    0x488b0d000000	            mov rcx, qword [0x04000b67] 	      4529	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	IF_12
0x4000b67	          0x4429e0	                           sub eax, r12d	      4529	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	IF_12
0x4000b6a	          0x83e801	                              sub eax, 1	      4529	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	IF_12
0x4000b6d	              0x99	                                     cdq	      4529	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	IF_12
0x4000b6e	            0xf7fb	                                idiv ebx	      4529	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	IF_12
0x4000b70	          0x83c001	                              add eax, 1	      4529	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	IF_12
0x4000b73	           0xfafc3	                           imul eax, ebx	      4529	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	IF_12
0x4000b76	           0x14148	             add dword [rcx + 0x48], eax	      4529	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	IF_12
0x4000b79	            0xeb7c	                           jmp 0x4000bf7	      4529	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	IF_12
0x4000b7b	          0x4489e0	                           mov eax, r12d	      4538	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	ELSE_6
0x4000b7e	          0x4539e5	                          cmp r13d, r12d	      4535	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	IF_13
0x4000b81	            0x7e15	                           jle 0x4000b98	      4535	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	IF_13
0x4000b83	          0x4489e8	                           mov eax, r13d	      4536	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	IF_13
0x4000b86	          0x4429e0	                           sub eax, r12d	      4536	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	IF_13
0x4000b89	          0x83e801	                              sub eax, 1	      4536	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	IF_13
0x4000b8c	              0x99	                                     cdq	      4536	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	IF_13
0x4000b8d	            0xf7fb	                                idiv ebx	      4536	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	IF_13
0x4000b8f	          0x83c001	                              add eax, 1	      4536	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	IF_13
0x4000b92	           0xfafc3	                           imul eax, ebx	      4536	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	IF_13
0x4000b95	          0x4401e0	                           add eax, r12d	      4536	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	IF_13
0x4000b98	    0x488b0d000000	            mov rcx, qword [0x04000b9f] 	      4539	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	IF_14
0x4000b9f	            0x89da	                            mov edx, ebx	      4539	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	IF_14
0x4000ba1	           0x35148	             add edx, dword [rcx + 0x48]	      4539	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	IF_14
0x4000ba4	            0x39d0	                            cmp eax, edx	      4539	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	IF_14
0x4000ba6	            0x7e05	                           jle 0x4000bad	      4539	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	IF_14
0x4000ba8	          0x895148	             mov dword [rcx + 0x48], edx	      4541	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	IF_14
0x4000bab	            0xeb4a	                           jmp 0x4000bf7	      4541	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	IF_14
0x4000bad	        0x488d5138	                   lea rdx, [rcx + 0x38]	      4547	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	ELSE_7	CALL_9
0x4000bb1	        0x488b7938	            mov rdi, qword [rcx + 0x38] 	      4547	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	ELSE_7	CALL_9
0x4000bb5	      0xbe00000000	                              mov esi, 0	      4547	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	ELSE_7	CALL_9
0x4000bba	      0xe800000000	                          call 0x4000bbf	      4547	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	ELSE_7	CALL_9
0x4000bbf	    0x488b0d000000	            mov rcx, qword [0x04000bc6] 	      4550	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	ELSE_7	IF_15
0x4000bc6	        0x488b4138	            mov rax, qword [rcx + 0x38] 	      4550	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	ELSE_7	IF_15
0x4000bca	    0x488b15000000	            mov rdx, qword [0x04000bd1] 	      4550	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	ELSE_7	IF_15
0x4000bd1	          0x483b02	                    cmp rax, qword [rdx]	      4550	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	ELSE_7	IF_15
0x4000bd4	            0x743c	                            je 0x4000c12	      4550	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	ELSE_7	IF_15
0x4000bd6	        0x4883c001	                              add rax, 1	      4555	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	ELSE_7
0x4000bda	        0x48894138	             mov qword [rcx + 0x38], rax	      4555	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	ELSE_7
0x4000bde	          0x8b4148	            mov eax, dword [rcx + 0x48] 	      4556	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	ELSE_7
0x4000be1	              0x99	                                     cdq	      4556	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	ELSE_7
0x4000be2	            0xf7fb	                                idiv ebx	      4556	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	ELSE_7
0x4000be4	          0x895148	             mov dword [rcx + 0x48], edx	      4556	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	ELSE_7
0x4000be7	      0xe800000000	                          call 0x4000bec	      4557	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	ELSE_7	CALL_11
0x4000bec	          0x4889c7	                            mov rdi, rax	      4557	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	ELSE_7	CALL_11
0x4000bef	      0xe800000000	                          call 0x4000bf4	      4557	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	ELSE_7	CALL_11
0x4000bf4	          0x4189c5	                           mov r13d, eax	      4557	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	ELSE_7	CALL_11
0x4000bf7	        0x4883ed01	                              sub rbp, 1	      4557	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	ELSE_7	CALL_11
0x4000bfb	          0x4885ed	                           test rbp, rbp	      4504	normal.c	FUNCTION_46	IF_2	WHILE_1
0x4000bfe	     0xf85f8feffff	                           jne 0x4000afc	      4504	normal.c	FUNCTION_46	IF_2	WHILE_1
0x4000c04	      0xbd01000000	                              mov ebp, 1	      4455	normal.c	FUNCTION_46
0x4000c09	            0xeb0c	                           jmp 0x4000c17	      4455	normal.c	FUNCTION_46
0x4000c0b	      0xbd00000000	                              mov ebp, 0	      4516	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	IF_10
0x4000c10	            0xeb05	                           jmp 0x4000c17	      4516	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	IF_10
0x4000c12	      0xbd00000000	                              mov ebp, 0	      4552	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	ELSE_7	IF_15
0x4000c17	      0xe800000000	                          call 0x4000c1c	      4563	normal.c	FUNCTION_46	IF_16	CALL_12
0x4000c1c	            0x85c0	                           test eax, eax	      4563	normal.c	FUNCTION_46	IF_16	CALL_12
0x4000c1e	            0x7411	                            je 0x4000c31	      4563	normal.c	FUNCTION_46	IF_16	CALL_12
0x4000c20	          0x4584ff	                         test r15b, r15b	      4563	normal.c	FUNCTION_46	IF_16	CALL_12
0x4000c23	            0x740c	                            je 0x4000c31	      4563	normal.c	FUNCTION_46	IF_16	CALL_12
0x4000c25	      0xbfffffff7f	                     mov edi, 0x7fffffff	      4564	normal.c	FUNCTION_46	CALL_13
0x4000c2a	      0xe800000000	                          call 0x4000c2f	      4564	normal.c	FUNCTION_46	CALL_13
0x4000c2f	            0xeb0f	                           jmp 0x4000c40	      4564	normal.c	FUNCTION_46	CALL_13
0x4000c31	    0x488b05000000	            mov rax, qword [0x04000c38] 	      4566	normal.c	FUNCTION_46	CALL_14
0x4000c38	          0x8b7848	            mov edi, dword [rax + 0x48] 	      4566	normal.c	FUNCTION_46	CALL_14
0x4000c3b	      0xe800000000	                          call 0x4000c40	      4566	normal.c	FUNCTION_46	CALL_14
0x4000c40	    0x488b05000000	            mov rax, qword [0x04000c47] 	      4569	normal.c	FUNCTION_46	IF_17
0x4000c47	        0x83784000	               cmp dword [rax + 0x40], 0	      4569	normal.c	FUNCTION_46	IF_17
0x4000c4b	            0x7e79	                           jle 0x4000cc6	      4569	normal.c	FUNCTION_46	IF_17
0x4000c4d	    0x83b894020000	              cmp dword [rax + 0x294], 0	      4569	normal.c	FUNCTION_46	IF_17
0x4000c54	            0x7470	                            je 0x4000cc6	      4569	normal.c	FUNCTION_46	IF_17
0x4000c56	      0xe800000000	                          call 0x4000c5b	      4578	normal.c	FUNCTION_46	IF_17	CALL_15
0x4000c5b	    0x488b05000000	            mov rax, qword [0x04000c62] 	      4579	normal.c	FUNCTION_46	IF_17
0x4000c62	    0x448ba8d80000	           mov r13d, dword [rax + 0xd8] 	      4579	normal.c	FUNCTION_46	IF_17
0x4000c69	          0x4539ec	                          cmp r12d, r13d	      4581	normal.c	FUNCTION_46	IF_17	IF_18
0x4000c6c	            0x7d14	                           jge 0x4000c82	      4581	normal.c	FUNCTION_46	IF_17	IF_18
0x4000c6e	    0x488b3d000000	            mov rdi, qword [0x04000c75] 	      4581	normal.c	FUNCTION_46	IF_17	IF_18
0x4000c75	          0x803f00	                       cmp byte [rdi], 0	      4581	normal.c	FUNCTION_46	IF_17	IF_18
0x4000c78	            0x7408	                            je 0x4000c82	      4581	normal.c	FUNCTION_46	IF_17	IF_18
0x4000c7a	      0xe800000000	                          call 0x4000c7f	      4582	normal.c	FUNCTION_46	IF_17	CALL_16
0x4000c7f	          0x4129c5	                           sub r13d, eax	      4582	normal.c	FUNCTION_46	IF_17	CALL_16
0x4000c82	    0x488b0d000000	            mov rcx, qword [0x04000c89] 	      4585	normal.c	FUNCTION_46	IF_17	IF_19
0x4000c89	          0x8b4148	            mov eax, dword [rcx + 0x48] 	      4585	normal.c	FUNCTION_46	IF_17	IF_19
0x4000c8c	          0x4139c5	                           cmp r13d, eax	      4585	normal.c	FUNCTION_46	IF_17	IF_19
0x4000c8f	            0x7e35	                           jle 0x4000cc6	      4585	normal.c	FUNCTION_46	IF_17	IF_19
0x4000c91	          0x4139c4	                           cmp r12d, eax	      4586	normal.c	FUNCTION_46	IF_17	IF_19
0x4000c94	            0x7e14	                           jle 0x4000caa	      4586	normal.c	FUNCTION_46	IF_17	IF_19
0x4000c96	          0x4489e2	                           mov edx, r12d	      4586	normal.c	FUNCTION_46	IF_17	IF_19
0x4000c99	          0xc1ea1f	                           shr edx, 0x1f	      4586	normal.c	FUNCTION_46	IF_17	IF_19
0x4000c9c	          0x4101d4	                           add r12d, edx	      4586	normal.c	FUNCTION_46	IF_17	IF_19
0x4000c9f	          0x41d1fc	                             sar r12d, 1	      4586	normal.c	FUNCTION_46	IF_17	IF_19
0x4000ca2	          0x4439e0	                           cmp eax, r12d	      4586	normal.c	FUNCTION_46	IF_17	IF_19
0x4000ca5	           0xf9fc0	                                 setg al	      4586	normal.c	FUNCTION_46	IF_17	IF_19
0x4000ca8	            0xeb14	                           jmp 0x4000cbe	      4586	normal.c	FUNCTION_46	IF_17	IF_19
0x4000caa	          0x4429e0	                           sub eax, r12d	      4586	normal.c	FUNCTION_46	IF_17	IF_19
0x4000cad	              0x99	                                     cdq	      4586	normal.c	FUNCTION_46	IF_17	IF_19
0x4000cae	            0xf7fb	                                idiv ebx	      4586	normal.c	FUNCTION_46	IF_17	IF_19
0x4000cb0	            0x89d8	                            mov eax, ebx	      4586	normal.c	FUNCTION_46	IF_17	IF_19
0x4000cb2	          0xc1e81f	                           shr eax, 0x1f	      4586	normal.c	FUNCTION_46	IF_17	IF_19
0x4000cb5	             0x1c3	                            add ebx, eax	      4586	normal.c	FUNCTION_46	IF_17	IF_19
0x4000cb7	            0xd1fb	                              sar ebx, 1	      4586	normal.c	FUNCTION_46	IF_17	IF_19
0x4000cb9	            0x39da	                            cmp edx, ebx	      4586	normal.c	FUNCTION_46	IF_17	IF_19
0x4000cbb	           0xf9fc0	                                 setg al	      4586	normal.c	FUNCTION_46	IF_17	IF_19
0x4000cbe	            0x84c0	                             test al, al	      4586	normal.c	FUNCTION_46	IF_17	IF_19
0x4000cc0	            0x7404	                            je 0x4000cc6	      4586	normal.c	FUNCTION_46	IF_17	IF_19
0x4000cc2	        0x83694001	               sub dword [rcx + 0x40], 1	      4590	normal.c	FUNCTION_46	IF_17	IF_19
0x4000cc6	          0x4584ff	                         test r15b, r15b	      4594	normal.c	FUNCTION_46	IF_20
0x4000cc9	            0x7425	                            je 0x4000cf0	      4594	normal.c	FUNCTION_46	IF_20
0x4000ccb	    0x488b05000000	            mov rax, qword [0x04000cd2] 	      4595	normal.c	FUNCTION_46	IF_20
0x4000cd2	    0xc74048ffffff	     mov dword [rax + 0x48], 0x7fffffff 	      4595	normal.c	FUNCTION_46	IF_20
0x4000cd9	            0xeb15	                           jmp 0x4000cf0	      4597	normal.c	FUNCTION_46
0x4000cdb	      0xe800000000	                          call 0x4000ce0	      4563	normal.c	FUNCTION_46	IF_16	CALL_12
0x4000ce0	    0x41bf00000000	                             mov r15d, 0	      4563	normal.c	FUNCTION_46	IF_16	CALL_12
0x4000ce6	      0xbd01000000	                              mov ebp, 1	      4455	normal.c	FUNCTION_46
0x4000ceb	      0xe941ffffff	                           jmp 0x4000c31	      4455	normal.c	FUNCTION_46
0x4000cf0	            0x89e8	                            mov eax, ebp	      4598	normal.c	FUNCTION_46
0x4000cf2	        0x4883c408	                              add rsp, 8	      4598	normal.c	FUNCTION_46
0x4000cf6	              0x5b	                                 pop rbx	      4598	normal.c	FUNCTION_46
0x4000cf7	              0x5d	                                 pop rbp	      4598	normal.c	FUNCTION_46
0x4000cf8	            0x415c	                                 pop r12	      4598	normal.c	FUNCTION_46
0x4000cfa	            0x415d	                                 pop r13	      4598	normal.c	FUNCTION_46
0x4000cfc	            0x415e	                                 pop r14	      4598	normal.c	FUNCTION_46
0x4000cfe	            0x415f	                                 pop r15	      4598	normal.c	FUNCTION_46
0x4000d00	              0xc3	                                     ret	      4598	normal.c	FUNCTION_46
end_visual_mode	CALL,5:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,0:IF,2	37
0x4005801	        0x4883ec08	                              sub rsp, 8	      3301	normal.c	FUNCTION_14
0x4005805	    0x833d00000000	               cmp dword [0x0400580c], 0	      3309	normal.c	FUNCTION_14	IF_1
0x400580c	            0x740e	                            je 0x400581c	      3309	normal.c	FUNCTION_14	IF_1
0x400580e	    0x833d00000000	               cmp dword [0x04005815], 0	      3309	normal.c	FUNCTION_14	IF_1
0x4005815	            0x7405	                            je 0x400581c	      3309	normal.c	FUNCTION_14	IF_1
0x4005817	      0xe800000000	                          call 0x400581c	      3310	normal.c	FUNCTION_14	CALL_1
0x400581c	    0xc70500000000	               mov dword [0x04005826], 0	      3313	normal.c	FUNCTION_14
0x4005826	      0xe800000000	                          call 0x400582b	      3315	normal.c	FUNCTION_14	CALL_2
0x400582b	    0xc70500000000	               mov dword [0x04005835], 0	      3316	normal.c	FUNCTION_14
0x4005835	    0x488b05000000	            mov rax, qword [0x0400583c] 	      3320	normal.c	FUNCTION_14
0x400583c	    0x8b1500000000	            mov edx, dword [0x04005842] 	      3320	normal.c	FUNCTION_14
0x4005842	    0x899018030000	            mov dword [rax + 0x318], edx	      3320	normal.c	FUNCTION_14
0x4005848	    0x488b35000000	            mov rsi, qword [0x0400584f] 	      3321	normal.c	FUNCTION_14
0x400584f	    0x488b3d000000	            mov rdi, qword [0x04005856] 	      3321	normal.c	FUNCTION_14
0x4005856	    0x4889b0f80200	            mov qword [rax + 0x2f8], rsi	      3321	normal.c	FUNCTION_14
0x400585d	    0x4889b8000300	            mov qword [rax + 0x300], rdi	      3321	normal.c	FUNCTION_14
0x4005864	    0x488b0d000000	            mov rcx, qword [0x0400586b] 	      3322	normal.c	FUNCTION_14
0x400586b	        0x488b7138	            mov rsi, qword [rcx + 0x38] 	      3322	normal.c	FUNCTION_14
0x400586f	        0x488b7940	            mov rdi, qword [rcx + 0x40] 	      3322	normal.c	FUNCTION_14
0x4005873	    0x4889b0080300	            mov qword [rax + 0x308], rsi	      3322	normal.c	FUNCTION_14
0x400587a	    0x4889b8100300	            mov qword [rax + 0x310], rdi	      3322	normal.c	FUNCTION_14
0x4005881	          0x8b4948	            mov ecx, dword [rcx + 0x48] 	      3323	normal.c	FUNCTION_14
0x4005884	    0x89881c030000	            mov dword [rax + 0x31c], ecx	      3323	normal.c	FUNCTION_14
0x400588a	    0x899020030000	            mov dword [rax + 0x320], edx	      3325	normal.c	FUNCTION_14
0x4005890	      0xe800000000	                          call 0x4005895	      3328	normal.c	FUNCTION_14	IF_2	CALL_3
0x4005895	            0x85c0	                           test eax, eax	      3328	normal.c	FUNCTION_14	IF_2	CALL_3
0x4005897	            0x750e	                           jne 0x40058a7	      3328	normal.c	FUNCTION_14	IF_2	CALL_3
0x4005899	    0x488b05000000	            mov rax, qword [0x040058a0] 	      3329	normal.c	FUNCTION_14	IF_2
0x40058a0	    0xc74044000000	               mov dword [rax + 0x44], 0	      3329	normal.c	FUNCTION_14	IF_2
0x40058a7	    0x833d00000000	               cmp dword [0x040058ae], 0	      3714	normal.c	FUNCTION_27	IF_1
0x40058ae	            0x740c	                            je 0x40058bc	      3714	normal.c	FUNCTION_27	IF_1
0x40058b0	    0xc70500000000	               mov dword [0x040058ba], 1	      3715	normal.c	FUNCTION_27	IF_1
0x40058ba	            0xeb05	                           jmp 0x40058c1	      3715	normal.c	FUNCTION_27	IF_1
0x40058bc	      0xe800000000	                          call 0x40058c1	      3718	normal.c	FUNCTION_27	CALL_1
0x40058c1	      0xe800000000	                          call 0x40058c6	      3333	normal.c	FUNCTION_14	CALL_5
0x40058c6	        0x4883c408	                              add rsp, 8	      3334	normal.c	FUNCTION_14
0x40058ca	              0xc3	                                     ret	      3334	normal.c	FUNCTION_14
adjust_for_sel	CALL,3:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,1:IF,2	42
0x400039e	    0x833d00000000	               cmp dword [0x040003a5], 0	      8846	normal.c	FUNCTION_122	IF_1
0x40003a5	     0xf8484000000	                            je 0x400042f	      8846	normal.c	FUNCTION_122	IF_1
0x40003ab	          0x488b07	                    mov rax, qword [rdi]	      8846	normal.c	FUNCTION_122	IF_1
0x40003ae	        0x83781400	               cmp dword [rax + 0x14], 0	      8846	normal.c	FUNCTION_122	IF_1
0x40003b2	            0x747b	                            je 0x400042f	      8846	normal.c	FUNCTION_122	IF_1
0x40003b4	    0x488b05000000	            mov rax, qword [0x040003bb] 	      8846	normal.c	FUNCTION_122	IF_1
0x40003bb	          0x803865	                    cmp byte [rax], 0x65	      8846	normal.c	FUNCTION_122	IF_1
0x40003be	            0x756f	                           jne 0x400042f	      8846	normal.c	FUNCTION_122	IF_1
0x40003c0	              0x53	                                push rbx	      8845	normal.c	FUNCTION_122
0x40003c1	          0x4889fb	                            mov rbx, rdi	      8845	normal.c	FUNCTION_122
0x40003c4	      0xe800000000	                          call 0x40003c9	      8847	normal.c	FUNCTION_122	IF_1	CALL_2
0x40003c9	            0x85c0	                           test eax, eax	      8847	normal.c	FUNCTION_122	IF_1	CALL_2
0x40003cb	            0x7461	                            je 0x400042e	      8847	normal.c	FUNCTION_122	IF_1	CALL_2
0x40003cd	    0x488b0d000000	            mov rcx, qword [0x040003d4] 	      8847	normal.c	FUNCTION_122	IF_1	CALL_2
0x40003d4	    0x488b05000000	            mov rax, qword [0x040003db] 	      8847	normal.c	FUNCTION_122	IF_1	CALL_2
0x40003db	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      8847	normal.c	FUNCTION_122	IF_1	CALL_2
0x40003df	          0x4839d1	                            cmp rcx, rdx	      8847	normal.c	FUNCTION_122	IF_1	CALL_2
0x40003e2	            0x7408	                            je 0x40003ec	      8847	normal.c	FUNCTION_122	IF_1	CALL_2
0x40003e4	          0x4839d1	                            cmp rcx, rdx	      8847	normal.c	FUNCTION_122	IF_1	CALL_2
0x40003e7	           0xf9cc2	                                 setl dl	      8847	normal.c	FUNCTION_122	IF_1	CALL_2
0x40003ea	            0xeb20	                           jmp 0x400040c	      8847	normal.c	FUNCTION_122	IF_1	CALL_2
0x40003ec	    0x8b0d00000000	            mov ecx, dword [0x040003f2] 	      8847	normal.c	FUNCTION_122	IF_1	CALL_2
0x40003f2	          0x8b5040	            mov edx, dword [rax + 0x40] 	      8847	normal.c	FUNCTION_122	IF_1	CALL_2
0x40003f5	            0x39d1	                            cmp ecx, edx	      8847	normal.c	FUNCTION_122	IF_1	CALL_2
0x40003f7	            0x7407	                            je 0x4000400	      8847	normal.c	FUNCTION_122	IF_1	CALL_2
0x40003f9	            0x39d1	                            cmp ecx, edx	      8847	normal.c	FUNCTION_122	IF_1	CALL_2
0x40003fb	           0xf9cc2	                                 setl dl	      8847	normal.c	FUNCTION_122	IF_1	CALL_2
0x40003fe	            0xeb0c	                           jmp 0x400040c	      8847	normal.c	FUNCTION_122	IF_1	CALL_2
0x4000400	          0x8b7044	            mov esi, dword [rax + 0x44] 	      8847	normal.c	FUNCTION_122	IF_1	CALL_2
0x4000403	    0x393500000000	            cmp dword [0x04000409], esi 	      8847	normal.c	FUNCTION_122	IF_1	CALL_2
0x4000409	           0xf9cc2	                                 setl dl	      8847	normal.c	FUNCTION_122	IF_1	CALL_2
0x400040c	            0x84d2	                             test dl, dl	      8847	normal.c	FUNCTION_122	IF_1	CALL_2
0x400040e	            0x741e	                            je 0x400042e	      8847	normal.c	FUNCTION_122	IF_1	CALL_2
0x4000410	    0x833d00000000	               cmp dword [0x04000417], 0	      8850	normal.c	FUNCTION_122	IF_1	IF_2
0x4000417	            0x7407	                            je 0x4000420	      8850	normal.c	FUNCTION_122	IF_1	IF_2
0x4000419	      0xe800000000	                          call 0x400041e	      8851	normal.c	FUNCTION_122	IF_1	CALL_3
0x400041e	            0xeb04	                           jmp 0x4000424	      8851	normal.c	FUNCTION_122	IF_1	CALL_3
0x4000420	        0x83404001	               add dword [rax + 0x40], 1	      8854	normal.c	FUNCTION_122	IF_1	ELSE_1
0x4000424	          0x488b03	                    mov rax, qword [rbx]	      8855	normal.c	FUNCTION_122	IF_1	ELSE_1
0x4000427	    0xc74014000000	               mov dword [rax + 0x14], 0	      8855	normal.c	FUNCTION_122	IF_1	ELSE_1
0x400042e	              0x5b	                                 pop rbx	      8857	normal.c	FUNCTION_122	ELSE_1
0x400042f	            0xf3c3	                                     ret	      8857	normal.c	FUNCTION_122	ELSE_1
normal_search	CALL,4:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,1:IF,3	49
0x4002e59	              0x55	                                push rbp	      6378	normal.c	FUNCTION_79
0x4002e5a	              0x53	                                push rbx	      6378	normal.c	FUNCTION_79
0x4002e5b	        0x4883ec10	                           sub rsp, 0x10	      6378	normal.c	FUNCTION_79
0x4002e5f	          0x4889fb	                            mov rbx, rdi	      6378	normal.c	FUNCTION_79
0x4002e62	          0x488b07	                    mov rax, qword [rdi]	      6381	normal.c	FUNCTION_79
0x4002e65	    0xc74008000000	                  mov dword [rax + 8], 0	      6381	normal.c	FUNCTION_79
0x4002e6c	          0x488b07	                    mov rax, qword [rdi]	      6382	normal.c	FUNCTION_79
0x4002e6f	    0xc74014000000	               mov dword [rax + 0x14], 0	      6382	normal.c	FUNCTION_79
0x4002e76	          0x488b07	                    mov rax, qword [rdi]	      6383	normal.c	FUNCTION_79
0x4002e79	    0xc74010010000	               mov dword [rax + 0x10], 1	      6383	normal.c	FUNCTION_79
0x4002e80	    0x488b05000000	            mov rax, qword [0x04002e87] 	      6384	normal.c	FUNCTION_79
0x4002e87	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      6384	normal.c	FUNCTION_79
0x4002e8e	            0x6a00	                                  push 0	      6386	normal.c	FUNCTION_79	CALL_1
0x4002e90	    0x41b900000000	                              mov r9d, 0	      6386	normal.c	FUNCTION_79	CALL_1
0x4002e96	          0x83c91e	                            or ecx, 0x1e	      6386	normal.c	FUNCTION_79	CALL_1
0x4002e99	          0x4189c8	                            mov r8d, ecx	      6386	normal.c	FUNCTION_79	CALL_1
0x4002e9c	        0x488b4f30	            mov rcx, qword [rdi + 0x30] 	      6386	normal.c	FUNCTION_79	CALL_1
0x4002ea0	          0x488b3f	                    mov rdi, qword [rdi]	      6386	normal.c	FUNCTION_79	CALL_1
0x4002ea3	      0xe800000000	                          call 0x4002ea8	      6386	normal.c	FUNCTION_79	CALL_1
0x4002ea8	            0x89c5	                            mov ebp, eax	      6386	normal.c	FUNCTION_79	CALL_1
0x4002eaa	        0x4883c410	                           add rsp, 0x10	      6388	normal.c	FUNCTION_79	IF_1
0x4002eae	            0x85c0	                           test eax, eax	      6388	normal.c	FUNCTION_79	IF_1
0x4002eb0	            0x7520	                           jne 0x4002ed2	      6388	normal.c	FUNCTION_79	IF_1
0x4002eb2	          0x488b03	                    mov rax, qword [rbx]	      6389	normal.c	FUNCTION_79	CALL_2
0x4002eb5	    0xc70000000000	                      mov dword [rax], 0	      3676	normal.c	FUNCTION_24
0x4002ebb	    0xc74004000000	                  mov dword [rax + 4], 0	      3677	normal.c	FUNCTION_24
0x4002ec2	    0xc7400c000000	                mov dword [rax + 0xc], 0	      3678	normal.c	FUNCTION_24
0x4002ec9	    0xc74010000000	               mov dword [rax + 0x10], 0	      3679	normal.c	FUNCTION_24
0x4002ed0	            0xeb3c	                           jmp 0x4002f0e	      3679	normal.c	FUNCTION_24
0x4002ed2	          0x83f802	                              cmp eax, 2	      6392	normal.c	FUNCTION_79	ELSE_1	IF_2
0x4002ed5	            0x750a	                           jne 0x4002ee1	      6392	normal.c	FUNCTION_79	ELSE_1	IF_2
0x4002ed7	          0x488b03	                    mov rax, qword [rbx]	      6393	normal.c	FUNCTION_79	ELSE_1	IF_2
0x4002eda	    0xc74008010000	                  mov dword [rax + 8], 1	      6393	normal.c	FUNCTION_79	ELSE_1	IF_2
0x4002ee1	    0x488b05000000	            mov rax, qword [0x04002ee8] 	      6395	normal.c	FUNCTION_79	ELSE_1
0x4002ee8	    0xc74044000000	               mov dword [rax + 0x44], 0	      6395	normal.c	FUNCTION_79	ELSE_1
0x4002eef	          0x488b03	                    mov rax, qword [rbx]	      6398	normal.c	FUNCTION_79	ELSE_1	IF_3
0x4002ef2	          0x833800	                      cmp dword [rax], 0	      6398	normal.c	FUNCTION_79	ELSE_1	IF_3
0x4002ef5	            0x7517	                           jne 0x4002f0e	      6398	normal.c	FUNCTION_79	ELSE_1	IF_3
0x4002ef7	    0xf60500000000	           test byte [0x04002efe], 0x40 	      6398	normal.c	FUNCTION_79	ELSE_1	IF_3
0x4002efe	            0x740e	                            je 0x4002f0e	      6398	normal.c	FUNCTION_79	ELSE_1	IF_3
0x4002f00	    0x833d00000000	               cmp dword [0x04002f07], 0	      6398	normal.c	FUNCTION_79	ELSE_1	IF_3
0x4002f07	            0x7405	                            je 0x4002f0e	      6398	normal.c	FUNCTION_79	ELSE_1	IF_3
0x4002f09	      0xe800000000	                          call 0x4002f0e	      6399	normal.c	FUNCTION_79	ELSE_1	CALL_3
0x4002f0e	      0xe800000000	                          call 0x4002f13	      6405	normal.c	FUNCTION_79	CALL_4
0x4002f13	            0x89e8	                            mov eax, ebp	      6407	normal.c	FUNCTION_79
0x4002f15	        0x4883c408	                              add rsp, 8	      6407	normal.c	FUNCTION_79
0x4002f19	              0x5b	                                 pop rbx	      6407	normal.c	FUNCTION_79
0x4002f1a	              0x5d	                                 pop rbp	      6407	normal.c	FUNCTION_79
0x4002f1b	              0xc3	                                     ret	      6407	normal.c	FUNCTION_79
prep_redo_cmd	CALL,1:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,0:IF,0	14
0x40004c9	        0x4883ec10	                           sub rsp, 0x10	      3605	normal.c	FUNCTION_20
0x40004cd	          0x4889f8	                            mov rax, rdi	      3605	normal.c	FUNCTION_20
0x40004d0	          0x8b4f0c	              mov ecx, dword [rdi + 0xc]	      3606	normal.c	FUNCTION_20	CALL_1
0x40004d3	        0x488b7728	            mov rsi, qword [rdi + 0x28] 	      3606	normal.c	FUNCTION_20	CALL_1
0x40004d7	          0x488b17	                    mov rdx, qword [rdi]	      3606	normal.c	FUNCTION_20	CALL_1
0x40004da	          0x8b7a04	                mov edi, dword [rdx + 4]	      3606	normal.c	FUNCTION_20	CALL_1
0x40004dd	          0x8b4010	            mov eax, dword [rax + 0x10] 	      3606	normal.c	FUNCTION_20	CALL_1
0x40004e0	              0x50	                                push rax	      3606	normal.c	FUNCTION_20	CALL_1
0x40004e1	    0x41b900000000	                              mov r9d, 0	      3606	normal.c	FUNCTION_20	CALL_1
0x40004e7	    0x41b800000000	                              mov r8d, 0	      3606	normal.c	FUNCTION_20	CALL_1
0x40004ed	      0xba00000000	                              mov edx, 0	      3606	normal.c	FUNCTION_20	CALL_1
0x40004f2	      0xe83affffff	                      call sym.prep_redo	      3606	normal.c	FUNCTION_20	CALL_1
0x40004f7	        0x4883c418	                           add rsp, 0x18	      3608	normal.c	FUNCTION_20
0x40004fb	              0xc3	                                     ret	      3608	normal.c	FUNCTION_20
set_vcount_ca	CALL,1:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,0:IF,1	19
0x4002551	              0x53	                                push rbx	      1332	normal.c	FUNCTION_5
0x4002552	          0x4889f3	                            mov rbx, rsi	      1332	normal.c	FUNCTION_5
0x4002555	        0x488b4728	            mov rax, qword [rdi + 0x28] 	      1333	normal.c	FUNCTION_5
0x4002559	        0x488b5720	            mov rdx, qword [rdi + 0x20] 	      1336	normal.c	FUNCTION_5	IF_1
0x400255d	          0x4885d2	                           test rdx, rdx	      1336	normal.c	FUNCTION_5	IF_1
0x4002560	            0x7410	                            je 0x4002572	      1336	normal.c	FUNCTION_5	IF_1
0x4002562	          0x4885c0	                           test rax, rax	      1337	normal.c	FUNCTION_5	IF_1
0x4002565	      0xbf01000000	                              mov edi, 1	      1337	normal.c	FUNCTION_5	IF_1
0x400256a	        0x480f44c7	                          cmove rax, rdi	      1337	normal.c	FUNCTION_5	IF_1
0x400256e	        0x480fafc2	                           imul rax, rdx	      1337	normal.c	FUNCTION_5	IF_1
0x4002572	            0x8b13	                    mov edx, dword [rbx]	      1338	normal.c	FUNCTION_5	CALL_1
0x4002574	          0x4885c0	                           test rax, rax	      1338	normal.c	FUNCTION_5	CALL_1
0x4002577	      0xbe01000000	                              mov esi, 1	      1338	normal.c	FUNCTION_5	CALL_1
0x400257c	        0x480f45f0	                         cmovne rsi, rax	      1338	normal.c	FUNCTION_5	CALL_1
0x4002580	          0x4889c7	                            mov rdi, rax	      1338	normal.c	FUNCTION_5	CALL_1
0x4002583	      0xe800000000	                          call 0x4002588	      1338	normal.c	FUNCTION_5	CALL_1
0x4002588	    0xc70300000000	                      mov dword [rbx], 0	      1339	normal.c	FUNCTION_5
0x400258e	              0x5b	                                 pop rbx	      1340	normal.c	FUNCTION_5
0x400258f	              0xc3	                                     ret	      1340	normal.c	FUNCTION_5
nv_Replace	CALL,8:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,2:IF,4	41
0x4001ffa	              0x53	                                push rbx	      7253	normal.c	FUNCTION_90
0x4001ffb	          0x4889fb	                            mov rbx, rdi	      7253	normal.c	FUNCTION_90
0x4001ffe	    0x833d00000000	               cmp dword [0x04002005], 0	      7254	normal.c	FUNCTION_90	IF_1
0x4002005	            0x742b	                            je 0x4002032	      7254	normal.c	FUNCTION_90	IF_1
0x4002007	    0xc7470c630000	            mov dword [rdi + 0xc], 0x63 	      7256	normal.c	FUNCTION_90	IF_1
0x400200e	    0xc74710000000	               mov dword [rdi + 0x10], 0	      7257	normal.c	FUNCTION_90	IF_1
0x4002015	    0x8b0500000000	            mov eax, dword [0x0400201b] 	      7258	normal.c	FUNCTION_90	IF_1
0x400201b	    0x890500000000	            mov dword [0x04002021], eax 	      7258	normal.c	FUNCTION_90	IF_1
0x4002021	    0xc70500000000	           mov dword [0x0400202b], 0x56 	      7259	normal.c	FUNCTION_90	IF_1
0x400202b	      0xe82efbffff	                    call sym.nv_operator	      7260	normal.c	FUNCTION_90	IF_1	CALL_1
0x4002030	            0xeb6d	                           jmp 0x400209f	      7260	normal.c	FUNCTION_90	IF_1	CALL_1
0x4002032	          0x488b3f	                    mov rdi, qword [rdi]	      7262	normal.c	FUNCTION_90	ELSE_1	IF_2	CALL_2
0x4002035	      0xe827e2ffff	                  call sym.checkclearopq	      7262	normal.c	FUNCTION_90	ELSE_1	IF_2	CALL_2
0x400203a	            0x85c0	                           test eax, eax	      7262	normal.c	FUNCTION_90	ELSE_1	IF_2	CALL_2
0x400203c	            0x7561	                           jne 0x400209f	      7262	normal.c	FUNCTION_90	ELSE_1	IF_2	CALL_2
0x400203e	    0x488b05000000	            mov rax, qword [0x04002045] 	      7264	normal.c	FUNCTION_90	ELSE_1	IF_2	IF_3
0x4002045	    0x83b840150000	             cmp dword [rax + 0x1540], 0	      7264	normal.c	FUNCTION_90	ELSE_1	IF_2	IF_3
0x400204c	            0x751e	                           jne 0x400206c	      7264	normal.c	FUNCTION_90	ELSE_1	IF_2	IF_3
0x400204e	      0xba05000000	                              mov edx, 5	      7265	normal.c	FUNCTION_90	ELSE_1	IF_2	CALL_4
0x4002053	      0xbe00000000	                              mov esi, 0	      7265	normal.c	FUNCTION_90	ELSE_1	IF_2	CALL_4
0x4002058	      0xbf00000000	                              mov edi, 0	      7265	normal.c	FUNCTION_90	ELSE_1	IF_2	CALL_4
0x400205d	      0xe800000000	                          call 0x4002062	      7265	normal.c	FUNCTION_90	ELSE_1	IF_2	CALL_4
0x4002062	          0x4889c7	                            mov rdi, rax	      7265	normal.c	FUNCTION_90	ELSE_1	IF_2	CALL_4
0x4002065	      0xe800000000	                          call 0x400206a	      7265	normal.c	FUNCTION_90	ELSE_1	IF_2	CALL_4
0x400206a	            0xeb33	                           jmp 0x400209f	      7265	normal.c	FUNCTION_90	ELSE_1	IF_2	CALL_4
0x400206c	      0xe800000000	                          call 0x4002071	      7269	normal.c	FUNCTION_90	ELSE_1	IF_2	ELSE_2	IF_4	CALL_5
0x4002071	            0x85c0	                           test eax, eax	      7269	normal.c	FUNCTION_90	ELSE_1	IF_2	ELSE_2	IF_4	CALL_5
0x4002073	            0x740c	                            je 0x4002081	      7269	normal.c	FUNCTION_90	ELSE_1	IF_2	ELSE_2	IF_4	CALL_5
0x4002075	      0xe800000000	                          call 0x400207a	      7270	normal.c	FUNCTION_90	ELSE_1	IF_2	ELSE_2	CALL_7
0x400207a	            0x89c7	                            mov edi, eax	      7270	normal.c	FUNCTION_90	ELSE_1	IF_2	ELSE_2	CALL_7
0x400207c	      0xe800000000	                          call 0x4002081	      7270	normal.c	FUNCTION_90	ELSE_1	IF_2	ELSE_2	CALL_7
0x4002081	        0x837b3801	               cmp dword [rbx + 0x38], 1	      7272	normal.c	FUNCTION_90	ELSE_1	IF_2	ELSE_2	CALL_8
0x4002085	            0x19d2	                            sbb edx, edx	      7272	normal.c	FUNCTION_90	ELSE_1	IF_2	ELSE_2	CALL_8
0x4002087	          0x83e2fc	                     and edx, 0xfffffffc	      7272	normal.c	FUNCTION_90	ELSE_1	IF_2	ELSE_2	CALL_8
0x400208a	          0x83c256	                           add edx, 0x56	      7272	normal.c	FUNCTION_90	ELSE_1	IF_2	ELSE_2	CALL_8
0x400208d	      0xb900000000	                              mov ecx, 0	      7272	normal.c	FUNCTION_90	ELSE_1	IF_2	ELSE_2	CALL_8
0x4002092	      0xbe00000000	                              mov esi, 0	      7272	normal.c	FUNCTION_90	ELSE_1	IF_2	ELSE_2	CALL_8
0x4002097	          0x4889df	                            mov rdi, rbx	      7272	normal.c	FUNCTION_90	ELSE_1	IF_2	ELSE_2	CALL_8
0x400209a	      0xe8d6e6ffff	                    call sym.invoke_edit	      7272	normal.c	FUNCTION_90	ELSE_1	IF_2	ELSE_2	CALL_8
0x400209f	              0x5b	                                 pop rbx	      7275	normal.c	FUNCTION_90
0x40020a0	              0xc3	                                     ret	      7275	normal.c	FUNCTION_90
nv_down	CALL,7:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,5:IF,6	47
0x40023eb	              0x53	                                push rbx	      6191	normal.c	FUNCTION_73
0x40023ec	          0x4889fb	                            mov rbx, rdi	      6191	normal.c	FUNCTION_73
0x40023ef	    0xf60500000000	               test byte [0x040023f6], 2	      6192	normal.c	FUNCTION_73	IF_1
0x40023f6	            0x7411	                            je 0x4002409	      6192	normal.c	FUNCTION_73	IF_1
0x40023f8	    0xc74738010000	               mov dword [rdi + 0x38], 1	      6195	normal.c	FUNCTION_73	IF_1
0x40023ff	      0xe855dfffff	                        call sym.nv_page	      6196	normal.c	FUNCTION_73	IF_1	CALL_1
0x4002404	      0xe999000000	                           jmp 0x40024a2	      6196	normal.c	FUNCTION_73	IF_1	CALL_1
0x4002409	    0x488b3d000000	            mov rdi, qword [0x04002410] 	      6201	normal.c	FUNCTION_73	ELSE_1	IF_2	CALL_2
0x4002410	      0xe800000000	                          call 0x4002415	      6201	normal.c	FUNCTION_73	ELSE_1	IF_2	CALL_2
0x4002415	            0x85c0	                           test eax, eax	      6201	normal.c	FUNCTION_73	ELSE_1	IF_2	CALL_2
0x4002417	            0x742f	                            je 0x4002448	      6201	normal.c	FUNCTION_73	ELSE_1	IF_2	CALL_2
0x4002419	        0x837b0c0d	              cmp dword [rbx + 0xc], 0xd	      6201	normal.c	FUNCTION_73	ELSE_1	IF_2	CALL_2
0x400241d	            0x7544	                           jne 0x4002463	      6201	normal.c	FUNCTION_73	ELSE_1	IF_2	CALL_2
0x400241f	    0x488b05000000	            mov rax, qword [0x04002426] 	      6203	normal.c	FUNCTION_73	ELSE_1	IF_2	IF_3
0x4002426	    0x4883b8501900	             cmp qword [rax + 0x1950], 0	      6203	normal.c	FUNCTION_73	ELSE_1	IF_2	IF_3
0x400242e	            0x750c	                           jne 0x400243c	      6203	normal.c	FUNCTION_73	ELSE_1	IF_2	IF_3
0x4002430	      0xbf00000000	                              mov edi, 0	      6204	normal.c	FUNCTION_73	ELSE_1	IF_2	CALL_3
0x4002435	      0xe800000000	                          call 0x400243a	      6204	normal.c	FUNCTION_73	ELSE_1	IF_2	CALL_3
0x400243a	            0xeb66	                           jmp 0x40024a2	      6204	normal.c	FUNCTION_73	ELSE_1	IF_2	CALL_3
0x400243c	      0xbf00000000	                              mov edi, 0	      6206	normal.c	FUNCTION_73	ELSE_1	IF_2	CALL_4
0x4002441	      0xe800000000	                          call 0x4002446	      6206	normal.c	FUNCTION_73	ELSE_1	IF_2	CALL_4
0x4002446	            0xeb5a	                           jmp 0x40024a2	      6206	normal.c	FUNCTION_73	ELSE_1	IF_2	CALL_4
0x4002448	    0x833d00000000	               cmp dword [0x0400244f], 0	      6213	normal.c	FUNCTION_73	ELSE_3	IF_4
0x400244f	            0x7412	                            je 0x4002463	      6213	normal.c	FUNCTION_73	ELSE_3	IF_4
0x4002451	        0x837b0c0d	              cmp dword [rbx + 0xc], 0xd	      6213	normal.c	FUNCTION_73	ELSE_3	IF_4
0x4002455	            0x750c	                           jne 0x4002463	      6213	normal.c	FUNCTION_73	ELSE_3	IF_4
0x4002457	    0xc70500000000	            mov dword [0x04002461], 0xd 	      6214	normal.c	FUNCTION_73	ELSE_3	IF_4
0x4002461	            0xeb3f	                           jmp 0x40024a2	      6214	normal.c	FUNCTION_73	ELSE_3	IF_4
0x4002463	          0x488b03	                    mov rax, qword [rbx]	      6218	normal.c	FUNCTION_73	ELSE_3	ELSE_4
0x4002466	    0xc74008010000	                  mov dword [rax + 8], 1	      6218	normal.c	FUNCTION_73	ELSE_3	ELSE_4
0x400246d	          0x488b03	                    mov rax, qword [rbx]	      6219	normal.c	FUNCTION_73	ELSE_3	ELSE_4	IF_5	CALL_5
0x4002470	          0x833800	                      cmp dword [rax], 0	      6219	normal.c	FUNCTION_73	ELSE_3	ELSE_4	IF_5	CALL_5
0x4002473	        0x400f94c6	                                sete sil	      6219	normal.c	FUNCTION_73	ELSE_3	ELSE_4	IF_5	CALL_5
0x4002477	        0x400fb6f6	                          movzx esi, sil	      6219	normal.c	FUNCTION_73	ELSE_3	ELSE_4	IF_5	CALL_5
0x400247b	        0x488b7b30	            mov rdi, qword [rbx + 0x30] 	      6219	normal.c	FUNCTION_73	ELSE_3	ELSE_4	IF_5	CALL_5
0x400247f	      0xe800000000	                          call 0x4002484	      6219	normal.c	FUNCTION_73	ELSE_3	ELSE_4	IF_5	CALL_5
0x4002484	            0x85c0	                           test eax, eax	      6219	normal.c	FUNCTION_73	ELSE_3	ELSE_4	IF_5	CALL_5
0x4002486	            0x750a	                           jne 0x4002492	      6219	normal.c	FUNCTION_73	ELSE_3	ELSE_4	IF_5	CALL_5
0x4002488	          0x488b3b	                    mov rdi, qword [rbx]	      6220	normal.c	FUNCTION_73	ELSE_3	ELSE_4	CALL_6
0x400248b	      0xe8a8ddffff	                    call sym.clearopbeep	      6220	normal.c	FUNCTION_73	ELSE_3	ELSE_4	CALL_6
0x4002490	            0xeb10	                           jmp 0x40024a2	      6220	normal.c	FUNCTION_73	ELSE_3	ELSE_4	CALL_6
0x4002492	        0x837b3800	               cmp dword [rbx + 0x38], 0	      6221	normal.c	FUNCTION_73	ELSE_3	ELSE_4	ELSE_5	IF_6
0x4002496	            0x740a	                            je 0x40024a2	      6221	normal.c	FUNCTION_73	ELSE_3	ELSE_4	ELSE_5	IF_6
0x4002498	      0xbf05000000	                              mov edi, 5	      6222	normal.c	FUNCTION_73	ELSE_3	ELSE_4	ELSE_5	IF_6
0x400249d	      0xe800000000	                          call 0x40024a2	      6222	normal.c	FUNCTION_73	ELSE_3	ELSE_4	ELSE_5	IF_6
0x40024a2	              0x5b	                                 pop rbx	      6225	normal.c	FUNCTION_73
0x40024a3	              0xc3	                                     ret	      6225	normal.c	FUNCTION_73
display_showcmd	CALL,5:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,1:IF,1	30
0x4002590	              0x53	                                push rbx	      3955	normal.c	FUNCTION_34
0x4002591	      0xe800000000	                          call 0x4002596	      3958	normal.c	FUNCTION_34	CALL_1
0x4002596	      0xbf00000000	                              mov edi, 0	      3960	normal.c	FUNCTION_34	CALL_2
0x400259b	      0xb800000000	                              mov eax, 0	      3960	normal.c	FUNCTION_34	CALL_2
0x40025a0	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      3960	normal.c	FUNCTION_34	CALL_2
0x40025a7	            0xf2ae	              repne scasb al, byte [rdi]	      3960	normal.c	FUNCTION_34	CALL_2
0x40025a9	          0x48f7d1	                                 not rcx	      3960	normal.c	FUNCTION_34	CALL_2
0x40025ac	        0x488d59ff	                      lea rbx, [rcx - 1]	      3960	normal.c	FUNCTION_34	CALL_2
0x40025b0	            0x85db	                           test ebx, ebx	      3961	normal.c	FUNCTION_34	IF_1
0x40025b2	            0x750c	                           jne 0x40025c0	      3961	normal.c	FUNCTION_34	IF_1
0x40025b4	    0xc70500000000	               mov dword [0x040025be], 1	      3962	normal.c	FUNCTION_34	IF_1
0x40025be	            0xeb28	                           jmp 0x40025e8	      3962	normal.c	FUNCTION_34	IF_1
0x40025c0	    0x8b0500000000	            mov eax, dword [0x040025c6] 	      3965	normal.c	FUNCTION_34	ELSE_1	CALL_3
0x40025c6	          0x8d70ff	                      lea esi, [rax - 1]	      3965	normal.c	FUNCTION_34	ELSE_1	CALL_3
0x40025c9	      0xb900000000	                              mov ecx, 0	      3965	normal.c	FUNCTION_34	ELSE_1	CALL_3
0x40025ce	    0x8b1500000000	            mov edx, dword [0x040025d4] 	      3965	normal.c	FUNCTION_34	ELSE_1	CALL_3
0x40025d4	      0xbf00000000	                              mov edi, 0	      3965	normal.c	FUNCTION_34	ELSE_1	CALL_3
0x40025d9	      0xe800000000	                          call 0x40025de	      3965	normal.c	FUNCTION_34	ELSE_1	CALL_3
0x40025de	    0xc70500000000	               mov dword [0x040025e8], 0	      3966	normal.c	FUNCTION_34	ELSE_1
0x40025e8	            0x89da	                            mov edx, ebx	      3973	normal.c	FUNCTION_34	CALL_4
0x40025ea	     0x31500000000	             add edx, dword [0x040025f0]	      3973	normal.c	FUNCTION_34	CALL_4
0x40025f0	    0x8b0500000000	            mov eax, dword [0x040025f6] 	      3973	normal.c	FUNCTION_34	CALL_4
0x40025f6	          0x8d70ff	                      lea esi, [rax - 1]	      3973	normal.c	FUNCTION_34	CALL_4
0x40025f9	          0x4863fb	                         movsxd rdi, ebx	      3973	normal.c	FUNCTION_34	CALL_4
0x40025fc	    0x4881c7000000	                              add rdi, 0	      3973	normal.c	FUNCTION_34	CALL_4
0x4002603	      0xb900000000	                              mov ecx, 0	      3973	normal.c	FUNCTION_34	CALL_4
0x4002608	      0xe800000000	                          call 0x400260d	      3973	normal.c	FUNCTION_34	CALL_4
0x400260d	      0xe800000000	                          call 0x4002612	      3975	normal.c	FUNCTION_34	CALL_5
0x4002612	              0x5b	                                 pop rbx	      3976	normal.c	FUNCTION_34
0x4002613	              0xc3	                                     ret	      3976	normal.c	FUNCTION_34
nv_dot	CALL,3:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,0:IF,2	20
0x4001688	              0x53	                                push rbx	      8518	normal.c	FUNCTION_109
0x4001689	          0x4889fb	                            mov rbx, rdi	      8518	normal.c	FUNCTION_109
0x400168c	          0x488b3f	                    mov rdi, qword [rdi]	      8519	normal.c	FUNCTION_109	IF_1	CALL_1
0x400168f	      0xe8cdebffff	                  call sym.checkclearopq	      8519	normal.c	FUNCTION_109	IF_1	CALL_1
0x4001694	            0x85c0	                           test eax, eax	      8519	normal.c	FUNCTION_109	IF_1	CALL_1
0x4001696	            0x752e	                           jne 0x40016c6	      8519	normal.c	FUNCTION_109	IF_1	CALL_1
0x4001698	    0x8b3500000000	            mov esi, dword [0x0400169e] 	      8526	normal.c	FUNCTION_109	IF_1	IF_2	CALL_2
0x400169e	            0x85f6	                           test esi, esi	      8526	normal.c	FUNCTION_109	IF_1	IF_2	CALL_2
0x40016a0	            0x740f	                            je 0x40016b1	      8526	normal.c	FUNCTION_109	IF_1	IF_2	CALL_2
0x40016a2	    0x833d00000000	               cmp dword [0x040016a9], 0	      8526	normal.c	FUNCTION_109	IF_1	IF_2	CALL_2
0x40016a9	        0x400f94c6	                                sete sil	      8526	normal.c	FUNCTION_109	IF_1	IF_2	CALL_2
0x40016ad	        0x400fb6f6	                          movzx esi, sil	      8526	normal.c	FUNCTION_109	IF_1	IF_2	CALL_2
0x40016b1	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	      8526	normal.c	FUNCTION_109	IF_1	IF_2	CALL_2
0x40016b5	      0xe800000000	                          call 0x40016ba	      8526	normal.c	FUNCTION_109	IF_1	IF_2	CALL_2
0x40016ba	            0x85c0	                           test eax, eax	      8526	normal.c	FUNCTION_109	IF_1	IF_2	CALL_2
0x40016bc	            0x7508	                           jne 0x40016c6	      8526	normal.c	FUNCTION_109	IF_1	IF_2	CALL_2
0x40016be	          0x488b3b	                    mov rdi, qword [rbx]	      8527	normal.c	FUNCTION_109	IF_1	CALL_3
0x40016c1	      0xe872ebffff	                    call sym.clearopbeep	      8527	normal.c	FUNCTION_109	IF_1	CALL_3
0x40016c6	              0x5b	                                 pop rbx	      8529	normal.c	FUNCTION_109
0x40016c7	              0xc3	                                     ret	      8529	normal.c	FUNCTION_109
find_command	CALL,0:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,1:ELSE,1:IF,6	63
0x4000073	    0x81ffff000000	                           cmp edi, 0xff	       497	normal.c	FUNCTION_3	IF_1
0x4000079	     0xf8fc1000000	                            jg 0x4000140	       497	normal.c	FUNCTION_3	IF_1
0x400007f	            0x89f8	                            mov eax, edi	       497	normal.c	FUNCTION_3	IF_1
0x4000081	          0xc1f81f	                           sar eax, 0x1f	       497	normal.c	FUNCTION_3	IF_1
0x4000084	            0x31c7	                            xor edi, eax	       497	normal.c	FUNCTION_3	IF_1
0x4000086	            0x29c7	                            sub edi, eax	       497	normal.c	FUNCTION_3	IF_1
0x4000088	    0x8b1500000000	            mov edx, dword [0x0400008e] 	       508	normal.c	FUNCTION_3	IF_3
0x400008e	            0x39fa	                            cmp edx, edi	       508	normal.c	FUNCTION_3	IF_3
0x4000090	            0x7c0c	                            jl 0x400009e	       508	normal.c	FUNCTION_3	IF_3
0x4000092	          0x4863ff	                         movsxd rdi, edi	       509	normal.c	FUNCTION_3	IF_3
0x4000095	     0xfbf843f0000	             movsx eax, word [rdi + rdi]	       509	normal.c	FUNCTION_3	IF_3
0x400009d	              0xc3	                                     ret	       509	normal.c	FUNCTION_3	IF_3
0x400009e	          0x8d7201	                      lea esi, [rdx + 1]	       512	normal.c	FUNCTION_3
0x40000a1	      0xb8ffffffff	                     mov eax, 0xffffffff	       514	normal.c	FUNCTION_3
0x40000a6	    0x81fec1000000	                           cmp esi, 0xc1	       515	normal.c	FUNCTION_3	WHILE_1
0x40000ac	     0xf8f93000000	                            jg 0x4000145	       515	normal.c	FUNCTION_3	WHILE_1
0x40000b2	    0x81c2c2000000	                           add edx, 0xc2	       517	normal.c	FUNCTION_3	WHILE_1
0x40000b8	            0x89d0	                            mov eax, edx	       517	normal.c	FUNCTION_3	WHILE_1
0x40000ba	          0xc1e81f	                           shr eax, 0x1f	       517	normal.c	FUNCTION_3	WHILE_1
0x40000bd	             0x1c2	                            add edx, eax	       517	normal.c	FUNCTION_3	WHILE_1
0x40000bf	            0xd1fa	                              sar edx, 1	       517	normal.c	FUNCTION_3	WHILE_1
0x40000c1	          0x4189d1	                            mov r9d, edx	       517	normal.c	FUNCTION_3	WHILE_1
0x40000c4	          0x4863d2	                         movsxd rdx, edx	       518	normal.c	FUNCTION_3	WHILE_1
0x40000c7	     0xfbf84120000	             movsx eax, word [rdx + rdx]	       518	normal.c	FUNCTION_3	WHILE_1
0x40000cf	          0x4863d0	                         movsxd rdx, eax	       518	normal.c	FUNCTION_3	WHILE_1
0x40000d2	        0x488d1452	                  lea rdx, [rdx + rdx*2]	       518	normal.c	FUNCTION_3	WHILE_1
0x40000d6	    0x8b14d5000000	                  mov edx, dword [rdx*8]	       518	normal.c	FUNCTION_3	WHILE_1
0x40000dd	            0x89d1	                            mov ecx, edx	       518	normal.c	FUNCTION_3	WHILE_1
0x40000df	          0xc1f91f	                           sar ecx, 0x1f	       518	normal.c	FUNCTION_3	WHILE_1
0x40000e2	            0x31ca	                            xor edx, ecx	       518	normal.c	FUNCTION_3	WHILE_1
0x40000e4	            0x29ca	                            sub edx, ecx	       518	normal.c	FUNCTION_3	WHILE_1
0x40000e6	            0x39d7	                            cmp edi, edx	       521	normal.c	FUNCTION_3	WHILE_1	IF_5
0x40000e8	            0x745b	                            je 0x4000145	       521	normal.c	FUNCTION_3	WHILE_1	IF_5
0x40000ea	    0x41b8c1000000	                           mov r8d, 0xc1	       521	normal.c	FUNCTION_3	WHILE_1	IF_5
0x40000f0	            0xeb35	                           jmp 0x4000127	       521	normal.c	FUNCTION_3	WHILE_1	IF_5
0x40000f2	        0x428d0406	                     lea eax, [rsi + r8]	       517	normal.c	FUNCTION_3	WHILE_1
0x40000f6	            0x89c2	                            mov edx, eax	       517	normal.c	FUNCTION_3	WHILE_1
0x40000f8	          0xc1ea1f	                           shr edx, 0x1f	       517	normal.c	FUNCTION_3	WHILE_1
0x40000fb	             0x1d0	                            add eax, edx	       517	normal.c	FUNCTION_3	WHILE_1
0x40000fd	            0xd1f8	                              sar eax, 1	       517	normal.c	FUNCTION_3	WHILE_1
0x40000ff	          0x4189c1	                            mov r9d, eax	       517	normal.c	FUNCTION_3	WHILE_1
0x4000102	            0x4898	                                    cdqe	       518	normal.c	FUNCTION_3	WHILE_1
0x4000104	     0xfbf84000000	             movsx eax, word [rax + rax]	       518	normal.c	FUNCTION_3	WHILE_1
0x400010c	          0x4863d0	                         movsxd rdx, eax	       518	normal.c	FUNCTION_3	WHILE_1
0x400010f	        0x488d1452	                  lea rdx, [rdx + rdx*2]	       518	normal.c	FUNCTION_3	WHILE_1
0x4000113	    0x8b14d5000000	                  mov edx, dword [rdx*8]	       518	normal.c	FUNCTION_3	WHILE_1
0x400011a	            0x89d1	                            mov ecx, edx	       518	normal.c	FUNCTION_3	WHILE_1
0x400011c	          0xc1f91f	                           sar ecx, 0x1f	       518	normal.c	FUNCTION_3	WHILE_1
0x400011f	            0x31ca	                            xor edx, ecx	       518	normal.c	FUNCTION_3	WHILE_1
0x4000121	            0x29ca	                            sub edx, ecx	       518	normal.c	FUNCTION_3	WHILE_1
0x4000123	            0x39d7	                            cmp edi, edx	       521	normal.c	FUNCTION_3	WHILE_1	IF_5
0x4000125	            0x741e	                            je 0x4000145	       521	normal.c	FUNCTION_3	WHILE_1	IF_5
0x4000127	            0x39d7	                            cmp edi, edx	       526	normal.c	FUNCTION_3	WHILE_1	IF_6
0x4000129	            0x7e06	                           jle 0x4000131	       526	normal.c	FUNCTION_3	WHILE_1	IF_6
0x400012b	        0x418d7101	                       lea esi, [r9 + 1]	       527	normal.c	FUNCTION_3	WHILE_1	IF_6
0x400012f	            0xeb04	                           jmp 0x4000135	       527	normal.c	FUNCTION_3	WHILE_1	IF_6
0x4000131	        0x458d41ff	                       lea r8d, [r9 - 1]	       529	normal.c	FUNCTION_3	WHILE_1	ELSE_1
0x4000135	          0x4439c6	                            cmp esi, r8d	       515	normal.c	FUNCTION_3	WHILE_1
0x4000138	            0x7eb8	                           jle 0x40000f2	       515	normal.c	FUNCTION_3	WHILE_1
0x400013a	      0xb8ffffffff	                     mov eax, 0xffffffff	       514	normal.c	FUNCTION_3
0x400013f	              0xc3	                                     ret	       514	normal.c	FUNCTION_3
0x4000140	      0xb8ffffffff	                     mov eax, 0xffffffff	       498	normal.c	FUNCTION_3	IF_1
0x4000145	            0xf3c3	                                     ret	       532	normal.c	FUNCTION_3	ELSE_1
nv_Zet	CALL,4:SWITCH,1:DO,0:FOR,0:functions,0:WHILE,0:ELSE,0:IF,1	21
0x4000802	              0x53	                                push rbx	      5522	normal.c	FUNCTION_64
0x4000803	          0x4889fb	                            mov rbx, rdi	      5522	normal.c	FUNCTION_64
0x4000806	          0x488b3f	                    mov rdi, qword [rdi]	      5523	normal.c	FUNCTION_64	IF_1	CALL_1
0x4000809	      0xe853faffff	                  call sym.checkclearopq	      5523	normal.c	FUNCTION_64	IF_1	CALL_1
0x400080e	            0x85c0	                           test eax, eax	      5523	normal.c	FUNCTION_64	IF_1	CALL_1
0x4000810	            0x752d	                           jne 0x400083f	      5523	normal.c	FUNCTION_64	IF_1	CALL_1
0x4000812	          0x8b4310	            mov eax, dword [rbx + 0x10] 	      5525	normal.c	FUNCTION_64	IF_1	SWITCH_1
0x4000815	          0x83f851	                           cmp eax, 0x51	      5525	normal.c	FUNCTION_64	IF_1	SWITCH_1
0x4000818	            0x7411	                            je 0x400082b	      5525	normal.c	FUNCTION_64	IF_1	SWITCH_1
0x400081a	          0x83f85a	                           cmp eax, 0x5a	      5525	normal.c	FUNCTION_64	IF_1	SWITCH_1
0x400081d	            0x7518	                           jne 0x4000837	      5525	normal.c	FUNCTION_64	IF_1	SWITCH_1
0x400081f	      0xbf00000000	                              mov edi, 0	      5528	normal.c	FUNCTION_64	IF_1	SWITCH_1	CALL_2
0x4000824	      0xe800000000	                          call 0x4000829	      5528	normal.c	FUNCTION_64	IF_1	SWITCH_1	CALL_2
0x4000829	            0xeb14	                           jmp 0x400083f	      5529	normal.c	FUNCTION_64	IF_1	SWITCH_1
0x400082b	      0xbf00000000	                              mov edi, 0	      5532	normal.c	FUNCTION_64	IF_1	SWITCH_1	CALL_3
0x4000830	      0xe800000000	                          call 0x4000835	      5532	normal.c	FUNCTION_64	IF_1	SWITCH_1	CALL_3
0x4000835	            0xeb08	                           jmp 0x400083f	      5533	normal.c	FUNCTION_64	IF_1	SWITCH_1
0x4000837	          0x488b3b	                    mov rdi, qword [rbx]	      5535	normal.c	FUNCTION_64	IF_1	SWITCH_1	CALL_4
0x400083a	      0xe8f9f9ffff	                    call sym.clearopbeep	      5535	normal.c	FUNCTION_64	IF_1	SWITCH_1	CALL_4
0x400083f	              0x5b	                                 pop rbx	      5538	normal.c	FUNCTION_64
0x4000840	              0xc3	                                     ret	      5538	normal.c	FUNCTION_64
nv_mouse	CALL,1:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,0:IF,0	9
0x400a5b2	        0x4883ec08	                              sub rsp, 8	      4677	normal.c	FUNCTION_48
0x400a5b6	        0x488b4f30	            mov rcx, qword [rdi + 0x30] 	      4678	normal.c	FUNCTION_48	CALL_1
0x400a5ba	          0x8b770c	              mov esi, dword [rdi + 0xc]	      4678	normal.c	FUNCTION_48	CALL_1
0x400a5bd	    0x41b800000000	                              mov r8d, 0	      4678	normal.c	FUNCTION_48	CALL_1
0x400a5c3	      0xbaffffffff	                     mov edx, 0xffffffff	      4678	normal.c	FUNCTION_48	CALL_1
0x400a5c8	          0x488b3f	                    mov rdi, qword [rdi]	      4678	normal.c	FUNCTION_48	CALL_1
0x400a5cb	      0xe800000000	                          call 0x400a5d0	      4678	normal.c	FUNCTION_48	CALL_1
0x400a5d0	        0x4883c408	                              add rsp, 8	      4679	normal.c	FUNCTION_48
0x400a5d4	              0xc3	                                     ret	      4679	normal.c	FUNCTION_48
do_mouse	CALL,106:SWITCH,0:DO,0:FOR,1:functions,0:WHILE,1:ELSE,52:IF,135	1286
0x4009023	            0x4157	                                push r15	      2306	normal.c	FUNCTION_9
0x4009025	            0x4156	                                push r14	      2306	normal.c	FUNCTION_9
0x4009027	            0x4155	                                push r13	      2306	normal.c	FUNCTION_9
0x4009029	            0x4154	                                push r12	      2306	normal.c	FUNCTION_9
0x400902b	              0x55	                                push rbp	      2306	normal.c	FUNCTION_9
0x400902c	              0x53	                                push rbx	      2306	normal.c	FUNCTION_9
0x400902d	    0x4881ec880000	                           sub rsp, 0x88	      2306	normal.c	FUNCTION_9
0x4009034	        0x48893c24	                    mov qword [rsp], rdi	      2306	normal.c	FUNCTION_9
0x4009038	            0x89f5	                            mov ebp, esi	      2306	normal.c	FUNCTION_9
0x400903a	        0x8954241c	             mov dword [rsp + 0x1c], edx	      2306	normal.c	FUNCTION_9
0x400903e	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      2306	normal.c	FUNCTION_9
0x4009043	      0x4489442418	             mov dword [rsp + 0x18], r8d	      2306	normal.c	FUNCTION_9
0x4009048	    0x64488b042528	                mov rax, qword fs:[0x28]	      2306	normal.c	FUNCTION_9
0x4009051	      0x4889442478	             mov qword [rsp + 0x78], rax	      2306	normal.c	FUNCTION_9
0x4009056	            0x31c0	                            xor eax, eax	      2306	normal.c	FUNCTION_9
0x4009058	    0x4c8b25000000	            mov r12, qword [0x0400905f] 	      2323	normal.c	FUNCTION_9
0x400905f	    0x8b0500000000	            mov eax, dword [0x04009065] 	      2328	normal.c	FUNCTION_9
0x4009065	        0x8944240c	              mov dword [rsp + 0xc], eax	      2328	normal.c	FUNCTION_9
0x4009069	    0x8b0500000000	            mov eax, dword [0x0400906f] 	      2329	normal.c	FUNCTION_9
0x400906f	        0x89442420	             mov dword [rsp + 0x20], eax	      2329	normal.c	FUNCTION_9
0x4009073	      0x498b442438	            mov rax, qword [r12 + 0x38] 	      2333	normal.c	FUNCTION_9
0x4009078	      0x4889442428	             mov qword [rsp + 0x28], rax	      2333	normal.c	FUNCTION_9
0x400907d	      0x418b442440	            mov eax, dword [r12 + 0x40] 	      2333	normal.c	FUNCTION_9
0x4009082	        0x89442424	             mov dword [rsp + 0x24], eax	      2333	normal.c	FUNCTION_9
0x4009086	      0x418b442444	            mov eax, dword [r12 + 0x44] 	      2333	normal.c	FUNCTION_9
0x400908b	        0x89442430	             mov dword [rsp + 0x30], eax	      2333	normal.c	FUNCTION_9
0x400908f	    0x833d00000000	               cmp dword [0x04009096], 0	      2343	normal.c	FUNCTION_9	IF_1
0x4009096	            0x7413	                            je 0x40090ab	      2343	normal.c	FUNCTION_9	IF_1
0x4009098	    0xc70500000000	               mov dword [0x040090a2], 0	      2344	normal.c	FUNCTION_9	IF_1
0x40090a2	            0x89eb	                            mov ebx, ebp	      2361	normal.c	FUNCTION_9	FOR_1	CALL_4
0x40090a4	            0xf7db	                                 neg ebx	      2361	normal.c	FUNCTION_9	FOR_1	CALL_4
0x40090a6	           0xfb6df	                           movzx ebx, bh	      2361	normal.c	FUNCTION_9	FOR_1	CALL_4
0x40090a9	            0xeb45	                           jmp 0x40090f0	      2361	normal.c	FUNCTION_9	FOR_1	CALL_4
0x40090ab	    0x833d00000000	               cmp dword [0x040090b2], 0	      2347	normal.c	FUNCTION_9	ELSE_1	IF_2
0x40090b2	            0x75ee	                           jne 0x40090a2	      2347	normal.c	FUNCTION_9	ELSE_1	IF_2
0x40090b4	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      2350	normal.c	FUNCTION_9	ELSE_1	IF_2	IF_3
0x40090b9	            0x7416	                            je 0x40090d1	      2350	normal.c	FUNCTION_9	ELSE_1	IF_2	IF_3
0x40090bb	      0xbf76000000	                           mov edi, 0x76	      2352	normal.c	FUNCTION_9	ELSE_1	IF_2	IF_3	IF_4	CALL_1
0x40090c0	      0xe800000000	                          call 0x40090c5	      2352	normal.c	FUNCTION_9	ELSE_1	IF_2	IF_3	IF_4	CALL_1
0x40090c5	          0x4189c6	                           mov r14d, eax	      2352	normal.c	FUNCTION_9	ELSE_1	IF_2	IF_3	IF_4	CALL_1
0x40090c8	            0x85c0	                           test eax, eax	      2352	normal.c	FUNCTION_9	ELSE_1	IF_2	IF_3	IF_4	CALL_1
0x40090ca	            0x75d6	                           jne 0x40090a2	      2352	normal.c	FUNCTION_9	ELSE_1	IF_2	IF_3	IF_4	CALL_1
0x40090cc	      0xe94b140000	                           jmp 0x400a51c	      2352	normal.c	FUNCTION_9	ELSE_1	IF_2	IF_3	IF_4	CALL_1
0x40090d1	    0x833d00000000	               cmp dword [0x040090d8], 1	      2355	normal.c	FUNCTION_9	ELSE_1	IF_2	ELSE_2	IF_5	CALL_2
0x40090d8	            0x75c8	                           jne 0x40090a2	      2355	normal.c	FUNCTION_9	ELSE_1	IF_2	ELSE_2	IF_5	CALL_2
0x40090da	      0xbf6e000000	                           mov edi, 0x6e	      2355	normal.c	FUNCTION_9	ELSE_1	IF_2	ELSE_2	IF_5	CALL_2
0x40090df	      0xe800000000	                          call 0x40090e4	      2355	normal.c	FUNCTION_9	ELSE_1	IF_2	ELSE_2	IF_5	CALL_2
0x40090e4	          0x4189c6	                           mov r14d, eax	      2355	normal.c	FUNCTION_9	ELSE_1	IF_2	ELSE_2	IF_5	CALL_2
0x40090e7	            0x85c0	                           test eax, eax	      2355	normal.c	FUNCTION_9	ELSE_1	IF_2	ELSE_2	IF_5	CALL_2
0x40090e9	            0x75b7	                           jne 0x40090a2	      2355	normal.c	FUNCTION_9	ELSE_1	IF_2	ELSE_2	IF_5	CALL_2
0x40090eb	      0xe92c140000	                           jmp 0x400a51c	      2355	normal.c	FUNCTION_9	ELSE_1	IF_2	ELSE_2	IF_5	CALL_2
0x40090f0	      0x488d542444	                   lea rdx, [rsp + 0x44]	      2361	normal.c	FUNCTION_9	FOR_1	CALL_4
0x40090f5	      0x488d742440	                   lea rsi, [rsp + 0x40]	      2361	normal.c	FUNCTION_9	FOR_1	CALL_4
0x40090fa	            0x89df	                            mov edi, ebx	      2361	normal.c	FUNCTION_9	FOR_1	CALL_4
0x40090fc	      0xe800000000	                          call 0x4009101	      2361	normal.c	FUNCTION_9	FOR_1	CALL_4
0x4009101	          0x4189c5	                           mov r13d, eax	      2361	normal.c	FUNCTION_9	FOR_1	CALL_4
0x4009104	      0x837c244400	               cmp dword [rsp + 0x44], 0	      2362	normal.c	FUNCTION_9	FOR_1	IF_6
0x4009109	     0xf8422140000	                            je 0x400a531	      2362	normal.c	FUNCTION_9	FOR_1	IF_6
0x400910f	      0xe800000000	                          call 0x4009114	      2366	normal.c	FUNCTION_9	FOR_1	IF_6	IF_7	CALL_5
0x4009114	            0x85c0	                           test eax, eax	      2366	normal.c	FUNCTION_9	FOR_1	IF_6	IF_7	CALL_5
0x4009116	            0x742c	                            je 0x4009144	      2366	normal.c	FUNCTION_9	FOR_1	IF_6	IF_7	CALL_5
0x4009118	    0x448b3d000000	           mov r15d, dword [0x0400911f] 	      2369	normal.c	FUNCTION_9	FOR_1	IF_6	IF_7
0x400911f	    0x448b35000000	           mov r14d, dword [0x04009126] 	      2370	normal.c	FUNCTION_9	FOR_1	IF_6	IF_7
0x4009126	      0xe800000000	                          call 0x400912b	      2374	normal.c	FUNCTION_9	FOR_1	IF_6	IF_7	CALL_6
0x400912b	            0x39c5	                            cmp ebp, eax	      2375	normal.c	FUNCTION_9	FOR_1	IF_6	IF_7	IF_8
0x400912d	            0x74c1	                            je 0x40090f0	      2375	normal.c	FUNCTION_9	FOR_1	IF_6	IF_7	IF_8
0x400912f	            0x89c7	                            mov edi, eax	      2377	normal.c	FUNCTION_9	FOR_1	IF_6	IF_7	CALL_7
0x4009131	      0xe800000000	                          call 0x4009136	      2377	normal.c	FUNCTION_9	FOR_1	IF_6	IF_7	CALL_7
0x4009136	    0x44893d000000	           mov dword [0x0400913d], r15d 	      2378	normal.c	FUNCTION_9	FOR_1	IF_6	IF_7
0x400913d	    0x448935000000	           mov dword [0x04009144], r14d 	      2379	normal.c	FUNCTION_9	FOR_1	IF_6	IF_7
0x4009144	    0x81fd039bffff	                     cmp ebp, 0xffff9b03	      2385	normal.c	FUNCTION_9	IF_9
0x400914a	            0x7545	                           jne 0x4009191	      2385	normal.c	FUNCTION_9	IF_9
0x400914c	      0xe800000000	                          call 0x4009151	      2389	normal.c	FUNCTION_9	IF_9	CALL_8
0x4009151	    0x448b35000000	           mov r14d, dword [0x04009158] 	      2390	normal.c	FUNCTION_9	IF_9	IF_10
0x4009158	          0x4585f6	                         test r14d, r14d	      2390	normal.c	FUNCTION_9	IF_9	IF_10
0x400915b	     0xf84bb130000	                            je 0x400a51c	      2390	normal.c	FUNCTION_9	IF_9	IF_10
0x4009161	    0x448b35000000	           mov r14d, dword [0x04009168] 	      2390	normal.c	FUNCTION_9	IF_9	IF_10
0x4009168	          0x4585f6	                         test r14d, r14d	      2390	normal.c	FUNCTION_9	IF_9	IF_10
0x400916b	     0xf858e130000	                           jne 0x400a4ff	      2390	normal.c	FUNCTION_9	IF_9	IF_10
0x4009171	      0xbe00000000	                              mov esi, 0	      2392	normal.c	FUNCTION_9	IF_9	IF_10	CALL_9
0x4009176	    0x488b3d000000	            mov rdi, qword [0x0400917d] 	      2392	normal.c	FUNCTION_9	IF_9	IF_10	CALL_9
0x400917d	      0xe800000000	                          call 0x4009182	      2392	normal.c	FUNCTION_9	IF_9	IF_10	CALL_9
0x4009182	    0xc70500000000	               mov dword [0x0400918c], 1	      2393	normal.c	FUNCTION_9	IF_9	IF_10
0x400918c	      0xe98b130000	                           jmp 0x400a51c	      2393	normal.c	FUNCTION_9	IF_9	IF_10
0x4009191	      0x837c244400	               cmp dword [rsp + 0x44], 0	      2402	normal.c	FUNCTION_9	IF_11
0x4009196	            0x7541	                           jne 0x40091d9	      2402	normal.c	FUNCTION_9	IF_11
0x4009198	    0x833d00000000	               cmp dword [0x0400919f], 0	      2402	normal.c	FUNCTION_9	IF_11
0x400919f	            0x741b	                            je 0x40091bc	      2402	normal.c	FUNCTION_9	IF_11
0x40091a1	    0xc70500000000	               mov dword [0x040091ab], 0	      2404	normal.c	FUNCTION_9	IF_11
0x40091ab	      0xbf0a000000	                            mov edi, 0xa	      2405	normal.c	FUNCTION_9	IF_11	CALL_10
0x40091b0	      0xe800000000	                          call 0x40091b5	      2405	normal.c	FUNCTION_9	IF_11	CALL_10
0x40091b5	      0x837c244400	               cmp dword [rsp + 0x44], 0	      2407	normal.c	FUNCTION_9	IF_12
0x40091ba	            0x751d	                           jne 0x40091d9	      2407	normal.c	FUNCTION_9	IF_12
0x40091bc	    0x833d00000000	               cmp dword [0x040091c3], 0	      2407	normal.c	FUNCTION_9	IF_12
0x40091c3	            0x7414	                            je 0x40091d9	      2407	normal.c	FUNCTION_9	IF_12
0x40091c5	    0xc70500000000	               mov dword [0x040091cf], 0	      2409	normal.c	FUNCTION_9	IF_12
0x40091cf	      0xbf0c000000	                            mov edi, 0xc	      2410	normal.c	FUNCTION_9	IF_12	CALL_11
0x40091d4	      0xe800000000	                          call 0x40091d9	      2410	normal.c	FUNCTION_9	IF_12	CALL_11
0x40091d9	        0x8b542440	            mov edx, dword [rsp + 0x40] 	      2417	normal.c	FUNCTION_9	IF_13
0x40091dd	            0x85d2	                           test edx, edx	      2417	normal.c	FUNCTION_9	IF_13
0x40091df	            0x7423	                            je 0x4009204	      2417	normal.c	FUNCTION_9	IF_13
0x40091e1	    0xc70500000000	               mov dword [0x040091eb], 1	      2418	normal.c	FUNCTION_9	IF_13
0x40091eb	    0xf60500000000	               test byte [0x040091f2], 4	      2437	normal.c	FUNCTION_9	IF_17
0x40091f2	     0xf848d000000	                            je 0x4009285	      2437	normal.c	FUNCTION_9	IF_17
0x40091f8	        0x4183fd02	                             cmp r13d, 2	      2437	normal.c	FUNCTION_9	IF_17
0x40091fc	     0xf8583000000	                           jne 0x4009285	      2437	normal.c	FUNCTION_9	IF_17
0x4009202	            0xeb3c	                           jmp 0x4009240	      2437	normal.c	FUNCTION_9	IF_17
0x4009204	    0x448b35000000	           mov r14d, dword [0x0400920b] 	      2421	normal.c	FUNCTION_9	ELSE_3	IF_14
0x400920b	          0x4585f6	                         test r14d, r14d	      2421	normal.c	FUNCTION_9	ELSE_3	IF_14
0x400920e	     0xf8408130000	                            je 0x400a51c	      2421	normal.c	FUNCTION_9	ELSE_3	IF_14
0x4009214	      0x448b742444	           mov r14d, dword [rsp + 0x44] 	      2423	normal.c	FUNCTION_9	ELSE_3	IF_15
0x4009219	          0x4585f6	                         test r14d, r14d	      2423	normal.c	FUNCTION_9	ELSE_3	IF_15
0x400921c	            0x7567	                           jne 0x4009285	      2423	normal.c	FUNCTION_9	ELSE_3	IF_15
0x400921e	    0xc70500000000	               mov dword [0x04009228], 0	      2425	normal.c	FUNCTION_9	ELSE_3	IF_15
0x4009228	    0x833d00000000	               cmp dword [0x0400922f], 0	      2426	normal.c	FUNCTION_9	ELSE_3	IF_15	IF_16
0x400922f	            0x7454	                            je 0x4009285	      2426	normal.c	FUNCTION_9	ELSE_3	IF_15	IF_16
0x4009231	    0xc70500000000	               mov dword [0x0400923b], 0	      2428	normal.c	FUNCTION_9	ELSE_3	IF_15	IF_16
0x400923b	      0xe9dc120000	                           jmp 0x400a51c	      2429	normal.c	FUNCTION_9	ELSE_3	IF_15	IF_16
0x4009240	    0xf60500000000	           test byte [0x04009247], 0x10 	      2439	normal.c	FUNCTION_9	IF_17	IF_18
0x4009247	            0x740a	                            je 0x4009253	      2439	normal.c	FUNCTION_9	IF_17	IF_18
0x4009249	      0xbf0f000000	                            mov edi, 0xf	      2440	normal.c	FUNCTION_9	IF_17	CALL_12
0x400924e	      0xe800000000	                          call 0x4009253	      2440	normal.c	FUNCTION_9	IF_17	CALL_12
0x4009253	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      2441	normal.c	FUNCTION_9	IF_17	IF_19
0x4009258	        0x4883f801	                              cmp rax, 1	      2441	normal.c	FUNCTION_9	IF_17	IF_19
0x400925c	            0x7e08	                           jle 0x4009266	      2441	normal.c	FUNCTION_9	IF_17	IF_19
0x400925e	          0x4889c7	                            mov rdi, rax	      2442	normal.c	FUNCTION_9	IF_17	CALL_13
0x4009261	      0xe800000000	                          call 0x4009266	      2442	normal.c	FUNCTION_9	IF_17	CALL_13
0x4009266	      0xbf14000000	                           mov edi, 0x14	      2443	normal.c	FUNCTION_9	IF_17	CALL_14
0x400926b	      0xe800000000	                          call 0x4009270	      2443	normal.c	FUNCTION_9	IF_17	CALL_14
0x4009270	    0xc70500000000	               mov dword [0x0400927a], 0	      2444	normal.c	FUNCTION_9	IF_17
0x400927a	    0x41be00000000	                             mov r14d, 0	      2445	normal.c	FUNCTION_9	IF_17
0x4009280	      0xe997120000	                           jmp 0x400a51c	      2445	normal.c	FUNCTION_9	IF_17
0x4009285	    0x8b0500000000	            mov eax, dword [0x0400928b] 	      2451	normal.c	FUNCTION_9	IF_20
0x400928b	          0x4585ed	                         test r13d, r13d	      2451	normal.c	FUNCTION_9	IF_20
0x400928e	        0x400f95c5	                               setne bpl	      2451	normal.c	FUNCTION_9	IF_20
0x4009292	            0xa804	                              test al, 4	      2451	normal.c	FUNCTION_9	IF_20
0x4009294	            0x740f	                            je 0x40092a5	      2451	normal.c	FUNCTION_9	IF_20
0x4009296	    0x41be00000000	                             mov r14d, 0	      2452	normal.c	FUNCTION_9	IF_20
0x400929c	          0x4084ed	                           test bpl, bpl	      2451	normal.c	FUNCTION_9	IF_20
0x400929f	     0xf8577120000	                           jne 0x400a51c	      2451	normal.c	FUNCTION_9	IF_20
0x40092a5	            0xa81e	                           test al, 0x1e	      2459	normal.c	FUNCTION_9	IF_21
0x40092a7	            0x744d	                            je 0x40092f6	      2459	normal.c	FUNCTION_9	IF_21
0x40092a9	            0x85d2	                           test edx, edx	      2461	normal.c	FUNCTION_9	IF_21
0x40092ab	            0x740f	                            je 0x40092bc	      2461	normal.c	FUNCTION_9	IF_21
0x40092ad	        0x4183fd01	                             cmp r13d, 1	      2463	normal.c	FUNCTION_9	IF_21
0x40092b1	           0xf94c2	                                 sete dl	      2463	normal.c	FUNCTION_9	IF_21
0x40092b4	            0xa860	                           test al, 0x60	      2463	normal.c	FUNCTION_9	IF_21
0x40092b6	            0x7504	                           jne 0x40092bc	      2463	normal.c	FUNCTION_9	IF_21
0x40092b8	            0x84d2	                             test dl, dl	      2463	normal.c	FUNCTION_9	IF_21
0x40092ba	            0x7456	                            je 0x4009312	      2463	normal.c	FUNCTION_9	IF_21
0x40092bc	            0xa80a	                            test al, 0xa	      2464	normal.c	FUNCTION_9	IF_21
0x40092be	            0x740e	                            je 0x40092ce	      2464	normal.c	FUNCTION_9	IF_21
0x40092c0	      0xe800000000	                          call 0x40092c5	      2465	normal.c	FUNCTION_9	IF_21	CALL_15
0x40092c5	            0x85c0	                           test eax, eax	      2464	normal.c	FUNCTION_9	IF_21
0x40092c7	            0x7405	                            je 0x40092ce	      2464	normal.c	FUNCTION_9	IF_21
0x40092c9	          0x4084ed	                           test bpl, bpl	      2464	normal.c	FUNCTION_9	IF_21
0x40092cc	            0x7428	                            je 0x40092f6	      2464	normal.c	FUNCTION_9	IF_21
0x40092ce	    0x448b35000000	           mov r14d, dword [0x040092d5] 	      2467	normal.c	FUNCTION_9	IF_21
0x40092d5	        0x4183e608	                             and r14d, 8	      2467	normal.c	FUNCTION_9	IF_21
0x40092d9	     0xf843d120000	                            je 0x400a51c	      2467	normal.c	FUNCTION_9	IF_21
0x40092df	      0xe800000000	                          call 0x40092e4	      2468	normal.c	FUNCTION_9	IF_21	CALL_16
0x40092e4	        0x4183fd02	                             cmp r13d, 2	      2467	normal.c	FUNCTION_9	IF_21
0x40092e8	     0xf8519120000	                           jne 0x400a507	      2467	normal.c	FUNCTION_9	IF_21
0x40092ee	            0x85c0	                           test eax, eax	      2467	normal.c	FUNCTION_9	IF_21
0x40092f0	     0xf8511120000	                           jne 0x400a507	      2467	normal.c	FUNCTION_9	IF_21
0x40092f6	        0x4183fd01	                             cmp r13d, 1	      2478	normal.c	FUNCTION_9	IF_22
0x40092fa	           0xf94c2	                                 sete dl	      2478	normal.c	FUNCTION_9	IF_22
0x40092fd	      0x837c244000	               cmp dword [rsp + 0x40], 0	      2478	normal.c	FUNCTION_9	IF_22
0x4009302	            0x750e	                           jne 0x4009312	      2478	normal.c	FUNCTION_9	IF_22
0x4009304	    0x41be00000000	                             mov r14d, 0	      2479	normal.c	FUNCTION_9	IF_22
0x400930a	            0x84d2	                             test dl, dl	      2478	normal.c	FUNCTION_9	IF_22
0x400930c	     0xf850a120000	                           jne 0x400a51c	      2478	normal.c	FUNCTION_9	IF_22
0x4009312	        0x488b0424	                    mov rax, qword [rsp]	      2481	normal.c	FUNCTION_9	IF_23
0x4009316	          0x4885c0	                           test rax, rax	      2481	normal.c	FUNCTION_9	IF_23
0x4009319	            0x7406	                            je 0x4009321	      2481	normal.c	FUNCTION_9	IF_23
0x400931b	        0x448b7804	               mov r15d, dword [rax + 4]	      2482	normal.c	FUNCTION_9	IF_23
0x400931f	            0xeb06	                           jmp 0x4009327	      2482	normal.c	FUNCTION_9	IF_23
0x4009321	    0x41bf00000000	                             mov r15d, 0	      2484	normal.c	FUNCTION_9	ELSE_4
0x4009327	            0x84d2	                             test dl, dl	      2489	normal.c	FUNCTION_9	ELSE_4	IF_24
0x4009329	     0xf843f010000	                            je 0x400946e	      2489	normal.c	FUNCTION_9	ELSE_4	IF_24
0x400932f	    0x448b35000000	           mov r14d, dword [0x04009336] 	      2491	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_25
0x4009336	        0x4183fe01	                             cmp r14d, 1	      2491	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_25
0x400933a	            0x7576	                           jne 0x40093b2	      2491	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_25
0x400933c	        0x488b0424	                    mov rax, qword [rsp]	      2497	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_25	IF_26
0x4009340	          0x4885c0	                           test rax, rax	      2497	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_25	IF_26
0x4009343	            0x7418	                            je 0x400935d	      2497	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_25	IF_26
0x4009345	          0x833800	                      cmp dword [rax], 0	      2497	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_25	IF_26
0x4009348	            0x7413	                            je 0x400935d	      2497	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_25	IF_26
0x400934a	          0x4889c7	                            mov rdi, rax	      2499	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_25	IF_26	CALL_17
0x400934d	      0xe8e66effff	                    call sym.clearopbeep	      2499	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_25	IF_26	CALL_17
0x4009352	    0x41be00000000	                             mov r14d, 0	      2500	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_25	IF_26
0x4009358	      0xe9bf110000	                           jmp 0x400a51c	      2500	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_25	IF_26
0x400935d	    0x833d00000000	               cmp dword [0x04009364], 0	      2508	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_25	IF_27
0x4009364	     0xf84d8110000	                            je 0x400a542	      2508	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_25	IF_27
0x400936a	    0x833d00000000	               cmp dword [0x04009371], 0	      2510	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_25	IF_27	IF_28
0x4009371	            0x7416	                            je 0x4009389	      2510	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_25	IF_27	IF_28
0x4009373	      0xbf07000000	                              mov edi, 7	      2512	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_25	IF_27	IF_28	CALL_18
0x4009378	      0xe800000000	                          call 0x400937d	      2512	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_25	IF_27	IF_28	CALL_18
0x400937d	      0xbf00000000	                              mov edi, 0	      2513	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_25	IF_27	IF_28	CALL_19
0x4009382	      0xe800000000	                          call 0x4009387	      2513	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_25	IF_27	IF_28	CALL_19
0x4009387	            0xeb14	                           jmp 0x400939d	      2513	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_25	IF_27	IF_28	CALL_19
0x4009389	      0xbf79000000	                           mov edi, 0x79	      2517	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_25	IF_27	ELSE_5	CALL_20
0x400938e	      0xe800000000	                          call 0x4009393	      2517	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_25	IF_27	ELSE_5	CALL_20
0x4009393	      0xbf03d0ffff	                     mov edi, 0xffffd003	      2518	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_25	IF_27	ELSE_5	CALL_21
0x4009398	      0xe800000000	                          call 0x400939d	      2518	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_25	IF_27	ELSE_5	CALL_21
0x400939d	    0xc70500000000	               mov dword [0x040093a7], 1	      2520	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_25	IF_27
0x40093a7	    0x41be00000000	                             mov r14d, 0	      2521	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_25	IF_27
0x40093ad	      0xe96a110000	                           jmp 0x400a51c	      2521	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_25	IF_27
0x40093b2	        0x4183e610	                          and r14d, 0x10	      2528	normal.c	FUNCTION_9	ELSE_4	IF_24	ELSE_6	IF_29
0x40093b6	     0xf8460110000	                            je 0x400a51c	      2528	normal.c	FUNCTION_9	ELSE_4	IF_24	ELSE_6	IF_29
0x40093bc	        0x4183ff2e	                          cmp r15d, 0x2e	      2540	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	IF_31
0x40093c0	            0x751a	                           jne 0x40093dc	      2540	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	IF_31
0x40093c2	      0xbe01000000	                              mov esi, 1	      2541	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	CALL_23
0x40093c7	      0xbf2e000000	                           mov edi, 0x2e	      2541	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	CALL_23
0x40093cc	      0xe800000000	                          call 0x40093d1	      2541	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	CALL_23
0x40093d1	    0x41be00000000	                             mov r14d, 0	      2560	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30
0x40093d7	      0xe940110000	                           jmp 0x400a51c	      2560	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30
0x40093dc	    0x833d00000000	               cmp dword [0x040093e3], 0	      2545	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	IF_32
0x40093e3	            0x7411	                            je 0x40093f6	      2545	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	IF_32
0x40093e5	          0x4585ff	                         test r15d, r15d	      2545	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	IF_32
0x40093e8	           0xf94c0	                                 sete al	      2545	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	IF_32
0x40093eb	            0x84c0	                             test al, al	      2546	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	IF_32
0x40093ed	      0xb82a000000	                           mov eax, 0x2a	      2546	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	IF_32
0x40093f2	        0x440f45f8	                        cmovne r15d, eax	      2546	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	IF_32
0x40093f6	    0xf60500000000	           test byte [0x040093fd], 0x40 	      2548	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	IF_33	CALL_24
0x40093fd	            0x7421	                            je 0x4009420	      2548	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	IF_33	CALL_24
0x40093ff	          0x4489ff	                           mov edi, r15d	      2548	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	IF_33	CALL_24
0x4009402	      0xe800000000	                          call 0x4009407	      2548	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	IF_33	CALL_24
0x4009407	          0x4189c6	                           mov r14d, eax	      2548	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	IF_33	CALL_24
0x400940a	            0x85c0	                           test eax, eax	      2548	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	IF_33	CALL_24
0x400940c	            0x7512	                           jne 0x4009420	      2548	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	IF_33	CALL_24
0x400940e	      0xbe01000000	                              mov esi, 1	      2549	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	CALL_25
0x4009413	          0x4489ff	                           mov edi, r15d	      2549	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	CALL_25
0x4009416	      0xe800000000	                          call 0x400941b	      2549	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	CALL_25
0x400941b	      0xe9fc100000	                           jmp 0x400a51c	      2549	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	CALL_25
0x4009420	        0x8b5c2418	            mov ebx, dword [rsp + 0x18] 	      2552	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	ELSE_8	CALL_26
0x4009424	            0x89d9	                            mov ecx, ebx	      2552	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	ELSE_8	CALL_26
0x4009426	          0x83c902	                               or ecx, 2	      2552	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	ELSE_8	CALL_26
0x4009429	      0xba01000000	                              mov edx, 1	      2552	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	ELSE_8	CALL_26
0x400942e	      0xbeffffffff	                     mov esi, 0xffffffff	      2552	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	ELSE_8	CALL_26
0x4009433	          0x4489ff	                           mov edi, r15d	      2552	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	ELSE_8	CALL_26
0x4009436	      0xe800000000	                          call 0x400943b	      2552	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	ELSE_8	CALL_26
0x400943b	      0xbf12000000	                           mov edi, 0x12	      2555	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	ELSE_8	CALL_27
0x4009440	      0xe800000000	                          call 0x4009445	      2555	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	ELSE_8	CALL_27
0x4009445	          0x83fb01	                              cmp ebx, 1	      2556	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	ELSE_8	CALL_28
0x4009448	            0x19ff	                            sbb edi, edi	      2556	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	ELSE_8	CALL_28
0x400944a	          0x83c710	                           add edi, 0x10	      2556	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	ELSE_8	CALL_28
0x400944d	      0xe800000000	                          call 0x4009452	      2556	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	ELSE_8	CALL_28
0x4009452	          0x4585ff	                         test r15d, r15d	      2557	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	ELSE_8	CALL_29
0x4009455	      0xbf22000000	                           mov edi, 0x22	      2557	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	ELSE_8	CALL_29
0x400945a	        0x410f45ff	                        cmovne edi, r15d	      2557	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	ELSE_8	CALL_29
0x400945e	      0xe800000000	                          call 0x4009463	      2557	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	ELSE_8	CALL_29
0x4009463	    0x41be00000000	                             mov r14d, 0	      2560	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30
0x4009469	      0xe9ae100000	                           jmp 0x400a51c	      2560	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30
0x400946e	        0x8b442440	            mov eax, dword [rsp + 0x40] 	      2565	normal.c	FUNCTION_9	IF_34
0x4009472	          0x83f801	                              cmp eax, 1	      2566	normal.c	FUNCTION_9	IF_34
0x4009475	          0x4519f6	                          sbb r14d, r14d	      2566	normal.c	FUNCTION_9	IF_34
0x4009478	        0x4183e605	                             and r14d, 5	      2566	normal.c	FUNCTION_9	IF_34
0x400947c	    0x48c744245000	               mov qword [rsp + 0x50], 0	      2568	normal.c	FUNCTION_9
0x4009485	    0x8b2d00000000	            mov ebp, dword [0x0400948b] 	      2571	normal.c	FUNCTION_9	IF_35
0x400948b	            0x85ed	                           test ebp, ebp	      2571	normal.c	FUNCTION_9	IF_35
0x400948d	     0xf856c010000	                           jne 0x40095ff	      2571	normal.c	FUNCTION_9	IF_35
0x4009493	    0x488b15000000	            mov rdx, qword [0x0400949a] 	      2571	normal.c	FUNCTION_9	IF_35
0x400949a	    0x83ba9c000000	               cmp dword [rdx + 0x9c], 0	      2571	normal.c	FUNCTION_9	IF_35
0x40094a1	     0xf8e58010000	                           jle 0x40095ff	      2571	normal.c	FUNCTION_9	IF_35
0x40094a7	      0x837c244400	               cmp dword [rsp + 0x44], 0	      2573	normal.c	FUNCTION_9	IF_35	IF_36
0x40094ac	            0x7450	                            je 0x40094fe	      2573	normal.c	FUNCTION_9	IF_35	IF_36
0x40094ae	    0x448b35000000	           mov r14d, dword [0x040094b5] 	      2575	normal.c	FUNCTION_9	IF_35	IF_36	IF_37
0x40094b5	          0x4585f6	                         test r14d, r14d	      2575	normal.c	FUNCTION_9	IF_35	IF_36	IF_37
0x40094b8	     0xf845e100000	                            je 0x400a51c	      2575	normal.c	FUNCTION_9	IF_35	IF_36	IF_37
0x40094be	    0x486315000000	         movsxd rdx, dword [0x040094c5] 	      2577	normal.c	FUNCTION_9	IF_35	IF_36	IF_37
0x40094c5	    0x488b05000000	            mov rax, qword [0x040094cc] 	      2577	normal.c	FUNCTION_9	IF_35	IF_36	IF_37
0x40094cc	         0xfbf1c50	           movsx ebx, word [rax + rdx*2]	      2577	normal.c	FUNCTION_9	IF_35	IF_36	IF_37
0x40094d0	      0xbf0f270000	                         mov edi, 0x270f	      2578	normal.c	FUNCTION_9	IF_35	IF_36	IF_37	CALL_31
0x40094d5	            0x85db	                           test ebx, ebx	      2578	normal.c	FUNCTION_9	IF_35	IF_36	IF_37	CALL_31
0x40094d7	            0x7e18	                           jle 0x40094f1	      2578	normal.c	FUNCTION_9	IF_35	IF_36	IF_37	CALL_31
0x40094d9	    0x488b3d000000	            mov rdi, qword [0x040094e0] 	      2578	normal.c	FUNCTION_9	IF_35	IF_36	IF_37	CALL_31
0x40094e0	      0xe800000000	                          call 0x40094e5	      2578	normal.c	FUNCTION_9	IF_35	IF_36	IF_37	CALL_31
0x40094e5	            0x39c3	                            cmp ebx, eax	      2579	normal.c	FUNCTION_9	IF_35	IF_36	IF_37
0x40094e7	           0xf9cc0	                                 setl al	      2579	normal.c	FUNCTION_9	IF_35	IF_36	IF_37
0x40094ea	           0xfb6c0	                           movzx eax, al	      2579	normal.c	FUNCTION_9	IF_35	IF_36	IF_37
0x40094ed	            0x89df	                            mov edi, ebx	      2579	normal.c	FUNCTION_9	IF_35	IF_36	IF_37
0x40094ef	            0x29c7	                            sub edi, eax	      2579	normal.c	FUNCTION_9	IF_35	IF_36	IF_37
0x40094f1	      0xe800000000	                          call 0x40094f6	      2578	normal.c	FUNCTION_9	IF_35	IF_36	IF_37	CALL_31
0x40094f6	          0x4189ee	                           mov r14d, ebp	      2581	normal.c	FUNCTION_9	IF_35	IF_36
0x40094f9	      0xe91e100000	                           jmp 0x400a51c	      2581	normal.c	FUNCTION_9	IF_35	IF_36
0x40094fe	    0x41be01000000	                             mov r14d, 1	      2631	normal.c	FUNCTION_9	IF_35
0x4009504	            0x85c0	                           test eax, eax	      2585	normal.c	FUNCTION_9	IF_35	IF_38
0x4009506	     0xf8410100000	                            je 0x400a51c	      2585	normal.c	FUNCTION_9	IF_35	IF_38
0x400950c	    0x833d00000000	               cmp dword [0x04009513], 0	      2587	normal.c	FUNCTION_9	IF_35	IF_38
0x4009513	     0xf8503100000	                           jne 0x400a51c	      2587	normal.c	FUNCTION_9	IF_35	IF_38
0x4009519	    0x8b0500000000	            mov eax, dword [0x0400951f] 	      2589	normal.c	FUNCTION_9	IF_35	IF_38
0x400951f	          0x4863d0	                         movsxd rdx, eax	      2589	normal.c	FUNCTION_9	IF_35	IF_38
0x4009522	    0x483b15000000	            cmp rdx, qword [0x04009529] 	      2589	normal.c	FUNCTION_9	IF_35	IF_38
0x4009529	     0xf8ded0f0000	                           jge 0x400a51c	      2589	normal.c	FUNCTION_9	IF_35	IF_38
0x400952f	    0xc70500000000	               mov dword [0x04009539], 1	      2591	normal.c	FUNCTION_9	IF_35	IF_38
0x4009539	          0x4889d0	                            mov rax, rdx	      2592	normal.c	FUNCTION_9	IF_35	IF_38
0x400953c	    0x488b15000000	            mov rdx, qword [0x04009543] 	      2592	normal.c	FUNCTION_9	IF_35	IF_38
0x4009543	         0xfbf1c42	           movsx ebx, word [rdx + rax*2]	      2592	normal.c	FUNCTION_9	IF_35	IF_38
0x4009547	            0x85db	                           test ebx, ebx	      2593	normal.c	FUNCTION_9	IF_35	IF_38	IF_39
0x4009549	            0x7853	                            js 0x400959e	      2593	normal.c	FUNCTION_9	IF_35	IF_38	IF_39
0x400954b	    0x8b0500000000	            mov eax, dword [0x04009551] 	      2595	normal.c	FUNCTION_9	IF_35	IF_38	IF_39	IF_40
0x4009551	          0x83e060	                           and eax, 0x60	      2595	normal.c	FUNCTION_9	IF_35	IF_38	IF_39	IF_40
0x4009554	          0x83f820	                           cmp eax, 0x20	      2595	normal.c	FUNCTION_9	IF_35	IF_38	IF_39	IF_40
0x4009557	            0x7521	                           jne 0x400957a	      2595	normal.c	FUNCTION_9	IF_35	IF_38	IF_39	IF_40
0x4009559	      0xe800000000	                          call 0x400955e	      2598	normal.c	FUNCTION_9	IF_35	IF_38	IF_39	IF_40	CALL_32
0x400955e	      0xe800000000	                          call 0x4009563	      2599	normal.c	FUNCTION_9	IF_35	IF_38	IF_39	IF_40	CALL_33
0x4009563	          0x8d43ff	                      lea eax, [rbx - 1]	      2600	normal.c	FUNCTION_9	IF_35	IF_38	IF_39	IF_40	CALL_34
0x4009566	            0x85db	                           test ebx, ebx	      2600	normal.c	FUNCTION_9	IF_35	IF_38	IF_39	IF_40	CALL_34
0x4009568	      0xbf0f270000	                         mov edi, 0x270f	      2600	normal.c	FUNCTION_9	IF_35	IF_38	IF_39	IF_40	CALL_34
0x400956d	           0xf45f8	                         cmovne edi, eax	      2600	normal.c	FUNCTION_9	IF_35	IF_38	IF_39	IF_40	CALL_34
0x4009570	      0xe800000000	                          call 0x4009575	      2600	normal.c	FUNCTION_9	IF_35	IF_38	IF_39	IF_40	CALL_34
0x4009575	      0xe9a20f0000	                           jmp 0x400a51c	      2600	normal.c	FUNCTION_9	IF_35	IF_38	IF_39	IF_40	CALL_34
0x400957a	            0x89df	                            mov edi, ebx	      2606	normal.c	FUNCTION_9	IF_35	IF_38	IF_39	ELSE_9	CALL_35
0x400957c	      0xe800000000	                          call 0x4009581	      2606	normal.c	FUNCTION_9	IF_35	IF_38	IF_39	ELSE_9	CALL_35
0x4009581	    0x41be01000000	                             mov r14d, 1	      2631	normal.c	FUNCTION_9	IF_35
0x4009587	    0x4c3b25000000	            cmp r12, qword [0x0400958e] 	      2609	normal.c	FUNCTION_9	IF_35	IF_38	IF_39	ELSE_9	IF_41
0x400958e	     0xf84880f0000	                            je 0x400a51c	      2609	normal.c	FUNCTION_9	IF_35	IF_38	IF_39	ELSE_9	IF_41
0x4009594	      0xe800000000	                          call 0x4009599	      2610	normal.c	FUNCTION_9	IF_35	IF_38	IF_39	ELSE_9	CALL_36
0x4009599	      0xe97e0f0000	                           jmp 0x400a51c	      2610	normal.c	FUNCTION_9	IF_35	IF_38	IF_39	ELSE_9	CALL_36
0x400959e	    0x81fb19fcffff	                     cmp ebx, 0xfffffc19	      2618	normal.c	FUNCTION_9	IF_35	IF_38	ELSE_10	IF_42
0x40095a4	            0x7412	                            je 0x40095b8	      2618	normal.c	FUNCTION_9	IF_35	IF_38	ELSE_10	IF_42
0x40095a6	            0x89df	                            mov edi, ebx	      2621	normal.c	FUNCTION_9	IF_35	IF_38	ELSE_10	CALL_37
0x40095a8	            0xf7df	                                 neg edi	      2621	normal.c	FUNCTION_9	IF_35	IF_38	ELSE_10	CALL_37
0x40095aa	      0xe800000000	                          call 0x40095af	      2621	normal.c	FUNCTION_9	IF_35	IF_38	ELSE_10	CALL_37
0x40095af	    0x483b05000000	            cmp rax, qword [0x040095b6] 	      2622	normal.c	FUNCTION_9	IF_35	IF_38	ELSE_10	IF_43
0x40095b6	            0x7526	                           jne 0x40095de	      2622	normal.c	FUNCTION_9	IF_35	IF_38	ELSE_10	IF_43
0x40095b8	    0x488b05000000	            mov rax, qword [0x040095bf] 	      2624	normal.c	FUNCTION_9	IF_35	IF_38	ELSE_10	IF_43	IF_44
0x40095bf	        0x48833800	                      cmp qword [rax], 0	      2624	normal.c	FUNCTION_9	IF_35	IF_38	ELSE_10	IF_43	IF_44
0x40095c3	     0xf84460f0000	                            je 0x400a50f	      2624	normal.c	FUNCTION_9	IF_35	IF_38	ELSE_10	IF_43	IF_44
0x40095c9	      0xbf00000000	                              mov edi, 0	      2625	normal.c	FUNCTION_9	IF_35	IF_38	ELSE_10	IF_43	CALL_38
0x40095ce	      0xe800000000	                          call 0x40095d3	      2625	normal.c	FUNCTION_9	IF_35	IF_38	ELSE_10	IF_43	CALL_38
0x40095d3	    0x41be01000000	                             mov r14d, 1	      2631	normal.c	FUNCTION_9	IF_35
0x40095d9	      0xe93e0f0000	                           jmp 0x400a51c	      2631	normal.c	FUNCTION_9	IF_35
0x40095de	    0x41be01000000	                             mov r14d, 1	      2631	normal.c	FUNCTION_9	IF_35
0x40095e4	          0x4885c0	                           test rax, rax	      2627	normal.c	FUNCTION_9	IF_35	IF_38	ELSE_10	ELSE_12	IF_45
0x40095e7	     0xf842f0f0000	                            je 0x400a51c	      2627	normal.c	FUNCTION_9	IF_35	IF_38	ELSE_10	ELSE_12	IF_45
0x40095ed	      0xbe00000000	                              mov esi, 0	      2628	normal.c	FUNCTION_9	IF_35	IF_38	ELSE_10	ELSE_12	IF_45
0x40095f2	          0x4889c7	                            mov rdi, rax	      2628	normal.c	FUNCTION_9	IF_35	IF_38	ELSE_10	ELSE_12	IF_45
0x40095f5	      0xe800000000	                          call 0x40095fa	      2628	normal.c	FUNCTION_9	IF_35	IF_38	ELSE_10	ELSE_12	IF_45
0x40095fa	      0xe91d0f0000	                           jmp 0x400a51c	      2628	normal.c	FUNCTION_9	IF_35	IF_38	ELSE_10	ELSE_12	IF_45
0x40095ff	      0x837c244400	               cmp dword [rsp + 0x44], 0	      2633	normal.c	FUNCTION_9	ELSE_13	IF_46
0x4009604	            0x7438	                            je 0x400963e	      2633	normal.c	FUNCTION_9	ELSE_13	IF_46
0x4009606	    0x833d00000000	               cmp dword [0x0400960d], 0	      2633	normal.c	FUNCTION_9	ELSE_13	IF_46
0x400960d	            0x742f	                            je 0x400963e	      2633	normal.c	FUNCTION_9	ELSE_13	IF_46
0x400960f	    0x486315000000	         movsxd rdx, dword [0x04009616] 	      2635	normal.c	FUNCTION_9	ELSE_13	IF_46
0x4009616	    0x488b05000000	            mov rax, qword [0x0400961d] 	      2635	normal.c	FUNCTION_9	ELSE_13	IF_46
0x400961d	         0xfbf1450	           movsx edx, word [rax + rdx*2]	      2635	normal.c	FUNCTION_9	ELSE_13	IF_46
0x4009621	          0x8d42ff	                      lea eax, [rdx - 1]	      2636	normal.c	FUNCTION_9	ELSE_13	IF_46	CALL_40
0x4009624	            0x85d2	                           test edx, edx	      2636	normal.c	FUNCTION_9	ELSE_13	IF_46	CALL_40
0x4009626	      0xbf0f270000	                         mov edi, 0x270f	      2636	normal.c	FUNCTION_9	ELSE_13	IF_46	CALL_40
0x400962b	           0xf4ff8	                          cmovg edi, eax	      2636	normal.c	FUNCTION_9	ELSE_13	IF_46	CALL_40
0x400962e	      0xe800000000	                          call 0x4009633	      2636	normal.c	FUNCTION_9	ELSE_13	IF_46	CALL_40
0x4009633	    0x41be00000000	                             mov r14d, 0	      2637	normal.c	FUNCTION_9	ELSE_13	IF_46
0x4009639	      0xe9de0e0000	                           jmp 0x400a51c	      2637	normal.c	FUNCTION_9	ELSE_13	IF_46
0x400963e	      0xe800000000	                          call 0x4009643	      2646	normal.c	FUNCTION_9	IF_47	CALL_41
0x4009643	            0x85c0	                           test eax, eax	      2646	normal.c	FUNCTION_9	IF_47	CALL_41
0x4009645	     0xf84c1020000	                            je 0x400990c	      2646	normal.c	FUNCTION_9	IF_47	CALL_41
0x400964b	        0x4183fd02	                             cmp r13d, 2	      2648	normal.c	FUNCTION_9	IF_47	IF_48
0x400964f	     0xf8599020000	                           jne 0x40098ee	      2648	normal.c	FUNCTION_9	IF_47	IF_48
0x4009655	    0xf60500000000	               test byte [0x0400965c], 6	      2649	normal.c	FUNCTION_9	IF_47	IF_48
0x400965c	     0xf85d6030000	                           jne 0x4009a38	      2649	normal.c	FUNCTION_9	IF_47	IF_48
0x4009662	    0x833d00000000	               cmp dword [0x04009669], 0	      2656	normal.c	FUNCTION_9	IF_47	IF_48	IF_49
0x4009669	            0x740f	                            je 0x400967a	      2656	normal.c	FUNCTION_9	IF_47	IF_48	IF_49
0x400966b	      0x448b742440	           mov r14d, dword [rsp + 0x40] 	      2660	normal.c	FUNCTION_9	IF_47	IF_48	IF_49	IF_50
0x4009670	          0x4585f6	                         test r14d, r14d	      2660	normal.c	FUNCTION_9	IF_47	IF_48	IF_49	IF_50
0x4009673	            0x7513	                           jne 0x4009688	      2660	normal.c	FUNCTION_9	IF_47	IF_48	IF_49	IF_50
0x4009675	      0xe9a20e0000	                           jmp 0x400a51c	      2660	normal.c	FUNCTION_9	IF_47	IF_48	IF_49	IF_50
0x400967a	      0x448b742440	           mov r14d, dword [rsp + 0x40] 	      2677	normal.c	FUNCTION_9	IF_47	IF_48	ELSE_14	IF_52
0x400967f	          0x4585f6	                         test r14d, r14d	      2677	normal.c	FUNCTION_9	IF_47	IF_48	ELSE_14	IF_52
0x4009682	     0xf84940e0000	                            je 0x400a51c	      2677	normal.c	FUNCTION_9	IF_47	IF_48	ELSE_14	IF_52
0x4009688	      0xbf00000000	                              mov edi, 0	      2684	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	CALL_42
0x400968d	      0xb90d000000	                            mov ecx, 0xd	      2684	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	CALL_42
0x4009692	    0x488b35000000	            mov rsi, qword [0x04009699] 	      2684	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	CALL_42
0x4009699	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2684	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	CALL_42
0x400969b	           0xf97c2	                                 seta dl	      2684	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	CALL_42
0x400969e	           0xf92c0	                                 setb al	      2684	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	CALL_42
0x40096a1	    0x41be00000000	                             mov r14d, 0	      2684	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	CALL_42
0x40096a7	            0x38c2	                              cmp dl, al	      2684	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	CALL_42
0x40096a9	     0xf8523020000	                           jne 0x40098d2	      2684	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	CALL_42
0x40096af	    0x833d00000000	               cmp dword [0x040096b6], 0	      2688	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54
0x40096b6	     0xf84e1010000	                            je 0x400989d	      2688	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54
0x40096bc	    0x488b0d000000	            mov rcx, qword [0x040096c3] 	      2697	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	IF_55
0x40096c3	    0x8b819c000000	            mov eax, dword [rcx + 0x9c] 	      2697	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	IF_55
0x40096c9	    0x8b1500000000	            mov edx, dword [0x040096cf] 	      2697	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	IF_55
0x40096cf	            0x39d0	                            cmp eax, edx	      2697	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	IF_55
0x40096d1	     0xf8fc6010000	                            jg 0x400989d	      2697	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	IF_55
0x40096d7	     0x381a0000000	             add eax, dword [rcx + 0xa0]	      2698	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	IF_55
0x40096dd	            0x39c2	                            cmp edx, eax	      2698	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	IF_55
0x40096df	     0xf8fb8010000	                            jg 0x400989d	      2698	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	IF_55
0x40096e5	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      2701	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_15	IF_56	CALL_43
0x40096ea	      0xe800000000	                          call 0x40096ef	      2701	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_15	IF_56	CALL_43
0x40096ef	          0x83f801	                              cmp eax, 1	      2701	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_15	IF_56	CALL_43
0x40096f2	     0xf85a5010000	                           jne 0x400989d	      2701	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_15	IF_56	CALL_43
0x40096f8	    0x488b3d000000	            mov rdi, qword [0x040096ff] 	      2705	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_44
0x40096ff	        0x488b4738	            mov rax, qword [rdi + 0x38] 	      2705	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_44
0x4009703	    0x488b15000000	            mov rdx, qword [0x0400970a] 	      2705	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_44
0x400970a	          0x4839d0	                            cmp rax, rdx	      2705	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_44
0x400970d	            0x740a	                            je 0x4009719	      2705	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_44
0x400970f	          0x4839d0	                            cmp rax, rdx	      2705	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_44
0x4009712	            0x7c2a	                            jl 0x400973e	      2705	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_44
0x4009714	      0xe99c000000	                           jmp 0x40097b5	      2705	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_44
0x4009719	          0x8b7740	            mov esi, dword [rdi + 0x40] 	      2705	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_44
0x400971c	    0x8b0d00000000	            mov ecx, dword [0x04009722] 	      2705	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_44
0x4009722	            0x39ce	                            cmp esi, ecx	      2705	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_44
0x4009724	            0x7409	                            je 0x400972f	      2705	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_44
0x4009726	            0x39ce	                            cmp esi, ecx	      2706	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_45
0x4009728	            0x7c14	                            jl 0x400973e	      2706	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_45
0x400972a	      0xe9530e0000	                           jmp 0x400a582	      2706	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_45
0x400972f	    0x8b3500000000	            mov esi, dword [0x04009735] 	      2706	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_45
0x4009735	          0x397744	            cmp dword [rdi + 0x44], esi 	      2706	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_45
0x4009738	     0xf8d94000000	                           jge 0x40097d2	      2706	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_45
0x400973e	      0x488b4c2460	            mov rcx, qword [rsp + 0x60] 	      2706	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_45
0x4009743	          0x4839c8	                            cmp rax, rcx	      2705	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_44
0x4009746	            0x740b	                            je 0x4009753	      2705	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_44
0x4009748	          0x4839c8	                            cmp rax, rcx	      2706	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_45
0x400974b	     0xf8f4c010000	                            jg 0x400989d	      2706	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_45
0x4009751	            0xeb25	                           jmp 0x4009778	      2706	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_45
0x4009753	      0x448b442468	            mov r8d, dword [rsp + 0x68] 	      2706	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_45
0x4009758	          0x8b7740	            mov esi, dword [rdi + 0x40] 	      2706	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_45
0x400975b	          0x4139f0	                            cmp r8d, esi	      2705	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_44
0x400975e	            0x740b	                            je 0x400976b	      2705	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_44
0x4009760	          0x4139f0	                            cmp r8d, esi	      2707	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_46
0x4009763	     0xf8c34010000	                            jl 0x400989d	      2707	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_46
0x4009769	            0xeb0d	                           jmp 0x4009778	      2707	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_46
0x400976b	          0x8b7744	            mov esi, dword [rdi + 0x44] 	      2707	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_46
0x400976e	        0x3974246c	            cmp dword [rsp + 0x6c], esi 	      2707	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_46
0x4009772	     0xf8c25010000	                            jl 0x400989d	      2707	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_46
0x4009778	          0x4839ca	                            cmp rdx, rcx	      2705	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_44
0x400977b	            0x740b	                            je 0x4009788	      2705	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_44
0x400977d	          0x4839ca	                            cmp rdx, rcx	      2707	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_46
0x4009780	     0xf8c17010000	                            jl 0x400989d	      2707	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_46
0x4009786	            0xeb28	                           jmp 0x40097b0	      2707	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_46
0x4009788	    0x8b3500000000	            mov esi, dword [0x0400978e] 	      2707	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_46
0x400978e	        0x8b4c2468	            mov ecx, dword [rsp + 0x68] 	      2707	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_46
0x4009792	            0x39ce	                            cmp esi, ecx	      2705	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_44
0x4009794	            0x740a	                            je 0x40097a0	      2705	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_44
0x4009796	            0x39ce	                            cmp esi, ecx	      2707	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_46
0x4009798	     0xf8cff000000	                            jl 0x400989d	      2707	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_46
0x400979e	            0xeb10	                           jmp 0x40097b0	      2707	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_46
0x40097a0	        0x8b74246c	            mov esi, dword [rsp + 0x6c] 	      2707	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_46
0x40097a4	    0x393500000000	            cmp dword [0x040097aa], esi 	      2707	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_46
0x40097aa	     0xf8ced000000	                            jl 0x400989d	      2707	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_46
0x40097b0	          0x4839d0	                            cmp rax, rdx	      2705	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_44
0x40097b3	            0x740a	                            je 0x40097bf	      2705	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_44
0x40097b5	          0x4839d0	                            cmp rax, rdx	      2708	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_47
0x40097b8	            0x7f23	                            jg 0x40097dd	      2708	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_47
0x40097ba	      0xe981000000	                           jmp 0x4009840	      2708	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_47
0x40097bf	    0x8b3500000000	            mov esi, dword [0x040097c5] 	      2708	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_47
0x40097c5	          0x8b4f40	            mov ecx, dword [rdi + 0x40] 	      2708	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_47
0x40097c8	            0x39ce	                            cmp esi, ecx	      2705	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_44
0x40097ca	            0x7406	                            je 0x40097d2	      2705	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_44
0x40097cc	            0x39f1	                            cmp ecx, esi	      2709	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_48
0x40097ce	            0x7f0d	                            jg 0x40097dd	      2709	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_48
0x40097d0	            0xeb6e	                           jmp 0x4009840	      2709	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_48
0x40097d2	          0x8b7744	            mov esi, dword [rdi + 0x44] 	      2709	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_48
0x40097d5	    0x393500000000	            cmp dword [0x040097db], esi 	      2709	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_48
0x40097db	            0x7d63	                           jge 0x4009840	      2709	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_48
0x40097dd	      0x488b4c2460	            mov rcx, qword [rsp + 0x60] 	      2709	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_48
0x40097e2	          0x4839ca	                            cmp rdx, rcx	      2705	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_44
0x40097e5	            0x740b	                            je 0x40097f2	      2705	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_44
0x40097e7	          0x4839ca	                            cmp rdx, rcx	      2709	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_48
0x40097ea	     0xf8fad000000	                            jg 0x400989d	      2709	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_48
0x40097f0	            0xeb28	                           jmp 0x400981a	      2709	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_48
0x40097f2	        0x8b742468	            mov esi, dword [rsp + 0x68] 	      2709	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_48
0x40097f6	    0x8b1500000000	            mov edx, dword [0x040097fc] 	      2709	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_48
0x40097fc	            0x39d6	                            cmp esi, edx	      2705	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_44
0x40097fe	            0x740a	                            je 0x400980a	      2705	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_44
0x4009800	            0x39d6	                            cmp esi, edx	      2710	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_49
0x4009802	     0xf8c95000000	                            jl 0x400989d	      2710	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_49
0x4009808	            0xeb10	                           jmp 0x400981a	      2710	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_49
0x400980a	    0x8b3500000000	            mov esi, dword [0x04009810] 	      2710	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_49
0x4009810	        0x3974246c	            cmp dword [rsp + 0x6c], esi 	      2710	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_49
0x4009814	     0xf8c83000000	                            jl 0x400989d	      2710	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_49
0x400981a	          0x4839c8	                            cmp rax, rcx	      2705	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_44
0x400981d	            0x7407	                            je 0x4009826	      2705	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_44
0x400981f	          0x4839c8	                            cmp rax, rcx	      2710	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_49
0x4009822	            0x7c79	                            jl 0x400989d	      2710	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_49
0x4009824	            0xeb1a	                           jmp 0x4009840	      2710	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_49
0x4009826	          0x8b5740	            mov edx, dword [rdi + 0x40] 	      2710	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_49
0x4009829	        0x8b442468	            mov eax, dword [rsp + 0x68] 	      2710	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_49
0x400982d	            0x39c2	                            cmp edx, eax	      2705	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_44
0x400982f	            0x7406	                            je 0x4009837	      2705	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_44
0x4009831	            0x39c2	                            cmp edx, eax	      2710	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_49
0x4009833	            0x7c68	                            jl 0x400989d	      2710	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_49
0x4009835	            0xeb09	                           jmp 0x4009840	      2710	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_49
0x4009837	        0x8b44246c	            mov eax, dword [rsp + 0x6c] 	      2710	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_49
0x400983b	          0x394744	            cmp dword [rdi + 0x44], eax 	      2710	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_49
0x400983e	            0x7c5d	                            jl 0x400989d	      2710	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_49
0x4009840	    0x833d00000000	           cmp dword [0x04009847], 0x16 	      2714	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	ELSE_17	IF_58
0x4009847	     0xf85430d0000	                           jne 0x400a590	      2714	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	ELSE_17	IF_58
0x400984d	        0x488d7738	                   lea rsi, [rdi + 0x38]	      2716	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	ELSE_17	IF_58	CALL_50
0x4009851	      0x4c8d44244c	                    lea r8, [rsp + 0x4c]	      2716	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	ELSE_17	IF_58	CALL_50
0x4009856	      0x488d4c2448	                   lea rcx, [rsp + 0x48]	      2716	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	ELSE_17	IF_58	CALL_50
0x400985b	      0xba00000000	                              mov edx, 0	      2716	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	ELSE_17	IF_58	CALL_50
0x4009860	      0xe800000000	                          call 0x4009865	      2716	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	ELSE_17	IF_58	CALL_50
0x4009865	      0x488d442460	                   lea rax, [rsp + 0x60]	      2718	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	ELSE_17	IF_58	CALL_51
0x400986a	      0x488d4c2468	                   lea rcx, [rsp + 0x68]	      2718	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	ELSE_17	IF_58	CALL_51
0x400986f	    0x41b800000000	                              mov r8d, 0	      2718	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	ELSE_17	IF_58	CALL_51
0x4009875	      0xba00000000	                              mov edx, 0	      2718	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	ELSE_17	IF_58	CALL_51
0x400987a	          0x4889c6	                            mov rsi, rax	      2718	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	ELSE_17	IF_58	CALL_51
0x400987d	    0x488b3d000000	            mov rdi, qword [0x04009884] 	      2718	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	ELSE_17	IF_58	CALL_51
0x4009884	      0xe800000000	                          call 0x4009889	      2718	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	ELSE_17	IF_58	CALL_51
0x4009889	        0x8b442468	            mov eax, dword [rsp + 0x68] 	      2719	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	ELSE_17	IF_58	IF_59
0x400988d	        0x3b442448	            cmp eax, dword [rsp + 0x48] 	      2719	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	ELSE_17	IF_58	IF_59
0x4009891	            0x7c0a	                            jl 0x400989d	      2719	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	ELSE_17	IF_58	IF_59
0x4009893	        0x3b44244c	            cmp eax, dword [rsp + 0x4c] 	      2719	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	ELSE_17	IF_58	IF_59
0x4009897	     0xf8ef30c0000	                           jle 0x400a590	      2719	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	ELSE_17	IF_58	IF_59
0x400989d	      0xba02000000	                              mov edx, 2	      2729	normal.c	FUNCTION_9	IF_47	IF_48	ELSE_18	IF_60	CALL_52
0x40098a2	      0xbe00000000	                              mov esi, 0	      2729	normal.c	FUNCTION_9	IF_47	IF_48	ELSE_18	IF_60	CALL_52
0x40098a7	      0xbf10000000	                           mov edi, 0x10	      2729	normal.c	FUNCTION_9	IF_47	IF_48	ELSE_18	IF_60	CALL_52
0x40098ac	      0xe800000000	                          call 0x40098b1	      2729	normal.c	FUNCTION_9	IF_47	IF_48	ELSE_18	IF_60	CALL_52
0x40098b1	          0x4189c6	                           mov r14d, eax	      2729	normal.c	FUNCTION_9	IF_47	IF_48	ELSE_18	IF_60	CALL_52
0x40098b4	    0x833d00000000	               cmp dword [0x040098bb], 1	      2730	normal.c	FUNCTION_9	IF_47	IF_48	ELSE_18	IF_60	CALL_53
0x40098bb	            0x19ff	                            sbb edi, edi	      2730	normal.c	FUNCTION_9	IF_47	IF_48	ELSE_18	IF_60	CALL_53
0x40098bd	          0x83e7f6	                     and edi, 0xfffffff6	      2730	normal.c	FUNCTION_9	IF_47	IF_48	ELSE_18	IF_60	CALL_53
0x40098c0	          0x83c714	                           add edi, 0x14	      2730	normal.c	FUNCTION_9	IF_47	IF_48	ELSE_18	IF_60	CALL_53
0x40098c3	      0xe800000000	                          call 0x40098c8	      2730	normal.c	FUNCTION_9	IF_47	IF_48	ELSE_18	IF_60	CALL_53
0x40098c8	      0xe800000000	                          call 0x40098cd	      2731	normal.c	FUNCTION_9	IF_47	IF_48	ELSE_18	IF_60	CALL_54
0x40098cd	      0xe800000000	                          call 0x40098d2	      2732	normal.c	FUNCTION_9	IF_47	IF_48	ELSE_18	IF_60	CALL_55
0x40098d2	      0xe800000000	                          call 0x40098d7	      2735	normal.c	FUNCTION_9	IF_47	IF_48	CALL_56
0x40098d7	    0xc70500000000	               mov dword [0x040098e1], 0	      2736	normal.c	FUNCTION_9	IF_47	IF_48
0x40098e1	        0x41c1ee08	                             shr r14d, 8	      2738	normal.c	FUNCTION_9	IF_47	IF_48
0x40098e5	        0x4183e601	                             and r14d, 1	      2738	normal.c	FUNCTION_9	IF_47	IF_48
0x40098e9	      0xe92e0c0000	                           jmp 0x400a51c	      2738	normal.c	FUNCTION_9	IF_47	IF_48
0x40098ee	          0x4585ed	                         test r13d, r13d	      2743	normal.c	FUNCTION_9	IF_47	IF_61
0x40098f1	            0x7519	                           jne 0x400990c	      2743	normal.c	FUNCTION_9	IF_47	IF_61
0x40098f3	    0x8b0500000000	            mov eax, dword [0x040098f9] 	      2744	normal.c	FUNCTION_9	IF_47	IF_61
0x40098f9	            0xa80a	                            test al, 0xa	      2744	normal.c	FUNCTION_9	IF_47	IF_61
0x40098fb	            0x740f	                            je 0x400990c	      2744	normal.c	FUNCTION_9	IF_47	IF_61
0x40098fd	          0x83e0fd	                     and eax, 0xfffffffd	      2747	normal.c	FUNCTION_9	IF_47	IF_61
0x4009900	    0x890500000000	            mov dword [0x04009906], eax 	      2747	normal.c	FUNCTION_9	IF_47	IF_61
0x4009906	    0x41bd02000000	                             mov r13d, 2	      2746	normal.c	FUNCTION_9	IF_47	IF_61
0x400990c	    0xf60500000000	           test byte [0x04009913], 0x11 	      2751	normal.c	FUNCTION_9	IF_62
0x4009913	     0xf841f010000	                            je 0x4009a38	      2751	normal.c	FUNCTION_9	IF_62
0x4009919	    0xf60500000000	               test byte [0x04009920], 6	      2752	normal.c	FUNCTION_9	IF_62
0x4009920	     0xf8512010000	                           jne 0x4009a38	      2752	normal.c	FUNCTION_9	IF_62
0x4009926	          0x4585ed	                         test r13d, r13d	      2754	normal.c	FUNCTION_9	IF_62	IF_63
0x4009929	            0x7538	                           jne 0x4009963	      2754	normal.c	FUNCTION_9	IF_62	IF_63
0x400992b	      0x837c244000	               cmp dword [rsp + 0x40], 0	      2756	normal.c	FUNCTION_9	IF_62	IF_63	IF_64
0x4009930	            0x7416	                            je 0x4009948	      2756	normal.c	FUNCTION_9	IF_62	IF_63	IF_64
0x4009932	          0x4489f0	                           mov eax, r14d	      2761	normal.c	FUNCTION_9	IF_62	IF_63	IF_64	IF_65
0x4009935	          0x83c810	                            or eax, 0x10	      2761	normal.c	FUNCTION_9	IF_62	IF_63	IF_64	IF_65
0x4009938	    0x833d00000000	               cmp dword [0x0400993f], 0	      2761	normal.c	FUNCTION_9	IF_62	IF_63	IF_64	IF_65
0x400993f	        0x440f45f0	                        cmovne r14d, eax	      2761	normal.c	FUNCTION_9	IF_62	IF_63	IF_64	IF_65
0x4009943	      0xe9f0000000	                           jmp 0x4009a38	      2761	normal.c	FUNCTION_9	IF_62	IF_63	IF_64	IF_65
0x4009948	      0xbf76000000	                           mov edi, 0x76	      2763	normal.c	FUNCTION_9	IF_62	IF_63	ELSE_19	IF_66	CALL_57
0x400994d	      0xe800000000	                          call 0x4009952	      2763	normal.c	FUNCTION_9	IF_62	IF_63	ELSE_19	IF_66	CALL_57
0x4009952	          0x4489f2	                           mov edx, r14d	      2764	normal.c	FUNCTION_9	IF_62	IF_63	ELSE_19	IF_66
0x4009955	          0x83ca02	                               or edx, 2	      2764	normal.c	FUNCTION_9	IF_62	IF_63	ELSE_19	IF_66
0x4009958	            0x85c0	                           test eax, eax	      2764	normal.c	FUNCTION_9	IF_62	IF_63	ELSE_19	IF_66
0x400995a	        0x440f45f2	                        cmovne r14d, edx	      2764	normal.c	FUNCTION_9	IF_62	IF_63	ELSE_19	IF_66
0x400995e	      0xe9d5000000	                           jmp 0x4009a38	      2764	normal.c	FUNCTION_9	IF_62	IF_63	ELSE_19	IF_66
0x4009963	        0x4183fd02	                             cmp r13d, 2	      2766	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67
0x4009967	     0xf85cb000000	                           jne 0x4009a38	      2766	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67
0x400996d	      0x837c244000	               cmp dword [rsp + 0x40], 0	      2768	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68
0x4009972	     0xf84a6000000	                            je 0x4009a1e	      2768	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68
0x4009978	    0x833d00000000	               cmp dword [0x0400997f], 0	      2768	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68
0x400997f	     0xf8499000000	                            je 0x4009a1e	      2768	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68
0x4009985	    0x488b05000000	            mov rax, qword [0x0400998c] 	      2774	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69	CALL_58
0x400998c	        0x488b4838	            mov rcx, qword [rax + 0x38] 	      2774	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69	CALL_58
0x4009990	    0x488b15000000	            mov rdx, qword [0x04009997] 	      2774	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69	CALL_58
0x4009997	          0x4839d1	                            cmp rcx, rdx	      2774	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69	CALL_58
0x400999a	            0x7408	                            je 0x40099a4	      2774	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69	CALL_58
0x400999c	          0x4839d1	                            cmp rcx, rdx	      2774	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69	CALL_58
0x400999f	           0xf9cc2	                                 setl dl	      2774	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69	CALL_58
0x40099a2	            0xeb20	                           jmp 0x40099c4	      2774	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69	CALL_58
0x40099a4	          0x8b4840	            mov ecx, dword [rax + 0x40] 	      2774	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69	CALL_58
0x40099a7	    0x8b1500000000	            mov edx, dword [0x040099ad] 	      2774	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69	CALL_58
0x40099ad	            0x39d1	                            cmp ecx, edx	      2774	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69	CALL_58
0x40099af	            0x7407	                            je 0x40099b8	      2774	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69	CALL_58
0x40099b1	            0x39d1	                            cmp ecx, edx	      2774	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69	CALL_58
0x40099b3	           0xf9cc2	                                 setl dl	      2774	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69	CALL_58
0x40099b6	            0xeb0c	                           jmp 0x40099c4	      2774	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69	CALL_58
0x40099b8	    0x8b0d00000000	            mov ecx, dword [0x040099be] 	      2774	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69	CALL_58
0x40099be	          0x394844	            cmp dword [rax + 0x44], ecx 	      2774	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69	CALL_58
0x40099c1	           0xf9cc2	                                 setl dl	      2774	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69	CALL_58
0x40099c4	            0x84d2	                             test dl, dl	      2774	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69	CALL_58
0x40099c6	            0x742c	                            je 0x40099f4	      2774	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69	CALL_58
0x40099c8	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      2776	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69
0x40099cc	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2776	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69
0x40099d0	      0x4889442450	             mov qword [rsp + 0x50], rax	      2776	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69
0x40099d5	      0x4889542458	             mov qword [rsp + 0x58], rdx	      2776	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69
0x40099da	    0x488b05000000	            mov rax, qword [0x040099e1] 	      2777	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69
0x40099e1	    0x488b15000000	            mov rdx, qword [0x040099e8] 	      2777	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69
0x40099e8	      0x4889442460	             mov qword [rsp + 0x60], rax	      2777	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69
0x40099ed	      0x4889542468	             mov qword [rsp + 0x68], rdx	      2777	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69
0x40099f2	            0xeb2a	                           jmp 0x4009a1e	      2777	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69
0x40099f4	    0x488b35000000	            mov rsi, qword [0x040099fb] 	      2781	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	ELSE_21
0x40099fb	    0x488b3d000000	            mov rdi, qword [0x04009a02] 	      2781	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	ELSE_21
0x4009a02	      0x4889742450	             mov qword [rsp + 0x50], rsi	      2781	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	ELSE_21
0x4009a07	      0x48897c2458	             mov qword [rsp + 0x58], rdi	      2781	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	ELSE_21
0x4009a0c	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      2782	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	ELSE_21
0x4009a10	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2782	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	ELSE_21
0x4009a14	      0x4889442460	             mov qword [rsp + 0x60], rax	      2782	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	ELSE_21
0x4009a19	      0x4889542468	             mov qword [rsp + 0x68], rdx	      2782	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	ELSE_21
0x4009a1e	      0xbf76000000	                           mov edi, 0x76	      2786	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_70	CALL_59
0x4009a23	      0xe800000000	                          call 0x4009a28	      2786	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_70	CALL_59
0x4009a28	          0x4489f2	                           mov edx, r14d	      2785	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67
0x4009a2b	          0x83ca01	                               or edx, 1	      2785	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67
0x4009a2e	        0x4183ce03	                              or r14d, 3	      2785	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67
0x4009a32	            0x85c0	                           test eax, eax	      2785	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67
0x4009a34	        0x440f44f2	                         cmove r14d, edx	      2785	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67
0x4009a38	        0x8b442444	            mov eax, dword [rsp + 0x44] 	      2795	normal.c	FUNCTION_9	IF_71
0x4009a3c	        0x488b3424	                    mov rsi, qword [rsp]	      2795	normal.c	FUNCTION_9	IF_71
0x4009a40	          0x4885f6	                           test rsi, rsi	      2795	normal.c	FUNCTION_9	IF_71
0x4009a43	       0xf95442437	                 setne byte [rsp + 0x37]	      2795	normal.c	FUNCTION_9	IF_71
0x4009a48	       0xfb64c2437	           movzx ecx, byte [rsp + 0x37] 	      2795	normal.c	FUNCTION_9	IF_71
0x4009a4d	            0x85c0	                           test eax, eax	      2795	normal.c	FUNCTION_9	IF_71
0x4009a4f	            0x751a	                           jne 0x4009a6b	      2795	normal.c	FUNCTION_9	IF_71
0x4009a51	            0x84c9	                             test cl, cl	      2795	normal.c	FUNCTION_9	IF_71
0x4009a53	            0x7416	                            je 0x4009a6b	      2795	normal.c	FUNCTION_9	IF_71
0x4009a55	          0x833e00	                      cmp dword [rsi], 0	      2795	normal.c	FUNCTION_9	IF_71
0x4009a58	            0x7411	                            je 0x4009a6b	      2795	normal.c	FUNCTION_9	IF_71
0x4009a5a	    0xc70500000000	               mov dword [0x04009a64], 0	      2797	normal.c	FUNCTION_9	IF_71
0x4009a64	    0xc74608000000	                  mov dword [rsi + 8], 0	      2798	normal.c	FUNCTION_9	IF_71
0x4009a6b	         0xb442440	              or eax, dword [rsp + 0x40]	      2802	normal.c	FUNCTION_9	IF_72
0x4009a6f	          0x4489f2	                           mov edx, r14d	      2803	normal.c	FUNCTION_9	IF_72
0x4009a72	          0x83ca20	                            or edx, 0x20	      2803	normal.c	FUNCTION_9	IF_72
0x4009a75	            0x85c0	                           test eax, eax	      2803	normal.c	FUNCTION_9	IF_72
0x4009a77	        0x440f44f2	                         cmove r14d, edx	      2803	normal.c	FUNCTION_9	IF_72
0x4009a7b	        0x488b0c24	                    mov rcx, qword [rsp]	      2808	normal.c	FUNCTION_9	CALL_60
0x4009a7f	          0x4889c8	                            mov rax, rcx	      2808	normal.c	FUNCTION_9	CALL_60
0x4009a82	        0x4883c014	                           add rax, 0x14	      2808	normal.c	FUNCTION_9	CALL_60
0x4009a86	          0x4885c9	                           test rcx, rcx	      2808	normal.c	FUNCTION_9	CALL_60
0x4009a89	      0xbe00000000	                              mov esi, 0	      2808	normal.c	FUNCTION_9	CALL_60
0x4009a8e	        0x480f45f0	                         cmovne rsi, rax	      2808	normal.c	FUNCTION_9	CALL_60
0x4009a92	          0x4489ea	                           mov edx, r13d	      2808	normal.c	FUNCTION_9	CALL_60
0x4009a95	          0x4489f7	                           mov edi, r14d	      2808	normal.c	FUNCTION_9	CALL_60
0x4009a98	      0xe800000000	                          call 0x4009a9d	      2808	normal.c	FUNCTION_9	CALL_60
0x4009a9d	            0x89c5	                            mov ebp, eax	      2808	normal.c	FUNCTION_9	CALL_60
0x4009a9f	    0x41be00000000	                             mov r14d, 0	      2814	normal.c	FUNCTION_9	IF_73
0x4009aa5	          0xf6c408	                              test ah, 8	      2813	normal.c	FUNCTION_9	IF_73
0x4009aa8	     0xf856e0a0000	                           jne 0x400a51c	      2813	normal.c	FUNCTION_9	IF_73
0x4009aae	      0x2500010000	                          and eax, 0x100	      2816	normal.c	FUNCTION_9
0x4009ab3	        0x89442438	             mov dword [rsp + 0x38], eax	      2816	normal.c	FUNCTION_9
0x4009ab7	            0x89e8	                            mov eax, ebp	      2817	normal.c	FUNCTION_9
0x4009ab9	          0x83e002	                              and eax, 2	      2817	normal.c	FUNCTION_9
0x4009abc	        0x8944243c	             mov dword [rsp + 0x3c], eax	      2817	normal.c	FUNCTION_9
0x4009ac0	    0x488b3d000000	            mov rdi, qword [0x04009ac7] 	      2821	normal.c	FUNCTION_9	IF_74	CALL_61
0x4009ac7	      0xe800000000	                          call 0x4009acc	      2821	normal.c	FUNCTION_9	IF_74	CALL_61
0x4009acc	            0x85c0	                           test eax, eax	      2821	normal.c	FUNCTION_9	IF_74	CALL_61
0x4009ace	            0x7423	                            je 0x4009af3	      2821	normal.c	FUNCTION_9	IF_74	CALL_61
0x4009ad0	        0x40f6c506	                             test bpl, 6	      2822	normal.c	FUNCTION_9	IF_74
0x4009ad4	            0x751d	                           jne 0x4009af3	      2822	normal.c	FUNCTION_9	IF_74
0x4009ad6	          0x83fb34	                           cmp ebx, 0x34	      2826	normal.c	FUNCTION_9	IF_74	IF_75
0x4009ad9	            0x7718	                            ja 0x4009af3	      2826	normal.c	FUNCTION_9	IF_74	IF_75
0x4009adb	    0x48b800000000	           movabs rax, 0x12400000000000 	      2827	normal.c	FUNCTION_9	IF_74	IF_75
0x4009ae5	        0x480fa3d8	                             bt rax, rbx	      2827	normal.c	FUNCTION_9	IF_74	IF_75
0x4009ae9	            0x7308	                           jae 0x4009af3	      2827	normal.c	FUNCTION_9	IF_74	IF_75
0x4009aeb	          0x4489ef	                           mov edi, r13d	      2828	normal.c	FUNCTION_9	IF_74	CALL_63
0x4009aee	      0xe800000000	                          call 0x4009af3	      2828	normal.c	FUNCTION_9	IF_74	CALL_63
0x4009af3	    0x4c3925000000	            cmp qword [0x04009afa], r12 	      2834	normal.c	FUNCTION_9	IF_76
0x4009afa	            0x742b	                            je 0x4009b27	      2834	normal.c	FUNCTION_9	IF_76
0x4009afc	      0x807c243700	                cmp byte [rsp + 0x37], 0	      2834	normal.c	FUNCTION_9	IF_76
0x4009b01	            0x7424	                            je 0x4009b27	      2834	normal.c	FUNCTION_9	IF_76
0x4009b03	        0x488b0424	                    mov rax, qword [rsp]	      2834	normal.c	FUNCTION_9	IF_76
0x4009b07	          0x833800	                      cmp dword [rax], 0	      2834	normal.c	FUNCTION_9	IF_76
0x4009b0a	            0x741b	                            je 0x4009b27	      2834	normal.c	FUNCTION_9	IF_76
0x4009b0c	    0xc70000000000	                      mov dword [rax], 0	      3676	normal.c	FUNCTION_24
0x4009b12	    0xc74004000000	                  mov dword [rax + 4], 0	      3677	normal.c	FUNCTION_24
0x4009b19	    0xc7400c000000	                mov dword [rax + 0xc], 0	      3678	normal.c	FUNCTION_24
0x4009b20	    0xc74010000000	               mov dword [rax + 0x10], 0	      3679	normal.c	FUNCTION_24
0x4009b27	    0x833d00000000	               cmp dword [0x04009b2e], 0	      2838	normal.c	FUNCTION_9	IF_77
0x4009b2e	            0x756d	                           jne 0x4009b9d	      2838	normal.c	FUNCTION_9	IF_77
0x4009b30	      0x837c244400	               cmp dword [rsp + 0x44], 0	      2839	normal.c	FUNCTION_9	IF_77
0x4009b35	            0x7566	                           jne 0x4009b9d	      2839	normal.c	FUNCTION_9	IF_77
0x4009b37	    0xf7c500060000	                         test ebp, 0x600	      2841	normal.c	FUNCTION_9	IF_77
0x4009b3d	            0x745e	                            je 0x4009b9d	      2841	normal.c	FUNCTION_9	IF_77
0x4009b3f	          0x4585ed	                         test r13d, r13d	      2841	normal.c	FUNCTION_9	IF_77
0x4009b42	            0x7559	                           jne 0x4009b9d	      2841	normal.c	FUNCTION_9	IF_77
0x4009b44	    0xf7c500040000	                         test ebp, 0x400	      2844	normal.c	FUNCTION_9	IF_77	IF_78
0x4009b4a	            0x7417	                            je 0x4009b63	      2844	normal.c	FUNCTION_9	IF_77	IF_78
0x4009b4c	    0x488b05000000	            mov rax, qword [0x04009b53] 	      2845	normal.c	FUNCTION_9	IF_77	CALL_65
0x4009b53	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      2845	normal.c	FUNCTION_9	IF_77	CALL_65
0x4009b57	      0xbe01000000	                              mov esi, 1	      2845	normal.c	FUNCTION_9	IF_77	CALL_65
0x4009b5c	      0xe800000000	                          call 0x4009b61	      2845	normal.c	FUNCTION_9	IF_77	CALL_65
0x4009b61	            0xeb15	                           jmp 0x4009b78	      2845	normal.c	FUNCTION_9	IF_77	CALL_65
0x4009b63	    0x488b05000000	            mov rax, qword [0x04009b6a] 	      2847	normal.c	FUNCTION_9	IF_77	CALL_66
0x4009b6a	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      2847	normal.c	FUNCTION_9	IF_77	CALL_66
0x4009b6e	      0xbe01000000	                              mov esi, 1	      2847	normal.c	FUNCTION_9	IF_77	CALL_66
0x4009b73	      0xe800000000	                          call 0x4009b78	      2847	normal.c	FUNCTION_9	IF_77	CALL_66
0x4009b78	    0x4c3b25000000	            cmp r12, qword [0x04009b7f] 	      2849	normal.c	FUNCTION_9	IF_77	IF_79
0x4009b7f	            0x751c	                           jne 0x4009b9d	      2849	normal.c	FUNCTION_9	IF_77	IF_79
0x4009b81	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      2850	normal.c	FUNCTION_9	IF_77	IF_79
0x4009b86	      0x4989442438	             mov qword [r12 + 0x38], rax	      2850	normal.c	FUNCTION_9	IF_77	IF_79
0x4009b8b	        0x8b442424	            mov eax, dword [rsp + 0x24] 	      2850	normal.c	FUNCTION_9	IF_77	IF_79
0x4009b8f	      0x4189442440	             mov dword [r12 + 0x40], eax	      2850	normal.c	FUNCTION_9	IF_77	IF_79
0x4009b94	        0x8b442430	            mov eax, dword [rsp + 0x30] 	      2850	normal.c	FUNCTION_9	IF_77	IF_79
0x4009b98	      0x4189442444	             mov dword [r12 + 0x44], eax	      2850	normal.c	FUNCTION_9	IF_77	IF_79
0x4009b9d	        0x40f6c508	                             test bpl, 8	      2855	normal.c	FUNCTION_9	IF_80
0x4009ba1	            0x742a	                            je 0x4009bcd	      2855	normal.c	FUNCTION_9	IF_80
0x4009ba3	    0x448b35000000	           mov r14d, dword [0x04009baa] 	      2855	normal.c	FUNCTION_9	IF_80
0x4009baa	          0x4585f6	                         test r14d, r14d	      2855	normal.c	FUNCTION_9	IF_80
0x4009bad	            0x7527	                           jne 0x4009bd6	      2855	normal.c	FUNCTION_9	IF_80
0x4009baf	    0x833d00000000	               cmp dword [0x04009bb6], 0	      2855	normal.c	FUNCTION_9	IF_80
0x4009bb6	            0x7450	                            je 0x4009c08	      2855	normal.c	FUNCTION_9	IF_80
0x4009bb8	        0x8b542444	            mov edx, dword [rsp + 0x44] 	      2857	normal.c	FUNCTION_9	IF_80	CALL_67
0x4009bbc	        0x8b742440	            mov esi, dword [rsp + 0x40] 	      2857	normal.c	FUNCTION_9	IF_80	CALL_67
0x4009bc0	          0x4489ef	                           mov edi, r13d	      2857	normal.c	FUNCTION_9	IF_80	CALL_67
0x4009bc3	      0xe800000000	                          call 0x4009bc8	      2857	normal.c	FUNCTION_9	IF_80	CALL_67
0x4009bc8	      0xe94f090000	                           jmp 0x400a51c	      2858	normal.c	FUNCTION_9	IF_80
0x4009bcd	    0x833d00000000	               cmp dword [0x04009bd4], 0	      2864	normal.c	FUNCTION_9	IF_81
0x4009bd4	            0x7432	                            je 0x4009c08	      2864	normal.c	FUNCTION_9	IF_81
0x4009bd6	      0x837c244400	               cmp dword [rsp + 0x44], 0	      2864	normal.c	FUNCTION_9	IF_81
0x4009bdb	            0x745b	                            je 0x4009c38	      2864	normal.c	FUNCTION_9	IF_81
0x4009bdd	    0x48833d000000	               cmp qword [0x04009be5], 0	      2864	normal.c	FUNCTION_9	IF_81
0x4009be5	            0x7428	                            je 0x4009c0f	      2864	normal.c	FUNCTION_9	IF_81
0x4009be7	    0x833d00000000	               cmp dword [0x04009bee], 0	      2867	normal.c	FUNCTION_9	IF_81	IF_82
0x4009bee	            0x750c	                           jne 0x4009bfc	      2867	normal.c	FUNCTION_9	IF_81	IF_82
0x4009bf0	    0xc70500000000	               mov dword [0x04009bfa], 2	      2868	normal.c	FUNCTION_9	IF_81	IF_82
0x4009bfa	            0xeb3c	                           jmp 0x4009c38	      2868	normal.c	FUNCTION_9	IF_81	IF_82
0x4009bfc	    0xc70500000000	               mov dword [0x04009c06], 1	      2870	normal.c	FUNCTION_9	IF_81	ELSE_23
0x4009c06	            0xeb07	                           jmp 0x4009c0f	      2870	normal.c	FUNCTION_9	IF_81	ELSE_23
0x4009c08	      0x837c244400	               cmp dword [rsp + 0x44], 0	      2874	normal.c	FUNCTION_9	ELSE_23	IF_83
0x4009c0d	            0x7429	                            je 0x4009c38	      2874	normal.c	FUNCTION_9	ELSE_23	IF_83
0x4009c0f	    0x833d00000000	               cmp dword [0x04009c16], 0	      2874	normal.c	FUNCTION_9	ELSE_23	IF_83
0x4009c16	            0x7920	                           jns 0x4009c38	      2874	normal.c	FUNCTION_9	ELSE_23	IF_83
0x4009c18	      0x837c243c00	               cmp dword [rsp + 0x3c], 0	      2874	normal.c	FUNCTION_9	ELSE_23	IF_83
0x4009c1d	            0x7519	                           jne 0x4009c38	      2874	normal.c	FUNCTION_9	ELSE_23	IF_83
0x4009c1f	      0xbe01000000	                              mov esi, 1	      2876	normal.c	FUNCTION_9	ELSE_23	IF_83	CALL_68
0x4009c24	      0xbf00000000	                              mov edi, 0	      2876	normal.c	FUNCTION_9	ELSE_23	IF_83	CALL_68
0x4009c29	      0xe800000000	                          call 0x4009c2e	      2876	normal.c	FUNCTION_9	ELSE_23	IF_83	CALL_68
0x4009c2e	    0xc70500000000	               mov dword [0x04009c38], 0	      2877	normal.c	FUNCTION_9	ELSE_23	IF_83
0x4009c38	      0x488b442450	            mov rax, qword [rsp + 0x50] 	      2880	normal.c	FUNCTION_9	IF_84
0x4009c3d	          0x4885c0	                           test rax, rax	      2880	normal.c	FUNCTION_9	IF_84
0x4009c40	     0xf847e020000	                            je 0x4009ec4	      2880	normal.c	FUNCTION_9	IF_84
0x4009c46	    0xf60500000000	               test byte [0x04009c4d], 8	      2883	normal.c	FUNCTION_9	IF_84	IF_85
0x4009c4d	            0x740c	                            je 0x4009c5b	      2883	normal.c	FUNCTION_9	IF_84	IF_85
0x4009c4f	    0xc70500000000	           mov dword [0x04009c59], 0x16 	      2884	normal.c	FUNCTION_9	IF_84	IF_85
0x4009c59	            0xeb0d	                           jmp 0x4009c68	      2884	normal.c	FUNCTION_9	IF_84	IF_85
0x4009c5b	    0x833d00000000	           cmp dword [0x04009c62], 0x16 	      2890	normal.c	FUNCTION_9	IF_84	IF_86
0x4009c62	     0xf85cb000000	                           jne 0x4009d33	      2890	normal.c	FUNCTION_9	IF_84	IF_86
0x4009c68	      0x4c8d44244c	                    lea r8, [rsp + 0x4c]	      2892	normal.c	FUNCTION_9	IF_84	IF_86	CALL_69
0x4009c6d	      0x488d4c2448	                   lea rcx, [rsp + 0x48]	      2892	normal.c	FUNCTION_9	IF_84	IF_86	CALL_69
0x4009c72	      0x488d542460	                   lea rdx, [rsp + 0x60]	      2892	normal.c	FUNCTION_9	IF_84	IF_86	CALL_69
0x4009c77	      0x488d742450	                   lea rsi, [rsp + 0x50]	      2892	normal.c	FUNCTION_9	IF_84	IF_86	CALL_69
0x4009c7c	    0x488b3d000000	            mov rdi, qword [0x04009c83] 	      2892	normal.c	FUNCTION_9	IF_84	IF_86	CALL_69
0x4009c83	      0xe800000000	                          call 0x4009c88	      2892	normal.c	FUNCTION_9	IF_84	IF_86	CALL_69
0x4009c88	    0x488b15000000	            mov rdx, qword [0x04009c8f] 	      2893	normal.c	FUNCTION_9	IF_84	IF_86	IF_87
0x4009c8f	        0x8b742448	            mov esi, dword [rsp + 0x48] 	      2893	normal.c	FUNCTION_9	IF_84	IF_86	IF_87
0x4009c93	        0x8b4c244c	            mov ecx, dword [rsp + 0x4c] 	      2893	normal.c	FUNCTION_9	IF_84	IF_86	IF_87
0x4009c97	          0x8d040e	                    lea eax, [rsi + rcx]	      2893	normal.c	FUNCTION_9	IF_84	IF_86	IF_87
0x4009c9a	            0x89c7	                            mov edi, eax	      2893	normal.c	FUNCTION_9	IF_84	IF_86	IF_87
0x4009c9c	          0xc1ef1f	                           shr edi, 0x1f	      2893	normal.c	FUNCTION_9	IF_84	IF_86	IF_87
0x4009c9f	             0x1f8	                            add eax, edi	      2893	normal.c	FUNCTION_9	IF_84	IF_86	IF_87
0x4009ca1	            0xd1f8	                              sar eax, 1	      2893	normal.c	FUNCTION_9	IF_84	IF_86	IF_87
0x4009ca3	          0x394248	            cmp dword [rdx + 0x48], eax 	      2894	normal.c	FUNCTION_9	IF_84	IF_86	IF_87
0x4009ca6	           0xf4fce	                          cmovg ecx, esi	      2894	normal.c	FUNCTION_9	IF_84	IF_86	IF_87
0x4009ca9	        0x894c2468	             mov dword [rsp + 0x68], ecx	      2894	normal.c	FUNCTION_9	IF_84	IF_86	IF_87
0x4009cad	      0x488b4c2450	            mov rcx, qword [rsp + 0x50] 	      2898	normal.c	FUNCTION_9	IF_84	IF_86	IF_88
0x4009cb2	          0x4889c8	                            mov rax, rcx	      2897	normal.c	FUNCTION_9	IF_84	IF_86	IF_88
0x4009cb5	      0x4803442460	             add rax, qword [rsp + 0x60]	      2897	normal.c	FUNCTION_9	IF_84	IF_86	IF_88
0x4009cba	          0x4889c6	                            mov rsi, rax	      2897	normal.c	FUNCTION_9	IF_84	IF_86	IF_88
0x4009cbd	        0x48c1ee3f	                           shr rsi, 0x3f	      2897	normal.c	FUNCTION_9	IF_84	IF_86	IF_88
0x4009cc1	          0x4801f0	                            add rax, rsi	      2897	normal.c	FUNCTION_9	IF_84	IF_86	IF_88
0x4009cc4	          0x48d1f8	                              sar rax, 1	      2897	normal.c	FUNCTION_9	IF_84	IF_86	IF_88
0x4009cc7	        0x48394238	            cmp qword [rdx + 0x38], rax 	      2897	normal.c	FUNCTION_9	IF_84	IF_86	IF_88
0x4009ccb	            0x7c05	                            jl 0x4009cd2	      2897	normal.c	FUNCTION_9	IF_84	IF_86	IF_88
0x4009ccd	      0x48894c2460	             mov qword [rsp + 0x60], rcx	      2899	normal.c	FUNCTION_9	IF_84	IF_86	IF_88
0x4009cd2	        0x488b4a38	            mov rcx, qword [rdx + 0x38] 	      2902	normal.c	FUNCTION_9	IF_84	IF_86
0x4009cd6	        0x488b5a40	            mov rbx, qword [rdx + 0x40] 	      2902	normal.c	FUNCTION_9	IF_84	IF_86
0x4009cda	      0x48894c2450	             mov qword [rsp + 0x50], rcx	      2902	normal.c	FUNCTION_9	IF_84	IF_86
0x4009cdf	      0x48895c2458	             mov qword [rsp + 0x58], rbx	      2902	normal.c	FUNCTION_9	IF_84	IF_86
0x4009ce4	      0x488b4c2460	            mov rcx, qword [rsp + 0x60] 	      2903	normal.c	FUNCTION_9	IF_84	IF_86
0x4009ce9	      0x488b5c2468	            mov rbx, qword [rsp + 0x68] 	      2903	normal.c	FUNCTION_9	IF_84	IF_86
0x4009cee	        0x48894a38	             mov qword [rdx + 0x38], rcx	      2903	normal.c	FUNCTION_9	IF_84	IF_86
0x4009cf2	        0x48895a40	             mov qword [rdx + 0x40], rbx	      2903	normal.c	FUNCTION_9	IF_84	IF_86
0x4009cf6	        0x8b7c2468	            mov edi, dword [rsp + 0x68] 	      2904	normal.c	FUNCTION_9	IF_84	IF_86	CALL_70
0x4009cfa	      0xe800000000	                          call 0x4009cff	      2904	normal.c	FUNCTION_9	IF_84	IF_86	CALL_70
0x4009cff	    0x488b05000000	            mov rax, qword [0x04009d06] 	      2905	normal.c	FUNCTION_9	IF_84	IF_86
0x4009d06	        0x488b4838	            mov rcx, qword [rax + 0x38] 	      2905	normal.c	FUNCTION_9	IF_84	IF_86
0x4009d0a	        0x488b5840	            mov rbx, qword [rax + 0x40] 	      2905	normal.c	FUNCTION_9	IF_84	IF_86
0x4009d0e	    0x48890d000000	            mov qword [0x04009d15], rcx 	      2905	normal.c	FUNCTION_9	IF_84	IF_86
0x4009d15	    0x48891d000000	            mov qword [0x04009d1c], rbx 	      2905	normal.c	FUNCTION_9	IF_84	IF_86
0x4009d1c	      0x488b4c2450	            mov rcx, qword [rsp + 0x50] 	      2906	normal.c	FUNCTION_9	IF_84	IF_86
0x4009d21	      0x488b5c2458	            mov rbx, qword [rsp + 0x58] 	      2906	normal.c	FUNCTION_9	IF_84	IF_86
0x4009d26	        0x48894838	             mov qword [rax + 0x38], rcx	      2906	normal.c	FUNCTION_9	IF_84	IF_86
0x4009d2a	        0x48895840	             mov qword [rax + 0x40], rbx	      2906	normal.c	FUNCTION_9	IF_84	IF_86
0x4009d2e	      0xe9ad010000	                           jmp 0x4009ee0	      2906	normal.c	FUNCTION_9	IF_84	IF_86
0x4009d33	    0x488b0d000000	            mov rcx, qword [0x04009d3a] 	      2915	normal.c	FUNCTION_9	IF_84	ELSE_25	IF_89	CALL_71
0x4009d3a	        0x488b5138	            mov rdx, qword [rcx + 0x38] 	      2915	normal.c	FUNCTION_9	IF_84	ELSE_25	IF_89	CALL_71
0x4009d3e	          0x4839d0	                            cmp rax, rdx	      2915	normal.c	FUNCTION_9	IF_84	ELSE_25	IF_89	CALL_71
0x4009d41	            0x7409	                            je 0x4009d4c	      2915	normal.c	FUNCTION_9	IF_84	ELSE_25	IF_89	CALL_71
0x4009d43	          0x4839d0	                            cmp rax, rdx	      2915	normal.c	FUNCTION_9	IF_84	ELSE_25	IF_89	CALL_71
0x4009d46	        0x400f9fc6	                                setg sil	      2915	normal.c	FUNCTION_9	IF_84	ELSE_25	IF_89	CALL_71
0x4009d4a	            0xeb1e	                           jmp 0x4009d6a	      2915	normal.c	FUNCTION_9	IF_84	ELSE_25	IF_89	CALL_71
0x4009d4c	          0x8b7940	            mov edi, dword [rcx + 0x40] 	      2915	normal.c	FUNCTION_9	IF_84	ELSE_25	IF_89	CALL_71
0x4009d4f	        0x8b742458	            mov esi, dword [rsp + 0x58] 	      2915	normal.c	FUNCTION_9	IF_84	ELSE_25	IF_89	CALL_71
0x4009d53	            0x39f7	                            cmp edi, esi	      2915	normal.c	FUNCTION_9	IF_84	ELSE_25	IF_89	CALL_71
0x4009d55	            0x7408	                            je 0x4009d5f	      2915	normal.c	FUNCTION_9	IF_84	ELSE_25	IF_89	CALL_71
0x4009d57	            0x39f7	                            cmp edi, esi	      2915	normal.c	FUNCTION_9	IF_84	ELSE_25	IF_89	CALL_71
0x4009d59	        0x400f9cc6	                                setl sil	      2915	normal.c	FUNCTION_9	IF_84	ELSE_25	IF_89	CALL_71
0x4009d5d	            0xeb0b	                           jmp 0x4009d6a	      2915	normal.c	FUNCTION_9	IF_84	ELSE_25	IF_89	CALL_71
0x4009d5f	        0x8b74245c	            mov esi, dword [rsp + 0x5c] 	      2915	normal.c	FUNCTION_9	IF_84	ELSE_25	IF_89	CALL_71
0x4009d63	          0x397144	            cmp dword [rcx + 0x44], esi 	      2915	normal.c	FUNCTION_9	IF_84	ELSE_25	IF_89	CALL_71
0x4009d66	        0x400f9cc6	                                setl sil	      2915	normal.c	FUNCTION_9	IF_84	ELSE_25	IF_89	CALL_71
0x4009d6a	          0x4084f6	                           test sil, sil	      2915	normal.c	FUNCTION_9	IF_84	ELSE_25	IF_89	CALL_71
0x4009d6d	            0x741d	                            je 0x4009d8c	      2915	normal.c	FUNCTION_9	IF_84	ELSE_25	IF_89	CALL_71
0x4009d6f	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      2916	normal.c	FUNCTION_9	IF_84	ELSE_25	IF_89
0x4009d74	      0x488b542468	            mov rdx, qword [rsp + 0x68] 	      2916	normal.c	FUNCTION_9	IF_84	ELSE_25	IF_89
0x4009d79	    0x488905000000	            mov qword [0x04009d80], rax 	      2916	normal.c	FUNCTION_9	IF_84	ELSE_25	IF_89
0x4009d80	    0x488915000000	            mov qword [0x04009d87], rdx 	      2916	normal.c	FUNCTION_9	IF_84	ELSE_25	IF_89
0x4009d87	      0xe954010000	                           jmp 0x4009ee0	      2916	normal.c	FUNCTION_9	IF_84	ELSE_25	IF_89
0x4009d8c	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	      2917	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_26	IF_90	CALL_72
0x4009d91	          0x4839f2	                            cmp rdx, rsi	      2917	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_26	IF_90	CALL_72
0x4009d94	            0x7409	                            je 0x4009d9f	      2917	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_26	IF_90	CALL_72
0x4009d96	          0x4839f2	                            cmp rdx, rsi	      2917	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_26	IF_90	CALL_72
0x4009d99	        0x400f9fc7	                                setg dil	      2917	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_26	IF_90	CALL_72
0x4009d9d	            0xeb21	                           jmp 0x4009dc0	      2917	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_26	IF_90	CALL_72
0x4009d9f	      0x448b442468	            mov r8d, dword [rsp + 0x68] 	      2917	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_26	IF_90	CALL_72
0x4009da4	          0x8b7940	            mov edi, dword [rcx + 0x40] 	      2917	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_26	IF_90	CALL_72
0x4009da7	          0x4139f8	                            cmp r8d, edi	      2917	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_26	IF_90	CALL_72
0x4009daa	            0x7409	                            je 0x4009db5	      2917	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_26	IF_90	CALL_72
0x4009dac	          0x4139f8	                            cmp r8d, edi	      2917	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_26	IF_90	CALL_72
0x4009daf	        0x400f9cc7	                                setl dil	      2917	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_26	IF_90	CALL_72
0x4009db3	            0xeb0b	                           jmp 0x4009dc0	      2917	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_26	IF_90	CALL_72
0x4009db5	          0x8b7944	            mov edi, dword [rcx + 0x44] 	      2917	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_26	IF_90	CALL_72
0x4009db8	        0x397c246c	            cmp dword [rsp + 0x6c], edi 	      2917	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_26	IF_90	CALL_72
0x4009dbc	        0x400f9cc7	                                setl dil	      2917	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_26	IF_90	CALL_72
0x4009dc0	          0x4084ff	                           test dil, dil	      2917	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_26	IF_90	CALL_72
0x4009dc3	            0x741d	                            je 0x4009de2	      2917	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_26	IF_90	CALL_72
0x4009dc5	      0x488b442450	            mov rax, qword [rsp + 0x50] 	      2918	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_26	IF_90
0x4009dca	      0x488b542458	            mov rdx, qword [rsp + 0x58] 	      2918	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_26	IF_90
0x4009dcf	    0x488905000000	            mov qword [0x04009dd6], rax 	      2918	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_26	IF_90
0x4009dd6	    0x488915000000	            mov qword [0x04009ddd], rdx 	      2918	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_26	IF_90
0x4009ddd	      0xe9fe000000	                           jmp 0x4009ee0	      2918	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_26	IF_90
0x4009de2	          0x4839f0	                            cmp rax, rsi	      2922	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	IF_91
0x4009de5	            0x754d	                           jne 0x4009e34	      2922	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	IF_91
0x4009de7	          0x8b4140	            mov eax, dword [rcx + 0x40] 	      2924	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	IF_91	IF_92
0x4009dea	            0x89c2	                            mov edx, eax	      2924	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	IF_91	IF_92
0x4009dec	        0x2b542458	             sub edx, dword [rsp + 0x58]	      2924	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	IF_91	IF_92
0x4009df0	        0x8b742468	            mov esi, dword [rsp + 0x68] 	      2924	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	IF_91	IF_92
0x4009df4	            0x29c6	                            sub esi, eax	      2924	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	IF_91	IF_92
0x4009df6	            0x39f2	                            cmp edx, esi	      2924	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	IF_91	IF_92
0x4009df8	            0x7e1d	                           jle 0x4009e17	      2924	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	IF_91	IF_92
0x4009dfa	      0x488b442450	            mov rax, qword [rsp + 0x50] 	      2926	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	IF_91	IF_92
0x4009dff	      0x488b542458	            mov rdx, qword [rsp + 0x58] 	      2926	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	IF_91	IF_92
0x4009e04	    0x488905000000	            mov qword [0x04009e0b], rax 	      2926	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	IF_91	IF_92
0x4009e0b	    0x488915000000	            mov qword [0x04009e12], rdx 	      2926	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	IF_91	IF_92
0x4009e12	      0xe9c9000000	                           jmp 0x4009ee0	      2926	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	IF_91	IF_92
0x4009e17	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      2928	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	IF_91	ELSE_28
0x4009e1c	      0x488b542468	            mov rdx, qword [rsp + 0x68] 	      2928	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	IF_91	ELSE_28
0x4009e21	    0x488905000000	            mov qword [0x04009e28], rax 	      2928	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	IF_91	ELSE_28
0x4009e28	    0x488915000000	            mov qword [0x04009e2f], rdx 	      2928	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	IF_91	ELSE_28
0x4009e2f	      0xe9ac000000	                           jmp 0x4009ee0	      2928	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	IF_91	ELSE_28
0x4009e34	             0x1d2	                            add edx, edx	      2934	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29
0x4009e36	            0x29c2	                            sub edx, eax	      2934	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29
0x4009e38	            0x89d0	                            mov eax, edx	      2934	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29
0x4009e3a	            0x29f0	                            sub eax, esi	      2934	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29
0x4009e3c	            0x85c0	                           test eax, eax	      2937	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	IF_93
0x4009e3e	            0x7e1d	                           jle 0x4009e5d	      2937	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	IF_93
0x4009e40	      0x488b442450	            mov rax, qword [rsp + 0x50] 	      2938	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	IF_93
0x4009e45	      0x488b542458	            mov rdx, qword [rsp + 0x58] 	      2938	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	IF_93
0x4009e4a	    0x488905000000	            mov qword [0x04009e51], rax 	      2938	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	IF_93
0x4009e51	    0x488915000000	            mov qword [0x04009e58], rdx 	      2938	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	IF_93
0x4009e58	      0xe983000000	                           jmp 0x4009ee0	      2938	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	IF_93
0x4009e5d	            0x85c0	                           test eax, eax	      2939	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	ELSE_30	IF_94
0x4009e5f	            0x791a	                           jns 0x4009e7b	      2939	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	ELSE_30	IF_94
0x4009e61	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      2940	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	ELSE_30	IF_94
0x4009e66	      0x488b542468	            mov rdx, qword [rsp + 0x68] 	      2940	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	ELSE_30	IF_94
0x4009e6b	    0x488905000000	            mov qword [0x04009e72], rax 	      2940	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	ELSE_30	IF_94
0x4009e72	    0x488915000000	            mov qword [0x04009e79], rdx 	      2940	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	ELSE_30	IF_94
0x4009e79	            0xeb65	                           jmp 0x4009ee0	      2940	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	ELSE_30	IF_94
0x4009e7b	        0x8b442468	            mov eax, dword [rsp + 0x68] 	      2943	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	ELSE_31	IF_95
0x4009e7f	         0x3442458	             add eax, dword [rsp + 0x58]	      2943	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	ELSE_31	IF_95
0x4009e83	      0xbe02000000	                              mov esi, 2	      2943	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	ELSE_31	IF_95
0x4009e88	              0x99	                                     cdq	      2943	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	ELSE_31	IF_95
0x4009e89	            0xf7fe	                                idiv esi	      2943	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	ELSE_31	IF_95
0x4009e8b	          0x394140	            cmp dword [rcx + 0x40], eax 	      2943	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	ELSE_31	IF_95
0x4009e8e	            0x7d1a	                           jge 0x4009eaa	      2943	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	ELSE_31	IF_95
0x4009e90	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      2945	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	ELSE_31	IF_95
0x4009e95	      0x488b542468	            mov rdx, qword [rsp + 0x68] 	      2945	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	ELSE_31	IF_95
0x4009e9a	    0x488905000000	            mov qword [0x04009ea1], rax 	      2945	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	ELSE_31	IF_95
0x4009ea1	    0x488915000000	            mov qword [0x04009ea8], rdx 	      2945	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	ELSE_31	IF_95
0x4009ea8	            0xeb36	                           jmp 0x4009ee0	      2945	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	ELSE_31	IF_95
0x4009eaa	      0x488b442450	            mov rax, qword [rsp + 0x50] 	      2947	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	ELSE_31	ELSE_32
0x4009eaf	      0x488b542458	            mov rdx, qword [rsp + 0x58] 	      2947	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	ELSE_31	ELSE_32
0x4009eb4	    0x488905000000	            mov qword [0x04009ebb], rax 	      2947	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	ELSE_31	ELSE_32
0x4009ebb	    0x488915000000	            mov qword [0x04009ec2], rdx 	      2947	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	ELSE_31	ELSE_32
0x4009ec2	            0xeb1c	                           jmp 0x4009ee0	      2947	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	ELSE_31	ELSE_32
0x4009ec4	    0xf60500000000	           test byte [0x04009ecb], 0x10 	      2956	normal.c	FUNCTION_9	ELSE_33	IF_96
0x4009ecb	            0x7413	                            je 0x4009ee0	      2956	normal.c	FUNCTION_9	ELSE_33	IF_96
0x4009ecd	    0x833d00000000	               cmp dword [0x04009ed4], 0	      2956	normal.c	FUNCTION_9	ELSE_33	IF_96
0x4009ed4	            0x740a	                            je 0x4009ee0	      2956	normal.c	FUNCTION_9	ELSE_33	IF_96
0x4009ed6	      0xbf0f000000	                            mov edi, 0xf	      2957	normal.c	FUNCTION_9	ELSE_33	IF_96
0x4009edb	      0xe800000000	                          call 0x4009ee0	      2957	normal.c	FUNCTION_9	ELSE_33	IF_96
0x4009ee0	        0x4183fd01	                             cmp r13d, 1	      2962	normal.c	FUNCTION_9	IF_97
0x4009ee4	     0xf85dd000000	                           jne 0x4009fc7	      2962	normal.c	FUNCTION_9	IF_97
0x4009eea	    0x833d00000000	               cmp dword [0x04009ef1], 0	      2965	normal.c	FUNCTION_9	IF_97	IF_98
0x4009ef1	            0x7411	                            je 0x4009f04	      2965	normal.c	FUNCTION_9	IF_97	IF_98
0x4009ef3	          0x4585ff	                         test r15d, r15d	      2965	normal.c	FUNCTION_9	IF_97	IF_98
0x4009ef6	           0xf94c0	                                 sete al	      2965	normal.c	FUNCTION_9	IF_97	IF_98
0x4009ef9	            0x84c0	                             test al, al	      2966	normal.c	FUNCTION_9	IF_97	IF_98
0x4009efb	      0xb82a000000	                           mov eax, 0x2a	      2966	normal.c	FUNCTION_9	IF_97	IF_98
0x4009f00	        0x440f45f8	                        cmovne r15d, eax	      2966	normal.c	FUNCTION_9	IF_97	IF_98
0x4009f04	          0x4489ff	                           mov edi, r15d	      2968	normal.c	FUNCTION_9	IF_97	IF_99	CALL_74
0x4009f07	      0xe800000000	                          call 0x4009f0c	      2968	normal.c	FUNCTION_9	IF_97	IF_99	CALL_74
0x4009f0c	            0x85c0	                           test eax, eax	      2968	normal.c	FUNCTION_9	IF_97	IF_99	CALL_74
0x4009f0e	            0x740f	                            je 0x4009f1f	      2968	normal.c	FUNCTION_9	IF_97	IF_99	CALL_74
0x4009f10	    0x833d00000000	               cmp dword [0x04009f17], 0	      2970	normal.c	FUNCTION_9	IF_97	IF_99	IF_100
0x4009f17	     0xf853c060000	                           jne 0x400a559	      2970	normal.c	FUNCTION_9	IF_97	IF_99	IF_100
0x4009f1d	            0xeb0d	                           jmp 0x4009f2c	      2970	normal.c	FUNCTION_9	IF_97	IF_99	IF_100
0x4009f1f	    0x833d00000000	               cmp dword [0x04009f26], 0	      2973	normal.c	FUNCTION_9	IF_97	ELSE_34	IF_101
0x4009f26	     0xf852d060000	                           jne 0x400a559	      2973	normal.c	FUNCTION_9	IF_97	ELSE_34	IF_101
0x4009f2c	      0x837c241800	               cmp dword [rsp + 0x18], 0	      2976	normal.c	FUNCTION_9	IF_97	IF_102
0x4009f31	            0x7417	                            je 0x4009f4a	      2976	normal.c	FUNCTION_9	IF_97	IF_102
0x4009f33	    0x41b970000000	                           mov r9d, 0x70	      2979	normal.c	FUNCTION_9	IF_97	IF_102
0x4009f39	      0x837c241cff	cmp dword [rsp + 0x1c], 0xffffffffffffffff	      2979	normal.c	FUNCTION_9	IF_97	IF_102
0x4009f3e	           0xf95c1	                                setne cl	      2979	normal.c	FUNCTION_9	IF_97	IF_102
0x4009f41	           0xfb6c9	                           movzx ecx, cl	      2979	normal.c	FUNCTION_9	IF_97	IF_102
0x4009f44	        0x8d4c095b	            lea ecx, [rcx + rcx + 0x5b] 	      2979	normal.c	FUNCTION_9	IF_97	IF_102
0x4009f48	            0xeb18	                           jmp 0x4009f62	      2979	normal.c	FUNCTION_9	IF_97	IF_102
0x4009f4a	    0x41b900000000	                              mov r9d, 0	      2984	normal.c	FUNCTION_9	IF_97	ELSE_35
0x4009f50	      0x837c241c01	               cmp dword [rsp + 0x1c], 1	      2984	normal.c	FUNCTION_9	IF_97	ELSE_35
0x4009f55	      0xb950000000	                           mov ecx, 0x50	      2984	normal.c	FUNCTION_9	IF_97	ELSE_35
0x4009f5a	      0xb870000000	                           mov eax, 0x70	      2984	normal.c	FUNCTION_9	IF_97	ELSE_35
0x4009f5f	           0xf44c8	                          cmove ecx, eax	      2984	normal.c	FUNCTION_9	IF_97	ELSE_35
0x4009f62	        0x4883ec08	                              sub rsp, 8	      2986	normal.c	FUNCTION_9	IF_97	CALL_75
0x4009f66	            0x6a00	                                  push 0	      2986	normal.c	FUNCTION_9	IF_97	CALL_75
0x4009f68	    0x41b800000000	                              mov r8d, 0	      2986	normal.c	FUNCTION_9	IF_97	CALL_75
0x4009f6e	      0xba00000000	                              mov edx, 0	      2986	normal.c	FUNCTION_9	IF_97	CALL_75
0x4009f73	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      2986	normal.c	FUNCTION_9	IF_97	CALL_75
0x4009f78	          0x4489ff	                           mov edi, r15d	      2986	normal.c	FUNCTION_9	IF_97	CALL_75
0x4009f7b	      0xe8b164ffff	                      call sym.prep_redo	      2986	normal.c	FUNCTION_9	IF_97	CALL_75
0x4009f80	        0x4883c410	                           add rsp, 0x10	      2992	normal.c	FUNCTION_9	IF_97	IF_103
0x4009f84	    0x833d00000000	               cmp dword [0x04009f8b], 0	      2992	normal.c	FUNCTION_9	IF_97	IF_103
0x4009f8b	            0x741d	                            je 0x4009faa	      2992	normal.c	FUNCTION_9	IF_97	IF_103
0x4009f8d	    0x488b05000000	            mov rax, qword [0x04009f94] 	      2993	normal.c	FUNCTION_9	IF_97	IF_103
0x4009f94	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      2993	normal.c	FUNCTION_9	IF_97	IF_103
0x4009f98	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2993	normal.c	FUNCTION_9	IF_97	IF_103
0x4009f9c	    0x488905000000	            mov qword [0x04009fa3], rax 	      2993	normal.c	FUNCTION_9	IF_97	IF_103
0x4009fa3	    0x488915000000	            mov qword [0x04009faa], rdx 	      2993	normal.c	FUNCTION_9	IF_97	IF_103
0x4009faa	        0x8b4c2418	            mov ecx, dword [rsp + 0x18] 	      2994	normal.c	FUNCTION_9	IF_97	CALL_76
0x4009fae	          0x83c902	                               or ecx, 2	      2994	normal.c	FUNCTION_9	IF_97	CALL_76
0x4009fb1	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      2994	normal.c	FUNCTION_9	IF_97	CALL_76
0x4009fb6	        0x8b74241c	            mov esi, dword [rsp + 0x1c] 	      2994	normal.c	FUNCTION_9	IF_97	CALL_76
0x4009fba	          0x4489ff	                           mov edi, r15d	      2994	normal.c	FUNCTION_9	IF_97	CALL_76
0x4009fbd	      0xe800000000	                          call 0x4009fc2	      2994	normal.c	FUNCTION_9	IF_97	CALL_76
0x4009fc2	      0xe9dd040000	                           jmp 0x400a4a4	      2994	normal.c	FUNCTION_9	IF_97	CALL_76
0x4009fc7	    0x8b0500000000	            mov eax, dword [0x04009fcd] 	      3002	normal.c	FUNCTION_9	ELSE_36	IF_104
0x4009fcd	            0xa804	                              test al, 4	      3002	normal.c	FUNCTION_9	ELSE_36	IF_104
0x4009fcf	            0x750e	                           jne 0x4009fdf	      3002	normal.c	FUNCTION_9	ELSE_36	IF_104
0x4009fd1	            0x89c2	                            mov edx, eax	      3003	normal.c	FUNCTION_9	ELSE_36	IF_104
0x4009fd3	          0x83e260	                           and edx, 0x60	      3003	normal.c	FUNCTION_9	ELSE_36	IF_104
0x4009fd6	          0x83fa20	                           cmp edx, 0x20	      3003	normal.c	FUNCTION_9	ELSE_36	IF_104
0x4009fd9	     0xf8596000000	                           jne 0x400a075	      3003	normal.c	FUNCTION_9	ELSE_36	IF_104
0x4009fdf	    0x488b3d000000	            mov rdi, qword [0x04009fe6] 	      3004	normal.c	FUNCTION_9	ELSE_36	IF_104	CALL_77
0x4009fe6	      0xe800000000	                          call 0x4009feb	      3004	normal.c	FUNCTION_9	ELSE_36	IF_104	CALL_77
0x4009feb	            0x85c0	                           test eax, eax	      3004	normal.c	FUNCTION_9	ELSE_36	IF_104	CALL_77
0x4009fed	            0x7436	                            je 0x400a025	      3004	normal.c	FUNCTION_9	ELSE_36	IF_104	CALL_77
0x4009fef	    0x488b05000000	            mov rax, qword [0x04009ff6] 	      3006	normal.c	FUNCTION_9	ELSE_36	IF_104	IF_105
0x4009ff6	    0x4883b8501900	             cmp qword [rax + 0x1950], 0	      3006	normal.c	FUNCTION_9	ELSE_36	IF_104	IF_105
0x4009ffe	            0x750c	                           jne 0x400a00c	      3006	normal.c	FUNCTION_9	ELSE_36	IF_104	IF_105
0x400a000	      0xbf00000000	                              mov edi, 0	      3007	normal.c	FUNCTION_9	ELSE_36	IF_104	CALL_78
0x400a005	      0xe800000000	                          call 0x400a00a	      3007	normal.c	FUNCTION_9	ELSE_36	IF_104	CALL_78
0x400a00a	            0xeb0a	                           jmp 0x400a016	      3007	normal.c	FUNCTION_9	ELSE_36	IF_104	CALL_78
0x400a00c	      0xbf00000000	                              mov edi, 0	      3009	normal.c	FUNCTION_9	ELSE_36	IF_104	CALL_79
0x400a011	      0xe800000000	                          call 0x400a016	      3009	normal.c	FUNCTION_9	ELSE_36	IF_104	CALL_79
0x400a016	    0xc70500000000	               mov dword [0x0400a020], 0	      3010	normal.c	FUNCTION_9	ELSE_36	IF_104
0x400a020	      0xe97f040000	                           jmp 0x400a4a4	      3010	normal.c	FUNCTION_9	ELSE_36	IF_104
0x400a025	    0x8b0500000000	            mov eax, dword [0x0400a02b] 	      3018	normal.c	FUNCTION_9	ELSE_38	IF_106
0x400a02b	            0xa804	                              test al, 4	      3018	normal.c	FUNCTION_9	ELSE_38	IF_106
0x400a02d	            0x751a	                           jne 0x400a049	      3018	normal.c	FUNCTION_9	ELSE_38	IF_106
0x400a02f	    0x488b15000000	            mov rdx, qword [0x0400a036] 	      3018	normal.c	FUNCTION_9	ELSE_38	IF_106
0x400a036	    0x83ba58170000	             cmp dword [rdx + 0x1758], 0	      3018	normal.c	FUNCTION_9	ELSE_38	IF_106
0x400a03d	            0x7436	                            je 0x400a075	      3018	normal.c	FUNCTION_9	ELSE_38	IF_106
0x400a03f	            0x89c2	                            mov edx, eax	      3019	normal.c	FUNCTION_9	ELSE_38	IF_106
0x400a041	          0x83e260	                           and edx, 0x60	      3019	normal.c	FUNCTION_9	ELSE_38	IF_106
0x400a044	          0x83fa20	                           cmp edx, 0x20	      3019	normal.c	FUNCTION_9	ELSE_38	IF_106
0x400a047	            0x752c	                           jne 0x400a075	      3019	normal.c	FUNCTION_9	ELSE_38	IF_106
0x400a049	    0xf60500000000	           test byte [0x0400a050], 0x10 	      3021	normal.c	FUNCTION_9	ELSE_38	IF_106	IF_107
0x400a050	            0x740a	                            je 0x400a05c	      3021	normal.c	FUNCTION_9	ELSE_38	IF_106	IF_107
0x400a052	      0xbf0f000000	                            mov edi, 0xf	      3022	normal.c	FUNCTION_9	ELSE_38	IF_106	CALL_80
0x400a057	      0xe800000000	                          call 0x400a05c	      3022	normal.c	FUNCTION_9	ELSE_38	IF_106	CALL_80
0x400a05c	      0xbf1d000000	                           mov edi, 0x1d	      3023	normal.c	FUNCTION_9	ELSE_38	IF_106	CALL_81
0x400a061	      0xe800000000	                          call 0x400a066	      3023	normal.c	FUNCTION_9	ELSE_38	IF_106	CALL_81
0x400a066	    0xc70500000000	               mov dword [0x0400a070], 0	      3024	normal.c	FUNCTION_9	ELSE_38	IF_106
0x400a070	      0xe92f040000	                           jmp 0x400a4a4	      3024	normal.c	FUNCTION_9	ELSE_38	IF_106
0x400a075	            0xa802	                              test al, 2	      3031	normal.c	FUNCTION_9	ELSE_39	IF_108
0x400a077	            0x7448	                            je 0x400a0c1	      3031	normal.c	FUNCTION_9	ELSE_39	IF_108
0x400a079	    0xf60500000000	           test byte [0x0400a080], 0x10 	      3033	normal.c	FUNCTION_9	ELSE_39	IF_108	IF_109
0x400a080	            0x7512	                           jne 0x400a094	      3033	normal.c	FUNCTION_9	ELSE_39	IF_108	IF_109
0x400a082	    0x833d00000000	               cmp dword [0x0400a089], 0	      3033	normal.c	FUNCTION_9	ELSE_39	IF_108	IF_109
0x400a089	            0x7413	                            je 0x400a09e	      3033	normal.c	FUNCTION_9	ELSE_39	IF_108	IF_109
0x400a08b	    0x833d00000000	               cmp dword [0x0400a092], 0	      3033	normal.c	FUNCTION_9	ELSE_39	IF_108	IF_109
0x400a092	            0x740a	                            je 0x400a09e	      3033	normal.c	FUNCTION_9	ELSE_39	IF_108	IF_109
0x400a094	      0xbf0f000000	                            mov edi, 0xf	      3034	normal.c	FUNCTION_9	ELSE_39	IF_108	CALL_82
0x400a099	      0xe800000000	                          call 0x400a09e	      3034	normal.c	FUNCTION_9	ELSE_39	IF_108	CALL_82
0x400a09e	          0x4585ed	                         test r13d, r13d	      3035	normal.c	FUNCTION_9	ELSE_39	IF_108	IF_110
0x400a0a1	            0x750f	                           jne 0x400a0b2	      3035	normal.c	FUNCTION_9	ELSE_39	IF_108	IF_110
0x400a0a3	      0xbf2a000000	                           mov edi, 0x2a	      3036	normal.c	FUNCTION_9	ELSE_39	IF_108	CALL_83
0x400a0a8	      0xe800000000	                          call 0x400a0ad	      3036	normal.c	FUNCTION_9	ELSE_39	IF_108	CALL_83
0x400a0ad	      0xe9f2030000	                           jmp 0x400a4a4	      3036	normal.c	FUNCTION_9	ELSE_39	IF_108	CALL_83
0x400a0b2	      0xbf23000000	                           mov edi, 0x23	      3038	normal.c	FUNCTION_9	ELSE_39	IF_108	CALL_84
0x400a0b7	      0xe800000000	                          call 0x400a0bc	      3038	normal.c	FUNCTION_9	ELSE_39	IF_108	CALL_84
0x400a0bc	      0xe9e3030000	                           jmp 0x400a4a4	      3038	normal.c	FUNCTION_9	ELSE_39	IF_108	CALL_84
0x400a0c1	      0x837c243c00	               cmp dword [rsp + 0x3c], 0	      3042	normal.c	FUNCTION_9	ELSE_41	IF_111
0x400a0c6	            0x7438	                            je 0x400a100	      3042	normal.c	FUNCTION_9	ELSE_41	IF_111
0x400a0c8	      0x837c244400	               cmp dword [rsp + 0x44], 0	      3045	normal.c	FUNCTION_9	ELSE_41	IF_111	IF_112
0x400a0cd	            0x750b	                           jne 0x400a0da	      3045	normal.c	FUNCTION_9	ELSE_41	IF_111	IF_112
0x400a0cf	      0x837c244000	               cmp dword [rsp + 0x40], 0	      3045	normal.c	FUNCTION_9	ELSE_41	IF_111	IF_112
0x400a0d4	     0xf84ca030000	                            je 0x400a4a4	      3045	normal.c	FUNCTION_9	ELSE_41	IF_111	IF_112
0x400a0da	    0x833d00000000	               cmp dword [0x0400a0e1], 0	      3045	normal.c	FUNCTION_9	ELSE_41	IF_111	IF_112
0x400a0e1	     0xf85bd030000	                           jne 0x400a4a4	      3045	normal.c	FUNCTION_9	ELSE_41	IF_111	IF_112
0x400a0e7	    0xc70500000000	               mov dword [0x0400a0f1], 1	      3047	normal.c	FUNCTION_9	ELSE_41	IF_111	IF_112
0x400a0f1	      0xbfffffffff	                     mov edi, 0xffffffff	      3048	normal.c	FUNCTION_9	ELSE_41	IF_111	IF_112	CALL_85
0x400a0f6	      0xe800000000	                          call 0x400a0fb	      3048	normal.c	FUNCTION_9	ELSE_41	IF_111	IF_112	CALL_85
0x400a0fb	      0xe9a4030000	                           jmp 0x400a4a4	      3048	normal.c	FUNCTION_9	ELSE_41	IF_111	IF_112	CALL_85
0x400a100	        0x40f6c504	                             test bpl, 4	      3052	normal.c	FUNCTION_9	ELSE_42	IF_113
0x400a104	            0x7438	                            je 0x400a13e	      3052	normal.c	FUNCTION_9	ELSE_42	IF_113
0x400a106	      0x837c244400	               cmp dword [rsp + 0x44], 0	      3055	normal.c	FUNCTION_9	ELSE_42	IF_113	IF_114
0x400a10b	            0x750b	                           jne 0x400a118	      3055	normal.c	FUNCTION_9	ELSE_42	IF_113	IF_114
0x400a10d	      0x837c244000	               cmp dword [rsp + 0x40], 0	      3055	normal.c	FUNCTION_9	ELSE_42	IF_113	IF_114
0x400a112	     0xf848c030000	                            je 0x400a4a4	      3055	normal.c	FUNCTION_9	ELSE_42	IF_113	IF_114
0x400a118	    0x833d00000000	               cmp dword [0x0400a11f], 0	      3055	normal.c	FUNCTION_9	ELSE_42	IF_113	IF_114
0x400a11f	     0xf857f030000	                           jne 0x400a4a4	      3055	normal.c	FUNCTION_9	ELSE_42	IF_113	IF_114
0x400a125	    0xc70500000000	               mov dword [0x0400a12f], 1	      3057	normal.c	FUNCTION_9	ELSE_42	IF_113	IF_114
0x400a12f	      0xbfffffffff	                     mov edi, 0xffffffff	      3058	normal.c	FUNCTION_9	ELSE_42	IF_113	IF_114	CALL_86
0x400a134	      0xe800000000	                          call 0x400a139	      3058	normal.c	FUNCTION_9	ELSE_42	IF_113	IF_114	CALL_86
0x400a139	      0xe966030000	                           jmp 0x400a4a4	      3058	normal.c	FUNCTION_9	ELSE_42	IF_113	IF_114	CALL_86
0x400a13e	            0xa860	                           test al, 0x60	      3062	normal.c	FUNCTION_9	ELSE_43	IF_115
0x400a140	     0xf8434030000	                            je 0x400a47a	      3062	normal.c	FUNCTION_9	ELSE_43	IF_115
0x400a146	    0xf60500000000	           test byte [0x0400a14d], 0x11 	      3062	normal.c	FUNCTION_9	ELSE_43	IF_115
0x400a14d	     0xf8427030000	                            je 0x400a47a	      3062	normal.c	FUNCTION_9	ELSE_43	IF_115
0x400a153	      0xbf76000000	                           mov edi, 0x76	      3063	normal.c	FUNCTION_9	ELSE_43	IF_115	CALL_87
0x400a158	      0xe800000000	                          call 0x400a15d	      3063	normal.c	FUNCTION_9	ELSE_43	IF_115	CALL_87
0x400a15d	            0x85c0	                           test eax, eax	      3063	normal.c	FUNCTION_9	ELSE_43	IF_115	CALL_87
0x400a15f	     0xf8415030000	                            je 0x400a47a	      3063	normal.c	FUNCTION_9	ELSE_43	IF_115	CALL_87
0x400a165	      0x837c244000	               cmp dword [rsp + 0x40], 0	      3065	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116
0x400a16a	            0x750e	                           jne 0x400a17a	      3065	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116
0x400a16c	    0x833d00000000	               cmp dword [0x0400a173], 0	      3065	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116
0x400a173	            0x742c	                            je 0x400a1a1	      3065	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116
0x400a175	      0xe9ca000000	                           jmp 0x400a244	      3065	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116
0x400a17a	    0x833d00000000	               cmp dword [0x0400a181], 0	      3067	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	IF_117
0x400a181	            0x741e	                            je 0x400a1a1	      3067	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	IF_117
0x400a183	    0x488b05000000	            mov rax, qword [0x0400a18a] 	      3068	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	IF_117
0x400a18a	    0x488b15000000	            mov rdx, qword [0x0400a191] 	      3068	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	IF_117
0x400a191	    0x488905000000	            mov qword [0x0400a198], rax 	      3068	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	IF_117
0x400a198	    0x488915000000	            mov qword [0x0400a19f], rdx 	      3068	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	IF_117
0x400a19f	            0xeb53	                           jmp 0x400a1f4	      3068	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	IF_117
0x400a1a1	      0xe800000000	                          call 0x400a1a6	      3071	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	ELSE_44	CALL_88
0x400a1a6	    0x488b05000000	            mov rax, qword [0x0400a1ad] 	      3072	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	ELSE_44
0x400a1ad	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      3072	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	ELSE_44
0x400a1b1	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3072	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	ELSE_44
0x400a1b5	    0x488905000000	            mov qword [0x0400a1bc], rax 	      3072	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	ELSE_44
0x400a1bc	    0x488915000000	            mov qword [0x0400a1c3], rdx 	      3072	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	ELSE_44
0x400a1c3	    0x488905000000	            mov qword [0x0400a1ca], rax 	      3073	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	ELSE_44
0x400a1ca	    0x488915000000	            mov qword [0x0400a1d1], rdx 	      3073	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	ELSE_44
0x400a1d1	    0xc70500000000	               mov dword [0x0400a1db], 1	      3074	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	ELSE_44
0x400a1db	    0xc70500000000	               mov dword [0x0400a1e5], 1	      3075	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	ELSE_44
0x400a1e5	      0xbf6f000000	                           mov edi, 0x6f	      3077	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	ELSE_44	CALL_89
0x400a1ea	      0xe800000000	                          call 0x400a1ef	      3077	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	ELSE_44	CALL_89
0x400a1ef	      0xe800000000	                          call 0x400a1f4	      3078	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	ELSE_44	CALL_90
0x400a1f4	    0x8b0500000000	            mov eax, dword [0x0400a1fa] 	      3080	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	IF_118
0x400a1fa	            0x89c2	                            mov edx, eax	      3080	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	IF_118
0x400a1fc	          0x83e260	                           and edx, 0x60	      3080	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	IF_118
0x400a1ff	          0x83fa20	                           cmp edx, 0x20	      3080	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	IF_118
0x400a202	            0x7516	                           jne 0x400a21a	      3080	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	IF_118
0x400a204	          0x83e008	                              and eax, 8	      3083	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	IF_118	IF_119
0x400a207	          0x83f801	                              cmp eax, 1	      3084	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	IF_118	IF_119
0x400a20a	            0x19c0	                            sbb eax, eax	      3084	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	IF_118	IF_119
0x400a20c	          0x83e060	                           and eax, 0x60	      3084	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	IF_118	IF_119
0x400a20f	          0x83c016	                           add eax, 0x16	      3084	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	IF_118	IF_119
0x400a212	    0x890500000000	            mov dword [0x0400a218], eax 	      3084	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	IF_118	IF_119
0x400a218	            0xeb20	                           jmp 0x400a23a	      3084	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	IF_118	IF_119
0x400a21a	          0x83fa40	                           cmp edx, 0x40	      3088	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	ELSE_46	IF_120
0x400a21d	            0x750c	                           jne 0x400a22b	      3088	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	ELSE_46	IF_120
0x400a21f	    0xc70500000000	           mov dword [0x0400a229], 0x56 	      3089	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	ELSE_46	IF_120
0x400a229	            0xeb0f	                           jmp 0x400a23a	      3089	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	ELSE_46	IF_120
0x400a22b	          0x83fa60	                           cmp edx, 0x60	      3090	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	ELSE_47	IF_121
0x400a22e	            0x750a	                           jne 0x400a23a	      3090	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	ELSE_47	IF_121
0x400a230	    0xc70500000000	           mov dword [0x0400a23a], 0x16 	      3091	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	ELSE_47	IF_121
0x400a23a	    0xc70500000000	               mov dword [0x0400a244], 0	      3095	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116
0x400a244	    0x8b0500000000	            mov eax, dword [0x0400a24a] 	      3101	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122
0x400a24a	          0x83e060	                           and eax, 0x60	      3101	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122
0x400a24d	          0x83f820	                           cmp eax, 0x20	      3101	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122
0x400a250	     0xf8511020000	                           jne 0x400a467	      3101	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122
0x400a256	      0x837c244000	               cmp dword [rsp + 0x40], 0	      3106	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123
0x400a25b	     0xf844a010000	                            je 0x400a3ab	      3106	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123
0x400a261	    0x488b05000000	            mov rax, qword [0x0400a268] 	      3111	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123
0x400a268	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      3111	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123
0x400a26c	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3111	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123
0x400a270	      0x4889442460	             mov qword [rsp + 0x60], rax	      3111	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123
0x400a275	      0x4889542468	             mov qword [rsp + 0x68], rdx	      3111	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123
0x400a27a	            0xeb0a	                           jmp 0x400a286	      3112	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	WHILE_1	CALL_92
0x400a27c	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      3113	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	CALL_93
0x400a281	      0xe800000000	                          call 0x400a286	      3113	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	CALL_93
0x400a286	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      3112	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	WHILE_1	CALL_92
0x400a28b	      0xe800000000	                          call 0x400a290	      3112	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	WHILE_1	CALL_92
0x400a290	          0x83f820	                           cmp eax, 0x20	      3112	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	WHILE_1	CALL_92
0x400a293	            0x74e7	                            je 0x400a27c	      3112	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	WHILE_1	CALL_92
0x400a295	          0x83f809	                              cmp eax, 9	      3112	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	WHILE_1	CALL_92
0x400a298	            0x74e2	                            je 0x400a27c	      3112	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	WHILE_1	CALL_92
0x400a29a	        0x488b0424	                    mov rax, qword [rsp]	      3114	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_124
0x400a29e	          0x4885c0	                           test rax, rax	      3114	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_124
0x400a2a1	     0xf84fd000000	                            je 0x400a3a4	      3114	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_124
0x400a2a7	    0xc74008000000	                  mov dword [rax + 8], 0	      3115	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_124
0x400a2ae	    0x833d00000000	           cmp dword [0x0400a2b5], 0x76 	      3117	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125
0x400a2b5	     0xf85e9000000	                           jne 0x400a3a4	      3117	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125
0x400a2bb	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      3118	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	CALL_95
0x400a2c0	      0xe800000000	                          call 0x400a2c5	      3118	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	CALL_95
0x400a2c5	            0x89c7	                            mov edi, eax	      3118	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	CALL_95
0x400a2c7	      0xe800000000	                          call 0x400a2cc	      3118	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	CALL_95
0x400a2cc	            0x85c0	                           test eax, eax	      3118	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	CALL_95
0x400a2ce	     0xf85d0000000	                           jne 0x400a3a4	      3118	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	CALL_95
0x400a2d4	    0x488b05000000	            mov rax, qword [0x0400a2db] 	      3119	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	CALL_96
0x400a2db	    0x488b35000000	            mov rsi, qword [0x0400a2e2] 	      3119	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	CALL_96
0x400a2e2	        0x48397038	            cmp qword [rax + 0x38], rsi 	      3119	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	CALL_96
0x400a2e6	     0xf85b8000000	                           jne 0x400a3a4	      3119	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	CALL_96
0x400a2ec	    0x488b0d000000	            mov rcx, qword [0x0400a2f3] 	      3119	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	CALL_96
0x400a2f3	        0x48394840	            cmp qword [rax + 0x40], rcx 	      3119	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	CALL_96
0x400a2f7	     0xf85a7000000	                           jne 0x400a3a4	      3119	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	CALL_96
0x400a2fd	      0xbe00000000	                              mov esi, 0	      3120	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	CALL_97
0x400a302	        0x4c8b3c24	                    mov r15, qword [rsp]	      3120	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	CALL_97
0x400a306	          0x4c89ff	                            mov rdi, r15	      3120	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	CALL_97
0x400a309	      0xe800000000	                          call 0x400a30e	      3120	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	CALL_97
0x400a30e	          0x4885c0	                           test rax, rax	      3120	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	CALL_97
0x400a311	     0xf848d000000	                            je 0x400a3a4	      3120	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	CALL_97
0x400a317	    0x488b15000000	            mov rdx, qword [0x0400a31e] 	      3122	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125
0x400a31e	          0x488b08	                    mov rcx, qword [rax]	      3122	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125
0x400a321	        0x488b5808	                mov rbx, qword [rax + 8]	      3122	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125
0x400a325	        0x48894a38	             mov qword [rdx + 0x38], rcx	      3122	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125
0x400a329	        0x48895a40	             mov qword [rdx + 0x40], rbx	      3122	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125
0x400a32d	      0x41837f0801	                  cmp dword [r15 + 8], 1	      3123	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	IF_126
0x400a332	            0x750f	                           jne 0x400a343	      3123	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	IF_126
0x400a334	    0xc70500000000	           mov dword [0x0400a33e], 0x56 	      3124	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	IF_126
0x400a33e	      0xe916010000	                           jmp 0x400a459	      3124	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	IF_126
0x400a343	    0x488b05000000	            mov rax, qword [0x0400a34a] 	      3125	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127
0x400a34a	          0x803865	                    cmp byte [rax], 0x65	      3125	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127
0x400a34d	     0xf8506010000	                           jne 0x400a459	      3125	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127
0x400a353	        0x488b4a38	            mov rcx, qword [rdx + 0x38] 	      3127	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127	IF_128	CALL_98
0x400a357	    0x488b05000000	            mov rax, qword [0x0400a35e] 	      3127	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127	IF_128	CALL_98
0x400a35e	          0x4839c1	                            cmp rcx, rax	      3127	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127	IF_128	CALL_98
0x400a361	            0x7408	                            je 0x400a36b	      3127	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127	IF_128	CALL_98
0x400a363	          0x4839c1	                            cmp rcx, rax	      3127	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127	IF_128	CALL_98
0x400a366	           0xf9cc0	                                 setl al	      3127	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127	IF_128	CALL_98
0x400a369	            0xeb20	                           jmp 0x400a38b	      3127	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127	IF_128	CALL_98
0x400a36b	          0x8b4a40	            mov ecx, dword [rdx + 0x40] 	      3127	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127	IF_128	CALL_98
0x400a36e	    0x8b0500000000	            mov eax, dword [0x0400a374] 	      3127	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127	IF_128	CALL_98
0x400a374	            0x39c1	                            cmp ecx, eax	      3127	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127	IF_128	CALL_98
0x400a376	            0x7407	                            je 0x400a37f	      3127	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127	IF_128	CALL_98
0x400a378	            0x39c1	                            cmp ecx, eax	      3127	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127	IF_128	CALL_98
0x400a37a	           0xf9cc0	                                 setl al	      3127	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127	IF_128	CALL_98
0x400a37d	            0xeb0c	                           jmp 0x400a38b	      3127	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127	IF_128	CALL_98
0x400a37f	    0x8b0500000000	            mov eax, dword [0x0400a385] 	      3127	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127	IF_128	CALL_98
0x400a385	          0x394244	            cmp dword [rdx + 0x44], eax 	      3127	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127	IF_128	CALL_98
0x400a388	           0xf9cc0	                                 setl al	      3127	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127	IF_128	CALL_98
0x400a38b	            0x84c0	                             test al, al	      3127	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127	IF_128	CALL_98
0x400a38d	            0x740c	                            je 0x400a39b	      3127	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127	IF_128	CALL_98
0x400a38f	    0x830500000000	               add dword [0x0400a396], 1	      3128	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127	IF_128
0x400a396	      0xe9be000000	                           jmp 0x400a459	      3128	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127	IF_128
0x400a39b	        0x83424001	               add dword [rdx + 0x40], 1	      3130	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127	ELSE_49
0x400a39f	      0xe9b5000000	                           jmp 0x400a459	      3130	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127	ELSE_49
0x400a3a4	      0x837c244000	               cmp dword [rsp + 0x40], 0	      3135	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129
0x400a3a9	            0x750b	                           jne 0x400a3b6	      3135	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129
0x400a3ab	      0x837c244400	               cmp dword [rsp + 0x44], 0	      3135	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129
0x400a3b0	     0xf84a3000000	                            je 0x400a459	      3135	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129
0x400a3b6	    0x488b05000000	            mov rax, qword [0x0400a3bd] 	      3139	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	IF_130	CALL_99
0x400a3bd	        0x488b4838	            mov rcx, qword [rax + 0x38] 	      3139	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	IF_130	CALL_99
0x400a3c1	    0x488b15000000	            mov rdx, qword [0x0400a3c8] 	      3139	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	IF_130	CALL_99
0x400a3c8	          0x4839d1	                            cmp rcx, rdx	      3139	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	IF_130	CALL_99
0x400a3cb	            0x7408	                            je 0x400a3d5	      3139	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	IF_130	CALL_99
0x400a3cd	          0x4839d1	                            cmp rcx, rdx	      3139	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	IF_130	CALL_99
0x400a3d0	           0xf9cc2	                                 setl dl	      3139	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	IF_130	CALL_99
0x400a3d3	            0xeb20	                           jmp 0x400a3f5	      3139	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	IF_130	CALL_99
0x400a3d5	          0x8b4840	            mov ecx, dword [rax + 0x40] 	      3139	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	IF_130	CALL_99
0x400a3d8	    0x8b1500000000	            mov edx, dword [0x0400a3de] 	      3139	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	IF_130	CALL_99
0x400a3de	            0x39d1	                            cmp ecx, edx	      3139	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	IF_130	CALL_99
0x400a3e0	            0x7407	                            je 0x400a3e9	      3139	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	IF_130	CALL_99
0x400a3e2	            0x39d1	                            cmp ecx, edx	      3139	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	IF_130	CALL_99
0x400a3e4	           0xf9cc2	                                 setl dl	      3139	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	IF_130	CALL_99
0x400a3e7	            0xeb0c	                           jmp 0x400a3f5	      3139	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	IF_130	CALL_99
0x400a3e9	    0x8b3500000000	            mov esi, dword [0x0400a3ef] 	      3139	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	IF_130	CALL_99
0x400a3ef	          0x397044	            cmp dword [rax + 0x44], esi 	      3139	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	IF_130	CALL_99
0x400a3f2	           0xf9cc2	                                 setl dl	      3139	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	IF_130	CALL_99
0x400a3f5	            0x84d2	                             test dl, dl	      3139	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	IF_130	CALL_99
0x400a3f7	            0x7415	                            je 0x400a40e	      3139	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	IF_130	CALL_99
0x400a3f9	        0x488d7838	                   lea rdi, [rax + 0x38]	      3141	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	IF_130	CALL_100
0x400a3fd	      0xe85987ffff	             call sym.find_start_of_word	      3141	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	IF_130	CALL_100
0x400a402	      0xbf00000000	                              mov edi, 0	      3142	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	IF_130	CALL_101
0x400a407	      0xe8b587ffff	               call sym.find_end_of_word	      3142	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	IF_130	CALL_101
0x400a40c	            0xeb4b	                           jmp 0x400a459	      3142	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	IF_130	CALL_101
0x400a40e	      0xbf00000000	                              mov edi, 0	      3146	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	ELSE_50	CALL_102
0x400a413	      0xe84387ffff	             call sym.find_start_of_word	      3146	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	ELSE_50	CALL_102
0x400a418	    0x488b05000000	            mov rax, qword [0x0400a41f] 	      3147	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	ELSE_50	IF_131	CALL_103
0x400a41f	          0x803865	                    cmp byte [rax], 0x65	      3147	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	ELSE_50	IF_131	CALL_103
0x400a422	            0x7525	                           jne 0x400a449	      3147	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	ELSE_50	IF_131	CALL_103
0x400a424	      0xe800000000	                          call 0x400a429	      3147	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	ELSE_50	IF_131	CALL_103
0x400a429	          0x803800	                       cmp byte [rax], 0	      3147	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	ELSE_50	IF_131	CALL_103
0x400a42c	            0x741b	                            je 0x400a449	      3147	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	ELSE_50	IF_131	CALL_103
0x400a42e	    0x488b1d000000	            mov rbx, qword [0x0400a435] 	      3150	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	ELSE_50	CALL_104
0x400a435	      0xe800000000	                          call 0x400a43a	      3150	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	ELSE_50	CALL_104
0x400a43a	          0x4889c7	                            mov rdi, rax	      3150	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	ELSE_50	CALL_104
0x400a43d	            0xffd3	                                call rbx	      3150	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	ELSE_50	CALL_104
0x400a43f	    0x488b15000000	            mov rdx, qword [0x0400a446] 	      3149	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	ELSE_50	IF_131
0x400a446	           0x14240	             add dword [rdx + 0x40], eax	      3149	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	ELSE_50	IF_131
0x400a449	    0x488b05000000	            mov rax, qword [0x0400a450] 	      3154	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	ELSE_50	CALL_105
0x400a450	        0x488d7838	                   lea rdi, [rax + 0x38]	      3154	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	ELSE_50	CALL_105
0x400a454	      0xe86887ffff	               call sym.find_end_of_word	      3154	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	ELSE_50	CALL_105
0x400a459	    0x488b05000000	            mov rax, qword [0x0400a460] 	      3157	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122
0x400a460	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      3157	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122
0x400a467	      0x837c244000	               cmp dword [rsp + 0x40], 0	      3159	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_132
0x400a46c	            0x7436	                            je 0x400a4a4	      3159	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_132
0x400a46e	      0xbf14000000	                           mov edi, 0x14	      3160	normal.c	FUNCTION_9	ELSE_43	IF_115	CALL_106
0x400a473	      0xe800000000	                          call 0x400a478	      3160	normal.c	FUNCTION_9	ELSE_43	IF_115	CALL_106
0x400a478	            0xeb2a	                           jmp 0x400a4a4	      3160	normal.c	FUNCTION_9	ELSE_43	IF_115	CALL_106
0x400a47a	    0x833d00000000	               cmp dword [0x0400a481], 0	      3162	normal.c	FUNCTION_9	ELSE_51	IF_133
0x400a481	            0x7421	                            je 0x400a4a4	      3162	normal.c	FUNCTION_9	ELSE_51	IF_133
0x400a483	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      3162	normal.c	FUNCTION_9	ELSE_51	IF_133
0x400a488	            0x751a	                           jne 0x400a4a4	      3162	normal.c	FUNCTION_9	ELSE_51	IF_133
0x400a48a	    0x8b0500000000	            mov eax, dword [0x0400a490] 	      3164	normal.c	FUNCTION_9	ELSE_51	IF_133	IF_134
0x400a490	          0x83e008	                              and eax, 8	      3164	normal.c	FUNCTION_9	ELSE_51	IF_133	IF_134
0x400a493	          0x83f801	                              cmp eax, 1	      3165	normal.c	FUNCTION_9	ELSE_51	IF_133	IF_134
0x400a496	            0x19c0	                            sbb eax, eax	      3165	normal.c	FUNCTION_9	ELSE_51	IF_133	IF_134
0x400a498	          0x83e060	                           and eax, 0x60	      3165	normal.c	FUNCTION_9	ELSE_51	IF_133	IF_134
0x400a49b	          0x83c016	                           add eax, 0x16	      3165	normal.c	FUNCTION_9	ELSE_51	IF_133	IF_134
0x400a49e	    0x890500000000	            mov dword [0x0400a4a4], eax 	      3165	normal.c	FUNCTION_9	ELSE_51	IF_133	IF_134
0x400a4a4	    0x8b0500000000	            mov eax, dword [0x0400a4aa] 	      3171	normal.c	FUNCTION_9	IF_135
0x400a4aa	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      3171	normal.c	FUNCTION_9	IF_135
0x400a4af	            0x740d	                            je 0x400a4be	      3171	normal.c	FUNCTION_9	IF_135
0x400a4b1	            0x85c0	                           test eax, eax	      3171	normal.c	FUNCTION_9	IF_135
0x400a4b3	            0x7509	                           jne 0x400a4be	      3171	normal.c	FUNCTION_9	IF_135
0x400a4b5	    0x833d00000000	               cmp dword [0x0400a4bc], 0	      3171	normal.c	FUNCTION_9	IF_135
0x400a4bc	            0x7530	                           jne 0x400a4ee	      3171	normal.c	FUNCTION_9	IF_135
0x400a4be	        0x8b742438	            mov esi, dword [rsp + 0x38] 	      3176	normal.c	FUNCTION_9
0x400a4c2	          0x4189f6	                           mov r14d, esi	      3176	normal.c	FUNCTION_9
0x400a4c5	            0x85c0	                           test eax, eax	      3172	normal.c	FUNCTION_9	IF_135
0x400a4c7	            0x7453	                            je 0x400a51c	      3172	normal.c	FUNCTION_9	IF_135
0x400a4c9	    0x833d00000000	               cmp dword [0x0400a4d0], 0	      3172	normal.c	FUNCTION_9	IF_135
0x400a4d0	            0x744a	                            je 0x400a51c	      3172	normal.c	FUNCTION_9	IF_135
0x400a4d2	    0x833d00000000	               cmp dword [0x0400a4d9], 0	      3172	normal.c	FUNCTION_9	IF_135
0x400a4d9	            0x7541	                           jne 0x400a51c	      3172	normal.c	FUNCTION_9	IF_135
0x400a4db	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      3173	normal.c	FUNCTION_9	IF_135
0x400a4e0	            0x740c	                            je 0x400a4ee	      3173	normal.c	FUNCTION_9	IF_135
0x400a4e2	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      3173	normal.c	FUNCTION_9	IF_135
0x400a4e6	    0x3b0500000000	            cmp eax, dword [0x0400a4ec] 	      3173	normal.c	FUNCTION_9	IF_135
0x400a4ec	            0x7429	                            je 0x400a517	      3173	normal.c	FUNCTION_9	IF_135
0x400a4ee	    0xc70500000000	               mov dword [0x0400a4f8], 1	      3174	normal.c	FUNCTION_9	IF_135
0x400a4f8	      0x448b742438	           mov r14d, dword [rsp + 0x38] 	      3176	normal.c	FUNCTION_9
0x400a4fd	            0xeb1d	                           jmp 0x400a51c	      3176	normal.c	FUNCTION_9
0x400a4ff	    0x41be00000000	                             mov r14d, 0	      2396	normal.c	FUNCTION_9	IF_9
0x400a505	            0xeb15	                           jmp 0x400a51c	      2396	normal.c	FUNCTION_9	IF_9
0x400a507	    0x41be00000000	                             mov r14d, 0	      2471	normal.c	FUNCTION_9	IF_21
0x400a50d	            0xeb0d	                           jmp 0x400a51c	      2471	normal.c	FUNCTION_9	IF_21
0x400a50f	    0x41be01000000	                             mov r14d, 1	      2631	normal.c	FUNCTION_9	IF_35
0x400a515	            0xeb05	                           jmp 0x400a51c	      2631	normal.c	FUNCTION_9	IF_35
0x400a517	      0x448b742438	           mov r14d, dword [rsp + 0x38] 	      3176	normal.c	FUNCTION_9
0x400a51c	          0x4489f0	                           mov eax, r14d	      3177	normal.c	FUNCTION_9
0x400a51f	      0x488b4c2478	            mov rcx, qword [rsp + 0x78] 	      3177	normal.c	FUNCTION_9
0x400a524	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3177	normal.c	FUNCTION_9
0x400a52d	            0x7471	                            je 0x400a5a0	      3177	normal.c	FUNCTION_9
0x400a52f	            0xeb6a	                           jmp 0x400a59b	      3177	normal.c	FUNCTION_9
0x400a531	    0x81fd039bffff	                     cmp ebp, 0xffff9b03	      2385	normal.c	FUNCTION_9	IF_9
0x400a537	     0xf855becffff	                           jne 0x4009198	      2385	normal.c	FUNCTION_9	IF_9
0x400a53d	      0xe90aecffff	                           jmp 0x400914c	      2385	normal.c	FUNCTION_9	IF_9
0x400a542	      0xbf6e000000	                           mov edi, 0x6e	      2538	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	CALL_22
0x400a547	      0xe800000000	                          call 0x400a54c	      2538	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	CALL_22
0x400a54c	            0x85c0	                           test eax, eax	      2538	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	CALL_22
0x400a54e	     0xf8468eeffff	                            je 0x40093bc	      2538	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	CALL_22
0x400a554	      0xe915efffff	                           jmp 0x400946e	      2538	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	CALL_22
0x400a559	    0xc744241c0100	               mov dword [rsp + 0x1c], 1	      2976	normal.c	FUNCTION_9	IF_97	IF_102
0x400a561	        0x8b442418	            mov eax, dword [rsp + 0x18] 	      2976	normal.c	FUNCTION_9	IF_97	IF_102
0x400a565	          0x83f801	                              cmp eax, 1	      2976	normal.c	FUNCTION_9	IF_97	IF_102
0x400a568	          0x4519c9	                            sbb r9d, r9d	      2976	normal.c	FUNCTION_9	IF_97	IF_102
0x400a56b	          0x41f7d1	                                 not r9d	      2976	normal.c	FUNCTION_9	IF_97	IF_102
0x400a56e	        0x4183e170	                           and r9d, 0x70	      2976	normal.c	FUNCTION_9	IF_97	IF_102
0x400a572	          0x83f801	                              cmp eax, 1	      2976	normal.c	FUNCTION_9	IF_97	IF_102
0x400a575	            0x19c9	                            sbb ecx, ecx	      2976	normal.c	FUNCTION_9	IF_97	IF_102
0x400a577	          0x83e113	                           and ecx, 0x13	      2976	normal.c	FUNCTION_9	IF_97	IF_102
0x400a57a	          0x83c15d	                           add ecx, 0x5d	      2976	normal.c	FUNCTION_9	IF_97	IF_102
0x400a57d	      0xe9e0f9ffff	                           jmp 0x4009f62	      2976	normal.c	FUNCTION_9	IF_97	IF_102
0x400a582	    0x8b3500000000	            mov esi, dword [0x0400a588] 	      2708	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_47
0x400a588	          0x8b4f40	            mov ecx, dword [rdi + 0x40] 	      2708	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_47
0x400a58b	      0xe93cf2ffff	                           jmp 0x40097cc	      2708	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_47
0x400a590	    0x41be00000000	                             mov r14d, 0	      2708	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_47
0x400a596	      0xe937f3ffff	                           jmp 0x40098d2	      2708	normal.c	FUNCTION_9	IF_47	IF_48	IF_53	IF_54	ELSE_16	IF_57	CALL_47
0x400a59b	      0xe800000000	                          call 0x400a5a0	      3177	normal.c	FUNCTION_9
0x400a5a0	    0x4881c4880000	                           add rsp, 0x88	      3177	normal.c	FUNCTION_9
0x400a5a7	              0x5b	                                 pop rbx	      3177	normal.c	FUNCTION_9
0x400a5a8	              0x5d	                                 pop rbp	      3177	normal.c	FUNCTION_9
0x400a5a9	            0x415c	                                 pop r12	      3177	normal.c	FUNCTION_9
0x400a5ab	            0x415d	                                 pop r13	      3177	normal.c	FUNCTION_9
0x400a5ad	            0x415e	                                 pop r14	      3177	normal.c	FUNCTION_9
0x400a5af	            0x415f	                                 pop r15	      3177	normal.c	FUNCTION_9
0x400a5b1	              0xc3	                                     ret	      3177	normal.c	FUNCTION_9
nv_mark	CALL,3:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,0:IF,2	14
0x40007dc	              0x53	                                push rbx	      6917	normal.c	FUNCTION_84
0x40007dd	          0x4889fb	                            mov rbx, rdi	      6917	normal.c	FUNCTION_84
0x40007e0	          0x488b3f	                    mov rdi, qword [rdi]	      6918	normal.c	FUNCTION_84	IF_1	CALL_1
0x40007e3	      0xe89bfaffff	                   call sym.checkclearop	      6918	normal.c	FUNCTION_84	IF_1	CALL_1
0x40007e8	            0x85c0	                           test eax, eax	      6918	normal.c	FUNCTION_84	IF_1	CALL_1
0x40007ea	            0x7514	                           jne 0x4000800	      6918	normal.c	FUNCTION_84	IF_1	CALL_1
0x40007ec	          0x8b7b10	            mov edi, dword [rbx + 0x10] 	      6920	normal.c	FUNCTION_84	IF_1	IF_2	CALL_2
0x40007ef	      0xe800000000	                          call 0x40007f4	      6920	normal.c	FUNCTION_84	IF_1	IF_2	CALL_2
0x40007f4	            0x85c0	                           test eax, eax	      6920	normal.c	FUNCTION_84	IF_1	IF_2	CALL_2
0x40007f6	            0x7508	                           jne 0x4000800	      6920	normal.c	FUNCTION_84	IF_1	IF_2	CALL_2
0x40007f8	          0x488b3b	                    mov rdi, qword [rbx]	      6921	normal.c	FUNCTION_84	IF_1	CALL_3
0x40007fb	      0xe838faffff	                    call sym.clearopbeep	      6921	normal.c	FUNCTION_84	IF_1	CALL_3
0x4000800	              0x5b	                                 pop rbx	      6923	normal.c	FUNCTION_84
0x4000801	              0xc3	                                     ret	      6923	normal.c	FUNCTION_84
nv_ver_scrollbar	CALL,2:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,0:IF,1	8
0x40002f6	        0x4883ec08	                              sub rsp, 8	      5250	normal.c	FUNCTION_52
0x40002fa	          0x488b3f	                    mov rdi, qword [rdi]	      5251	normal.c	FUNCTION_52	IF_1
0x40002fd	          0x833f00	                      cmp dword [rdi], 0	      5251	normal.c	FUNCTION_52	IF_1
0x4000300	            0x7405	                            je 0x4000307	      5251	normal.c	FUNCTION_52	IF_1
0x4000302	      0xe831ffffff	                    call sym.clearopbeep	      5252	normal.c	FUNCTION_52	CALL_1
0x4000307	      0xe800000000	                          call 0x400030c	      5255	normal.c	FUNCTION_52	CALL_2
0x400030c	        0x4883c408	                              add rsp, 8	      5256	normal.c	FUNCTION_52
0x4000310	              0xc3	                                     ret	      5256	normal.c	FUNCTION_52
nv_normal	CALL,4:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,1:IF,5	36
0x4005e37	              0x53	                                push rbx	      8950	normal.c	FUNCTION_126
0x4005e38	          0x4889fb	                            mov rbx, rdi	      8950	normal.c	FUNCTION_126
0x4005e3b	          0x8b4710	            mov eax, dword [rdi + 0x10] 	      8951	normal.c	FUNCTION_126	IF_1
0x4005e3e	          0x83f80e	                            cmp eax, 0xe	      8951	normal.c	FUNCTION_126	IF_1
0x4005e41	            0x7409	                            je 0x4005e4c	      8951	normal.c	FUNCTION_126	IF_1
0x4005e43	          0x83f807	                              cmp eax, 7	      8951	normal.c	FUNCTION_126	IF_1
0x4005e46	     0xf858a000000	                           jne 0x4005ed6	      8951	normal.c	FUNCTION_126	IF_1
0x4005e4c	          0x488b03	                    mov rax, qword [rbx]	      8953	normal.c	FUNCTION_126	IF_1	CALL_1
0x4005e4f	    0xc70000000000	                      mov dword [rax], 0	      3676	normal.c	FUNCTION_24
0x4005e55	    0xc74004000000	                  mov dword [rax + 4], 0	      3677	normal.c	FUNCTION_24
0x4005e5c	    0xc7400c000000	                mov dword [rax + 0xc], 0	      3678	normal.c	FUNCTION_24
0x4005e63	    0xc74010000000	               mov dword [rax + 0x10], 0	      3679	normal.c	FUNCTION_24
0x4005e6a	    0x833d00000000	               cmp dword [0x04005e71], 0	      8954	normal.c	FUNCTION_126	IF_1	IF_2
0x4005e71	            0x7413	                            je 0x4005e86	      8954	normal.c	FUNCTION_126	IF_1	IF_2
0x4005e73	    0x833d00000000	               cmp dword [0x04005e7a], 0	      8954	normal.c	FUNCTION_126	IF_1	IF_2
0x4005e7a	            0x740a	                            je 0x4005e86	      8954	normal.c	FUNCTION_126	IF_1	IF_2
0x4005e7c	    0xc70500000000	               mov dword [0x04005e86], 1	      8955	normal.c	FUNCTION_126	IF_1	IF_2
0x4005e86	    0xc70500000000	               mov dword [0x04005e90], 0	      8956	normal.c	FUNCTION_126	IF_1
0x4005e90	    0x833d00000000	               cmp dword [0x04005e97], 0	      8958	normal.c	FUNCTION_126	IF_1	IF_3
0x4005e97	            0x740a	                            je 0x4005ea3	      8958	normal.c	FUNCTION_126	IF_1	IF_3
0x4005e99	    0xc70500000000	               mov dword [0x04005ea3], 3	      8959	normal.c	FUNCTION_126	IF_1	IF_3
0x4005ea3	    0x833d00000000	               cmp dword [0x04005eaa], 0	      8961	normal.c	FUNCTION_126	IF_1	IF_4
0x4005eaa	            0x740f	                            je 0x4005ebb	      8961	normal.c	FUNCTION_126	IF_1	IF_4
0x4005eac	      0xe800000000	                          call 0x4005eb1	      8963	normal.c	FUNCTION_126	IF_1	IF_4	CALL_2
0x4005eb1	      0xbf14000000	                           mov edi, 0x14	      8964	normal.c	FUNCTION_126	IF_1	IF_4	CALL_3
0x4005eb6	      0xe800000000	                          call 0x4005ebb	      8964	normal.c	FUNCTION_126	IF_1	IF_4	CALL_3
0x4005ebb	        0x837b1007	               cmp dword [rbx + 0x10], 7	      8967	normal.c	FUNCTION_126	IF_1	IF_5
0x4005ebf	            0x751d	                           jne 0x4005ede	      8967	normal.c	FUNCTION_126	IF_1	IF_5
0x4005ec1	    0x833d00000000	               cmp dword [0x04005ec8], 0	      8967	normal.c	FUNCTION_126	IF_1	IF_5
0x4005ec8	            0x7414	                            je 0x4005ede	      8967	normal.c	FUNCTION_126	IF_1	IF_5
0x4005eca	    0xc70500000000	           mov dword [0x04005ed4], 0x61 	      8968	normal.c	FUNCTION_126	IF_1	IF_5
0x4005ed4	            0xeb08	                           jmp 0x4005ede	      8968	normal.c	FUNCTION_126	IF_1	IF_5
0x4005ed6	          0x488b3f	                    mov rdi, qword [rdi]	      8971	normal.c	FUNCTION_126	CALL_4
0x4005ed9	      0xe85aa3ffff	                    call sym.clearopbeep	      8971	normal.c	FUNCTION_126	CALL_4
0x4005ede	              0x5b	                                 pop rbx	      8972	normal.c	FUNCTION_126
0x4005edf	              0xc3	                                     ret	      8972	normal.c	FUNCTION_126
nv_findpar	CALL,3:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,1:IF,2	34
0x4000560	              0x53	                                push rbx	      6931	normal.c	FUNCTION_85
0x4000561	          0x4889fb	                            mov rbx, rdi	      6931	normal.c	FUNCTION_85
0x4000564	          0x488b07	                    mov rax, qword [rdi]	      6932	normal.c	FUNCTION_85
0x4000567	    0xc74008000000	                  mov dword [rax + 8], 0	      6932	normal.c	FUNCTION_85
0x400056e	          0x488b07	                    mov rax, qword [rdi]	      6933	normal.c	FUNCTION_85
0x4000571	    0xc74014000000	               mov dword [rax + 0x14], 0	      6933	normal.c	FUNCTION_85
0x4000578	          0x488b07	                    mov rax, qword [rdi]	      6934	normal.c	FUNCTION_85
0x400057b	    0xc74010010000	               mov dword [rax + 0x10], 1	      6934	normal.c	FUNCTION_85
0x4000582	    0x488b05000000	            mov rax, qword [0x04000589] 	      6935	normal.c	FUNCTION_85
0x4000589	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      6935	normal.c	FUNCTION_85
0x4000590	        0x488b5730	            mov rdx, qword [rdi + 0x30] 	      6936	normal.c	FUNCTION_85	IF_1	CALL_1
0x4000594	          0x8b7738	            mov esi, dword [rdi + 0x38] 	      6936	normal.c	FUNCTION_85	IF_1	CALL_1
0x4000597	          0x488b07	                    mov rax, qword [rdi]	      6936	normal.c	FUNCTION_85	IF_1	CALL_1
0x400059a	        0x488d7814	                   lea rdi, [rax + 0x14]	      6936	normal.c	FUNCTION_85	IF_1	CALL_1
0x400059e	    0x41b800000000	                              mov r8d, 0	      6936	normal.c	FUNCTION_85	IF_1	CALL_1
0x40005a4	      0xb900000000	                              mov ecx, 0	      6936	normal.c	FUNCTION_85	IF_1	CALL_1
0x40005a9	      0xe800000000	                          call 0x40005ae	      6936	normal.c	FUNCTION_85	IF_1	CALL_1
0x40005ae	            0x85c0	                           test eax, eax	      6936	normal.c	FUNCTION_85	IF_1	CALL_1
0x40005b0	            0x750a	                           jne 0x40005bc	      6936	normal.c	FUNCTION_85	IF_1	CALL_1
0x40005b2	          0x488b3b	                    mov rdi, qword [rbx]	      6937	normal.c	FUNCTION_85	CALL_2
0x40005b5	      0xe87efcffff	                    call sym.clearopbeep	      6937	normal.c	FUNCTION_85	CALL_2
0x40005ba	            0xeb2d	                           jmp 0x40005e9	      6937	normal.c	FUNCTION_85	CALL_2
0x40005bc	    0x488b05000000	            mov rax, qword [0x040005c3] 	      6941	normal.c	FUNCTION_85	ELSE_1
0x40005c3	    0xc74044000000	               mov dword [rax + 0x44], 0	      6941	normal.c	FUNCTION_85	ELSE_1
0x40005ca	    0xf60500000000	               test byte [0x040005d1], 2	      6944	normal.c	FUNCTION_85	ELSE_1	IF_2
0x40005d1	            0x7416	                            je 0x40005e9	      6944	normal.c	FUNCTION_85	ELSE_1	IF_2
0x40005d3	    0x833d00000000	               cmp dword [0x040005da], 0	      6944	normal.c	FUNCTION_85	ELSE_1	IF_2
0x40005da	            0x740d	                            je 0x40005e9	      6944	normal.c	FUNCTION_85	ELSE_1	IF_2
0x40005dc	          0x488b03	                    mov rax, qword [rbx]	      6944	normal.c	FUNCTION_85	ELSE_1	IF_2
0x40005df	          0x833800	                      cmp dword [rax], 0	      6944	normal.c	FUNCTION_85	ELSE_1	IF_2
0x40005e2	            0x7505	                           jne 0x40005e9	      6944	normal.c	FUNCTION_85	ELSE_1	IF_2
0x40005e4	      0xe800000000	                          call 0x40005e9	      6945	normal.c	FUNCTION_85	ELSE_1	CALL_3
0x40005e9	              0x5b	                                 pop rbx	      6948	normal.c	FUNCTION_85
0x40005ea	              0xc3	                                     ret	      6948	normal.c	FUNCTION_85
nv_operator	CALL,4:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,1:IF,2	31
0x4001b5e	              0x55	                                push rbp	      8584	normal.c	FUNCTION_113
0x4001b5f	              0x53	                                push rbx	      8584	normal.c	FUNCTION_113
0x4001b60	        0x4883ec08	                              sub rsp, 8	      8584	normal.c	FUNCTION_113
0x4001b64	          0x4889fb	                            mov rbx, rdi	      8584	normal.c	FUNCTION_113
0x4001b67	          0x8b7710	            mov esi, dword [rdi + 0x10] 	      8587	normal.c	FUNCTION_113	CALL_1
0x4001b6a	          0x8b7f0c	              mov edi, dword [rdi + 0xc]	      8587	normal.c	FUNCTION_113	CALL_1
0x4001b6d	      0xe800000000	                          call 0x4001b72	      8587	normal.c	FUNCTION_113	CALL_1
0x4001b72	          0x488b3b	                    mov rdi, qword [rbx]	      8589	normal.c	FUNCTION_113	IF_1
0x4001b75	            0x3b07	                    cmp eax, dword [rdi]	      8589	normal.c	FUNCTION_113	IF_1
0x4001b77	            0x750a	                           jne 0x4001b83	      8589	normal.c	FUNCTION_113	IF_1
0x4001b79	          0x4889df	                            mov rdi, rbx	      8590	normal.c	FUNCTION_113	CALL_2
0x4001b7c	      0xe8c0ecffff	                      call sym.nv_lineop	      8590	normal.c	FUNCTION_113	CALL_2
0x4001b81	            0xeb31	                           jmp 0x4001bb4	      8590	normal.c	FUNCTION_113	CALL_2
0x4001b83	            0x89c5	                            mov ebp, eax	      8590	normal.c	FUNCTION_113	CALL_2
0x4001b85	      0xe8f9e6ffff	                   call sym.checkclearop	      8591	normal.c	FUNCTION_113	ELSE_1	IF_2	CALL_3
0x4001b8a	            0x85c0	                           test eax, eax	      8591	normal.c	FUNCTION_113	ELSE_1	IF_2	CALL_3
0x4001b8c	            0x7526	                           jne 0x4001bb4	      8591	normal.c	FUNCTION_113	ELSE_1	IF_2	CALL_3
0x4001b8e	          0x488b03	                    mov rax, qword [rbx]	      8593	normal.c	FUNCTION_113	ELSE_1	IF_2
0x4001b91	    0x488b15000000	            mov rdx, qword [0x04001b98] 	      8593	normal.c	FUNCTION_113	ELSE_1	IF_2
0x4001b98	        0x488b7238	            mov rsi, qword [rdx + 0x38] 	      8593	normal.c	FUNCTION_113	ELSE_1	IF_2
0x4001b9c	        0x488b7a40	            mov rdi, qword [rdx + 0x40] 	      8593	normal.c	FUNCTION_113	ELSE_1	IF_2
0x4001ba0	        0x48897020	             mov qword [rax + 0x20], rsi	      8593	normal.c	FUNCTION_113	ELSE_1	IF_2
0x4001ba4	        0x48897828	             mov qword [rax + 0x28], rdi	      8593	normal.c	FUNCTION_113	ELSE_1	IF_2
0x4001ba8	          0x488b03	                    mov rax, qword [rbx]	      8594	normal.c	FUNCTION_113	ELSE_1	IF_2
0x4001bab	            0x8928	                    mov dword [rax], ebp	      8594	normal.c	FUNCTION_113	ELSE_1	IF_2
0x4001bad	            0x89ef	                            mov edi, ebp	      8596	normal.c	FUNCTION_113	ELSE_1	IF_2	CALL_4
0x4001baf	      0xe89afcffff	                     call sym.set_op_var	      8596	normal.c	FUNCTION_113	ELSE_1	IF_2	CALL_4
0x4001bb4	        0x4883c408	                              add rsp, 8	      8599	normal.c	FUNCTION_113
0x4001bb8	              0x5b	                                 pop rbx	      8599	normal.c	FUNCTION_113
0x4001bb9	              0x5d	                                 pop rbp	      8599	normal.c	FUNCTION_113
0x4001bba	              0xc3	                                     ret	      8599	normal.c	FUNCTION_113
do_pending_operator	CALL,108:SWITCH,1:DO,0:FOR,0:functions,0:WHILE,0:ELSE,33:IF,82	1100
0x4004157	            0x4157	                                push r15	      1348	normal.c	FUNCTION_6
0x4004159	            0x4156	                                push r14	      1348	normal.c	FUNCTION_6
0x400415b	            0x4155	                                push r13	      1348	normal.c	FUNCTION_6
0x400415d	            0x4154	                                push r12	      1348	normal.c	FUNCTION_6
0x400415f	              0x55	                                push rbp	      1348	normal.c	FUNCTION_6
0x4004160	              0x53	                                push rbx	      1348	normal.c	FUNCTION_6
0x4004161	        0x4883ec38	                           sub rsp, 0x38	      1348	normal.c	FUNCTION_6
0x4004165	          0x4889fd	                            mov rbp, rdi	      1348	normal.c	FUNCTION_6
0x4004168	        0x8974240c	              mov dword [rsp + 0xc], esi	      1348	normal.c	FUNCTION_6
0x400416c	          0x4189d4	                           mov r12d, edx	      1348	normal.c	FUNCTION_6
0x400416f	    0x64488b042528	                mov rax, qword fs:[0x28]	      1348	normal.c	FUNCTION_6
0x4004178	      0x4889442428	             mov qword [rsp + 0x28], rax	      1348	normal.c	FUNCTION_6
0x400417d	            0x31c0	                            xor eax, eax	      1348	normal.c	FUNCTION_6
0x400417f	          0x488b1f	                    mov rbx, qword [rdi]	      1349	normal.c	FUNCTION_6
0x4004182	    0x488b05000000	            mov rax, qword [0x04004189] 	      1354	normal.c	FUNCTION_6
0x4004189	    0x448ba8300200	          mov r13d, dword [rax + 0x230] 	      1354	normal.c	FUNCTION_6
0x4004190	    0x833d00000000	               cmp dword [0x04004197], 0	      1375	normal.c	FUNCTION_6	IF_1
0x4004197	            0x7509	                           jne 0x40041a2	      1375	normal.c	FUNCTION_6	IF_1
0x4004199	    0x833d00000000	               cmp dword [0x040041a0], 0	      1375	normal.c	FUNCTION_6	IF_1
0x40041a0	            0x7433	                            je 0x40041d5	      1375	normal.c	FUNCTION_6	IF_1
0x40041a2	          0x833b00	                      cmp dword [rbx], 0	      1377	normal.c	FUNCTION_6	IF_1
0x40041a5	            0x742e	                            je 0x40041d5	      1377	normal.c	FUNCTION_6	IF_1
0x40041a7	          0x4585e4	                         test r12d, r12d	      1377	normal.c	FUNCTION_6	IF_1
0x40041aa	            0x7529	                           jne 0x40041d5	      1377	normal.c	FUNCTION_6	IF_1
0x40041ac	    0x833d00000000	               cmp dword [0x040041b3], 0	      1378	normal.c	FUNCTION_6	IF_1
0x40041b3	     0xf84f7110000	                            je 0x40053b0	      1378	normal.c	FUNCTION_6	IF_1
0x40041b9	    0x833d00000000	               cmp dword [0x040041c0], 0	      1379	normal.c	FUNCTION_6	IF_1
0x40041c0	     0xf850a120000	                           jne 0x40053d0	      1379	normal.c	FUNCTION_6	IF_1
0x40041c6	        0x837b0400	                  cmp dword [rbx + 4], 0	      1380	normal.c	FUNCTION_6	IF_1
0x40041ca	     0xf8500120000	                           jne 0x40053d0	      1380	normal.c	FUNCTION_6	IF_1
0x40041d0	      0xe800000000	                          call 0x40041d5	      1381	normal.c	FUNCTION_6	CALL_1
0x40041d5	    0x488b05000000	            mov rax, qword [0x040041dc] 	      1383	normal.c	FUNCTION_6
0x40041dc	        0x4c8b7038	            mov r14, qword [rax + 0x38] 	      1383	normal.c	FUNCTION_6
0x40041e0	          0x8b4840	            mov ecx, dword [rax + 0x40] 	      1383	normal.c	FUNCTION_6
0x40041e3	        0x894c2408	                mov dword [rsp + 8], ecx	      1383	normal.c	FUNCTION_6
0x40041e7	          0x8b4844	            mov ecx, dword [rax + 0x44] 	      1383	normal.c	FUNCTION_6
0x40041ea	        0x894c2404	                mov dword [rsp + 4], ecx	      1383	normal.c	FUNCTION_6
0x40041ee	    0x833d00000000	               cmp dword [0x040041f5], 0	      1388	normal.c	FUNCTION_6	IF_2
0x40041f5	            0x750d	                           jne 0x4004204	      1388	normal.c	FUNCTION_6	IF_2
0x40041f7	    0x833d00000000	               cmp dword [0x040041fe], 0	      1388	normal.c	FUNCTION_6	IF_2
0x40041fe	     0xf8485110000	                            je 0x4005389	      1388	normal.c	FUNCTION_6	IF_2
0x4004204	          0x833b00	                      cmp dword [rbx], 0	      1388	normal.c	FUNCTION_6	IF_2
0x4004207	     0xf847c110000	                            je 0x4005389	      1388	normal.c	FUNCTION_6	IF_2
0x400420d	    0x83b830020000	              cmp dword [rax + 0x230], 0	      1392	normal.c	FUNCTION_6	IF_2	IF_3
0x4004214	            0x7407	                            je 0x400421d	      1392	normal.c	FUNCTION_6	IF_2	IF_3
0x4004216	    0x83a0b4000000	      and dword [rax + 0xb4], 0xfffffffb	      1393	normal.c	FUNCTION_6	IF_2	IF_3
0x400421d	    0xc78030020000	              mov dword [rax + 0x230], 0	      1394	normal.c	FUNCTION_6	IF_2
0x4004227	    0x8b0500000000	            mov eax, dword [0x0400422d] 	      1396	normal.c	FUNCTION_6	IF_2
0x400422d	          0x89435c	             mov dword [rbx + 0x5c], eax	      1396	normal.c	FUNCTION_6	IF_2
0x4004230	          0x8b430c	              mov eax, dword [rbx + 0xc]	      1397	normal.c	FUNCTION_6	IF_2	IF_4
0x4004233	          0x83f856	                           cmp eax, 0x56	      1397	normal.c	FUNCTION_6	IF_2	IF_4
0x4004236	            0x7509	                           jne 0x4004241	      1397	normal.c	FUNCTION_6	IF_2	IF_4
0x4004238	    0xc74308010000	                  mov dword [rbx + 8], 1	      1398	normal.c	FUNCTION_6	IF_2	IF_4
0x400423f	            0xeb73	                           jmp 0x40042b4	      1398	normal.c	FUNCTION_6	IF_2	IF_4
0x4004241	          0x83f876	                           cmp eax, 0x76	      1399	normal.c	FUNCTION_6	IF_2	ELSE_1	IF_5
0x4004244	            0x752b	                           jne 0x4004271	      1399	normal.c	FUNCTION_6	IF_2	ELSE_1	IF_5
0x4004246	          0x8b4308	                mov eax, dword [rbx + 8]	      1403	normal.c	FUNCTION_6	IF_2	ELSE_1	IF_5	IF_6
0x4004249	          0x83f801	                              cmp eax, 1	      1403	normal.c	FUNCTION_6	IF_2	ELSE_1	IF_5	IF_6
0x400424c	            0x7509	                           jne 0x4004257	      1403	normal.c	FUNCTION_6	IF_2	ELSE_1	IF_5	IF_6
0x400424e	    0xc74314000000	               mov dword [rbx + 0x14], 0	      1404	normal.c	FUNCTION_6	IF_2	ELSE_1	IF_5	IF_6
0x4004255	            0xeb11	                           jmp 0x4004268	      1404	normal.c	FUNCTION_6	IF_2	ELSE_1	IF_5	IF_6
0x4004257	            0x85c0	                           test eax, eax	      1406	normal.c	FUNCTION_6	IF_2	ELSE_1	IF_5	ELSE_2	IF_7
0x4004259	            0x750d	                           jne 0x4004268	      1406	normal.c	FUNCTION_6	IF_2	ELSE_1	IF_5	ELSE_2	IF_7
0x400425b	        0x837b1400	               cmp dword [rbx + 0x14], 0	      1407	normal.c	FUNCTION_6	IF_2	ELSE_1	IF_5	ELSE_2	IF_7
0x400425f	           0xf94c0	                                 sete al	      1407	normal.c	FUNCTION_6	IF_2	ELSE_1	IF_5	ELSE_2	IF_7
0x4004262	           0xfb6c0	                           movzx eax, al	      1407	normal.c	FUNCTION_6	IF_2	ELSE_1	IF_5	ELSE_2	IF_7
0x4004265	          0x894314	             mov dword [rbx + 0x14], eax	      1407	normal.c	FUNCTION_6	IF_2	ELSE_1	IF_5	ELSE_2	IF_7
0x4004268	    0xc74308000000	                  mov dword [rbx + 8], 0	      1408	normal.c	FUNCTION_6	IF_2	ELSE_1	IF_5
0x400426f	            0xeb43	                           jmp 0x40042b4	      1408	normal.c	FUNCTION_6	IF_2	ELSE_1	IF_5
0x4004271	          0x83f816	                           cmp eax, 0x16	      1410	normal.c	FUNCTION_6	IF_2	ELSE_3	IF_8
0x4004274	            0x753e	                           jne 0x40042b4	      1410	normal.c	FUNCTION_6	IF_2	ELSE_3	IF_8
0x4004276	    0xc70500000000	               mov dword [0x04004280], 1	      1413	normal.c	FUNCTION_6	IF_2	ELSE_3	IF_8
0x4004280	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      1414	normal.c	FUNCTION_6	IF_2	ELSE_3	IF_8
0x4004284	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	      1414	normal.c	FUNCTION_6	IF_2	ELSE_3	IF_8
0x4004288	    0x488905000000	            mov qword [0x0400428f], rax 	      1414	normal.c	FUNCTION_6	IF_2	ELSE_3	IF_8
0x400428f	    0x488915000000	            mov qword [0x04004296], rdx 	      1414	normal.c	FUNCTION_6	IF_2	ELSE_3	IF_8
0x4004296	    0xc70500000000	           mov dword [0x040042a0], 0x16 	      1415	normal.c	FUNCTION_6	IF_2	ELSE_3	IF_8
0x40042a0	    0xc70500000000	               mov dword [0x040042aa], 0	      1416	normal.c	FUNCTION_6	IF_2	ELSE_3	IF_8
0x40042aa	    0xc70500000000	               mov dword [0x040042b4], 0	      1417	normal.c	FUNCTION_6	IF_2	ELSE_3	IF_8
0x40042b4	      0xbe79000000	                           mov esi, 0x79	      1422	normal.c	FUNCTION_6	IF_2	IF_9	CALL_2
0x40042b9	    0x488b3d000000	            mov rdi, qword [0x040042c0] 	      1422	normal.c	FUNCTION_6	IF_2	IF_9	CALL_2
0x40042c0	      0xe800000000	                          call 0x40042c5	      1422	normal.c	FUNCTION_6	IF_2	IF_9	CALL_2
0x40042c5	          0x4885c0	                           test rax, rax	      1422	normal.c	FUNCTION_6	IF_2	IF_9	CALL_2
0x40042c8	            0x7509	                           jne 0x40042d3	      1422	normal.c	FUNCTION_6	IF_2	IF_9	CALL_2
0x40042ca	          0x833b02	                      cmp dword [rbx], 2	      1422	normal.c	FUNCTION_6	IF_2	IF_9	CALL_2
0x40042cd	     0xf840d010000	                            je 0x40043e0	      1422	normal.c	FUNCTION_6	IF_2	IF_9	CALL_2
0x40042d3	    0x833d00000000	               cmp dword [0x040042da], 0	      1423	normal.c	FUNCTION_6	IF_2	IF_9
0x40042da	            0x741e	                            je 0x40042fa	      1423	normal.c	FUNCTION_6	IF_2	IF_9
0x40042dc	        0x837b0c00	                cmp dword [rbx + 0xc], 0	      1423	normal.c	FUNCTION_6	IF_2	IF_9
0x40042e0	            0x7518	                           jne 0x40042fa	      1423	normal.c	FUNCTION_6	IF_2	IF_9
0x40042e2	        0x448b7d0c	            mov r15d, dword [rbp + 0xc] 	      1425	normal.c	FUNCTION_6	IF_2	IF_9
0x40042e6	        0x4183ff3a	                          cmp r15d, 0x3a	      1425	normal.c	FUNCTION_6	IF_2	IF_9
0x40042ea	     0xf85f7100000	                           jne 0x40053e7	      1425	normal.c	FUNCTION_6	IF_2	IF_9
0x40042f0	          0x833b0a	                    cmp dword [rbx], 0xa	      1426	normal.c	FUNCTION_6	IF_2	IF_9
0x40042f3	            0x7513	                           jne 0x4004308	      1426	normal.c	FUNCTION_6	IF_2	IF_9
0x40042f5	      0xe9ed100000	                           jmp 0x40053e7	      1426	normal.c	FUNCTION_6	IF_2	IF_9
0x40042fa	        0x448b7d0c	            mov r15d, dword [rbp + 0xc] 	      1427	normal.c	FUNCTION_6	IF_2	IF_9
0x40042fe	        0x4183ff44	                          cmp r15d, 0x44	      1427	normal.c	FUNCTION_6	IF_2	IF_9
0x4004302	     0xf84d8000000	                            je 0x40043e0	      1427	normal.c	FUNCTION_6	IF_2	IF_9
0x4004308	            0x8b3b	                    mov edi, dword [rbx]	      1429	normal.c	FUNCTION_6	IF_2	IF_9
0x400430a	          0x8d47ed	                   lea eax, [rdi - 0x13]	      1435	normal.c	FUNCTION_6	IF_2	IF_9
0x400430d	          0x83f806	                              cmp eax, 6	      1435	normal.c	FUNCTION_6	IF_2	IF_9
0x4004310	     0xf86ca000000	                           jbe 0x40043e0	      1435	normal.c	FUNCTION_6	IF_2	IF_9
0x4004316	          0x8b4510	            mov eax, dword [rbp + 0x10] 	      1439	normal.c	FUNCTION_6	IF_2	IF_9	CALL_3
0x4004319	        0x89442410	             mov dword [rsp + 0x10], eax	      1439	normal.c	FUNCTION_6	IF_2	IF_9	CALL_3
0x400431d	          0x8b730c	              mov esi, dword [rbx + 0xc]	      1439	normal.c	FUNCTION_6	IF_2	IF_9	CALL_3
0x4004320	        0x89742418	             mov dword [rsp + 0x18], esi	      1439	normal.c	FUNCTION_6	IF_2	IF_9	CALL_3
0x4004324	      0xe800000000	                          call 0x4004329	      1439	normal.c	FUNCTION_6	IF_2	IF_9	CALL_3
0x4004329	        0x8944241c	             mov dword [rsp + 0x1c], eax	      1439	normal.c	FUNCTION_6	IF_2	IF_9	CALL_3
0x400432d	            0x8b3b	                    mov edi, dword [rbx]	      1439	normal.c	FUNCTION_6	IF_2	IF_9	CALL_3
0x400432f	      0xe800000000	                          call 0x4004334	      1439	normal.c	FUNCTION_6	IF_2	IF_9	CALL_3
0x4004334	        0x488b7528	            mov rsi, qword [rbp + 0x28] 	      1439	normal.c	FUNCTION_6	IF_2	IF_9	CALL_3
0x4004338	          0x8b7b04	                mov edi, dword [rbx + 4]	      1439	normal.c	FUNCTION_6	IF_2	IF_9	CALL_3
0x400433b	        0x4883ec08	                              sub rsp, 8	      1439	normal.c	FUNCTION_6	IF_2	IF_9	CALL_3
0x400433f	        0x8b542418	            mov edx, dword [rsp + 0x18] 	      1439	normal.c	FUNCTION_6	IF_2	IF_9	CALL_3
0x4004343	              0x52	                                push rdx	      1439	normal.c	FUNCTION_6	IF_2	IF_9	CALL_3
0x4004344	          0x4589f9	                           mov r9d, r15d	      1439	normal.c	FUNCTION_6	IF_2	IF_9	CALL_3
0x4004347	      0x448b442428	            mov r8d, dword [rsp + 0x28] 	      1439	normal.c	FUNCTION_6	IF_2	IF_9	CALL_3
0x400434c	        0x8b4c242c	            mov ecx, dword [rsp + 0x2c] 	      1439	normal.c	FUNCTION_6	IF_2	IF_9	CALL_3
0x4004350	            0x89c2	                            mov edx, eax	      1439	normal.c	FUNCTION_6	IF_2	IF_9	CALL_3
0x4004352	      0xe8dac0ffff	                      call sym.prep_redo	      1439	normal.c	FUNCTION_6	IF_2	IF_9	CALL_3
0x4004357	          0x8b450c	              mov eax, dword [rbp + 0xc]	      1442	normal.c	FUNCTION_6	IF_2	IF_9	IF_10
0x400435a	            0x89c2	                            mov edx, eax	      1442	normal.c	FUNCTION_6	IF_2	IF_9	IF_10
0x400435c	          0x83e2ef	                     and edx, 0xffffffef	      1442	normal.c	FUNCTION_6	IF_2	IF_9	IF_10
0x400435f	        0x4883c410	                           add rsp, 0x10	      1442	normal.c	FUNCTION_6	IF_2	IF_9	IF_10
0x4004363	          0x83fa2f	                           cmp edx, 0x2f	      1442	normal.c	FUNCTION_6	IF_2	IF_9	IF_10
0x4004366	            0x7530	                           jne 0x4004398	      1442	normal.c	FUNCTION_6	IF_2	IF_9	IF_10
0x4004368	      0xbe72000000	                           mov esi, 0x72	      1448	normal.c	FUNCTION_6	IF_2	IF_9	IF_10	IF_11	CALL_6
0x400436d	    0x488b3d000000	            mov rdi, qword [0x04004374] 	      1448	normal.c	FUNCTION_6	IF_2	IF_9	IF_10	IF_11	CALL_6
0x4004374	      0xe800000000	                          call 0x4004379	      1448	normal.c	FUNCTION_6	IF_2	IF_9	IF_10	IF_11	CALL_6
0x4004379	          0x4885c0	                           test rax, rax	      1448	normal.c	FUNCTION_6	IF_2	IF_9	IF_10	IF_11	CALL_6
0x400437c	            0x750e	                           jne 0x400438c	      1448	normal.c	FUNCTION_6	IF_2	IF_9	IF_10	IF_11	CALL_6
0x400437e	        0x488b7d40	            mov rdi, qword [rbp + 0x40] 	      1449	normal.c	FUNCTION_6	IF_2	IF_9	IF_10	CALL_7
0x4004382	      0xbeffffffff	                     mov esi, 0xffffffff	      1449	normal.c	FUNCTION_6	IF_2	IF_9	IF_10	CALL_7
0x4004387	      0xe800000000	                          call 0x400438c	      1449	normal.c	FUNCTION_6	IF_2	IF_9	IF_10	CALL_7
0x400438c	      0xbf00000000	                              mov edi, 0	      1450	normal.c	FUNCTION_6	IF_2	IF_9	IF_10	CALL_8
0x4004391	      0xe800000000	                          call 0x4004396	      1450	normal.c	FUNCTION_6	IF_2	IF_9	IF_10	CALL_8
0x4004396	            0xeb48	                           jmp 0x40043e0	      1450	normal.c	FUNCTION_6	IF_2	IF_9	IF_10	CALL_8
0x4004398	          0x83f83a	                           cmp eax, 0x3a	      1452	normal.c	FUNCTION_6	IF_2	IF_9	ELSE_4	IF_12
0x400439b	            0x7543	                           jne 0x40043e0	      1452	normal.c	FUNCTION_6	IF_2	IF_9	ELSE_4	IF_12
0x400439d	    0x488b3d000000	            mov rdi, qword [0x040043a4] 	      1457	normal.c	FUNCTION_6	IF_2	IF_9	ELSE_4	IF_12	IF_13
0x40043a4	          0x4885ff	                           test rdi, rdi	      1457	normal.c	FUNCTION_6	IF_2	IF_9	ELSE_4	IF_12	IF_13
0x40043a7	            0x7507	                           jne 0x40043b0	      1457	normal.c	FUNCTION_6	IF_2	IF_9	ELSE_4	IF_12	IF_13
0x40043a9	      0xe800000000	                          call 0x40043ae	      1458	normal.c	FUNCTION_6	IF_2	IF_9	ELSE_4	IF_12	CALL_9
0x40043ae	            0xeb30	                           jmp 0x40043e0	      1458	normal.c	FUNCTION_6	IF_2	IF_9	ELSE_4	IF_12	CALL_9
0x40043b0	      0xbeffffffff	                     mov esi, 0xffffffff	      1461	normal.c	FUNCTION_6	IF_2	IF_9	ELSE_4	IF_12	ELSE_5	CALL_10
0x40043b5	      0xe800000000	                          call 0x40043ba	      1461	normal.c	FUNCTION_6	IF_2	IF_9	ELSE_4	IF_12	ELSE_5	CALL_10
0x40043ba	      0xbf00000000	                              mov edi, 0	      1462	normal.c	FUNCTION_6	IF_2	IF_9	ELSE_4	IF_12	ELSE_5	CALL_11
0x40043bf	      0xe800000000	                          call 0x40043c4	      1462	normal.c	FUNCTION_6	IF_2	IF_9	ELSE_4	IF_12	ELSE_5	CALL_11
0x40043c4	    0x488b3d000000	            mov rdi, qword [0x040043cb] 	      1463	normal.c	FUNCTION_6	IF_2	IF_9	ELSE_4	IF_12	ELSE_5	CALL_12
0x40043cb	          0x4885ff	                           test rdi, rdi	      1463	normal.c	FUNCTION_6	IF_2	IF_9	ELSE_4	IF_12	ELSE_5	CALL_12
0x40043ce	            0x7410	                            je 0x40043e0	      1463	normal.c	FUNCTION_6	IF_2	IF_9	ELSE_4	IF_12	ELSE_5	CALL_12
0x40043d0	      0xe800000000	                          call 0x40043d5	      1463	normal.c	FUNCTION_6	IF_2	IF_9	ELSE_4	IF_12	ELSE_5	CALL_12
0x40043d5	    0x48c705000000	               mov qword [0x040043e0], 0	      1463	normal.c	FUNCTION_6	IF_2	IF_9	ELSE_4	IF_12	ELSE_5	CALL_12
0x40043e0	    0x833d00000000	               cmp dword [0x040043e7], 0	      1468	normal.c	FUNCTION_6	IF_2	IF_14
0x40043e7	     0xf84d9000000	                            je 0x40044c6	      1468	normal.c	FUNCTION_6	IF_2	IF_14
0x40043ed	    0x488b05000000	            mov rax, qword [0x040043f4] 	      1472	normal.c	FUNCTION_6	IF_2	IF_14
0x40043f4	        0x488b7038	            mov rsi, qword [rax + 0x38] 	      1472	normal.c	FUNCTION_6	IF_2	IF_14
0x40043f8	        0x488b7840	            mov rdi, qword [rax + 0x40] 	      1472	normal.c	FUNCTION_6	IF_2	IF_14
0x40043fc	        0x48897320	             mov qword [rbx + 0x20], rsi	      1472	normal.c	FUNCTION_6	IF_2	IF_14
0x4004400	        0x48897b28	             mov qword [rbx + 0x28], rdi	      1472	normal.c	FUNCTION_6	IF_2	IF_14
0x4004404	    0x488b35000000	            mov rsi, qword [0x0400440b] 	      1473	normal.c	FUNCTION_6	IF_2	IF_14
0x400440b	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      1473	normal.c	FUNCTION_6	IF_2	IF_14
0x400440f	      0x488d5416ff	                lea rdx, [rsi + rdx - 1]	      1473	normal.c	FUNCTION_6	IF_2	IF_14
0x4004414	        0x48895038	             mov qword [rax + 0x38], rdx	      1473	normal.c	FUNCTION_6	IF_2	IF_14
0x4004418	    0x488b0d000000	            mov rcx, qword [0x0400441f] 	      1474	normal.c	FUNCTION_6	IF_2	IF_14	IF_15
0x400441f	          0x488b09	                    mov rcx, qword [rcx]	      1474	normal.c	FUNCTION_6	IF_2	IF_14	IF_15
0x4004422	          0x4839ca	                            cmp rdx, rcx	      1474	normal.c	FUNCTION_6	IF_2	IF_14	IF_15
0x4004425	            0x7e04	                           jle 0x400442b	      1474	normal.c	FUNCTION_6	IF_2	IF_14	IF_15
0x4004427	        0x48894838	             mov qword [rax + 0x38], rcx	      1475	normal.c	FUNCTION_6	IF_2	IF_14	IF_15
0x400442b	    0x8b1500000000	            mov edx, dword [0x04004431] 	      1476	normal.c	FUNCTION_6	IF_2	IF_14
0x4004431	    0x891500000000	            mov dword [0x04004437], edx 	      1476	normal.c	FUNCTION_6	IF_2	IF_14
0x4004437	    0x8b0d00000000	            mov ecx, dword [0x0400443d] 	      1477	normal.c	FUNCTION_6	IF_2	IF_14	IF_16
0x400443d	          0x83fa76	                           cmp edx, 0x76	      1477	normal.c	FUNCTION_6	IF_2	IF_14	IF_16
0x4004440	            0x7408	                            je 0x400444a	      1477	normal.c	FUNCTION_6	IF_2	IF_14	IF_16
0x4004442	    0x81f9ffffff7f	                     cmp ecx, 0x7fffffff	      1477	normal.c	FUNCTION_6	IF_2	IF_14	IF_16
0x4004448	            0x7546	                           jne 0x4004490	      1477	normal.c	FUNCTION_6	IF_2	IF_14	IF_16
0x400444a	          0x83fa76	                           cmp edx, 0x76	      1479	normal.c	FUNCTION_6	IF_2	IF_14	IF_16	IF_17
0x400444d	            0x752b	                           jne 0x400447a	      1479	normal.c	FUNCTION_6	IF_2	IF_14	IF_16	IF_17
0x400444f	        0x4883fe01	                              cmp rsi, 1	      1481	normal.c	FUNCTION_6	IF_2	IF_14	IF_16	IF_17	IF_18
0x4004453	            0x7f20	                            jg 0x4004475	      1481	normal.c	FUNCTION_6	IF_2	IF_14	IF_16	IF_17	IF_18
0x4004455	      0xe800000000	                          call 0x400445a	      1483	normal.c	FUNCTION_6	IF_2	IF_14	IF_16	IF_17	IF_18	CALL_13
0x400445a	    0x488b15000000	            mov rdx, qword [0x04004461] 	      1485	normal.c	FUNCTION_6	IF_2	IF_14	IF_16	IF_17	IF_18
0x4004461	    0x8b0500000000	            mov eax, dword [0x04004467] 	      1484	normal.c	FUNCTION_6	IF_2	IF_14	IF_16	IF_17	IF_18
0x4004467	     0x382d8000000	             add eax, dword [rdx + 0xd8]	      1484	normal.c	FUNCTION_6	IF_2	IF_14	IF_16	IF_17	IF_18
0x400446d	          0x83e801	                              sub eax, 1	      1484	normal.c	FUNCTION_6	IF_2	IF_14	IF_16	IF_17	IF_18
0x4004470	          0x894248	             mov dword [rdx + 0x48], eax	      1484	normal.c	FUNCTION_6	IF_2	IF_14	IF_16	IF_17	IF_18
0x4004473	            0xeb0c	                           jmp 0x4004481	      1484	normal.c	FUNCTION_6	IF_2	IF_14	IF_16	IF_17	IF_18
0x4004475	          0x894848	             mov dword [rax + 0x48], ecx	      1488	normal.c	FUNCTION_6	IF_2	IF_14	IF_16	IF_17	ELSE_6
0x4004478	            0xeb07	                           jmp 0x4004481	      1488	normal.c	FUNCTION_6	IF_2	IF_14	IF_16	IF_17	ELSE_6
0x400447a	    0xc74048ffffff	     mov dword [rax + 0x48], 0x7fffffff 	      1492	normal.c	FUNCTION_6	IF_2	IF_14	IF_16	ELSE_7
0x4004481	    0x488b05000000	            mov rax, qword [0x04004488] 	      1494	normal.c	FUNCTION_6	IF_2	IF_14	IF_16	CALL_14
0x4004488	          0x8b7848	            mov edi, dword [rax + 0x48] 	      1494	normal.c	FUNCTION_6	IF_2	IF_14	IF_16	CALL_14
0x400448b	      0xe800000000	                          call 0x4004490	      1494	normal.c	FUNCTION_6	IF_2	IF_14	IF_16	CALL_14
0x4004490	    0x488b05000000	            mov rax, qword [0x04004497] 	      1496	normal.c	FUNCTION_6	IF_2	IF_14
0x4004497	        0x48894528	            mov qword [rbp + 0x28], rax 	      1496	normal.c	FUNCTION_6	IF_2	IF_14
0x400449b	          0x4885c0	                           test rax, rax	      1497	normal.c	FUNCTION_6	IF_2	IF_14	IF_19
0x400449e	            0x7411	                            je 0x40044b1	      1497	normal.c	FUNCTION_6	IF_2	IF_14	IF_19
0x40044a0	        0x48894530	            mov qword [rbp + 0x30], rax 	      1498	normal.c	FUNCTION_6	IF_2	IF_14	IF_19
0x40044a4	    0xc74424100000	               mov dword [rsp + 0x10], 0	      1364	normal.c	FUNCTION_6
0x40044ac	      0xe9d4010000	                           jmp 0x4004685	      1364	normal.c	FUNCTION_6
0x40044b1	    0x48c745300100	               mov qword [rbp + 0x30], 1	      1500	normal.c	FUNCTION_6	IF_2	IF_14	ELSE_8
0x40044b9	    0xc74424100000	               mov dword [rsp + 0x10], 0	      1364	normal.c	FUNCTION_6
0x40044c1	      0xe9bf010000	                           jmp 0x4004685	      1364	normal.c	FUNCTION_6
0x40044c6	    0xc74424100000	               mov dword [rsp + 0x10], 0	      1364	normal.c	FUNCTION_6
0x40044ce	    0x833d00000000	               cmp dword [0x040044d5], 0	      1502	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20
0x40044d5	     0xf84aa010000	                            je 0x4004685	      1502	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20
0x40044db	          0x4585e4	                         test r12d, r12d	      1504	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_21
0x40044de	            0x7575	                           jne 0x4004555	      1504	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_21
0x40044e0	    0x488b05000000	            mov rax, qword [0x040044e7] 	      1507	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_21
0x40044e7	    0x488b35000000	            mov rsi, qword [0x040044ee] 	      1507	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_21
0x40044ee	    0x488b3d000000	            mov rdi, qword [0x040044f5] 	      1507	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_21
0x40044f5	    0x4889b0f80200	            mov qword [rax + 0x2f8], rsi	      1507	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_21
0x40044fc	    0x4889b8000300	            mov qword [rax + 0x300], rdi	      1507	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_21
0x4004503	    0x488b0d000000	            mov rcx, qword [0x0400450a] 	      1508	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_21
0x400450a	        0x488b7138	            mov rsi, qword [rcx + 0x38] 	      1508	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_21
0x400450e	        0x488b7940	            mov rdi, qword [rcx + 0x40] 	      1508	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_21
0x4004512	    0x4889b0080300	            mov qword [rax + 0x308], rsi	      1508	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_21
0x4004519	    0x4889b8100300	            mov qword [rax + 0x310], rdi	      1508	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_21
0x4004520	    0x8b1500000000	            mov edx, dword [0x04004526] 	      1509	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_21
0x4004526	    0x899018030000	            mov dword [rax + 0x318], edx	      1509	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_21
0x400452c	    0x8b3500000000	            mov esi, dword [0x04004532] 	      1510	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_21	IF_22
0x4004532	            0x85f6	                           test esi, esi	      1510	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_21	IF_22
0x4004534	            0x7410	                            je 0x4004546	      1510	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_21	IF_22
0x4004536	    0x89b018030000	            mov dword [rax + 0x318], esi	      1512	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_21	IF_22
0x400453c	    0xc70500000000	               mov dword [0x04004546], 0	      1513	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_21	IF_22
0x4004546	          0x8b4948	            mov ecx, dword [rcx + 0x48] 	      1515	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_21
0x4004549	    0x89881c030000	            mov dword [rax + 0x31c], ecx	      1515	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_21
0x400454f	    0x899020030000	            mov dword [rax + 0x320], edx	      1517	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_21
0x4004555	    0x833d00000000	               cmp dword [0x0400455c], 0	      1524	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23
0x400455c	     0xf84dc000000	                            je 0x400463e	      1524	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23
0x4004562	    0x833d00000000	           cmp dword [0x04004569], 0x56 	      1524	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23
0x4004569	     0xf85cf000000	                           jne 0x400463e	      1524	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23
0x400456f	        0x488b4500	                    mov rax, qword [rbp]	      1525	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23
0x4004573	    0xc74424100000	               mov dword [rsp + 0x10], 0	      1364	normal.c	FUNCTION_6
0x400457b	          0x833801	                      cmp dword [rax], 1	      1525	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23
0x400457e	     0xf84d4000000	                            je 0x4004658	      1525	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23
0x4004584	    0x488b05000000	            mov rax, qword [0x0400458b] 	      1527	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_15
0x400458b	    0x4c8b3d000000	            mov r15, qword [0x04004592] 	      1527	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_15
0x4004592	        0x498b7f38	            mov rdi, qword [r15 + 0x38] 	      1527	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_15
0x4004596	          0x4839f8	                            cmp rax, rdi	      1527	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_15
0x4004599	            0x7408	                            je 0x40045a3	      1527	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_15
0x400459b	          0x4839f8	                            cmp rax, rdi	      1527	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_15
0x400459e	           0xf9cc2	                                 setl dl	      1527	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_15
0x40045a1	            0xeb22	                           jmp 0x40045c5	      1527	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_15
0x40045a3	    0x8b0d00000000	            mov ecx, dword [0x040045a9] 	      1527	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_15
0x40045a9	        0x418b5740	            mov edx, dword [r15 + 0x40] 	      1527	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_15
0x40045ad	            0x39d1	                            cmp ecx, edx	      1527	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_15
0x40045af	            0x7407	                            je 0x40045b8	      1527	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_15
0x40045b1	            0x39d1	                            cmp ecx, edx	      1527	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_15
0x40045b3	           0xf9cc2	                                 setl dl	      1527	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_15
0x40045b6	            0xeb0d	                           jmp 0x40045c5	      1527	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_15
0x40045b8	        0x418b4f44	            mov ecx, dword [r15 + 0x44] 	      1527	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_15
0x40045bc	    0x390d00000000	            cmp dword [0x040045c2], ecx 	      1527	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_15
0x40045c2	           0xf9cc2	                                 setl dl	      1527	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_15
0x40045c5	            0x84d2	                             test dl, dl	      1527	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_15
0x40045c7	            0x7430	                            je 0x40045f9	      1527	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_15
0x40045c9	    0xc70500000000	               mov dword [0x040045d3], 0	      1529	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24
0x40045d3	      0xe800000000	                          call 0x40045d8	      1531	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_17
0x40045d8	          0x4889c7	                            mov rdi, rax	      1531	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_17
0x40045db	      0xb800000000	                              mov eax, 0	      1531	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_17
0x40045e0	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1531	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_17
0x40045e7	            0xf2ae	              repne scasb al, byte [rdi]	      1531	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_17
0x40045e9	          0x4889c8	                            mov rax, rcx	      1531	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_17
0x40045ec	          0x48f7d0	                                 not rax	      1531	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_17
0x40045ef	        0x4883e801	                              sub rax, 1	      1531	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_17
0x40045f3	        0x41894740	             mov dword [r15 + 0x40], eax	      1530	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24
0x40045f7	            0xeb31	                           jmp 0x400462a	      1530	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24
0x40045f9	    0x41c747400000	               mov dword [r15 + 0x40], 0	      1535	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	ELSE_10
0x4004601	          0x4889c7	                            mov rdi, rax	      1536	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	ELSE_10	CALL_19
0x4004604	      0xe800000000	                          call 0x4004609	      1536	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	ELSE_10	CALL_19
0x4004609	          0x4889c7	                            mov rdi, rax	      1536	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	ELSE_10	CALL_19
0x400460c	      0xb800000000	                              mov eax, 0	      1536	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	ELSE_10	CALL_19
0x4004611	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1536	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	ELSE_10	CALL_19
0x4004618	            0xf2ae	              repne scasb al, byte [rdi]	      1536	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	ELSE_10	CALL_19
0x400461a	          0x4889c8	                            mov rax, rcx	      1536	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	ELSE_10	CALL_19
0x400461d	          0x48f7d0	                                 not rax	      1536	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	ELSE_10	CALL_19
0x4004620	        0x4883e801	                              sub rax, 1	      1536	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	ELSE_10	CALL_19
0x4004624	    0x890500000000	            mov dword [0x0400462a], eax 	      1536	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	ELSE_10	CALL_19
0x400462a	    0xc70500000000	           mov dword [0x04004634], 0x76 	      1538	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23
0x4004634	    0xc74424100000	               mov dword [rsp + 0x10], 0	      1364	normal.c	FUNCTION_6
0x400463c	            0xeb1a	                           jmp 0x4004658	      1538	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23
0x400463e	    0xc74424100000	               mov dword [rsp + 0x10], 0	      1364	normal.c	FUNCTION_6
0x4004646	    0x833d00000000	           cmp dword [0x0400464d], 0x76 	      1542	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	ELSE_11	IF_25
0x400464d	            0x7509	                           jne 0x4004658	      1542	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	ELSE_11	IF_25
0x400464f	      0xe8bce1ffff	               call sym.unadjust_for_sel	      1545	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	ELSE_11	IF_25
0x4004654	        0x89442410	             mov dword [rsp + 0x10], eax	      1545	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	ELSE_11	IF_25
0x4004658	    0x488b05000000	            mov rax, qword [0x0400465f] 	      1550	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20
0x400465f	    0x488b15000000	            mov rdx, qword [0x04004666] 	      1550	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20
0x4004666	        0x48894320	             mov qword [rbx + 0x20], rax	      1550	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20
0x400466a	        0x48895328	             mov qword [rbx + 0x28], rdx	      1550	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20
0x400466e	    0x833d00000000	           cmp dword [0x04004675], 0x56 	      1551	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_26
0x4004675	            0x750e	                           jne 0x4004685	      1551	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_26
0x4004677	    0xc74328000000	               mov dword [rbx + 0x28], 0	      1553	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_26
0x400467e	    0xc7432c000000	               mov dword [rbx + 0x2c], 0	      1555	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_26
0x4004685	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      1564	normal.c	FUNCTION_6	IF_2	IF_27	CALL_21
0x4004689	    0x488b35000000	            mov rsi, qword [0x04004690] 	      1564	normal.c	FUNCTION_6	IF_2	IF_27	CALL_21
0x4004690	        0x488b4638	            mov rax, qword [rsi + 0x38] 	      1564	normal.c	FUNCTION_6	IF_2	IF_27	CALL_21
0x4004694	          0x4839c7	                            cmp rdi, rax	      1564	normal.c	FUNCTION_6	IF_2	IF_27	CALL_21
0x4004697	            0x7408	                            je 0x40046a1	      1564	normal.c	FUNCTION_6	IF_2	IF_27	CALL_21
0x4004699	          0x4839c7	                            cmp rdi, rax	      1564	normal.c	FUNCTION_6	IF_2	IF_27	CALL_21
0x400469c	           0xf9cc2	                                 setl dl	      1564	normal.c	FUNCTION_6	IF_2	IF_27	CALL_21
0x400469f	            0xeb1a	                           jmp 0x40046bb	      1564	normal.c	FUNCTION_6	IF_2	IF_27	CALL_21
0x40046a1	          0x8b4b28	            mov ecx, dword [rbx + 0x28] 	      1564	normal.c	FUNCTION_6	IF_2	IF_27	CALL_21
0x40046a4	          0x8b5640	            mov edx, dword [rsi + 0x40] 	      1564	normal.c	FUNCTION_6	IF_2	IF_27	CALL_21
0x40046a7	            0x39d1	                            cmp ecx, edx	      1564	normal.c	FUNCTION_6	IF_2	IF_27	CALL_21
0x40046a9	            0x7407	                            je 0x40046b2	      1564	normal.c	FUNCTION_6	IF_2	IF_27	CALL_21
0x40046ab	            0x39d1	                            cmp ecx, edx	      1564	normal.c	FUNCTION_6	IF_2	IF_27	CALL_21
0x40046ad	           0xf9cc2	                                 setl dl	      1564	normal.c	FUNCTION_6	IF_2	IF_27	CALL_21
0x40046b0	            0xeb09	                           jmp 0x40046bb	      1564	normal.c	FUNCTION_6	IF_2	IF_27	CALL_21
0x40046b2	          0x8b4e44	            mov ecx, dword [rsi + 0x44] 	      1564	normal.c	FUNCTION_6	IF_2	IF_27	CALL_21
0x40046b5	          0x394b2c	            cmp dword [rbx + 0x2c], ecx 	      1564	normal.c	FUNCTION_6	IF_2	IF_27	CALL_21
0x40046b8	           0xf9cc2	                                 setl dl	      1564	normal.c	FUNCTION_6	IF_2	IF_27	CALL_21
0x40046bb	            0x84d2	                             test dl, dl	      1564	normal.c	FUNCTION_6	IF_2	IF_27	CALL_21
0x40046bd	     0xf849d000000	                            je 0x4004760	      1564	normal.c	FUNCTION_6	IF_2	IF_27	CALL_21
0x40046c3	    0x833d00000000	               cmp dword [0x040046ca], 0	      1568	normal.c	FUNCTION_6	IF_2	IF_27	IF_28
0x40046ca	            0x7561	                           jne 0x400472d	      1568	normal.c	FUNCTION_6	IF_2	IF_27	IF_28
0x40046cc	        0x488d7320	                   lea rsi, [rbx + 0x20]	      1570	normal.c	FUNCTION_6	IF_2	IF_27	IF_28	IF_29	CALL_22
0x40046d0	      0xba00000000	                              mov edx, 0	      1570	normal.c	FUNCTION_6	IF_2	IF_27	IF_28	IF_29	CALL_22
0x40046d5	      0xe800000000	                          call 0x40046da	      1570	normal.c	FUNCTION_6	IF_2	IF_27	IF_28	IF_29	CALL_22
0x40046da	            0x85c0	                           test eax, eax	      1570	normal.c	FUNCTION_6	IF_2	IF_27	IF_28	IF_29	CALL_22
0x40046dc	            0x7407	                            je 0x40046e5	      1570	normal.c	FUNCTION_6	IF_2	IF_27	IF_28	IF_29	CALL_22
0x40046de	    0xc74328000000	               mov dword [rbx + 0x28], 0	      1571	normal.c	FUNCTION_6	IF_2	IF_27	IF_28	IF_29
0x40046e5	    0x488b05000000	            mov rax, qword [0x040046ec] 	      1573	normal.c	FUNCTION_6	IF_2	IF_27	IF_28	IF_30
0x40046ec	        0x488d5038	                   lea rdx, [rax + 0x38]	      1572	normal.c	FUNCTION_6	IF_2	IF_27	IF_28	IF_30	CALL_23
0x40046f0	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      1572	normal.c	FUNCTION_6	IF_2	IF_27	IF_28	IF_30	CALL_23
0x40046f4	      0xbe00000000	                              mov esi, 0	      1572	normal.c	FUNCTION_6	IF_2	IF_27	IF_28	IF_30	CALL_23
0x40046f9	      0xe800000000	                          call 0x40046fe	      1572	normal.c	FUNCTION_6	IF_2	IF_27	IF_28	IF_30	CALL_23
0x40046fe	            0x85c0	                           test eax, eax	      1572	normal.c	FUNCTION_6	IF_2	IF_27	IF_28	IF_30	CALL_23
0x4004700	            0x742b	                            je 0x400472d	      1572	normal.c	FUNCTION_6	IF_2	IF_27	IF_28	IF_30	CALL_23
0x4004702	    0x4c8b3d000000	            mov r15, qword [0x04004709] 	      1574	normal.c	FUNCTION_6	IF_2	IF_27	IF_28	CALL_25
0x4004709	      0xe800000000	                          call 0x400470e	      1574	normal.c	FUNCTION_6	IF_2	IF_27	IF_28	CALL_25
0x400470e	          0x4889c7	                            mov rdi, rax	      1574	normal.c	FUNCTION_6	IF_2	IF_27	IF_28	CALL_25
0x4004711	      0xb800000000	                              mov eax, 0	      1574	normal.c	FUNCTION_6	IF_2	IF_27	IF_28	CALL_25
0x4004716	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1574	normal.c	FUNCTION_6	IF_2	IF_27	IF_28	CALL_25
0x400471d	            0xf2ae	              repne scasb al, byte [rdi]	      1574	normal.c	FUNCTION_6	IF_2	IF_27	IF_28	CALL_25
0x400471f	          0x4889c8	                            mov rax, rcx	      1574	normal.c	FUNCTION_6	IF_2	IF_27	IF_28	CALL_25
0x4004722	          0x48f7d0	                                 not rax	      1574	normal.c	FUNCTION_6	IF_2	IF_27	IF_28	CALL_25
0x4004725	        0x4883e801	                              sub rax, 1	      1574	normal.c	FUNCTION_6	IF_2	IF_27	IF_28	CALL_25
0x4004729	        0x41894740	             mov dword [r15 + 0x40], eax	      1574	normal.c	FUNCTION_6	IF_2	IF_27	IF_28	CALL_25
0x400472d	    0x488b05000000	            mov rax, qword [0x04004734] 	      1577	normal.c	FUNCTION_6	IF_2	IF_27
0x4004734	        0x488b7038	            mov rsi, qword [rax + 0x38] 	      1577	normal.c	FUNCTION_6	IF_2	IF_27
0x4004738	        0x488b7840	            mov rdi, qword [rax + 0x40] 	      1577	normal.c	FUNCTION_6	IF_2	IF_27
0x400473c	        0x48897330	             mov qword [rbx + 0x30], rsi	      1577	normal.c	FUNCTION_6	IF_2	IF_27
0x4004740	        0x48897b38	             mov qword [rbx + 0x38], rdi	      1577	normal.c	FUNCTION_6	IF_2	IF_27
0x4004744	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	      1578	normal.c	FUNCTION_6	IF_2	IF_27
0x4004748	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	      1578	normal.c	FUNCTION_6	IF_2	IF_27
0x400474c	        0x48897038	             mov qword [rax + 0x38], rsi	      1578	normal.c	FUNCTION_6	IF_2	IF_27
0x4004750	        0x48897840	             mov qword [rax + 0x40], rdi	      1578	normal.c	FUNCTION_6	IF_2	IF_27
0x4004754	    0x83a0b4000000	      and dword [rax + 0xb4], 0xfffffffb	      1583	normal.c	FUNCTION_6	IF_2	IF_27
0x400475b	      0xe996000000	                           jmp 0x40047f6	      1583	normal.c	FUNCTION_6	IF_2	IF_27
0x4004760	    0x833d00000000	               cmp dword [0x04004767], 0	      1589	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31
0x4004767	            0x7566	                           jne 0x40047cf	      1589	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31
0x4004769	        0x837b0801	                  cmp dword [rbx + 8], 1	      1589	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31
0x400476d	            0x7560	                           jne 0x40047cf	      1589	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31
0x400476f	        0x4883c638	                           add rsi, 0x38	      1591	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31	IF_32	CALL_26
0x4004773	      0xba00000000	                              mov edx, 0	      1591	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31	IF_32	CALL_26
0x4004778	          0x4889c7	                            mov rdi, rax	      1591	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31	IF_32	CALL_26
0x400477b	      0xe800000000	                          call 0x4004780	      1591	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31	IF_32	CALL_26
0x4004780	            0x85c0	                           test eax, eax	      1591	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31	IF_32	CALL_26
0x4004782	            0x740e	                            je 0x4004792	      1591	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31	IF_32	CALL_26
0x4004784	    0x488b05000000	            mov rax, qword [0x0400478b] 	      1593	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31	IF_32
0x400478b	    0xc74040000000	               mov dword [rax + 0x40], 0	      1593	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31	IF_32
0x4004792	        0x488d5320	                   lea rdx, [rbx + 0x20]	      1594	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31	IF_33	CALL_27
0x4004796	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      1594	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31	IF_33	CALL_27
0x400479a	      0xbe00000000	                              mov esi, 0	      1594	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31	IF_33	CALL_27
0x400479f	      0xe800000000	                          call 0x40047a4	      1594	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31	IF_33	CALL_27
0x40047a4	            0x85c0	                           test eax, eax	      1594	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31	IF_33	CALL_27
0x40047a6	            0x7427	                            je 0x40047cf	      1594	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31	IF_33	CALL_27
0x40047a8	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      1595	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31	CALL_29
0x40047ac	      0xe800000000	                          call 0x40047b1	      1595	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31	CALL_29
0x40047b1	          0x4889c7	                            mov rdi, rax	      1595	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31	CALL_29
0x40047b4	      0xb800000000	                              mov eax, 0	      1595	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31	CALL_29
0x40047b9	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1595	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31	CALL_29
0x40047c0	            0xf2ae	              repne scasb al, byte [rdi]	      1595	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31	CALL_29
0x40047c2	          0x4889c8	                            mov rax, rcx	      1595	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31	CALL_29
0x40047c5	          0x48f7d0	                                 not rax	      1595	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31	CALL_29
0x40047c8	        0x4883e801	                              sub rax, 1	      1595	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31	CALL_29
0x40047cc	          0x894328	             mov dword [rbx + 0x28], eax	      1595	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31	CALL_29
0x40047cf	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      1598	normal.c	FUNCTION_6	IF_2	ELSE_12
0x40047d3	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	      1598	normal.c	FUNCTION_6	IF_2	ELSE_12
0x40047d7	        0x48894330	             mov qword [rbx + 0x30], rax	      1598	normal.c	FUNCTION_6	IF_2	ELSE_12
0x40047db	        0x48895338	             mov qword [rbx + 0x38], rdx	      1598	normal.c	FUNCTION_6	IF_2	ELSE_12
0x40047df	    0x488b05000000	            mov rax, qword [0x040047e6] 	      1599	normal.c	FUNCTION_6	IF_2	ELSE_12
0x40047e6	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      1599	normal.c	FUNCTION_6	IF_2	ELSE_12
0x40047ea	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1599	normal.c	FUNCTION_6	IF_2	ELSE_12
0x40047ee	        0x48894320	             mov qword [rbx + 0x20], rax	      1599	normal.c	FUNCTION_6	IF_2	ELSE_12
0x40047f2	        0x48895328	             mov qword [rbx + 0x28], rdx	      1599	normal.c	FUNCTION_6	IF_2	ELSE_12
0x40047f6	        0x4c8d7b30	                   lea r15, [rbx + 0x30]	      1603	normal.c	FUNCTION_6	IF_2	CALL_30
0x40047fa	    0x488b05000000	            mov rax, qword [0x04004801] 	      1603	normal.c	FUNCTION_6	IF_2	CALL_30
0x4004801	        0x488b7808	                mov rdi, qword [rax + 8]	      1603	normal.c	FUNCTION_6	IF_2	CALL_30
0x4004805	          0x4c89fe	                            mov rsi, r15	      1603	normal.c	FUNCTION_6	IF_2	CALL_30
0x4004808	      0xe800000000	                          call 0x400480d	      1603	normal.c	FUNCTION_6	IF_2	CALL_30
0x400480d	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      1604	normal.c	FUNCTION_6	IF_2
0x4004811	        0x482b4320	             sub rax, qword [rbx + 0x20]	      1604	normal.c	FUNCTION_6	IF_2
0x4004815	        0x4883c001	                              add rax, 1	      1604	normal.c	FUNCTION_6	IF_2
0x4004819	        0x48894350	             mov qword [rbx + 0x50], rax	      1604	normal.c	FUNCTION_6	IF_2
0x400481d	      0xe800000000	                          call 0x4004822	      1608	normal.c	FUNCTION_6	IF_2	CALL_31
0x4004822	    0x890500000000	            mov dword [0x04004828], eax 	      1608	normal.c	FUNCTION_6	IF_2	CALL_31
0x4004828	    0x833d00000000	               cmp dword [0x0400482f], 0	      1611	normal.c	FUNCTION_6	IF_2	IF_34
0x400482f	            0x750d	                           jne 0x400483e	      1611	normal.c	FUNCTION_6	IF_2	IF_34
0x4004831	    0x833d00000000	               cmp dword [0x04004838], 0	      1611	normal.c	FUNCTION_6	IF_2	IF_34
0x4004838	     0xf8412030000	                            je 0x4004b50	      1611	normal.c	FUNCTION_6	IF_2	IF_34
0x400483e	      0xba01000000	                              mov edx, 1	      1613	normal.c	FUNCTION_6	IF_2	IF_34	CALL_32
0x4004843	    0x8b3500000000	            mov esi, dword [0x04004849] 	      1613	normal.c	FUNCTION_6	IF_2	IF_34	CALL_32
0x4004849	          0x4889df	                            mov rdi, rbx	      1613	normal.c	FUNCTION_6	IF_2	IF_34	CALL_32
0x400484c	      0xe8afe0ffff	                    call sym.get_op_vcol	      1613	normal.c	FUNCTION_6	IF_2	IF_34	CALL_32
0x4004851	          0x4489e0	                           mov eax, r12d	      1615	normal.c	FUNCTION_6	IF_2	IF_34	IF_35
0x4004854	     0xb0500000000	              or eax, dword [0x0400485a]	      1615	normal.c	FUNCTION_6	IF_2	IF_34	IF_35
0x400485a	     0xf8597000000	                           jne 0x40048f7	      1615	normal.c	FUNCTION_6	IF_2	IF_34	IF_35
0x4004860	    0x8b0500000000	            mov eax, dword [0x04004866] 	      1621	normal.c	FUNCTION_6	IF_2	IF_34	IF_35
0x4004866	    0x890500000000	            mov dword [0x0400486c], eax 	      1621	normal.c	FUNCTION_6	IF_2	IF_34	IF_35
0x400486c	    0x488b3d000000	            mov rdi, qword [0x04004873] 	      1622	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	IF_36
0x4004873	    0x817f48ffffff	     cmp dword [rdi + 0x48], 0x7fffffff 	      1622	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	IF_36
0x400487a	            0x750c	                           jne 0x4004888	      1622	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	IF_36
0x400487c	    0xc70500000000	     mov dword [0x04004886], 0x7fffffff 	      1623	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	IF_36
0x4004886	            0xeb64	                           jmp 0x40048ec	      1623	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	IF_36
0x4004888	          0x83f816	                           cmp eax, 0x16	      1626	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_37
0x400488b	            0x7445	                            je 0x40048d2	      1626	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_37
0x400488d	        0x4c8d4368	                    lea r8, [rbx + 0x68]	      1627	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_37	CALL_33
0x4004891	      0xb900000000	                              mov ecx, 0	      1627	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_37	CALL_33
0x4004896	      0xba00000000	                              mov edx, 0	      1627	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_37	CALL_33
0x400489b	          0x4c89fe	                            mov rsi, r15	      1627	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_37	CALL_33
0x400489e	      0xe800000000	                          call 0x40048a3	      1627	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_37	CALL_33
0x40048a3	    0x833d00000000	           cmp dword [0x040048aa], 0x16 	      1629	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_38
0x40048aa	            0x7426	                            je 0x40048d2	      1629	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_38
0x40048ac	      0x48837b5001	               cmp qword [rbx + 0x50], 1	      1629	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_38
0x40048b1	            0x7f30	                            jg 0x40048e3	      1629	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_38
0x40048b3	        0x488d5364	                   lea rdx, [rbx + 0x64]	      1632	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_38	IF_39	CALL_34
0x40048b7	        0x488d7320	                   lea rsi, [rbx + 0x20]	      1632	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_38	IF_39	CALL_34
0x40048bb	    0x41b800000000	                              mov r8d, 0	      1632	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_38	IF_39	CALL_34
0x40048c1	      0xb900000000	                              mov ecx, 0	      1632	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_38	IF_39	CALL_34
0x40048c6	    0x488b3d000000	            mov rdi, qword [0x040048cd] 	      1632	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_38	IF_39	CALL_34
0x40048cd	      0xe800000000	                          call 0x40048d2	      1632	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_38	IF_39	CALL_34
0x40048d2	          0x8b4368	            mov eax, dword [rbx + 0x68] 	      1634	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_38
0x40048d5	          0x2b4364	             sub eax, dword [rbx + 0x64]	      1634	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_38
0x40048d8	          0x83c001	                              add eax, 1	      1634	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_38
0x40048db	    0x890500000000	            mov dword [0x040048e1], eax 	      1634	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_38
0x40048e1	            0xeb09	                           jmp 0x40048ec	      1634	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_38
0x40048e3	          0x8b4368	            mov eax, dword [rbx + 0x68] 	      1637	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	ELSE_14
0x40048e6	    0x890500000000	            mov dword [0x040048ec], eax 	      1637	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	ELSE_14
0x40048ec	        0x488b4350	            mov rax, qword [rbx + 0x50] 	      1639	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_14
0x40048f0	    0x488905000000	            mov qword [0x040048f7], rax 	      1639	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_14
0x40048f7	      0xbe79000000	                           mov esi, 0x79	      1643	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	CALL_35
0x40048fc	    0x488b3d000000	            mov rdi, qword [0x04004903] 	      1643	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	CALL_35
0x4004903	      0xe800000000	                          call 0x4004908	      1643	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	CALL_35
0x4004908	          0x4885c0	                           test rax, rax	      1643	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	CALL_35
0x400490b	            0x7509	                           jne 0x4004916	      1643	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	CALL_35
0x400490d	          0x833b02	                      cmp dword [rbx], 2	      1643	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	CALL_35
0x4004910	     0xf842f010000	                            je 0x4004a45	      1643	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	CALL_35
0x4004916	            0x8b3b	                    mov edi, dword [rbx]	      1644	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40
0x4004918	          0x8d47ed	                   lea eax, [rdi - 0x13]	      1652	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40
0x400491b	          0x83f806	                              cmp eax, 6	      1652	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40
0x400491e	     0xf8621010000	                           jbe 0x4004a45	      1652	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40
0x4004924	          0x83ff0a	                            cmp edi, 0xa	      1652	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40
0x4004927	     0xf8418010000	                            je 0x4004a45	      1652	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40
0x400492d	        0x837b0c00	                cmp dword [rbx + 0xc], 0	      1654	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40
0x4004931	     0xf8514010000	                           jne 0x4004a4b	      1654	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40
0x4004937	          0x8b450c	              mov eax, dword [rbp + 0xc]	      1659	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41
0x400493a	          0x83f867	                           cmp eax, 0x67	      1659	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41
0x400493d	            0x754c	                           jne 0x400498b	      1659	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41
0x400493f	          0x8b4510	            mov eax, dword [rbp + 0x10] 	      1659	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41
0x4004942	        0x89442418	             mov dword [rsp + 0x18], eax	      1659	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41
0x4004946	          0x83e0df	                     and eax, 0xffffffdf	      1659	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41
0x4004949	          0x83f84e	                           cmp eax, 0x4e	      1659	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41
0x400494c	            0x7546	                           jne 0x4004994	      1659	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41
0x400494e	      0xe800000000	                          call 0x4004953	      1661	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41	CALL_36
0x4004953	        0x8944241c	             mov dword [rsp + 0x1c], eax	      1661	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41	CALL_36
0x4004957	            0x8b3b	                    mov edi, dword [rbx]	      1661	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41	CALL_36
0x4004959	      0xe800000000	                          call 0x400495e	      1661	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41	CALL_36
0x400495e	        0x488b7528	            mov rsi, qword [rbp + 0x28] 	      1661	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41	CALL_36
0x4004962	          0x8b7b04	                mov edi, dword [rbx + 4]	      1661	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41	CALL_36
0x4004965	        0x4883ec08	                              sub rsp, 8	      1661	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41	CALL_36
0x4004969	        0x8b542420	            mov edx, dword [rsp + 0x20] 	      1661	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41	CALL_36
0x400496d	              0x52	                                push rdx	      1661	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41	CALL_36
0x400496e	    0x41b967000000	                           mov r9d, 0x67	      1661	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41	CALL_36
0x4004974	    0x41b800000000	                              mov r8d, 0	      1661	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41	CALL_36
0x400497a	        0x8b4c242c	            mov ecx, dword [rsp + 0x2c] 	      1661	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41	CALL_36
0x400497e	            0x89c2	                            mov edx, eax	      1661	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41	CALL_36
0x4004980	      0xe8acbaffff	                      call sym.prep_redo	      1661	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41	CALL_36
0x4004985	        0x4883c410	                           add rsp, 0x10	      1661	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41	CALL_36
0x4004989	            0xeb77	                           jmp 0x4004a02	      1661	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41	CALL_36
0x400498b	          0x83f83a	                           cmp eax, 0x3a	      1664	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42
0x400498e	     0xf84650a0000	                            je 0x40053f9	      1664	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42
0x4004994	    0xc74424180000	               mov dword [rsp + 0x18], 0	      1666	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42
0x400499c	          0x83ff10	                           cmp edi, 0x10	      1666	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42
0x400499f	            0x7525	                           jne 0x40049c6	      1666	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42
0x40049a1	          0x8b4510	            mov eax, dword [rbp + 0x10] 	      1666	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42
0x40049a4	            0x89c1	                            mov ecx, eax	      1666	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42
0x40049a6	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1669	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42	IF_43
0x40049a9	            0x7413	                            je 0x40049be	      1669	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42	IF_43
0x40049ab	          0x83f8fe	             cmp eax, 0xfffffffffffffffe	      1672	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42	ELSE_16	IF_44
0x40049ae	      0xb80a000000	                            mov eax, 0xa	      1672	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42	ELSE_16	IF_44
0x40049b3	            0x89c2	                            mov edx, eax	      1672	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42	ELSE_16	IF_44
0x40049b5	           0xf45d1	                         cmovne edx, ecx	      1672	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42	ELSE_16	IF_44
0x40049b8	        0x89542418	             mov dword [rsp + 0x18], edx	      1672	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42	ELSE_16	IF_44
0x40049bc	            0xeb08	                           jmp 0x40049c6	      1672	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42	ELSE_16	IF_44
0x40049be	    0xc74424180d00	            mov dword [rsp + 0x18], 0xd 	      1670	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42	IF_43
0x40049c6	      0xe800000000	                          call 0x40049cb	      1673	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42	CALL_39
0x40049cb	        0x8944241c	             mov dword [rsp + 0x1c], eax	      1673	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42	CALL_39
0x40049cf	            0x8b3b	                    mov edi, dword [rbx]	      1673	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42	CALL_39
0x40049d1	      0xe800000000	                          call 0x40049d6	      1673	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42	CALL_39
0x40049d6	          0x4189c0	                            mov r8d, eax	      1673	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42	CALL_39
0x40049d9	          0x8b7b04	                mov edi, dword [rbx + 4]	      1673	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42	CALL_39
0x40049dc	        0x4883ec08	                              sub rsp, 8	      1673	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42	CALL_39
0x40049e0	        0x8b542420	            mov edx, dword [rsp + 0x20] 	      1673	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42	CALL_39
0x40049e4	              0x52	                                push rdx	      1673	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42	CALL_39
0x40049e5	      0x448b4c242c	            mov r9d, dword [rsp + 0x2c] 	      1673	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42	CALL_39
0x40049ea	      0xb976000000	                           mov ecx, 0x76	      1673	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42	CALL_39
0x40049ef	      0xba00000000	                              mov edx, 0	      1673	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42	CALL_39
0x40049f4	      0xbe00000000	                              mov esi, 0	      1673	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42	CALL_39
0x40049f9	      0xe833baffff	                      call sym.prep_redo	      1673	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42	CALL_39
0x40049fe	        0x4883c410	                           add rsp, 0x10	      1673	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42	CALL_39
0x4004a02	    0x833d00000000	               cmp dword [0x04004a09], 0	      1678	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_45
0x4004a09	            0x753a	                           jne 0x4004a45	      1678	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_45
0x4004a0b	    0x8b0500000000	            mov eax, dword [0x04004a11] 	      1680	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_45
0x4004a11	    0x890500000000	            mov dword [0x04004a17], eax 	      1680	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_45
0x4004a17	    0x8b0500000000	            mov eax, dword [0x04004a1d] 	      1681	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_45
0x4004a1d	    0x890500000000	            mov dword [0x04004a23], eax 	      1681	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_45
0x4004a23	    0x488b05000000	            mov rax, qword [0x04004a2a] 	      1682	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_45
0x4004a2a	    0x488905000000	            mov qword [0x04004a31], rax 	      1682	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_45
0x4004a31	        0x488b4528	            mov rax, qword [rbp + 0x28] 	      1683	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_45
0x4004a35	    0x488905000000	            mov qword [0x04004a3c], rax 	      1683	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_45
0x4004a3c	          0x8b4538	            mov eax, dword [rbp + 0x38] 	      1684	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_45
0x4004a3f	    0x890500000000	            mov dword [0x04004a45], eax 	      1684	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_45
0x4004a45	        0x837b0c00	                cmp dword [rbx + 0xc], 0	      1693	normal.c	FUNCTION_6	IF_2	IF_34	IF_46
0x4004a49	            0x7406	                            je 0x4004a51	      1693	normal.c	FUNCTION_6	IF_2	IF_34	IF_46
0x4004a4b	        0x837b0801	                  cmp dword [rbx + 8], 1	      1693	normal.c	FUNCTION_6	IF_2	IF_34	IF_46
0x4004a4f	            0x7507	                           jne 0x4004a58	      1693	normal.c	FUNCTION_6	IF_2	IF_34	IF_46
0x4004a51	    0xc74314010000	               mov dword [rbx + 0x14], 1	      1694	normal.c	FUNCTION_6	IF_2	IF_34	IF_46
0x4004a58	    0x8b0500000000	            mov eax, dword [0x04004a5e] 	      1695	normal.c	FUNCTION_6	IF_2	IF_34	IF_47
0x4004a5e	          0x83f856	                           cmp eax, 0x56	      1695	normal.c	FUNCTION_6	IF_2	IF_34	IF_47
0x4004a61	            0x7509	                           jne 0x4004a6c	      1695	normal.c	FUNCTION_6	IF_2	IF_34	IF_47
0x4004a63	    0xc74308010000	                  mov dword [rbx + 8], 1	      1696	normal.c	FUNCTION_6	IF_2	IF_34	IF_47
0x4004a6a	            0xeb72	                           jmp 0x4004ade	      1696	normal.c	FUNCTION_6	IF_2	IF_34	IF_47
0x4004a6c	    0xc74308000000	                  mov dword [rbx + 8], 0	      1699	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_17
0x4004a73	          0x83f816	                           cmp eax, 0x16	      1700	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_17	IF_48	CALL_42
0x4004a76	            0x7466	                            je 0x4004ade	      1700	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_17	IF_48	CALL_42
0x4004a78	          0x4c89ff	                            mov rdi, r15	      1700	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_17	IF_48	CALL_42
0x4004a7b	      0xe800000000	                          call 0x4004a80	      1700	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_17	IF_48	CALL_42
0x4004a80	          0x803800	                       cmp byte [rax], 0	      1700	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_17	IF_48	CALL_42
0x4004a83	            0x7559	                           jne 0x4004ade	      1700	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_17	IF_48	CALL_42
0x4004a85	      0x837c241000	               cmp dword [rsp + 0x10], 0	      1702	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_17	IF_48
0x4004a8a	            0x7509	                           jne 0x4004a95	      1702	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_17	IF_48
0x4004a8c	    0x833d00000000	               cmp dword [0x04004a93], 0	      1702	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_17	IF_48
0x4004a93	            0x7549	                           jne 0x4004ade	      1702	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_17	IF_48
0x4004a95	    0xc74314000000	               mov dword [rbx + 0x14], 0	      1706	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_17	IF_48
0x4004a9c	    0x488b05000000	            mov rax, qword [0x04004aa3] 	      1709	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_17	IF_48	IF_49
0x4004aa3	          0x80386f	                    cmp byte [rax], 0x6f	      1709	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_17	IF_48	IF_49
0x4004aa6	            0x7436	                            je 0x4004ade	      1709	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_17	IF_48	IF_49
0x4004aa8	            0x8b3b	                    mov edi, dword [rbx]	      1710	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_17	IF_48	IF_49	CALL_43
0x4004aaa	      0xe800000000	                          call 0x4004aaf	      1710	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_17	IF_48	IF_49	CALL_43
0x4004aaf	            0x85c0	                           test eax, eax	      1710	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_17	IF_48	IF_49	CALL_43
0x4004ab1	            0x752b	                           jne 0x4004ade	      1710	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_17	IF_48	IF_49	CALL_43
0x4004ab3	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      1711	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_17	IF_48	IF_49
0x4004ab7	    0x488b15000000	            mov rdx, qword [0x04004abe] 	      1711	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_17	IF_48	IF_49
0x4004abe	          0x483b02	                    cmp rax, qword [rdx]	      1711	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_17	IF_48	IF_49
0x4004ac1	            0x7d1b	                           jge 0x4004ade	      1711	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_17	IF_48	IF_49
0x4004ac3	        0x4883c001	                              add rax, 1	      1713	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_17	IF_48	IF_49
0x4004ac7	        0x48894330	             mov qword [rbx + 0x30], rax	      1713	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_17	IF_48	IF_49
0x4004acb	    0xc74338000000	               mov dword [rbx + 0x38], 0	      1714	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_17	IF_48	IF_49
0x4004ad2	    0xc7433c000000	               mov dword [rbx + 0x3c], 0	      1716	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_17	IF_48	IF_49
0x4004ad9	      0x4883435001	               add qword [rbx + 0x50], 1	      1718	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_17	IF_48	IF_49
0x4004ade	    0xc70500000000	               mov dword [0x04004ae8], 0	      1723	normal.c	FUNCTION_6	IF_2	IF_34
0x4004ae8	          0x4585e4	                         test r12d, r12d	      1732	normal.c	FUNCTION_6	IF_2	IF_34	IF_50
0x4004aeb	            0x7563	                           jne 0x4004b50	      1732	normal.c	FUNCTION_6	IF_2	IF_34	IF_50
0x4004aed	    0xc70500000000	               mov dword [0x04004af7], 0	      1734	normal.c	FUNCTION_6	IF_2	IF_34	IF_50
0x4004af7	      0xe800000000	                          call 0x4004afc	      1736	normal.c	FUNCTION_6	IF_2	IF_34	IF_50	CALL_44
0x4004afc	    0xc70500000000	               mov dword [0x04004b06], 0	      1737	normal.c	FUNCTION_6	IF_2	IF_34	IF_50
0x4004b06	    0x833d00000000	               cmp dword [0x04004b0d], 0	      3714	normal.c	FUNCTION_27	IF_1
0x4004b0d	            0x740c	                            je 0x4004b1b	      3714	normal.c	FUNCTION_27	IF_1
0x4004b0f	    0xc70500000000	               mov dword [0x04004b19], 1	      3715	normal.c	FUNCTION_27	IF_1
0x4004b19	            0xeb05	                           jmp 0x4004b20	      3715	normal.c	FUNCTION_27	IF_1
0x4004b1b	      0xe800000000	                          call 0x4004b20	      3718	normal.c	FUNCTION_27	CALL_1
0x4004b20	            0x8b03	                    mov eax, dword [rbx]	      1740	normal.c	FUNCTION_6	IF_2	IF_34	IF_50	IF_51
0x4004b22	          0x83f81b	                           cmp eax, 0x1b	      1741	normal.c	FUNCTION_6	IF_2	IF_34	IF_50	IF_51
0x4004b25	            0x7729	                            ja 0x4004b50	      1741	normal.c	FUNCTION_6	IF_2	IF_34	IF_50	IF_51
0x4004b27	      0xba44040008	                      mov edx, 0x8000444	      1743	normal.c	FUNCTION_6	IF_2	IF_34	IF_50	IF_51
0x4004b2c	        0x480fa3c2	                             bt rdx, rax	      1743	normal.c	FUNCTION_6	IF_2	IF_34	IF_50	IF_51
0x4004b30	            0x731e	                           jae 0x4004b50	      1743	normal.c	FUNCTION_6	IF_2	IF_34	IF_50	IF_51
0x4004b32	        0x837b0c00	                cmp dword [rbx + 0xc], 0	      1744	normal.c	FUNCTION_6	IF_2	IF_34	IF_50	IF_51
0x4004b36	            0x7518	                           jne 0x4004b50	      1744	normal.c	FUNCTION_6	IF_2	IF_34	IF_50	IF_51
0x4004b38	    0x488b05000000	            mov rax, qword [0x04004b3f] 	      1748	normal.c	FUNCTION_6	IF_2	IF_34	IF_50	IF_51
0x4004b3f	    0x4489a8300200	           mov dword [rax + 0x230], r13d	      1748	normal.c	FUNCTION_6	IF_2	IF_34	IF_50	IF_51
0x4004b46	      0xbf14000000	                           mov edi, 0x14	      1750	normal.c	FUNCTION_6	IF_2	IF_34	IF_50	IF_51	CALL_46
0x4004b4b	      0xe800000000	                          call 0x4004b50	      1750	normal.c	FUNCTION_6	IF_2	IF_34	IF_50	IF_51	CALL_46
0x4004b50	    0x833d00000000	               cmp dword [0x04004b57], 0	      1757	normal.c	FUNCTION_6	IF_2	IF_52
0x4004b57	            0x742f	                            je 0x4004b88	      1757	normal.c	FUNCTION_6	IF_2	IF_52
0x4004b59	        0x837b1400	               cmp dword [rbx + 0x14], 0	      1757	normal.c	FUNCTION_6	IF_2	IF_52
0x4004b5d	            0x7429	                            je 0x4004b88	      1757	normal.c	FUNCTION_6	IF_2	IF_52
0x4004b5f	    0x488b05000000	            mov rax, qword [0x04004b66] 	      1761	normal.c	FUNCTION_6	IF_2	IF_52	CALL_47
0x4004b66	      0x4889442410	             mov qword [rsp + 0x10], rax	      1761	normal.c	FUNCTION_6	IF_2	IF_52	CALL_47
0x4004b6b	          0x4c89ff	                            mov rdi, r15	      1761	normal.c	FUNCTION_6	IF_2	IF_52	CALL_47
0x4004b6e	      0xe800000000	                          call 0x4004b73	      1761	normal.c	FUNCTION_6	IF_2	IF_52	CALL_47
0x4004b73	          0x4889c7	                            mov rdi, rax	      1761	normal.c	FUNCTION_6	IF_2	IF_52	CALL_47
0x4004b76	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1761	normal.c	FUNCTION_6	IF_2	IF_52	CALL_47
0x4004b7b	            0xffd0	                                call rax	      1761	normal.c	FUNCTION_6	IF_2	IF_52	CALL_47
0x4004b7d	          0x83f801	                              cmp eax, 1	      1762	normal.c	FUNCTION_6	IF_2	IF_52	IF_53
0x4004b80	            0x7e06	                           jle 0x4004b88	      1762	normal.c	FUNCTION_6	IF_2	IF_52	IF_53
0x4004b82	          0x83e801	                              sub eax, 1	      1763	normal.c	FUNCTION_6	IF_2	IF_52	IF_53
0x4004b85	           0x14338	             add dword [rbx + 0x38], eax	      1763	normal.c	FUNCTION_6	IF_2	IF_52	IF_53
0x4004b88	    0x488b05000000	            mov rax, qword [0x04004b8f] 	      1766	normal.c	FUNCTION_6	IF_2
0x4004b8f	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      1766	normal.c	FUNCTION_6	IF_2
0x4004b96	        0x837b0800	                  cmp dword [rbx + 8], 0	      1778	normal.c	FUNCTION_6	IF_2
0x4004b9a	     0xf8577080000	                           jne 0x4005417	      1778	normal.c	FUNCTION_6	IF_2
0x4004ba0	        0x837b1400	               cmp dword [rbx + 0x14], 0	      1773	normal.c	FUNCTION_6	IF_2
0x4004ba4	            0x7419	                            je 0x4004bbf	      1773	normal.c	FUNCTION_6	IF_2
0x4004ba6	          0x833b02	                      cmp dword [rbx], 2	      1774	normal.c	FUNCTION_6	IF_2
0x4004ba9	     0xf8568080000	                           jne 0x4005417	      1774	normal.c	FUNCTION_6	IF_2
0x4004baf	          0x4c89ff	                            mov rdi, r15	      1775	normal.c	FUNCTION_6	IF_2	CALL_48
0x4004bb2	      0xe800000000	                          call 0x4004bb7	      1775	normal.c	FUNCTION_6	IF_2	CALL_48
0x4004bb7	            0x85c0	                           test eax, eax	      1775	normal.c	FUNCTION_6	IF_2	CALL_48
0x4004bb9	     0xf8558080000	                           jne 0x4005417	      1775	normal.c	FUNCTION_6	IF_2	CALL_48
0x4004bbf	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      1776	normal.c	FUNCTION_6	IF_2	CALL_49
0x4004bc3	        0x48394320	            cmp qword [rbx + 0x20], rax 	      1776	normal.c	FUNCTION_6	IF_2	CALL_49
0x4004bc7	     0xf854a080000	                           jne 0x4005417	      1776	normal.c	FUNCTION_6	IF_2	CALL_49
0x4004bcd	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      1776	normal.c	FUNCTION_6	IF_2	CALL_49
0x4004bd1	        0x48394328	            cmp qword [rbx + 0x28], rax 	      1776	normal.c	FUNCTION_6	IF_2	CALL_49
0x4004bd5	     0xf853c080000	                           jne 0x4005417	      1776	normal.c	FUNCTION_6	IF_2	CALL_49
0x4004bdb	    0x833d00000000	               cmp dword [0x04004be2], 0	      1778	normal.c	FUNCTION_6	IF_2
0x4004be2	     0xf8423080000	                            je 0x400540b	      1778	normal.c	FUNCTION_6	IF_2
0x4004be8	          0x8b532c	            mov edx, dword [rbx + 0x2c] 	      1778	normal.c	FUNCTION_6	IF_2
0x4004beb	          0x8b433c	            mov eax, dword [rbx + 0x3c] 	      1778	normal.c	FUNCTION_6	IF_2
0x4004bee	            0x39c2	                            cmp edx, eax	      1772	normal.c	FUNCTION_6	IF_2
0x4004bf0	           0xf94c1	                                 sete cl	      1772	normal.c	FUNCTION_6	IF_2
0x4004bf3	           0xfb6c9	                           movzx ecx, cl	      1772	normal.c	FUNCTION_6	IF_2
0x4004bf6	          0x894b58	             mov dword [rbx + 0x58], ecx	      1772	normal.c	FUNCTION_6	IF_2
0x4004bf9	     0xf8534080000	                           jne 0x4005433	      1786	normal.c	FUNCTION_6	IF_2	CALL_50
0x4004bff	      0xbe45000000	                           mov esi, 0x45	      1786	normal.c	FUNCTION_6	IF_2	CALL_50
0x4004c04	    0x488b3d000000	            mov rdi, qword [0x04004c0b] 	      1786	normal.c	FUNCTION_6	IF_2	CALL_50
0x4004c0b	      0xe800000000	                          call 0x4004c10	      1786	normal.c	FUNCTION_6	IF_2	CALL_50
0x4004c10	          0x4885c0	                           test rax, rax	      1786	normal.c	FUNCTION_6	IF_2	CALL_50
0x4004c13	        0x410f95c7	                              setne r15b	      1786	normal.c	FUNCTION_6	IF_2	CALL_50
0x4004c17	        0x450fb6ff	                        movzx r15d, r15b	      1786	normal.c	FUNCTION_6	IF_2	CALL_50
0x4004c1b	        0x837b5c00	               cmp dword [rbx + 0x5c], 0	      1790	normal.c	FUNCTION_6	IF_2	IF_54
0x4004c1f	            0x7443	                            je 0x4004c64	      1790	normal.c	FUNCTION_6	IF_2	IF_54
0x4004c21	        0x837b5800	               cmp dword [rbx + 0x58], 0	      1790	normal.c	FUNCTION_6	IF_2	IF_54
0x4004c25	            0x7525	                           jne 0x4004c4c	      1790	normal.c	FUNCTION_6	IF_2	IF_54
0x4004c27	            0xeb0e	                           jmp 0x4004c37	      1790	normal.c	FUNCTION_6	IF_2	IF_54
0x4004c29	    0x41bf00000000	                             mov r15d, 0	      1786	normal.c	FUNCTION_6	IF_2	CALL_50
0x4004c2f	            0xeb06	                           jmp 0x4004c37	      1786	normal.c	FUNCTION_6	IF_2	CALL_50
0x4004c31	    0x41bf00000000	                             mov r15d, 0	      1786	normal.c	FUNCTION_6	IF_2	CALL_50
0x4004c37	    0x488b05000000	            mov rax, qword [0x04004c3e] 	      1790	normal.c	FUNCTION_6	IF_2	IF_54
0x4004c3e	    0x83b840150000	             cmp dword [rax + 0x1540], 0	      1790	normal.c	FUNCTION_6	IF_2	IF_54
0x4004c45	            0x7405	                            je 0x4004c4c	      1790	normal.c	FUNCTION_6	IF_2	IF_54
0x4004c47	          0x833b13	                   cmp dword [rbx], 0x13	      1792	normal.c	FUNCTION_6	IF_2	IF_54
0x4004c4a	            0x7518	                           jne 0x4004c64	      1792	normal.c	FUNCTION_6	IF_2	IF_54
0x4004c4c	    0x488b05000000	            mov rax, qword [0x04004c53] 	      1797	normal.c	FUNCTION_6	IF_2	IF_54
0x4004c53	    0x4489a8300200	           mov dword [rax + 0x230], r13d	      1797	normal.c	FUNCTION_6	IF_2	IF_54
0x4004c5a	      0xbf14000000	                           mov edi, 0x14	      1799	normal.c	FUNCTION_6	IF_2	IF_54	CALL_51
0x4004c5f	      0xe800000000	                          call 0x4004c64	      1799	normal.c	FUNCTION_6	IF_2	IF_54	CALL_51
0x4004c64	        0x837b0800	                  cmp dword [rbx + 8], 0	      1809	normal.c	FUNCTION_6	IF_2	IF_55
0x4004c68	     0xf85ab000000	                           jne 0x4004d19	      1809	normal.c	FUNCTION_6	IF_2	IF_55
0x4004c6e	        0x837b1400	               cmp dword [rbx + 0x14], 0	      1810	normal.c	FUNCTION_6	IF_2	IF_55
0x4004c72	     0xf85a1000000	                           jne 0x4004d19	      1810	normal.c	FUNCTION_6	IF_2	IF_55
0x4004c78	        0xf6453c02	               test byte [rbp + 0x3c], 2	      1811	normal.c	FUNCTION_6	IF_2	IF_55
0x4004c7c	     0xf8597000000	                           jne 0x4004d19	      1811	normal.c	FUNCTION_6	IF_2	IF_55
0x4004c82	        0x837b3800	               cmp dword [rbx + 0x38], 0	      1812	normal.c	FUNCTION_6	IF_2	IF_55
0x4004c86	     0xf858d000000	                           jne 0x4004d19	      1812	normal.c	FUNCTION_6	IF_2	IF_55
0x4004c8c	        0x837b5c00	               cmp dword [rbx + 0x5c], 0	      1813	normal.c	FUNCTION_6	IF_2	IF_55
0x4004c90	            0x740c	                            je 0x4004c9e	      1813	normal.c	FUNCTION_6	IF_2	IF_55
0x4004c92	    0x488b05000000	            mov rax, qword [0x04004c99] 	      1813	normal.c	FUNCTION_6	IF_2	IF_55
0x4004c99	          0x80386f	                    cmp byte [rax], 0x6f	      1813	normal.c	FUNCTION_6	IF_2	IF_55
0x4004c9c	            0x757b	                           jne 0x4004d19	      1813	normal.c	FUNCTION_6	IF_2	IF_55
0x4004c9e	        0x837b6000	               cmp dword [rbx + 0x60], 0	      1814	normal.c	FUNCTION_6	IF_2	IF_55
0x4004ca2	            0x7575	                           jne 0x4004d19	      1814	normal.c	FUNCTION_6	IF_2	IF_55
0x4004ca4	        0x488b4350	            mov rax, qword [rbx + 0x50] 	      1815	normal.c	FUNCTION_6	IF_2	IF_55
0x4004ca8	        0x4883f801	                              cmp rax, 1	      1815	normal.c	FUNCTION_6	IF_2	IF_55
0x4004cac	            0x7e6b	                           jle 0x4004d19	      1815	normal.c	FUNCTION_6	IF_2	IF_55
0x4004cae	    0xc74318010000	               mov dword [rbx + 0x18], 1	      1817	normal.c	FUNCTION_6	IF_2	IF_55
0x4004cb5	        0x4883e801	                              sub rax, 1	      1818	normal.c	FUNCTION_6	IF_2	IF_55
0x4004cb9	        0x48894350	             mov qword [rbx + 0x50], rax	      1818	normal.c	FUNCTION_6	IF_2	IF_55
0x4004cbd	      0x48836b3001	               sub qword [rbx + 0x30], 1	      1819	normal.c	FUNCTION_6	IF_2	IF_55
0x4004cc2	      0xbf00000000	                              mov edi, 0	      1820	normal.c	FUNCTION_6	IF_2	IF_55	IF_56	CALL_52
0x4004cc7	      0xe800000000	                          call 0x4004ccc	      1820	normal.c	FUNCTION_6	IF_2	IF_55	IF_56	CALL_52
0x4004ccc	            0x85c0	                           test eax, eax	      1820	normal.c	FUNCTION_6	IF_2	IF_55	IF_56	CALL_52
0x4004cce	            0x7409	                            je 0x4004cd9	      1820	normal.c	FUNCTION_6	IF_2	IF_55	IF_56	CALL_52
0x4004cd0	    0xc74308010000	                  mov dword [rbx + 8], 1	      1821	normal.c	FUNCTION_6	IF_2	IF_55	IF_56
0x4004cd7	            0xeb47	                           jmp 0x4004d20	      1821	normal.c	FUNCTION_6	IF_2	IF_55	IF_56
0x4004cd9	        0x488b7b30	            mov rdi, qword [rbx + 0x30] 	      1824	normal.c	FUNCTION_6	IF_2	IF_55	ELSE_18	CALL_54
0x4004cdd	      0xe800000000	                          call 0x4004ce2	      1824	normal.c	FUNCTION_6	IF_2	IF_55	ELSE_18	CALL_54
0x4004ce2	          0x4889c7	                            mov rdi, rax	      1824	normal.c	FUNCTION_6	IF_2	IF_55	ELSE_18	CALL_54
0x4004ce5	      0xb800000000	                              mov eax, 0	      1824	normal.c	FUNCTION_6	IF_2	IF_55	ELSE_18	CALL_54
0x4004cea	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1824	normal.c	FUNCTION_6	IF_2	IF_55	ELSE_18	CALL_54
0x4004cf1	            0xf2ae	              repne scasb al, byte [rdi]	      1824	normal.c	FUNCTION_6	IF_2	IF_55	ELSE_18	CALL_54
0x4004cf3	          0x4889c8	                            mov rax, rcx	      1824	normal.c	FUNCTION_6	IF_2	IF_55	ELSE_18	CALL_54
0x4004cf6	          0x48f7d0	                                 not rax	      1824	normal.c	FUNCTION_6	IF_2	IF_55	ELSE_18	CALL_54
0x4004cf9	        0x4883e801	                              sub rax, 1	      1824	normal.c	FUNCTION_6	IF_2	IF_55	ELSE_18	CALL_54
0x4004cfd	            0x85c0	                           test eax, eax	      1825	normal.c	FUNCTION_6	IF_2	IF_55	ELSE_18	IF_57
0x4004cff	            0x7509	                           jne 0x4004d0a	      1825	normal.c	FUNCTION_6	IF_2	IF_55	ELSE_18	IF_57
0x4004d01	    0xc74338000000	               mov dword [rbx + 0x38], 0	      1824	normal.c	FUNCTION_6	IF_2	IF_55	ELSE_18	CALL_54
0x4004d08	            0xeb16	                           jmp 0x4004d20	      1824	normal.c	FUNCTION_6	IF_2	IF_55	ELSE_18	CALL_54
0x4004d0a	          0x83e801	                              sub eax, 1	      1827	normal.c	FUNCTION_6	IF_2	IF_55	ELSE_18	IF_57
0x4004d0d	          0x894338	             mov dword [rbx + 0x38], eax	      1827	normal.c	FUNCTION_6	IF_2	IF_55	ELSE_18	IF_57
0x4004d10	    0xc74314010000	               mov dword [rbx + 0x14], 1	      1828	normal.c	FUNCTION_6	IF_2	IF_55	ELSE_18	IF_57
0x4004d17	            0xeb07	                           jmp 0x4004d20	      1828	normal.c	FUNCTION_6	IF_2	IF_55	ELSE_18	IF_57
0x4004d19	    0xc74318000000	               mov dword [rbx + 0x18], 0	      1833	normal.c	FUNCTION_6	IF_2	ELSE_19
0x4004d20	            0x8b03	                    mov eax, dword [rbx]	      1835	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1
0x4004d22	          0x83f81d	                           cmp eax, 0x1d	      1835	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1
0x4004d25	     0xf87c7050000	                            ja 0x40052f2	      1835	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1
0x4004d2b	            0x89c2	                            mov edx, eax	      1835	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1
0x4004d2d	    0xff24d5000000	                       jmp qword [rdx*8]	      1835	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1
0x4004d34	      0xba01000000	                              mov edx, 1	      1839	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	CALL_55
0x4004d39	        0x837b5c00	               cmp dword [rbx + 0x5c], 0	      1839	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	CALL_55
0x4004d3d	            0x7403	                            je 0x4004d42	      1839	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	CALL_55
0x4004d3f	          0x8b5530	            mov edx, dword [rbp + 0x30] 	      1839	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	CALL_55
0x4004d42	      0xbe01000000	                              mov esi, 1	      1839	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	CALL_55
0x4004d47	          0x4889df	                            mov rdi, rbx	      1839	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	CALL_55
0x4004d4a	      0xe800000000	                          call 0x4004d4f	      1839	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	CALL_55
0x4004d4f	      0xbe01000000	                              mov esi, 1	      1840	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	CALL_56
0x4004d54	      0xbf00000000	                              mov edi, 0	      1840	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	CALL_56
0x4004d59	      0xe800000000	                          call 0x4004d5e	      1840	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	CALL_56
0x4004d5e	      0xe997050000	                           jmp 0x40052fa	      1841	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1
0x4004d63	      0x48837b5001	               cmp qword [rbx + 0x50], 1	      1845	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_58
0x4004d68	            0x7f08	                            jg 0x4004d72	      1845	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_58
0x4004d6a	    0x48c743500200	               mov qword [rbx + 0x50], 2	      1846	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_58
0x4004d72	        0x488b7b50	            mov rdi, qword [rbx + 0x50] 	      1847	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_59
0x4004d76	    0x488b15000000	            mov rdx, qword [0x04004d7d] 	      1847	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_59
0x4004d7d	          0x4889f9	                            mov rcx, rdi	      1847	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_59
0x4004d80	        0x48034a38	             add rcx, qword [rdx + 0x38]	      1847	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_59
0x4004d84	          0x4889ca	                            mov rdx, rcx	      1847	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_59
0x4004d87	        0x4883ea01	                              sub rdx, 1	      1847	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_59
0x4004d8b	    0x488b0d000000	            mov rcx, qword [0x04004d92] 	      1848	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_59
0x4004d92	          0x483b11	                    cmp rdx, qword [rcx]	      1847	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_59
0x4004d95	            0x7e0a	                           jle 0x4004da1	      1847	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_59
0x4004d97	      0xe800000000	                          call 0x4004d9c	      1849	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	CALL_57
0x4004d9c	      0xe959050000	                           jmp 0x40052fa	      1849	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	CALL_57
0x4004da1	          0x83f80d	                            cmp eax, 0xd	      1852	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_20	CALL_58
0x4004da4	        0x400f94c6	                                sete sil	      1852	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_20	CALL_58
0x4004da8	        0x400fb6f6	                          movzx esi, sil	      1852	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_20	CALL_58
0x4004dac	    0x41b801000000	                              mov r8d, 1	      1852	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_20	CALL_58
0x4004db2	      0xb901000000	                              mov ecx, 1	      1852	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_20	CALL_58
0x4004db7	      0xba01000000	                              mov edx, 1	      1852	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_20	CALL_58
0x4004dbc	      0xe800000000	                          call 0x4004dc1	      1852	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_20	CALL_58
0x4004dc1	      0xbe01000000	                              mov esi, 1	      1854	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_20	CALL_59
0x4004dc6	      0xbf00000000	                              mov edi, 0	      1854	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_20	CALL_59
0x4004dcb	      0xe800000000	                          call 0x4004dd0	      1854	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_20	CALL_59
0x4004dd0	      0xe925050000	                           jmp 0x40052fa	      1854	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_20	CALL_59
0x4004dd5	    0xc70500000000	               mov dword [0x04004ddf], 0	      1859	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1
0x4004ddf	          0x4585ff	                         test r15d, r15d	      1860	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_60
0x4004de2	            0x7414	                            je 0x4004df8	      1860	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_60
0x4004de4	      0xbf00400000	                         mov edi, 0x4000	      1862	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_60	CALL_60
0x4004de9	      0xe800000000	                          call 0x4004dee	      1862	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_60	CALL_60
0x4004dee	      0xe800000000	                          call 0x4004df3	      1863	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_60	CALL_61
0x4004df3	      0xe902050000	                           jmp 0x40052fa	      1863	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_60	CALL_61
0x4004df8	          0x4889df	                            mov rdi, rbx	      1867	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_21	CALL_62
0x4004dfb	      0xe800000000	                          call 0x4004e00	      1867	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_21	CALL_62
0x4004e00	        0x837b0801	                  cmp dword [rbx + 8], 1	      1868	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_21	IF_61	CALL_63
0x4004e04	            0x7513	                           jne 0x4004e19	      1868	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_21	IF_61	CALL_63
0x4004e06	      0xbf61000000	                           mov edi, 0x61	      1868	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_21	IF_61	CALL_63
0x4004e0b	      0xe800000000	                          call 0x4004e10	      1868	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_21	IF_61	CALL_63
0x4004e10	            0x85c0	                           test eax, eax	      1868	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_21	IF_61	CALL_63
0x4004e12	            0x7405	                            je 0x4004e19	      1868	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_21	IF_61	CALL_63
0x4004e14	      0xe800000000	                          call 0x4004e19	      1869	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_21	CALL_64
0x4004e19	      0xbe01000000	                              mov esi, 1	      1870	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_21	CALL_65
0x4004e1e	      0xbf00000000	                              mov edi, 0	      1870	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_21	CALL_65
0x4004e23	      0xe800000000	                          call 0x4004e28	      1870	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_21	CALL_65
0x4004e28	      0xe9cd040000	                           jmp 0x40052fa	      1870	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_21	CALL_65
0x4004e2d	          0x4585ff	                         test r15d, r15d	      1875	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_62
0x4004e30	            0x7416	                            je 0x4004e48	      1875	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_62
0x4004e32	          0x4585e4	                         test r12d, r12d	      1877	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_62	IF_63
0x4004e35	            0x7535	                           jne 0x4004e6c	      1877	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_62	IF_63
0x4004e37	      0xbf00400000	                         mov edi, 0x4000	      1879	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_62	IF_63	CALL_66
0x4004e3c	      0xe800000000	                          call 0x4004e41	      1879	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_62	IF_63	CALL_66
0x4004e41	      0xe800000000	                          call 0x4004e46	      1880	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_62	IF_63	CALL_67
0x4004e46	            0xeb24	                           jmp 0x4004e6c	      1880	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_62	IF_63	CALL_67
0x4004e48	    0x488b05000000	            mov rax, qword [0x04004e4f] 	      1886	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_22
0x4004e4f	    0x4489a8300200	           mov dword [rax + 0x230], r13d	      1886	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_22
0x4004e56	          0x4585e4	                         test r12d, r12d	      1888	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_22	CALL_68
0x4004e59	           0xf94c2	                                 sete dl	      1888	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_22	CALL_68
0x4004e5c	           0xfb6d2	                           movzx edx, dl	      1888	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_22	CALL_68
0x4004e5f	      0xbe00000000	                              mov esi, 0	      1888	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_22	CALL_68
0x4004e64	          0x4889df	                            mov rdi, rbx	      1888	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_22	CALL_68
0x4004e67	      0xe800000000	                          call 0x4004e6c	      1888	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_22	CALL_68
0x4004e6c	      0xe800000000	                          call 0x4004e71	      1890	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	CALL_69
0x4004e71	      0xe984040000	                           jmp 0x40052fa	      1891	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1
0x4004e76	    0xc70500000000	               mov dword [0x04004e80], 0	      1894	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1
0x4004e80	          0x4585ff	                         test r15d, r15d	      1895	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_64
0x4004e83	            0x7414	                            je 0x4004e99	      1895	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_64
0x4004e85	      0xbf00400000	                         mov edi, 0x4000	      1897	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_64	CALL_70
0x4004e8a	      0xe800000000	                          call 0x4004e8f	      1897	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_64	CALL_70
0x4004e8f	      0xe800000000	                          call 0x4004e94	      1898	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_64	CALL_71
0x4004e94	      0xe961040000	                           jmp 0x40052fa	      1898	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_64	CALL_71
0x4004e99	    0x833d00000000	               cmp dword [0x04004ea0], 0	      1906	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_23	IF_65
0x4004ea0	            0x750f	                           jne 0x4004eb1	      1906	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_23	IF_65
0x4004ea2	    0x41bf00000000	                             mov r15d, 0	      1909	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_23	ELSE_24
0x4004ea8	    0x833d00000000	               cmp dword [0x04004eaf], 0	      1906	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_23	IF_65
0x4004eaf	            0x7507	                           jne 0x4004eb8	      1906	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_23	IF_65
0x4004eb1	    0x448b3d000000	           mov r15d, dword [0x04004eb8] 	      1907	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_23	IF_65
0x4004eb8	    0xc70500000000	               mov dword [0x04004ec2], 0	      1910	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_23	ELSE_24
0x4004ec2	    0x488b05000000	            mov rax, qword [0x04004ec9] 	      1914	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_23	ELSE_24	IF_66
0x4004ec9	    0x443ba8300200	          cmp r13d, dword [rax + 0x230] 	      1914	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_23	ELSE_24	IF_66
0x4004ed0	            0x741a	                            je 0x4004eec	      1914	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_23	ELSE_24	IF_66
0x4004ed2	    0x4489a8300200	           mov dword [rax + 0x230], r13d	      1916	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_23	ELSE_24	IF_66
0x4004ed9	      0xba00000000	                              mov edx, 0	      1917	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_23	ELSE_24	IF_66	CALL_72
0x4004ede	    0x8b3500000000	            mov esi, dword [0x04004ee4] 	      1917	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_23	ELSE_24	IF_66	CALL_72
0x4004ee4	          0x4889df	                            mov rdi, rbx	      1917	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_23	ELSE_24	IF_66	CALL_72
0x4004ee7	      0xe814daffff	                    call sym.get_op_vcol	      1917	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_23	ELSE_24	IF_66	CALL_72
0x4004eec	    0xc70500000000	               mov dword [0x04004ef6], 0	      1921	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_23
0x4004ef6	          0x4889df	                            mov rdi, rbx	      1922	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_23	IF_67	CALL_73
0x4004ef9	      0xe800000000	                          call 0x4004efe	      1922	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_23	IF_67	CALL_73
0x4004efe	            0x85c0	                           test eax, eax	      1922	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_23	IF_67	CALL_73
0x4004f00	            0x7404	                            je 0x4004f06	      1922	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_23	IF_67	CALL_73
0x4004f02	        0x834d3c01	                or dword [rbp + 0x3c], 1	      1923	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_23	IF_67
0x4004f06	    0x833d00000000	               cmp dword [0x04004f0d], 0	      1924	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_23	IF_68
0x4004f0d	     0xf85e7030000	                           jne 0x40052fa	      1924	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_23	IF_68
0x4004f13	    0x44893d000000	           mov dword [0x04004f1a], r15d 	      1925	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_23	IF_68
0x4004f1a	      0xe9db030000	                           jmp 0x40052fa	      1925	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_23	IF_68
0x4004f1f	      0xbe21000000	                           mov esi, 0x21	      1930	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_69	CALL_74
0x4004f24	    0x488b3d000000	            mov rdi, qword [0x04004f2b] 	      1930	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_69	CALL_74
0x4004f2b	      0xe800000000	                          call 0x4004f30	      1930	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_69	CALL_74
0x4004f30	          0x4885c0	                           test rax, rax	      1930	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_69	CALL_74
0x4004f33	            0x740c	                            je 0x4004f41	      1930	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_69	CALL_74
0x4004f35	      0xbf00000000	                              mov edi, 0	      1931	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	CALL_75
0x4004f3a	      0xe800000000	                          call 0x4004f3f	      1931	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	CALL_75
0x4004f3f	            0xeb0a	                           jmp 0x4004f4b	      1931	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	CALL_75
0x4004f41	    0xc70500000000	               mov dword [0x04004f4b], 1	      1933	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_25
0x4004f4b	          0x833b08	                      cmp dword [rbx], 8	      1943	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_25	IF_70	CALL_76
0x4004f4e	            0x7551	                           jne 0x4004fa1	      1943	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_25	IF_70	CALL_76
0x4004f50	      0xe800000000	                          call 0x4004f55	      1943	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_25	IF_70	CALL_76
0x4004f55	          0x803800	                       cmp byte [rax], 0	      1943	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_25	IF_70	CALL_76
0x4004f58	            0x7547	                           jne 0x4004fa1	      1943	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_25	IF_70	CALL_76
0x4004f5a	    0x488b05000000	            mov rax, qword [0x04004f61] 	      1946	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_25	IF_70	IF_71
0x4004f61	    0x83b820150000	             cmp dword [rax + 0x1520], 0	      1946	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_25	IF_70	IF_71
0x4004f68	            0x7412	                            je 0x4004f7c	      1946	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_25	IF_70	IF_71
0x4004f6a	      0xbe00000000	                              mov esi, 0	      1948	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_25	IF_70	IF_71	CALL_77
0x4004f6f	          0x4889df	                            mov rdi, rbx	      1948	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_25	IF_70	IF_71	CALL_77
0x4004f72	      0xe800000000	                          call 0x4004f77	      1948	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_25	IF_70	IF_71	CALL_77
0x4004f77	      0xe97e030000	                           jmp 0x40052fa	      1949	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_25	IF_70	IF_71
0x4004f7c	    0x488b80e01400	          mov rax, qword [rax + 0x14e0] 	      1955	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_25	IF_70
0x4004f83	          0x803800	                       cmp byte [rax], 0	      1953	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_25	IF_70	CALL_78
0x4004f86	      0xbe00000000	                              mov esi, 0	      1953	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_25	IF_70	CALL_78
0x4004f8b	      0xb800000000	                              mov eax, 0	      1953	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_25	IF_70	CALL_78
0x4004f90	        0x480f45f0	                         cmovne rsi, rax	      1953	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_25	IF_70	CALL_78
0x4004f94	          0x4889df	                            mov rdi, rbx	      1953	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_25	IF_70	CALL_78
0x4004f97	      0xe800000000	                          call 0x4004f9c	      1953	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_25	IF_70	CALL_78
0x4004f9c	      0xe959030000	                           jmp 0x40052fa	      1958	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_25	IF_70
0x4004fa1	          0x4889df	                            mov rdi, rbx	      1963	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	CALL_79
0x4004fa4	      0xe83bd7ffff	                       call sym.op_colon	      1963	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	CALL_79
0x4004fa9	      0xe94c030000	                           jmp 0x40052fa	      1964	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1
0x4004fae	          0x4585ff	                         test r15d, r15d	      1970	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_72
0x4004fb1	            0x7411	                            je 0x4004fc4	      1970	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_72
0x4004fb3	      0xbf00400000	                         mov edi, 0x4000	      1972	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_72	CALL_80
0x4004fb8	      0xe800000000	                          call 0x4004fbd	      1972	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_72	CALL_80
0x4004fbd	      0xe800000000	                          call 0x4004fc2	      1973	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_72	CALL_81
0x4004fc2	            0xeb08	                           jmp 0x4004fcc	      1973	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_72	CALL_81
0x4004fc4	          0x4889df	                            mov rdi, rbx	      1976	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	CALL_82
0x4004fc7	      0xe800000000	                          call 0x4004fcc	      1976	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	CALL_82
0x4004fcc	      0xe800000000	                          call 0x4004fd1	      1977	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	CALL_83
0x4004fd1	      0xe924030000	                           jmp 0x40052fa	      1978	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1
0x4004fd6	    0x488b05000000	            mov rax, qword [0x04004fdd] 	      1982	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_73
0x4004fdd	    0x488b90001500	          mov rdx, qword [rax + 0x1500] 	      1982	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_73
0x4004fe4	          0x803a00	                       cmp byte [rdx], 0	      1982	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_73
0x4004fe7	            0x740d	                            je 0x4004ff6	      1982	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_73
0x4004fe9	          0x4889df	                            mov rdi, rbx	      1983	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	CALL_84
0x4004fec	      0xe800000000	                          call 0x4004ff1	      1983	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	CALL_84
0x4004ff1	      0xe904030000	                           jmp 0x40052fa	      1983	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	CALL_84
0x4004ff6	    0x488b15000000	            mov rdx, qword [0x04004ffd] 	      1986	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_27	IF_74
0x4004ffd	          0x803a00	                       cmp byte [rdx], 0	      1986	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_27	IF_74
0x4005000	            0x750c	                           jne 0x400500e	      1986	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_27	IF_74
0x4005002	    0x488b80f81400	          mov rax, qword [rax + 0x14f8] 	      1986	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_27	IF_74
0x4005009	          0x803800	                       cmp byte [rax], 0	      1986	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_27	IF_74
0x400500c	            0x740d	                            je 0x400501b	      1986	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_27	IF_74
0x400500e	          0x4889df	                            mov rdi, rbx	      1987	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_27	IF_74
0x4005011	      0xe8ced6ffff	                       call sym.op_colon	      1987	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_27	IF_74
0x4005016	      0xe9df020000	                           jmp 0x40052fa	      1987	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_27	IF_74
0x400501b	      0xbe00000000	                              mov esi, 0	      1989	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	CALL_86
0x4005020	          0x4889df	                            mov rdi, rbx	      1989	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	CALL_86
0x4005023	      0xe800000000	                          call 0x4005028	      1989	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	CALL_86
0x4005028	      0xe9cd020000	                           jmp 0x40052fa	      1989	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	CALL_86
0x400502d	      0xbe01000000	                              mov esi, 1	      1993	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	CALL_87
0x4005032	          0x4889df	                            mov rdi, rbx	      1993	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	CALL_87
0x4005035	      0xe800000000	                          call 0x400503a	      1993	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	CALL_87
0x400503a	      0xe9bb020000	                           jmp 0x40052fa	      1994	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1
0x400503f	    0x488b05000000	            mov rax, qword [0x04005046] 	      2000	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1
0x4005046	    0x4489a8300200	           mov dword [rax + 0x230], r13d	      2000	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1
0x400504d	    0x488b05000000	            mov rax, qword [0x04005054] 	      2227	normal.c	FUNCTION_8	IF_1
0x4005054	          0x803800	                       cmp byte [rax], 0	      2227	normal.c	FUNCTION_8	IF_1
0x4005057	            0x7521	                           jne 0x400507a	      2227	normal.c	FUNCTION_8	IF_1
0x4005059	      0xba05000000	                              mov edx, 5	      2228	normal.c	FUNCTION_8	CALL_2
0x400505e	      0xbe00000000	                              mov esi, 0	      2228	normal.c	FUNCTION_8	CALL_2
0x4005063	      0xbf00000000	                              mov edi, 0	      2228	normal.c	FUNCTION_8	CALL_2
0x4005068	      0xe800000000	                          call 0x400506d	      2228	normal.c	FUNCTION_8	CALL_2
0x400506d	          0x4889c7	                            mov rdi, rax	      2228	normal.c	FUNCTION_8	CALL_2
0x4005070	      0xe800000000	                          call 0x4005075	      2228	normal.c	FUNCTION_8	CALL_2
0x4005075	      0xe980020000	                           jmp 0x40052fa	      2228	normal.c	FUNCTION_8	CALL_2
0x400507a	    0x488b05000000	            mov rax, qword [0x04005081] 	      2232	normal.c	FUNCTION_8	ELSE_1
0x4005081	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	      2232	normal.c	FUNCTION_8	ELSE_1
0x4005085	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	      2232	normal.c	FUNCTION_8	ELSE_1
0x4005089	    0x4889b0e01100	          mov qword [rax + 0x11e0], rsi 	      2232	normal.c	FUNCTION_8	ELSE_1
0x4005090	    0x4889b8e81100	          mov qword [rax + 0x11e8], rdi 	      2232	normal.c	FUNCTION_8	ELSE_1
0x4005097	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	      2233	normal.c	FUNCTION_8	ELSE_1
0x400509b	        0x488b7b38	            mov rdi, qword [rbx + 0x38] 	      2233	normal.c	FUNCTION_8	ELSE_1
0x400509f	    0x4889b0001200	          mov qword [rax + 0x1200], rsi 	      2233	normal.c	FUNCTION_8	ELSE_1
0x40050a6	    0x4889b8081200	          mov qword [rax + 0x1208], rdi 	      2233	normal.c	FUNCTION_8	ELSE_1
0x40050ad	        0x837b0801	                  cmp dword [rbx + 8], 1	      2234	normal.c	FUNCTION_8	ELSE_1	IF_2
0x40050b1	     0xf8491030000	                            je 0x4005448	      2234	normal.c	FUNCTION_8	ELSE_1	IF_2
0x40050b7	        0x837b1400	               cmp dword [rbx + 0x14], 0	      2234	normal.c	FUNCTION_8	ELSE_1	IF_2
0x40050bb	     0xf8596030000	                           jne 0x4005457	      2234	normal.c	FUNCTION_8	ELSE_1	IF_2
0x40050c1	    0x488db8001200	                 lea rdi, [rax + 0x1200]	      2236	normal.c	FUNCTION_8	ELSE_1	CALL_3
0x40050c8	      0xe800000000	                          call 0x40050cd	      2236	normal.c	FUNCTION_8	ELSE_1	CALL_3
0x40050cd	        0x837b6000	               cmp dword [rbx + 0x60], 0	      2238	normal.c	FUNCTION_8	ELSE_1	IF_3
0x40050d1	            0x740b	                            je 0x40050de	      2238	normal.c	FUNCTION_8	ELSE_1	IF_3
0x40050d3	    0x48c744242000	               mov qword [rsp + 0x20], 0	      2239	normal.c	FUNCTION_8	ELSE_1	IF_3
0x40050dc	            0xeb1a	                           jmp 0x40050f8	      2239	normal.c	FUNCTION_8	ELSE_1	IF_3
0x40050de	        0x837b0801	                  cmp dword [rbx + 8], 1	      2240	normal.c	FUNCTION_8	ELSE_1	ELSE_2	IF_4
0x40050e2	            0x750b	                           jne 0x40050ef	      2240	normal.c	FUNCTION_8	ELSE_1	ELSE_2	IF_4
0x40050e4	    0x48c744242000	               mov qword [rsp + 0x20], 0	      2241	normal.c	FUNCTION_8	ELSE_1	ELSE_2	IF_4
0x40050ed	            0xeb09	                           jmp 0x40050f8	      2241	normal.c	FUNCTION_8	ELSE_1	ELSE_2	IF_4
0x40050ef	    0x48c744242000	               mov qword [rsp + 0x20], 0	      2243	normal.c	FUNCTION_8	ELSE_1	ELSE_3
0x40050f8	    0xc70500000000	               mov dword [0x04005102], 2	      2248	normal.c	FUNCTION_8	ELSE_1
0x4005102	      0xb900000000	                              mov ecx, 0	      2251	normal.c	FUNCTION_8	ELSE_1	CALL_4
0x4005107	      0x488d542420	                   lea rdx, [rsp + 0x20]	      2251	normal.c	FUNCTION_8	ELSE_1	CALL_4
0x400510c	      0xbe01000000	                              mov esi, 1	      2251	normal.c	FUNCTION_8	ELSE_1	CALL_4
0x4005111	    0x488b3d000000	            mov rdi, qword [0x04005118] 	      2251	normal.c	FUNCTION_8	ELSE_1	CALL_4
0x4005118	      0xe800000000	                          call 0x400511d	      2251	normal.c	FUNCTION_8	ELSE_1	CALL_4
0x400511d	      0xe9d8010000	                           jmp 0x40052fa	      2251	normal.c	FUNCTION_8	ELSE_1	CALL_4
0x4005122	    0xc70500000000	               mov dword [0x0400512c], 0	      2007	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1
0x400512c	          0x4585ff	                         test r15d, r15d	      2009	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_75
0x400512f	            0x7414	                            je 0x4005145	      2009	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_75
0x4005131	      0xbf00400000	                         mov edi, 0x4000	      2011	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_75	CALL_89
0x4005136	      0xe800000000	                          call 0x400513b	      2011	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_75	CALL_89
0x400513b	      0xe800000000	                          call 0x4005140	      2012	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_75	CALL_90
0x4005140	      0xe9b5010000	                           jmp 0x40052fa	      2012	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_75	CALL_90
0x4005145	    0x448b3d000000	           mov r15d, dword [0x0400514c] 	      2019	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_29
0x400514c	    0xc70500000000	               mov dword [0x04005156], 0	      2020	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_29
0x4005156	    0x488b05000000	            mov rax, qword [0x0400515d] 	      2024	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_29	IF_76
0x400515d	    0x443ba8300200	          cmp r13d, dword [rax + 0x230] 	      2024	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_29	IF_76
0x4005164	            0x741a	                            je 0x4005180	      2024	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_29	IF_76
0x4005166	    0x4489a8300200	           mov dword [rax + 0x230], r13d	      2026	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_29	IF_76
0x400516d	      0xba00000000	                              mov edx, 0	      2027	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_29	IF_76	CALL_91
0x4005172	    0x8b3500000000	            mov esi, dword [0x04005178] 	      2027	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_29	IF_76	CALL_91
0x4005178	          0x4889df	                            mov rdi, rbx	      2027	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_29	IF_76	CALL_91
0x400517b	      0xe880d7ffff	                    call sym.get_op_vcol	      2027	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_29	IF_76	CALL_91
0x4005180	        0x488b7530	            mov rsi, qword [rbp + 0x30] 	      2030	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_29	CALL_92
0x4005184	          0x4889df	                            mov rdi, rbx	      2030	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_29	CALL_92
0x4005187	      0xe800000000	                          call 0x400518c	      2030	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_29	CALL_92
0x400518c	    0x488b05000000	            mov rax, qword [0x04005193] 	      2033	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_29
0x4005193	    0xc78030020000	              mov dword [rax + 0x230], 0	      2033	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_29
0x400519d	      0xbe01000000	                              mov esi, 1	      2038	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_29	CALL_93
0x40051a2	      0xbf00000000	                              mov edi, 0	      2038	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_29	CALL_93
0x40051a7	      0xe800000000	                          call 0x40051ac	      2038	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_29	CALL_93
0x40051ac	    0x833d00000000	               cmp dword [0x040051b3], 0	      2040	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_29	IF_77
0x40051b3	            0x750c	                           jne 0x40051c1	      2040	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_29	IF_77
0x40051b5	    0x44893d000000	           mov dword [0x040051bc], r15d 	      2041	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_29	IF_77
0x40051bc	      0xe939010000	                           jmp 0x40052fa	      2041	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_29	IF_77
0x40051c1	        0x834d3c01	                or dword [rbp + 0x3c], 1	      2043	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_29	ELSE_30
0x40051c5	      0xe930010000	                           jmp 0x40052fa	      2043	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_29	ELSE_30
0x40051ca	    0xc70500000000	               mov dword [0x040051d4], 0	      2051	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1
0x40051d4	          0x4585ff	                         test r15d, r15d	      2053	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_78
0x40051d7	            0x7414	                            je 0x40051ed	      2053	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_78
0x40051d9	      0xbf00400000	                         mov edi, 0x4000	      2056	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_78	CALL_95
0x40051de	      0xe800000000	                          call 0x40051e3	      2056	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_78	CALL_95
0x40051e3	      0xe800000000	                          call 0x40051e8	      2057	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_78	CALL_96
0x40051e8	      0xe90d010000	                           jmp 0x40052fa	      2057	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_78	CALL_96
0x40051ed	    0x488b05000000	            mov rax, qword [0x040051f4] 	      2065	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_31	IF_79
0x40051f4	    0x443ba8300200	          cmp r13d, dword [rax + 0x230] 	      2065	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_31	IF_79
0x40051fb	            0x741a	                            je 0x4005217	      2065	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_31	IF_79
0x40051fd	    0x4489a8300200	           mov dword [rax + 0x230], r13d	      2067	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_31	IF_79
0x4005204	      0xba00000000	                              mov edx, 0	      2068	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_31	IF_79	CALL_97
0x4005209	    0x8b3500000000	            mov esi, dword [0x0400520f] 	      2068	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_31	IF_79	CALL_97
0x400520f	          0x4889df	                            mov rdi, rbx	      2068	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_31	IF_79	CALL_97
0x4005212	      0xe8e9d6ffff	                    call sym.get_op_vcol	      2068	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_31	IF_79	CALL_97
0x4005217	          0x8b7510	            mov esi, dword [rbp + 0x10] 	      2071	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_31	CALL_98
0x400521a	          0x4889df	                            mov rdi, rbx	      2071	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_31	CALL_98
0x400521d	      0xe800000000	                          call 0x4005222	      2071	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_31	CALL_98
0x4005222	      0xe9d3000000	                           jmp 0x40052fa	      2071	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_31	CALL_98
0x4005227	    0xc70500000000	               mov dword [0x04005231], 0	      2078	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1
0x4005231	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	      2079	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	CALL_99
0x4005235	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      2079	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	CALL_99
0x4005239	      0xe800000000	                          call 0x400523e	      2079	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	CALL_99
0x400523e	      0xe9b7000000	                           jmp 0x40052fa	      2080	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1
0x4005243	    0xc70500000000	               mov dword [0x0400524d], 0	      2086	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1
0x400524d	            0x8b03	                    mov eax, dword [rbx]	      2090	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1
0x400524f	            0x89c2	                            mov edx, eax	      2087	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	CALL_100
0x4005251	          0x83e2fd	                     and edx, 0xfffffffd	      2087	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	CALL_100
0x4005254	          0x83fa15	                           cmp edx, 0x15	      2087	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	CALL_100
0x4005257	           0xf94c1	                                 sete cl	      2087	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	CALL_100
0x400525a	           0xfb6c9	                           movzx ecx, cl	      2087	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	CALL_100
0x400525d	          0x83e814	                           sub eax, 0x14	      2087	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	CALL_100
0x4005260	          0x83f801	                              cmp eax, 1	      2087	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	CALL_100
0x4005263	           0xf96c2	                                setbe dl	      2087	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	CALL_100
0x4005266	           0xfb6d2	                           movzx edx, dl	      2087	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	CALL_100
0x4005269	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	      2087	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	CALL_100
0x400526d	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      2087	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	CALL_100
0x4005271	        0x448b435c	            mov r8d, dword [rbx + 0x5c] 	      2087	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	CALL_100
0x4005275	      0xe800000000	                          call 0x400527a	      2087	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	CALL_100
0x400527a	            0xeb7e	                           jmp 0x40052fa	      2093	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1
0x400527c	    0xc70500000000	               mov dword [0x04005286], 0	      2097	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1
0x4005286	          0x8b4b5c	            mov ecx, dword [rbx + 0x5c] 	      2098	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	CALL_101
0x4005289	          0x833b19	                   cmp dword [rbx], 0x19	      2098	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	CALL_101
0x400528c	           0xf94c2	                                 sete dl	      2098	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	CALL_101
0x400528f	           0xfb6d2	                           movzx edx, dl	      2098	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	CALL_101
0x4005292	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	      2098	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	CALL_101
0x4005296	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      2098	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	CALL_101
0x400529a	      0xe800000000	                          call 0x400529f	      2098	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	CALL_101
0x400529f	            0xeb59	                           jmp 0x40052fa	      2100	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1
0x40052a1	          0x4585ff	                         test r15d, r15d	      2104	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_80
0x40052a4	            0x7411	                            je 0x40052b7	      2104	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_80
0x40052a6	      0xbf00400000	                         mov edi, 0x4000	      2106	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_80	CALL_102
0x40052ab	      0xe800000000	                          call 0x40052b0	      2106	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_80	CALL_102
0x40052b0	      0xe800000000	                          call 0x40052b5	      2107	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_80	CALL_103
0x40052b5	            0xeb34	                           jmp 0x40052eb	      2107	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	IF_80	CALL_103
0x40052b7	    0xc70500000000	               mov dword [0x040052c1], 1	      2111	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_32
0x40052c1	    0x488b05000000	            mov rax, qword [0x040052c8] 	      2113	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_32
0x40052c8	    0x4489a8300200	           mov dword [rax + 0x230], r13d	      2113	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_32
0x40052cf	        0x488b7530	            mov rsi, qword [rbp + 0x30] 	      2115	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_32	CALL_104
0x40052d3	    0x8b1500000000	            mov edx, dword [0x040052d9] 	      2115	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_32	CALL_104
0x40052d9	          0x4889df	                            mov rdi, rbx	      2115	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_32	CALL_104
0x40052dc	      0xe800000000	                          call 0x40052e1	      2115	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_32	CALL_104
0x40052e1	    0xc70500000000	               mov dword [0x040052eb], 0	      2116	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	ELSE_32
0x40052eb	      0xe800000000	                          call 0x40052f0	      2118	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	CALL_105
0x40052f0	            0xeb08	                           jmp 0x40052fa	      2119	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1
0x40052f2	          0x4889df	                            mov rdi, rbx	      2121	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	CALL_106
0x40052f5	      0xe83eafffff	                    call sym.clearopbeep	      2121	normal.c	FUNCTION_6	IF_2	ELSE_19	SWITCH_1	CALL_106
0x40052fa	    0xc70500000000	               mov dword [0x04005304], 2	      2124	normal.c	FUNCTION_6	IF_2
0x4005304	          0x4585e4	                         test r12d, r12d	      2126	normal.c	FUNCTION_6	IF_2	IF_81
0x4005307	            0x7545	                           jne 0x400534e	      2126	normal.c	FUNCTION_6	IF_2	IF_81
0x4005309	    0x833d00000000	               cmp dword [0x04005310], 0	      2131	normal.c	FUNCTION_6	IF_2	IF_81	IF_82
0x4005310	            0x7555	                           jne 0x4005367	      2131	normal.c	FUNCTION_6	IF_2	IF_81	IF_82
0x4005312	        0x837b0801	                  cmp dword [rbx + 8], 1	      2131	normal.c	FUNCTION_6	IF_2	IF_81	IF_82
0x4005316	            0x754f	                           jne 0x4005367	      2131	normal.c	FUNCTION_6	IF_2	IF_81	IF_82
0x4005318	        0x837b1800	               cmp dword [rbx + 0x18], 0	      2131	normal.c	FUNCTION_6	IF_2	IF_81	IF_82
0x400531c	            0x7549	                           jne 0x4005367	      2131	normal.c	FUNCTION_6	IF_2	IF_81	IF_82
0x400531e	            0x8b03	                    mov eax, dword [rbx]	      2132	normal.c	FUNCTION_6	IF_2	IF_81	IF_82
0x4005320	          0x8d50fc	                      lea edx, [rax - 4]	      2132	normal.c	FUNCTION_6	IF_2	IF_81	IF_82
0x4005323	          0x83fa01	                              cmp edx, 1	      2132	normal.c	FUNCTION_6	IF_2	IF_81	IF_82
0x4005326	            0x7605	                           jbe 0x400532d	      2132	normal.c	FUNCTION_6	IF_2	IF_81	IF_82
0x4005328	          0x83f801	                              cmp eax, 1	      2132	normal.c	FUNCTION_6	IF_2	IF_81	IF_82
0x400532b	            0x753a	                           jne 0x4005367	      2132	normal.c	FUNCTION_6	IF_2	IF_81	IF_82
0x400532d	    0x488b05000000	            mov rax, qword [0x04005334] 	      2136	normal.c	FUNCTION_6	IF_2	IF_81	IF_82
0x4005334	    0xc78030020000	              mov dword [rax + 0x230], 0	      2136	normal.c	FUNCTION_6	IF_2	IF_81	IF_82
0x400533e	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      2138	normal.c	FUNCTION_6	IF_2	IF_81	IF_82	CALL_107
0x4005342	          0x894848	             mov dword [rax + 0x48], ecx	      2138	normal.c	FUNCTION_6	IF_2	IF_81	IF_82	CALL_107
0x4005345	            0x89cf	                            mov edi, ecx	      2138	normal.c	FUNCTION_6	IF_2	IF_81	IF_82	CALL_107
0x4005347	      0xe800000000	                          call 0x400534c	      2138	normal.c	FUNCTION_6	IF_2	IF_81	IF_82	CALL_107
0x400534c	            0xeb19	                           jmp 0x4005367	      2138	normal.c	FUNCTION_6	IF_2	IF_81	IF_82	CALL_107
0x400534e	    0x488b05000000	            mov rax, qword [0x04005355] 	      2143	normal.c	FUNCTION_6	IF_2	ELSE_33
0x4005355	        0x4c897038	             mov qword [rax + 0x38], r14	      2143	normal.c	FUNCTION_6	IF_2	ELSE_33
0x4005359	        0x8b4c2408	                mov ecx, dword [rsp + 8]	      2143	normal.c	FUNCTION_6	IF_2	ELSE_33
0x400535d	          0x894840	             mov dword [rax + 0x40], ecx	      2143	normal.c	FUNCTION_6	IF_2	ELSE_33
0x4005360	        0x8b4c2404	                mov ecx, dword [rsp + 4]	      2143	normal.c	FUNCTION_6	IF_2	ELSE_33
0x4005364	          0x894844	             mov dword [rax + 0x44], ecx	      2143	normal.c	FUNCTION_6	IF_2	ELSE_33
0x4005367	    0xc74360000000	               mov dword [rbx + 0x60], 0	      2145	normal.c	FUNCTION_6	IF_2
0x400536e	    0xc70300000000	                      mov dword [rbx], 0	      3676	normal.c	FUNCTION_24
0x4005374	    0xc74304000000	                  mov dword [rbx + 4], 0	      3677	normal.c	FUNCTION_24
0x400537b	    0xc7430c000000	                mov dword [rbx + 0xc], 0	      3678	normal.c	FUNCTION_24
0x4005382	    0xc74310000000	               mov dword [rbx + 0x10], 0	      3679	normal.c	FUNCTION_24
0x4005389	    0x488b05000000	            mov rax, qword [0x04005390] 	      2149	normal.c	FUNCTION_6
0x4005390	    0x4489a8300200	           mov dword [rax + 0x230], r13d	      2149	normal.c	FUNCTION_6
0x4005397	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      2151	normal.c	FUNCTION_6
0x400539c	    0x644833042528	                xor rax, qword fs:[0x28]	      2151	normal.c	FUNCTION_6
0x40053a5	     0xf84c0000000	                            je 0x400546b	      2151	normal.c	FUNCTION_6
0x40053ab	      0xe9b6000000	                           jmp 0x4005466	      2151	normal.c	FUNCTION_6
0x40053b0	    0x833d00000000	               cmp dword [0x040053b7], 0	      1388	normal.c	FUNCTION_6	IF_2
0x40053b7	            0x74d0	                            je 0x4005389	      1388	normal.c	FUNCTION_6	IF_2
0x40053b9	        0x4c8b7038	            mov r14, qword [rax + 0x38] 	      1383	normal.c	FUNCTION_6
0x40053bd	          0x8b4840	            mov ecx, dword [rax + 0x40] 	      1383	normal.c	FUNCTION_6
0x40053c0	        0x894c2408	                mov dword [rsp + 8], ecx	      1383	normal.c	FUNCTION_6
0x40053c4	          0x8b5044	            mov edx, dword [rax + 0x44] 	      1383	normal.c	FUNCTION_6
0x40053c7	        0x89542404	                mov dword [rsp + 4], edx	      1383	normal.c	FUNCTION_6
0x40053cb	      0xe934eeffff	                           jmp 0x4004204	      1383	normal.c	FUNCTION_6
0x40053d0	        0x4c8b7038	            mov r14, qword [rax + 0x38] 	      1383	normal.c	FUNCTION_6
0x40053d4	          0x8b4840	            mov ecx, dword [rax + 0x40] 	      1383	normal.c	FUNCTION_6
0x40053d7	        0x894c2408	                mov dword [rsp + 8], ecx	      1383	normal.c	FUNCTION_6
0x40053db	          0x8b4844	            mov ecx, dword [rax + 0x44] 	      1383	normal.c	FUNCTION_6
0x40053de	        0x894c2404	                mov dword [rsp + 4], ecx	      1383	normal.c	FUNCTION_6
0x40053e2	      0xe91deeffff	                           jmp 0x4004204	      1383	normal.c	FUNCTION_6
0x40053e7	    0x833d00000000	               cmp dword [0x040053ee], 0	      1468	normal.c	FUNCTION_6	IF_2	IF_14
0x40053ee	     0xf85f9efffff	                           jne 0x40043ed	      1468	normal.c	FUNCTION_6	IF_2	IF_14
0x40053f4	      0xe9e2f0ffff	                           jmp 0x40044db	      1468	normal.c	FUNCTION_6	IF_2	IF_14
0x40053f9	    0x833d00000000	               cmp dword [0x04005400], 0	      1678	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_45
0x4005400	     0xf8405f6ffff	                            je 0x4004a0b	      1678	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_45
0x4005406	      0xe946f6ffff	                           jmp 0x4004a51	      1678	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_45
0x400540b	    0xc74358010000	               mov dword [rbx + 0x58], 1	      1772	normal.c	FUNCTION_6	IF_2
0x4005412	      0xe9e8f7ffff	                           jmp 0x4004bff	      1772	normal.c	FUNCTION_6	IF_2
0x4005417	    0xc74358000000	               mov dword [rbx + 0x58], 0	      1772	normal.c	FUNCTION_6	IF_2
0x400541e	    0x41bf00000000	                             mov r15d, 0	      1786	normal.c	FUNCTION_6	IF_2	CALL_50
0x4005424	        0x837b5c00	               cmp dword [rbx + 0x5c], 0	      1790	normal.c	FUNCTION_6	IF_2	IF_54
0x4005428	     0xf8436f8ffff	                            je 0x4004c64	      1790	normal.c	FUNCTION_6	IF_2	IF_54
0x400542e	      0xe9f6f7ffff	                           jmp 0x4004c29	      1790	normal.c	FUNCTION_6	IF_2	IF_54
0x4005433	    0x41bf00000000	                             mov r15d, 0	      1786	normal.c	FUNCTION_6	IF_2	CALL_50
0x4005439	        0x837b5c00	               cmp dword [rbx + 0x5c], 0	      1790	normal.c	FUNCTION_6	IF_2	IF_54
0x400543d	     0xf8421f8ffff	                            je 0x4004c64	      1790	normal.c	FUNCTION_6	IF_2	IF_54
0x4005443	      0xe9e9f7ffff	                           jmp 0x4004c31	      1790	normal.c	FUNCTION_6	IF_2	IF_54
0x4005448	        0x837b6000	               cmp dword [rbx + 0x60], 0	      2238	normal.c	FUNCTION_8	ELSE_1	IF_3
0x400544c	     0xf8581fcffff	                           jne 0x40050d3	      2238	normal.c	FUNCTION_8	ELSE_1	IF_3
0x4005452	      0xe98dfcffff	                           jmp 0x40050e4	      2238	normal.c	FUNCTION_8	ELSE_1	IF_3
0x4005457	        0x837b6000	               cmp dword [rbx + 0x60], 0	      2238	normal.c	FUNCTION_8	ELSE_1	IF_3
0x400545b	     0xf8572fcffff	                           jne 0x40050d3	      2238	normal.c	FUNCTION_8	ELSE_1	IF_3
0x4005461	      0xe989fcffff	                           jmp 0x40050ef	      2238	normal.c	FUNCTION_8	ELSE_1	IF_3
0x4005466	      0xe800000000	                          call 0x400546b	      2151	normal.c	FUNCTION_6
0x400546b	        0x4883c438	                           add rsp, 0x38	      2151	normal.c	FUNCTION_6
0x400546f	              0x5b	                                 pop rbx	      2151	normal.c	FUNCTION_6
0x4005470	              0x5d	                                 pop rbp	      2151	normal.c	FUNCTION_6
0x4005471	            0x415c	                                 pop r12	      2151	normal.c	FUNCTION_6
0x4005473	            0x415d	                                 pop r13	      2151	normal.c	FUNCTION_6
0x4005475	            0x415e	                                 pop r14	      2151	normal.c	FUNCTION_6
0x4005477	            0x415f	                                 pop r15	      2151	normal.c	FUNCTION_6
0x4005479	              0xc3	                                     ret	      2151	normal.c	FUNCTION_6
may_start_select	CALL,3:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,0:IF,0	17
0x4008cf6	              0x53	                                push rbx	      7786	normal.c	FUNCTION_103
0x4008cf7	            0x89fb	                            mov ebx, edi	      7786	normal.c	FUNCTION_103
0x4008cf9	      0xe800000000	                          call 0x4008cfe	      7787	normal.c	FUNCTION_103	CALL_2
0x4008cfe	            0x85c0	                           test eax, eax	      7788	normal.c	FUNCTION_103	CALL_3
0x4008d00	            0x7420	                            je 0x4008d22	      7788	normal.c	FUNCTION_103	CALL_3
0x4008d02	      0xe800000000	                          call 0x4008d07	      7787	normal.c	FUNCTION_103	CALL_2
0x4008d07	            0x85c0	                           test eax, eax	      7787	normal.c	FUNCTION_103	CALL_2
0x4008d09	            0x7417	                            je 0x4008d22	      7787	normal.c	FUNCTION_103	CALL_2
0x4008d0b	            0x89de	                            mov esi, ebx	      7788	normal.c	FUNCTION_103	CALL_3
0x4008d0d	    0x488b3d000000	            mov rdi, qword [0x04008d14] 	      7788	normal.c	FUNCTION_103	CALL_3
0x4008d14	      0xe800000000	                          call 0x4008d19	      7788	normal.c	FUNCTION_103	CALL_3
0x4008d19	          0x4885c0	                           test rax, rax	      7788	normal.c	FUNCTION_103	CALL_3
0x4008d1c	           0xf95c0	                                setne al	      7788	normal.c	FUNCTION_103	CALL_3
0x4008d1f	           0xfb6c0	                           movzx eax, al	      7788	normal.c	FUNCTION_103	CALL_3
0x4008d22	    0x890500000000	            mov dword [0x04008d28], eax 	      7787	normal.c	FUNCTION_103	CALL_2
0x4008d28	              0x5b	                                 pop rbx	      7789	normal.c	FUNCTION_103
0x4008d29	              0xc3	                                     ret	      7789	normal.c	FUNCTION_103
nv_cursormark	CALL,5:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,2:IF,4	52
0x40033af	            0x4154	                                push r12	      7410	normal.c	FUNCTION_93
0x40033b1	              0x55	                                push rbp	      7410	normal.c	FUNCTION_93
0x40033b2	              0x53	                                push rbx	      7410	normal.c	FUNCTION_93
0x40033b3	          0x4889fb	                            mov rbx, rdi	      7410	normal.c	FUNCTION_93
0x40033b6	            0x89f5	                            mov ebp, esi	      7410	normal.c	FUNCTION_93
0x40033b8	          0x4989d4	                            mov r12, rdx	      7410	normal.c	FUNCTION_93
0x40033bb	          0x4889d7	                            mov rdi, rdx	      7411	normal.c	FUNCTION_93	IF_1	CALL_1
0x40033be	      0xe800000000	                          call 0x40033c3	      7411	normal.c	FUNCTION_93	IF_1	CALL_1
0x40033c3	            0x85c0	                           test eax, eax	      7411	normal.c	FUNCTION_93	IF_1	CALL_1
0x40033c5	            0x7520	                           jne 0x40033e7	      7411	normal.c	FUNCTION_93	IF_1	CALL_1
0x40033c7	          0x488b03	                    mov rax, qword [rbx]	      7412	normal.c	FUNCTION_93	CALL_2
0x40033ca	    0xc70000000000	                      mov dword [rax], 0	      3676	normal.c	FUNCTION_24
0x40033d0	    0xc74004000000	                  mov dword [rax + 4], 0	      3677	normal.c	FUNCTION_24
0x40033d7	    0xc7400c000000	                mov dword [rax + 0xc], 0	      3678	normal.c	FUNCTION_24
0x40033de	    0xc74010000000	               mov dword [rax + 0x10], 0	      3679	normal.c	FUNCTION_24
0x40033e5	            0xeb4d	                           jmp 0x4003434	      3679	normal.c	FUNCTION_24
0x40033e7	          0x8b430c	              mov eax, dword [rbx + 0xc]	      7416	normal.c	FUNCTION_93	ELSE_1	IF_2
0x40033ea	          0x83e827	                           sub eax, 0x27	      7416	normal.c	FUNCTION_93	ELSE_1	IF_2
0x40033ed	          0x83f839	                           cmp eax, 0x39	      7416	normal.c	FUNCTION_93	ELSE_1	IF_2
0x40033f0	            0x7715	                            ja 0x4003407	      7416	normal.c	FUNCTION_93	ELSE_1	IF_2
0x40033f2	    0x48ba01000000	          movabs rdx, 0x250000000000001 	      7418	normal.c	FUNCTION_93	ELSE_1	IF_2
0x40033fc	        0x480fa3c2	                             bt rdx, rax	      7418	normal.c	FUNCTION_93	ELSE_1	IF_2
0x4003400	            0x7305	                           jae 0x4003407	      7418	normal.c	FUNCTION_93	ELSE_1	IF_2
0x4003402	      0xe800000000	                          call 0x4003407	      7419	normal.c	FUNCTION_93	ELSE_1	CALL_3
0x4003407	        0x498b3424	                    mov rsi, qword [r12]	      7420	normal.c	FUNCTION_93	ELSE_1
0x400340b	      0x498b7c2408	                mov rdi, qword [r12 + 8]	      7420	normal.c	FUNCTION_93	ELSE_1
0x4003410	    0x488b05000000	            mov rax, qword [0x04003417] 	      7420	normal.c	FUNCTION_93	ELSE_1
0x4003417	        0x48897038	             mov qword [rax + 0x38], rsi	      7420	normal.c	FUNCTION_93	ELSE_1
0x400341b	        0x48897840	             mov qword [rax + 0x40], rdi	      7420	normal.c	FUNCTION_93	ELSE_1
0x400341f	            0x85ed	                           test ebp, ebp	      7421	normal.c	FUNCTION_93	ELSE_1	IF_3
0x4003421	            0x740c	                            je 0x400342f	      7421	normal.c	FUNCTION_93	ELSE_1	IF_3
0x4003423	      0xbf05000000	                              mov edi, 5	      7422	normal.c	FUNCTION_93	ELSE_1	CALL_4
0x4003428	      0xe800000000	                          call 0x400342d	      7422	normal.c	FUNCTION_93	ELSE_1	CALL_4
0x400342d	            0xeb05	                           jmp 0x4003434	      7422	normal.c	FUNCTION_93	ELSE_1	CALL_4
0x400342f	      0xe800000000	                          call 0x4003434	      7424	normal.c	FUNCTION_93	ELSE_1	CALL_5
0x4003434	          0x488b03	                    mov rax, qword [rbx]	      7426	normal.c	FUNCTION_93
0x4003437	            0x85ed	                           test ebp, ebp	      7426	normal.c	FUNCTION_93
0x4003439	           0xf95c2	                                setne dl	      7426	normal.c	FUNCTION_93
0x400343c	           0xfb6d2	                           movzx edx, dl	      7426	normal.c	FUNCTION_93
0x400343f	          0x895008	                mov dword [rax + 8], edx	      7426	normal.c	FUNCTION_93
0x4003442	        0x837b0c60	            cmp dword [rbx + 0xc], 0x60 	      7427	normal.c	FUNCTION_93	IF_4
0x4003446	            0x750a	                           jne 0x4003452	      7427	normal.c	FUNCTION_93	IF_4
0x4003448	          0x488b03	                    mov rax, qword [rbx]	      7428	normal.c	FUNCTION_93	IF_4
0x400344b	    0xc74010010000	               mov dword [rax + 0x10], 1	      7428	normal.c	FUNCTION_93	IF_4
0x4003452	          0x488b03	                    mov rax, qword [rbx]	      7429	normal.c	FUNCTION_93
0x4003455	    0xc74014000000	               mov dword [rax + 0x14], 0	      7429	normal.c	FUNCTION_93
0x400345c	    0x488b05000000	            mov rax, qword [0x04003463] 	      7430	normal.c	FUNCTION_93
0x4003463	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      7430	normal.c	FUNCTION_93
0x400346a	              0x5b	                                 pop rbx	      7431	normal.c	FUNCTION_93
0x400346b	              0x5d	                                 pop rbp	      7431	normal.c	FUNCTION_93
0x400346c	            0x415c	                                 pop r12	      7431	normal.c	FUNCTION_93
0x400346e	              0xc3	                                     ret	      7431	normal.c	FUNCTION_93
find_ident_at_pos	CALL,25:SWITCH,0:DO,0:FOR,1:functions,0:WHILE,6:ELSE,5:IF,12	382
0x400391b	            0x4157	                                push r15	      3442	normal.c	FUNCTION_19
0x400391d	            0x4156	                                push r14	      3442	normal.c	FUNCTION_19
0x400391f	            0x4155	                                push r13	      3442	normal.c	FUNCTION_19
0x4003921	            0x4154	                                push r12	      3442	normal.c	FUNCTION_19
0x4003923	              0x55	                                push rbp	      3442	normal.c	FUNCTION_19
0x4003924	              0x53	                                push rbx	      3442	normal.c	FUNCTION_19
0x4003925	        0x4883ec48	                           sub rsp, 0x48	      3442	normal.c	FUNCTION_19
0x4003929	        0x89542410	             mov dword [rsp + 0x10], edx	      3442	normal.c	FUNCTION_19
0x400392d	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      3442	normal.c	FUNCTION_19
0x4003932	          0x4489c3	                            mov ebx, r8d	      3442	normal.c	FUNCTION_19
0x4003935	      0x448944240c	              mov dword [rsp + 0xc], r8d	      3442	normal.c	FUNCTION_19
0x400393a	    0x64488b042528	                mov rax, qword fs:[0x28]	      3442	normal.c	FUNCTION_19
0x4003943	      0x4889442438	             mov qword [rsp + 0x38], rax	      3442	normal.c	FUNCTION_19
0x4003948	            0x31c0	                            xor eax, eax	      3442	normal.c	FUNCTION_19
0x400394a	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	      3444	normal.c	FUNCTION_19
0x4003952	    0xc74424340000	               mov dword [rsp + 0x34], 0	      3451	normal.c	FUNCTION_19
0x400395a	        0x488b7f08	                mov rdi, qword [rdi + 8]	      3457	normal.c	FUNCTION_19	CALL_1
0x400395e	      0xba00000000	                              mov edx, 0	      3457	normal.c	FUNCTION_19	CALL_1
0x4003963	      0xe800000000	                          call 0x4003968	      3457	normal.c	FUNCTION_19	CALL_1
0x4003968	          0x4889c5	                            mov rbp, rax	      3457	normal.c	FUNCTION_19	CALL_1
0x400396b	          0x4189dd	                           mov r13d, ebx	      3458	normal.c	FUNCTION_19	FOR_1
0x400396e	        0x4183e501	                             and r13d, 1	      3458	normal.c	FUNCTION_19	FOR_1
0x4003972	        0x410f94c4	                               sete r12b	      3458	normal.c	FUNCTION_19	FOR_1
0x4003976	        0x450fb6e4	                        movzx r12d, r12b	      3458	normal.c	FUNCTION_19	FOR_1
0x400397a	    0x41be00000000	                             mov r14d, 0	      3458	normal.c	FUNCTION_19	FOR_1
0x4003980	            0x89d8	                            mov eax, ebx	      3521	normal.c	FUNCTION_19	FOR_1	IF_4	IF_8
0x4003982	            0xd1e8	                              shr eax, 1	      3521	normal.c	FUNCTION_19	FOR_1	IF_4	IF_8
0x4003984	          0x83f001	                              xor eax, 1	      3521	normal.c	FUNCTION_19	FOR_1	IF_4	IF_8
0x4003987	          0x83e001	                              and eax, 1	      3521	normal.c	FUNCTION_19	FOR_1	IF_4	IF_8
0x400398a	        0x88442417	               mov byte [rsp + 0x17], al	      3521	normal.c	FUNCTION_19	FOR_1	IF_4	IF_8
0x400398e	        0x8b442410	            mov eax, dword [rsp + 0x10] 	      3463	normal.c	FUNCTION_19	FOR_1
0x4003992	        0x8944242c	             mov dword [rsp + 0x2c], eax	      3463	normal.c	FUNCTION_19	FOR_1
0x4003996	    0x833d00000000	               cmp dword [0x0400399d], 0	      3465	normal.c	FUNCTION_19	FOR_1	IF_1
0x400399d	            0x751b	                           jne 0x40039ba	      3465	normal.c	FUNCTION_19	FOR_1	IF_1
0x400399f	            0x4898	                                    cdqe	      3480	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2
0x40039a1	       0xfb6440500	             movzx eax, byte [rbp + rax]	      3480	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2
0x40039a6	        0x8b5c240c	              mov ebx, dword [rsp + 0xc]	      3482	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2
0x40039aa	          0x83e304	                              and ebx, 4	      3482	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2
0x40039ad	            0x84c0	                             test al, al	      3480	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2
0x40039af	     0xf858d000000	                           jne 0x4003a42	      3480	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2
0x40039b5	      0xe9bf000000	                           jmp 0x4003a79	      3480	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2
0x40039ba	      0x48637c2410	         movsxd rdi, dword [rsp + 0x10] 	      3467	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1
0x40039bf	          0x4801ef	                            add rdi, rbp	      3467	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1
0x40039c2	           0xfb607	                   movzx eax, byte [rdi]	      3467	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1
0x40039c5	            0x84c0	                             test al, al	      3467	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1
0x40039c7	     0xf84ac000000	                            je 0x4003a79	      3467	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1
0x40039cd	        0x8b5c240c	              mov ebx, dword [rsp + 0xc]	      3470	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1	IF_2
0x40039d1	          0xc1eb02	                              shr ebx, 2	      3470	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1	IF_2
0x40039d4	          0x83e301	                              and ebx, 1	      3470	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1	IF_2
0x40039d7	            0x3c5d	                            cmp al, 0x5d	      3470	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1	IF_2
0x40039d9	            0x7515	                           jne 0x40039f0	      3470	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1	IF_2
0x40039db	            0x84db	                             test bl, bl	      3470	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1	IF_2
0x40039dd	            0x7411	                            je 0x40039f0	      3470	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1	IF_2
0x40039df	      0xe995000000	                           jmp 0x4003a79	      3470	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1	IF_2
0x40039e4	            0x3c5d	                            cmp al, 0x5d	      3470	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1	IF_2
0x40039e6	            0x7508	                           jne 0x40039f0	      3470	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1	IF_2
0x40039e8	            0x84db	                             test bl, bl	      3470	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1	IF_2
0x40039ea	     0xf8589000000	                           jne 0x4003a79	      3470	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1	IF_2
0x40039f0	      0xe800000000	                          call 0x40039f5	      3472	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1	CALL_2
0x40039f5	          0x4189c6	                           mov r14d, eax	      3472	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1	CALL_2
0x40039f8	            0x85c0	                           test eax, eax	      3473	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1	IF_3
0x40039fa	            0x740b	                            je 0x4003a07	      3473	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1	IF_3
0x40039fc	        0x4183fc01	                             cmp r12d, 1	      3473	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1	IF_3
0x4003a00	            0x7477	                            je 0x4003a79	      3473	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1	IF_3
0x4003a02	          0x83f801	                              cmp eax, 1	      3473	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1	IF_3
0x4003a05	            0x7572	                           jne 0x4003a79	      3473	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1	IF_3
0x4003a07	      0x48637c242c	         movsxd rdi, dword [rsp + 0x2c] 	      3475	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1
0x4003a0c	          0x4801ef	                            add rdi, rbp	      3475	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1
0x4003a0f	    0xff1500000000	                 call qword [0x04003a15]	      3475	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1
0x4003a15	         0x344242c	             add eax, dword [rsp + 0x2c]	      3475	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1
0x4003a19	        0x8944242c	             mov dword [rsp + 0x2c], eax	      3475	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1
0x4003a1d	          0x4863f8	                         movsxd rdi, eax	      3467	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1
0x4003a20	          0x4801ef	                            add rdi, rbp	      3467	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1
0x4003a23	           0xfb607	                   movzx eax, byte [rdi]	      3467	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1
0x4003a26	            0x84c0	                             test al, al	      3467	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1
0x4003a28	            0x75ba	                           jne 0x40039e4	      3467	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1
0x4003a2a	            0xeb4d	                           jmp 0x4003a79	      3467	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1
0x4003a2c	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	      3484	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2
0x4003a30	          0x83c001	                              add eax, 1	      3484	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2
0x4003a33	        0x8944242c	             mov dword [rsp + 0x2c], eax	      3484	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2
0x4003a37	            0x4898	                                    cdqe	      3480	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2
0x4003a39	       0xfb6440500	             movzx eax, byte [rbp + rax]	      3480	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2
0x4003a3e	            0x84c0	                             test al, al	      3480	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2
0x4003a40	            0x7437	                            je 0x4003a79	      3480	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2
0x4003a42	          0x4585e4	                         test r12d, r12d	      3480	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2
0x4003a45	            0x750e	                           jne 0x4003a55	      3480	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2
0x4003a47	           0xfb6f8	                           movzx edi, al	      3481	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2	CALL_4
0x4003a4a	      0xe800000000	                          call 0x4003a4f	      3481	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2	CALL_4
0x4003a4f	            0x85c0	                           test eax, eax	      3481	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2	CALL_4
0x4003a51	            0x740a	                            je 0x4003a5d	      3481	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2	CALL_4
0x4003a53	            0xeb24	                           jmp 0x4003a79	      3481	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2	CALL_4
0x4003a55	            0x3c20	                            cmp al, 0x20	      3481	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2	CALL_4
0x4003a57	            0x7404	                            je 0x4003a5d	      3481	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2	CALL_4
0x4003a59	            0x3c09	                               cmp al, 9	      3481	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2	CALL_4
0x4003a5b	            0x751c	                           jne 0x4003a79	      3481	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2	CALL_4
0x4003a5d	        0x895c2408	                mov dword [rsp + 8], ebx	      3482	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2
0x4003a61	            0x85db	                           test ebx, ebx	      3482	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2
0x4003a63	            0x74c7	                            je 0x4003a2c	      3482	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2
0x4003a65	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	      3482	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2
0x4003a69	          0x4863f8	                         movsxd rdi, eax	      3482	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2
0x4003a6c	          0x4801ef	                            add rdi, rbp	      3482	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2
0x4003a6f	          0x803f5d	                    cmp byte [rdi], 0x5d	      3482	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2
0x4003a72	            0x75b8	                           jne 0x4003a2c	      3482	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2
0x4003a74	      0xe999030000	                           jmp 0x4003e12	      3482	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2
0x4003a79	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	      3487	normal.c	FUNCTION_19	FOR_1
0x4003a7d	          0x4863f8	                         movsxd rdi, eax	      3487	normal.c	FUNCTION_19	FOR_1
0x4003a80	          0x4801ef	                            add rdi, rbp	      3487	normal.c	FUNCTION_19	FOR_1
0x4003a83	          0x803f5d	                    cmp byte [rdi], 0x5d	      3487	normal.c	FUNCTION_19	FOR_1
0x4003a86	           0xf94c2	                                 sete dl	      3487	normal.c	FUNCTION_19	FOR_1
0x4003a89	           0xfb6d2	                           movzx edx, dl	      3487	normal.c	FUNCTION_19	FOR_1
0x4003a8c	        0x89542434	             mov dword [rsp + 0x34], edx	      3487	normal.c	FUNCTION_19	FOR_1
0x4003a90	    0x833d00000000	               cmp dword [0x04003a97], 0	      3493	normal.c	FUNCTION_19	FOR_1	IF_4
0x4003a97	            0x7514	                           jne 0x4003aad	      3493	normal.c	FUNCTION_19	FOR_1	IF_4
0x4003a99	        0x8b5c240c	              mov ebx, dword [rsp + 0xc]	      3533	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4
0x4003a9d	          0x83e304	                              and ebx, 4	      3533	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4
0x4003aa0	            0x85c0	                           test eax, eax	      3527	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4
0x4003aa2	     0xf8ffa000000	                            jg 0x4003ba2	      3527	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4
0x4003aa8	      0xe95d010000	                           jmp 0x4003c0a	      3527	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4
0x4003aad	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      3496	normal.c	FUNCTION_19	FOR_1	IF_4	IF_5
0x4003ab1	          0x83e004	                              and eax, 4	      3496	normal.c	FUNCTION_19	FOR_1	IF_4	IF_5
0x4003ab4	        0x89442408	                mov dword [rsp + 8], eax	      3496	normal.c	FUNCTION_19	FOR_1	IF_4	IF_5
0x4003ab8	            0x742f	                            je 0x4003ae9	      3496	normal.c	FUNCTION_19	FOR_1	IF_4	IF_5
0x4003aba	          0x803f5d	                    cmp byte [rdi], 0x5d	      3496	normal.c	FUNCTION_19	FOR_1	IF_4	IF_5
0x4003abd	            0x752a	                           jne 0x4003ae9	      3496	normal.c	FUNCTION_19	FOR_1	IF_4	IF_5
0x4003abf	      0xbf00000000	                              mov edi, 0	      3497	normal.c	FUNCTION_19	FOR_1	IF_4	CALL_5
0x4003ac4	      0xe800000000	                          call 0x4003ac9	      3497	normal.c	FUNCTION_19	FOR_1	IF_4	CALL_5
0x4003ac9	          0x4189c6	                           mov r14d, eax	      3497	normal.c	FUNCTION_19	FOR_1	IF_4	CALL_5
0x4003acc	        0x8b5c242c	            mov ebx, dword [rsp + 0x2c] 	      3500	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3
0x4003ad0	          0x4585f6	                         test r14d, r14d	      3500	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3
0x4003ad3	        0x410f95c7	                              setne r15b	      3500	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3
0x4003ad7	            0x85db	                           test ebx, ebx	      3500	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3
0x4003ad9	     0xf8e8d000000	                           jle 0x4003b6c	      3500	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3
0x4003adf	          0x4584ff	                         test r15b, r15b	      3500	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3
0x4003ae2	            0x750f	                           jne 0x4003af3	      3500	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3
0x4003ae4	      0xe983000000	                           jmp 0x4003b6c	      3500	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3
0x4003ae9	      0xe800000000	                          call 0x4003aee	      3499	normal.c	FUNCTION_19	FOR_1	IF_4	CALL_6
0x4003aee	          0x4189c6	                           mov r14d, eax	      3499	normal.c	FUNCTION_19	FOR_1	IF_4	CALL_6
0x4003af1	            0xebd9	                           jmp 0x4003acc	      3499	normal.c	FUNCTION_19	FOR_1	IF_4	CALL_6
0x4003af3	          0x4863c3	                         movsxd rax, ebx	      3502	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3
0x4003af6	      0x488d7405ff	                lea rsi, [rbp + rax - 1]	      3502	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3
0x4003afb	          0x4889ef	                            mov rdi, rbp	      3502	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3
0x4003afe	    0xff1500000000	                 call qword [0x04003b04]	      3502	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3
0x4003b04	          0x83eb01	                              sub ebx, 1	      3502	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3
0x4003b07	            0x29c3	                            sub ebx, eax	      3502	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3
0x4003b09	        0x895c2430	             mov dword [rsp + 0x30], ebx	      3502	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3
0x4003b0d	          0x4863db	                         movsxd rbx, ebx	      3503	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3	CALL_7
0x4003b10	      0x488d7c1d00	                    lea rdi, [rbp + rbx]	      3503	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3	CALL_7
0x4003b15	      0xe800000000	                          call 0x4003b1a	      3503	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3	CALL_7
0x4003b1a	          0x4139c6	                           cmp r14d, eax	      3504	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3	IF_6
0x4003b1d	            0x743c	                            je 0x4003b5b	      3504	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3	IF_6
0x4003b1f	          0x4585e4	                         test r12d, r12d	      3507	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3	IF_6
0x4003b22	           0xf94c2	                                 sete dl	      3507	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3	IF_6
0x4003b25	          0x4408ea	                             or dl, r13b	      3507	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3	IF_6
0x4003b28	            0x7504	                           jne 0x4003b2e	      3507	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3	IF_6
0x4003b2a	            0x85c0	                           test eax, eax	      3507	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3	IF_6
0x4003b2c	            0x752d	                           jne 0x4003b5b	      3507	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3	IF_6
0x4003b2e	      0x837c240800	                  cmp dword [rsp + 8], 0	      3508	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3	IF_6
0x4003b33	            0x7437	                            je 0x4003b6c	      3508	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3	IF_6
0x4003b35	        0x8b7c2430	            mov edi, dword [rsp + 0x30] 	      3509	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3	IF_6
0x4003b39	            0x85ff	                           test edi, edi	      3509	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3	IF_6
0x4003b3b	            0x742f	                            je 0x4003b6c	      3509	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3	IF_6
0x4003b3d	          0x4863ff	                         movsxd rdi, edi	      3510	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3	IF_6	CALL_8
0x4003b40	          0x4801ef	                            add rdi, rbp	      3510	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3	IF_6	CALL_8
0x4003b43	      0xb9ffffffff	                     mov ecx, 0xffffffff	      3510	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3	IF_6	CALL_8
0x4003b48	      0x488d542434	                   lea rdx, [rsp + 0x34]	      3510	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3	IF_6	CALL_8
0x4003b4d	      0x488d742430	                   lea rsi, [rsp + 0x30]	      3510	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3	IF_6	CALL_8
0x4003b52	      0xe8f0c5ffff	              call sym.find_is_eval_item	      3510	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3	IF_6	CALL_8
0x4003b57	            0x85c0	                           test eax, eax	      3510	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3	IF_6	CALL_8
0x4003b59	            0x7411	                            je 0x4003b6c	      3510	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3	IF_6	CALL_8
0x4003b5b	        0x8b5c2430	            mov ebx, dword [rsp + 0x30] 	      3514	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3
0x4003b5f	        0x895c242c	             mov dword [rsp + 0x2c], ebx	      3514	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3
0x4003b63	            0x85db	                           test ebx, ebx	      3500	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3
0x4003b65	            0x7e05	                           jle 0x4003b6c	      3500	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3
0x4003b67	          0x4584ff	                         test r15b, r15b	      3500	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3
0x4003b6a	            0x7587	                           jne 0x4003af3	      3500	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3
0x4003b6c	        0x4183fe02	                             cmp r14d, 2	      3500	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3
0x4003b70	      0xb802000000	                              mov eax, 2	      3500	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3
0x4003b75	        0x440f4ff0	                         cmovg r14d, eax	      3500	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3
0x4003b79	      0x807c241700	                cmp byte [rsp + 0x17], 0	      3521	normal.c	FUNCTION_19	FOR_1	IF_4	IF_8
0x4003b7e	     0xf85bb000000	                           jne 0x4003c3f	      3521	normal.c	FUNCTION_19	FOR_1	IF_4	IF_8
0x4003b84	        0x4183fe02	                             cmp r14d, 2	      3521	normal.c	FUNCTION_19	FOR_1	IF_4	IF_8
0x4003b88	     0xf859e000000	                           jne 0x4003c2c	      3521	normal.c	FUNCTION_19	FOR_1	IF_4	IF_8
0x4003b8e	      0xe9ac000000	                           jmp 0x4003c3f	      3521	normal.c	FUNCTION_19	FOR_1	IF_4	IF_8
0x4003b93	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	      3538	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4
0x4003b97	          0x83e801	                              sub eax, 1	      3538	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4
0x4003b9a	        0x8944242c	             mov dword [rsp + 0x2c], eax	      3538	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4
0x4003b9e	            0x85c0	                           test eax, eax	      3527	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4
0x4003ba0	            0x7e68	                           jle 0x4003c0a	      3527	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4
0x4003ba2	          0x4585e4	                         test r12d, r12d	      3527	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4
0x4003ba5	            0x7512	                           jne 0x4003bb9	      3527	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4
0x4003ba7	            0x4898	                                    cdqe	      3529	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4	CALL_9
0x4003ba9	       0xfb67c05ff	         movzx edi, byte [rbp + rax - 1]	      3529	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4	CALL_9
0x4003bae	      0xe800000000	                          call 0x4003bb3	      3529	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4	CALL_9
0x4003bb3	            0x85c0	                           test eax, eax	      3528	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4
0x4003bb5	            0x75dc	                           jne 0x4003b93	      3528	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4
0x4003bb7	            0xeb25	                           jmp 0x4003bde	      3528	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4
0x4003bb9	            0x4898	                                    cdqe	      3530	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4	CALL_10
0x4003bbb	       0xfb67c05ff	         movzx edi, byte [rbp + rax - 1]	      3530	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4	CALL_10
0x4003bc0	        0x4080ff20	                           cmp dil, 0x20	      3531	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4
0x4003bc4	            0x7418	                            je 0x4003bde	      3531	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4
0x4003bc6	        0x4080ff09	                              cmp dil, 9	      3531	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4
0x4003bca	            0x7412	                            je 0x4003bde	      3531	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4
0x4003bcc	          0x4585ed	                         test r13d, r13d	      3531	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4
0x4003bcf	            0x74c2	                            je 0x4003b93	      3531	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4
0x4003bd1	        0x400fb6ff	                          movzx edi, dil	      3532	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4	CALL_11
0x4003bd5	      0xe800000000	                          call 0x4003bda	      3532	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4	CALL_11
0x4003bda	            0x85c0	                           test eax, eax	      3533	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4
0x4003bdc	            0x74b5	                            je 0x4003b93	      3533	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4
0x4003bde	            0x85db	                           test ebx, ebx	      3533	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4
0x4003be0	            0x7428	                            je 0x4003c0a	      3533	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4
0x4003be2	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	      3534	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4
0x4003be6	          0x83f801	                              cmp eax, 1	      3534	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4
0x4003be9	            0x7e1f	                           jle 0x4003c0a	      3534	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4
0x4003beb	            0x4898	                                    cdqe	      3535	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4	CALL_12
0x4003bed	      0x488d7c05ff	                lea rdi, [rbp + rax - 1]	      3535	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4	CALL_12
0x4003bf2	      0xb9ffffffff	                     mov ecx, 0xffffffff	      3535	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4	CALL_12
0x4003bf7	      0x488d542434	                   lea rdx, [rsp + 0x34]	      3535	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4	CALL_12
0x4003bfc	      0x488d74242c	                   lea rsi, [rsp + 0x2c]	      3535	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4	CALL_12
0x4003c01	      0xe841c5ffff	              call sym.find_is_eval_item	      3535	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4	CALL_12
0x4003c06	            0x85c0	                           test eax, eax	      3535	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4	CALL_12
0x4003c08	            0x7589	                           jne 0x4003b93	      3535	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4	CALL_12
0x4003c0a	      0xf644240c02	                test byte [rsp + 0xc], 2	      3542	normal.c	FUNCTION_19	FOR_1	ELSE_3	IF_9	CALL_13
0x4003c0f	     0xf842e020000	                            je 0x4003e43	      3542	normal.c	FUNCTION_19	FOR_1	ELSE_3	IF_9	CALL_13
0x4003c15	      0x486344242c	         movsxd rax, dword [rsp + 0x2c] 	      3542	normal.c	FUNCTION_19	FOR_1	ELSE_3	IF_9	CALL_13
0x4003c1a	       0xfb67c0500	             movzx edi, byte [rbp + rax]	      3542	normal.c	FUNCTION_19	FOR_1	ELSE_3	IF_9	CALL_13
0x4003c1f	      0xe800000000	                          call 0x4003c24	      3542	normal.c	FUNCTION_19	FOR_1	ELSE_3	IF_9	CALL_13
0x4003c24	            0x85c0	                           test eax, eax	      3542	normal.c	FUNCTION_19	FOR_1	ELSE_3	IF_9	CALL_13
0x4003c26	     0xf8500020000	                           jne 0x4003e2c	      3542	normal.c	FUNCTION_19	FOR_1	ELSE_3	IF_9	CALL_13
0x4003c2c	        0x4183c401	                             add r12d, 1	      3458	normal.c	FUNCTION_19	FOR_1
0x4003c30	        0x4183fc02	                             cmp r12d, 2	      3458	normal.c	FUNCTION_19	FOR_1
0x4003c34	     0xf8554fdffff	                           jne 0x400398e	      3458	normal.c	FUNCTION_19	FOR_1
0x4003c3a	      0xe91b020000	                           jmp 0x4003e5a	      3458	normal.c	FUNCTION_19	FOR_1
0x4003c3f	      0x486344242c	         movsxd rax, dword [rsp + 0x2c] 	      3547	normal.c	FUNCTION_19	IF_10
0x4003c44	       0xfb6440500	             movzx eax, byte [rbp + rax]	      3547	normal.c	FUNCTION_19	IF_10
0x4003c49	            0x84c0	                             test al, al	      3547	normal.c	FUNCTION_19	IF_10
0x4003c4b	            0x7422	                            je 0x4003c6f	      3547	normal.c	FUNCTION_19	IF_10
0x4003c4d	          0x4585e4	                         test r12d, r12d	      3547	normal.c	FUNCTION_19	IF_10
0x4003c50	            0x7570	                           jne 0x4003cc2	      3547	normal.c	FUNCTION_19	IF_10
0x4003c52	    0x833d00000000	               cmp dword [0x04003c59], 0	      3547	normal.c	FUNCTION_19	IF_10
0x4003c59	            0x7408	                            je 0x4003c63	      3547	normal.c	FUNCTION_19	IF_10
0x4003c5b	        0x4183fe02	                             cmp r14d, 2	      3547	normal.c	FUNCTION_19	IF_10
0x4003c5f	            0x750e	                           jne 0x4003c6f	      3547	normal.c	FUNCTION_19	IF_10
0x4003c61	            0xeb5f	                           jmp 0x4003cc2	      3547	normal.c	FUNCTION_19	IF_10
0x4003c63	           0xfb6f8	                           movzx edi, al	      3551	normal.c	FUNCTION_19	IF_10	CALL_14
0x4003c66	      0xe800000000	                          call 0x4003c6b	      3551	normal.c	FUNCTION_19	IF_10	CALL_14
0x4003c6b	            0x85c0	                           test eax, eax	      3547	normal.c	FUNCTION_19	IF_10
0x4003c6d	            0x7553	                           jne 0x4003cc2	      3547	normal.c	FUNCTION_19	IF_10
0x4003c6f	      0xf644240c02	                test byte [rsp + 0xc], 2	      3556	normal.c	FUNCTION_19	IF_10	IF_11
0x4003c74	            0x7426	                            je 0x4003c9c	      3556	normal.c	FUNCTION_19	IF_10	IF_11
0x4003c76	      0xba05000000	                              mov edx, 5	      3557	normal.c	FUNCTION_19	IF_10	CALL_16
0x4003c7b	      0xbe00000000	                              mov esi, 0	      3557	normal.c	FUNCTION_19	IF_10	CALL_16
0x4003c80	      0xbf00000000	                              mov edi, 0	      3557	normal.c	FUNCTION_19	IF_10	CALL_16
0x4003c85	      0xe800000000	                          call 0x4003c8a	      3557	normal.c	FUNCTION_19	IF_10	CALL_16
0x4003c8a	          0x4889c7	                            mov rdi, rax	      3557	normal.c	FUNCTION_19	IF_10	CALL_16
0x4003c8d	      0xe800000000	                          call 0x4003c92	      3557	normal.c	FUNCTION_19	IF_10	CALL_16
0x4003c92	      0xb800000000	                              mov eax, 0	      3560	normal.c	FUNCTION_19	IF_10
0x4003c97	      0xe964010000	                           jmp 0x4003e00	      3560	normal.c	FUNCTION_19	IF_10
0x4003c9c	      0xba05000000	                              mov edx, 5	      3559	normal.c	FUNCTION_19	IF_10	CALL_18
0x4003ca1	      0xbe00000000	                              mov esi, 0	      3559	normal.c	FUNCTION_19	IF_10	CALL_18
0x4003ca6	      0xbf00000000	                              mov edi, 0	      3559	normal.c	FUNCTION_19	IF_10	CALL_18
0x4003cab	      0xe800000000	                          call 0x4003cb0	      3559	normal.c	FUNCTION_19	IF_10	CALL_18
0x4003cb0	          0x4889c7	                            mov rdi, rax	      3559	normal.c	FUNCTION_19	IF_10	CALL_18
0x4003cb3	      0xe800000000	                          call 0x4003cb8	      3559	normal.c	FUNCTION_19	IF_10	CALL_18
0x4003cb8	      0xb800000000	                              mov eax, 0	      3560	normal.c	FUNCTION_19	IF_10
0x4003cbd	      0xe93e010000	                           jmp 0x4003e00	      3560	normal.c	FUNCTION_19	IF_10
0x4003cc2	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	      3562	normal.c	FUNCTION_19
0x4003cc6	          0x4863d0	                         movsxd rdx, eax	      3562	normal.c	FUNCTION_19
0x4003cc9	          0x4801d5	                            add rbp, rdx	      3562	normal.c	FUNCTION_19
0x4003ccc	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      3563	normal.c	FUNCTION_19
0x4003cd1	          0x488929	                    mov qword [rcx], rbp	      3563	normal.c	FUNCTION_19
0x4003cd4	    0xc74424340000	               mov dword [rsp + 0x34], 0	      3568	normal.c	FUNCTION_19
0x4003cdc	        0x8b5c2410	            mov ebx, dword [rsp + 0x10] 	      3569	normal.c	FUNCTION_19
0x4003ce0	            0x29c3	                            sub ebx, eax	      3569	normal.c	FUNCTION_19
0x4003ce2	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	      3570	normal.c	FUNCTION_19
0x4003cea	    0x833d00000000	               cmp dword [0x04003cf1], 0	      3572	normal.c	FUNCTION_19	IF_12
0x4003cf1	     0xf84a4000000	                            je 0x4003d9b	      3572	normal.c	FUNCTION_19	IF_12
0x4003cf7	          0x4889ef	                            mov rdi, rbp	      3575	normal.c	FUNCTION_19	IF_12	CALL_19
0x4003cfa	      0xe800000000	                          call 0x4003cff	      3575	normal.c	FUNCTION_19	IF_12	CALL_19
0x4003cff	          0x4189c5	                           mov r13d, eax	      3575	normal.c	FUNCTION_19	IF_12	CALL_19
0x4003d02	      0x48637c242c	         movsxd rdi, dword [rsp + 0x2c] 	      3576	normal.c	FUNCTION_19	IF_12	WHILE_5
0x4003d07	          0x4801ef	                            add rdi, rbp	      3576	normal.c	FUNCTION_19	IF_12	WHILE_5
0x4003d0a	      0x448b74240c	            mov r14d, dword [rsp + 0xc] 	      3579	normal.c	FUNCTION_19	IF_12	WHILE_5
0x4003d0f	        0x4183e604	                             and r14d, 4	      3579	normal.c	FUNCTION_19	IF_12	WHILE_5
0x4003d13	          0x803f00	                       cmp byte [rdi], 0	      3576	normal.c	FUNCTION_19	IF_12	WHILE_5
0x4003d16	            0x752c	                           jne 0x4003d44	      3576	normal.c	FUNCTION_19	IF_12	WHILE_5
0x4003d18	      0xe9df000000	                           jmp 0x4003dfc	      3576	normal.c	FUNCTION_19	IF_12	WHILE_5
0x4003d1d	      0x48637c242c	         movsxd rdi, dword [rsp + 0x2c] 	      3583	normal.c	FUNCTION_19	IF_12	WHILE_5
0x4003d22	          0x4801ef	                            add rdi, rbp	      3583	normal.c	FUNCTION_19	IF_12	WHILE_5
0x4003d25	    0xff1500000000	                 call qword [0x04003d2b]	      3583	normal.c	FUNCTION_19	IF_12	WHILE_5
0x4003d2b	         0x344242c	             add eax, dword [rsp + 0x2c]	      3583	normal.c	FUNCTION_19	IF_12	WHILE_5
0x4003d2f	        0x8944242c	             mov dword [rsp + 0x2c], eax	      3583	normal.c	FUNCTION_19	IF_12	WHILE_5
0x4003d33	            0x4898	                                    cdqe	      3576	normal.c	FUNCTION_19	IF_12	WHILE_5
0x4003d35	      0x488d7c0500	                    lea rdi, [rbp + rax]	      3576	normal.c	FUNCTION_19	IF_12	WHILE_5
0x4003d3a	          0x803f00	                       cmp byte [rdi], 0	      3576	normal.c	FUNCTION_19	IF_12	WHILE_5
0x4003d3d	            0x7505	                           jne 0x4003d44	      3576	normal.c	FUNCTION_19	IF_12	WHILE_5
0x4003d3f	      0xe9b8000000	                           jmp 0x4003dfc	      3576	normal.c	FUNCTION_19	IF_12	WHILE_5
0x4003d44	          0x4585e4	                         test r12d, r12d	      3576	normal.c	FUNCTION_19	IF_12	WHILE_5
0x4003d47	            0x750c	                           jne 0x4003d55	      3576	normal.c	FUNCTION_19	IF_12	WHILE_5
0x4003d49	      0xe800000000	                          call 0x4003d4e	      3577	normal.c	FUNCTION_19	IF_12	WHILE_5	CALL_20
0x4003d4e	          0x4139c5	                           cmp r13d, eax	      3577	normal.c	FUNCTION_19	IF_12	WHILE_5	CALL_20
0x4003d51	            0x750b	                           jne 0x4003d5e	      3577	normal.c	FUNCTION_19	IF_12	WHILE_5	CALL_20
0x4003d53	            0xebc8	                           jmp 0x4003d1d	      3577	normal.c	FUNCTION_19	IF_12	WHILE_5	CALL_20
0x4003d55	      0xe800000000	                          call 0x4003d5a	      3578	normal.c	FUNCTION_19	IF_12	WHILE_5	CALL_21
0x4003d5a	            0x85c0	                           test eax, eax	      3579	normal.c	FUNCTION_19	IF_12	WHILE_5
0x4003d5c	            0x75bf	                           jne 0x4003d1d	      3579	normal.c	FUNCTION_19	IF_12	WHILE_5
0x4003d5e	          0x4585f6	                         test r14d, r14d	      3579	normal.c	FUNCTION_19	IF_12	WHILE_5
0x4003d61	     0xf8495000000	                            je 0x4003dfc	      3579	normal.c	FUNCTION_19	IF_12	WHILE_5
0x4003d67	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	      3580	normal.c	FUNCTION_19	IF_12	WHILE_5
0x4003d6b	            0x39c3	                            cmp ebx, eax	      3580	normal.c	FUNCTION_19	IF_12	WHILE_5
0x4003d6d	     0xf8c89000000	                            jl 0x4003dfc	      3580	normal.c	FUNCTION_19	IF_12	WHILE_5
0x4003d73	            0x4898	                                    cdqe	      3581	normal.c	FUNCTION_19	IF_12	WHILE_5	CALL_22
0x4003d75	      0x488d7c0500	                    lea rdi, [rbp + rax]	      3581	normal.c	FUNCTION_19	IF_12	WHILE_5	CALL_22
0x4003d7a	      0xb901000000	                              mov ecx, 1	      3581	normal.c	FUNCTION_19	IF_12	WHILE_5	CALL_22
0x4003d7f	      0x488d542434	                   lea rdx, [rsp + 0x34]	      3581	normal.c	FUNCTION_19	IF_12	WHILE_5	CALL_22
0x4003d84	      0x488d74242c	                   lea rsi, [rsp + 0x2c]	      3581	normal.c	FUNCTION_19	IF_12	WHILE_5	CALL_22
0x4003d89	      0xe8b9c3ffff	              call sym.find_is_eval_item	      3581	normal.c	FUNCTION_19	IF_12	WHILE_5	CALL_22
0x4003d8e	            0x85c0	                           test eax, eax	      3581	normal.c	FUNCTION_19	IF_12	WHILE_5	CALL_22
0x4003d90	            0x758b	                           jne 0x4003d1d	      3581	normal.c	FUNCTION_19	IF_12	WHILE_5	CALL_22
0x4003d92	            0xeb68	                           jmp 0x4003dfc	      3581	normal.c	FUNCTION_19	IF_12	WHILE_5	CALL_22
0x4003d94	      0x8344242c01	               add dword [rsp + 0x2c], 1	      3594	normal.c	FUNCTION_19	ELSE_5	WHILE_6
0x4003d99	            0xeb09	                           jmp 0x4003da4	      3594	normal.c	FUNCTION_19	ELSE_5	WHILE_6
0x4003d9b	      0x448b6c240c	            mov r13d, dword [rsp + 0xc] 	      3589	normal.c	FUNCTION_19	ELSE_5	WHILE_6
0x4003da0	        0x4183e504	                             and r13d, 4	      3589	normal.c	FUNCTION_19	ELSE_5	WHILE_6
0x4003da4	          0x4585e4	                         test r12d, r12d	      3587	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_23
0x4003da7	            0x7515	                           jne 0x4003dbe	      3587	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_23
0x4003da9	      0x486344242c	         movsxd rax, dword [rsp + 0x2c] 	      3587	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_23
0x4003dae	       0xfb67c0500	             movzx edi, byte [rbp + rax]	      3587	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_23
0x4003db3	      0xe800000000	                          call 0x4003db8	      3587	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_23
0x4003db8	            0x85c0	                           test eax, eax	      3587	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_23
0x4003dba	            0x75d8	                           jne 0x4003d94	      3587	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_23
0x4003dbc	            0xeb12	                           jmp 0x4003dd0	      3587	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_23
0x4003dbe	      0x486344242c	         movsxd rax, dword [rsp + 0x2c] 	      3588	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_24
0x4003dc3	       0xfb6440500	             movzx eax, byte [rbp + rax]	      3588	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_24
0x4003dc8	            0xa8df	                           test al, 0xdf	      3588	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_24
0x4003dca	            0x7404	                            je 0x4003dd0	      3588	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_24
0x4003dcc	            0x3c09	                               cmp al, 9	      3588	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_24
0x4003dce	            0x75c4	                           jne 0x4003d94	      3588	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_24
0x4003dd0	          0x4585ed	                         test r13d, r13d	      3589	normal.c	FUNCTION_19	ELSE_5	WHILE_6
0x4003dd3	            0x7427	                            je 0x4003dfc	      3589	normal.c	FUNCTION_19	ELSE_5	WHILE_6
0x4003dd5	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	      3590	normal.c	FUNCTION_19	ELSE_5	WHILE_6
0x4003dd9	            0x39c3	                            cmp ebx, eax	      3590	normal.c	FUNCTION_19	ELSE_5	WHILE_6
0x4003ddb	            0x7c1f	                            jl 0x4003dfc	      3590	normal.c	FUNCTION_19	ELSE_5	WHILE_6
0x4003ddd	            0x4898	                                    cdqe	      3591	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_25
0x4003ddf	      0x488d7c0500	                    lea rdi, [rbp + rax]	      3591	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_25
0x4003de4	      0xb901000000	                              mov ecx, 1	      3591	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_25
0x4003de9	      0x488d542434	                   lea rdx, [rsp + 0x34]	      3591	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_25
0x4003dee	      0x488d74242c	                   lea rsi, [rsp + 0x2c]	      3591	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_25
0x4003df3	      0xe84fc3ffff	              call sym.find_is_eval_item	      3591	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_25
0x4003df8	            0x85c0	                           test eax, eax	      3591	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_25
0x4003dfa	            0x7598	                           jne 0x4003d94	      3591	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_25
0x4003dfc	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	      3597	normal.c	FUNCTION_19
0x4003e00	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	      3598	normal.c	FUNCTION_19
0x4003e05	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3598	normal.c	FUNCTION_19
0x4003e0e	            0x7464	                            je 0x4003e74	      3598	normal.c	FUNCTION_19
0x4003e10	            0xeb5d	                           jmp 0x4003e6f	      3598	normal.c	FUNCTION_19
0x4003e12	    0xc74424340100	               mov dword [rsp + 0x34], 1	      3487	normal.c	FUNCTION_19	FOR_1
0x4003e1a	    0x833d00000000	               cmp dword [0x04003e21], 0	      3493	normal.c	FUNCTION_19	FOR_1	IF_4
0x4003e21	     0xf8593fcffff	                           jne 0x4003aba	      3493	normal.c	FUNCTION_19	FOR_1	IF_4
0x4003e27	      0xe96dfcffff	                           jmp 0x4003a99	      3493	normal.c	FUNCTION_19	FOR_1	IF_4
0x4003e2c	      0x486344242c	         movsxd rax, dword [rsp + 0x2c] 	      3547	normal.c	FUNCTION_19	IF_10
0x4003e31	       0xfb6440500	             movzx eax, byte [rbp + rax]	      3547	normal.c	FUNCTION_19	IF_10
0x4003e36	            0x84c0	                             test al, al	      3547	normal.c	FUNCTION_19	IF_10
0x4003e38	     0xf8438feffff	                            je 0x4003c76	      3547	normal.c	FUNCTION_19	IF_10
0x4003e3e	      0xe90afeffff	                           jmp 0x4003c4d	      3547	normal.c	FUNCTION_19	IF_10
0x4003e43	      0x486344242c	         movsxd rax, dword [rsp + 0x2c] 	      3547	normal.c	FUNCTION_19	IF_10
0x4003e48	       0xfb6440500	             movzx eax, byte [rbp + rax]	      3547	normal.c	FUNCTION_19	IF_10
0x4003e4d	            0x84c0	                             test al, al	      3547	normal.c	FUNCTION_19	IF_10
0x4003e4f	     0xf8447feffff	                            je 0x4003c9c	      3547	normal.c	FUNCTION_19	IF_10
0x4003e55	      0xe9f3fdffff	                           jmp 0x4003c4d	      3547	normal.c	FUNCTION_19	IF_10
0x4003e5a	      0x486344242c	         movsxd rax, dword [rsp + 0x2c] 	      3547	normal.c	FUNCTION_19	IF_10
0x4003e5f	      0x807c050000	                 cmp byte [rbp + rax], 0	      3547	normal.c	FUNCTION_19	IF_10
0x4003e64	     0xf8405feffff	                            je 0x4003c6f	      3547	normal.c	FUNCTION_19	IF_10
0x4003e6a	      0xe953feffff	                           jmp 0x4003cc2	      3547	normal.c	FUNCTION_19	IF_10
0x4003e6f	      0xe800000000	                          call 0x4003e74	      3598	normal.c	FUNCTION_19
0x4003e74	        0x4883c448	                           add rsp, 0x48	      3598	normal.c	FUNCTION_19
0x4003e78	              0x5b	                                 pop rbx	      3598	normal.c	FUNCTION_19
0x4003e79	              0x5d	                                 pop rbp	      3598	normal.c	FUNCTION_19
0x4003e7a	            0x415c	                                 pop r12	      3598	normal.c	FUNCTION_19
0x4003e7c	            0x415d	                                 pop r13	      3598	normal.c	FUNCTION_19
0x4003e7e	            0x415e	                                 pop r14	      3598	normal.c	FUNCTION_19
0x4003e80	            0x415f	                                 pop r15	      3598	normal.c	FUNCTION_19
0x4003e82	              0xc3	                                     ret	      3598	normal.c	FUNCTION_19
nv_error	CALL,1:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,0:IF,0	5
0x400029d	        0x4883ec08	                              sub rsp, 8	      4163	normal.c	FUNCTION_39
0x40002a1	          0x488b3f	                    mov rdi, qword [rdi]	      4164	normal.c	FUNCTION_39	CALL_1
0x40002a4	      0xe88fffffff	                    call sym.clearopbeep	      4164	normal.c	FUNCTION_39	CALL_1
0x40002a9	        0x4883c408	                              add rsp, 8	      4165	normal.c	FUNCTION_39
0x40002ad	              0xc3	                                     ret	      4165	normal.c	FUNCTION_39
reset_VIsual	CALL,2:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,0:IF,1	9
0x40060bb	    0x833d00000000	               cmp dword [0x040060c2], 0	      3356	normal.c	FUNCTION_16	IF_1
0x40060c2	            0x7421	                            je 0x40060e5	      3356	normal.c	FUNCTION_16	IF_1
0x40060c4	        0x4883ec08	                              sub rsp, 8	      3355	normal.c	FUNCTION_16
0x40060c8	      0xe800000000	                          call 0x40060cd	      3358	normal.c	FUNCTION_16	IF_1	CALL_1
0x40060cd	      0xbf14000000	                           mov edi, 0x14	      3359	normal.c	FUNCTION_16	IF_1	CALL_2
0x40060d2	      0xe800000000	                          call 0x40060d7	      3359	normal.c	FUNCTION_16	IF_1	CALL_2
0x40060d7	    0xc70500000000	               mov dword [0x040060e1], 0	      3360	normal.c	FUNCTION_16	IF_1
0x40060e1	        0x4883c408	                              add rsp, 8	      3362	normal.c	FUNCTION_16
0x40060e5	            0xf3c3	                                     ret	      3362	normal.c	FUNCTION_16
nv_brace	CALL,4:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,1:IF,2	32
0x40017cd	              0x53	                                push rbx	      6889	normal.c	FUNCTION_83
0x40017ce	          0x4889fb	                            mov rbx, rdi	      6889	normal.c	FUNCTION_83
0x40017d1	          0x488b07	                    mov rax, qword [rdi]	      6890	normal.c	FUNCTION_83
0x40017d4	    0xc74008000000	                  mov dword [rax + 8], 0	      6890	normal.c	FUNCTION_83
0x40017db	          0x488b07	                    mov rax, qword [rdi]	      6891	normal.c	FUNCTION_83
0x40017de	    0xc74010010000	               mov dword [rax + 0x10], 1	      6891	normal.c	FUNCTION_83
0x40017e5	          0x488b07	                    mov rax, qword [rdi]	      6893	normal.c	FUNCTION_83
0x40017e8	    0xc74014000000	               mov dword [rax + 0x14], 0	      6893	normal.c	FUNCTION_83
0x40017ef	    0x488b05000000	            mov rax, qword [0x040017f6] 	      6894	normal.c	FUNCTION_83
0x40017f6	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      6894	normal.c	FUNCTION_83
0x40017fd	        0x488b7730	            mov rsi, qword [rdi + 0x30] 	      6896	normal.c	FUNCTION_83	IF_1	CALL_1
0x4001801	          0x8b7f38	            mov edi, dword [rdi + 0x38] 	      6896	normal.c	FUNCTION_83	IF_1	CALL_1
0x4001804	      0xe800000000	                          call 0x4001809	      6896	normal.c	FUNCTION_83	IF_1	CALL_1
0x4001809	            0x85c0	                           test eax, eax	      6896	normal.c	FUNCTION_83	IF_1	CALL_1
0x400180b	            0x750a	                           jne 0x4001817	      6896	normal.c	FUNCTION_83	IF_1	CALL_1
0x400180d	          0x488b3b	                    mov rdi, qword [rbx]	      6897	normal.c	FUNCTION_83	CALL_2
0x4001810	      0xe823eaffff	                    call sym.clearopbeep	      6897	normal.c	FUNCTION_83	CALL_2
0x4001815	            0xeb35	                           jmp 0x400184c	      6897	normal.c	FUNCTION_83	CALL_2
0x4001817	          0x488b3b	                    mov rdi, qword [rbx]	      6901	normal.c	FUNCTION_83	ELSE_1	CALL_3
0x400181a	      0xe8f2eeffff	                  call sym.adjust_cursor	      6901	normal.c	FUNCTION_83	ELSE_1	CALL_3
0x400181f	    0x488b05000000	            mov rax, qword [0x04001826] 	      6903	normal.c	FUNCTION_83	ELSE_1
0x4001826	    0xc74044000000	               mov dword [rax + 0x44], 0	      6903	normal.c	FUNCTION_83	ELSE_1
0x400182d	    0xf60500000000	               test byte [0x04001834], 2	      6906	normal.c	FUNCTION_83	ELSE_1	IF_2
0x4001834	            0x7416	                            je 0x400184c	      6906	normal.c	FUNCTION_83	ELSE_1	IF_2
0x4001836	    0x833d00000000	               cmp dword [0x0400183d], 0	      6906	normal.c	FUNCTION_83	ELSE_1	IF_2
0x400183d	            0x740d	                            je 0x400184c	      6906	normal.c	FUNCTION_83	ELSE_1	IF_2
0x400183f	          0x488b03	                    mov rax, qword [rbx]	      6906	normal.c	FUNCTION_83	ELSE_1	IF_2
0x4001842	          0x833800	                      cmp dword [rax], 0	      6906	normal.c	FUNCTION_83	ELSE_1	IF_2
0x4001845	            0x7505	                           jne 0x400184c	      6906	normal.c	FUNCTION_83	ELSE_1	IF_2
0x4001847	      0xe800000000	                          call 0x400184c	      6907	normal.c	FUNCTION_83	ELSE_1	CALL_4
0x400184c	              0x5b	                                 pop rbx	      6910	normal.c	FUNCTION_83
0x400184d	              0xc3	                                     ret	      6910	normal.c	FUNCTION_83
start_selection	CALL,2:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,0:IF,0	7
0x400bfc6	        0x4883ec08	                              sub rsp, 8	      7775	normal.c	FUNCTION_102
0x400bfca	      0xbf6b000000	                           mov edi, 0x6b	      7777	normal.c	FUNCTION_102	CALL_1
0x400bfcf	      0xe800000000	                          call 0x400bfd4	      7777	normal.c	FUNCTION_102	CALL_1
0x400bfd4	      0xbf76000000	                           mov edi, 0x76	      7778	normal.c	FUNCTION_102	CALL_2
0x400bfd9	      0xe8fa62ffff	            call sym.n_start_visual_mode	      7778	normal.c	FUNCTION_102	CALL_2
0x400bfde	        0x4883c408	                              add rsp, 8	      7779	normal.c	FUNCTION_102
0x400bfe2	              0xc3	                                     ret	      7779	normal.c	FUNCTION_102
nv_left	CALL,10:SWITCH,0:DO,0:FOR,1:functions,0:WHILE,0:ELSE,2:IF,9	105
0x4001470	            0x4154	                                push r12	      6091	normal.c	FUNCTION_71
0x4001472	              0x55	                                push rbp	      6091	normal.c	FUNCTION_71
0x4001473	              0x53	                                push rbx	      6091	normal.c	FUNCTION_71
0x4001474	          0x4889fb	                            mov rbx, rdi	      6091	normal.c	FUNCTION_71
0x4001477	    0x8b0500000000	            mov eax, dword [0x0400147d] 	      6094	normal.c	FUNCTION_71	IF_1
0x400147d	            0xa806	                              test al, 6	      6094	normal.c	FUNCTION_71	IF_1
0x400147f	            0x7418	                            je 0x4001499	      6094	normal.c	FUNCTION_71	IF_1
0x4001481	            0xa804	                              test al, 4	      6097	normal.c	FUNCTION_71	IF_1	IF_2
0x4001483	            0x7407	                            je 0x400148c	      6097	normal.c	FUNCTION_71	IF_1	IF_2
0x4001485	    0xc74738010000	               mov dword [rdi + 0x38], 1	      6098	normal.c	FUNCTION_71	IF_1	IF_2
0x400148c	          0x4889df	                            mov rdi, rbx	      6099	normal.c	FUNCTION_71	IF_1	CALL_1
0x400148f	      0xe876ffffff	                    call sym.nv_bck_word	      6099	normal.c	FUNCTION_71	IF_1	CALL_1
0x4001494	      0xe965010000	                           jmp 0x40015fe	      6100	normal.c	FUNCTION_71	IF_1
0x4001499	          0x488b07	                    mov rax, qword [rdi]	      6103	normal.c	FUNCTION_71
0x400149c	    0xc74008000000	                  mov dword [rax + 8], 0	      6103	normal.c	FUNCTION_71
0x40014a3	          0x488b07	                    mov rax, qword [rdi]	      6104	normal.c	FUNCTION_71
0x40014a6	    0xc74014000000	               mov dword [rax + 0x14], 0	      6104	normal.c	FUNCTION_71
0x40014ad	        0x488b6f30	            mov rbp, qword [rdi + 0x30] 	      6105	normal.c	FUNCTION_71	FOR_1
0x40014b1	          0x4885ed	                           test rbp, rbp	      6105	normal.c	FUNCTION_71	FOR_1
0x40014b4	     0xf8e44010000	                           jle 0x40015fe	      6105	normal.c	FUNCTION_71	FOR_1
0x40014ba	      0xe800000000	                          call 0x40014bf	      6107	normal.c	FUNCTION_71	FOR_1	IF_3	CALL_2
0x40014bf	            0x85c0	                           test eax, eax	      6107	normal.c	FUNCTION_71	FOR_1	IF_3	CALL_2
0x40014c1	     0xf8508010000	                           jne 0x40015cf	      6107	normal.c	FUNCTION_71	FOR_1	IF_3	CALL_2
0x40014c7	          0x8b430c	              mov eax, dword [rbx + 0xc]	      6113	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4
0x40014ca	      0x3d959dffff	                     cmp eax, 0xffff9d95	      6113	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4
0x40014cf	            0x7405	                            je 0x40014d6	      6113	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4
0x40014d1	          0x83f808	                              cmp eax, 8	      6113	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4
0x40014d4	            0x7516	                           jne 0x40014ec	      6113	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4
0x40014d6	      0xbe62000000	                           mov esi, 0x62	      6115	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	CALL_3
0x40014db	    0x488b3d000000	            mov rdi, qword [0x040014e2] 	      6115	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	CALL_3
0x40014e2	      0xe800000000	                          call 0x40014e7	      6115	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	CALL_3
0x40014e7	          0x4885c0	                           test rax, rax	      6115	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	CALL_3
0x40014ea	            0x7543	                           jne 0x400152f	      6115	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	CALL_3
0x40014ec	        0x837b0c68	            cmp dword [rbx + 0xc], 0x68 	      6116	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4
0x40014f0	            0x7516	                           jne 0x4001508	      6116	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4
0x40014f2	      0xbe68000000	                           mov esi, 0x68	      6117	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	CALL_4
0x40014f7	    0x488b3d000000	            mov rdi, qword [0x040014fe] 	      6117	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	CALL_4
0x40014fe	      0xe800000000	                          call 0x4001503	      6117	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	CALL_4
0x4001503	          0x4885c0	                           test rax, rax	      6117	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	CALL_4
0x4001506	            0x7527	                           jne 0x400152f	      6117	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	CALL_4
0x4001508	    0x817b0c9593ff	      cmp dword [rbx + 0xc], 0xffff9395 	      6118	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4
0x400150f	     0xf859f000000	                           jne 0x40015b4	      6118	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4
0x4001515	      0xbe3c000000	                           mov esi, 0x3c	      6119	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	CALL_5
0x400151a	    0x488b3d000000	            mov rdi, qword [0x04001521] 	      6119	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	CALL_5
0x4001521	      0xe800000000	                          call 0x4001526	      6119	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	CALL_5
0x4001526	          0x4885c0	                           test rax, rax	      6119	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	CALL_5
0x4001529	     0xf8485000000	                            je 0x40015b4	      6119	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	CALL_5
0x400152f	    0x488b15000000	            mov rdx, qword [0x04001536] 	      6120	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4
0x4001536	        0x488b4238	            mov rax, qword [rdx + 0x38] 	      6120	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4
0x400153a	        0x4883f801	                              cmp rax, 1	      6120	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4
0x400153e	            0x7e74	                           jle 0x40015b4	      6120	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4
0x4001540	        0x4883e801	                              sub rax, 1	      6122	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4
0x4001544	        0x48894238	             mov qword [rdx + 0x38], rax	      6122	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4
0x4001548	      0xbfffffff7f	                     mov edi, 0x7fffffff	      6123	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	CALL_6
0x400154d	      0xe800000000	                          call 0x4001552	      6123	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	CALL_6
0x4001552	    0x488b15000000	            mov rdx, qword [0x04001559] 	      6124	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4
0x4001559	    0xc7424c010000	               mov dword [rdx + 0x4c], 1	      6124	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4
0x4001560	          0x488b03	                    mov rax, qword [rbx]	      6130	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5
0x4001563	            0x8b00	                    mov eax, dword [rax]	      6130	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5
0x4001565	          0x83e0fd	                     and eax, 0xfffffffd	      6130	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5
0x4001568	          0x83f801	                              cmp eax, 1	      6130	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5
0x400156b	            0x7562	                           jne 0x40015cf	      6130	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5
0x400156d	        0x488b7a38	            mov rdi, qword [rdx + 0x38] 	      6132	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5	CALL_7
0x4001571	      0xe800000000	                          call 0x4001576	      6132	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5	CALL_7
0x4001576	          0x803800	                       cmp byte [rax], 0	      6132	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5	CALL_7
0x4001579	            0x7454	                            je 0x40015cf	      6132	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5	CALL_7
0x400157b	      0xe800000000	                          call 0x4001580	      6134	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5	CALL_8
0x4001580	          0x803800	                       cmp byte [rax], 0	      6136	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5	IF_6
0x4001583	            0x7429	                            je 0x40015ae	      6136	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5	IF_6
0x4001585	    0x833d00000000	               cmp dword [0x0400158c], 0	      6139	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5	IF_6	IF_7
0x400158c	            0x7415	                            je 0x40015a3	      6139	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5	IF_6	IF_7
0x400158e	          0x4889c7	                            mov rdi, rax	      6140	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5	IF_6	IF_7
0x4001591	    0xff1500000000	                 call qword [0x04001597]	      6140	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5	IF_6	IF_7
0x4001597	    0x488b15000000	            mov rdx, qword [0x0400159e] 	      6140	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5	IF_6	IF_7
0x400159e	           0x14240	             add dword [rdx + 0x40], eax	      6140	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5	IF_6	IF_7
0x40015a1	            0xeb0b	                           jmp 0x40015ae	      6140	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5	IF_6	IF_7
0x40015a3	    0x488b05000000	            mov rax, qword [0x040015aa] 	      6143	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5	IF_6	ELSE_1
0x40015aa	        0x83404001	               add dword [rax + 0x40], 1	      6143	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5	IF_6	ELSE_1
0x40015ae	        0x834b3c02	                or dword [rbx + 0x3c], 2	      6145	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5
0x40015b2	            0xeb1b	                           jmp 0x40015cf	      6145	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5
0x40015b4	          0x488b03	                    mov rax, qword [rbx]	      6150	normal.c	FUNCTION_71	FOR_1	IF_3	ELSE_2	IF_8
0x40015b7	          0x833800	                      cmp dword [rax], 0	      6150	normal.c	FUNCTION_71	FOR_1	IF_3	ELSE_2	IF_8
0x40015ba	            0x751d	                           jne 0x40015d9	      6150	normal.c	FUNCTION_71	FOR_1	IF_3	ELSE_2	IF_8
0x40015bc	        0x4c8b6330	            mov r12, qword [rbx + 0x30] 	      6150	normal.c	FUNCTION_71	FOR_1	IF_3	ELSE_2	IF_8
0x40015c0	          0x4939ec	                            cmp r12, rbp	      6150	normal.c	FUNCTION_71	FOR_1	IF_3	ELSE_2	IF_8
0x40015c3	            0x751a	                           jne 0x40015df	      6150	normal.c	FUNCTION_71	FOR_1	IF_3	ELSE_2	IF_8
0x40015c5	      0xe800000000	                          call 0x40015ca	      6151	normal.c	FUNCTION_71	FOR_1	IF_3	ELSE_2	IF_8
0x40015ca	          0x4c89e5	                            mov rbp, r12	      6151	normal.c	FUNCTION_71	FOR_1	IF_3	ELSE_2	IF_8
0x40015cd	            0xeb0a	                           jmp 0x40015d9	      6151	normal.c	FUNCTION_71	FOR_1	IF_3	ELSE_2	IF_8
0x40015cf	        0x4883ed01	                              sub rbp, 1	      6105	normal.c	FUNCTION_71	FOR_1
0x40015d3	     0xf85e1feffff	                           jne 0x40014ba	      6105	normal.c	FUNCTION_71	FOR_1
0x40015d9	        0x48396b30	            cmp qword [rbx + 0x30], rbp 	      6156	normal.c	FUNCTION_71	IF_9
0x40015dd	            0x741f	                            je 0x40015fe	      6156	normal.c	FUNCTION_71	IF_9
0x40015df	    0xf60500000000	               test byte [0x040015e6], 4	      6156	normal.c	FUNCTION_71	IF_9
0x40015e6	            0x7416	                            je 0x40015fe	      6156	normal.c	FUNCTION_71	IF_9
0x40015e8	    0x833d00000000	               cmp dword [0x040015ef], 0	      6156	normal.c	FUNCTION_71	IF_9
0x40015ef	            0x740d	                            je 0x40015fe	      6156	normal.c	FUNCTION_71	IF_9
0x40015f1	          0x488b03	                    mov rax, qword [rbx]	      6157	normal.c	FUNCTION_71	IF_9
0x40015f4	          0x833800	                      cmp dword [rax], 0	      6157	normal.c	FUNCTION_71	IF_9
0x40015f7	            0x7505	                           jne 0x40015fe	      6157	normal.c	FUNCTION_71	IF_9
0x40015f9	      0xe800000000	                          call 0x40015fe	      6158	normal.c	FUNCTION_71	CALL_10
0x40015fe	              0x5b	                                 pop rbx	      6160	normal.c	FUNCTION_71
0x40015ff	              0x5d	                                 pop rbp	      6160	normal.c	FUNCTION_71
0x4001600	            0x415c	                                 pop r12	      6160	normal.c	FUNCTION_71
0x4001602	              0xc3	                                     ret	      6160	normal.c	FUNCTION_71
nv_percent	CALL,8:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,4:IF,6	93
0x4001986	            0x4154	                                push r12	      6829	normal.c	FUNCTION_82
0x4001988	              0x55	                                push rbp	      6829	normal.c	FUNCTION_82
0x4001989	              0x53	                                push rbx	      6829	normal.c	FUNCTION_82
0x400198a	          0x4889fb	                            mov rbx, rdi	      6829	normal.c	FUNCTION_82
0x400198d	    0x488b05000000	            mov rax, qword [0x04001994] 	      6832	normal.c	FUNCTION_82
0x4001994	        0x488b6838	            mov rbp, qword [rax + 0x38] 	      6832	normal.c	FUNCTION_82
0x4001998	          0x488b07	                    mov rax, qword [rdi]	      6835	normal.c	FUNCTION_82
0x400199b	    0xc74014010000	               mov dword [rax + 0x14], 1	      6835	normal.c	FUNCTION_82
0x40019a2	        0x488b4728	            mov rax, qword [rdi + 0x28] 	      6836	normal.c	FUNCTION_82	IF_1
0x40019a6	          0x4885c0	                           test rax, rax	      6836	normal.c	FUNCTION_82	IF_1
0x40019a9	     0xf84bd000000	                            je 0x4001a6c	      6836	normal.c	FUNCTION_82	IF_1
0x40019af	        0x4883f864	                           cmp rax, 0x64	      6838	normal.c	FUNCTION_82	IF_1	IF_2
0x40019b3	            0x7e0d	                           jle 0x40019c2	      6838	normal.c	FUNCTION_82	IF_1	IF_2
0x40019b5	          0x488b3f	                    mov rdi, qword [rdi]	      6839	normal.c	FUNCTION_82	IF_1	CALL_1
0x40019b8	      0xe87be8ffff	                    call sym.clearopbeep	      6839	normal.c	FUNCTION_82	IF_1	CALL_1
0x40019bd	      0xe910010000	                           jmp 0x4001ad2	      6839	normal.c	FUNCTION_82	IF_1	CALL_1
0x40019c2	          0x488b07	                    mov rax, qword [rdi]	      6842	normal.c	FUNCTION_82	IF_1	ELSE_1
0x40019c5	    0xc74008010000	                  mov dword [rax + 8], 1	      6842	normal.c	FUNCTION_82	IF_1	ELSE_1
0x40019cc	      0xe800000000	                          call 0x40019d1	      6843	normal.c	FUNCTION_82	IF_1	ELSE_1	CALL_2
0x40019d1	    0x488b35000000	            mov rsi, qword [0x040019d8] 	      6846	normal.c	FUNCTION_82	IF_1	ELSE_1	IF_3
0x40019d8	          0x488b06	                    mov rax, qword [rsi]	      6846	normal.c	FUNCTION_82	IF_1	ELSE_1	IF_3
0x40019db	    0x483d40420f00	                        cmp rax, 0xf4240	      6846	normal.c	FUNCTION_82	IF_1	ELSE_1	IF_3
0x40019e1	            0x7e37	                           jle 0x4001a1a	      6846	normal.c	FUNCTION_82	IF_1	ELSE_1	IF_3
0x40019e3	        0x488d4863	                   lea rcx, [rax + 0x63]	      6847	normal.c	FUNCTION_82	IF_1	ELSE_1	IF_3
0x40019e7	    0x48ba0bd7a370	          movabs rdx, 0xa3d70a3d70a3d70b	      6847	normal.c	FUNCTION_82	IF_1	ELSE_1	IF_3
0x40019f1	          0x4889c8	                            mov rax, rcx	      6847	normal.c	FUNCTION_82	IF_1	ELSE_1	IF_3
0x40019f4	          0x48f7ea	                                imul rdx	      6847	normal.c	FUNCTION_82	IF_1	ELSE_1	IF_3
0x40019f7	          0x4801ca	                            add rdx, rcx	      6847	normal.c	FUNCTION_82	IF_1	ELSE_1	IF_3
0x40019fa	        0x48c1fa06	                              sar rdx, 6	      6847	normal.c	FUNCTION_82	IF_1	ELSE_1	IF_3
0x40019fe	          0x4889c8	                            mov rax, rcx	      6847	normal.c	FUNCTION_82	IF_1	ELSE_1	IF_3
0x4001a01	        0x48c1f83f	                           sar rax, 0x3f	      6847	normal.c	FUNCTION_82	IF_1	ELSE_1	IF_3
0x4001a05	          0x4829c2	                            sub rdx, rax	      6847	normal.c	FUNCTION_82	IF_1	ELSE_1	IF_3
0x4001a08	      0x480faf5328	            imul rdx, qword [rbx + 0x28]	      6847	normal.c	FUNCTION_82	IF_1	ELSE_1	IF_3
0x4001a0d	    0x488b05000000	            mov rax, qword [0x04001a14] 	      6847	normal.c	FUNCTION_82	IF_1	ELSE_1	IF_3
0x4001a14	        0x48895038	             mov qword [rax + 0x38], rdx	      6847	normal.c	FUNCTION_82	IF_1	ELSE_1	IF_3
0x4001a18	            0xeb32	                           jmp 0x4001a4c	      6847	normal.c	FUNCTION_82	IF_1	ELSE_1	IF_3
0x4001a1a	      0x480faf4328	            imul rax, qword [rbx + 0x28]	      6850	normal.c	FUNCTION_82	IF_1	ELSE_1	ELSE_2
0x4001a1f	        0x488d4863	                   lea rcx, [rax + 0x63]	      6850	normal.c	FUNCTION_82	IF_1	ELSE_1	ELSE_2
0x4001a23	    0x48ba0bd7a370	          movabs rdx, 0xa3d70a3d70a3d70b	      6850	normal.c	FUNCTION_82	IF_1	ELSE_1	ELSE_2
0x4001a2d	          0x4889c8	                            mov rax, rcx	      6850	normal.c	FUNCTION_82	IF_1	ELSE_1	ELSE_2
0x4001a30	          0x48f7ea	                                imul rdx	      6850	normal.c	FUNCTION_82	IF_1	ELSE_1	ELSE_2
0x4001a33	          0x4801ca	                            add rdx, rcx	      6850	normal.c	FUNCTION_82	IF_1	ELSE_1	ELSE_2
0x4001a36	        0x48c1fa06	                              sar rdx, 6	      6850	normal.c	FUNCTION_82	IF_1	ELSE_1	ELSE_2
0x4001a3a	        0x48c1f93f	                           sar rcx, 0x3f	      6850	normal.c	FUNCTION_82	IF_1	ELSE_1	ELSE_2
0x4001a3e	          0x4829ca	                            sub rdx, rcx	      6850	normal.c	FUNCTION_82	IF_1	ELSE_1	ELSE_2
0x4001a41	    0x488b05000000	            mov rax, qword [0x04001a48] 	      6850	normal.c	FUNCTION_82	IF_1	ELSE_1	ELSE_2
0x4001a48	        0x48895038	             mov qword [rax + 0x38], rdx	      6850	normal.c	FUNCTION_82	IF_1	ELSE_1	ELSE_2
0x4001a4c	    0x488b05000000	            mov rax, qword [0x04001a53] 	      6852	normal.c	FUNCTION_82	IF_1	ELSE_1	IF_4
0x4001a53	          0x488b16	                    mov rdx, qword [rsi]	      6852	normal.c	FUNCTION_82	IF_1	ELSE_1	IF_4
0x4001a56	        0x48395038	            cmp qword [rax + 0x38], rdx 	      6852	normal.c	FUNCTION_82	IF_1	ELSE_1	IF_4
0x4001a5a	            0x7e04	                           jle 0x4001a60	      6852	normal.c	FUNCTION_82	IF_1	ELSE_1	IF_4
0x4001a5c	        0x48895038	             mov qword [rax + 0x38], rdx	      6853	normal.c	FUNCTION_82	IF_1	ELSE_1	IF_4
0x4001a60	      0xbf06000000	                              mov edi, 6	      6854	normal.c	FUNCTION_82	IF_1	ELSE_1	CALL_3
0x4001a65	      0xe800000000	                          call 0x4001a6a	      6854	normal.c	FUNCTION_82	IF_1	ELSE_1	CALL_3
0x4001a6a	            0xeb66	                           jmp 0x4001ad2	      6854	normal.c	FUNCTION_82	IF_1	ELSE_1	CALL_3
0x4001a6c	          0x488b07	                    mov rax, qword [rdi]	      6859	normal.c	FUNCTION_82	ELSE_3
0x4001a6f	    0xc74008000000	                  mov dword [rax + 8], 0	      6859	normal.c	FUNCTION_82	ELSE_3
0x4001a76	          0x488b07	                    mov rax, qword [rdi]	      6860	normal.c	FUNCTION_82	ELSE_3
0x4001a79	    0xc74010010000	               mov dword [rax + 0x10], 1	      6860	normal.c	FUNCTION_82	ELSE_3
0x4001a80	      0xbe00000000	                              mov esi, 0	      6861	normal.c	FUNCTION_82	ELSE_3	IF_5	CALL_4
0x4001a85	          0x488b3f	                    mov rdi, qword [rdi]	      6861	normal.c	FUNCTION_82	ELSE_3	IF_5	CALL_4
0x4001a88	      0xe800000000	                          call 0x4001a8d	      6861	normal.c	FUNCTION_82	ELSE_3	IF_5	CALL_4
0x4001a8d	          0x4989c4	                            mov r12, rax	      6861	normal.c	FUNCTION_82	ELSE_3	IF_5	CALL_4
0x4001a90	          0x4885c0	                           test rax, rax	      6861	normal.c	FUNCTION_82	ELSE_3	IF_5	CALL_4
0x4001a93	            0x750a	                           jne 0x4001a9f	      6861	normal.c	FUNCTION_82	ELSE_3	IF_5	CALL_4
0x4001a95	          0x488b3b	                    mov rdi, qword [rbx]	      6862	normal.c	FUNCTION_82	ELSE_3	CALL_5
0x4001a98	      0xe89be7ffff	                    call sym.clearopbeep	      6862	normal.c	FUNCTION_82	ELSE_3	CALL_5
0x4001a9d	            0xeb33	                           jmp 0x4001ad2	      6862	normal.c	FUNCTION_82	ELSE_3	CALL_5
0x4001a9f	      0xe800000000	                          call 0x4001aa4	      6865	normal.c	FUNCTION_82	ELSE_3	ELSE_4	CALL_6
0x4001aa4	    0x488b05000000	            mov rax, qword [0x04001aab] 	      6866	normal.c	FUNCTION_82	ELSE_3	ELSE_4
0x4001aab	        0x498b3424	                    mov rsi, qword [r12]	      6866	normal.c	FUNCTION_82	ELSE_3	ELSE_4
0x4001aaf	      0x498b7c2408	                mov rdi, qword [r12 + 8]	      6866	normal.c	FUNCTION_82	ELSE_3	ELSE_4
0x4001ab4	        0x48897038	             mov qword [rax + 0x38], rsi	      6866	normal.c	FUNCTION_82	ELSE_3	ELSE_4
0x4001ab8	        0x48897840	             mov qword [rax + 0x40], rdi	      6866	normal.c	FUNCTION_82	ELSE_3	ELSE_4
0x4001abc	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      6867	normal.c	FUNCTION_82	ELSE_3	ELSE_4
0x4001ac3	    0xc74044000000	               mov dword [rax + 0x44], 0	      6869	normal.c	FUNCTION_82	ELSE_3	ELSE_4
0x4001aca	          0x4889df	                            mov rdi, rbx	      6871	normal.c	FUNCTION_82	ELSE_3	ELSE_4	CALL_7
0x4001acd	      0xe8cce8ffff	                 call sym.adjust_for_sel	      6871	normal.c	FUNCTION_82	ELSE_3	ELSE_4	CALL_7
0x4001ad2	          0x488b03	                    mov rax, qword [rbx]	      6875	normal.c	FUNCTION_82	IF_6
0x4001ad5	          0x833800	                      cmp dword [rax], 0	      6875	normal.c	FUNCTION_82	IF_6
0x4001ad8	            0x7524	                           jne 0x4001afe	      6875	normal.c	FUNCTION_82	IF_6
0x4001ada	    0x488b05000000	            mov rax, qword [0x04001ae1] 	      6876	normal.c	FUNCTION_82	IF_6
0x4001ae1	        0x483b6838	            cmp rbp, qword [rax + 0x38] 	      6876	normal.c	FUNCTION_82	IF_6
0x4001ae5	            0x7417	                            je 0x4001afe	      6876	normal.c	FUNCTION_82	IF_6
0x4001ae7	    0xf60500000000	           test byte [0x04001aee], 0x10 	      6877	normal.c	FUNCTION_82	IF_6
0x4001aee	            0x740e	                            je 0x4001afe	      6877	normal.c	FUNCTION_82	IF_6
0x4001af0	    0x833d00000000	               cmp dword [0x04001af7], 0	      6878	normal.c	FUNCTION_82	IF_6
0x4001af7	            0x7405	                            je 0x4001afe	      6878	normal.c	FUNCTION_82	IF_6
0x4001af9	      0xe800000000	                          call 0x4001afe	      6879	normal.c	FUNCTION_82	CALL_8
0x4001afe	              0x5b	                                 pop rbx	      6881	normal.c	FUNCTION_82
0x4001aff	              0x5d	                                 pop rbp	      6881	normal.c	FUNCTION_82
0x4001b00	            0x415c	                                 pop r12	      6881	normal.c	FUNCTION_82
0x4001b02	              0xc3	                                     ret	      6881	normal.c	FUNCTION_82
nv_record	CALL,6:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,2:IF,4	33
0x4001ef2	              0x53	                                push rbx	      9307	normal.c	FUNCTION_131
0x4001ef3	          0x4889fb	                            mov rbx, rdi	      9307	normal.c	FUNCTION_131
0x4001ef6	          0x488b3f	                    mov rdi, qword [rdi]	      9308	normal.c	FUNCTION_131	IF_1
0x4001ef9	          0x833f09	                      cmp dword [rdi], 9	      9308	normal.c	FUNCTION_131	IF_1
0x4001efc	            0x7518	                           jne 0x4001f16	      9308	normal.c	FUNCTION_131	IF_1
0x4001efe	    0xc7430c670000	            mov dword [rbx + 0xc], 0x67 	      9311	normal.c	FUNCTION_131	IF_1
0x4001f05	    0xc74310710000	           mov dword [rbx + 0x10], 0x71 	      9312	normal.c	FUNCTION_131	IF_1
0x4001f0c	          0x4889df	                            mov rdi, rbx	      9313	normal.c	FUNCTION_131	IF_1	CALL_1
0x4001f0f	      0xe84afcffff	                    call sym.nv_operator	      9313	normal.c	FUNCTION_131	IF_1	CALL_1
0x4001f14	            0xeb46	                           jmp 0x4001f5c	      9313	normal.c	FUNCTION_131	IF_1	CALL_1
0x4001f16	      0xe868e3ffff	                   call sym.checkclearop	      9315	normal.c	FUNCTION_131	ELSE_1	IF_2	CALL_2
0x4001f1b	            0x85c0	                           test eax, eax	      9315	normal.c	FUNCTION_131	ELSE_1	IF_2	CALL_2
0x4001f1d	            0x753d	                           jne 0x4001f5c	      9315	normal.c	FUNCTION_131	ELSE_1	IF_2	CALL_2
0x4001f1f	          0x8b7b10	            mov edi, dword [rbx + 0x10] 	      9318	normal.c	FUNCTION_131	ELSE_1	IF_2	IF_3
0x4001f22	            0x89f8	                            mov eax, edi	      9318	normal.c	FUNCTION_131	ELSE_1	IF_2	IF_3
0x4001f24	          0x83e0ef	                     and eax, 0xffffffef	      9318	normal.c	FUNCTION_131	ELSE_1	IF_2	IF_3
0x4001f27	          0x83f82f	                           cmp eax, 0x2f	      9318	normal.c	FUNCTION_131	ELSE_1	IF_2	IF_3
0x4001f2a	            0x7405	                            je 0x4001f31	      9318	normal.c	FUNCTION_131	ELSE_1	IF_2	IF_3
0x4001f2c	          0x83ff3a	                           cmp edi, 0x3a	      9318	normal.c	FUNCTION_131	ELSE_1	IF_2	IF_3
0x4001f2f	            0x7511	                           jne 0x4001f42	      9318	normal.c	FUNCTION_131	ELSE_1	IF_2	IF_3
0x4001f31	      0xe800000000	                          call 0x4001f36	      9320	normal.c	FUNCTION_131	ELSE_1	IF_2	IF_3	CALL_3
0x4001f36	      0xbf03abffff	                     mov edi, 0xffffab03	      9321	normal.c	FUNCTION_131	ELSE_1	IF_2	IF_3	CALL_4
0x4001f3b	      0xe800000000	                          call 0x4001f40	      9321	normal.c	FUNCTION_131	ELSE_1	IF_2	IF_3	CALL_4
0x4001f40	            0xeb1a	                           jmp 0x4001f5c	      9321	normal.c	FUNCTION_131	ELSE_1	IF_2	IF_3	CALL_4
0x4001f42	    0x833d00000000	               cmp dword [0x04001f49], 0	      9327	normal.c	FUNCTION_131	ELSE_1	IF_2	ELSE_2	IF_4	CALL_5
0x4001f49	            0x7511	                           jne 0x4001f5c	      9327	normal.c	FUNCTION_131	ELSE_1	IF_2	ELSE_2	IF_4	CALL_5
0x4001f4b	      0xe800000000	                          call 0x4001f50	      9327	normal.c	FUNCTION_131	ELSE_1	IF_2	ELSE_2	IF_4	CALL_5
0x4001f50	            0x85c0	                           test eax, eax	      9327	normal.c	FUNCTION_131	ELSE_1	IF_2	ELSE_2	IF_4	CALL_5
0x4001f52	            0x7508	                           jne 0x4001f5c	      9327	normal.c	FUNCTION_131	ELSE_1	IF_2	ELSE_2	IF_4	CALL_5
0x4001f54	          0x488b3b	                    mov rdi, qword [rbx]	      9328	normal.c	FUNCTION_131	ELSE_1	IF_2	ELSE_2	IF_4
0x4001f57	      0xe8dce2ffff	                    call sym.clearopbeep	      9328	normal.c	FUNCTION_131	ELSE_1	IF_2	ELSE_2	IF_4
0x4001f5c	              0x5b	                                 pop rbx	      9330	normal.c	FUNCTION_131
0x4001f5d	              0xc3	                                     ret	      9330	normal.c	FUNCTION_131
nv_regname	CALL,5:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,1:IF,3	30
0x4001b03	              0x53	                                push rbx	      7640	normal.c	FUNCTION_100
0x4001b04	          0x4889fb	                            mov rbx, rdi	      7640	normal.c	FUNCTION_100
0x4001b07	          0x488b3f	                    mov rdi, qword [rdi]	      7641	normal.c	FUNCTION_100	IF_1	CALL_1
0x4001b0a	      0xe874e7ffff	                   call sym.checkclearop	      7641	normal.c	FUNCTION_100	IF_1	CALL_1
0x4001b0f	            0x85c0	                           test eax, eax	      7641	normal.c	FUNCTION_100	IF_1	CALL_1
0x4001b11	            0x7549	                           jne 0x4001b5c	      7641	normal.c	FUNCTION_100	IF_1	CALL_1
0x4001b13	        0x837b103d	           cmp dword [rbx + 0x10], 0x3d 	      7644	normal.c	FUNCTION_100	IF_2
0x4001b17	            0x7508	                           jne 0x4001b21	      7644	normal.c	FUNCTION_100	IF_2
0x4001b19	      0xe800000000	                          call 0x4001b1e	      7645	normal.c	FUNCTION_100	CALL_2
0x4001b1e	          0x894310	             mov dword [rbx + 0x10], eax	      7645	normal.c	FUNCTION_100	CALL_2
0x4001b21	          0x8b7b10	            mov edi, dword [rbx + 0x10] 	      7647	normal.c	FUNCTION_100	IF_3	CALL_3
0x4001b24	            0x85ff	                           test edi, edi	      7647	normal.c	FUNCTION_100	IF_3	CALL_3
0x4001b26	            0x742c	                            je 0x4001b54	      7647	normal.c	FUNCTION_100	IF_3	CALL_3
0x4001b28	      0xbe00000000	                              mov esi, 0	      7647	normal.c	FUNCTION_100	IF_3	CALL_3
0x4001b2d	      0xe800000000	                          call 0x4001b32	      7647	normal.c	FUNCTION_100	IF_3	CALL_3
0x4001b32	            0x85c0	                           test eax, eax	      7647	normal.c	FUNCTION_100	IF_3	CALL_3
0x4001b34	            0x741e	                            je 0x4001b54	      7647	normal.c	FUNCTION_100	IF_3	CALL_3
0x4001b36	          0x488b03	                    mov rax, qword [rbx]	      7649	normal.c	FUNCTION_100	IF_3
0x4001b39	          0x8b5310	            mov edx, dword [rbx + 0x10] 	      7649	normal.c	FUNCTION_100	IF_3
0x4001b3c	          0x895004	                mov dword [rax + 4], edx	      7649	normal.c	FUNCTION_100	IF_3
0x4001b3f	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      7650	normal.c	FUNCTION_100	IF_3
0x4001b43	        0x48894320	             mov qword [rbx + 0x20], rax	      7650	normal.c	FUNCTION_100	IF_3
0x4001b47	          0x488b03	                    mov rax, qword [rbx]	      7652	normal.c	FUNCTION_100	IF_3	CALL_4
0x4001b4a	          0x8b7804	                mov edi, dword [rax + 4]	      7652	normal.c	FUNCTION_100	IF_3	CALL_4
0x4001b4d	      0xe800000000	                          call 0x4001b52	      7652	normal.c	FUNCTION_100	IF_3	CALL_4
0x4001b52	            0xeb08	                           jmp 0x4001b5c	      7652	normal.c	FUNCTION_100	IF_3	CALL_4
0x4001b54	          0x488b3b	                    mov rdi, qword [rbx]	      7656	normal.c	FUNCTION_100	CALL_5
0x4001b57	      0xe8dce6ffff	                    call sym.clearopbeep	      7656	normal.c	FUNCTION_100	CALL_5
0x4001b5c	              0x5b	                                 pop rbx	      7657	normal.c	FUNCTION_100
0x4001b5d	              0xc3	                                     ret	      7657	normal.c	FUNCTION_100
nv_beginline	CALL,2:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,0:IF,1	19
0x40005eb	              0x53	                                push rbx	      8828	normal.c	FUNCTION_121
0x40005ec	          0x4889fb	                            mov rbx, rdi	      8828	normal.c	FUNCTION_121
0x40005ef	          0x488b07	                    mov rax, qword [rdi]	      8829	normal.c	FUNCTION_121
0x40005f2	    0xc74008000000	                  mov dword [rax + 8], 0	      8829	normal.c	FUNCTION_121
0x40005f9	          0x488b07	                    mov rax, qword [rdi]	      8830	normal.c	FUNCTION_121
0x40005fc	    0xc74014000000	               mov dword [rax + 0x14], 0	      8830	normal.c	FUNCTION_121
0x4000603	          0x8b7f38	            mov edi, dword [rdi + 0x38] 	      8831	normal.c	FUNCTION_121	CALL_1
0x4000606	      0xe800000000	                          call 0x400060b	      8831	normal.c	FUNCTION_121	CALL_1
0x400060b	    0xf60500000000	               test byte [0x04000612], 4	      8833	normal.c	FUNCTION_121	IF_1
0x4000612	            0x7416	                            je 0x400062a	      8833	normal.c	FUNCTION_121	IF_1
0x4000614	    0x833d00000000	               cmp dword [0x0400061b], 0	      8833	normal.c	FUNCTION_121	IF_1
0x400061b	            0x740d	                            je 0x400062a	      8833	normal.c	FUNCTION_121	IF_1
0x400061d	          0x488b03	                    mov rax, qword [rbx]	      8833	normal.c	FUNCTION_121	IF_1
0x4000620	          0x833800	                      cmp dword [rax], 0	      8833	normal.c	FUNCTION_121	IF_1
0x4000623	            0x7505	                           jne 0x400062a	      8833	normal.c	FUNCTION_121	IF_1
0x4000625	      0xe800000000	                          call 0x400062a	      8834	normal.c	FUNCTION_121	CALL_2
0x400062a	    0xc70500000000	               mov dword [0x04000634], 0	      8836	normal.c	FUNCTION_121
0x4000634	              0x5b	                                 pop rbx	      8838	normal.c	FUNCTION_121
0x4000635	              0xc3	                                     ret	      8838	normal.c	FUNCTION_121
clear_showcmd	CALL,14:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,1:ELSE,6:IF,9	166
0x4003ea5	            0x4155	                                push r13	      3737	normal.c	FUNCTION_28
0x4003ea7	            0x4154	                                push r12	      3737	normal.c	FUNCTION_28
0x4003ea9	              0x55	                                push rbp	      3737	normal.c	FUNCTION_28
0x4003eaa	              0x53	                                push rbx	      3737	normal.c	FUNCTION_28
0x4003eab	        0x4883ec28	                           sub rsp, 0x28	      3737	normal.c	FUNCTION_28
0x4003eaf	    0x64488b042528	                mov rax, qword fs:[0x28]	      3737	normal.c	FUNCTION_28
0x4003eb8	      0x4889442418	             mov qword [rsp + 0x18], rax	      3737	normal.c	FUNCTION_28
0x4003ebd	            0x31c0	                            xor eax, eax	      3737	normal.c	FUNCTION_28
0x4003ebf	    0x833d00000000	               cmp dword [0x04003ec6], 0	      3738	normal.c	FUNCTION_28	IF_1
0x4003ec6	     0xf846b020000	                            je 0x4004137	      3738	normal.c	FUNCTION_28	IF_1
0x4003ecc	    0x833d00000000	               cmp dword [0x04003ed3], 0	      3741	normal.c	FUNCTION_28	IF_2	CALL_1
0x4003ed3	     0xf843f020000	                            je 0x4004118	      3741	normal.c	FUNCTION_28	IF_2	CALL_1
0x4003ed9	      0xe800000000	                          call 0x4003ede	      3741	normal.c	FUNCTION_28	IF_2	CALL_1
0x4003ede	            0x85c0	                           test eax, eax	      3741	normal.c	FUNCTION_28	IF_2	CALL_1
0x4003ee0	     0xf8532020000	                           jne 0x4004118	      3741	normal.c	FUNCTION_28	IF_2	CALL_1
0x4003ee6	    0x488b05000000	            mov rax, qword [0x04003eed] 	      3743	normal.c	FUNCTION_28	IF_2	CALL_2
0x4003eed	    0x488b0d000000	            mov rcx, qword [0x04003ef4] 	      3743	normal.c	FUNCTION_28	IF_2	CALL_2
0x4003ef4	        0x488b5138	            mov rdx, qword [rcx + 0x38] 	      3743	normal.c	FUNCTION_28	IF_2	CALL_2
0x4003ef8	          0x4839d0	                            cmp rax, rdx	      3743	normal.c	FUNCTION_28	IF_2	CALL_2
0x4003efb	            0x740d	                            je 0x4003f0a	      3743	normal.c	FUNCTION_28	IF_2	CALL_2
0x4003efd	          0x4839d0	                            cmp rax, rdx	      3743	normal.c	FUNCTION_28	IF_2	CALL_2
0x4003f00	        0x400f9cc5	                                setl bpl	      3743	normal.c	FUNCTION_28	IF_2	CALL_2
0x4003f04	        0x400fb6ed	                          movzx ebp, bpl	      3743	normal.c	FUNCTION_28	IF_2	CALL_2
0x4003f08	            0xeb2a	                           jmp 0x4003f34	      3743	normal.c	FUNCTION_28	IF_2	CALL_2
0x4003f0a	    0x8b3d00000000	            mov edi, dword [0x04003f10] 	      3743	normal.c	FUNCTION_28	IF_2	CALL_2
0x4003f10	          0x8b7140	            mov esi, dword [rcx + 0x40] 	      3743	normal.c	FUNCTION_28	IF_2	CALL_2
0x4003f13	            0x39f7	                            cmp edi, esi	      3743	normal.c	FUNCTION_28	IF_2	CALL_2
0x4003f15	            0x740c	                            je 0x4003f23	      3743	normal.c	FUNCTION_28	IF_2	CALL_2
0x4003f17	            0x39f7	                            cmp edi, esi	      3743	normal.c	FUNCTION_28	IF_2	CALL_2
0x4003f19	        0x400f9cc5	                                setl bpl	      3743	normal.c	FUNCTION_28	IF_2	CALL_2
0x4003f1d	        0x400fb6ed	                          movzx ebp, bpl	      3743	normal.c	FUNCTION_28	IF_2	CALL_2
0x4003f21	            0xeb11	                           jmp 0x4003f34	      3743	normal.c	FUNCTION_28	IF_2	CALL_2
0x4003f23	          0x8b4944	            mov ecx, dword [rcx + 0x44] 	      3743	normal.c	FUNCTION_28	IF_2	CALL_2
0x4003f26	    0x390d00000000	            cmp dword [0x04003f2c], ecx 	      3743	normal.c	FUNCTION_28	IF_2	CALL_2
0x4003f2c	        0x400f9cc5	                                setl bpl	      3743	normal.c	FUNCTION_28	IF_2	CALL_2
0x4003f30	        0x400fb6ed	                          movzx ebp, bpl	      3743	normal.c	FUNCTION_28	IF_2	CALL_2
0x4003f34	            0x85ed	                           test ebp, ebp	      3749	normal.c	FUNCTION_28	IF_2	IF_3
0x4003f36	            0x740c	                            je 0x4003f44	      3749	normal.c	FUNCTION_28	IF_2	IF_3
0x4003f38	      0x4889442408	                mov qword [rsp + 8], rax	      3751	normal.c	FUNCTION_28	IF_2	IF_3
0x4003f3d	      0x4889542410	             mov qword [rsp + 0x10], rdx	      3752	normal.c	FUNCTION_28	IF_2	IF_3
0x4003f42	            0xeb0a	                           jmp 0x4003f4e	      3752	normal.c	FUNCTION_28	IF_2	IF_3
0x4003f44	      0x4889542408	                mov qword [rsp + 8], rdx	      3756	normal.c	FUNCTION_28	IF_2	ELSE_1
0x4003f49	      0x4889442410	             mov qword [rsp + 0x10], rax	      3757	normal.c	FUNCTION_28	IF_2	ELSE_1
0x4003f4e	      0xba00000000	                              mov edx, 0	      3761	normal.c	FUNCTION_28	IF_2	CALL_3
0x4003f53	      0x488d742408	                      lea rsi, [rsp + 8]	      3761	normal.c	FUNCTION_28	IF_2	CALL_3
0x4003f58	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      3761	normal.c	FUNCTION_28	IF_2	CALL_3
0x4003f5d	      0xe800000000	                          call 0x4003f62	      3761	normal.c	FUNCTION_28	IF_2	CALL_3
0x4003f62	      0x488d542410	                   lea rdx, [rsp + 0x10]	      3762	normal.c	FUNCTION_28	IF_2	CALL_4
0x4003f67	      0xbe00000000	                              mov esi, 0	      3762	normal.c	FUNCTION_28	IF_2	CALL_4
0x4003f6c	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      3762	normal.c	FUNCTION_28	IF_2	CALL_4
0x4003f71	      0xe800000000	                          call 0x4003f76	      3762	normal.c	FUNCTION_28	IF_2	CALL_4
0x4003f76	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	      3764	normal.c	FUNCTION_28	IF_2
0x4003f7b	      0x4c2b442408	                 sub r8, qword [rsp + 8]	      3764	normal.c	FUNCTION_28	IF_2
0x4003f80	        0x498d5801	                       lea rbx, [r8 + 1]	      3764	normal.c	FUNCTION_28	IF_2
0x4003f84	    0x8b0500000000	            mov eax, dword [0x04003f8a] 	      3766	normal.c	FUNCTION_28	IF_2	IF_4
0x4003f8a	          0x83f816	                           cmp eax, 0x16	      3766	normal.c	FUNCTION_28	IF_2	IF_4
0x4003f8d	            0x756f	                           jne 0x4003ffe	      3766	normal.c	FUNCTION_28	IF_2	IF_4
0x4003f8f	    0x488b2d000000	            mov rbp, qword [0x04003f96] 	      3769	normal.c	FUNCTION_28	IF_2	IF_4
0x4003f96	    0x488b05000000	            mov rax, qword [0x04003f9d] 	      3772	normal.c	FUNCTION_28	IF_2	IF_4
0x4003f9d	    0x488905000000	            mov qword [0x04003fa4], rax 	      3772	normal.c	FUNCTION_28	IF_2	IF_4
0x4003fa4	    0x488b3d000000	            mov rdi, qword [0x04003fab] 	      3774	normal.c	FUNCTION_28	IF_2	IF_4	CALL_5
0x4003fab	        0x488d7738	                   lea rsi, [rdi + 0x38]	      3774	normal.c	FUNCTION_28	IF_2	IF_4	CALL_5
0x4003faf	      0x4c8d442404	                       lea r8, [rsp + 4]	      3774	normal.c	FUNCTION_28	IF_2	IF_4	CALL_5
0x4003fb4	          0x4889e1	                            mov rcx, rsp	      3774	normal.c	FUNCTION_28	IF_2	IF_4	CALL_5
0x4003fb7	      0xba00000000	                              mov edx, 0	      3774	normal.c	FUNCTION_28	IF_2	IF_4	CALL_5
0x4003fbc	      0xe800000000	                          call 0x4003fc1	      3774	normal.c	FUNCTION_28	IF_2	IF_4	CALL_5
0x4003fc1	    0x48892d000000	            mov qword [0x04003fc8], rbp 	      3776	normal.c	FUNCTION_28	IF_2	IF_4
0x4003fc8	      0x448b4c2404	                mov r9d, dword [rsp + 4]	        33	stdio2.h	FUNCTION_153	CALL_2
0x4003fcd	        0x442b0c24	                    sub r9d, dword [rsp]	        33	stdio2.h	FUNCTION_153	CALL_2
0x4003fd1	        0x4183c101	                              add r9d, 1	        33	stdio2.h	FUNCTION_153	CALL_2
0x4003fd5	          0x4d63c9	                          movsxd r9, r9d	        33	stdio2.h	FUNCTION_153	CALL_2
0x4003fd8	          0x4989d8	                             mov r8, rbx	        33	stdio2.h	FUNCTION_153	CALL_2
0x4003fdb	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_153	CALL_2
0x4003fe0	      0xba29000000	                           mov edx, 0x29	        33	stdio2.h	FUNCTION_153	CALL_2
0x4003fe5	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_153	CALL_2
0x4003fea	      0xbf00000000	                              mov edi, 0	        33	stdio2.h	FUNCTION_153	CALL_2
0x4003fef	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_153	CALL_2
0x4003ff4	      0xe800000000	                          call 0x4003ff9	        33	stdio2.h	FUNCTION_153	CALL_2
0x4003ff9	      0xe907010000	                           jmp 0x4004105	        33	stdio2.h	FUNCTION_153	CALL_2
0x4003ffe	          0x83f856	                           cmp eax, 0x56	      3781	normal.c	FUNCTION_28	IF_2	ELSE_2	IF_5
0x4004001	            0x7414	                            je 0x4004017	      3781	normal.c	FUNCTION_28	IF_2	ELSE_2	IF_5
0x4004003	    0x488b05000000	            mov rax, qword [0x0400400a] 	      3781	normal.c	FUNCTION_28	IF_2	ELSE_2	IF_5
0x400400a	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3781	normal.c	FUNCTION_28	IF_2	ELSE_2	IF_5
0x400400e	    0x483905000000	            cmp qword [0x04004015], rax 	      3781	normal.c	FUNCTION_28	IF_2	ELSE_2	IF_5
0x4004015	            0x7426	                            je 0x400403d	      3781	normal.c	FUNCTION_28	IF_2	ELSE_2	IF_5
0x4004017	          0x4989d8	                             mov r8, rbx	        33	stdio2.h	FUNCTION_153	CALL_2
0x400401a	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_153	CALL_2
0x400401f	      0xba29000000	                           mov edx, 0x29	        33	stdio2.h	FUNCTION_153	CALL_2
0x4004024	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_153	CALL_2
0x4004029	      0xbf00000000	                              mov edi, 0	        33	stdio2.h	FUNCTION_153	CALL_2
0x400402e	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_153	CALL_2
0x4004033	      0xe800000000	                          call 0x4004038	        33	stdio2.h	FUNCTION_153	CALL_2
0x4004038	      0xe9c8000000	                           jmp 0x4004105	        33	stdio2.h	FUNCTION_153	CALL_2
0x400403d	            0x85ed	                           test ebp, ebp	      3790	normal.c	FUNCTION_28	IF_2	ELSE_3	IF_6
0x400403f	            0x7422	                            je 0x4004063	      3790	normal.c	FUNCTION_28	IF_2	ELSE_3	IF_6
0x4004041	      0xbf00000000	                              mov edi, 0	      3792	normal.c	FUNCTION_28	IF_2	ELSE_3	IF_6	CALL_8
0x4004046	      0xe800000000	                          call 0x400404b	      3792	normal.c	FUNCTION_28	IF_2	ELSE_3	IF_6	CALL_8
0x400404b	          0x4889c3	                            mov rbx, rax	      3792	normal.c	FUNCTION_28	IF_2	ELSE_3	IF_6	CALL_8
0x400404e	      0xe800000000	                          call 0x4004053	      3793	normal.c	FUNCTION_28	IF_2	ELSE_3	IF_6	CALL_9
0x4004053	          0x4989c5	                            mov r13, rax	      3793	normal.c	FUNCTION_28	IF_2	ELSE_3	IF_6	CALL_9
0x4004056	    0x41bc00000000	                             mov r12d, 0	      3737	normal.c	FUNCTION_28
0x400405c	      0xbd00000000	                              mov ebp, 0	      3737	normal.c	FUNCTION_28
0x4004061	            0xeb38	                           jmp 0x400409b	      3737	normal.c	FUNCTION_28
0x4004063	      0xe800000000	                          call 0x4004068	      3797	normal.c	FUNCTION_28	IF_2	ELSE_3	ELSE_4	CALL_10
0x4004068	          0x4889c3	                            mov rbx, rax	      3797	normal.c	FUNCTION_28	IF_2	ELSE_3	ELSE_4	CALL_10
0x400406b	      0xbf00000000	                              mov edi, 0	      3798	normal.c	FUNCTION_28	IF_2	ELSE_3	ELSE_4	CALL_11
0x4004070	      0xe800000000	                          call 0x4004075	      3798	normal.c	FUNCTION_28	IF_2	ELSE_3	ELSE_4	CALL_11
0x4004075	          0x4989c5	                            mov r13, rax	      3798	normal.c	FUNCTION_28	IF_2	ELSE_3	ELSE_4	CALL_11
0x4004078	            0xebdc	                           jmp 0x4004056	      3798	normal.c	FUNCTION_28	IF_2	ELSE_3	ELSE_4	CALL_11
0x400407a	          0x4889df	                            mov rdi, rbx	      3803	normal.c	FUNCTION_28	IF_2	ELSE_3	WHILE_1
0x400407d	    0xff1500000000	                 call qword [0x04004083]	      3803	normal.c	FUNCTION_28	IF_2	ELSE_3	WHILE_1
0x4004083	            0x85c0	                           test eax, eax	      3807	normal.c	FUNCTION_28	IF_2	ELSE_3	WHILE_1	IF_7
0x4004085	            0x7509	                           jne 0x4004090	      3807	normal.c	FUNCTION_28	IF_2	ELSE_3	WHILE_1	IF_7
0x4004087	          0x83c501	                              add ebp, 1	      3809	normal.c	FUNCTION_28	IF_2	ELSE_3	WHILE_1	IF_7
0x400408a	        0x4183c401	                             add r12d, 1	      3810	normal.c	FUNCTION_28	IF_2	ELSE_3	WHILE_1	IF_7
0x400408e	            0xeb29	                           jmp 0x40040b9	      3811	normal.c	FUNCTION_28	IF_2	ELSE_3	WHILE_1	IF_7
0x4004090	             0x1c5	                            add ebp, eax	      3813	normal.c	FUNCTION_28	IF_2	ELSE_3	WHILE_1
0x4004092	        0x4183c401	                             add r12d, 1	      3814	normal.c	FUNCTION_28	IF_2	ELSE_3	WHILE_1
0x4004096	            0x4898	                                    cdqe	      3815	normal.c	FUNCTION_28	IF_2	ELSE_3	WHILE_1
0x4004098	          0x4801c3	                            add rbx, rax	      3815	normal.c	FUNCTION_28	IF_2	ELSE_3	WHILE_1
0x400409b	    0x488b05000000	            mov rax, qword [0x040040a2] 	      3800	normal.c	FUNCTION_28	IF_2	ELSE_3	WHILE_1
0x40040a2	          0x803865	                    cmp byte [rax], 0x65	      3800	normal.c	FUNCTION_28	IF_2	ELSE_3	WHILE_1
0x40040a5	            0x7408	                            je 0x40040af	      3800	normal.c	FUNCTION_28	IF_2	ELSE_3	WHILE_1
0x40040a7	          0x4c39eb	                            cmp rbx, r13	      3800	normal.c	FUNCTION_28	IF_2	ELSE_3	WHILE_1
0x40040aa	           0xf96c0	                                setbe al	      3800	normal.c	FUNCTION_28	IF_2	ELSE_3	WHILE_1
0x40040ad	            0xeb06	                           jmp 0x40040b5	      3800	normal.c	FUNCTION_28	IF_2	ELSE_3	WHILE_1
0x40040af	          0x4c39eb	                            cmp rbx, r13	      3800	normal.c	FUNCTION_28	IF_2	ELSE_3	WHILE_1
0x40040b2	           0xf92c0	                                 setb al	      3800	normal.c	FUNCTION_28	IF_2	ELSE_3	WHILE_1
0x40040b5	            0x84c0	                             test al, al	      3800	normal.c	FUNCTION_28	IF_2	ELSE_3	WHILE_1
0x40040b7	            0x75c1	                           jne 0x400407a	      3800	normal.c	FUNCTION_28	IF_2	ELSE_3	WHILE_1
0x40040b9	          0x4439e5	                           cmp ebp, r12d	      3817	normal.c	FUNCTION_28	IF_2	ELSE_3	IF_8
0x40040bc	            0x7523	                           jne 0x40040e1	      3817	normal.c	FUNCTION_28	IF_2	ELSE_3	IF_8
0x40040be	          0x4189e8	                            mov r8d, ebp	        33	stdio2.h	FUNCTION_153	CALL_2
0x40040c1	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_153	CALL_2
0x40040c6	      0xba29000000	                           mov edx, 0x29	        33	stdio2.h	FUNCTION_153	CALL_2
0x40040cb	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_153	CALL_2
0x40040d0	      0xbf00000000	                              mov edi, 0	        33	stdio2.h	FUNCTION_153	CALL_2
0x40040d5	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_153	CALL_2
0x40040da	      0xe800000000	                          call 0x40040df	        33	stdio2.h	FUNCTION_153	CALL_2
0x40040df	            0xeb24	                           jmp 0x4004105	        33	stdio2.h	FUNCTION_153	CALL_2
0x40040e1	          0x4189e9	                            mov r9d, ebp	        33	stdio2.h	FUNCTION_153	CALL_2
0x40040e4	          0x4589e0	                           mov r8d, r12d	        33	stdio2.h	FUNCTION_153	CALL_2
0x40040e7	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_153	CALL_2
0x40040ec	      0xba29000000	                           mov edx, 0x29	        33	stdio2.h	FUNCTION_153	CALL_2
0x40040f1	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_153	CALL_2
0x40040f6	      0xbf00000000	                              mov edi, 0	        33	stdio2.h	FUNCTION_153	CALL_2
0x40040fb	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_153	CALL_2
0x4004100	      0xe800000000	                          call 0x4004105	        33	stdio2.h	FUNCTION_153	CALL_2
0x4004105	    0xc60500000000	                mov byte [0x0400410c], 0	      3822	normal.c	FUNCTION_28	IF_2
0x400410c	    0xc70500000000	               mov dword [0x04004116], 1	      3823	normal.c	FUNCTION_28	IF_2
0x4004116	            0xeb1a	                           jmp 0x4004132	      3742	normal.c	FUNCTION_28	IF_2
0x4004118	    0xc60500000000	                mov byte [0x0400411f], 0	      3827	normal.c	FUNCTION_28	ELSE_6
0x400411f	    0xc70500000000	               mov dword [0x04004129], 0	      3828	normal.c	FUNCTION_28	ELSE_6
0x4004129	    0x833d00000000	               cmp dword [0x04004130], 0	      3831	normal.c	FUNCTION_28	ELSE_6	IF_9
0x4004130	            0x7505	                           jne 0x4004137	      3831	normal.c	FUNCTION_28	ELSE_6	IF_9
0x4004132	      0xe859e4ffff	                call sym.display_showcmd	      3835	normal.c	FUNCTION_28	CALL_14
0x4004137	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      3836	normal.c	FUNCTION_28
0x400413c	    0x644833042528	                xor rax, qword fs:[0x28]	      3836	normal.c	FUNCTION_28
0x4004145	            0x7405	                            je 0x400414c	      3836	normal.c	FUNCTION_28
0x4004147	      0xe800000000	                          call 0x400414c	      3836	normal.c	FUNCTION_28
0x400414c	        0x4883c428	                           add rsp, 0x28	      3836	normal.c	FUNCTION_28
0x4004150	              0x5b	                                 pop rbx	      3836	normal.c	FUNCTION_28
0x4004151	              0x5d	                                 pop rbp	      3836	normal.c	FUNCTION_28
0x4004152	            0x415c	                                 pop r12	      3836	normal.c	FUNCTION_28
0x4004154	            0x415d	                                 pop r13	      3836	normal.c	FUNCTION_28
0x4004156	              0xc3	                                     ret	      3836	normal.c	FUNCTION_28
nv_at	CALL,5:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,1:ELSE,0:IF,4	42
0x4001603	              0x53	                                push rbx	      9337	normal.c	FUNCTION_132
0x4001604	          0x4889fb	                            mov rbx, rdi	      9337	normal.c	FUNCTION_132
0x4001607	          0x488b3f	                    mov rdi, qword [rdi]	      9338	normal.c	FUNCTION_132	IF_1	CALL_1
0x400160a	      0xe874ecffff	                   call sym.checkclearop	      9338	normal.c	FUNCTION_132	IF_1	CALL_1
0x400160f	            0x85c0	                           test eax, eax	      9338	normal.c	FUNCTION_132	IF_1	CALL_1
0x4001611	            0x7573	                           jne 0x4001686	      9338	normal.c	FUNCTION_132	IF_1	CALL_1
0x4001613	        0x837b103d	           cmp dword [rbx + 0x10], 0x3d 	      9341	normal.c	FUNCTION_132	IF_2
0x4001617	            0x741d	                            je 0x4001636	      9341	normal.c	FUNCTION_132	IF_2
0x4001619	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      9347	normal.c	FUNCTION_132	WHILE_1
0x400161d	        0x488d50ff	                      lea rdx, [rax - 1]	      9347	normal.c	FUNCTION_132	WHILE_1
0x4001621	        0x48895330	             mov qword [rbx + 0x30], rdx	      9347	normal.c	FUNCTION_132	WHILE_1
0x4001625	          0x4885c0	                           test rax, rax	      9347	normal.c	FUNCTION_132	WHILE_1
0x4001628	            0x745c	                            je 0x4001686	      9347	normal.c	FUNCTION_132	WHILE_1
0x400162a	    0x8b0500000000	            mov eax, dword [0x04001630] 	      9347	normal.c	FUNCTION_132	WHILE_1
0x4001630	            0x85c0	                           test eax, eax	      9347	normal.c	FUNCTION_132	WHILE_1
0x4001632	            0x740d	                            je 0x4001641	      9347	normal.c	FUNCTION_132	WHILE_1
0x4001634	            0xeb50	                           jmp 0x4001686	      9347	normal.c	FUNCTION_132	WHILE_1
0x4001636	      0xe800000000	                          call 0x400163b	      9343	normal.c	FUNCTION_132	IF_2	IF_3	CALL_2
0x400163b	            0x85c0	                           test eax, eax	      9343	normal.c	FUNCTION_132	IF_2	IF_3	CALL_2
0x400163d	            0x75da	                           jne 0x4001619	      9343	normal.c	FUNCTION_132	IF_2	IF_3	CALL_2
0x400163f	            0xeb45	                           jmp 0x4001686	      9343	normal.c	FUNCTION_132	IF_2	IF_3	CALL_2
0x4001641	          0x8b7b10	            mov edi, dword [rbx + 0x10] 	      9349	normal.c	FUNCTION_132	WHILE_1	IF_4	CALL_3
0x4001644	      0xb900000000	                              mov ecx, 0	      9349	normal.c	FUNCTION_132	WHILE_1	IF_4	CALL_3
0x4001649	      0xba00000000	                              mov edx, 0	      9349	normal.c	FUNCTION_132	WHILE_1	IF_4	CALL_3
0x400164e	      0xbe00000000	                              mov esi, 0	      9349	normal.c	FUNCTION_132	WHILE_1	IF_4	CALL_3
0x4001653	      0xe800000000	                          call 0x4001658	      9349	normal.c	FUNCTION_132	WHILE_1	IF_4	CALL_3
0x4001658	            0x85c0	                           test eax, eax	      9349	normal.c	FUNCTION_132	WHILE_1	IF_4	CALL_3
0x400165a	            0x750a	                           jne 0x4001666	      9349	normal.c	FUNCTION_132	WHILE_1	IF_4	CALL_3
0x400165c	          0x488b3b	                    mov rdi, qword [rbx]	      9351	normal.c	FUNCTION_132	WHILE_1	IF_4	CALL_4
0x400165f	      0xe8d4ebffff	                    call sym.clearopbeep	      9351	normal.c	FUNCTION_132	WHILE_1	IF_4	CALL_4
0x4001664	            0xeb20	                           jmp 0x4001686	      9352	normal.c	FUNCTION_132	WHILE_1	IF_4
0x4001666	      0xe800000000	                          call 0x400166b	      9354	normal.c	FUNCTION_132	WHILE_1	CALL_5
0x400166b	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      9347	normal.c	FUNCTION_132	WHILE_1
0x400166f	        0x488d50ff	                      lea rdx, [rax - 1]	      9347	normal.c	FUNCTION_132	WHILE_1
0x4001673	        0x48895330	             mov qword [rbx + 0x30], rdx	      9347	normal.c	FUNCTION_132	WHILE_1
0x4001677	          0x4885c0	                           test rax, rax	      9347	normal.c	FUNCTION_132	WHILE_1
0x400167a	            0x740a	                            je 0x4001686	      9347	normal.c	FUNCTION_132	WHILE_1
0x400167c	    0x8b0500000000	            mov eax, dword [0x04001682] 	      9347	normal.c	FUNCTION_132	WHILE_1
0x4001682	            0x85c0	                           test eax, eax	      9347	normal.c	FUNCTION_132	WHILE_1
0x4001684	            0x74bb	                            je 0x4001641	      9347	normal.c	FUNCTION_132	WHILE_1
0x4001686	              0x5b	                                 pop rbx	      9356	normal.c	FUNCTION_132
0x4001687	              0xc3	                                     ret	      9356	normal.c	FUNCTION_132
nv_open	CALL,4:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,2:IF,2	187
0x4003062	            0x4154	                                push r12	      9542	normal.c	FUNCTION_136
0x4003064	              0x55	                                push rbp	      9542	normal.c	FUNCTION_136
0x4003065	              0x53	                                push rbx	      9542	normal.c	FUNCTION_136
0x4003066	        0x4883ec30	                           sub rsp, 0x30	      9542	normal.c	FUNCTION_136
0x400306a	          0x4889fb	                            mov rbx, rdi	      9542	normal.c	FUNCTION_136
0x400306d	    0x64488b042528	                mov rax, qword fs:[0x28]	      9542	normal.c	FUNCTION_136
0x4003076	      0x4889442428	             mov qword [rsp + 0x28], rax	      9542	normal.c	FUNCTION_136
0x400307b	            0x31c0	                            xor eax, eax	      9542	normal.c	FUNCTION_136
0x400307d	          0x488b3f	                    mov rdi, qword [rdi]	      9545	normal.c	FUNCTION_136	IF_1
0x4003080	          0x833f01	                      cmp dword [rdi], 1	      9545	normal.c	FUNCTION_136	IF_1
0x4003083	            0x7534	                           jne 0x40030b9	      9545	normal.c	FUNCTION_136	IF_1
0x4003085	        0x837b0c6f	            cmp dword [rbx + 0xc], 0x6f 	      9545	normal.c	FUNCTION_136	IF_1
0x4003089	            0x752e	                           jne 0x40030b9	      9545	normal.c	FUNCTION_136	IF_1
0x400308b	    0xc70700000000	                      mov dword [rdi], 0	      3676	normal.c	FUNCTION_24
0x4003091	    0xc74704000000	                  mov dword [rdi + 4], 0	      3677	normal.c	FUNCTION_24
0x4003098	    0xc7470c000000	                mov dword [rdi + 0xc], 0	      3678	normal.c	FUNCTION_24
0x400309f	    0xc74710000000	               mov dword [rdi + 0x10], 0	      3679	normal.c	FUNCTION_24
0x40030a6	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	      9548	normal.c	FUNCTION_136	IF_1	CALL_2
0x40030aa	      0xbf00000000	                              mov edi, 0	      9548	normal.c	FUNCTION_136	IF_1	CALL_2
0x40030af	      0xe800000000	                          call 0x40030b4	      9548	normal.c	FUNCTION_136	IF_1	CALL_2
0x40030b4	      0xe9d8020000	                           jmp 0x4003391	      9548	normal.c	FUNCTION_136	IF_1	CALL_2
0x40030b9	    0x833d00000000	               cmp dword [0x040030c0], 0	      9552	normal.c	FUNCTION_136	ELSE_1	IF_2
0x40030c0	     0xf84a2010000	                            je 0x4003268	      9552	normal.c	FUNCTION_136	ELSE_1	IF_2
0x40030c6	        0x837b0c4f	            cmp dword [rbx + 0xc], 0x4f 	      7206	normal.c	FUNCTION_89	IF_1
0x40030ca	     0xf854f010000	                           jne 0x400321f	      7206	normal.c	FUNCTION_89	IF_1
0x40030d0	    0x833d00000000	           cmp dword [0x040030d7], 0x16 	      7206	normal.c	FUNCTION_89	IF_1
0x40030d7	     0xf8542010000	                           jne 0x400321f	      7206	normal.c	FUNCTION_89	IF_1
0x40030dd	    0x488b3d000000	            mov rdi, qword [0x040030e4] 	      7208	normal.c	FUNCTION_89	IF_1
0x40030e4	        0x488b4738	            mov rax, qword [rdi + 0x38] 	      7208	normal.c	FUNCTION_89	IF_1
0x40030e8	        0x488b5740	            mov rdx, qword [rdi + 0x40] 	      7208	normal.c	FUNCTION_89	IF_1
0x40030ec	      0x4889442410	             mov qword [rsp + 0x10], rax	      7208	normal.c	FUNCTION_89	IF_1
0x40030f1	      0x4889542418	             mov qword [rsp + 0x18], rdx	      7208	normal.c	FUNCTION_89	IF_1
0x40030f6	      0x4c8d44240c	                     lea r8, [rsp + 0xc]	      7209	normal.c	FUNCTION_89	IF_1	CALL_1
0x40030fb	      0x488d4c2408	                      lea rcx, [rsp + 8]	      7209	normal.c	FUNCTION_89	IF_1	CALL_1
0x4003100	      0xba00000000	                              mov edx, 0	      7209	normal.c	FUNCTION_89	IF_1	CALL_1
0x4003105	      0x488d742410	                   lea rsi, [rsp + 0x10]	      7209	normal.c	FUNCTION_89	IF_1	CALL_1
0x400310a	      0xe800000000	                          call 0x400310f	      7209	normal.c	FUNCTION_89	IF_1	CALL_1
0x400310f	    0x488b15000000	            mov rdx, qword [0x04003116] 	      7210	normal.c	FUNCTION_89	IF_1
0x4003116	    0x488b05000000	            mov rax, qword [0x0400311d] 	      7210	normal.c	FUNCTION_89	IF_1
0x400311d	        0x48895038	             mov qword [rax + 0x38], rdx	      7210	normal.c	FUNCTION_89	IF_1
0x4003121	        0x8b7c2408	                mov edi, dword [rsp + 8]	      7211	normal.c	FUNCTION_89	IF_1	CALL_2
0x4003125	      0xe800000000	                          call 0x400312a	      7211	normal.c	FUNCTION_89	IF_1	CALL_2
0x400312a	    0x488b05000000	            mov rax, qword [0x04003131] 	      7212	normal.c	FUNCTION_89	IF_1
0x4003131	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      7212	normal.c	FUNCTION_89	IF_1
0x4003135	        0x488b4840	            mov rcx, qword [rax + 0x40] 	      7212	normal.c	FUNCTION_89	IF_1
0x4003139	          0x4889d6	                            mov rsi, rdx	      7212	normal.c	FUNCTION_89	IF_1
0x400313c	    0x488915000000	            mov qword [0x04003143], rdx 	      7212	normal.c	FUNCTION_89	IF_1
0x4003143	    0x48890d000000	            mov qword [0x0400314a], rcx 	      7212	normal.c	FUNCTION_89	IF_1
0x400314a	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      7214	normal.c	FUNCTION_89	IF_1
0x400314f	        0x48895038	             mov qword [rax + 0x38], rdx	      7214	normal.c	FUNCTION_89	IF_1
0x4003153	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      7215	normal.c	FUNCTION_89	IF_1
0x4003157	          0x894848	             mov dword [rax + 0x48], ecx	      7215	normal.c	FUNCTION_89	IF_1
0x400315a	          0x4839f2	                            cmp rdx, rsi	      7218	normal.c	FUNCTION_89	IF_1	IF_2
0x400315d	            0x7c12	                            jl 0x4003171	      7218	normal.c	FUNCTION_89	IF_1	IF_2
0x400315f	    0x488b15000000	            mov rdx, qword [0x04003166] 	      7218	normal.c	FUNCTION_89	IF_1	IF_2
0x4003166	          0x803a65	                    cmp byte [rdx], 0x65	      7218	normal.c	FUNCTION_89	IF_1	IF_2
0x4003169	            0x7506	                           jne 0x4003171	      7218	normal.c	FUNCTION_89	IF_1	IF_2
0x400316b	          0x83c101	                              add ecx, 1	      7219	normal.c	FUNCTION_89	IF_1	IF_2
0x400316e	          0x894848	             mov dword [rax + 0x48], ecx	      7219	normal.c	FUNCTION_89	IF_1	IF_2
0x4003171	          0x8b7848	            mov edi, dword [rax + 0x48] 	      7220	normal.c	FUNCTION_89	IF_1	CALL_3
0x4003174	      0xe800000000	                          call 0x4003179	      7220	normal.c	FUNCTION_89	IF_1	CALL_3
0x4003179	    0x488b05000000	            mov rax, qword [0x04003180] 	      7221	normal.c	FUNCTION_89	IF_1	IF_3
0x4003180	        0x8b4c2418	            mov ecx, dword [rsp + 0x18] 	      7221	normal.c	FUNCTION_89	IF_1	IF_3
0x4003184	          0x394840	            cmp dword [rax + 0x40], ecx 	      7221	normal.c	FUNCTION_89	IF_1	IF_3
0x4003187	     0xf8504020000	                           jne 0x4003391	      7221	normal.c	FUNCTION_89	IF_1	IF_3
0x400318d	      0xe800000000	                          call 0x4003192	      7223	normal.c	FUNCTION_89	IF_1	IF_3	CALL_4
0x4003192	            0x85c0	                           test eax, eax	      7223	normal.c	FUNCTION_89	IF_1	IF_3	CALL_4
0x4003194	            0x7414	                            je 0x40031aa	      7223	normal.c	FUNCTION_89	IF_1	IF_3	CALL_4
0x4003196	    0x488b05000000	            mov rax, qword [0x0400319d] 	      7224	normal.c	FUNCTION_89	IF_1	IF_3
0x400319d	        0x8b4c241c	            mov ecx, dword [rsp + 0x1c] 	      7224	normal.c	FUNCTION_89	IF_1	IF_3
0x40031a1	          0x394844	            cmp dword [rax + 0x44], ecx 	      7224	normal.c	FUNCTION_89	IF_1	IF_3
0x40031a4	     0xf85e7010000	                           jne 0x4003391	      7224	normal.c	FUNCTION_89	IF_1	IF_3
0x40031aa	    0x488b05000000	            mov rax, qword [0x040031b1] 	      7228	normal.c	FUNCTION_89	IF_1	IF_3
0x40031b1	    0x488b15000000	            mov rdx, qword [0x040031b8] 	      7228	normal.c	FUNCTION_89	IF_1	IF_3
0x40031b8	        0x48894238	             mov qword [rdx + 0x38], rax	      7228	normal.c	FUNCTION_89	IF_1	IF_3
0x40031bc	      0x483b442410	            cmp rax, qword [rsp + 0x10] 	      7229	normal.c	FUNCTION_89	IF_1	IF_3	IF_4
0x40031c1	            0x7c11	                            jl 0x40031d4	      7229	normal.c	FUNCTION_89	IF_1	IF_3	IF_4
0x40031c3	    0x488b05000000	            mov rax, qword [0x040031ca] 	      7229	normal.c	FUNCTION_89	IF_1	IF_3	IF_4
0x40031ca	          0x803865	                    cmp byte [rax], 0x65	      7229	normal.c	FUNCTION_89	IF_1	IF_3	IF_4
0x40031cd	            0x7505	                           jne 0x40031d4	      7229	normal.c	FUNCTION_89	IF_1	IF_3	IF_4
0x40031cf	      0x8344240c01	                add dword [rsp + 0xc], 1	      7230	normal.c	FUNCTION_89	IF_1	IF_3	IF_4
0x40031d4	        0x8b7c240c	              mov edi, dword [rsp + 0xc]	      7231	normal.c	FUNCTION_89	IF_1	IF_3	CALL_5
0x40031d8	      0xe800000000	                          call 0x40031dd	      7231	normal.c	FUNCTION_89	IF_1	IF_3	CALL_5
0x40031dd	    0x488b05000000	            mov rax, qword [0x040031e4] 	      7232	normal.c	FUNCTION_89	IF_1	IF_3
0x40031e4	        0x488b4838	            mov rcx, qword [rax + 0x38] 	      7232	normal.c	FUNCTION_89	IF_1	IF_3
0x40031e8	        0x488b5840	            mov rbx, qword [rax + 0x40] 	      7232	normal.c	FUNCTION_89	IF_1	IF_3
0x40031ec	    0x48890d000000	            mov qword [0x040031f3], rcx 	      7232	normal.c	FUNCTION_89	IF_1	IF_3
0x40031f3	    0x48891d000000	            mov qword [0x040031fa], rbx 	      7232	normal.c	FUNCTION_89	IF_1	IF_3
0x40031fa	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      7234	normal.c	FUNCTION_89	IF_1	IF_3
0x40031ff	        0x48895038	             mov qword [rax + 0x38], rdx	      7234	normal.c	FUNCTION_89	IF_1	IF_3
0x4003203	        0x8b7c2408	                mov edi, dword [rsp + 8]	      7235	normal.c	FUNCTION_89	IF_1	IF_3	CALL_6
0x4003207	      0xe800000000	                          call 0x400320c	      7235	normal.c	FUNCTION_89	IF_1	IF_3	CALL_6
0x400320c	        0x8b542408	                mov edx, dword [rsp + 8]	      7236	normal.c	FUNCTION_89	IF_1	IF_3
0x4003210	    0x488b05000000	            mov rax, qword [0x04003217] 	      7236	normal.c	FUNCTION_89	IF_1	IF_3
0x4003217	          0x895048	             mov dword [rax + 0x48], edx	      7236	normal.c	FUNCTION_89	IF_1	IF_3
0x400321a	      0xe972010000	                           jmp 0x4003391	      7236	normal.c	FUNCTION_89	IF_1	IF_3
0x400321f	    0x488b05000000	            mov rax, qword [0x04003226] 	      7241	normal.c	FUNCTION_89	ELSE_1
0x4003226	        0x488b4838	            mov rcx, qword [rax + 0x38] 	      7241	normal.c	FUNCTION_89	ELSE_1
0x400322a	        0x488b5840	            mov rbx, qword [rax + 0x40] 	      7241	normal.c	FUNCTION_89	ELSE_1
0x400322e	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      7241	normal.c	FUNCTION_89	ELSE_1
0x4003233	      0x48895c2418	             mov qword [rsp + 0x18], rbx	      7241	normal.c	FUNCTION_89	ELSE_1
0x4003238	    0x488b35000000	            mov rsi, qword [0x0400323f] 	      7242	normal.c	FUNCTION_89	ELSE_1
0x400323f	    0x488b3d000000	            mov rdi, qword [0x04003246] 	      7242	normal.c	FUNCTION_89	ELSE_1
0x4003246	        0x48897038	             mov qword [rax + 0x38], rsi	      7242	normal.c	FUNCTION_89	ELSE_1
0x400324a	        0x48897840	             mov qword [rax + 0x40], rdi	      7242	normal.c	FUNCTION_89	ELSE_1
0x400324e	    0x48890d000000	            mov qword [0x04003255], rcx 	      7243	normal.c	FUNCTION_89	ELSE_1
0x4003255	    0x48891d000000	            mov qword [0x0400325c], rbx 	      7243	normal.c	FUNCTION_89	ELSE_1
0x400325c	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      7244	normal.c	FUNCTION_89	ELSE_1
0x4003263	      0xe929010000	                           jmp 0x4003391	      7244	normal.c	FUNCTION_89	ELSE_1
0x4003268	    0x488b05000000	            mov rax, qword [0x0400326f] 	      8470	normal.c	FUNCTION_108
0x400326f	        0x488b6838	            mov rbp, qword [rax + 0x38] 	      8470	normal.c	FUNCTION_108
0x4003273	      0xe8e9cfffff	                  call sym.checkclearopq	      8473	normal.c	FUNCTION_108	IF_1	CALL_1
0x4003278	            0x85c0	                           test eax, eax	      8473	normal.c	FUNCTION_108	IF_1	CALL_1
0x400327a	     0xf8511010000	                           jne 0x4003391	      8473	normal.c	FUNCTION_108	IF_1	CALL_1
0x4003280	        0x837b0c4f	            cmp dword [rbx + 0xc], 0x4f 	      8476	normal.c	FUNCTION_108	IF_1	IF_2
0x4003284	            0x751b	                           jne 0x40032a1	      8476	normal.c	FUNCTION_108	IF_1	IF_2
0x4003286	    0x488b05000000	            mov rax, qword [0x0400328d] 	      8479	normal.c	FUNCTION_108	IF_1	IF_2
0x400328d	        0x488d7038	                   lea rsi, [rax + 0x38]	      8478	normal.c	FUNCTION_108	IF_1	IF_2	CALL_2
0x4003291	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      8478	normal.c	FUNCTION_108	IF_1	IF_2	CALL_2
0x4003295	      0xba00000000	                              mov edx, 0	      8478	normal.c	FUNCTION_108	IF_1	IF_2	CALL_2
0x400329a	      0xe800000000	                          call 0x400329f	      8478	normal.c	FUNCTION_108	IF_1	IF_2	CALL_2
0x400329f	            0xeb19	                           jmp 0x40032ba	      8478	normal.c	FUNCTION_108	IF_1	IF_2	CALL_2
0x40032a1	    0x488b05000000	            mov rax, qword [0x040032a8] 	      8483	normal.c	FUNCTION_108	IF_1	ELSE_1
0x40032a8	        0x488d5038	                   lea rdx, [rax + 0x38]	      8482	normal.c	FUNCTION_108	IF_1	ELSE_1	CALL_3
0x40032ac	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      8482	normal.c	FUNCTION_108	IF_1	ELSE_1	CALL_3
0x40032b0	      0xbe00000000	                              mov esi, 0	      8482	normal.c	FUNCTION_108	IF_1	ELSE_1	CALL_3
0x40032b5	      0xe800000000	                          call 0x40032ba	      8482	normal.c	FUNCTION_108	IF_1	ELSE_1	CALL_3
0x40032ba	    0x488b05000000	            mov rax, qword [0x040032c1] 	      8487	normal.c	FUNCTION_108	IF_1	IF_3
0x40032c1	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      8487	normal.c	FUNCTION_108	IF_1	IF_3
0x40032c5	          0x8b430c	              mov eax, dword [rbx + 0xc]	      8488	normal.c	FUNCTION_108	IF_1	IF_3
0x40032c8	          0x83f86f	                           cmp eax, 0x6f	      8485	normal.c	FUNCTION_108	IF_1	IF_3	CALL_4
0x40032cb	        0x400f94c6	                                sete sil	      8485	normal.c	FUNCTION_108	IF_1	IF_3	CALL_4
0x40032cf	        0x400fb6f6	                          movzx esi, sil	      8485	normal.c	FUNCTION_108	IF_1	IF_3	CALL_4
0x40032d3	          0x4801fe	                            add rsi, rdi	      8485	normal.c	FUNCTION_108	IF_1	IF_3	CALL_4
0x40032d6	          0x83f84f	                           cmp eax, 0x4f	      8485	normal.c	FUNCTION_108	IF_1	IF_3	CALL_4
0x40032d9	           0xf94c0	                                 sete al	      8485	normal.c	FUNCTION_108	IF_1	IF_3	CALL_4
0x40032dc	           0xfb6c0	                           movzx eax, al	      8485	normal.c	FUNCTION_108	IF_1	IF_3	CALL_4
0x40032df	          0x4829c7	                            sub rdi, rax	      8485	normal.c	FUNCTION_108	IF_1	IF_3	CALL_4
0x40032e2	      0xe800000000	                          call 0x40032e7	      8485	normal.c	FUNCTION_108	IF_1	IF_3	CALL_4
0x40032e7	          0x4189c4	                           mov r12d, eax	      8485	normal.c	FUNCTION_108	IF_1	IF_3	CALL_4
0x40032ea	          0x83f801	                              cmp eax, 1	      8485	normal.c	FUNCTION_108	IF_1	IF_3	CALL_4
0x40032ed	     0xf859e000000	                           jne 0x4003391	      8485	normal.c	FUNCTION_108	IF_1	IF_3	CALL_4
0x40032f3	      0xbf6f000000	                           mov edi, 0x6f	      8492	normal.c	FUNCTION_108	IF_1	IF_3	CALL_6
0x40032f8	      0xe800000000	                          call 0x40032fd	      8492	normal.c	FUNCTION_108	IF_1	IF_3	CALL_6
0x40032fd	            0x85c0	                           test eax, eax	      8490	normal.c	FUNCTION_108	IF_1	IF_3	CALL_5
0x40032ff	      0xba02000000	                              mov edx, 2	      8490	normal.c	FUNCTION_108	IF_1	IF_3	CALL_5
0x4003304	           0xf45c2	                         cmovne eax, edx	      8490	normal.c	FUNCTION_108	IF_1	IF_3	CALL_5
0x4003307	        0x837b0c4f	            cmp dword [rbx + 0xc], 0x4f 	      8490	normal.c	FUNCTION_108	IF_1	IF_3	CALL_5
0x400330b	      0xbaffffffff	                     mov edx, 0xffffffff	      8490	normal.c	FUNCTION_108	IF_1	IF_3	CALL_5
0x4003310	        0x440f44e2	                         cmove r12d, edx	      8490	normal.c	FUNCTION_108	IF_1	IF_3	CALL_5
0x4003314	      0xba00000000	                              mov edx, 0	      8490	normal.c	FUNCTION_108	IF_1	IF_3	CALL_5
0x4003319	            0x89c6	                            mov esi, eax	      8490	normal.c	FUNCTION_108	IF_1	IF_3	CALL_5
0x400331b	          0x4489e7	                           mov edi, r12d	      8490	normal.c	FUNCTION_108	IF_1	IF_3	CALL_5
0x400331e	      0xe800000000	                          call 0x4003323	      8490	normal.c	FUNCTION_108	IF_1	IF_3	CALL_5
0x4003323	          0x83f801	                              cmp eax, 1	      8490	normal.c	FUNCTION_108	IF_1	IF_3	CALL_5
0x4003326	            0x7569	                           jne 0x4003391	      8490	normal.c	FUNCTION_108	IF_1	IF_3	CALL_5
0x4003328	    0x488b3d000000	            mov rdi, qword [0x0400332f] 	      8497	normal.c	FUNCTION_108	IF_1	IF_3	IF_4
0x400332f	    0x4883bfa80200	              cmp qword [rdi + 0x2a8], 0	      8497	normal.c	FUNCTION_108	IF_1	IF_3	IF_4
0x4003337	            0x7e0e	                           jle 0x4003347	      8497	normal.c	FUNCTION_108	IF_1	IF_3	IF_4
0x4003339	        0x483b6f38	            cmp rbp, qword [rdi + 0x38] 	      8497	normal.c	FUNCTION_108	IF_1	IF_3	IF_4
0x400333d	            0x7408	                            je 0x4003347	      8497	normal.c	FUNCTION_108	IF_1	IF_3	IF_4
0x400333f	          0x4889ee	                            mov rsi, rbp	      8498	normal.c	FUNCTION_108	IF_1	IF_3	CALL_7
0x4003342	      0xe800000000	                          call 0x4003347	      8498	normal.c	FUNCTION_108	IF_1	IF_3	CALL_7
0x4003347	      0xbe23000000	                           mov esi, 0x23	      8501	normal.c	FUNCTION_108	IF_1	IF_3	IF_5	CALL_8
0x400334c	    0x488b3d000000	            mov rdi, qword [0x04003353] 	      8501	normal.c	FUNCTION_108	IF_1	IF_3	IF_5	CALL_8
0x4003353	      0xe800000000	                          call 0x4003358	      8501	normal.c	FUNCTION_108	IF_1	IF_3	IF_5	CALL_8
0x4003358	          0x4885c0	                           test rax, rax	      8501	normal.c	FUNCTION_108	IF_1	IF_3	IF_5	CALL_8
0x400335b	            0x7408	                            je 0x4003365	      8501	normal.c	FUNCTION_108	IF_1	IF_3	IF_5	CALL_8
0x400335d	    0x48c743300100	               mov qword [rbx + 0x30], 1	      8502	normal.c	FUNCTION_108	IF_1	IF_3	IF_5
0x4003365	    0x488b05000000	            mov rax, qword [0x0400336c] 	      8504	normal.c	FUNCTION_108	IF_1	IF_3	IF_6
0x400336c	    0x83b870020000	              cmp dword [rax + 0x270], 0	      8504	normal.c	FUNCTION_108	IF_1	IF_3	IF_6
0x4003373	            0x7407	                            je 0x400337c	      8504	normal.c	FUNCTION_108	IF_1	IF_3	IF_6
0x4003375	    0x83a0b4000000	      and dword [rax + 0xb4], 0xffffffef	      8506	normal.c	FUNCTION_108	IF_1	IF_3	IF_6
0x400337c	          0x8b530c	              mov edx, dword [rbx + 0xc]	      8508	normal.c	FUNCTION_108	IF_1	IF_3	CALL_9
0x400337f	      0xb901000000	                              mov ecx, 1	      8508	normal.c	FUNCTION_108	IF_1	IF_3	CALL_9
0x4003384	      0xbe00000000	                              mov esi, 0	      8508	normal.c	FUNCTION_108	IF_1	IF_3	CALL_9
0x4003389	          0x4889df	                            mov rdi, rbx	      8508	normal.c	FUNCTION_108	IF_1	IF_3	CALL_9
0x400338c	      0xe8e4d3ffff	                    call sym.invoke_edit	      8508	normal.c	FUNCTION_108	IF_1	IF_3	CALL_9
0x4003391	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      9556	normal.c	FUNCTION_136
0x4003396	    0x644833042528	                xor rax, qword fs:[0x28]	      9556	normal.c	FUNCTION_136
0x400339f	            0x7405	                            je 0x40033a6	      9556	normal.c	FUNCTION_136
0x40033a1	      0xe800000000	                          call 0x40033a6	      9556	normal.c	FUNCTION_136
0x40033a6	        0x4883c430	                           add rsp, 0x30	      9556	normal.c	FUNCTION_136
0x40033aa	              0x5b	                                 pop rbx	      9556	normal.c	FUNCTION_136
0x40033ab	              0x5d	                                 pop rbp	      9556	normal.c	FUNCTION_136
0x40033ac	            0x415c	                                 pop r12	      9556	normal.c	FUNCTION_136
0x40033ae	              0xc3	                                     ret	      9556	normal.c	FUNCTION_136
nv_ctrlo	CALL,2:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,1:IF,1	13
0x400368c	        0x4883ec08	                              sub rsp, 8	      5492	normal.c	FUNCTION_62
0x4003690	    0x833d00000000	               cmp dword [0x04003697], 0	      5493	normal.c	FUNCTION_62	IF_1
0x4003697	            0x7424	                            je 0x40036bd	      5493	normal.c	FUNCTION_62	IF_1
0x4003699	    0x833d00000000	               cmp dword [0x040036a0], 0	      5493	normal.c	FUNCTION_62	IF_1
0x40036a0	            0x741b	                            je 0x40036bd	      5493	normal.c	FUNCTION_62	IF_1
0x40036a2	    0xc70500000000	               mov dword [0x040036ac], 0	      5495	normal.c	FUNCTION_62	IF_1
0x40036ac	      0xe800000000	                          call 0x40036b1	      5496	normal.c	FUNCTION_62	IF_1	CALL_1
0x40036b1	    0xc70500000000	               mov dword [0x040036bb], 2	      5497	normal.c	FUNCTION_62	IF_1
0x40036bb	            0xeb09	                           jmp 0x40036c6	      5497	normal.c	FUNCTION_62	IF_1
0x40036bd	        0x48f75f30	                  neg qword [rdi + 0x30]	      5501	normal.c	FUNCTION_62	ELSE_1
0x40036c1	      0xe891feffff	                      call sym.nv_pcmark	      5502	normal.c	FUNCTION_62	ELSE_1	CALL_2
0x40036c6	        0x4883c408	                              add rsp, 8	      5504	normal.c	FUNCTION_62
0x40036ca	              0xc3	                                     ret	      5504	normal.c	FUNCTION_62
nv_next	CALL,3:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,0:IF,1	39
0x4002f1c	            0x4155	                                push r13	      6352	normal.c	FUNCTION_78
0x4002f1e	            0x4154	                                push r12	      6352	normal.c	FUNCTION_78
0x4002f20	              0x55	                                push rbp	      6352	normal.c	FUNCTION_78
0x4002f21	              0x53	                                push rbx	      6352	normal.c	FUNCTION_78
0x4002f22	        0x4883ec08	                              sub rsp, 8	      6352	normal.c	FUNCTION_78
0x4002f26	          0x4889fb	                            mov rbx, rdi	      6352	normal.c	FUNCTION_78
0x4002f29	    0x488b05000000	            mov rax, qword [0x04002f30] 	      6353	normal.c	FUNCTION_78
0x4002f30	        0x4c8b6038	            mov r12, qword [rax + 0x38] 	      6353	normal.c	FUNCTION_78
0x4002f34	          0x8b6840	            mov ebp, dword [rax + 0x40] 	      6353	normal.c	FUNCTION_78
0x4002f37	        0x448b6844	           mov r13d, dword [rax + 0x44] 	      6353	normal.c	FUNCTION_78
0x4002f3b	          0x8b4f38	            mov ecx, dword [rdi + 0x38] 	      6354	normal.c	FUNCTION_78	CALL_1
0x4002f3e	          0x80cd02	                                or ch, 2	      6354	normal.c	FUNCTION_78	CALL_1
0x4002f41	      0xba00000000	                              mov edx, 0	      6354	normal.c	FUNCTION_78	CALL_1
0x4002f46	      0xbe00000000	                              mov esi, 0	      6354	normal.c	FUNCTION_78	CALL_1
0x4002f4b	      0xe809ffffff	                  call sym.normal_search	      6354	normal.c	FUNCTION_78	CALL_1
0x4002f50	          0x83f801	                              cmp eax, 1	      6356	normal.c	FUNCTION_78	IF_1	CALL_2
0x4002f53	            0x753e	                           jne 0x4002f93	      6356	normal.c	FUNCTION_78	IF_1	CALL_2
0x4002f55	    0x488b05000000	            mov rax, qword [0x04002f5c] 	      6356	normal.c	FUNCTION_78	IF_1	CALL_2
0x4002f5c	        0x4c396038	            cmp qword [rax + 0x38], r12 	      6356	normal.c	FUNCTION_78	IF_1	CALL_2
0x4002f60	            0x7531	                           jne 0x4002f93	      6356	normal.c	FUNCTION_78	IF_1	CALL_2
0x4002f62	        0x49c1e520	                           shl r13, 0x20	      6356	normal.c	FUNCTION_78	IF_1	CALL_2
0x4002f66	            0x89ed	                            mov ebp, ebp	      6356	normal.c	FUNCTION_78	IF_1	CALL_2
0x4002f68	          0x4909ed	                             or r13, rbp	      6356	normal.c	FUNCTION_78	IF_1	CALL_2
0x4002f6b	        0x4c396840	            cmp qword [rax + 0x40], r13 	      6356	normal.c	FUNCTION_78	IF_1	CALL_2
0x4002f6f	            0x7522	                           jne 0x4002f93	      6356	normal.c	FUNCTION_78	IF_1	CALL_2
0x4002f71	      0x4883433001	               add qword [rbx + 0x30], 1	      6361	normal.c	FUNCTION_78	IF_1
0x4002f76	          0x8b4b38	            mov ecx, dword [rbx + 0x38] 	      6362	normal.c	FUNCTION_78	IF_1	CALL_3
0x4002f79	          0x80cd02	                                or ch, 2	      6362	normal.c	FUNCTION_78	IF_1	CALL_3
0x4002f7c	      0xba00000000	                              mov edx, 0	      6362	normal.c	FUNCTION_78	IF_1	CALL_3
0x4002f81	      0xbe00000000	                              mov esi, 0	      6362	normal.c	FUNCTION_78	IF_1	CALL_3
0x4002f86	          0x4889df	                            mov rdi, rbx	      6362	normal.c	FUNCTION_78	IF_1	CALL_3
0x4002f89	      0xe8cbfeffff	                  call sym.normal_search	      6362	normal.c	FUNCTION_78	IF_1	CALL_3
0x4002f8e	      0x48836b3001	               sub qword [rbx + 0x30], 1	      6363	normal.c	FUNCTION_78	IF_1
0x4002f93	        0x4883c408	                              add rsp, 8	      6365	normal.c	FUNCTION_78
0x4002f97	              0x5b	                                 pop rbx	      6365	normal.c	FUNCTION_78
0x4002f98	              0x5d	                                 pop rbp	      6365	normal.c	FUNCTION_78
0x4002f99	            0x415c	                                 pop r12	      6365	normal.c	FUNCTION_78
0x4002f9b	            0x415d	                                 pop r13	      6365	normal.c	FUNCTION_78
0x4002f9d	              0xc3	                                     ret	      6365	normal.c	FUNCTION_78
nv_tilde	CALL,2:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,1:IF,1	181
0x4001bbb	            0x4157	                                push r15	      8571	normal.c	FUNCTION_112
0x4001bbd	            0x4156	                                push r14	      8571	normal.c	FUNCTION_112
0x4001bbf	            0x4155	                                push r13	      8571	normal.c	FUNCTION_112
0x4001bc1	            0x4154	                                push r12	      8571	normal.c	FUNCTION_112
0x4001bc3	              0x55	                                push rbp	      8571	normal.c	FUNCTION_112
0x4001bc4	              0x53	                                push rbx	      8571	normal.c	FUNCTION_112
0x4001bc5	        0x4883ec28	                           sub rsp, 0x28	      8571	normal.c	FUNCTION_112
0x4001bc9	          0x4889fb	                            mov rbx, rdi	      8571	normal.c	FUNCTION_112
0x4001bcc	    0x833d00000000	               cmp dword [0x04001bd3], 0	      8572	normal.c	FUNCTION_112	IF_1
0x4001bd3	     0xf853d020000	                           jne 0x4001e16	      8572	normal.c	FUNCTION_112	IF_1
0x4001bd9	    0x833d00000000	               cmp dword [0x04001be0], 0	      8572	normal.c	FUNCTION_112	IF_1
0x4001be0	     0xf8530020000	                           jne 0x4001e16	      8572	normal.c	FUNCTION_112	IF_1
0x4001be6	          0x488b3f	                    mov rdi, qword [rdi]	      8572	normal.c	FUNCTION_112	IF_1
0x4001be9	          0x833f07	                      cmp dword [rdi], 7	      8572	normal.c	FUNCTION_112	IF_1
0x4001bec	     0xf8424020000	                            je 0x4001e16	      8572	normal.c	FUNCTION_112	IF_1
0x4001bf2	      0xe86ae6ffff	                  call sym.checkclearopq	      7325	normal.c	FUNCTION_92	IF_1	CALL_1
0x4001bf7	            0x85c0	                           test eax, eax	      7325	normal.c	FUNCTION_92	IF_1	CALL_1
0x4001bf9	     0xf85b0020000	                           jne 0x4001eaf	      7325	normal.c	FUNCTION_92	IF_1	CALL_1
0x4001bff	    0x488b05000000	            mov rax, qword [0x04001c06] 	      7328	normal.c	FUNCTION_92	IF_2	CALL_3
0x4001c06	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      7328	normal.c	FUNCTION_92	IF_2	CALL_3
0x4001c0a	      0xe800000000	                          call 0x4001c0f	      7328	normal.c	FUNCTION_92	IF_2	CALL_3
0x4001c0f	          0x803800	                       cmp byte [rax], 0	      7328	normal.c	FUNCTION_92	IF_2	CALL_3
0x4001c12	            0x7523	                           jne 0x4001c37	      7328	normal.c	FUNCTION_92	IF_2	CALL_3
0x4001c14	      0xbe7e000000	                           mov esi, 0x7e	      7328	normal.c	FUNCTION_92	IF_2	CALL_3
0x4001c19	    0x488b3d000000	            mov rdi, qword [0x04001c20] 	      7328	normal.c	FUNCTION_92	IF_2	CALL_3
0x4001c20	      0xe800000000	                          call 0x4001c25	      7328	normal.c	FUNCTION_92	IF_2	CALL_3
0x4001c25	          0x4885c0	                           test rax, rax	      7328	normal.c	FUNCTION_92	IF_2	CALL_3
0x4001c28	            0x750d	                           jne 0x4001c37	      7328	normal.c	FUNCTION_92	IF_2	CALL_3
0x4001c2a	          0x488b3b	                    mov rdi, qword [rbx]	      7330	normal.c	FUNCTION_92	IF_2	CALL_4
0x4001c2d	      0xe806e6ffff	                    call sym.clearopbeep	      7330	normal.c	FUNCTION_92	IF_2	CALL_4
0x4001c32	      0xe978020000	                           jmp 0x4001eaf	      7330	normal.c	FUNCTION_92	IF_2	CALL_4
0x4001c37	          0x4889df	                            mov rdi, rbx	      7334	normal.c	FUNCTION_92	CALL_5
0x4001c3a	      0xe88ae8ffff	                  call sym.prep_redo_cmd	      7334	normal.c	FUNCTION_92	CALL_5
0x4001c3f	      0xe800000000	                          call 0x4001c44	      7336	normal.c	FUNCTION_92	IF_3	CALL_6
0x4001c44	            0x85c0	                           test eax, eax	      7336	normal.c	FUNCTION_92	IF_3	CALL_6
0x4001c46	     0xf8463020000	                            je 0x4001eaf	      7336	normal.c	FUNCTION_92	IF_3	CALL_6
0x4001c4c	    0x488b05000000	            mov rax, qword [0x04001c53] 	      7339	normal.c	FUNCTION_92
0x4001c53	        0x4c8b7838	            mov r15, qword [rax + 0x38] 	      7339	normal.c	FUNCTION_92
0x4001c57	          0x8b5040	            mov edx, dword [rax + 0x40] 	      7339	normal.c	FUNCTION_92
0x4001c5a	        0x89542418	             mov dword [rsp + 0x18], edx	      7339	normal.c	FUNCTION_92
0x4001c5e	          0x8b4044	            mov eax, dword [rax + 0x44] 	      7339	normal.c	FUNCTION_92
0x4001c61	        0x8944241c	             mov dword [rsp + 0x1c], eax	      7339	normal.c	FUNCTION_92
0x4001c65	        0x488b6b30	            mov rbp, qword [rbx + 0x30] 	      7343	normal.c	FUNCTION_92	FOR_1
0x4001c69	          0x4885ed	                           test rbp, rbp	      7343	normal.c	FUNCTION_92	FOR_1
0x4001c6c	     0xf8e7e010000	                           jle 0x4001df0	      7343	normal.c	FUNCTION_92	FOR_1
0x4001c72	          0x4189d6	                           mov r14d, edx	      7343	normal.c	FUNCTION_92	FOR_1
0x4001c75	          0x4d89fd	                            mov r13, r15	      7343	normal.c	FUNCTION_92	FOR_1
0x4001c78	    0x41bc00000000	                             mov r12d, 0	      7343	normal.c	FUNCTION_92	FOR_1
0x4001c7e	    0x488b05000000	            mov rax, qword [0x04001c85] 	      7345	normal.c	FUNCTION_92	FOR_1	CALL_7
0x4001c85	        0x488d7038	                   lea rsi, [rax + 0x38]	      7345	normal.c	FUNCTION_92	FOR_1	CALL_7
0x4001c89	          0x488b03	                    mov rax, qword [rbx]	      7345	normal.c	FUNCTION_92	FOR_1	CALL_7
0x4001c8c	            0x8b38	                    mov edi, dword [rax]	      7345	normal.c	FUNCTION_92	FOR_1	CALL_7
0x4001c8e	      0xe800000000	                          call 0x4001c93	      7345	normal.c	FUNCTION_92	FOR_1	CALL_7
0x4001c93	          0x4109c4	                            or r12d, eax	      7345	normal.c	FUNCTION_92	FOR_1	CALL_7
0x4001c96	      0xe800000000	                          call 0x4001c9b	      7346	normal.c	FUNCTION_92	FOR_1	CALL_8
0x4001c9b	      0xe800000000	                          call 0x4001ca0	      7347	normal.c	FUNCTION_92	FOR_1	IF_4	CALL_9
0x4001ca0	            0x85c0	                           test eax, eax	      7347	normal.c	FUNCTION_92	FOR_1	IF_4	CALL_9
0x4001ca2	     0xf85de000000	                           jne 0x4001d86	      7347	normal.c	FUNCTION_92	FOR_1	IF_4	CALL_9
0x4001ca8	      0xbe7e000000	                           mov esi, 0x7e	      7349	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	CALL_10
0x4001cad	    0x488b3d000000	            mov rdi, qword [0x04001cb4] 	      7349	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	CALL_10
0x4001cb4	      0xe800000000	                          call 0x4001cb9	      7349	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	CALL_10
0x4001cb9	          0x4885c0	                           test rax, rax	      7349	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	CALL_10
0x4001cbc	     0xf84ce000000	                            je 0x4001d90	      7349	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	CALL_10
0x4001cc2	    0x488b05000000	            mov rax, qword [0x04001cc9] 	      7350	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5
0x4001cc9	    0x488b15000000	            mov rdx, qword [0x04001cd0] 	      7350	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5
0x4001cd0	          0x488b00	                    mov rax, qword [rax]	      7350	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5
0x4001cd3	        0x48394238	            cmp qword [rdx + 0x38], rax 	      7350	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5
0x4001cd7	     0xf8db3000000	                           jge 0x4001d90	      7350	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5
0x4001cdd	      0xe800000000	                          call 0x4001ce2	      7353	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	CALL_11
0x4001ce2	            0x85c0	                           test eax, eax	      7353	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	CALL_11
0x4001ce4	            0x7472	                            je 0x4001d58	      7353	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	CALL_11
0x4001ce6	          0x4585e4	                         test r12d, r12d	      7355	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	IF_7
0x4001ce9	            0x7463	                            je 0x4001d4e	      7355	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	IF_7
0x4001ceb	          0x4c89ef	                            mov rdi, r13	      7357	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	IF_7	CALL_12
0x4001cee	      0xe800000000	                          call 0x4001cf3	      7357	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	IF_7	CALL_12
0x4001cf3	          0x4889c7	                            mov rdi, rax	      7357	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	IF_7	CALL_12
0x4001cf6	      0xb800000000	                              mov eax, 0	      7358	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	IF_7	CALL_13
0x4001cfb	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      7358	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	IF_7	CALL_13
0x4001d02	      0x48897c2408	                mov qword [rsp + 8], rdi	      7358	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	IF_7	CALL_13
0x4001d07	            0xf2ae	              repne scasb al, byte [rdi]	      7358	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	IF_7	CALL_13
0x4001d09	          0x4889c8	                            mov rax, rcx	      7358	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	IF_7	CALL_13
0x4001d0c	          0x48f7d0	                                 not rax	      7358	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	IF_7	CALL_13
0x4001d0f	        0x4883e801	                              sub rax, 1	      7358	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	IF_7	CALL_13
0x4001d13	          0x4429f0	                           sub eax, r14d	      7358	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	IF_7	CALL_13
0x4001d16	        0x89442414	             mov dword [rsp + 0x14], eax	      7359	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	IF_7	CALL_14
0x4001d1a	          0x4863c8	                         movsxd rcx, eax	      7359	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	IF_7	CALL_14
0x4001d1d	          0x4489f2	                           mov edx, r14d	      7359	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	IF_7	CALL_14
0x4001d20	          0x4c89ee	                            mov rsi, r13	      7359	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	IF_7	CALL_14
0x4001d23	    0x488b3d000000	            mov rdi, qword [0x04001d2a] 	      7359	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	IF_7	CALL_14
0x4001d2a	      0xe800000000	                          call 0x4001d2f	      7359	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	IF_7	CALL_14
0x4001d2f	          0x4963ce	                        movsxd rcx, r14d	      7361	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	IF_7	CALL_15
0x4001d32	      0x48034c2408	                add rcx, qword [rsp + 8]	      7361	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	IF_7	CALL_15
0x4001d37	      0x448b442414	            mov r8d, dword [rsp + 0x14] 	      7361	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	IF_7	CALL_15
0x4001d3c	          0x4489f2	                           mov edx, r14d	      7361	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	IF_7	CALL_15
0x4001d3f	          0x4c89ee	                            mov rsi, r13	      7361	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	IF_7	CALL_15
0x4001d42	    0x488b3d000000	            mov rdi, qword [0x04001d49] 	      7361	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	IF_7	CALL_15
0x4001d49	      0xe800000000	                          call 0x4001d4e	      7361	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	IF_7	CALL_15
0x4001d4e	        0x4983c501	                              add r13, 1	      7365	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6
0x4001d52	    0x41be00000000	                             mov r14d, 0	      7364	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6
0x4001d58	    0x488b05000000	            mov rax, qword [0x04001d5f] 	      7368	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5
0x4001d5f	        0x488b4838	            mov rcx, qword [rax + 0x38] 	      7368	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5
0x4001d63	        0x488d7901	                      lea rdi, [rcx + 1]	      7368	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5
0x4001d67	        0x48897838	             mov qword [rax + 0x38], rdi	      7368	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5
0x4001d6b	    0xc74040000000	               mov dword [rax + 0x40], 0	      7369	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5
0x4001d72	        0x4883fd01	                              cmp rbp, 1	      7370	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_8
0x4001d76	            0x7e0e	                           jle 0x4001d86	      7370	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_8
0x4001d78	      0xe800000000	                          call 0x4001d7d	      7372	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_8	IF_9	CALL_16
0x4001d7d	            0x85c0	                           test eax, eax	      7372	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_8	IF_9	CALL_16
0x4001d7f	            0x740f	                            je 0x4001d90	      7372	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_8	IF_9	CALL_16
0x4001d81	      0xe800000000	                          call 0x4001d86	      7374	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_8	CALL_17
0x4001d86	        0x4883ed01	                              sub rbp, 1	      7343	normal.c	FUNCTION_92	FOR_1
0x4001d8a	     0xf85eefeffff	                           jne 0x4001c7e	      7343	normal.c	FUNCTION_92	FOR_1
0x4001d90	          0x4585e4	                         test r12d, r12d	      7382	normal.c	FUNCTION_92	ELSE_1	IF_10	CALL_18
0x4001d93	     0xf848a000000	                            je 0x4001e23	      7382	normal.c	FUNCTION_92	ELSE_1	IF_10	CALL_18
0x4001d99	      0xe800000000	                          call 0x4001d9e	      7382	normal.c	FUNCTION_92	ELSE_1	IF_10	CALL_18
0x4001d9e	            0x85c0	                           test eax, eax	      7382	normal.c	FUNCTION_92	ELSE_1	IF_10	CALL_18
0x4001da0	     0xf8492000000	                            je 0x4001e38	      7382	normal.c	FUNCTION_92	ELSE_1	IF_10	CALL_18
0x4001da6	          0x4c89ef	                            mov rdi, r13	      7384	normal.c	FUNCTION_92	ELSE_1	IF_10	CALL_19
0x4001da9	      0xe800000000	                          call 0x4001dae	      7384	normal.c	FUNCTION_92	ELSE_1	IF_10	CALL_19
0x4001dae	          0x4889c5	                            mov rbp, rax	      7384	normal.c	FUNCTION_92	ELSE_1	IF_10	CALL_19
0x4001db1	    0x488b05000000	            mov rax, qword [0x04001db8] 	      7385	normal.c	FUNCTION_92	ELSE_1	IF_10
0x4001db8	          0x8b5840	            mov ebx, dword [rax + 0x40] 	      7385	normal.c	FUNCTION_92	ELSE_1	IF_10
0x4001dbb	          0x4429f3	                           sub ebx, r14d	      7385	normal.c	FUNCTION_92	ELSE_1	IF_10
0x4001dbe	          0x4863cb	                         movsxd rcx, ebx	      7386	normal.c	FUNCTION_92	ELSE_1	IF_10	CALL_20
0x4001dc1	          0x4489f2	                           mov edx, r14d	      7386	normal.c	FUNCTION_92	ELSE_1	IF_10	CALL_20
0x4001dc4	          0x4c89ee	                            mov rsi, r13	      7386	normal.c	FUNCTION_92	ELSE_1	IF_10	CALL_20
0x4001dc7	    0x488b3d000000	            mov rdi, qword [0x04001dce] 	      7386	normal.c	FUNCTION_92	ELSE_1	IF_10	CALL_20
0x4001dce	      0xe800000000	                          call 0x4001dd3	      7386	normal.c	FUNCTION_92	ELSE_1	IF_10	CALL_20
0x4001dd3	          0x4963ce	                        movsxd rcx, r14d	      7387	normal.c	FUNCTION_92	ELSE_1	IF_10	CALL_21
0x4001dd6	          0x4801e9	                            add rcx, rbp	      7387	normal.c	FUNCTION_92	ELSE_1	IF_10	CALL_21
0x4001dd9	          0x4189d8	                            mov r8d, ebx	      7387	normal.c	FUNCTION_92	ELSE_1	IF_10	CALL_21
0x4001ddc	          0x4489f2	                           mov edx, r14d	      7387	normal.c	FUNCTION_92	ELSE_1	IF_10	CALL_21
0x4001ddf	          0x4c89ee	                            mov rsi, r13	      7387	normal.c	FUNCTION_92	ELSE_1	IF_10	CALL_21
0x4001de2	    0x488b3d000000	            mov rdi, qword [0x04001de9] 	      7387	normal.c	FUNCTION_92	ELSE_1	IF_10	CALL_21
0x4001de9	      0xe800000000	                          call 0x4001dee	      7387	normal.c	FUNCTION_92	ELSE_1	IF_10	CALL_21
0x4001dee	            0xeb48	                           jmp 0x4001e38	      7387	normal.c	FUNCTION_92	ELSE_1	IF_10	CALL_21
0x4001df0	      0xe800000000	                          call 0x4001df5	      7392	normal.c	FUNCTION_92	CALL_22
0x4001df5	    0x488b05000000	            mov rax, qword [0x04001dfc] 	      7393	normal.c	FUNCTION_92
0x4001dfc	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      7393	normal.c	FUNCTION_92
0x4001e03	      0xe9a7000000	                           jmp 0x4001eaf	      7393	normal.c	FUNCTION_92
0x4001e08	          0x83ea01	                              sub edx, 1	      7401	normal.c	FUNCTION_92	IF_11	IF_12
0x4001e0b	    0x899008120000	          mov dword [rax + 0x1208], edx 	      7401	normal.c	FUNCTION_92	IF_11	IF_12
0x4001e11	      0xe999000000	                           jmp 0x4001eaf	      7401	normal.c	FUNCTION_92	IF_11	IF_12
0x4001e16	          0x4889df	                            mov rdi, rbx	      8575	normal.c	FUNCTION_112	CALL_2
0x4001e19	      0xe840fdffff	                    call sym.nv_operator	      8575	normal.c	FUNCTION_112	CALL_2
0x4001e1e	      0xe98c000000	                           jmp 0x4001eaf	      8576	normal.c	FUNCTION_112
0x4001e23	      0xe800000000	                          call 0x4001e28	      7392	normal.c	FUNCTION_92	CALL_22
0x4001e28	    0x488b05000000	            mov rax, qword [0x04001e2f] 	      7393	normal.c	FUNCTION_92
0x4001e2f	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      7393	normal.c	FUNCTION_92
0x4001e36	            0xeb77	                           jmp 0x4001eaf	      7393	normal.c	FUNCTION_92
0x4001e38	      0xe800000000	                          call 0x4001e3d	      7392	normal.c	FUNCTION_92	CALL_22
0x4001e3d	    0x488b05000000	            mov rax, qword [0x04001e44] 	      7393	normal.c	FUNCTION_92
0x4001e44	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      7393	normal.c	FUNCTION_92
0x4001e4b	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      7396	normal.c	FUNCTION_92	IF_11	CALL_23
0x4001e4f	        0x4883c201	                              add rdx, 1	      7396	normal.c	FUNCTION_92	IF_11	CALL_23
0x4001e53	      0xb900000000	                              mov ecx, 0	      7396	normal.c	FUNCTION_92	IF_11	CALL_23
0x4001e58	        0x8b5c2418	            mov ebx, dword [rsp + 0x18] 	      7396	normal.c	FUNCTION_92	IF_11	CALL_23
0x4001e5c	            0x89de	                            mov esi, ebx	      7396	normal.c	FUNCTION_92	IF_11	CALL_23
0x4001e5e	          0x4c89ff	                            mov rdi, r15	      7396	normal.c	FUNCTION_92	IF_11	CALL_23
0x4001e61	      0xe800000000	                          call 0x4001e66	      7396	normal.c	FUNCTION_92	IF_11	CALL_23
0x4001e66	    0x488b05000000	            mov rax, qword [0x04001e6d] 	      7398	normal.c	FUNCTION_92	IF_11
0x4001e6d	    0x4c89b8e01100	          mov qword [rax + 0x11e0], r15 	      7398	normal.c	FUNCTION_92	IF_11
0x4001e74	    0x8998e8110000	          mov dword [rax + 0x11e8], ebx 	      7398	normal.c	FUNCTION_92	IF_11
0x4001e7a	        0x8b54241c	            mov edx, dword [rsp + 0x1c] 	      7398	normal.c	FUNCTION_92	IF_11
0x4001e7e	    0x8990ec110000	          mov dword [rax + 0x11ec], edx 	      7398	normal.c	FUNCTION_92	IF_11
0x4001e84	    0x488b15000000	            mov rdx, qword [0x04001e8b] 	      7399	normal.c	FUNCTION_92	IF_11
0x4001e8b	        0x488b4a38	            mov rcx, qword [rdx + 0x38] 	      7399	normal.c	FUNCTION_92	IF_11
0x4001e8f	        0x488b5a40	            mov rbx, qword [rdx + 0x40] 	      7399	normal.c	FUNCTION_92	IF_11
0x4001e93	    0x488988001200	          mov qword [rax + 0x1200], rcx 	      7399	normal.c	FUNCTION_92	IF_11
0x4001e9a	    0x488998081200	          mov qword [rax + 0x1208], rbx 	      7399	normal.c	FUNCTION_92	IF_11
0x4001ea1	    0x8b9008120000	          mov edx, dword [rax + 0x1208] 	      7400	normal.c	FUNCTION_92	IF_11	IF_12
0x4001ea7	            0x85d2	                           test edx, edx	      7400	normal.c	FUNCTION_92	IF_11	IF_12
0x4001ea9	     0xf8f59ffffff	                            jg 0x4001e08	      7400	normal.c	FUNCTION_92	IF_11	IF_12
0x4001eaf	        0x4883c428	                           add rsp, 0x28	      8576	normal.c	FUNCTION_112
0x4001eb3	              0x5b	                                 pop rbx	      8576	normal.c	FUNCTION_112
0x4001eb4	              0x5d	                                 pop rbp	      8576	normal.c	FUNCTION_112
0x4001eb5	            0x415c	                                 pop r12	      8576	normal.c	FUNCTION_112
0x4001eb7	            0x415d	                                 pop r13	      8576	normal.c	FUNCTION_112
0x4001eb9	            0x415e	                                 pop r14	      8576	normal.c	FUNCTION_112
0x4001ebb	            0x415f	                                 pop r15	      8576	normal.c	FUNCTION_112
0x4001ebd	              0xc3	                                     ret	      8576	normal.c	FUNCTION_112
nv_exmode	CALL,3:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,1:IF,2	14
0x4000d01	        0x4883ec08	                              sub rsp, 8	      5349	normal.c	FUNCTION_57
0x4000d05	    0x833d00000000	               cmp dword [0x04000d0c], 0	      5353	normal.c	FUNCTION_57	IF_1
0x4000d0c	            0x740c	                            je 0x4000d1a	      5353	normal.c	FUNCTION_57	IF_1
0x4000d0e	      0xbf00010000	                          mov edi, 0x100	      5354	normal.c	FUNCTION_57	CALL_1
0x4000d13	      0xe800000000	                          call 0x4000d18	      5354	normal.c	FUNCTION_57	CALL_1
0x4000d18	            0xeb16	                           jmp 0x4000d30	      5354	normal.c	FUNCTION_57	CALL_1
0x4000d1a	          0x488b3f	                    mov rdi, qword [rdi]	      5355	normal.c	FUNCTION_57	ELSE_1	IF_2	CALL_2
0x4000d1d	      0xe861f5ffff	                   call sym.checkclearop	      5355	normal.c	FUNCTION_57	ELSE_1	IF_2	CALL_2
0x4000d22	            0x85c0	                           test eax, eax	      5355	normal.c	FUNCTION_57	ELSE_1	IF_2	CALL_2
0x4000d24	            0x750a	                           jne 0x4000d30	      5355	normal.c	FUNCTION_57	ELSE_1	IF_2	CALL_2
0x4000d26	      0xbf00000000	                              mov edi, 0	      5356	normal.c	FUNCTION_57	ELSE_1	IF_2
0x4000d2b	      0xe800000000	                          call 0x4000d30	      5356	normal.c	FUNCTION_57	ELSE_1	IF_2
0x4000d30	        0x4883c408	                              add rsp, 8	      5357	normal.c	FUNCTION_57
0x4000d34	              0xc3	                                     ret	      5357	normal.c	FUNCTION_57
nv_optrans	CALL,9:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,1:IF,3	45
0x40018c4	              0x53	                                push rbx	      7503	normal.c	FUNCTION_97
0x40018c5	          0x4889fb	                            mov rbx, rdi	      7503	normal.c	FUNCTION_97
0x40018c8	          0x488b3f	                    mov rdi, qword [rdi]	      7510	normal.c	FUNCTION_97	IF_1	CALL_1
0x40018cb	      0xe891e9ffff	                  call sym.checkclearopq	      7510	normal.c	FUNCTION_97	IF_1	CALL_1
0x40018d0	            0x85c0	                           test eax, eax	      7510	normal.c	FUNCTION_97	IF_1	CALL_1
0x40018d2	     0xf85a4000000	                           jne 0x400197c	      7510	normal.c	FUNCTION_97	IF_1	CALL_1
0x40018d8	        0x837b0c44	            cmp dword [rbx + 0xc], 0x44 	      7514	normal.c	FUNCTION_97	IF_1	IF_2	CALL_2
0x40018dc	            0x756e	                           jne 0x400194c	      7514	normal.c	FUNCTION_97	IF_1	IF_2	CALL_2
0x40018de	      0xbe23000000	                           mov esi, 0x23	      7514	normal.c	FUNCTION_97	IF_1	IF_2	CALL_2
0x40018e3	    0x488b3d000000	            mov rdi, qword [0x040018ea] 	      7514	normal.c	FUNCTION_97	IF_1	IF_2	CALL_2
0x40018ea	      0xe800000000	                          call 0x40018ef	      7514	normal.c	FUNCTION_97	IF_1	IF_2	CALL_2
0x40018ef	          0x4885c0	                           test rax, rax	      7514	normal.c	FUNCTION_97	IF_1	IF_2	CALL_2
0x40018f2	            0x7458	                            je 0x400194c	      7514	normal.c	FUNCTION_97	IF_1	IF_2	CALL_2
0x40018f4	          0x488b03	                    mov rax, qword [rbx]	      7516	normal.c	FUNCTION_97	IF_1	IF_2
0x40018f7	    0x488b15000000	            mov rdx, qword [0x040018fe] 	      7516	normal.c	FUNCTION_97	IF_1	IF_2
0x40018fe	        0x488b7238	            mov rsi, qword [rdx + 0x38] 	      7516	normal.c	FUNCTION_97	IF_1	IF_2
0x4001902	        0x488b7a40	            mov rdi, qword [rdx + 0x40] 	      7516	normal.c	FUNCTION_97	IF_1	IF_2
0x4001906	        0x48897020	             mov qword [rax + 0x20], rsi	      7516	normal.c	FUNCTION_97	IF_1	IF_2
0x400190a	        0x48897828	             mov qword [rax + 0x28], rdi	      7516	normal.c	FUNCTION_97	IF_1	IF_2
0x400190e	          0x488b03	                    mov rax, qword [rbx]	      7517	normal.c	FUNCTION_97	IF_1	IF_2
0x4001911	    0xc70001000000	                      mov dword [rax], 1	      7517	normal.c	FUNCTION_97	IF_1	IF_2
0x4001917	      0xbf01000000	                              mov edi, 1	      7519	normal.c	FUNCTION_97	IF_1	IF_2	CALL_3
0x400191c	      0xe82dffffff	                     call sym.set_op_var	      7519	normal.c	FUNCTION_97	IF_1	IF_2	CALL_3
0x4001921	    0x48c743300100	               mov qword [rbx + 0x30], 1	      7521	normal.c	FUNCTION_97	IF_1	IF_2
0x4001929	          0x4889df	                            mov rdi, rbx	      7522	normal.c	FUNCTION_97	IF_1	IF_2	CALL_4
0x400192c	      0xe885efffff	                      call sym.nv_dollar	      7522	normal.c	FUNCTION_97	IF_1	IF_2	CALL_4
0x4001931	    0xc70500000000	               mov dword [0x0400193b], 1	      7523	normal.c	FUNCTION_97	IF_1	IF_2
0x400193b	      0xe800000000	                          call 0x4001940	      7524	normal.c	FUNCTION_97	IF_1	IF_2	CALL_5
0x4001940	      0xbf44000000	                           mov edi, 0x44	      7525	normal.c	FUNCTION_97	IF_1	IF_2	CALL_6
0x4001945	      0xe800000000	                          call 0x400194a	      7525	normal.c	FUNCTION_97	IF_1	IF_2	CALL_6
0x400194a	            0xeb30	                           jmp 0x400197c	      7525	normal.c	FUNCTION_97	IF_1	IF_2	CALL_6
0x400194c	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	      7529	normal.c	FUNCTION_97	IF_1	ELSE_1	IF_3
0x4001950	          0x4885ff	                           test rdi, rdi	      7529	normal.c	FUNCTION_97	IF_1	ELSE_1	IF_3
0x4001953	            0x7405	                            je 0x400195a	      7529	normal.c	FUNCTION_97	IF_1	ELSE_1	IF_3
0x4001955	      0xe800000000	                          call 0x400195a	      7530	normal.c	FUNCTION_97	IF_1	ELSE_1	CALL_7
0x400195a	          0x8b730c	              mov esi, dword [rbx + 0xc]	      7531	normal.c	FUNCTION_97	IF_1	ELSE_1	CALL_9
0x400195d	      0xbf00000000	                              mov edi, 0	      7531	normal.c	FUNCTION_97	IF_1	ELSE_1	CALL_9
0x4001962	      0xe800000000	                          call 0x4001967	      7531	normal.c	FUNCTION_97	IF_1	ELSE_1	CALL_9
0x4001967	    0x482d00000000	                              sub rax, 0	      7531	normal.c	FUNCTION_97	IF_1	ELSE_1	CALL_9
0x400196d	            0x4898	                                    cdqe	      7531	normal.c	FUNCTION_97	IF_1	ELSE_1	CALL_9
0x400196f	    0x488b3cc50000	                  mov rdi, qword [rax*8]	      7531	normal.c	FUNCTION_97	IF_1	ELSE_1	CALL_9
0x4001977	      0xe800000000	                          call 0x400197c	      7531	normal.c	FUNCTION_97	IF_1	ELSE_1	CALL_9
0x400197c	    0x48c743200000	               mov qword [rbx + 0x20], 0	      7534	normal.c	FUNCTION_97
0x4001984	              0x5b	                                 pop rbx	      7535	normal.c	FUNCTION_97
0x4001985	              0xc3	                                     ret	      7535	normal.c	FUNCTION_97
nv_hat	CALL,2:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,0:IF,1	13
0x4002255	              0x53	                                push rbx	      5511	normal.c	FUNCTION_63
0x4002256	          0x4889fb	                            mov rbx, rdi	      5511	normal.c	FUNCTION_63
0x4002259	          0x488b3f	                    mov rdi, qword [rdi]	      5512	normal.c	FUNCTION_63	IF_1	CALL_1
0x400225c	      0xe800e0ffff	                  call sym.checkclearopq	      5512	normal.c	FUNCTION_63	IF_1	CALL_1
0x4002261	            0x85c0	                           test eax, eax	      5512	normal.c	FUNCTION_63	IF_1	CALL_1
0x4002263	            0x7518	                           jne 0x400227d	      5512	normal.c	FUNCTION_63	IF_1	CALL_1
0x4002265	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	      5513	normal.c	FUNCTION_63	IF_1	CALL_2
0x4002269	      0xb900000000	                              mov ecx, 0	      5513	normal.c	FUNCTION_63	IF_1	CALL_2
0x400226e	      0xba03000000	                              mov edx, 3	      5513	normal.c	FUNCTION_63	IF_1	CALL_2
0x4002273	      0xbe00000000	                              mov esi, 0	      5513	normal.c	FUNCTION_63	IF_1	CALL_2
0x4002278	      0xe800000000	                          call 0x400227d	      5513	normal.c	FUNCTION_63	IF_1	CALL_2
0x400227d	              0x5b	                                 pop rbx	      5515	normal.c	FUNCTION_63
0x400227e	              0xc3	                                     ret	      5515	normal.c	FUNCTION_63
nv_redo	CALL,2:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,0:IF,1	12
0x40022af	              0x53	                                push rbx	      8536	normal.c	FUNCTION_110
0x40022b0	          0x4889fb	                            mov rbx, rdi	      8536	normal.c	FUNCTION_110
0x40022b3	          0x488b3f	                    mov rdi, qword [rdi]	      8537	normal.c	FUNCTION_110	IF_1	CALL_1
0x40022b6	      0xe8a6dfffff	                  call sym.checkclearopq	      8537	normal.c	FUNCTION_110	IF_1	CALL_1
0x40022bb	            0x85c0	                           test eax, eax	      8537	normal.c	FUNCTION_110	IF_1	CALL_1
0x40022bd	            0x7517	                           jne 0x40022d6	      8537	normal.c	FUNCTION_110	IF_1	CALL_1
0x40022bf	        0x488b7b30	            mov rdi, qword [rbx + 0x30] 	      8539	normal.c	FUNCTION_110	IF_1	CALL_2
0x40022c3	      0xe800000000	                          call 0x40022c8	      8539	normal.c	FUNCTION_110	IF_1	CALL_2
0x40022c8	    0x488b05000000	            mov rax, qword [0x040022cf] 	      8540	normal.c	FUNCTION_110	IF_1
0x40022cf	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      8540	normal.c	FUNCTION_110	IF_1
0x40022d6	              0x5b	                                 pop rbx	      8542	normal.c	FUNCTION_110
0x40022d7	              0xc3	                                     ret	      8542	normal.c	FUNCTION_110
do_check_scrollbind	CALL,3:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,2:IF,5	58
0x40068b6	        0x4883ec08	                              sub rsp, 8	      3986	normal.c	FUNCTION_35
0x40068ba	            0x85ff	                           test edi, edi	      3995	normal.c	FUNCTION_35	IF_1
0x40068bc	     0xf84d4000000	                            je 0x4006996	      3995	normal.c	FUNCTION_35	IF_1
0x40068c2	    0x488b05000000	            mov rax, qword [0x040068c9] 	      3995	normal.c	FUNCTION_35	IF_1
0x40068c9	    0x83b888020000	              cmp dword [rax + 0x288], 0	      3995	normal.c	FUNCTION_35	IF_1
0x40068d0	     0xf84c0000000	                            je 0x4006996	      3995	normal.c	FUNCTION_35	IF_1
0x40068d6	    0x833d00000000	               cmp dword [0x040068dd], 0	      3999	normal.c	FUNCTION_35	IF_1	IF_2
0x40068dd	            0x740f	                            je 0x40068ee	      3999	normal.c	FUNCTION_35	IF_1	IF_2
0x40068df	    0xc70500000000	               mov dword [0x040068e9], 0	      4000	normal.c	FUNCTION_35	IF_1	IF_2
0x40068e9	      0xe996000000	                           jmp 0x4006984	      4000	normal.c	FUNCTION_35	IF_1	IF_2
0x40068ee	    0x483b05000000	            cmp rax, qword [0x040068f5] 	      4001	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3
0x40068f5	            0x755b	                           jne 0x4006952	      4001	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3
0x40068f7	    0x488b0d000000	            mov rcx, qword [0x040068fe] 	      4008	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3	IF_4
0x40068fe	        0x48394808	                cmp qword [rax + 8], rcx	      4008	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3	IF_4
0x4006902	            0x7409	                            je 0x400690d	      4008	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3	IF_4
0x4006904	    0x83b8c0010000	              cmp dword [rax + 0x1c0], 0	      4010	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3	IF_4
0x400690b	            0x7477	                            je 0x4006984	      4010	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3	IF_4
0x400690d	        0x488b7878	            mov rdi, qword [rax + 0x78] 	      4013	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3	IF_4
0x4006911	    0x488b15000000	            mov rdx, qword [0x04006918] 	      4013	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3	IF_4
0x4006918	          0x4839d7	                            cmp rdi, rdx	      4013	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3	IF_4
0x400691b	            0x751c	                           jne 0x4006939	      4013	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3	IF_4
0x400691d	    0x8b0d00000000	            mov ecx, dword [0x04006923] 	      4015	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3	IF_4
0x4006923	    0x398884000000	            cmp dword [rax + 0x84], ecx 	      4015	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3	IF_4
0x4006929	            0x750e	                           jne 0x4006939	      4015	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3	IF_4
0x400692b	    0x8b0d00000000	            mov ecx, dword [0x04006931] 	      4017	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3	IF_4
0x4006931	    0x398894000000	            cmp dword [rax + 0x94], ecx 	      4017	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3	IF_4
0x4006937	            0x744b	                            je 0x4006984	      4017	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3	IF_4
0x4006939	    0x8bb094000000	            mov esi, dword [rax + 0x94] 	      4019	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3	IF_4	CALL_1
0x400693f	    0x2b3500000000	             sub esi, dword [0x04006945]	      4019	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3	IF_4	CALL_1
0x4006945	          0x4863f6	                         movsxd rsi, esi	      4019	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3	IF_4	CALL_1
0x4006948	          0x4829d7	                            sub rdi, rdx	      4019	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3	IF_4	CALL_1
0x400694b	      0xe800000000	                          call 0x4006950	      4019	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3	IF_4	CALL_1
0x4006950	            0xeb32	                           jmp 0x4006984	      4019	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3	IF_4	CALL_1
0x4006952	      0xbe6a000000	                           mov esi, 0x6a	      4023	normal.c	FUNCTION_35	IF_1	ELSE_2	IF_5	CALL_2
0x4006957	    0x488b3d000000	            mov rdi, qword [0x0400695e] 	      4023	normal.c	FUNCTION_35	IF_1	ELSE_2	IF_5	CALL_2
0x400695e	      0xe800000000	                          call 0x4006963	      4023	normal.c	FUNCTION_35	IF_1	ELSE_2	IF_5	CALL_2
0x4006963	          0x4885c0	                           test rax, rax	      4023	normal.c	FUNCTION_35	IF_1	ELSE_2	IF_5	CALL_2
0x4006966	            0x741c	                            je 0x4006984	      4023	normal.c	FUNCTION_35	IF_1	ELSE_2	IF_5	CALL_2
0x4006968	    0x488b05000000	            mov rax, qword [0x0400696f] 	      4035	normal.c	FUNCTION_35	IF_1	ELSE_2	IF_5	CALL_3
0x400696f	        0x488b7878	            mov rdi, qword [rax + 0x78] 	      4035	normal.c	FUNCTION_35	IF_1	ELSE_2	IF_5	CALL_3
0x4006973	    0x482bb8500500	            sub rdi, qword [rax + 0x550]	      4035	normal.c	FUNCTION_35	IF_1	ELSE_2	IF_5	CALL_3
0x400697a	      0xbe00000000	                              mov esi, 0	      4035	normal.c	FUNCTION_35	IF_1	ELSE_2	IF_5	CALL_3
0x400697f	      0xe800000000	                          call 0x4006984	      4035	normal.c	FUNCTION_35	IF_1	ELSE_2	IF_5	CALL_3
0x4006984	    0x488b05000000	            mov rax, qword [0x0400698b] 	      4037	normal.c	FUNCTION_35	IF_1
0x400698b	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      4037	normal.c	FUNCTION_35	IF_1
0x400698f	    0x488990500500	            mov qword [rax + 0x550], rdx	      4037	normal.c	FUNCTION_35	IF_1
0x4006996	    0x488b05000000	            mov rax, qword [0x0400699d] 	      4040	normal.c	FUNCTION_35
0x400699d	    0x488905000000	            mov qword [0x040069a4], rax 	      4040	normal.c	FUNCTION_35
0x40069a4	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      4041	normal.c	FUNCTION_35
0x40069a8	    0x488915000000	            mov qword [0x040069af], rdx 	      4041	normal.c	FUNCTION_35
0x40069af	    0x8b9084000000	            mov edx, dword [rax + 0x84] 	      4043	normal.c	FUNCTION_35
0x40069b5	    0x891500000000	            mov dword [0x040069bb], edx 	      4043	normal.c	FUNCTION_35
0x40069bb	        0x488b5008	                mov rdx, qword [rax + 8]	      4045	normal.c	FUNCTION_35
0x40069bf	    0x488915000000	            mov qword [0x040069c6], rdx 	      4045	normal.c	FUNCTION_35
0x40069c6	    0x8b8094000000	            mov eax, dword [rax + 0x94] 	      4046	normal.c	FUNCTION_35
0x40069cc	    0x890500000000	            mov dword [0x040069d2], eax 	      4046	normal.c	FUNCTION_35
0x40069d2	        0x4883c408	                              add rsp, 8	      4047	normal.c	FUNCTION_35
0x40069d6	              0xc3	                                     ret	      4047	normal.c	FUNCTION_35
nv_goto	CALL,3:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,2:IF,5	46
0x4000636	              0x55	                                push rbp	      8920	normal.c	FUNCTION_125
0x4000637	              0x53	                                push rbx	      8920	normal.c	FUNCTION_125
0x4000638	        0x4883ec08	                              sub rsp, 8	      8920	normal.c	FUNCTION_125
0x400063c	          0x4889fd	                            mov rbp, rdi	      8920	normal.c	FUNCTION_125
0x400063f	        0x837f3800	               cmp dword [rdi + 0x38], 0	      8923	normal.c	FUNCTION_125	IF_1
0x4000643	            0x7476	                            je 0x40006bb	      8923	normal.c	FUNCTION_125	IF_1
0x4000645	    0x488b05000000	            mov rax, qword [0x0400064c] 	      8924	normal.c	FUNCTION_125	IF_1
0x400064c	          0x488b18	                    mov rbx, qword [rax]	      8924	normal.c	FUNCTION_125	IF_1
0x400064f	          0x488b07	                    mov rax, qword [rdi]	      8927	normal.c	FUNCTION_125
0x4000652	    0xc74008010000	                  mov dword [rax + 8], 1	      8927	normal.c	FUNCTION_125
0x4000659	      0xe800000000	                          call 0x400065e	      8928	normal.c	FUNCTION_125	CALL_1
0x400065e	        0x488b4528	            mov rax, qword [rbp + 0x28] 	      8931	normal.c	FUNCTION_125	IF_2
0x4000662	          0x4885c0	                           test rax, rax	      8931	normal.c	FUNCTION_125	IF_2
0x4000665	        0x480f45d8	                         cmovne rbx, rax	      8931	normal.c	FUNCTION_125	IF_2
0x4000669	      0xb801000000	                              mov eax, 1	      8934	normal.c	FUNCTION_125	IF_3
0x400066e	          0x4885db	                           test rbx, rbx	      8933	normal.c	FUNCTION_125	IF_3
0x4000671	            0x7e11	                           jle 0x4000684	      8933	normal.c	FUNCTION_125	IF_3
0x4000673	    0x488b05000000	            mov rax, qword [0x0400067a] 	      8935	normal.c	FUNCTION_125	ELSE_2	IF_4
0x400067a	          0x488b00	                    mov rax, qword [rax]	      8935	normal.c	FUNCTION_125	ELSE_2	IF_4
0x400067d	          0x4839d8	                            cmp rax, rbx	      8935	normal.c	FUNCTION_125	ELSE_2	IF_4
0x4000680	        0x480f4fc3	                          cmovg rax, rbx	      8935	normal.c	FUNCTION_125	ELSE_2	IF_4
0x4000684	    0x488b15000000	            mov rdx, qword [0x0400068b] 	      8937	normal.c	FUNCTION_125
0x400068b	        0x48894238	             mov qword [rdx + 0x38], rax	      8937	normal.c	FUNCTION_125
0x400068f	      0xbf06000000	                              mov edi, 6	      8938	normal.c	FUNCTION_125	CALL_2
0x4000694	      0xe800000000	                          call 0x4000699	      8938	normal.c	FUNCTION_125	CALL_2
0x4000699	    0xf60500000000	               test byte [0x040006a0], 4	      8940	normal.c	FUNCTION_125	IF_5
0x40006a0	            0x7438	                            je 0x40006da	      8940	normal.c	FUNCTION_125	IF_5
0x40006a2	    0x833d00000000	               cmp dword [0x040006a9], 0	      8940	normal.c	FUNCTION_125	IF_5
0x40006a9	            0x742f	                            je 0x40006da	      8940	normal.c	FUNCTION_125	IF_5
0x40006ab	        0x488b4500	                    mov rax, qword [rbp]	      8940	normal.c	FUNCTION_125	IF_5
0x40006af	          0x833800	                      cmp dword [rax], 0	      8940	normal.c	FUNCTION_125	IF_5
0x40006b2	            0x7526	                           jne 0x40006da	      8940	normal.c	FUNCTION_125	IF_5
0x40006b4	      0xe800000000	                          call 0x40006b9	      8941	normal.c	FUNCTION_125	CALL_3
0x40006b9	            0xeb1f	                           jmp 0x40006da	      8943	normal.c	FUNCTION_125
0x40006bb	          0x488b07	                    mov rax, qword [rdi]	      8927	normal.c	FUNCTION_125
0x40006be	    0xc74008010000	                  mov dword [rax + 8], 1	      8927	normal.c	FUNCTION_125
0x40006c5	      0xe800000000	                          call 0x40006ca	      8928	normal.c	FUNCTION_125	CALL_1
0x40006ca	        0x488b5d28	            mov rbx, qword [rbp + 0x28] 	      8931	normal.c	FUNCTION_125	IF_2
0x40006ce	          0x4885db	                           test rbx, rbx	      8931	normal.c	FUNCTION_125	IF_2
0x40006d1	            0x7596	                           jne 0x4000669	      8931	normal.c	FUNCTION_125	IF_2
0x40006d3	      0xbb01000000	                              mov ebx, 1	      8926	normal.c	FUNCTION_125	ELSE_1
0x40006d8	            0xeb99	                           jmp 0x4000673	      8926	normal.c	FUNCTION_125	ELSE_1
0x40006da	        0x4883c408	                              add rsp, 8	      8943	normal.c	FUNCTION_125
0x40006de	              0x5b	                                 pop rbx	      8943	normal.c	FUNCTION_125
0x40006df	              0x5d	                                 pop rbp	      8943	normal.c	FUNCTION_125
0x40006e0	              0xc3	                                     ret	      8943	normal.c	FUNCTION_125
nv_mousescroll	CALL,6:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,3:IF,8	79
0x4006fa7	              0x55	                                push rbp	      4609	normal.c	FUNCTION_47
0x4006fa8	              0x53	                                push rbx	      4609	normal.c	FUNCTION_47
0x4006fa9	        0x4883ec18	                           sub rsp, 0x18	      4609	normal.c	FUNCTION_47
0x4006fad	          0x4889fd	                            mov rbp, rdi	      4609	normal.c	FUNCTION_47
0x4006fb0	    0x64488b042528	                mov rax, qword fs:[0x28]	      4609	normal.c	FUNCTION_47
0x4006fb9	      0x4889442408	                mov qword [rsp + 8], rax	      4609	normal.c	FUNCTION_47
0x4006fbe	            0x31c0	                            xor eax, eax	      4609	normal.c	FUNCTION_47
0x4006fc0	    0x488b1d000000	            mov rbx, qword [0x04006fc7] 	      4610	normal.c	FUNCTION_47
0x4006fc7	    0x8b0500000000	            mov eax, dword [0x04006fcd] 	      4612	normal.c	FUNCTION_47	IF_1
0x4006fcd	            0x85c0	                           test eax, eax	      4612	normal.c	FUNCTION_47	IF_1
0x4006fcf	            0x7839	                            js 0x400700a	      4612	normal.c	FUNCTION_47	IF_1
0x4006fd1	    0x8b1500000000	            mov edx, dword [0x04006fd7] 	      4612	normal.c	FUNCTION_47	IF_1
0x4006fd7	            0x85d2	                           test edx, edx	      4612	normal.c	FUNCTION_47	IF_1
0x4006fd9	            0x782f	                            js 0x400700a	      4612	normal.c	FUNCTION_47	IF_1
0x4006fdb	          0x890424	                    mov dword [rsp], eax	      4616	normal.c	FUNCTION_47	IF_1
0x4006fde	        0x89542404	                mov dword [rsp + 4], edx	      4617	normal.c	FUNCTION_47	IF_1
0x4006fe2	      0x488d742404	                      lea rsi, [rsp + 4]	      4620	normal.c	FUNCTION_47	IF_1	CALL_1
0x4006fe7	          0x4889e7	                            mov rdi, rsp	      4620	normal.c	FUNCTION_47	IF_1	CALL_1
0x4006fea	      0xe800000000	                          call 0x4006fef	      4620	normal.c	FUNCTION_47	IF_1	CALL_1
0x4006fef	          0x4885c0	                           test rax, rax	      4621	normal.c	FUNCTION_47	IF_1	IF_2
0x4006ff2	     0xf84e7000000	                            je 0x40070df	      4621	normal.c	FUNCTION_47	IF_1	IF_2
0x4006ff8	    0x488905000000	            mov qword [0x04006fff], rax 	      4623	normal.c	FUNCTION_47	IF_1
0x4006fff	        0x488b4008	                mov rax, qword [rax + 8]	      4624	normal.c	FUNCTION_47	IF_1
0x4007003	    0x488905000000	            mov qword [0x0400700a], rax 	      4624	normal.c	FUNCTION_47	IF_1
0x400700a	          0x8b4d38	            mov ecx, dword [rbp + 0x38] 	      4627	normal.c	FUNCTION_47	IF_3
0x400700d	          0x83f901	                              cmp ecx, 1	      4627	normal.c	FUNCTION_47	IF_3
0x4007010	            0x7761	                            ja 0x4007073	      4627	normal.c	FUNCTION_47	IF_3
0x4007012	      0xe800000000	                          call 0x4007017	      4630	normal.c	FUNCTION_47	IF_3	IF_4	CALL_2
0x4007017	            0x85c0	                           test eax, eax	      4630	normal.c	FUNCTION_47	IF_3	IF_4	CALL_2
0x4007019	            0x7420	                            je 0x400703b	      4630	normal.c	FUNCTION_47	IF_3	IF_4	CALL_2
0x400701b	          0x8b750c	              mov esi, dword [rbp + 0xc]	      4633	normal.c	FUNCTION_47	IF_3	CALL_3
0x400701e	    0x488b05000000	            mov rax, qword [0x04007025] 	      4633	normal.c	FUNCTION_47	IF_3	CALL_3
0x4007025	    0x488bb8481c00	          mov rdi, qword [rax + 0x1c48] 	      4633	normal.c	FUNCTION_47	IF_3	CALL_3
0x400702c	      0xba00000000	                              mov edx, 0	      4633	normal.c	FUNCTION_47	IF_3	CALL_3
0x4007031	      0xe800000000	                          call 0x4007036	      4633	normal.c	FUNCTION_47	IF_3	CALL_3
0x4007036	      0xe981000000	                           jmp 0x40070bc	      4633	normal.c	FUNCTION_47	IF_3	CALL_3
0x400703b	    0xf60500000000	               test byte [0x04007042], 6	      4636	normal.c	FUNCTION_47	IF_3	ELSE_1	IF_5
0x4007042	            0x7415	                            je 0x4007059	      4636	normal.c	FUNCTION_47	IF_3	ELSE_1	IF_5
0x4007044	        0x837d3801	               cmp dword [rbp + 0x38], 1	      4638	normal.c	FUNCTION_47	IF_3	ELSE_1	IF_5	CALL_4
0x4007048	            0x19ff	                            sbb edi, edi	      4638	normal.c	FUNCTION_47	IF_3	ELSE_1	IF_5	CALL_4
0x400704a	          0x83cf01	                               or edi, 1	      4638	normal.c	FUNCTION_47	IF_3	ELSE_1	IF_5	CALL_4
0x400704d	      0xbe01000000	                              mov esi, 1	      4638	normal.c	FUNCTION_47	IF_3	ELSE_1	IF_5	CALL_4
0x4007052	      0xe800000000	                          call 0x4007057	      4638	normal.c	FUNCTION_47	IF_3	ELSE_1	IF_5	CALL_4
0x4007057	            0xeb63	                           jmp 0x40070bc	      4638	normal.c	FUNCTION_47	IF_3	ELSE_1	IF_5	CALL_4
0x4007059	    0x48c745300300	               mov qword [rbp + 0x30], 3	      4642	normal.c	FUNCTION_47	IF_3	ELSE_2
0x4007061	    0x48c745280300	               mov qword [rbp + 0x28], 3	      4643	normal.c	FUNCTION_47	IF_3	ELSE_2
0x4007069	          0x4889ef	                            mov rdi, rbp	      4644	normal.c	FUNCTION_47	IF_3	ELSE_2	CALL_5
0x400706c	      0xe818ffffff	                 call sym.nv_scroll_line	      4644	normal.c	FUNCTION_47	IF_3	ELSE_2	CALL_5
0x4007071	            0xeb49	                           jmp 0x40070bc	      4644	normal.c	FUNCTION_47	IF_3	ELSE_2	CALL_5
0x4007073	    0x488b15000000	            mov rdx, qword [0x0400707a] 	      4651	normal.c	FUNCTION_47	ELSE_3	IF_6
0x400707a	    0x83ba94020000	              cmp dword [rdx + 0x294], 0	      4651	normal.c	FUNCTION_47	ELSE_3	IF_6
0x4007081	            0x7539	                           jne 0x40070bc	      4651	normal.c	FUNCTION_47	ELSE_3	IF_6
0x4007083	      0xbf06000000	                              mov edi, 6	      4653	normal.c	FUNCTION_47	ELSE_3	IF_6
0x4007088	    0xf60500000000	               test byte [0x0400708f], 6	      4655	normal.c	FUNCTION_47	ELSE_3	IF_6	IF_7
0x400708f	            0x7406	                            je 0x4007097	      4655	normal.c	FUNCTION_47	ELSE_3	IF_6	IF_7
0x4007091	    0x8bbaac000000	            mov edi, dword [rdx + 0xac] 	      4656	normal.c	FUNCTION_47	ELSE_3	IF_6	IF_7
0x4007097	            0x89f8	                            mov eax, edi	      4657	normal.c	FUNCTION_47	ELSE_3	IF_6
0x4007099	            0xf7d8	                                 neg eax	      4657	normal.c	FUNCTION_47	ELSE_3	IF_6
0x400709b	          0x83f9fe	             cmp ecx, 0xfffffffffffffffe	      4657	normal.c	FUNCTION_47	ELSE_3	IF_6
0x400709e	           0xf44f8	                          cmove edi, eax	      4657	normal.c	FUNCTION_47	ELSE_3	IF_6
0x40070a1	     0x3ba94000000	             add edi, dword [rdx + 0x94]	      4661	normal.c	FUNCTION_47	ELSE_3	IF_6	CALL_6
0x40070a7	      0xb800000000	                              mov eax, 0	      4661	normal.c	FUNCTION_47	ELSE_3	IF_6	CALL_6
0x40070ac	           0xf48f8	                          cmovs edi, eax	      4661	normal.c	FUNCTION_47	ELSE_3	IF_6	CALL_6
0x40070af	          0x4863ff	                         movsxd rdi, edi	      4661	normal.c	FUNCTION_47	ELSE_3	IF_6	CALL_6
0x40070b2	      0xbe01000000	                              mov esi, 1	      4661	normal.c	FUNCTION_47	ELSE_3	IF_6	CALL_6
0x40070b7	      0xe800000000	                          call 0x40070bc	      4661	normal.c	FUNCTION_47	ELSE_3	IF_6	CALL_6
0x40070bc	    0x488b05000000	            mov rax, qword [0x040070c3] 	      4666	normal.c	FUNCTION_47
0x40070c3	    0xc78040010000	              mov dword [rax + 0x140], 1	      4666	normal.c	FUNCTION_47
0x40070cd	    0x48891d000000	            mov qword [0x040070d4], rbx 	      4668	normal.c	FUNCTION_47
0x40070d4	        0x488b4308	                mov rax, qword [rbx + 8]	      4669	normal.c	FUNCTION_47
0x40070d8	    0x488905000000	            mov qword [0x040070df], rax 	      4669	normal.c	FUNCTION_47
0x40070df	      0x488b442408	                mov rax, qword [rsp + 8]	      4670	normal.c	FUNCTION_47
0x40070e4	    0x644833042528	                xor rax, qword fs:[0x28]	      4670	normal.c	FUNCTION_47
0x40070ed	            0x7405	                            je 0x40070f4	      4670	normal.c	FUNCTION_47
0x40070ef	      0xe800000000	                          call 0x40070f4	      4670	normal.c	FUNCTION_47
0x40070f4	        0x4883c418	                           add rsp, 0x18	      4670	normal.c	FUNCTION_47
0x40070f8	              0x5b	                                 pop rbx	      4670	normal.c	FUNCTION_47
0x40070f9	              0x5d	                                 pop rbp	      4670	normal.c	FUNCTION_47
0x40070fa	              0xc3	                                     ret	      4670	normal.c	FUNCTION_47
nv_drop	CALL,1:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,0:IF,0	8
0x4000205	        0x4883ec08	                              sub rsp, 8	      9569	normal.c	FUNCTION_138
0x4000209	      0xb902000000	                              mov ecx, 2	      9570	normal.c	FUNCTION_138	CALL_1
0x400020e	      0xba01000000	                              mov edx, 1	      9570	normal.c	FUNCTION_138	CALL_1
0x4000213	      0xbeffffffff	                     mov esi, 0xffffffff	      9570	normal.c	FUNCTION_138	CALL_1
0x4000218	      0xbf7e000000	                           mov edi, 0x7e	      9570	normal.c	FUNCTION_138	CALL_1
0x400021d	      0xe800000000	                          call 0x4000222	      9570	normal.c	FUNCTION_138	CALL_1
0x4000222	        0x4883c408	                              add rsp, 8	      9571	normal.c	FUNCTION_138
0x4000226	              0xc3	                                     ret	      9571	normal.c	FUNCTION_138
nv_window	CALL,3:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,1:IF,2	18
0x4002e1b	              0x53	                                push rbx	      7853	normal.c	FUNCTION_105
0x4002e1c	          0x4889fb	                            mov rbx, rdi	      7853	normal.c	FUNCTION_105
0x4002e1f	        0x837f103a	           cmp dword [rdi + 0x10], 0x3a 	      7854	normal.c	FUNCTION_105	IF_1
0x4002e23	            0x7515	                           jne 0x4002e3a	      7854	normal.c	FUNCTION_105	IF_1
0x4002e25	    0xc7470c3a0000	            mov dword [rdi + 0xc], 0x3a 	      7857	normal.c	FUNCTION_105	IF_1
0x4002e2c	    0xc74710000000	               mov dword [rdi + 0x10], 0	      7858	normal.c	FUNCTION_105	IF_1
0x4002e33	      0xe88ffeffff	                       call sym.nv_colon	      7859	normal.c	FUNCTION_105	IF_1	CALL_1
0x4002e38	            0xeb1d	                           jmp 0x4002e57	      7859	normal.c	FUNCTION_105	IF_1	CALL_1
0x4002e3a	          0x488b3f	                    mov rdi, qword [rdi]	      7861	normal.c	FUNCTION_105	ELSE_1	IF_2	CALL_2
0x4002e3d	      0xe841d4ffff	                   call sym.checkclearop	      7861	normal.c	FUNCTION_105	ELSE_1	IF_2	CALL_2
0x4002e42	            0x85c0	                           test eax, eax	      7861	normal.c	FUNCTION_105	ELSE_1	IF_2	CALL_2
0x4002e44	            0x7511	                           jne 0x4002e57	      7861	normal.c	FUNCTION_105	ELSE_1	IF_2	CALL_2
0x4002e46	        0x488b7328	            mov rsi, qword [rbx + 0x28] 	      7862	normal.c	FUNCTION_105	ELSE_1	IF_2
0x4002e4a	          0x8b7b10	            mov edi, dword [rbx + 0x10] 	      7862	normal.c	FUNCTION_105	ELSE_1	IF_2
0x4002e4d	      0xba00000000	                              mov edx, 0	      7862	normal.c	FUNCTION_105	ELSE_1	IF_2
0x4002e52	      0xe800000000	                          call 0x4002e57	      7862	normal.c	FUNCTION_105	ELSE_1	IF_2
0x4002e57	              0x5b	                                 pop rbx	      7863	normal.c	FUNCTION_105
0x4002e58	              0xc3	                                     ret	      7863	normal.c	FUNCTION_105
push_showcmd	CALL,1:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,0:IF,1	9
0x4006681	    0x833d00000000	               cmp dword [0x04006688], 0	      3938	normal.c	FUNCTION_32	IF_1
0x4006688	            0x741c	                            je 0x40066a6	      3938	normal.c	FUNCTION_32	IF_1
0x400668a	        0x4883ec08	                              sub rsp, 8	      3937	normal.c	FUNCTION_32
0x400668e	      0xba29000000	                           mov edx, 0x29	       110	string3.h	FUNCTION_147	CALL_3
0x4006693	      0xbe00000000	                              mov esi, 0	       110	string3.h	FUNCTION_147	CALL_3
0x4006698	      0xbf00000000	                              mov edi, 0	       110	string3.h	FUNCTION_147	CALL_3
0x400669d	      0xe800000000	                          call 0x40066a2	       110	string3.h	FUNCTION_147	CALL_3
0x40066a2	        0x4883c408	                              add rsp, 8	      3940	normal.c	FUNCTION_32
0x40066a6	            0xf3c3	                                     ret	      3940	normal.c	FUNCTION_32
nv_brackets	CALL,47:SWITCH,0:DO,0:FOR,4:functions,0:WHILE,1:ELSE,21:IF,45	651
0x400a5d5	            0x4157	                                push r15	      6458	normal.c	FUNCTION_81
0x400a5d7	            0x4156	                                push r14	      6458	normal.c	FUNCTION_81
0x400a5d9	            0x4155	                                push r13	      6458	normal.c	FUNCTION_81
0x400a5db	            0x4154	                                push r12	      6458	normal.c	FUNCTION_81
0x400a5dd	              0x55	                                push rbp	      6458	normal.c	FUNCTION_81
0x400a5de	              0x53	                                push rbx	      6458	normal.c	FUNCTION_81
0x400a5df	        0x4883ec58	                           sub rsp, 0x58	      6458	normal.c	FUNCTION_81
0x400a5e3	          0x4889fb	                            mov rbx, rdi	      6458	normal.c	FUNCTION_81
0x400a5e6	    0x64488b042528	                mov rax, qword fs:[0x28]	      6458	normal.c	FUNCTION_81
0x400a5ef	      0x4889442448	             mov qword [rsp + 0x48], rax	      6458	normal.c	FUNCTION_81
0x400a5f4	            0x31c0	                            xor eax, eax	      6458	normal.c	FUNCTION_81
0x400a5f6	    0x48c744242000	               mov qword [rsp + 0x20], 0	      6459	normal.c	FUNCTION_81	CALL_1
0x400a5ff	    0xc74424280000	               mov dword [rsp + 0x28], 0	      6459	normal.c	FUNCTION_81	CALL_1
0x400a607	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	      6459	normal.c	FUNCTION_81	CALL_1
0x400a60f	          0x488b07	                    mov rax, qword [rdi]	      6468	normal.c	FUNCTION_81
0x400a612	    0xc74008000000	                  mov dword [rax + 8], 0	      6468	normal.c	FUNCTION_81
0x400a619	          0x488b07	                    mov rax, qword [rdi]	      6469	normal.c	FUNCTION_81
0x400a61c	    0xc74014000000	               mov dword [rax + 0x14], 0	      6469	normal.c	FUNCTION_81
0x400a623	    0x488b05000000	            mov rax, qword [0x0400a62a] 	      6470	normal.c	FUNCTION_81
0x400a62a	        0x4c8b7838	            mov r15, qword [rax + 0x38] 	      6470	normal.c	FUNCTION_81
0x400a62e	        0x448b7040	           mov r14d, dword [rax + 0x40] 	      6470	normal.c	FUNCTION_81
0x400a632	          0x8b4844	            mov ecx, dword [rax + 0x44] 	      6470	normal.c	FUNCTION_81
0x400a635	        0x894c2408	                mov dword [rsp + 8], ecx	      6470	normal.c	FUNCTION_81
0x400a639	    0xc74044000000	               mov dword [rax + 0x44], 0	      6472	normal.c	FUNCTION_81
0x400a640	          0x8b7710	            mov esi, dword [rdi + 0x10] 	      6479	normal.c	FUNCTION_81	IF_1
0x400a643	          0x83fe66	                           cmp esi, 0x66	      6479	normal.c	FUNCTION_81	IF_1
0x400a646	            0x750a	                           jne 0x400a652	      6479	normal.c	FUNCTION_81	IF_1
0x400a648	      0xe87e90ffff	                    call sym.nv_gotofile	      6480	normal.c	FUNCTION_81	CALL_2
0x400a64d	      0xe9190a0000	                           jmp 0x400b06b	      6480	normal.c	FUNCTION_81	CALL_2
0x400a652	      0xbf00000000	                              mov edi, 0	      6494	normal.c	FUNCTION_81	ELSE_1	IF_2	CALL_3
0x400a657	      0xe800000000	                          call 0x400a65c	      6494	normal.c	FUNCTION_81	ELSE_1	IF_2	CALL_3
0x400a65c	          0x4885c0	                           test rax, rax	      6494	normal.c	FUNCTION_81	ELSE_1	IF_2	CALL_3
0x400a65f	     0xf84e0000000	                            je 0x400a745	      6494	normal.c	FUNCTION_81	ELSE_1	IF_2	CALL_3
0x400a665	      0xbe01000000	                              mov esi, 1	      6505	normal.c	FUNCTION_81	ELSE_1	IF_2	IF_3	CALL_4
0x400a66a	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      6505	normal.c	FUNCTION_81	ELSE_1	IF_2	IF_3	CALL_4
0x400a66f	      0xe800000000	                          call 0x400a674	      6505	normal.c	FUNCTION_81	ELSE_1	IF_2	IF_3	CALL_4
0x400a674	            0x89c5	                            mov ebp, eax	      6505	normal.c	FUNCTION_81	ELSE_1	IF_2	IF_3	CALL_4
0x400a676	            0x85c0	                           test eax, eax	      6505	normal.c	FUNCTION_81	ELSE_1	IF_2	IF_3	CALL_4
0x400a678	            0x7523	                           jne 0x400a69d	      6505	normal.c	FUNCTION_81	ELSE_1	IF_2	IF_3	CALL_4
0x400a67a	          0x488b03	                    mov rax, qword [rbx]	      6506	normal.c	FUNCTION_81	ELSE_1	IF_2	CALL_5
0x400a67d	    0xc70000000000	                      mov dword [rax], 0	      3676	normal.c	FUNCTION_24
0x400a683	    0xc74004000000	                  mov dword [rax + 4], 0	      3677	normal.c	FUNCTION_24
0x400a68a	    0xc7400c000000	                mov dword [rax + 0xc], 0	      3678	normal.c	FUNCTION_24
0x400a691	    0xc74010000000	               mov dword [rax + 0x10], 0	      3679	normal.c	FUNCTION_24
0x400a698	      0xe9ce090000	                           jmp 0x400b06b	      3679	normal.c	FUNCTION_24
0x400a69d	    0x41bc01000000	                             mov r12d, 1	      6509	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0x400a6a3	        0x837b0c5d	            cmp dword [rbx + 0xc], 0x5d 	      6509	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0x400a6a7	            0x750f	                           jne 0x400a6b8	      6509	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0x400a6a9	    0x488b05000000	            mov rax, qword [0x0400a6b0] 	      6515	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2
0x400a6b0	        0x4c8b6038	            mov r12, qword [rax + 0x38] 	      6509	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0x400a6b4	        0x4983c401	                              add r12, 1	      6509	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0x400a6b8	      0xe800000000	                          call 0x400a6bd	      6513	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_8
0x400a6bd	          0x8b5310	            mov edx, dword [rbx + 0x10] 	      6513	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_8
0x400a6c0	          0x4863ca	                         movsxd rcx, edx	      6513	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_8
0x400a6c3	          0x488b00	                    mov rax, qword [rax]	      6513	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_8
0x400a6c6	         0xfb70448	           movzx eax, word [rax + rcx*2]	      6513	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_8
0x400a6ca	      0xb904000000	                              mov ecx, 4	      6509	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0x400a6cf	            0x89c6	                            mov esi, eax	      6509	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0x400a6d1	      0x6681e60001	                           and si, 0x100	      6509	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0x400a6d6	            0x750f	                           jne 0x400a6e7	      6509	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0x400a6d8	        0x66250002	                           and ax, 0x200	      6514	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_9
0x400a6dc	        0x6683f801	                               cmp ax, 1	      6514	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_9
0x400a6e0	            0x19c9	                            sbb ecx, ecx	      6514	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_9
0x400a6e2	            0xf7d1	                                 not ecx	      6514	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_9
0x400a6e4	          0x83c102	                              add ecx, 2	      6514	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_9
0x400a6e7	          0x83e20f	                            and edx, 0xf	      6509	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0x400a6ea	          0x83fa04	                              cmp edx, 4	      6509	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0x400a6ed	           0xf94c2	                                 sete dl	      6509	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0x400a6f0	           0xfb6d2	                           movzx edx, dl	      6509	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0x400a6f3	      0x48837b2800	               cmp qword [rbx + 0x28], 0	      6509	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0x400a6f8	           0xf94c0	                                 sete al	      6509	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0x400a6fb	          0x6685f6	                             test si, si	      6509	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0x400a6fe	        0x410f94c0	                                sete r8b	      6509	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0x400a702	        0x450fb6c0	                          movzx r8d, r8b	      6509	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0x400a706	      0x68ffffff7f	                         push 0x7fffffff	      6509	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0x400a70b	            0x4154	                                push r12	      6509	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0x400a70d	              0x51	                                push rcx	      6509	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0x400a70e	          0xff7330	                 push qword [rbx + 0x30]	      6509	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0x400a711	        0x448d4a01	                      lea r9d, [rdx + 1]	      6509	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0x400a715	          0x4121c0	                            and r8d, eax	      6509	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0x400a718	      0xb901000000	                              mov ecx, 1	      6509	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0x400a71d	            0x89ea	                            mov edx, ebp	      6509	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0x400a71f	      0xbe00000000	                              mov esi, 0	      6509	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0x400a724	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	      6509	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0x400a729	      0xe800000000	                          call 0x400a72e	      6509	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0x400a72e	    0x488b05000000	            mov rax, qword [0x0400a735] 	      6517	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2
0x400a735	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      6517	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2
0x400a73c	        0x4883c420	                           add rsp, 0x20	      6517	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2
0x400a740	      0xe926090000	                           jmp 0x400b06b	      6517	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2
0x400a745	        0x837b0c5b	            cmp dword [rbx + 0xc], 0x5b 	      6530	normal.c	FUNCTION_81	ELSE_3	IF_4
0x400a749	            0x7512	                           jne 0x400a75d	      6530	normal.c	FUNCTION_81	ELSE_3	IF_4
0x400a74b	          0x8b7310	            mov esi, dword [rbx + 0x10] 	      6531	normal.c	FUNCTION_81	ELSE_3	IF_4	CALL_10
0x400a74e	      0xbf00000000	                              mov edi, 0	      6531	normal.c	FUNCTION_81	ELSE_3	IF_4	CALL_10
0x400a753	      0xe800000000	                          call 0x400a758	      6531	normal.c	FUNCTION_81	ELSE_3	IF_4	CALL_10
0x400a758	          0x4885c0	                           test rax, rax	      6531	normal.c	FUNCTION_81	ELSE_3	IF_4	CALL_10
0x400a75b	            0x7520	                           jne 0x400a77d	      6531	normal.c	FUNCTION_81	ELSE_3	IF_4	CALL_10
0x400a75d	        0x837b0c5d	            cmp dword [rbx + 0xc], 0x5d 	      6532	normal.c	FUNCTION_81	ELSE_3	IF_4
0x400a761	     0xf85bb020000	                           jne 0x400aa22	      6532	normal.c	FUNCTION_81	ELSE_3	IF_4
0x400a767	          0x8b7310	            mov esi, dword [rbx + 0x10] 	      6533	normal.c	FUNCTION_81	ELSE_3	IF_4	CALL_11
0x400a76a	      0xbf00000000	                              mov edi, 0	      6533	normal.c	FUNCTION_81	ELSE_3	IF_4	CALL_11
0x400a76f	      0xe800000000	                          call 0x400a774	      6533	normal.c	FUNCTION_81	ELSE_3	IF_4	CALL_11
0x400a774	          0x4885c0	                           test rax, rax	      6533	normal.c	FUNCTION_81	ELSE_3	IF_4	CALL_11
0x400a777	     0xf84a5020000	                            je 0x400aa22	      6533	normal.c	FUNCTION_81	ELSE_3	IF_4	CALL_11
0x400a77d	        0x837b102a	           cmp dword [rbx + 0x10], 0x2a 	      6535	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_5
0x400a781	            0x7507	                           jne 0x400a78a	      6535	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_5
0x400a783	    0xc743102f0000	           mov dword [rbx + 0x10], 0x2f 	      6536	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_5
0x400a78a	    0x48c744243000	               mov qword [rsp + 0x30], 0	      6537	normal.c	FUNCTION_81	ELSE_3	IF_4
0x400a793	          0x8b6b10	            mov ebp, dword [rbx + 0x10] 	      6538	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_6
0x400a796	            0x89e8	                            mov eax, ebp	      6538	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_6
0x400a798	          0x83e0df	                     and eax, 0xffffffdf	      6538	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_6
0x400a79b	          0x83f84d	                           cmp eax, 0x4d	      6538	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_6
0x400a79e	            0x7518	                           jne 0x400a7b8	      6538	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_6
0x400a7a0	        0x837b0c5b	            cmp dword [rbx + 0xc], 0x5b 	      6543	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_6	ELSE_4
0x400a7a4	        0x400f95c5	                               setne bpl	      6543	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_6	ELSE_4
0x400a7a8	        0x400fb6ed	                          movzx ebp, bpl	      6543	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_6	ELSE_4
0x400a7ac	        0x8d6c2d7b	            lea ebp, [rbp + rbp + 0x7b] 	      6543	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_6	ELSE_4
0x400a7b0	    0x41bd0f270000	                        mov r13d, 0x270f	      6509	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0x400a7b6	            0xeb0d	                           jmp 0x400a7c5	      6509	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0x400a7b8	        0x4c8b6b30	            mov r13, qword [rbx + 0x30] 	      6549	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	ELSE_5
0x400a7bc	          0x4d85ed	                           test r13, r13	      6551	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1
0x400a7bf	     0xf8e03080000	                           jle 0x400afc8	      6551	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1
0x400a7c5	        0x837b0c5b	            cmp dword [rbx + 0xc], 0x5b 	      6553	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	IF_8	CALL_12
0x400a7c9	           0xf95c2	                                setne dl	      6553	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	IF_8	CALL_12
0x400a7cc	           0xfb6d2	                           movzx edx, dl	      6553	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	IF_8	CALL_12
0x400a7cf	          0x83c201	                              add edx, 1	      6553	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	IF_8	CALL_12
0x400a7d2	      0xb900000000	                              mov ecx, 0	      6553	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	IF_8	CALL_12
0x400a7d7	            0x89ee	                            mov esi, ebp	      6553	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	IF_8	CALL_12
0x400a7d9	          0x488b3b	                    mov rdi, qword [rbx]	      6553	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	IF_8	CALL_12
0x400a7dc	      0xe800000000	                          call 0x400a7e1	      6553	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	IF_8	CALL_12
0x400a7e1	          0x4989c4	                            mov r12, rax	      6553	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	IF_8	CALL_12
0x400a7e4	          0x4885c0	                           test rax, rax	      6553	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	IF_8	CALL_12
0x400a7e7	            0x7528	                           jne 0x400a811	      6553	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	IF_8	CALL_12
0x400a7e9	    0x48837c242000	               cmp qword [rsp + 0x20], 0	      6556	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	IF_8	IF_9
0x400a7ef	     0xf85a2070000	                           jne 0x400af97	      6556	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	IF_8	IF_9
0x400a7f5	          0x8b4310	            mov eax, dword [rbx + 0x10] 	      6558	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	IF_8	IF_9	IF_10
0x400a7f8	          0x83e0df	                     and eax, 0xffffffdf	      6558	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	IF_8	IF_9	IF_10
0x400a7fb	          0x83f84d	                           cmp eax, 0x4d	      6558	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	IF_8	IF_9	IF_10
0x400a7fe	     0xf84c4070000	                            je 0x400afc8	      6558	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	IF_8	IF_9	IF_10
0x400a804	          0x488b3b	                    mov rdi, qword [rbx]	      6559	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	IF_8	IF_9	CALL_13
0x400a807	      0xe82c5affff	                    call sym.clearopbeep	      6559	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	IF_8	IF_9	CALL_13
0x400a80c	      0xe9b7070000	                           jmp 0x400afc8	      6559	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	IF_8	IF_9	CALL_13
0x400a811	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      6565	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	ELSE_6
0x400a816	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      6565	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	ELSE_6
0x400a81b	      0x4889442430	             mov qword [rsp + 0x30], rax	      6565	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	ELSE_6
0x400a820	      0x4889542438	             mov qword [rsp + 0x38], rdx	      6565	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	ELSE_6
0x400a825	        0x498b3424	                    mov rsi, qword [r12]	      6566	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	ELSE_6
0x400a829	      0x498b7c2408	                mov rdi, qword [r12 + 8]	      6566	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	ELSE_6
0x400a82e	    0x488b05000000	            mov rax, qword [0x0400a835] 	      6566	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	ELSE_6
0x400a835	        0x48897038	             mov qword [rax + 0x38], rsi	      6566	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	ELSE_6
0x400a839	        0x48897840	             mov qword [rax + 0x40], rdi	      6566	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	ELSE_6
0x400a83d	        0x498b0424	                    mov rax, qword [r12]	      6567	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	ELSE_6
0x400a841	      0x498b542408	                mov rdx, qword [r12 + 8]	      6567	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	ELSE_6
0x400a846	      0x4889442420	             mov qword [rsp + 0x20], rax	      6567	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	ELSE_6
0x400a84b	      0x4889542428	             mov qword [rsp + 0x28], rdx	      6567	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	ELSE_6
0x400a850	        0x4983ed01	                              sub r13, 1	      6551	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1
0x400a854	          0x4d85ed	                           test r13, r13	      6551	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1
0x400a857	     0xf8f68ffffff	                            jg 0x400a7c5	      6551	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1
0x400a85d	      0xe93a070000	                           jmp 0x400af9c	      6551	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1
0x400a862	          0x83fa6d	                           cmp edx, 0x6d	      6580	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0x400a865	           0xf94c1	                                 sete cl	      6580	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0x400a868	          0x83fd7b	                           cmp ebp, 0x7b	      6580	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0x400a86b	           0xf95c2	                                setne dl	      6580	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0x400a86e	            0x31d1	                            xor ecx, edx	      6580	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0x400a870	        0x884c2410	               mov byte [rsp + 0x10], cl	      6580	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0x400a874	        0x4c8b6b30	            mov r13, qword [rbx + 0x30] 	      6582	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0x400a878	    0x48837c243000	               cmp qword [rsp + 0x30], 0	      6584	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	IF_12
0x400a87e	     0xf84b0060000	                            je 0x400af34	      6584	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	IF_12
0x400a884	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      6587	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	IF_12
0x400a889	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      6587	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	IF_12
0x400a88e	        0x48897038	             mov qword [rax + 0x38], rsi	      6587	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	IF_12
0x400a892	        0x48897840	             mov qword [rax + 0x40], rdi	      6587	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	IF_12
0x400a896	          0x80f901	                               cmp cl, 1	      6589	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	IF_12	IF_13
0x400a899	        0x4983d5ff	             adc r13, 0xffffffffffffffff	      6589	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	IF_12	IF_13
0x400a89d	          0x4d85ed	                           test r13, r13	      6593	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1
0x400a8a0	     0xf8e4b070000	                           jle 0x400aff1	      6593	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1
0x400a8a6	      0x4c8d642430	                   lea r12, [rsp + 0x30]	      6593	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1
0x400a8ab	          0x83fd7b	                           cmp ebp, 0x7b	      6597	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_14	CALL_15
0x400a8ae	            0x750a	                           jne 0x400a8ba	      6597	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_14	CALL_15
0x400a8b0	      0xe800000000	                          call 0x400a8b5	      6597	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_14	CALL_15
0x400a8b5	          0xc1e81f	                           shr eax, 0x1f	      6597	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_14	CALL_15
0x400a8b8	            0xeb08	                           jmp 0x400a8c2	      6597	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_14	CALL_15
0x400a8ba	      0xe800000000	                          call 0x400a8bf	      6597	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_14	CALL_15
0x400a8bf	          0xc1e81f	                           shr eax, 0x1f	      6597	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_14	CALL_15
0x400a8c2	            0x84c0	                             test al, al	      6597	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_14	CALL_15
0x400a8c4	            0x7416	                            je 0x400a8dc	      6597	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_14	CALL_15
0x400a8c6	          0x4d85e4	                           test r12, r12	      6600	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_14	IF_15
0x400a8c9	     0xf8566070000	                           jne 0x400b035	      6600	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_14	IF_15
0x400a8cf	          0x488b3b	                    mov rdi, qword [rbx]	      6601	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_14	CALL_16
0x400a8d2	      0xe86159ffff	                    call sym.clearopbeep	      6601	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_14	CALL_16
0x400a8d7	      0xe974070000	                           jmp 0x400b050	      6601	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_14	CALL_16
0x400a8dc	      0xe800000000	                          call 0x400a8e1	      6605	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	CALL_17
0x400a8e1	          0x8d5085	                   lea edx, [rax - 0x7b]	      6606	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16
0x400a8e4	    0xf7c2fdffffff	                    test edx, 0xfffffffd	      6606	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16
0x400a8ea	            0x75bf	                           jne 0x400a8ab	      6606	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16
0x400a8ec	            0x39c5	                            cmp ebp, eax	      6610	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	IF_17
0x400a8ee	            0x7507	                           jne 0x400a8f7	      6610	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	IF_17
0x400a8f0	      0x807c241000	                cmp byte [rsp + 0x10], 0	      6610	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	IF_17
0x400a8f5	            0x750d	                           jne 0x400a904	      6610	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	IF_17
0x400a8f7	        0x4983fd01	                              cmp r13, 1	      6610	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	IF_17
0x400a8fb	           0xf94c0	                                 sete al	      6610	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	IF_17
0x400a8fe	        0x38442410	               cmp byte [rsp + 0x10], al	      6610	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	IF_17
0x400a902	            0x7323	                           jae 0x400a927	      6610	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	IF_17
0x400a904	    0x488b05000000	            mov rax, qword [0x0400a90b] 	      6612	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	IF_17
0x400a90b	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      6612	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	IF_17
0x400a90f	        0x488b4038	            mov rax, qword [rax + 0x38] 	      6612	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	IF_17
0x400a913	      0x4889442420	             mov qword [rsp + 0x20], rax	      6612	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	IF_17
0x400a918	      0x4889542428	             mov qword [rsp + 0x28], rdx	      6612	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	IF_17
0x400a91d	      0x4c8d642420	                   lea r12, [rsp + 0x20]	      6613	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	IF_17
0x400a922	      0xe90e070000	                           jmp 0x400b035	      6614	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	IF_17
0x400a927	    0x48837c242000	               cmp qword [rsp + 0x20], 0	      6618	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	ELSE_8	IF_18
0x400a92d	            0x7520	                           jne 0x400a94f	      6618	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	ELSE_8	IF_18
0x400a92f	    0x488b05000000	            mov rax, qword [0x0400a936] 	      6620	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	ELSE_8	IF_18
0x400a936	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      6620	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	ELSE_8	IF_18
0x400a93a	        0x488b4038	            mov rax, qword [rax + 0x38] 	      6620	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	ELSE_8	IF_18
0x400a93e	      0x4889442420	             mov qword [rsp + 0x20], rax	      6620	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	ELSE_8	IF_18
0x400a943	      0x4889542428	             mov qword [rsp + 0x28], rdx	      6620	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	ELSE_8	IF_18
0x400a948	      0x4c8d642420	                   lea r12, [rsp + 0x20]	      6621	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	ELSE_8	IF_18
0x400a94d	            0xeb3e	                           jmp 0x400a98d	      6621	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	ELSE_8	IF_18
0x400a94f	        0x837b0c5b	            cmp dword [rbx + 0xc], 0x5b 	      6624	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	ELSE_9	IF_19	CALL_18
0x400a953	           0xf95c2	                                setne dl	      6624	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	ELSE_9	IF_19	CALL_18
0x400a956	           0xfb6d2	                           movzx edx, dl	      6624	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	ELSE_9	IF_19	CALL_18
0x400a959	          0x83c201	                              add edx, 1	      6624	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	ELSE_9	IF_19	CALL_18
0x400a95c	      0xb900000000	                              mov ecx, 0	      6624	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	ELSE_9	IF_19	CALL_18
0x400a961	            0x89ee	                            mov esi, ebp	      6624	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	ELSE_9	IF_19	CALL_18
0x400a963	          0x488b3b	                    mov rdi, qword [rbx]	      6624	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	ELSE_9	IF_19	CALL_18
0x400a966	      0xe800000000	                          call 0x400a96b	      6624	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	ELSE_9	IF_19	CALL_18
0x400a96b	          0x4989c4	                            mov r12, rax	      6624	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	ELSE_9	IF_19	CALL_18
0x400a96e	          0x4885c0	                           test rax, rax	      6624	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	ELSE_9	IF_19	CALL_18
0x400a971	     0xf84d9060000	                            je 0x400b050	      6624	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	ELSE_9	IF_19	CALL_18
0x400a977	          0x488b30	                    mov rsi, qword [rax]	      6629	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	ELSE_10
0x400a97a	        0x488b7808	                mov rdi, qword [rax + 8]	      6629	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	ELSE_10
0x400a97e	    0x488b05000000	            mov rax, qword [0x0400a985] 	      6629	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	ELSE_10
0x400a985	        0x48897038	             mov qword [rax + 0x38], rsi	      6629	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	ELSE_10
0x400a989	        0x48897840	             mov qword [rax + 0x40], rdi	      6629	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	ELSE_10
0x400a98d	        0x4983ed01	                              sub r13, 1	      6633	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1
0x400a991	          0x4d85ed	                           test r13, r13	      6593	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1
0x400a994	     0xf8f11ffffff	                            jg 0x400a8ab	      6593	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1
0x400a99a	    0x488b05000000	            mov rax, qword [0x0400a9a1] 	      6635	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0x400a9a1	        0x4c897838	             mov qword [rax + 0x38], r15	      6635	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0x400a9a5	        0x44897040	            mov dword [rax + 0x40], r14d	      6635	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0x400a9a9	        0x8b7c2408	                mov edi, dword [rsp + 8]	      6635	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0x400a9ad	          0x897844	             mov dword [rax + 0x44], edi	      6635	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0x400a9b0	          0x4d85e4	                           test r12, r12	      6636	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	IF_20
0x400a9b3	            0x7519	                           jne 0x400a9ce	      6636	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	IF_20
0x400a9b5	    0x48837c242000	               cmp qword [rsp + 0x20], 0	      6636	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	IF_20
0x400a9bb	     0xf84aa060000	                            je 0x400b06b	      6636	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	IF_20
0x400a9c1	          0x488b3b	                    mov rdi, qword [rbx]	      6637	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	CALL_19
0x400a9c4	      0xe86f58ffff	                    call sym.clearopbeep	      6637	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	CALL_19
0x400a9c9	      0xe99d060000	                           jmp 0x400b06b	      6637	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	CALL_19
0x400a9ce	      0xe800000000	                          call 0x400a9d3	      6641	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_21	CALL_20
0x400a9d3	    0x488b05000000	            mov rax, qword [0x0400a9da] 	      6642	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_21
0x400a9da	        0x498b3424	                    mov rsi, qword [r12]	      6642	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_21
0x400a9de	      0x498b7c2408	                mov rdi, qword [r12 + 8]	      6642	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_21
0x400a9e3	        0x48897038	             mov qword [rax + 0x38], rsi	      6642	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_21
0x400a9e7	        0x48897840	             mov qword [rax + 0x40], rdi	      6642	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_21
0x400a9eb	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      6643	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_21
0x400a9f2	    0xf60500000000	               test byte [0x0400a9f9], 2	      6645	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_21	IF_22
0x400a9f9	     0xf846c060000	                            je 0x400b06b	      6645	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_21	IF_22
0x400a9ff	    0x833d00000000	               cmp dword [0x0400aa06], 0	      6645	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_21	IF_22
0x400aa06	     0xf845f060000	                            je 0x400b06b	      6645	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_21	IF_22
0x400aa0c	          0x488b03	                    mov rax, qword [rbx]	      6646	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_21	IF_22
0x400aa0f	          0x833800	                      cmp dword [rax], 0	      6646	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_21	IF_22
0x400aa12	     0xf8553060000	                           jne 0x400b06b	      6646	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_21	IF_22
0x400aa18	      0xe800000000	                          call 0x400aa1d	      6647	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_21	CALL_21
0x400aa1d	      0xe949060000	                           jmp 0x400b06b	      6647	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_21	CALL_21
0x400aa22	          0x8b7310	            mov esi, dword [rbx + 0x10] 	      6655	normal.c	FUNCTION_81	ELSE_11	IF_23
0x400aa25	          0x8d46a5	                   lea eax, [rsi - 0x5b]	      6655	normal.c	FUNCTION_81	ELSE_11	IF_23
0x400aa28	      0xa9fdffffff	                    test eax, 0xfffffffd	      6655	normal.c	FUNCTION_81	ELSE_11	IF_23
0x400aa2d	     0xf85b2000000	                           jne 0x400aae5	      6655	normal.c	FUNCTION_81	ELSE_11	IF_23
0x400aa33	          0x3b730c	              cmp esi, dword [rbx + 0xc]	      6657	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_24
0x400aa36	     0xf850c050000	                           jne 0x400af48	      6657	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_24
0x400aa3c	    0x488b05000000	            mov rax, qword [0x0400aa43] 	      6662	normal.c	FUNCTION_81	ELSE_11	IF_23
0x400aa43	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      6662	normal.c	FUNCTION_81	ELSE_11	IF_23
0x400aa4a	          0x488b3b	                    mov rdi, qword [rbx]	      6668	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_25
0x400aa4d	          0x833f00	                      cmp dword [rdi], 0	      6667	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_25	CALL_22
0x400aa50	            0x7411	                            je 0x400aa63	      6667	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_25	CALL_22
0x400aa52	        0x448b4338	            mov r8d, dword [rbx + 0x38] 	      6669	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_25
0x400aa56	        0x4183f801	                              cmp r8d, 1	      6667	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_25	CALL_22
0x400aa5a	            0x7414	                            je 0x400aa70	      6667	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_25	CALL_22
0x400aa5c	      0xb97b000000	                           mov ecx, 0x7b	      6658	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_24
0x400aa61	            0xeb05	                           jmp 0x400aa68	      6658	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_24
0x400aa63	      0xb97b000000	                           mov ecx, 0x7b	      6658	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_24
0x400aa68	    0x41b800000000	                              mov r8d, 0	      6667	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_25	CALL_22
0x400aa6e	            0xeb12	                           jmp 0x400aa82	      6667	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_25	CALL_22
0x400aa70	      0xb97b000000	                           mov ecx, 0x7b	      6658	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_24
0x400aa75	            0xeb0b	                           jmp 0x400aa82	      6658	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_24
0x400aa77	      0xb97d000000	                           mov ecx, 0x7d	      6660	normal.c	FUNCTION_81	ELSE_11	IF_23	ELSE_12
0x400aa7c	    0x41b800000000	                              mov r8d, 0	      6667	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_25	CALL_22
0x400aa82	        0x488b5330	            mov rdx, qword [rbx + 0x30] 	      6667	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_25	CALL_22
0x400aa86	          0x8b7338	            mov esi, dword [rbx + 0x38] 	      6667	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_25	CALL_22
0x400aa89	        0x4883c714	                           add rdi, 0x14	      6667	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_25	CALL_22
0x400aa8d	      0xe800000000	                          call 0x400aa92	      6667	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_25	CALL_22
0x400aa92	            0x85c0	                           test eax, eax	      6667	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_25	CALL_22
0x400aa94	            0x750d	                           jne 0x400aaa3	      6667	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_25	CALL_22
0x400aa96	          0x488b3b	                    mov rdi, qword [rbx]	      6670	normal.c	FUNCTION_81	ELSE_11	IF_23	CALL_23
0x400aa99	      0xe89a57ffff	                    call sym.clearopbeep	      6670	normal.c	FUNCTION_81	ELSE_11	IF_23	CALL_23
0x400aa9e	      0xe9c8050000	                           jmp 0x400b06b	      6670	normal.c	FUNCTION_81	ELSE_11	IF_23	CALL_23
0x400aaa3	          0x488b03	                    mov rax, qword [rbx]	      6673	normal.c	FUNCTION_81	ELSE_11	IF_23	ELSE_13	IF_26
0x400aaa6	          0x833800	                      cmp dword [rax], 0	      6673	normal.c	FUNCTION_81	ELSE_11	IF_23	ELSE_13	IF_26
0x400aaa9	            0x750a	                           jne 0x400aab5	      6673	normal.c	FUNCTION_81	ELSE_11	IF_23	ELSE_13	IF_26
0x400aaab	      0xbf05000000	                              mov edi, 5	      6674	normal.c	FUNCTION_81	ELSE_11	IF_23	ELSE_13	CALL_24
0x400aab0	      0xe800000000	                          call 0x400aab5	      6674	normal.c	FUNCTION_81	ELSE_11	IF_23	ELSE_13	CALL_24
0x400aab5	    0xf60500000000	               test byte [0x0400aabc], 2	      6676	normal.c	FUNCTION_81	ELSE_11	IF_23	ELSE_13	IF_27
0x400aabc	     0xf84a9050000	                            je 0x400b06b	      6676	normal.c	FUNCTION_81	ELSE_11	IF_23	ELSE_13	IF_27
0x400aac2	    0x833d00000000	               cmp dword [0x0400aac9], 0	      6676	normal.c	FUNCTION_81	ELSE_11	IF_23	ELSE_13	IF_27
0x400aac9	     0xf849c050000	                            je 0x400b06b	      6676	normal.c	FUNCTION_81	ELSE_11	IF_23	ELSE_13	IF_27
0x400aacf	          0x488b03	                    mov rax, qword [rbx]	      6676	normal.c	FUNCTION_81	ELSE_11	IF_23	ELSE_13	IF_27
0x400aad2	          0x833800	                      cmp dword [rax], 0	      6676	normal.c	FUNCTION_81	ELSE_11	IF_23	ELSE_13	IF_27
0x400aad5	     0xf8590050000	                           jne 0x400b06b	      6676	normal.c	FUNCTION_81	ELSE_11	IF_23	ELSE_13	IF_27
0x400aadb	      0xe800000000	                          call 0x400aae0	      6677	normal.c	FUNCTION_81	ELSE_11	IF_23	ELSE_13	CALL_25
0x400aae0	      0xe986050000	                           jmp 0x400b06b	      6677	normal.c	FUNCTION_81	ELSE_11	IF_23	ELSE_13	CALL_25
0x400aae5	            0x89f0	                            mov eax, esi	      6685	normal.c	FUNCTION_81	ELSE_14	IF_28
0x400aae7	          0x83e0df	                     and eax, 0xffffffdf	      6685	normal.c	FUNCTION_81	ELSE_14	IF_28
0x400aaea	          0x83f850	                           cmp eax, 0x50	      6685	normal.c	FUNCTION_81	ELSE_14	IF_28
0x400aaed	     0xf8566020000	                           jne 0x400ad59	      6685	normal.c	FUNCTION_81	ELSE_14	IF_28
0x400aaf3	          0x488b3b	                    mov rdi, qword [rbx]	      6687	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	CALL_26
0x400aaf6	      0xe88857ffff	                   call sym.checkclearop	      6687	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	CALL_26
0x400aafb	            0x85c0	                           test eax, eax	      6687	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	CALL_26
0x400aafd	     0xf8568050000	                           jne 0x400b06b	      6687	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	CALL_26
0x400ab03	      0xbdffffffff	                     mov ebp, 0xffffffff	      6690	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29
0x400ab08	        0x837b0c5d	            cmp dword [rbx + 0xc], 0x5d 	      6690	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29
0x400ab0c	            0x7510	                           jne 0x400ab1e	      6690	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29
0x400ab0e	        0x837b1070	           cmp dword [rbx + 0x10], 0x70 	      6690	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29
0x400ab12	        0x400f94c5	                                sete bpl	      6690	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29
0x400ab16	        0x400fb6ed	                          movzx ebp, bpl	      6690	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29
0x400ab1a	        0x8d6c2dff	                lea ebp, [rbp + rbp - 1]	      6690	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29
0x400ab1e	          0x488b03	                    mov rax, qword [rbx]	      6691	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29
0x400ab21	          0x8b4004	                mov eax, dword [rax + 4]	      6691	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29
0x400ab24	        0x89442430	             mov dword [rsp + 0x30], eax	      6691	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29
0x400ab28	    0x833d00000000	               cmp dword [0x0400ab2f], 0	      6696	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30
0x400ab2f	     0xf8437040000	                            je 0x400af6c	      6696	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30
0x400ab35	    0x488b05000000	            mov rax, qword [0x0400ab3c] 	      6693	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29
0x400ab3c	          0x488b00	                    mov rax, qword [rax]	      6693	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29
0x400ab3f	      0x4889442418	             mov qword [rsp + 0x18], rax	      6693	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29
0x400ab44	    0x488b05000000	            mov rax, qword [0x0400ab4b] 	      6698	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0x400ab4b	    0x488b15000000	            mov rdx, qword [0x0400ab52] 	      6698	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0x400ab52	        0x488b4a38	            mov rcx, qword [rdx + 0x38] 	      6698	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0x400ab56	          0x4839c8	                            cmp rax, rcx	      6698	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0x400ab59	            0x740b	                            je 0x400ab66	      6698	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0x400ab5b	          0x4839c8	                            cmp rax, rcx	      6699	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30
0x400ab5e	     0xf8dbf040000	                           jge 0x400b023	      6699	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30
0x400ab64	            0xeb2f	                           jmp 0x400ab95	      6699	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30
0x400ab66	    0x8b3d00000000	            mov edi, dword [0x0400ab6c] 	      6698	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0x400ab6c	          0x8b7240	            mov esi, dword [rdx + 0x40] 	      6698	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0x400ab6f	            0x39f7	                            cmp edi, esi	      6698	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0x400ab71	            0x7406	                            je 0x400ab79	      6698	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0x400ab73	            0x39f7	                            cmp edi, esi	      6698	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0x400ab75	            0x7d0d	                           jge 0x400ab84	      6698	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0x400ab77	            0xeb1c	                           jmp 0x400ab95	      6698	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0x400ab79	          0x8b7a44	            mov edi, dword [rdx + 0x44] 	      6698	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0x400ab7c	    0x393d00000000	            cmp dword [0x0400ab82], edi 	      6698	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0x400ab82	            0x7c11	                            jl 0x400ab95	      6698	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0x400ab84	        0x488b7a40	            mov rdi, qword [rdx + 0x40] 	      6698	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0x400ab88	    0x48393d000000	            cmp qword [0x0400ab8f], rdi 	      6698	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0x400ab8f	     0xf857c040000	                           jne 0x400b011	      6698	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0x400ab95	    0x448b2d000000	           mov r13d, dword [0x0400ab9c] 	      6698	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0x400ab9c	    0x448b25000000	           mov r12d, dword [0x0400aba3] 	      6698	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0x400aba3	      0x4889442410	             mov qword [rsp + 0x10], rax	      6698	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0x400aba8	          0x4c89e6	                            mov rsi, r12	      6700	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_28
0x400abab	        0x48c1e620	                           shl rsi, 0x20	      6700	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_28
0x400abaf	          0x4489ef	                           mov edi, r13d	      6700	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_28
0x400abb2	          0x4809fe	                             or rsi, rdi	      6700	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_28
0x400abb5	    0x483935000000	            cmp qword [0x0400abbc], rsi 	      6700	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_28
0x400abbc	            0x750f	                           jne 0x400abcd	      6700	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_28
0x400abbe	        0x448b7a40	           mov r15d, dword [rdx + 0x40] 	      6700	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_28
0x400abc2	        0x448b7244	           mov r14d, dword [rdx + 0x44] 	      6700	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_28
0x400abc6	      0x48894c2408	                mov qword [rsp + 8], rcx	      6700	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_28
0x400abcb	            0xeb13	                           jmp 0x400abe0	      6700	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_28
0x400abcd	    0x448b3d000000	           mov r15d, dword [0x0400abd4] 	      6700	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_28
0x400abd4	    0x448b35000000	           mov r14d, dword [0x0400abdb] 	      6700	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_28
0x400abdb	      0x4889442408	                mov qword [rsp + 8], rax	      6700	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_28
0x400abe0	    0x488b05000000	            mov rax, qword [0x0400abe7] 	      6701	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30
0x400abe7	          0x83fdff	             cmp ebp, 0xffffffffffffffff	      6701	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30
0x400abea	     0xf8597000000	                           jne 0x400ac87	      6701	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30
0x400abf0	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      6701	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30
0x400abf5	        0x48897838	             mov qword [rax + 0x38], rdi	      6701	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30
0x400abf9	        0x44896840	            mov dword [rax + 0x40], r13d	      6701	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30
0x400abfd	        0x44896044	            mov dword [rax + 0x44], r12d	      6701	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30
0x400ac01	      0x488d442430	                   lea rax, [rsp + 0x30]	      6704	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	CALL_29
0x400ac06	          0x4889c7	                            mov rdi, rax	      6704	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	CALL_29
0x400ac09	      0xe800000000	                          call 0x400ac0e	      6704	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	CALL_29
0x400ac0e	          0x4889df	                            mov rdi, rbx	      6706	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	CALL_30
0x400ac11	      0xe8b358ffff	                  call sym.prep_redo_cmd	      6706	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	CALL_30
0x400ac16	        0x488b5330	            mov rdx, qword [rbx + 0x30] 	      6708	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	CALL_31
0x400ac1a	      0xb901000000	                              mov ecx, 1	      6708	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	CALL_31
0x400ac1f	            0x89ee	                            mov esi, ebp	      6708	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	CALL_31
0x400ac21	        0x8b7c2430	            mov edi, dword [rsp + 0x30] 	      6708	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	CALL_31
0x400ac25	      0xe800000000	                          call 0x400ac2a	      6708	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	CALL_31
0x400ac2a	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      6711	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31
0x400ac2f	    0x48893d000000	            mov qword [0x0400ac36], rdi 	      6711	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31
0x400ac36	    0x44892d000000	           mov dword [0x0400ac3d], r13d 	      6711	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31
0x400ac3d	    0x448925000000	           mov dword [0x0400ac44], r12d 	      6711	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31
0x400ac44	    0x488b05000000	            mov rax, qword [0x0400ac4b] 	      6712	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31
0x400ac4b	      0x4c8b542408	                mov r10, qword [rsp + 8]	      6712	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31
0x400ac50	        0x4c895038	             mov qword [rax + 0x38], r10	      6712	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31
0x400ac54	        0x44897840	            mov dword [rax + 0x40], r15d	      6712	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31
0x400ac58	        0x44897044	            mov dword [rax + 0x44], r14d	      6712	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31
0x400ac5c	    0x488b0d000000	            mov rcx, qword [0x0400ac63] 	      6716	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_32
0x400ac63	      0x4863742418	         movsxd rsi, dword [rsp + 0x18] 	      6716	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_32
0x400ac68	          0x4829f7	                            sub rdi, rsi	      6716	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_32
0x400ac6b	          0x4889fa	                            mov rdx, rdi	      6716	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_32
0x400ac6e	          0x480311	                    add rdx, qword [rcx]	      6716	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_32
0x400ac71	    0x488915000000	            mov qword [0x0400ac78], rdx 	      6716	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_32
0x400ac78	          0x4c89d2	                            mov rdx, r10	      6717	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_32
0x400ac7b	          0x4829f2	                            sub rdx, rsi	      6717	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_32
0x400ac7e	          0x480311	                    add rdx, qword [rcx]	      6717	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_32
0x400ac81	        0x48895038	             mov qword [rax + 0x38], rdx	      6717	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_32
0x400ac85	            0xeb6c	                           jmp 0x400acf3	      6717	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_32
0x400ac87	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      6701	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30
0x400ac8c	        0x48897838	             mov qword [rax + 0x38], rdi	      6701	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30
0x400ac90	        0x44897840	            mov dword [rax + 0x40], r15d	      6701	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30
0x400ac94	        0x44897044	            mov dword [rax + 0x44], r14d	      6701	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30
0x400ac98	      0x488d442430	                   lea rax, [rsp + 0x30]	      6704	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	CALL_29
0x400ac9d	          0x4889c7	                            mov rdi, rax	      6704	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	CALL_29
0x400aca0	      0xe800000000	                          call 0x400aca5	      6704	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	CALL_29
0x400aca5	          0x4889df	                            mov rdi, rbx	      6706	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	CALL_30
0x400aca8	      0xe81c58ffff	                  call sym.prep_redo_cmd	      6706	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	CALL_30
0x400acad	        0x488b5330	            mov rdx, qword [rbx + 0x30] 	      6708	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	CALL_31
0x400acb1	      0xb901000000	                              mov ecx, 1	      6708	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	CALL_31
0x400acb6	            0x89ee	                            mov esi, ebp	      6708	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	CALL_31
0x400acb8	        0x8b7c2430	            mov edi, dword [rsp + 0x30] 	      6708	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	CALL_31
0x400acbc	      0xe800000000	                          call 0x400acc1	      6708	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	CALL_31
0x400acc1	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      6711	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31
0x400acc6	    0x488905000000	            mov qword [0x0400accd], rax 	      6711	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31
0x400accd	    0x44892d000000	           mov dword [0x0400acd4], r13d 	      6711	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31
0x400acd4	    0x448925000000	           mov dword [0x0400acdb], r12d 	      6711	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31
0x400acdb	    0x488b05000000	            mov rax, qword [0x0400ace2] 	      6712	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31
0x400ace2	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      6712	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31
0x400ace7	        0x48897838	             mov qword [rax + 0x38], rdi	      6712	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31
0x400aceb	        0x44897840	            mov dword [rax + 0x40], r15d	      6712	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31
0x400acef	        0x44897044	            mov dword [rax + 0x44], r14d	      6712	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31
0x400acf3	    0xc70500000000	               mov dword [0x0400acfd], 1	      6721	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31
0x400acfd	    0x833d00000000	           cmp dword [0x0400ad04], 0x56 	      6722	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_33
0x400ad04	            0x753f	                           jne 0x400ad45	      6722	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_33
0x400ad06	    0xc7430c640000	            mov dword [rbx + 0xc], 0x64 	      6725	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_33
0x400ad0d	    0xc74310000000	               mov dword [rbx + 0x10], 0	      6726	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_33
0x400ad14	          0x488b03	                    mov rax, qword [rbx]	      6727	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_33
0x400ad17	        0x8b542430	            mov edx, dword [rsp + 0x30] 	      6727	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_33
0x400ad1b	          0x895004	                mov dword [rax + 4], edx	      6727	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_33
0x400ad1e	          0x4889df	                            mov rdi, rbx	      6728	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_33	CALL_32
0x400ad21	      0xe8386effff	                    call sym.nv_operator	      6728	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_33	CALL_32
0x400ad26	      0xba00000000	                              mov edx, 0	      6729	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_33	CALL_33
0x400ad2b	      0xbe00000000	                              mov esi, 0	      6729	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_33	CALL_33
0x400ad30	          0x4889df	                            mov rdi, rbx	      6729	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_33	CALL_33
0x400ad33	      0xe800000000	                          call 0x400ad38	      6729	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_33	CALL_33
0x400ad38	    0x833d00000000	               cmp dword [0x0400ad3f], 0	      6731	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_34
0x400ad3f	     0xf8426030000	                            je 0x400b06b	      6731	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_34
0x400ad45	      0xe800000000	                          call 0x400ad4a	      6733	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_34	CALL_34
0x400ad4a	      0xbf23000000	                           mov edi, 0x23	      6734	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_34	CALL_35
0x400ad4f	      0xe800000000	                          call 0x400ad54	      6734	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_34	CALL_35
0x400ad54	      0xe912030000	                           jmp 0x400b06b	      6734	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_34	CALL_35
0x400ad59	          0x83fe27	                           cmp esi, 0x27	      6743	normal.c	FUNCTION_81	ELSE_15	IF_35
0x400ad5c	            0x7409	                            je 0x400ad67	      6743	normal.c	FUNCTION_81	ELSE_15	IF_35
0x400ad5e	          0x83fe60	                           cmp esi, 0x60	      6743	normal.c	FUNCTION_81	ELSE_15	IF_35
0x400ad61	     0xf8581000000	                           jne 0x400ade8	      6743	normal.c	FUNCTION_81	ELSE_15	IF_35
0x400ad67	    0x488b05000000	            mov rax, qword [0x0400ad6e] 	      6745	normal.c	FUNCTION_81	ELSE_15	IF_35
0x400ad6e	        0x4883c038	                           add rax, 0x38	      6745	normal.c	FUNCTION_81	ELSE_15	IF_35
0x400ad72	        0x488b6b30	            mov rbp, qword [rbx + 0x30] 	      6746	normal.c	FUNCTION_81	ELSE_15	IF_35	FOR_3
0x400ad76	          0x4885ed	                           test rbp, rbp	      6746	normal.c	FUNCTION_81	ELSE_15	IF_35	FOR_3
0x400ad79	            0x7e40	                           jle 0x400adbb	      6746	normal.c	FUNCTION_81	ELSE_15	IF_35	FOR_3
0x400ad7b	          0x488b30	                    mov rsi, qword [rax]	      6748	normal.c	FUNCTION_81	ELSE_15	IF_35	FOR_3
0x400ad7e	        0x488b7808	                mov rdi, qword [rax + 8]	      6748	normal.c	FUNCTION_81	ELSE_15	IF_35	FOR_3
0x400ad82	      0x4889742430	             mov qword [rsp + 0x30], rsi	      6748	normal.c	FUNCTION_81	ELSE_15	IF_35	FOR_3
0x400ad87	      0x48897c2438	             mov qword [rsp + 0x38], rdi	      6748	normal.c	FUNCTION_81	ELSE_15	IF_35	FOR_3
0x400ad8c	        0x837b1027	           cmp dword [rbx + 0x10], 0x27 	      6749	normal.c	FUNCTION_81	ELSE_15	IF_35	FOR_3	CALL_36
0x400ad90	           0xf94c2	                                 sete dl	      6749	normal.c	FUNCTION_81	ELSE_15	IF_35	FOR_3	CALL_36
0x400ad93	           0xfb6d2	                           movzx edx, dl	      6749	normal.c	FUNCTION_81	ELSE_15	IF_35	FOR_3	CALL_36
0x400ad96	        0x837b0c5b	            cmp dword [rbx + 0xc], 0x5b 	      6749	normal.c	FUNCTION_81	ELSE_15	IF_35	FOR_3	CALL_36
0x400ad9a	        0x400f95c6	                               setne sil	      6749	normal.c	FUNCTION_81	ELSE_15	IF_35	FOR_3	CALL_36
0x400ad9e	        0x400fb6f6	                          movzx esi, sil	      6749	normal.c	FUNCTION_81	ELSE_15	IF_35	FOR_3	CALL_36
0x400ada2	        0x8d7436ff	                lea esi, [rsi + rsi - 1]	      6749	normal.c	FUNCTION_81	ELSE_15	IF_35	FOR_3	CALL_36
0x400ada6	          0x4889c7	                            mov rdi, rax	      6749	normal.c	FUNCTION_81	ELSE_15	IF_35	FOR_3	CALL_36
0x400ada9	      0xe800000000	                          call 0x400adae	      6749	normal.c	FUNCTION_81	ELSE_15	IF_35	FOR_3	CALL_36
0x400adae	          0x4885c0	                           test rax, rax	      6751	normal.c	FUNCTION_81	ELSE_15	IF_35	FOR_3	IF_36
0x400adb1	            0x7414	                            je 0x400adc7	      6751	normal.c	FUNCTION_81	ELSE_15	IF_35	FOR_3	IF_36
0x400adb3	        0x4883ed01	                              sub rbp, 1	      6746	normal.c	FUNCTION_81	ELSE_15	IF_35	FOR_3
0x400adb7	            0x75c2	                           jne 0x400ad7b	      6746	normal.c	FUNCTION_81	ELSE_15	IF_35	FOR_3
0x400adb9	            0xeb11	                           jmp 0x400adcc	      6746	normal.c	FUNCTION_81	ELSE_15	IF_35	FOR_3
0x400adbb	          0x4885c0	                           test rax, rax	      6754	normal.c	FUNCTION_81	ELSE_15	IF_35	IF_37
0x400adbe	            0x750c	                           jne 0x400adcc	      6754	normal.c	FUNCTION_81	ELSE_15	IF_35	IF_37
0x400adc0	      0x488d442430	                   lea rax, [rsp + 0x30]	      6755	normal.c	FUNCTION_81	ELSE_15	IF_35	IF_37
0x400adc5	            0xeb05	                           jmp 0x400adcc	      6755	normal.c	FUNCTION_81	ELSE_15	IF_35	IF_37
0x400adc7	      0x488d442430	                   lea rax, [rsp + 0x30]	      6755	normal.c	FUNCTION_81	ELSE_15	IF_35	IF_37
0x400adcc	        0x837b1027	           cmp dword [rbx + 0x10], 0x27 	      6756	normal.c	FUNCTION_81	ELSE_15	IF_35	CALL_37
0x400add0	        0x400f94c6	                                sete sil	      6756	normal.c	FUNCTION_81	ELSE_15	IF_35	CALL_37
0x400add4	        0x400fb6f6	                          movzx esi, sil	      6756	normal.c	FUNCTION_81	ELSE_15	IF_35	CALL_37
0x400add8	          0x4889c2	                            mov rdx, rax	      6756	normal.c	FUNCTION_81	ELSE_15	IF_35	CALL_37
0x400addb	          0x4889df	                            mov rdi, rbx	      6756	normal.c	FUNCTION_81	ELSE_15	IF_35	CALL_37
0x400adde	      0xe8cc85ffff	                  call sym.nv_cursormark	      6756	normal.c	FUNCTION_81	ELSE_15	IF_35	CALL_37
0x400ade3	      0xe983020000	                           jmp 0x400b06b	      6756	normal.c	FUNCTION_81	ELSE_15	IF_35	CALL_37
0x400ade8	    0x8d96fd340000	                 lea edx, [rsi + 0x34fd]	      6764	normal.c	FUNCTION_81	ELSE_16	IF_38
0x400adee	    0x81fa00080000	                          cmp edx, 0x800	      6764	normal.c	FUNCTION_81	ELSE_16	IF_38
0x400adf4	            0x7725	                            ja 0x400ae1b	      6764	normal.c	FUNCTION_81	ELSE_16	IF_38
0x400adf6	        0x488b4b30	            mov rcx, qword [rbx + 0x30] 	      6766	normal.c	FUNCTION_81	ELSE_16	IF_38	CALL_38
0x400adfa	        0x837b0c5d	            cmp dword [rbx + 0xc], 0x5d 	      6766	normal.c	FUNCTION_81	ELSE_16	IF_38	CALL_38
0x400adfe	           0xf94c2	                                 sete dl	      6766	normal.c	FUNCTION_81	ELSE_16	IF_38	CALL_38
0x400ae01	           0xfb6d2	                           movzx edx, dl	      6766	normal.c	FUNCTION_81	ELSE_16	IF_38	CALL_38
0x400ae04	        0x8d5412ff	                lea edx, [rdx + rdx - 1]	      6766	normal.c	FUNCTION_81	ELSE_16	IF_38	CALL_38
0x400ae08	    0x41b801000000	                              mov r8d, 1	      6766	normal.c	FUNCTION_81	ELSE_16	IF_38	CALL_38
0x400ae0e	          0x488b3b	                    mov rdi, qword [rbx]	      6766	normal.c	FUNCTION_81	ELSE_16	IF_38	CALL_38
0x400ae11	      0xe800000000	                          call 0x400ae16	      6766	normal.c	FUNCTION_81	ELSE_16	IF_38	CALL_38
0x400ae16	      0xe950020000	                           jmp 0x400b06b	      6766	normal.c	FUNCTION_81	ELSE_16	IF_38	CALL_38
0x400ae1b	          0x83fe7a	                           cmp esi, 0x7a	      6776	normal.c	FUNCTION_81	ELSE_17	IF_39
0x400ae1e	            0x7533	                           jne 0x400ae53	      6776	normal.c	FUNCTION_81	ELSE_17	IF_39
0x400ae20	        0x488b5330	            mov rdx, qword [rbx + 0x30] 	      6778	normal.c	FUNCTION_81	ELSE_17	IF_39	IF_40	CALL_39
0x400ae24	        0x837b0c5d	            cmp dword [rbx + 0xc], 0x5d 	      6778	normal.c	FUNCTION_81	ELSE_17	IF_39	IF_40	CALL_39
0x400ae28	        0x400f94c6	                                sete sil	      6778	normal.c	FUNCTION_81	ELSE_17	IF_39	IF_40	CALL_39
0x400ae2c	        0x400fb6f6	                          movzx esi, sil	      6778	normal.c	FUNCTION_81	ELSE_17	IF_39	IF_40	CALL_39
0x400ae30	        0x8d7436ff	                lea esi, [rsi + rsi - 1]	      6778	normal.c	FUNCTION_81	ELSE_17	IF_39	IF_40	CALL_39
0x400ae34	      0xbf00000000	                              mov edi, 0	      6778	normal.c	FUNCTION_81	ELSE_17	IF_39	IF_40	CALL_39
0x400ae39	      0xe800000000	                          call 0x400ae3e	      6778	normal.c	FUNCTION_81	ELSE_17	IF_39	IF_40	CALL_39
0x400ae3e	            0x85c0	                           test eax, eax	      6778	normal.c	FUNCTION_81	ELSE_17	IF_39	IF_40	CALL_39
0x400ae40	     0xf8525020000	                           jne 0x400b06b	      6778	normal.c	FUNCTION_81	ELSE_17	IF_39	IF_40	CALL_39
0x400ae46	          0x488b3b	                    mov rdi, qword [rbx]	      6780	normal.c	FUNCTION_81	ELSE_17	IF_39	CALL_40
0x400ae49	      0xe8ea53ffff	                    call sym.clearopbeep	      6780	normal.c	FUNCTION_81	ELSE_17	IF_39	CALL_40
0x400ae4e	      0xe918020000	                           jmp 0x400b06b	      6780	normal.c	FUNCTION_81	ELSE_17	IF_39	CALL_40
0x400ae53	          0x83fe63	                           cmp esi, 0x63	      6788	normal.c	FUNCTION_81	ELSE_18	IF_41
0x400ae56	            0x752e	                           jne 0x400ae86	      6788	normal.c	FUNCTION_81	ELSE_18	IF_41
0x400ae58	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	      6790	normal.c	FUNCTION_81	ELSE_18	IF_41	IF_42	CALL_41
0x400ae5c	        0x837b0c5d	            cmp dword [rbx + 0xc], 0x5d 	      6790	normal.c	FUNCTION_81	ELSE_18	IF_41	IF_42	CALL_41
0x400ae60	        0x400f94c7	                                sete dil	      6790	normal.c	FUNCTION_81	ELSE_18	IF_41	IF_42	CALL_41
0x400ae64	        0x400fb6ff	                          movzx edi, dil	      6790	normal.c	FUNCTION_81	ELSE_18	IF_41	IF_42	CALL_41
0x400ae68	        0x8d7c3fff	                lea edi, [rdi + rdi - 1]	      6790	normal.c	FUNCTION_81	ELSE_18	IF_41	IF_42	CALL_41
0x400ae6c	      0xe800000000	                          call 0x400ae71	      6790	normal.c	FUNCTION_81	ELSE_18	IF_41	IF_42	CALL_41
0x400ae71	            0x85c0	                           test eax, eax	      6790	normal.c	FUNCTION_81	ELSE_18	IF_41	IF_42	CALL_41
0x400ae73	     0xf85f2010000	                           jne 0x400b06b	      6790	normal.c	FUNCTION_81	ELSE_18	IF_41	IF_42	CALL_41
0x400ae79	          0x488b3b	                    mov rdi, qword [rbx]	      6792	normal.c	FUNCTION_81	ELSE_18	IF_41	CALL_42
0x400ae7c	      0xe8b753ffff	                    call sym.clearopbeep	      6792	normal.c	FUNCTION_81	ELSE_18	IF_41	CALL_42
0x400ae81	      0xe9e5010000	                           jmp 0x400b06b	      6792	normal.c	FUNCTION_81	ELSE_18	IF_41	CALL_42
0x400ae86	          0x83f853	                           cmp eax, 0x53	      6800	normal.c	FUNCTION_81	ELSE_19	IF_43
0x400ae89	     0xf8598000000	                           jne 0x400af27	      6800	normal.c	FUNCTION_81	ELSE_19	IF_43
0x400ae8f	      0xe800000000	                          call 0x400ae94	      6802	normal.c	FUNCTION_81	ELSE_19	IF_43	CALL_43
0x400ae94	      0x48837b3000	               cmp qword [rbx + 0x30], 0	      6803	normal.c	FUNCTION_81	ELSE_19	IF_43	FOR_4
0x400ae99	            0x7e5c	                           jle 0x400aef7	      6803	normal.c	FUNCTION_81	ELSE_19	IF_43	FOR_4
0x400ae9b	      0xbd00000000	                              mov ebp, 0	      6803	normal.c	FUNCTION_81	ELSE_19	IF_43	FOR_4
0x400aea0	        0x837b1073	           cmp dword [rbx + 0x10], 0x73 	      6804	normal.c	FUNCTION_81	ELSE_19	IF_43	FOR_4	IF_44	CALL_44
0x400aea4	           0xf94c2	                                 sete dl	      6804	normal.c	FUNCTION_81	ELSE_19	IF_43	FOR_4	IF_44	CALL_44
0x400aea7	           0xfb6d2	                           movzx edx, dl	      6804	normal.c	FUNCTION_81	ELSE_19	IF_43	FOR_4	IF_44	CALL_44
0x400aeaa	        0x837b0c5d	            cmp dword [rbx + 0xc], 0x5d 	      6804	normal.c	FUNCTION_81	ELSE_19	IF_43	FOR_4	IF_44	CALL_44
0x400aeae	        0x400f94c6	                                sete sil	      6804	normal.c	FUNCTION_81	ELSE_19	IF_43	FOR_4	IF_44	CALL_44
0x400aeb2	        0x400fb6f6	                          movzx esi, sil	      6804	normal.c	FUNCTION_81	ELSE_19	IF_43	FOR_4	IF_44	CALL_44
0x400aeb6	        0x8d7436ff	                lea esi, [rsi + rsi - 1]	      6804	normal.c	FUNCTION_81	ELSE_19	IF_43	FOR_4	IF_44	CALL_44
0x400aeba	    0x41b800000000	                              mov r8d, 0	      6804	normal.c	FUNCTION_81	ELSE_19	IF_43	FOR_4	IF_44	CALL_44
0x400aec0	      0xb900000000	                              mov ecx, 0	      6804	normal.c	FUNCTION_81	ELSE_19	IF_43	FOR_4	IF_44	CALL_44
0x400aec5	    0x488b3d000000	            mov rdi, qword [0x0400aecc] 	      6804	normal.c	FUNCTION_81	ELSE_19	IF_43	FOR_4	IF_44	CALL_44
0x400aecc	      0xe800000000	                          call 0x400aed1	      6804	normal.c	FUNCTION_81	ELSE_19	IF_43	FOR_4	IF_44	CALL_44
0x400aed1	            0x85c0	                           test eax, eax	      6804	normal.c	FUNCTION_81	ELSE_19	IF_43	FOR_4	IF_44	CALL_44
0x400aed3	            0x750a	                           jne 0x400aedf	      6804	normal.c	FUNCTION_81	ELSE_19	IF_43	FOR_4	IF_44	CALL_44
0x400aed5	          0x488b3b	                    mov rdi, qword [rbx]	      6807	normal.c	FUNCTION_81	ELSE_19	IF_43	FOR_4	IF_44	CALL_45
0x400aed8	      0xe85b53ffff	                    call sym.clearopbeep	      6807	normal.c	FUNCTION_81	ELSE_19	IF_43	FOR_4	IF_44	CALL_45
0x400aedd	            0xeb18	                           jmp 0x400aef7	      6808	normal.c	FUNCTION_81	ELSE_19	IF_43	FOR_4	IF_44
0x400aedf	    0x488b05000000	            mov rax, qword [0x0400aee6] 	      6811	normal.c	FUNCTION_81	ELSE_19	IF_43	ELSE_20
0x400aee6	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      6811	normal.c	FUNCTION_81	ELSE_19	IF_43	ELSE_20
0x400aeed	        0x4883c501	                              add rbp, 1	      6803	normal.c	FUNCTION_81	ELSE_19	IF_43	FOR_4
0x400aef1	        0x48396b30	            cmp qword [rbx + 0x30], rbp 	      6803	normal.c	FUNCTION_81	ELSE_19	IF_43	FOR_4
0x400aef5	            0x7fa9	                            jg 0x400aea0	      6803	normal.c	FUNCTION_81	ELSE_19	IF_43	FOR_4
0x400aef7	          0x488b03	                    mov rax, qword [rbx]	      6813	normal.c	FUNCTION_81	ELSE_19	IF_43	IF_45
0x400aefa	          0x833800	                      cmp dword [rax], 0	      6813	normal.c	FUNCTION_81	ELSE_19	IF_43	IF_45
0x400aefd	     0xf8568010000	                           jne 0x400b06b	      6813	normal.c	FUNCTION_81	ELSE_19	IF_43	IF_45
0x400af03	    0xf60500000000	           test byte [0x0400af0a], 0x40 	      6813	normal.c	FUNCTION_81	ELSE_19	IF_43	IF_45
0x400af0a	     0xf845b010000	                            je 0x400b06b	      6813	normal.c	FUNCTION_81	ELSE_19	IF_43	IF_45
0x400af10	    0x833d00000000	               cmp dword [0x0400af17], 0	      6813	normal.c	FUNCTION_81	ELSE_19	IF_43	IF_45
0x400af17	     0xf844e010000	                            je 0x400b06b	      6813	normal.c	FUNCTION_81	ELSE_19	IF_43	IF_45
0x400af1d	      0xe800000000	                          call 0x400af22	      6814	normal.c	FUNCTION_81	ELSE_19	IF_43	CALL_46
0x400af22	      0xe944010000	                           jmp 0x400b06b	      6814	normal.c	FUNCTION_81	ELSE_19	IF_43	CALL_46
0x400af27	          0x488b3b	                    mov rdi, qword [rbx]	      6821	normal.c	FUNCTION_81	CALL_47
0x400af2a	      0xe80953ffff	                    call sym.clearopbeep	      6821	normal.c	FUNCTION_81	CALL_47
0x400af2f	      0xe937010000	                           jmp 0x400b06b	      6822	normal.c	FUNCTION_81
0x400af34	    0x41bc00000000	                             mov r12d, 0	      6592	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7
0x400af3a	          0x4d85ed	                           test r13, r13	      6593	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1
0x400af3d	     0xf8f68f9ffff	                            jg 0x400a8ab	      6593	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1
0x400af43	      0xe96dfaffff	                           jmp 0x400a9b5	      6593	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1
0x400af48	    0x488b05000000	            mov rax, qword [0x0400af4f] 	      6662	normal.c	FUNCTION_81	ELSE_11	IF_23
0x400af4f	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      6662	normal.c	FUNCTION_81	ELSE_11	IF_23
0x400af56	          0x488b3b	                    mov rdi, qword [rbx]	      6668	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_25
0x400af59	      0xb97d000000	                           mov ecx, 0x7d	      6660	normal.c	FUNCTION_81	ELSE_11	IF_23	ELSE_12
0x400af5e	          0x833f00	                      cmp dword [rdi], 0	      6667	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_25	CALL_22
0x400af61	     0xf8401fbffff	                            je 0x400aa68	      6667	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_25	CALL_22
0x400af67	      0xe90bfbffff	                           jmp 0x400aa77	      6667	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_25	CALL_22
0x400af6c	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      6704	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	CALL_29
0x400af71	      0xe800000000	                          call 0x400af76	      6704	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	CALL_29
0x400af76	          0x4889df	                            mov rdi, rbx	      6706	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	CALL_30
0x400af79	      0xe84b55ffff	                  call sym.prep_redo_cmd	      6706	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	CALL_30
0x400af7e	        0x488b5330	            mov rdx, qword [rbx + 0x30] 	      6708	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	CALL_31
0x400af82	      0xb901000000	                              mov ecx, 1	      6708	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	CALL_31
0x400af87	            0x89ee	                            mov esi, ebp	      6708	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	CALL_31
0x400af89	        0x8b7c2430	            mov edi, dword [rsp + 0x30] 	      6708	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	CALL_31
0x400af8d	      0xe800000000	                          call 0x400af92	      6708	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	CALL_31
0x400af92	      0xe9d4000000	                           jmp 0x400b06b	      6708	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	CALL_31
0x400af97	      0x4c8d642420	                   lea r12, [rsp + 0x20]	      6562	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	IF_8	ELSE_6
0x400af9c	    0x488b05000000	            mov rax, qword [0x0400afa3] 	      6569	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6
0x400afa3	        0x4c897838	             mov qword [rax + 0x38], r15	      6569	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6
0x400afa7	        0x44897040	            mov dword [rax + 0x40], r14d	      6569	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6
0x400afab	        0x8b7c2408	                mov edi, dword [rsp + 8]	      6569	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6
0x400afaf	          0x897844	             mov dword [rax + 0x44], edi	      6569	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6
0x400afb2	          0x8b5310	            mov edx, dword [rbx + 0x10] 	      6577	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0x400afb5	            0x89d1	                            mov ecx, edx	      6577	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0x400afb7	          0x83e1df	                     and ecx, 0xffffffdf	      6577	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0x400afba	          0x83f94d	                           cmp ecx, 0x4d	      6577	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0x400afbd	     0xf850bfaffff	                           jne 0x400a9ce	      6577	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0x400afc3	      0xe99af8ffff	                           jmp 0x400a862	      6577	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0x400afc8	    0x488b05000000	            mov rax, qword [0x0400afcf] 	      6569	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6
0x400afcf	        0x4c897838	             mov qword [rax + 0x38], r15	      6569	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6
0x400afd3	        0x44897040	            mov dword [rax + 0x40], r14d	      6569	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6
0x400afd7	        0x8b7c2408	                mov edi, dword [rsp + 8]	      6569	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6
0x400afdb	          0x897844	             mov dword [rax + 0x44], edi	      6569	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6
0x400afde	          0x8b5310	            mov edx, dword [rbx + 0x10] 	      6577	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0x400afe1	            0x89d1	                            mov ecx, edx	      6577	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0x400afe3	          0x83e1df	                     and ecx, 0xffffffdf	      6577	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0x400afe6	          0x83f94d	                           cmp ecx, 0x4d	      6577	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0x400afe9	     0xf8473f8ffff	                            je 0x400a862	      6577	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0x400afef	            0xeb7a	                           jmp 0x400b06b	      6577	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0x400aff1	    0x488b05000000	            mov rax, qword [0x0400aff8] 	      6635	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0x400aff8	        0x4c897838	             mov qword [rax + 0x38], r15	      6635	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0x400affc	        0x44897040	            mov dword [rax + 0x40], r14d	      6635	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0x400b000	        0x8b7c2408	                mov edi, dword [rsp + 8]	      6635	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0x400b004	          0x897844	             mov dword [rax + 0x44], edi	      6635	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0x400b007	      0x4c8d642430	                   lea r12, [rsp + 0x30]	      6635	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0x400b00c	      0xe9bdf9ffff	                           jmp 0x400a9ce	      6635	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0x400b011	        0x448b6a40	           mov r13d, dword [rdx + 0x40] 	      6698	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0x400b015	        0x448b6244	           mov r12d, dword [rdx + 0x44] 	      6698	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0x400b019	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      6698	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0x400b01e	      0xe985fbffff	                           jmp 0x400aba8	      6698	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0x400b023	        0x448b6a40	           mov r13d, dword [rdx + 0x40] 	      6698	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0x400b027	        0x448b6244	           mov r12d, dword [rdx + 0x44] 	      6698	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0x400b02b	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      6698	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0x400b030	      0xe998fbffff	                           jmp 0x400abcd	      6698	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0x400b035	    0x488b05000000	            mov rax, qword [0x0400b03c] 	      6635	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0x400b03c	        0x4c897838	             mov qword [rax + 0x38], r15	      6635	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0x400b040	        0x44897040	            mov dword [rax + 0x40], r14d	      6635	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0x400b044	        0x8b4c2408	                mov ecx, dword [rsp + 8]	      6635	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0x400b048	          0x894844	             mov dword [rax + 0x44], ecx	      6635	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0x400b04b	      0xe97ef9ffff	                           jmp 0x400a9ce	      6635	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0x400b050	    0x488b05000000	            mov rax, qword [0x0400b057] 	      6635	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0x400b057	        0x4c897838	             mov qword [rax + 0x38], r15	      6635	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0x400b05b	        0x44897040	            mov dword [rax + 0x40], r14d	      6635	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0x400b05f	        0x8b7c2408	                mov edi, dword [rsp + 8]	      6635	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0x400b063	          0x897844	             mov dword [rax + 0x44], edi	      6635	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0x400b066	      0xe94af9ffff	                           jmp 0x400a9b5	      6635	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0x400b06b	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      6822	normal.c	FUNCTION_81
0x400b070	    0x644833042528	                xor rax, qword fs:[0x28]	      6822	normal.c	FUNCTION_81
0x400b079	            0x7405	                            je 0x400b080	      6822	normal.c	FUNCTION_81
0x400b07b	      0xe800000000	                          call 0x400b080	      6822	normal.c	FUNCTION_81
0x400b080	        0x4883c458	                           add rsp, 0x58	      6822	normal.c	FUNCTION_81
0x400b084	              0x5b	                                 pop rbx	      6822	normal.c	FUNCTION_81
0x400b085	              0x5d	                                 pop rbp	      6822	normal.c	FUNCTION_81
0x400b086	            0x415c	                                 pop r12	      6822	normal.c	FUNCTION_81
0x400b088	            0x415d	                                 pop r13	      6822	normal.c	FUNCTION_81
0x400b08a	            0x415e	                                 pop r14	      6822	normal.c	FUNCTION_81
0x400b08c	            0x415f	                                 pop r15	      6822	normal.c	FUNCTION_81
0x400b08e	              0xc3	                                     ret	      6822	normal.c	FUNCTION_81
nv_suspend	CALL,3:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,0:IF,1	13
0x4005ee0	        0x4883ec08	                              sub rsp, 8	      7870	normal.c	FUNCTION_106
0x4005ee4	          0x488b07	                    mov rax, qword [rdi]	      7871	normal.c	FUNCTION_106	CALL_1
0x4005ee7	    0xc70000000000	                      mov dword [rax], 0	      3676	normal.c	FUNCTION_24
0x4005eed	    0xc74004000000	                  mov dword [rax + 4], 0	      3677	normal.c	FUNCTION_24
0x4005ef4	    0xc7400c000000	                mov dword [rax + 0xc], 0	      3678	normal.c	FUNCTION_24
0x4005efb	    0xc74010000000	               mov dword [rax + 0x10], 0	      3679	normal.c	FUNCTION_24
0x4005f02	    0x833d00000000	               cmp dword [0x04005f09], 0	      7872	normal.c	FUNCTION_106	IF_1
0x4005f09	            0x7405	                            je 0x4005f10	      7872	normal.c	FUNCTION_106	IF_1
0x4005f0b	      0xe800000000	                          call 0x4005f10	      7873	normal.c	FUNCTION_106	CALL_2
0x4005f10	      0xbf00000000	                              mov edi, 0	      7874	normal.c	FUNCTION_106	CALL_3
0x4005f15	      0xe800000000	                          call 0x4005f1a	      7874	normal.c	FUNCTION_106	CALL_3
0x4005f1a	        0x4883c408	                              add rsp, 8	      7875	normal.c	FUNCTION_106
0x4005f1e	              0xc3	                                     ret	      7875	normal.c	FUNCTION_106
nv_tagpop	CALL,2:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,0:IF,1	14
0x400227f	              0x53	                                push rbx	      5868	normal.c	FUNCTION_68
0x4002280	          0x4889fb	                            mov rbx, rdi	      5868	normal.c	FUNCTION_68
0x4002283	          0x488b3f	                    mov rdi, qword [rdi]	      5869	normal.c	FUNCTION_68	IF_1	CALL_1
0x4002286	      0xe8d6dfffff	                  call sym.checkclearopq	      5869	normal.c	FUNCTION_68	IF_1	CALL_1
0x400228b	            0x85c0	                           test eax, eax	      5869	normal.c	FUNCTION_68	IF_1	CALL_1
0x400228d	            0x751e	                           jne 0x40022ad	      5869	normal.c	FUNCTION_68	IF_1	CALL_1
0x400228f	        0x488b5330	            mov rdx, qword [rbx + 0x30] 	      5870	normal.c	FUNCTION_68	CALL_2
0x4002293	    0x41b801000000	                              mov r8d, 1	      5870	normal.c	FUNCTION_68	CALL_2
0x4002299	      0xb900000000	                              mov ecx, 0	      5870	normal.c	FUNCTION_68	CALL_2
0x400229e	      0xbe02000000	                              mov esi, 2	      5870	normal.c	FUNCTION_68	CALL_2
0x40022a3	      0xbf00000000	                              mov edi, 0	      5870	normal.c	FUNCTION_68	CALL_2
0x40022a8	      0xe800000000	                          call 0x40022ad	      5870	normal.c	FUNCTION_68	CALL_2
0x40022ad	              0x5b	                                 pop rbx	      5871	normal.c	FUNCTION_68
0x40022ae	              0xc3	                                     ret	      5871	normal.c	FUNCTION_68
get_op_vcol	CALL,6:SWITCH,0:DO,0:FOR,1:functions,0:WHILE,0:ELSE,2:IF,9	125
0x4002900	            0x4154	                                push r12	      9595	normal.c	FUNCTION_140
0x4002902	              0x55	                                push rbp	      9595	normal.c	FUNCTION_140
0x4002903	              0x53	                                push rbx	      9595	normal.c	FUNCTION_140
0x4002904	        0x4883ec10	                           sub rsp, 0x10	      9595	normal.c	FUNCTION_140
0x4002908	    0x64488b042528	                mov rax, qword fs:[0x28]	      9595	normal.c	FUNCTION_140
0x4002911	      0x4889442408	                mov qword [rsp + 8], rax	      9595	normal.c	FUNCTION_140
0x4002916	            0x31c0	                            xor eax, eax	      9595	normal.c	FUNCTION_140
0x4002918	    0x833d00000000	           cmp dword [0x0400291f], 0x16 	      9598	normal.c	FUNCTION_140	IF_1
0x400291f	     0xf85b8010000	                           jne 0x4002add	      9598	normal.c	FUNCTION_140	IF_1
0x4002925	          0x4889fb	                            mov rbx, rdi	      9598	normal.c	FUNCTION_140	IF_1
0x4002928	            0x89f5	                            mov ebp, esi	      9598	normal.c	FUNCTION_140	IF_1
0x400292a	          0x4189d4	                           mov r12d, edx	      9598	normal.c	FUNCTION_140	IF_1
0x400292d	            0x85d2	                           test edx, edx	      9599	normal.c	FUNCTION_140	IF_1
0x400292f	            0x7516	                           jne 0x4002947	      9599	normal.c	FUNCTION_140	IF_1
0x4002931	    0x488b05000000	            mov rax, qword [0x04002938] 	      9599	normal.c	FUNCTION_140	IF_1
0x4002938	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      9599	normal.c	FUNCTION_140	IF_1
0x400293e	          0x394738	            cmp dword [rdi + 0x38], eax 	      9599	normal.c	FUNCTION_140	IF_1
0x4002941	     0xf8c96010000	                            jl 0x4002add	      9599	normal.c	FUNCTION_140	IF_1
0x4002947	    0xc74360010000	               mov dword [rbx + 0x60], 1	      9602	normal.c	FUNCTION_140
0x400294e	    0x833d00000000	               cmp dword [0x04002955], 0	      9606	normal.c	FUNCTION_140	IF_2
0x4002955	            0x7414	                            je 0x400296b	      9606	normal.c	FUNCTION_140	IF_2
0x4002957	        0x488d7330	                   lea rsi, [rbx + 0x30]	      9607	normal.c	FUNCTION_140	CALL_1
0x400295b	    0x488b05000000	            mov rax, qword [0x04002962] 	      9607	normal.c	FUNCTION_140	CALL_1
0x4002962	        0x488b7808	                mov rdi, qword [rax + 8]	      9607	normal.c	FUNCTION_140	CALL_1
0x4002966	      0xe800000000	                          call 0x400296b	      9607	normal.c	FUNCTION_140	CALL_1
0x400296b	        0x488d5364	                   lea rdx, [rbx + 0x64]	      9610	normal.c	FUNCTION_140	CALL_2
0x400296f	        0x488d7320	                   lea rsi, [rbx + 0x20]	      9610	normal.c	FUNCTION_140	CALL_2
0x4002973	        0x4c8d4368	                    lea r8, [rbx + 0x68]	      9610	normal.c	FUNCTION_140	CALL_2
0x4002977	      0xb900000000	                              mov ecx, 0	      9610	normal.c	FUNCTION_140	CALL_2
0x400297c	    0x488b3d000000	            mov rdi, qword [0x04002983] 	      9610	normal.c	FUNCTION_140	CALL_2
0x4002983	      0xe800000000	                          call 0x4002988	      9610	normal.c	FUNCTION_140	CALL_2
0x4002988	    0x833d00000000	               cmp dword [0x0400298f], 0	      9612	normal.c	FUNCTION_140	IF_3
0x400298f	     0xf8533010000	                           jne 0x4002ac8	      9612	normal.c	FUNCTION_140	IF_3
0x4002995	        0x488d7330	                   lea rsi, [rbx + 0x30]	      9614	normal.c	FUNCTION_140	IF_3	CALL_3
0x4002999	      0x4c8d442404	                       lea r8, [rsp + 4]	      9614	normal.c	FUNCTION_140	IF_3	CALL_3
0x400299e	      0xb900000000	                              mov ecx, 0	      9614	normal.c	FUNCTION_140	IF_3	CALL_3
0x40029a3	          0x4889e2	                            mov rdx, rsp	      9614	normal.c	FUNCTION_140	IF_3	CALL_3
0x40029a6	    0x488b3d000000	            mov rdi, qword [0x040029ad] 	      9614	normal.c	FUNCTION_140	IF_3	CALL_3
0x40029ad	      0xe800000000	                          call 0x40029b2	      9614	normal.c	FUNCTION_140	IF_3	CALL_3
0x40029b2	          0x8b0424	                    mov eax, dword [rsp]	      9616	normal.c	FUNCTION_140	IF_3	IF_4
0x40029b5	          0x394364	            cmp dword [rbx + 0x64], eax 	      9616	normal.c	FUNCTION_140	IF_3	IF_4
0x40029b8	            0x7e03	                           jle 0x40029bd	      9616	normal.c	FUNCTION_140	IF_3	IF_4
0x40029ba	          0x894364	             mov dword [rbx + 0x64], eax	      9617	normal.c	FUNCTION_140	IF_3	IF_4
0x40029bd	          0x8b4b68	            mov ecx, dword [rbx + 0x68] 	      9618	normal.c	FUNCTION_140	IF_3	IF_5
0x40029c0	        0x8b542404	                mov edx, dword [rsp + 4]	      9618	normal.c	FUNCTION_140	IF_3	IF_5
0x40029c4	            0x39d1	                            cmp ecx, edx	      9618	normal.c	FUNCTION_140	IF_3	IF_5
0x40029c6	            0x7d24	                           jge 0x40029ec	      9618	normal.c	FUNCTION_140	IF_3	IF_5
0x40029c8	          0x4585e4	                         test r12d, r12d	      9620	normal.c	FUNCTION_140	IF_3	IF_5	IF_6
0x40029cb	            0x741c	                            je 0x40029e9	      9620	normal.c	FUNCTION_140	IF_3	IF_5	IF_6
0x40029cd	    0x488b35000000	            mov rsi, qword [0x040029d4] 	      9620	normal.c	FUNCTION_140	IF_3	IF_5	IF_6
0x40029d4	          0x803e65	                    cmp byte [rsi], 0x65	      9620	normal.c	FUNCTION_140	IF_3	IF_5	IF_6
0x40029d7	            0x7510	                           jne 0x40029e9	      9620	normal.c	FUNCTION_140	IF_3	IF_5	IF_6
0x40029d9	            0x85c0	                           test eax, eax	      9620	normal.c	FUNCTION_140	IF_3	IF_5	IF_6
0x40029db	            0x7e0c	                           jle 0x40029e9	      9620	normal.c	FUNCTION_140	IF_3	IF_5	IF_6
0x40029dd	          0x83e801	                              sub eax, 1	      9621	normal.c	FUNCTION_140	IF_3	IF_5	IF_6
0x40029e0	            0x39c1	                            cmp ecx, eax	      9621	normal.c	FUNCTION_140	IF_3	IF_5	IF_6
0x40029e2	            0x7f05	                            jg 0x40029e9	      9621	normal.c	FUNCTION_140	IF_3	IF_5	IF_6
0x40029e4	          0x894368	             mov dword [rbx + 0x68], eax	      9622	normal.c	FUNCTION_140	IF_3	IF_5	IF_6
0x40029e7	            0xeb03	                           jmp 0x40029ec	      9622	normal.c	FUNCTION_140	IF_3	IF_5	IF_6
0x40029e9	          0x895368	             mov dword [rbx + 0x68], edx	      9624	normal.c	FUNCTION_140	IF_3	IF_5	ELSE_1
0x40029ec	    0x488b3d000000	            mov rdi, qword [0x040029f3] 	      9629	normal.c	FUNCTION_140	ELSE_1	IF_7
0x40029f3	    0x817f48ffffff	     cmp dword [rdi + 0x48], 0x7fffffff 	      9629	normal.c	FUNCTION_140	ELSE_1	IF_7
0x40029fa	            0x755b	                           jne 0x4002a57	      9629	normal.c	FUNCTION_140	ELSE_1	IF_7
0x40029fc	    0xc74740ffffff	     mov dword [rdi + 0x40], 0x7fffffff 	      9631	normal.c	FUNCTION_140	ELSE_1	IF_7
0x4002a03	    0xc74368000000	               mov dword [rbx + 0x68], 0	      9632	normal.c	FUNCTION_140	ELSE_1	IF_7
0x4002a0a	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      9633	normal.c	FUNCTION_140	ELSE_1	IF_7	FOR_1
0x4002a0e	        0x48894738	             mov qword [rdi + 0x38], rax	      9633	normal.c	FUNCTION_140	ELSE_1	IF_7	FOR_1
0x4002a12	        0x483b4330	            cmp rax, qword [rbx + 0x30] 	      9633	normal.c	FUNCTION_140	ELSE_1	IF_7	FOR_1
0x4002a16	            0x7f51	                            jg 0x4002a69	      9633	normal.c	FUNCTION_140	ELSE_1	IF_7	FOR_1
0x4002a18	        0x488d7738	                   lea rsi, [rdi + 0x38]	      9637	normal.c	FUNCTION_140	ELSE_1	IF_7	FOR_1	CALL_4
0x4002a1c	      0x4c8d442404	                       lea r8, [rsp + 4]	      9637	normal.c	FUNCTION_140	ELSE_1	IF_7	FOR_1	CALL_4
0x4002a21	      0xb900000000	                              mov ecx, 0	      9637	normal.c	FUNCTION_140	ELSE_1	IF_7	FOR_1	CALL_4
0x4002a26	      0xba00000000	                              mov edx, 0	      9637	normal.c	FUNCTION_140	ELSE_1	IF_7	FOR_1	CALL_4
0x4002a2b	      0xe800000000	                          call 0x4002a30	      9637	normal.c	FUNCTION_140	ELSE_1	IF_7	FOR_1	CALL_4
0x4002a30	        0x8b442404	                mov eax, dword [rsp + 4]	      9638	normal.c	FUNCTION_140	ELSE_1	IF_7	FOR_1	IF_8
0x4002a34	          0x394368	            cmp dword [rbx + 0x68], eax 	      9638	normal.c	FUNCTION_140	ELSE_1	IF_7	FOR_1	IF_8
0x4002a37	            0x7d03	                           jge 0x4002a3c	      9638	normal.c	FUNCTION_140	ELSE_1	IF_7	FOR_1	IF_8
0x4002a39	          0x894368	             mov dword [rbx + 0x68], eax	      9639	normal.c	FUNCTION_140	ELSE_1	IF_7	FOR_1	IF_8
0x4002a3c	    0x488b3d000000	            mov rdi, qword [0x04002a43] 	      9635	normal.c	FUNCTION_140	ELSE_1	IF_7	FOR_1
0x4002a43	        0x488b4738	            mov rax, qword [rdi + 0x38] 	      9635	normal.c	FUNCTION_140	ELSE_1	IF_7	FOR_1
0x4002a47	        0x4883c001	                              add rax, 1	      9635	normal.c	FUNCTION_140	ELSE_1	IF_7	FOR_1
0x4002a4b	        0x48894738	             mov qword [rdi + 0x38], rax	      9635	normal.c	FUNCTION_140	ELSE_1	IF_7	FOR_1
0x4002a4f	        0x48394330	            cmp qword [rbx + 0x30], rax 	      9633	normal.c	FUNCTION_140	ELSE_1	IF_7	FOR_1
0x4002a53	            0x7dc3	                           jge 0x4002a18	      9633	normal.c	FUNCTION_140	ELSE_1	IF_7	FOR_1
0x4002a55	            0xeb12	                           jmp 0x4002a69	      9633	normal.c	FUNCTION_140	ELSE_1	IF_7	FOR_1
0x4002a57	    0x833d00000000	               cmp dword [0x04002a5e], 0	      9642	normal.c	FUNCTION_140	ELSE_2	IF_9
0x4002a5e	            0x7409	                            je 0x4002a69	      9642	normal.c	FUNCTION_140	ELSE_2	IF_9
0x4002a60	           0x36b64	             add ebp, dword [rbx + 0x64]	      9643	normal.c	FUNCTION_140	ELSE_2	IF_9
0x4002a63	          0x83ed01	                              sub ebp, 1	      9643	normal.c	FUNCTION_140	ELSE_2	IF_9
0x4002a66	          0x896b68	             mov dword [rbx + 0x68], ebp	      9643	normal.c	FUNCTION_140	ELSE_2	IF_9
0x4002a69	        0x488b5330	            mov rdx, qword [rbx + 0x30] 	      9651	normal.c	FUNCTION_140
0x4002a6d	    0x488b05000000	            mov rax, qword [0x04002a74] 	      9651	normal.c	FUNCTION_140
0x4002a74	        0x48895038	             mov qword [rax + 0x38], rdx	      9651	normal.c	FUNCTION_140
0x4002a78	          0x8b7b68	            mov edi, dword [rbx + 0x68] 	      9652	normal.c	FUNCTION_140	CALL_5
0x4002a7b	      0xe800000000	                          call 0x4002a80	      9652	normal.c	FUNCTION_140	CALL_5
0x4002a80	    0x488b05000000	            mov rax, qword [0x04002a87] 	      9653	normal.c	FUNCTION_140
0x4002a87	        0x488b7038	            mov rsi, qword [rax + 0x38] 	      9653	normal.c	FUNCTION_140
0x4002a8b	        0x488b7840	            mov rdi, qword [rax + 0x40] 	      9653	normal.c	FUNCTION_140
0x4002a8f	        0x48897330	             mov qword [rbx + 0x30], rsi	      9653	normal.c	FUNCTION_140
0x4002a93	        0x48897b38	             mov qword [rbx + 0x38], rdi	      9653	normal.c	FUNCTION_140
0x4002a97	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	      9655	normal.c	FUNCTION_140
0x4002a9b	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	      9655	normal.c	FUNCTION_140
0x4002a9f	        0x48897038	             mov qword [rax + 0x38], rsi	      9655	normal.c	FUNCTION_140
0x4002aa3	        0x48897840	             mov qword [rax + 0x40], rdi	      9655	normal.c	FUNCTION_140
0x4002aa7	          0x8b7b64	            mov edi, dword [rbx + 0x64] 	      9656	normal.c	FUNCTION_140	CALL_6
0x4002aaa	      0xe800000000	                          call 0x4002aaf	      9656	normal.c	FUNCTION_140	CALL_6
0x4002aaf	    0x488b05000000	            mov rax, qword [0x04002ab6] 	      9657	normal.c	FUNCTION_140
0x4002ab6	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      9657	normal.c	FUNCTION_140
0x4002aba	        0x488b4038	            mov rax, qword [rax + 0x38] 	      9657	normal.c	FUNCTION_140
0x4002abe	        0x48894320	             mov qword [rbx + 0x20], rax	      9657	normal.c	FUNCTION_140
0x4002ac2	        0x48895328	             mov qword [rbx + 0x28], rdx	      9657	normal.c	FUNCTION_140
0x4002ac6	            0xeb15	                           jmp 0x4002add	      9657	normal.c	FUNCTION_140
0x4002ac8	    0x488b3d000000	            mov rdi, qword [0x04002acf] 	      9629	normal.c	FUNCTION_140	ELSE_1	IF_7
0x4002acf	    0x817f48ffffff	     cmp dword [rdi + 0x48], 0x7fffffff 	      9629	normal.c	FUNCTION_140	ELSE_1	IF_7
0x4002ad6	            0x7588	                           jne 0x4002a60	      9629	normal.c	FUNCTION_140	ELSE_1	IF_7
0x4002ad8	      0xe91fffffff	                           jmp 0x40029fc	      9629	normal.c	FUNCTION_140	ELSE_1	IF_7
0x4002add	      0x488b442408	                mov rax, qword [rsp + 8]	      9658	normal.c	FUNCTION_140
0x4002ae2	    0x644833042528	                xor rax, qword fs:[0x28]	      9658	normal.c	FUNCTION_140
0x4002aeb	            0x7405	                            je 0x4002af2	      9658	normal.c	FUNCTION_140
0x4002aed	      0xe800000000	                          call 0x4002af2	      9658	normal.c	FUNCTION_140
0x4002af2	        0x4883c410	                           add rsp, 0x10	      9658	normal.c	FUNCTION_140
0x4002af6	              0x5b	                                 pop rbx	      9658	normal.c	FUNCTION_140
0x4002af7	              0x5d	                                 pop rbp	      9658	normal.c	FUNCTION_140
0x4002af8	            0x415c	                                 pop r12	      9658	normal.c	FUNCTION_140
0x4002afa	              0xc3	                                     ret	      9658	normal.c	FUNCTION_140
adjust_cursor	CALL,3:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,0:IF,2	26
0x4000711	    0x488b05000000	            mov rax, qword [0x04000718] 	      8805	normal.c	FUNCTION_120	IF_1	CALL_1
0x4000718	        0x83784000	               cmp dword [rax + 0x40], 0	      8805	normal.c	FUNCTION_120	IF_1	CALL_1
0x400071c	            0x7e55	                           jle 0x4000773	      8805	normal.c	FUNCTION_120	IF_1	CALL_1
0x400071e	              0x53	                                push rbx	      8799	normal.c	FUNCTION_120
0x400071f	          0x4889fb	                            mov rbx, rdi	      8799	normal.c	FUNCTION_120
0x4000722	      0xe800000000	                          call 0x4000727	      8805	normal.c	FUNCTION_120	IF_1	CALL_1
0x4000727	            0x85c0	                           test eax, eax	      8805	normal.c	FUNCTION_120	IF_1	CALL_1
0x4000729	            0x7547	                           jne 0x4000772	      8805	normal.c	FUNCTION_120	IF_1	CALL_1
0x400072b	    0x833d00000000	               cmp dword [0x04000732], 0	      8806	normal.c	FUNCTION_120	IF_1
0x4000732	            0x740c	                            je 0x4000740	      8806	normal.c	FUNCTION_120	IF_1
0x4000734	    0x488b05000000	            mov rax, qword [0x0400073b] 	      8806	normal.c	FUNCTION_120	IF_1
0x400073b	          0x80386f	                    cmp byte [rax], 0x6f	      8806	normal.c	FUNCTION_120	IF_1
0x400073e	            0x7532	                           jne 0x4000772	      8806	normal.c	FUNCTION_120	IF_1
0x4000740	      0xe800000000	                          call 0x4000745	      8808	normal.c	FUNCTION_120	IF_1	CALL_2
0x4000745	            0x85c0	                           test eax, eax	      8808	normal.c	FUNCTION_120	IF_1	CALL_2
0x4000747	            0x7529	                           jne 0x4000772	      8808	normal.c	FUNCTION_120	IF_1	CALL_2
0x4000749	    0xf60500000000	               test byte [0x04000750], 8	      8808	normal.c	FUNCTION_120	IF_1	CALL_2
0x4000750	            0x7520	                           jne 0x4000772	      8808	normal.c	FUNCTION_120	IF_1	CALL_2
0x4000752	    0x488b05000000	            mov rax, qword [0x04000759] 	      8812	normal.c	FUNCTION_120	IF_1
0x4000759	        0x83684001	               sub dword [rax + 0x40], 1	      8812	normal.c	FUNCTION_120	IF_1
0x400075d	    0x833d00000000	               cmp dword [0x04000764], 0	      8815	normal.c	FUNCTION_120	IF_1	IF_2
0x4000764	            0x7405	                            je 0x400076b	      8815	normal.c	FUNCTION_120	IF_1	IF_2
0x4000766	      0xe800000000	                          call 0x400076b	      8816	normal.c	FUNCTION_120	IF_1	CALL_3
0x400076b	    0xc74314010000	               mov dword [rbx + 0x14], 1	      8818	normal.c	FUNCTION_120	IF_1
0x4000772	              0x5b	                                 pop rbx	      8820	normal.c	FUNCTION_120
0x4000773	            0xf3c3	                                     ret	      8820	normal.c	FUNCTION_120
nv_clear	CALL,5:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,0:IF,1	20
0x4002399	        0x4883ec08	                              sub rsp, 8	      5459	normal.c	FUNCTION_61
0x400239d	          0x488b3f	                    mov rdi, qword [rdi]	      5460	normal.c	FUNCTION_61	IF_1	CALL_1
0x40023a0	      0xe8dedeffff	                   call sym.checkclearop	      5460	normal.c	FUNCTION_61	IF_1	CALL_1
0x40023a5	            0x85c0	                           test eax, eax	      5460	normal.c	FUNCTION_61	IF_1	CALL_1
0x40023a7	            0x753d	                           jne 0x40023e6	      5460	normal.c	FUNCTION_61	IF_1	CALL_1
0x40023a9	    0x488b05000000	            mov rax, qword [0x040023b0] 	      5472	normal.c	FUNCTION_61	IF_1	CALL_3
0x40023b0	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      5472	normal.c	FUNCTION_61	IF_1	CALL_3
0x40023b4	      0xe800000000	                          call 0x40023b9	      5472	normal.c	FUNCTION_61	IF_1	CALL_3
0x40023b9	    0x488b05000000	            mov rax, qword [0x040023c0] 	      5477	normal.c	FUNCTION_61	IF_1	CALL_4
0x40023c0	          0x4885c0	                           test rax, rax	      5477	normal.c	FUNCTION_61	IF_1	CALL_4
0x40023c3	            0x7417	                            je 0x40023dc	      5477	normal.c	FUNCTION_61	IF_1	CALL_4
0x40023c5	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      5478	normal.c	FUNCTION_61	IF_1
0x40023c9	    0xc78254020000	              mov dword [rdx + 0x254], 0	      5478	normal.c	FUNCTION_61	IF_1
0x40023d3	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5477	normal.c	FUNCTION_61	IF_1	CALL_4
0x40023d7	          0x4885c0	                           test rax, rax	      5477	normal.c	FUNCTION_61	IF_1	CALL_4
0x40023da	            0x75e9	                           jne 0x40023c5	      5477	normal.c	FUNCTION_61	IF_1	CALL_4
0x40023dc	      0xbf32000000	                           mov edi, 0x32	      5482	normal.c	FUNCTION_61	IF_1	CALL_5
0x40023e1	      0xe800000000	                          call 0x40023e6	      5482	normal.c	FUNCTION_61	IF_1	CALL_5
0x40023e6	        0x4883c408	                              add rsp, 8	      5484	normal.c	FUNCTION_61
0x40023ea	              0xc3	                                     ret	      5484	normal.c	FUNCTION_61
nv_join	CALL,5:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,1:IF,5	58
0x40020a1	              0x53	                                push rbx	      9377	normal.c	FUNCTION_134
0x40020a2	          0x4889fb	                            mov rbx, rdi	      9377	normal.c	FUNCTION_134
0x40020a5	    0x833d00000000	               cmp dword [0x040020ac], 0	      9378	normal.c	FUNCTION_134	IF_1
0x40020ac	            0x740a	                            je 0x40020b8	      9378	normal.c	FUNCTION_134	IF_1
0x40020ae	      0xe8abfaffff	                    call sym.nv_operator	      9379	normal.c	FUNCTION_134	CALL_1
0x40020b3	      0xe9cd000000	                           jmp 0x4002185	      9379	normal.c	FUNCTION_134	CALL_1
0x40020b8	          0x488b3f	                    mov rdi, qword [rdi]	      9380	normal.c	FUNCTION_134	ELSE_1	IF_2	CALL_2
0x40020bb	      0xe8c3e1ffff	                   call sym.checkclearop	      9380	normal.c	FUNCTION_134	ELSE_1	IF_2	CALL_2
0x40020c0	            0x85c0	                           test eax, eax	      9380	normal.c	FUNCTION_134	ELSE_1	IF_2	CALL_2
0x40020c2	     0xf85bd000000	                           jne 0x4002185	      9380	normal.c	FUNCTION_134	ELSE_1	IF_2	CALL_2
0x40020c8	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	      9382	normal.c	FUNCTION_134	ELSE_1	IF_2	IF_3
0x40020cc	        0x4883fa01	                              cmp rdx, 1	      9382	normal.c	FUNCTION_134	ELSE_1	IF_2	IF_3
0x40020d0	            0x7f25	                            jg 0x40020f7	      9382	normal.c	FUNCTION_134	ELSE_1	IF_2	IF_3
0x40020d2	    0x48c743280200	               mov qword [rbx + 0x28], 2	      9383	normal.c	FUNCTION_134	ELSE_1	IF_2	IF_3
0x40020da	    0x488b05000000	            mov rax, qword [0x040020e1] 	      9384	normal.c	FUNCTION_134	ELSE_1	IF_2	IF_4
0x40020e1	        0x488b4038	            mov rax, qword [rax + 0x38] 	      9384	normal.c	FUNCTION_134	ELSE_1	IF_2	IF_4
0x40020e5	        0x4883c001	                              add rax, 1	      9384	normal.c	FUNCTION_134	ELSE_1	IF_2	IF_4
0x40020e9	    0x488b15000000	            mov rdx, qword [0x040020f0] 	      9385	normal.c	FUNCTION_134	ELSE_1	IF_2	IF_4
0x40020f0	          0x483b02	                    cmp rax, qword [rdx]	      9384	normal.c	FUNCTION_134	ELSE_1	IF_2	IF_4
0x40020f3	            0x7f27	                            jg 0x400211c	      9384	normal.c	FUNCTION_134	ELSE_1	IF_2	IF_4
0x40020f5	            0xeb3a	                           jmp 0x4002131	      9384	normal.c	FUNCTION_134	ELSE_1	IF_2	IF_4
0x40020f7	    0x488b05000000	            mov rax, qword [0x040020fe] 	      9384	normal.c	FUNCTION_134	ELSE_1	IF_2	IF_4
0x40020fe	        0x488b4838	            mov rcx, qword [rax + 0x38] 	      9384	normal.c	FUNCTION_134	ELSE_1	IF_2	IF_4
0x4002102	    0x488b05000000	            mov rax, qword [0x04002109] 	      9385	normal.c	FUNCTION_134	ELSE_1	IF_2	IF_4
0x4002109	          0x488b00	                    mov rax, qword [rax]	      9385	normal.c	FUNCTION_134	ELSE_1	IF_2	IF_4
0x400210c	      0x488d740aff	                lea rsi, [rdx + rcx - 1]	      9384	normal.c	FUNCTION_134	ELSE_1	IF_2	IF_4
0x4002111	          0x4839c6	                            cmp rsi, rax	      9384	normal.c	FUNCTION_134	ELSE_1	IF_2	IF_4
0x4002114	            0x7e1b	                           jle 0x4002131	      9384	normal.c	FUNCTION_134	ELSE_1	IF_2	IF_4
0x4002116	        0x4883fa02	                              cmp rdx, 2	      9388	normal.c	FUNCTION_134	ELSE_1	IF_2	IF_4	IF_5
0x400211a	            0x7f0a	                            jg 0x4002126	      9388	normal.c	FUNCTION_134	ELSE_1	IF_2	IF_4	IF_5
0x400211c	          0x488b3b	                    mov rdi, qword [rbx]	      9390	normal.c	FUNCTION_134	ELSE_1	IF_2	IF_4	IF_5	CALL_3
0x400211f	      0xe814e1ffff	                    call sym.clearopbeep	      9390	normal.c	FUNCTION_134	ELSE_1	IF_2	IF_4	IF_5	CALL_3
0x4002124	            0xeb5f	                           jmp 0x4002185	      9391	normal.c	FUNCTION_134	ELSE_1	IF_2	IF_4	IF_5
0x4002126	          0x4829c8	                            sub rax, rcx	      9393	normal.c	FUNCTION_134	ELSE_1	IF_2	IF_4
0x4002129	        0x4883c001	                              add rax, 1	      9393	normal.c	FUNCTION_134	ELSE_1	IF_2	IF_4
0x400212d	        0x48894328	             mov qword [rbx + 0x28], rax	      9393	normal.c	FUNCTION_134	ELSE_1	IF_2	IF_4
0x4002131	          0x8b4b0c	              mov ecx, dword [rbx + 0xc]	      9397	normal.c	FUNCTION_134	ELSE_1	IF_2	CALL_4
0x4002134	        0x488b7328	            mov rsi, qword [rbx + 0x28] 	      9397	normal.c	FUNCTION_134	ELSE_1	IF_2	CALL_4
0x4002138	          0x488b03	                    mov rax, qword [rbx]	      9397	normal.c	FUNCTION_134	ELSE_1	IF_2	CALL_4
0x400213b	          0x8b7804	                mov edi, dword [rax + 4]	      9397	normal.c	FUNCTION_134	ELSE_1	IF_2	CALL_4
0x400213e	        0x4883ec08	                              sub rsp, 8	      9397	normal.c	FUNCTION_134	ELSE_1	IF_2	CALL_4
0x4002142	          0x8b4310	            mov eax, dword [rbx + 0x10] 	      9397	normal.c	FUNCTION_134	ELSE_1	IF_2	CALL_4
0x4002145	              0x50	                                push rax	      9397	normal.c	FUNCTION_134	ELSE_1	IF_2	CALL_4
0x4002146	    0x41b900000000	                              mov r9d, 0	      9397	normal.c	FUNCTION_134	ELSE_1	IF_2	CALL_4
0x400214c	    0x41b800000000	                              mov r8d, 0	      9397	normal.c	FUNCTION_134	ELSE_1	IF_2	CALL_4
0x4002152	      0xba00000000	                              mov edx, 0	      9397	normal.c	FUNCTION_134	ELSE_1	IF_2	CALL_4
0x4002157	      0xe8d5e2ffff	                      call sym.prep_redo	      9397	normal.c	FUNCTION_134	ELSE_1	IF_2	CALL_4
0x400215c	        0x837b1000	               cmp dword [rbx + 0x10], 0	      9399	normal.c	FUNCTION_134	ELSE_1	IF_2	CALL_5
0x4002160	        0x400f94c6	                                sete sil	      9399	normal.c	FUNCTION_134	ELSE_1	IF_2	CALL_5
0x4002164	        0x400fb6f6	                          movzx esi, sil	      9399	normal.c	FUNCTION_134	ELSE_1	IF_2	CALL_5
0x4002168	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	      9399	normal.c	FUNCTION_134	ELSE_1	IF_2	CALL_5
0x400216c	    0x41b801000000	                              mov r8d, 1	      9399	normal.c	FUNCTION_134	ELSE_1	IF_2	CALL_5
0x4002172	      0xb901000000	                              mov ecx, 1	      9399	normal.c	FUNCTION_134	ELSE_1	IF_2	CALL_5
0x4002177	      0xba01000000	                              mov edx, 1	      9399	normal.c	FUNCTION_134	ELSE_1	IF_2	CALL_5
0x400217c	      0xe800000000	                          call 0x4002181	      9399	normal.c	FUNCTION_134	ELSE_1	IF_2	CALL_5
0x4002181	        0x4883c410	                           add rsp, 0x10	      9399	normal.c	FUNCTION_134	ELSE_1	IF_2	CALL_5
0x4002185	              0x5b	                                 pop rbx	      9401	normal.c	FUNCTION_134
0x4002186	              0xc3	                                     ret	      9401	normal.c	FUNCTION_134
find_end_of_word	CALL,3:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,1:ELSE,0:IF,3	51
0x4002bc1	            0x4155	                                push r13	      3210	normal.c	FUNCTION_11
0x4002bc3	            0x4154	                                push r12	      3210	normal.c	FUNCTION_11
0x4002bc5	              0x55	                                push rbp	      3210	normal.c	FUNCTION_11
0x4002bc6	              0x53	                                push rbx	      3210	normal.c	FUNCTION_11
0x4002bc7	        0x4883ec08	                              sub rsp, 8	      3210	normal.c	FUNCTION_11
0x4002bcb	          0x4889fb	                            mov rbx, rdi	      3210	normal.c	FUNCTION_11
0x4002bce	          0x488b3f	                    mov rdi, qword [rdi]	      3215	normal.c	FUNCTION_11	CALL_1
0x4002bd1	      0xe800000000	                          call 0x4002bd6	      3215	normal.c	FUNCTION_11	CALL_1
0x4002bd6	          0x4889c5	                            mov rbp, rax	      3215	normal.c	FUNCTION_11	CALL_1
0x4002bd9	    0x488b05000000	            mov rax, qword [0x04002be0] 	      3216	normal.c	FUNCTION_11	IF_1
0x4002be0	          0x803865	                    cmp byte [rax], 0x65	      3216	normal.c	FUNCTION_11	IF_1
0x4002be3	            0x751e	                           jne 0x4002c03	      3216	normal.c	FUNCTION_11	IF_1
0x4002be5	          0x8b7308	                mov esi, dword [rbx + 8]	      3216	normal.c	FUNCTION_11	IF_1
0x4002be8	            0x85f6	                           test esi, esi	      3216	normal.c	FUNCTION_11	IF_1
0x4002bea	            0x7e17	                           jle 0x4002c03	      3216	normal.c	FUNCTION_11	IF_1
0x4002bec	            0xffce	                                 dec esi	      3218	normal.c	FUNCTION_11	IF_1
0x4002bee	          0x897308	                mov dword [rbx + 8], esi	      3218	normal.c	FUNCTION_11	IF_1
0x4002bf1	          0x4863f6	                         movsxd rsi, esi	      3220	normal.c	FUNCTION_11	IF_1
0x4002bf4	          0x4801ee	                            add rsi, rbp	      3220	normal.c	FUNCTION_11	IF_1
0x4002bf7	          0x4889ef	                            mov rdi, rbp	      3220	normal.c	FUNCTION_11	IF_1
0x4002bfa	    0xff1500000000	                 call qword [0x04002c00]	      3220	normal.c	FUNCTION_11	IF_1
0x4002c00	          0x294308	                sub dword [rbx + 8], eax	      3220	normal.c	FUNCTION_11	IF_1
0x4002c03	        0x48637b08	            movsxd rdi, dword [rbx + 8] 	      3223	normal.c	FUNCTION_11	CALL_2
0x4002c07	          0x4801ef	                            add rdi, rbp	      3223	normal.c	FUNCTION_11	CALL_2
0x4002c0a	      0xe8ecfeffff	                call sym.get_mouse_class	      3223	normal.c	FUNCTION_11	CALL_2
0x4002c0f	          0x4189c5	                           mov r13d, eax	      3223	normal.c	FUNCTION_11	CALL_2
0x4002c12	            0xeb2f	                           jmp 0x4002c43	      3224	normal.c	FUNCTION_11	WHILE_1
0x4002c14	    0xff1500000000	                 call qword [0x04002c1a]	      3227	normal.c	FUNCTION_11	WHILE_1
0x4002c1a	          0x4101c4	                           add r12d, eax	      3227	normal.c	FUNCTION_11	WHILE_1
0x4002c1d	          0x4963fc	                        movsxd rdi, r12d	      3231	normal.c	FUNCTION_11	WHILE_1	IF_2	CALL_3
0x4002c20	          0x4801ef	                            add rdi, rbp	      3231	normal.c	FUNCTION_11	WHILE_1	IF_2	CALL_3
0x4002c23	      0xe8d3feffff	                call sym.get_mouse_class	      3231	normal.c	FUNCTION_11	WHILE_1	IF_2	CALL_3
0x4002c28	          0x4139c5	                           cmp r13d, eax	      3231	normal.c	FUNCTION_11	WHILE_1	IF_2	CALL_3
0x4002c2b	            0x7412	                            je 0x4002c3f	      3231	normal.c	FUNCTION_11	WHILE_1	IF_2	CALL_3
0x4002c2d	    0x488b05000000	            mov rax, qword [0x04002c34] 	      3233	normal.c	FUNCTION_11	WHILE_1	IF_2	IF_3
0x4002c34	          0x803865	                    cmp byte [rax], 0x65	      3233	normal.c	FUNCTION_11	WHILE_1	IF_2	IF_3
0x4002c37	            0x7519	                           jne 0x4002c52	      3233	normal.c	FUNCTION_11	WHILE_1	IF_2	IF_3
0x4002c39	        0x44896308	               mov dword [rbx + 8], r12d	      3234	normal.c	FUNCTION_11	WHILE_1	IF_2	IF_3
0x4002c3d	            0xeb13	                           jmp 0x4002c52	      3234	normal.c	FUNCTION_11	WHILE_1	IF_2	IF_3
0x4002c3f	        0x44896308	               mov dword [rbx + 8], r12d	      3237	normal.c	FUNCTION_11	WHILE_1
0x4002c43	        0x448b6308	               mov r12d, dword [rbx + 8]	      3224	normal.c	FUNCTION_11	WHILE_1
0x4002c47	          0x4963fc	                        movsxd rdi, r12d	      3224	normal.c	FUNCTION_11	WHILE_1
0x4002c4a	          0x4801ef	                            add rdi, rbp	      3224	normal.c	FUNCTION_11	WHILE_1
0x4002c4d	          0x803f00	                       cmp byte [rdi], 0	      3224	normal.c	FUNCTION_11	WHILE_1
0x4002c50	            0x75c2	                           jne 0x4002c14	      3224	normal.c	FUNCTION_11	WHILE_1
0x4002c52	        0x4883c408	                              add rsp, 8	      3239	normal.c	FUNCTION_11
0x4002c56	              0x5b	                                 pop rbx	      3239	normal.c	FUNCTION_11
0x4002c57	              0x5d	                                 pop rbp	      3239	normal.c	FUNCTION_11
0x4002c58	            0x415c	                                 pop r12	      3239	normal.c	FUNCTION_11
0x4002c5a	            0x415d	                                 pop r13	      3239	normal.c	FUNCTION_11
0x4002c5c	              0xc3	                                     ret	      3239	normal.c	FUNCTION_11
nv_nbcmd	CALL,1:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,0:IF,0	5
0x4000227	        0x4883ec08	                              sub rsp, 8	      9561	normal.c	FUNCTION_137
0x400022b	          0x8b7f10	            mov edi, dword [rdi + 0x10] 	      9562	normal.c	FUNCTION_137	CALL_1
0x400022e	      0xe800000000	                          call 0x4000233	      9562	normal.c	FUNCTION_137	CALL_1
0x4000233	        0x4883c408	                              add rsp, 8	      9563	normal.c	FUNCTION_137
0x4000237	              0xc3	                                     ret	      9563	normal.c	FUNCTION_137
find_is_eval_item	CALL,0:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,0:IF,5	47
0x4000147	           0xfb607	                   movzx eax, byte [rdi]	      3380	normal.c	FUNCTION_17	IF_1
0x400014a	          0x83f9ff	             cmp ecx, 0xffffffffffffffff	      3380	normal.c	FUNCTION_17	IF_1
0x400014d	        0x410f94c0	                                sete r8b	      3380	normal.c	FUNCTION_17	IF_1
0x4000151	            0x3c5d	                            cmp al, 0x5d	      3380	normal.c	FUNCTION_17	IF_1
0x4000153	            0x7505	                           jne 0x400015a	      3380	normal.c	FUNCTION_17	IF_1
0x4000155	          0x4584c0	                           test r8b, r8b	      3380	normal.c	FUNCTION_17	IF_1
0x4000158	            0x7509	                           jne 0x4000163	      3380	normal.c	FUNCTION_17	IF_1
0x400015a	          0x83f901	                              cmp ecx, 1	      3380	normal.c	FUNCTION_17	IF_1
0x400015d	            0x7507	                           jne 0x4000166	      3380	normal.c	FUNCTION_17	IF_1
0x400015f	            0x3c5b	                            cmp al, 0x5b	      3380	normal.c	FUNCTION_17	IF_1
0x4000161	            0x7503	                           jne 0x4000166	      3380	normal.c	FUNCTION_17	IF_1
0x4000163	          0x830201	                      add dword [rdx], 1	      3381	normal.c	FUNCTION_17	IF_1
0x4000166	            0x8b02	                    mov eax, dword [rdx]	      3382	normal.c	FUNCTION_17	IF_2
0x4000168	            0x85c0	                           test eax, eax	      3382	normal.c	FUNCTION_17	IF_2
0x400016a	            0x7e24	                           jle 0x4000190	      3382	normal.c	FUNCTION_17	IF_2
0x400016c	           0xfb637	                   movzx esi, byte [rdi]	      3384	normal.c	FUNCTION_17	IF_2	IF_3
0x400016f	        0x4080fe5b	                           cmp sil, 0x5b	      3384	normal.c	FUNCTION_17	IF_2	IF_3
0x4000173	            0x7505	                           jne 0x400017a	      3384	normal.c	FUNCTION_17	IF_2	IF_3
0x4000175	          0x4584c0	                           test r8b, r8b	      3384	normal.c	FUNCTION_17	IF_2	IF_3
0x4000178	            0x750b	                           jne 0x4000185	      3384	normal.c	FUNCTION_17	IF_2	IF_3
0x400017a	          0x83f901	                              cmp ecx, 1	      3384	normal.c	FUNCTION_17	IF_2	IF_3
0x400017d	            0x753e	                           jne 0x40001bd	      3384	normal.c	FUNCTION_17	IF_2	IF_3
0x400017f	        0x4080fe5d	                           cmp sil, 0x5d	      3384	normal.c	FUNCTION_17	IF_2	IF_3
0x4000183	            0x7538	                           jne 0x40001bd	      3384	normal.c	FUNCTION_17	IF_2	IF_3
0x4000185	          0x83e801	                              sub eax, 1	      3385	normal.c	FUNCTION_17	IF_2	IF_3
0x4000188	            0x8902	                    mov dword [rdx], eax	      3385	normal.c	FUNCTION_17	IF_2	IF_3
0x400018a	      0xb801000000	                              mov eax, 1	      3386	normal.c	FUNCTION_17	IF_2
0x400018f	              0xc3	                                     ret	      3386	normal.c	FUNCTION_17	IF_2
0x4000190	          0x803f2e	                    cmp byte [rdi], 0x2e	      3390	normal.c	FUNCTION_17	IF_4
0x4000193	            0x742e	                            je 0x40001c3	      3390	normal.c	FUNCTION_17	IF_4
0x4000195	          0x83f9ff	             cmp ecx, 0xffffffffffffffff	      3394	normal.c	FUNCTION_17	IF_5
0x4000198	           0xf95c2	                                setne dl	      3394	normal.c	FUNCTION_17	IF_5
0x400019b	           0xfb6d2	                           movzx edx, dl	      3394	normal.c	FUNCTION_17	IF_5
0x400019e	      0xb800000000	                              mov eax, 0	      3400	normal.c	FUNCTION_17
0x40001a3	        0x803c173e	              cmp byte [rdi + rdx], 0x3e	      3394	normal.c	FUNCTION_17	IF_5
0x40001a7	            0x751f	                           jne 0x40001c8	      3394	normal.c	FUNCTION_17	IF_5
0x40001a9	        0x450fb6c0	                          movzx r8d, r8b	      3395	normal.c	FUNCTION_17	IF_5
0x40001ad	          0x4c29c7	                             sub rdi, r8	      3395	normal.c	FUNCTION_17	IF_5
0x40001b0	          0x803f2d	                    cmp byte [rdi], 0x2d	      3395	normal.c	FUNCTION_17	IF_5
0x40001b3	            0x7513	                           jne 0x40001c8	      3395	normal.c	FUNCTION_17	IF_5
0x40001b5	             0x10e	                    add dword [rsi], ecx	      3397	normal.c	FUNCTION_17	IF_5
0x40001b7	      0xb801000000	                              mov eax, 1	      3398	normal.c	FUNCTION_17	IF_5
0x40001bc	              0xc3	                                     ret	      3398	normal.c	FUNCTION_17	IF_5
0x40001bd	      0xb801000000	                              mov eax, 1	      3386	normal.c	FUNCTION_17	IF_2
0x40001c2	              0xc3	                                     ret	      3386	normal.c	FUNCTION_17	IF_2
0x40001c3	      0xb801000000	                              mov eax, 1	      3391	normal.c	FUNCTION_17	IF_4
0x40001c8	            0xf3c3	                                     ret	      3401	normal.c	FUNCTION_17
nv_abbrev	CALL,2:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,1:IF,2	14
0x40021f1	        0x4883ec08	                              sub rsp, 8	      7487	normal.c	FUNCTION_96
0x40021f5	          0x8b470c	              mov eax, dword [rdi + 0xc]	      7488	normal.c	FUNCTION_96	IF_1
0x40021f8	      0x3d95bbffff	                     cmp eax, 0xffffbb95	      7488	normal.c	FUNCTION_96	IF_1
0x40021fd	            0x7407	                            je 0x4002206	      7488	normal.c	FUNCTION_96	IF_1
0x40021ff	      0x3d03afffff	                     cmp eax, 0xffffaf03	      7488	normal.c	FUNCTION_96	IF_1
0x4002204	            0x7507	                           jne 0x400220d	      7488	normal.c	FUNCTION_96	IF_1
0x4002206	    0xc7470c780000	            mov dword [rdi + 0xc], 0x78 	      7489	normal.c	FUNCTION_96	IF_1
0x400220d	    0x833d00000000	               cmp dword [0x04002214], 0	      7492	normal.c	FUNCTION_96	IF_2
0x4002214	            0x7407	                            je 0x400221d	      7492	normal.c	FUNCTION_96	IF_2
0x4002216	      0xe86cffffff	                        call sym.v_visop	      7493	normal.c	FUNCTION_96	CALL_1
0x400221b	            0xeb05	                           jmp 0x4002222	      7493	normal.c	FUNCTION_96	CALL_1
0x400221d	      0xe8a2f6ffff	                     call sym.nv_optrans	      7495	normal.c	FUNCTION_96	CALL_2
0x4002222	        0x4883c408	                              add rsp, 8	      7496	normal.c	FUNCTION_96
0x4002226	              0xc3	                                     ret	      7496	normal.c	FUNCTION_96
nv_help	CALL,2:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,0:IF,1	9
0x4000311	        0x4883ec08	                              sub rsp, 8	      4172	normal.c	FUNCTION_40
0x4000315	          0x488b3f	                    mov rdi, qword [rdi]	      4173	normal.c	FUNCTION_40	IF_1	CALL_1
0x4000318	      0xe844ffffff	                  call sym.checkclearopq	      4173	normal.c	FUNCTION_40	IF_1	CALL_1
0x400031d	            0x85c0	                           test eax, eax	      4173	normal.c	FUNCTION_40	IF_1	CALL_1
0x400031f	            0x750a	                           jne 0x400032b	      4173	normal.c	FUNCTION_40	IF_1	CALL_1
0x4000321	      0xbf00000000	                              mov edi, 0	      4174	normal.c	FUNCTION_40	CALL_2
0x4000326	      0xe800000000	                          call 0x400032b	      4174	normal.c	FUNCTION_40	CALL_2
0x400032b	        0x4883c408	                              add rsp, 8	      4175	normal.c	FUNCTION_40
0x400032f	              0xc3	                                     ret	      4175	normal.c	FUNCTION_40
check_visual_highlight	CALL,3:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,0:IF,2	19
0x40038c4	    0x8b0500000000	            mov eax, dword [0x040038ca] 	      3286	normal.c	FUNCTION_13	IF_1
0x40038ca	            0x85c0	                           test eax, eax	      3286	normal.c	FUNCTION_13	IF_1
0x40038cc	            0x7440	                            je 0x400390e	      3286	normal.c	FUNCTION_13	IF_1
0x40038ce	    0x833d00000000	               cmp dword [0x040038d5], 0	      3288	normal.c	FUNCTION_13	IF_1	IF_2	CALL_1
0x40038d5	            0x7539	                           jne 0x4003910	      3288	normal.c	FUNCTION_13	IF_1	IF_2	CALL_1
0x40038d7	    0x833d00000000	               cmp dword [0x040038de], 0	      3288	normal.c	FUNCTION_13	IF_1	IF_2	CALL_1
0x40038de	            0x7530	                           jne 0x4003910	      3288	normal.c	FUNCTION_13	IF_1	IF_2	CALL_1
0x40038e0	        0x4883ec08	                              sub rsp, 8	      3283	normal.c	FUNCTION_13
0x40038e4	      0xba05000000	                              mov edx, 5	      3289	normal.c	FUNCTION_13	IF_1	CALL_3
0x40038e9	      0xbe00000000	                              mov esi, 0	      3289	normal.c	FUNCTION_13	IF_1	CALL_3
0x40038ee	      0xbf00000000	                              mov edi, 0	      3289	normal.c	FUNCTION_13	IF_1	CALL_3
0x40038f3	      0xe800000000	                          call 0x40038f8	      3289	normal.c	FUNCTION_13	IF_1	CALL_3
0x40038f8	          0x4889c7	                            mov rdi, rax	      3289	normal.c	FUNCTION_13	IF_1	CALL_3
0x40038fb	      0xe800000000	                          call 0x4003900	      3289	normal.c	FUNCTION_13	IF_1	CALL_3
0x4003900	    0xc70500000000	               mov dword [0x0400390a], 1	      3290	normal.c	FUNCTION_13	IF_1
0x400390a	        0x4883c408	                              add rsp, 8	      3292	normal.c	FUNCTION_13
0x400390e	            0xf3c3	                                     ret	      3292	normal.c	FUNCTION_13
0x4003910	    0xc70500000000	               mov dword [0x0400391a], 1	      3290	normal.c	FUNCTION_13	IF_1
0x400391a	              0xc3	                                     ret	      3290	normal.c	FUNCTION_13	IF_1
add_to_showcmd	CALL,9:SWITCH,0:DO,0:FOR,1:functions,0:WHILE,0:ELSE,0:IF,7	74
0x4006552	              0x55	                                push rbp	      3844	normal.c	FUNCTION_29
0x4006553	              0x53	                                push rbx	      3844	normal.c	FUNCTION_29
0x4006554	        0x4883ec08	                              sub rsp, 8	      3844	normal.c	FUNCTION_29
0x4006558	    0x8b1d00000000	            mov ebx, dword [0x0400655e] 	      3868	normal.c	FUNCTION_29	IF_1
0x400655e	            0x85db	                           test ebx, ebx	      3868	normal.c	FUNCTION_29	IF_1
0x4006560	     0xf84fb000000	                            je 0x4006661	      3868	normal.c	FUNCTION_29	IF_1
0x4006566	    0x8b1d00000000	            mov ebx, dword [0x0400656c] 	      3868	normal.c	FUNCTION_29	IF_1
0x400656c	            0x85db	                           test ebx, ebx	      3868	normal.c	FUNCTION_29	IF_1
0x400656e	     0xf85d9000000	                           jne 0x400664d	      3868	normal.c	FUNCTION_29	IF_1
0x4006574	    0x833d00000000	               cmp dword [0x0400657b], 0	      3871	normal.c	FUNCTION_29	IF_2
0x400657b	     0xf84d3000000	                            je 0x4006654	      3871	normal.c	FUNCTION_29	IF_2
0x4006581	    0xc60500000000	                mov byte [0x04006588], 0	      3873	normal.c	FUNCTION_29	IF_2
0x4006588	    0xc70500000000	               mov dword [0x04006592], 0	      3874	normal.c	FUNCTION_29	IF_2
0x4006592	            0x85ff	                           test edi, edi	      3879	normal.c	FUNCTION_29	IF_3	CALL_1
0x4006594	            0x7925	                           jns 0x40065bb	      3879	normal.c	FUNCTION_29	IF_3	CALL_1
0x4006596	    0x81ff07a7ffff	                     cmp edi, 0xffffa707	      3881	normal.c	FUNCTION_29	IF_3	FOR_1	IF_4
0x400659c	     0xf84bf000000	                            je 0x4006661	      3881	normal.c	FUNCTION_29	IF_3	FOR_1	IF_4
0x40065a2	      0xb800000000	                              mov eax, 0	      3881	normal.c	FUNCTION_29	IF_3	FOR_1	IF_4
0x40065a7	            0xeb0c	                           jmp 0x40065b5	      3881	normal.c	FUNCTION_29	IF_3	FOR_1	IF_4
0x40065a9	        0x4883c004	                              add rax, 4	      3881	normal.c	FUNCTION_29	IF_3	FOR_1	IF_4
0x40065ad	            0x39d7	                            cmp edi, edx	      3881	normal.c	FUNCTION_29	IF_3	FOR_1	IF_4
0x40065af	     0xf84ac000000	                            je 0x4006661	      3881	normal.c	FUNCTION_29	IF_3	FOR_1	IF_4
0x40065b5	            0x8b10	                    mov edx, dword [rax]	      3880	normal.c	FUNCTION_29	IF_3	FOR_1
0x40065b7	            0x85d2	                           test edx, edx	      3880	normal.c	FUNCTION_29	IF_3	FOR_1
0x40065b9	            0x75ee	                           jne 0x40065a9	      3880	normal.c	FUNCTION_29	IF_3	FOR_1
0x40065bb	      0xe800000000	                          call 0x40065c0	      3885	normal.c	FUNCTION_29	CALL_2
0x40065c0	          0x4889c5	                            mov rbp, rax	      3885	normal.c	FUNCTION_29	CALL_2
0x40065c3	          0x803820	                    cmp byte [rax], 0x20	      3886	normal.c	FUNCTION_29	IF_5
0x40065c6	            0x750a	                           jne 0x40065d2	      3886	normal.c	FUNCTION_29	IF_5
0x40065c8	    0xc7003c32303e	            mov dword [rax], 0x3e30323c 	       110	string3.h	FUNCTION_147	CALL_3
0x40065ce	        0xc6400400	                   mov byte [rax + 4], 0	       110	string3.h	FUNCTION_147	CALL_3
0x40065d2	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	      3888	normal.c	FUNCTION_29	CALL_4
0x40065d9	      0xbf00000000	                              mov edi, 0	      3888	normal.c	FUNCTION_29	CALL_4
0x40065de	      0xb800000000	                              mov eax, 0	      3888	normal.c	FUNCTION_29	CALL_4
0x40065e3	          0x4889f1	                            mov rcx, rsi	      3888	normal.c	FUNCTION_29	CALL_4
0x40065e6	            0xf2ae	              repne scasb al, byte [rdi]	      3888	normal.c	FUNCTION_29	CALL_4
0x40065e8	          0x48f7d1	                                 not rcx	      3888	normal.c	FUNCTION_29	CALL_4
0x40065eb	        0x488d1431	                    lea rdx, [rcx + rsi]	      3888	normal.c	FUNCTION_29	CALL_4
0x40065ef	          0x4889f1	                            mov rcx, rsi	      3889	normal.c	FUNCTION_29	CALL_5
0x40065f2	          0x4889ef	                            mov rdi, rbp	      3889	normal.c	FUNCTION_29	CALL_5
0x40065f5	            0xf2ae	              repne scasb al, byte [rdi]	      3889	normal.c	FUNCTION_29	CALL_5
0x40065f7	          0x4889c8	                            mov rax, rcx	      3889	normal.c	FUNCTION_29	CALL_5
0x40065fa	          0x48f7d0	                                 not rax	      3889	normal.c	FUNCTION_29	CALL_5
0x40065fd	        0x8d7410f5	              lea esi, [rax + rdx - 0xb]	      3890	normal.c	FUNCTION_29
0x4006601	            0x85f6	                           test esi, esi	      3891	normal.c	FUNCTION_29	IF_6
0x4006603	            0x7e21	                           jle 0x4006626	      3891	normal.c	FUNCTION_29	IF_6
0x4006605	            0x29f2	                            sub edx, esi	        59	string3.h	FUNCTION_142	CALL_3
0x4006607	          0x83c201	                              add edx, 1	        59	string3.h	FUNCTION_142	CALL_3
0x400660a	          0x4863d2	                         movsxd rdx, edx	        59	string3.h	FUNCTION_142	CALL_3
0x400660d	          0x4863f6	                         movsxd rsi, esi	        59	string3.h	FUNCTION_142	CALL_3
0x4006610	    0x4881c6000000	                              add rsi, 0	        59	string3.h	FUNCTION_142	CALL_3
0x4006617	      0xb929000000	                           mov ecx, 0x29	        59	string3.h	FUNCTION_142	CALL_3
0x400661c	      0xbf00000000	                              mov edi, 0	        59	string3.h	FUNCTION_142	CALL_3
0x4006621	      0xe800000000	                          call 0x4006626	        59	string3.h	FUNCTION_142	CALL_3
0x4006626	      0xba29000000	                           mov edx, 0x29	       148	string3.h	FUNCTION_151	CALL_3
0x400662b	          0x4889ee	                            mov rsi, rbp	       148	string3.h	FUNCTION_151	CALL_3
0x400662e	      0xbf00000000	                              mov edi, 0	       148	string3.h	FUNCTION_151	CALL_3
0x4006633	      0xe800000000	                          call 0x4006638	       148	string3.h	FUNCTION_151	CALL_3
0x4006638	      0xe800000000	                          call 0x400663d	      3896	normal.c	FUNCTION_29	IF_7	CALL_8
0x400663d	            0x85c0	                           test eax, eax	      3896	normal.c	FUNCTION_29	IF_7	CALL_8
0x400663f	            0x7520	                           jne 0x4006661	      3896	normal.c	FUNCTION_29	IF_7	CALL_8
0x4006641	      0xe84abfffff	                call sym.display_showcmd	      3899	normal.c	FUNCTION_29	CALL_9
0x4006646	      0xbb01000000	                              mov ebx, 1	      3901	normal.c	FUNCTION_29
0x400664b	            0xeb14	                           jmp 0x4006661	      3901	normal.c	FUNCTION_29
0x400664d	      0xbb00000000	                              mov ebx, 0	      3869	normal.c	FUNCTION_29	IF_1
0x4006652	            0xeb0d	                           jmp 0x4006661	      3869	normal.c	FUNCTION_29	IF_1
0x4006654	            0x85ff	                           test edi, edi	      3879	normal.c	FUNCTION_29	IF_3	CALL_1
0x4006656	     0xf895fffffff	                           jns 0x40065bb	      3879	normal.c	FUNCTION_29	IF_3	CALL_1
0x400665c	      0xe935ffffff	                           jmp 0x4006596	      3879	normal.c	FUNCTION_29	IF_3	CALL_1
0x4006661	            0x89d8	                            mov eax, ebx	      3902	normal.c	FUNCTION_29
0x4006663	        0x4883c408	                              add rsp, 8	      3902	normal.c	FUNCTION_29
0x4006667	              0x5b	                                 pop rbx	      3902	normal.c	FUNCTION_29
0x4006668	              0x5d	                                 pop rbp	      3902	normal.c	FUNCTION_29
0x4006669	              0xc3	                                     ret	      3902	normal.c	FUNCTION_29
nv_pipe	CALL,2:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,1:IF,1	24
0x40004fc	              0x53	                                push rbx	      8670	normal.c	FUNCTION_117
0x40004fd	          0x4889fb	                            mov rbx, rdi	      8670	normal.c	FUNCTION_117
0x4000500	          0x488b07	                    mov rax, qword [rdi]	      8671	normal.c	FUNCTION_117
0x4000503	    0xc74008000000	                  mov dword [rax + 8], 0	      8671	normal.c	FUNCTION_117
0x400050a	          0x488b07	                    mov rax, qword [rdi]	      8672	normal.c	FUNCTION_117
0x400050d	    0xc74014000000	               mov dword [rax + 0x14], 0	      8672	normal.c	FUNCTION_117
0x4000514	      0xbf00000000	                              mov edi, 0	      8673	normal.c	FUNCTION_117	CALL_1
0x4000519	      0xe800000000	                          call 0x400051e	      8673	normal.c	FUNCTION_117	CALL_1
0x400051e	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	      8674	normal.c	FUNCTION_117	IF_1
0x4000522	          0x4885ff	                           test rdi, rdi	      8674	normal.c	FUNCTION_117	IF_1
0x4000525	            0x7e1b	                           jle 0x4000542	      8674	normal.c	FUNCTION_117	IF_1
0x4000527	          0x83ef01	                              sub edi, 1	      8676	normal.c	FUNCTION_117	IF_1	CALL_2
0x400052a	      0xe800000000	                          call 0x400052f	      8676	normal.c	FUNCTION_117	IF_1	CALL_2
0x400052f	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      8677	normal.c	FUNCTION_117	IF_1
0x4000533	          0x83e801	                              sub eax, 1	      8677	normal.c	FUNCTION_117	IF_1
0x4000536	    0x488b15000000	            mov rdx, qword [0x0400053d] 	      8677	normal.c	FUNCTION_117	IF_1
0x400053d	          0x894248	             mov dword [rdx + 0x48], eax	      8677	normal.c	FUNCTION_117	IF_1
0x4000540	            0xeb0e	                           jmp 0x4000550	      8677	normal.c	FUNCTION_117	IF_1
0x4000542	    0x488b05000000	            mov rax, qword [0x04000549] 	      8680	normal.c	FUNCTION_117	ELSE_1
0x4000549	    0xc74048000000	               mov dword [rax + 0x48], 0	      8680	normal.c	FUNCTION_117	ELSE_1
0x4000550	    0x488b05000000	            mov rax, qword [0x04000557] 	      8683	normal.c	FUNCTION_117	ELSE_1
0x4000557	    0xc7404c000000	               mov dword [rax + 0x4c], 0	      8683	normal.c	FUNCTION_117	ELSE_1
0x400055e	              0x5b	                                 pop rbx	      8684	normal.c	FUNCTION_117	ELSE_1
0x400055f	              0xc3	                                     ret	      8684	normal.c	FUNCTION_117	ELSE_1
nv_gomark	CALL,9:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,3:IF,5	71
0x400346f	            0x4157	                                push r15	      7543	normal.c	FUNCTION_98
0x4003471	            0x4156	                                push r14	      7543	normal.c	FUNCTION_98
0x4003473	            0x4155	                                push r13	      7543	normal.c	FUNCTION_98
0x4003475	            0x4154	                                push r12	      7543	normal.c	FUNCTION_98
0x4003477	              0x55	                                push rbp	      7543	normal.c	FUNCTION_98
0x4003478	              0x53	                                push rbx	      7543	normal.c	FUNCTION_98
0x4003479	        0x4883ec08	                              sub rsp, 8	      7543	normal.c	FUNCTION_98
0x400347d	          0x4889fb	                            mov rbx, rdi	      7543	normal.c	FUNCTION_98
0x4003480	    0x488b05000000	            mov rax, qword [0x04003487] 	      7547	normal.c	FUNCTION_98
0x4003487	        0x4c8b6838	            mov r13, qword [rax + 0x38] 	      7547	normal.c	FUNCTION_98
0x400348b	        0x448b7040	           mov r14d, dword [rax + 0x40] 	      7547	normal.c	FUNCTION_98
0x400348f	        0x448b6044	           mov r12d, dword [rax + 0x44] 	      7547	normal.c	FUNCTION_98
0x4003493	    0x448b3d000000	           mov r15d, dword [0x0400349a] 	      7548	normal.c	FUNCTION_98
0x400349a	        0x837f0c67	            cmp dword [rdi + 0xc], 0x67 	      7551	normal.c	FUNCTION_98	IF_1
0x400349e	            0x7505	                           jne 0x40034a5	      7551	normal.c	FUNCTION_98	IF_1
0x40034a0	          0x8b7f1c	            mov edi, dword [rdi + 0x1c] 	      7552	normal.c	FUNCTION_98	IF_1
0x40034a3	            0xeb03	                           jmp 0x40034a8	      7552	normal.c	FUNCTION_98	IF_1
0x40034a5	          0x8b7f10	            mov edi, dword [rdi + 0x10] 	      7554	normal.c	FUNCTION_98	ELSE_1
0x40034a8	          0x488b03	                    mov rax, qword [rbx]	      7555	normal.c	FUNCTION_98	CALL_1
0x40034ab	          0x833800	                      cmp dword [rax], 0	      7555	normal.c	FUNCTION_98	CALL_1
0x40034ae	        0x400f94c6	                                sete sil	      7555	normal.c	FUNCTION_98	CALL_1
0x40034b2	        0x400fb6f6	                          movzx esi, sil	      7555	normal.c	FUNCTION_98	CALL_1
0x40034b6	      0xe800000000	                          call 0x40034bb	      7555	normal.c	FUNCTION_98	CALL_1
0x40034bb	          0x4889c5	                            mov rbp, rax	      7555	normal.c	FUNCTION_98	CALL_1
0x40034be	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      7556	normal.c	FUNCTION_98	IF_2
0x40034c2	            0x751e	                           jne 0x40034e2	      7556	normal.c	FUNCTION_98	IF_2
0x40034c4	        0x837b3800	               cmp dword [rbx + 0x38], 0	      7558	normal.c	FUNCTION_98	IF_2	IF_3
0x40034c8	            0x7411	                            je 0x40034db	      7558	normal.c	FUNCTION_98	IF_2	IF_3
0x40034ca	      0xe800000000	                          call 0x40034cf	      7560	normal.c	FUNCTION_98	IF_2	IF_3	CALL_2
0x40034cf	      0xbf05000000	                              mov edi, 5	      7561	normal.c	FUNCTION_98	IF_2	IF_3	CALL_3
0x40034d4	      0xe800000000	                          call 0x40034d9	      7561	normal.c	FUNCTION_98	IF_2	IF_3	CALL_3
0x40034d9	            0xeb15	                           jmp 0x40034f0	      7561	normal.c	FUNCTION_98	IF_2	IF_3	CALL_3
0x40034db	      0xe800000000	                          call 0x40034e0	      7564	normal.c	FUNCTION_98	IF_2	CALL_4
0x40034e0	            0xeb0e	                           jmp 0x40034f0	      7564	normal.c	FUNCTION_98	IF_2	CALL_4
0x40034e2	          0x8b7338	            mov esi, dword [rbx + 0x38] 	      7567	normal.c	FUNCTION_98	CALL_5
0x40034e5	          0x4889c2	                            mov rdx, rax	      7567	normal.c	FUNCTION_98	CALL_5
0x40034e8	          0x4889df	                            mov rdi, rbx	      7567	normal.c	FUNCTION_98	CALL_5
0x40034eb	      0xe8bffeffff	                  call sym.nv_cursormark	      7567	normal.c	FUNCTION_98	CALL_5
0x40034f0	      0xe800000000	                          call 0x40034f5	      7571	normal.c	FUNCTION_98	IF_4	CALL_6
0x40034f5	            0x85c0	                           test eax, eax	      7571	normal.c	FUNCTION_98	IF_4	CALL_6
0x40034f7	            0x750e	                           jne 0x4003507	      7571	normal.c	FUNCTION_98	IF_4	CALL_6
0x40034f9	    0x488b05000000	            mov rax, qword [0x04003500] 	      7572	normal.c	FUNCTION_98	IF_4
0x4003500	    0xc74044000000	               mov dword [rax + 0x44], 0	      7572	normal.c	FUNCTION_98	IF_4
0x4003507	      0xe800000000	                          call 0x400350c	      7574	normal.c	FUNCTION_98	CALL_7
0x400350c	          0x488b03	                    mov rax, qword [rbx]	      7576	normal.c	FUNCTION_98	IF_5
0x400350f	          0x833800	                      cmp dword [rax], 0	      7577	normal.c	FUNCTION_98	IF_5
0x4003512	            0x7534	                           jne 0x4003548	      7577	normal.c	FUNCTION_98	IF_5
0x4003514	          0x4885ed	                           test rbp, rbp	      7577	normal.c	FUNCTION_98	IF_5
0x4003517	            0x742f	                            je 0x4003548	      7577	normal.c	FUNCTION_98	IF_5
0x4003519	        0x4883fdff	             cmp rbp, 0xffffffffffffffff	      7578	normal.c	FUNCTION_98	IF_5	CALL_8
0x400351d	            0x7416	                            je 0x4003535	      7578	normal.c	FUNCTION_98	IF_5	CALL_8
0x400351f	        0x4c396d00	                    cmp qword [rbp], r13	      7578	normal.c	FUNCTION_98	IF_5	CALL_8
0x4003523	            0x7510	                           jne 0x4003535	      7578	normal.c	FUNCTION_98	IF_5	CALL_8
0x4003525	        0x49c1e420	                           shl r12, 0x20	      7578	normal.c	FUNCTION_98	IF_5	CALL_8
0x4003529	          0x4589f6	                          mov r14d, r14d	      7578	normal.c	FUNCTION_98	IF_5	CALL_8
0x400352c	          0x4d09f4	                             or r12, r14	      7578	normal.c	FUNCTION_98	IF_5	CALL_8
0x400352f	        0x4c396508	                cmp qword [rbp + 8], r12	      7578	normal.c	FUNCTION_98	IF_5	CALL_8
0x4003533	            0x7413	                            je 0x4003548	      7578	normal.c	FUNCTION_98	IF_5	CALL_8
0x4003535	    0xf60500000000	               test byte [0x0400353c], 8	      7580	normal.c	FUNCTION_98	IF_5
0x400353c	            0x740a	                            je 0x4003548	      7580	normal.c	FUNCTION_98	IF_5
0x400353e	          0x4585ff	                         test r15d, r15d	      7580	normal.c	FUNCTION_98	IF_5
0x4003541	            0x7405	                            je 0x4003548	      7580	normal.c	FUNCTION_98	IF_5
0x4003543	      0xe800000000	                          call 0x4003548	      7581	normal.c	FUNCTION_98	CALL_9
0x4003548	        0x4883c408	                              add rsp, 8	      7583	normal.c	FUNCTION_98
0x400354c	              0x5b	                                 pop rbx	      7583	normal.c	FUNCTION_98
0x400354d	              0x5d	                                 pop rbp	      7583	normal.c	FUNCTION_98
0x400354e	            0x415c	                                 pop r12	      7583	normal.c	FUNCTION_98
0x4003550	            0x415d	                                 pop r13	      7583	normal.c	FUNCTION_98
0x4003552	            0x415e	                                 pop r14	      7583	normal.c	FUNCTION_98
0x4003554	            0x415f	                                 pop r15	      7583	normal.c	FUNCTION_98
0x4003556	              0xc3	                                     ret	      7583	normal.c	FUNCTION_98
find_ident_under_cursor	CALL,1:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,0:IF,0	9
0x4003e83	        0x4883ec08	                              sub rsp, 8	      3426	normal.c	FUNCTION_18
0x4003e87	          0x4889f9	                            mov rcx, rdi	      3426	normal.c	FUNCTION_18
0x4003e8a	          0x4189f0	                            mov r8d, esi	      3426	normal.c	FUNCTION_18
0x4003e8d	    0x488b3d000000	            mov rdi, qword [0x04003e94] 	      3428	normal.c	FUNCTION_18
0x4003e94	          0x8b5740	            mov edx, dword [rdi + 0x40] 	      3427	normal.c	FUNCTION_18	CALL_1
0x4003e97	        0x488b7738	            mov rsi, qword [rdi + 0x38] 	      3427	normal.c	FUNCTION_18	CALL_1
0x4003e9b	      0xe800000000	                          call 0x4003ea0	      3427	normal.c	FUNCTION_18	CALL_1
0x4003ea0	        0x4883c408	                              add rsp, 8	      3429	normal.c	FUNCTION_18
0x4003ea4	              0xc3	                                     ret	      3429	normal.c	FUNCTION_18
nv_edit	CALL,38:SWITCH,1:DO,0:FOR,0:functions,0:WHILE,0:ELSE,10:IF,18	333
0x40058cb	            0x4157	                                push r15	      9036	normal.c	FUNCTION_128
0x40058cd	            0x4156	                                push r14	      9036	normal.c	FUNCTION_128
0x40058cf	            0x4155	                                push r13	      9036	normal.c	FUNCTION_128
0x40058d1	            0x4154	                                push r12	      9036	normal.c	FUNCTION_128
0x40058d3	              0x55	                                push rbp	      9036	normal.c	FUNCTION_128
0x40058d4	              0x53	                                push rbx	      9036	normal.c	FUNCTION_128
0x40058d5	        0x4883ec18	                           sub rsp, 0x18	      9036	normal.c	FUNCTION_128
0x40058d9	          0x4889fb	                            mov rbx, rdi	      9036	normal.c	FUNCTION_128
0x40058dc	          0x8b470c	              mov eax, dword [rdi + 0xc]	      9038	normal.c	FUNCTION_128	IF_1
0x40058df	      0x3d95b6ffff	                     cmp eax, 0xffffb695	      9038	normal.c	FUNCTION_128	IF_1
0x40058e4	            0x7407	                            je 0x40058ed	      9038	normal.c	FUNCTION_128	IF_1
0x40058e6	      0x3d03b0ffff	                     cmp eax, 0xffffb003	      9038	normal.c	FUNCTION_128	IF_1
0x40058eb	            0x7514	                           jne 0x4005901	      9038	normal.c	FUNCTION_128	IF_1
0x40058ed	    0xc7430c690000	            mov dword [rbx + 0xc], 0x69 	      9039	normal.c	FUNCTION_128	IF_1
0x40058f4	    0x8b1500000000	            mov edx, dword [0x040058fa] 	      9042	normal.c	FUNCTION_128	IF_2
0x40058fa	      0xb869000000	                           mov eax, 0x69	      9057	normal.c	FUNCTION_128	ELSE_1	IF_4
0x40058ff	            0xeb66	                           jmp 0x4005967	      9057	normal.c	FUNCTION_128	ELSE_1	IF_4
0x4005901	    0x8b1500000000	            mov edx, dword [0x04005907] 	      9042	normal.c	FUNCTION_128	IF_2
0x4005907	            0x85d2	                           test edx, edx	      9042	normal.c	FUNCTION_128	IF_2
0x4005909	            0x744b	                            je 0x4005956	      9042	normal.c	FUNCTION_128	IF_2
0x400590b	          0x83e0f7	                     and eax, 0xfffffff7	      9042	normal.c	FUNCTION_128	IF_2
0x400590e	          0x83f841	                           cmp eax, 0x41	      9042	normal.c	FUNCTION_128	IF_2
0x4005911	            0x7543	                           jne 0x4005956	      9042	normal.c	FUNCTION_128	IF_2
0x4005913	      0xe800000000	                          call 0x4005918	      9045	normal.c	FUNCTION_128	IF_2	IF_3	CALL_1
0x4005918	            0x85c0	                           test eax, eax	      9045	normal.c	FUNCTION_128	IF_2	IF_3	CALL_1
0x400591a	            0x742d	                            je 0x4005949	      9045	normal.c	FUNCTION_128	IF_2	IF_3	CALL_1
0x400591c	      0xe800000000	                          call 0x4005921	      9047	normal.c	FUNCTION_128	IF_2	IF_3	CALL_2
0x4005921	          0x488b03	                    mov rax, qword [rbx]	      9048	normal.c	FUNCTION_128	IF_2	IF_3	CALL_3
0x4005924	    0xc70000000000	                      mov dword [rax], 0	      3676	normal.c	FUNCTION_24
0x400592a	    0xc74004000000	                  mov dword [rax + 4], 0	      3677	normal.c	FUNCTION_24
0x4005931	    0xc7400c000000	                mov dword [rax + 0xc], 0	      3678	normal.c	FUNCTION_24
0x4005938	    0xc74010000000	               mov dword [rax + 0x10], 0	      3679	normal.c	FUNCTION_24
0x400593f	      0xe800000000	                          call 0x4005944	      9049	normal.c	FUNCTION_128	IF_2	IF_3	CALL_4
0x4005944	      0xe9df040000	                           jmp 0x4005e28	      9050	normal.c	FUNCTION_128	IF_2	IF_3
0x4005949	          0x4889df	                            mov rdi, rbx	      9053	normal.c	FUNCTION_128	IF_2	CALL_5
0x400594c	      0xe836c8ffff	                        call sym.v_visop	      9053	normal.c	FUNCTION_128	IF_2	CALL_5
0x4005951	      0xe9d2040000	                           jmp 0x4005e28	      9053	normal.c	FUNCTION_128	IF_2	CALL_5
0x4005956	          0x8b430c	              mov eax, dword [rbx + 0xc]	      9057	normal.c	FUNCTION_128	ELSE_1	IF_4
0x4005959	            0x89c1	                            mov ecx, eax	      9057	normal.c	FUNCTION_128	ELSE_1	IF_4
0x400595b	          0x83e1f7	                     and ecx, 0xfffffff7	      9057	normal.c	FUNCTION_128	ELSE_1	IF_4
0x400595e	          0x83f961	                           cmp ecx, 0x61	      9057	normal.c	FUNCTION_128	ELSE_1	IF_4
0x4005961	     0xf8550010000	                           jne 0x4005ab7	      9057	normal.c	FUNCTION_128	ELSE_1	IF_4
0x4005967	          0x488b0b	                    mov rcx, qword [rbx]	      9058	normal.c	FUNCTION_128	ELSE_1	IF_4
0x400596a	             0xb11	                     or edx, dword [rcx]	      9058	normal.c	FUNCTION_128	ELSE_1	IF_4
0x400596c	     0xf8445010000	                            je 0x4005ab7	      9058	normal.c	FUNCTION_128	ELSE_1	IF_4
0x4005972	          0x83f869	                           cmp eax, 0x69	      9226	normal.c	FUNCTION_130	IF_1
0x4005975	           0xf95c2	                                setne dl	      9226	normal.c	FUNCTION_130	IF_1
0x4005978	           0xfb6d2	                           movzx edx, dl	      9226	normal.c	FUNCTION_130	IF_1
0x400597b	    0x488b05000000	            mov rax, qword [0x04005982] 	      9231	normal.c	FUNCTION_130
0x4005982	    0x488ba8301500	          mov rbp, qword [rax + 0x1530] 	      9231	normal.c	FUNCTION_130
0x4005989	    0x48c780301500	            mov qword [rax + 0x1530], 0 	      9232	normal.c	FUNCTION_130
0x4005994	          0x8b4b10	            mov ecx, dword [rbx + 0x10] 	      9234	normal.c	FUNCTION_130	SWITCH_1
0x4005997	          0x8d41de	                   lea eax, [rcx - 0x22]	      9234	normal.c	FUNCTION_130	SWITCH_1
0x400599a	          0x83f85b	                           cmp eax, 0x5b	      9234	normal.c	FUNCTION_130	SWITCH_1
0x400599d	     0xf87dd000000	                            ja 0x4005a80	      9234	normal.c	FUNCTION_130	SWITCH_1
0x40059a3	            0x89c0	                            mov eax, eax	      9234	normal.c	FUNCTION_130	SWITCH_1
0x40059a5	    0xff24c5000000	                       jmp qword [rax*8]	      9234	normal.c	FUNCTION_130	SWITCH_1
0x40059ac	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	      9237	normal.c	FUNCTION_130	SWITCH_1	CALL_1
0x40059b0	      0xb900000000	                              mov ecx, 0	      9237	normal.c	FUNCTION_130	SWITCH_1	CALL_1
0x40059b5	          0x488b3b	                    mov rdi, qword [rbx]	      9237	normal.c	FUNCTION_130	SWITCH_1	CALL_1
0x40059b8	      0xe800000000	                          call 0x40059bd	      9237	normal.c	FUNCTION_130	SWITCH_1	CALL_1
0x40059bd	      0xe9c3000000	                           jmp 0x4005a85	      9237	normal.c	FUNCTION_130	SWITCH_1	CALL_1
0x40059c2	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	      9240	normal.c	FUNCTION_130	SWITCH_1	CALL_2
0x40059c6	      0xb901000000	                              mov ecx, 1	      9240	normal.c	FUNCTION_130	SWITCH_1	CALL_2
0x40059cb	          0x488b3b	                    mov rdi, qword [rbx]	      9240	normal.c	FUNCTION_130	SWITCH_1	CALL_2
0x40059ce	      0xe800000000	                          call 0x40059d3	      9240	normal.c	FUNCTION_130	SWITCH_1	CALL_2
0x40059d3	      0xe9ad000000	                           jmp 0x4005a85	      9240	normal.c	FUNCTION_130	SWITCH_1	CALL_2
0x40059d8	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	      9245	normal.c	FUNCTION_130	SWITCH_1	CALL_3
0x40059dc	    0x41b829000000	                           mov r8d, 0x29	      9245	normal.c	FUNCTION_130	SWITCH_1	CALL_3
0x40059e2	      0xb928000000	                           mov ecx, 0x28	      9245	normal.c	FUNCTION_130	SWITCH_1	CALL_3
0x40059e7	          0x488b3b	                    mov rdi, qword [rbx]	      9245	normal.c	FUNCTION_130	SWITCH_1	CALL_3
0x40059ea	      0xe800000000	                          call 0x40059ef	      9245	normal.c	FUNCTION_130	SWITCH_1	CALL_3
0x40059ef	      0xe991000000	                           jmp 0x4005a85	      9245	normal.c	FUNCTION_130	SWITCH_1	CALL_3
0x40059f4	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	      9250	normal.c	FUNCTION_130	SWITCH_1	CALL_4
0x40059f8	    0x41b87d000000	                           mov r8d, 0x7d	      9250	normal.c	FUNCTION_130	SWITCH_1	CALL_4
0x40059fe	      0xb97b000000	                           mov ecx, 0x7b	      9250	normal.c	FUNCTION_130	SWITCH_1	CALL_4
0x4005a03	          0x488b3b	                    mov rdi, qword [rbx]	      9250	normal.c	FUNCTION_130	SWITCH_1	CALL_4
0x4005a06	      0xe800000000	                          call 0x4005a0b	      9250	normal.c	FUNCTION_130	SWITCH_1	CALL_4
0x4005a0b	            0xeb78	                           jmp 0x4005a85	      9250	normal.c	FUNCTION_130	SWITCH_1	CALL_4
0x4005a0d	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	      9254	normal.c	FUNCTION_130	SWITCH_1	CALL_5
0x4005a11	    0x41b85d000000	                           mov r8d, 0x5d	      9254	normal.c	FUNCTION_130	SWITCH_1	CALL_5
0x4005a17	      0xb95b000000	                           mov ecx, 0x5b	      9254	normal.c	FUNCTION_130	SWITCH_1	CALL_5
0x4005a1c	          0x488b3b	                    mov rdi, qword [rbx]	      9254	normal.c	FUNCTION_130	SWITCH_1	CALL_5
0x4005a1f	      0xe800000000	                          call 0x4005a24	      9254	normal.c	FUNCTION_130	SWITCH_1	CALL_5
0x4005a24	            0xeb5f	                           jmp 0x4005a85	      9254	normal.c	FUNCTION_130	SWITCH_1	CALL_5
0x4005a26	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	      9258	normal.c	FUNCTION_130	SWITCH_1	CALL_6
0x4005a2a	    0x41b83e000000	                           mov r8d, 0x3e	      9258	normal.c	FUNCTION_130	SWITCH_1	CALL_6
0x4005a30	      0xb93c000000	                           mov ecx, 0x3c	      9258	normal.c	FUNCTION_130	SWITCH_1	CALL_6
0x4005a35	          0x488b3b	                    mov rdi, qword [rbx]	      9258	normal.c	FUNCTION_130	SWITCH_1	CALL_6
0x4005a38	      0xe800000000	                          call 0x4005a3d	      9258	normal.c	FUNCTION_130	SWITCH_1	CALL_6
0x4005a3d	            0xeb46	                           jmp 0x4005a85	      9258	normal.c	FUNCTION_130	SWITCH_1	CALL_6
0x4005a3f	        0x834b3c02	                or dword [rbx + 0x3c], 2	      9268	normal.c	FUNCTION_130	SWITCH_1
0x4005a43	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	      9269	normal.c	FUNCTION_130	SWITCH_1	CALL_7
0x4005a47	          0x488b3b	                    mov rdi, qword [rbx]	      9269	normal.c	FUNCTION_130	SWITCH_1	CALL_7
0x4005a4a	      0xe800000000	                          call 0x4005a4f	      9269	normal.c	FUNCTION_130	SWITCH_1	CALL_7
0x4005a4f	            0xeb34	                           jmp 0x4005a85	      9269	normal.c	FUNCTION_130	SWITCH_1	CALL_7
0x4005a51	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	      9272	normal.c	FUNCTION_130	SWITCH_1	CALL_8
0x4005a55	      0xb970000000	                           mov ecx, 0x70	      9272	normal.c	FUNCTION_130	SWITCH_1	CALL_8
0x4005a5a	          0x488b3b	                    mov rdi, qword [rbx]	      9272	normal.c	FUNCTION_130	SWITCH_1	CALL_8
0x4005a5d	      0xe800000000	                          call 0x4005a62	      9272	normal.c	FUNCTION_130	SWITCH_1	CALL_8
0x4005a62	            0xeb21	                           jmp 0x4005a85	      9272	normal.c	FUNCTION_130	SWITCH_1	CALL_8
0x4005a64	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	      9275	normal.c	FUNCTION_130	SWITCH_1	CALL_9
0x4005a68	          0x488b3b	                    mov rdi, qword [rbx]	      9275	normal.c	FUNCTION_130	SWITCH_1	CALL_9
0x4005a6b	      0xe800000000	                          call 0x4005a70	      9275	normal.c	FUNCTION_130	SWITCH_1	CALL_9
0x4005a70	            0xeb13	                           jmp 0x4005a85	      9275	normal.c	FUNCTION_130	SWITCH_1	CALL_9
0x4005a72	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	      9280	normal.c	FUNCTION_130	SWITCH_1	CALL_10
0x4005a76	          0x488b3b	                    mov rdi, qword [rbx]	      9280	normal.c	FUNCTION_130	SWITCH_1	CALL_10
0x4005a79	      0xe800000000	                          call 0x4005a7e	      9280	normal.c	FUNCTION_130	SWITCH_1	CALL_10
0x4005a7e	            0xeb05	                           jmp 0x4005a85	      9280	normal.c	FUNCTION_130	SWITCH_1	CALL_10
0x4005a80	      0xb800000000	                              mov eax, 0	      9289	normal.c	FUNCTION_130	SWITCH_1
0x4005a85	    0x488b15000000	            mov rdx, qword [0x04005a8c] 	      9293	normal.c	FUNCTION_130
0x4005a8c	    0x4889aa301500	          mov qword [rdx + 0x1530], rbp 	      9293	normal.c	FUNCTION_130
0x4005a93	            0x85c0	                           test eax, eax	      9294	normal.c	FUNCTION_130	IF_2
0x4005a95	            0x7508	                           jne 0x4005a9f	      9294	normal.c	FUNCTION_130	IF_2
0x4005a97	          0x488b3b	                    mov rdi, qword [rbx]	      9295	normal.c	FUNCTION_130	CALL_11
0x4005a9a	      0xe899a7ffff	                    call sym.clearopbeep	      9295	normal.c	FUNCTION_130	CALL_11
0x4005a9f	      0xe800000000	                          call 0x4005aa4	      9296	normal.c	FUNCTION_130	CALL_12
0x4005aa4	    0x488b05000000	            mov rax, qword [0x04005aab] 	      9297	normal.c	FUNCTION_130
0x4005aab	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      9297	normal.c	FUNCTION_130
0x4005ab2	      0xe971030000	                           jmp 0x4005e28	      9297	normal.c	FUNCTION_130
0x4005ab7	      0xe800000000	                          call 0x4005abc	      9067	normal.c	FUNCTION_128	ELSE_2	IF_5	CALL_8
0x4005abc	            0x85c0	                           test eax, eax	      9067	normal.c	FUNCTION_128	ELSE_2	IF_5	CALL_8
0x4005abe	            0x7428	                            je 0x4005ae8	      9067	normal.c	FUNCTION_128	ELSE_2	IF_5	CALL_8
0x4005ac0	          0x488b03	                    mov rax, qword [rbx]	      9069	normal.c	FUNCTION_128	ELSE_2	IF_5	CALL_9
0x4005ac3	    0xc70000000000	                      mov dword [rax], 0	      3676	normal.c	FUNCTION_24
0x4005ac9	    0xc74004000000	                  mov dword [rax + 4], 0	      3677	normal.c	FUNCTION_24
0x4005ad0	    0xc7400c000000	                mov dword [rax + 0xc], 0	      3678	normal.c	FUNCTION_24
0x4005ad7	    0xc74010000000	               mov dword [rax + 0x10], 0	      3679	normal.c	FUNCTION_24
0x4005ade	      0xe800000000	                          call 0x4005ae3	      9070	normal.c	FUNCTION_128	ELSE_2	IF_5	CALL_10
0x4005ae3	      0xe940030000	                           jmp 0x4005e28	      9071	normal.c	FUNCTION_128	ELSE_2	IF_5
0x4005ae8	    0x488b05000000	            mov rax, qword [0x04005aef] 	      9074	normal.c	FUNCTION_128	ELSE_3	IF_6
0x4005aef	    0x83b840150000	             cmp dword [rax + 0x1540], 0	      9074	normal.c	FUNCTION_128	ELSE_3	IF_6
0x4005af6	            0x7569	                           jne 0x4005b61	      9074	normal.c	FUNCTION_128	ELSE_3	IF_6
0x4005af8	    0x833d00000000	               cmp dword [0x04005aff], 0	      9074	normal.c	FUNCTION_128	ELSE_3	IF_6
0x4005aff	            0x7560	                           jne 0x4005b61	      9074	normal.c	FUNCTION_128	ELSE_3	IF_6
0x4005b01	      0xba05000000	                              mov edx, 5	      9077	normal.c	FUNCTION_128	ELSE_3	IF_6	CALL_12
0x4005b06	      0xbe00000000	                              mov esi, 0	      9077	normal.c	FUNCTION_128	ELSE_3	IF_6	CALL_12
0x4005b0b	      0xbf00000000	                              mov edi, 0	      9077	normal.c	FUNCTION_128	ELSE_3	IF_6	CALL_12
0x4005b10	      0xe800000000	                          call 0x4005b15	      9077	normal.c	FUNCTION_128	ELSE_3	IF_6	CALL_12
0x4005b15	          0x4889c7	                            mov rdi, rax	      9077	normal.c	FUNCTION_128	ELSE_3	IF_6	CALL_12
0x4005b18	      0xe800000000	                          call 0x4005b1d	      9077	normal.c	FUNCTION_128	ELSE_3	IF_6	CALL_12
0x4005b1d	          0x488b03	                    mov rax, qword [rbx]	      9078	normal.c	FUNCTION_128	ELSE_3	IF_6	CALL_13
0x4005b20	    0xc70000000000	                      mov dword [rax], 0	      3676	normal.c	FUNCTION_24
0x4005b26	    0xc74004000000	                  mov dword [rax + 4], 0	      3677	normal.c	FUNCTION_24
0x4005b2d	    0xc7400c000000	                mov dword [rax + 0xc], 0	      3678	normal.c	FUNCTION_24
0x4005b34	    0xc74010000000	               mov dword [rax + 0x10], 0	      3679	normal.c	FUNCTION_24
0x4005b3b	    0x817b0cb0acff	      cmp dword [rbx + 0xc], 0xffffacb0 	      9079	normal.c	FUNCTION_128	ELSE_3	IF_6	IF_7
0x4005b42	     0xf85e0020000	                           jne 0x4005e28	      9079	normal.c	FUNCTION_128	ELSE_3	IF_6	IF_7
0x4005b48	      0xba00000000	                              mov edx, 0	      9081	normal.c	FUNCTION_128	ELSE_3	IF_6	CALL_14
0x4005b4d	      0xbe01000000	                              mov esi, 1	      9081	normal.c	FUNCTION_128	ELSE_3	IF_6	CALL_14
0x4005b52	      0xbf00000000	                              mov edi, 0	      9081	normal.c	FUNCTION_128	ELSE_3	IF_6	CALL_14
0x4005b57	      0xe800000000	                          call 0x4005b5c	      9081	normal.c	FUNCTION_128	ELSE_3	IF_6	CALL_14
0x4005b5c	      0xe9c7020000	                           jmp 0x4005e28	      9081	normal.c	FUNCTION_128	ELSE_3	IF_6	CALL_14
0x4005b61	    0x817b0cb0acff	      cmp dword [rbx + 0xc], 0xffffacb0 	      9083	normal.c	FUNCTION_128	ELSE_4	IF_8
0x4005b68	     0xf8517010000	                           jne 0x4005c85	      9083	normal.c	FUNCTION_128	ELSE_4	IF_8
0x4005b6e	    0x833d00000000	               cmp dword [0x04005b75], 0	      9083	normal.c	FUNCTION_128	ELSE_4	IF_8
0x4005b75	     0xf840a010000	                            je 0x4005c85	      9083	normal.c	FUNCTION_128	ELSE_4	IF_8
0x4005b7b	    0x488b05000000	            mov rax, qword [0x04005b82] 	      9085	normal.c	FUNCTION_128	ELSE_4	IF_8
0x4005b82	        0x488b6838	            mov rbp, qword [rax + 0x38] 	      9085	normal.c	FUNCTION_128	ELSE_4	IF_8
0x4005b86	        0x448b6840	           mov r13d, dword [rax + 0x40] 	      9085	normal.c	FUNCTION_128	ELSE_4	IF_8
0x4005b8a	        0x448b7844	           mov r15d, dword [rax + 0x44] 	      9085	normal.c	FUNCTION_128	ELSE_4	IF_8
0x4005b8e	    0x4c8b25000000	            mov r12, qword [0x04005b95] 	      9086	normal.c	FUNCTION_128	ELSE_4	IF_8
0x4005b95	    0x448b35000000	           mov r14d, dword [0x04005b9c] 	      9086	normal.c	FUNCTION_128	ELSE_4	IF_8
0x4005b9c	    0x8b0500000000	            mov eax, dword [0x04005ba2] 	      9086	normal.c	FUNCTION_128	ELSE_4	IF_8
0x4005ba2	        0x8944240c	              mov dword [rsp + 0xc], eax	      9086	normal.c	FUNCTION_128	ELSE_4	IF_8
0x4005ba6	    0x833d00000000	           cmp dword [0x04005bad], 0x56 	      9089	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_9
0x4005bad	            0x7405	                            je 0x4005bb4	      9089	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_9
0x4005baf	          0x4c39e5	                            cmp rbp, r12	      9089	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_9
0x4005bb2	            0x7411	                            je 0x4005bc5	      9089	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_9
0x4005bb4	      0xe800000000	                          call 0x4005bb9	      9091	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_9	CALL_15
0x4005bb9	          0x488b03	                    mov rax, qword [rbx]	      9092	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_9
0x4005bbc	    0xc74004310000	               mov dword [rax + 4], 0x31	      9092	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_9
0x4005bc3	            0xeb0a	                           jmp 0x4005bcf	      9092	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_9
0x4005bc5	          0x488b03	                    mov rax, qword [rbx]	      9095	normal.c	FUNCTION_128	ELSE_4	IF_8	ELSE_5
0x4005bc8	    0xc740042d0000	               mov dword [rax + 4], 0x2d	      9095	normal.c	FUNCTION_128	ELSE_4	IF_8	ELSE_5
0x4005bcf	    0xc7430c640000	            mov dword [rbx + 0xc], 0x64 	      9096	normal.c	FUNCTION_128	ELSE_4	IF_8
0x4005bd6	    0xc74310000000	               mov dword [rbx + 0x10], 0	      9097	normal.c	FUNCTION_128	ELSE_4	IF_8
0x4005bdd	          0x4889df	                            mov rdi, rbx	      9098	normal.c	FUNCTION_128	ELSE_4	IF_8	CALL_16
0x4005be0	      0xe879bfffff	                    call sym.nv_operator	      9098	normal.c	FUNCTION_128	ELSE_4	IF_8	CALL_16
0x4005be5	      0xba00000000	                              mov edx, 0	      9099	normal.c	FUNCTION_128	ELSE_4	IF_8	CALL_17
0x4005bea	      0xbe00000000	                              mov esi, 0	      9099	normal.c	FUNCTION_128	ELSE_4	IF_8	CALL_17
0x4005bef	          0x4889df	                            mov rdi, rbx	      9099	normal.c	FUNCTION_128	ELSE_4	IF_8	CALL_17
0x4005bf2	      0xe800000000	                          call 0x4005bf7	      9099	normal.c	FUNCTION_128	ELSE_4	IF_8	CALL_17
0x4005bf7	    0xc7430cb0acff	      mov dword [rbx + 0xc], 0xffffacb0 	      9100	normal.c	FUNCTION_128	ELSE_4	IF_8
0x4005bfe	      0xe800000000	                          call 0x4005c03	      9104	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_19
0x4005c03	          0x803800	                       cmp byte [rax], 0	      9104	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_19
0x4005c06	            0x7463	                            je 0x4005c6b	      9104	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_19
0x4005c08	    0x488b15000000	            mov rdx, qword [0x04005c0f] 	      9104	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_19
0x4005c0f	        0x488b4238	            mov rax, qword [rdx + 0x38] 	      9104	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_19
0x4005c13	          0x4839e8	                            cmp rax, rbp	      9104	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_19
0x4005c16	            0x7408	                            je 0x4005c20	      9104	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_19
0x4005c18	          0x4839e8	                            cmp rax, rbp	      9104	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_19
0x4005c1b	           0xf9cc1	                                 setl cl	      9104	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_19
0x4005c1e	            0xeb17	                           jmp 0x4005c37	      9104	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_19
0x4005c20	          0x8b4a40	            mov ecx, dword [rdx + 0x40] 	      9104	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_19
0x4005c23	          0x4439e9	                           cmp ecx, r13d	      9104	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_19
0x4005c26	            0x7408	                            je 0x4005c30	      9104	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_19
0x4005c28	          0x4439e9	                           cmp ecx, r13d	      9104	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_19
0x4005c2b	           0xf9cc1	                                 setl cl	      9104	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_19
0x4005c2e	            0xeb07	                           jmp 0x4005c37	      9104	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_19
0x4005c30	        0x44397a44	           cmp dword [rdx + 0x44], r15d 	      9104	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_19
0x4005c34	           0xf9cc1	                                 setl cl	      9104	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_19
0x4005c37	            0x84c9	                             test cl, cl	      9104	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_19
0x4005c39	            0x7430	                            je 0x4005c6b	      9104	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_19
0x4005c3b	          0x4c39e0	                            cmp rax, r12	      9105	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_20
0x4005c3e	            0x7408	                            je 0x4005c48	      9105	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_20
0x4005c40	          0x4c39e0	                            cmp rax, r12	      9105	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_20
0x4005c43	           0xf9cc0	                                 setl al	      9105	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_20
0x4005c46	            0xeb1a	                           jmp 0x4005c62	      9105	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_20
0x4005c48	          0x8b4240	            mov eax, dword [rdx + 0x40] 	      9105	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_20
0x4005c4b	          0x4439f0	                           cmp eax, r14d	      9105	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_20
0x4005c4e	            0x7408	                            je 0x4005c58	      9105	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_20
0x4005c50	          0x4439f0	                           cmp eax, r14d	      9105	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_20
0x4005c53	           0xf9cc0	                                 setl al	      9105	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_20
0x4005c56	            0xeb0a	                           jmp 0x4005c62	      9105	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_20
0x4005c58	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      9105	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_20
0x4005c5c	          0x394244	            cmp dword [rdx + 0x44], eax 	      9105	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_20
0x4005c5f	           0xf9cc0	                                 setl al	      9105	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_20
0x4005c62	            0x84c0	                             test al, al	      9105	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_20
0x4005c64	            0x7405	                            je 0x4005c6b	      9105	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_20
0x4005c66	      0xe800000000	                          call 0x4005c6b	      9106	normal.c	FUNCTION_128	ELSE_4	IF_8	CALL_21
0x4005c6b	          0x8b530c	              mov edx, dword [rbx + 0xc]	      9109	normal.c	FUNCTION_128	ELSE_4	IF_8	CALL_22
0x4005c6e	      0xb900000000	                              mov ecx, 0	      9109	normal.c	FUNCTION_128	ELSE_4	IF_8	CALL_22
0x4005c73	      0xbe00000000	                              mov esi, 0	      9109	normal.c	FUNCTION_128	ELSE_4	IF_8	CALL_22
0x4005c78	          0x4889df	                            mov rdi, rbx	      9109	normal.c	FUNCTION_128	ELSE_4	IF_8	CALL_22
0x4005c7b	      0xe8f5aaffff	                    call sym.invoke_edit	      9109	normal.c	FUNCTION_128	ELSE_4	IF_8	CALL_22
0x4005c80	      0xe9a3010000	                           jmp 0x4005e28	      9084	normal.c	FUNCTION_128	ELSE_4	IF_8
0x4005c85	          0x488b3b	                    mov rdi, qword [rbx]	      9111	normal.c	FUNCTION_128	ELSE_6	IF_11	CALL_23
0x4005c88	      0xe8d4a5ffff	                  call sym.checkclearopq	      9111	normal.c	FUNCTION_128	ELSE_6	IF_11	CALL_23
0x4005c8d	            0x85c0	                           test eax, eax	      9111	normal.c	FUNCTION_128	ELSE_6	IF_11	CALL_23
0x4005c8f	     0xf856c010000	                           jne 0x4005e01	      9111	normal.c	FUNCTION_128	ELSE_6	IF_11	CALL_23
0x4005c95	          0x8b430c	              mov eax, dword [rbx + 0xc]	      9113	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1
0x4005c98	          0x83f841	                           cmp eax, 0x41	      9113	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1
0x4005c9b	            0x7428	                            je 0x4005cc5	      9113	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1
0x4005c9d	          0x83f841	                           cmp eax, 0x41	      9113	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1
0x4005ca0	            0x7f10	                            jg 0x4005cb2	      9113	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1
0x4005ca2	      0x3db0acffff	                     cmp eax, 0xffffacb0	      9113	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1
0x4005ca7	     0xf84b1000000	                            je 0x4005d5e	      9113	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1
0x4005cad	      0xe903010000	                           jmp 0x4005db5	      9113	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1
0x4005cb2	          0x83f849	                           cmp eax, 0x49	      9113	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1
0x4005cb5	            0x7479	                            je 0x4005d30	      9113	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1
0x4005cb7	          0x83f861	                           cmp eax, 0x61	      9113	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1
0x4005cba	     0xf84af000000	                            je 0x4005d6f	      9113	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1
0x4005cc0	      0xe9f0000000	                           jmp 0x4005db5	      9113	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1
0x4005cc5	    0x488b05000000	            mov rax, qword [0x04005ccc] 	      9116	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1
0x4005ccc	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      9116	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1
0x4005cd3	    0x833d00000000	               cmp dword [0x04005cda], 4	      9118	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_12
0x4005cda	            0x7525	                           jne 0x4005d01	      9118	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_12
0x4005cdc	    0x8b2d00000000	            mov ebp, dword [0x04005ce2] 	      9120	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_12
0x4005ce2	    0xc70500000000	           mov dword [0x04005cec], 0x10 	      9124	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_12
0x4005cec	      0xbfffffff7f	                     mov edi, 0x7fffffff	      9125	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_12	CALL_24
0x4005cf1	      0xe800000000	                          call 0x4005cf6	      9125	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_12	CALL_24
0x4005cf6	    0x892d00000000	            mov dword [0x04005cfc], ebp 	      9126	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_12
0x4005cfc	      0xe9b4000000	                           jmp 0x4005db5	      9126	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_12
0x4005d01	      0xe800000000	                          call 0x4005d06	      9130	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	CALL_26
0x4005d06	          0x4889c7	                            mov rdi, rax	      9130	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	CALL_26
0x4005d09	      0xb800000000	                              mov eax, 0	      9130	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	CALL_26
0x4005d0e	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      9130	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	CALL_26
0x4005d15	            0xf2ae	              repne scasb al, byte [rdi]	      9130	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	CALL_26
0x4005d17	          0x4889c8	                            mov rax, rcx	      9130	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	CALL_26
0x4005d1a	          0x48f7d0	                                 not rax	      9130	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	CALL_26
0x4005d1d	        0x4883e801	                              sub rax, 1	      9130	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	CALL_26
0x4005d21	    0x488b15000000	            mov rdx, qword [0x04005d28] 	      9130	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	CALL_26
0x4005d28	           0x14240	             add dword [rdx + 0x40], eax	      9130	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	CALL_26
0x4005d2b	      0xe985000000	                           jmp 0x4005db5	      9130	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	CALL_26
0x4005d30	      0xbe48000000	                           mov esi, 0x48	      9134	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_13	CALL_27
0x4005d35	    0x488b3d000000	            mov rdi, qword [0x04005d3c] 	      9134	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_13	CALL_27
0x4005d3c	      0xe800000000	                          call 0x4005d41	      9134	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_13	CALL_27
0x4005d41	          0x4885c0	                           test rax, rax	      9134	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_13	CALL_27
0x4005d44	            0x750c	                           jne 0x4005d52	      9134	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_13	CALL_27
0x4005d46	      0xbf01000000	                              mov edi, 1	      9135	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	CALL_28
0x4005d4b	      0xe800000000	                          call 0x4005d50	      9135	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	CALL_28
0x4005d50	            0xeb63	                           jmp 0x4005db5	      9135	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	CALL_28
0x4005d52	      0xbf05000000	                              mov edi, 5	      9137	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	CALL_29
0x4005d57	      0xe800000000	                          call 0x4005d5c	      9137	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	CALL_29
0x4005d5c	            0xeb57	                           jmp 0x4005db5	      9137	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	CALL_29
0x4005d5e	    0x488b05000000	            mov rax, qword [0x04005d65] 	      9143	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_14
0x4005d65	        0x83784000	               cmp dword [rax + 0x40], 0	      9143	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_14
0x4005d69	     0xf84b1000000	                            je 0x4005e20	      9143	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_14
0x4005d6f	      0xe800000000	                          call 0x4005d74	      9151	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_15	CALL_30
0x4005d74	            0x85c0	                           test eax, eax	      9151	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_15	CALL_30
0x4005d76	            0x742e	                            je 0x4005da6	      9151	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_15	CALL_30
0x4005d78	    0x488b05000000	            mov rax, qword [0x04005d7f] 	      9152	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_15
0x4005d7f	        0x83784400	               cmp dword [rax + 0x44], 0	      9152	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_15
0x4005d83	            0x7f14	                            jg 0x4005d99	      9152	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_15
0x4005d85	      0xe800000000	                          call 0x4005d8a	      9153	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_15	CALL_31
0x4005d8a	          0x803800	                       cmp byte [rax], 0	      9153	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_15	CALL_31
0x4005d8d	            0x740a	                            je 0x4005d99	      9153	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_15	CALL_31
0x4005d8f	      0xe800000000	                          call 0x4005d94	      9154	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_15	CALL_32
0x4005d94	          0x803809	                       cmp byte [rax], 9	      9154	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_15	CALL_32
0x4005d97	            0x750d	                           jne 0x4005da6	      9154	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_15	CALL_32
0x4005d99	    0x488b05000000	            mov rax, qword [0x04005da0] 	      9155	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_15
0x4005da0	        0x83404401	               add dword [rax + 0x44], 1	      9155	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_15
0x4005da4	            0xeb0f	                           jmp 0x4005db5	      9155	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_15
0x4005da6	      0xe800000000	                          call 0x4005dab	      9158	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	ELSE_9	IF_16	CALL_33
0x4005dab	          0x803800	                       cmp byte [rax], 0	      9158	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	ELSE_9	IF_16	CALL_33
0x4005dae	            0x7405	                            je 0x4005db5	      9158	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	ELSE_9	IF_16	CALL_33
0x4005db0	      0xe800000000	                          call 0x4005db5	      9159	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	ELSE_9	IF_16
0x4005db5	    0x488b05000000	            mov rax, qword [0x04005dbc] 	      9164	normal.c	FUNCTION_128	ELSE_6	IF_11	IF_17
0x4005dbc	        0x83784400	               cmp dword [rax + 0x44], 0	      9164	normal.c	FUNCTION_128	ELSE_6	IF_11	IF_17
0x4005dc0	            0x7428	                            je 0x4005dea	      9164	normal.c	FUNCTION_128	ELSE_6	IF_11	IF_17
0x4005dc2	        0x837b0c41	            cmp dword [rbx + 0xc], 0x41 	      9164	normal.c	FUNCTION_128	ELSE_6	IF_11	IF_17
0x4005dc6	            0x7422	                            je 0x4005dea	      9164	normal.c	FUNCTION_128	ELSE_6	IF_11	IF_17
0x4005dc8	    0x8b2d00000000	            mov ebp, dword [0x04005dce] 	      9166	normal.c	FUNCTION_128	ELSE_6	IF_11	IF_17
0x4005dce	    0xc70500000000	           mov dword [0x04005dd8], 0x10 	      9170	normal.c	FUNCTION_128	ELSE_6	IF_11	IF_17
0x4005dd8	      0xe800000000	                          call 0x4005ddd	      9171	normal.c	FUNCTION_128	ELSE_6	IF_11	IF_17	CALL_36
0x4005ddd	            0x89c7	                            mov edi, eax	      9171	normal.c	FUNCTION_128	ELSE_6	IF_11	IF_17	CALL_36
0x4005ddf	      0xe800000000	                          call 0x4005de4	      9171	normal.c	FUNCTION_128	ELSE_6	IF_11	IF_17	CALL_36
0x4005de4	    0x892d00000000	            mov dword [0x04005dea], ebp 	      9172	normal.c	FUNCTION_128	ELSE_6	IF_11	IF_17
0x4005dea	          0x8b530c	              mov edx, dword [rbx + 0xc]	      9176	normal.c	FUNCTION_128	ELSE_6	IF_11	CALL_37
0x4005ded	      0xb900000000	                              mov ecx, 0	      9176	normal.c	FUNCTION_128	ELSE_6	IF_11	CALL_37
0x4005df2	      0xbe00000000	                              mov esi, 0	      9176	normal.c	FUNCTION_128	ELSE_6	IF_11	CALL_37
0x4005df7	          0x4889df	                            mov rdi, rbx	      9176	normal.c	FUNCTION_128	ELSE_6	IF_11	CALL_37
0x4005dfa	      0xe876a9ffff	                    call sym.invoke_edit	      9176	normal.c	FUNCTION_128	ELSE_6	IF_11	CALL_37
0x4005dff	            0xeb27	                           jmp 0x4005e28	      9176	normal.c	FUNCTION_128	ELSE_6	IF_11	CALL_37
0x4005e01	    0x817b0cb0acff	      cmp dword [rbx + 0xc], 0xffffacb0 	      9178	normal.c	FUNCTION_128	ELSE_10	IF_18
0x4005e08	            0x751e	                           jne 0x4005e28	      9178	normal.c	FUNCTION_128	ELSE_10	IF_18
0x4005e0a	      0xba00000000	                              mov edx, 0	      9180	normal.c	FUNCTION_128	ELSE_10	IF_18
0x4005e0f	      0xbe01000000	                              mov esi, 1	      9180	normal.c	FUNCTION_128	ELSE_10	IF_18
0x4005e14	      0xbf00000000	                              mov edi, 0	      9180	normal.c	FUNCTION_128	ELSE_10	IF_18
0x4005e19	      0xe800000000	                          call 0x4005e1e	      9180	normal.c	FUNCTION_128	ELSE_10	IF_18
0x4005e1e	            0xeb08	                           jmp 0x4005e28	      9180	normal.c	FUNCTION_128	ELSE_10	IF_18
0x4005e20	        0x83784400	               cmp dword [rax + 0x44], 0	      9164	normal.c	FUNCTION_128	ELSE_6	IF_11	IF_17
0x4005e24	            0x75a2	                           jne 0x4005dc8	      9164	normal.c	FUNCTION_128	ELSE_6	IF_11	IF_17
0x4005e26	            0xebc2	                           jmp 0x4005dea	      9164	normal.c	FUNCTION_128	ELSE_6	IF_11	IF_17
0x4005e28	        0x4883c418	                           add rsp, 0x18	      9181	normal.c	FUNCTION_128
0x4005e2c	              0x5b	                                 pop rbx	      9181	normal.c	FUNCTION_128
0x4005e2d	              0x5d	                                 pop rbp	      9181	normal.c	FUNCTION_128
0x4005e2e	            0x415c	                                 pop r12	      9181	normal.c	FUNCTION_128
0x4005e30	            0x415d	                                 pop r13	      9181	normal.c	FUNCTION_128
0x4005e32	            0x415e	                                 pop r14	      9181	normal.c	FUNCTION_128
0x4005e34	            0x415f	                                 pop r15	      9181	normal.c	FUNCTION_128
0x4005e36	              0xc3	                                     ret	      9181	normal.c	FUNCTION_128
op_colon	CALL,20:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,9:IF,12	77
0x40026e4	              0x53	                                push rbx	      2158	normal.c	FUNCTION_7
0x40026e5	          0x4889fb	                            mov rbx, rdi	      2158	normal.c	FUNCTION_7
0x40026e8	      0xbf3a000000	                           mov edi, 0x3a	      2159	normal.c	FUNCTION_7	CALL_1
0x40026ed	      0xe800000000	                          call 0x40026f2	      2159	normal.c	FUNCTION_7	CALL_1
0x40026f2	        0x837b5c00	               cmp dword [rbx + 0x5c], 0	      2160	normal.c	FUNCTION_7	IF_1
0x40026f6	            0x740f	                            je 0x4002707	      2160	normal.c	FUNCTION_7	IF_1
0x40026f8	      0xbf00000000	                              mov edi, 0	      2161	normal.c	FUNCTION_7	CALL_2
0x40026fd	      0xe800000000	                          call 0x4002702	      2161	normal.c	FUNCTION_7	CALL_2
0x4002702	      0xe992000000	                           jmp 0x4002799	      2161	normal.c	FUNCTION_7	CALL_2
0x4002707	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      2167	normal.c	FUNCTION_7	ELSE_1	IF_2
0x400270b	    0x488b05000000	            mov rax, qword [0x04002712] 	      2167	normal.c	FUNCTION_7	ELSE_1	IF_2
0x4002712	        0x483b7838	            cmp rdi, qword [rax + 0x38] 	      2167	normal.c	FUNCTION_7	ELSE_1	IF_2
0x4002716	            0x750c	                           jne 0x4002724	      2167	normal.c	FUNCTION_7	ELSE_1	IF_2
0x4002718	      0xbf2e000000	                           mov edi, 0x2e	      2168	normal.c	FUNCTION_7	ELSE_1	CALL_3
0x400271d	      0xe800000000	                          call 0x4002722	      2168	normal.c	FUNCTION_7	ELSE_1	CALL_3
0x4002722	            0xeb05	                           jmp 0x4002729	      2168	normal.c	FUNCTION_7	ELSE_1	CALL_3
0x4002724	      0xe800000000	                          call 0x4002729	      2170	normal.c	FUNCTION_7	ELSE_1	CALL_4
0x4002729	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      2171	normal.c	FUNCTION_7	ELSE_1	IF_3
0x400272d	        0x48394330	            cmp qword [rbx + 0x30], rax 	      2171	normal.c	FUNCTION_7	ELSE_1	IF_3
0x4002731	            0x7466	                            je 0x4002799	      2171	normal.c	FUNCTION_7	ELSE_1	IF_3
0x4002733	      0xbf2c000000	                           mov edi, 0x2c	      2173	normal.c	FUNCTION_7	ELSE_1	IF_3	CALL_5
0x4002738	      0xe800000000	                          call 0x400273d	      2173	normal.c	FUNCTION_7	ELSE_1	IF_3	CALL_5
0x400273d	        0x488b7b30	            mov rdi, qword [rbx + 0x30] 	      2174	normal.c	FUNCTION_7	ELSE_1	IF_3	IF_4
0x4002741	    0x488b05000000	            mov rax, qword [0x04002748] 	      2174	normal.c	FUNCTION_7	ELSE_1	IF_3	IF_4
0x4002748	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2174	normal.c	FUNCTION_7	ELSE_1	IF_3	IF_4
0x400274c	          0x4839c7	                            cmp rdi, rax	      2174	normal.c	FUNCTION_7	ELSE_1	IF_3	IF_4
0x400274f	            0x750c	                           jne 0x400275d	      2174	normal.c	FUNCTION_7	ELSE_1	IF_3	IF_4
0x4002751	      0xbf2e000000	                           mov edi, 0x2e	      2175	normal.c	FUNCTION_7	ELSE_1	IF_3	CALL_6
0x4002756	      0xe800000000	                          call 0x400275b	      2175	normal.c	FUNCTION_7	ELSE_1	IF_3	CALL_6
0x400275b	            0xeb3c	                           jmp 0x4002799	      2175	normal.c	FUNCTION_7	ELSE_1	IF_3	CALL_6
0x400275d	    0x488b15000000	            mov rdx, qword [0x04002764] 	      2176	normal.c	FUNCTION_7	ELSE_1	IF_3	ELSE_3	IF_5
0x4002764	          0x483b3a	                    cmp rdi, qword [rdx]	      2176	normal.c	FUNCTION_7	ELSE_1	IF_3	ELSE_3	IF_5
0x4002767	            0x750c	                           jne 0x4002775	      2176	normal.c	FUNCTION_7	ELSE_1	IF_3	ELSE_3	IF_5
0x4002769	      0xbf24000000	                           mov edi, 0x24	      2177	normal.c	FUNCTION_7	ELSE_1	IF_3	ELSE_3	IF_5
0x400276e	      0xe800000000	                          call 0x4002773	      2177	normal.c	FUNCTION_7	ELSE_1	IF_3	ELSE_3	IF_5
0x4002773	            0xeb24	                           jmp 0x4002799	      2177	normal.c	FUNCTION_7	ELSE_1	IF_3	ELSE_3	IF_5
0x4002775	        0x483b4320	            cmp rax, qword [rbx + 0x20] 	      2178	normal.c	FUNCTION_7	ELSE_1	IF_3	ELSE_4	IF_6
0x4002779	            0x7519	                           jne 0x4002794	      2178	normal.c	FUNCTION_7	ELSE_1	IF_3	ELSE_4	IF_6
0x400277b	      0xbf00000000	                              mov edi, 0	      2180	normal.c	FUNCTION_7	ELSE_1	IF_3	ELSE_4	IF_6	CALL_8
0x4002780	      0xe800000000	                          call 0x4002785	      2180	normal.c	FUNCTION_7	ELSE_1	IF_3	ELSE_4	IF_6	CALL_8
0x4002785	        0x488b4350	            mov rax, qword [rbx + 0x50] 	      2181	normal.c	FUNCTION_7	ELSE_1	IF_3	ELSE_4	IF_6	CALL_9
0x4002789	        0x488d78ff	                      lea rdi, [rax - 1]	      2181	normal.c	FUNCTION_7	ELSE_1	IF_3	ELSE_4	IF_6	CALL_9
0x400278d	      0xe800000000	                          call 0x4002792	      2181	normal.c	FUNCTION_7	ELSE_1	IF_3	ELSE_4	IF_6	CALL_9
0x4002792	            0xeb05	                           jmp 0x4002799	      2181	normal.c	FUNCTION_7	ELSE_1	IF_3	ELSE_4	IF_6	CALL_9
0x4002794	      0xe800000000	                          call 0x4002799	      2184	normal.c	FUNCTION_7	ELSE_1	IF_3	CALL_10
0x4002799	          0x833b0a	                    cmp dword [rbx], 0xa	      2187	normal.c	FUNCTION_7	IF_7
0x400279c	            0x7470	                            je 0x400280e	      2187	normal.c	FUNCTION_7	IF_7
0x400279e	      0xbf00000000	                              mov edi, 0	      2188	normal.c	FUNCTION_7	CALL_11
0x40027a3	      0xe800000000	                          call 0x40027a8	      2188	normal.c	FUNCTION_7	CALL_11
0x40027a8	            0x8b03	                    mov eax, dword [rbx]	      2189	normal.c	FUNCTION_7	IF_8
0x40027aa	          0x83f808	                              cmp eax, 8	      2189	normal.c	FUNCTION_7	IF_8
0x40027ad	            0x7519	                           jne 0x40027c8	      2189	normal.c	FUNCTION_7	IF_8
0x40027af	      0xe800000000	                          call 0x40027b4	      2196	normal.c	FUNCTION_7	IF_8	CALL_15
0x40027b4	          0x4889c7	                            mov rdi, rax	      2196	normal.c	FUNCTION_7	IF_8	CALL_15
0x40027b7	      0xe800000000	                          call 0x40027bc	      2196	normal.c	FUNCTION_7	IF_8	CALL_15
0x40027bc	      0xbf00000000	                              mov edi, 0	      2197	normal.c	FUNCTION_7	IF_8	CALL_16
0x40027c1	      0xe800000000	                          call 0x40027c6	      2197	normal.c	FUNCTION_7	IF_8	CALL_16
0x40027c6	            0xeb46	                           jmp 0x400280e	      2197	normal.c	FUNCTION_7	IF_8	CALL_16
0x40027c8	          0x83f809	                              cmp eax, 9	      2199	normal.c	FUNCTION_7	ELSE_7	IF_10
0x40027cb	            0x7541	                           jne 0x400280e	      2199	normal.c	FUNCTION_7	ELSE_7	IF_10
0x40027cd	    0x488b05000000	            mov rax, qword [0x040027d4] 	      2201	normal.c	FUNCTION_7	ELSE_7	IF_10	IF_11
0x40027d4	    0x488bb8f81400	          mov rdi, qword [rax + 0x14f8] 	      2201	normal.c	FUNCTION_7	ELSE_7	IF_10	IF_11
0x40027db	          0x803f00	                       cmp byte [rdi], 0	      2201	normal.c	FUNCTION_7	ELSE_7	IF_10	IF_11
0x40027de	            0x7407	                            je 0x40027e7	      2201	normal.c	FUNCTION_7	ELSE_7	IF_10	IF_11
0x40027e0	      0xe800000000	                          call 0x40027e5	      2202	normal.c	FUNCTION_7	ELSE_7	IF_10	CALL_17
0x40027e5	            0xeb1d	                           jmp 0x4002804	      2202	normal.c	FUNCTION_7	ELSE_7	IF_10	CALL_17
0x40027e7	    0x488b3d000000	            mov rdi, qword [0x040027ee] 	      2203	normal.c	FUNCTION_7	ELSE_7	IF_10	ELSE_8	IF_12
0x40027ee	          0x803f00	                       cmp byte [rdi], 0	      2203	normal.c	FUNCTION_7	ELSE_7	IF_10	ELSE_8	IF_12
0x40027f1	            0x7407	                            je 0x40027fa	      2203	normal.c	FUNCTION_7	ELSE_7	IF_10	ELSE_8	IF_12
0x40027f3	      0xe800000000	                          call 0x40027f8	      2204	normal.c	FUNCTION_7	ELSE_7	IF_10	ELSE_8	IF_12
0x40027f8	            0xeb0a	                           jmp 0x4002804	      2204	normal.c	FUNCTION_7	ELSE_7	IF_10	ELSE_8	IF_12
0x40027fa	      0xbf00000000	                              mov edi, 0	      2206	normal.c	FUNCTION_7	ELSE_7	IF_10	CALL_19
0x40027ff	      0xe800000000	                          call 0x4002804	      2206	normal.c	FUNCTION_7	ELSE_7	IF_10	CALL_19
0x4002804	      0xbf00000000	                              mov edi, 0	      2207	normal.c	FUNCTION_7	ELSE_7	IF_10	CALL_20
0x4002809	      0xe800000000	                          call 0x400280e	      2207	normal.c	FUNCTION_7	ELSE_7	IF_10	CALL_20
0x400280e	              0x5b	                                 pop rbx	      2213	normal.c	FUNCTION_7
0x400280f	              0xc3	                                     ret	      2213	normal.c	FUNCTION_7
invoke_edit	CALL,2:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,1:IF,3	32
0x4000775	            0x4155	                                push r13	      9192	normal.c	FUNCTION_129
0x4000777	            0x4154	                                push r12	      9192	normal.c	FUNCTION_129
0x4000779	              0x55	                                push rbp	      9192	normal.c	FUNCTION_129
0x400077a	              0x53	                                push rbx	      9192	normal.c	FUNCTION_129
0x400077b	        0x4883ec08	                              sub rsp, 8	      9192	normal.c	FUNCTION_129
0x400077f	          0x4889fb	                            mov rbx, rdi	      9192	normal.c	FUNCTION_129
0x4000782	            0x89d5	                            mov ebp, edx	      9192	normal.c	FUNCTION_129
0x4000784	          0x4189cc	                           mov r12d, ecx	      9192	normal.c	FUNCTION_129
0x4000787	            0x85f6	                           test esi, esi	      9198	normal.c	FUNCTION_129	IF_1	CALL_1
0x4000789	            0x750f	                           jne 0x400079a	      9198	normal.c	FUNCTION_129	IF_1	CALL_1
0x400078b	      0xe800000000	                          call 0x4000790	      9198	normal.c	FUNCTION_129	IF_1	CALL_1
0x4000790	    0x41bd00000000	                             mov r13d, 0	      9201	normal.c	FUNCTION_129	ELSE_1
0x4000796	            0x85c0	                           test eax, eax	      9198	normal.c	FUNCTION_129	IF_1	CALL_1
0x4000798	            0x7507	                           jne 0x40007a1	      9198	normal.c	FUNCTION_129	IF_1	CALL_1
0x400079a	    0x448b2d000000	           mov r13d, dword [0x040007a1] 	      9199	normal.c	FUNCTION_129	IF_1
0x40007a1	    0xc70500000000	               mov dword [0x040007ab], 0	      9204	normal.c	FUNCTION_129
0x40007ab	        0x488b5330	            mov rdx, qword [rbx + 0x30] 	      9206	normal.c	FUNCTION_129	IF_2	CALL_2
0x40007af	          0x4489e6	                           mov esi, r12d	      9206	normal.c	FUNCTION_129	IF_2	CALL_2
0x40007b2	            0x89ef	                            mov edi, ebp	      9206	normal.c	FUNCTION_129	IF_2	CALL_2
0x40007b4	      0xe800000000	                          call 0x40007b9	      9206	normal.c	FUNCTION_129	IF_2	CALL_2
0x40007b9	            0x85c0	                           test eax, eax	      9206	normal.c	FUNCTION_129	IF_2	CALL_2
0x40007bb	            0x7404	                            je 0x40007c1	      9206	normal.c	FUNCTION_129	IF_2	CALL_2
0x40007bd	        0x834b3c01	                or dword [rbx + 0x3c], 1	      9207	normal.c	FUNCTION_129	IF_2
0x40007c1	    0x833d00000000	               cmp dword [0x040007c8], 0	      9209	normal.c	FUNCTION_129	IF_3
0x40007c8	            0x7507	                           jne 0x40007d1	      9209	normal.c	FUNCTION_129	IF_3
0x40007ca	    0x44892d000000	           mov dword [0x040007d1], r13d 	      9210	normal.c	FUNCTION_129	IF_3
0x40007d1	        0x4883c408	                              add rsp, 8	      9211	normal.c	FUNCTION_129
0x40007d5	              0x5b	                                 pop rbx	      9211	normal.c	FUNCTION_129
0x40007d6	              0x5d	                                 pop rbp	      9211	normal.c	FUNCTION_129
0x40007d7	            0x415c	                                 pop r12	      9211	normal.c	FUNCTION_129
0x40007d9	            0x415d	                                 pop r13	      9211	normal.c	FUNCTION_129
0x40007db	              0xc3	                                     ret	      9211	normal.c	FUNCTION_129
prep_redo	CALL,9:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,0:IF,7	52
0x4000431	            0x4157	                                push r15	      3623	normal.c	FUNCTION_21
0x4000433	            0x4156	                                push r14	      3623	normal.c	FUNCTION_21
0x4000435	            0x4155	                                push r13	      3623	normal.c	FUNCTION_21
0x4000437	            0x4154	                                push r12	      3623	normal.c	FUNCTION_21
0x4000439	              0x55	                                push rbp	      3623	normal.c	FUNCTION_21
0x400043a	              0x53	                                push rbx	      3623	normal.c	FUNCTION_21
0x400043b	        0x4883ec08	                              sub rsp, 8	      3623	normal.c	FUNCTION_21
0x400043f	          0x4189ff	                           mov r15d, edi	      3623	normal.c	FUNCTION_21
0x4000442	          0x4989f6	                            mov r14, rsi	      3623	normal.c	FUNCTION_21
0x4000445	          0x4189d5	                           mov r13d, edx	      3623	normal.c	FUNCTION_21
0x4000448	          0x4189cc	                           mov r12d, ecx	      3623	normal.c	FUNCTION_21
0x400044b	          0x4489c5	                            mov ebp, r8d	      3623	normal.c	FUNCTION_21
0x400044e	          0x4489cb	                            mov ebx, r9d	      3623	normal.c	FUNCTION_21
0x4000451	      0xe800000000	                          call 0x4000456	      3624	normal.c	FUNCTION_21	CALL_1
0x4000456	          0x4585ff	                         test r15d, r15d	      3625	normal.c	FUNCTION_21	IF_1
0x4000459	            0x7412	                            je 0x400046d	      3625	normal.c	FUNCTION_21	IF_1
0x400045b	      0xbf22000000	                           mov edi, 0x22	      3627	normal.c	FUNCTION_21	IF_1	CALL_2
0x4000460	      0xe800000000	                          call 0x4000465	      3627	normal.c	FUNCTION_21	IF_1	CALL_2
0x4000465	          0x4489ff	                           mov edi, r15d	      3628	normal.c	FUNCTION_21	IF_1	CALL_3
0x4000468	      0xe800000000	                          call 0x400046d	      3628	normal.c	FUNCTION_21	IF_1	CALL_3
0x400046d	          0x4d85f6	                           test r14, r14	      3630	normal.c	FUNCTION_21	IF_2
0x4000470	            0x7408	                            je 0x400047a	      3630	normal.c	FUNCTION_21	IF_2
0x4000472	          0x4c89f7	                            mov rdi, r14	      3631	normal.c	FUNCTION_21	CALL_4
0x4000475	      0xe800000000	                          call 0x400047a	      3631	normal.c	FUNCTION_21	CALL_4
0x400047a	          0x4585ed	                         test r13d, r13d	      3633	normal.c	FUNCTION_21	IF_3
0x400047d	            0x7408	                            je 0x4000487	      3633	normal.c	FUNCTION_21	IF_3
0x400047f	          0x4489ef	                           mov edi, r13d	      3634	normal.c	FUNCTION_21	CALL_5
0x4000482	      0xe800000000	                          call 0x4000487	      3634	normal.c	FUNCTION_21	CALL_5
0x4000487	          0x4585e4	                         test r12d, r12d	      3635	normal.c	FUNCTION_21	IF_4
0x400048a	            0x7408	                            je 0x4000494	      3635	normal.c	FUNCTION_21	IF_4
0x400048c	          0x4489e7	                           mov edi, r12d	      3636	normal.c	FUNCTION_21	CALL_6
0x400048f	      0xe800000000	                          call 0x4000494	      3636	normal.c	FUNCTION_21	CALL_6
0x4000494	            0x85ed	                           test ebp, ebp	      3637	normal.c	FUNCTION_21	IF_5
0x4000496	            0x7407	                            je 0x400049f	      3637	normal.c	FUNCTION_21	IF_5
0x4000498	            0x89ef	                            mov edi, ebp	      3638	normal.c	FUNCTION_21	CALL_7
0x400049a	      0xe800000000	                          call 0x400049f	      3638	normal.c	FUNCTION_21	CALL_7
0x400049f	            0x85db	                           test ebx, ebx	      3639	normal.c	FUNCTION_21	IF_6
0x40004a1	            0x7407	                            je 0x40004aa	      3639	normal.c	FUNCTION_21	IF_6
0x40004a3	            0x89df	                            mov edi, ebx	      3640	normal.c	FUNCTION_21	CALL_8
0x40004a5	      0xe800000000	                          call 0x40004aa	      3640	normal.c	FUNCTION_21	CALL_8
0x40004aa	      0x837c244000	               cmp dword [rsp + 0x40], 0	      3641	normal.c	FUNCTION_21	IF_7
0x40004af	            0x7409	                            je 0x40004ba	      3641	normal.c	FUNCTION_21	IF_7
0x40004b1	        0x8b7c2440	            mov edi, dword [rsp + 0x40] 	      3642	normal.c	FUNCTION_21	CALL_9
0x40004b5	      0xe800000000	                          call 0x40004ba	      3642	normal.c	FUNCTION_21	CALL_9
0x40004ba	        0x4883c408	                              add rsp, 8	      3643	normal.c	FUNCTION_21
0x40004be	              0x5b	                                 pop rbx	      3643	normal.c	FUNCTION_21
0x40004bf	              0x5d	                                 pop rbp	      3643	normal.c	FUNCTION_21
0x40004c0	            0x415c	                                 pop r12	      3643	normal.c	FUNCTION_21
0x40004c2	            0x415d	                                 pop r13	      3643	normal.c	FUNCTION_21
0x40004c4	            0x415e	                                 pop r14	      3643	normal.c	FUNCTION_21
0x40004c6	            0x415f	                                 pop r15	      3643	normal.c	FUNCTION_21
0x40004c8	              0xc3	                                     ret	      3643	normal.c	FUNCTION_21
nv_undo	CALL,2:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,1:IF,1	13
0x4001ebe	        0x4883ec08	                              sub rsp, 8	      6955	normal.c	FUNCTION_86
0x4001ec2	          0x488b07	                    mov rax, qword [rdi]	      6956	normal.c	FUNCTION_86	IF_1
0x4001ec5	          0x83380c	                    cmp dword [rax], 0xc	      6956	normal.c	FUNCTION_86	IF_1
0x4001ec8	            0x7409	                            je 0x4001ed3	      6956	normal.c	FUNCTION_86	IF_1
0x4001eca	    0x833d00000000	               cmp dword [0x04001ed1], 0	      6956	normal.c	FUNCTION_86	IF_1
0x4001ed1	            0x7415	                            je 0x4001ee8	      6956	normal.c	FUNCTION_86	IF_1
0x4001ed3	    0xc7470c670000	            mov dword [rdi + 0xc], 0x67 	      6959	normal.c	FUNCTION_86	IF_1
0x4001eda	    0xc74710750000	           mov dword [rdi + 0x10], 0x75 	      6960	normal.c	FUNCTION_86	IF_1
0x4001ee1	      0xe878fcffff	                    call sym.nv_operator	      6961	normal.c	FUNCTION_86	IF_1	CALL_1
0x4001ee6	            0xeb05	                           jmp 0x4001eed	      6961	normal.c	FUNCTION_86	IF_1	CALL_1
0x4001ee8	      0xe843e4ffff	                       call sym.nv_kundo	      6964	normal.c	FUNCTION_86	CALL_2
0x4001eed	        0x4883c408	                              add rsp, 8	      6965	normal.c	FUNCTION_86
0x4001ef1	              0xc3	                                     ret	      6965	normal.c	FUNCTION_86
nv_tabmenu	CALL,2:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,0:IF,1	8
0x40071e8	        0x4883ec08	                              sub rsp, 8	      5291	normal.c	FUNCTION_55
0x40071ec	          0x488b3f	                    mov rdi, qword [rdi]	      5292	normal.c	FUNCTION_55	IF_1
0x40071ef	          0x833f00	                      cmp dword [rdi], 0	      5292	normal.c	FUNCTION_55	IF_1
0x40071f2	            0x7405	                            je 0x40071f9	      5292	normal.c	FUNCTION_55	IF_1
0x40071f4	      0xe83f90ffff	                    call sym.clearopbeep	      5293	normal.c	FUNCTION_55	CALL_1
0x40071f9	      0xe800000000	                          call 0x40071fe	      5296	normal.c	FUNCTION_55	CALL_2
0x40071fe	        0x4883c408	                              add rsp, 8	      5297	normal.c	FUNCTION_55
0x4007202	              0xc3	                                     ret	      5297	normal.c	FUNCTION_55
get_visual_text	CALL,8:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,2:IF,6	82
0x4007203	            0x4154	                                push r12	      5827	normal.c	FUNCTION_67
0x4007205	              0x55	                                push rbp	      5827	normal.c	FUNCTION_67
0x4007206	              0x53	                                push rbx	      5827	normal.c	FUNCTION_67
0x4007207	          0x4889fb	                            mov rbx, rdi	      5827	normal.c	FUNCTION_67
0x400720a	          0x4989f4	                            mov r12, rsi	      5827	normal.c	FUNCTION_67
0x400720d	          0x4889d5	                            mov rbp, rdx	      5827	normal.c	FUNCTION_67
0x4007210	    0x833d00000000	           cmp dword [0x04007217], 0x56 	      5828	normal.c	FUNCTION_67	IF_1
0x4007217	     0xf8409010000	                            je 0x4007326	      5828	normal.c	FUNCTION_67	IF_1
0x400721d	      0xe8eeb5ffff	               call sym.unadjust_for_sel	      5829	normal.c	FUNCTION_67	CALL_1
0x4007222	    0x488b3d000000	            mov rdi, qword [0x04007229] 	      5830	normal.c	FUNCTION_67	IF_2
0x4007229	        0x488b4738	            mov rax, qword [rdi + 0x38] 	      5830	normal.c	FUNCTION_67	IF_2
0x400722d	    0x483905000000	            cmp qword [0x04007234], rax 	      5830	normal.c	FUNCTION_67	IF_2
0x4007234	            0x7420	                            je 0x4007256	      5830	normal.c	FUNCTION_67	IF_2
0x4007236	      0xb800000000	                              mov eax, 0	      5834	normal.c	FUNCTION_67	IF_2
0x400723b	          0x4885db	                           test rbx, rbx	      5832	normal.c	FUNCTION_67	IF_2	IF_3
0x400723e	     0xf84ff000000	                            je 0x4007343	      5832	normal.c	FUNCTION_67	IF_2	IF_3
0x4007244	          0x488b3b	                    mov rdi, qword [rbx]	      5833	normal.c	FUNCTION_67	IF_2	CALL_2
0x4007247	      0xe8ec8fffff	                    call sym.clearopbeep	      5833	normal.c	FUNCTION_67	IF_2	CALL_2
0x400724c	      0xb800000000	                              mov eax, 0	      5834	normal.c	FUNCTION_67	IF_2
0x4007251	      0xe9ed000000	                           jmp 0x4007343	      5834	normal.c	FUNCTION_67	IF_2
0x4007256	    0x833d00000000	           cmp dword [0x0400725d], 0x56 	      5836	normal.c	FUNCTION_67	IF_4
0x400725d	            0x752c	                           jne 0x400728b	      5836	normal.c	FUNCTION_67	IF_4
0x400725f	      0xe800000000	                          call 0x4007264	      5838	normal.c	FUNCTION_67	IF_4	CALL_3
0x4007264	          0x4889c7	                            mov rdi, rax	      5838	normal.c	FUNCTION_67	IF_4	CALL_3
0x4007267	        0x49890424	                    mov qword [r12], rax	      5838	normal.c	FUNCTION_67	IF_4	CALL_3
0x400726b	      0xb800000000	                              mov eax, 0	      5839	normal.c	FUNCTION_67	IF_4	CALL_4
0x4007270	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      5839	normal.c	FUNCTION_67	IF_4	CALL_4
0x4007277	            0xf2ae	              repne scasb al, byte [rdi]	      5839	normal.c	FUNCTION_67	IF_4	CALL_4
0x4007279	          0x4889c8	                            mov rax, rcx	      5839	normal.c	FUNCTION_67	IF_4	CALL_4
0x400727c	          0x48f7d0	                                 not rax	      5839	normal.c	FUNCTION_67	IF_4	CALL_4
0x400727f	        0x4883e801	                              sub rax, 1	      5839	normal.c	FUNCTION_67	IF_4	CALL_4
0x4007283	          0x894500	                    mov dword [rbp], eax	      5839	normal.c	FUNCTION_67	IF_4	CALL_4
0x4007286	      0xe98f000000	                           jmp 0x400731a	      5839	normal.c	FUNCTION_67	IF_4	CALL_4
0x400728b	          0x8b5740	            mov edx, dword [rdi + 0x40] 	      5843	normal.c	FUNCTION_67	ELSE_1	IF_5	CALL_5
0x400728e	    0x8b0500000000	            mov eax, dword [0x04007294] 	      5843	normal.c	FUNCTION_67	ELSE_1	IF_5	CALL_5
0x4007294	            0x39c2	                            cmp edx, eax	      5843	normal.c	FUNCTION_67	ELSE_1	IF_5	CALL_5
0x4007296	            0x7407	                            je 0x400729f	      5843	normal.c	FUNCTION_67	ELSE_1	IF_5	CALL_5
0x4007298	            0x39c2	                            cmp edx, eax	      5843	normal.c	FUNCTION_67	ELSE_1	IF_5	CALL_5
0x400729a	           0xf9cc0	                                 setl al	      5843	normal.c	FUNCTION_67	ELSE_1	IF_5	CALL_5
0x400729d	            0xeb0c	                           jmp 0x40072ab	      5843	normal.c	FUNCTION_67	ELSE_1	IF_5	CALL_5
0x400729f	    0x8b0500000000	            mov eax, dword [0x040072a5] 	      5843	normal.c	FUNCTION_67	ELSE_1	IF_5	CALL_5
0x40072a5	          0x394744	            cmp dword [rdi + 0x44], eax 	      5843	normal.c	FUNCTION_67	ELSE_1	IF_5	CALL_5
0x40072a8	           0xf9cc0	                                 setl al	      5843	normal.c	FUNCTION_67	ELSE_1	IF_5	CALL_5
0x40072ab	            0x84c0	                             test al, al	      5843	normal.c	FUNCTION_67	ELSE_1	IF_5	CALL_5
0x40072ad	            0x7425	                            je 0x40072d4	      5843	normal.c	FUNCTION_67	ELSE_1	IF_5	CALL_5
0x40072af	        0x4883c738	                           add rdi, 0x38	      5845	normal.c	FUNCTION_67	ELSE_1	IF_5	CALL_6
0x40072b3	      0xe800000000	                          call 0x40072b8	      5845	normal.c	FUNCTION_67	ELSE_1	IF_5	CALL_6
0x40072b8	        0x49890424	                    mov qword [r12], rax	      5845	normal.c	FUNCTION_67	ELSE_1	IF_5	CALL_6
0x40072bc	    0x8b0500000000	            mov eax, dword [0x040072c2] 	      5846	normal.c	FUNCTION_67	ELSE_1	IF_5
0x40072c2	    0x488b15000000	            mov rdx, qword [0x040072c9] 	      5846	normal.c	FUNCTION_67	ELSE_1	IF_5
0x40072c9	          0x2b4240	             sub eax, dword [rdx + 0x40]	      5846	normal.c	FUNCTION_67	ELSE_1	IF_5
0x40072cc	          0x83c001	                              add eax, 1	      5846	normal.c	FUNCTION_67	ELSE_1	IF_5
0x40072cf	          0x894500	                    mov dword [rbp], eax	      5846	normal.c	FUNCTION_67	ELSE_1	IF_5
0x40072d2	            0xeb24	                           jmp 0x40072f8	      5846	normal.c	FUNCTION_67	ELSE_1	IF_5
0x40072d4	      0xbf00000000	                              mov edi, 0	      5850	normal.c	FUNCTION_67	ELSE_1	ELSE_2	CALL_7
0x40072d9	      0xe800000000	                          call 0x40072de	      5850	normal.c	FUNCTION_67	ELSE_1	ELSE_2	CALL_7
0x40072de	        0x49890424	                    mov qword [r12], rax	      5850	normal.c	FUNCTION_67	ELSE_1	ELSE_2	CALL_7
0x40072e2	    0x488b05000000	            mov rax, qword [0x040072e9] 	      5851	normal.c	FUNCTION_67	ELSE_1	ELSE_2
0x40072e9	          0x8b4040	            mov eax, dword [rax + 0x40] 	      5851	normal.c	FUNCTION_67	ELSE_1	ELSE_2
0x40072ec	    0x2b0500000000	             sub eax, dword [0x040072f2]	      5851	normal.c	FUNCTION_67	ELSE_1	ELSE_2
0x40072f2	          0x83c001	                              add eax, 1	      5851	normal.c	FUNCTION_67	ELSE_1	ELSE_2
0x40072f5	          0x894500	                    mov dword [rbp], eax	      5851	normal.c	FUNCTION_67	ELSE_1	ELSE_2
0x40072f8	    0x833d00000000	               cmp dword [0x040072ff], 0	      5854	normal.c	FUNCTION_67	ELSE_1	IF_6
0x40072ff	            0x7419	                            je 0x400731a	      5854	normal.c	FUNCTION_67	ELSE_1	IF_6
0x4007301	        0x48634500	                 movsxd rax, dword [rbp]	      5856	normal.c	FUNCTION_67	ELSE_1	IF_6
0x4007305	        0x498b1424	                    mov rdx, qword [r12]	      5856	normal.c	FUNCTION_67	ELSE_1	IF_6
0x4007309	      0x488d7c02ff	                lea rdi, [rdx + rax - 1]	      5856	normal.c	FUNCTION_67	ELSE_1	IF_6
0x400730e	    0xff1500000000	                 call qword [0x04007314]	      5856	normal.c	FUNCTION_67	ELSE_1	IF_6
0x4007314	          0x83e801	                              sub eax, 1	      5856	normal.c	FUNCTION_67	ELSE_1	IF_6
0x4007317	           0x14500	                    add dword [rbp], eax	      5856	normal.c	FUNCTION_67	ELSE_1	IF_6
0x400731a	      0xe800000000	                          call 0x400731f	      5859	normal.c	FUNCTION_67	CALL_8
0x400731f	      0xb801000000	                              mov eax, 1	      5860	normal.c	FUNCTION_67
0x4007324	            0xeb1d	                           jmp 0x4007343	      5860	normal.c	FUNCTION_67
0x4007326	    0x488b05000000	            mov rax, qword [0x0400732d] 	      5830	normal.c	FUNCTION_67	IF_2
0x400732d	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5830	normal.c	FUNCTION_67	IF_2
0x4007331	    0x483905000000	            cmp qword [0x04007338], rax 	      5830	normal.c	FUNCTION_67	IF_2
0x4007338	     0xf85f8feffff	                           jne 0x4007236	      5830	normal.c	FUNCTION_67	IF_2
0x400733e	      0xe91cffffff	                           jmp 0x400725f	      5830	normal.c	FUNCTION_67	IF_2
0x4007343	              0x5b	                                 pop rbx	      5861	normal.c	FUNCTION_67
0x4007344	              0x5d	                                 pop rbp	      5861	normal.c	FUNCTION_67
0x4007345	            0x415c	                                 pop r12	      5861	normal.c	FUNCTION_67
0x4007347	              0xc3	                                     ret	      5861	normal.c	FUNCTION_67
nv_ctrlg	CALL,3:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,1:IF,2	20
0x40024a4	              0x53	                                push rbx	      5428	normal.c	FUNCTION_59
0x40024a5	    0x833d00000000	               cmp dword [0x040024ac], 0	      5429	normal.c	FUNCTION_59	IF_1
0x40024ac	            0x741a	                            je 0x40024c8	      5429	normal.c	FUNCTION_59	IF_1
0x40024ae	    0x833d00000000	               cmp dword [0x040024b5], 0	      5431	normal.c	FUNCTION_59	IF_1
0x40024b5	           0xf94c0	                                 sete al	      5431	normal.c	FUNCTION_59	IF_1
0x40024b8	           0xfb6c0	                           movzx eax, al	      5431	normal.c	FUNCTION_59	IF_1
0x40024bb	    0x890500000000	            mov dword [0x040024c1], eax 	      5431	normal.c	FUNCTION_59	IF_1
0x40024c1	      0xe800000000	                          call 0x40024c6	      5432	normal.c	FUNCTION_59	IF_1	CALL_1
0x40024c6	            0xeb22	                           jmp 0x40024ea	      5432	normal.c	FUNCTION_59	IF_1	CALL_1
0x40024c8	          0x4889fb	                            mov rbx, rdi	      5432	normal.c	FUNCTION_59	IF_1	CALL_1
0x40024cb	          0x488b3f	                    mov rdi, qword [rdi]	      5434	normal.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x40024ce	      0xe8b0ddffff	                   call sym.checkclearop	      5434	normal.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x40024d3	            0x85c0	                           test eax, eax	      5434	normal.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x40024d5	            0x7513	                           jne 0x40024ea	      5434	normal.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x40024d7	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	      5436	normal.c	FUNCTION_59	ELSE_1	IF_2
0x40024db	      0xba01000000	                              mov edx, 1	      5436	normal.c	FUNCTION_59	ELSE_1	IF_2
0x40024e0	      0xbe00000000	                              mov esi, 0	      5436	normal.c	FUNCTION_59	ELSE_1	IF_2
0x40024e5	      0xe800000000	                          call 0x40024ea	      5436	normal.c	FUNCTION_59	ELSE_1	IF_2
0x40024ea	              0x5b	                                 pop rbx	      5437	normal.c	FUNCTION_59
0x40024eb	              0xc3	                                     ret	      5437	normal.c	FUNCTION_59
add_to_showcmd_c	CALL,2:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,0:IF,1	7
0x400666a	        0x4883ec08	                              sub rsp, 8	      3906	normal.c	FUNCTION_30
0x400666e	      0xe800000000	                          call 0x4006673	      3907	normal.c	FUNCTION_30	IF_1	CALL_1
0x4006673	            0x85c0	                           test eax, eax	      3907	normal.c	FUNCTION_30	IF_1	CALL_1
0x4006675	            0x7505	                           jne 0x400667c	      3907	normal.c	FUNCTION_30	IF_1	CALL_1
0x4006677	      0xe800000000	                          call 0x400667c	      3908	normal.c	FUNCTION_30	CALL_2
0x400667c	        0x4883c408	                              add rsp, 8	      3909	normal.c	FUNCTION_30
0x4006680	              0xc3	                                     ret	      3909	normal.c	FUNCTION_30
nv_zet	CALL,88:SWITCH,1:DO,0:FOR,1:functions,1:WHILE,0:ELSE,23:IF,50	957
0x4007348	            0x4157	                                push r15	      4755	normal.c	FUNCTION_51
0x400734a	            0x4156	                                push r14	      4755	normal.c	FUNCTION_51
0x400734c	            0x4155	                                push r13	      4755	normal.c	FUNCTION_51
0x400734e	            0x4154	                                push r12	      4755	normal.c	FUNCTION_51
0x4007350	              0x55	                                push rbp	      4755	normal.c	FUNCTION_51
0x4007351	              0x53	                                push rbx	      4755	normal.c	FUNCTION_51
0x4007352	        0x4883ec38	                           sub rsp, 0x38	      4755	normal.c	FUNCTION_51
0x4007356	          0x4889fd	                            mov rbp, rdi	      4755	normal.c	FUNCTION_51
0x4007359	    0x64488b042528	                mov rax, qword fs:[0x28]	      4755	normal.c	FUNCTION_51
0x4007362	      0x4889442428	             mov qword [rsp + 0x28], rax	      4755	normal.c	FUNCTION_51
0x4007367	            0x31c0	                            xor eax, eax	      4755	normal.c	FUNCTION_51
0x4007369	          0x8b5f10	            mov ebx, dword [rdi + 0x10] 	      4758	normal.c	FUNCTION_51
0x400736c	    0x488b05000000	            mov rax, qword [0x04007373] 	      4760	normal.c	FUNCTION_51
0x4007373	    0x4c8ba0e80100	           mov r12, qword [rax + 0x1e8] 	      4760	normal.c	FUNCTION_51
0x400737a	    0x448ba8d40100	          mov r13d, dword [rax + 0x1d4] 	      4761	normal.c	FUNCTION_51
0x4007381	          0x8d43d0	                   lea eax, [rbx - 0x30]	      4767	normal.c	FUNCTION_51	IF_1	CALL_1
0x4007384	          0x83f809	                              cmp eax, 9	      4767	normal.c	FUNCTION_51	IF_1	CALL_1
0x4007387	     0xf8741010000	                            ja 0x40074ce	      4767	normal.c	FUNCTION_51	IF_1	CALL_1
0x400738d	          0x488b3f	                    mov rdi, qword [rdi]	      4772	normal.c	FUNCTION_51	IF_1	IF_2	CALL_2
0x4007390	      0xe8ee8effff	                   call sym.checkclearop	      4772	normal.c	FUNCTION_51	IF_1	IF_2	CALL_2
0x4007395	            0x85c0	                           test eax, eax	      4772	normal.c	FUNCTION_51	IF_1	IF_2	CALL_2
0x4007397	     0xf8550100000	                           jne 0x40083ed	      4772	normal.c	FUNCTION_51	IF_1	IF_2	CALL_2
0x400739d	          0x83eb30	                           sub ebx, 0x30	      4774	normal.c	FUNCTION_51	IF_1
0x40073a0	          0x4c63f3	                         movsxd r14, ebx	      4774	normal.c	FUNCTION_51	IF_1
0x40073a3	    0x49bf67666666	          movabs r15, 0x6666666666666667	      4790	normal.c	FUNCTION_51	IF_1	FOR_1	IF_3
0x40073ad	    0xc70500000000	               mov dword [0x040073b7], 1	      4778	normal.c	FUNCTION_51	IF_1	FOR_1
0x40073b7	    0x830500000000	               add dword [0x040073be], 1	      4780	normal.c	FUNCTION_51	IF_1	FOR_1
0x40073be	    0x830500000000	               add dword [0x040073c5], 1	      4781	normal.c	FUNCTION_51	IF_1	FOR_1
0x40073c5	      0xe800000000	                          call 0x40073ca	      4782	normal.c	FUNCTION_51	IF_1	FOR_1	CALL_3
0x40073ca	            0x89c3	                            mov ebx, eax	      4782	normal.c	FUNCTION_51	IF_1	FOR_1	CALL_3
0x40073cc	    0x488b05000000	            mov rax, qword [0x040073d3] 	      4783	normal.c	FUNCTION_51	IF_1	FOR_1	CALL_4
0x40073d3	          0x803800	                       cmp byte [rax], 0	      4783	normal.c	FUNCTION_51	IF_1	FOR_1	CALL_4
0x40073d6	            0x743c	                            je 0x4007414	      4783	normal.c	FUNCTION_51	IF_1	FOR_1	CALL_4
0x40073d8	    0x833d00000000	               cmp dword [0x040073df], 0	      4783	normal.c	FUNCTION_51	IF_1	FOR_1	CALL_4
0x40073df	            0x7509	                           jne 0x40073ea	      4783	normal.c	FUNCTION_51	IF_1	FOR_1	CALL_4
0x40073e1	    0x833d00000000	               cmp dword [0x040073e8], 0	      4783	normal.c	FUNCTION_51	IF_1	FOR_1	CALL_4
0x40073e8	            0x742a	                            je 0x4007414	      4783	normal.c	FUNCTION_51	IF_1	FOR_1	CALL_4
0x40073ea	    0x833d00000000	               cmp dword [0x040073f1], 0	      4783	normal.c	FUNCTION_51	IF_1	FOR_1	CALL_4
0x40073f1	            0x7521	                           jne 0x4007414	      4783	normal.c	FUNCTION_51	IF_1	FOR_1	CALL_4
0x40073f3	            0x85db	                           test ebx, ebx	      4783	normal.c	FUNCTION_51	IF_1	FOR_1	CALL_4
0x40073f5	            0x781d	                            js 0x4007414	      4783	normal.c	FUNCTION_51	IF_1	FOR_1	CALL_4
0x40073f7	    0x81fbff000000	                           cmp ebx, 0xff	      4783	normal.c	FUNCTION_51	IF_1	FOR_1	CALL_4
0x40073fd	            0x7f0c	                            jg 0x400740b	      4783	normal.c	FUNCTION_51	IF_1	FOR_1	CALL_4
0x40073ff	          0x4863db	                         movsxd rbx, ebx	      4783	normal.c	FUNCTION_51	IF_1	FOR_1	CALL_4
0x4007402	     0xfb69b000000	                   movzx ebx, byte [rbx]	      4783	normal.c	FUNCTION_51	IF_1	FOR_1	CALL_4
0x4007409	            0xeb09	                           jmp 0x4007414	      4783	normal.c	FUNCTION_51	IF_1	FOR_1	CALL_4
0x400740b	            0x89df	                            mov edi, ebx	      4783	normal.c	FUNCTION_51	IF_1	FOR_1	CALL_4
0x400740d	      0xe800000000	                          call 0x4007412	      4783	normal.c	FUNCTION_51	IF_1	FOR_1	CALL_4
0x4007412	            0x89c3	                            mov ebx, eax	      4783	normal.c	FUNCTION_51	IF_1	FOR_1	CALL_4
0x4007414	    0x832d00000000	               sub dword [0x0400741b], 1	      4784	normal.c	FUNCTION_51	IF_1	FOR_1
0x400741b	    0x832d00000000	               sub dword [0x04007422], 1	      4785	normal.c	FUNCTION_51	IF_1	FOR_1
0x4007422	            0x89df	                            mov edi, ebx	      4787	normal.c	FUNCTION_51	IF_1	FOR_1	CALL_5
0x4007424	      0xe800000000	                          call 0x4007429	      4787	normal.c	FUNCTION_51	IF_1	FOR_1	CALL_5
0x4007429	    0x81fb95bbffff	                     cmp ebx, 0xffffbb95	      4789	normal.c	FUNCTION_51	IF_1	FOR_1	IF_3
0x400742f	            0x7408	                            je 0x4007439	      4789	normal.c	FUNCTION_51	IF_1	FOR_1	IF_3
0x4007431	    0x81fb03afffff	                     cmp ebx, 0xffffaf03	      4789	normal.c	FUNCTION_51	IF_1	FOR_1	IF_3
0x4007437	            0x7519	                           jne 0x4007452	      4789	normal.c	FUNCTION_51	IF_1	FOR_1	IF_3
0x4007439	          0x4c89f0	                            mov rax, r14	      4790	normal.c	FUNCTION_51	IF_1	FOR_1	IF_3
0x400743c	          0x49f7ef	                                imul r15	      4790	normal.c	FUNCTION_51	IF_1	FOR_1	IF_3
0x400743f	        0x48c1fa02	                              sar rdx, 2	      4790	normal.c	FUNCTION_51	IF_1	FOR_1	IF_3
0x4007443	        0x49c1fe3f	                           sar r14, 0x3f	      4790	normal.c	FUNCTION_51	IF_1	FOR_1	IF_3
0x4007447	          0x4c29f2	                            sub rdx, r14	      4790	normal.c	FUNCTION_51	IF_1	FOR_1	IF_3
0x400744a	          0x4989d6	                            mov r14, rdx	      4790	normal.c	FUNCTION_51	IF_1	FOR_1	IF_3
0x400744d	      0xe95bffffff	                           jmp 0x40073ad	      4790	normal.c	FUNCTION_51	IF_1	FOR_1	IF_3
0x4007452	          0x8d43d0	                   lea eax, [rbx - 0x30]	      4791	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_1	IF_4	CALL_6
0x4007455	          0x83f809	                              cmp eax, 9	      4791	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_1	IF_4	CALL_6
0x4007458	            0x7713	                            ja 0x400746d	      4791	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_1	IF_4	CALL_6
0x400745a	        0x4b8d04b6	                  lea rax, [r14 + r14*4]	      4792	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_1	IF_4
0x400745e	          0x83eb30	                           sub ebx, 0x30	      4792	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_1	IF_4
0x4007461	          0x4863db	                         movsxd rbx, ebx	      4792	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_1	IF_4
0x4007464	        0x4c8d3443	                  lea r14, [rbx + rax*2]	      4792	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_1	IF_4
0x4007468	      0xe940ffffff	                           jmp 0x40073ad	      4792	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_1	IF_4
0x400746d	          0x83fb0d	                            cmp ebx, 0xd	      4793	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_2	IF_5
0x4007470	            0x7514	                           jne 0x4007486	      4793	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_2	IF_5
0x4007472	    0xc70500000000	               mov dword [0x0400747c], 1	      4796	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_2	IF_5
0x400747c	          0x4489f7	                           mov edi, r14d	      4798	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_2	IF_5	CALL_7
0x400747f	      0xe800000000	                          call 0x4007484	      4798	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_2	IF_5	CALL_7
0x4007484	            0xeb39	                           jmp 0x40074bf	      4799	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_2	IF_5
0x4007486	            0x89d8	                            mov eax, ebx	      4801	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_3	IF_6
0x4007488	          0x83e0fb	                     and eax, 0xfffffffb	      4801	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_3	IF_6
0x400748b	          0x83f868	                           cmp eax, 0x68	      4801	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_3	IF_6
0x400748e	            0x7410	                            je 0x40074a0	      4801	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_3	IF_6
0x4007490	    0x81fb9593ffff	                     cmp ebx, 0xffff9395	      4804	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_3	IF_6
0x4007496	            0x7408	                            je 0x40074a0	      4804	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_3	IF_6
0x4007498	    0x81fb958dffff	                     cmp ebx, 0xffff8d95	      4804	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_3	IF_6
0x400749e	            0x7516	                           jne 0x40074b6	      4804	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_3	IF_6
0x40074a0	          0x4d85f6	                           test r14, r14	      4806	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_3	IF_6
0x40074a3	            0x7407	                            je 0x40074ac	      4806	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_3	IF_6
0x40074a5	      0x4c0faf7530	            imul r14, qword [rbp + 0x30]	      4806	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_3	IF_6
0x40074aa	            0xeb04	                           jmp 0x40074b0	      4806	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_3	IF_6
0x40074ac	        0x4c8b7530	            mov r14, qword [rbp + 0x30] 	      4806	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_3	IF_6
0x40074b0	        0x4c897530	            mov qword [rbp + 0x30], r14 	      4806	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_3	IF_6
0x40074b4	            0xeb18	                           jmp 0x40074ce	      4807	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_3	IF_6
0x40074b6	        0x488b7d00	                    mov rdi, qword [rbp]	      4811	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_4	CALL_8
0x40074ba	      0xe8798dffff	                    call sym.clearopbeep	      4811	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_4	CALL_8
0x40074bf	        0x488b4500	                    mov rax, qword [rbp]	      4815	normal.c	FUNCTION_51	IF_1
0x40074c3	    0xc70000000000	                      mov dword [rax], 0	      4815	normal.c	FUNCTION_51	IF_1
0x40074c9	      0xe91f0f0000	                           jmp 0x40083ed	      4816	normal.c	FUNCTION_51	IF_1
0x40074ce	          0x8b7510	            mov esi, dword [rbp + 0x10] 	      4825	normal.c	FUNCTION_51	IF_7
0x40074d1	            0x89f0	                            mov eax, esi	      4820	normal.c	FUNCTION_51	IF_7
0x40074d3	          0x83e0df	                     and eax, 0xffffffdf	      4820	normal.c	FUNCTION_51	IF_7
0x40074d6	          0x83f846	                           cmp eax, 0x46	      4820	normal.c	FUNCTION_51	IF_7
0x40074d9	            0x7434	                            je 0x400750f	      4820	normal.c	FUNCTION_51	IF_7
0x40074db	    0x833d00000000	               cmp dword [0x040074e2], 0	      4826	normal.c	FUNCTION_51	IF_7	CALL_9
0x40074e2	            0x740f	                            je 0x40074f3	      4826	normal.c	FUNCTION_51	IF_7	CALL_9
0x40074e4	      0xbf00000000	                              mov edi, 0	      4826	normal.c	FUNCTION_51	IF_7	CALL_9
0x40074e9	      0xe800000000	                          call 0x40074ee	      4826	normal.c	FUNCTION_51	IF_7	CALL_9
0x40074ee	          0x4885c0	                           test rax, rax	      4826	normal.c	FUNCTION_51	IF_7	CALL_9
0x40074f1	            0x751c	                           jne 0x400750f	      4826	normal.c	FUNCTION_51	IF_7	CALL_9
0x40074f3	          0x8b4510	            mov eax, dword [rbp + 0x10] 	      4827	normal.c	FUNCTION_51	IF_7
0x40074f6	          0x83e86a	                           sub eax, 0x6a	      4827	normal.c	FUNCTION_51	IF_7
0x40074f9	          0x83f801	                              cmp eax, 1	      4827	normal.c	FUNCTION_51	IF_7
0x40074fc	            0x7611	                           jbe 0x400750f	      4827	normal.c	FUNCTION_51	IF_7
0x40074fe	        0x488b7d00	                    mov rdi, qword [rbp]	      4830	normal.c	FUNCTION_51	IF_7	CALL_10
0x4007502	      0xe87c8dffff	                   call sym.checkclearop	      4830	normal.c	FUNCTION_51	IF_7	CALL_10
0x4007507	            0x85c0	                           test eax, eax	      4828	normal.c	FUNCTION_51	IF_7
0x4007509	     0xf85de0e0000	                           jne 0x40083ed	      4828	normal.c	FUNCTION_51	IF_7
0x400750f	            0x89de	                            mov esi, ebx	      4837	normal.c	FUNCTION_51	IF_8	CALL_11
0x4007511	      0xbf00000000	                              mov edi, 0	      4837	normal.c	FUNCTION_51	IF_8	CALL_11
0x4007516	      0xe800000000	                          call 0x400751b	      4837	normal.c	FUNCTION_51	IF_8	CALL_11
0x400751b	          0x4885c0	                           test rax, rax	      4837	normal.c	FUNCTION_51	IF_8	CALL_11
0x400751e	            0x744f	                            je 0x400756f	      4837	normal.c	FUNCTION_51	IF_8	CALL_11
0x4007520	        0x488b4528	            mov rax, qword [rbp + 0x28] 	      4838	normal.c	FUNCTION_51	IF_8
0x4007524	          0x4885c0	                           test rax, rax	      4838	normal.c	FUNCTION_51	IF_8
0x4007527	     0xf847d0c0000	                            je 0x40081aa	      4838	normal.c	FUNCTION_51	IF_8
0x400752d	    0x488b15000000	            mov rdx, qword [0x04007534] 	      4839	normal.c	FUNCTION_51	IF_8
0x4007534	        0x483b4238	            cmp rax, qword [rdx + 0x38] 	      4839	normal.c	FUNCTION_51	IF_8
0x4007538	            0x7435	                            je 0x400756f	      4839	normal.c	FUNCTION_51	IF_8
0x400753a	      0xe800000000	                          call 0x400753f	      4841	normal.c	FUNCTION_51	IF_8	CALL_12
0x400753f	        0x488b4528	            mov rax, qword [rbp + 0x28] 	      4842	normal.c	FUNCTION_51	IF_8	IF_9
0x4007543	    0x488b15000000	            mov rdx, qword [0x0400754a] 	      4842	normal.c	FUNCTION_51	IF_8	IF_9
0x400754a	          0x488b12	                    mov rdx, qword [rdx]	      4842	normal.c	FUNCTION_51	IF_8	IF_9
0x400754d	          0x4839d0	                            cmp rax, rdx	      4842	normal.c	FUNCTION_51	IF_8	IF_9
0x4007550	            0x7e0d	                           jle 0x400755f	      4842	normal.c	FUNCTION_51	IF_8	IF_9
0x4007552	    0x488b05000000	            mov rax, qword [0x04007559] 	      4843	normal.c	FUNCTION_51	IF_8	IF_9
0x4007559	        0x48895038	             mov qword [rax + 0x38], rdx	      4843	normal.c	FUNCTION_51	IF_8	IF_9
0x400755d	            0xeb0b	                           jmp 0x400756a	      4843	normal.c	FUNCTION_51	IF_8	IF_9
0x400755f	    0x488b15000000	            mov rdx, qword [0x04007566] 	      4845	normal.c	FUNCTION_51	IF_8	ELSE_5
0x4007566	        0x48894238	             mov qword [rdx + 0x38], rax	      4845	normal.c	FUNCTION_51	IF_8	ELSE_5
0x400756a	      0xe800000000	                          call 0x400756f	      4846	normal.c	FUNCTION_51	IF_8	CALL_13
0x400756f	          0x83fb5e	                           cmp ebx, 0x5e	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4007572	     0xf84c8020000	                            je 0x4007840	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4007578	          0x83fb5e	                           cmp ebx, 0x5e	      4849	normal.c	FUNCTION_51	SWITCH_1
0x400757b	     0xf8f2a010000	                            jg 0x40076ab	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4007581	          0x83fb44	                           cmp ebx, 0x44	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4007584	     0xf84ac050000	                            je 0x4007b36	      4849	normal.c	FUNCTION_51	SWITCH_1
0x400758a	          0x83fb44	                           cmp ebx, 0x44	      4849	normal.c	FUNCTION_51	SWITCH_1
0x400758d	     0xf8f92000000	                            jg 0x4007625	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4007593	          0x83fb2b	                           cmp ebx, 0x2b	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4007596	     0xf8412020000	                            je 0x40077ae	      4849	normal.c	FUNCTION_51	SWITCH_1
0x400759c	          0x83fb2b	                           cmp ebx, 0x2b	      4849	normal.c	FUNCTION_51	SWITCH_1
0x400759f	            0x7f48	                            jg 0x40075e9	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40075a1	    0x81fbb5beffff	                     cmp ebx, 0xffffbeb5	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40075a7	     0xf8430020000	                            je 0x40077dd	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40075ad	    0x81fbb5beffff	                     cmp ebx, 0xffffbeb5	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40075b3	            0x7f1d	                            jg 0x40075d2	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40075b5	    0x81fb958dffff	                     cmp ebx, 0xffff8d95	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40075bb	     0xf847f030000	                            je 0x4007940	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40075c1	    0x81fb9593ffff	                     cmp ebx, 0xffff9395	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40075c7	     0xf8412030000	                            je 0x40078df	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40075cd	      0xe9350b0000	                           jmp 0x4008107	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40075d2	          0x83fb0a	                            cmp ebx, 0xa	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40075d5	     0xf8402020000	                            je 0x40077dd	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40075db	          0x83fb0d	                            cmp ebx, 0xd	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40075de	     0xf84f9010000	                            je 0x40077dd	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40075e4	      0xe91e0b0000	                           jmp 0x4008107	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40075e9	          0x83fb3d	                           cmp ebx, 0x3d	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40075ec	     0xf84fd0a0000	                            je 0x40080ef	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40075f2	          0x83fb3d	                           cmp ebx, 0x3d	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40075f5	            0x7f17	                            jg 0x400760e	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40075f7	          0x83fb2d	                           cmp ebx, 0x2d	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40075fa	     0xf848a020000	                            je 0x400788a	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4007600	          0x83fb2e	                           cmp ebx, 0x2e	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4007603	     0xf8408020000	                            je 0x4007811	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4007609	      0xe9f90a0000	                           jmp 0x4008107	      4849	normal.c	FUNCTION_51	SWITCH_1
0x400760e	          0x83fb41	                           cmp ebx, 0x41	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4007611	     0xf8493060000	                            je 0x4007caa	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4007617	          0x83fb43	                           cmp ebx, 0x43	      4849	normal.c	FUNCTION_51	SWITCH_1
0x400761a	     0xf847a070000	                            je 0x4007d9a	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4007620	      0xe9e20a0000	                           jmp 0x4008107	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4007625	          0x83fb4d	                           cmp ebx, 0x4d	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4007628	     0xf8437080000	                            je 0x4007e65	      4849	normal.c	FUNCTION_51	SWITCH_1
0x400762e	          0x83fb4d	                           cmp ebx, 0x4d	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4007631	            0x7f3c	                            jg 0x400766f	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4007633	          0x83fb47	                           cmp ebx, 0x47	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4007636	     0xf847f090000	                            je 0x4007fbb	      4849	normal.c	FUNCTION_51	SWITCH_1
0x400763c	          0x83fb47	                           cmp ebx, 0x47	      4849	normal.c	FUNCTION_51	SWITCH_1
0x400763f	            0x7f17	                            jg 0x4007658	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4007641	          0x83fb45	                           cmp ebx, 0x45	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4007644	     0xf843a050000	                            je 0x4007b84	      4849	normal.c	FUNCTION_51	SWITCH_1
0x400764a	          0x83fb46	                           cmp ebx, 0x46	      4849	normal.c	FUNCTION_51	SWITCH_1
0x400764d	     0xf847a040000	                            je 0x4007acd	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4007653	      0xe9af0a0000	                           jmp 0x4008107	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4007658	          0x83fb48	                           cmp ebx, 0x48	      4849	normal.c	FUNCTION_51	SWITCH_1
0x400765b	     0xf845d020000	                            je 0x40078be	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4007661	          0x83fb4c	                           cmp ebx, 0x4c	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4007664	     0xf84b5020000	                            je 0x400791f	      4849	normal.c	FUNCTION_51	SWITCH_1
0x400766a	      0xe9980a0000	                           jmp 0x4008107	      4849	normal.c	FUNCTION_51	SWITCH_1
0x400766f	          0x83fb52	                           cmp ebx, 0x52	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4007672	     0xf8458080000	                            je 0x4007ed0	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4007678	          0x83fb52	                           cmp ebx, 0x52	      4849	normal.c	FUNCTION_51	SWITCH_1
0x400767b	            0x7f17	                            jg 0x4007694	      4849	normal.c	FUNCTION_51	SWITCH_1
0x400767d	          0x83fb4e	                           cmp ebx, 0x4e	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4007680	     0xf848e050000	                            je 0x4007c14	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4007686	          0x83fb4f	                           cmp ebx, 0x4f	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4007689	     0xf84a3060000	                            je 0x4007d32	      4849	normal.c	FUNCTION_51	SWITCH_1
0x400768f	      0xe9730a0000	                           jmp 0x4008107	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4007694	          0x83fb57	                           cmp ebx, 0x57	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4007697	     0xf841e090000	                            je 0x4007fbb	      4849	normal.c	FUNCTION_51	SWITCH_1
0x400769d	          0x83fb58	                           cmp ebx, 0x58	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40076a0	     0xf845e070000	                            je 0x4007e04	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40076a6	      0xe95c0a0000	                           jmp 0x4008107	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40076ab	          0x83fb6c	                           cmp ebx, 0x6c	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40076ae	     0xf848c020000	                            je 0x4007940	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40076b4	          0x83fb6c	                           cmp ebx, 0x6c	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40076b7	            0x7f73	                            jg 0x400772c	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40076b9	          0x83fb66	                           cmp ebx, 0x66	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40076bc	     0xf840b040000	                            je 0x4007acd	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40076c2	          0x83fb66	                           cmp ebx, 0x66	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40076c5	            0x7f3c	                            jg 0x4007703	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40076c7	          0x83fb63	                           cmp ebx, 0x63	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40076ca	     0xf848d060000	                            je 0x4007d5d	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40076d0	          0x83fb63	                           cmp ebx, 0x63	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40076d3	            0x7f17	                            jg 0x40076ec	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40076d5	          0x83fb61	                           cmp ebx, 0x61	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40076d8	     0xf846b050000	                            je 0x4007c49	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40076de	          0x83fb62	                           cmp ebx, 0x62	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40076e1	     0xf84ad010000	                            je 0x4007894	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40076e7	      0xe91b0a0000	                           jmp 0x4008107	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40076ec	          0x83fb64	                           cmp ebx, 0x64	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40076ef	     0xf8441040000	                            je 0x4007b36	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40076f5	          0x83fb65	                           cmp ebx, 0x65	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40076f8	     0xf840e030000	                            je 0x4007a0c	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40076fe	      0xe9040a0000	                           jmp 0x4008107	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4007703	          0x83fb69	                           cmp ebx, 0x69	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4007706	     0xf841e050000	                            je 0x4007c2a	      4849	normal.c	FUNCTION_51	SWITCH_1
0x400770c	          0x83fb69	                           cmp ebx, 0x69	      4849	normal.c	FUNCTION_51	SWITCH_1
0x400770f	     0xf8fdc070000	                            jg 0x4007ef1	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4007715	          0x83fb67	                           cmp ebx, 0x67	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4007718	     0xf849d080000	                            je 0x4007fbb	      4849	normal.c	FUNCTION_51	SWITCH_1
0x400771e	          0x83fb68	                           cmp ebx, 0x68	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4007721	     0xf84b8010000	                            je 0x40078df	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4007727	      0xe9db090000	                           jmp 0x4008107	      4849	normal.c	FUNCTION_51	SWITCH_1
0x400772c	          0x83fb74	                           cmp ebx, 0x74	      4849	normal.c	FUNCTION_51	SWITCH_1
0x400772f	     0xf84b2000000	                            je 0x40077e7	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4007735	          0x83fb74	                           cmp ebx, 0x74	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4007738	            0x7f3c	                            jg 0x4007776	      4849	normal.c	FUNCTION_51	SWITCH_1
0x400773a	          0x83fb6f	                           cmp ebx, 0x6f	      4849	normal.c	FUNCTION_51	SWITCH_1
0x400773d	     0xf84c0050000	                            je 0x4007d03	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4007743	          0x83fb6f	                           cmp ebx, 0x6f	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4007746	            0x7f17	                            jg 0x400775f	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4007748	          0x83fb6d	                           cmp ebx, 0x6d	      4849	normal.c	FUNCTION_51	SWITCH_1
0x400774b	     0xf84d7060000	                            je 0x4007e28	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4007751	          0x83fb6e	                           cmp ebx, 0x6e	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4007754	     0xf84a4040000	                            je 0x4007bfe	      4849	normal.c	FUNCTION_51	SWITCH_1
0x400775a	      0xe9a8090000	                           jmp 0x4008107	      4849	normal.c	FUNCTION_51	SWITCH_1
0x400775f	          0x83fb72	                           cmp ebx, 0x72	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4007762	     0xf842f070000	                            je 0x4007e97	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4007768	          0x83fb73	                           cmp ebx, 0x73	      4849	normal.c	FUNCTION_51	SWITCH_1
0x400776b	     0xf84f7010000	                            je 0x4007968	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4007771	      0xe991090000	                           jmp 0x4008107	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4007776	          0x83fb77	                           cmp ebx, 0x77	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4007779	     0xf843c080000	                            je 0x4007fbb	      4849	normal.c	FUNCTION_51	SWITCH_1
0x400777f	          0x83fb77	                           cmp ebx, 0x77	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4007782	            0x7f17	                            jg 0x400779b	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4007784	          0x83fb75	                           cmp ebx, 0x75	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4007787	     0xf8497070000	                            je 0x4007f24	      4849	normal.c	FUNCTION_51	SWITCH_1
0x400778d	          0x83fb76	                           cmp ebx, 0x76	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4007790	     0xf843d060000	                            je 0x4007dd3	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4007796	      0xe96c090000	                           jmp 0x4008107	      4849	normal.c	FUNCTION_51	SWITCH_1
0x400779b	          0x83fb78	                           cmp ebx, 0x78	      4849	normal.c	FUNCTION_51	SWITCH_1
0x400779e	     0xf8439060000	                            je 0x4007ddd	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40077a4	          0x83fb7a	                           cmp ebx, 0x7a	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40077a7	            0x7472	                            je 0x400781b	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40077a9	      0xe959090000	                           jmp 0x4008107	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40077ae	      0x48837d2800	               cmp qword [rbp + 0x28], 0	      4853	normal.c	FUNCTION_51	SWITCH_1	IF_10
0x40077b3	            0x7528	                           jne 0x40077dd	      4853	normal.c	FUNCTION_51	SWITCH_1	IF_10
0x40077b5	      0xe800000000	                          call 0x40077ba	      4856	normal.c	FUNCTION_51	SWITCH_1	IF_10	CALL_14
0x40077ba	    0x488b15000000	            mov rdx, qword [0x040077c1] 	      4857	normal.c	FUNCTION_51	SWITCH_1	IF_10	IF_11
0x40077c1	    0x488b82e80000	            mov rax, qword [rdx + 0xe8] 	      4857	normal.c	FUNCTION_51	SWITCH_1	IF_10	IF_11
0x40077c8	    0x488b0d000000	            mov rcx, qword [0x040077cf] 	      4857	normal.c	FUNCTION_51	SWITCH_1	IF_10	IF_11
0x40077cf	          0x488b09	                    mov rcx, qword [rcx]	      4857	normal.c	FUNCTION_51	SWITCH_1	IF_10	IF_11
0x40077d2	          0x4839c8	                            cmp rax, rcx	      4858	normal.c	FUNCTION_51	SWITCH_1	IF_10	IF_11
0x40077d5	        0x480f4fc1	                          cmovg rax, rcx	      4858	normal.c	FUNCTION_51	SWITCH_1	IF_10	IF_11
0x40077d9	        0x48894238	             mov qword [rdx + 0x38], rax	      4858	normal.c	FUNCTION_51	SWITCH_1	IF_10	IF_11
0x40077dd	      0xbf05000000	                              mov edi, 5	      4866	normal.c	FUNCTION_51	SWITCH_1	CALL_15
0x40077e2	      0xe800000000	                          call 0x40077e7	      4866	normal.c	FUNCTION_51	SWITCH_1	CALL_15
0x40077e7	      0xbe01000000	                              mov esi, 1	      4869	normal.c	FUNCTION_51	SWITCH_1	CALL_16
0x40077ec	      0xbf00000000	                              mov edi, 0	      4869	normal.c	FUNCTION_51	SWITCH_1	CALL_16
0x40077f1	      0xe800000000	                          call 0x40077f6	      4869	normal.c	FUNCTION_51	SWITCH_1	CALL_16
0x40077f6	      0xbf0a000000	                            mov edi, 0xa	      4870	normal.c	FUNCTION_51	SWITCH_1	CALL_17
0x40077fb	      0xe800000000	                          call 0x4007800	      4870	normal.c	FUNCTION_51	SWITCH_1	CALL_17
0x4007800	    0x488b3d000000	            mov rdi, qword [0x04007807] 	      4871	normal.c	FUNCTION_51	SWITCH_1	CALL_18
0x4007807	      0xe800000000	                          call 0x400780c	      4871	normal.c	FUNCTION_51	SWITCH_1	CALL_18
0x400780c	      0xe9ff080000	                           jmp 0x4008110	      4872	normal.c	FUNCTION_51	SWITCH_1
0x4007811	      0xbf05000000	                              mov edi, 5	      4875	normal.c	FUNCTION_51	SWITCH_1	CALL_19
0x4007816	      0xe800000000	                          call 0x400781b	      4875	normal.c	FUNCTION_51	SWITCH_1	CALL_19
0x400781b	      0xbf01000000	                              mov edi, 1	      4878	normal.c	FUNCTION_51	SWITCH_1	CALL_20
0x4007820	      0xe800000000	                          call 0x4007825	      4878	normal.c	FUNCTION_51	SWITCH_1	CALL_20
0x4007825	      0xbf0a000000	                            mov edi, 0xa	      4879	normal.c	FUNCTION_51	SWITCH_1	CALL_21
0x400782a	      0xe800000000	                          call 0x400782f	      4879	normal.c	FUNCTION_51	SWITCH_1	CALL_21
0x400782f	    0x488b3d000000	            mov rdi, qword [0x04007836] 	      4880	normal.c	FUNCTION_51	SWITCH_1	CALL_22
0x4007836	      0xe800000000	                          call 0x400783b	      4880	normal.c	FUNCTION_51	SWITCH_1	CALL_22
0x400783b	      0xe9d0080000	                           jmp 0x4008110	      4881	normal.c	FUNCTION_51	SWITCH_1
0x4007840	      0x48837d2800	               cmp qword [rbp + 0x28], 0	      4887	normal.c	FUNCTION_51	SWITCH_1	IF_12
0x4007845	            0x7420	                            je 0x4007867	      4887	normal.c	FUNCTION_51	SWITCH_1	IF_12
0x4007847	      0xbe01000000	                              mov esi, 1	      4889	normal.c	FUNCTION_51	SWITCH_1	IF_12	CALL_23
0x400784c	      0xbf00000000	                              mov edi, 0	      4889	normal.c	FUNCTION_51	SWITCH_1	IF_12	CALL_23
0x4007851	      0xe800000000	                          call 0x4007856	      4889	normal.c	FUNCTION_51	SWITCH_1	IF_12	CALL_23
0x4007856	    0x488b05000000	            mov rax, qword [0x0400785d] 	      4890	normal.c	FUNCTION_51	SWITCH_1	IF_12
0x400785d	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      4890	normal.c	FUNCTION_51	SWITCH_1	IF_12
0x4007861	        0x48895038	             mov qword [rax + 0x38], rdx	      4890	normal.c	FUNCTION_51	SWITCH_1	IF_12
0x4007865	            0xeb23	                           jmp 0x400788a	      4890	normal.c	FUNCTION_51	SWITCH_1	IF_12
0x4007867	    0x488b15000000	            mov rdx, qword [0x0400786e] 	      4892	normal.c	FUNCTION_51	SWITCH_1	ELSE_7	IF_13
0x400786e	        0x488b4278	            mov rax, qword [rdx + 0x78] 	      4892	normal.c	FUNCTION_51	SWITCH_1	ELSE_7	IF_13
0x4007872	        0x4883f801	                              cmp rax, 1	      4892	normal.c	FUNCTION_51	SWITCH_1	ELSE_7	IF_13
0x4007876	            0x750a	                           jne 0x4007882	      4892	normal.c	FUNCTION_51	SWITCH_1	ELSE_7	IF_13
0x4007878	    0x48c742380100	               mov qword [rdx + 0x38], 1	      4893	normal.c	FUNCTION_51	SWITCH_1	ELSE_7	IF_13
0x4007880	            0xeb08	                           jmp 0x400788a	      4893	normal.c	FUNCTION_51	SWITCH_1	ELSE_7	IF_13
0x4007882	        0x4883e801	                              sub rax, 1	      4895	normal.c	FUNCTION_51	SWITCH_1	ELSE_8
0x4007886	        0x48894238	             mov qword [rdx + 0x38], rax	      4895	normal.c	FUNCTION_51	SWITCH_1	ELSE_8
0x400788a	      0xbf05000000	                              mov edi, 5	      4898	normal.c	FUNCTION_51	SWITCH_1	CALL_24
0x400788f	      0xe800000000	                          call 0x4007894	      4898	normal.c	FUNCTION_51	SWITCH_1	CALL_24
0x4007894	      0xbe01000000	                              mov esi, 1	      4901	normal.c	FUNCTION_51	SWITCH_1	CALL_25
0x4007899	      0xbf00000000	                              mov edi, 0	      4901	normal.c	FUNCTION_51	SWITCH_1	CALL_25
0x400789e	      0xe800000000	                          call 0x40078a3	      4901	normal.c	FUNCTION_51	SWITCH_1	CALL_25
0x40078a3	      0xbf0a000000	                            mov edi, 0xa	      4902	normal.c	FUNCTION_51	SWITCH_1	CALL_26
0x40078a8	      0xe800000000	                          call 0x40078ad	      4902	normal.c	FUNCTION_51	SWITCH_1	CALL_26
0x40078ad	    0x488b3d000000	            mov rdi, qword [0x040078b4] 	      4903	normal.c	FUNCTION_51	SWITCH_1	CALL_27
0x40078b4	      0xe800000000	                          call 0x40078b9	      4903	normal.c	FUNCTION_51	SWITCH_1	CALL_27
0x40078b9	      0xe952080000	                           jmp 0x4008110	      4904	normal.c	FUNCTION_51	SWITCH_1
0x40078be	    0x488b05000000	            mov rax, qword [0x040078c5] 	      4908	normal.c	FUNCTION_51	SWITCH_1
0x40078c5	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      4908	normal.c	FUNCTION_51	SWITCH_1
0x40078cb	            0x89c2	                            mov edx, eax	      4908	normal.c	FUNCTION_51	SWITCH_1
0x40078cd	          0xc1ea1f	                           shr edx, 0x1f	      4908	normal.c	FUNCTION_51	SWITCH_1
0x40078d0	             0x1d0	                            add eax, edx	      4908	normal.c	FUNCTION_51	SWITCH_1
0x40078d2	            0xd1f8	                              sar eax, 1	      4908	normal.c	FUNCTION_51	SWITCH_1
0x40078d4	            0x4898	                                    cdqe	      4908	normal.c	FUNCTION_51	SWITCH_1
0x40078d6	      0x480faf4530	            imul rax, qword [rbp + 0x30]	      4908	normal.c	FUNCTION_51	SWITCH_1
0x40078db	        0x48894530	            mov qword [rbp + 0x30], rax 	      4908	normal.c	FUNCTION_51	SWITCH_1
0x40078df	    0x488b05000000	            mov rax, qword [0x040078e6] 	      4914	normal.c	FUNCTION_51	SWITCH_1	IF_14
0x40078e6	    0x83b894020000	              cmp dword [rax + 0x294], 0	      4914	normal.c	FUNCTION_51	SWITCH_1	IF_14
0x40078ed	     0xf851d080000	                           jne 0x4008110	      4914	normal.c	FUNCTION_51	SWITCH_1	IF_14
0x40078f3	        0x488b4d30	            mov rcx, qword [rbp + 0x30] 	      4916	normal.c	FUNCTION_51	SWITCH_1	IF_14	IF_15
0x40078f7	    0x8b9094000000	            mov edx, dword [rax + 0x94] 	      4916	normal.c	FUNCTION_51	SWITCH_1	IF_14	IF_15
0x40078fd	            0x39d1	                            cmp ecx, edx	      4916	normal.c	FUNCTION_51	SWITCH_1	IF_14	IF_15
0x40078ff	            0x7e0c	                           jle 0x400790d	      4916	normal.c	FUNCTION_51	SWITCH_1	IF_14	IF_15
0x4007901	    0xc78094000000	               mov dword [rax + 0x94], 0	      4917	normal.c	FUNCTION_51	SWITCH_1	IF_14	IF_15
0x400790b	            0xeb08	                           jmp 0x4007915	      4917	normal.c	FUNCTION_51	SWITCH_1	IF_14	IF_15
0x400790d	            0x29ca	                            sub edx, ecx	      4919	normal.c	FUNCTION_51	SWITCH_1	IF_14	ELSE_9
0x400790f	    0x899094000000	             mov dword [rax + 0x94], edx	      4919	normal.c	FUNCTION_51	SWITCH_1	IF_14	ELSE_9
0x4007915	      0xe800000000	                          call 0x400791a	      4920	normal.c	FUNCTION_51	SWITCH_1	IF_14	CALL_28
0x400791a	      0xe9f1070000	                           jmp 0x4008110	      4920	normal.c	FUNCTION_51	SWITCH_1	IF_14	CALL_28
0x400791f	    0x488b05000000	            mov rax, qword [0x04007926] 	      4925	normal.c	FUNCTION_51	SWITCH_1
0x4007926	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      4925	normal.c	FUNCTION_51	SWITCH_1
0x400792c	            0x89c2	                            mov edx, eax	      4925	normal.c	FUNCTION_51	SWITCH_1
0x400792e	          0xc1ea1f	                           shr edx, 0x1f	      4925	normal.c	FUNCTION_51	SWITCH_1
0x4007931	             0x1d0	                            add eax, edx	      4925	normal.c	FUNCTION_51	SWITCH_1
0x4007933	            0xd1f8	                              sar eax, 1	      4925	normal.c	FUNCTION_51	SWITCH_1
0x4007935	            0x4898	                                    cdqe	      4925	normal.c	FUNCTION_51	SWITCH_1
0x4007937	      0x480faf4530	            imul rax, qword [rbp + 0x30]	      4925	normal.c	FUNCTION_51	SWITCH_1
0x400793c	        0x48894530	            mov qword [rbp + 0x30], rax 	      4925	normal.c	FUNCTION_51	SWITCH_1
0x4007940	    0x488b05000000	            mov rax, qword [0x04007947] 	      4931	normal.c	FUNCTION_51	SWITCH_1	IF_16
0x4007947	    0x83b894020000	              cmp dword [rax + 0x294], 0	      4931	normal.c	FUNCTION_51	SWITCH_1	IF_16
0x400794e	     0xf85bc070000	                           jne 0x4008110	      4931	normal.c	FUNCTION_51	SWITCH_1	IF_16
0x4007954	        0x488b5530	            mov rdx, qword [rbp + 0x30] 	      4934	normal.c	FUNCTION_51	SWITCH_1	IF_16
0x4007958	     0x19094000000	             add dword [rax + 0x94], edx	      4934	normal.c	FUNCTION_51	SWITCH_1	IF_16
0x400795e	      0xe800000000	                          call 0x4007963	      4935	normal.c	FUNCTION_51	SWITCH_1	IF_16	CALL_29
0x4007963	      0xe9a8070000	                           jmp 0x4008110	      4935	normal.c	FUNCTION_51	SWITCH_1	IF_16	CALL_29
0x4007968	    0x488b05000000	            mov rax, qword [0x0400796f] 	      4940	normal.c	FUNCTION_51	SWITCH_1	IF_17
0x400796f	    0x83b894020000	              cmp dword [rax + 0x294], 0	      4940	normal.c	FUNCTION_51	SWITCH_1	IF_17
0x4007976	     0xf8594070000	                           jne 0x4008110	      4940	normal.c	FUNCTION_51	SWITCH_1	IF_17
0x400797c	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      4943	normal.c	FUNCTION_51	SWITCH_1	IF_17	IF_18	CALL_30
0x4007980	      0xba00000000	                              mov edx, 0	      4943	normal.c	FUNCTION_51	SWITCH_1	IF_17	IF_18	CALL_30
0x4007985	      0xbe00000000	                              mov esi, 0	      4943	normal.c	FUNCTION_51	SWITCH_1	IF_17	IF_18	CALL_30
0x400798a	      0xe800000000	                          call 0x400798f	      4943	normal.c	FUNCTION_51	SWITCH_1	IF_17	IF_18	CALL_30
0x400798f	            0x85c0	                           test eax, eax	      4943	normal.c	FUNCTION_51	SWITCH_1	IF_17	IF_18	CALL_30
0x4007991	            0x740a	                            je 0x400799d	      4943	normal.c	FUNCTION_51	SWITCH_1	IF_17	IF_18	CALL_30
0x4007993	    0xc74424200000	               mov dword [rsp + 0x20], 0	      4944	normal.c	FUNCTION_51	SWITCH_1	IF_17	IF_18
0x400799b	            0xeb20	                           jmp 0x40079bd	      4944	normal.c	FUNCTION_51	SWITCH_1	IF_17	IF_18
0x400799d	    0x488b3d000000	            mov rdi, qword [0x040079a4] 	      4947	normal.c	FUNCTION_51	SWITCH_1	IF_17	CALL_31
0x40079a4	        0x488d7738	                   lea rsi, [rdi + 0x38]	      4947	normal.c	FUNCTION_51	SWITCH_1	IF_17	CALL_31
0x40079a8	    0x41b800000000	                              mov r8d, 0	      4947	normal.c	FUNCTION_51	SWITCH_1	IF_17	CALL_31
0x40079ae	      0xb900000000	                              mov ecx, 0	      4947	normal.c	FUNCTION_51	SWITCH_1	IF_17	CALL_31
0x40079b3	      0x488d542420	                   lea rdx, [rsp + 0x20]	      4947	normal.c	FUNCTION_51	SWITCH_1	IF_17	CALL_31
0x40079b8	      0xe800000000	                          call 0x40079bd	      4947	normal.c	FUNCTION_51	SWITCH_1	IF_17	CALL_31
0x40079bd	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      4948	normal.c	FUNCTION_51	SWITCH_1	IF_17	IF_19
0x40079c1	    0x488b15000000	            mov rdx, qword [0x040079c8] 	      4948	normal.c	FUNCTION_51	SWITCH_1	IF_17	IF_19
0x40079c8	          0x4863c8	                         movsxd rcx, eax	      4948	normal.c	FUNCTION_51	SWITCH_1	IF_17	IF_19
0x40079cb	          0x4839d1	                            cmp rcx, rdx	      4948	normal.c	FUNCTION_51	SWITCH_1	IF_17	IF_19
0x40079ce	            0x7e08	                           jle 0x40079d8	      4948	normal.c	FUNCTION_51	SWITCH_1	IF_17	IF_19
0x40079d0	            0x29d0	                            sub eax, edx	      4949	normal.c	FUNCTION_51	SWITCH_1	IF_17	IF_19
0x40079d2	        0x89442420	             mov dword [rsp + 0x20], eax	      4949	normal.c	FUNCTION_51	SWITCH_1	IF_17	IF_19
0x40079d6	            0xeb08	                           jmp 0x40079e0	      4949	normal.c	FUNCTION_51	SWITCH_1	IF_17	IF_19
0x40079d8	    0xc74424200000	               mov dword [rsp + 0x20], 0	      4951	normal.c	FUNCTION_51	SWITCH_1	IF_17	ELSE_11
0x40079e0	    0x488b05000000	            mov rax, qword [0x040079e7] 	      4952	normal.c	FUNCTION_51	SWITCH_1	IF_17	ELSE_11	IF_20
0x40079e7	        0x8b542420	            mov edx, dword [rsp + 0x20] 	      4952	normal.c	FUNCTION_51	SWITCH_1	IF_17	ELSE_11	IF_20
0x40079eb	    0x399094000000	            cmp dword [rax + 0x94], edx 	      4952	normal.c	FUNCTION_51	SWITCH_1	IF_17	ELSE_11	IF_20
0x40079f1	     0xf8419070000	                            je 0x4008110	      4952	normal.c	FUNCTION_51	SWITCH_1	IF_17	ELSE_11	IF_20
0x40079f7	    0x899094000000	             mov dword [rax + 0x94], edx	      4954	normal.c	FUNCTION_51	SWITCH_1	IF_17	ELSE_11	IF_20
0x40079fd	      0xbf28000000	                           mov edi, 0x28	      4955	normal.c	FUNCTION_51	SWITCH_1	IF_17	ELSE_11	IF_20	CALL_32
0x4007a02	      0xe800000000	                          call 0x4007a07	      4955	normal.c	FUNCTION_51	SWITCH_1	IF_17	ELSE_11	IF_20	CALL_32
0x4007a07	      0xe904070000	                           jmp 0x4008110	      4955	normal.c	FUNCTION_51	SWITCH_1	IF_17	ELSE_11	IF_20	CALL_32
0x4007a0c	    0x488b05000000	            mov rax, qword [0x04007a13] 	      4961	normal.c	FUNCTION_51	SWITCH_1	IF_21
0x4007a13	    0x83b894020000	              cmp dword [rax + 0x294], 0	      4961	normal.c	FUNCTION_51	SWITCH_1	IF_21
0x4007a1a	     0xf85f0060000	                           jne 0x4008110	      4961	normal.c	FUNCTION_51	SWITCH_1	IF_21
0x4007a20	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      4964	normal.c	FUNCTION_51	SWITCH_1	IF_21	IF_22	CALL_33
0x4007a24	      0xba00000000	                              mov edx, 0	      4964	normal.c	FUNCTION_51	SWITCH_1	IF_21	IF_22	CALL_33
0x4007a29	      0xbe00000000	                              mov esi, 0	      4964	normal.c	FUNCTION_51	SWITCH_1	IF_21	IF_22	CALL_33
0x4007a2e	      0xe800000000	                          call 0x4007a33	      4964	normal.c	FUNCTION_51	SWITCH_1	IF_21	IF_22	CALL_33
0x4007a33	            0x85c0	                           test eax, eax	      4964	normal.c	FUNCTION_51	SWITCH_1	IF_21	IF_22	CALL_33
0x4007a35	            0x740a	                            je 0x4007a41	      4964	normal.c	FUNCTION_51	SWITCH_1	IF_21	IF_22	CALL_33
0x4007a37	    0xc74424200000	               mov dword [rsp + 0x20], 0	      4965	normal.c	FUNCTION_51	SWITCH_1	IF_21	IF_22
0x4007a3f	            0xeb1f	                           jmp 0x4007a60	      4965	normal.c	FUNCTION_51	SWITCH_1	IF_21	IF_22
0x4007a41	    0x488b3d000000	            mov rdi, qword [0x04007a48] 	      4968	normal.c	FUNCTION_51	SWITCH_1	IF_21	CALL_34
0x4007a48	        0x488d7738	                   lea rsi, [rdi + 0x38]	      4968	normal.c	FUNCTION_51	SWITCH_1	IF_21	CALL_34
0x4007a4c	      0x4c8d442420	                    lea r8, [rsp + 0x20]	      4968	normal.c	FUNCTION_51	SWITCH_1	IF_21	CALL_34
0x4007a51	      0xb900000000	                              mov ecx, 0	      4968	normal.c	FUNCTION_51	SWITCH_1	IF_21	CALL_34
0x4007a56	      0xba00000000	                              mov edx, 0	      4968	normal.c	FUNCTION_51	SWITCH_1	IF_21	CALL_34
0x4007a5b	      0xe800000000	                          call 0x4007a60	      4968	normal.c	FUNCTION_51	SWITCH_1	IF_21	CALL_34
0x4007a60	    0x488b05000000	            mov rax, qword [0x04007a67] 	      4969	normal.c	FUNCTION_51	SWITCH_1	IF_21	CALL_35
0x4007a67	    0x8b98ac000000	            mov ebx, dword [rax + 0xac] 	      4969	normal.c	FUNCTION_51	SWITCH_1	IF_21	CALL_35
0x4007a6d	      0xe800000000	                          call 0x4007a72	      4969	normal.c	FUNCTION_51	SWITCH_1	IF_21	CALL_35
0x4007a72	            0x29c3	                            sub ebx, eax	      4969	normal.c	FUNCTION_51	SWITCH_1	IF_21	CALL_35
0x4007a74	        0x8b742420	            mov esi, dword [rsp + 0x20] 	      4970	normal.c	FUNCTION_51	SWITCH_1	IF_21	IF_23
0x4007a78	    0x488b0d000000	            mov rcx, qword [0x04007a7f] 	      4970	normal.c	FUNCTION_51	SWITCH_1	IF_21	IF_23
0x4007a7f	          0x4863fb	                         movsxd rdi, ebx	      4970	normal.c	FUNCTION_51	SWITCH_1	IF_21	IF_23
0x4007a82	          0x4863d6	                         movsxd rdx, esi	      4970	normal.c	FUNCTION_51	SWITCH_1	IF_21	IF_23
0x4007a85	          0x4801ca	                            add rdx, rcx	      4970	normal.c	FUNCTION_51	SWITCH_1	IF_21	IF_23
0x4007a88	          0x4839d7	                            cmp rdi, rdx	      4970	normal.c	FUNCTION_51	SWITCH_1	IF_21	IF_23
0x4007a8b	            0x7e0a	                           jle 0x4007a97	      4970	normal.c	FUNCTION_51	SWITCH_1	IF_21	IF_23
0x4007a8d	    0xc74424200000	               mov dword [rsp + 0x20], 0	      4971	normal.c	FUNCTION_51	SWITCH_1	IF_21	IF_23
0x4007a95	            0xeb0a	                           jmp 0x4007aa1	      4971	normal.c	FUNCTION_51	SWITCH_1	IF_21	IF_23
0x4007a97	        0x8d540e01	                lea edx, [rsi + rcx + 1]	      4973	normal.c	FUNCTION_51	SWITCH_1	IF_21	ELSE_13
0x4007a9b	            0x29da	                            sub edx, ebx	      4973	normal.c	FUNCTION_51	SWITCH_1	IF_21	ELSE_13
0x4007a9d	        0x89542420	             mov dword [rsp + 0x20], edx	      4973	normal.c	FUNCTION_51	SWITCH_1	IF_21	ELSE_13
0x4007aa1	    0x488b05000000	            mov rax, qword [0x04007aa8] 	      4974	normal.c	FUNCTION_51	SWITCH_1	IF_21	ELSE_13	IF_24
0x4007aa8	        0x8b542420	            mov edx, dword [rsp + 0x20] 	      4974	normal.c	FUNCTION_51	SWITCH_1	IF_21	ELSE_13	IF_24
0x4007aac	    0x399094000000	            cmp dword [rax + 0x94], edx 	      4974	normal.c	FUNCTION_51	SWITCH_1	IF_21	ELSE_13	IF_24
0x4007ab2	     0xf8458060000	                            je 0x4008110	      4974	normal.c	FUNCTION_51	SWITCH_1	IF_21	ELSE_13	IF_24
0x4007ab8	    0x899094000000	             mov dword [rax + 0x94], edx	      4976	normal.c	FUNCTION_51	SWITCH_1	IF_21	ELSE_13	IF_24
0x4007abe	      0xbf28000000	                           mov edi, 0x28	      4977	normal.c	FUNCTION_51	SWITCH_1	IF_21	ELSE_13	IF_24	CALL_36
0x4007ac3	      0xe800000000	                          call 0x4007ac8	      4977	normal.c	FUNCTION_51	SWITCH_1	IF_21	ELSE_13	IF_24	CALL_36
0x4007ac8	      0xe943060000	                           jmp 0x4008110	      4977	normal.c	FUNCTION_51	SWITCH_1	IF_21	ELSE_13	IF_24	CALL_36
0x4007acd	      0xbf01000000	                              mov edi, 1	      4986	normal.c	FUNCTION_51	SWITCH_1	IF_25	CALL_37
0x4007ad2	      0xe800000000	                          call 0x4007ad7	      4986	normal.c	FUNCTION_51	SWITCH_1	IF_25	CALL_37
0x4007ad7	            0x85c0	                           test eax, eax	      4986	normal.c	FUNCTION_51	SWITCH_1	IF_25	CALL_37
0x4007ad9	            0x744d	                            je 0x4007b28	      4986	normal.c	FUNCTION_51	SWITCH_1	IF_25	CALL_37
0x4007adb	    0xc74510660000	           mov dword [rbp + 0x10], 0x66 	      4988	normal.c	FUNCTION_51	SWITCH_1	IF_25
0x4007ae2	          0x4889ef	                            mov rdi, rbp	      4989	normal.c	FUNCTION_51	SWITCH_1	IF_25	CALL_38
0x4007ae5	      0xe874a0ffff	                    call sym.nv_operator	      4989	normal.c	FUNCTION_51	SWITCH_1	IF_25	CALL_38
0x4007aea	    0x488b05000000	            mov rax, qword [0x04007af1] 	      4990	normal.c	FUNCTION_51	SWITCH_1	IF_25
0x4007af1	    0xc780d4010000	              mov dword [rax + 0x1d4], 1	      4990	normal.c	FUNCTION_51	SWITCH_1	IF_25
0x4007afb	          0x83fb46	                           cmp ebx, 0x46	      4993	normal.c	FUNCTION_51	SWITCH_1	IF_25	IF_26
0x4007afe	     0xf850c060000	                           jne 0x4008110	      4993	normal.c	FUNCTION_51	SWITCH_1	IF_25	IF_26
0x4007b04	        0x488b4500	                    mov rax, qword [rbp]	      4993	normal.c	FUNCTION_51	SWITCH_1	IF_25	IF_26
0x4007b08	          0x833813	                   cmp dword [rax], 0x13	      4993	normal.c	FUNCTION_51	SWITCH_1	IF_25	IF_26
0x4007b0b	     0xf85ff050000	                           jne 0x4008110	      4993	normal.c	FUNCTION_51	SWITCH_1	IF_25	IF_26
0x4007b11	          0x4889ef	                            mov rdi, rbp	      4995	normal.c	FUNCTION_51	SWITCH_1	IF_25	IF_26	CALL_39
0x4007b14	      0xe845a0ffff	                    call sym.nv_operator	      4995	normal.c	FUNCTION_51	SWITCH_1	IF_25	IF_26	CALL_39
0x4007b19	    0xc70500000000	               mov dword [0x04007b23], 1	      4996	normal.c	FUNCTION_51	SWITCH_1	IF_25	IF_26
0x4007b23	      0xe9e8050000	                           jmp 0x4008110	      4996	normal.c	FUNCTION_51	SWITCH_1	IF_25	IF_26
0x4007b28	        0x488b7d00	                    mov rdi, qword [rbp]	      5000	normal.c	FUNCTION_51	SWITCH_1	CALL_40
0x4007b2c	      0xe80787ffff	                    call sym.clearopbeep	      5000	normal.c	FUNCTION_51	SWITCH_1	CALL_40
0x4007b31	      0xe9da050000	                           jmp 0x4008110	      5000	normal.c	FUNCTION_51	SWITCH_1	CALL_40
0x4007b36	      0xbf00000000	                              mov edi, 0	      5006	normal.c	FUNCTION_51	SWITCH_1	IF_27	CALL_41
0x4007b3b	      0xe800000000	                          call 0x4007b40	      5006	normal.c	FUNCTION_51	SWITCH_1	IF_27	CALL_41
0x4007b40	            0x85c0	                           test eax, eax	      5006	normal.c	FUNCTION_51	SWITCH_1	IF_27	CALL_41
0x4007b42	     0xf84c8050000	                            je 0x4008110	      5006	normal.c	FUNCTION_51	SWITCH_1	IF_27	CALL_41
0x4007b48	    0x833d00000000	               cmp dword [0x04007b4f], 0	      5008	normal.c	FUNCTION_51	SWITCH_1	IF_27	IF_28
0x4007b4f	            0x740d	                            je 0x4007b5e	      5008	normal.c	FUNCTION_51	SWITCH_1	IF_27	IF_28
0x4007b51	          0x4889ef	                            mov rdi, rbp	      5009	normal.c	FUNCTION_51	SWITCH_1	IF_27	CALL_42
0x4007b54	      0xe805a0ffff	                    call sym.nv_operator	      5009	normal.c	FUNCTION_51	SWITCH_1	IF_27	CALL_42
0x4007b59	      0xe9b2050000	                           jmp 0x4008110	      5009	normal.c	FUNCTION_51	SWITCH_1	IF_27	CALL_42
0x4007b5e	    0x488b05000000	            mov rax, qword [0x04007b65] 	      5011	normal.c	FUNCTION_51	SWITCH_1	IF_27	ELSE_15	CALL_43
0x4007b65	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      5011	normal.c	FUNCTION_51	SWITCH_1	IF_27	ELSE_15	CALL_43
0x4007b69	          0x83fb44	                           cmp ebx, 0x44	      5011	normal.c	FUNCTION_51	SWITCH_1	IF_27	ELSE_15	CALL_43
0x4007b6c	           0xf94c2	                                 sete dl	      5011	normal.c	FUNCTION_51	SWITCH_1	IF_27	ELSE_15	CALL_43
0x4007b6f	           0xfb6d2	                           movzx edx, dl	      5011	normal.c	FUNCTION_51	SWITCH_1	IF_27	ELSE_15	CALL_43
0x4007b72	      0xb900000000	                              mov ecx, 0	      5011	normal.c	FUNCTION_51	SWITCH_1	IF_27	ELSE_15	CALL_43
0x4007b77	          0x4889fe	                            mov rsi, rdi	      5011	normal.c	FUNCTION_51	SWITCH_1	IF_27	ELSE_15	CALL_43
0x4007b7a	      0xe800000000	                          call 0x4007b7f	      5011	normal.c	FUNCTION_51	SWITCH_1	IF_27	ELSE_15	CALL_43
0x4007b7f	      0xe98c050000	                           jmp 0x4008110	      5011	normal.c	FUNCTION_51	SWITCH_1	IF_27	ELSE_15	CALL_43
0x4007b84	    0x488b3d000000	            mov rdi, qword [0x04007b8b] 	      5017	normal.c	FUNCTION_51	SWITCH_1	IF_29	CALL_44
0x4007b8b	      0xe800000000	                          call 0x4007b90	      5017	normal.c	FUNCTION_51	SWITCH_1	IF_29	CALL_44
0x4007b90	            0x85c0	                           test eax, eax	      5017	normal.c	FUNCTION_51	SWITCH_1	IF_29	CALL_44
0x4007b92	            0x7416	                            je 0x4007baa	      5017	normal.c	FUNCTION_51	SWITCH_1	IF_29	CALL_44
0x4007b94	    0x488b3d000000	            mov rdi, qword [0x04007b9b] 	      5019	normal.c	FUNCTION_51	SWITCH_1	IF_29	CALL_45
0x4007b9b	      0xe800000000	                          call 0x4007ba0	      5019	normal.c	FUNCTION_51	SWITCH_1	IF_29	CALL_45
0x4007ba0	      0xe800000000	                          call 0x4007ba5	      5020	normal.c	FUNCTION_51	SWITCH_1	IF_29	CALL_46
0x4007ba5	      0xe966050000	                           jmp 0x4008110	      5020	normal.c	FUNCTION_51	SWITCH_1	IF_29	CALL_46
0x4007baa	    0x488b3d000000	            mov rdi, qword [0x04007bb1] 	      5022	normal.c	FUNCTION_51	SWITCH_1	ELSE_16	IF_30	CALL_47
0x4007bb1	      0xe800000000	                          call 0x4007bb6	      5022	normal.c	FUNCTION_51	SWITCH_1	ELSE_16	IF_30	CALL_47
0x4007bb6	            0x85c0	                           test eax, eax	      5022	normal.c	FUNCTION_51	SWITCH_1	ELSE_16	IF_30	CALL_47
0x4007bb8	            0x7423	                            je 0x4007bdd	      5022	normal.c	FUNCTION_51	SWITCH_1	ELSE_16	IF_30	CALL_47
0x4007bba	      0xb900000000	                              mov ecx, 0	      5023	normal.c	FUNCTION_51	SWITCH_1	ELSE_16	IF_30	CALL_48
0x4007bbf	      0xba01000000	                              mov edx, 1	      5023	normal.c	FUNCTION_51	SWITCH_1	ELSE_16	IF_30	CALL_48
0x4007bc4	    0x488b05000000	            mov rax, qword [0x04007bcb] 	      5023	normal.c	FUNCTION_51	SWITCH_1	ELSE_16	IF_30	CALL_48
0x4007bcb	          0x488b30	                    mov rsi, qword [rax]	      5023	normal.c	FUNCTION_51	SWITCH_1	ELSE_16	IF_30	CALL_48
0x4007bce	      0xbf01000000	                              mov edi, 1	      5023	normal.c	FUNCTION_51	SWITCH_1	ELSE_16	IF_30	CALL_48
0x4007bd3	      0xe800000000	                          call 0x4007bd8	      5023	normal.c	FUNCTION_51	SWITCH_1	ELSE_16	IF_30	CALL_48
0x4007bd8	      0xe933050000	                           jmp 0x4008110	      5023	normal.c	FUNCTION_51	SWITCH_1	ELSE_16	IF_30	CALL_48
0x4007bdd	      0xba05000000	                              mov edx, 5	      5026	normal.c	FUNCTION_51	SWITCH_1	CALL_50
0x4007be2	      0xbe00000000	                              mov esi, 0	      5026	normal.c	FUNCTION_51	SWITCH_1	CALL_50
0x4007be7	      0xbf00000000	                              mov edi, 0	      5026	normal.c	FUNCTION_51	SWITCH_1	CALL_50
0x4007bec	      0xe800000000	                          call 0x4007bf1	      5026	normal.c	FUNCTION_51	SWITCH_1	CALL_50
0x4007bf1	          0x4889c7	                            mov rdi, rax	      5026	normal.c	FUNCTION_51	SWITCH_1	CALL_50
0x4007bf4	      0xe800000000	                          call 0x4007bf9	      5026	normal.c	FUNCTION_51	SWITCH_1	CALL_50
0x4007bf9	      0xe912050000	                           jmp 0x4008110	      5026	normal.c	FUNCTION_51	SWITCH_1	CALL_50
0x4007bfe	    0x488b05000000	            mov rax, qword [0x04007c05] 	      5030	normal.c	FUNCTION_51	SWITCH_1
0x4007c05	    0xc780d4010000	              mov dword [rax + 0x1d4], 0	      5030	normal.c	FUNCTION_51	SWITCH_1
0x4007c0f	      0xe9fc040000	                           jmp 0x4008110	      5031	normal.c	FUNCTION_51	SWITCH_1
0x4007c14	    0x488b05000000	            mov rax, qword [0x04007c1b] 	      5034	normal.c	FUNCTION_51	SWITCH_1
0x4007c1b	    0xc780d4010000	              mov dword [rax + 0x1d4], 1	      5034	normal.c	FUNCTION_51	SWITCH_1
0x4007c25	      0xe9e6040000	                           jmp 0x4008110	      5035	normal.c	FUNCTION_51	SWITCH_1
0x4007c2a	    0x488b05000000	            mov rax, qword [0x04007c31] 	      5038	normal.c	FUNCTION_51	SWITCH_1
0x4007c31	    0x83b8d4010000	              cmp dword [rax + 0x1d4], 0	      5038	normal.c	FUNCTION_51	SWITCH_1
0x4007c38	           0xf94c2	                                 sete dl	      5038	normal.c	FUNCTION_51	SWITCH_1
0x4007c3b	           0xfb6d2	                           movzx edx, dl	      5038	normal.c	FUNCTION_51	SWITCH_1
0x4007c3e	    0x8990d4010000	            mov dword [rax + 0x1d4], edx	      5038	normal.c	FUNCTION_51	SWITCH_1
0x4007c44	      0xe9c7040000	                           jmp 0x4008110	      5039	normal.c	FUNCTION_51	SWITCH_1
0x4007c49	    0x488b05000000	            mov rax, qword [0x04007c50] 	      5042	normal.c	FUNCTION_51	SWITCH_1	IF_31	CALL_51
0x4007c50	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      5042	normal.c	FUNCTION_51	SWITCH_1	IF_31	CALL_51
0x4007c54	      0xba00000000	                              mov edx, 0	      5042	normal.c	FUNCTION_51	SWITCH_1	IF_31	CALL_51
0x4007c59	      0xbe00000000	                              mov esi, 0	      5042	normal.c	FUNCTION_51	SWITCH_1	IF_31	CALL_51
0x4007c5e	      0xe800000000	                          call 0x4007c63	      5042	normal.c	FUNCTION_51	SWITCH_1	IF_31	CALL_51
0x4007c63	            0x85c0	                           test eax, eax	      5042	normal.c	FUNCTION_51	SWITCH_1	IF_31	CALL_51
0x4007c65	            0x7419	                            je 0x4007c80	      5042	normal.c	FUNCTION_51	SWITCH_1	IF_31	CALL_51
0x4007c67	        0x488b7530	            mov rsi, qword [rbp + 0x30] 	      5043	normal.c	FUNCTION_51	SWITCH_1	CALL_52
0x4007c6b	    0x488b05000000	            mov rax, qword [0x04007c72] 	      5043	normal.c	FUNCTION_51	SWITCH_1	CALL_52
0x4007c72	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      5043	normal.c	FUNCTION_51	SWITCH_1	CALL_52
0x4007c76	      0xe800000000	                          call 0x4007c7b	      5043	normal.c	FUNCTION_51	SWITCH_1	CALL_52
0x4007c7b	      0xe990040000	                           jmp 0x4008110	      5043	normal.c	FUNCTION_51	SWITCH_1	CALL_52
0x4007c80	        0x488b7530	            mov rsi, qword [rbp + 0x30] 	      5046	normal.c	FUNCTION_51	SWITCH_1	ELSE_18	CALL_53
0x4007c84	    0x488b05000000	            mov rax, qword [0x04007c8b] 	      5046	normal.c	FUNCTION_51	SWITCH_1	ELSE_18	CALL_53
0x4007c8b	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      5046	normal.c	FUNCTION_51	SWITCH_1	ELSE_18	CALL_53
0x4007c8f	      0xe800000000	                          call 0x4007c94	      5046	normal.c	FUNCTION_51	SWITCH_1	ELSE_18	CALL_53
0x4007c94	    0x488b05000000	            mov rax, qword [0x04007c9b] 	      5047	normal.c	FUNCTION_51	SWITCH_1	ELSE_18
0x4007c9b	    0xc780d4010000	              mov dword [rax + 0x1d4], 1	      5047	normal.c	FUNCTION_51	SWITCH_1	ELSE_18
0x4007ca5	      0xe966040000	                           jmp 0x4008110	      5047	normal.c	FUNCTION_51	SWITCH_1	ELSE_18
0x4007caa	    0x488b05000000	            mov rax, qword [0x04007cb1] 	      5052	normal.c	FUNCTION_51	SWITCH_1	IF_32	CALL_54
0x4007cb1	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      5052	normal.c	FUNCTION_51	SWITCH_1	IF_32	CALL_54
0x4007cb5	      0xba00000000	                              mov edx, 0	      5052	normal.c	FUNCTION_51	SWITCH_1	IF_32	CALL_54
0x4007cba	      0xbe00000000	                              mov esi, 0	      5052	normal.c	FUNCTION_51	SWITCH_1	IF_32	CALL_54
0x4007cbf	      0xe800000000	                          call 0x4007cc4	      5052	normal.c	FUNCTION_51	SWITCH_1	IF_32	CALL_54
0x4007cc4	            0x85c0	                           test eax, eax	      5052	normal.c	FUNCTION_51	SWITCH_1	IF_32	CALL_54
0x4007cc6	            0x7415	                            je 0x4007cdd	      5052	normal.c	FUNCTION_51	SWITCH_1	IF_32	CALL_54
0x4007cc8	    0x488b05000000	            mov rax, qword [0x04007ccf] 	      5053	normal.c	FUNCTION_51	SWITCH_1	CALL_55
0x4007ccf	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      5053	normal.c	FUNCTION_51	SWITCH_1	CALL_55
0x4007cd3	      0xe800000000	                          call 0x4007cd8	      5053	normal.c	FUNCTION_51	SWITCH_1	CALL_55
0x4007cd8	      0xe933040000	                           jmp 0x4008110	      5053	normal.c	FUNCTION_51	SWITCH_1	CALL_55
0x4007cdd	    0x488b05000000	            mov rax, qword [0x04007ce4] 	      5056	normal.c	FUNCTION_51	SWITCH_1	ELSE_19	CALL_56
0x4007ce4	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      5056	normal.c	FUNCTION_51	SWITCH_1	ELSE_19	CALL_56
0x4007ce8	      0xe800000000	                          call 0x4007ced	      5056	normal.c	FUNCTION_51	SWITCH_1	ELSE_19	CALL_56
0x4007ced	    0x488b05000000	            mov rax, qword [0x04007cf4] 	      5057	normal.c	FUNCTION_51	SWITCH_1	ELSE_19
0x4007cf4	    0xc780d4010000	              mov dword [rax + 0x1d4], 1	      5057	normal.c	FUNCTION_51	SWITCH_1	ELSE_19
0x4007cfe	      0xe90d040000	                           jmp 0x4008110	      5057	normal.c	FUNCTION_51	SWITCH_1	ELSE_19
0x4007d03	    0x833d00000000	               cmp dword [0x04007d0a], 0	      5062	normal.c	FUNCTION_51	SWITCH_1	IF_33
0x4007d0a	            0x740d	                            je 0x4007d19	      5062	normal.c	FUNCTION_51	SWITCH_1	IF_33
0x4007d0c	          0x4889ef	                            mov rdi, rbp	      5063	normal.c	FUNCTION_51	SWITCH_1	CALL_57
0x4007d0f	      0xe84a9effff	                    call sym.nv_operator	      5063	normal.c	FUNCTION_51	SWITCH_1	CALL_57
0x4007d14	      0xe9f7030000	                           jmp 0x4008110	      5063	normal.c	FUNCTION_51	SWITCH_1	CALL_57
0x4007d19	        0x488b7530	            mov rsi, qword [rbp + 0x30] 	      5065	normal.c	FUNCTION_51	SWITCH_1	CALL_58
0x4007d1d	    0x488b05000000	            mov rax, qword [0x04007d24] 	      5065	normal.c	FUNCTION_51	SWITCH_1	CALL_58
0x4007d24	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      5065	normal.c	FUNCTION_51	SWITCH_1	CALL_58
0x4007d28	      0xe800000000	                          call 0x4007d2d	      5065	normal.c	FUNCTION_51	SWITCH_1	CALL_58
0x4007d2d	      0xe9de030000	                           jmp 0x4008110	      5065	normal.c	FUNCTION_51	SWITCH_1	CALL_58
0x4007d32	    0x833d00000000	               cmp dword [0x04007d39], 0	      5069	normal.c	FUNCTION_51	SWITCH_1	IF_34
0x4007d39	            0x740d	                            je 0x4007d48	      5069	normal.c	FUNCTION_51	SWITCH_1	IF_34
0x4007d3b	          0x4889ef	                            mov rdi, rbp	      5070	normal.c	FUNCTION_51	SWITCH_1	CALL_59
0x4007d3e	      0xe81b9effff	                    call sym.nv_operator	      5070	normal.c	FUNCTION_51	SWITCH_1	CALL_59
0x4007d43	      0xe9c8030000	                           jmp 0x4008110	      5070	normal.c	FUNCTION_51	SWITCH_1	CALL_59
0x4007d48	    0x488b05000000	            mov rax, qword [0x04007d4f] 	      5072	normal.c	FUNCTION_51	SWITCH_1	CALL_60
0x4007d4f	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      5072	normal.c	FUNCTION_51	SWITCH_1	CALL_60
0x4007d53	      0xe800000000	                          call 0x4007d58	      5072	normal.c	FUNCTION_51	SWITCH_1	CALL_60
0x4007d58	      0xe9b3030000	                           jmp 0x4008110	      5072	normal.c	FUNCTION_51	SWITCH_1	CALL_60
0x4007d5d	    0x833d00000000	               cmp dword [0x04007d64], 0	      5076	normal.c	FUNCTION_51	SWITCH_1	IF_35
0x4007d64	            0x740a	                            je 0x4007d70	      5076	normal.c	FUNCTION_51	SWITCH_1	IF_35
0x4007d66	          0x4889ef	                            mov rdi, rbp	      5077	normal.c	FUNCTION_51	SWITCH_1	CALL_61
0x4007d69	      0xe8f09dffff	                    call sym.nv_operator	      5077	normal.c	FUNCTION_51	SWITCH_1	CALL_61
0x4007d6e	            0xeb14	                           jmp 0x4007d84	      5077	normal.c	FUNCTION_51	SWITCH_1	CALL_61
0x4007d70	        0x488b7530	            mov rsi, qword [rbp + 0x30] 	      5079	normal.c	FUNCTION_51	SWITCH_1	CALL_62
0x4007d74	    0x488b05000000	            mov rax, qword [0x04007d7b] 	      5079	normal.c	FUNCTION_51	SWITCH_1	CALL_62
0x4007d7b	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      5079	normal.c	FUNCTION_51	SWITCH_1	CALL_62
0x4007d7f	      0xe800000000	                          call 0x4007d84	      5079	normal.c	FUNCTION_51	SWITCH_1	CALL_62
0x4007d84	    0x488b05000000	            mov rax, qword [0x04007d8b] 	      5080	normal.c	FUNCTION_51	SWITCH_1
0x4007d8b	    0xc780d4010000	              mov dword [rax + 0x1d4], 1	      5080	normal.c	FUNCTION_51	SWITCH_1
0x4007d95	      0xe976030000	                           jmp 0x4008110	      5081	normal.c	FUNCTION_51	SWITCH_1
0x4007d9a	    0x833d00000000	               cmp dword [0x04007da1], 0	      5084	normal.c	FUNCTION_51	SWITCH_1	IF_36
0x4007da1	            0x740a	                            je 0x4007dad	      5084	normal.c	FUNCTION_51	SWITCH_1	IF_36
0x4007da3	          0x4889ef	                            mov rdi, rbp	      5085	normal.c	FUNCTION_51	SWITCH_1	CALL_63
0x4007da6	      0xe8b39dffff	                    call sym.nv_operator	      5085	normal.c	FUNCTION_51	SWITCH_1	CALL_63
0x4007dab	            0xeb10	                           jmp 0x4007dbd	      5085	normal.c	FUNCTION_51	SWITCH_1	CALL_63
0x4007dad	    0x488b05000000	            mov rax, qword [0x04007db4] 	      5087	normal.c	FUNCTION_51	SWITCH_1	CALL_64
0x4007db4	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      5087	normal.c	FUNCTION_51	SWITCH_1	CALL_64
0x4007db8	      0xe800000000	                          call 0x4007dbd	      5087	normal.c	FUNCTION_51	SWITCH_1	CALL_64
0x4007dbd	    0x488b05000000	            mov rax, qword [0x04007dc4] 	      5088	normal.c	FUNCTION_51	SWITCH_1
0x4007dc4	    0xc780d4010000	              mov dword [rax + 0x1d4], 1	      5088	normal.c	FUNCTION_51	SWITCH_1
0x4007dce	      0xe93d030000	                           jmp 0x4008110	      5089	normal.c	FUNCTION_51	SWITCH_1
0x4007dd3	      0xe800000000	                          call 0x4007dd8	      5092	normal.c	FUNCTION_51	SWITCH_1	CALL_65
0x4007dd8	      0xe933030000	                           jmp 0x4008110	      5093	normal.c	FUNCTION_51	SWITCH_1
0x4007ddd	    0x488b05000000	            mov rax, qword [0x04007de4] 	      5096	normal.c	FUNCTION_51	SWITCH_1
0x4007de4	    0xc780d4010000	              mov dword [rax + 0x1d4], 1	      5096	normal.c	FUNCTION_51	SWITCH_1
0x4007dee	    0xc68021010000	               mov byte [rax + 0x121], 1	      5097	normal.c	FUNCTION_51	SWITCH_1
0x4007df5	      0xe800000000	                          call 0x4007dfa	      5098	normal.c	FUNCTION_51	SWITCH_1	CALL_66
0x4007dfa	      0xe800000000	                          call 0x4007dff	      5099	normal.c	FUNCTION_51	SWITCH_1	CALL_67
0x4007dff	      0xe90c030000	                           jmp 0x4008110	      5100	normal.c	FUNCTION_51	SWITCH_1
0x4007e04	    0x488b05000000	            mov rax, qword [0x04007e0b] 	      5103	normal.c	FUNCTION_51	SWITCH_1
0x4007e0b	    0xc780d4010000	              mov dword [rax + 0x1d4], 1	      5103	normal.c	FUNCTION_51	SWITCH_1
0x4007e15	    0xc68021010000	               mov byte [rax + 0x121], 1	      5104	normal.c	FUNCTION_51	SWITCH_1
0x4007e1c	    0x49c7c4ffffff	             mov r12, 0xffffffffffffffff	      5105	normal.c	FUNCTION_51	SWITCH_1
0x4007e23	      0xe9e8020000	                           jmp 0x4008110	      5106	normal.c	FUNCTION_51	SWITCH_1
0x4007e28	    0x488b15000000	            mov rdx, qword [0x04007e2f] 	      5109	normal.c	FUNCTION_51	SWITCH_1	IF_37
0x4007e2f	    0x488b82e80100	           mov rax, qword [rdx + 0x1e8] 	      5109	normal.c	FUNCTION_51	SWITCH_1	IF_37
0x4007e36	          0x4885c0	                           test rax, rax	      5109	normal.c	FUNCTION_51	SWITCH_1	IF_37
0x4007e39	            0x7e14	                           jle 0x4007e4f	      5109	normal.c	FUNCTION_51	SWITCH_1	IF_37
0x4007e3b	        0x482b4530	             sub rax, qword [rbp + 0x30]	      5112	normal.c	FUNCTION_51	SWITCH_1	IF_37	IF_38
0x4007e3f	      0xb900000000	                              mov ecx, 0	      5111	normal.c	FUNCTION_51	SWITCH_1	IF_37
0x4007e44	        0x480f48c1	                          cmovs rax, rcx	      5111	normal.c	FUNCTION_51	SWITCH_1	IF_37
0x4007e48	    0x488982e80100	            mov qword [rdx + 0x1e8], rax	      5111	normal.c	FUNCTION_51	SWITCH_1	IF_37
0x4007e4f	    0xc782d4010000	              mov dword [rdx + 0x1d4], 1	      5116	normal.c	FUNCTION_51	SWITCH_1
0x4007e59	    0x49c7c4ffffff	             mov r12, 0xffffffffffffffff	      5115	normal.c	FUNCTION_51	SWITCH_1
0x4007e60	      0xe9ab020000	                           jmp 0x4008110	      5117	normal.c	FUNCTION_51	SWITCH_1
0x4007e65	    0x488b3d000000	            mov rdi, qword [0x04007e6c] 	      5120	normal.c	FUNCTION_51	SWITCH_1
0x4007e6c	    0x48c787e80100	              mov qword [rdi + 0x1e8], 0	      5120	normal.c	FUNCTION_51	SWITCH_1
0x4007e77	    0xc787d4010000	              mov dword [rdi + 0x1d4], 1	      5122	normal.c	FUNCTION_51	SWITCH_1
0x4007e81	    0x49c7c4ffffff	             mov r12, 0xffffffffffffffff	      5121	normal.c	FUNCTION_51	SWITCH_1
0x4007e88	        0x4183fd01	                             cmp r13d, 1	      5217	normal.c	FUNCTION_51	IF_48
0x4007e8c	     0xf858e020000	                           jne 0x4008120	      5217	normal.c	FUNCTION_51	IF_48
0x4007e92	      0xe909030000	                           jmp 0x40081a0	      5217	normal.c	FUNCTION_51	IF_48
0x4007e97	    0x488b05000000	            mov rax, qword [0x04007e9e] 	      5126	normal.c	FUNCTION_51	SWITCH_1
0x4007e9e	        0x488b5530	            mov rdx, qword [rbp + 0x30] 	      5126	normal.c	FUNCTION_51	SWITCH_1
0x4007ea2	    0x480190e80100	           add qword [rax + 0x1e8], rdx 	      5126	normal.c	FUNCTION_51	SWITCH_1
0x4007ea9	      0xe800000000	                          call 0x4007eae	      5128	normal.c	FUNCTION_51	SWITCH_1	CALL_68
0x4007eae	    0x488b15000000	            mov rdx, qword [0x04007eb5] 	      5130	normal.c	FUNCTION_51	SWITCH_1	IF_39
0x4007eb5	            0x4898	                                    cdqe	      5130	normal.c	FUNCTION_51	SWITCH_1	IF_39
0x4007eb7	    0x483982e80100	           cmp qword [rdx + 0x1e8], rax 	      5130	normal.c	FUNCTION_51	SWITCH_1	IF_39
0x4007ebe	     0xf8c4c020000	                            jl 0x4008110	      5130	normal.c	FUNCTION_51	SWITCH_1	IF_39
0x4007ec4	    0x488982e80100	            mov qword [rdx + 0x1e8], rax	      5131	normal.c	FUNCTION_51	SWITCH_1	IF_39
0x4007ecb	      0xe940020000	                           jmp 0x4008110	      5131	normal.c	FUNCTION_51	SWITCH_1	IF_39
0x4007ed0	    0x488b1d000000	            mov rbx, qword [0x04007ed7] 	      5136	normal.c	FUNCTION_51	SWITCH_1	CALL_69
0x4007ed7	      0xe800000000	                          call 0x4007edc	      5136	normal.c	FUNCTION_51	SWITCH_1	CALL_69
0x4007edc	            0x4898	                                    cdqe	      5136	normal.c	FUNCTION_51	SWITCH_1	CALL_69
0x4007ede	    0x488983e80100	            mov qword [rbx + 0x1e8], rax	      5136	normal.c	FUNCTION_51	SWITCH_1	CALL_69
0x4007ee5	    0x49c7c4ffffff	             mov r12, 0xffffffffffffffff	      5137	normal.c	FUNCTION_51	SWITCH_1
0x4007eec	      0xe91f020000	                           jmp 0x4008110	      5138	normal.c	FUNCTION_51	SWITCH_1
0x4007ef1	        0x488b5530	            mov rdx, qword [rbp + 0x30] 	      5142	normal.c	FUNCTION_51	SWITCH_1	IF_40	CALL_70
0x4007ef5	          0x83fb6a	                           cmp ebx, 0x6a	      5142	normal.c	FUNCTION_51	SWITCH_1	IF_40	CALL_70
0x4007ef8	        0x400f94c6	                                sete sil	      5142	normal.c	FUNCTION_51	SWITCH_1	IF_40	CALL_70
0x4007efc	        0x400fb6f6	                          movzx esi, sil	      5142	normal.c	FUNCTION_51	SWITCH_1	IF_40	CALL_70
0x4007f00	        0x8d7436ff	                lea esi, [rsi + rsi - 1]	      5142	normal.c	FUNCTION_51	SWITCH_1	IF_40	CALL_70
0x4007f04	      0xbf01000000	                              mov edi, 1	      5142	normal.c	FUNCTION_51	SWITCH_1	IF_40	CALL_70
0x4007f09	      0xe800000000	                          call 0x4007f0e	      5142	normal.c	FUNCTION_51	SWITCH_1	IF_40	CALL_70
0x4007f0e	            0x85c0	                           test eax, eax	      5142	normal.c	FUNCTION_51	SWITCH_1	IF_40	CALL_70
0x4007f10	     0xf85fa010000	                           jne 0x4008110	      5142	normal.c	FUNCTION_51	SWITCH_1	IF_40	CALL_70
0x4007f16	        0x488b7d00	                    mov rdi, qword [rbp]	      5144	normal.c	FUNCTION_51	SWITCH_1	CALL_71
0x4007f1a	      0xe81983ffff	                    call sym.clearopbeep	      5144	normal.c	FUNCTION_51	SWITCH_1	CALL_71
0x4007f1f	      0xe9ec010000	                           jmp 0x4008110	      5144	normal.c	FUNCTION_51	SWITCH_1	CALL_71
0x4007f24	    0x830500000000	               add dword [0x04007f2b], 1	      5151	normal.c	FUNCTION_51	SWITCH_1
0x4007f2b	    0x830500000000	               add dword [0x04007f32], 1	      5152	normal.c	FUNCTION_51	SWITCH_1
0x4007f32	      0xe800000000	                          call 0x4007f37	      5153	normal.c	FUNCTION_51	SWITCH_1	CALL_72
0x4007f37	            0x89c3	                            mov ebx, eax	      5153	normal.c	FUNCTION_51	SWITCH_1	CALL_72
0x4007f39	    0x488b05000000	            mov rax, qword [0x04007f40] 	      5154	normal.c	FUNCTION_51	SWITCH_1	CALL_73
0x4007f40	          0x803800	                       cmp byte [rax], 0	      5154	normal.c	FUNCTION_51	SWITCH_1	CALL_73
0x4007f43	            0x743c	                            je 0x4007f81	      5154	normal.c	FUNCTION_51	SWITCH_1	CALL_73
0x4007f45	    0x833d00000000	               cmp dword [0x04007f4c], 0	      5154	normal.c	FUNCTION_51	SWITCH_1	CALL_73
0x4007f4c	            0x7509	                           jne 0x4007f57	      5154	normal.c	FUNCTION_51	SWITCH_1	CALL_73
0x4007f4e	    0x833d00000000	               cmp dword [0x04007f55], 0	      5154	normal.c	FUNCTION_51	SWITCH_1	CALL_73
0x4007f55	            0x742a	                            je 0x4007f81	      5154	normal.c	FUNCTION_51	SWITCH_1	CALL_73
0x4007f57	    0x833d00000000	               cmp dword [0x04007f5e], 0	      5154	normal.c	FUNCTION_51	SWITCH_1	CALL_73
0x4007f5e	            0x7521	                           jne 0x4007f81	      5154	normal.c	FUNCTION_51	SWITCH_1	CALL_73
0x4007f60	            0x85db	                           test ebx, ebx	      5154	normal.c	FUNCTION_51	SWITCH_1	CALL_73
0x4007f62	            0x781d	                            js 0x4007f81	      5154	normal.c	FUNCTION_51	SWITCH_1	CALL_73
0x4007f64	    0x81fbff000000	                           cmp ebx, 0xff	      5154	normal.c	FUNCTION_51	SWITCH_1	CALL_73
0x4007f6a	            0x7f0c	                            jg 0x4007f78	      5154	normal.c	FUNCTION_51	SWITCH_1	CALL_73
0x4007f6c	          0x4863db	                         movsxd rbx, ebx	      5154	normal.c	FUNCTION_51	SWITCH_1	CALL_73
0x4007f6f	     0xfb69b000000	                   movzx ebx, byte [rbx]	      5154	normal.c	FUNCTION_51	SWITCH_1	CALL_73
0x4007f76	            0xeb09	                           jmp 0x4007f81	      5154	normal.c	FUNCTION_51	SWITCH_1	CALL_73
0x4007f78	            0x89df	                            mov edi, ebx	      5154	normal.c	FUNCTION_51	SWITCH_1	CALL_73
0x4007f7a	      0xe800000000	                          call 0x4007f7f	      5154	normal.c	FUNCTION_51	SWITCH_1	CALL_73
0x4007f7f	            0x89c3	                            mov ebx, eax	      5154	normal.c	FUNCTION_51	SWITCH_1	CALL_73
0x4007f81	    0x832d00000000	               sub dword [0x04007f88], 1	      5155	normal.c	FUNCTION_51	SWITCH_1
0x4007f88	    0x832d00000000	               sub dword [0x04007f8f], 1	      5156	normal.c	FUNCTION_51	SWITCH_1
0x4007f8f	            0x89df	                            mov edi, ebx	      5158	normal.c	FUNCTION_51	SWITCH_1	CALL_74
0x4007f91	      0xe800000000	                          call 0x4007f96	      5158	normal.c	FUNCTION_51	SWITCH_1	CALL_74
0x4007f96	            0x89de	                            mov esi, ebx	      5160	normal.c	FUNCTION_51	SWITCH_1	IF_41	CALL_75
0x4007f98	      0xbf00000000	                              mov edi, 0	      5160	normal.c	FUNCTION_51	SWITCH_1	IF_41	CALL_75
0x4007f9d	      0xe800000000	                          call 0x4007fa2	      5160	normal.c	FUNCTION_51	SWITCH_1	IF_41	CALL_75
0x4007fa2	    0x41bf01000000	                             mov r15d, 1	      5165	normal.c	FUNCTION_51	SWITCH_1
0x4007fa8	          0x4885c0	                           test rax, rax	      5160	normal.c	FUNCTION_51	SWITCH_1	IF_41	CALL_75
0x4007fab	            0x751c	                           jne 0x4007fc9	      5160	normal.c	FUNCTION_51	SWITCH_1	IF_41	CALL_75
0x4007fad	        0x488b7d00	                    mov rdi, qword [rbp]	      5162	normal.c	FUNCTION_51	SWITCH_1	IF_41	CALL_76
0x4007fb1	      0xe88282ffff	                    call sym.clearopbeep	      5162	normal.c	FUNCTION_51	SWITCH_1	IF_41	CALL_76
0x4007fb6	      0xe955010000	                           jmp 0x4008110	      5163	normal.c	FUNCTION_51	SWITCH_1	IF_41
0x4007fbb	    0x41bf00000000	                             mov r15d, 0	      4764	normal.c	FUNCTION_51
0x4007fc1	            0xeb06	                           jmp 0x4007fc9	      4764	normal.c	FUNCTION_51
0x4007fc3	    0x41bf00000000	                             mov r15d, 0	      4764	normal.c	FUNCTION_51
0x4007fc9	    0x48c744242000	               mov qword [rsp + 0x20], 0	      5173	normal.c	FUNCTION_51	SWITCH_1
0x4007fd2	        0x488b7d00	                    mov rdi, qword [rbp]	      5176	normal.c	FUNCTION_51	SWITCH_1	IF_42	CALL_77
0x4007fd6	      0xe8a882ffff	                   call sym.checkclearop	      5176	normal.c	FUNCTION_51	SWITCH_1	IF_42	CALL_77
0x4007fdb	          0x4189c6	                           mov r14d, eax	      5176	normal.c	FUNCTION_51	SWITCH_1	IF_42	CALL_77
0x4007fde	            0x85c0	                           test eax, eax	      5176	normal.c	FUNCTION_51	SWITCH_1	IF_42	CALL_77
0x4007fe0	     0xf852a010000	                           jne 0x4008110	      5176	normal.c	FUNCTION_51	SWITCH_1	IF_42	CALL_77
0x4007fe6	    0x833d00000000	               cmp dword [0x04007fed], 0	      5178	normal.c	FUNCTION_51	SWITCH_1	IF_43	CALL_78
0x4007fed	            0x741a	                            je 0x4008009	      5178	normal.c	FUNCTION_51	SWITCH_1	IF_43	CALL_78
0x4007fef	      0x488d54241c	                   lea rdx, [rsp + 0x1c]	      5178	normal.c	FUNCTION_51	SWITCH_1	IF_43	CALL_78
0x4007ff4	      0x488d742420	                   lea rsi, [rsp + 0x20]	      5178	normal.c	FUNCTION_51	SWITCH_1	IF_43	CALL_78
0x4007ff9	          0x4889ef	                            mov rdi, rbp	      5178	normal.c	FUNCTION_51	SWITCH_1	IF_43	CALL_78
0x4007ffc	      0xe800000000	                          call 0x4008001	      5178	normal.c	FUNCTION_51	SWITCH_1	IF_43	CALL_78
0x4008001	            0x85c0	                           test eax, eax	      5178	normal.c	FUNCTION_51	SWITCH_1	IF_43	CALL_78
0x4008003	     0xf84e4030000	                            je 0x40083ed	      5178	normal.c	FUNCTION_51	SWITCH_1	IF_43	CALL_78
0x4008009	    0x48837c242000	               cmp qword [rsp + 0x20], 0	      5181	normal.c	FUNCTION_51	SWITCH_1	IF_44
0x400800f	     0xf85aa000000	                           jne 0x40080bf	      5181	normal.c	FUNCTION_51	SWITCH_1	IF_44
0x4008015	    0x488b3d000000	            mov rdi, qword [0x0400801c] 	      5183	normal.c	FUNCTION_51	SWITCH_1	IF_44
0x400801c	        0x488b4738	            mov rax, qword [rdi + 0x38] 	      5183	normal.c	FUNCTION_51	SWITCH_1	IF_44
0x4008020	      0x4889442408	                mov qword [rsp + 8], rax	      5183	normal.c	FUNCTION_51	SWITCH_1	IF_44
0x4008025	          0x8b4740	            mov eax, dword [rdi + 0x40] 	      5183	normal.c	FUNCTION_51	SWITCH_1	IF_44
0x4008028	          0x890424	                    mov dword [rsp], eax	      5183	normal.c	FUNCTION_51	SWITCH_1	IF_44
0x400802b	          0x8b7744	            mov esi, dword [rdi + 0x44] 	      5183	normal.c	FUNCTION_51	SWITCH_1	IF_44
0x400802e	        0x89742404	                mov dword [rsp + 4], esi	      5183	normal.c	FUNCTION_51	SWITCH_1	IF_44
0x4008032	    0x830500000000	               add dword [0x04008039], 1	      5188	normal.c	FUNCTION_51	SWITCH_1	IF_44
0x4008039	    0x41b800000000	                              mov r8d, 0	      5189	normal.c	FUNCTION_51	SWITCH_1	IF_44	CALL_79
0x400803f	      0xb901000000	                              mov ecx, 1	      5189	normal.c	FUNCTION_51	SWITCH_1	IF_44	CALL_79
0x4008044	      0xba01000000	                              mov edx, 1	      5189	normal.c	FUNCTION_51	SWITCH_1	IF_44	CALL_79
0x4008049	      0xbe01000000	                              mov esi, 1	      5189	normal.c	FUNCTION_51	SWITCH_1	IF_44	CALL_79
0x400804e	      0xe800000000	                          call 0x4008053	      5189	normal.c	FUNCTION_51	SWITCH_1	IF_44	CALL_79
0x4008053	        0x8944241c	             mov dword [rsp + 0x1c], eax	      5189	normal.c	FUNCTION_51	SWITCH_1	IF_44	CALL_79
0x4008057	    0x832d00000000	               sub dword [0x0400805e], 1	      5190	normal.c	FUNCTION_51	SWITCH_1	IF_44
0x400805e	            0x85c0	                           test eax, eax	      5191	normal.c	FUNCTION_51	SWITCH_1	IF_44	IF_45
0x4008060	            0x741d	                            je 0x400807f	      5191	normal.c	FUNCTION_51	SWITCH_1	IF_44	IF_45
0x4008062	    0x488b05000000	            mov rax, qword [0x04008069] 	      5191	normal.c	FUNCTION_51	SWITCH_1	IF_44	IF_45
0x4008069	          0x8b0c24	                    mov ecx, dword [rsp]	      5191	normal.c	FUNCTION_51	SWITCH_1	IF_44	IF_45
0x400806c	          0x394840	            cmp dword [rax + 0x40], ecx 	      5191	normal.c	FUNCTION_51	SWITCH_1	IF_44	IF_45
0x400806f	            0x7f0e	                            jg 0x400807f	      5191	normal.c	FUNCTION_51	SWITCH_1	IF_44	IF_45
0x4008071	        0x488d7838	                   lea rdi, [rax + 0x38]	      5192	normal.c	FUNCTION_51	SWITCH_1	IF_44	CALL_80
0x4008075	      0xe800000000	                          call 0x400807a	      5192	normal.c	FUNCTION_51	SWITCH_1	IF_44	CALL_80
0x400807a	      0x4889442420	             mov qword [rsp + 0x20], rax	      5192	normal.c	FUNCTION_51	SWITCH_1	IF_44	CALL_80
0x400807f	    0x488b05000000	            mov rax, qword [0x04008086] 	      5193	normal.c	FUNCTION_51	SWITCH_1	IF_44
0x4008086	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      5193	normal.c	FUNCTION_51	SWITCH_1	IF_44
0x400808b	        0x48894838	             mov qword [rax + 0x38], rcx	      5193	normal.c	FUNCTION_51	SWITCH_1	IF_44
0x400808f	          0x8b0c24	                    mov ecx, dword [rsp]	      5193	normal.c	FUNCTION_51	SWITCH_1	IF_44
0x4008092	          0x894840	             mov dword [rax + 0x40], ecx	      5193	normal.c	FUNCTION_51	SWITCH_1	IF_44
0x4008095	        0x8b4c2404	                mov ecx, dword [rsp + 4]	      5193	normal.c	FUNCTION_51	SWITCH_1	IF_44
0x4008099	          0x894844	             mov dword [rax + 0x44], ecx	      5193	normal.c	FUNCTION_51	SWITCH_1	IF_44
0x400809c	    0x48837c242000	               cmp qword [rsp + 0x20], 0	      5196	normal.c	FUNCTION_51	SWITCH_1	IF_46	CALL_81
0x40080a2	            0x751b	                           jne 0x40080bf	      5196	normal.c	FUNCTION_51	SWITCH_1	IF_46	CALL_81
0x40080a4	      0xbe01000000	                              mov esi, 1	      5196	normal.c	FUNCTION_51	SWITCH_1	IF_46	CALL_81
0x40080a9	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      5196	normal.c	FUNCTION_51	SWITCH_1	IF_46	CALL_81
0x40080ae	      0xe800000000	                          call 0x40080b3	      5196	normal.c	FUNCTION_51	SWITCH_1	IF_46	CALL_81
0x40080b3	        0x8944241c	             mov dword [rsp + 0x1c], eax	      5196	normal.c	FUNCTION_51	SWITCH_1	IF_46	CALL_81
0x40080b7	            0x85c0	                           test eax, eax	      5196	normal.c	FUNCTION_51	SWITCH_1	IF_46	CALL_81
0x40080b9	     0xf842e030000	                            je 0x40083ed	      5196	normal.c	FUNCTION_51	SWITCH_1	IF_46	CALL_81
0x40080bf	            0x89d8	                            mov eax, ebx	      5199	normal.c	FUNCTION_51	SWITCH_1	CALL_82
0x40080c1	          0x83e0ef	                     and eax, 0xffffffef	      5199	normal.c	FUNCTION_51	SWITCH_1	CALL_82
0x40080c4	          0x83f847	                           cmp eax, 0x47	      5199	normal.c	FUNCTION_51	SWITCH_1	CALL_82
0x40080c7	            0x7404	                            je 0x40080cd	      5199	normal.c	FUNCTION_51	SWITCH_1	CALL_82
0x40080c9	        0x448b7530	           mov r14d, dword [rbp + 0x30] 	      5199	normal.c	FUNCTION_51	SWITCH_1	CALL_82
0x40080cd	          0x83e3df	                     and ebx, 0xffffffdf	      5199	normal.c	FUNCTION_51	SWITCH_1	CALL_82
0x40080d0	          0x83fb57	                           cmp ebx, 0x57	      5199	normal.c	FUNCTION_51	SWITCH_1	CALL_82
0x40080d3	           0xf94c2	                                 sete dl	      5199	normal.c	FUNCTION_51	SWITCH_1	CALL_82
0x40080d6	           0xfb6d2	                           movzx edx, dl	      5199	normal.c	FUNCTION_51	SWITCH_1	CALL_82
0x40080d9	          0x4589f8	                           mov r8d, r15d	      5199	normal.c	FUNCTION_51	SWITCH_1	CALL_82
0x40080dc	          0x4489f1	                           mov ecx, r14d	      5199	normal.c	FUNCTION_51	SWITCH_1	CALL_82
0x40080df	        0x8b74241c	            mov esi, dword [rsp + 0x1c] 	      5199	normal.c	FUNCTION_51	SWITCH_1	CALL_82
0x40080e3	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      5199	normal.c	FUNCTION_51	SWITCH_1	CALL_82
0x40080e8	      0xe800000000	                          call 0x40080ed	      5199	normal.c	FUNCTION_51	SWITCH_1	CALL_82
0x40080ed	            0xeb21	                           jmp 0x4008110	      5204	normal.c	FUNCTION_51	SWITCH_1
0x40080ef	        0x488b7d00	                    mov rdi, qword [rbp]	      5207	normal.c	FUNCTION_51	SWITCH_1	IF_47	CALL_83
0x40080f3	      0xe88b81ffff	                   call sym.checkclearop	      5207	normal.c	FUNCTION_51	SWITCH_1	IF_47	CALL_83
0x40080f8	            0x85c0	                           test eax, eax	      5207	normal.c	FUNCTION_51	SWITCH_1	IF_47	CALL_83
0x40080fa	            0x7514	                           jne 0x4008110	      5207	normal.c	FUNCTION_51	SWITCH_1	IF_47	CALL_83
0x40080fc	        0x488b7d28	            mov rdi, qword [rbp + 0x28] 	      5208	normal.c	FUNCTION_51	SWITCH_1	CALL_84
0x4008100	      0xe800000000	                          call 0x4008105	      5208	normal.c	FUNCTION_51	SWITCH_1	CALL_84
0x4008105	            0xeb09	                           jmp 0x4008110	      5208	normal.c	FUNCTION_51	SWITCH_1	CALL_84
0x4008107	        0x488b7d00	                    mov rdi, qword [rbp]	      5212	normal.c	FUNCTION_51	SWITCH_1	CALL_85
0x400810b	      0xe82881ffff	                    call sym.clearopbeep	      5212	normal.c	FUNCTION_51	SWITCH_1	CALL_85
0x4008110	    0x488b3d000000	            mov rdi, qword [0x04008117] 	      5217	normal.c	FUNCTION_51	IF_48
0x4008117	    0x443bafd40100	          cmp r13d, dword [rdi + 0x1d4] 	      5217	normal.c	FUNCTION_51	IF_48
0x400811e	            0x746c	                            je 0x400818c	      5217	normal.c	FUNCTION_51	IF_48
0x4008120	      0xe800000000	                          call 0x4008125	      5222	normal.c	FUNCTION_51	IF_48	IF_49	CALL_86
0x4008125	            0x85c0	                           test eax, eax	      5222	normal.c	FUNCTION_51	IF_48	IF_49	CALL_86
0x4008127	            0x745e	                            je 0x4008187	      5222	normal.c	FUNCTION_51	IF_48	IF_49	CALL_86
0x4008129	    0x488b05000000	            mov rax, qword [0x04008130] 	      5222	normal.c	FUNCTION_51	IF_48	IF_49	CALL_86
0x4008130	    0x83b888020000	              cmp dword [rax + 0x288], 0	      5222	normal.c	FUNCTION_51	IF_48	IF_49	CALL_86
0x4008137	            0x744e	                            je 0x4008187	      5222	normal.c	FUNCTION_51	IF_48	IF_49	CALL_86
0x4008139	    0x488b1d000000	            mov rbx, qword [0x04008140] 	      5225	normal.c	FUNCTION_51	IF_48	IF_49
0x4008140	          0x4885db	                           test rbx, rbx	      5225	normal.c	FUNCTION_51	IF_48	IF_49
0x4008143	            0x7442	                            je 0x4008187	      5225	normal.c	FUNCTION_51	IF_48	IF_49
0x4008145	    0x48391d000000	            cmp qword [0x0400814c], rbx 	      5227	normal.c	FUNCTION_51	IF_48	IF_49	FUNCTION_1	IF_1	CALL_1
0x400814c	            0x7430	                            je 0x400817e	      5227	normal.c	FUNCTION_51	IF_48	IF_49	FUNCTION_1	IF_1	CALL_1
0x400814e	          0x4889df	                            mov rdi, rbx	      5227	normal.c	FUNCTION_51	IF_48	IF_49	FUNCTION_1	IF_1	CALL_1
0x4008151	      0xe800000000	                          call 0x4008156	      5227	normal.c	FUNCTION_51	IF_48	IF_49	FUNCTION_1	IF_1	CALL_1
0x4008156	            0x85c0	                           test eax, eax	      5227	normal.c	FUNCTION_51	IF_48	IF_49	FUNCTION_1	IF_1	CALL_1
0x4008158	            0x7424	                            je 0x400817e	      5227	normal.c	FUNCTION_51	IF_48	IF_49	FUNCTION_1	IF_1	CALL_1
0x400815a	    0x83bb88020000	              cmp dword [rbx + 0x288], 0	      5227	normal.c	FUNCTION_51	IF_48	IF_49	FUNCTION_1	IF_1	CALL_1
0x4008161	            0x741b	                            je 0x400817e	      5227	normal.c	FUNCTION_51	IF_48	IF_49	FUNCTION_1	IF_1	CALL_1
0x4008163	    0x488b05000000	            mov rax, qword [0x0400816a] 	      5229	normal.c	FUNCTION_51	IF_48	IF_49	FUNCTION_1	IF_1
0x400816a	    0x8b80d4010000	           mov eax, dword [rax + 0x1d4] 	      5229	normal.c	FUNCTION_51	IF_48	IF_49	FUNCTION_1	IF_1
0x4008170	    0x8983d4010000	            mov dword [rbx + 0x1d4], eax	      5229	normal.c	FUNCTION_51	IF_48	IF_49	FUNCTION_1	IF_1
0x4008176	          0x4889df	                            mov rdi, rbx	      5230	normal.c	FUNCTION_51	IF_48	IF_49	FUNCTION_1	IF_1	CALL_2
0x4008179	      0xe800000000	                          call 0x400817e	      5230	normal.c	FUNCTION_51	IF_48	IF_49	FUNCTION_1	IF_1	CALL_2
0x400817e	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      5225	normal.c	FUNCTION_51	IF_48	IF_49
0x4008182	          0x4885db	                           test rbx, rbx	      5225	normal.c	FUNCTION_51	IF_48	IF_49
0x4008185	            0x75be	                           jne 0x4008145	      5225	normal.c	FUNCTION_51	IF_48	IF_49
0x4008187	      0xe800000000	                          call 0x400818c	      5235	normal.c	FUNCTION_51	IF_48	CALL_87
0x400818c	    0x488b05000000	            mov rax, qword [0x04008193] 	      5239	normal.c	FUNCTION_51	IF_50
0x4008193	    0x4c39a0e80100	           cmp qword [rax + 0x1e8], r12 	      5239	normal.c	FUNCTION_51	IF_50
0x400819a	     0xf844d020000	                            je 0x40083ed	      5239	normal.c	FUNCTION_51	IF_50
0x40081a0	      0xe800000000	                          call 0x40081a5	      5240	normal.c	FUNCTION_51	CALL_88
0x40081a5	      0xe943020000	                           jmp 0x40083ed	      5240	normal.c	FUNCTION_51	CALL_88
0x40081aa	          0x83fb5e	                           cmp ebx, 0x5e	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40081ad	     0xf848df6ffff	                            je 0x4007840	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40081b3	          0x83fb5e	                           cmp ebx, 0x5e	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40081b6	     0xf8f2a010000	                            jg 0x40082e6	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40081bc	          0x83fb44	                           cmp ebx, 0x44	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40081bf	     0xf8471f9ffff	                            je 0x4007b36	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40081c5	          0x83fb44	                           cmp ebx, 0x44	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40081c8	     0xf8f92000000	                            jg 0x4008260	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40081ce	          0x83fb2b	                           cmp ebx, 0x2b	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40081d1	     0xf84def5ffff	                            je 0x40077b5	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40081d7	          0x83fb2b	                           cmp ebx, 0x2b	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40081da	            0x7f48	                            jg 0x4008224	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40081dc	    0x81fbb5beffff	                     cmp ebx, 0xffffbeb5	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40081e2	     0xf84f5f5ffff	                            je 0x40077dd	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40081e8	    0x81fbb5beffff	                     cmp ebx, 0xffffbeb5	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40081ee	            0x7f1d	                            jg 0x400820d	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40081f0	    0x81fb958dffff	                     cmp ebx, 0xffff8d95	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40081f6	     0xf8444f7ffff	                            je 0x4007940	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40081fc	    0x81fb9593ffff	                     cmp ebx, 0xffff9395	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4008202	     0xf84d7f6ffff	                            je 0x40078df	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4008208	      0xe9fafeffff	                           jmp 0x4008107	      4849	normal.c	FUNCTION_51	SWITCH_1
0x400820d	          0x83fb0a	                            cmp ebx, 0xa	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4008210	     0xf84c7f5ffff	                            je 0x40077dd	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4008216	          0x83fb0d	                            cmp ebx, 0xd	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4008219	     0xf84bef5ffff	                            je 0x40077dd	      4849	normal.c	FUNCTION_51	SWITCH_1
0x400821f	      0xe9e3feffff	                           jmp 0x4008107	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4008224	          0x83fb3d	                           cmp ebx, 0x3d	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4008227	     0xf84c2feffff	                            je 0x40080ef	      4849	normal.c	FUNCTION_51	SWITCH_1
0x400822d	          0x83fb3d	                           cmp ebx, 0x3d	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4008230	            0x7f17	                            jg 0x4008249	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4008232	          0x83fb2d	                           cmp ebx, 0x2d	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4008235	     0xf844ff6ffff	                            je 0x400788a	      4849	normal.c	FUNCTION_51	SWITCH_1
0x400823b	          0x83fb2e	                           cmp ebx, 0x2e	      4849	normal.c	FUNCTION_51	SWITCH_1
0x400823e	     0xf84cdf5ffff	                            je 0x4007811	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4008244	      0xe9befeffff	                           jmp 0x4008107	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4008249	          0x83fb41	                           cmp ebx, 0x41	      4849	normal.c	FUNCTION_51	SWITCH_1
0x400824c	     0xf8458faffff	                            je 0x4007caa	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4008252	          0x83fb43	                           cmp ebx, 0x43	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4008255	     0xf843ffbffff	                            je 0x4007d9a	      4849	normal.c	FUNCTION_51	SWITCH_1
0x400825b	      0xe9a7feffff	                           jmp 0x4008107	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4008260	          0x83fb4d	                           cmp ebx, 0x4d	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4008263	     0xf84fcfbffff	                            je 0x4007e65	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4008269	          0x83fb4d	                           cmp ebx, 0x4d	      4849	normal.c	FUNCTION_51	SWITCH_1
0x400826c	            0x7f3c	                            jg 0x40082aa	      4849	normal.c	FUNCTION_51	SWITCH_1
0x400826e	          0x83fb47	                           cmp ebx, 0x47	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4008271	     0xf844cfdffff	                            je 0x4007fc3	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4008277	          0x83fb47	                           cmp ebx, 0x47	      4849	normal.c	FUNCTION_51	SWITCH_1
0x400827a	            0x7f17	                            jg 0x4008293	      4849	normal.c	FUNCTION_51	SWITCH_1
0x400827c	          0x83fb45	                           cmp ebx, 0x45	      4849	normal.c	FUNCTION_51	SWITCH_1
0x400827f	     0xf84fff8ffff	                            je 0x4007b84	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4008285	          0x83fb46	                           cmp ebx, 0x46	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4008288	     0xf843ff8ffff	                            je 0x4007acd	      4849	normal.c	FUNCTION_51	SWITCH_1
0x400828e	      0xe974feffff	                           jmp 0x4008107	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4008293	          0x83fb48	                           cmp ebx, 0x48	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4008296	     0xf8422f6ffff	                            je 0x40078be	      4849	normal.c	FUNCTION_51	SWITCH_1
0x400829c	          0x83fb4c	                           cmp ebx, 0x4c	      4849	normal.c	FUNCTION_51	SWITCH_1
0x400829f	     0xf847af6ffff	                            je 0x400791f	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40082a5	      0xe95dfeffff	                           jmp 0x4008107	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40082aa	          0x83fb52	                           cmp ebx, 0x52	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40082ad	     0xf841dfcffff	                            je 0x4007ed0	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40082b3	          0x83fb52	                           cmp ebx, 0x52	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40082b6	            0x7f17	                            jg 0x40082cf	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40082b8	          0x83fb4e	                           cmp ebx, 0x4e	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40082bb	     0xf8453f9ffff	                            je 0x4007c14	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40082c1	          0x83fb4f	                           cmp ebx, 0x4f	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40082c4	     0xf8468faffff	                            je 0x4007d32	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40082ca	      0xe938feffff	                           jmp 0x4008107	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40082cf	          0x83fb57	                           cmp ebx, 0x57	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40082d2	     0xf84ebfcffff	                            je 0x4007fc3	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40082d8	          0x83fb58	                           cmp ebx, 0x58	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40082db	     0xf8423fbffff	                            je 0x4007e04	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40082e1	      0xe921feffff	                           jmp 0x4008107	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40082e6	          0x83fb6c	                           cmp ebx, 0x6c	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40082e9	     0xf8451f6ffff	                            je 0x4007940	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40082ef	          0x83fb6c	                           cmp ebx, 0x6c	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40082f2	            0x7f73	                            jg 0x4008367	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40082f4	          0x83fb66	                           cmp ebx, 0x66	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40082f7	     0xf84d0f7ffff	                            je 0x4007acd	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40082fd	          0x83fb66	                           cmp ebx, 0x66	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4008300	            0x7f3c	                            jg 0x400833e	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4008302	          0x83fb63	                           cmp ebx, 0x63	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4008305	     0xf8452faffff	                            je 0x4007d5d	      4849	normal.c	FUNCTION_51	SWITCH_1
0x400830b	          0x83fb63	                           cmp ebx, 0x63	      4849	normal.c	FUNCTION_51	SWITCH_1
0x400830e	            0x7f17	                            jg 0x4008327	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4008310	          0x83fb61	                           cmp ebx, 0x61	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4008313	     0xf8430f9ffff	                            je 0x4007c49	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4008319	          0x83fb62	                           cmp ebx, 0x62	      4849	normal.c	FUNCTION_51	SWITCH_1
0x400831c	     0xf8472f5ffff	                            je 0x4007894	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4008322	      0xe9e0fdffff	                           jmp 0x4008107	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4008327	          0x83fb64	                           cmp ebx, 0x64	      4849	normal.c	FUNCTION_51	SWITCH_1
0x400832a	     0xf8406f8ffff	                            je 0x4007b36	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4008330	          0x83fb65	                           cmp ebx, 0x65	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4008333	     0xf84d3f6ffff	                            je 0x4007a0c	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4008339	      0xe9c9fdffff	                           jmp 0x4008107	      4849	normal.c	FUNCTION_51	SWITCH_1
0x400833e	          0x83fb69	                           cmp ebx, 0x69	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4008341	     0xf84e3f8ffff	                            je 0x4007c2a	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4008347	          0x83fb69	                           cmp ebx, 0x69	      4849	normal.c	FUNCTION_51	SWITCH_1
0x400834a	     0xf8fa1fbffff	                            jg 0x4007ef1	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4008350	          0x83fb67	                           cmp ebx, 0x67	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4008353	     0xf846afcffff	                            je 0x4007fc3	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4008359	          0x83fb68	                           cmp ebx, 0x68	      4849	normal.c	FUNCTION_51	SWITCH_1
0x400835c	     0xf847df5ffff	                            je 0x40078df	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4008362	      0xe9a0fdffff	                           jmp 0x4008107	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4008367	          0x83fb74	                           cmp ebx, 0x74	      4849	normal.c	FUNCTION_51	SWITCH_1
0x400836a	     0xf8477f4ffff	                            je 0x40077e7	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4008370	          0x83fb74	                           cmp ebx, 0x74	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4008373	            0x7f3c	                            jg 0x40083b1	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4008375	          0x83fb6f	                           cmp ebx, 0x6f	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4008378	     0xf8485f9ffff	                            je 0x4007d03	      4849	normal.c	FUNCTION_51	SWITCH_1
0x400837e	          0x83fb6f	                           cmp ebx, 0x6f	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4008381	            0x7f17	                            jg 0x400839a	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4008383	          0x83fb6d	                           cmp ebx, 0x6d	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4008386	     0xf849cfaffff	                            je 0x4007e28	      4849	normal.c	FUNCTION_51	SWITCH_1
0x400838c	          0x83fb6e	                           cmp ebx, 0x6e	      4849	normal.c	FUNCTION_51	SWITCH_1
0x400838f	     0xf8469f8ffff	                            je 0x4007bfe	      4849	normal.c	FUNCTION_51	SWITCH_1
0x4008395	      0xe96dfdffff	                           jmp 0x4008107	      4849	normal.c	FUNCTION_51	SWITCH_1
0x400839a	          0x83fb72	                           cmp ebx, 0x72	      4849	normal.c	FUNCTION_51	SWITCH_1
0x400839d	     0xf84f4faffff	                            je 0x4007e97	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40083a3	          0x83fb73	                           cmp ebx, 0x73	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40083a6	     0xf84bcf5ffff	                            je 0x4007968	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40083ac	      0xe956fdffff	                           jmp 0x4008107	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40083b1	          0x83fb77	                           cmp ebx, 0x77	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40083b4	     0xf8409fcffff	                            je 0x4007fc3	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40083ba	          0x83fb77	                           cmp ebx, 0x77	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40083bd	            0x7f17	                            jg 0x40083d6	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40083bf	          0x83fb75	                           cmp ebx, 0x75	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40083c2	     0xf845cfbffff	                            je 0x4007f24	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40083c8	          0x83fb76	                           cmp ebx, 0x76	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40083cb	     0xf8402faffff	                            je 0x4007dd3	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40083d1	      0xe931fdffff	                           jmp 0x4008107	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40083d6	          0x83fb78	                           cmp ebx, 0x78	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40083d9	     0xf84fef9ffff	                            je 0x4007ddd	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40083df	          0x83fb7a	                           cmp ebx, 0x7a	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40083e2	     0xf8433f4ffff	                            je 0x400781b	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40083e8	      0xe91afdffff	                           jmp 0x4008107	      4849	normal.c	FUNCTION_51	SWITCH_1
0x40083ed	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      5242	normal.c	FUNCTION_51
0x40083f2	    0x644833042528	                xor rax, qword fs:[0x28]	      5242	normal.c	FUNCTION_51
0x40083fb	            0x7405	                            je 0x4008402	      5242	normal.c	FUNCTION_51
0x40083fd	      0xe800000000	                          call 0x4008402	      5242	normal.c	FUNCTION_51
0x4008402	        0x4883c438	                           add rsp, 0x38	      5242	normal.c	FUNCTION_51
0x4008406	              0x5b	                                 pop rbx	      5242	normal.c	FUNCTION_51
0x4008407	              0x5d	                                 pop rbp	      5242	normal.c	FUNCTION_51
0x4008408	            0x415c	                                 pop r12	      5242	normal.c	FUNCTION_51
0x400840a	            0x415d	                                 pop r13	      5242	normal.c	FUNCTION_51
0x400840c	            0x415e	                                 pop r14	      5242	normal.c	FUNCTION_51
0x400840e	            0x415f	                                 pop r15	      5242	normal.c	FUNCTION_51
0x4008410	              0xc3	                                     ret	      5242	normal.c	FUNCTION_51
do_nv_ident	CALL,3:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,0:IF,0	30
0x4008c7d	            0x4154	                                push r12	      5545	normal.c	FUNCTION_65
0x4008c7f	              0x55	                                push rbp	      5545	normal.c	FUNCTION_65
0x4008c80	              0x53	                                push rbx	      5545	normal.c	FUNCTION_65
0x4008c81	    0x4881ece00000	                           sub rsp, 0xe0	      5545	normal.c	FUNCTION_65
0x4008c88	          0x4189fc	                           mov r12d, edi	      5545	normal.c	FUNCTION_65
0x4008c8b	            0x89f5	                            mov ebp, esi	      5545	normal.c	FUNCTION_65
0x4008c8d	    0x64488b042528	                mov rax, qword fs:[0x28]	      5545	normal.c	FUNCTION_65
0x4008c96	    0x48898424d800	             mov qword [rsp + 0xd8], rax	      5545	normal.c	FUNCTION_65
0x4008c9e	            0x31c0	                            xor eax, eax	      5545	normal.c	FUNCTION_65
0x4008ca0	      0x488d5c2450	                   lea rbx, [rsp + 0x50]	      5549	normal.c	FUNCTION_65	CALL_1
0x4008ca5	          0x4889df	                            mov rdi, rbx	      5549	normal.c	FUNCTION_65	CALL_1
0x4008ca8	      0xe800000000	                          call 0x4008cad	      5549	normal.c	FUNCTION_65	CALL_1
0x4008cad	      0xb909000000	                              mov ecx, 9	        90	string3.h	FUNCTION_144	CALL_6
0x4008cb2	      0xb800000000	                              mov eax, 0	        90	string3.h	FUNCTION_144	CALL_6
0x4008cb7	          0x4889e7	                            mov rdi, rsp	        90	string3.h	FUNCTION_144	CALL_6
0x4008cba	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_144	CALL_6
0x4008cbd	        0x48891c24	                    mov qword [rsp], rbx	      5551	normal.c	FUNCTION_65
0x4008cc1	      0x448964240c	             mov dword [rsp + 0xc], r12d	      5552	normal.c	FUNCTION_65
0x4008cc6	        0x896c2410	             mov dword [rsp + 0x10], ebp	      5553	normal.c	FUNCTION_65
0x4008cca	          0x4889e7	                            mov rdi, rsp	      5554	normal.c	FUNCTION_65	CALL_3
0x4008ccd	      0xe83ff7ffff	                       call sym.nv_ident	      5554	normal.c	FUNCTION_65	CALL_3
0x4008cd2	    0x488b8424d800	            mov rax, qword [rsp + 0xd8] 	      5555	normal.c	FUNCTION_65
0x4008cda	    0x644833042528	                xor rax, qword fs:[0x28]	      5555	normal.c	FUNCTION_65
0x4008ce3	            0x7405	                            je 0x4008cea	      5555	normal.c	FUNCTION_65
0x4008ce5	      0xe800000000	                          call 0x4008cea	      5555	normal.c	FUNCTION_65
0x4008cea	    0x4881c4e00000	                           add rsp, 0xe0	      5555	normal.c	FUNCTION_65
0x4008cf1	              0x5b	                                 pop rbx	      5555	normal.c	FUNCTION_65
0x4008cf2	              0x5d	                                 pop rbp	      5555	normal.c	FUNCTION_65
0x4008cf3	            0x415c	                                 pop r12	      5555	normal.c	FUNCTION_65
0x4008cf5	              0xc3	                                     ret	      5555	normal.c	FUNCTION_65
nv_lineop	CALL,4:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,2:IF,3	38
0x4000841	              0x53	                                push rbx	      8633	normal.c	FUNCTION_115
0x4000842	          0x4889fb	                            mov rbx, rdi	      8633	normal.c	FUNCTION_115
0x4000845	          0x488b07	                    mov rax, qword [rdi]	      8634	normal.c	FUNCTION_115
0x4000848	    0xc74008010000	                  mov dword [rax + 8], 1	      8634	normal.c	FUNCTION_115
0x400084f	          0x488b07	                    mov rax, qword [rdi]	      8635	normal.c	FUNCTION_115	IF_1	CALL_1
0x4000852	          0x833800	                      cmp dword [rax], 0	      8635	normal.c	FUNCTION_115	IF_1	CALL_1
0x4000855	        0x400f94c6	                                sete sil	      8635	normal.c	FUNCTION_115	IF_1	CALL_1
0x4000859	        0x400fb6f6	                          movzx esi, sil	      8635	normal.c	FUNCTION_115	IF_1	CALL_1
0x400085d	        0x488b4730	            mov rax, qword [rdi + 0x30] 	      8635	normal.c	FUNCTION_115	IF_1	CALL_1
0x4000861	        0x488d78ff	                      lea rdi, [rax - 1]	      8635	normal.c	FUNCTION_115	IF_1	CALL_1
0x4000865	      0xe800000000	                          call 0x400086a	      8635	normal.c	FUNCTION_115	IF_1	CALL_1
0x400086a	            0x85c0	                           test eax, eax	      8635	normal.c	FUNCTION_115	IF_1	CALL_1
0x400086c	            0x750a	                           jne 0x4000878	      8635	normal.c	FUNCTION_115	IF_1	CALL_1
0x400086e	          0x488b3b	                    mov rdi, qword [rbx]	      8636	normal.c	FUNCTION_115	CALL_2
0x4000871	      0xe8c2f9ffff	                    call sym.clearopbeep	      8636	normal.c	FUNCTION_115	CALL_2
0x4000876	            0xeb3c	                           jmp 0x40008b4	      8636	normal.c	FUNCTION_115	CALL_2
0x4000878	          0x488b13	                    mov rdx, qword [rbx]	      8637	normal.c	FUNCTION_115	ELSE_1	IF_2
0x400087b	            0x8b02	                    mov eax, dword [rdx]	      8637	normal.c	FUNCTION_115	ELSE_1	IF_2
0x400087d	          0x83f801	                              cmp eax, 1	      8637	normal.c	FUNCTION_115	ELSE_1	IF_2
0x4000880	            0x750f	                           jne 0x4000891	      8637	normal.c	FUNCTION_115	ELSE_1	IF_2
0x4000882	          0x8b420c	              mov eax, dword [rdx + 0xc]	      8638	normal.c	FUNCTION_115	ELSE_1	IF_2
0x4000885	          0x83f816	                           cmp eax, 0x16	      8639	normal.c	FUNCTION_115	ELSE_1	IF_2
0x4000888	            0x7420	                            je 0x40008aa	      8639	normal.c	FUNCTION_115	ELSE_1	IF_2
0x400088a	          0x83f876	                           cmp eax, 0x76	      8639	normal.c	FUNCTION_115	ELSE_1	IF_2
0x400088d	            0x750a	                           jne 0x4000899	      8639	normal.c	FUNCTION_115	ELSE_1	IF_2
0x400088f	            0xeb19	                           jmp 0x40008aa	      8639	normal.c	FUNCTION_115	ELSE_1	IF_2
0x4000891	          0x8d50fc	                      lea edx, [rax - 4]	      8641	normal.c	FUNCTION_115	ELSE_1	IF_2
0x4000894	          0x83fa01	                              cmp edx, 1	      8641	normal.c	FUNCTION_115	ELSE_1	IF_2
0x4000897	            0x770c	                            ja 0x40008a5	      8641	normal.c	FUNCTION_115	ELSE_1	IF_2
0x4000899	      0xbf06000000	                              mov edi, 6	      8642	normal.c	FUNCTION_115	ELSE_1	IF_2
0x400089e	      0xe800000000	                          call 0x40008a3	      8642	normal.c	FUNCTION_115	ELSE_1	IF_2
0x40008a3	            0xeb0f	                           jmp 0x40008b4	      8642	normal.c	FUNCTION_115	ELSE_1	IF_2
0x40008a5	          0x83f802	                              cmp eax, 2	      8643	normal.c	FUNCTION_115	ELSE_2	IF_3
0x40008a8	            0x740a	                            je 0x40008b4	      8643	normal.c	FUNCTION_115	ELSE_2	IF_3
0x40008aa	      0xbf05000000	                              mov edi, 5	      8644	normal.c	FUNCTION_115	ELSE_2	IF_3
0x40008af	      0xe800000000	                          call 0x40008b4	      8644	normal.c	FUNCTION_115	ELSE_2	IF_3
0x40008b4	              0x5b	                                 pop rbx	      8645	normal.c	FUNCTION_115
0x40008b5	              0xc3	                                     ret	      8645	normal.c	FUNCTION_115
reset_VIsual_and_resel	CALL,2:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,0:IF,1	11
0x4006085	    0x833d00000000	               cmp dword [0x0400608c], 0	      3342	normal.c	FUNCTION_15	IF_1
0x400608c	            0x7422	                            je 0x40060b0	      3342	normal.c	FUNCTION_15	IF_1
0x400608e	        0x4883ec08	                              sub rsp, 8	      3341	normal.c	FUNCTION_15
0x4006092	      0xe800000000	                          call 0x4006097	      3344	normal.c	FUNCTION_15	IF_1	CALL_1
0x4006097	      0xbf14000000	                           mov edi, 0x14	      3345	normal.c	FUNCTION_15	IF_1	CALL_2
0x400609c	      0xe800000000	                          call 0x40060a1	      3345	normal.c	FUNCTION_15	IF_1	CALL_2
0x40060a1	    0xc70500000000	               mov dword [0x040060ab], 0	      3347	normal.c	FUNCTION_15
0x40060ab	        0x4883c408	                              add rsp, 8	      3348	normal.c	FUNCTION_15
0x40060af	              0xc3	                                     ret	      3348	normal.c	FUNCTION_15
0x40060b0	    0xc70500000000	               mov dword [0x040060ba], 0	      3347	normal.c	FUNCTION_15
0x40060ba	              0xc3	                                     ret	      3347	normal.c	FUNCTION_15
handle_tabmenu	CALL,9:SWITCH,1:DO,0:FOR,0:functions,0:WHILE,0:ELSE,3:IF,3	53
0x40070fb	        0x4883ec08	                              sub rsp, 8	      5305	normal.c	FUNCTION_56
0x40070ff	    0x8b0500000000	            mov eax, dword [0x04007105] 	      5306	normal.c	FUNCTION_56	SWITCH_1
0x4007105	          0x83f802	                              cmp eax, 2	      5306	normal.c	FUNCTION_56	SWITCH_1
0x4007108	            0x7457	                            je 0x4007161	      5306	normal.c	FUNCTION_56	SWITCH_1
0x400710a	          0x83f803	                              cmp eax, 3	      5306	normal.c	FUNCTION_56	SWITCH_1
0x400710d	     0xf8490000000	                            je 0x40071a3	      5306	normal.c	FUNCTION_56	SWITCH_1
0x4007113	          0x83f801	                              cmp eax, 1	      5306	normal.c	FUNCTION_56	SWITCH_1
0x4007116	     0xf85c7000000	                           jne 0x40071e3	      5306	normal.c	FUNCTION_56	SWITCH_1
0x400711c	    0x8b0d00000000	            mov ecx, dword [0x04007122] 	      5309	normal.c	FUNCTION_56	SWITCH_1	IF_1
0x4007122	            0x85c9	                           test ecx, ecx	      5309	normal.c	FUNCTION_56	SWITCH_1	IF_1
0x4007124	            0x750f	                           jne 0x4007135	      5309	normal.c	FUNCTION_56	SWITCH_1	IF_1
0x4007126	      0xbf00000000	                              mov edi, 0	      5310	normal.c	FUNCTION_56	SWITCH_1	CALL_1
0x400712b	      0xe800000000	                          call 0x4007130	      5310	normal.c	FUNCTION_56	SWITCH_1	CALL_1
0x4007130	      0xe9ae000000	                           jmp 0x40071e3	      5310	normal.c	FUNCTION_56	SWITCH_1	CALL_1
0x4007135	      0xba00000000	                              mov edx, 0	      5313	normal.c	FUNCTION_56	SWITCH_1	ELSE_1	CALL_2
0x400713a	      0xbe01040000	                          mov esi, 0x401	      5313	normal.c	FUNCTION_56	SWITCH_1	ELSE_1	CALL_2
0x400713f	    0x488b3d000000	            mov rdi, qword [0x04007146] 	      5313	normal.c	FUNCTION_56	SWITCH_1	ELSE_1	CALL_2
0x4007146	      0xb800000000	                              mov eax, 0	      5313	normal.c	FUNCTION_56	SWITCH_1	ELSE_1	CALL_2
0x400714b	      0xe800000000	                          call 0x4007150	      5313	normal.c	FUNCTION_56	SWITCH_1	ELSE_1	CALL_2
0x4007150	    0x488b3d000000	            mov rdi, qword [0x04007157] 	      5315	normal.c	FUNCTION_56	SWITCH_1	ELSE_1	CALL_3
0x4007157	      0xe800000000	                          call 0x400715c	      5315	normal.c	FUNCTION_56	SWITCH_1	ELSE_1	CALL_3
0x400715c	      0xe982000000	                           jmp 0x40071e3	      5315	normal.c	FUNCTION_56	SWITCH_1	ELSE_1	CALL_3
0x4007161	    0x8b0d00000000	            mov ecx, dword [0x04007167] 	      5320	normal.c	FUNCTION_56	SWITCH_1	IF_2
0x4007167	            0x85c9	                           test ecx, ecx	      5320	normal.c	FUNCTION_56	SWITCH_1	IF_2
0x4007169	            0x750c	                           jne 0x4007177	      5320	normal.c	FUNCTION_56	SWITCH_1	IF_2
0x400716b	      0xbf00000000	                              mov edi, 0	      5321	normal.c	FUNCTION_56	SWITCH_1	CALL_4
0x4007170	      0xe800000000	                          call 0x4007175	      5321	normal.c	FUNCTION_56	SWITCH_1	CALL_4
0x4007175	            0xeb6c	                           jmp 0x40071e3	      5321	normal.c	FUNCTION_56	SWITCH_1	CALL_4
0x4007177	          0x83e901	                              sub ecx, 1	      5324	normal.c	FUNCTION_56	SWITCH_1	ELSE_2	CALL_5
0x400717a	      0xba00000000	                              mov edx, 0	      5324	normal.c	FUNCTION_56	SWITCH_1	ELSE_2	CALL_5
0x400717f	      0xbe01040000	                          mov esi, 0x401	      5324	normal.c	FUNCTION_56	SWITCH_1	ELSE_2	CALL_5
0x4007184	    0x488b3d000000	            mov rdi, qword [0x0400718b] 	      5324	normal.c	FUNCTION_56	SWITCH_1	ELSE_2	CALL_5
0x400718b	      0xb800000000	                              mov eax, 0	      5324	normal.c	FUNCTION_56	SWITCH_1	ELSE_2	CALL_5
0x4007190	      0xe800000000	                          call 0x4007195	      5324	normal.c	FUNCTION_56	SWITCH_1	ELSE_2	CALL_5
0x4007195	    0x488b3d000000	            mov rdi, qword [0x0400719c] 	      5326	normal.c	FUNCTION_56	SWITCH_1	ELSE_2	CALL_6
0x400719c	      0xe800000000	                          call 0x40071a1	      5326	normal.c	FUNCTION_56	SWITCH_1	ELSE_2	CALL_6
0x40071a1	            0xeb40	                           jmp 0x40071e3	      5326	normal.c	FUNCTION_56	SWITCH_1	ELSE_2	CALL_6
0x40071a3	    0x8b0d00000000	            mov ecx, dword [0x040071a9] 	      5331	normal.c	FUNCTION_56	SWITCH_1	IF_3
0x40071a9	            0x85c9	                           test ecx, ecx	      5331	normal.c	FUNCTION_56	SWITCH_1	IF_3
0x40071ab	            0x750c	                           jne 0x40071b9	      5331	normal.c	FUNCTION_56	SWITCH_1	IF_3
0x40071ad	      0xbf00000000	                              mov edi, 0	      5332	normal.c	FUNCTION_56	SWITCH_1	CALL_7
0x40071b2	      0xe800000000	                          call 0x40071b7	      5332	normal.c	FUNCTION_56	SWITCH_1	CALL_7
0x40071b7	            0xeb2a	                           jmp 0x40071e3	      5332	normal.c	FUNCTION_56	SWITCH_1	CALL_7
0x40071b9	          0x83e901	                              sub ecx, 1	      5335	normal.c	FUNCTION_56	SWITCH_1	ELSE_3	CALL_8
0x40071bc	      0xba00000000	                              mov edx, 0	      5335	normal.c	FUNCTION_56	SWITCH_1	ELSE_3	CALL_8
0x40071c1	      0xbe01040000	                          mov esi, 0x401	      5335	normal.c	FUNCTION_56	SWITCH_1	ELSE_3	CALL_8
0x40071c6	    0x488b3d000000	            mov rdi, qword [0x040071cd] 	      5335	normal.c	FUNCTION_56	SWITCH_1	ELSE_3	CALL_8
0x40071cd	      0xb800000000	                              mov eax, 0	      5335	normal.c	FUNCTION_56	SWITCH_1	ELSE_3	CALL_8
0x40071d2	      0xe800000000	                          call 0x40071d7	      5335	normal.c	FUNCTION_56	SWITCH_1	ELSE_3	CALL_8
0x40071d7	    0x488b3d000000	            mov rdi, qword [0x040071de] 	      5337	normal.c	FUNCTION_56	SWITCH_1	ELSE_3	CALL_9
0x40071de	      0xe800000000	                          call 0x40071e3	      5337	normal.c	FUNCTION_56	SWITCH_1	ELSE_3	CALL_9
0x40071e3	        0x4883c408	                              add rsp, 8	      5341	normal.c	FUNCTION_56
0x40071e7	              0xc3	                                     ret	      5341	normal.c	FUNCTION_56
nv_compare	CALL,0:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,0:IF,2	16
0x4000040	        0x480fbf07	                   movsx rax, word [rdi]	       452	normal.c	FUNCTION_1
0x4000044	        0x488d0440	                  lea rax, [rax + rax*2]	       452	normal.c	FUNCTION_1
0x4000048	    0x8b04c5000000	                  mov eax, dword [rax*8]	       452	normal.c	FUNCTION_1
0x400004f	        0x480fbf16	                   movsx rdx, word [rsi]	       453	normal.c	FUNCTION_1
0x4000053	        0x488d1452	                  lea rdx, [rdx + rdx*2]	       453	normal.c	FUNCTION_1
0x4000057	    0x8b14d5000000	                  mov edx, dword [rdx*8]	       453	normal.c	FUNCTION_1
0x400005e	            0x89c1	                            mov ecx, eax	       458	normal.c	FUNCTION_1
0x4000060	          0xc1f91f	                           sar ecx, 0x1f	       458	normal.c	FUNCTION_1
0x4000063	            0x31c8	                            xor eax, ecx	       458	normal.c	FUNCTION_1
0x4000065	            0x29c8	                            sub eax, ecx	       458	normal.c	FUNCTION_1
0x4000067	            0x89d1	                            mov ecx, edx	       458	normal.c	FUNCTION_1
0x4000069	          0xc1f91f	                           sar ecx, 0x1f	       458	normal.c	FUNCTION_1
0x400006c	            0x31ca	                            xor edx, ecx	       458	normal.c	FUNCTION_1
0x400006e	            0x29ca	                            sub edx, ecx	       458	normal.c	FUNCTION_1
0x4000070	            0x29d0	                            sub eax, edx	       458	normal.c	FUNCTION_1
0x4000072	              0xc3	                                     ret	       459	normal.c	FUNCTION_1
nv_addsub	CALL,4:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,2:IF,2	29
0x4002c5d	              0x53	                                push rbx	      4182	normal.c	FUNCTION_41
0x4002c5e	          0x4889fb	                            mov rbx, rdi	      4182	normal.c	FUNCTION_41
0x4002c61	    0x833d00000000	               cmp dword [0x04002c68], 0	      4183	normal.c	FUNCTION_41	IF_1
0x4002c68	            0x7539	                           jne 0x4002ca3	      4183	normal.c	FUNCTION_41	IF_1
0x4002c6a	          0x488b07	                    mov rax, qword [rdi]	      4183	normal.c	FUNCTION_41	IF_1
0x4002c6d	          0x833800	                      cmp dword [rax], 0	      4183	normal.c	FUNCTION_41	IF_1
0x4002c70	            0x7538	                           jne 0x4002caa	      4183	normal.c	FUNCTION_41	IF_1
0x4002c72	      0xe852d8ffff	                  call sym.prep_redo_cmd	      4185	normal.c	FUNCTION_41	IF_1	CALL_1
0x4002c77	          0x488b13	                    mov rdx, qword [rbx]	      4186	normal.c	FUNCTION_41	IF_1
0x4002c7a	        0x837b0c01	                cmp dword [rbx + 0xc], 1	      4186	normal.c	FUNCTION_41	IF_1
0x4002c7e	           0xf95c0	                                setne al	      4186	normal.c	FUNCTION_41	IF_1
0x4002c81	           0xfb6c0	                           movzx eax, al	      4186	normal.c	FUNCTION_41	IF_1
0x4002c84	          0x83c01c	                           add eax, 0x1c	      4186	normal.c	FUNCTION_41	IF_1
0x4002c87	            0x8902	                    mov dword [rdx], eax	      4186	normal.c	FUNCTION_41	IF_1
0x4002c89	          0x8b5338	            mov edx, dword [rbx + 0x38] 	      4187	normal.c	FUNCTION_41	IF_1	CALL_2
0x4002c8c	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	      4187	normal.c	FUNCTION_41	IF_1	CALL_2
0x4002c90	          0x488b3b	                    mov rdi, qword [rbx]	      4187	normal.c	FUNCTION_41	IF_1	CALL_2
0x4002c93	      0xe800000000	                          call 0x4002c98	      4187	normal.c	FUNCTION_41	IF_1	CALL_2
0x4002c98	          0x488b03	                    mov rax, qword [rbx]	      4188	normal.c	FUNCTION_41	IF_1
0x4002c9b	    0xc70000000000	                      mov dword [rax], 0	      4188	normal.c	FUNCTION_41	IF_1
0x4002ca1	            0xeb22	                           jmp 0x4002cc5	      4188	normal.c	FUNCTION_41	IF_1
0x4002ca3	      0xe8b6eeffff	                    call sym.nv_operator	      4191	normal.c	FUNCTION_41	ELSE_1	IF_2
0x4002ca8	            0xeb1b	                           jmp 0x4002cc5	      4191	normal.c	FUNCTION_41	ELSE_1	IF_2
0x4002caa	    0xc70000000000	                      mov dword [rax], 0	      3676	normal.c	FUNCTION_24
0x4002cb0	    0xc74004000000	                  mov dword [rax + 4], 0	      3677	normal.c	FUNCTION_24
0x4002cb7	    0xc7400c000000	                mov dword [rax + 0xc], 0	      3678	normal.c	FUNCTION_24
0x4002cbe	    0xc74010000000	               mov dword [rax + 0x10], 0	      3679	normal.c	FUNCTION_24
0x4002cc5	              0x5b	                                 pop rbx	      4194	normal.c	FUNCTION_41
0x4002cc6	              0xc3	                                     ret	      4194	normal.c	FUNCTION_41
nv_esc	CALL,8:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,1:IF,7	78
0x4005f1f	              0x55	                                push rbp	      8980	normal.c	FUNCTION_127
0x4005f20	              0x53	                                push rbx	      8980	normal.c	FUNCTION_127
0x4005f21	        0x4883ec08	                              sub rsp, 8	      8980	normal.c	FUNCTION_127
0x4005f25	          0x4889fb	                            mov rbx, rdi	      8980	normal.c	FUNCTION_127
0x4005f28	          0x488b07	                    mov rax, qword [rdi]	      8983	normal.c	FUNCTION_127
0x4005f2b	      0xbd00000000	                              mov ebp, 0	      8987	normal.c	FUNCTION_127
0x4005f30	          0x833800	                      cmp dword [rax], 0	      8987	normal.c	FUNCTION_127
0x4005f33	            0x7523	                           jne 0x4005f58	      8987	normal.c	FUNCTION_127
0x4005f35	      0x48837f2000	               cmp qword [rdi + 0x20], 0	      8984	normal.c	FUNCTION_127
0x4005f3a	            0x751c	                           jne 0x4005f58	      8984	normal.c	FUNCTION_127
0x4005f3c	      0x48837f2800	               cmp qword [rdi + 0x28], 0	      8985	normal.c	FUNCTION_127
0x4005f41	            0x7515	                           jne 0x4005f58	      8985	normal.c	FUNCTION_127
0x4005f43	        0x83780400	                  cmp dword [rax + 4], 0	      8986	normal.c	FUNCTION_127
0x4005f47	            0x750f	                           jne 0x4005f58	      8986	normal.c	FUNCTION_127
0x4005f49	    0x833d00000000	               cmp dword [0x04005f50], 0	      8987	normal.c	FUNCTION_127
0x4005f50	        0x400f94c5	                                sete bpl	      8987	normal.c	FUNCTION_127
0x4005f54	        0x400fb6ed	                          movzx ebp, bpl	      8987	normal.c	FUNCTION_127
0x4005f58	        0x837b3800	               cmp dword [rbx + 0x38], 0	      8989	normal.c	FUNCTION_127	IF_1
0x4005f5c	            0x747c	                            je 0x4005fda	      8989	normal.c	FUNCTION_127	IF_1
0x4005f5e	    0x833d00000000	               cmp dword [0x04005f65], 0	      8991	normal.c	FUNCTION_127	IF_1	IF_2
0x4005f65	            0x753e	                           jne 0x4005fa5	      8991	normal.c	FUNCTION_127	IF_1	IF_2
0x4005f67	    0x833d00000000	               cmp dword [0x04005f6e], 0	      8993	normal.c	FUNCTION_127	IF_1	IF_2
0x4005f6e	     0xf85e6000000	                           jne 0x400605a	      8993	normal.c	FUNCTION_127	IF_1	IF_2
0x4005f74	    0x833d00000000	               cmp dword [0x04005f7b], 0	      8996	normal.c	FUNCTION_127	IF_1	IF_2
0x4005f7b	     0xf85eb000000	                           jne 0x400606c	      8996	normal.c	FUNCTION_127	IF_1	IF_2
0x4005f81	            0x85ed	                           test ebp, ebp	      8996	normal.c	FUNCTION_127	IF_1	IF_2
0x4005f83	     0xf84e3000000	                            je 0x400606c	      8996	normal.c	FUNCTION_127	IF_1	IF_2
0x4005f89	      0xba05000000	                              mov edx, 5	      8997	normal.c	FUNCTION_127	IF_1	CALL_2
0x4005f8e	      0xbe00000000	                              mov esi, 0	      8997	normal.c	FUNCTION_127	IF_1	CALL_2
0x4005f93	      0xbf00000000	                              mov edi, 0	      8997	normal.c	FUNCTION_127	IF_1	CALL_2
0x4005f98	      0xe800000000	                          call 0x4005f9d	      8997	normal.c	FUNCTION_127	IF_1	CALL_2
0x4005f9d	          0x4889c7	                            mov rdi, rax	      8997	normal.c	FUNCTION_127	IF_1	CALL_2
0x4005fa0	      0xe800000000	                          call 0x4005fa5	      8997	normal.c	FUNCTION_127	IF_1	CALL_2
0x4005fa5	    0x833d00000000	               cmp dword [0x04005fac], 0	      9001	normal.c	FUNCTION_127	IF_1	IF_3
0x4005fac	            0x750a	                           jne 0x4005fb8	      9001	normal.c	FUNCTION_127	IF_1	IF_3
0x4005fae	    0xc70500000000	               mov dword [0x04005fb8], 0	      9002	normal.c	FUNCTION_127	IF_1	IF_3
0x4005fb8	    0x833d00000000	               cmp dword [0x04005fbf], 0	      9004	normal.c	FUNCTION_127	IF_1	IF_4
0x4005fbf	            0x7419	                            je 0x4005fda	      9004	normal.c	FUNCTION_127	IF_1	IF_4
0x4005fc1	    0xc70500000000	     mov dword [0x04005fcb], 0xffffca03 	      9006	normal.c	FUNCTION_127	IF_1	IF_4
0x4005fcb	    0xc70500000000	               mov dword [0x04005fd5], 0	      9007	normal.c	FUNCTION_127	IF_1	IF_4
0x4005fd5	      0xe9a4000000	                           jmp 0x400607e	      9008	normal.c	FUNCTION_127	IF_1	IF_4
0x4005fda	    0x833d00000000	               cmp dword [0x04005fe1], 0	      9013	normal.c	FUNCTION_127	IF_5
0x4005fe1	            0x7424	                            je 0x4006007	      9013	normal.c	FUNCTION_127	IF_5
0x4005fe3	      0xe800000000	                          call 0x4005fe8	      9015	normal.c	FUNCTION_127	IF_5	CALL_3
0x4005fe8	      0xe800000000	                          call 0x4005fed	      9016	normal.c	FUNCTION_127	IF_5	CALL_4
0x4005fed	    0x488b05000000	            mov rax, qword [0x04005ff4] 	      9017	normal.c	FUNCTION_127	IF_5
0x4005ff4	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      9017	normal.c	FUNCTION_127	IF_5
0x4005ffb	      0xbf14000000	                           mov edi, 0x14	      9018	normal.c	FUNCTION_127	IF_5	CALL_5
0x4006000	      0xe800000000	                          call 0x4006005	      9018	normal.c	FUNCTION_127	IF_5	CALL_5
0x4006005	            0xeb0e	                           jmp 0x4006015	      9018	normal.c	FUNCTION_127	IF_5	CALL_5
0x4006007	            0x85ed	                           test ebp, ebp	      9020	normal.c	FUNCTION_127	ELSE_1	IF_6
0x4006009	            0x740a	                            je 0x4006015	      9020	normal.c	FUNCTION_127	ELSE_1	IF_6
0x400600b	      0xbf80000000	                           mov edi, 0x80	      9021	normal.c	FUNCTION_127	ELSE_1	IF_6
0x4006010	      0xe800000000	                          call 0x4006015	      9021	normal.c	FUNCTION_127	ELSE_1	IF_6
0x4006015	          0x488b03	                    mov rax, qword [rbx]	      9022	normal.c	FUNCTION_127	CALL_7
0x4006018	    0xc70000000000	                      mov dword [rax], 0	      3676	normal.c	FUNCTION_24
0x400601e	    0xc74004000000	                  mov dword [rax + 4], 0	      3677	normal.c	FUNCTION_24
0x4006025	    0xc7400c000000	                mov dword [rax + 0xc], 0	      3678	normal.c	FUNCTION_24
0x400602c	    0xc74010000000	               mov dword [rax + 0x10], 0	      3679	normal.c	FUNCTION_24
0x4006033	    0x833d00000000	               cmp dword [0x0400603a], 0	      9026	normal.c	FUNCTION_127	IF_7	CALL_8
0x400603a	            0x7542	                           jne 0x400607e	      9026	normal.c	FUNCTION_127	IF_7	CALL_8
0x400603c	      0xe800000000	                          call 0x4006041	      9026	normal.c	FUNCTION_127	IF_7	CALL_8
0x4006041	            0x85c0	                           test eax, eax	      9026	normal.c	FUNCTION_127	IF_7	CALL_8
0x4006043	            0x7439	                            je 0x400607e	      9026	normal.c	FUNCTION_127	IF_7	CALL_8
0x4006045	    0x833d00000000	               cmp dword [0x0400604c], 0	      9026	normal.c	FUNCTION_127	IF_7	CALL_8
0x400604c	            0x7530	                           jne 0x400607e	      9026	normal.c	FUNCTION_127	IF_7	CALL_8
0x400604e	    0xc70500000000	           mov dword [0x04006058], 0x61 	      9027	normal.c	FUNCTION_127	IF_7
0x4006058	            0xeb24	                           jmp 0x400607e	      9027	normal.c	FUNCTION_127	IF_7
0x400605a	    0x833d00000000	               cmp dword [0x04006061], 0	      9001	normal.c	FUNCTION_127	IF_1	IF_3
0x4006061	     0xf8447ffffff	                            je 0x4005fae	      9001	normal.c	FUNCTION_127	IF_1	IF_3
0x4006067	      0xe955ffffff	                           jmp 0x4005fc1	      9001	normal.c	FUNCTION_127	IF_1	IF_3
0x400606c	    0x833d00000000	               cmp dword [0x04006073], 0	      9001	normal.c	FUNCTION_127	IF_1	IF_3
0x4006073	     0xf8435ffffff	                            je 0x4005fae	      9001	normal.c	FUNCTION_127	IF_1	IF_3
0x4006079	      0xe95cffffff	                           jmp 0x4005fda	      9001	normal.c	FUNCTION_127	IF_1	IF_3
0x400607e	        0x4883c408	                              add rsp, 8	      9028	normal.c	FUNCTION_127
0x4006082	              0x5b	                                 pop rbx	      9028	normal.c	FUNCTION_127
0x4006083	              0x5d	                                 pop rbp	      9028	normal.c	FUNCTION_127
0x4006084	              0xc3	                                     ret	      9028	normal.c	FUNCTION_127
nv_pcmark	CALL,14:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,6:IF,8	81
0x4003557	            0x4154	                                push r12	      7590	normal.c	FUNCTION_99
0x4003559	              0x55	                                push rbp	      7590	normal.c	FUNCTION_99
0x400355a	              0x53	                                push rbx	      7590	normal.c	FUNCTION_99
0x400355b	          0x4889fb	                            mov rbx, rdi	      7590	normal.c	FUNCTION_99
0x400355e	    0x488b05000000	            mov rax, qword [0x04003565] 	      7594	normal.c	FUNCTION_99
0x4003565	        0x488b6838	            mov rbp, qword [rax + 0x38] 	      7594	normal.c	FUNCTION_99
0x4003569	    0x448b25000000	           mov r12d, dword [0x04003570] 	      7595	normal.c	FUNCTION_99
0x4003570	          0x488b3f	                    mov rdi, qword [rdi]	      7598	normal.c	FUNCTION_99	IF_1	CALL_1
0x4003573	      0xe8e9ccffff	                  call sym.checkclearopq	      7598	normal.c	FUNCTION_99	IF_1	CALL_1
0x4003578	            0x85c0	                           test eax, eax	      7598	normal.c	FUNCTION_99	IF_1	CALL_1
0x400357a	     0xf8507010000	                           jne 0x4003687	      7598	normal.c	FUNCTION_99	IF_1	CALL_1
0x4003580	        0x837b0c67	            cmp dword [rbx + 0xc], 0x67 	      7600	normal.c	FUNCTION_99	IF_1	IF_2
0x4003584	            0x750a	                           jne 0x4003590	      7600	normal.c	FUNCTION_99	IF_1	IF_2
0x4003586	          0x8b7b30	            mov edi, dword [rbx + 0x30] 	      7601	normal.c	FUNCTION_99	IF_1	CALL_2
0x4003589	      0xe800000000	                          call 0x400358e	      7601	normal.c	FUNCTION_99	IF_1	CALL_2
0x400358e	            0xeb08	                           jmp 0x4003598	      7601	normal.c	FUNCTION_99	IF_1	CALL_2
0x4003590	          0x8b7b30	            mov edi, dword [rbx + 0x30] 	      7603	normal.c	FUNCTION_99	IF_1	CALL_3
0x4003593	      0xe800000000	                          call 0x4003598	      7603	normal.c	FUNCTION_99	IF_1	CALL_3
0x4003598	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      7604	normal.c	FUNCTION_99	IF_1	IF_3
0x400359c	            0x7524	                           jne 0x40035c2	      7604	normal.c	FUNCTION_99	IF_1	IF_3
0x400359e	    0x488b05000000	            mov rax, qword [0x040035a5] 	      7606	normal.c	FUNCTION_99	IF_1	IF_3
0x40035a5	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      7606	normal.c	FUNCTION_99	IF_1	IF_3
0x40035ac	      0xe800000000	                          call 0x40035b1	      7607	normal.c	FUNCTION_99	IF_1	IF_3	CALL_4
0x40035b1	          0x488b03	                    mov rax, qword [rbx]	      7623	normal.c	FUNCTION_99	IF_1	IF_8
0x40035b4	          0x833800	                      cmp dword [rax], 0	      7623	normal.c	FUNCTION_99	IF_1	IF_8
0x40035b7	     0xf84ad000000	                            je 0x400366a	      7623	normal.c	FUNCTION_99	IF_1	IF_8
0x40035bd	      0xe9c5000000	                           jmp 0x4003687	      7623	normal.c	FUNCTION_99	IF_1	IF_8
0x40035c2	          0x4885c0	                           test rax, rax	      7609	normal.c	FUNCTION_99	IF_1	ELSE_2	IF_4
0x40035c5	            0x7415	                            je 0x40035dc	      7609	normal.c	FUNCTION_99	IF_1	ELSE_2	IF_4
0x40035c7	          0x4889c2	                            mov rdx, rax	      7610	normal.c	FUNCTION_99	IF_1	ELSE_2	IF_4
0x40035ca	      0xbe00000000	                              mov esi, 0	      7610	normal.c	FUNCTION_99	IF_1	ELSE_2	IF_4
0x40035cf	          0x4889df	                            mov rdi, rbx	      7610	normal.c	FUNCTION_99	IF_1	ELSE_2	IF_4
0x40035d2	      0xe8d8fdffff	                  call sym.nv_cursormark	      7610	normal.c	FUNCTION_99	IF_1	ELSE_2	IF_4
0x40035d7	      0xe9a3000000	                           jmp 0x400367f	      7610	normal.c	FUNCTION_99	IF_1	ELSE_2	IF_4
0x40035dc	        0x837b0c67	            cmp dword [rbx + 0xc], 0x67 	      7611	normal.c	FUNCTION_99	IF_1	ELSE_3	IF_5
0x40035e0	            0x7571	                           jne 0x4003653	      7611	normal.c	FUNCTION_99	IF_1	ELSE_3	IF_5
0x40035e2	    0x488b05000000	            mov rax, qword [0x040035e9] 	      7613	normal.c	FUNCTION_99	IF_1	ELSE_3	IF_5	IF_6
0x40035e9	    0x83b898090000	              cmp dword [rax + 0x998], 0	      7613	normal.c	FUNCTION_99	IF_1	ELSE_3	IF_5	IF_6
0x40035f0	            0x751e	                           jne 0x4003610	      7613	normal.c	FUNCTION_99	IF_1	ELSE_3	IF_5	IF_6
0x40035f2	      0xba05000000	                              mov edx, 5	      7614	normal.c	FUNCTION_99	IF_1	ELSE_3	IF_5	CALL_7
0x40035f7	      0xbe00000000	                              mov esi, 0	      7614	normal.c	FUNCTION_99	IF_1	ELSE_3	IF_5	CALL_7
0x40035fc	      0xbf00000000	                              mov edi, 0	      7614	normal.c	FUNCTION_99	IF_1	ELSE_3	IF_5	CALL_7
0x4003601	      0xe800000000	                          call 0x4003606	      7614	normal.c	FUNCTION_99	IF_1	ELSE_3	IF_5	CALL_7
0x4003606	          0x4889c7	                            mov rdi, rax	      7614	normal.c	FUNCTION_99	IF_1	ELSE_3	IF_5	CALL_7
0x4003609	      0xe800000000	                          call 0x400360e	      7614	normal.c	FUNCTION_99	IF_1	ELSE_3	IF_5	CALL_7
0x400360e	            0xeb6f	                           jmp 0x400367f	      7614	normal.c	FUNCTION_99	IF_1	ELSE_3	IF_5	CALL_7
0x4003610	      0x48837b3000	               cmp qword [rbx + 0x30], 0	      7615	normal.c	FUNCTION_99	IF_1	ELSE_3	IF_5	ELSE_4	IF_7
0x4003615	            0x791e	                           jns 0x4003635	      7615	normal.c	FUNCTION_99	IF_1	ELSE_3	IF_5	ELSE_4	IF_7
0x4003617	      0xba05000000	                              mov edx, 5	      7616	normal.c	FUNCTION_99	IF_1	ELSE_3	IF_5	ELSE_4	IF_7
0x400361c	      0xbe00000000	                              mov esi, 0	      7616	normal.c	FUNCTION_99	IF_1	ELSE_3	IF_5	ELSE_4	IF_7
0x4003621	      0xbf00000000	                              mov edi, 0	      7616	normal.c	FUNCTION_99	IF_1	ELSE_3	IF_5	ELSE_4	IF_7
0x4003626	      0xe800000000	                          call 0x400362b	      7616	normal.c	FUNCTION_99	IF_1	ELSE_3	IF_5	ELSE_4	IF_7
0x400362b	          0x4889c7	                            mov rdi, rax	      7616	normal.c	FUNCTION_99	IF_1	ELSE_3	IF_5	ELSE_4	IF_7
0x400362e	      0xe800000000	                          call 0x4003633	      7616	normal.c	FUNCTION_99	IF_1	ELSE_3	IF_5	ELSE_4	IF_7
0x4003633	            0xeb4a	                           jmp 0x400367f	      7616	normal.c	FUNCTION_99	IF_1	ELSE_3	IF_5	ELSE_4	IF_7
0x4003635	      0xba05000000	                              mov edx, 5	      7618	normal.c	FUNCTION_99	IF_1	ELSE_3	IF_5	CALL_11
0x400363a	      0xbe00000000	                              mov esi, 0	      7618	normal.c	FUNCTION_99	IF_1	ELSE_3	IF_5	CALL_11
0x400363f	      0xbf00000000	                              mov edi, 0	      7618	normal.c	FUNCTION_99	IF_1	ELSE_3	IF_5	CALL_11
0x4003644	      0xe800000000	                          call 0x4003649	      7618	normal.c	FUNCTION_99	IF_1	ELSE_3	IF_5	CALL_11
0x4003649	          0x4889c7	                            mov rdi, rax	      7618	normal.c	FUNCTION_99	IF_1	ELSE_3	IF_5	CALL_11
0x400364c	      0xe800000000	                          call 0x4003651	      7618	normal.c	FUNCTION_99	IF_1	ELSE_3	IF_5	CALL_11
0x4003651	            0xeb2c	                           jmp 0x400367f	      7618	normal.c	FUNCTION_99	IF_1	ELSE_3	IF_5	CALL_11
0x4003653	          0x488b3b	                    mov rdi, qword [rbx]	      7621	normal.c	FUNCTION_99	IF_1	CALL_12
0x4003656	      0xe8ddcbffff	                    call sym.clearopbeep	      7621	normal.c	FUNCTION_99	IF_1	CALL_12
0x400365b	            0xeb22	                           jmp 0x400367f	      7621	normal.c	FUNCTION_99	IF_1	CALL_12
0x400365d	    0x488b05000000	            mov rax, qword [0x04003664] 	      7624	normal.c	FUNCTION_99	IF_1	IF_8
0x4003664	        0x483b6838	            cmp rbp, qword [rax + 0x38] 	      7624	normal.c	FUNCTION_99	IF_1	IF_8
0x4003668	            0x741d	                            je 0x4003687	      7624	normal.c	FUNCTION_99	IF_1	IF_8
0x400366a	    0xf60500000000	               test byte [0x04003671], 8	      7626	normal.c	FUNCTION_99	IF_1	IF_8
0x4003671	            0x7414	                            je 0x4003687	      7626	normal.c	FUNCTION_99	IF_1	IF_8
0x4003673	          0x4585e4	                         test r12d, r12d	      7626	normal.c	FUNCTION_99	IF_1	IF_8
0x4003676	            0x740f	                            je 0x4003687	      7626	normal.c	FUNCTION_99	IF_1	IF_8
0x4003678	      0xe800000000	                          call 0x400367d	      7627	normal.c	FUNCTION_99	IF_1	CALL_13
0x400367d	            0xeb08	                           jmp 0x4003687	      7633	normal.c	FUNCTION_99
0x400367f	          0x488b03	                    mov rax, qword [rbx]	      7623	normal.c	FUNCTION_99	IF_1	IF_8
0x4003682	          0x833800	                      cmp dword [rax], 0	      7623	normal.c	FUNCTION_99	IF_1	IF_8
0x4003685	            0x74d6	                            je 0x400365d	      7623	normal.c	FUNCTION_99	IF_1	IF_8
0x4003687	              0x5b	                                 pop rbx	      7633	normal.c	FUNCTION_99
0x4003688	              0x5d	                                 pop rbp	      7633	normal.c	FUNCTION_99
0x4003689	            0x415c	                                 pop r12	      7633	normal.c	FUNCTION_99
0x400368b	              0xc3	                                     ret	      7633	normal.c	FUNCTION_99
nv_select	CALL,1:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,1:IF,2	12
0x400bf8c	    0x833d00000000	               cmp dword [0x0400bf93], 0	      8903	normal.c	FUNCTION_124	IF_1
0x400bf93	            0x740b	                            je 0x400bfa0	      8903	normal.c	FUNCTION_124	IF_1
0x400bf95	    0xc70500000000	               mov dword [0x0400bf9f], 1	      8904	normal.c	FUNCTION_124	IF_1
0x400bf9f	              0xc3	                                     ret	      8904	normal.c	FUNCTION_124	IF_1
0x400bfa0	    0x833d00000000	               cmp dword [0x0400bfa7], 0	      8905	normal.c	FUNCTION_124	ELSE_1	IF_2
0x400bfa7	            0x741b	                            je 0x400bfc4	      8905	normal.c	FUNCTION_124	ELSE_1	IF_2
0x400bfa9	        0x4883ec08	                              sub rsp, 8	      8902	normal.c	FUNCTION_124
0x400bfad	    0xc74710760000	           mov dword [rdi + 0x10], 0x76 	      8907	normal.c	FUNCTION_124	ELSE_1	IF_2
0x400bfb4	    0xc74738010000	               mov dword [rdi + 0x38], 1	      8908	normal.c	FUNCTION_124	ELSE_1	IF_2
0x400bfbb	      0xe8cff0ffff	                       call sym.nv_g_cmd	      8909	normal.c	FUNCTION_124	ELSE_1	IF_2	CALL_1
0x400bfc0	        0x4883c408	                              add rsp, 8	      8911	normal.c	FUNCTION_124
0x400bfc4	            0xf3c3	                                     ret	      8911	normal.c	FUNCTION_124
nv_replace	CALL,45:SWITCH,0:DO,0:FOR,2:functions,0:WHILE,0:ELSE,8:IF,29	278
0x40060e7	            0x4154	                                push r12	      6985	normal.c	FUNCTION_88
0x40060e9	              0x55	                                push rbp	      6985	normal.c	FUNCTION_88
0x40060ea	              0x53	                                push rbx	      6985	normal.c	FUNCTION_88
0x40060eb	          0x4889fb	                            mov rbx, rdi	      6985	normal.c	FUNCTION_88
0x40060ee	          0x488b3f	                    mov rdi, qword [rdi]	      6990	normal.c	FUNCTION_88	IF_1	CALL_1
0x40060f1	      0xe88da1ffff	                   call sym.checkclearop	      6990	normal.c	FUNCTION_88	IF_1	CALL_1
0x40060f6	            0x85c0	                           test eax, eax	      6990	normal.c	FUNCTION_88	IF_1	CALL_1
0x40060f8	     0xf854f040000	                           jne 0x400654d	      6990	normal.c	FUNCTION_88	IF_1	CALL_1
0x40060fe	      0xbd00000000	                              mov ebp, 0	      7003	normal.c	FUNCTION_88	ELSE_1
0x4006103	        0x837b1016	           cmp dword [rbx + 0x10], 0x16 	      6994	normal.c	FUNCTION_88	IF_2
0x4006107	            0x751a	                           jne 0x4006123	      6994	normal.c	FUNCTION_88	IF_2
0x4006109	      0xe800000000	                          call 0x400610e	      6997	normal.c	FUNCTION_88	IF_2	CALL_2
0x400610e	          0x894310	             mov dword [rbx + 0x10], eax	      6997	normal.c	FUNCTION_88	IF_2	CALL_2
0x4006111	      0x3d80000000	                           cmp eax, 0x80	      7000	normal.c	FUNCTION_88	IF_2	IF_3
0x4006116	      0xb800000000	                              mov eax, 0	      7000	normal.c	FUNCTION_88	IF_2	IF_3
0x400611b	      0xbd16000000	                           mov ebp, 0x16	      7000	normal.c	FUNCTION_88	IF_2	IF_3
0x4006120	           0xf4de8	                         cmovge ebp, eax	      7000	normal.c	FUNCTION_88	IF_2	IF_3
0x4006123	        0x837b1000	               cmp dword [rbx + 0x10], 0	      7006	normal.c	FUNCTION_88	ELSE_1	IF_4	CALL_3
0x4006127	            0x790d	                           jns 0x4006136	      7006	normal.c	FUNCTION_88	ELSE_1	IF_4	CALL_3
0x4006129	          0x488b3b	                    mov rdi, qword [rbx]	      7008	normal.c	FUNCTION_88	ELSE_1	IF_4	CALL_4
0x400612c	      0xe807a1ffff	                    call sym.clearopbeep	      7008	normal.c	FUNCTION_88	ELSE_1	IF_4	CALL_4
0x4006131	      0xe917040000	                           jmp 0x400654d	      7009	normal.c	FUNCTION_88	ELSE_1	IF_4
0x4006136	    0x833d00000000	               cmp dword [0x0400613d], 0	      7013	normal.c	FUNCTION_88	IF_5
0x400613d	            0x743d	                            je 0x400617c	      7013	normal.c	FUNCTION_88	IF_5
0x400613f	    0x8b0500000000	            mov eax, dword [0x04006145] 	      7015	normal.c	FUNCTION_88	IF_5	IF_6
0x4006145	            0x85c0	                           test eax, eax	      7015	normal.c	FUNCTION_88	IF_5	IF_6
0x4006147	            0x7405	                            je 0x400614e	      7015	normal.c	FUNCTION_88	IF_5	IF_6
0x4006149	      0xe800000000	                          call 0x400614e	      7016	normal.c	FUNCTION_88	IF_5	CALL_5
0x400614e	            0x85ed	                           test ebp, ebp	      7017	normal.c	FUNCTION_88	IF_5	IF_7
0x4006150	            0x741d	                            je 0x400616f	      7017	normal.c	FUNCTION_88	IF_5	IF_7
0x4006152	          0x8b4310	            mov eax, dword [rbx + 0x10] 	      7021	normal.c	FUNCTION_88	IF_5	IF_7	IF_8
0x4006155	          0x83f80d	                            cmp eax, 0xd	      7021	normal.c	FUNCTION_88	IF_5	IF_7	IF_8
0x4006158	            0x7509	                           jne 0x4006163	      7021	normal.c	FUNCTION_88	IF_5	IF_7	IF_8
0x400615a	    0xc74310ffffff	     mov dword [rbx + 0x10], 0xffffffff 	      7022	normal.c	FUNCTION_88	IF_5	IF_7	IF_8
0x4006161	            0xeb0c	                           jmp 0x400616f	      7022	normal.c	FUNCTION_88	IF_5	IF_7	IF_8
0x4006163	          0x83f80a	                            cmp eax, 0xa	      7023	normal.c	FUNCTION_88	IF_5	IF_7	ELSE_2	IF_9
0x4006166	            0x7507	                           jne 0x400616f	      7023	normal.c	FUNCTION_88	IF_5	IF_7	ELSE_2	IF_9
0x4006168	    0xc74310feffff	     mov dword [rbx + 0x10], 0xfffffffe 	      7024	normal.c	FUNCTION_88	IF_5	IF_7	ELSE_2	IF_9
0x400616f	          0x4889df	                            mov rdi, rbx	      7026	normal.c	FUNCTION_88	IF_5	CALL_6
0x4006172	      0xe8e7b9ffff	                    call sym.nv_operator	      7026	normal.c	FUNCTION_88	IF_5	CALL_6
0x4006177	      0xe9d1030000	                           jmp 0x400654d	      7027	normal.c	FUNCTION_88	IF_5
0x400617c	      0xe800000000	                          call 0x4006181	      7032	normal.c	FUNCTION_88	IF_10	CALL_7
0x4006181	            0x85c0	                           test eax, eax	      7032	normal.c	FUNCTION_88	IF_10	CALL_7
0x4006183	            0x744b	                            je 0x40061d0	      7032	normal.c	FUNCTION_88	IF_10	CALL_7
0x4006185	      0xe800000000	                          call 0x400618a	      7034	normal.c	FUNCTION_88	IF_10	IF_11	CALL_8
0x400618a	            0x85c0	                           test eax, eax	      7034	normal.c	FUNCTION_88	IF_10	IF_11	CALL_8
0x400618c	     0xf84bb030000	                            je 0x400654d	      7034	normal.c	FUNCTION_88	IF_10	IF_11	CALL_8
0x4006192	      0xe800000000	                          call 0x4006197	      7036	normal.c	FUNCTION_88	IF_10	IF_12	CALL_9
0x4006197	            0x85c0	                           test eax, eax	      7036	normal.c	FUNCTION_88	IF_10	IF_12	CALL_9
0x4006199	            0x751f	                           jne 0x40061ba	      7036	normal.c	FUNCTION_88	IF_10	IF_12	CALL_9
0x400619b	      0xe800000000	                          call 0x40061a0	      7039	normal.c	FUNCTION_88	IF_10	IF_12	CALL_11
0x40061a0	           0x34330	             add eax, dword [rbx + 0x30]	      7039	normal.c	FUNCTION_88	IF_10	IF_12	CALL_11
0x40061a3	            0x89c7	                            mov edi, eax	      7039	normal.c	FUNCTION_88	IF_10	IF_12	CALL_11
0x40061a5	      0xe800000000	                          call 0x40061aa	      7039	normal.c	FUNCTION_88	IF_10	IF_12	CALL_11
0x40061aa	    0x488b05000000	            mov rax, qword [0x040061b1] 	      7040	normal.c	FUNCTION_88	IF_10	IF_12
0x40061b1	        0x488b5330	            mov rdx, qword [rbx + 0x30] 	      7040	normal.c	FUNCTION_88	IF_10	IF_12
0x40061b5	          0x295040	             sub dword [rax + 0x40], edx	      7040	normal.c	FUNCTION_88	IF_10	IF_12
0x40061b8	            0xeb16	                           jmp 0x40061d0	      7040	normal.c	FUNCTION_88	IF_10	IF_12
0x40061ba	      0xe800000000	                          call 0x40061bf	      7042	normal.c	FUNCTION_88	IF_10	ELSE_3	IF_13	CALL_12
0x40061bf	          0x83f809	                              cmp eax, 9	      7042	normal.c	FUNCTION_88	IF_10	ELSE_3	IF_13	CALL_12
0x40061c2	            0x750c	                           jne 0x40061d0	      7042	normal.c	FUNCTION_88	IF_10	ELSE_3	IF_13	CALL_12
0x40061c4	      0xe800000000	                          call 0x40061c9	      7043	normal.c	FUNCTION_88	IF_10	ELSE_3	IF_13
0x40061c9	            0x89c7	                            mov edi, eax	      7043	normal.c	FUNCTION_88	IF_10	ELSE_3	IF_13
0x40061cb	      0xe800000000	                          call 0x40061d0	      7043	normal.c	FUNCTION_88	IF_10	ELSE_3	IF_13
0x40061d0	      0xe800000000	                          call 0x40061d5	      7048	normal.c	FUNCTION_88	CALL_15
0x40061d5	          0x4989c4	                            mov r12, rax	      7048	normal.c	FUNCTION_88	CALL_15
0x40061d8	      0xb800000000	                              mov eax, 0	      7049	normal.c	FUNCTION_88	IF_14	CALL_16
0x40061dd	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      7049	normal.c	FUNCTION_88	IF_14	CALL_16
0x40061e4	          0x4c89e7	                            mov rdi, r12	      7049	normal.c	FUNCTION_88	IF_14	CALL_16
0x40061e7	            0xf2ae	              repne scasb al, byte [rdi]	      7049	normal.c	FUNCTION_88	IF_14	CALL_16
0x40061e9	          0x4889c8	                            mov rax, rcx	      7049	normal.c	FUNCTION_88	IF_14	CALL_16
0x40061ec	          0x48f7d0	                                 not rax	      7049	normal.c	FUNCTION_88	IF_14	CALL_16
0x40061ef	        0x4883e801	                              sub rax, 1	      7049	normal.c	FUNCTION_88	IF_14	CALL_16
0x40061f3	          0x8b5330	            mov edx, dword [rbx + 0x30] 	      7049	normal.c	FUNCTION_88	IF_14	CALL_16
0x40061f6	          0x4839d0	                            cmp rax, rdx	      7049	normal.c	FUNCTION_88	IF_14	CALL_16
0x40061f9	            0x7219	                            jb 0x4006214	      7049	normal.c	FUNCTION_88	IF_14	CALL_16
0x40061fb	    0x833d00000000	               cmp dword [0x04006202], 0	      7051	normal.c	FUNCTION_88	IF_14	CALL_17
0x4006202	            0x741d	                            je 0x4006221	      7051	normal.c	FUNCTION_88	IF_14	CALL_17
0x4006204	          0x4c89e7	                            mov rdi, r12	      7051	normal.c	FUNCTION_88	IF_14	CALL_17
0x4006207	      0xe800000000	                          call 0x400620c	      7051	normal.c	FUNCTION_88	IF_14	CALL_17
0x400620c	            0x4898	                                    cdqe	      7051	normal.c	FUNCTION_88	IF_14	CALL_17
0x400620e	        0x483b4330	            cmp rax, qword [rbx + 0x30] 	      7051	normal.c	FUNCTION_88	IF_14	CALL_17
0x4006212	            0x7d0d	                           jge 0x4006221	      7051	normal.c	FUNCTION_88	IF_14	CALL_17
0x4006214	          0x488b3b	                    mov rdi, qword [rbx]	      7055	normal.c	FUNCTION_88	IF_14	CALL_18
0x4006217	      0xe81ca0ffff	                    call sym.clearopbeep	      7055	normal.c	FUNCTION_88	IF_14	CALL_18
0x400621c	      0xe92c030000	                           jmp 0x400654d	      7056	normal.c	FUNCTION_88	IF_14
0x4006221	          0x83fd16	                           cmp ebp, 0x16	      7065	normal.c	FUNCTION_88	IF_15
0x4006224	     0xf8407030000	                            je 0x4006531	      7065	normal.c	FUNCTION_88	IF_15
0x400622a	        0x837b1009	               cmp dword [rbx + 0x10], 9	      7065	normal.c	FUNCTION_88	IF_15
0x400622e	     0xf850c030000	                           jne 0x4006540	      7065	normal.c	FUNCTION_88	IF_15
0x4006234	    0x488b05000000	            mov rax, qword [0x0400623b] 	      7065	normal.c	FUNCTION_88	IF_15
0x400623b	    0x83b878140000	             cmp dword [rax + 0x1478], 0	      7065	normal.c	FUNCTION_88	IF_15
0x4006242	            0x750d	                           jne 0x4006251	      7065	normal.c	FUNCTION_88	IF_15
0x4006244	    0x833d00000000	               cmp dword [0x0400624b], 0	      7065	normal.c	FUNCTION_88	IF_15
0x400624b	     0xf84ef020000	                            je 0x4006540	      7065	normal.c	FUNCTION_88	IF_15
0x4006251	        0x488b7b30	            mov rdi, qword [rbx + 0x30] 	      7067	normal.c	FUNCTION_88	IF_15	CALL_19
0x4006255	      0xe800000000	                          call 0x400625a	      7067	normal.c	FUNCTION_88	IF_15	CALL_19
0x400625a	      0xbf52000000	                           mov edi, 0x52	      7068	normal.c	FUNCTION_88	IF_15	CALL_20
0x400625f	      0xe800000000	                          call 0x4006264	      7068	normal.c	FUNCTION_88	IF_15	CALL_20
0x4006264	      0xbf09000000	                              mov edi, 9	      7069	normal.c	FUNCTION_88	IF_15	CALL_21
0x4006269	      0xe800000000	                          call 0x400626e	      7069	normal.c	FUNCTION_88	IF_15	CALL_21
0x400626e	      0xbf1b000000	                           mov edi, 0x1b	      7070	normal.c	FUNCTION_88	IF_15	CALL_22
0x4006273	      0xe800000000	                          call 0x4006278	      7070	normal.c	FUNCTION_88	IF_15	CALL_22
0x4006278	      0xe9d0020000	                           jmp 0x400654d	      7071	normal.c	FUNCTION_88	IF_15
0x400627d	          0x8b4310	            mov eax, dword [rbx + 0x10] 	      7078	normal.c	FUNCTION_88	IF_17
0x4006280	          0x83f80d	                            cmp eax, 0xd	      7078	normal.c	FUNCTION_88	IF_17
0x4006283	            0x7405	                            je 0x400628a	      7078	normal.c	FUNCTION_88	IF_17
0x4006285	          0x83f80a	                            cmp eax, 0xa	      7078	normal.c	FUNCTION_88	IF_17
0x4006288	            0x753e	                           jne 0x40062c8	      7078	normal.c	FUNCTION_88	IF_17
0x400628a	        0x488b7b30	            mov rdi, qword [rbx + 0x30] 	      7089	normal.c	FUNCTION_88	IF_17	CALL_24
0x400628e	      0xbe00000000	                              mov esi, 0	      7089	normal.c	FUNCTION_88	IF_17	CALL_24
0x4006293	      0xe800000000	                          call 0x4006298	      7089	normal.c	FUNCTION_88	IF_17	CALL_24
0x4006298	      0xbf0d000000	                            mov edi, 0xd	      7093	normal.c	FUNCTION_88	IF_17	CALL_26
0x400629d	      0xe800000000	                          call 0x40062a2	      7093	normal.c	FUNCTION_88	IF_17	CALL_26
0x40062a2	      0xbf1b000000	                           mov edi, 0x1b	      7094	normal.c	FUNCTION_88	IF_17	CALL_27
0x40062a7	      0xe800000000	                          call 0x40062ac	      7094	normal.c	FUNCTION_88	IF_17	CALL_27
0x40062ac	      0xb900000000	                              mov ecx, 0	      7097	normal.c	FUNCTION_88	IF_17	CALL_28
0x40062b1	      0xba72000000	                           mov edx, 0x72	      7097	normal.c	FUNCTION_88	IF_17	CALL_28
0x40062b6	      0xbe01000000	                              mov esi, 1	      7097	normal.c	FUNCTION_88	IF_17	CALL_28
0x40062bb	          0x4889df	                            mov rdi, rbx	      7097	normal.c	FUNCTION_88	IF_17	CALL_28
0x40062be	      0xe8b2a4ffff	                    call sym.invoke_edit	      7097	normal.c	FUNCTION_88	IF_17	CALL_28
0x40062c3	      0xe985020000	                           jmp 0x400654d	      7097	normal.c	FUNCTION_88	IF_17	CALL_28
0x40062c8	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	      7101	normal.c	FUNCTION_88	ELSE_4	CALL_29
0x40062cc	          0x488b03	                    mov rax, qword [rbx]	      7101	normal.c	FUNCTION_88	ELSE_4	CALL_29
0x40062cf	          0x8b7804	                mov edi, dword [rax + 4]	      7101	normal.c	FUNCTION_88	ELSE_4	CALL_29
0x40062d2	        0x4883ec08	                              sub rsp, 8	      7101	normal.c	FUNCTION_88	ELSE_4	CALL_29
0x40062d6	          0x8b4310	            mov eax, dword [rbx + 0x10] 	      7101	normal.c	FUNCTION_88	ELSE_4	CALL_29
0x40062d9	              0x50	                                push rax	      7101	normal.c	FUNCTION_88	ELSE_4	CALL_29
0x40062da	          0x4189e9	                            mov r9d, ebp	      7101	normal.c	FUNCTION_88	ELSE_4	CALL_29
0x40062dd	    0x41b800000000	                              mov r8d, 0	      7101	normal.c	FUNCTION_88	ELSE_4	CALL_29
0x40062e3	      0xb972000000	                           mov ecx, 0x72	      7101	normal.c	FUNCTION_88	ELSE_4	CALL_29
0x40062e8	      0xba00000000	                              mov edx, 0	      7101	normal.c	FUNCTION_88	ELSE_4	CALL_29
0x40062ed	      0xe83fa1ffff	                      call sym.prep_redo	      7101	normal.c	FUNCTION_88	ELSE_4	CALL_29
0x40062f2	    0x488b05000000	            mov rax, qword [0x040062f9] 	      7104	normal.c	FUNCTION_88	ELSE_4
0x40062f9	        0x488b7038	            mov rsi, qword [rax + 0x38] 	      7104	normal.c	FUNCTION_88	ELSE_4
0x40062fd	        0x488b7840	            mov rdi, qword [rax + 0x40] 	      7104	normal.c	FUNCTION_88	ELSE_4
0x4006301	    0x488b05000000	            mov rax, qword [0x04006308] 	      7104	normal.c	FUNCTION_88	ELSE_4
0x4006308	    0x4889b0e01100	          mov qword [rax + 0x11e0], rsi 	      7104	normal.c	FUNCTION_88	ELSE_4
0x400630f	    0x4889b8e81100	          mov qword [rax + 0x11e8], rdi 	      7104	normal.c	FUNCTION_88	ELSE_4
0x4006316	        0x4883c410	                           add rsp, 0x10	      7106	normal.c	FUNCTION_88	ELSE_4	IF_18
0x400631a	    0x833d00000000	               cmp dword [0x04006321], 0	      7106	normal.c	FUNCTION_88	ELSE_4	IF_18
0x4006321	     0xf84ac000000	                            je 0x40063d3	      7106	normal.c	FUNCTION_88	ELSE_4	IF_18
0x4006327	    0x448b25000000	           mov r12d, dword [0x0400632e] 	      7108	normal.c	FUNCTION_88	ELSE_4	IF_18
0x400632e	          0x8b7b14	            mov edi, dword [rbx + 0x14] 	      7110	normal.c	FUNCTION_88	ELSE_4	IF_18	IF_19
0x4006331	            0x85ff	                           test edi, edi	      7110	normal.c	FUNCTION_88	ELSE_4	IF_18	IF_19
0x4006333	            0x7405	                            je 0x400633a	      7110	normal.c	FUNCTION_88	ELSE_4	IF_18	IF_19
0x4006335	      0xe800000000	                          call 0x400633a	      7111	normal.c	FUNCTION_88	ELSE_4	IF_18	CALL_30
0x400633a	          0x8b7b18	            mov edi, dword [rbx + 0x18] 	      7112	normal.c	FUNCTION_88	ELSE_4	IF_18	IF_20
0x400633d	            0x85ff	                           test edi, edi	      7112	normal.c	FUNCTION_88	ELSE_4	IF_18	IF_20
0x400633f	            0x7405	                            je 0x4006346	      7112	normal.c	FUNCTION_88	ELSE_4	IF_18	IF_20
0x4006341	      0xe800000000	                          call 0x4006346	      7113	normal.c	FUNCTION_88	ELSE_4	IF_18	CALL_31
0x4006346	        0x488b6b30	            mov rbp, qword [rbx + 0x30] 	      7118	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1
0x400634a	          0x4885ed	                           test rbp, rbp	      7118	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1
0x400634d	     0xf8e90010000	                           jle 0x40064e3	      7118	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1
0x4006353	    0xc70500000000	           mov dword [0x0400635d], 0x50 	      7120	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1
0x400635d	          0x8b7b10	            mov edi, dword [rbx + 0x10] 	      7121	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_21
0x4006360	          0x83ff05	                              cmp edi, 5	      7121	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_21
0x4006363	            0x7405	                            je 0x400636a	      7121	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_21
0x4006365	          0x83ff19	                           cmp edi, 0x19	      7121	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_21
0x4006368	            0x753a	                           jne 0x40063a4	      7121	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_21
0x400636a	          0x83ff19	                           cmp edi, 0x19	      7123	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_21	CALL_32
0x400636d	        0x400f95c7	                               setne dil	      7123	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_21	CALL_32
0x4006371	        0x400fb6ff	                          movzx edi, dil	      7123	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_21	CALL_32
0x4006375	      0x488d7c3fff	                lea rdi, [rdi + rdi - 1]	      7123	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_21	CALL_32
0x400637a	    0x488b05000000	            mov rax, qword [0x04006381] 	      7123	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_21	CALL_32
0x4006381	        0x48037838	             add rdi, qword [rax + 0x38]	      7123	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_21	CALL_32
0x4006385	      0xe800000000	                          call 0x400638a	      7123	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_21	CALL_32
0x400638a	            0x85c0	                           test eax, eax	      7125	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_21	IF_22
0x400638c	            0x7409	                            je 0x4006397	      7125	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_21	IF_22
0x400638e	            0x89c7	                            mov edi, eax	      7126	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_21	CALL_33
0x4006390	      0xe800000000	                          call 0x4006395	      7126	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_21	CALL_33
0x4006395	            0xeb12	                           jmp 0x40063a9	      7126	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_21	CALL_33
0x4006397	    0x488b05000000	            mov rax, qword [0x0400639e] 	      7129	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_21	ELSE_5
0x400639e	        0x83404001	               add dword [rax + 0x40], 1	      7129	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_21	ELSE_5
0x40063a2	            0xeb05	                           jmp 0x40063a9	      7129	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_21	ELSE_5
0x40063a4	      0xe800000000	                          call 0x40063a9	      7132	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	CALL_34
0x40063a9	    0x448925000000	           mov dword [0x040063b0], r12d 	      7133	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1
0x40063b0	          0x8b7b14	            mov edi, dword [rbx + 0x14] 	      7134	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_23
0x40063b3	            0x85ff	                           test edi, edi	      7134	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_23
0x40063b5	            0x7405	                            je 0x40063bc	      7134	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_23
0x40063b7	      0xe800000000	                          call 0x40063bc	      7135	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	CALL_35
0x40063bc	          0x8b7b18	            mov edi, dword [rbx + 0x18] 	      7136	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_24
0x40063bf	            0x85ff	                           test edi, edi	      7136	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_24
0x40063c1	            0x7405	                            je 0x40063c8	      7136	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_24
0x40063c3	      0xe800000000	                          call 0x40063c8	      7137	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	CALL_36
0x40063c8	        0x4883ed01	                              sub rbp, 1	      7118	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1
0x40063cc	            0x7585	                           jne 0x4006353	      7118	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1
0x40063ce	      0xe910010000	                           jmp 0x40064e3	      7118	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1
0x40063d3	        0x488b6b30	            mov rbp, qword [rbx + 0x30] 	      7146	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2
0x40063d7	          0x4885ed	                           test rbp, rbp	      7146	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2
0x40063da	     0xf8e9f000000	                           jle 0x400647f	      7146	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2
0x40063e0	    0x488b05000000	            mov rax, qword [0x040063e7] 	      7153	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	CALL_37
0x40063e7	        0x488b7038	            mov rsi, qword [rax + 0x38] 	      7153	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	CALL_37
0x40063eb	      0xba01000000	                              mov edx, 1	      7153	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	CALL_37
0x40063f0	    0x488b3d000000	            mov rdi, qword [0x040063f7] 	      7153	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	CALL_37
0x40063f7	      0xe800000000	                          call 0x40063fc	      7153	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	CALL_37
0x40063fc	          0x4989c4	                            mov r12, rax	      7153	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	CALL_37
0x40063ff	          0x8b4310	            mov eax, dword [rbx + 0x10] 	      7154	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	IF_25
0x4006402	          0x83f805	                              cmp eax, 5	      7154	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	IF_25
0x4006405	            0x7405	                            je 0x400640c	      7154	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	IF_25
0x4006407	          0x83f819	                           cmp eax, 0x19	      7154	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	IF_25
0x400640a	            0x7535	                           jne 0x4006441	      7154	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	IF_25
0x400640c	          0x83f819	                           cmp eax, 0x19	      7156	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	IF_25	CALL_38
0x400640f	        0x400f95c7	                               setne dil	      7156	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	IF_25	CALL_38
0x4006413	        0x400fb6ff	                          movzx edi, dil	      7156	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	IF_25	CALL_38
0x4006417	      0x488d7c3fff	                lea rdi, [rdi + rdi - 1]	      7156	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	IF_25	CALL_38
0x400641c	    0x488b05000000	            mov rax, qword [0x04006423] 	      7156	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	IF_25	CALL_38
0x4006423	        0x48037838	             add rdi, qword [rax + 0x38]	      7156	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	IF_25	CALL_38
0x4006427	      0xe800000000	                          call 0x400642c	      7156	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	IF_25	CALL_38
0x400642c	            0x85c0	                           test eax, eax	      7158	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	IF_25	IF_26
0x400642e	            0x7420	                            je 0x4006450	      7158	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	IF_25	IF_26
0x4006430	    0x488b15000000	            mov rdx, qword [0x04006437] 	      7159	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	IF_25	IF_26
0x4006437	        0x48635240	         movsxd rdx, dword [rdx + 0x40] 	      7159	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	IF_25	IF_26
0x400643b	        0x41880414	                mov byte [r12 + rdx], al	      7159	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	IF_25	IF_26
0x400643f	            0xeb0f	                           jmp 0x4006450	      7159	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	IF_25	IF_26
0x4006441	    0x488b15000000	            mov rdx, qword [0x04006448] 	      7162	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	ELSE_8
0x4006448	        0x48635240	         movsxd rdx, dword [rdx + 0x40] 	      7162	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	ELSE_8
0x400644c	        0x41880414	                mov byte [r12 + rdx], al	      7162	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	ELSE_8
0x4006450	    0x833d00000000	               cmp dword [0x04006457], 0	      7163	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	IF_27
0x4006457	            0x7411	                            je 0x400646a	      7163	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	IF_27
0x4006459	    0x833d00000000	               cmp dword [0x04006460], 0	      7163	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	IF_27
0x4006460	            0x7508	                           jne 0x400646a	      7163	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	IF_27
0x4006462	          0x8b7b10	            mov edi, dword [rbx + 0x10] 	      7164	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	CALL_39
0x4006465	      0xe800000000	                          call 0x400646a	      7164	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	CALL_39
0x400646a	    0x488b05000000	            mov rax, qword [0x04006471] 	      7165	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2
0x4006471	        0x83404001	               add dword [rax + 0x40], 1	      7165	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2
0x4006475	        0x4883ed01	                              sub rbp, 1	      7146	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2
0x4006479	     0xf8561ffffff	                           jne 0x40063e0	      7146	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2
0x400647f	      0xe800000000	                          call 0x4006484	      7168	normal.c	FUNCTION_88	ELSE_4	ELSE_7	IF_28	CALL_40
0x4006484	            0x85c0	                           test eax, eax	      7168	normal.c	FUNCTION_88	ELSE_4	ELSE_7	IF_28	CALL_40
0x4006486	            0x7445	                            je 0x40064cd	      7168	normal.c	FUNCTION_88	ELSE_4	ELSE_7	IF_28	CALL_40
0x4006488	    0x488b05000000	            mov rax, qword [0x0400648f] 	      7170	normal.c	FUNCTION_88	ELSE_4	ELSE_7	IF_28
0x400648f	        0x488b4b30	            mov rcx, qword [rbx + 0x30] 	      7170	normal.c	FUNCTION_88	ELSE_4	ELSE_7	IF_28
0x4006493	          0x8b6840	            mov ebp, dword [rax + 0x40] 	      7170	normal.c	FUNCTION_88	ELSE_4	ELSE_7	IF_28
0x4006496	            0x29cd	                            sub ebp, ecx	      7170	normal.c	FUNCTION_88	ELSE_4	ELSE_7	IF_28
0x4006498	        0x488b7038	            mov rsi, qword [rax + 0x38] 	      7172	normal.c	FUNCTION_88	ELSE_4	ELSE_7	IF_28	CALL_41
0x400649c	            0x89ea	                            mov edx, ebp	      7172	normal.c	FUNCTION_88	ELSE_4	ELSE_7	IF_28	CALL_41
0x400649e	    0x488b3d000000	            mov rdi, qword [0x040064a5] 	      7172	normal.c	FUNCTION_88	ELSE_4	ELSE_7	IF_28	CALL_41
0x40064a5	      0xe800000000	                          call 0x40064aa	      7172	normal.c	FUNCTION_88	ELSE_4	ELSE_7	IF_28	CALL_41
0x40064aa	          0x4863cd	                         movsxd rcx, ebp	      7174	normal.c	FUNCTION_88	ELSE_4	ELSE_7	IF_28	CALL_42
0x40064ad	          0x4c01e1	                            add rcx, r12	      7174	normal.c	FUNCTION_88	ELSE_4	ELSE_7	IF_28	CALL_42
0x40064b0	    0x488b05000000	            mov rax, qword [0x040064b7] 	      7174	normal.c	FUNCTION_88	ELSE_4	ELSE_7	IF_28	CALL_42
0x40064b7	        0x488b7038	            mov rsi, qword [rax + 0x38] 	      7174	normal.c	FUNCTION_88	ELSE_4	ELSE_7	IF_28	CALL_42
0x40064bb	        0x448b4330	            mov r8d, dword [rbx + 0x30] 	      7174	normal.c	FUNCTION_88	ELSE_4	ELSE_7	IF_28	CALL_42
0x40064bf	            0x89ea	                            mov edx, ebp	      7174	normal.c	FUNCTION_88	ELSE_4	ELSE_7	IF_28	CALL_42
0x40064c1	    0x488b3d000000	            mov rdi, qword [0x040064c8] 	      7174	normal.c	FUNCTION_88	ELSE_4	ELSE_7	IF_28	CALL_42
0x40064c8	      0xe800000000	                          call 0x40064cd	      7174	normal.c	FUNCTION_88	ELSE_4	ELSE_7	IF_28	CALL_42
0x40064cd	    0x488b05000000	            mov rax, qword [0x040064d4] 	      7181	normal.c	FUNCTION_88	ELSE_4	ELSE_7
0x40064d4	          0x8b7040	            mov esi, dword [rax + 0x40] 	      7180	normal.c	FUNCTION_88	ELSE_4	ELSE_7	CALL_43
0x40064d7	          0x2b7330	             sub esi, dword [rbx + 0x30]	      7180	normal.c	FUNCTION_88	ELSE_4	ELSE_7	CALL_43
0x40064da	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      7180	normal.c	FUNCTION_88	ELSE_4	ELSE_7	CALL_43
0x40064de	      0xe800000000	                          call 0x40064e3	      7180	normal.c	FUNCTION_88	ELSE_4	ELSE_7	CALL_43
0x40064e3	    0x488b05000000	            mov rax, qword [0x040064ea] 	      7183	normal.c	FUNCTION_88	ELSE_4
0x40064ea	        0x83684001	               sub dword [rax + 0x40], 1	      7183	normal.c	FUNCTION_88	ELSE_4
0x40064ee	    0x833d00000000	               cmp dword [0x040064f5], 0	      7187	normal.c	FUNCTION_88	ELSE_4	IF_29
0x40064f5	            0x7405	                            je 0x40064fc	      7187	normal.c	FUNCTION_88	ELSE_4	IF_29
0x40064f7	      0xe800000000	                          call 0x40064fc	      7188	normal.c	FUNCTION_88	ELSE_4	CALL_44
0x40064fc	    0x488b05000000	            mov rax, qword [0x04006503] 	      7190	normal.c	FUNCTION_88	ELSE_4
0x4006503	        0x488b7038	            mov rsi, qword [rax + 0x38] 	      7190	normal.c	FUNCTION_88	ELSE_4
0x4006507	        0x488b7840	            mov rdi, qword [rax + 0x40] 	      7190	normal.c	FUNCTION_88	ELSE_4
0x400650b	    0x488b15000000	            mov rdx, qword [0x04006512] 	      7190	normal.c	FUNCTION_88	ELSE_4
0x4006512	    0x4889b2001200	          mov qword [rdx + 0x1200], rsi 	      7190	normal.c	FUNCTION_88	ELSE_4
0x4006519	    0x4889ba081200	          mov qword [rdx + 0x1208], rdi 	      7190	normal.c	FUNCTION_88	ELSE_4
0x4006520	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      7191	normal.c	FUNCTION_88	ELSE_4
0x4006527	          0x8b7b10	            mov edi, dword [rbx + 0x10] 	      7192	normal.c	FUNCTION_88	ELSE_4	CALL_45
0x400652a	      0xe800000000	                          call 0x400652f	      7192	normal.c	FUNCTION_88	ELSE_4	CALL_45
0x400652f	            0xeb1c	                           jmp 0x400654d	      7192	normal.c	FUNCTION_88	ELSE_4	CALL_45
0x4006531	      0xe800000000	                          call 0x4006536	      7075	normal.c	FUNCTION_88	IF_16	CALL_23
0x4006536	            0x85c0	                           test eax, eax	      7075	normal.c	FUNCTION_88	IF_16	CALL_23
0x4006538	     0xf858afdffff	                           jne 0x40062c8	      7075	normal.c	FUNCTION_88	IF_16	CALL_23
0x400653e	            0xeb0d	                           jmp 0x400654d	      7075	normal.c	FUNCTION_88	IF_16	CALL_23
0x4006540	      0xe800000000	                          call 0x4006545	      7075	normal.c	FUNCTION_88	IF_16	CALL_23
0x4006545	            0x85c0	                           test eax, eax	      7075	normal.c	FUNCTION_88	IF_16	CALL_23
0x4006547	     0xf8530fdffff	                           jne 0x400627d	      7075	normal.c	FUNCTION_88	IF_16	CALL_23
0x400654d	              0x5b	                                 pop rbx	      7194	normal.c	FUNCTION_88
0x400654e	              0x5d	                                 pop rbp	      7194	normal.c	FUNCTION_88
0x400654f	            0x415c	                                 pop r12	      7194	normal.c	FUNCTION_88
0x4006551	              0xc3	                                     ret	      7194	normal.c	FUNCTION_88
scroll_redraw	CALL,9:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,1:ELSE,2:IF,6	69
0x4006e74	            0x4155	                                push r13	      4698	normal.c	FUNCTION_50
0x4006e76	            0x4154	                                push r12	      4698	normal.c	FUNCTION_50
0x4006e78	              0x55	                                push rbp	      4698	normal.c	FUNCTION_50
0x4006e79	              0x53	                                push rbx	      4698	normal.c	FUNCTION_50
0x4006e7a	        0x4883ec08	                              sub rsp, 8	      4698	normal.c	FUNCTION_50
0x4006e7e	          0x4189fc	                           mov r12d, edi	      4698	normal.c	FUNCTION_50
0x4006e81	          0x4889f7	                            mov rdi, rsi	      4698	normal.c	FUNCTION_50
0x4006e84	    0x488b05000000	            mov rax, qword [0x04006e8b] 	      4699	normal.c	FUNCTION_50
0x4006e8b	        0x488b5878	            mov rbx, qword [rax + 0x78] 	      4699	normal.c	FUNCTION_50
0x4006e8f	    0x448ba8840000	           mov r13d, dword [rax + 0x84] 	      4701	normal.c	FUNCTION_50
0x4006e96	        0x488b6838	            mov rbp, qword [rax + 0x38] 	      4703	normal.c	FUNCTION_50
0x4006e9a	          0x4585e4	                         test r12d, r12d	      4705	normal.c	FUNCTION_50	IF_1
0x4006e9d	            0x740c	                            je 0x4006eab	      4705	normal.c	FUNCTION_50	IF_1
0x4006e9f	      0xbe01000000	                              mov esi, 1	      4706	normal.c	FUNCTION_50	CALL_1
0x4006ea4	      0xe800000000	                          call 0x4006ea9	      4706	normal.c	FUNCTION_50	CALL_1
0x4006ea9	            0xeb0a	                           jmp 0x4006eb5	      4706	normal.c	FUNCTION_50	CALL_1
0x4006eab	      0xbe01000000	                              mov esi, 1	      4708	normal.c	FUNCTION_50	CALL_2
0x4006eb0	      0xe800000000	                          call 0x4006eb5	      4708	normal.c	FUNCTION_50	CALL_2
0x4006eb5	    0x48833d000000	               cmp qword [0x04006ebd], 0	      4709	normal.c	FUNCTION_50	IF_2
0x4006ebd	     0xf849c000000	                            je 0x4006f5f	      4709	normal.c	FUNCTION_50	IF_2
0x4006ec3	      0xe800000000	                          call 0x4006ec8	      4713	normal.c	FUNCTION_50	IF_2	CALL_3
0x4006ec8	    0x488b3d000000	            mov rdi, qword [0x04006ecf] 	      4714	normal.c	FUNCTION_50	IF_2	CALL_4
0x4006ecf	      0xe800000000	                          call 0x4006ed4	      4714	normal.c	FUNCTION_50	IF_2	CALL_4
0x4006ed4	    0x488b05000000	            mov rax, qword [0x04006edb] 	      4715	normal.c	FUNCTION_50	IF_2
0x4006edb	    0x8188b4000000	             or dword [rax + 0xb4], 0x80	      4715	normal.c	FUNCTION_50	IF_2
0x4006ee5	        0x483b5878	            cmp rbx, qword [rax + 0x78] 	      4720	normal.c	FUNCTION_50	IF_2	WHILE_1
0x4006ee9	            0x7574	                           jne 0x4006f5f	      4720	normal.c	FUNCTION_50	IF_2	WHILE_1
0x4006eeb	    0x443ba8840000	           cmp r13d, dword [rax + 0x84] 	      4722	normal.c	FUNCTION_50	IF_2	WHILE_1
0x4006ef2	            0x756b	                           jne 0x4006f5f	      4722	normal.c	FUNCTION_50	IF_2	WHILE_1
0x4006ef4	          0x4585e4	                         test r12d, r12d	      4726	normal.c	FUNCTION_50	IF_2	WHILE_1	IF_3
0x4006ef7	            0x741b	                            je 0x4006f14	      4726	normal.c	FUNCTION_50	IF_2	WHILE_1	IF_3
0x4006ef9	        0x483b6838	            cmp rbp, qword [rax + 0x38] 	      4728	normal.c	FUNCTION_50	IF_2	WHILE_1	IF_3	IF_4
0x4006efd	            0x7c60	                            jl 0x4006f5f	      4728	normal.c	FUNCTION_50	IF_2	WHILE_1	IF_3	IF_4
0x4006eff	      0xbe00000000	                              mov esi, 0	      4729	normal.c	FUNCTION_50	IF_2	WHILE_1	IF_3	IF_4	CALL_5
0x4006f04	      0xbf01000000	                              mov edi, 1	      4729	normal.c	FUNCTION_50	IF_2	WHILE_1	IF_3	IF_4	CALL_5
0x4006f09	      0xe800000000	                          call 0x4006f0e	      4729	normal.c	FUNCTION_50	IF_2	WHILE_1	IF_3	IF_4	CALL_5
0x4006f0e	            0x85c0	                           test eax, eax	      4729	normal.c	FUNCTION_50	IF_2	WHILE_1	IF_3	IF_4	CALL_5
0x4006f10	            0x7521	                           jne 0x4006f33	      4729	normal.c	FUNCTION_50	IF_2	WHILE_1	IF_3	IF_4	CALL_5
0x4006f12	            0xeb4b	                           jmp 0x4006f5f	      4729	normal.c	FUNCTION_50	IF_2	WHILE_1	IF_3	IF_4	CALL_5
0x4006f14	        0x483b6838	            cmp rbp, qword [rax + 0x38] 	      4735	normal.c	FUNCTION_50	IF_2	WHILE_1	ELSE_2	IF_5
0x4006f18	            0x7f45	                            jg 0x4006f5f	      4735	normal.c	FUNCTION_50	IF_2	WHILE_1	ELSE_2	IF_5
0x4006f1a	        0x4883fb01	                              cmp rbx, 1	      4735	normal.c	FUNCTION_50	IF_2	WHILE_1	ELSE_2	IF_5
0x4006f1e	            0x743f	                            je 0x4006f5f	      4735	normal.c	FUNCTION_50	IF_2	WHILE_1	ELSE_2	IF_5
0x4006f20	      0xbe00000000	                              mov esi, 0	      4736	normal.c	FUNCTION_50	IF_2	WHILE_1	ELSE_2	IF_5	CALL_6
0x4006f25	      0xbf01000000	                              mov edi, 1	      4736	normal.c	FUNCTION_50	IF_2	WHILE_1	ELSE_2	IF_5	CALL_6
0x4006f2a	      0xe800000000	                          call 0x4006f2f	      4736	normal.c	FUNCTION_50	IF_2	WHILE_1	ELSE_2	IF_5	CALL_6
0x4006f2f	            0x85c0	                           test eax, eax	      4736	normal.c	FUNCTION_50	IF_2	WHILE_1	ELSE_2	IF_5	CALL_6
0x4006f31	            0x742c	                            je 0x4006f5f	      4736	normal.c	FUNCTION_50	IF_2	WHILE_1	ELSE_2	IF_5	CALL_6
0x4006f33	    0x488b3d000000	            mov rdi, qword [0x04006f3a] 	      4741	normal.c	FUNCTION_50	IF_2	WHILE_1	CALL_7
0x4006f3a	      0xe800000000	                          call 0x4006f3f	      4741	normal.c	FUNCTION_50	IF_2	WHILE_1	CALL_7
0x4006f3f	    0x488b05000000	            mov rax, qword [0x04006f46] 	      4742	normal.c	FUNCTION_50	IF_2	WHILE_1
0x4006f46	    0x8188b4000000	             or dword [rax + 0xb4], 0x80	      4742	normal.c	FUNCTION_50	IF_2	WHILE_1
0x4006f50	        0x483b5878	            cmp rbx, qword [rax + 0x78] 	      4720	normal.c	FUNCTION_50	IF_2	WHILE_1
0x4006f54	            0x7509	                           jne 0x4006f5f	      4720	normal.c	FUNCTION_50	IF_2	WHILE_1
0x4006f56	    0x443ba8840000	           cmp r13d, dword [rax + 0x84] 	      4722	normal.c	FUNCTION_50	IF_2	WHILE_1
0x4006f5d	            0x7495	                            je 0x4006ef4	      4722	normal.c	FUNCTION_50	IF_2	WHILE_1
0x4006f5f	    0x488b05000000	            mov rax, qword [0x04006f66] 	      4745	normal.c	FUNCTION_50	IF_6
0x4006f66	        0x483b6838	            cmp rbp, qword [rax + 0x38] 	      4745	normal.c	FUNCTION_50	IF_6
0x4006f6a	            0x7408	                            je 0x4006f74	      4745	normal.c	FUNCTION_50	IF_6
0x4006f6c	          0x8b7848	            mov edi, dword [rax + 0x48] 	      4746	normal.c	FUNCTION_50	CALL_8
0x4006f6f	      0xe800000000	                          call 0x4006f74	      4746	normal.c	FUNCTION_50	CALL_8
0x4006f74	      0xbf0a000000	                            mov edi, 0xa	      4747	normal.c	FUNCTION_50	CALL_9
0x4006f79	      0xe800000000	                          call 0x4006f7e	      4747	normal.c	FUNCTION_50	CALL_9
0x4006f7e	        0x4883c408	                              add rsp, 8	      4748	normal.c	FUNCTION_50
0x4006f82	              0x5b	                                 pop rbx	      4748	normal.c	FUNCTION_50
0x4006f83	              0x5d	                                 pop rbp	      4748	normal.c	FUNCTION_50
0x4006f84	            0x415c	                                 pop r12	      4748	normal.c	FUNCTION_50
0x4006f86	            0x415d	                                 pop r13	      4748	normal.c	FUNCTION_50
0x4006f88	              0xc3	                                     ret	      4748	normal.c	FUNCTION_50
nv_up	CALL,4:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,2:IF,3	26
0x4000974	              0x53	                                push rbx	      6168	normal.c	FUNCTION_72
0x4000975	          0x4889fb	                            mov rbx, rdi	      6168	normal.c	FUNCTION_72
0x4000978	    0xf60500000000	               test byte [0x0400097f], 2	      6169	normal.c	FUNCTION_72	IF_1
0x400097f	            0x740e	                            je 0x400098f	      6169	normal.c	FUNCTION_72	IF_1
0x4000981	    0xc74738ffffff	     mov dword [rdi + 0x38], 0xffffffff 	      6172	normal.c	FUNCTION_72	IF_1
0x4000988	      0xe8ccf9ffff	                        call sym.nv_page	      6173	normal.c	FUNCTION_72	IF_1	CALL_1
0x400098d	            0xeb3f	                           jmp 0x40009ce	      6173	normal.c	FUNCTION_72	IF_1	CALL_1
0x400098f	          0x488b07	                    mov rax, qword [rdi]	      6177	normal.c	FUNCTION_72	ELSE_1
0x4000992	    0xc74008010000	                  mov dword [rax + 8], 1	      6177	normal.c	FUNCTION_72	ELSE_1
0x4000999	          0x488b07	                    mov rax, qword [rdi]	      6178	normal.c	FUNCTION_72	ELSE_1	IF_2	CALL_2
0x400099c	          0x833800	                      cmp dword [rax], 0	      6178	normal.c	FUNCTION_72	ELSE_1	IF_2	CALL_2
0x400099f	        0x400f94c6	                                sete sil	      6178	normal.c	FUNCTION_72	ELSE_1	IF_2	CALL_2
0x40009a3	        0x400fb6f6	                          movzx esi, sil	      6178	normal.c	FUNCTION_72	ELSE_1	IF_2	CALL_2
0x40009a7	        0x488b7f30	            mov rdi, qword [rdi + 0x30] 	      6178	normal.c	FUNCTION_72	ELSE_1	IF_2	CALL_2
0x40009ab	      0xe800000000	                          call 0x40009b0	      6178	normal.c	FUNCTION_72	ELSE_1	IF_2	CALL_2
0x40009b0	            0x85c0	                           test eax, eax	      6178	normal.c	FUNCTION_72	ELSE_1	IF_2	CALL_2
0x40009b2	            0x750a	                           jne 0x40009be	      6178	normal.c	FUNCTION_72	ELSE_1	IF_2	CALL_2
0x40009b4	          0x488b3b	                    mov rdi, qword [rbx]	      6179	normal.c	FUNCTION_72	ELSE_1	CALL_3
0x40009b7	      0xe87cf8ffff	                    call sym.clearopbeep	      6179	normal.c	FUNCTION_72	ELSE_1	CALL_3
0x40009bc	            0xeb10	                           jmp 0x40009ce	      6179	normal.c	FUNCTION_72	ELSE_1	CALL_3
0x40009be	        0x837b3800	               cmp dword [rbx + 0x38], 0	      6180	normal.c	FUNCTION_72	ELSE_1	ELSE_2	IF_3
0x40009c2	            0x740a	                            je 0x40009ce	      6180	normal.c	FUNCTION_72	ELSE_1	ELSE_2	IF_3
0x40009c4	      0xbf05000000	                              mov edi, 5	      6181	normal.c	FUNCTION_72	ELSE_1	ELSE_2	IF_3
0x40009c9	      0xe800000000	                          call 0x40009ce	      6181	normal.c	FUNCTION_72	ELSE_1	ELSE_2	IF_3
0x40009ce	              0x5b	                                 pop rbx	      6183	normal.c	FUNCTION_72
0x40009cf	              0xc3	                                     ret	      6183	normal.c	FUNCTION_72
nv_halfpage	CALL,3:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,1:IF,2	30
0x40024ec	              0x53	                                push rbx	      9363	normal.c	FUNCTION_133
0x40024ed	          0x4889fb	                            mov rbx, rdi	      9363	normal.c	FUNCTION_133
0x40024f0	          0x8b470c	              mov eax, dword [rdi + 0xc]	      9364	normal.c	FUNCTION_133	IF_1
0x40024f3	          0x83f815	                           cmp eax, 0x15	      9364	normal.c	FUNCTION_133	IF_1
0x40024f6	            0x7510	                           jne 0x4002508	      9364	normal.c	FUNCTION_133	IF_1
0x40024f8	    0x488b05000000	            mov rax, qword [0x040024ff] 	      9364	normal.c	FUNCTION_133	IF_1
0x40024ff	      0x4883783801	               cmp qword [rax + 0x38], 1	      9364	normal.c	FUNCTION_133	IF_1
0x4002504	            0x7528	                           jne 0x400252e	      9364	normal.c	FUNCTION_133	IF_1
0x4002506	            0xeb1c	                           jmp 0x4002524	      9364	normal.c	FUNCTION_133	IF_1
0x4002508	          0x83f804	                              cmp eax, 4	      9365	normal.c	FUNCTION_133	IF_1
0x400250b	            0x7521	                           jne 0x400252e	      9365	normal.c	FUNCTION_133	IF_1
0x400250d	    0x488b05000000	            mov rax, qword [0x04002514] 	      9366	normal.c	FUNCTION_133	IF_1
0x4002514	    0x488b15000000	            mov rdx, qword [0x0400251b] 	      9366	normal.c	FUNCTION_133	IF_1
0x400251b	          0x488b00	                    mov rax, qword [rax]	      9366	normal.c	FUNCTION_133	IF_1
0x400251e	        0x48394238	            cmp qword [rdx + 0x38], rax 	      9366	normal.c	FUNCTION_133	IF_1
0x4002522	            0x750a	                           jne 0x400252e	      9366	normal.c	FUNCTION_133	IF_1
0x4002524	          0x488b3b	                    mov rdi, qword [rbx]	      9367	normal.c	FUNCTION_133	CALL_1
0x4002527	      0xe80cddffff	                    call sym.clearopbeep	      9367	normal.c	FUNCTION_133	CALL_1
0x400252c	            0xeb21	                           jmp 0x400254f	      9367	normal.c	FUNCTION_133	CALL_1
0x400252e	          0x488b3b	                    mov rdi, qword [rbx]	      9368	normal.c	FUNCTION_133	ELSE_1	IF_2	CALL_2
0x4002531	      0xe84dddffff	                   call sym.checkclearop	      9368	normal.c	FUNCTION_133	ELSE_1	IF_2	CALL_2
0x4002536	            0x85c0	                           test eax, eax	      9368	normal.c	FUNCTION_133	ELSE_1	IF_2	CALL_2
0x4002538	            0x7515	                           jne 0x400254f	      9368	normal.c	FUNCTION_133	ELSE_1	IF_2	CALL_2
0x400253a	        0x488b7328	            mov rsi, qword [rbx + 0x28] 	      9369	normal.c	FUNCTION_133	ELSE_1	IF_2
0x400253e	        0x837b0c04	                cmp dword [rbx + 0xc], 4	      9369	normal.c	FUNCTION_133	ELSE_1	IF_2
0x4002542	        0x400f94c7	                                sete dil	      9369	normal.c	FUNCTION_133	ELSE_1	IF_2
0x4002546	        0x400fb6ff	                          movzx edi, dil	      9369	normal.c	FUNCTION_133	ELSE_1	IF_2
0x400254a	      0xe800000000	                          call 0x400254f	      9369	normal.c	FUNCTION_133	ELSE_1	IF_2
0x400254f	              0x5b	                                 pop rbx	      9370	normal.c	FUNCTION_133
0x4002550	              0xc3	                                     ret	      9370	normal.c	FUNCTION_133
nv_scroll	CALL,13:SWITCH,0:DO,0:FOR,2:functions,0:WHILE,1:ELSE,4:IF,11	182
0x4000d35	            0x4156	                                push r14	      5878	normal.c	FUNCTION_69
0x4000d37	            0x4155	                                push r13	      5878	normal.c	FUNCTION_69
0x4000d39	            0x4154	                                push r12	      5878	normal.c	FUNCTION_69
0x4000d3b	              0x55	                                push rbp	      5878	normal.c	FUNCTION_69
0x4000d3c	              0x53	                                push rbx	      5878	normal.c	FUNCTION_69
0x4000d3d	        0x4883ec10	                           sub rsp, 0x10	      5878	normal.c	FUNCTION_69
0x4000d41	          0x4989fd	                            mov r13, rdi	      5878	normal.c	FUNCTION_69
0x4000d44	    0x64488b042528	                mov rax, qword fs:[0x28]	      5878	normal.c	FUNCTION_69
0x4000d4d	      0x4889442408	                mov qword [rsp + 8], rax	      5878	normal.c	FUNCTION_69
0x4000d52	            0x31c0	                            xor eax, eax	      5878	normal.c	FUNCTION_69
0x4000d54	          0x488b07	                    mov rax, qword [rdi]	      5886	normal.c	FUNCTION_69
0x4000d57	    0xc74008010000	                  mov dword [rax + 8], 1	      5886	normal.c	FUNCTION_69
0x4000d5e	      0xe800000000	                          call 0x4000d63	      5887	normal.c	FUNCTION_69	CALL_1
0x4000d63	        0x418b450c	              mov eax, dword [r13 + 0xc]	      5889	normal.c	FUNCTION_69	IF_1
0x4000d67	          0x83f84c	                           cmp eax, 0x4c	      5889	normal.c	FUNCTION_69	IF_1
0x4000d6a	     0xf85b2000000	                           jne 0x4000e22	      5889	normal.c	FUNCTION_69	IF_1
0x4000d70	      0xe800000000	                          call 0x4000d75	      5891	normal.c	FUNCTION_69	IF_1	CALL_2
0x4000d75	    0x488b3d000000	            mov rdi, qword [0x04000d7c] 	      5892	normal.c	FUNCTION_69	IF_1
0x4000d7c	    0x488b87e80000	            mov rax, qword [rdi + 0xe8] 	      5892	normal.c	FUNCTION_69	IF_1
0x4000d83	        0x4883e801	                              sub rax, 1	      5892	normal.c	FUNCTION_69	IF_1
0x4000d87	        0x48894738	             mov qword [rdi + 0x38], rax	      5892	normal.c	FUNCTION_69	IF_1
0x4000d8b	        0x498b4d30	            mov rcx, qword [r13 + 0x30] 	      5893	normal.c	FUNCTION_69	IF_1	IF_2
0x4000d8f	        0x488d51ff	                      lea rdx, [rcx - 1]	      5893	normal.c	FUNCTION_69	IF_1	IF_2
0x4000d93	          0x4839d0	                            cmp rax, rdx	      5893	normal.c	FUNCTION_69	IF_1	IF_2
0x4000d96	            0x7f0d	                            jg 0x4000da5	      5893	normal.c	FUNCTION_69	IF_1	IF_2
0x4000d98	    0x48c747380100	               mov qword [rdi + 0x38], 1	      5894	normal.c	FUNCTION_69	IF_1	IF_2
0x4000da0	      0xe942020000	                           jmp 0x4000fe7	      5894	normal.c	FUNCTION_69	IF_1	IF_2
0x4000da5	      0xe800000000	                          call 0x4000daa	      5898	normal.c	FUNCTION_69	IF_1	ELSE_1	IF_3	CALL_3
0x4000daa	            0x85c0	                           test eax, eax	      5898	normal.c	FUNCTION_69	IF_1	ELSE_1	IF_3	CALL_3
0x4000dac	            0x745c	                            je 0x4000e0a	      5898	normal.c	FUNCTION_69	IF_1	ELSE_1	IF_3	CALL_3
0x4000dae	        0x498b4530	            mov rax, qword [r13 + 0x30] 	      5901	normal.c	FUNCTION_69	IF_1	ELSE_1	IF_3	FOR_1
0x4000db2	        0x488d58ff	                      lea rbx, [rax - 1]	      5901	normal.c	FUNCTION_69	IF_1	ELSE_1	IF_3	FOR_1
0x4000db6	          0x4885db	                           test rbx, rbx	      5901	normal.c	FUNCTION_69	IF_1	ELSE_1	IF_3	FOR_1
0x4000db9	     0xf8e28020000	                           jle 0x4000fe7	      5901	normal.c	FUNCTION_69	IF_1	ELSE_1	IF_3	FOR_1
0x4000dbf	    0x488b35000000	            mov rsi, qword [0x04000dc6] 	      5902	normal.c	FUNCTION_69	IF_1	ELSE_1	IF_3	FOR_1
0x4000dc6	        0x488b7e38	            mov rdi, qword [rsi + 0x38] 	      5902	normal.c	FUNCTION_69	IF_1	ELSE_1	IF_3	FOR_1
0x4000dca	        0x483b7e78	            cmp rdi, qword [rsi + 0x78] 	      5902	normal.c	FUNCTION_69	IF_1	ELSE_1	IF_3	FOR_1
0x4000dce	     0xf8e13020000	                           jle 0x4000fe7	      5902	normal.c	FUNCTION_69	IF_1	ELSE_1	IF_3	FOR_1
0x4000dd4	        0x4883c638	                           add rsi, 0x38	      5904	normal.c	FUNCTION_69	IF_1	ELSE_1	IF_3	FOR_1	CALL_4
0x4000dd8	      0xba00000000	                              mov edx, 0	      5904	normal.c	FUNCTION_69	IF_1	ELSE_1	IF_3	FOR_1	CALL_4
0x4000ddd	      0xe800000000	                          call 0x4000de2	      5904	normal.c	FUNCTION_69	IF_1	ELSE_1	IF_3	FOR_1	CALL_4
0x4000de2	    0x488b35000000	            mov rsi, qword [0x04000de9] 	      5906	normal.c	FUNCTION_69	IF_1	ELSE_1	IF_3	FOR_1
0x4000de9	        0x488b4638	            mov rax, qword [rsi + 0x38] 	      5906	normal.c	FUNCTION_69	IF_1	ELSE_1	IF_3	FOR_1
0x4000ded	        0x488d78ff	                      lea rdi, [rax - 1]	      5906	normal.c	FUNCTION_69	IF_1	ELSE_1	IF_3	FOR_1
0x4000df1	        0x48897e38	             mov qword [rsi + 0x38], rdi	      5906	normal.c	FUNCTION_69	IF_1	ELSE_1	IF_3	FOR_1
0x4000df5	        0x4883eb01	                              sub rbx, 1	      5901	normal.c	FUNCTION_69	IF_1	ELSE_1	IF_3	FOR_1
0x4000df9	     0xf84e8010000	                            je 0x4000fe7	      5901	normal.c	FUNCTION_69	IF_1	ELSE_1	IF_3	FOR_1
0x4000dff	        0x48397e78	            cmp qword [rsi + 0x78], rdi 	      5902	normal.c	FUNCTION_69	IF_1	ELSE_1	IF_3	FOR_1
0x4000e03	            0x7ccf	                            jl 0x4000dd4	      5902	normal.c	FUNCTION_69	IF_1	ELSE_1	IF_3	FOR_1
0x4000e05	      0xe9dd010000	                           jmp 0x4000fe7	      5902	normal.c	FUNCTION_69	IF_1	ELSE_1	IF_3	FOR_1
0x4000e0a	    0x488b15000000	            mov rdx, qword [0x04000e11] 	      5911	normal.c	FUNCTION_69	IF_1	ELSE_1	ELSE_2
0x4000e11	        0x498b4530	            mov rax, qword [r13 + 0x30] 	      5911	normal.c	FUNCTION_69	IF_1	ELSE_1	ELSE_2
0x4000e15	        0x4883e801	                              sub rax, 1	      5911	normal.c	FUNCTION_69	IF_1	ELSE_1	ELSE_2
0x4000e19	        0x48294238	             sub qword [rdx + 0x38], rax	      5911	normal.c	FUNCTION_69	IF_1	ELSE_1	ELSE_2
0x4000e1d	      0xe9c5010000	                           jmp 0x4000fe7	      5911	normal.c	FUNCTION_69	IF_1	ELSE_1	ELSE_2
0x4000e22	          0x83f84d	                           cmp eax, 0x4d	      5916	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4
0x4000e25	     0xf8511010000	                           jne 0x4000f3c	      5916	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4
0x4000e2b	    0x488b3d000000	            mov rdi, qword [0x04000e32] 	      5920	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	CALL_5
0x4000e32	        0x488b7778	            mov rsi, qword [rdi + 0x78] 	      5920	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	CALL_5
0x4000e36	      0xe800000000	                          call 0x4000e3b	      5920	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	CALL_5
0x4000e3b	    0x488b15000000	            mov rdx, qword [0x04000e42] 	      5921	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4
0x4000e42	    0x2b8284000000	             sub eax, dword [rdx + 0x84]	      5920	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	CALL_5
0x4000e48	            0x89c5	                            mov ebp, eax	      5920	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	CALL_5
0x4000e4a	            0xf7dd	                                 neg ebp	      5920	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	CALL_5
0x4000e4c	      0xe800000000	                          call 0x4000e51	      5923	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	CALL_6
0x4000e51	    0x488b15000000	            mov rdx, qword [0x04000e58] 	      5924	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4
0x4000e58	    0x8b82a0000000	            mov eax, dword [rdx + 0xa0] 	      5924	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4
0x4000e5e	    0x2b82f0000000	             sub eax, dword [rdx + 0xf0]	      5924	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4
0x4000e64	          0x83c001	                              add eax, 1	      5924	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4
0x4000e67	          0x4189c6	                           mov r14d, eax	      5924	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4
0x4000e6a	        0x41c1ee1f	                          shr r14d, 0x1f	      5924	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4
0x4000e6e	          0x4101c6	                           add r14d, eax	      5924	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4
0x4000e71	          0x41d1fe	                             sar r14d, 1	      5924	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4
0x4000e74	      0xbb00000000	                              mov ebx, 0	      5925	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2
0x4000e79	    0x488b05000000	            mov rax, qword [0x04000e80] 	      5925	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2
0x4000e80	          0x488b00	                    mov rax, qword [rax]	      5925	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2
0x4000e83	        0x48394278	            cmp qword [rdx + 0x78], rax 	      5925	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2
0x4000e87	            0x7c22	                            jl 0x4000eab	      5925	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2
0x4000e89	      0xe937010000	                           jmp 0x4000fc5	      5925	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2
0x4000e8e	          0x4d85e4	                           test r12, r12	      5930	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_5	CALL_7
0x4000e91	            0x7e15	                           jle 0x4000ea8	      5930	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_5	CALL_7
0x4000e93	      0xe800000000	                          call 0x4000e98	      5930	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_5	CALL_7
0x4000e98	            0x89c2	                            mov edx, eax	      5930	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_5	CALL_7
0x4000e9a	          0xc1ea1f	                           shr edx, 0x1f	      5930	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_5	CALL_7
0x4000e9d	             0x1d0	                            add eax, edx	      5930	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_5	CALL_7
0x4000e9f	            0xd1f8	                              sar eax, 1	      5930	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_5	CALL_7
0x4000ea1	             0x1e8	                            add eax, ebp	      5930	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_5	CALL_7
0x4000ea3	          0x4139c6	                           cmp r14d, eax	      5930	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_5	CALL_7
0x4000ea6	            0x7e70	                           jle 0x4000f18	      5930	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_5	CALL_7
0x4000ea8	          0x4c89e3	                            mov rbx, r12	      5925	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2
0x4000eab	    0x488b05000000	            mov rax, qword [0x04000eb2] 	      5937	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	CALL_8
0x4000eb2	          0x4889df	                            mov rdi, rbx	      5937	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	CALL_8
0x4000eb5	        0x48037878	             add rdi, qword [rax + 0x78]	      5937	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	CALL_8
0x4000eb9	      0xe800000000	                          call 0x4000ebe	      5937	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	CALL_8
0x4000ebe	             0x1c5	                            add ebp, eax	      5937	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	CALL_8
0x4000ec0	          0x4139ee	                           cmp r14d, ebp	      5938	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_6
0x4000ec3	            0x7e53	                           jle 0x4000f18	      5938	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_6
0x4000ec5	    0x488b05000000	            mov rax, qword [0x04000ecc] 	      5941	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_7	CALL_9
0x4000ecc	          0x4889df	                            mov rdi, rbx	      5941	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_7	CALL_9
0x4000ecf	        0x48037878	             add rdi, qword [rax + 0x78]	      5941	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_7	CALL_9
0x4000ed3	          0x4889e2	                            mov rdx, rsp	      5941	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_7	CALL_9
0x4000ed6	      0xbe00000000	                              mov esi, 0	      5941	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_7	CALL_9
0x4000edb	      0xe800000000	                          call 0x4000ee0	      5941	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_7	CALL_9
0x4000ee0	            0x85c0	                           test eax, eax	      5941	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_7	CALL_9
0x4000ee2	            0x740f	                            je 0x4000ef3	      5941	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_7	CALL_9
0x4000ee4	        0x488b1c24	                    mov rbx, qword [rsp]	      5942	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_7
0x4000ee8	    0x488b05000000	            mov rax, qword [0x04000eef] 	      5942	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_7
0x4000eef	        0x482b5878	             sub rbx, qword [rax + 0x78]	      5942	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_7
0x4000ef3	        0x4c8d6301	                      lea r12, [rbx + 1]	      5925	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2
0x4000ef7	    0x488b3d000000	            mov rdi, qword [0x04000efe] 	      5925	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2
0x4000efe	          0x4c89e6	                            mov rsi, r12	      5925	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2
0x4000f01	        0x48037778	             add rsi, qword [rdi + 0x78]	      5925	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2
0x4000f05	    0x488b05000000	            mov rax, qword [0x04000f0c] 	      5925	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2
0x4000f0c	          0x483b30	                    cmp rsi, qword [rax]	      5925	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2
0x4000f0f	     0xf8c79ffffff	                            jl 0x4000e8e	      5925	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2
0x4000f15	          0x4c89e3	                            mov rbx, r12	      5925	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2
0x4000f18	          0x4885db	                           test rbx, rbx	      5945	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	IF_8
0x4000f1b	     0xf8ea4000000	                           jle 0x4000fc5	      5945	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	IF_8
0x4000f21	    0x488b05000000	            mov rax, qword [0x04000f28] 	      5945	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	IF_8
0x4000f28	    0x3ba8a0000000	            cmp ebp, dword [rax + 0xa0] 	      5946	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	IF_8
0x4000f2e	           0xf9fc0	                                 setg al	      5946	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	IF_8
0x4000f31	           0xfb6c0	                           movzx eax, al	      5946	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	IF_8
0x4000f34	          0x4829c3	                            sub rbx, rax	      5946	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	IF_8
0x4000f37	      0xe989000000	                           jmp 0x4000fc5	      5946	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	IF_8
0x4000f3c	        0x498b6d30	            mov rbp, qword [r13 + 0x30] 	      5950	normal.c	FUNCTION_69	ELSE_3	ELSE_4
0x4000f40	        0x488d5dff	                      lea rbx, [rbp - 1]	      5950	normal.c	FUNCTION_69	ELSE_3	ELSE_4
0x4000f44	    0x488b3d000000	            mov rdi, qword [0x04000f4b] 	      5952	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9	CALL_10
0x4000f4b	      0xe800000000	                          call 0x4000f50	      5952	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9	CALL_10
0x4000f50	            0x85c0	                           test eax, eax	      5952	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9	CALL_10
0x4000f52	            0x7471	                            je 0x4000fc5	      5952	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9	CALL_10
0x4000f54	    0x488b05000000	            mov rax, qword [0x04000f5b] 	      5955	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9
0x4000f5b	        0x488b7878	            mov rdi, qword [rax + 0x78] 	      5955	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9
0x4000f5f	        0x48893c24	                    mov qword [rsp], rdi	      5955	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9
0x4000f63	        0x4883ed02	                              sub rbp, 2	      5956	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9	WHILE_1
0x4000f67	          0x4885db	                           test rbx, rbx	      5956	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9	WHILE_1
0x4000f6a	            0x7e4a	                           jle 0x4000fb6	      5956	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9	WHILE_1
0x4000f6c	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	      5956	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9	WHILE_1
0x4000f73	        0x4883e801	                              sub rax, 1	      5956	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9	WHILE_1
0x4000f77	          0x4839c7	                            cmp rdi, rax	      5956	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9	WHILE_1
0x4000f7a	            0x7d3a	                           jge 0x4000fb6	      5956	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9	WHILE_1
0x4000f7c	          0x4889e2	                            mov rdx, rsp	      5958	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9	WHILE_1	CALL_11
0x4000f7f	      0xbe00000000	                              mov esi, 0	      5958	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9	WHILE_1	CALL_11
0x4000f84	      0xe800000000	                          call 0x4000f89	      5958	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9	WHILE_1	CALL_11
0x4000f89	        0x488b0424	                    mov rax, qword [rsp]	      5959	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9	WHILE_1
0x4000f8d	        0x488d7801	                      lea rdi, [rax + 1]	      5959	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9	WHILE_1
0x4000f91	        0x48893c24	                    mov qword [rsp], rdi	      5959	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9	WHILE_1
0x4000f95	        0x4883ed01	                              sub rbp, 1	      5956	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9	WHILE_1
0x4000f99	        0x4883fdff	             cmp rbp, 0xffffffffffffffff	      5956	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9	WHILE_1
0x4000f9d	            0x7417	                            je 0x4000fb6	      5956	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9	WHILE_1
0x4000f9f	    0x488b05000000	            mov rax, qword [0x04000fa6] 	      5956	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9	WHILE_1
0x4000fa6	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	      5956	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9	WHILE_1
0x4000fad	        0x4883e801	                              sub rax, 1	      5956	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9	WHILE_1
0x4000fb1	          0x4839f8	                            cmp rax, rdi	      5956	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9	WHILE_1
0x4000fb4	            0x7fc6	                            jg 0x4000f7c	      5956	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9	WHILE_1
0x4000fb6	        0x488b1c24	                    mov rbx, qword [rsp]	      5961	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9
0x4000fba	    0x488b05000000	            mov rax, qword [0x04000fc1] 	      5961	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9
0x4000fc1	        0x482b5878	             sub rbx, qword [rax + 0x78]	      5961	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9
0x4000fc5	    0x488b05000000	            mov rax, qword [0x04000fcc] 	      5965	normal.c	FUNCTION_69	ELSE_3
0x4000fcc	        0x48035878	             add rbx, qword [rax + 0x78]	      5965	normal.c	FUNCTION_69	ELSE_3
0x4000fd0	        0x48895838	             mov qword [rax + 0x38], rbx	      5965	normal.c	FUNCTION_69	ELSE_3
0x4000fd4	    0x488b15000000	            mov rdx, qword [0x04000fdb] 	      5966	normal.c	FUNCTION_69	ELSE_3	IF_10
0x4000fdb	          0x488b12	                    mov rdx, qword [rdx]	      5966	normal.c	FUNCTION_69	ELSE_3	IF_10
0x4000fde	          0x4839d3	                            cmp rbx, rdx	      5966	normal.c	FUNCTION_69	ELSE_3	IF_10
0x4000fe1	            0x7e04	                           jle 0x4000fe7	      5966	normal.c	FUNCTION_69	ELSE_3	IF_10
0x4000fe3	        0x48895038	             mov qword [rax + 0x38], rdx	      5967	normal.c	FUNCTION_69	ELSE_3	IF_10
0x4000fe7	        0x498b4500	                    mov rax, qword [r13]	      5971	normal.c	FUNCTION_69	IF_11
0x4000feb	          0x833800	                      cmp dword [rax], 0	      5971	normal.c	FUNCTION_69	IF_11
0x4000fee	            0x7505	                           jne 0x4000ff5	      5971	normal.c	FUNCTION_69	IF_11
0x4000ff0	      0xe800000000	                          call 0x4000ff5	      5972	normal.c	FUNCTION_69	CALL_12
0x4000ff5	      0xbf06000000	                              mov edi, 6	      5973	normal.c	FUNCTION_69	CALL_13
0x4000ffa	      0xe800000000	                          call 0x4000fff	      5973	normal.c	FUNCTION_69	CALL_13
0x4000fff	      0x488b442408	                mov rax, qword [rsp + 8]	      5974	normal.c	FUNCTION_69
0x4001004	    0x644833042528	                xor rax, qword fs:[0x28]	      5974	normal.c	FUNCTION_69
0x400100d	            0x7405	                            je 0x4001014	      5974	normal.c	FUNCTION_69
0x400100f	      0xe800000000	                          call 0x4001014	      5974	normal.c	FUNCTION_69
0x4001014	        0x4883c410	                           add rsp, 0x10	      5974	normal.c	FUNCTION_69
0x4001018	              0x5b	                                 pop rbx	      5974	normal.c	FUNCTION_69
0x4001019	              0x5d	                                 pop rbp	      5974	normal.c	FUNCTION_69
0x400101a	            0x415c	                                 pop r12	      5974	normal.c	FUNCTION_69
0x400101c	            0x415d	                                 pop r13	      5974	normal.c	FUNCTION_69
0x400101e	            0x415e	                                 pop r14	      5974	normal.c	FUNCTION_69
0x4001020	              0xc3	                                     ret	      5974	normal.c	FUNCTION_69
nv_subst	CALL,3:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,1:IF,3	20
0x4001fac	              0x53	                                push rbx	      7462	normal.c	FUNCTION_95
0x4001fad	          0x4889fb	                            mov rbx, rdi	      7462	normal.c	FUNCTION_95
0x4001fb0	      0xe800000000	                          call 0x4001fb5	      7465	normal.c	FUNCTION_95	IF_1	CALL_1
0x4001fb5	          0x83f801	                              cmp eax, 1	      7465	normal.c	FUNCTION_95	IF_1	CALL_1
0x4001fb8	            0x743e	                            je 0x4001ff8	      7465	normal.c	FUNCTION_95	IF_1	CALL_1
0x4001fba	    0x833d00000000	               cmp dword [0x04001fc1], 0	      7468	normal.c	FUNCTION_95	IF_2
0x4001fc1	            0x742d	                            je 0x4001ff0	      7468	normal.c	FUNCTION_95	IF_2
0x4001fc3	        0x837b0c53	            cmp dword [rbx + 0xc], 0x53 	      7470	normal.c	FUNCTION_95	IF_2	IF_3
0x4001fc7	            0x7516	                           jne 0x4001fdf	      7470	normal.c	FUNCTION_95	IF_2	IF_3
0x4001fc9	    0x8b0500000000	            mov eax, dword [0x04001fcf] 	      7472	normal.c	FUNCTION_95	IF_2	IF_3
0x4001fcf	    0x890500000000	            mov dword [0x04001fd5], eax 	      7472	normal.c	FUNCTION_95	IF_2	IF_3
0x4001fd5	    0xc70500000000	           mov dword [0x04001fdf], 0x56 	      7473	normal.c	FUNCTION_95	IF_2	IF_3
0x4001fdf	    0xc7430c630000	            mov dword [rbx + 0xc], 0x63 	      7475	normal.c	FUNCTION_95	IF_2
0x4001fe6	          0x4889df	                            mov rdi, rbx	      7476	normal.c	FUNCTION_95	IF_2	CALL_2
0x4001fe9	      0xe870fbffff	                    call sym.nv_operator	      7476	normal.c	FUNCTION_95	IF_2	CALL_2
0x4001fee	            0xeb08	                           jmp 0x4001ff8	      7476	normal.c	FUNCTION_95	IF_2	CALL_2
0x4001ff0	          0x4889df	                            mov rdi, rbx	      7479	normal.c	FUNCTION_95	CALL_3
0x4001ff3	      0xe8ccf8ffff	                     call sym.nv_optrans	      7479	normal.c	FUNCTION_95	CALL_3
0x4001ff8	              0x5b	                                 pop rbx	      7480	normal.c	FUNCTION_95
0x4001ff9	              0xc3	                                     ret	      7480	normal.c	FUNCTION_95
nv_home	CALL,2:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,1:IF,1	10
0x40006e1	        0x4883ec08	                              sub rsp, 8	      8652	normal.c	FUNCTION_116
0x40006e5	    0xf60500000000	               test byte [0x040006ec], 4	      8654	normal.c	FUNCTION_116	IF_1
0x40006ec	            0x7407	                            je 0x40006f5	      8654	normal.c	FUNCTION_116	IF_1
0x40006ee	      0xe843ffffff	                        call sym.nv_goto	      8655	normal.c	FUNCTION_116	CALL_1
0x40006f3	            0xeb0d	                           jmp 0x4000702	      8655	normal.c	FUNCTION_116	CALL_1
0x40006f5	    0x48c747280100	               mov qword [rdi + 0x28], 1	      8658	normal.c	FUNCTION_116	ELSE_1
0x40006fd	      0xe8fafdffff	                        call sym.nv_pipe	      8659	normal.c	FUNCTION_116	ELSE_1	CALL_2
0x4000702	    0xc70500000000	               mov dword [0x0400070c], 0	      8661	normal.c	FUNCTION_116
0x400070c	        0x4883c408	                              add rsp, 8	      8663	normal.c	FUNCTION_116
0x4000710	              0xc3	                                     ret	      8663	normal.c	FUNCTION_116
nv_page	CALL,4:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,2:IF,3	22
0x4000359	              0x53	                                push rbx	      4201	normal.c	FUNCTION_42
0x400035a	          0x4889fb	                            mov rbx, rdi	      4201	normal.c	FUNCTION_42
0x400035d	          0x488b3f	                    mov rdi, qword [rdi]	      4202	normal.c	FUNCTION_42	IF_1	CALL_1
0x4000360	      0xe81effffff	                   call sym.checkclearop	      4202	normal.c	FUNCTION_42	IF_1	CALL_1
0x4000365	            0x85c0	                           test eax, eax	      4202	normal.c	FUNCTION_42	IF_1	CALL_1
0x4000367	            0x7533	                           jne 0x400039c	      4202	normal.c	FUNCTION_42	IF_1	CALL_1
0x4000369	    0xf60500000000	               test byte [0x04000370], 4	      4204	normal.c	FUNCTION_42	IF_1	IF_2
0x4000370	            0x741e	                            je 0x4000390	      4204	normal.c	FUNCTION_42	IF_1	IF_2
0x4000372	        0x837b38ff	cmp dword [rbx + 0x38], 0xffffffffffffffff	      4207	normal.c	FUNCTION_42	IF_1	IF_2	IF_3
0x4000376	            0x750d	                           jne 0x4000385	      4207	normal.c	FUNCTION_42	IF_1	IF_2	IF_3
0x4000378	        0x488b7b30	            mov rdi, qword [rbx + 0x30] 	      4208	normal.c	FUNCTION_42	IF_1	IF_2	CALL_2
0x400037c	            0xf7df	                                 neg edi	      4208	normal.c	FUNCTION_42	IF_1	IF_2	CALL_2
0x400037e	      0xe800000000	                          call 0x4000383	      4208	normal.c	FUNCTION_42	IF_1	IF_2	CALL_2
0x4000383	            0xeb17	                           jmp 0x400039c	      4208	normal.c	FUNCTION_42	IF_1	IF_2	CALL_2
0x4000385	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	      4210	normal.c	FUNCTION_42	IF_1	IF_2	CALL_3
0x4000389	      0xe800000000	                          call 0x400038e	      4210	normal.c	FUNCTION_42	IF_1	IF_2	CALL_3
0x400038e	            0xeb0c	                           jmp 0x400039c	      4210	normal.c	FUNCTION_42	IF_1	IF_2	CALL_3
0x4000390	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	      4213	normal.c	FUNCTION_42	IF_1	CALL_4
0x4000394	          0x8b7b38	            mov edi, dword [rbx + 0x38] 	      4213	normal.c	FUNCTION_42	IF_1	CALL_4
0x4000397	      0xe800000000	                          call 0x400039c	      4213	normal.c	FUNCTION_42	IF_1	CALL_4
0x400039c	              0x5b	                                 pop rbx	      4215	normal.c	FUNCTION_42
0x400039d	              0xc3	                                     ret	      4215	normal.c	FUNCTION_42
check_scrollbind	CALL,2:SWITCH,0:DO,0:FOR,0:functions,1:WHILE,0:ELSE,0:IF,0	107
0x40066d4	            0x4157	                                push r15	      4056	normal.c	FUNCTION_36
0x40066d6	            0x4156	                                push r14	      4056	normal.c	FUNCTION_36
0x40066d8	            0x4155	                                push r13	      4056	normal.c	FUNCTION_36
0x40066da	            0x4154	                                push r12	      4056	normal.c	FUNCTION_36
0x40066dc	              0x55	                                push rbp	      4056	normal.c	FUNCTION_36
0x40066dd	              0x53	                                push rbx	      4056	normal.c	FUNCTION_36
0x40066de	        0x4883ec28	                           sub rsp, 0x28	      4056	normal.c	FUNCTION_36
0x40066e2	          0x4989fe	                            mov r14, rdi	      4056	normal.c	FUNCTION_36
0x40066e5	      0x4889742418	             mov qword [rsp + 0x18], rsi	      4056	normal.c	FUNCTION_36
0x40066ea	    0x488b1d000000	            mov rbx, qword [0x040066f1] 	      4059	normal.c	FUNCTION_36
0x40066f1	    0x488b05000000	            mov rax, qword [0x040066f8] 	      4060	normal.c	FUNCTION_36
0x40066f8	      0x4889442408	                mov qword [rsp + 8], rax	      4060	normal.c	FUNCTION_36
0x40066fd	    0x448b3d000000	           mov r15d, dword [0x04006704] 	      4061	normal.c	FUNCTION_36
0x4006704	    0x8b0500000000	            mov eax, dword [0x0400670a] 	      4062	normal.c	FUNCTION_36
0x400670a	        0x89442414	             mov dword [rsp + 0x14], eax	      4062	normal.c	FUNCTION_36
0x400670e	    0x448bab940000	           mov r13d, dword [rbx + 0x94] 	      4063	normal.c	FUNCTION_36
0x4006715	      0xbe76000000	                           mov esi, 0x76	      4070	normal.c	FUNCTION_36	CALL_1
0x400671a	    0x488b3d000000	            mov rdi, qword [0x04006721] 	      4070	normal.c	FUNCTION_36	CALL_1
0x4006721	      0xe800000000	                          call 0x4006726	      4070	normal.c	FUNCTION_36	CALL_1
0x4006726	          0x4d85f6	                           test r14, r14	      4070	normal.c	FUNCTION_36	CALL_1
0x4006729	        0x400f95c5	                               setne bpl	      4070	normal.c	FUNCTION_36	CALL_1
0x400672d	          0x4885c0	                           test rax, rax	      4072	normal.c	FUNCTION_36
0x4006730	        0x410f95c4	                              setne r12b	      4072	normal.c	FUNCTION_36
0x4006734	        0x450fb6e4	                        movzx r12d, r12b	      4072	normal.c	FUNCTION_36
0x4006738	          0x4121ec	                           and r12d, ebp	      4072	normal.c	FUNCTION_36
0x400673b	    0x440ba3c00100	            or r12d, dword [rbx + 0x1c0]	      4072	normal.c	FUNCTION_36
0x4006742	      0xbe68000000	                           mov esi, 0x68	      4074	normal.c	FUNCTION_36	CALL_2
0x4006747	    0x488b3d000000	            mov rdi, qword [0x0400674e] 	      4074	normal.c	FUNCTION_36	CALL_2
0x400674e	      0xe800000000	                          call 0x4006753	      4074	normal.c	FUNCTION_36	CALL_2
0x4006753	          0x4885c0	                           test rax, rax	      4074	normal.c	FUNCTION_36	CALL_2
0x4006756	            0x7411	                            je 0x4006769	      4074	normal.c	FUNCTION_36	CALL_2
0x4006758	    0x48837c241800	               cmp qword [rsp + 0x18], 0	      4074	normal.c	FUNCTION_36	CALL_2
0x400675e	           0xf95c0	                                setne al	      4074	normal.c	FUNCTION_36	CALL_2
0x4006761	             0x9c5	                             or ebp, eax	      4074	normal.c	FUNCTION_36	CALL_2
0x4006763	        0x400fb6ed	                          movzx ebp, bpl	      4074	normal.c	FUNCTION_36	CALL_2
0x4006767	            0xeb05	                           jmp 0x400676e	      4074	normal.c	FUNCTION_36	CALL_2
0x4006769	      0xbd00000000	                              mov ebp, 0	      4074	normal.c	FUNCTION_36	CALL_2
0x400676e	    0xc70500000000	               mov dword [0x04006778], 0	      4079	normal.c	FUNCTION_36
0x4006778	    0xc70500000000	               mov dword [0x04006782], 0	      4079	normal.c	FUNCTION_36
0x4006782	    0x488b35000000	            mov rsi, qword [0x04006789] 	      4080	normal.c	FUNCTION_36
0x4006789	    0x488935000000	            mov qword [0x04006790], rsi 	      4080	normal.c	FUNCTION_36
0x4006790	          0x4885f6	                           test rsi, rsi	      4080	normal.c	FUNCTION_36
0x4006793	     0xf84ea000000	                            je 0x4006883	      4080	normal.c	FUNCTION_36
0x4006799	        0x488b5608	                mov rdx, qword [rsi + 8]	      4082	normal.c	FUNCTION_36	FUNCTION_1
0x400679d	    0x488915000000	            mov qword [0x040067a4], rdx 	      4082	normal.c	FUNCTION_36	FUNCTION_1
0x40067a4	          0x4839f3	                            cmp rbx, rsi	      4084	normal.c	FUNCTION_36	FUNCTION_1	IF_1
0x40067a7	     0xf84bb000000	                            je 0x4006868	      4084	normal.c	FUNCTION_36	FUNCTION_1	IF_1
0x40067ad	    0x83be88020000	              cmp dword [rsi + 0x288], 0	      4084	normal.c	FUNCTION_36	FUNCTION_1	IF_1
0x40067b4	     0xf84ae000000	                            je 0x4006868	      4084	normal.c	FUNCTION_36	FUNCTION_1	IF_1
0x40067ba	          0x4585e4	                         test r12d, r12d	      4089	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2
0x40067bd	     0xf8485000000	                            je 0x4006848	      4089	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2
0x40067c3	    0x83bbc0010000	              cmp dword [rbx + 0x1c0], 0	      4092	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	IF_3
0x40067ca	            0x7413	                            je 0x40067df	      4092	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	IF_3
0x40067cc	    0x83bec0010000	              cmp dword [rsi + 0x1c0], 0	      4092	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	IF_3
0x40067d3	            0x740a	                            je 0x40067df	      4092	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	IF_3
0x40067d5	          0x4889df	                            mov rdi, rbx	      4094	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	IF_3	CALL_1
0x40067d8	      0xe800000000	                          call 0x40067dd	      4094	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	IF_3	CALL_1
0x40067dd	            0xeb49	                           jmp 0x4006828	      4094	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	IF_3	CALL_1
0x40067df	          0x4c89f0	                            mov rax, r14	      4099	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	ELSE_1
0x40067e2	    0x480386500500	            add rax, qword [rsi + 0x550]	      4099	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	ELSE_1
0x40067e9	    0x488986500500	            mov qword [rsi + 0x550], rax	      4099	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	ELSE_1
0x40067f0	          0x488b3a	                    mov rdi, qword [rdx]	      4101	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	ELSE_1	IF_4
0x40067f3	          0x4839f8	                            cmp rax, rdi	      4101	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	ELSE_1	IF_4
0x40067f6	        0x480f4ef8	                         cmovle rdi, rax	      4101	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	ELSE_1	IF_4
0x40067fa	          0x4885ff	                           test rdi, rdi	      4104	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	ELSE_1	IF_5
0x40067fd	      0xb801000000	                              mov eax, 1	      4104	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	ELSE_1	IF_5
0x4006802	        0x480f4ef8	                         cmovle rdi, rax	      4104	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	ELSE_1	IF_5
0x4006806	        0x482b7e78	             sub rdi, qword [rsi + 0x78]	      4106	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	ELSE_1
0x400680a	          0x4885ff	                           test rdi, rdi	      4107	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	ELSE_1	IF_6
0x400680d	            0x7e0c	                           jle 0x400681b	      4107	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	ELSE_1	IF_6
0x400680f	      0xbe00000000	                              mov esi, 0	      4108	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	ELSE_1	CALL_2
0x4006814	      0xe800000000	                          call 0x4006819	      4108	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	ELSE_1	CALL_2
0x4006819	            0xeb0d	                           jmp 0x4006828	      4108	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	ELSE_1	CALL_2
0x400681b	          0x48f7df	                                 neg rdi	      4110	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	ELSE_1	CALL_3
0x400681e	      0xbe00000000	                              mov esi, 0	      4110	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	ELSE_1	CALL_3
0x4006823	      0xe800000000	                          call 0x4006828	      4110	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	ELSE_1	CALL_3
0x4006828	      0xbf0a000000	                            mov edi, 0xa	      4113	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	CALL_4
0x400682d	      0xe800000000	                          call 0x4006832	      4113	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	CALL_4
0x4006832	      0xe800000000	                          call 0x4006837	      4114	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	CALL_5
0x4006837	    0x488b05000000	            mov rax, qword [0x0400683e] 	      4115	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2
0x400683e	    0xc78040010000	              mov dword [rax + 0x140], 1	      4115	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2
0x4006848	            0x85ed	                           test ebp, ebp	      4121	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_7
0x400684a	            0x741c	                            je 0x4006868	      4121	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_7
0x400684c	    0x488b05000000	            mov rax, qword [0x04006853] 	      4121	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_7
0x4006853	    0x443ba8940000	           cmp r13d, dword [rax + 0x94] 	      4121	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_7
0x400685a	            0x740c	                            je 0x4006868	      4121	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_7
0x400685c	    0x4489a8940000	            mov dword [rax + 0x94], r13d	      4123	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_7
0x4006863	      0xe800000000	                          call 0x4006868	      4124	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_7	CALL_6
0x4006868	    0x488b05000000	            mov rax, qword [0x0400686f] 	      4080	normal.c	FUNCTION_36
0x400686f	        0x488b7020	            mov rsi, qword [rax + 0x20] 	      4080	normal.c	FUNCTION_36
0x4006873	    0x488935000000	            mov qword [0x0400687a], rsi 	      4080	normal.c	FUNCTION_36
0x400687a	          0x4885f6	                           test rsi, rsi	      4080	normal.c	FUNCTION_36
0x400687d	     0xf8516ffffff	                           jne 0x4006799	      4080	normal.c	FUNCTION_36
0x4006883	    0x44893d000000	           mov dword [0x0400688a], r15d 	      4132	normal.c	FUNCTION_36
0x400688a	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      4133	normal.c	FUNCTION_36
0x400688e	    0x890500000000	            mov dword [0x04006894], eax 	      4133	normal.c	FUNCTION_36
0x4006894	    0x48891d000000	            mov qword [0x0400689b], rbx 	      4134	normal.c	FUNCTION_36
0x400689b	      0x488b442408	                mov rax, qword [rsp + 8]	      4135	normal.c	FUNCTION_36
0x40068a0	    0x488905000000	            mov qword [0x040068a7], rax 	      4135	normal.c	FUNCTION_36
0x40068a7	        0x4883c428	                           add rsp, 0x28	      4136	normal.c	FUNCTION_36
0x40068ab	              0x5b	                                 pop rbx	      4136	normal.c	FUNCTION_36
0x40068ac	              0x5d	                                 pop rbp	      4136	normal.c	FUNCTION_36
0x40068ad	            0x415c	                                 pop r12	      4136	normal.c	FUNCTION_36
0x40068af	            0x415d	                                 pop r13	      4136	normal.c	FUNCTION_36
0x40068b1	            0x415e	                                 pop r14	      4136	normal.c	FUNCTION_36
0x40068b3	            0x415f	                                 pop r15	      4136	normal.c	FUNCTION_36
0x40068b5	              0xc3	                                     ret	      4136	normal.c	FUNCTION_36
unadjust_for_sel	CALL,5:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,3:IF,5	66
0x4002810	      0xb800000000	                              mov eax, 0	      8894	normal.c	FUNCTION_123	ELSE_1
0x4002815	    0x488b15000000	            mov rdx, qword [0x0400281c] 	      8869	normal.c	ELSE_1	FUNCTION_123	IF_1	CALL_1
0x400281c	          0x803a65	                    cmp byte [rdx], 0x65	      8869	normal.c	ELSE_1	FUNCTION_123	IF_1	CALL_1
0x400281f	     0xf85d9000000	                           jne 0x40028fe	      8869	normal.c	ELSE_1	FUNCTION_123	IF_1	CALL_1
0x4002825	              0x53	                                push rbx	      8866	normal.c	ELSE_1	FUNCTION_123
0x4002826	    0x488b15000000	            mov rdx, qword [0x0400282d] 	      8869	normal.c	ELSE_1	FUNCTION_123	IF_1	CALL_1
0x400282d	    0x488b1d000000	            mov rbx, qword [0x04002834] 	      8869	normal.c	ELSE_1	FUNCTION_123	IF_1	CALL_1
0x4002834	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      8869	normal.c	ELSE_1	FUNCTION_123	IF_1	CALL_1
0x4002838	          0x4839c2	                            cmp rdx, rax	      8871	normal.c	ELSE_1	FUNCTION_123	IF_1	IF_2	CALL_2
0x400283b	           0xf9cc1	                                 setl cl	      8871	normal.c	ELSE_1	FUNCTION_123	IF_1	IF_2	CALL_2
0x400283e	          0x4839c2	                            cmp rdx, rax	      8869	normal.c	ELSE_1	FUNCTION_123	IF_1	CALL_1
0x4002841	            0x7537	                           jne 0x400287a	      8869	normal.c	ELSE_1	FUNCTION_123	IF_1	CALL_1
0x4002843	        0x488b4340	            mov rax, qword [rbx + 0x40] 	      8869	normal.c	ELSE_1	FUNCTION_123	IF_1	CALL_1
0x4002847	    0x483905000000	            cmp qword [0x0400284e], rax 	      8869	normal.c	ELSE_1	FUNCTION_123	IF_1	CALL_1
0x400284e	            0x750a	                           jne 0x400285a	      8869	normal.c	ELSE_1	FUNCTION_123	IF_1	CALL_1
0x4002850	      0xb800000000	                              mov eax, 0	      8894	normal.c	FUNCTION_123	ELSE_1
0x4002855	      0xe9a3000000	                           jmp 0x40028fd	      8894	normal.c	FUNCTION_123	ELSE_1
0x400285a	    0x8b1500000000	            mov edx, dword [0x04002860] 	      8871	normal.c	ELSE_1	FUNCTION_123	IF_1	IF_2	CALL_2
0x4002860	          0x8b4340	            mov eax, dword [rbx + 0x40] 	      8871	normal.c	ELSE_1	FUNCTION_123	IF_1	IF_2	CALL_2
0x4002863	            0x39c2	                            cmp edx, eax	      8871	normal.c	ELSE_1	FUNCTION_123	IF_1	IF_2	CALL_2
0x4002865	            0x7407	                            je 0x400286e	      8871	normal.c	ELSE_1	FUNCTION_123	IF_1	IF_2	CALL_2
0x4002867	            0x39c2	                            cmp edx, eax	      8871	normal.c	ELSE_1	FUNCTION_123	IF_1	IF_2	CALL_2
0x4002869	           0xf9cc1	                                 setl cl	      8871	normal.c	ELSE_1	FUNCTION_123	IF_1	IF_2	CALL_2
0x400286c	            0xeb0c	                           jmp 0x400287a	      8871	normal.c	ELSE_1	FUNCTION_123	IF_1	IF_2	CALL_2
0x400286e	          0x8b4344	            mov eax, dword [rbx + 0x44] 	      8871	normal.c	ELSE_1	FUNCTION_123	IF_1	IF_2	CALL_2
0x4002871	    0x390500000000	            cmp dword [0x04002877], eax 	      8871	normal.c	ELSE_1	FUNCTION_123	IF_1	IF_2	CALL_2
0x4002877	           0xf9cc1	                                 setl cl	      8871	normal.c	ELSE_1	FUNCTION_123	IF_1	IF_2	CALL_2
0x400287a	        0x4883c338	                           add rbx, 0x38	      8872	normal.c	ELSE_1	FUNCTION_123	IF_1	IF_2
0x400287e	            0x84c9	                             test cl, cl	      8872	normal.c	ELSE_1	FUNCTION_123	IF_1	IF_2
0x4002880	      0xb800000000	                              mov eax, 0	      8872	normal.c	ELSE_1	FUNCTION_123	IF_1	IF_2
0x4002885	        0x480f44d8	                          cmove rbx, rax	      8872	normal.c	ELSE_1	FUNCTION_123	IF_1	IF_2
0x4002889	          0x8b430c	              mov eax, dword [rbx + 0xc]	      8876	normal.c	FUNCTION_123	IF_1	ELSE_1	IF_3
0x400288c	            0x85c0	                           test eax, eax	      8876	normal.c	FUNCTION_123	IF_1	ELSE_1	IF_3
0x400288e	            0x7e0d	                           jle 0x400289d	      8876	normal.c	FUNCTION_123	IF_1	ELSE_1	IF_3
0x4002890	          0x83e801	                              sub eax, 1	      8877	normal.c	FUNCTION_123	IF_1	ELSE_1	IF_3
0x4002893	          0x89430c	              mov dword [rbx + 0xc], eax	      8877	normal.c	FUNCTION_123	IF_1	ELSE_1	IF_3
0x4002896	      0xb800000000	                              mov eax, 0	      8894	normal.c	FUNCTION_123	ELSE_1
0x400289b	            0xeb60	                           jmp 0x40028fd	      8894	normal.c	FUNCTION_123	ELSE_1
0x400289d	          0x8b4308	                mov eax, dword [rbx + 8]	      8880	normal.c	FUNCTION_123	IF_1	ELSE_1	ELSE_2	IF_4
0x40028a0	            0x85c0	                           test eax, eax	      8880	normal.c	FUNCTION_123	IF_1	ELSE_1	ELSE_2	IF_4
0x40028a2	            0x7e1c	                           jle 0x40028c0	      8880	normal.c	FUNCTION_123	IF_1	ELSE_1	ELSE_2	IF_4
0x40028a4	          0x83e801	                              sub eax, 1	      8882	normal.c	FUNCTION_123	IF_1	ELSE_1	ELSE_2	IF_4
0x40028a7	          0x894308	                mov dword [rbx + 8], eax	      8882	normal.c	FUNCTION_123	IF_1	ELSE_1	ELSE_2	IF_4
0x40028aa	          0x4889de	                            mov rsi, rbx	      8884	normal.c	FUNCTION_123	IF_1	ELSE_1	ELSE_2	IF_4	CALL_3
0x40028ad	    0x488b3d000000	            mov rdi, qword [0x040028b4] 	      8884	normal.c	FUNCTION_123	IF_1	ELSE_1	ELSE_2	IF_4	CALL_3
0x40028b4	      0xe800000000	                          call 0x40028b9	      8884	normal.c	FUNCTION_123	IF_1	ELSE_1	ELSE_2	IF_4	CALL_3
0x40028b9	      0xb800000000	                              mov eax, 0	      8894	normal.c	FUNCTION_123	ELSE_1
0x40028be	            0xeb3d	                           jmp 0x40028fd	      8894	normal.c	FUNCTION_123	ELSE_1
0x40028c0	          0x488b3b	                    mov rdi, qword [rbx]	      8887	normal.c	FUNCTION_123	IF_1	ELSE_1	ELSE_3	IF_5
0x40028c3	      0xb800000000	                              mov eax, 0	      8894	normal.c	FUNCTION_123	ELSE_1
0x40028c8	        0x4883ff01	                              cmp rdi, 1	      8887	normal.c	FUNCTION_123	IF_1	ELSE_1	ELSE_3	IF_5
0x40028cc	            0x7e2f	                           jle 0x40028fd	      8887	normal.c	FUNCTION_123	IF_1	ELSE_1	ELSE_3	IF_5
0x40028ce	        0x4883ef01	                              sub rdi, 1	      8889	normal.c	FUNCTION_123	IF_1	ELSE_1	ELSE_3	IF_5
0x40028d2	          0x48893b	                    mov qword [rbx], rdi	      8889	normal.c	FUNCTION_123	IF_1	ELSE_1	ELSE_3	IF_5
0x40028d5	      0xe800000000	                          call 0x40028da	      8890	normal.c	FUNCTION_123	IF_1	ELSE_1	ELSE_3	IF_5	CALL_5
0x40028da	          0x4889c7	                            mov rdi, rax	      8890	normal.c	FUNCTION_123	IF_1	ELSE_1	ELSE_3	IF_5	CALL_5
0x40028dd	      0xb800000000	                              mov eax, 0	      8890	normal.c	FUNCTION_123	IF_1	ELSE_1	ELSE_3	IF_5	CALL_5
0x40028e2	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      8890	normal.c	FUNCTION_123	IF_1	ELSE_1	ELSE_3	IF_5	CALL_5
0x40028e9	            0xf2ae	              repne scasb al, byte [rdi]	      8890	normal.c	FUNCTION_123	IF_1	ELSE_1	ELSE_3	IF_5	CALL_5
0x40028eb	          0x4889c8	                            mov rax, rcx	      8890	normal.c	FUNCTION_123	IF_1	ELSE_1	ELSE_3	IF_5	CALL_5
0x40028ee	          0x48f7d0	                                 not rax	      8890	normal.c	FUNCTION_123	IF_1	ELSE_1	ELSE_3	IF_5	CALL_5
0x40028f1	        0x4883e801	                              sub rax, 1	      8890	normal.c	FUNCTION_123	IF_1	ELSE_1	ELSE_3	IF_5	CALL_5
0x40028f5	          0x894308	                mov dword [rbx + 8], eax	      8890	normal.c	FUNCTION_123	IF_1	ELSE_1	ELSE_3	IF_5	CALL_5
0x40028f8	      0xb801000000	                              mov eax, 1	      8891	normal.c	FUNCTION_123	IF_1	ELSE_1	ELSE_3	IF_5
0x40028fd	              0x5b	                                 pop rbx	      8895	normal.c	FUNCTION_123	ELSE_1
0x40028fe	            0xf3c3	                                     ret	      8895	normal.c	FUNCTION_123	ELSE_1
get_mouse_class	CALL,4:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,0:IF,4	31
0x4002afb	              0x53	                                push rbx	      3250	normal.c	FUNCTION_12
0x4002afc	    0x833d00000000	               cmp dword [0x04002b03], 0	      3254	normal.c	FUNCTION_12	IF_1	CALL_1
0x4002b03	            0x7413	                            je 0x4002b18	      3254	normal.c	FUNCTION_12	IF_1	CALL_1
0x4002b05	           0xfb607	                   movzx eax, byte [rdi]	      3254	normal.c	FUNCTION_12	IF_1	CALL_1
0x4002b08	    0x80b800000000	                       cmp byte [rax], 1	      3254	normal.c	FUNCTION_12	IF_1	CALL_1
0x4002b0f	            0x7e07	                           jle 0x4002b18	      3254	normal.c	FUNCTION_12	IF_1	CALL_1
0x4002b11	      0xe800000000	                          call 0x4002b16	      3255	normal.c	FUNCTION_12	CALL_2
0x4002b16	            0xeb41	                           jmp 0x4002b59	      3255	normal.c	FUNCTION_12	CALL_2
0x4002b18	           0xfb61f	                   movzx ebx, byte [rdi]	      3258	normal.c	FUNCTION_12
0x4002b1b	          0x83fb20	                           cmp ebx, 0x20	      3259	normal.c	FUNCTION_12	IF_2
0x4002b1e	            0x742d	                            je 0x4002b4d	      3259	normal.c	FUNCTION_12	IF_2
0x4002b20	          0x83fb09	                              cmp ebx, 9	      3259	normal.c	FUNCTION_12	IF_2
0x4002b23	            0x7428	                            je 0x4002b4d	      3259	normal.c	FUNCTION_12	IF_2
0x4002b25	            0x89df	                            mov edi, ebx	      3262	normal.c	FUNCTION_12	IF_3	CALL_3
0x4002b27	      0xe800000000	                          call 0x4002b2c	      3262	normal.c	FUNCTION_12	IF_3	CALL_3
0x4002b2c	            0x85c0	                           test eax, eax	      3262	normal.c	FUNCTION_12	IF_3	CALL_3
0x4002b2e	            0x7524	                           jne 0x4002b54	      3262	normal.c	FUNCTION_12	IF_3	CALL_3
0x4002b30	            0x85db	                           test ebx, ebx	      3271	normal.c	FUNCTION_12	IF_4	CALL_4
0x4002b32	            0x7425	                            je 0x4002b59	      3271	normal.c	FUNCTION_12	IF_4	CALL_4
0x4002b34	            0x89de	                            mov esi, ebx	      3271	normal.c	FUNCTION_12	IF_4	CALL_4
0x4002b36	      0xbf00000000	                              mov edi, 0	      3271	normal.c	FUNCTION_12	IF_4	CALL_4
0x4002b3b	      0xe800000000	                          call 0x4002b40	      3271	normal.c	FUNCTION_12	IF_4	CALL_4
0x4002b40	          0x4885c0	                           test rax, rax	      3273	normal.c	FUNCTION_12
0x4002b43	      0xb801000000	                              mov eax, 1	      3273	normal.c	FUNCTION_12
0x4002b48	           0xf44c3	                          cmove eax, ebx	      3273	normal.c	FUNCTION_12
0x4002b4b	            0xeb0c	                           jmp 0x4002b59	      3273	normal.c	FUNCTION_12
0x4002b4d	      0xb800000000	                              mov eax, 0	      3260	normal.c	FUNCTION_12	IF_2
0x4002b52	            0xeb05	                           jmp 0x4002b59	      3260	normal.c	FUNCTION_12	IF_2
0x4002b54	      0xb802000000	                              mov eax, 2	      3263	normal.c	FUNCTION_12	IF_3
0x4002b59	              0x5b	                                 pop rbx	      3274	normal.c	FUNCTION_12
0x4002b5a	              0xc3	                                     ret	      3274	normal.c	FUNCTION_12
nv_ignore	CALL,0:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,0:IF,0	2
0x40001ca	        0x834f3c01	                or dword [rdi + 0x3c], 1	      4146	normal.c	FUNCTION_37
0x40001ce	              0xc3	                                     ret	      4146	normal.c	FUNCTION_37
nv_kundo	CALL,2:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,0:IF,1	12
0x4000330	              0x53	                                push rbx	      6972	normal.c	FUNCTION_87
0x4000331	          0x4889fb	                            mov rbx, rdi	      6972	normal.c	FUNCTION_87
0x4000334	          0x488b3f	                    mov rdi, qword [rdi]	      6973	normal.c	FUNCTION_87	IF_1	CALL_1
0x4000337	      0xe825ffffff	                  call sym.checkclearopq	      6973	normal.c	FUNCTION_87	IF_1	CALL_1
0x400033c	            0x85c0	                           test eax, eax	      6973	normal.c	FUNCTION_87	IF_1	CALL_1
0x400033e	            0x7517	                           jne 0x4000357	      6973	normal.c	FUNCTION_87	IF_1	CALL_1
0x4000340	        0x488b7b30	            mov rdi, qword [rbx + 0x30] 	      6975	normal.c	FUNCTION_87	IF_1	CALL_2
0x4000344	      0xe800000000	                          call 0x4000349	      6975	normal.c	FUNCTION_87	IF_1	CALL_2
0x4000349	    0x488b05000000	            mov rax, qword [0x04000350] 	      6976	normal.c	FUNCTION_87	IF_1
0x4000350	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      6976	normal.c	FUNCTION_87	IF_1
0x4000357	              0x5b	                                 pop rbx	      6978	normal.c	FUNCTION_87
0x4000358	              0xc3	                                     ret	      6978	normal.c	FUNCTION_87
del_from_showcmd	CALL,3:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,0:IF,3	21
0x4002614	    0x833d00000000	               cmp dword [0x0400261b], 0	      3919	normal.c	FUNCTION_31	IF_1
0x400261b	            0x7443	                            je 0x4002660	      3919	normal.c	FUNCTION_31	IF_1
0x400261d	        0x4883ec08	                              sub rsp, 8	      3916	normal.c	FUNCTION_31
0x4002621	            0x89fa	                            mov edx, edi	      3916	normal.c	FUNCTION_31
0x4002623	      0xbf00000000	                              mov edi, 0	      3922	normal.c	FUNCTION_31	CALL_1
0x4002628	      0xb800000000	                              mov eax, 0	      3922	normal.c	FUNCTION_31	CALL_1
0x400262d	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      3922	normal.c	FUNCTION_31	CALL_1
0x4002634	            0xf2ae	              repne scasb al, byte [rdi]	      3922	normal.c	FUNCTION_31	CALL_1
0x4002636	          0x48f7d1	                                 not rcx	      3922	normal.c	FUNCTION_31	CALL_1
0x4002639	        0x4883e901	                              sub rcx, 1	      3922	normal.c	FUNCTION_31	CALL_1
0x400263d	            0x39d1	                            cmp ecx, edx	      3925	normal.c	FUNCTION_31
0x400263f	           0xf4ed1	                         cmovle edx, ecx	      3925	normal.c	FUNCTION_31
0x4002642	            0x29d1	                            sub ecx, edx	      3925	normal.c	FUNCTION_31
0x4002644	          0x4863c9	                         movsxd rcx, ecx	      3925	normal.c	FUNCTION_31
0x4002647	    0xc68100000000	                       mov byte [rcx], 0	      3925	normal.c	FUNCTION_31
0x400264e	      0xe800000000	                          call 0x4002653	      3927	normal.c	FUNCTION_31	IF_3	CALL_2
0x4002653	            0x85c0	                           test eax, eax	      3927	normal.c	FUNCTION_31	IF_3	CALL_2
0x4002655	            0x7505	                           jne 0x400265c	      3927	normal.c	FUNCTION_31	IF_3	CALL_2
0x4002657	      0xe834ffffff	                call sym.display_showcmd	      3928	normal.c	FUNCTION_31	CALL_3
0x400265c	        0x4883c408	                              add rsp, 8	      3929	normal.c	FUNCTION_31
0x4002660	            0xf3c3	                                     ret	      3929	normal.c	FUNCTION_31
nv_scroll_line	CALL,2:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,0:IF,1	11
0x4006f89	              0x53	                                push rbx	      4688	normal.c	FUNCTION_49
0x4006f8a	          0x4889fb	                            mov rbx, rdi	      4688	normal.c	FUNCTION_49
0x4006f8d	          0x488b3f	                    mov rdi, qword [rdi]	      4689	normal.c	FUNCTION_49	IF_1	CALL_1
0x4006f90	      0xe8ee92ffff	                   call sym.checkclearop	      4689	normal.c	FUNCTION_49	IF_1	CALL_1
0x4006f95	            0x85c0	                           test eax, eax	      4689	normal.c	FUNCTION_49	IF_1	CALL_1
0x4006f97	            0x750c	                           jne 0x4006fa5	      4689	normal.c	FUNCTION_49	IF_1	CALL_1
0x4006f99	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	      4690	normal.c	FUNCTION_49	CALL_2
0x4006f9d	          0x8b7b38	            mov edi, dword [rbx + 0x38] 	      4690	normal.c	FUNCTION_49	CALL_2
0x4006fa0	      0xe800000000	                          call 0x4006fa5	      4690	normal.c	FUNCTION_49	CALL_2
0x4006fa5	              0x5b	                                 pop rbx	      4691	normal.c	FUNCTION_49
0x4006fa6	              0xc3	                                     ret	      4691	normal.c	FUNCTION_49
nv_search	CALL,5:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,0:IF,2	56
0x4002f9e	            0x4156	                                push r14	      6318	normal.c	FUNCTION_77
0x4002fa0	            0x4155	                                push r13	      6318	normal.c	FUNCTION_77
0x4002fa2	            0x4154	                                push r12	      6318	normal.c	FUNCTION_77
0x4002fa4	              0x55	                                push rbp	      6318	normal.c	FUNCTION_77
0x4002fa5	              0x53	                                push rbx	      6318	normal.c	FUNCTION_77
0x4002fa6	          0x4889fb	                            mov rbx, rdi	      6318	normal.c	FUNCTION_77
0x4002fa9	          0x488b2f	                    mov rbp, qword [rdi]	      6319	normal.c	FUNCTION_77
0x4002fac	    0x488b05000000	            mov rax, qword [0x04002fb3] 	      6320	normal.c	FUNCTION_77
0x4002fb3	        0x4c8b6038	            mov r12, qword [rax + 0x38] 	      6320	normal.c	FUNCTION_77
0x4002fb7	        0x448b6840	           mov r13d, dword [rax + 0x40] 	      6320	normal.c	FUNCTION_77
0x4002fbb	        0x448b7044	           mov r14d, dword [rax + 0x44] 	      6320	normal.c	FUNCTION_77
0x4002fbf	          0x8b7f0c	              mov edi, dword [rdi + 0xc]	      6322	normal.c	FUNCTION_77	IF_1
0x4002fc2	          0x83ff3f	                           cmp edi, 0x3f	      6322	normal.c	FUNCTION_77	IF_1
0x4002fc5	            0x751e	                           jne 0x4002fe5	      6322	normal.c	FUNCTION_77	IF_1
0x4002fc7	        0x837d000f	                    cmp dword [rbp], 0xf	      6322	normal.c	FUNCTION_77	IF_1
0x4002fcb	            0x7518	                           jne 0x4002fe5	      6322	normal.c	FUNCTION_77	IF_1
0x4002fcd	    0xc7430c670000	            mov dword [rbx + 0xc], 0x67 	      6325	normal.c	FUNCTION_77	IF_1
0x4002fd4	    0xc743103f0000	           mov dword [rbx + 0x10], 0x3f 	      6326	normal.c	FUNCTION_77	IF_1
0x4002fdb	          0x4889df	                            mov rdi, rbx	      6327	normal.c	FUNCTION_77	IF_1	CALL_1
0x4002fde	      0xe87bebffff	                    call sym.nv_operator	      6327	normal.c	FUNCTION_77	IF_1	CALL_1
0x4002fe3	            0xeb74	                           jmp 0x4003059	      6328	normal.c	FUNCTION_77	IF_1
0x4002fe5	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	      6333	normal.c	FUNCTION_77	CALL_2
0x4002fe9	      0xba00000000	                              mov edx, 0	      6333	normal.c	FUNCTION_77	CALL_2
0x4002fee	      0xe800000000	                          call 0x4002ff3	      6333	normal.c	FUNCTION_77	CALL_2
0x4002ff3	        0x48894340	             mov qword [rbx + 0x40], rax	      6333	normal.c	FUNCTION_77	CALL_2
0x4002ff7	          0x4885c0	                           test rax, rax	      6335	normal.c	FUNCTION_77	IF_2
0x4002ffa	            0x751e	                           jne 0x400301a	      6335	normal.c	FUNCTION_77	IF_2
0x4002ffc	    0xc74500000000	                      mov dword [rbp], 0	      3676	normal.c	FUNCTION_24
0x4003003	    0xc74504000000	                  mov dword [rbp + 4], 0	      3677	normal.c	FUNCTION_24
0x400300a	    0xc7450c000000	                mov dword [rbp + 0xc], 0	      3678	normal.c	FUNCTION_24
0x4003011	    0xc74510000000	               mov dword [rbp + 0x10], 0	      3679	normal.c	FUNCTION_24
0x4003018	            0xeb3f	                           jmp 0x4003059	      3679	normal.c	FUNCTION_24
0x400301a	          0x8b4b38	            mov ecx, dword [rbx + 0x38] 	      6342	normal.c	FUNCTION_77	CALL_5
0x400301d	            0x85c9	                           test ecx, ecx	      6341	normal.c	FUNCTION_77	CALL_4
0x400301f	            0x7525	                           jne 0x4003046	      6341	normal.c	FUNCTION_77	CALL_4
0x4003021	    0x488b15000000	            mov rdx, qword [0x04003028] 	      6342	normal.c	FUNCTION_77	CALL_5
0x4003028	        0x4c396238	            cmp qword [rdx + 0x38], r12 	      6342	normal.c	FUNCTION_77	CALL_5
0x400302c	            0x751d	                           jne 0x400304b	      6342	normal.c	FUNCTION_77	CALL_5
0x400302e	        0x49c1e620	                           shl r14, 0x20	      6342	normal.c	FUNCTION_77	CALL_5
0x4003032	          0x4589ed	                          mov r13d, r13d	      6342	normal.c	FUNCTION_77	CALL_5
0x4003035	          0x4d09ee	                             or r14, r13	      6342	normal.c	FUNCTION_77	CALL_5
0x4003038	        0x4c397240	            cmp qword [rdx + 0x40], r14 	      6341	normal.c	FUNCTION_77	CALL_4
0x400303c	      0xba00020000	                          mov edx, 0x200	      6341	normal.c	FUNCTION_77	CALL_4
0x4003041	           0xf44ca	                          cmove ecx, edx	      6341	normal.c	FUNCTION_77	CALL_4
0x4003044	            0xeb05	                           jmp 0x400304b	      6341	normal.c	FUNCTION_77	CALL_4
0x4003046	      0xb900000000	                              mov ecx, 0	      6341	normal.c	FUNCTION_77	CALL_4
0x400304b	          0x8b730c	              mov esi, dword [rbx + 0xc]	      6341	normal.c	FUNCTION_77	CALL_4
0x400304e	          0x4889c2	                            mov rdx, rax	      6341	normal.c	FUNCTION_77	CALL_4
0x4003051	          0x4889df	                            mov rdi, rbx	      6341	normal.c	FUNCTION_77	CALL_4
0x4003054	      0xe800feffff	                  call sym.normal_search	      6341	normal.c	FUNCTION_77	CALL_4
0x4003059	              0x5b	                                 pop rbx	      6344	normal.c	FUNCTION_77
0x400305a	              0x5d	                                 pop rbp	      6344	normal.c	FUNCTION_77
0x400305b	            0x415c	                                 pop r12	      6344	normal.c	FUNCTION_77
0x400305d	            0x415d	                                 pop r13	      6344	normal.c	FUNCTION_77
0x400305f	            0x415e	                                 pop r14	      6344	normal.c	FUNCTION_77
0x4003061	              0xc3	                                     ret	      6344	normal.c	FUNCTION_77
nv_visual	CALL,16:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,7:IF,18	161
0x4008d2a	        0x837f0c11	            cmp dword [rdi + 0xc], 0x11 	      7668	normal.c	FUNCTION_101	IF_1
0x4008d2e	            0x7507	                           jne 0x4008d37	      7668	normal.c	FUNCTION_101	IF_1
0x4008d30	    0xc7470c160000	            mov dword [rdi + 0xc], 0x16 	      7669	normal.c	FUNCTION_101	IF_1
0x4008d37	          0x488b07	                    mov rax, qword [rdi]	      7673	normal.c	FUNCTION_101	IF_2
0x4008d3a	          0x833800	                      cmp dword [rax], 0	      7673	normal.c	FUNCTION_101	IF_2
0x4008d3d	            0x7411	                            je 0x4008d50	      7673	normal.c	FUNCTION_101	IF_2
0x4008d3f	          0x8b570c	              mov edx, dword [rdi + 0xc]	      7675	normal.c	FUNCTION_101	IF_2
0x4008d42	          0x89500c	              mov dword [rax + 0xc], edx	      7675	normal.c	FUNCTION_101	IF_2
0x4008d45	    0xc70500000000	               mov dword [0x04008d4f], 0	      7676	normal.c	FUNCTION_101	IF_2
0x4008d4f	              0xc3	                                     ret	      7676	normal.c	FUNCTION_101	IF_2
0x4008d50	              0x53	                                push rbx	      7667	normal.c	FUNCTION_101
0x4008d51	          0x4889fb	                            mov rbx, rdi	      7667	normal.c	FUNCTION_101
0x4008d54	          0x8b4738	            mov eax, dword [rdi + 0x38] 	      7680	normal.c	FUNCTION_101
0x4008d57	    0x890500000000	            mov dword [0x04008d5d], eax 	      7680	normal.c	FUNCTION_101
0x4008d5d	    0x833d00000000	               cmp dword [0x04008d64], 0	      7681	normal.c	FUNCTION_101	IF_3
0x4008d64	            0x742c	                            je 0x4008d92	      7681	normal.c	FUNCTION_101	IF_3
0x4008d66	          0x8b470c	              mov eax, dword [rdi + 0xc]	      7683	normal.c	FUNCTION_101	IF_3	IF_4
0x4008d69	    0x3b0500000000	            cmp eax, dword [0x04008d6f] 	      7683	normal.c	FUNCTION_101	IF_3	IF_4
0x4008d6f	            0x7507	                           jne 0x4008d78	      7683	normal.c	FUNCTION_101	IF_3	IF_4
0x4008d71	      0xe800000000	                          call 0x4008d76	      7684	normal.c	FUNCTION_101	IF_3	CALL_1
0x4008d76	            0xeb0b	                           jmp 0x4008d83	      7684	normal.c	FUNCTION_101	IF_3	CALL_1
0x4008d78	    0x890500000000	            mov dword [0x04008d7e], eax 	      7687	normal.c	FUNCTION_101	IF_3	ELSE_1
0x4008d7e	      0xe800000000	                          call 0x4008d83	      7688	normal.c	FUNCTION_101	IF_3	ELSE_1	CALL_2
0x4008d83	      0xbf14000000	                           mov edi, 0x14	      7690	normal.c	FUNCTION_101	IF_3	CALL_3
0x4008d88	      0xe800000000	                          call 0x4008d8d	      7690	normal.c	FUNCTION_101	IF_3	CALL_3
0x4008d8d	      0xe98f020000	                           jmp 0x4009021	      7690	normal.c	FUNCTION_101	IF_3	CALL_3
0x4008d92	      0xe800000000	                          call 0x4008d97	      7694	normal.c	FUNCTION_101	ELSE_2	CALL_4
0x4008d97	      0x48837b2800	               cmp qword [rbx + 0x28], 0	      7695	normal.c	FUNCTION_101	ELSE_2	IF_5
0x4008d9c	     0xf8e4e010000	                           jle 0x4008ef0	      7695	normal.c	FUNCTION_101	ELSE_2	IF_5
0x4008da2	    0x833d00000000	               cmp dword [0x04008da9], 0	      7695	normal.c	FUNCTION_101	ELSE_2	IF_5
0x4008da9	     0xf8441010000	                            je 0x4008ef0	      7695	normal.c	FUNCTION_101	ELSE_2	IF_5
0x4008daf	    0x488b05000000	            mov rax, qword [0x04008db6] 	      7698	normal.c	FUNCTION_101	ELSE_2	IF_5
0x4008db6	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      7698	normal.c	FUNCTION_101	ELSE_2	IF_5
0x4008dba	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7698	normal.c	FUNCTION_101	ELSE_2	IF_5
0x4008dbe	    0x488905000000	            mov qword [0x04008dc5], rax 	      7698	normal.c	FUNCTION_101	ELSE_2	IF_5
0x4008dc5	    0x488915000000	            mov qword [0x04008dcc], rdx 	      7698	normal.c	FUNCTION_101	ELSE_2	IF_5
0x4008dcc	    0xc70500000000	               mov dword [0x04008dd6], 1	      7700	normal.c	FUNCTION_101	ELSE_2	IF_5
0x4008dd6	    0xc70500000000	               mov dword [0x04008de0], 1	      7701	normal.c	FUNCTION_101	ELSE_2	IF_5
0x4008de0	        0x837b3800	               cmp dword [rbx + 0x38], 0	      7702	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_6
0x4008de4	            0x750a	                           jne 0x4008df0	      7702	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_6
0x4008de6	      0xbf63000000	                           mov edi, 0x63	      7704	normal.c	FUNCTION_101	ELSE_2	IF_5	CALL_5
0x4008deb	      0xe800000000	                          call 0x4008df0	      7704	normal.c	FUNCTION_101	ELSE_2	IF_5	CALL_5
0x4008df0	      0xe800000000	                          call 0x4008df5	      7706	normal.c	FUNCTION_101	ELSE_2	IF_5	CALL_6
0x4008df5	    0x833d00000000	               cmp dword [0x04008dfc], 0	      7708	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_7
0x4008dfc	            0x7413	                            je 0x4008e11	      7708	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_7
0x4008dfe	    0x833d00000000	               cmp dword [0x04008e05], 0	      7708	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_7
0x4008e05	            0x750a	                           jne 0x4008e11	      7708	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_7
0x4008e07	    0xc70500000000	               mov dword [0x04008e11], 1	      7709	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_7
0x4008e11	    0x8b0500000000	            mov eax, dword [0x04008e17] 	      7714	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_8
0x4008e17	          0x83f876	                           cmp eax, 0x76	      7714	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_8
0x4008e1a	     0xf8595010000	                           jne 0x4008fb5	      7714	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_8
0x4008e20	    0x488b15000000	            mov rdx, qword [0x04008e27] 	      7714	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_8
0x4008e27	        0x4883fa01	                              cmp rdx, 1	      7714	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_8
0x4008e2b	     0xf8f4f010000	                            jg 0x4008f80	      7714	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_8
0x4008e31	      0xe9b0010000	                           jmp 0x4008fe6	      7714	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_8
0x4008e36	      0xe800000000	                          call 0x4008e3b	      7726	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_10	IF_11	CALL_7
0x4008e3b	    0x488b15000000	            mov rdx, qword [0x04008e42] 	      7727	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_10	IF_11
0x4008e42	    0x8b0500000000	            mov eax, dword [0x04008e48] 	      7727	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_10	IF_11
0x4008e48	         0xfaf4328	            imul eax, dword [rbx + 0x28]	      7727	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_10	IF_11
0x4008e4c	    0x8b8ad8000000	            mov ecx, dword [rdx + 0xd8] 	      7727	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_10	IF_11
0x4008e52	        0x8d4408ff	                lea eax, [rax + rcx - 1]	      7727	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_10	IF_11
0x4008e56	          0x894248	             mov dword [rdx + 0x48], eax	      7727	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_10	IF_11
0x4008e59	            0xeb10	                           jmp 0x4008e6b	      7727	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_10	IF_11
0x4008e5b	    0x8b1500000000	            mov edx, dword [0x04008e61] 	      7731	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_10	ELSE_3
0x4008e61	    0x488b05000000	            mov rax, qword [0x04008e68] 	      7731	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_10	ELSE_3
0x4008e68	          0x895048	             mov dword [rax + 0x48], edx	      7731	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_10	ELSE_3
0x4008e6b	    0x488b05000000	            mov rax, qword [0x04008e72] 	      7732	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_10	CALL_8
0x4008e72	          0x8b7848	            mov edi, dword [rax + 0x48] 	      7732	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_10	CALL_8
0x4008e75	      0xe800000000	                          call 0x4008e7a	      7732	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_10	CALL_8
0x4008e7a	    0x813d00000000	     cmp dword [0x04008e84], 0x7fffffff 	      7734	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_12
0x4008e84	            0x751a	                           jne 0x4008ea0	      7734	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_12
0x4008e86	    0x488b05000000	            mov rax, qword [0x04008e8d] 	      7736	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_12
0x4008e8d	    0xc74048ffffff	     mov dword [rax + 0x48], 0x7fffffff 	      7736	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_12
0x4008e94	      0xbfffffff7f	                     mov edi, 0x7fffffff	      7737	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_12	CALL_9
0x4008e99	      0xe800000000	                          call 0x4008e9e	      7737	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_12	CALL_9
0x4008e9e	            0xeb41	                           jmp 0x4008ee1	      7737	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_12	CALL_9
0x4008ea0	    0x833d00000000	           cmp dword [0x04008ea7], 0x16 	      7739	normal.c	FUNCTION_101	ELSE_2	IF_5	ELSE_4	IF_13
0x4008ea7	            0x752a	                           jne 0x4008ed3	      7739	normal.c	FUNCTION_101	ELSE_2	IF_5	ELSE_4	IF_13
0x4008ea9	      0xe800000000	                          call 0x4008eae	      7741	normal.c	FUNCTION_101	ELSE_2	IF_5	ELSE_4	IF_13	CALL_10
0x4008eae	    0x488b15000000	            mov rdx, qword [0x04008eb5] 	      7742	normal.c	FUNCTION_101	ELSE_2	IF_5	ELSE_4	IF_13
0x4008eb5	    0x8b0500000000	            mov eax, dword [0x04008ebb] 	      7742	normal.c	FUNCTION_101	ELSE_2	IF_5	ELSE_4	IF_13
0x4008ebb	         0xfaf4328	            imul eax, dword [rbx + 0x28]	      7742	normal.c	FUNCTION_101	ELSE_2	IF_5	ELSE_4	IF_13
0x4008ebf	    0x8b8ad8000000	            mov ecx, dword [rdx + 0xd8] 	      7742	normal.c	FUNCTION_101	ELSE_2	IF_5	ELSE_4	IF_13
0x4008ec5	        0x8d7c08ff	                lea edi, [rax + rcx - 1]	      7742	normal.c	FUNCTION_101	ELSE_2	IF_5	ELSE_4	IF_13
0x4008ec9	          0x897a48	             mov dword [rdx + 0x48], edi	      7742	normal.c	FUNCTION_101	ELSE_2	IF_5	ELSE_4	IF_13
0x4008ecc	      0xe800000000	                          call 0x4008ed1	      7744	normal.c	FUNCTION_101	ELSE_2	IF_5	ELSE_4	IF_13	CALL_11
0x4008ed1	            0xeb0e	                           jmp 0x4008ee1	      7744	normal.c	FUNCTION_101	ELSE_2	IF_5	ELSE_4	IF_13	CALL_11
0x4008ed3	    0x488b05000000	            mov rax, qword [0x04008eda] 	      7747	normal.c	FUNCTION_101	ELSE_2	IF_5	ELSE_5
0x4008eda	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      7747	normal.c	FUNCTION_101	ELSE_2	IF_5	ELSE_5
0x4008ee1	      0xbf14000000	                           mov edi, 0x14	      7748	normal.c	FUNCTION_101	ELSE_2	IF_5	CALL_12
0x4008ee6	      0xe800000000	                          call 0x4008eeb	      7748	normal.c	FUNCTION_101	ELSE_2	IF_5	CALL_12
0x4008eeb	      0xe931010000	                           jmp 0x4009021	      7748	normal.c	FUNCTION_101	ELSE_2	IF_5	CALL_12
0x4008ef0	        0x837b3800	               cmp dword [rbx + 0x38], 0	      7752	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_14
0x4008ef4	            0x750a	                           jne 0x4008f00	      7752	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_14
0x4008ef6	      0xbf63000000	                           mov edi, 0x63	      7754	normal.c	FUNCTION_101	ELSE_2	ELSE_6	CALL_13
0x4008efb	      0xe800000000	                          call 0x4008f00	      7754	normal.c	FUNCTION_101	ELSE_2	ELSE_6	CALL_13
0x4008f00	          0x8b7b0c	              mov edi, dword [rbx + 0xc]	      7755	normal.c	FUNCTION_101	ELSE_2	ELSE_6	CALL_14
0x4008f03	      0xe8d093ffff	            call sym.n_start_visual_mode	      7755	normal.c	FUNCTION_101	ELSE_2	ELSE_6	CALL_14
0x4008f08	    0x8b1500000000	            mov edx, dword [0x04008f0e] 	      7756	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_15
0x4008f0e	          0x83fa56	                           cmp edx, 0x56	      7756	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_15
0x4008f11	            0x7411	                            je 0x4008f24	      7756	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_15
0x4008f13	    0x488b05000000	            mov rax, qword [0x04008f1a] 	      7756	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_15
0x4008f1a	          0x803865	                    cmp byte [rax], 0x65	      7756	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_15
0x4008f1d	            0x7505	                           jne 0x4008f24	      7756	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_15
0x4008f1f	      0x4883433001	               add qword [rbx + 0x30], 1	      7757	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_15
0x4008f24	      0x48837b2800	               cmp qword [rbx + 0x28], 0	      7758	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_16
0x4008f29	     0xf8ef2000000	                           jle 0x4009021	      7758	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_16
0x4008f2f	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      7758	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_16
0x4008f33	        0x4883e801	                              sub rax, 1	      7758	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_16
0x4008f37	        0x48894330	             mov qword [rbx + 0x30], rax	      7758	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_16
0x4008f3b	          0x4885c0	                           test rax, rax	      7758	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_16
0x4008f3e	     0xf8edd000000	                           jle 0x4009021	      7758	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_16
0x4008f44	          0x83fa76	                           cmp edx, 0x76	      7761	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_16	IF_17
0x4008f47	            0x7405	                            je 0x4008f4e	      7761	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_16	IF_17
0x4008f49	          0x83fa16	                           cmp edx, 0x16	      7761	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_16	IF_17
0x4008f4c	            0x750d	                           jne 0x4008f5b	      7761	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_16	IF_17
0x4008f4e	          0x4889df	                            mov rdi, rbx	      7762	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_16	CALL_15
0x4008f51	      0xe86f82ffff	                       call sym.nv_right	      7762	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_16	CALL_15
0x4008f56	      0xe9c6000000	                           jmp 0x4009021	      7762	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_16	CALL_15
0x4008f5b	          0x83fa56	                           cmp edx, 0x56	      7763	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_16	ELSE_7	IF_18
0x4008f5e	     0xf85bd000000	                           jne 0x4009021	      7763	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_16	ELSE_7	IF_18
0x4008f64	          0x4889df	                            mov rdi, rbx	      7764	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_16	ELSE_7	IF_18
0x4008f67	      0xe87f94ffff	                        call sym.nv_down	      7764	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_16	ELSE_7	IF_18
0x4008f6c	      0xe9b0000000	                           jmp 0x4009021	      7764	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_16	ELSE_7	IF_18
0x4008f71	    0xc70500000000	           mov dword [0x04008f7b], 0x76 	      7721	normal.c	FUNCTION_101	ELSE_2	IF_5
0x4008f7b	      0xe9dbfeffff	                           jmp 0x4008e5b	      7721	normal.c	FUNCTION_101	ELSE_2	IF_5
0x4008f80	    0x488b0d000000	            mov rcx, qword [0x04008f87] 	      7716	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_8
0x4008f87	      0x480faf5328	            imul rdx, qword [rbx + 0x28]	      7716	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_8
0x4008f8c	        0x488b7138	            mov rsi, qword [rcx + 0x38] 	      7716	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_8
0x4008f90	      0x488d7432ff	                lea rsi, [rdx + rsi - 1]	      7716	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_8
0x4008f95	        0x48897138	             mov qword [rcx + 0x38], rsi	      7716	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_8
0x4008f99	    0x488b15000000	            mov rdx, qword [0x04008fa0] 	      7718	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_8	IF_9
0x4008fa0	          0x488b12	                    mov rdx, qword [rdx]	      7718	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_8	IF_9
0x4008fa3	          0x4839d6	                            cmp rsi, rdx	      7718	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_8	IF_9
0x4008fa6	            0x7f4d	                            jg 0x4008ff5	      7718	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_8	IF_9
0x4008fa8	            0xebc7	                           jmp 0x4008f71	      7718	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_8	IF_9
0x4008faa	    0x890500000000	            mov dword [0x04008fb0], eax 	      7721	normal.c	FUNCTION_101	ELSE_2	IF_5
0x4008fb0	      0xe9c5feffff	                           jmp 0x4008e7a	      7721	normal.c	FUNCTION_101	ELSE_2	IF_5
0x4008fb5	    0x488b0d000000	            mov rcx, qword [0x04008fbc] 	      7716	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_8
0x4008fbc	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	      7716	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_8
0x4008fc0	    0x480faf150000	            imul rdx, qword [0x04008fc8]	      7716	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_8
0x4008fc8	        0x488b7138	            mov rsi, qword [rcx + 0x38] 	      7716	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_8
0x4008fcc	      0x488d5432ff	                lea rdx, [rdx + rsi - 1]	      7716	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_8
0x4008fd1	        0x48895138	             mov qword [rcx + 0x38], rdx	      7716	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_8
0x4008fd5	    0x488b35000000	            mov rsi, qword [0x04008fdc] 	      7718	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_8	IF_9
0x4008fdc	          0x488b36	                    mov rsi, qword [rsi]	      7718	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_8	IF_9
0x4008fdf	          0x4839f2	                            cmp rdx, rsi	      7718	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_8	IF_9
0x4008fe2	            0x7ec6	                           jle 0x4008faa	      7718	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_8	IF_9
0x4008fe4	            0xeb2c	                           jmp 0x4009012	      7718	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_8	IF_9
0x4008fe6	    0xc70500000000	           mov dword [0x04008ff0], 0x76 	      7721	normal.c	FUNCTION_101	ELSE_2	IF_5
0x4008ff0	      0xe941feffff	                           jmp 0x4008e36	      7721	normal.c	FUNCTION_101	ELSE_2	IF_5
0x4008ff5	        0x48895138	             mov qword [rcx + 0x38], rdx	      7719	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_8	IF_9
0x4008ff9	    0x890500000000	            mov dword [0x04008fff], eax 	      7721	normal.c	FUNCTION_101	ELSE_2	IF_5
0x4008fff	    0x48833d000000	               cmp qword [0x04009007], 1	      7724	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_10	IF_11
0x4009007	     0xf8f4efeffff	                            jg 0x4008e5b	      7724	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_10	IF_11
0x400900d	      0xe924feffff	                           jmp 0x4008e36	      7724	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_10	IF_11
0x4009012	        0x48897138	             mov qword [rcx + 0x38], rsi	      7719	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_8	IF_9
0x4009016	    0x890500000000	            mov dword [0x0400901c], eax 	      7721	normal.c	FUNCTION_101	ELSE_2	IF_5
0x400901c	      0xe959feffff	                           jmp 0x4008e7a	      7721	normal.c	FUNCTION_101	ELSE_2	IF_5
0x4009021	              0x5b	                                 pop rbx	      7768	normal.c	FUNCTION_101
0x4009022	              0xc3	                                     ret	      7768	normal.c	FUNCTION_101
nv_put	CALL,18:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,3:IF,15	214
0x400547a	            0x4157	                                push r15	      9408	normal.c	FUNCTION_135
0x400547c	            0x4156	                                push r14	      9408	normal.c	FUNCTION_135
0x400547e	            0x4155	                                push r13	      9408	normal.c	FUNCTION_135
0x4005480	            0x4154	                                push r12	      9408	normal.c	FUNCTION_135
0x4005482	              0x55	                                push rbp	      9408	normal.c	FUNCTION_135
0x4005483	              0x53	                                push rbx	      9408	normal.c	FUNCTION_135
0x4005484	        0x4883ec18	                           sub rsp, 0x18	      9408	normal.c	FUNCTION_135
0x4005488	          0x4889fb	                            mov rbx, rdi	      9408	normal.c	FUNCTION_135
0x400548b	    0x64488b042528	                mov rax, qword fs:[0x28]	      9408	normal.c	FUNCTION_135
0x4005494	      0x4889442408	                mov qword [rsp + 8], rax	      9408	normal.c	FUNCTION_135
0x4005499	            0x31c0	                            xor eax, eax	      9408	normal.c	FUNCTION_135
0x400549b	    0xc74424040000	                  mov dword [rsp + 4], 0	      9409	normal.c	FUNCTION_135
0x40054a3	          0x488b3f	                    mov rdi, qword [rdi]	      9416	normal.c	FUNCTION_135	IF_1
0x40054a6	            0x8b07	                    mov eax, dword [rdi]	      9416	normal.c	FUNCTION_135	IF_1
0x40054a8	            0x85c0	                           test eax, eax	      9416	normal.c	FUNCTION_135	IF_1
0x40054aa	            0x7443	                            je 0x40054ef	      9416	normal.c	FUNCTION_135	IF_1
0x40054ac	          0x83f801	                              cmp eax, 1	      9420	normal.c	FUNCTION_135	IF_1	IF_2
0x40054af	            0x7534	                           jne 0x40054e5	      9420	normal.c	FUNCTION_135	IF_1	IF_2
0x40054b1	        0x837b0c70	            cmp dword [rbx + 0xc], 0x70 	      9420	normal.c	FUNCTION_135	IF_1	IF_2
0x40054b5	            0x752e	                           jne 0x40054e5	      9420	normal.c	FUNCTION_135	IF_1	IF_2
0x40054b7	    0xc70700000000	                      mov dword [rdi], 0	      3676	normal.c	FUNCTION_24
0x40054bd	    0xc74704000000	                  mov dword [rdi + 4], 0	      3677	normal.c	FUNCTION_24
0x40054c4	    0xc7470c000000	                mov dword [rdi + 0xc], 0	      3678	normal.c	FUNCTION_24
0x40054cb	    0xc74710000000	               mov dword [rdi + 0x10], 0	      3679	normal.c	FUNCTION_24
0x40054d2	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	      9423	normal.c	FUNCTION_135	IF_1	IF_2	CALL_2
0x40054d6	      0xbf01000000	                              mov edi, 1	      9423	normal.c	FUNCTION_135	IF_1	IF_2	CALL_2
0x40054db	      0xe800000000	                          call 0x40054e0	      9423	normal.c	FUNCTION_135	IF_1	IF_2	CALL_2
0x40054e0	      0xe9f8020000	                           jmp 0x40057dd	      9423	normal.c	FUNCTION_135	IF_1	IF_2	CALL_2
0x40054e5	      0xe84eadffff	                    call sym.clearopbeep	      9427	normal.c	FUNCTION_135	IF_1	CALL_3
0x40054ea	      0xe9ee020000	                           jmp 0x40057dd	      9427	normal.c	FUNCTION_135	IF_1	CALL_3
0x40054ef	          0x8b430c	              mov eax, dword [rbx + 0xc]	      9431	normal.c	FUNCTION_135	ELSE_2
0x40054f2	    0x41bcffffffff	                    mov r12d, 0xffffffff	      9433	normal.c	FUNCTION_135	ELSE_2
0x40054f8	          0x83f850	                           cmp eax, 0x50	      9433	normal.c	FUNCTION_135	ELSE_2
0x40054fb	            0x741c	                            je 0x4005519	      9433	normal.c	FUNCTION_135	ELSE_2
0x40054fd	    0x41bc01000000	                             mov r12d, 1	      9433	normal.c	FUNCTION_135	ELSE_2
0x4005503	          0x83f867	                           cmp eax, 0x67	      9432	normal.c	FUNCTION_135	ELSE_2
0x4005506	            0x7511	                           jne 0x4005519	      9432	normal.c	FUNCTION_135	ELSE_2
0x4005508	        0x837b1050	           cmp dword [rbx + 0x10], 0x50 	      9433	normal.c	FUNCTION_135	ELSE_2
0x400550c	        0x410f95c4	                              setne r12b	      9433	normal.c	FUNCTION_135	ELSE_2
0x4005510	        0x450fb6e4	                        movzx r12d, r12b	      9433	normal.c	FUNCTION_135	ELSE_2
0x4005514	      0x478d6424ff	               lea r12d, [r12 + r12 - 1]	      9433	normal.c	FUNCTION_135	ELSE_2
0x4005519	          0x4889df	                            mov rdi, rbx	      9434	normal.c	FUNCTION_135	ELSE_2	CALL_4
0x400551c	      0xe8a8afffff	                  call sym.prep_redo_cmd	      9434	normal.c	FUNCTION_135	ELSE_2	CALL_4
0x4005521	        0x837b0c67	            cmp dword [rbx + 0xc], 0x67 	      9436	normal.c	FUNCTION_135	ELSE_2	IF_3
0x4005525	        0x400f94c5	                                sete bpl	      9436	normal.c	FUNCTION_135	ELSE_2	IF_3
0x4005529	        0x400fb6ed	                          movzx ebp, bpl	      9436	normal.c	FUNCTION_135	ELSE_2	IF_3
0x400552d	             0x1ed	                            add ebp, ebp	      9436	normal.c	FUNCTION_135	ELSE_2	IF_3
0x400552f	    0x833d00000000	               cmp dword [0x04005536], 0	      9438	normal.c	FUNCTION_135	ELSE_2	IF_4
0x4005536	     0xf8482020000	                            je 0x40057be	      9438	normal.c	FUNCTION_135	ELSE_2	IF_4
0x400553c	          0x488b03	                    mov rax, qword [rbx]	      9446	normal.c	FUNCTION_135	ELSE_2	IF_4
0x400553f	          0x8b4004	                mov eax, dword [rax + 4]	      9446	normal.c	FUNCTION_135	ELSE_2	IF_4
0x4005542	        0x89442404	                mov dword [rsp + 4], eax	      9446	normal.c	FUNCTION_135	ELSE_2	IF_4
0x4005546	      0x488d7c2404	                      lea rdi, [rsp + 4]	      9448	normal.c	FUNCTION_135	ELSE_2	IF_4	CALL_5
0x400554b	      0xe800000000	                          call 0x4005550	      9448	normal.c	FUNCTION_135	ELSE_2	IF_4	CALL_5
0x4005550	        0x8b7c2404	                mov edi, dword [rsp + 4]	      9450	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_5
0x4005554	            0x85ff	                           test edi, edi	      9450	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_5
0x4005556	            0x742b	                            je 0x4005583	      9450	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_5
0x4005558	          0x83ff22	                           cmp edi, 0x22	      9450	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_5
0x400555b	            0x7426	                            je 0x4005583	      9450	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_5
0x400555d	          0x8d47d0	                   lea eax, [rdi - 0x30]	      9451	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_5	CALL_6
0x4005560	          0x83f809	                              cmp eax, 9	      9451	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_5	CALL_6
0x4005563	            0x761e	                           jbe 0x4005583	      9451	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_5	CALL_6
0x4005565	          0x83ff2d	                           cmp edi, 0x2d	      9451	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_5	CALL_6
0x4005568	            0x7419	                            je 0x4005583	      9451	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_5	CALL_6
0x400556a	    0x833d00000000	               cmp dword [0x04005571], 0	      9453	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_5
0x4005571	     0xf84d2010000	                            je 0x4005749	      9453	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_5
0x4005577	          0x8d47d6	                   lea eax, [rdi - 0x2a]	      9453	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_5
0x400557a	          0x83f801	                              cmp eax, 1	      9453	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_5
0x400557d	     0xf87c6010000	                            ja 0x4005749	      9453	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_5
0x4005583	      0xbe01000000	                              mov esi, 1	      9460	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_5	CALL_7
0x4005588	      0xe800000000	                          call 0x400558d	      9460	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_5	CALL_7
0x400558d	          0x4989c7	                            mov r15, rax	      9460	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_5	CALL_7
0x4005590	    0xc7430c640000	            mov dword [rbx + 0xc], 0x64 	      9464	normal.c	FUNCTION_135	ELSE_2	IF_4
0x4005597	    0xc74310000000	               mov dword [rbx + 0x10], 0	      9465	normal.c	FUNCTION_135	ELSE_2	IF_4
0x400559e	          0x488b03	                    mov rax, qword [rbx]	      9466	normal.c	FUNCTION_135	ELSE_2	IF_4
0x40055a1	    0xc74004000000	                  mov dword [rax + 4], 0	      9466	normal.c	FUNCTION_135	ELSE_2	IF_4
0x40055a8	          0x4889df	                            mov rdi, rbx	      9467	normal.c	FUNCTION_135	ELSE_2	IF_4	CALL_8
0x40055ab	      0xe8aec5ffff	                    call sym.nv_operator	      9467	normal.c	FUNCTION_135	ELSE_2	IF_4	CALL_8
0x40055b0	      0xba00000000	                              mov edx, 0	      9468	normal.c	FUNCTION_135	ELSE_2	IF_4	CALL_9
0x40055b5	      0xbe00000000	                              mov esi, 0	      9468	normal.c	FUNCTION_135	ELSE_2	IF_4	CALL_9
0x40055ba	          0x4889df	                            mov rdi, rbx	      9468	normal.c	FUNCTION_135	ELSE_2	IF_4	CALL_9
0x40055bd	      0xe800000000	                          call 0x40055c2	      9468	normal.c	FUNCTION_135	ELSE_2	IF_4	CALL_9
0x40055c2	    0x488b05000000	            mov rax, qword [0x040055c9] 	      9469	normal.c	FUNCTION_135	ELSE_2	IF_4
0x40055c9	        0x448b6810	           mov r13d, dword [rax + 0x10] 	      9469	normal.c	FUNCTION_135	ELSE_2	IF_4
0x40055cd	        0x4183e501	                             and r13d, 1	      9469	normal.c	FUNCTION_135	ELSE_2	IF_4
0x40055d1	          0x488b03	                    mov rax, qword [rbx]	      9472	normal.c	FUNCTION_135	ELSE_2	IF_4
0x40055d4	        0x8b7c2404	                mov edi, dword [rsp + 4]	      9472	normal.c	FUNCTION_135	ELSE_2	IF_4
0x40055d8	          0x897804	                mov dword [rax + 4], edi	      9472	normal.c	FUNCTION_135	ELSE_2	IF_4
0x40055db	          0x4d85ff	                           test r15, r15	      9474	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_6
0x40055de	            0x741b	                            je 0x40055fb	      9474	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_6
0x40055e0	      0xbe00000000	                              mov esi, 0	      9478	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_6	CALL_10
0x40055e5	      0xe800000000	                          call 0x40055ea	      9478	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_6	CALL_10
0x40055ea	          0x4989c6	                            mov r14, rax	      9478	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_6	CALL_10
0x40055ed	          0x4c89fe	                            mov rsi, r15	      9479	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_6	CALL_11
0x40055f0	        0x8b7c2404	                mov edi, dword [rsp + 4]	      9479	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_6	CALL_11
0x40055f4	      0xe800000000	                          call 0x40055f9	      9479	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_6	CALL_11
0x40055f9	            0xeb06	                           jmp 0x4005601	      9479	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_6	CALL_11
0x40055fb	    0x41be00000000	                             mov r14d, 0	      9410	normal.c	FUNCTION_135
0x4005601	    0x8b0500000000	            mov eax, dword [0x04005607] 	      9485	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_7
0x4005607	          0x83f856	                           cmp eax, 0x56	      9485	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_7
0x400560a	            0x7525	                           jne 0x4005631	      9485	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_7
0x400560c	          0x83cd08	                               or ebp, 8	      9486	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_7
0x400560f	    0x488b05000000	            mov rax, qword [0x04005616] 	      9495	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_10
0x4005616	    0x488b15000000	            mov rdx, qword [0x0400561d] 	      9495	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_10
0x400561d	    0x488b80e01100	          mov rax, qword [rax + 0x11e0] 	      9495	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_10
0x4005624	      0xbeffffffff	                     mov esi, 0xffffffff	      9491	normal.c	FUNCTION_135	ELSE_2	IF_4
0x4005629	        0x48394238	            cmp qword [rdx + 0x38], rax 	      9495	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_10
0x400562d	            0x7d31	                           jge 0x4005660	      9495	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_10
0x400562f	            0xeb2a	                           jmp 0x400565b	      9495	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_10
0x4005631	          0x83f876	                           cmp eax, 0x76	      9487	normal.c	FUNCTION_135	ELSE_2	IF_4	ELSE_3	IF_8
0x4005634	     0xf8565010000	                           jne 0x400579f	      9487	normal.c	FUNCTION_135	ELSE_2	IF_4	ELSE_3	IF_8
0x400563a	          0x83cd10	                            or ebp, 0x10	      9488	normal.c	FUNCTION_135	ELSE_2	IF_4	ELSE_3	IF_8
0x400563d	      0xbeffffffff	                     mov esi, 0xffffffff	      9491	normal.c	FUNCTION_135	ELSE_2	IF_4
0x4005642	    0x488b05000000	            mov rax, qword [0x04005649] 	      9493	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_10
0x4005649	    0x488b15000000	            mov rdx, qword [0x04005650] 	      9493	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_10
0x4005650	    0x8b80e8110000	          mov eax, dword [rax + 0x11e8] 	      9493	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_10
0x4005656	          0x394240	            cmp dword [rdx + 0x40], eax 	      9493	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_10
0x4005659	            0x7d05	                           jge 0x4005660	      9493	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_10
0x400565b	      0xbe01000000	                              mov esi, 1	      9498	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_10
0x4005660	    0xc70500000000	               mov dword [0x0400566a], 1	      9500	normal.c	FUNCTION_135	ELSE_2	IF_4
0x400566a	        0x488b5330	            mov rdx, qword [rbx + 0x30] 	      9502	normal.c	FUNCTION_135	ELSE_2	CALL_12
0x400566e	          0x488b03	                    mov rax, qword [rbx]	      9502	normal.c	FUNCTION_135	ELSE_2	CALL_12
0x4005671	          0x8b7804	                mov edi, dword [rax + 4]	      9502	normal.c	FUNCTION_135	ELSE_2	CALL_12
0x4005674	            0x89e9	                            mov ecx, ebp	      9502	normal.c	FUNCTION_135	ELSE_2	CALL_12
0x4005676	      0xe800000000	                          call 0x400567b	      9502	normal.c	FUNCTION_135	ELSE_2	CALL_12
0x400567b	          0x4d85f6	                           test r14, r14	      9505	normal.c	FUNCTION_135	ELSE_2	IF_11
0x400567e	            0x740c	                            je 0x400568c	      9505	normal.c	FUNCTION_135	ELSE_2	IF_11
0x4005680	          0x4c89f6	                            mov rsi, r14	      9506	normal.c	FUNCTION_135	ELSE_2	CALL_13
0x4005683	        0x8b7c2404	                mov edi, dword [rsp + 4]	      9506	normal.c	FUNCTION_135	ELSE_2	CALL_13
0x4005687	      0xe800000000	                          call 0x400568c	      9506	normal.c	FUNCTION_135	ELSE_2	CALL_13
0x400568c	    0x488b3d000000	            mov rdi, qword [0x04005693] 	      9512	normal.c	FUNCTION_135	ELSE_2	IF_12
0x4005693	    0x488b87e01100	          mov rax, qword [rdi + 0x11e0] 	      9512	normal.c	FUNCTION_135	ELSE_2	IF_12
0x400569a	    0x488b97e81100	          mov rdx, qword [rdi + 0x11e8] 	      9512	normal.c	FUNCTION_135	ELSE_2	IF_12
0x40056a1	    0x488987f80200	            mov qword [rdi + 0x2f8], rax	      9512	normal.c	FUNCTION_135	ELSE_2	IF_12
0x40056a8	    0x488997000300	            mov qword [rdi + 0x300], rdx	      9512	normal.c	FUNCTION_135	ELSE_2	IF_12
0x40056af	    0x488b87001200	          mov rax, qword [rdi + 0x1200] 	      9513	normal.c	FUNCTION_135	ELSE_2	IF_12
0x40056b6	    0x488b97081200	          mov rdx, qword [rdi + 0x1208] 	      9513	normal.c	FUNCTION_135	ELSE_2	IF_12
0x40056bd	    0x488987080300	            mov qword [rdi + 0x308], rax	      9513	normal.c	FUNCTION_135	ELSE_2	IF_12
0x40056c4	    0x488997100300	            mov qword [rdi + 0x310], rdx	      9513	normal.c	FUNCTION_135	ELSE_2	IF_12
0x40056cb	    0x488b05000000	            mov rax, qword [0x040056d2] 	      9515	normal.c	FUNCTION_135	ELSE_2	IF_12	IF_13
0x40056d2	          0x803865	                    cmp byte [rax], 0x65	      9515	normal.c	FUNCTION_135	ELSE_2	IF_12	IF_13
0x40056d5	            0x750c	                           jne 0x40056e3	      9515	normal.c	FUNCTION_135	ELSE_2	IF_12	IF_13
0x40056d7	    0x4881c7080300	                          add rdi, 0x308	      9516	normal.c	FUNCTION_135	ELSE_2	IF_12	CALL_14
0x40056de	      0xe800000000	                          call 0x40056e3	      9516	normal.c	FUNCTION_135	ELSE_2	IF_12	CALL_14
0x40056e3	          0x4585ed	                         test r13d, r13d	      9521	normal.c	FUNCTION_135	ELSE_2	IF_14	CALL_15
0x40056e6	            0x744d	                            je 0x4005735	      9521	normal.c	FUNCTION_135	ELSE_2	IF_14	CALL_15
0x40056e8	    0x488b05000000	            mov rax, qword [0x040056ef] 	      9521	normal.c	FUNCTION_135	ELSE_2	IF_14	CALL_15
0x40056ef	          0x488b38	                    mov rdi, qword [rax]	      9521	normal.c	FUNCTION_135	ELSE_2	IF_14	CALL_15
0x40056f2	      0xe800000000	                          call 0x40056f7	      9521	normal.c	FUNCTION_135	ELSE_2	IF_14	CALL_15
0x40056f7	          0x803800	                       cmp byte [rax], 0	      9521	normal.c	FUNCTION_135	ELSE_2	IF_14	CALL_15
0x40056fa	            0x7539	                           jne 0x4005735	      9521	normal.c	FUNCTION_135	ELSE_2	IF_14	CALL_15
0x40056fc	      0xbe01000000	                              mov esi, 1	      9523	normal.c	FUNCTION_135	ELSE_2	IF_14	CALL_16
0x4005701	    0x488b05000000	            mov rax, qword [0x04005708] 	      9523	normal.c	FUNCTION_135	ELSE_2	IF_14	CALL_16
0x4005708	          0x488b38	                    mov rdi, qword [rax]	      9523	normal.c	FUNCTION_135	ELSE_2	IF_14	CALL_16
0x400570b	      0xe800000000	                          call 0x4005710	      9523	normal.c	FUNCTION_135	ELSE_2	IF_14	CALL_16
0x4005710	    0x488b05000000	            mov rax, qword [0x04005717] 	      9527	normal.c	FUNCTION_135	ELSE_2	IF_14	IF_15
0x4005717	    0x488b15000000	            mov rdx, qword [0x0400571e] 	      9527	normal.c	FUNCTION_135	ELSE_2	IF_14	IF_15
0x400571e	          0x488b12	                    mov rdx, qword [rdx]	      9527	normal.c	FUNCTION_135	ELSE_2	IF_14	IF_15
0x4005721	        0x48395038	            cmp qword [rax + 0x38], rdx 	      9527	normal.c	FUNCTION_135	ELSE_2	IF_14	IF_15
0x4005725	            0x7e0e	                           jle 0x4005735	      9527	normal.c	FUNCTION_135	ELSE_2	IF_14	IF_15
0x4005727	        0x48895038	             mov qword [rax + 0x38], rdx	      9529	normal.c	FUNCTION_135	ELSE_2	IF_14	IF_15
0x400572b	      0xbfffffff7f	                     mov edi, 0x7fffffff	      9530	normal.c	FUNCTION_135	ELSE_2	IF_14	IF_15	CALL_17
0x4005730	      0xe800000000	                          call 0x4005735	      9530	normal.c	FUNCTION_135	ELSE_2	IF_14	IF_15	CALL_17
0x4005735	      0xbe01000000	                              mov esi, 1	      9533	normal.c	FUNCTION_135	ELSE_2	CALL_18
0x400573a	      0xbf00000000	                              mov edi, 0	      9533	normal.c	FUNCTION_135	ELSE_2	CALL_18
0x400573f	      0xe800000000	                          call 0x4005744	      9533	normal.c	FUNCTION_135	ELSE_2	CALL_18
0x4005744	      0xe994000000	                           jmp 0x40057dd	      9535	normal.c	FUNCTION_135
0x4005749	    0xc7430c640000	            mov dword [rbx + 0xc], 0x64 	      9464	normal.c	FUNCTION_135	ELSE_2	IF_4
0x4005750	    0xc74310000000	               mov dword [rbx + 0x10], 0	      9465	normal.c	FUNCTION_135	ELSE_2	IF_4
0x4005757	          0x488b03	                    mov rax, qword [rbx]	      9466	normal.c	FUNCTION_135	ELSE_2	IF_4
0x400575a	    0xc74004000000	                  mov dword [rax + 4], 0	      9466	normal.c	FUNCTION_135	ELSE_2	IF_4
0x4005761	          0x4889df	                            mov rdi, rbx	      9467	normal.c	FUNCTION_135	ELSE_2	IF_4	CALL_8
0x4005764	      0xe8f5c3ffff	                    call sym.nv_operator	      9467	normal.c	FUNCTION_135	ELSE_2	IF_4	CALL_8
0x4005769	      0xba00000000	                              mov edx, 0	      9468	normal.c	FUNCTION_135	ELSE_2	IF_4	CALL_9
0x400576e	      0xbe00000000	                              mov esi, 0	      9468	normal.c	FUNCTION_135	ELSE_2	IF_4	CALL_9
0x4005773	          0x4889df	                            mov rdi, rbx	      9468	normal.c	FUNCTION_135	ELSE_2	IF_4	CALL_9
0x4005776	      0xe800000000	                          call 0x400577b	      9468	normal.c	FUNCTION_135	ELSE_2	IF_4	CALL_9
0x400577b	    0x488b05000000	            mov rax, qword [0x04005782] 	      9469	normal.c	FUNCTION_135	ELSE_2	IF_4
0x4005782	        0x448b6810	           mov r13d, dword [rax + 0x10] 	      9469	normal.c	FUNCTION_135	ELSE_2	IF_4
0x4005786	        0x4183e501	                             and r13d, 1	      9469	normal.c	FUNCTION_135	ELSE_2	IF_4
0x400578a	          0x488b03	                    mov rax, qword [rbx]	      9472	normal.c	FUNCTION_135	ELSE_2	IF_4
0x400578d	        0x8b542404	                mov edx, dword [rsp + 4]	      9472	normal.c	FUNCTION_135	ELSE_2	IF_4
0x4005791	          0x895004	                mov dword [rax + 4], edx	      9472	normal.c	FUNCTION_135	ELSE_2	IF_4
0x4005794	    0x41be00000000	                             mov r14d, 0	      9410	normal.c	FUNCTION_135
0x400579a	      0xe962feffff	                           jmp 0x4005601	      9410	normal.c	FUNCTION_135
0x400579f	        0x4183fc01	                             cmp r12d, 1	      9489	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_9
0x40057a3	     0xf8594feffff	                           jne 0x400563d	      9489	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_9
0x40057a9	          0x83f816	                           cmp eax, 0x16	      9489	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_9
0x40057ac	           0xf94c2	                                 sete dl	      9489	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_9
0x40057af	            0x89e8	                            mov eax, ebp	      9490	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_9
0x40057b1	          0x83c820	                            or eax, 0x20	      9490	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_9
0x40057b4	            0x84d2	                             test dl, dl	      9490	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_9
0x40057b6	           0xf45e8	                         cmovne ebp, eax	      9490	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_9
0x40057b9	      0xe97ffeffff	                           jmp 0x400563d	      9490	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_9
0x40057be	        0x488b5330	            mov rdx, qword [rbx + 0x30] 	      9502	normal.c	FUNCTION_135	ELSE_2	CALL_12
0x40057c2	          0x488b03	                    mov rax, qword [rbx]	      9502	normal.c	FUNCTION_135	ELSE_2	CALL_12
0x40057c5	          0x8b7804	                mov edi, dword [rax + 4]	      9502	normal.c	FUNCTION_135	ELSE_2	CALL_12
0x40057c8	            0x89e9	                            mov ecx, ebp	      9502	normal.c	FUNCTION_135	ELSE_2	CALL_12
0x40057ca	          0x4489e6	                           mov esi, r12d	      9502	normal.c	FUNCTION_135	ELSE_2	CALL_12
0x40057cd	      0xe800000000	                          call 0x40057d2	      9502	normal.c	FUNCTION_135	ELSE_2	CALL_12
0x40057d2	    0x41bd00000000	                             mov r13d, 0	      9411	normal.c	FUNCTION_135
0x40057d8	      0xe906ffffff	                           jmp 0x40056e3	      9411	normal.c	FUNCTION_135
0x40057dd	      0x488b442408	                mov rax, qword [rsp + 8]	      9535	normal.c	FUNCTION_135
0x40057e2	    0x644833042528	                xor rax, qword fs:[0x28]	      9535	normal.c	FUNCTION_135
0x40057eb	            0x7405	                            je 0x40057f2	      9535	normal.c	FUNCTION_135
0x40057ed	      0xe800000000	                          call 0x40057f2	      9535	normal.c	FUNCTION_135
0x40057f2	        0x4883c418	                           add rsp, 0x18	      9535	normal.c	FUNCTION_135
0x40057f6	              0x5b	                                 pop rbx	      9535	normal.c	FUNCTION_135
0x40057f7	              0x5d	                                 pop rbp	      9535	normal.c	FUNCTION_135
0x40057f8	            0x415c	                                 pop r12	      9535	normal.c	FUNCTION_135
0x40057fa	            0x415d	                                 pop r13	      9535	normal.c	FUNCTION_135
0x40057fc	            0x415e	                                 pop r14	      9535	normal.c	FUNCTION_135
0x40057fe	            0x415f	                                 pop r15	      9535	normal.c	FUNCTION_135
0x4005800	              0xc3	                                     ret	      9535	normal.c	FUNCTION_135
set_op_var	CALL,4:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,1:IF,1	30
0x400184e	              0x53	                                push rbx	      8607	normal.c	FUNCTION_114
0x400184f	        0x4883ec10	                           sub rsp, 0x10	      8607	normal.c	FUNCTION_114
0x4001853	    0x64488b042528	                mov rax, qword fs:[0x28]	      8607	normal.c	FUNCTION_114
0x400185c	      0x4889442408	                mov qword [rsp + 8], rax	      8607	normal.c	FUNCTION_114
0x4001861	            0x31c0	                            xor eax, eax	      8607	normal.c	FUNCTION_114
0x4001863	            0x85ff	                           test edi, edi	      8610	normal.c	FUNCTION_114	IF_1
0x4001865	            0x7516	                           jne 0x400187d	      8610	normal.c	FUNCTION_114	IF_1
0x4001867	      0xba00000000	                              mov edx, 0	      8611	normal.c	FUNCTION_114	CALL_1
0x400186c	      0xbe00000000	                              mov esi, 0	      8611	normal.c	FUNCTION_114	CALL_1
0x4001871	      0xbf36000000	                           mov edi, 0x36	      8611	normal.c	FUNCTION_114	CALL_1
0x4001876	      0xe800000000	                          call 0x400187b	      8611	normal.c	FUNCTION_114	CALL_1
0x400187b	            0xeb2c	                           jmp 0x40018a9	      8611	normal.c	FUNCTION_114	CALL_1
0x400187d	            0x89fb	                            mov ebx, edi	      8611	normal.c	FUNCTION_114	CALL_1
0x400187f	      0xe800000000	                          call 0x4001884	      8614	normal.c	FUNCTION_114	ELSE_1	CALL_2
0x4001884	          0x880424	                      mov byte [rsp], al	      8614	normal.c	FUNCTION_114	ELSE_1	CALL_2
0x4001887	            0x89df	                            mov edi, ebx	      8615	normal.c	FUNCTION_114	ELSE_1	CALL_3
0x4001889	      0xe800000000	                          call 0x400188e	      8615	normal.c	FUNCTION_114	ELSE_1	CALL_3
0x400188e	        0x88442401	                  mov byte [rsp + 1], al	      8615	normal.c	FUNCTION_114	ELSE_1	CALL_3
0x4001892	      0xc644240200	                   mov byte [rsp + 2], 0	      8616	normal.c	FUNCTION_114	ELSE_1
0x4001897	      0xbaffffffff	                     mov edx, 0xffffffff	      8617	normal.c	FUNCTION_114	ELSE_1	CALL_4
0x400189c	          0x4889e6	                            mov rsi, rsp	      8617	normal.c	FUNCTION_114	ELSE_1	CALL_4
0x400189f	      0xbf36000000	                           mov edi, 0x36	      8617	normal.c	FUNCTION_114	ELSE_1	CALL_4
0x40018a4	      0xe800000000	                          call 0x40018a9	      8617	normal.c	FUNCTION_114	ELSE_1	CALL_4
0x40018a9	      0x488b442408	                mov rax, qword [rsp + 8]	      8619	normal.c	FUNCTION_114
0x40018ae	    0x644833042528	                xor rax, qword fs:[0x28]	      8619	normal.c	FUNCTION_114
0x40018b7	            0x7405	                            je 0x40018be	      8619	normal.c	FUNCTION_114
0x40018b9	      0xe800000000	                          call 0x40018be	      8619	normal.c	FUNCTION_114
0x40018be	        0x4883c410	                           add rsp, 0x10	      8619	normal.c	FUNCTION_114
0x40018c2	              0x5b	                                 pop rbx	      8619	normal.c	FUNCTION_114
0x40018c3	              0xc3	                                     ret	      8619	normal.c	FUNCTION_114
find_decl	CALL,17:SWITCH,0:DO,0:FOR,1:functions,0:WHILE,1:ELSE,3:IF,14	299
0x40069d7	            0x4157	                                push r15	      4299	normal.c	FUNCTION_45
0x40069d9	            0x4156	                                push r14	      4299	normal.c	FUNCTION_45
0x40069db	            0x4155	                                push r13	      4299	normal.c	FUNCTION_45
0x40069dd	            0x4154	                                push r12	      4299	normal.c	FUNCTION_45
0x40069df	              0x55	                                push rbp	      4299	normal.c	FUNCTION_45
0x40069e0	              0x53	                                push rbx	      4299	normal.c	FUNCTION_45
0x40069e1	        0x4883ec48	                           sub rsp, 0x48	      4299	normal.c	FUNCTION_45
0x40069e5	          0x4989fe	                            mov r14, rdi	      4299	normal.c	FUNCTION_45
0x40069e8	          0x4189f5	                           mov r13d, esi	      4299	normal.c	FUNCTION_45
0x40069eb	          0x4189d4	                           mov r12d, edx	      4299	normal.c	FUNCTION_45
0x40069ee	        0x894c240c	              mov dword [rsp + 0xc], ecx	      4299	normal.c	FUNCTION_45
0x40069f2	          0x4489c5	                            mov ebp, r8d	      4299	normal.c	FUNCTION_45
0x40069f5	    0x64488b042528	                mov rax, qword fs:[0x28]	      4299	normal.c	FUNCTION_45
0x40069fe	      0x4889442438	             mov qword [rsp + 0x38], rax	      4299	normal.c	FUNCTION_45
0x4006a03	            0x31c0	                            xor eax, eax	      4299	normal.c	FUNCTION_45
0x4006a05	          0x8d7e07	                      lea edi, [rsi + 7]	      4312	normal.c	FUNCTION_45	IF_1	CALL_1
0x4006a08	      0xe800000000	                          call 0x4006a0d	      4312	normal.c	FUNCTION_45	IF_1	CALL_1
0x4006a0d	          0x4889c3	                            mov rbx, rax	      4312	normal.c	FUNCTION_45	IF_1	CALL_1
0x4006a10	      0xb800000000	                              mov eax, 0	      4313	normal.c	FUNCTION_45	IF_1
0x4006a15	          0x4885db	                           test rbx, rbx	      4312	normal.c	FUNCTION_45	IF_1	CALL_1
0x4006a18	     0xf84c3030000	                            je 0x4006de1	      4312	normal.c	FUNCTION_45	IF_1	CALL_1
0x4006a1e	          0x4c89f7	                            mov rdi, r14	      4317	normal.c	FUNCTION_45	CALL_3
0x4006a21	      0xe800000000	                          call 0x4006a26	      4317	normal.c	FUNCTION_45	CALL_3
0x4006a26	            0x85c0	                           test eax, eax	      4317	normal.c	FUNCTION_45	CALL_3
0x4006a28	      0xb900000000	                              mov ecx, 0	      4317	normal.c	FUNCTION_45	CALL_3
0x4006a2d	      0xb800000000	                              mov eax, 0	      4317	normal.c	FUNCTION_45	CALL_3
0x4006a32	        0x480f45c8	                         cmovne rcx, rax	      4317	normal.c	FUNCTION_45	CALL_3
0x4006a36	          0x4d89f1	                             mov r9, r14	        33	stdio2.h	FUNCTION_153	CALL_2
0x4006a39	          0x4589e8	                           mov r8d, r13d	        33	stdio2.h	FUNCTION_153	CALL_2
0x4006a3c	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_153	CALL_2
0x4006a43	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_153	CALL_2
0x4006a48	          0x4889df	                            mov rdi, rbx	        33	stdio2.h	FUNCTION_153	CALL_2
0x4006a4b	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_153	CALL_2
0x4006a50	      0xe800000000	                          call 0x4006a55	        33	stdio2.h	FUNCTION_153	CALL_2
0x4006a55	    0x488b05000000	            mov rax, qword [0x04006a5c] 	      4319	normal.c	FUNCTION_45
0x4006a5c	        0x4c8b7038	            mov r14, qword [rax + 0x38] 	      4319	normal.c	FUNCTION_45
0x4006a60	          0x8b7040	            mov esi, dword [rax + 0x40] 	      4319	normal.c	FUNCTION_45
0x4006a63	        0x8974242c	             mov dword [rsp + 0x2c], esi	      4319	normal.c	FUNCTION_45
0x4006a67	          0x8b4044	            mov eax, dword [rax + 0x44] 	      4319	normal.c	FUNCTION_45
0x4006a6a	        0x89442428	             mov dword [rsp + 0x28], eax	      4319	normal.c	FUNCTION_45
0x4006a6e	    0x8b0500000000	            mov eax, dword [0x04006a74] 	      4320	normal.c	FUNCTION_45
0x4006a74	        0x89442420	             mov dword [rsp + 0x20], eax	      4320	normal.c	FUNCTION_45
0x4006a78	    0x8b0500000000	            mov eax, dword [0x04006a7e] 	      4321	normal.c	FUNCTION_45
0x4006a7e	        0x89442424	             mov dword [rsp + 0x24], eax	      4321	normal.c	FUNCTION_45
0x4006a82	    0xc70500000000	               mov dword [0x04006a8c], 0	      4322	normal.c	FUNCTION_45
0x4006a8c	    0xc70500000000	               mov dword [0x04006a96], 0	      4323	normal.c	FUNCTION_45
0x4006a96	          0x4585e4	                         test r12d, r12d	      4330	normal.c	FUNCTION_45	IF_2	CALL_4
0x4006a99	            0x7423	                            je 0x4006abe	      4330	normal.c	FUNCTION_45	IF_2	CALL_4
0x4006a9b	    0x41b800000000	                              mov r8d, 0	      4330	normal.c	FUNCTION_45	IF_2	CALL_4
0x4006aa1	      0xb97b000000	                           mov ecx, 0x7b	      4330	normal.c	FUNCTION_45	IF_2	CALL_4
0x4006aa6	      0xba01000000	                              mov edx, 1	      4330	normal.c	FUNCTION_45	IF_2	CALL_4
0x4006aab	      0xbeffffffff	                     mov esi, 0xffffffff	      4330	normal.c	FUNCTION_45	IF_2	CALL_4
0x4006ab0	      0x488d7c2434	                   lea rdi, [rsp + 0x34]	      4330	normal.c	FUNCTION_45	IF_2	CALL_4
0x4006ab5	      0xe800000000	                          call 0x4006aba	      4330	normal.c	FUNCTION_45	IF_2	CALL_4
0x4006aba	            0x85c0	                           test eax, eax	      4330	normal.c	FUNCTION_45	IF_2	CALL_4
0x4006abc	            0x751f	                           jne 0x4006add	      4330	normal.c	FUNCTION_45	IF_2	CALL_4
0x4006abe	      0xe800000000	                          call 0x4006ac3	      4332	normal.c	FUNCTION_45	IF_2	CALL_5
0x4006ac3	    0x488b05000000	            mov rax, qword [0x04006aca] 	      4333	normal.c	FUNCTION_45	IF_2
0x4006aca	    0x48c740380100	               mov qword [rax + 0x38], 1	      4333	normal.c	FUNCTION_45	IF_2
0x4006ad2	    0x48c744241801	               mov qword [rsp + 0x18], 1	      4334	normal.c	FUNCTION_45	IF_2
0x4006adb	            0xeb43	                           jmp 0x4006b20	      4334	normal.c	FUNCTION_45	IF_2
0x4006add	    0x488b05000000	            mov rax, qword [0x04006ae4] 	      4338	normal.c	FUNCTION_45	ELSE_1
0x4006ae4	        0x488b7038	            mov rsi, qword [rax + 0x38] 	      4338	normal.c	FUNCTION_45	ELSE_1
0x4006ae8	      0x4889742418	             mov qword [rsp + 0x18], rsi	      4338	normal.c	FUNCTION_45	ELSE_1
0x4006aed	        0x4883fe01	                              cmp rsi, 1	      4339	normal.c	FUNCTION_45	ELSE_1	WHILE_1	CALL_7
0x4006af1	            0x7f1b	                            jg 0x4006b0e	      4339	normal.c	FUNCTION_45	ELSE_1	WHILE_1	CALL_7
0x4006af3	            0xeb2b	                           jmp 0x4006b20	      4339	normal.c	FUNCTION_45	ELSE_1	WHILE_1	CALL_7
0x4006af5	    0x488b15000000	            mov rdx, qword [0x04006afc] 	      4340	normal.c	FUNCTION_45	ELSE_1	WHILE_1
0x4006afc	        0x488b4238	            mov rax, qword [rdx + 0x38] 	      4340	normal.c	FUNCTION_45	ELSE_1	WHILE_1
0x4006b00	        0x4883e801	                              sub rax, 1	      4340	normal.c	FUNCTION_45	ELSE_1	WHILE_1
0x4006b04	        0x48894238	             mov qword [rdx + 0x38], rax	      4340	normal.c	FUNCTION_45	ELSE_1	WHILE_1
0x4006b08	        0x4883f801	                              cmp rax, 1	      4339	normal.c	FUNCTION_45	ELSE_1	WHILE_1	CALL_7
0x4006b0c	            0x7e12	                           jle 0x4006b20	      4339	normal.c	FUNCTION_45	ELSE_1	WHILE_1	CALL_7
0x4006b0e	      0xe800000000	                          call 0x4006b13	      4339	normal.c	FUNCTION_45	ELSE_1	WHILE_1	CALL_7
0x4006b13	          0x4889c7	                            mov rdi, rax	      4339	normal.c	FUNCTION_45	ELSE_1	WHILE_1	CALL_7
0x4006b16	      0xe800000000	                          call 0x4006b1b	      4339	normal.c	FUNCTION_45	ELSE_1	WHILE_1	CALL_7
0x4006b1b	          0x803800	                       cmp byte [rax], 0	      4339	normal.c	FUNCTION_45	ELSE_1	WHILE_1	CALL_7
0x4006b1e	            0x75d5	                           jne 0x4006af5	      4339	normal.c	FUNCTION_45	ELSE_1	WHILE_1	CALL_7
0x4006b20	    0x488b05000000	            mov rax, qword [0x04006b27] 	      4342	normal.c	FUNCTION_45
0x4006b27	    0xc74040000000	               mov dword [rax + 0x40], 0	      4342	normal.c	FUNCTION_45
0x4006b2e	    0xc74424100000	               mov dword [rsp + 0x10], 0	      4345	normal.c	FUNCTION_45	CALL_8
0x4006b36	    0xc74424140000	               mov dword [rsp + 0x14], 0	      4345	normal.c	FUNCTION_45	CALL_8
0x4006b3e	    0x41bf00000000	                             mov r15d, 0	      4345	normal.c	FUNCTION_45	CALL_8
0x4006b44	    0x488b3d000000	            mov rdi, qword [0x04006b4b] 	      4349	normal.c	FUNCTION_45	FOR_1	CALL_9
0x4006b4b	        0x488d5738	                   lea rdx, [rdi + 0x38]	      4349	normal.c	FUNCTION_45	FOR_1	CALL_9
0x4006b4f	        0x4883ec08	                              sub rsp, 8	      4349	normal.c	FUNCTION_45	FOR_1	CALL_9
0x4006b53	            0x6a00	                                  push 0	      4349	normal.c	FUNCTION_45	FOR_1	CALL_9
0x4006b55	            0x6a00	                                  push 0	      4349	normal.c	FUNCTION_45	FOR_1	CALL_9
0x4006b57	            0x6a00	                                  push 0	      4349	normal.c	FUNCTION_45	FOR_1	CALL_9
0x4006b59	            0x6a02	                                  push 2	      4349	normal.c	FUNCTION_45	FOR_1	CALL_9
0x4006b5b	              0x55	                                push rbp	      4349	normal.c	FUNCTION_45	FOR_1	CALL_9
0x4006b5c	    0x41b901000000	                              mov r9d, 1	      4349	normal.c	FUNCTION_45	FOR_1	CALL_9
0x4006b62	          0x4989d8	                             mov r8, rbx	      4349	normal.c	FUNCTION_45	FOR_1	CALL_9
0x4006b65	      0xb901000000	                              mov ecx, 1	      4349	normal.c	FUNCTION_45	FOR_1	CALL_9
0x4006b6a	    0x488b35000000	            mov rsi, qword [0x04006b71] 	      4349	normal.c	FUNCTION_45	FOR_1	CALL_9
0x4006b71	      0xe800000000	                          call 0x4006b76	      4349	normal.c	FUNCTION_45	FOR_1	CALL_9
0x4006b76	          0x4189c5	                           mov r13d, eax	      4349	normal.c	FUNCTION_45	FOR_1	CALL_9
0x4006b79	    0x488b05000000	            mov rax, qword [0x04006b80] 	      4351	normal.c	FUNCTION_45	FOR_1	IF_3
0x4006b80	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4351	normal.c	FUNCTION_45	FOR_1	IF_3
0x4006b84	        0x4883c430	                           add rsp, 0x30	      4351	normal.c	FUNCTION_45	FOR_1	IF_3
0x4006b88	          0x4c39f0	                            cmp rax, r14	      4351	normal.c	FUNCTION_45	FOR_1	IF_3
0x4006b8b	            0x7d52	                           jge 0x4006bdf	      4351	normal.c	FUNCTION_45	FOR_1	IF_3
0x4006b8d	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      4354	normal.c	FUNCTION_45	FOR_1	IF_4
0x4006b92	            0x7446	                            je 0x4006bda	      4354	normal.c	FUNCTION_45	FOR_1	IF_4
0x4006b94	          0x4585ed	                         test r13d, r13d	      4354	normal.c	FUNCTION_45	FOR_1	IF_4
0x4006b97	            0x7441	                            je 0x4006bda	      4354	normal.c	FUNCTION_45	FOR_1	IF_4
0x4006b99	          0x4489f1	                           mov ecx, r14d	      4360	normal.c	FUNCTION_45	FOR_1	IF_4	IF_5	CALL_10
0x4006b9c	            0x29c1	                            sub ecx, eax	      4360	normal.c	FUNCTION_45	FOR_1	IF_4	IF_5	CALL_10
0x4006b9e	          0x83c101	                              add ecx, 1	      4360	normal.c	FUNCTION_45	FOR_1	IF_4	IF_5	CALL_10
0x4006ba1	      0xba02000000	                              mov edx, 2	      4360	normal.c	FUNCTION_45	FOR_1	IF_4	IF_5	CALL_10
0x4006ba6	      0xbe7d000000	                           mov esi, 0x7d	      4360	normal.c	FUNCTION_45	FOR_1	IF_4	IF_5	CALL_10
0x4006bab	      0xbf00000000	                              mov edi, 0	      4360	normal.c	FUNCTION_45	FOR_1	IF_4	IF_5	CALL_10
0x4006bb0	      0xe800000000	                          call 0x4006bb5	      4360	normal.c	FUNCTION_45	FOR_1	IF_4	IF_5	CALL_10
0x4006bb5	          0x4885c0	                           test rax, rax	      4360	normal.c	FUNCTION_45	FOR_1	IF_4	IF_5	CALL_10
0x4006bb8	            0x7420	                            je 0x4006bda	      4360	normal.c	FUNCTION_45	FOR_1	IF_4	IF_5	CALL_10
0x4006bba	          0x4c3930	                    cmp qword [rax], r14	      4362	normal.c	FUNCTION_45	FOR_1	IF_4	IF_5
0x4006bbd	            0x7d1b	                           jge 0x4006bda	      4362	normal.c	FUNCTION_45	FOR_1	IF_4	IF_5
0x4006bbf	          0x488b30	                    mov rsi, qword [rax]	      4366	normal.c	FUNCTION_45	FOR_1	IF_4	IF_5
0x4006bc2	        0x488b7808	                mov rdi, qword [rax + 8]	      4366	normal.c	FUNCTION_45	FOR_1	IF_4	IF_5
0x4006bc6	    0x488b05000000	            mov rax, qword [0x04006bcd] 	      4366	normal.c	FUNCTION_45	FOR_1	IF_4	IF_5
0x4006bcd	        0x48897038	             mov qword [rax + 0x38], rsi	      4366	normal.c	FUNCTION_45	FOR_1	IF_4	IF_5
0x4006bd1	        0x48897840	             mov qword [rax + 0x40], rdi	      4366	normal.c	FUNCTION_45	FOR_1	IF_4	IF_5
0x4006bd5	      0xe96affffff	                           jmp 0x4006b44	      4367	normal.c	FUNCTION_45	FOR_1	IF_4	IF_5
0x4006bda	          0x4585ed	                         test r13d, r13d	      4371	normal.c	FUNCTION_45	FOR_1	IF_6
0x4006bdd	            0x7527	                           jne 0x4006c06	      4371	normal.c	FUNCTION_45	FOR_1	IF_6
0x4006bdf	          0x4d85ff	                           test r15, r15	      4374	normal.c	FUNCTION_45	FOR_1	IF_6	IF_7
0x4006be2	     0xf8426020000	                            je 0x4006e0e	      4374	normal.c	FUNCTION_45	FOR_1	IF_6	IF_7
0x4006be8	    0x488b05000000	            mov rax, qword [0x04006bef] 	      4376	normal.c	FUNCTION_45	FOR_1	IF_6	IF_7
0x4006bef	        0x4c897838	             mov qword [rax + 0x38], r15	      4376	normal.c	FUNCTION_45	FOR_1	IF_6	IF_7
0x4006bf3	        0x8b742414	            mov esi, dword [rsp + 0x14] 	      4376	normal.c	FUNCTION_45	FOR_1	IF_6	IF_7
0x4006bf7	          0x897040	             mov dword [rax + 0x40], esi	      4376	normal.c	FUNCTION_45	FOR_1	IF_6	IF_7
0x4006bfa	        0x8b742410	            mov esi, dword [rsp + 0x10] 	      4376	normal.c	FUNCTION_45	FOR_1	IF_6	IF_7
0x4006bfe	          0x897044	             mov dword [rax + 0x44], esi	      4376	normal.c	FUNCTION_45	FOR_1	IF_6	IF_7
0x4006c01	      0xe928020000	                           jmp 0x4006e2e	      4376	normal.c	FUNCTION_45	FOR_1	IF_6	IF_7
0x4006c06	      0xe800000000	                          call 0x4006c0b	      4382	normal.c	FUNCTION_45	FOR_1	IF_8	CALL_12
0x4006c0b	      0xb901000000	                              mov ecx, 1	      4382	normal.c	FUNCTION_45	FOR_1	IF_8	CALL_12
0x4006c10	      0xba00000000	                              mov edx, 0	      4382	normal.c	FUNCTION_45	FOR_1	IF_8	CALL_12
0x4006c15	      0xbe00000000	                              mov esi, 0	      4382	normal.c	FUNCTION_45	FOR_1	IF_8	CALL_12
0x4006c1a	          0x4889c7	                            mov rdi, rax	      4382	normal.c	FUNCTION_45	FOR_1	IF_8	CALL_12
0x4006c1d	      0xe800000000	                          call 0x4006c22	      4382	normal.c	FUNCTION_45	FOR_1	IF_8	CALL_12
0x4006c22	            0x85c0	                           test eax, eax	      4382	normal.c	FUNCTION_45	FOR_1	IF_8	CALL_12
0x4006c24	            0x7e18	                           jle 0x4006c3e	      4382	normal.c	FUNCTION_45	FOR_1	IF_8	CALL_12
0x4006c26	    0x488b05000000	            mov rax, qword [0x04006c2d] 	      4385	normal.c	FUNCTION_45	FOR_1	IF_8
0x4006c2d	      0x4883403801	               add qword [rax + 0x38], 1	      4385	normal.c	FUNCTION_45	FOR_1	IF_8
0x4006c32	    0xc74040000000	               mov dword [rax + 0x40], 0	      4386	normal.c	FUNCTION_45	FOR_1	IF_8
0x4006c39	      0xe906ffffff	                           jmp 0x4006b44	      4387	normal.c	FUNCTION_45	FOR_1	IF_8
0x4006c3e	    0x488b05000000	            mov rax, qword [0x04006c45] 	      4390	normal.c	FUNCTION_45	FOR_1	CALL_14
0x4006c45	        0x448b6840	           mov r13d, dword [rax + 0x40] 	      4390	normal.c	FUNCTION_45	FOR_1	CALL_14
0x4006c49	      0xe800000000	                          call 0x4006c4e	      4390	normal.c	FUNCTION_45	FOR_1	CALL_14
0x4006c4e	          0x4585ed	                         test r13d, r13d	      4251	normal.c	FUNCTION_44	FOR_1
0x4006c51	     0xf8ef4010000	                           jle 0x4006e4b	      4251	normal.c	FUNCTION_44	FOR_1
0x4006c57	           0xfb610	                   movzx edx, byte [rax]	      4251	normal.c	FUNCTION_44	FOR_1
0x4006c5a	            0x84d2	                             test dl, dl	      4251	normal.c	FUNCTION_44	FOR_1
0x4006c5c	     0xf84e9010000	                            je 0x4006e4b	      4251	normal.c	FUNCTION_44	FOR_1
0x4006c62	          0x4889c1	                            mov rcx, rax	      4251	normal.c	FUNCTION_44	FOR_1
0x4006c65	        0x418d75ff	                      lea esi, [r13 - 1]	      4251	normal.c	FUNCTION_44	FOR_1
0x4006c69	          0x4801f0	                            add rax, rsi	      4251	normal.c	FUNCTION_44	FOR_1
0x4006c6c	    0x41b800000000	                              mov r8d, 0	      4251	normal.c	FUNCTION_44	FOR_1
0x4006c72	      0xbf00000000	                              mov edi, 0	      4251	normal.c	FUNCTION_44	FOR_1
0x4006c77	      0xbe00000000	                              mov esi, 0	      4251	normal.c	FUNCTION_44	FOR_1
0x4006c7c	    0x41bb00000000	                             mov r11d, 0	      4267	normal.c	FUNCTION_44	FOR_1	ELSE_2	IF_4	IF_5
0x4006c82	            0x85f6	                           test esi, esi	      4253	normal.c	FUNCTION_44	FOR_1	IF_1
0x4006c84	            0x7410	                            je 0x4006c96	      4253	normal.c	FUNCTION_44	FOR_1	IF_1
0x4006c86	          0x83ff5c	                           cmp edi, 0x5c	      4255	normal.c	FUNCTION_44	FOR_1	IF_1	IF_2
0x4006c89	            0x7468	                            je 0x4006cf3	      4255	normal.c	FUNCTION_44	FOR_1	IF_1	IF_2
0x4006c8b	           0xfb6fa	                           movzx edi, dl	      4255	normal.c	FUNCTION_44	FOR_1	IF_1	IF_2
0x4006c8e	            0x39f7	                            cmp edi, esi	      4256	normal.c	FUNCTION_44	FOR_1	IF_1	IF_2
0x4006c90	        0x410f44f3	                         cmove esi, r11d	      4256	normal.c	FUNCTION_44	FOR_1	IF_1	IF_2
0x4006c94	            0xeb5d	                           jmp 0x4006cf3	      4256	normal.c	FUNCTION_44	FOR_1	IF_1	IF_2
0x4006c96	          0x80fa22	                            cmp dl, 0x22	      4258	normal.c	FUNCTION_44	FOR_1	ELSE_1	IF_3
0x4006c99	        0x410f94c2	                               sete r10b	      4258	normal.c	FUNCTION_44	FOR_1	ELSE_1	IF_3
0x4006c9d	          0x80fa27	                            cmp dl, 0x27	      4258	normal.c	FUNCTION_44	FOR_1	ELSE_1	IF_3
0x4006ca0	        0x410f94c1	                                sete r9b	      4258	normal.c	FUNCTION_44	FOR_1	ELSE_1	IF_3
0x4006ca4	          0x4508ca	                            or r10b, r9b	      4258	normal.c	FUNCTION_44	FOR_1	ELSE_1	IF_3
0x4006ca7	            0x740a	                            je 0x4006cb3	      4258	normal.c	FUNCTION_44	FOR_1	ELSE_1	IF_3
0x4006ca9	          0x4585c0	                           test r8d, r8d	      4258	normal.c	FUNCTION_44	FOR_1	ELSE_1	IF_3
0x4006cac	            0x7505	                           jne 0x4006cb3	      4258	normal.c	FUNCTION_44	FOR_1	ELSE_1	IF_3
0x4006cae	           0xfb6f2	                           movzx esi, dl	      4260	normal.c	FUNCTION_44	FOR_1	ELSE_1	IF_3
0x4006cb1	            0xeb40	                           jmp 0x4006cf3	      4260	normal.c	FUNCTION_44	FOR_1	ELSE_1	IF_3
0x4006cb3	          0x4585c0	                           test r8d, r8d	      4264	normal.c	FUNCTION_44	FOR_1	ELSE_2	IF_4
0x4006cb6	            0x7415	                            je 0x4006ccd	      4264	normal.c	FUNCTION_44	FOR_1	ELSE_2	IF_4
0x4006cb8	          0x80fa2f	                            cmp dl, 0x2f	      4266	normal.c	FUNCTION_44	FOR_1	ELSE_2	IF_4	IF_5
0x4006cbb	            0x7536	                           jne 0x4006cf3	      4266	normal.c	FUNCTION_44	FOR_1	ELSE_2	IF_4	IF_5
0x4006cbd	          0x83ff2a	                           cmp edi, 0x2a	      4266	normal.c	FUNCTION_44	FOR_1	ELSE_2	IF_4	IF_5
0x4006cc0	        0x400f94c7	                                sete dil	      4266	normal.c	FUNCTION_44	FOR_1	ELSE_2	IF_4	IF_5
0x4006cc4	          0x4084ff	                           test dil, dil	      4267	normal.c	FUNCTION_44	FOR_1	ELSE_2	IF_4	IF_5
0x4006cc7	        0x450f45c3	                        cmovne r8d, r11d	      4267	normal.c	FUNCTION_44	FOR_1	ELSE_2	IF_4	IF_5
0x4006ccb	            0xeb26	                           jmp 0x4006cf3	      4267	normal.c	FUNCTION_44	FOR_1	ELSE_2	IF_4	IF_5
0x4006ccd	          0x83ff2f	                           cmp edi, 0x2f	      4269	normal.c	FUNCTION_44	FOR_1	ELSE_2	ELSE_3	IF_6
0x4006cd0	        0x400f94c7	                                sete dil	      4269	normal.c	FUNCTION_44	FOR_1	ELSE_2	ELSE_3	IF_6
0x4006cd4	          0x80fa2a	                            cmp dl, 0x2a	      4269	normal.c	FUNCTION_44	FOR_1	ELSE_2	ELSE_3	IF_6
0x4006cd7	            0x7505	                           jne 0x4006cde	      4269	normal.c	FUNCTION_44	FOR_1	ELSE_2	ELSE_3	IF_6
0x4006cd9	          0x4084ff	                           test dil, dil	      4269	normal.c	FUNCTION_44	FOR_1	ELSE_2	ELSE_3	IF_6
0x4006cdc	            0x750f	                           jne 0x4006ced	      4269	normal.c	FUNCTION_44	FOR_1	ELSE_2	ELSE_3	IF_6
0x4006cde	          0x80fa2f	                            cmp dl, 0x2f	      4273	normal.c	FUNCTION_44	FOR_1	ELSE_2	ELSE_4	IF_7
0x4006ce1	            0x7510	                           jne 0x4006cf3	      4273	normal.c	FUNCTION_44	FOR_1	ELSE_2	ELSE_4	IF_7
0x4006ce3	          0x4084ff	                           test dil, dil	      4273	normal.c	FUNCTION_44	FOR_1	ELSE_2	ELSE_4	IF_7
0x4006ce6	            0x740b	                            je 0x4006cf3	      4273	normal.c	FUNCTION_44	FOR_1	ELSE_2	ELSE_4	IF_7
0x4006ce8	      0xe906010000	                           jmp 0x4006df3	      4273	normal.c	FUNCTION_44	FOR_1	ELSE_2	ELSE_4	IF_7
0x4006ced	    0x41b801000000	                              mov r8d, 1	      4271	normal.c	FUNCTION_44	FOR_1	ELSE_2	ELSE_3	IF_6
0x4006cf3	           0xfb6fa	                           movzx edi, dl	      4279	normal.c	FUNCTION_44	FOR_1
0x4006cf6	          0x4839c1	                            cmp rcx, rax	      4251	normal.c	FUNCTION_44	FOR_1
0x4006cf9	            0x740f	                            je 0x4006d0a	      4251	normal.c	FUNCTION_44	FOR_1
0x4006cfb	        0x4883c101	                              add rcx, 1	      4251	normal.c	FUNCTION_44	FOR_1
0x4006cff	           0xfb611	                   movzx edx, byte [rcx]	      4251	normal.c	FUNCTION_44	FOR_1
0x4006d02	            0x84d2	                             test dl, dl	      4251	normal.c	FUNCTION_44	FOR_1
0x4006d04	     0xf8578ffffff	                           jne 0x4006c82	      4251	normal.c	FUNCTION_44	FOR_1
0x4006d0a	          0x4409c6	                             or esi, r8d	      4282	normal.c	FUNCTION_44
0x4006d0d	           0xf94c0	                                 sete al	      4282	normal.c	FUNCTION_44
0x4006d10	          0x4d85ff	                           test r15, r15	      4394	normal.c	FUNCTION_45	FOR_1	IF_9
0x4006d13	           0xf95c1	                                setne cl	      4394	normal.c	FUNCTION_45	FOR_1	IF_9
0x4006d16	            0x85f6	                           test esi, esi	      4394	normal.c	FUNCTION_45	FOR_1	IF_9
0x4006d18	           0xf95c2	                                setne dl	      4394	normal.c	FUNCTION_45	FOR_1	IF_9
0x4006d1b	            0x84c9	                             test cl, cl	      4394	normal.c	FUNCTION_45	FOR_1	IF_9
0x4006d1d	            0x7422	                            je 0x4006d41	      4394	normal.c	FUNCTION_45	FOR_1	IF_9
0x4006d1f	            0x84d2	                             test dl, dl	      4394	normal.c	FUNCTION_45	FOR_1	IF_9
0x4006d21	            0x741e	                            je 0x4006d41	      4394	normal.c	FUNCTION_45	FOR_1	IF_9
0x4006d23	    0x488b05000000	            mov rax, qword [0x04006d2a] 	      4396	normal.c	FUNCTION_45	FOR_1	IF_9
0x4006d2a	        0x4c897838	             mov qword [rax + 0x38], r15	      4396	normal.c	FUNCTION_45	FOR_1	IF_9
0x4006d2e	        0x8b742414	            mov esi, dword [rsp + 0x14] 	      4396	normal.c	FUNCTION_45	FOR_1	IF_9
0x4006d32	          0x897040	             mov dword [rax + 0x40], esi	      4396	normal.c	FUNCTION_45	FOR_1	IF_9
0x4006d35	        0x8b742410	            mov esi, dword [rsp + 0x10] 	      4396	normal.c	FUNCTION_45	FOR_1	IF_9
0x4006d39	          0x897044	             mov dword [rax + 0x44], esi	      4396	normal.c	FUNCTION_45	FOR_1	IF_9
0x4006d3c	      0xe9ed000000	                           jmp 0x4006e2e	      4397	normal.c	FUNCTION_45	FOR_1	IF_9
0x4006d41	          0x4585e4	                         test r12d, r12d	      4401	normal.c	FUNCTION_45	FOR_1	IF_10
0x4006d44	            0x7508	                           jne 0x4006d4e	      4401	normal.c	FUNCTION_45	FOR_1	IF_10
0x4006d46	            0x84c0	                             test al, al	      4401	normal.c	FUNCTION_45	FOR_1	IF_10
0x4006d48	     0xf85e0000000	                           jne 0x4006e2e	      4401	normal.c	FUNCTION_45	FOR_1	IF_10
0x4006d4e	            0x84c0	                             test al, al	      4403	normal.c	FUNCTION_45	FOR_1	IF_11
0x4006d50	            0x7431	                            je 0x4006d83	      4403	normal.c	FUNCTION_45	FOR_1	IF_11
0x4006d52	    0x488b05000000	            mov rax, qword [0x04006d59] 	      4403	normal.c	FUNCTION_45	FOR_1	IF_11
0x4006d59	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      4403	normal.c	FUNCTION_45	FOR_1	IF_11
0x4006d5e	        0x48397038	            cmp qword [rax + 0x38], rsi 	      4403	normal.c	FUNCTION_45	FOR_1	IF_11
0x4006d62	            0x7c1f	                            jl 0x4006d83	      4403	normal.c	FUNCTION_45	FOR_1	IF_11
0x4006d64	            0x84c9	                             test cl, cl	      4406	normal.c	FUNCTION_45	FOR_1	IF_11	IF_12
0x4006d66	     0xf84c2000000	                            je 0x4006e2e	      4406	normal.c	FUNCTION_45	FOR_1	IF_11	IF_12
0x4006d6c	        0x4c897838	             mov qword [rax + 0x38], r15	      4407	normal.c	FUNCTION_45	FOR_1	IF_11	IF_12
0x4006d70	        0x8b742414	            mov esi, dword [rsp + 0x14] 	      4407	normal.c	FUNCTION_45	FOR_1	IF_11	IF_12
0x4006d74	          0x897040	             mov dword [rax + 0x40], esi	      4407	normal.c	FUNCTION_45	FOR_1	IF_11	IF_12
0x4006d77	        0x8b742410	            mov esi, dword [rsp + 0x10] 	      4407	normal.c	FUNCTION_45	FOR_1	IF_11	IF_12
0x4006d7b	          0x897044	             mov dword [rax + 0x44], esi	      4407	normal.c	FUNCTION_45	FOR_1	IF_11	IF_12
0x4006d7e	      0xe9ab000000	                           jmp 0x4006e2e	      4407	normal.c	FUNCTION_45	FOR_1	IF_11	IF_12
0x4006d83	            0x84d2	                             test dl, dl	      4414	normal.c	FUNCTION_45	FOR_1	IF_13
0x4006d85	            0x751b	                           jne 0x4006da2	      4414	normal.c	FUNCTION_45	FOR_1	IF_13
0x4006d87	    0x488b05000000	            mov rax, qword [0x04006d8e] 	      4419	normal.c	FUNCTION_45	FOR_1	ELSE_2
0x4006d8e	        0x4c8b7838	            mov r15, qword [rax + 0x38] 	      4419	normal.c	FUNCTION_45	FOR_1	ELSE_2
0x4006d92	          0x8b7040	            mov esi, dword [rax + 0x40] 	      4419	normal.c	FUNCTION_45	FOR_1	ELSE_2
0x4006d95	        0x89742414	             mov dword [rsp + 0x14], esi	      4419	normal.c	FUNCTION_45	FOR_1	ELSE_2
0x4006d99	          0x8b4044	            mov eax, dword [rax + 0x44] 	      4419	normal.c	FUNCTION_45	FOR_1	ELSE_2
0x4006d9c	        0x89442410	             mov dword [rsp + 0x10], eax	      4419	normal.c	FUNCTION_45	FOR_1	ELSE_2
0x4006da0	            0xeb16	                           jmp 0x4006db8	      4419	normal.c	FUNCTION_45	FOR_1	ELSE_2
0x4006da2	    0xc74424100000	               mov dword [rsp + 0x10], 0	      4416	normal.c	FUNCTION_45	FOR_1	IF_13	CALL_15
0x4006daa	    0xc74424140000	               mov dword [rsp + 0x14], 0	      4416	normal.c	FUNCTION_45	FOR_1	IF_13	CALL_15
0x4006db2	    0x41bf00000000	                             mov r15d, 0	      4416	normal.c	FUNCTION_45	FOR_1	IF_13	CALL_15
0x4006db8	    0x81e5fffeffff	                     and ebp, 0xfffffeff	      4422	normal.c	FUNCTION_45	FOR_1	ELSE_2
0x4006dbe	      0xe981fdffff	                           jmp 0x4006b44	      4422	normal.c	FUNCTION_45	FOR_1	ELSE_2
0x4006dc3	          0x4889df	                            mov rdi, rbx	      4437	normal.c	FUNCTION_45	CALL_17
0x4006dc6	      0xe800000000	                          call 0x4006dcb	      4437	normal.c	FUNCTION_45	CALL_17
0x4006dcb	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      4438	normal.c	FUNCTION_45
0x4006dcf	    0x890500000000	            mov dword [0x04006dd5], eax 	      4438	normal.c	FUNCTION_45
0x4006dd5	        0x8b442424	            mov eax, dword [rsp + 0x24] 	      4439	normal.c	FUNCTION_45
0x4006dd9	    0x890500000000	            mov dword [0x04006ddf], eax 	      4439	normal.c	FUNCTION_45
0x4006ddf	            0x89e8	                            mov eax, ebp	      4441	normal.c	FUNCTION_45
0x4006de1	      0x488b5c2438	            mov rbx, qword [rsp + 0x38] 	      4442	normal.c	FUNCTION_45
0x4006de6	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      4442	normal.c	FUNCTION_45
0x4006def	            0x7474	                            je 0x4006e65	      4442	normal.c	FUNCTION_45
0x4006df1	            0xeb6d	                           jmp 0x4006e60	      4442	normal.c	FUNCTION_45
0x4006df3	          0x4d85ff	                           test r15, r15	      4394	normal.c	FUNCTION_45	FOR_1	IF_9
0x4006df6	     0xf8527ffffff	                           jne 0x4006d23	      4394	normal.c	FUNCTION_45	FOR_1	IF_9
0x4006dfc	    0xc74424100000	               mov dword [rsp + 0x10], 0	      4416	normal.c	FUNCTION_45	FOR_1	IF_13	CALL_15
0x4006e04	    0xc74424140000	               mov dword [rsp + 0x14], 0	      4416	normal.c	FUNCTION_45	FOR_1	IF_13	CALL_15
0x4006e0c	            0xebaa	                           jmp 0x4006db8	      4416	normal.c	FUNCTION_45	FOR_1	IF_13	CALL_15
0x4006e0e	    0x488b05000000	            mov rax, qword [0x04006e15] 	      4428	normal.c	FUNCTION_45	ELSE_2	IF_14
0x4006e15	        0x4c897038	             mov qword [rax + 0x38], r14	      4428	normal.c	FUNCTION_45	ELSE_2	IF_14
0x4006e19	        0x8b74242c	            mov esi, dword [rsp + 0x2c] 	      4428	normal.c	FUNCTION_45	ELSE_2	IF_14
0x4006e1d	          0x897040	             mov dword [rax + 0x40], esi	      4428	normal.c	FUNCTION_45	ELSE_2	IF_14
0x4006e20	        0x8b742428	            mov esi, dword [rsp + 0x28] 	      4428	normal.c	FUNCTION_45	ELSE_2	IF_14
0x4006e24	          0x897044	             mov dword [rax + 0x44], esi	      4428	normal.c	FUNCTION_45	ELSE_2	IF_14
0x4006e27	      0xbd00000000	                              mov ebp, 0	      4427	normal.c	FUNCTION_45	ELSE_2	IF_14
0x4006e2c	            0xeb95	                           jmp 0x4006dc3	      4427	normal.c	FUNCTION_45	ELSE_2	IF_14
0x4006e2e	    0x488b05000000	            mov rax, qword [0x04006e35] 	      4432	normal.c	FUNCTION_45	ELSE_3
0x4006e35	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      4432	normal.c	FUNCTION_45	ELSE_3
0x4006e3c	      0xe800000000	                          call 0x4006e41	      4434	normal.c	FUNCTION_45	ELSE_3	CALL_16
0x4006e41	      0xbd01000000	                              mov ebp, 1	      4307	normal.c	FUNCTION_45
0x4006e46	      0xe978ffffff	                           jmp 0x4006dc3	      4307	normal.c	FUNCTION_45
0x4006e4b	          0x4d85ff	                           test r15, r15	      4394	normal.c	FUNCTION_45	FOR_1	IF_9
0x4006e4e	           0xf95c1	                                setne cl	      4394	normal.c	FUNCTION_45	FOR_1	IF_9
0x4006e51	      0xba00000000	                              mov edx, 0	      4394	normal.c	FUNCTION_45	FOR_1	IF_9
0x4006e56	      0xb801000000	                              mov eax, 1	      4282	normal.c	FUNCTION_44
0x4006e5b	      0xe9e1feffff	                           jmp 0x4006d41	      4282	normal.c	FUNCTION_44
0x4006e60	      0xe800000000	                          call 0x4006e65	      4442	normal.c	FUNCTION_45
0x4006e65	        0x4883c448	                           add rsp, 0x48	      4442	normal.c	FUNCTION_45
0x4006e69	              0x5b	                                 pop rbx	      4442	normal.c	FUNCTION_45
0x4006e6a	              0x5d	                                 pop rbp	      4442	normal.c	FUNCTION_45
0x4006e6b	            0x415c	                                 pop r12	      4442	normal.c	FUNCTION_45
0x4006e6d	            0x415d	                                 pop r13	      4442	normal.c	FUNCTION_45
0x4006e6f	            0x415e	                                 pop r14	      4442	normal.c	FUNCTION_45
0x4006e71	            0x415f	                                 pop r15	      4442	normal.c	FUNCTION_45
0x4006e73	              0xc3	                                     ret	      4442	normal.c	FUNCTION_45
v_visop	CALL,3:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,1:IF,3	28
0x4002187	              0x53	                                push rbx	      7438	normal.c	FUNCTION_94
0x4002188	          0x4889fb	                            mov rbx, rdi	      7438	normal.c	FUNCTION_94
0x400218b	      0xe800000000	                          call 0x4002190	      7443	normal.c	FUNCTION_94	IF_1	CALL_1
0x4002190	          0x8b530c	              mov edx, dword [rbx + 0xc]	      7443	normal.c	FUNCTION_94	IF_1	CALL_1
0x4002193	          0x4863ca	                         movsxd rcx, edx	      7443	normal.c	FUNCTION_94	IF_1	CALL_1
0x4002196	          0x488b00	                    mov rax, qword [rax]	      7443	normal.c	FUNCTION_94	IF_1	CALL_1
0x4002199	      0xf644480101	         test byte [rax + rcx*2 + 1], 1 	      7443	normal.c	FUNCTION_94	IF_1	CALL_1
0x400219e	            0x7433	                            je 0x40021d3	      7443	normal.c	FUNCTION_94	IF_1	CALL_1
0x40021a0	    0x8b0500000000	            mov eax, dword [0x040021a6] 	      7445	normal.c	FUNCTION_94	IF_1	IF_2
0x40021a6	          0x83f816	                           cmp eax, 0x16	      7445	normal.c	FUNCTION_94	IF_1	IF_2
0x40021a9	            0x7412	                            je 0x40021bd	      7445	normal.c	FUNCTION_94	IF_1	IF_2
0x40021ab	    0x890500000000	            mov dword [0x040021b1], eax 	      7447	normal.c	FUNCTION_94	IF_1	IF_2
0x40021b1	    0xc70500000000	           mov dword [0x040021bb], 0x56 	      7448	normal.c	FUNCTION_94	IF_1	IF_2
0x40021bb	            0xeb16	                           jmp 0x40021d3	      7448	normal.c	FUNCTION_94	IF_1	IF_2
0x40021bd	          0x83ea43	                           sub edx, 0x43	      7450	normal.c	FUNCTION_94	IF_1	ELSE_1	IF_3
0x40021c0	          0x83fa01	                              cmp edx, 1	      7450	normal.c	FUNCTION_94	IF_1	ELSE_1	IF_3
0x40021c3	            0x770e	                            ja 0x40021d3	      7450	normal.c	FUNCTION_94	IF_1	ELSE_1	IF_3
0x40021c5	    0x488b05000000	            mov rax, qword [0x040021cc] 	      7451	normal.c	FUNCTION_94	IF_1	ELSE_1	IF_3
0x40021cc	    0xc74048ffffff	     mov dword [rax + 0x48], 0x7fffffff 	      7451	normal.c	FUNCTION_94	IF_1	ELSE_1	IF_3
0x40021d3	          0x8b730c	              mov esi, dword [rbx + 0xc]	      7453	normal.c	FUNCTION_94	CALL_2
0x40021d6	      0xbf00000000	                              mov edi, 0	      7453	normal.c	FUNCTION_94	CALL_2
0x40021db	      0xe800000000	                          call 0x40021e0	      7453	normal.c	FUNCTION_94	CALL_2
0x40021e0	         0xfb64001	               movzx eax, byte [rax + 1]	      7453	normal.c	FUNCTION_94	CALL_2
0x40021e4	          0x89430c	              mov dword [rbx + 0xc], eax	      7453	normal.c	FUNCTION_94	CALL_2
0x40021e7	          0x4889df	                            mov rdi, rbx	      7454	normal.c	FUNCTION_94	CALL_3
0x40021ea	      0xe86ff9ffff	                    call sym.nv_operator	      7454	normal.c	FUNCTION_94	CALL_3
0x40021ef	              0x5b	                                 pop rbx	      7455	normal.c	FUNCTION_94
0x40021f0	              0xc3	                                     ret	      7455	normal.c	FUNCTION_94
nv_gotofile	CALL,16:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,1:IF,5	88
0x40036cb	            0x4154	                                push r12	      6233	normal.c	FUNCTION_74
0x40036cd	              0x55	                                push rbp	      6233	normal.c	FUNCTION_74
0x40036ce	              0x53	                                push rbx	      6233	normal.c	FUNCTION_74
0x40036cf	        0x4883ec10	                           sub rsp, 0x10	      6233	normal.c	FUNCTION_74
0x40036d3	          0x4889fb	                            mov rbx, rdi	      6233	normal.c	FUNCTION_74
0x40036d6	    0x64488b042528	                mov rax, qword fs:[0x28]	      6233	normal.c	FUNCTION_74
0x40036df	      0x4889442408	                mov qword [rsp + 8], rax	      6233	normal.c	FUNCTION_74
0x40036e4	            0x31c0	                            xor eax, eax	      6233	normal.c	FUNCTION_74
0x40036e6	    0x48c70424ffff	     mov qword [rsp], 0xffffffffffffffff	      6235	normal.c	FUNCTION_74
0x40036ee	      0xe800000000	                          call 0x40036f3	      6237	normal.c	FUNCTION_74	IF_1	CALL_1
0x40036f3	            0x85c0	                           test eax, eax	      6237	normal.c	FUNCTION_74	IF_1	CALL_1
0x40036f5	            0x7412	                            je 0x4003709	      6237	normal.c	FUNCTION_74	IF_1	CALL_1
0x40036f7	          0x488b3b	                    mov rdi, qword [rbx]	      6239	normal.c	FUNCTION_74	IF_1	CALL_2
0x40036fa	      0xe839cbffff	                    call sym.clearopbeep	      6239	normal.c	FUNCTION_74	IF_1	CALL_2
0x40036ff	      0xe800000000	                          call 0x4003704	      6240	normal.c	FUNCTION_74	IF_1	CALL_3
0x4003704	      0xe914010000	                           jmp 0x400381d	      6241	normal.c	FUNCTION_74	IF_1
0x4003709	      0xe800000000	                          call 0x400370e	      6243	normal.c	FUNCTION_74	IF_2	CALL_4
0x400370e	            0x85c0	                           test eax, eax	      6243	normal.c	FUNCTION_74	IF_2	CALL_4
0x4003710	            0x7423	                            je 0x4003735	      6243	normal.c	FUNCTION_74	IF_2	CALL_4
0x4003712	          0x488b03	                    mov rax, qword [rbx]	      6245	normal.c	FUNCTION_74	IF_2	CALL_5
0x4003715	    0xc70000000000	                      mov dword [rax], 0	      3676	normal.c	FUNCTION_24
0x400371b	    0xc74004000000	                  mov dword [rax + 4], 0	      3677	normal.c	FUNCTION_24
0x4003722	    0xc7400c000000	                mov dword [rax + 0xc], 0	      3678	normal.c	FUNCTION_24
0x4003729	    0xc74010000000	               mov dword [rax + 0x10], 0	      3679	normal.c	FUNCTION_24
0x4003730	      0xe9e8000000	                           jmp 0x400381d	      3679	normal.c	FUNCTION_24
0x4003735	        0x488b7b30	            mov rdi, qword [rbx + 0x30] 	      6249	normal.c	FUNCTION_74	CALL_6
0x4003739	          0x4889e6	                            mov rsi, rsp	      6249	normal.c	FUNCTION_74	CALL_6
0x400373c	      0xe800000000	                          call 0x4003741	      6249	normal.c	FUNCTION_74	CALL_6
0x4003741	          0x4889c5	                            mov rbp, rax	      6249	normal.c	FUNCTION_74	CALL_6
0x4003744	          0x4885c0	                           test rax, rax	      6251	normal.c	FUNCTION_74	IF_3
0x4003747	     0xf84b2000000	                            je 0x40037ff	      6251	normal.c	FUNCTION_74	IF_3
0x400374d	      0xe800000000	                          call 0x4003752	      6254	normal.c	FUNCTION_74	IF_3	IF_4	CALL_8
0x4003752	            0x85c0	                           test eax, eax	      6254	normal.c	FUNCTION_74	IF_3	IF_4	CALL_8
0x4003754	            0x7427	                            je 0x400377d	      6254	normal.c	FUNCTION_74	IF_3	IF_4	CALL_8
0x4003756	    0x488b3d000000	            mov rdi, qword [0x0400375d] 	      6254	normal.c	FUNCTION_74	IF_3	IF_4	CALL_8
0x400375d	        0x837f7801	               cmp dword [rdi + 0x78], 1	      6254	normal.c	FUNCTION_74	IF_3	IF_4	CALL_8
0x4003761	            0x7f1a	                            jg 0x400377d	      6254	normal.c	FUNCTION_74	IF_3	IF_4	CALL_8
0x4003763	      0xe800000000	                          call 0x4003768	      6254	normal.c	FUNCTION_74	IF_3	IF_4	CALL_8
0x4003768	            0x85c0	                           test eax, eax	      6254	normal.c	FUNCTION_74	IF_3	IF_4	CALL_8
0x400376a	            0x7511	                           jne 0x400377d	      6254	normal.c	FUNCTION_74	IF_3	IF_4	CALL_8
0x400376c	      0xbe00000000	                              mov esi, 0	      6255	normal.c	FUNCTION_74	IF_3	CALL_9
0x4003771	    0x488b3d000000	            mov rdi, qword [0x04003778] 	      6255	normal.c	FUNCTION_74	IF_3	CALL_9
0x4003778	      0xe800000000	                          call 0x400377d	      6255	normal.c	FUNCTION_74	IF_3	CALL_9
0x400377d	      0xe800000000	                          call 0x4003782	      6256	normal.c	FUNCTION_74	IF_3	CALL_10
0x4003782	    0x4c8b25000000	            mov r12, qword [0x04003789] 	      6257	normal.c	FUNCTION_74	IF_3	IF_5	CALL_11
0x4003789	    0x488b3d000000	            mov rdi, qword [0x04003790] 	      6258	normal.c	FUNCTION_74	IF_3	IF_5	CALL_12
0x4003790	      0xe800000000	                          call 0x4003795	      6258	normal.c	FUNCTION_74	IF_3	IF_5	CALL_12
0x4003795	            0x85c0	                           test eax, eax	      6257	normal.c	FUNCTION_74	IF_3	IF_5	CALL_11
0x4003797	        0x410f95c1	                               setne r9b	      6257	normal.c	FUNCTION_74	IF_3	IF_5	CALL_11
0x400379b	        0x450fb6c9	                          movzx r9d, r9b	      6257	normal.c	FUNCTION_74	IF_3	IF_5	CALL_11
0x400379f	        0x4883ec08	                              sub rsp, 8	      6257	normal.c	FUNCTION_74	IF_3	IF_5	CALL_11
0x40037a3	            0x4154	                                push r12	      6257	normal.c	FUNCTION_74	IF_3	IF_5	CALL_11
0x40037a5	    0x49c7c0ffffff	              mov r8, 0xffffffffffffffff	      6257	normal.c	FUNCTION_74	IF_3	IF_5	CALL_11
0x40037ac	      0xb900000000	                              mov ecx, 0	      6257	normal.c	FUNCTION_74	IF_3	IF_5	CALL_11
0x40037b1	      0xba00000000	                              mov edx, 0	      6257	normal.c	FUNCTION_74	IF_3	IF_5	CALL_11
0x40037b6	          0x4889ee	                            mov rsi, rbp	      6257	normal.c	FUNCTION_74	IF_3	IF_5	CALL_11
0x40037b9	      0xbf00000000	                              mov edi, 0	      6257	normal.c	FUNCTION_74	IF_3	IF_5	CALL_11
0x40037be	      0xe800000000	                          call 0x40037c3	      6257	normal.c	FUNCTION_74	IF_3	IF_5	CALL_11
0x40037c3	        0x4883c410	                           add rsp, 0x10	      6257	normal.c	FUNCTION_74	IF_3	IF_5	CALL_11
0x40037c7	          0x83f801	                              cmp eax, 1	      6257	normal.c	FUNCTION_74	IF_3	IF_5	CALL_11
0x40037ca	            0x7529	                           jne 0x40037f5	      6257	normal.c	FUNCTION_74	IF_3	IF_5	CALL_11
0x40037cc	        0x837b1046	           cmp dword [rbx + 0x10], 0x46 	      6259	normal.c	FUNCTION_74	IF_3	IF_5
0x40037d0	            0x7523	                           jne 0x40037f5	      6259	normal.c	FUNCTION_74	IF_3	IF_5
0x40037d2	        0x488b0424	                    mov rax, qword [rsp]	      6259	normal.c	FUNCTION_74	IF_3	IF_5
0x40037d6	          0x4885c0	                           test rax, rax	      6259	normal.c	FUNCTION_74	IF_3	IF_5
0x40037d9	            0x781a	                            js 0x40037f5	      6259	normal.c	FUNCTION_74	IF_3	IF_5
0x40037db	    0x488b15000000	            mov rdx, qword [0x040037e2] 	      6261	normal.c	FUNCTION_74	IF_3	IF_5
0x40037e2	        0x48894238	             mov qword [rdx + 0x38], rax	      6261	normal.c	FUNCTION_74	IF_3	IF_5
0x40037e6	      0xe800000000	                          call 0x40037eb	      6262	normal.c	FUNCTION_74	IF_3	IF_5	CALL_13
0x40037eb	      0xbf06000000	                              mov edi, 6	      6263	normal.c	FUNCTION_74	IF_3	IF_5	CALL_14
0x40037f0	      0xe800000000	                          call 0x40037f5	      6263	normal.c	FUNCTION_74	IF_3	IF_5	CALL_14
0x40037f5	          0x4889ef	                            mov rdi, rbp	      6265	normal.c	FUNCTION_74	IF_3	CALL_15
0x40037f8	      0xe800000000	                          call 0x40037fd	      6265	normal.c	FUNCTION_74	IF_3	CALL_15
0x40037fd	            0xeb1e	                           jmp 0x400381d	      6265	normal.c	FUNCTION_74	IF_3	CALL_15
0x40037ff	          0x488b03	                    mov rax, qword [rbx]	      6268	normal.c	FUNCTION_74	CALL_16
0x4003802	    0xc70000000000	                      mov dword [rax], 0	      3676	normal.c	FUNCTION_24
0x4003808	    0xc74004000000	                  mov dword [rax + 4], 0	      3677	normal.c	FUNCTION_24
0x400380f	    0xc7400c000000	                mov dword [rax + 0xc], 0	      3678	normal.c	FUNCTION_24
0x4003816	    0xc74010000000	               mov dword [rax + 0x10], 0	      3679	normal.c	FUNCTION_24
0x400381d	      0x488b442408	                mov rax, qword [rsp + 8]	      6269	normal.c	FUNCTION_74
0x4003822	    0x644833042528	                xor rax, qword fs:[0x28]	      6269	normal.c	FUNCTION_74
0x400382b	            0x7405	                            je 0x4003832	      6269	normal.c	FUNCTION_74
0x400382d	      0xe800000000	                          call 0x4003832	      6269	normal.c	FUNCTION_74
0x4003832	        0x4883c410	                           add rsp, 0x10	      6269	normal.c	FUNCTION_74
0x4003836	              0x5b	                                 pop rbx	      6269	normal.c	FUNCTION_74
0x4003837	              0x5d	                                 pop rbp	      6269	normal.c	FUNCTION_74
0x4003838	            0x415c	                                 pop r12	      6269	normal.c	FUNCTION_74
0x400383a	              0xc3	                                     ret	      6269	normal.c	FUNCTION_74
nv_ident	CALL,61:SWITCH,1:DO,0:FOR,1:functions,0:WHILE,2:ELSE,15:IF,31	544
0x4008411	            0x4157	                                push r15	      5567	normal.c	FUNCTION_66
0x4008413	            0x4156	                                push r14	      5567	normal.c	FUNCTION_66
0x4008415	            0x4155	                                push r13	      5567	normal.c	FUNCTION_66
0x4008417	            0x4154	                                push r12	      5567	normal.c	FUNCTION_66
0x4008419	              0x55	                                push rbp	      5567	normal.c	FUNCTION_66
0x400841a	              0x53	                                push rbx	      5567	normal.c	FUNCTION_66
0x400841b	        0x4883ec38	                           sub rsp, 0x38	      5567	normal.c	FUNCTION_66
0x400841f	          0x4989ff	                            mov r15, rdi	      5567	normal.c	FUNCTION_66
0x4008422	    0x64488b042528	                mov rax, qword fs:[0x28]	      5567	normal.c	FUNCTION_66
0x400842b	      0x4889442428	             mov qword [rsp + 0x28], rax	      5567	normal.c	FUNCTION_66
0x4008430	            0x31c0	                            xor eax, eax	      5567	normal.c	FUNCTION_66
0x4008432	    0x48c744242000	               mov qword [rsp + 0x20], 0	      5568	normal.c	FUNCTION_66
0x400843b	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      5576	normal.c	FUNCTION_66
0x4008443	        0x448b670c	            mov r12d, dword [rdi + 0xc] 	      5584	normal.c	FUNCTION_66	IF_1
0x4008447	    0xc74424040000	                  mov dword [rsp + 4], 0	      5592	normal.c	FUNCTION_66	ELSE_1
0x400844f	        0x4183fc67	                          cmp r12d, 0x67	      5584	normal.c	FUNCTION_66	IF_1
0x4008453	            0x750c	                           jne 0x4008461	      5584	normal.c	FUNCTION_66	IF_1
0x4008455	        0x448b6710	           mov r12d, dword [rdi + 0x10] 	      5586	normal.c	FUNCTION_66	IF_1
0x4008459	    0xc74424040100	                  mov dword [rsp + 4], 1	      5587	normal.c	FUNCTION_66	IF_1
0x4008461	    0x4181fca30000	                          cmp r12d, 0xa3	      5595	normal.c	FUNCTION_66	IF_2
0x4008468	            0x7455	                            je 0x40084bf	      5595	normal.c	FUNCTION_66	IF_2
0x400846a	        0x4183fc4b	                          cmp r12d, 0x4b	      5601	normal.c	FUNCTION_66	IF_3
0x400846e	        0x400f94c5	                                sete bpl	      5601	normal.c	FUNCTION_66	IF_3
0x4008472	          0x4489e0	                           mov eax, r12d	      5601	normal.c	FUNCTION_66	IF_3
0x4008475	          0x83e0bf	                     and eax, 0xffffffbf	      5601	normal.c	FUNCTION_66	IF_3
0x4008478	          0x83f81d	                           cmp eax, 0x1d	      5601	normal.c	FUNCTION_66	IF_3
0x400847b	            0x7405	                            je 0x4008482	      5601	normal.c	FUNCTION_66	IF_3
0x400847d	          0x4084ed	                           test bpl, bpl	      5601	normal.c	FUNCTION_66	IF_3
0x4008480	            0x7448	                            je 0x40084ca	      5601	normal.c	FUNCTION_66	IF_3
0x4008482	    0x833d00000000	               cmp dword [0x04008489], 0	      5603	normal.c	FUNCTION_66	IF_3	IF_4	CALL_1
0x4008489	            0x741a	                            je 0x40084a5	      5603	normal.c	FUNCTION_66	IF_3	IF_4	CALL_1
0x400848b	      0x488d54241c	                   lea rdx, [rsp + 0x1c]	      5603	normal.c	FUNCTION_66	IF_3	IF_4	CALL_1
0x4008490	      0x488d742420	                   lea rsi, [rsp + 0x20]	      5603	normal.c	FUNCTION_66	IF_3	IF_4	CALL_1
0x4008495	          0x4c89ff	                            mov rdi, r15	      5603	normal.c	FUNCTION_66	IF_3	IF_4	CALL_1
0x4008498	      0xe800000000	                          call 0x400849d	      5603	normal.c	FUNCTION_66	IF_3	IF_4	CALL_1
0x400849d	            0x85c0	                           test eax, eax	      5603	normal.c	FUNCTION_66	IF_3	IF_4	CALL_1
0x400849f	     0xf84b4070000	                            je 0x4008c59	      5603	normal.c	FUNCTION_66	IF_3	IF_4	CALL_1
0x40084a5	          0x498b3f	                    mov rdi, qword [r15]	      5605	normal.c	FUNCTION_66	IF_3	IF_5	CALL_2
0x40084a8	      0xe8b47dffff	                  call sym.checkclearopq	      5605	normal.c	FUNCTION_66	IF_3	IF_5	CALL_2
0x40084ad	            0x85c0	                           test eax, eax	      5605	normal.c	FUNCTION_66	IF_3	IF_5	CALL_2
0x40084af	     0xf85a4070000	                           jne 0x4008c59	      5605	normal.c	FUNCTION_66	IF_3	IF_5	CALL_2
0x40084b5	    0x48837c242000	               cmp qword [rsp + 0x20], 0	      5609	normal.c	FUNCTION_66	IF_6	CALL_3
0x40084bb	            0x7558	                           jne 0x4008515	      5609	normal.c	FUNCTION_66	IF_6	CALL_3
0x40084bd	            0xeb0b	                           jmp 0x40084ca	      5609	normal.c	FUNCTION_66	IF_6	CALL_3
0x40084bf	      0xbd00000000	                              mov ebp, 0	      5601	normal.c	FUNCTION_66	IF_3
0x40084c4	    0x41bc23000000	                          mov r12d, 0x23	      5596	normal.c	FUNCTION_66	IF_2
0x40084ca	        0x4183fc2a	                          cmp r12d, 0x2a	      5609	normal.c	FUNCTION_66	IF_6	CALL_3
0x40084ce	            0x740b	                            je 0x40084db	      5609	normal.c	FUNCTION_66	IF_6	CALL_3
0x40084d0	      0xbe01000000	                              mov esi, 1	      5609	normal.c	FUNCTION_66	IF_6	CALL_3
0x40084d5	        0x4183fc23	                          cmp r12d, 0x23	      5609	normal.c	FUNCTION_66	IF_6	CALL_3
0x40084d9	            0x7505	                           jne 0x40084e0	      5609	normal.c	FUNCTION_66	IF_6	CALL_3
0x40084db	      0xbe03000000	                              mov esi, 3	      5609	normal.c	FUNCTION_66	IF_6	CALL_3
0x40084e0	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      5609	normal.c	FUNCTION_66	IF_6	CALL_3
0x40084e5	      0xe800000000	                          call 0x40084ea	      5609	normal.c	FUNCTION_66	IF_6	CALL_3
0x40084ea	        0x8944241c	             mov dword [rsp + 0x1c], eax	      5609	normal.c	FUNCTION_66	IF_6	CALL_3
0x40084ee	            0x85c0	                           test eax, eax	      5609	normal.c	FUNCTION_66	IF_6	CALL_3
0x40084f0	            0x7523	                           jne 0x4008515	      5609	normal.c	FUNCTION_66	IF_6	CALL_3
0x40084f2	          0x498b07	                    mov rax, qword [r15]	      5613	normal.c	FUNCTION_66	IF_6	CALL_4
0x40084f5	    0xc70000000000	                      mov dword [rax], 0	      3676	normal.c	FUNCTION_24
0x40084fb	    0xc74004000000	                  mov dword [rax + 4], 0	      3677	normal.c	FUNCTION_24
0x4008502	    0xc7400c000000	                mov dword [rax + 0xc], 0	      3678	normal.c	FUNCTION_24
0x4008509	    0xc74010000000	               mov dword [rax + 0x10], 0	      3679	normal.c	FUNCTION_24
0x4008510	      0xe944070000	                           jmp 0x4008c59	      3679	normal.c	FUNCTION_24
0x4008515	    0x488b05000000	            mov rax, qword [0x0400851c] 	      5620	normal.c	FUNCTION_66
0x400851c	    0x488b98181500	          mov rbx, qword [rax + 0x1518] 	      5620	normal.c	FUNCTION_66
0x4008523	           0xfb603	                   movzx eax, byte [rbx]	      5620	normal.c	FUNCTION_66
0x4008526	            0x84c0	                             test al, al	      5620	normal.c	FUNCTION_66
0x4008528	            0x7512	                           jne 0x400853c	      5620	normal.c	FUNCTION_66
0x400852a	    0x488b1d000000	            mov rbx, qword [0x04008531] 	      5620	normal.c	FUNCTION_66
0x4008531	           0xfb603	                   movzx eax, byte [rbx]	      5621	normal.c	FUNCTION_66	CALL_5
0x4008534	            0x84c0	                             test al, al	      5622	normal.c	FUNCTION_66	CALL_6
0x4008536	     0xf84f8060000	                            je 0x4008c34	      5622	normal.c	FUNCTION_66	CALL_6
0x400853c	            0x3c3a	                            cmp al, 0x3a	      5621	normal.c	FUNCTION_66	CALL_5
0x400853e	            0x7516	                           jne 0x4008556	      5621	normal.c	FUNCTION_66	CALL_5
0x4008540	        0x807b0168	                cmp byte [rbx + 1], 0x68	      5621	normal.c	FUNCTION_66	CALL_5
0x4008544	            0x7510	                           jne 0x4008556	      5621	normal.c	FUNCTION_66	CALL_5
0x4008546	        0x807b0265	                cmp byte [rbx + 2], 0x65	      5621	normal.c	FUNCTION_66	CALL_5
0x400854a	            0x750a	                           jne 0x4008556	      5621	normal.c	FUNCTION_66	CALL_5
0x400854c	        0x807b0300	                   cmp byte [rbx + 3], 0	      5621	normal.c	FUNCTION_66	CALL_5
0x4008550	     0xf84de060000	                            je 0x4008c34	      5621	normal.c	FUNCTION_66	CALL_5
0x4008556	      0xbf00000000	                              mov edi, 0	      5622	normal.c	FUNCTION_66	CALL_6
0x400855b	      0xb906000000	                              mov ecx, 6	      5622	normal.c	FUNCTION_66	CALL_6
0x4008560	          0x4889de	                            mov rsi, rbx	      5622	normal.c	FUNCTION_66	CALL_6
0x4008563	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5622	normal.c	FUNCTION_66	CALL_6
0x4008565	           0xf97c0	                                 seta al	      5622	normal.c	FUNCTION_66	CALL_6
0x4008568	           0xf92c2	                                 setb dl	      5622	normal.c	FUNCTION_66	CALL_6
0x400856b	            0x29d0	                            sub eax, edx	      5622	normal.c	FUNCTION_66	CALL_6
0x400856d	           0xfbec0	                           movsx eax, al	      5622	normal.c	FUNCTION_66	CALL_6
0x4008570	            0x85c0	                           test eax, eax	      5622	normal.c	FUNCTION_66	CALL_6
0x4008572	        0x400f94c7	                                sete dil	      5622	normal.c	FUNCTION_66	CALL_6
0x4008576	        0x400fb6ff	                          movzx edi, dil	      5622	normal.c	FUNCTION_66	CALL_6
0x400857a	        0x897c2408	                mov dword [rsp + 8], edi	      5622	normal.c	FUNCTION_66	CALL_6
0x400857e	            0x7530	                           jne 0x40085b0	      5623	normal.c	FUNCTION_66	IF_7	CALL_7
0x4008580	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      5623	normal.c	FUNCTION_66	IF_7	CALL_7
0x4008585	      0xe800000000	                          call 0x400858a	      5623	normal.c	FUNCTION_66	IF_7	CALL_7
0x400858a	          0x803800	                       cmp byte [rax], 0	      5623	normal.c	FUNCTION_66	IF_7	CALL_7
0x400858d	            0x7521	                           jne 0x40085b0	      5623	normal.c	FUNCTION_66	IF_7	CALL_7
0x400858f	      0xba05000000	                              mov edx, 5	      5625	normal.c	FUNCTION_66	IF_7	CALL_9
0x4008594	      0xbe00000000	                              mov esi, 0	      5625	normal.c	FUNCTION_66	IF_7	CALL_9
0x4008599	      0xbf00000000	                              mov edi, 0	      5625	normal.c	FUNCTION_66	IF_7	CALL_9
0x400859e	      0xe800000000	                          call 0x40085a3	      5625	normal.c	FUNCTION_66	IF_7	CALL_9
0x40085a3	          0x4889c7	                            mov rdi, rax	      5625	normal.c	FUNCTION_66	IF_7	CALL_9
0x40085a6	      0xe800000000	                          call 0x40085ab	      5625	normal.c	FUNCTION_66	IF_7	CALL_9
0x40085ab	      0xe9a9060000	                           jmp 0x4008c59	      5626	normal.c	FUNCTION_66	IF_7
0x40085b0	           0xfb603	                   movzx eax, byte [rbx]	      5628	normal.c	FUNCTION_66
0x40085b3	        0x8844240f	                mov byte [rsp + 0xf], al	      5628	normal.c	FUNCTION_66
0x40085b7	      0xb800000000	                              mov eax, 0	      5629	normal.c	FUNCTION_66	CALL_10
0x40085bc	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      5629	normal.c	FUNCTION_66	CALL_10
0x40085c3	          0x4889df	                            mov rdi, rbx	      5629	normal.c	FUNCTION_66	CALL_10
0x40085c6	            0xf2ae	              repne scasb al, byte [rdi]	      5629	normal.c	FUNCTION_66	CALL_10
0x40085c8	          0x48f7d1	                                 not rcx	      5629	normal.c	FUNCTION_66	CALL_10
0x40085cb	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	      5629	normal.c	FUNCTION_66	CALL_10
0x40085cf	      0x448d74411d	         lea r14d, [rcx + rax*2 + 0x1d] 	      5629	normal.c	FUNCTION_66	CALL_10
0x40085d4	          0x4489f7	                           mov edi, r14d	      5630	normal.c	FUNCTION_66	CALL_11
0x40085d7	      0xe800000000	                          call 0x40085dc	      5630	normal.c	FUNCTION_66	CALL_11
0x40085dc	          0x4989c5	                            mov r13, rax	      5630	normal.c	FUNCTION_66	CALL_11
0x40085df	          0x4885c0	                           test rax, rax	      5631	normal.c	FUNCTION_66	IF_8
0x40085e2	     0xf8471060000	                            je 0x4008c59	      5631	normal.c	FUNCTION_66	IF_8
0x40085e8	          0xc60000	                       mov byte [rax], 0	      5633	normal.c	FUNCTION_66
0x40085eb	        0x4183fc2a	                          cmp r12d, 0x2a	      5635	normal.c	FUNCTION_66	SWITCH_1
0x40085ef	            0x7426	                            je 0x4008617	      5635	normal.c	FUNCTION_66	SWITCH_1
0x40085f1	        0x4183fc2a	                          cmp r12d, 0x2a	      5635	normal.c	FUNCTION_66	SWITCH_1
0x40085f5	            0x7f0b	                            jg 0x4008602	      5635	normal.c	FUNCTION_66	SWITCH_1
0x40085f7	        0x4183fc23	                          cmp r12d, 0x23	      5635	normal.c	FUNCTION_66	SWITCH_1
0x40085fb	            0x741a	                            je 0x4008617	      5635	normal.c	FUNCTION_66	SWITCH_1
0x40085fd	      0xe9e6020000	                           jmp 0x40088e8	      5635	normal.c	FUNCTION_66	SWITCH_1
0x4008602	        0x4183fc4b	                          cmp r12d, 0x4b	      5635	normal.c	FUNCTION_66	SWITCH_1
0x4008606	            0x7461	                            je 0x4008669	      5635	normal.c	FUNCTION_66	SWITCH_1
0x4008608	        0x4183fc5d	                          cmp r12d, 0x5d	      5635	normal.c	FUNCTION_66	SWITCH_1
0x400860c	     0xf84ad020000	                            je 0x40088bf	      5635	normal.c	FUNCTION_66	SWITCH_1
0x4008612	      0xe9d1020000	                           jmp 0x40088e8	      5635	normal.c	FUNCTION_66	SWITCH_1
0x4008617	      0xe800000000	                          call 0x400861c	      5645	normal.c	FUNCTION_66	SWITCH_1	CALL_12
0x400861c	    0x488b1d000000	            mov rbx, qword [0x04008623] 	      5646	normal.c	FUNCTION_66	SWITCH_1	CALL_13
0x4008623	      0x4c8b742420	            mov r14, qword [rsp + 0x20] 	      5646	normal.c	FUNCTION_66	SWITCH_1	CALL_13
0x4008628	      0xe800000000	                          call 0x400862d	      5646	normal.c	FUNCTION_66	SWITCH_1	CALL_13
0x400862d	          0x4929c6	                            sub r14, rax	      5646	normal.c	FUNCTION_66	SWITCH_1	CALL_13
0x4008630	        0x44897340	            mov dword [rbx + 0x40], r14d	      5646	normal.c	FUNCTION_66	SWITCH_1	CALL_13
0x4008634	      0x837c240400	                  cmp dword [rsp + 4], 0	      5648	normal.c	FUNCTION_66	SWITCH_1	IF_9	CALL_14
0x4008639	            0x751a	                           jne 0x4008655	      5648	normal.c	FUNCTION_66	SWITCH_1	IF_9	CALL_14
0x400863b	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      5648	normal.c	FUNCTION_66	SWITCH_1	IF_9	CALL_14
0x4008640	      0xe800000000	                          call 0x4008645	      5648	normal.c	FUNCTION_66	SWITCH_1	IF_9	CALL_14
0x4008645	            0x85c0	                           test eax, eax	      5648	normal.c	FUNCTION_66	SWITCH_1	IF_9	CALL_14
0x4008647	            0x740c	                            je 0x4008655	      5648	normal.c	FUNCTION_66	SWITCH_1	IF_9	CALL_14
0x4008649	    0x6641c745005c	                  mov word [r13], 0x3c5c	       110	string3.h	FUNCTION_147	CALL_3
0x4008650	      0x41c6450200	                   mov byte [r13 + 2], 0	       110	string3.h	FUNCTION_147	CALL_3
0x4008655	    0xc70500000000	               mov dword [0x0400865f], 1	      5650	normal.c	FUNCTION_66	SWITCH_1
0x400865f	      0xb800000000	                              mov eax, 0	      5579	normal.c	FUNCTION_66
0x4008664	      0xe9e0020000	                           jmp 0x4008949	      5651	normal.c	FUNCTION_66	SWITCH_1
0x4008669	      0x837c240800	                  cmp dword [rsp + 8], 0	      5654	normal.c	FUNCTION_66	SWITCH_1	IF_10
0x400866e	            0x7415	                            je 0x4008685	      5654	normal.c	FUNCTION_66	SWITCH_1	IF_10
0x4008670	    0xc70068652120	            mov dword [rax], 0x20216568 	       110	string3.h	FUNCTION_147	CALL_3
0x4008676	        0xc6400400	                   mov byte [rax + 4], 0	       110	string3.h	FUNCTION_147	CALL_3
0x400867a	    0x41be00000000	                             mov r14d, 0	      5769	normal.c	FUNCTION_66	ELSE_10	ELSE_14
0x4008680	      0xe907040000	                           jmp 0x4008a8c	      5769	normal.c	FUNCTION_66	ELSE_10	ELSE_14
0x4008685	      0x807c240f3a	              cmp byte [rsp + 0xf], 0x3a	      5656	normal.c	FUNCTION_66	SWITCH_1	ELSE_2	IF_11
0x400868a	            0x741f	                            je 0x40086ab	      5656	normal.c	FUNCTION_66	SWITCH_1	ELSE_2	IF_11
0x400868c	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      5669	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	WHILE_1
0x4008691	          0x80382d	                    cmp byte [rax], 0x2d	      5669	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	WHILE_1
0x4008694	     0xf8591000000	                           jne 0x400872b	      5669	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	WHILE_1
0x400869a	        0x8b54241c	            mov edx, dword [rsp + 0x1c] 	      5669	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	WHILE_1
0x400869e	        0x4883c001	                              add rax, 1	      5669	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	WHILE_1
0x40086a2	            0x85d2	                           test edx, edx	      5669	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	WHILE_1
0x40086a4	            0x7f6a	                            jg 0x4008710	      5669	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	WHILE_1
0x40086a6	      0xe980000000	                           jmp 0x400872b	      5669	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	WHILE_1
0x40086ab	        0x4d8b4728	              mov r8, qword [r15 + 0x28]	      5658	normal.c	FUNCTION_66	SWITCH_1	ELSE_2	IF_11	IF_12
0x40086af	          0x4d85c0	                             test r8, r8	      5658	normal.c	FUNCTION_66	SWITCH_1	ELSE_2	IF_11	IF_12
0x40086b2	            0x741a	                            je 0x40086ce	      5658	normal.c	FUNCTION_66	SWITCH_1	ELSE_2	IF_11	IF_12
0x40086b4	          0x4489f6	                           mov esi, r14d	      5659	normal.c	FUNCTION_66	SWITCH_1	ELSE_2	IF_11	IF_12	CALL_17
0x40086b7	          0x4889d9	                            mov rcx, rbx	      5659	normal.c	FUNCTION_66	SWITCH_1	ELSE_2	IF_11	IF_12	CALL_17
0x40086ba	      0xba00000000	                              mov edx, 0	      5659	normal.c	FUNCTION_66	SWITCH_1	ELSE_2	IF_11	IF_12	CALL_17
0x40086bf	          0x4889c7	                            mov rdi, rax	      5659	normal.c	FUNCTION_66	SWITCH_1	ELSE_2	IF_11	IF_12	CALL_17
0x40086c2	      0xb800000000	                              mov eax, 0	      5659	normal.c	FUNCTION_66	SWITCH_1	ELSE_2	IF_11	IF_12	CALL_17
0x40086c7	      0xe800000000	                          call 0x40086cc	      5659	normal.c	FUNCTION_66	SWITCH_1	ELSE_2	IF_11	IF_12	CALL_17
0x40086cc	            0xeb0b	                           jmp 0x40086d9	      5659	normal.c	FUNCTION_66	SWITCH_1	ELSE_2	IF_11	IF_12	CALL_17
0x40086ce	          0x4889de	                            mov rsi, rbx	       110	string3.h	FUNCTION_147	CALL_3
0x40086d1	          0x4889c7	                            mov rdi, rax	       110	string3.h	FUNCTION_147	CALL_3
0x40086d4	      0xe800000000	                          call 0x40086d9	       110	string3.h	FUNCTION_147	CALL_3
0x40086d9	      0xb800000000	                              mov eax, 0	       148	string3.h	FUNCTION_151	CALL_3
0x40086de	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       148	string3.h	FUNCTION_151	CALL_3
0x40086e5	          0x4c89ef	                            mov rdi, r13	       148	string3.h	FUNCTION_151	CALL_3
0x40086e8	            0xf2ae	              repne scasb al, byte [rdi]	       148	string3.h	FUNCTION_151	CALL_3
0x40086ea	          0x4889c8	                            mov rax, rcx	       148	string3.h	FUNCTION_151	CALL_3
0x40086ed	          0x48f7d0	                                 not rax	       148	string3.h	FUNCTION_151	CALL_3
0x40086f0	    0x6641c74405ff	         mov word [r13 + rax - 1], 0x20 	       148	string3.h	FUNCTION_151	CALL_3
0x40086f8	        0x8b74241c	            mov esi, dword [rsp + 0x1c] 	      5730	normal.c	FUNCTION_66	IF_20	CALL_38
0x40086fc	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      5730	normal.c	FUNCTION_66	IF_20	CALL_38
0x4008701	      0xe800000000	                          call 0x4008706	      5730	normal.c	FUNCTION_66	IF_20	CALL_38
0x4008706	      0x4889442420	             mov qword [rsp + 0x20], rax	      5730	normal.c	FUNCTION_66	IF_20	CALL_38
0x400870b	      0xe967020000	                           jmp 0x4008977	      5730	normal.c	FUNCTION_66	IF_20	CALL_38
0x4008710	      0x4889442420	             mov qword [rsp + 0x20], rax	      5671	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	WHILE_1
0x4008715	          0x83ea01	                              sub edx, 1	      5672	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	WHILE_1
0x4008718	        0x8954241c	             mov dword [rsp + 0x1c], edx	      5672	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	WHILE_1
0x400871c	          0x80382d	                    cmp byte [rax], 0x2d	      5669	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	WHILE_1
0x400871f	            0x750a	                           jne 0x400872b	      5669	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	WHILE_1
0x4008721	        0x4883c001	                              add rax, 1	      5669	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	WHILE_1
0x4008725	            0x85d2	                           test edx, edx	      5669	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	WHILE_1
0x4008727	            0x75e7	                           jne 0x4008710	      5669	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	WHILE_1
0x4008729	            0xeb07	                           jmp 0x4008732	      5669	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	WHILE_1
0x400872b	      0x837c241c00	               cmp dword [rsp + 0x1c], 0	      5674	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_13
0x4008730	            0x7529	                           jne 0x400875b	      5674	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_13
0x4008732	      0xba05000000	                              mov edx, 5	      5676	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_13	CALL_21
0x4008737	      0xbe00000000	                              mov esi, 0	      5676	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_13	CALL_21
0x400873c	      0xbf00000000	                              mov edi, 0	      5676	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_13	CALL_21
0x4008741	      0xe800000000	                          call 0x4008746	      5676	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_13	CALL_21
0x4008746	          0x4889c7	                            mov rdi, rax	      5676	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_13	CALL_21
0x4008749	      0xe800000000	                          call 0x400874e	      5676	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_13	CALL_21
0x400874e	          0x4c89ef	                            mov rdi, r13	      5677	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_13	CALL_22
0x4008751	      0xe800000000	                          call 0x4008756	      5677	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_13	CALL_22
0x4008756	      0xe9fe040000	                           jmp 0x4008c59	      5678	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_13
0x400875b	           0xfb613	                   movzx edx, byte [rbx]	      5683	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_23
0x400875e	      0xb86d000000	                           mov eax, 0x6d	      5683	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_23
0x4008763	            0x29d0	                            sub eax, edx	      5683	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_23
0x4008765	            0x7520	                           jne 0x4008787	      5683	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_23
0x4008767	         0xfb65301	               movzx edx, byte [rbx + 1]	      5683	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_23
0x400876b	      0xb861000000	                           mov eax, 0x61	      5683	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_23
0x4008770	            0x29d0	                            sub eax, edx	      5683	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_23
0x4008772	            0x7513	                           jne 0x4008787	      5683	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_23
0x4008774	         0xfb65302	               movzx edx, byte [rbx + 2]	      5683	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_23
0x4008778	      0xb86e000000	                           mov eax, 0x6e	      5683	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_23
0x400877d	            0x29d0	                            sub eax, edx	      5683	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_23
0x400877f	            0x7506	                           jne 0x4008787	      5683	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_23
0x4008781	         0xfb64303	               movzx eax, byte [rbx + 3]	      5683	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_23
0x4008785	            0xf7d8	                                 neg eax	      5683	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_23
0x4008787	            0x85c0	                           test eax, eax	      5683	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_23
0x4008789	        0x400f94c5	                                sete bpl	      5683	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_23
0x400878d	      0xbf00000000	                              mov edi, 0	      5684	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_24
0x4008792	      0xb907000000	                              mov ecx, 7	      5684	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_24
0x4008797	          0x4889de	                            mov rsi, rbx	      5684	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_24
0x400879a	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5684	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_24
0x400879c	           0xf97c2	                                 seta dl	      5684	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_24
0x400879f	           0xf92c0	                                 setb al	      5684	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_24
0x40087a2	            0x38c2	                              cmp dl, al	      5684	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_24
0x40087a4	        0x410f94c6	                               sete r14b	      5684	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_24
0x40087a8	        0x4d8b4728	              mov r8, qword [r15 + 0x28]	      5685	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_14
0x40087ac	          0x4d85c0	                             test r8, r8	      5685	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_14
0x40087af	            0x742c	                            je 0x40087dd	      5685	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_14
0x40087b1	          0x4084ed	                           test bpl, bpl	      5685	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_14
0x40087b4	            0x7527	                           jne 0x40087dd	      5685	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_14
0x40087b6	          0x4584f6	                         test r14b, r14b	      5685	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_14
0x40087b9	            0x7522	                           jne 0x40087dd	      5685	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_14
0x40087bb	        0x4983e801	                               sub r8, 1	        33	stdio2.h	FUNCTION_153	CALL_2
0x40087bf	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_153	CALL_2
0x40087c4	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_153	CALL_2
0x40087cb	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_153	CALL_2
0x40087d0	          0x4c89ef	                            mov rdi, r13	        33	stdio2.h	FUNCTION_153	CALL_2
0x40087d3	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_153	CALL_2
0x40087d8	      0xe800000000	                          call 0x40087dd	        33	stdio2.h	FUNCTION_153	CALL_2
0x40087dd	      0xb800000000	                              mov eax, 0	       148	string3.h	FUNCTION_151	CALL_3
0x40087e2	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       148	string3.h	FUNCTION_151	CALL_3
0x40087e9	          0x4c89ef	                            mov rdi, r13	       148	string3.h	FUNCTION_151	CALL_3
0x40087ec	            0xf2ae	              repne scasb al, byte [rdi]	       148	string3.h	FUNCTION_151	CALL_3
0x40087ee	          0x4889c8	                            mov rax, rcx	       148	string3.h	FUNCTION_151	CALL_3
0x40087f1	          0x48f7d0	                                 not rax	       148	string3.h	FUNCTION_151	CALL_3
0x40087f4	      0x498d4405ff	                lea rax, [r13 + rax - 1]	       148	string3.h	FUNCTION_151	CALL_3
0x40087f9	      0x66c7002120	                  mov word [rax], 0x2021	       148	string3.h	FUNCTION_151	CALL_3
0x40087fe	        0xc6400200	                   mov byte [rax + 2], 0	       148	string3.h	FUNCTION_151	CALL_3
0x4008802	      0x49837f2800	               cmp qword [r15 + 0x28], 0	      5689	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_15
0x4008807	            0x7527	                           jne 0x4008830	      5689	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_15
0x4008809	          0x4584f6	                         test r14b, r14b	      5689	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_15
0x400880c	            0x7422	                            je 0x4008830	      5689	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_15
0x400880e	      0xb800000000	                              mov eax, 0	       148	string3.h	FUNCTION_151	CALL_3
0x4008813	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       148	string3.h	FUNCTION_151	CALL_3
0x400881a	          0x4c89ef	                            mov rdi, r13	       148	string3.h	FUNCTION_151	CALL_3
0x400881d	            0xf2ae	              repne scasb al, byte [rdi]	       148	string3.h	FUNCTION_151	CALL_3
0x400881f	          0x4889c8	                            mov rax, rcx	       148	string3.h	FUNCTION_151	CALL_3
0x4008822	          0x48f7d0	                                 not rax	       148	string3.h	FUNCTION_151	CALL_3
0x4008825	    0x41c74405ff6d	    mov dword [r13 + rax - 1], 0x6e616d 	       148	string3.h	FUNCTION_151	CALL_3
0x400882e	            0xeb0b	                           jmp 0x400883b	       148	string3.h	FUNCTION_151	CALL_3
0x4008830	          0x4889de	                            mov rsi, rbx	       148	string3.h	FUNCTION_151	CALL_3
0x4008833	          0x4c89ef	                            mov rdi, r13	       148	string3.h	FUNCTION_151	CALL_3
0x4008836	      0xe800000000	                          call 0x400883b	       148	string3.h	FUNCTION_151	CALL_3
0x400883b	      0xb800000000	                              mov eax, 0	       148	string3.h	FUNCTION_151	CALL_3
0x4008840	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       148	string3.h	FUNCTION_151	CALL_3
0x4008847	          0x4c89ef	                            mov rdi, r13	       148	string3.h	FUNCTION_151	CALL_3
0x400884a	            0xf2ae	              repne scasb al, byte [rdi]	       148	string3.h	FUNCTION_151	CALL_3
0x400884c	          0x4889c8	                            mov rax, rcx	       148	string3.h	FUNCTION_151	CALL_3
0x400884f	          0x48f7d0	                                 not rax	       148	string3.h	FUNCTION_151	CALL_3
0x4008852	    0x6641c74405ff	         mov word [r13 + rax - 1], 0x20 	       148	string3.h	FUNCTION_151	CALL_3
0x400885a	        0x4d8b4728	              mov r8, qword [r15 + 0x28]	      5694	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_16
0x400885e	          0x4d85c0	                             test r8, r8	      5694	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_16
0x4008861	     0xf84da030000	                            je 0x4008c41	      5694	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_16
0x4008867	          0x4084ed	                           test bpl, bpl	      5694	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_16
0x400886a	            0x7509	                           jne 0x4008875	      5694	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_16
0x400886c	          0x4584f6	                         test r14b, r14b	      5694	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_16
0x400886f	     0xf84cc030000	                            je 0x4008c41	      5694	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_16
0x4008875	    0x48c7c5ffffff	             mov rbp, 0xffffffffffffffff	      5696	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_16	CALL_31
0x400887c	      0xbb00000000	                              mov ebx, 0	      5696	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_16	CALL_31
0x4008881	          0x4889e9	                            mov rcx, rbp	      5696	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_16	CALL_31
0x4008884	          0x4c89ef	                            mov rdi, r13	      5696	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_16	CALL_31
0x4008887	            0x89d8	                            mov eax, ebx	      5696	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_16	CALL_31
0x4008889	            0xf2ae	              repne scasb al, byte [rdi]	      5696	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_16	CALL_31
0x400888b	          0x48f7d1	                                 not rcx	      5696	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_16	CALL_31
0x400888e	      0x498d7c0dff	                lea rdi, [r13 + rcx - 1]	        33	stdio2.h	FUNCTION_153	CALL_2
0x4008893	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_153	CALL_2
0x4008898	          0x4889ea	                            mov rdx, rbp	        33	stdio2.h	FUNCTION_153	CALL_2
0x400889b	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_153	CALL_2
0x40088a0	      0xe800000000	                          call 0x40088a5	        33	stdio2.h	FUNCTION_153	CALL_2
0x40088a5	          0x4889e9	                            mov rcx, rbp	       148	string3.h	FUNCTION_151	CALL_3
0x40088a8	          0x4c89ef	                            mov rdi, r13	       148	string3.h	FUNCTION_151	CALL_3
0x40088ab	            0x89d8	                            mov eax, ebx	       148	string3.h	FUNCTION_151	CALL_3
0x40088ad	            0xf2ae	              repne scasb al, byte [rdi]	       148	string3.h	FUNCTION_151	CALL_3
0x40088af	          0x48f7d1	                                 not rcx	       148	string3.h	FUNCTION_151	CALL_3
0x40088b2	    0x6641c7440dff	         mov word [r13 + rcx - 1], 0x20 	       148	string3.h	FUNCTION_151	CALL_3
0x40088ba	      0xe982030000	                           jmp 0x4008c41	       148	string3.h	FUNCTION_151	CALL_3
0x40088bf	    0x833d00000000	               cmp dword [0x040088c6], 0	      5705	normal.c	FUNCTION_66	SWITCH_1	IF_17
0x40088c6	            0x7415	                            je 0x40088dd	      5705	normal.c	FUNCTION_66	SWITCH_1	IF_17
0x40088c8	    0xc70063737461	            mov dword [rax], 0x61747363 	       110	string3.h	FUNCTION_147	CALL_3
0x40088ce	    0x66c740046720	              mov word [rax + 4], 0x2067	       110	string3.h	FUNCTION_147	CALL_3
0x40088d4	        0xc6400600	                   mov byte [rax + 6], 0	       110	string3.h	FUNCTION_147	CALL_3
0x40088d8	      0xe98a010000	                           jmp 0x4008a67	       110	string3.h	FUNCTION_147	CALL_3
0x40088dd	    0xc70074732000	               mov dword [rax], 0x207374	       110	string3.h	FUNCTION_147	CALL_3
0x40088e3	      0xe97f010000	                           jmp 0x4008a67	       110	string3.h	FUNCTION_147	CALL_3
0x40088e8	    0x488b05000000	            mov rax, qword [0x040088ef] 	      5714	normal.c	FUNCTION_66	SWITCH_1	IF_18
0x40088ef	    0x83b858170000	             cmp dword [rax + 0x1758], 0	      5714	normal.c	FUNCTION_66	SWITCH_1	IF_18
0x40088f6	            0x7414	                            je 0x400890c	      5714	normal.c	FUNCTION_66	SWITCH_1	IF_18
0x40088f8	    0x41c745006865	            mov dword [r13], 0x20216568 	       110	string3.h	FUNCTION_147	CALL_3
0x4008900	      0x41c6450400	                   mov byte [r13 + 4], 0	       110	string3.h	FUNCTION_147	CALL_3
0x4008905	      0xb801000000	                              mov eax, 1	      5713	normal.c	FUNCTION_66	SWITCH_1
0x400890a	            0xeb3d	                           jmp 0x4008949	      5713	normal.c	FUNCTION_66	SWITCH_1
0x400890c	      0x837c240400	                  cmp dword [rsp + 4], 0	      5718	normal.c	FUNCTION_66	SWITCH_1	ELSE_7	IF_19
0x4008911	            0x740f	                            je 0x4008922	      5718	normal.c	FUNCTION_66	SWITCH_1	ELSE_7	IF_19
0x4008913	    0x41c74500746a	               mov dword [r13], 0x206a74	       110	string3.h	FUNCTION_147	CALL_3
0x400891b	      0xb801000000	                              mov eax, 1	      5713	normal.c	FUNCTION_66	SWITCH_1
0x4008920	            0xeb27	                           jmp 0x4008949	      5713	normal.c	FUNCTION_66	SWITCH_1
0x4008922	        0x4d8b4728	              mov r8, qword [r15 + 0x28]	        33	stdio2.h	FUNCTION_153	CALL_2
0x4008926	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_153	CALL_2
0x400892b	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_153	CALL_2
0x4008932	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_153	CALL_2
0x4008937	          0x4c89ef	                            mov rdi, r13	        33	stdio2.h	FUNCTION_153	CALL_2
0x400893a	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_153	CALL_2
0x400893f	      0xe800000000	                          call 0x4008944	        33	stdio2.h	FUNCTION_153	CALL_2
0x4008944	      0xb801000000	                              mov eax, 1	      5713	normal.c	FUNCTION_66	SWITCH_1
0x4008949	      0x837c240800	                  cmp dword [rsp + 8], 0	      5728	normal.c	FUNCTION_66	IF_20
0x400894e	     0xf85d3000000	                           jne 0x4008a27	      5728	normal.c	FUNCTION_66	IF_20
0x4008954	          0x4084ed	                           test bpl, bpl	      5728	normal.c	FUNCTION_66	IF_20
0x4008957	     0xf84ca000000	                            je 0x4008a27	      5728	normal.c	FUNCTION_66	IF_20
0x400895d	        0x8b74241c	            mov esi, dword [rsp + 0x1c] 	      5730	normal.c	FUNCTION_66	IF_20	CALL_38
0x4008961	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      5730	normal.c	FUNCTION_66	IF_20	CALL_38
0x4008966	      0xe800000000	                          call 0x400896b	      5730	normal.c	FUNCTION_66	IF_20	CALL_38
0x400896b	      0x4889442420	             mov qword [rsp + 0x20], rax	      5730	normal.c	FUNCTION_66	IF_20	CALL_38
0x4008970	      0x807c240f3a	              cmp byte [rsp + 0xf], 0x3a	      5731	normal.c	FUNCTION_66	IF_20	IF_21
0x4008975	            0x7512	                           jne 0x4008989	      5731	normal.c	FUNCTION_66	IF_20	IF_21
0x4008977	      0xbe00000000	                              mov esi, 0	      5733	normal.c	FUNCTION_66	IF_20	CALL_39
0x400897c	          0x4889c7	                            mov rdi, rax	      5733	normal.c	FUNCTION_66	IF_20	CALL_39
0x400897f	      0xe800000000	                          call 0x4008984	      5733	normal.c	FUNCTION_66	IF_20	CALL_39
0x4008984	          0x4889c3	                            mov rbx, rax	      5733	normal.c	FUNCTION_66	IF_20	CALL_39
0x4008987	            0xeb15	                           jmp 0x400899e	      5733	normal.c	FUNCTION_66	IF_20	CALL_39
0x4008989	      0xba01000000	                              mov edx, 1	      5736	normal.c	FUNCTION_66	IF_20	CALL_40
0x400898e	      0xbe01000000	                              mov esi, 1	      5736	normal.c	FUNCTION_66	IF_20	CALL_40
0x4008993	          0x4889c7	                            mov rdi, rax	      5736	normal.c	FUNCTION_66	IF_20	CALL_40
0x4008996	      0xe800000000	                          call 0x400899b	      5736	normal.c	FUNCTION_66	IF_20	CALL_40
0x400899b	          0x4889c3	                            mov rbx, rax	      5736	normal.c	FUNCTION_66	IF_20	CALL_40
0x400899e	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      5737	normal.c	FUNCTION_66	IF_20	CALL_41
0x40089a3	      0xe800000000	                          call 0x40089a8	      5737	normal.c	FUNCTION_66	IF_20	CALL_41
0x40089a8	          0x4885db	                           test rbx, rbx	      5738	normal.c	FUNCTION_66	IF_20	IF_22
0x40089ab	            0x750d	                           jne 0x40089ba	      5738	normal.c	FUNCTION_66	IF_20	IF_22
0x40089ad	          0x4c89ef	                            mov rdi, r13	      5740	normal.c	FUNCTION_66	IF_20	IF_22	CALL_42
0x40089b0	      0xe800000000	                          call 0x40089b5	      5740	normal.c	FUNCTION_66	IF_20	IF_22	CALL_42
0x40089b5	      0xe99f020000	                           jmp 0x4008c59	      5741	normal.c	FUNCTION_66	IF_20	IF_22
0x40089ba	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	      5743	normal.c	FUNCTION_66	IF_20	CALL_45
0x40089c1	      0xb800000000	                              mov eax, 0	      5743	normal.c	FUNCTION_66	IF_20	CALL_45
0x40089c6	          0x4889f1	                            mov rcx, rsi	      5743	normal.c	FUNCTION_66	IF_20	CALL_45
0x40089c9	          0x4c89ef	                            mov rdi, r13	      5743	normal.c	FUNCTION_66	IF_20	CALL_45
0x40089cc	            0xf2ae	              repne scasb al, byte [rdi]	      5743	normal.c	FUNCTION_66	IF_20	CALL_45
0x40089ce	          0x48f7d1	                                 not rcx	      5743	normal.c	FUNCTION_66	IF_20	CALL_45
0x40089d1	          0x4889ca	                            mov rdx, rcx	      5743	normal.c	FUNCTION_66	IF_20	CALL_45
0x40089d4	          0x4889f1	                            mov rcx, rsi	      5743	normal.c	FUNCTION_66	IF_20	CALL_45
0x40089d7	          0x4889df	                            mov rdi, rbx	      5743	normal.c	FUNCTION_66	IF_20	CALL_45
0x40089da	            0xf2ae	              repne scasb al, byte [rdi]	      5743	normal.c	FUNCTION_66	IF_20	CALL_45
0x40089dc	          0x4889c8	                            mov rax, rcx	      5743	normal.c	FUNCTION_66	IF_20	CALL_45
0x40089df	          0x48f7d0	                                 not rax	      5743	normal.c	FUNCTION_66	IF_20	CALL_45
0x40089e2	      0x488d7402ff	                lea rsi, [rdx + rax - 1]	      5743	normal.c	FUNCTION_66	IF_20	CALL_45
0x40089e7	          0x4c89ef	                            mov rdi, r13	      5743	normal.c	FUNCTION_66	IF_20	CALL_45
0x40089ea	      0xe800000000	                          call 0x40089ef	      5743	normal.c	FUNCTION_66	IF_20	CALL_45
0x40089ef	          0x4889c5	                            mov rbp, rax	      5743	normal.c	FUNCTION_66	IF_20	CALL_45
0x40089f2	          0x4885c0	                           test rax, rax	      5744	normal.c	FUNCTION_66	IF_20	IF_23
0x40089f5	            0x7515	                           jne 0x4008a0c	      5744	normal.c	FUNCTION_66	IF_20	IF_23
0x40089f7	          0x4c89ef	                            mov rdi, r13	      5746	normal.c	FUNCTION_66	IF_20	IF_23	CALL_46
0x40089fa	      0xe800000000	                          call 0x40089ff	      5746	normal.c	FUNCTION_66	IF_20	IF_23	CALL_46
0x40089ff	          0x4889df	                            mov rdi, rbx	      5747	normal.c	FUNCTION_66	IF_20	IF_23	CALL_47
0x4008a02	      0xe800000000	                          call 0x4008a07	      5747	normal.c	FUNCTION_66	IF_20	IF_23	CALL_47
0x4008a07	      0xe94d020000	                           jmp 0x4008c59	      5748	normal.c	FUNCTION_66	IF_20	IF_23
0x4008a0c	          0x4889de	                            mov rsi, rbx	       148	string3.h	FUNCTION_151	CALL_3
0x4008a0f	          0x4889c7	                            mov rdi, rax	       148	string3.h	FUNCTION_151	CALL_3
0x4008a12	      0xe800000000	                          call 0x4008a17	       148	string3.h	FUNCTION_151	CALL_3
0x4008a17	          0x4889df	                            mov rdi, rbx	      5752	normal.c	FUNCTION_66	IF_20	CALL_49
0x4008a1a	      0xe800000000	                          call 0x4008a1f	      5752	normal.c	FUNCTION_66	IF_20	CALL_49
0x4008a1f	          0x4989ed	                            mov r13, rbp	      5750	normal.c	FUNCTION_66	IF_20
0x4008a22	      0xe93c010000	                           jmp 0x4008b63	      5750	normal.c	FUNCTION_66	IF_20
0x4008a27	        0x4183fc2a	                          cmp r12d, 0x2a	      5756	normal.c	FUNCTION_66	ELSE_10	IF_24
0x4008a2b	            0x7518	                           jne 0x4008a45	      5756	normal.c	FUNCTION_66	ELSE_10	IF_24
0x4008a2d	    0x833d00000000	               cmp dword [0x04008a34], 0	      5757	normal.c	FUNCTION_66	ELSE_10	IF_24
0x4008a34	      0xb800000000	                              mov eax, 0	      5757	normal.c	FUNCTION_66	ELSE_10	IF_24
0x4008a39	    0x41be00000000	                             mov r14d, 0	      5757	normal.c	FUNCTION_66	ELSE_10	IF_24
0x4008a3f	        0x4c0f44f0	                          cmove r14, rax	      5757	normal.c	FUNCTION_66	ELSE_10	IF_24
0x4008a43	            0xeb47	                           jmp 0x4008a8c	      5757	normal.c	FUNCTION_66	ELSE_10	IF_24
0x4008a45	        0x4183fc23	                          cmp r12d, 0x23	      5758	normal.c	FUNCTION_66	ELSE_10	ELSE_11	IF_25
0x4008a49	            0x7518	                           jne 0x4008a63	      5758	normal.c	FUNCTION_66	ELSE_10	ELSE_11	IF_25
0x4008a4b	    0x833d00000000	               cmp dword [0x04008a52], 0	      5759	normal.c	FUNCTION_66	ELSE_10	ELSE_11	IF_25
0x4008a52	      0xb800000000	                              mov eax, 0	      5759	normal.c	FUNCTION_66	ELSE_10	ELSE_11	IF_25
0x4008a57	    0x41be00000000	                             mov r14d, 0	      5759	normal.c	FUNCTION_66	ELSE_10	ELSE_11	IF_25
0x4008a5d	        0x4c0f44f0	                          cmove r14, rax	      5759	normal.c	FUNCTION_66	ELSE_10	ELSE_11	IF_25
0x4008a61	            0xeb29	                           jmp 0x4008a8c	      5759	normal.c	FUNCTION_66	ELSE_10	ELSE_11	IF_25
0x4008a63	            0x85c0	                           test eax, eax	      5760	normal.c	FUNCTION_66	ELSE_10	ELSE_12	IF_26
0x4008a65	            0x741f	                            je 0x4008a86	      5760	normal.c	FUNCTION_66	ELSE_10	ELSE_12	IF_26
0x4008a67	    0x488b05000000	            mov rax, qword [0x04008a6e] 	      5762	normal.c	FUNCTION_66	ELSE_10	ELSE_12	IF_26	IF_27
0x4008a6e	    0x83b858170000	             cmp dword [rax + 0x1758], 0	      5766	normal.c	FUNCTION_66	ELSE_10	ELSE_12	IF_26	ELSE_13
0x4008a75	      0xb800000000	                              mov eax, 0	      5766	normal.c	FUNCTION_66	ELSE_10	ELSE_12	IF_26	ELSE_13
0x4008a7a	    0x41be00000000	                             mov r14d, 0	      5766	normal.c	FUNCTION_66	ELSE_10	ELSE_12	IF_26	ELSE_13
0x4008a80	        0x4c0f44f0	                          cmove r14, rax	      5766	normal.c	FUNCTION_66	ELSE_10	ELSE_12	IF_26	ELSE_13
0x4008a84	            0xeb06	                           jmp 0x4008a8c	      5766	normal.c	FUNCTION_66	ELSE_10	ELSE_12	IF_26	ELSE_13
0x4008a86	    0x41be00000000	                             mov r14d, 0	      5769	normal.c	FUNCTION_66	ELSE_10	ELSE_14
0x4008a8c	      0xb800000000	                              mov eax, 0	      5771	normal.c	FUNCTION_66	ELSE_10	CALL_50
0x4008a91	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      5771	normal.c	FUNCTION_66	ELSE_10	CALL_50
0x4008a98	          0x4c89ef	                            mov rdi, r13	      5771	normal.c	FUNCTION_66	ELSE_10	CALL_50
0x4008a9b	            0xf2ae	              repne scasb al, byte [rdi]	      5771	normal.c	FUNCTION_66	ELSE_10	CALL_50
0x4008a9d	          0x48f7d1	                                 not rcx	      5771	normal.c	FUNCTION_66	ELSE_10	CALL_50
0x4008aa0	      0x498d6c0dff	                lea rbp, [r13 + rcx - 1]	      5771	normal.c	FUNCTION_66	ELSE_10	CALL_50
0x4008aa5	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	      5772	normal.c	FUNCTION_66	ELSE_10	WHILE_2
0x4008aa9	          0x8d50ff	                      lea edx, [rax - 1]	      5772	normal.c	FUNCTION_66	ELSE_10	WHILE_2
0x4008aac	        0x8954241c	             mov dword [rsp + 0x1c], edx	      5772	normal.c	FUNCTION_66	ELSE_10	WHILE_2
0x4008ab0	            0x85c0	                           test eax, eax	      5772	normal.c	FUNCTION_66	ELSE_10	WHILE_2
0x4008ab2	     0xf8ea7000000	                           jle 0x4008b5f	      5772	normal.c	FUNCTION_66	ELSE_10	WHILE_2
0x4008ab8	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      5775	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_28	CALL_51
0x4008abd	           0xfb630	                   movzx esi, byte [rax]	      5775	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_28	CALL_51
0x4008ac0	          0x4c89f7	                            mov rdi, r14	      5775	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_28	CALL_51
0x4008ac3	      0xe800000000	                          call 0x4008ac8	      5775	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_28	CALL_51
0x4008ac8	          0x4885c0	                           test rax, rax	      5775	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_28	CALL_51
0x4008acb	            0x740a	                            je 0x4008ad7	      5775	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_28	CALL_51
0x4008acd	        0x488d5d01	                      lea rbx, [rbp + 1]	      5776	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_28
0x4008ad1	        0xc645005c	                    mov byte [rbp], 0x5c	      5776	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_28
0x4008ad5	            0xeb03	                           jmp 0x4008ada	      5776	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_28
0x4008ad7	          0x4889eb	                            mov rbx, rbp	      5776	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_28
0x4008ada	    0x833d00000000	               cmp dword [0x04008ae1], 0	      5780	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_29
0x4008ae1	            0x7452	                            je 0x4008b35	      5780	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_29
0x4008ae3	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      5783	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_29
0x4008ae8	    0xff1500000000	                 call qword [0x04008aee]	      5783	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_29
0x4008aee	          0x8d50ff	                      lea edx, [rax - 1]	      5785	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_29	FOR_1
0x4008af1	            0x85d2	                           test edx, edx	      5785	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_29	FOR_1
0x4008af3	            0x7e40	                           jle 0x4008b35	      5785	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_29	FOR_1
0x4008af5	      0x837c241c00	               cmp dword [rsp + 0x1c], 0	      5785	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_29	FOR_1
0x4008afa	            0x7e39	                           jle 0x4008b35	      5785	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_29	FOR_1
0x4008afc	          0x8d40fe	                      lea eax, [rax - 2]	      5785	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_29	FOR_1
0x4008aff	      0x488d4c0301	                lea rcx, [rbx + rax + 1]	      5785	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_29	FOR_1
0x4008b04	        0x4883c301	                              add rbx, 1	      5786	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_29	FOR_1
0x4008b08	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      5786	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_29	FOR_1
0x4008b0d	        0x488d5001	                      lea rdx, [rax + 1]	      5786	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_29	FOR_1
0x4008b11	      0x4889542420	             mov qword [rsp + 0x20], rdx	      5786	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_29	FOR_1
0x4008b16	           0xfb600	                   movzx eax, byte [rax]	      5786	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_29	FOR_1
0x4008b19	          0x8843ff	                  mov byte [rbx - 1], al	      5786	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_29	FOR_1
0x4008b1c	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	      5785	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_29	FOR_1
0x4008b20	          0x83e801	                              sub eax, 1	      5785	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_29	FOR_1
0x4008b23	        0x8944241c	             mov dword [rsp + 0x1c], eax	      5785	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_29	FOR_1
0x4008b27	          0x4839d9	                            cmp rcx, rbx	      5785	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_29	FOR_1
0x4008b2a	            0x7406	                            je 0x4008b32	      5785	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_29	FOR_1
0x4008b2c	            0x85c0	                           test eax, eax	      5785	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_29	FOR_1
0x4008b2e	            0x7fd4	                            jg 0x4008b04	      5785	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_29	FOR_1
0x4008b30	            0xeb03	                           jmp 0x4008b35	      5785	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_29	FOR_1
0x4008b32	          0x4889cb	                            mov rbx, rcx	      5786	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_29	FOR_1
0x4008b35	        0x488d6b01	                      lea rbp, [rbx + 1]	      5789	normal.c	FUNCTION_66	ELSE_10	WHILE_2
0x4008b39	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      5789	normal.c	FUNCTION_66	ELSE_10	WHILE_2
0x4008b3e	        0x488d5001	                      lea rdx, [rax + 1]	      5789	normal.c	FUNCTION_66	ELSE_10	WHILE_2
0x4008b42	      0x4889542420	             mov qword [rsp + 0x20], rdx	      5789	normal.c	FUNCTION_66	ELSE_10	WHILE_2
0x4008b47	           0xfb600	                   movzx eax, byte [rax]	      5789	normal.c	FUNCTION_66	ELSE_10	WHILE_2
0x4008b4a	            0x8803	                      mov byte [rbx], al	      5789	normal.c	FUNCTION_66	ELSE_10	WHILE_2
0x4008b4c	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	      5772	normal.c	FUNCTION_66	ELSE_10	WHILE_2
0x4008b50	          0x8d50ff	                      lea edx, [rax - 1]	      5772	normal.c	FUNCTION_66	ELSE_10	WHILE_2
0x4008b53	        0x8954241c	             mov dword [rsp + 0x1c], edx	      5772	normal.c	FUNCTION_66	ELSE_10	WHILE_2
0x4008b57	            0x85c0	                           test eax, eax	      5772	normal.c	FUNCTION_66	ELSE_10	WHILE_2
0x4008b59	     0xf8f59ffffff	                            jg 0x4008ab8	      5772	normal.c	FUNCTION_66	ELSE_10	WHILE_2
0x4008b5f	        0xc6450000	                       mov byte [rbp], 0	      5791	normal.c	FUNCTION_66	ELSE_10
0x4008b63	        0x4183fc2a	                          cmp r12d, 0x2a	      5797	normal.c	FUNCTION_66	IF_30
0x4008b67	            0x740a	                            je 0x4008b73	      5797	normal.c	FUNCTION_66	IF_30
0x4008b69	        0x4183fc23	                          cmp r12d, 0x23	      5797	normal.c	FUNCTION_66	IF_30
0x4008b6d	     0xf85af000000	                           jne 0x4008c22	      5797	normal.c	FUNCTION_66	IF_30
0x4008b73	      0x837c240400	                  cmp dword [rsp + 4], 0	      5799	normal.c	FUNCTION_66	IF_30	IF_31
0x4008b78	            0x7569	                           jne 0x4008be3	      5799	normal.c	FUNCTION_66	IF_30	IF_31
0x4008b7a	    0x833d00000000	               cmp dword [0x04008b81], 0	      5799	normal.c	FUNCTION_66	IF_30	IF_31
0x4008b81	            0x7424	                            je 0x4008ba7	      5799	normal.c	FUNCTION_66	IF_30	IF_31
0x4008b83	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	      5801	normal.c	FUNCTION_66	IF_30	IF_31	CALL_54
0x4008b88	      0xe800000000	                          call 0x4008b8d	      5801	normal.c	FUNCTION_66	IF_30	IF_31	CALL_54
0x4008b8d	          0x4889de	                            mov rsi, rbx	      5801	normal.c	FUNCTION_66	IF_30	IF_31	CALL_54
0x4008b90	          0x4889c7	                            mov rdi, rax	      5801	normal.c	FUNCTION_66	IF_30	IF_31	CALL_54
0x4008b93	      0xe800000000	                          call 0x4008b98	      5801	normal.c	FUNCTION_66	IF_30	IF_31	CALL_54
0x4008b98	          0x4889c7	                            mov rdi, rax	      5801	normal.c	FUNCTION_66	IF_30	IF_31	CALL_54
0x4008b9b	      0xe800000000	                          call 0x4008ba0	      5801	normal.c	FUNCTION_66	IF_30	IF_31	CALL_54
0x4008ba0	            0x85c0	                           test eax, eax	      5799	normal.c	FUNCTION_66	IF_30	IF_31
0x4008ba2	           0xf95c0	                                setne al	      5799	normal.c	FUNCTION_66	IF_30	IF_31
0x4008ba5	            0xeb13	                           jmp 0x4008bba	      5799	normal.c	FUNCTION_66	IF_30	IF_31
0x4008ba7	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      5803	normal.c	FUNCTION_66	IF_30	IF_31	CALL_55
0x4008bac	         0xfb678ff	               movzx edi, byte [rax - 1]	      5803	normal.c	FUNCTION_66	IF_30	IF_31	CALL_55
0x4008bb0	      0xe800000000	                          call 0x4008bb5	      5803	normal.c	FUNCTION_66	IF_30	IF_31	CALL_55
0x4008bb5	            0x85c0	                           test eax, eax	      5799	normal.c	FUNCTION_66	IF_30	IF_31
0x4008bb7	           0xf95c0	                                setne al	      5799	normal.c	FUNCTION_66	IF_30	IF_31
0x4008bba	            0x84c0	                             test al, al	      5799	normal.c	FUNCTION_66	IF_30	IF_31
0x4008bbc	            0x7425	                            je 0x4008be3	      5799	normal.c	FUNCTION_66	IF_30	IF_31
0x4008bbe	      0xb800000000	                              mov eax, 0	       148	string3.h	FUNCTION_151	CALL_3
0x4008bc3	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       148	string3.h	FUNCTION_151	CALL_3
0x4008bca	          0x4c89ef	                            mov rdi, r13	       148	string3.h	FUNCTION_151	CALL_3
0x4008bcd	            0xf2ae	              repne scasb al, byte [rdi]	       148	string3.h	FUNCTION_151	CALL_3
0x4008bcf	          0x4889c8	                            mov rax, rcx	       148	string3.h	FUNCTION_151	CALL_3
0x4008bd2	          0x48f7d0	                                 not rax	       148	string3.h	FUNCTION_151	CALL_3
0x4008bd5	      0x498d4405ff	                lea rax, [r13 + rax - 1]	       148	string3.h	FUNCTION_151	CALL_3
0x4008bda	      0x66c7005c3e	                  mov word [rax], 0x3e5c	       148	string3.h	FUNCTION_151	CALL_3
0x4008bdf	        0xc6400200	                   mov byte [rax + 2], 0	       148	string3.h	FUNCTION_151	CALL_3
0x4008be3	      0xe800000000	                          call 0x4008be8	      5807	normal.c	FUNCTION_66	IF_30	CALL_57
0x4008be8	      0xb900000000	                              mov ecx, 0	      5808	normal.c	FUNCTION_66	IF_30	CALL_58
0x4008bed	      0xba01000000	                              mov edx, 1	      5808	normal.c	FUNCTION_66	IF_30	CALL_58
0x4008bf2	          0x4c89ee	                            mov rsi, r13	      5808	normal.c	FUNCTION_66	IF_30	CALL_58
0x4008bf5	      0xbf01000000	                              mov edi, 1	      5808	normal.c	FUNCTION_66	IF_30	CALL_58
0x4008bfa	      0xe800000000	                          call 0x4008bff	      5808	normal.c	FUNCTION_66	IF_30	CALL_58
0x4008bff	        0x4183fc2a	                          cmp r12d, 0x2a	      5810	normal.c	FUNCTION_66	IF_30	CALL_59
0x4008c03	      0xbe3f000000	                           mov esi, 0x3f	      5810	normal.c	FUNCTION_66	IF_30	CALL_59
0x4008c08	      0xb82f000000	                           mov eax, 0x2f	      5810	normal.c	FUNCTION_66	IF_30	CALL_59
0x4008c0d	           0xf44f0	                          cmove esi, eax	      5810	normal.c	FUNCTION_66	IF_30	CALL_59
0x4008c10	      0xb900000000	                              mov ecx, 0	      5810	normal.c	FUNCTION_66	IF_30	CALL_59
0x4008c15	          0x4c89ea	                            mov rdx, r13	      5810	normal.c	FUNCTION_66	IF_30	CALL_59
0x4008c18	          0x4c89ff	                            mov rdi, r15	      5810	normal.c	FUNCTION_66	IF_30	CALL_59
0x4008c1b	      0xe839a2ffff	                  call sym.normal_search	      5810	normal.c	FUNCTION_66	IF_30	CALL_59
0x4008c20	            0xeb08	                           jmp 0x4008c2a	      5810	normal.c	FUNCTION_66	IF_30	CALL_59
0x4008c22	          0x4c89ef	                            mov rdi, r13	      5813	normal.c	FUNCTION_66	CALL_60
0x4008c25	      0xe800000000	                          call 0x4008c2a	      5813	normal.c	FUNCTION_66	CALL_60
0x4008c2a	          0x4c89ef	                            mov rdi, r13	      5815	normal.c	FUNCTION_66	CALL_61
0x4008c2d	      0xe800000000	                          call 0x4008c32	      5815	normal.c	FUNCTION_66	CALL_61
0x4008c32	            0xeb25	                           jmp 0x4008c59	      5815	normal.c	FUNCTION_66	CALL_61
0x4008c34	    0xc74424080100	                  mov dword [rsp + 8], 1	      5609	normal.c	FUNCTION_66	IF_6	CALL_3
0x4008c3c	      0xe93ff9ffff	                           jmp 0x4008580	      5609	normal.c	FUNCTION_66	IF_6	CALL_3
0x4008c41	        0x8b74241c	            mov esi, dword [rsp + 0x1c] 	      5730	normal.c	FUNCTION_66	IF_20	CALL_38
0x4008c45	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      5730	normal.c	FUNCTION_66	IF_20	CALL_38
0x4008c4a	      0xe800000000	                          call 0x4008c4f	      5730	normal.c	FUNCTION_66	IF_20	CALL_38
0x4008c4f	      0x4889442420	             mov qword [rsp + 0x20], rax	      5730	normal.c	FUNCTION_66	IF_20	CALL_38
0x4008c54	      0xe930fdffff	                           jmp 0x4008989	      5730	normal.c	FUNCTION_66	IF_20	CALL_38
0x4008c59	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      5816	normal.c	FUNCTION_66
0x4008c5e	    0x644833042528	                xor rax, qword fs:[0x28]	      5816	normal.c	FUNCTION_66
0x4008c67	            0x7405	                            je 0x4008c6e	      5816	normal.c	FUNCTION_66
0x4008c69	      0xe800000000	                          call 0x4008c6e	      5816	normal.c	FUNCTION_66
0x4008c6e	        0x4883c438	                           add rsp, 0x38	      5816	normal.c	FUNCTION_66
0x4008c72	              0x5b	                                 pop rbx	      5816	normal.c	FUNCTION_66
0x4008c73	              0x5d	                                 pop rbp	      5816	normal.c	FUNCTION_66
0x4008c74	            0x415c	                                 pop r12	      5816	normal.c	FUNCTION_66
0x4008c76	            0x415d	                                 pop r13	      5816	normal.c	FUNCTION_66
0x4008c78	            0x415e	                                 pop r14	      5816	normal.c	FUNCTION_66
0x4008c7a	            0x415f	                                 pop r15	      5816	normal.c	FUNCTION_66
0x4008c7c	              0xc3	                                     ret	      5816	normal.c	FUNCTION_66
clearopbeep	CALL,2:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,0:IF,0	8
0x4000238	        0x4883ec08	                              sub rsp, 8	      3684	normal.c	FUNCTION_25
0x400023c	    0xc70700000000	                      mov dword [rdi], 0	      3676	normal.c	FUNCTION_24
0x4000242	    0xc74704000000	                  mov dword [rdi + 4], 0	      3677	normal.c	FUNCTION_24
0x4000249	    0xc7470c000000	                mov dword [rdi + 0xc], 0	      3678	normal.c	FUNCTION_24
0x4000250	    0xc74710000000	               mov dword [rdi + 0x10], 0	      3679	normal.c	FUNCTION_24
0x4000257	      0xe800000000	                          call 0x400025c	      3686	normal.c	FUNCTION_25	CALL_2
0x400025c	        0x4883c408	                              add rsp, 8	      3687	normal.c	FUNCTION_25
0x4000260	              0xc3	                                     ret	      3687	normal.c	FUNCTION_25
unshift_special	CALL,1:SWITCH,1:DO,0:FOR,0:functions,0:WHILE,0:ELSE,0:IF,0	36
0x4002662	              0x53	                                push rbx	      3694	normal.c	FUNCTION_26
0x4002663	          0x4889fb	                            mov rbx, rdi	      3694	normal.c	FUNCTION_26
0x4002666	          0x8b470c	              mov eax, dword [rdi + 0xc]	      3695	normal.c	FUNCTION_26	SWITCH_1
0x4002669	      0x3dddcbffff	                     cmp eax, 0xffffcbdd	      3695	normal.c	FUNCTION_26	SWITCH_1
0x400266e	            0x7437	                            je 0x40026a7	      3695	normal.c	FUNCTION_26	SWITCH_1
0x4002670	      0x3dddcbffff	                     cmp eax, 0xffffcbdd	      3695	normal.c	FUNCTION_26	SWITCH_1
0x4002675	            0x7f10	                            jg 0x4002687	      3695	normal.c	FUNCTION_26	SWITCH_1
0x4002677	      0x3ddb96ffff	                     cmp eax, 0xffff96db	      3695	normal.c	FUNCTION_26	SWITCH_1
0x400267c	            0x7420	                            je 0x400269e	      3695	normal.c	FUNCTION_26	SWITCH_1
0x400267e	      0x3dd6c8ffff	                     cmp eax, 0xffffc8d6	      3695	normal.c	FUNCTION_26	SWITCH_1
0x4002683	            0x7446	                            je 0x40026cb	      3695	normal.c	FUNCTION_26	SWITCH_1
0x4002685	            0xeb4b	                           jmp 0x40026d2	      3695	normal.c	FUNCTION_26	SWITCH_1
0x4002687	      0x3d03faffff	                     cmp eax, 0xfffffa03	      3695	normal.c	FUNCTION_26	SWITCH_1
0x400268c	            0x742b	                            je 0x40026b9	      3695	normal.c	FUNCTION_26	SWITCH_1
0x400268e	      0x3d03fbffff	                     cmp eax, 0xfffffb03	      3695	normal.c	FUNCTION_26	SWITCH_1
0x4002693	            0x741b	                            je 0x40026b0	      3695	normal.c	FUNCTION_26	SWITCH_1
0x4002695	      0x3dddcdffff	                     cmp eax, 0xffffcddd	      3695	normal.c	FUNCTION_26	SWITCH_1
0x400269a	            0x7536	                           jne 0x40026d2	      3695	normal.c	FUNCTION_26	SWITCH_1
0x400269c	            0xeb24	                           jmp 0x40026c2	      3695	normal.c	FUNCTION_26	SWITCH_1
0x400269e	    0xc7470c958dff	      mov dword [rdi + 0xc], 0xffff8d95 	      3697	normal.c	FUNCTION_26	SWITCH_1
0x40026a5	            0xeb2b	                           jmp 0x40026d2	      3697	normal.c	FUNCTION_26	SWITCH_1
0x40026a7	    0xc7470c9593ff	      mov dword [rdi + 0xc], 0xffff9395 	      3698	normal.c	FUNCTION_26	SWITCH_1
0x40026ae	            0xeb22	                           jmp 0x40026d2	      3698	normal.c	FUNCTION_26	SWITCH_1
0x40026b0	    0xc7470c958aff	      mov dword [rdi + 0xc], 0xffff8a95 	      3699	normal.c	FUNCTION_26	SWITCH_1
0x40026b7	            0xeb19	                           jmp 0x40026d2	      3699	normal.c	FUNCTION_26	SWITCH_1
0x40026b9	    0xc7470c959bff	      mov dword [rdi + 0xc], 0xffff9b95 	      3700	normal.c	FUNCTION_26	SWITCH_1
0x40026c0	            0xeb10	                           jmp 0x40026d2	      3700	normal.c	FUNCTION_26	SWITCH_1
0x40026c2	    0xc7470c9597ff	      mov dword [rdi + 0xc], 0xffff9795 	      3701	normal.c	FUNCTION_26	SWITCH_1
0x40026c9	            0xeb07	                           jmp 0x40026d2	      3701	normal.c	FUNCTION_26	SWITCH_1
0x40026cb	    0xc7470cc0c8ff	      mov dword [rdi + 0xc], 0xffffc8c0 	      3702	normal.c	FUNCTION_26	SWITCH_1
0x40026d2	          0x8b7b0c	              mov edi, dword [rbx + 0xc]	      3704	normal.c	FUNCTION_26	CALL_1
0x40026d5	      0xbe00000000	                              mov esi, 0	      3704	normal.c	FUNCTION_26	CALL_1
0x40026da	      0xe800000000	                          call 0x40026df	      3704	normal.c	FUNCTION_26	CALL_1
0x40026df	          0x89430c	              mov dword [rbx + 0xc], eax	      3704	normal.c	FUNCTION_26	CALL_1
0x40026e2	              0x5b	                                 pop rbx	      3705	normal.c	FUNCTION_26
0x40026e3	              0xc3	                                     ret	      3705	normal.c	FUNCTION_26
nv_g_cmd	CALL,89:SWITCH,1:DO,1:FOR,0:functions,0:WHILE,1:ELSE,13:IF,35	854
0x400b08f	            0x4155	                                push r13	      7882	normal.c	FUNCTION_107
0x400b091	            0x4154	                                push r12	      7882	normal.c	FUNCTION_107
0x400b093	              0x55	                                push rbp	      7882	normal.c	FUNCTION_107
0x400b094	              0x53	                                push rbx	      7882	normal.c	FUNCTION_107
0x400b095	        0x4883ec18	                           sub rsp, 0x18	      7882	normal.c	FUNCTION_107
0x400b099	    0x64488b042528	                mov rax, qword fs:[0x28]	      7882	normal.c	FUNCTION_107
0x400b0a2	      0x4889442408	                mov qword [rsp + 8], rax	      7882	normal.c	FUNCTION_107
0x400b0a7	            0x31c0	                            xor eax, eax	      7882	normal.c	FUNCTION_107
0x400b0a9	          0x4c8b27	                    mov r12, qword [rdi]	      7883	normal.c	FUNCTION_107
0x400b0ac	          0x8b5f10	            mov ebx, dword [rdi + 0x10] 	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b0af	          0x83fb3c	                           cmp ebx, 0x3c	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b0b2	     0xf84ca0c0000	                            je 0x400bd82	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b0b8	          0x4889fd	                            mov rbp, rdi	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b0bb	          0x83fb3c	                           cmp ebx, 0x3c	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b0be	     0xf8f72020000	                            jg 0x400b336	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b0c4	    0x81fb03cfffff	                     cmp ebx, 0xffffcf03	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b0ca	     0xf84640d0000	                            je 0x400be34	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b0d0	    0x81fb03cfffff	                     cmp ebx, 0xffffcf03	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b0d6	     0xf8f48010000	                            jg 0x400b224	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b0dc	    0x81fb03a5ffff	                     cmp ebx, 0xffffa503	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b0e2	     0xf844c0d0000	                            je 0x400be34	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b0e8	    0x81fb03a5ffff	                     cmp ebx, 0xffffa503	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b0ee	     0xf8f98000000	                            jg 0x400b18c	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b0f4	    0x81fb959dffff	                     cmp ebx, 0xffff9d95	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b0fa	     0xf84da060000	                            je 0x400b7da	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b100	    0x81fb959dffff	                     cmp ebx, 0xffff9d95	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b106	            0x7f42	                            jg 0x400b14a	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b108	    0x81fb9597ffff	                     cmp ebx, 0xffff9795	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b10e	     0xf84f9070000	                            je 0x400b90d	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b114	    0x81fb9597ffff	                     cmp ebx, 0xffff9795	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b11a	            0x7f11	                            jg 0x400b12d	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b11c	    0x81fb958affff	                     cmp ebx, 0xffff8a95	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b122	     0xf846d070000	                            je 0x400b895	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b128	      0xe9090e0000	                           jmp 0x400bf36	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b12d	    0x81fb039bffff	                     cmp ebx, 0xffff9b03	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b133	     0xf84fb0c0000	                            je 0x400be34	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b139	    0x81fb959bffff	                     cmp ebx, 0xffff9b95	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b13f	     0xf84e2060000	                            je 0x400b827	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b145	      0xe9ec0d0000	                           jmp 0x400bf36	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b14a	    0x81fb03a2ffff	                     cmp ebx, 0xffffa203	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b150	     0xf84de0c0000	                            je 0x400be34	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b156	    0x81fb03a2ffff	                     cmp ebx, 0xffffa203	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b15c	            0x7f11	                            jg 0x400b16f	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b15e	    0x81fb03a1ffff	                     cmp ebx, 0xffffa103	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b164	     0xf84ca0c0000	                            je 0x400be34	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b16a	      0xe9c70d0000	                           jmp 0x400bf36	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b16f	    0x81fb03a3ffff	                     cmp ebx, 0xffffa303	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b175	     0xf84b90c0000	                            je 0x400be34	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b17b	    0x81fb03a4ffff	                     cmp ebx, 0xffffa403	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b181	     0xf84ad0c0000	                            je 0x400be34	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b187	      0xe9aa0d0000	                           jmp 0x400bf36	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b18c	    0x81fbb5cbffff	                     cmp ebx, 0xffffcbb5	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b192	     0xf8424090000	                            je 0x400babc	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b198	    0x81fbb5cbffff	                     cmp ebx, 0xffffcbb5	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b19e	            0x7f42	                            jg 0x400b1e2	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b1a0	    0x81fbc0c8ffff	                     cmp ebx, 0xffffc8c0	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b1a6	     0xf8410090000	                            je 0x400babc	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b1ac	    0x81fbc0c8ffff	                     cmp ebx, 0xffffc8c0	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b1b2	            0x7f11	                            jg 0x400b1c5	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b1b4	    0x81fb03a6ffff	                     cmp ebx, 0xffffa603	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b1ba	     0xf84740c0000	                            je 0x400be34	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b1c0	      0xe9710d0000	                           jmp 0x400bf36	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b1c5	    0x81fb03caffff	                     cmp ebx, 0xffffca03	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b1cb	     0xf849b0d0000	                            je 0x400bf6c	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b1d1	    0x81fb03cbffff	                     cmp ebx, 0xffffcb03	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b1d7	     0xf84570c0000	                            je 0x400be34	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b1dd	      0xe9540d0000	                           jmp 0x400bf36	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b1e2	    0x81fb03cdffff	                     cmp ebx, 0xffffcd03	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b1e8	     0xf84460c0000	                            je 0x400be34	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b1ee	    0x81fb03cdffff	                     cmp ebx, 0xffffcd03	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b1f4	            0x7f11	                            jg 0x400b207	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b1f6	    0x81fb03ccffff	                     cmp ebx, 0xffffcc03	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b1fc	     0xf84320c0000	                            je 0x400be34	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b202	      0xe92f0d0000	                           jmp 0x400bf36	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b207	    0x81fb03ceffff	                     cmp ebx, 0xffffce03	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b20d	     0xf84210c0000	                            je 0x400be34	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b213	    0x81fbb5ceffff	                     cmp ebx, 0xffffceb5	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b219	     0xf84ee060000	                            je 0x400b90d	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b21f	      0xe9120d0000	                           jmp 0x400bf36	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b224	          0x83fb23	                           cmp ebx, 0x23	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b227	     0xf84c2090000	                            je 0x400bbef	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b22d	          0x83fb23	                           cmp ebx, 0x23	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b230	     0xf8f83000000	                            jg 0x400b2b9	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b236	          0x83fb01	                              cmp ebx, 1	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b239	     0xf84d8020000	                            je 0x400b517	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b23f	          0x83fb01	                              cmp ebx, 1	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b242	            0x7f42	                            jg 0x400b286	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b244	    0x81fb03d1ffff	                     cmp ebx, 0xffffd103	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b24a	     0xf84e40b0000	                            je 0x400be34	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b250	    0x81fb03d1ffff	                     cmp ebx, 0xffffd103	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b256	            0x7f11	                            jg 0x400b269	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b258	    0x81fb03d0ffff	                     cmp ebx, 0xffffd003	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b25e	     0xf84d00b0000	                            je 0x400be34	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b264	      0xe9cd0c0000	                           jmp 0x400bf36	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b269	    0x81fb03d2ffff	                     cmp ebx, 0xffffd203	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b26f	     0xf84bf0b0000	                            je 0x400be34	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b275	    0x81fb03d3ffff	                     cmp ebx, 0xffffd303	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b27b	     0xf84b30b0000	                            je 0x400be34	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b281	      0xe9b00c0000	                           jmp 0x400bf36	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b286	          0x83fb08	                              cmp ebx, 8	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b289	     0xf8452050000	                            je 0x400b7e1	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b28f	          0x83fb08	                              cmp ebx, 8	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b292	            0x7f0e	                            jg 0x400b2a2	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b294	          0x83fb07	                              cmp ebx, 7	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b297	     0xf84ae090000	                            je 0x400bc4b	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b29d	      0xe9940c0000	                           jmp 0x400bf36	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b2a2	          0x83fb18	                           cmp ebx, 0x18	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b2a5	     0xf846c020000	                            je 0x400b517	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b2ab	          0x83fb1d	                           cmp ebx, 0x1d	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b2ae	     0xf843b090000	                            je 0x400bbef	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b2b4	      0xe97d0c0000	                           jmp 0x400bf36	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b2b9	          0x83fb2b	                           cmp ebx, 0x2b	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b2bc	     0xf843f0c0000	                            je 0x400bf01	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b2c2	          0x83fb2b	                           cmp ebx, 0x2b	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b2c5	            0x7f33	                            jg 0x400b2fa	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b2c7	          0x83fb26	                           cmp ebx, 0x26	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b2ca	     0xf843e030000	                            je 0x400b60e	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b2d0	          0x83fb26	                           cmp ebx, 0x26	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b2d3	            0x7f0e	                            jg 0x400b2e3	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b2d5	          0x83fb24	                           cmp ebx, 0x24	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b2d8	     0xf84de070000	                            je 0x400babc	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b2de	      0xe9530c0000	                           jmp 0x400bf36	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b2e3	          0x83fb27	                           cmp ebx, 0x27	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b2e6	     0xf84460a0000	                            je 0x400bd32	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b2ec	          0x83fb2a	                           cmp ebx, 0x2a	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b2ef	     0xf84fa080000	                            je 0x400bbef	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b2f5	      0xe93c0c0000	                           jmp 0x400bf36	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b2fa	          0x83fb30	                           cmp ebx, 0x30	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b2fd	     0xf840a060000	                            je 0x400b90d	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b303	          0x83fb30	                           cmp ebx, 0x30	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b306	            0x7f17	                            jg 0x400b31f	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b308	          0x83fb2c	                           cmp ebx, 0x2c	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b30b	     0xf84a10b0000	                            je 0x400beb2	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b311	          0x83fb2d	                           cmp ebx, 0x2d	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b314	     0xf84e70b0000	                            je 0x400bf01	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b31a	      0xe9170c0000	                           jmp 0x400bf36	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b31f	          0x83fb38	                           cmp ebx, 0x38	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b322	     0xf843f0a0000	                            je 0x400bd67	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b328	          0x83fb3b	                           cmp ebx, 0x3b	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b32b	     0xf848b0b0000	                            je 0x400bebc	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b331	      0xe9000c0000	                           jmp 0x400bf36	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b336	          0x83fb64	                           cmp ebx, 0x64	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b339	     0xf84840a0000	                            je 0x400bdc3	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b33f	          0x83fb64	                           cmp ebx, 0x64	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b342	     0xf8feb000000	                            jg 0x400b433	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b348	          0x83fb50	                           cmp ebx, 0x50	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b34b	     0xf840b0b0000	                            je 0x400be5c	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b351	          0x83fb50	                           cmp ebx, 0x50	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b354	            0x7f64	                            jg 0x400b3ba	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b356	          0x83fb46	                           cmp ebx, 0x46	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b359	     0xf84c6090000	                            je 0x400bd25	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b35f	          0x83fb46	                           cmp ebx, 0x46	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b362	            0x7f23	                            jg 0x400b387	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b364	          0x83fb44	                           cmp ebx, 0x44	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b367	     0xf84560a0000	                            je 0x400bdc3	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b36d	          0x83fb44	                           cmp ebx, 0x44	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b370	     0xf8f86080000	                            jg 0x400bbfc	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b376	          0x83eb3f	                           sub ebx, 0x3f	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b379	          0x83fb01	                              cmp ebx, 1	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b37c	     0xf86340a0000	                           jbe 0x400bdb6	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b382	      0xe9af0b0000	                           jmp 0x400bf36	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b387	          0x83fb49	                           cmp ebx, 0x49	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b38a	     0xf845f090000	                            je 0x400bcef	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b390	          0x83fb49	                           cmp ebx, 0x49	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b393	            0x7f0e	                            jg 0x400b3a3	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b395	          0x83fb48	                           cmp ebx, 0x48	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b398	     0xf8443040000	                            je 0x400b7e1	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b39e	      0xe9930b0000	                           jmp 0x400bf36	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b3a3	          0x83fb4a	                           cmp ebx, 0x4a	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b3a6	     0xf8457050000	                            je 0x400b903	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b3ac	          0x83fb4e	                           cmp ebx, 0x4e	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b3af	     0xf8449040000	                            je 0x400b7fe	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b3b5	      0xe97c0b0000	                           jmp 0x400bf36	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b3ba	          0x83fb56	                           cmp ebx, 0x56	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b3bd	     0xf8408040000	                            je 0x400b7cb	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b3c3	          0x83fb56	                           cmp ebx, 0x56	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b3c6	            0x7f29	                            jg 0x400b3f1	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b3c8	          0x83fb52	                           cmp ebx, 0x52	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b3cb	     0xf847a010000	                            je 0x400b54b	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b3d1	          0x83fb52	                           cmp ebx, 0x52	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b3d4	     0xf8c9d0a0000	                            jl 0x400be77	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b3da	          0x83fb54	                           cmp ebx, 0x54	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b3dd	     0xf84050b0000	                            je 0x400bee8	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b3e3	          0x83fb55	                           cmp ebx, 0x55	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b3e6	     0xf84ca090000	                            je 0x400bdb6	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b3ec	      0xe9450b0000	                           jmp 0x400bf36	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b3f1	          0x83fb5f	                           cmp ebx, 0x5f	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b3f4	     0xf840b060000	                            je 0x400ba05	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b3fa	          0x83fb5f	                           cmp ebx, 0x5f	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b3fd	            0x7f1d	                            jg 0x400b41c	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b3ff	          0x83fb5d	                           cmp ebx, 0x5d	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b402	     0xf84e7070000	                            je 0x400bbef	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b408	    0x41bd01000000	                             mov r13d, 1	      8097	normal.c	FUNCTION_107	SWITCH_1
0x400b40e	          0x83fb5e	                           cmp ebx, 0x5e	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b411	     0xf84fc040000	                            je 0x400b913	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b417	      0xe91a0b0000	                           jmp 0x400bf36	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b41c	          0x83fb60	                           cmp ebx, 0x60	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b41f	     0xf8414090000	                            je 0x400bd39	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b425	          0x83fb61	                           cmp ebx, 0x61	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b428	     0xf842a090000	                            je 0x400bd58	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b42e	      0xe9030b0000	                           jmp 0x400bf36	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b433	          0x83fb6f	                           cmp ebx, 0x6f	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b436	     0xf842d0a0000	                            je 0x400be69	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b43c	          0x83fb6f	                           cmp ebx, 0x6f	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b43f	            0x7f60	                            jg 0x400b4a1	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b441	          0x83fb69	                           cmp ebx, 0x69	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b444	     0xf8410080000	                            je 0x400bc5a	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b44a	          0x83fb69	                           cmp ebx, 0x69	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b44d	            0x7f29	                            jg 0x400b478	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b44f	          0x83fb66	                           cmp ebx, 0x66	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b452	     0xf84cd080000	                            je 0x400bd25	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b458	          0x83fb66	                           cmp ebx, 0x66	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b45b	     0xf8c9b070000	                            jl 0x400bbfc	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b461	          0x83fb67	                           cmp ebx, 0x67	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b464	     0xf8422090000	                            je 0x400bd8c	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b46a	          0x83fb68	                           cmp ebx, 0x68	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b46d	     0xf846e030000	                            je 0x400b7e1	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b473	      0xe9be0a0000	                           jmp 0x400bf36	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b478	          0x83fb6b	                           cmp ebx, 0x6b	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b47b	     0xf8414040000	                            je 0x400b895	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b481	          0x83fb6b	                           cmp ebx, 0x6b	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b484	     0xf8c9d030000	                            jl 0x400b827	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b48a	          0x83fb6d	                           cmp ebx, 0x6d	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b48d	     0xf847a040000	                            je 0x400b90d	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b493	          0x83fb6e	                           cmp ebx, 0x6e	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b496	     0xf8462030000	                            je 0x400b7fe	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b49c	      0xe9950a0000	                           jmp 0x400bf36	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b4a1	          0x83fb74	                           cmp ebx, 0x74	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b4a4	     0xf84200a0000	                            je 0x400beca	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b4aa	          0x83fb74	                           cmp ebx, 0x74	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b4ad	            0x7f29	                            jg 0x400b4d8	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b4af	          0x83fb71	                           cmp ebx, 0x71	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b4b2	     0xf84e5080000	                            je 0x400bd9d	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b4b8	          0x83fb71	                           cmp ebx, 0x71	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b4bb	     0xf8c9b090000	                            jl 0x400be5c	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b4c1	          0x83fb72	                           cmp ebx, 0x72	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b4c4	     0xf8492000000	                            je 0x400b55c	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b4ca	          0x83fb73	                           cmp ebx, 0x73	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b4cd	     0xf8473080000	                            je 0x400bd46	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b4d3	      0xe95e0a0000	                           jmp 0x400bf36	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b4d8	          0x83fb77	                           cmp ebx, 0x77	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b4db	     0xf84bc080000	                            je 0x400bd9d	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b4e1	          0x83fb77	                           cmp ebx, 0x77	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b4e4	            0x7f17	                            jg 0x400b4fd	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b4e6	          0x83fb75	                           cmp ebx, 0x75	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b4e9	     0xf84c7080000	                            je 0x400bdb6	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b4ef	          0x83fb76	                           cmp ebx, 0x76	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b4f2	     0xf8425010000	                            je 0x400b61d	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b4f8	      0xe9390a0000	                           jmp 0x400bf36	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b4fd	          0x83fb7e	                           cmp ebx, 0x7e	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b500	     0xf84b0080000	                            je 0x400bdb6	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b506	    0x81fba3000000	                           cmp ebx, 0xa3	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b50c	     0xf84dd060000	                            je 0x400bbef	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b512	      0xe91f0a0000	                           jmp 0x400bf36	      7888	normal.c	FUNCTION_107	SWITCH_1
0x400b517	    0x833d00000000	               cmp dword [0x0400b51e], 0	      7903	normal.c	FUNCTION_107	SWITCH_1	ELSE_1	IF_2
0x400b51e	            0x741e	                            je 0x400b53e	      7903	normal.c	FUNCTION_107	SWITCH_1	ELSE_1	IF_2
0x400b520	    0xc74538010000	               mov dword [rbp + 0x38], 1	      7905	normal.c	FUNCTION_107	SWITCH_1	ELSE_1	IF_2
0x400b527	          0x895d0c	              mov dword [rbp + 0xc], ebx	      7906	normal.c	FUNCTION_107	SWITCH_1	ELSE_1	IF_2
0x400b52a	    0xc74510000000	               mov dword [rbp + 0x10], 0	      7907	normal.c	FUNCTION_107	SWITCH_1	ELSE_1	IF_2
0x400b531	          0x4889ef	                            mov rdi, rbp	      7908	normal.c	FUNCTION_107	SWITCH_1	ELSE_1	IF_2	CALL_2
0x400b534	      0xe82477ffff	                      call sym.nv_addsub	      7908	normal.c	FUNCTION_107	SWITCH_1	ELSE_1	IF_2	CALL_2
0x400b539	      0xe92e0a0000	                           jmp 0x400bf6c	      7908	normal.c	FUNCTION_107	SWITCH_1	ELSE_1	IF_2	CALL_2
0x400b53e	          0x4c89e7	                            mov rdi, r12	      7911	normal.c	FUNCTION_107	SWITCH_1	CALL_3
0x400b541	      0xe8f24cffff	                    call sym.clearopbeep	      7911	normal.c	FUNCTION_107	SWITCH_1	CALL_3
0x400b546	      0xe9210a0000	                           jmp 0x400bf6c	      7911	normal.c	FUNCTION_107	SWITCH_1	CALL_3
0x400b54b	    0xc74738010000	               mov dword [rdi + 0x38], 1	      7919	normal.c	FUNCTION_107	SWITCH_1
0x400b552	      0xe8a36affff	                     call sym.nv_Replace	      7920	normal.c	FUNCTION_107	SWITCH_1	CALL_4
0x400b557	      0xe9100a0000	                           jmp 0x400bf6c	      7921	normal.c	FUNCTION_107	SWITCH_1
0x400b55c	    0x833d00000000	               cmp dword [0x0400b563], 0	      7284	normal.c	FUNCTION_91	IF_1
0x400b563	            0x7417	                            je 0x400b57c	      7284	normal.c	FUNCTION_91	IF_1
0x400b565	    0xc7470c720000	            mov dword [rdi + 0xc], 0x72 	      7286	normal.c	FUNCTION_91	IF_1
0x400b56c	          0x8b471c	            mov eax, dword [rdi + 0x1c] 	      7287	normal.c	FUNCTION_91	IF_1
0x400b56f	          0x894710	             mov dword [rdi + 0x10], eax	      7287	normal.c	FUNCTION_91	IF_1
0x400b572	      0xe870abffff	                     call sym.nv_replace	      7288	normal.c	FUNCTION_91	IF_1	CALL_1
0x400b577	      0xe9f0090000	                           jmp 0x400bf6c	      7288	normal.c	FUNCTION_91	IF_1	CALL_1
0x400b57c	          0x4c89e7	                            mov rdi, r12	      7290	normal.c	FUNCTION_91	ELSE_1	IF_2	CALL_2
0x400b57f	      0xe8dd4cffff	                  call sym.checkclearopq	      7290	normal.c	FUNCTION_91	ELSE_1	IF_2	CALL_2
0x400b584	            0x85c0	                           test eax, eax	      7290	normal.c	FUNCTION_91	ELSE_1	IF_2	CALL_2
0x400b586	     0xf85e0090000	                           jne 0x400bf6c	      7290	normal.c	FUNCTION_91	ELSE_1	IF_2	CALL_2
0x400b58c	    0x488b05000000	            mov rax, qword [0x0400b593] 	      7292	normal.c	FUNCTION_91	ELSE_1	IF_2	IF_3
0x400b593	    0x83b840150000	             cmp dword [rax + 0x1540], 0	      7292	normal.c	FUNCTION_91	ELSE_1	IF_2	IF_3
0x400b59a	            0x7521	                           jne 0x400b5bd	      7292	normal.c	FUNCTION_91	ELSE_1	IF_2	IF_3
0x400b59c	      0xba05000000	                              mov edx, 5	      7293	normal.c	FUNCTION_91	ELSE_1	IF_2	CALL_4
0x400b5a1	      0xbe00000000	                              mov esi, 0	      7293	normal.c	FUNCTION_91	ELSE_1	IF_2	CALL_4
0x400b5a6	      0xbf00000000	                              mov edi, 0	      7293	normal.c	FUNCTION_91	ELSE_1	IF_2	CALL_4
0x400b5ab	      0xe800000000	                          call 0x400b5b0	      7293	normal.c	FUNCTION_91	ELSE_1	IF_2	CALL_4
0x400b5b0	          0x4889c7	                            mov rdi, rax	      7293	normal.c	FUNCTION_91	ELSE_1	IF_2	CALL_4
0x400b5b3	      0xe800000000	                          call 0x400b5b8	      7293	normal.c	FUNCTION_91	ELSE_1	IF_2	CALL_4
0x400b5b8	      0xe9af090000	                           jmp 0x400bf6c	      7293	normal.c	FUNCTION_91	ELSE_1	IF_2	CALL_4
0x400b5bd	        0x837d1c16	           cmp dword [rbp + 0x1c], 0x16 	      7296	normal.c	FUNCTION_91	ELSE_1	IF_2	ELSE_2	IF_4
0x400b5c1	            0x7508	                           jne 0x400b5cb	      7296	normal.c	FUNCTION_91	ELSE_1	IF_2	ELSE_2	IF_4
0x400b5c3	      0xe800000000	                          call 0x400b5c8	      7297	normal.c	FUNCTION_91	ELSE_1	IF_2	ELSE_2	CALL_5
0x400b5c8	          0x89451c	            mov dword [rbp + 0x1c], eax 	      7297	normal.c	FUNCTION_91	ELSE_1	IF_2	ELSE_2	CALL_5
0x400b5cb	          0x8b7d1c	            mov edi, dword [rbp + 0x1c] 	      7298	normal.c	FUNCTION_91	ELSE_1	IF_2	ELSE_2	CALL_6
0x400b5ce	      0xe800000000	                          call 0x400b5d3	      7298	normal.c	FUNCTION_91	ELSE_1	IF_2	ELSE_2	CALL_6
0x400b5d3	      0xbf1b000000	                           mov edi, 0x1b	      7299	normal.c	FUNCTION_91	ELSE_1	IF_2	ELSE_2	CALL_7
0x400b5d8	      0xe800000000	                          call 0x400b5dd	      7299	normal.c	FUNCTION_91	ELSE_1	IF_2	ELSE_2	CALL_7
0x400b5dd	      0xe800000000	                          call 0x400b5e2	      7301	normal.c	FUNCTION_91	ELSE_1	IF_2	ELSE_2	IF_5	CALL_8
0x400b5e2	            0x85c0	                           test eax, eax	      7301	normal.c	FUNCTION_91	ELSE_1	IF_2	ELSE_2	IF_5	CALL_8
0x400b5e4	            0x740c	                            je 0x400b5f2	      7301	normal.c	FUNCTION_91	ELSE_1	IF_2	ELSE_2	IF_5	CALL_8
0x400b5e6	      0xe800000000	                          call 0x400b5eb	      7302	normal.c	FUNCTION_91	ELSE_1	IF_2	ELSE_2	CALL_10
0x400b5eb	            0x89c7	                            mov edi, eax	      7302	normal.c	FUNCTION_91	ELSE_1	IF_2	ELSE_2	CALL_10
0x400b5ed	      0xe800000000	                          call 0x400b5f2	      7302	normal.c	FUNCTION_91	ELSE_1	IF_2	ELSE_2	CALL_10
0x400b5f2	      0xb900000000	                              mov ecx, 0	      7304	normal.c	FUNCTION_91	ELSE_1	IF_2	ELSE_2	CALL_11
0x400b5f7	      0xba76000000	                           mov edx, 0x76	      7304	normal.c	FUNCTION_91	ELSE_1	IF_2	ELSE_2	CALL_11
0x400b5fc	      0xbe01000000	                              mov esi, 1	      7304	normal.c	FUNCTION_91	ELSE_1	IF_2	ELSE_2	CALL_11
0x400b601	          0x4889ef	                            mov rdi, rbp	      7304	normal.c	FUNCTION_91	ELSE_1	IF_2	ELSE_2	CALL_11
0x400b604	      0xe86c51ffff	                    call sym.invoke_edit	      7304	normal.c	FUNCTION_91	ELSE_1	IF_2	ELSE_2	CALL_11
0x400b609	      0xe95e090000	                           jmp 0x400bf6c	      7304	normal.c	FUNCTION_91	ELSE_1	IF_2	ELSE_2	CALL_11
0x400b60e	      0xbf00000000	                              mov edi, 0	      7929	normal.c	FUNCTION_107	SWITCH_1	CALL_6
0x400b613	      0xe800000000	                          call 0x400b618	      7929	normal.c	FUNCTION_107	SWITCH_1	CALL_6
0x400b618	      0xe94f090000	                           jmp 0x400bf6c	      7930	normal.c	FUNCTION_107	SWITCH_1
0x400b61d	          0x4c89e7	                            mov rdi, r12	      7937	normal.c	FUNCTION_107	SWITCH_1	IF_3	CALL_7
0x400b620	      0xe85e4cffff	                   call sym.checkclearop	      7937	normal.c	FUNCTION_107	SWITCH_1	IF_3	CALL_7
0x400b625	            0x85c0	                           test eax, eax	      7937	normal.c	FUNCTION_107	SWITCH_1	IF_3	CALL_7
0x400b627	     0xf853f090000	                           jne 0x400bf6c	      7937	normal.c	FUNCTION_107	SWITCH_1	IF_3	CALL_7
0x400b62d	    0x488b05000000	            mov rax, qword [0x0400b634] 	      7940	normal.c	FUNCTION_107	SWITCH_1	IF_4
0x400b634	    0x488b90f80200	           mov rdx, qword [rax + 0x2f8] 	      7940	normal.c	FUNCTION_107	SWITCH_1	IF_4
0x400b63b	          0x4885d2	                           test rdx, rdx	      7940	normal.c	FUNCTION_107	SWITCH_1	IF_4
0x400b63e	            0x740f	                            je 0x400b64f	      7940	normal.c	FUNCTION_107	SWITCH_1	IF_4
0x400b640	          0x483b10	                    cmp rdx, qword [rax]	      7941	normal.c	FUNCTION_107	SWITCH_1	IF_4
0x400b643	            0x7f0a	                            jg 0x400b64f	      7941	normal.c	FUNCTION_107	SWITCH_1	IF_4
0x400b645	    0x4883b8080300	              cmp qword [rax + 0x308], 0	      7942	normal.c	FUNCTION_107	SWITCH_1	IF_4
0x400b64d	            0x750a	                           jne 0x400b659	      7942	normal.c	FUNCTION_107	SWITCH_1	IF_4
0x400b64f	      0xe800000000	                          call 0x400b654	      7943	normal.c	FUNCTION_107	SWITCH_1	CALL_8
0x400b654	      0xe913090000	                           jmp 0x400bf6c	      7943	normal.c	FUNCTION_107	SWITCH_1	CALL_8
0x400b659	    0x833d00000000	               cmp dword [0x0400b660], 0	      7947	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0x400b660	     0xf8495000000	                            je 0x400b6fb	      7947	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0x400b666	    0x8b1500000000	            mov edx, dword [0x0400b66c] 	      7949	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0x400b66c	    0x8b8818030000	           mov ecx, dword [rax + 0x318] 	      7950	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0x400b672	    0x890d00000000	            mov dword [0x0400b678], ecx 	      7950	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0x400b678	    0x899018030000	            mov dword [rax + 0x318], edx	      7951	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0x400b67e	    0x899020030000	            mov dword [rax + 0x320], edx	      7953	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0x400b684	    0x488b15000000	            mov rdx, qword [0x0400b68b] 	      7955	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0x400b68b	          0x8b4a48	            mov ecx, dword [rdx + 0x48] 	      7955	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0x400b68e	    0x8bb01c030000	           mov esi, dword [rax + 0x31c] 	      7956	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0x400b694	          0x897248	             mov dword [rdx + 0x48], esi	      7956	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0x400b697	    0x89881c030000	            mov dword [rax + 0x31c], ecx	      7957	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0x400b69d	    0x4c8ba8080300	           mov r13, qword [rax + 0x308] 	      7959	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0x400b6a4	    0x448ba0100300	          mov r12d, dword [rax + 0x310] 	      7959	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0x400b6ab	    0x8b9814030000	           mov ebx, dword [rax + 0x314] 	      7959	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0x400b6b1	        0x488b7238	            mov rsi, qword [rdx + 0x38] 	      7960	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0x400b6b5	        0x488b7a40	            mov rdi, qword [rdx + 0x40] 	      7960	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0x400b6b9	    0x4889b0080300	            mov qword [rax + 0x308], rsi	      7960	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0x400b6c0	    0x4889b8100300	            mov qword [rax + 0x310], rdi	      7960	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0x400b6c7	    0x488bb0f80200	           mov rsi, qword [rax + 0x2f8] 	      7961	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0x400b6ce	    0x488bb8000300	           mov rdi, qword [rax + 0x300] 	      7961	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0x400b6d5	        0x48897238	             mov qword [rdx + 0x38], rsi	      7961	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0x400b6d9	        0x48897a40	             mov qword [rdx + 0x40], rdi	      7961	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0x400b6dd	    0x488b35000000	            mov rsi, qword [0x0400b6e4] 	      7962	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0x400b6e4	    0x488b3d000000	            mov rdi, qword [0x0400b6eb] 	      7962	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0x400b6eb	    0x4889b0f80200	            mov qword [rax + 0x2f8], rsi	      7962	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0x400b6f2	    0x4889b8000300	            mov qword [rax + 0x300], rdi	      7962	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0x400b6f9	            0xeb46	                           jmp 0x400b741	      7962	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0x400b6fb	    0x8b9018030000	           mov edx, dword [rax + 0x318] 	      7966	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	ELSE_4
0x400b701	    0x891500000000	            mov dword [0x0400b707], edx 	      7966	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	ELSE_4
0x400b707	    0x488b15000000	            mov rdx, qword [0x0400b70e] 	      7967	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	ELSE_4
0x400b70e	    0x8b881c030000	           mov ecx, dword [rax + 0x31c] 	      7967	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	ELSE_4
0x400b714	          0x894a48	             mov dword [rdx + 0x48], ecx	      7967	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	ELSE_4
0x400b717	    0x4c8ba8080300	           mov r13, qword [rax + 0x308] 	      7968	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	ELSE_4
0x400b71e	    0x448ba0100300	          mov r12d, dword [rax + 0x310] 	      7968	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	ELSE_4
0x400b725	    0x8b9814030000	           mov ebx, dword [rax + 0x314] 	      7968	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	ELSE_4
0x400b72b	    0x488bb0f80200	           mov rsi, qword [rax + 0x2f8] 	      7969	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	ELSE_4
0x400b732	    0x488bb8000300	           mov rdi, qword [rax + 0x300] 	      7969	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	ELSE_4
0x400b739	        0x48897238	             mov qword [rdx + 0x38], rsi	      7969	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	ELSE_4
0x400b73d	        0x48897a40	             mov qword [rdx + 0x40], rdi	      7969	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	ELSE_4
0x400b741	    0xc70500000000	               mov dword [0x0400b74b], 1	      7972	normal.c	FUNCTION_107	SWITCH_1	ELSE_3
0x400b74b	    0xc70500000000	               mov dword [0x0400b755], 1	      7973	normal.c	FUNCTION_107	SWITCH_1	ELSE_3
0x400b755	      0xe800000000	                          call 0x400b75a	      7977	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	CALL_9
0x400b75a	    0x488b05000000	            mov rax, qword [0x0400b761] 	      7978	normal.c	FUNCTION_107	SWITCH_1	ELSE_3
0x400b761	        0x488b7038	            mov rsi, qword [rax + 0x38] 	      7978	normal.c	FUNCTION_107	SWITCH_1	ELSE_3
0x400b765	        0x488b7840	            mov rdi, qword [rax + 0x40] 	      7978	normal.c	FUNCTION_107	SWITCH_1	ELSE_3
0x400b769	    0x488935000000	            mov qword [0x0400b770], rsi 	      7978	normal.c	FUNCTION_107	SWITCH_1	ELSE_3
0x400b770	    0x48893d000000	            mov qword [0x0400b777], rdi 	      7978	normal.c	FUNCTION_107	SWITCH_1	ELSE_3
0x400b777	        0x4c896838	             mov qword [rax + 0x38], r13	      7979	normal.c	FUNCTION_107	SWITCH_1	ELSE_3
0x400b77b	        0x44896040	            mov dword [rax + 0x40], r12d	      7979	normal.c	FUNCTION_107	SWITCH_1	ELSE_3
0x400b77f	          0x895844	             mov dword [rax + 0x44], ebx	      7979	normal.c	FUNCTION_107	SWITCH_1	ELSE_3
0x400b782	      0xe800000000	                          call 0x400b787	      7980	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	CALL_10
0x400b787	      0xe800000000	                          call 0x400b78c	      7981	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	CALL_11
0x400b78c	        0x837d3800	               cmp dword [rbp + 0x38], 0	      7987	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_6
0x400b790	            0x740c	                            je 0x400b79e	      7987	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_6
0x400b792	    0xc70500000000	               mov dword [0x0400b79c], 1	      7988	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_6
0x400b79c	            0xeb0a	                           jmp 0x400b7a8	      7988	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_6
0x400b79e	      0xbf63000000	                           mov edi, 0x63	      7990	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	CALL_12
0x400b7a3	      0xe800000000	                          call 0x400b7a8	      7990	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	CALL_12
0x400b7a8	      0xe800000000	                          call 0x400b7ad	      7992	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	CALL_13
0x400b7ad	    0xc70500000000	               mov dword [0x0400b7b7], 0	      7997	normal.c	FUNCTION_107	SWITCH_1	ELSE_3
0x400b7b7	      0xbf14000000	                           mov edi, 0x14	      7999	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	CALL_14
0x400b7bc	      0xe800000000	                          call 0x400b7c1	      7999	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	CALL_14
0x400b7c1	      0xe800000000	                          call 0x400b7c6	      8000	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	CALL_15
0x400b7c6	      0xe9a1070000	                           jmp 0x400bf6c	      8000	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	CALL_15
0x400b7cb	    0xc70500000000	               mov dword [0x0400b7d5], 0	      8008	normal.c	FUNCTION_107	SWITCH_1
0x400b7d5	      0xe992070000	                           jmp 0x400bf6c	      8009	normal.c	FUNCTION_107	SWITCH_1
0x400b7da	    0xc74710080000	               mov dword [rdi + 0x10], 8	      8017	normal.c	FUNCTION_107	SWITCH_1
0x400b7e1	          0x8b4510	            mov eax, dword [rbp + 0x10] 	      8028	normal.c	FUNCTION_107	SWITCH_1	ELSE_6
0x400b7e4	          0x83c00e	                            add eax, 0xe	      8028	normal.c	FUNCTION_107	SWITCH_1	ELSE_6
0x400b7e7	          0x89450c	              mov dword [rbp + 0xc], eax	      8028	normal.c	FUNCTION_107	SWITCH_1	ELSE_6
0x400b7ea	    0xc74538010000	               mov dword [rbp + 0x38], 1	      8029	normal.c	FUNCTION_107	SWITCH_1
0x400b7f1	          0x4889ef	                            mov rdi, rbp	      8030	normal.c	FUNCTION_107	SWITCH_1	CALL_16
0x400b7f4	      0xe831d5ffff	                      call sym.nv_visual	      8030	normal.c	FUNCTION_107	SWITCH_1	CALL_16
0x400b7f9	      0xe96e070000	                           jmp 0x400bf6c	      8031	normal.c	FUNCTION_107	SWITCH_1
0x400b7fe	          0x83fb6e	                           cmp ebx, 0x6e	      8039	normal.c	FUNCTION_107	SWITCH_1	IF_8	CALL_17
0x400b801	        0x400f94c6	                                sete sil	      8039	normal.c	FUNCTION_107	SWITCH_1	IF_8	CALL_17
0x400b805	        0x400fb6f6	                          movzx esi, sil	      8039	normal.c	FUNCTION_107	SWITCH_1	IF_8	CALL_17
0x400b809	        0x488b7d30	            mov rdi, qword [rbp + 0x30] 	      8039	normal.c	FUNCTION_107	SWITCH_1	IF_8	CALL_17
0x400b80d	      0xe800000000	                          call 0x400b812	      8039	normal.c	FUNCTION_107	SWITCH_1	IF_8	CALL_17
0x400b812	            0x85c0	                           test eax, eax	      8039	normal.c	FUNCTION_107	SWITCH_1	IF_8	CALL_17
0x400b814	     0xf8552070000	                           jne 0x400bf6c	      8039	normal.c	FUNCTION_107	SWITCH_1	IF_8	CALL_17
0x400b81a	          0x4c89e7	                            mov rdi, r12	      8040	normal.c	FUNCTION_107	SWITCH_1	CALL_18
0x400b81d	      0xe8164affff	                    call sym.clearopbeep	      8040	normal.c	FUNCTION_107	SWITCH_1	CALL_18
0x400b822	      0xe945070000	                           jmp 0x400bf6c	      8040	normal.c	FUNCTION_107	SWITCH_1	CALL_18
0x400b827	    0x488b05000000	            mov rax, qword [0x0400b82e] 	      8051	normal.c	FUNCTION_107	SWITCH_1	IF_9
0x400b82e	    0x83b894020000	              cmp dword [rax + 0x294], 0	      8051	normal.c	FUNCTION_107	SWITCH_1	IF_9
0x400b835	            0x7417	                            je 0x400b84e	      8051	normal.c	FUNCTION_107	SWITCH_1	IF_9
0x400b837	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      8053	normal.c	FUNCTION_107	SWITCH_1	IF_9	CALL_19
0x400b83b	      0xba00000000	                              mov edx, 0	      8053	normal.c	FUNCTION_107	SWITCH_1	IF_9	CALL_19
0x400b840	      0xbe00000000	                              mov esi, 0	      8053	normal.c	FUNCTION_107	SWITCH_1	IF_9	CALL_19
0x400b845	      0xe800000000	                          call 0x400b84a	      8053	normal.c	FUNCTION_107	SWITCH_1	IF_9	CALL_19
0x400b84a	            0x85c0	                           test eax, eax	      8053	normal.c	FUNCTION_107	SWITCH_1	IF_9	CALL_19
0x400b84c	            0x7421	                            je 0x400b86f	      8053	normal.c	FUNCTION_107	SWITCH_1	IF_9	CALL_19
0x400b84e	    0x41c744240801	                  mov dword [r12 + 8], 1	      8057	normal.c	FUNCTION_107	SWITCH_1	IF_9
0x400b857	      0x41833c2400	                      cmp dword [r12], 0	      8058	normal.c	FUNCTION_107	SWITCH_1	IF_9	CALL_20
0x400b85c	        0x400f94c6	                                sete sil	      8058	normal.c	FUNCTION_107	SWITCH_1	IF_9	CALL_20
0x400b860	        0x400fb6f6	                          movzx esi, sil	      8058	normal.c	FUNCTION_107	SWITCH_1	IF_9	CALL_20
0x400b864	        0x488b7d30	            mov rdi, qword [rbp + 0x30] 	      8058	normal.c	FUNCTION_107	SWITCH_1	IF_9	CALL_20
0x400b868	      0xe800000000	                          call 0x400b86d	      8058	normal.c	FUNCTION_107	SWITCH_1	IF_9	CALL_20
0x400b86d	            0xeb11	                           jmp 0x400b880	      8058	normal.c	FUNCTION_107	SWITCH_1	IF_9	CALL_20
0x400b86f	        0x488b5530	            mov rdx, qword [rbp + 0x30] 	      8061	normal.c	FUNCTION_107	SWITCH_1	CALL_21
0x400b873	      0xbe01000000	                              mov esi, 1	      8061	normal.c	FUNCTION_107	SWITCH_1	CALL_21
0x400b878	          0x4c89e7	                            mov rdi, r12	      8061	normal.c	FUNCTION_107	SWITCH_1	CALL_21
0x400b87b	      0xe85051ffff	                    call sym.nv_screengo	      8061	normal.c	FUNCTION_107	SWITCH_1	CALL_21
0x400b880	            0x85c0	                           test eax, eax	      8062	normal.c	FUNCTION_107	SWITCH_1	IF_10
0x400b882	     0xf85e4060000	                           jne 0x400bf6c	      8062	normal.c	FUNCTION_107	SWITCH_1	IF_10
0x400b888	          0x4c89e7	                            mov rdi, r12	      8063	normal.c	FUNCTION_107	SWITCH_1	CALL_22
0x400b88b	      0xe8a849ffff	                    call sym.clearopbeep	      8063	normal.c	FUNCTION_107	SWITCH_1	CALL_22
0x400b890	      0xe9d7060000	                           jmp 0x400bf6c	      8063	normal.c	FUNCTION_107	SWITCH_1	CALL_22
0x400b895	    0x488b05000000	            mov rax, qword [0x0400b89c] 	      8070	normal.c	FUNCTION_107	SWITCH_1	IF_11
0x400b89c	    0x83b894020000	              cmp dword [rax + 0x294], 0	      8070	normal.c	FUNCTION_107	SWITCH_1	IF_11
0x400b8a3	            0x7417	                            je 0x400b8bc	      8070	normal.c	FUNCTION_107	SWITCH_1	IF_11
0x400b8a5	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      8072	normal.c	FUNCTION_107	SWITCH_1	IF_11	CALL_23
0x400b8a9	      0xba00000000	                              mov edx, 0	      8072	normal.c	FUNCTION_107	SWITCH_1	IF_11	CALL_23
0x400b8ae	      0xbe00000000	                              mov esi, 0	      8072	normal.c	FUNCTION_107	SWITCH_1	IF_11	CALL_23
0x400b8b3	      0xe800000000	                          call 0x400b8b8	      8072	normal.c	FUNCTION_107	SWITCH_1	IF_11	CALL_23
0x400b8b8	            0x85c0	                           test eax, eax	      8072	normal.c	FUNCTION_107	SWITCH_1	IF_11	CALL_23
0x400b8ba	            0x7421	                            je 0x400b8dd	      8072	normal.c	FUNCTION_107	SWITCH_1	IF_11	CALL_23
0x400b8bc	    0x41c744240801	                  mov dword [r12 + 8], 1	      8076	normal.c	FUNCTION_107	SWITCH_1	IF_11
0x400b8c5	      0x41833c2400	                      cmp dword [r12], 0	      8077	normal.c	FUNCTION_107	SWITCH_1	IF_11	CALL_24
0x400b8ca	        0x400f94c6	                                sete sil	      8077	normal.c	FUNCTION_107	SWITCH_1	IF_11	CALL_24
0x400b8ce	        0x400fb6f6	                          movzx esi, sil	      8077	normal.c	FUNCTION_107	SWITCH_1	IF_11	CALL_24
0x400b8d2	        0x488b7d30	            mov rdi, qword [rbp + 0x30] 	      8077	normal.c	FUNCTION_107	SWITCH_1	IF_11	CALL_24
0x400b8d6	      0xe800000000	                          call 0x400b8db	      8077	normal.c	FUNCTION_107	SWITCH_1	IF_11	CALL_24
0x400b8db	            0xeb11	                           jmp 0x400b8ee	      8077	normal.c	FUNCTION_107	SWITCH_1	IF_11	CALL_24
0x400b8dd	        0x488b5530	            mov rdx, qword [rbp + 0x30] 	      8080	normal.c	FUNCTION_107	SWITCH_1	CALL_25
0x400b8e1	      0xbeffffffff	                     mov esi, 0xffffffff	      8080	normal.c	FUNCTION_107	SWITCH_1	CALL_25
0x400b8e6	          0x4c89e7	                            mov rdi, r12	      8080	normal.c	FUNCTION_107	SWITCH_1	CALL_25
0x400b8e9	      0xe8e250ffff	                    call sym.nv_screengo	      8080	normal.c	FUNCTION_107	SWITCH_1	CALL_25
0x400b8ee	            0x85c0	                           test eax, eax	      8081	normal.c	FUNCTION_107	SWITCH_1	IF_12
0x400b8f0	     0xf8576060000	                           jne 0x400bf6c	      8081	normal.c	FUNCTION_107	SWITCH_1	IF_12
0x400b8f6	          0x4c89e7	                            mov rdi, r12	      8082	normal.c	FUNCTION_107	SWITCH_1	CALL_26
0x400b8f9	      0xe83a49ffff	                    call sym.clearopbeep	      8082	normal.c	FUNCTION_107	SWITCH_1	CALL_26
0x400b8fe	      0xe969060000	                           jmp 0x400bf6c	      8082	normal.c	FUNCTION_107	SWITCH_1	CALL_26
0x400b903	      0xe89967ffff	                        call sym.nv_join	      8089	normal.c	FUNCTION_107	SWITCH_1	CALL_27
0x400b908	      0xe95f060000	                           jmp 0x400bf6c	      8090	normal.c	FUNCTION_107	SWITCH_1
0x400b90d	    0x41bd00000000	                             mov r13d, 0	      7886	normal.c	FUNCTION_107
0x400b913	    0x41c744240800	                  mov dword [r12 + 8], 0	      8104	normal.c	FUNCTION_107	SWITCH_1
0x400b91c	    0x41c744241400	               mov dword [r12 + 0x14], 0	      8105	normal.c	FUNCTION_107	SWITCH_1
0x400b925	    0x488b05000000	            mov rax, qword [0x0400b92c] 	      8106	normal.c	FUNCTION_107	SWITCH_1	IF_13
0x400b92c	    0x83b894020000	              cmp dword [rax + 0x294], 0	      8106	normal.c	FUNCTION_107	SWITCH_1	IF_13
0x400b933	            0x744b	                            je 0x400b980	      8106	normal.c	FUNCTION_107	SWITCH_1	IF_13
0x400b935	    0x8b98ac000000	            mov ebx, dword [rax + 0xac] 	      8106	normal.c	FUNCTION_107	SWITCH_1	IF_13
0x400b93b	            0x85db	                           test ebx, ebx	      8106	normal.c	FUNCTION_107	SWITCH_1	IF_13
0x400b93d	            0x7441	                            je 0x400b980	      8106	normal.c	FUNCTION_107	SWITCH_1	IF_13
0x400b93f	      0xe800000000	                          call 0x400b944	      8108	normal.c	FUNCTION_107	SWITCH_1	IF_13	CALL_28
0x400b944	            0x29c3	                            sub ebx, eax	      8108	normal.c	FUNCTION_107	SWITCH_1	IF_13	CALL_28
0x400b946	      0xe800000000	                          call 0x400b94b	      8109	normal.c	FUNCTION_107	SWITCH_1	IF_13	CALL_29
0x400b94b	        0x448d2403	                   lea r12d, [rbx + rax]	      8109	normal.c	FUNCTION_107	SWITCH_1	IF_13	CALL_29
0x400b94f	      0xe800000000	                          call 0x400b954	      8111	normal.c	FUNCTION_107	SWITCH_1	IF_13	CALL_30
0x400b954	    0x488b15000000	            mov rdx, qword [0x0400b95b] 	      8113	normal.c	FUNCTION_107	SWITCH_1	IF_13	IF_14
0x400b95b	    0x8b82d8000000	            mov eax, dword [rdx + 0xd8] 	      8113	normal.c	FUNCTION_107	SWITCH_1	IF_13	IF_14
0x400b961	          0x4585e4	                         test r12d, r12d	      8113	normal.c	FUNCTION_107	SWITCH_1	IF_13	IF_14
0x400b964	     0xf8ef2050000	                           jle 0x400bf5c	      8113	normal.c	FUNCTION_107	SWITCH_1	IF_13	IF_14
0x400b96a	            0x39c3	                            cmp ebx, eax	      8113	normal.c	FUNCTION_107	SWITCH_1	IF_13	IF_14
0x400b96c	     0xf8fea050000	                            jg 0x400bf5c	      8113	normal.c	FUNCTION_107	SWITCH_1	IF_13	IF_14
0x400b972	            0x29d8	                            sub eax, ebx	      8114	normal.c	FUNCTION_107	SWITCH_1	IF_13	IF_14
0x400b974	              0x99	                                     cdq	      8114	normal.c	FUNCTION_107	SWITCH_1	IF_13	IF_14
0x400b975	          0x41f7fc	                               idiv r12d	      8114	normal.c	FUNCTION_107	SWITCH_1	IF_13	IF_14
0x400b978	        0x410fafc4	                          imul eax, r12d	      8114	normal.c	FUNCTION_107	SWITCH_1	IF_13	IF_14
0x400b97c	             0x1c3	                            add ebx, eax	      8114	normal.c	FUNCTION_107	SWITCH_1	IF_13	IF_14
0x400b97e	            0xeb06	                           jmp 0x400b986	      8114	normal.c	FUNCTION_107	SWITCH_1	IF_13	IF_14
0x400b980	    0x8b9894000000	            mov ebx, dword [rax + 0x94] 	      8117	normal.c	FUNCTION_107	SWITCH_1	ELSE_9
0x400b986	        0x837d106d	           cmp dword [rbp + 0x10], 0x6d 	      8121	normal.c	FUNCTION_107	SWITCH_1	IF_15
0x400b98a	            0x7541	                           jne 0x400b9cd	      8121	normal.c	FUNCTION_107	SWITCH_1	IF_15
0x400b98c	    0x488b05000000	            mov rax, qword [0x0400b993] 	      8122	normal.c	FUNCTION_107	SWITCH_1	IF_15	CALL_31
0x400b993	    0x8ba8ac000000	            mov ebp, dword [rax + 0xac] 	      8122	normal.c	FUNCTION_107	SWITCH_1	IF_15	CALL_31
0x400b999	      0xe800000000	                          call 0x400b99e	      8122	normal.c	FUNCTION_107	SWITCH_1	IF_15	CALL_31
0x400b99e	            0x29c5	                            sub ebp, eax	      8122	normal.c	FUNCTION_107	SWITCH_1	IF_15	CALL_31
0x400b9a0	    0x488b05000000	            mov rax, qword [0x0400b9a7] 	      8123	normal.c	FUNCTION_107	SWITCH_1	IF_15
0x400b9a7	    0x83b894020000	              cmp dword [rax + 0x294], 0	      8123	normal.c	FUNCTION_107	SWITCH_1	IF_15
0x400b9ae	            0x740b	                            je 0x400b9bb	      8123	normal.c	FUNCTION_107	SWITCH_1	IF_15
0x400b9b0	            0x85db	                           test ebx, ebx	      8123	normal.c	FUNCTION_107	SWITCH_1	IF_15
0x400b9b2	            0x7e07	                           jle 0x400b9bb	      8123	normal.c	FUNCTION_107	SWITCH_1	IF_15
0x400b9b4	      0xe800000000	                          call 0x400b9b9	      8124	normal.c	FUNCTION_107	SWITCH_1	CALL_32
0x400b9b9	            0xeb05	                           jmp 0x400b9c0	      8124	normal.c	FUNCTION_107	SWITCH_1	CALL_32
0x400b9bb	      0xb800000000	                              mov eax, 0	      8124	normal.c	FUNCTION_107	SWITCH_1	CALL_32
0x400b9c0	             0x1e8	                            add eax, ebp	      8122	normal.c	FUNCTION_107	SWITCH_1	IF_15	CALL_31
0x400b9c2	            0x89c2	                            mov edx, eax	      8122	normal.c	FUNCTION_107	SWITCH_1	IF_15	CALL_31
0x400b9c4	          0xc1ea1f	                           shr edx, 0x1f	      8122	normal.c	FUNCTION_107	SWITCH_1	IF_15	CALL_31
0x400b9c7	             0x1d0	                            add eax, edx	      8122	normal.c	FUNCTION_107	SWITCH_1	IF_15	CALL_31
0x400b9c9	            0xd1f8	                              sar eax, 1	      8122	normal.c	FUNCTION_107	SWITCH_1	IF_15	CALL_31
0x400b9cb	             0x1c3	                            add ebx, eax	      8122	normal.c	FUNCTION_107	SWITCH_1	IF_15	CALL_31
0x400b9cd	            0x89df	                            mov edi, ebx	      8125	normal.c	FUNCTION_107	SWITCH_1	CALL_33
0x400b9cf	      0xe800000000	                          call 0x400b9d4	      8125	normal.c	FUNCTION_107	SWITCH_1	CALL_33
0x400b9d4	          0x4585ed	                         test r13d, r13d	      8126	normal.c	FUNCTION_107	SWITCH_1	IF_16
0x400b9d7	            0x7419	                            je 0x400b9f2	      8126	normal.c	FUNCTION_107	SWITCH_1	IF_16
0x400b9d9	      0xe800000000	                          call 0x400b9de	      8129	normal.c	FUNCTION_107	SWITCH_1	IF_16	CALL_34
0x400b9de	          0x83f820	                           cmp eax, 0x20	      8130	normal.c	FUNCTION_107	SWITCH_1	IF_16	CALL_36
0x400b9e1	            0x7405	                            je 0x400b9e8	      8130	normal.c	FUNCTION_107	SWITCH_1	IF_16	CALL_36
0x400b9e3	          0x83f809	                              cmp eax, 9	      8130	normal.c	FUNCTION_107	SWITCH_1	IF_16	CALL_36
0x400b9e6	            0x750a	                           jne 0x400b9f2	      8130	normal.c	FUNCTION_107	SWITCH_1	IF_16	CALL_36
0x400b9e8	      0xe800000000	                          call 0x400b9ed	      8130	normal.c	FUNCTION_107	SWITCH_1	IF_16	CALL_36
0x400b9ed	          0x83f801	                              cmp eax, 1	      8130	normal.c	FUNCTION_107	SWITCH_1	IF_16	CALL_36
0x400b9f0	            0x74e7	                            je 0x400b9d9	      8130	normal.c	FUNCTION_107	SWITCH_1	IF_16	CALL_36
0x400b9f2	    0x488b05000000	            mov rax, qword [0x0400b9f9] 	      8132	normal.c	FUNCTION_107	SWITCH_1
0x400b9f9	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      8132	normal.c	FUNCTION_107	SWITCH_1
0x400ba00	      0xe967050000	                           jmp 0x400bf6c	      8133	normal.c	FUNCTION_107	SWITCH_1
0x400ba05	    0x41c744240800	                  mov dword [r12 + 8], 0	      8138	normal.c	FUNCTION_107	SWITCH_1
0x400ba0e	          0x488b07	                    mov rax, qword [rdi]	      8139	normal.c	FUNCTION_107	SWITCH_1
0x400ba11	    0xc74014010000	               mov dword [rax + 0x14], 1	      8139	normal.c	FUNCTION_107	SWITCH_1
0x400ba18	    0x488b05000000	            mov rax, qword [0x0400ba1f] 	      8140	normal.c	FUNCTION_107	SWITCH_1
0x400ba1f	    0xc74048ffffff	     mov dword [rax + 0x48], 0x7fffffff 	      8140	normal.c	FUNCTION_107	SWITCH_1
0x400ba26	          0x488b07	                    mov rax, qword [rdi]	      8142	normal.c	FUNCTION_107	SWITCH_1	IF_17
0x400ba29	          0x833800	                      cmp dword [rax], 0	      8141	normal.c	FUNCTION_107	SWITCH_1	IF_17	CALL_37
0x400ba2c	        0x400f94c6	                                sete sil	      8141	normal.c	FUNCTION_107	SWITCH_1	IF_17	CALL_37
0x400ba30	        0x400fb6f6	                          movzx esi, sil	      8141	normal.c	FUNCTION_107	SWITCH_1	IF_17	CALL_37
0x400ba34	        0x488b4730	            mov rax, qword [rdi + 0x30] 	      8141	normal.c	FUNCTION_107	SWITCH_1	IF_17	CALL_37
0x400ba38	        0x488d78ff	                      lea rdi, [rax - 1]	      8141	normal.c	FUNCTION_107	SWITCH_1	IF_17	CALL_37
0x400ba3c	      0xe800000000	                          call 0x400ba41	      8141	normal.c	FUNCTION_107	SWITCH_1	IF_17	CALL_37
0x400ba41	            0x85c0	                           test eax, eax	      8141	normal.c	FUNCTION_107	SWITCH_1	IF_17	CALL_37
0x400ba43	            0x750e	                           jne 0x400ba53	      8141	normal.c	FUNCTION_107	SWITCH_1	IF_17	CALL_37
0x400ba45	        0x488b7d00	                    mov rdi, qword [rbp]	      8143	normal.c	FUNCTION_107	SWITCH_1	CALL_38
0x400ba49	      0xe8ea47ffff	                    call sym.clearopbeep	      8143	normal.c	FUNCTION_107	SWITCH_1	CALL_38
0x400ba4e	      0xe919050000	                           jmp 0x400bf6c	      8143	normal.c	FUNCTION_107	SWITCH_1	CALL_38
0x400ba53	      0xe800000000	                          call 0x400ba58	      8146	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	CALL_39
0x400ba58	    0x488b35000000	            mov rsi, qword [0x0400ba5f] 	      8149	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	IF_18
0x400ba5f	          0x8b5640	            mov edx, dword [rsi + 0x40] 	      8149	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	IF_18
0x400ba62	            0x85d2	                           test edx, edx	      8149	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	IF_18
0x400ba64	            0x7e42	                           jle 0x400baa8	      8149	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	IF_18
0x400ba66	          0x4863ca	                         movsxd rcx, edx	      8149	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	IF_18
0x400ba69	        0x803c0800	                 cmp byte [rax + rcx], 0	      8149	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	IF_18
0x400ba6d	            0x750a	                           jne 0x400ba79	      8149	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	IF_18
0x400ba6f	          0x83ea01	                              sub edx, 1	      8150	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	IF_18
0x400ba72	          0x895640	             mov dword [rsi + 0x40], edx	      8150	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	IF_18
0x400ba75	            0x85d2	                           test edx, edx	      8153	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	WHILE_1
0x400ba77	            0x7e2f	                           jle 0x400baa8	      8153	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	WHILE_1
0x400ba79	          0x4863ca	                         movsxd rcx, edx	      8154	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	WHILE_1	CALL_40
0x400ba7c	         0xfb60c08	             movzx ecx, byte [rax + rcx]	      8154	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	WHILE_1	CALL_40
0x400ba80	          0x80f920	                            cmp cl, 0x20	      8154	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	WHILE_1	CALL_40
0x400ba83	            0x7405	                            je 0x400ba8a	      8154	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	WHILE_1	CALL_40
0x400ba85	          0x80f909	                               cmp cl, 9	      8154	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	WHILE_1	CALL_40
0x400ba88	            0x751e	                           jne 0x400baa8	      8154	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	WHILE_1	CALL_40
0x400ba8a	          0x83ea01	                              sub edx, 1	      8154	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	WHILE_1	CALL_40
0x400ba8d	          0x895640	             mov dword [rsi + 0x40], edx	      8155	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	WHILE_1
0x400ba90	            0x85d2	                           test edx, edx	      8153	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	WHILE_1
0x400ba92	            0x7e14	                           jle 0x400baa8	      8153	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	WHILE_1
0x400ba94	          0x4863ca	                         movsxd rcx, edx	      8154	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	WHILE_1	CALL_40
0x400ba97	         0xfb60c08	             movzx ecx, byte [rax + rcx]	      8154	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	WHILE_1	CALL_40
0x400ba9b	          0x83ea01	                              sub edx, 1	      8154	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	WHILE_1	CALL_40
0x400ba9e	          0x80f920	                            cmp cl, 0x20	      8154	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	WHILE_1	CALL_40
0x400baa1	            0x74ea	                            je 0x400ba8d	      8154	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	WHILE_1	CALL_40
0x400baa3	          0x80f909	                               cmp cl, 9	      8154	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	WHILE_1	CALL_40
0x400baa6	            0x74e5	                            je 0x400ba8d	      8154	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	WHILE_1	CALL_40
0x400baa8	    0xc7464c010000	               mov dword [rsi + 0x4c], 1	      8156	normal.c	FUNCTION_107	SWITCH_1	ELSE_10
0x400baaf	          0x4889ef	                            mov rdi, rbp	      8157	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	CALL_41
0x400bab2	      0xe8e748ffff	                 call sym.adjust_for_sel	      8157	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	CALL_41
0x400bab7	      0xe9b0040000	                           jmp 0x400bf6c	      8157	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	CALL_41
0x400babc	      0xe800000000	                          call 0x400bac1	      8165	normal.c	FUNCTION_107	SWITCH_1	CALL_42
0x400bac1	    0x41c744240800	                  mov dword [r12 + 8], 0	      8167	normal.c	FUNCTION_107	SWITCH_1
0x400baca	    0x41c744241401	               mov dword [r12 + 0x14], 1	      8168	normal.c	FUNCTION_107	SWITCH_1
0x400bad3	    0x488b15000000	            mov rdx, qword [0x0400bada] 	      8169	normal.c	FUNCTION_107	SWITCH_1	IF_19
0x400bada	    0x83ba94020000	              cmp dword [rdx + 0x294], 0	      8169	normal.c	FUNCTION_107	SWITCH_1	IF_19
0x400bae1	     0xf84d1000000	                            je 0x400bbb8	      8169	normal.c	FUNCTION_107	SWITCH_1	IF_19
0x400bae7	    0x8b8aac000000	            mov ecx, dword [rdx + 0xac] 	      8169	normal.c	FUNCTION_107	SWITCH_1	IF_19
0x400baed	            0x85c9	                           test ecx, ecx	      8169	normal.c	FUNCTION_107	SWITCH_1	IF_19
0x400baef	     0xf84c3000000	                            je 0x400bbb8	      8169	normal.c	FUNCTION_107	SWITCH_1	IF_19
0x400baf5	    0xc74248ffffff	     mov dword [rdx + 0x48], 0x7fffffff 	      8171	normal.c	FUNCTION_107	SWITCH_1	IF_19
0x400bafc	        0x488b5530	            mov rdx, qword [rbp + 0x30] 	      8172	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20
0x400bb00	        0x4883fa01	                              cmp rdx, 1	      8172	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20
0x400bb04	     0xf8588000000	                           jne 0x400bb92	      8172	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20
0x400bb0a	            0x29c1	                            sub ecx, eax	      8174	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20
0x400bb0c	            0x89cb	                            mov ebx, ecx	      8174	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20
0x400bb0e	      0xe800000000	                          call 0x400bb13	      8175	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	CALL_43
0x400bb13	          0x4189c4	                           mov r12d, eax	      8175	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	CALL_43
0x400bb16	      0xe800000000	                          call 0x400bb1b	      8177	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	CALL_44
0x400bb1b	          0x8d6bff	                      lea ebp, [rbx - 1]	      8178	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20
0x400bb1e	    0x488b05000000	            mov rax, qword [0x0400bb25] 	      8179	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	IF_21
0x400bb25	    0x8b90d8000000	            mov edx, dword [rax + 0xd8] 	      8179	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	IF_21
0x400bb2b	            0x39d3	                            cmp ebx, edx	      8179	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	IF_21
0x400bb2d	            0x7f15	                            jg 0x400bb44	      8179	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	IF_21
0x400bb2f	          0x4101dc	                           add r12d, ebx	      8175	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	CALL_43
0x400bb32	            0x89d0	                            mov eax, edx	      8180	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	IF_21
0x400bb34	            0x29d8	                            sub eax, ebx	      8180	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	IF_21
0x400bb36	              0x99	                                     cdq	      8180	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	IF_21
0x400bb37	          0x41f7fc	                               idiv r12d	      8180	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	IF_21
0x400bb3a	          0x8d5001	                      lea edx, [rax + 1]	      8180	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	IF_21
0x400bb3d	        0x440fafe2	                          imul r12d, edx	      8180	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	IF_21
0x400bb41	          0x4401e5	                           add ebp, r12d	      8180	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	IF_21
0x400bb44	            0x89ef	                            mov edi, ebp	      8182	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	CALL_45
0x400bb46	      0xe800000000	                          call 0x400bb4b	      8182	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	CALL_45
0x400bb4b	      0xe800000000	                          call 0x400bb50	      8185	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	CALL_46
0x400bb50	    0x488b05000000	            mov rax, qword [0x0400bb57] 	      8186	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20
0x400bb57	    0x8b88d8000000	            mov ecx, dword [rax + 0xd8] 	      8186	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20
0x400bb5d	          0x894848	             mov dword [rax + 0x48], ecx	      8186	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20
0x400bb60	    0xc7404c000000	               mov dword [rax + 0x4c], 0	      8187	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20
0x400bb67	          0x8b5040	            mov edx, dword [rax + 0x40] 	      8189	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	IF_22
0x400bb6a	            0x85d2	                           test edx, edx	      8189	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	IF_22
0x400bb6c	     0xf8efa030000	                           jle 0x400bf6c	      8189	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	IF_22
0x400bb72	    0x83b894020000	              cmp dword [rax + 0x294], 0	      8196	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	IF_22	IF_23
0x400bb79	     0xf84ed030000	                            je 0x400bf6c	      8196	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	IF_22	IF_23
0x400bb7f	            0x39cd	                            cmp ebp, ecx	      8196	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	IF_22	IF_23
0x400bb81	     0xf8de5030000	                           jge 0x400bf6c	      8196	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	IF_22	IF_23
0x400bb87	          0x83ea01	                              sub edx, 1	      8197	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	IF_22	IF_23
0x400bb8a	          0x895040	             mov dword [rax + 0x40], edx	      8197	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	IF_22	IF_23
0x400bb8d	      0xe9da030000	                           jmp 0x400bf6c	      8197	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	IF_22	IF_23
0x400bb92	        0x4883ea01	                              sub rdx, 1	      8201	normal.c	FUNCTION_107	SWITCH_1	IF_19	ELSE_11	IF_24	CALL_47
0x400bb96	      0xbe01000000	                              mov esi, 1	      8201	normal.c	FUNCTION_107	SWITCH_1	IF_19	ELSE_11	IF_24	CALL_47
0x400bb9b	          0x4c89e7	                            mov rdi, r12	      8201	normal.c	FUNCTION_107	SWITCH_1	IF_19	ELSE_11	IF_24	CALL_47
0x400bb9e	      0xe82d4effff	                    call sym.nv_screengo	      8201	normal.c	FUNCTION_107	SWITCH_1	IF_19	ELSE_11	IF_24	CALL_47
0x400bba3	            0x85c0	                           test eax, eax	      8201	normal.c	FUNCTION_107	SWITCH_1	IF_19	ELSE_11	IF_24	CALL_47
0x400bba5	     0xf85c1030000	                           jne 0x400bf6c	      8201	normal.c	FUNCTION_107	SWITCH_1	IF_19	ELSE_11	IF_24	CALL_47
0x400bbab	          0x4c89e7	                            mov rdi, r12	      8202	normal.c	FUNCTION_107	SWITCH_1	IF_19	ELSE_11	IF_24
0x400bbae	      0xe88546ffff	                    call sym.clearopbeep	      8202	normal.c	FUNCTION_107	SWITCH_1	IF_19	ELSE_11	IF_24
0x400bbb3	      0xe9b4030000	                           jmp 0x400bf6c	      8202	normal.c	FUNCTION_107	SWITCH_1	IF_19	ELSE_11	IF_24
0x400bbb8	    0x8bbaac000000	            mov edi, dword [rdx + 0xac] 	      8207	normal.c	FUNCTION_107	SWITCH_1	ELSE_12	CALL_49
0x400bbbe	     0x3ba94000000	             add edi, dword [rdx + 0x94]	      8207	normal.c	FUNCTION_107	SWITCH_1	ELSE_12	CALL_49
0x400bbc4	            0x29c7	                            sub edi, eax	      8207	normal.c	FUNCTION_107	SWITCH_1	ELSE_12	CALL_49
0x400bbc6	          0x83ef01	                              sub edi, 1	      8207	normal.c	FUNCTION_107	SWITCH_1	ELSE_12	CALL_49
0x400bbc9	      0xe800000000	                          call 0x400bbce	      8207	normal.c	FUNCTION_107	SWITCH_1	ELSE_12	CALL_49
0x400bbce	      0xe800000000	                          call 0x400bbd3	      8210	normal.c	FUNCTION_107	SWITCH_1	ELSE_12	CALL_50
0x400bbd3	    0x488b05000000	            mov rax, qword [0x0400bbda] 	      8211	normal.c	FUNCTION_107	SWITCH_1	ELSE_12
0x400bbda	    0x8b90d8000000	            mov edx, dword [rax + 0xd8] 	      8211	normal.c	FUNCTION_107	SWITCH_1	ELSE_12
0x400bbe0	          0x895048	             mov dword [rax + 0x48], edx	      8211	normal.c	FUNCTION_107	SWITCH_1	ELSE_12
0x400bbe3	    0xc7404c000000	               mov dword [rax + 0x4c], 0	      8212	normal.c	FUNCTION_107	SWITCH_1	ELSE_12
0x400bbea	      0xe97d030000	                           jmp 0x400bf6c	      8212	normal.c	FUNCTION_107	SWITCH_1	ELSE_12
0x400bbef	          0x4889ef	                            mov rdi, rbp	      8227	normal.c	FUNCTION_107	SWITCH_1	CALL_51
0x400bbf2	      0xe81ac8ffff	                       call sym.nv_ident	      8227	normal.c	FUNCTION_107	SWITCH_1	CALL_51
0x400bbf7	      0xe970030000	                           jmp 0x400bf6c	      8228	normal.c	FUNCTION_107	SWITCH_1
0x400bbfc	    0x41c744240800	                  mov dword [r12 + 8], 0	      8235	normal.c	FUNCTION_107	SWITCH_1
0x400bc05	    0x488b05000000	            mov rax, qword [0x0400bc0c] 	      8236	normal.c	FUNCTION_107	SWITCH_1
0x400bc0c	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      8236	normal.c	FUNCTION_107	SWITCH_1
0x400bc13	    0x41c744241401	               mov dword [r12 + 0x14], 1	      8237	normal.c	FUNCTION_107	SWITCH_1
0x400bc1c	        0x837d1045	           cmp dword [rbp + 0x10], 0x45 	      8238	normal.c	FUNCTION_107	SWITCH_1	IF_25	CALL_52
0x400bc20	        0x400f94c6	                                sete sil	      8238	normal.c	FUNCTION_107	SWITCH_1	IF_25	CALL_52
0x400bc24	        0x400fb6f6	                          movzx esi, sil	      8238	normal.c	FUNCTION_107	SWITCH_1	IF_25	CALL_52
0x400bc28	        0x488b7d30	            mov rdi, qword [rbp + 0x30] 	      8238	normal.c	FUNCTION_107	SWITCH_1	IF_25	CALL_52
0x400bc2c	      0xba00000000	                              mov edx, 0	      8238	normal.c	FUNCTION_107	SWITCH_1	IF_25	CALL_52
0x400bc31	      0xe800000000	                          call 0x400bc36	      8238	normal.c	FUNCTION_107	SWITCH_1	IF_25	CALL_52
0x400bc36	            0x85c0	                           test eax, eax	      8238	normal.c	FUNCTION_107	SWITCH_1	IF_25	CALL_52
0x400bc38	     0xf852e030000	                           jne 0x400bf6c	      8238	normal.c	FUNCTION_107	SWITCH_1	IF_25	CALL_52
0x400bc3e	          0x4c89e7	                            mov rdi, r12	      8239	normal.c	FUNCTION_107	SWITCH_1	CALL_53
0x400bc41	      0xe8f245ffff	                    call sym.clearopbeep	      8239	normal.c	FUNCTION_107	SWITCH_1	CALL_53
0x400bc46	      0xe921030000	                           jmp 0x400bf6c	      8239	normal.c	FUNCTION_107	SWITCH_1	CALL_53
0x400bc4b	      0xbf00000000	                              mov edi, 0	      8246	normal.c	FUNCTION_107	SWITCH_1	CALL_54
0x400bc50	      0xe800000000	                          call 0x400bc55	      8246	normal.c	FUNCTION_107	SWITCH_1	CALL_54
0x400bc55	      0xe912030000	                           jmp 0x400bf6c	      8247	normal.c	FUNCTION_107	SWITCH_1
0x400bc5a	    0x488b05000000	            mov rax, qword [0x0400bc61] 	      8253	normal.c	FUNCTION_107	SWITCH_1	IF_26
0x400bc61	    0x4883b8380300	              cmp qword [rax + 0x338], 0	      8253	normal.c	FUNCTION_107	SWITCH_1	IF_26
0x400bc69	            0x7470	                            je 0x400bcdb	      8253	normal.c	FUNCTION_107	SWITCH_1	IF_26
0x400bc6b	    0x488b88380300	           mov rcx, qword [rax + 0x338] 	      8255	normal.c	FUNCTION_107	SWITCH_1	IF_26
0x400bc72	    0x488b98400300	           mov rbx, qword [rax + 0x340] 	      8255	normal.c	FUNCTION_107	SWITCH_1	IF_26
0x400bc79	    0x488b05000000	            mov rax, qword [0x0400bc80] 	      8255	normal.c	FUNCTION_107	SWITCH_1	IF_26
0x400bc80	        0x48894838	             mov qword [rax + 0x38], rcx	      8255	normal.c	FUNCTION_107	SWITCH_1	IF_26
0x400bc84	        0x48895840	             mov qword [rax + 0x40], rbx	      8255	normal.c	FUNCTION_107	SWITCH_1	IF_26
0x400bc88	      0xe800000000	                          call 0x400bc8d	      8256	normal.c	FUNCTION_107	SWITCH_1	IF_26	CALL_55
0x400bc8d	      0xe800000000	                          call 0x400bc92	      8257	normal.c	FUNCTION_107	SWITCH_1	IF_26	CALL_57
0x400bc92	          0x4889c7	                            mov rdi, rax	      8257	normal.c	FUNCTION_107	SWITCH_1	IF_26	CALL_57
0x400bc95	      0xb800000000	                              mov eax, 0	      8257	normal.c	FUNCTION_107	SWITCH_1	IF_26	CALL_57
0x400bc9a	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      8257	normal.c	FUNCTION_107	SWITCH_1	IF_26	CALL_57
0x400bca1	            0xf2ae	              repne scasb al, byte [rdi]	      8257	normal.c	FUNCTION_107	SWITCH_1	IF_26	CALL_57
0x400bca3	          0x4889c8	                            mov rax, rcx	      8257	normal.c	FUNCTION_107	SWITCH_1	IF_26	CALL_57
0x400bca6	          0x48f7d0	                                 not rax	      8257	normal.c	FUNCTION_107	SWITCH_1	IF_26	CALL_57
0x400bca9	        0x488d58ff	                      lea rbx, [rax - 1]	      8257	normal.c	FUNCTION_107	SWITCH_1	IF_26	CALL_57
0x400bcad	    0x488b05000000	            mov rax, qword [0x0400bcb4] 	      8258	normal.c	FUNCTION_107	SWITCH_1	IF_26	IF_27
0x400bcb4	          0x3b5840	            cmp ebx, dword [rax + 0x40] 	      8258	normal.c	FUNCTION_107	SWITCH_1	IF_26	IF_27
0x400bcb7	            0x7d22	                           jge 0x400bcdb	      8258	normal.c	FUNCTION_107	SWITCH_1	IF_26	IF_27
0x400bcb9	      0xe800000000	                          call 0x400bcbe	      8261	normal.c	FUNCTION_107	SWITCH_1	IF_26	IF_27	IF_28	CALL_58
0x400bcbe	            0x85c0	                           test eax, eax	      8261	normal.c	FUNCTION_107	SWITCH_1	IF_26	IF_27	IF_28	CALL_58
0x400bcc0	            0x740f	                            je 0x400bcd1	      8261	normal.c	FUNCTION_107	SWITCH_1	IF_26	IF_27	IF_28	CALL_58
0x400bcc2	    0x488b05000000	            mov rax, qword [0x0400bcc9] 	      8262	normal.c	FUNCTION_107	SWITCH_1	IF_26	IF_27	IF_28
0x400bcc9	          0x8b5040	            mov edx, dword [rax + 0x40] 	      8262	normal.c	FUNCTION_107	SWITCH_1	IF_26	IF_27	IF_28
0x400bccc	            0x29da	                            sub edx, ebx	      8262	normal.c	FUNCTION_107	SWITCH_1	IF_26	IF_27	IF_28
0x400bcce	           0x15044	             add dword [rax + 0x44], edx	      8262	normal.c	FUNCTION_107	SWITCH_1	IF_26	IF_27	IF_28
0x400bcd1	    0x488b05000000	            mov rax, qword [0x0400bcd8] 	      8264	normal.c	FUNCTION_107	SWITCH_1	IF_26	IF_27
0x400bcd8	          0x895840	             mov dword [rax + 0x40], ebx	      8264	normal.c	FUNCTION_107	SWITCH_1	IF_26	IF_27
0x400bcdb	    0xc7450c690000	            mov dword [rbp + 0xc], 0x69 	      8267	normal.c	FUNCTION_107	SWITCH_1
0x400bce2	          0x4889ef	                            mov rdi, rbp	      8268	normal.c	FUNCTION_107	SWITCH_1	CALL_59
0x400bce5	      0xe8e19bffff	                        call sym.nv_edit	      8268	normal.c	FUNCTION_107	SWITCH_1	CALL_59
0x400bcea	      0xe97d020000	                           jmp 0x400bf6c	      8269	normal.c	FUNCTION_107	SWITCH_1
0x400bcef	      0xbf00000000	                              mov edi, 0	      8275	normal.c	FUNCTION_107	SWITCH_1	CALL_60
0x400bcf4	      0xe800000000	                          call 0x400bcf9	      8275	normal.c	FUNCTION_107	SWITCH_1	CALL_60
0x400bcf9	          0x4c89e7	                            mov rdi, r12	      8276	normal.c	FUNCTION_107	SWITCH_1	IF_29	CALL_61
0x400bcfc	      0xe86045ffff	                  call sym.checkclearopq	      8276	normal.c	FUNCTION_107	SWITCH_1	IF_29	CALL_61
0x400bd01	            0x85c0	                           test eax, eax	      8276	normal.c	FUNCTION_107	SWITCH_1	IF_29	CALL_61
0x400bd03	     0xf8563020000	                           jne 0x400bf6c	      8276	normal.c	FUNCTION_107	SWITCH_1	IF_29	CALL_61
0x400bd09	      0xb900000000	                              mov ecx, 0	      8277	normal.c	FUNCTION_107	SWITCH_1	CALL_62
0x400bd0e	      0xba67000000	                           mov edx, 0x67	      8277	normal.c	FUNCTION_107	SWITCH_1	CALL_62
0x400bd13	      0xbe00000000	                              mov esi, 0	      8277	normal.c	FUNCTION_107	SWITCH_1	CALL_62
0x400bd18	          0x4889ef	                            mov rdi, rbp	      8277	normal.c	FUNCTION_107	SWITCH_1	CALL_62
0x400bd1b	      0xe8554affff	                    call sym.invoke_edit	      8277	normal.c	FUNCTION_107	SWITCH_1	CALL_62
0x400bd20	      0xe947020000	                           jmp 0x400bf6c	      8277	normal.c	FUNCTION_107	SWITCH_1	CALL_62
0x400bd25	          0x4889ef	                            mov rdi, rbp	      8287	normal.c	FUNCTION_107	SWITCH_1	CALL_63
0x400bd28	      0xe89e79ffff	                    call sym.nv_gotofile	      8287	normal.c	FUNCTION_107	SWITCH_1	CALL_63
0x400bd2d	      0xe93a020000	                           jmp 0x400bf6c	      8288	normal.c	FUNCTION_107	SWITCH_1
0x400bd32	    0xc74738010000	               mov dword [rdi + 0x38], 1	      8293	normal.c	FUNCTION_107	SWITCH_1
0x400bd39	          0x4889ef	                            mov rdi, rbp	      8296	normal.c	FUNCTION_107	SWITCH_1	CALL_64
0x400bd3c	      0xe82e77ffff	                      call sym.nv_gomark	      8296	normal.c	FUNCTION_107	SWITCH_1	CALL_64
0x400bd41	      0xe926020000	                           jmp 0x400bf6c	      8297	normal.c	FUNCTION_107	SWITCH_1
0x400bd46	    0x48697f30e803	     imul rdi, qword [rdi + 0x30], 0x3e8	      8303	normal.c	FUNCTION_107	SWITCH_1	CALL_65
0x400bd4e	      0xe800000000	                          call 0x400bd53	      8303	normal.c	FUNCTION_107	SWITCH_1	CALL_65
0x400bd53	      0xe914020000	                           jmp 0x400bf6c	      8304	normal.c	FUNCTION_107	SWITCH_1
0x400bd58	      0xbf00000000	                              mov edi, 0	      8311	normal.c	FUNCTION_107	SWITCH_1	CALL_66
0x400bd5d	      0xe800000000	                          call 0x400bd62	      8311	normal.c	FUNCTION_107	SWITCH_1	CALL_66
0x400bd62	      0xe905020000	                           jmp 0x400bf6c	      8312	normal.c	FUNCTION_107	SWITCH_1
0x400bd67	      0x48837f2808	               cmp qword [rdi + 0x28], 8	      8321	normal.c	FUNCTION_107	SWITCH_1	IF_30
0x400bd6c	            0x750a	                           jne 0x400bd78	      8321	normal.c	FUNCTION_107	SWITCH_1	IF_30
0x400bd6e	      0xe800000000	                          call 0x400bd73	      8322	normal.c	FUNCTION_107	SWITCH_1	CALL_67
0x400bd73	      0xe9f4010000	                           jmp 0x400bf6c	      8322	normal.c	FUNCTION_107	SWITCH_1	CALL_67
0x400bd78	      0xe800000000	                          call 0x400bd7d	      8324	normal.c	FUNCTION_107	SWITCH_1	CALL_68
0x400bd7d	      0xe9ea010000	                           jmp 0x400bf6c	      8324	normal.c	FUNCTION_107	SWITCH_1	CALL_68
0x400bd82	      0xe800000000	                          call 0x400bd87	      8330	normal.c	FUNCTION_107	SWITCH_1	CALL_69
0x400bd87	      0xe9e0010000	                           jmp 0x400bf6c	      8331	normal.c	FUNCTION_107	SWITCH_1
0x400bd8c	    0xc74738000000	               mov dword [rdi + 0x38], 0	      8338	normal.c	FUNCTION_107	SWITCH_1
0x400bd93	      0xe89e48ffff	                        call sym.nv_goto	      8339	normal.c	FUNCTION_107	SWITCH_1	CALL_70
0x400bd98	      0xe9cf010000	                           jmp 0x400bf6c	      8340	normal.c	FUNCTION_107	SWITCH_1
0x400bd9d	    0x488b05000000	            mov rax, qword [0x0400bda4] 	      8354	normal.c	FUNCTION_107	SWITCH_1
0x400bda4	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      8354	normal.c	FUNCTION_107	SWITCH_1
0x400bda8	        0x488b4038	            mov rax, qword [rax + 0x38] 	      8354	normal.c	FUNCTION_107	SWITCH_1
0x400bdac	      0x4989442440	             mov qword [r12 + 0x40], rax	      8354	normal.c	FUNCTION_107	SWITCH_1
0x400bdb1	      0x4989542448	             mov qword [r12 + 0x48], rdx	      8354	normal.c	FUNCTION_107	SWITCH_1
0x400bdb6	          0x4889ef	                            mov rdi, rbp	      8361	normal.c	FUNCTION_107	SWITCH_1	CALL_71
0x400bdb9	      0xe8a05dffff	                    call sym.nv_operator	      8361	normal.c	FUNCTION_107	SWITCH_1	CALL_71
0x400bdbe	      0xe9a9010000	                           jmp 0x400bf6c	      8362	normal.c	FUNCTION_107	SWITCH_1
0x400bdc3	        0x488b6d28	            mov rbp, qword [rbp + 0x28] 	      8371	normal.c	FUNCTION_107	SWITCH_1	CALL_72
0x400bdc7	      0xbe01000000	                              mov esi, 1	      4229	normal.c	FUNCTION_43	IF_1	CALL_1
0x400bdcc	          0x4889e7	                            mov rdi, rsp	      4229	normal.c	FUNCTION_43	IF_1	CALL_1
0x400bdcf	      0xe800000000	                          call 0x400bdd4	      4229	normal.c	FUNCTION_43	IF_1	CALL_1
0x400bdd4	            0x85c0	                           test eax, eax	      4229	normal.c	FUNCTION_43	IF_1	CALL_1
0x400bdd6	            0x7420	                            je 0x400bdf8	      4229	normal.c	FUNCTION_43	IF_1	CALL_1
0x400bdd8	          0x83fb64	                           cmp ebx, 0x64	      4230	normal.c	FUNCTION_43	IF_1	CALL_2
0x400bddb	           0xf94c2	                                 sete dl	      4230	normal.c	FUNCTION_43	IF_1	CALL_2
0x400bdde	           0xfb6d2	                           movzx edx, dl	      4230	normal.c	FUNCTION_43	IF_1	CALL_2
0x400bde1	    0x41b800010000	                          mov r8d, 0x100	      4230	normal.c	FUNCTION_43	IF_1	CALL_2
0x400bde7	            0x89e9	                            mov ecx, ebp	      4230	normal.c	FUNCTION_43	IF_1	CALL_2
0x400bde9	            0x89c6	                            mov esi, eax	      4230	normal.c	FUNCTION_43	IF_1	CALL_2
0x400bdeb	        0x488b3c24	                    mov rdi, qword [rsp]	      4230	normal.c	FUNCTION_43	IF_1	CALL_2
0x400bdef	      0xe800000000	                          call 0x400bdf4	      4230	normal.c	FUNCTION_43	IF_1	CALL_2
0x400bdf4	            0x85c0	                           test eax, eax	      4230	normal.c	FUNCTION_43	IF_1	CALL_2
0x400bdf6	            0x750d	                           jne 0x400be05	      4230	normal.c	FUNCTION_43	IF_1	CALL_2
0x400bdf8	          0x4c89e7	                            mov rdi, r12	      4232	normal.c	FUNCTION_43	CALL_3
0x400bdfb	      0xe83844ffff	                    call sym.clearopbeep	      4232	normal.c	FUNCTION_43	CALL_3
0x400be00	      0xe967010000	                           jmp 0x400bf6c	      4232	normal.c	FUNCTION_43	CALL_3
0x400be05	    0xf60500000000	           test byte [0x0400be0c], 0x40 	      4234	normal.c	FUNCTION_43	ELSE_1	IF_2
0x400be0c	     0xf845a010000	                            je 0x400bf6c	      4234	normal.c	FUNCTION_43	ELSE_1	IF_2
0x400be12	    0x833d00000000	               cmp dword [0x0400be19], 0	      4234	normal.c	FUNCTION_43	ELSE_1	IF_2
0x400be19	     0xf844d010000	                            je 0x400bf6c	      4234	normal.c	FUNCTION_43	ELSE_1	IF_2
0x400be1f	      0x41833c2400	                      cmp dword [r12], 0	      4234	normal.c	FUNCTION_43	ELSE_1	IF_2
0x400be24	     0xf8542010000	                           jne 0x400bf6c	      4234	normal.c	FUNCTION_43	ELSE_1	IF_2
0x400be2a	      0xe800000000	                          call 0x400be2f	      4235	normal.c	FUNCTION_43	ELSE_1	IF_2
0x400be2f	      0xe938010000	                           jmp 0x400bf6c	      4235	normal.c	FUNCTION_43	ELSE_1	IF_2
0x400be34	    0xc70500000000	               mov dword [0x0400be3e], 4	      8394	normal.c	FUNCTION_107	SWITCH_1
0x400be3e	        0x488b4d30	            mov rcx, qword [rbp + 0x30] 	      8395	normal.c	FUNCTION_107	SWITCH_1	CALL_73
0x400be42	    0x41b800000000	                              mov r8d, 0	      8395	normal.c	FUNCTION_107	SWITCH_1	CALL_73
0x400be48	      0xbaffffffff	                     mov edx, 0xffffffff	      8395	normal.c	FUNCTION_107	SWITCH_1	CALL_73
0x400be4d	            0x89de	                            mov esi, ebx	      8395	normal.c	FUNCTION_107	SWITCH_1	CALL_73
0x400be4f	          0x4c89e7	                            mov rdi, r12	      8395	normal.c	FUNCTION_107	SWITCH_1	CALL_73
0x400be52	      0xe800000000	                          call 0x400be57	      8395	normal.c	FUNCTION_107	SWITCH_1	CALL_73
0x400be57	      0xe910010000	                           jmp 0x400bf6c	      8396	normal.c	FUNCTION_107	SWITCH_1
0x400be5c	          0x4889ef	                            mov rdi, rbp	      8407	normal.c	FUNCTION_107	SWITCH_1	CALL_74
0x400be5f	      0xe81696ffff	                         call sym.nv_put	      8407	normal.c	FUNCTION_107	SWITCH_1	CALL_74
0x400be64	      0xe903010000	                           jmp 0x400bf6c	      8408	normal.c	FUNCTION_107	SWITCH_1
0x400be69	        0x488b7f28	            mov rdi, qword [rdi + 0x28] 	      8413	normal.c	FUNCTION_107	SWITCH_1	CALL_75
0x400be6d	      0xe800000000	                          call 0x400be72	      8413	normal.c	FUNCTION_107	SWITCH_1	CALL_75
0x400be72	      0xe9f5000000	                           jmp 0x400bf6c	      8414	normal.c	FUNCTION_107	SWITCH_1
0x400be77	      0xe800000000	                          call 0x400be7c	      8419	normal.c	FUNCTION_107	SWITCH_1	IF_31	CALL_76
0x400be7c	            0x85c0	                           test eax, eax	      8419	normal.c	FUNCTION_107	SWITCH_1	IF_31	CALL_76
0x400be7e	            0x7413	                            je 0x400be93	      8419	normal.c	FUNCTION_107	SWITCH_1	IF_31	CALL_76
0x400be80	        0x488b7d00	                    mov rdi, qword [rbp]	      8421	normal.c	FUNCTION_107	SWITCH_1	IF_31	CALL_77
0x400be84	      0xe8af43ffff	                    call sym.clearopbeep	      8421	normal.c	FUNCTION_107	SWITCH_1	IF_31	CALL_77
0x400be89	      0xe800000000	                          call 0x400be8e	      8422	normal.c	FUNCTION_107	SWITCH_1	IF_31	CALL_78
0x400be8e	      0xe9d9000000	                           jmp 0x400bf6c	      8423	normal.c	FUNCTION_107	SWITCH_1	IF_31
0x400be93	          0x4c89e7	                            mov rdi, r12	      8426	normal.c	FUNCTION_107	SWITCH_1	IF_32	CALL_79
0x400be96	      0xe8c643ffff	                  call sym.checkclearopq	      8426	normal.c	FUNCTION_107	SWITCH_1	IF_32	CALL_79
0x400be9b	            0x85c0	                           test eax, eax	      8426	normal.c	FUNCTION_107	SWITCH_1	IF_32	CALL_79
0x400be9d	     0xf85c9000000	                           jne 0x400bf6c	      8426	normal.c	FUNCTION_107	SWITCH_1	IF_32	CALL_79
0x400bea3	      0xbf01000000	                              mov edi, 1	      8427	normal.c	FUNCTION_107	SWITCH_1	CALL_80
0x400bea8	      0xe800000000	                          call 0x400bead	      8427	normal.c	FUNCTION_107	SWITCH_1	CALL_80
0x400bead	      0xe9ba000000	                           jmp 0x400bf6c	      8427	normal.c	FUNCTION_107	SWITCH_1	CALL_80
0x400beb2	      0xe8a076ffff	                      call sym.nv_pcmark	      8432	normal.c	FUNCTION_107	SWITCH_1	CALL_81
0x400beb7	      0xe9b0000000	                           jmp 0x400bf6c	      8433	normal.c	FUNCTION_107	SWITCH_1
0x400bebc	        0x48f75f30	                  neg qword [rdi + 0x30]	      8436	normal.c	FUNCTION_107	SWITCH_1
0x400bec0	      0xe89276ffff	                      call sym.nv_pcmark	      8437	normal.c	FUNCTION_107	SWITCH_1	CALL_82
0x400bec5	      0xe9a2000000	                           jmp 0x400bf6c	      8438	normal.c	FUNCTION_107	SWITCH_1
0x400beca	          0x4c89e7	                            mov rdi, r12	      8442	normal.c	FUNCTION_107	SWITCH_1	IF_33	CALL_83
0x400becd	      0xe8b143ffff	                   call sym.checkclearop	      8442	normal.c	FUNCTION_107	SWITCH_1	IF_33	CALL_83
0x400bed2	            0x85c0	                           test eax, eax	      8442	normal.c	FUNCTION_107	SWITCH_1	IF_33	CALL_83
0x400bed4	     0xf8592000000	                           jne 0x400bf6c	      8442	normal.c	FUNCTION_107	SWITCH_1	IF_33	CALL_83
0x400beda	        0x488b7d28	            mov rdi, qword [rbp + 0x28] 	      8443	normal.c	FUNCTION_107	SWITCH_1	CALL_84
0x400bede	      0xe800000000	                          call 0x400bee3	      8443	normal.c	FUNCTION_107	SWITCH_1	CALL_84
0x400bee3	      0xe984000000	                           jmp 0x400bf6c	      8443	normal.c	FUNCTION_107	SWITCH_1	CALL_84
0x400bee8	          0x4c89e7	                            mov rdi, r12	      8446	normal.c	FUNCTION_107	SWITCH_1	IF_34	CALL_85
0x400beeb	      0xe89343ffff	                   call sym.checkclearop	      8446	normal.c	FUNCTION_107	SWITCH_1	IF_34	CALL_85
0x400bef0	            0x85c0	                           test eax, eax	      8446	normal.c	FUNCTION_107	SWITCH_1	IF_34	CALL_85
0x400bef2	            0x7578	                           jne 0x400bf6c	      8446	normal.c	FUNCTION_107	SWITCH_1	IF_34	CALL_85
0x400bef4	        0x488b7d30	            mov rdi, qword [rbp + 0x30] 	      8447	normal.c	FUNCTION_107	SWITCH_1	CALL_86
0x400bef8	            0xf7df	                                 neg edi	      8447	normal.c	FUNCTION_107	SWITCH_1	CALL_86
0x400befa	      0xe800000000	                          call 0x400beff	      8447	normal.c	FUNCTION_107	SWITCH_1	CALL_86
0x400beff	            0xeb6b	                           jmp 0x400bf6c	      8447	normal.c	FUNCTION_107	SWITCH_1	CALL_86
0x400bf01	          0x4c89e7	                            mov rdi, r12	      8452	normal.c	FUNCTION_107	SWITCH_1	IF_35	CALL_87
0x400bf04	      0xe85843ffff	                  call sym.checkclearopq	      8452	normal.c	FUNCTION_107	SWITCH_1	IF_35	CALL_87
0x400bf09	            0x85c0	                           test eax, eax	      8452	normal.c	FUNCTION_107	SWITCH_1	IF_35	CALL_87
0x400bf0b	            0x755f	                           jne 0x400bf6c	      8452	normal.c	FUNCTION_107	SWITCH_1	IF_35	CALL_87
0x400bf0d	        0x837d102d	           cmp dword [rbp + 0x10], 0x2d 	      8453	normal.c	FUNCTION_107	SWITCH_1	IF_35	CALL_88
0x400bf11	            0x7509	                           jne 0x400bf1c	      8453	normal.c	FUNCTION_107	SWITCH_1	IF_35	CALL_88
0x400bf13	        0x488b7d30	            mov rdi, qword [rbp + 0x30] 	      8453	normal.c	FUNCTION_107	SWITCH_1	IF_35	CALL_88
0x400bf17	          0x48f7df	                                 neg rdi	      8453	normal.c	FUNCTION_107	SWITCH_1	IF_35	CALL_88
0x400bf1a	            0xeb04	                           jmp 0x400bf20	      8453	normal.c	FUNCTION_107	SWITCH_1	IF_35	CALL_88
0x400bf1c	        0x488b7d30	            mov rdi, qword [rbp + 0x30] 	      8453	normal.c	FUNCTION_107	SWITCH_1	IF_35	CALL_88
0x400bf20	      0xb900000000	                              mov ecx, 0	      8453	normal.c	FUNCTION_107	SWITCH_1	IF_35	CALL_88
0x400bf25	      0xba00000000	                              mov edx, 0	      8453	normal.c	FUNCTION_107	SWITCH_1	IF_35	CALL_88
0x400bf2a	      0xbe00000000	                              mov esi, 0	      8453	normal.c	FUNCTION_107	SWITCH_1	IF_35	CALL_88
0x400bf2f	      0xe800000000	                          call 0x400bf34	      8453	normal.c	FUNCTION_107	SWITCH_1	IF_35	CALL_88
0x400bf34	            0xeb36	                           jmp 0x400bf6c	      8453	normal.c	FUNCTION_107	SWITCH_1	IF_35	CALL_88
0x400bf36	          0x4c89e7	                            mov rdi, r12	      8458	normal.c	FUNCTION_107	SWITCH_1	CALL_89
0x400bf39	      0xe8fa42ffff	                    call sym.clearopbeep	      8458	normal.c	FUNCTION_107	SWITCH_1	CALL_89
0x400bf3e	            0xeb2c	                           jmp 0x400bf6c	      8461	normal.c	FUNCTION_107
0x400bf40	    0x8baaac000000	            mov ebp, dword [rdx + 0xac] 	      8122	normal.c	FUNCTION_107	SWITCH_1	IF_15	CALL_31
0x400bf46	      0xe800000000	                          call 0x400bf4b	      8122	normal.c	FUNCTION_107	SWITCH_1	IF_15	CALL_31
0x400bf4b	            0x29c5	                            sub ebp, eax	      8122	normal.c	FUNCTION_107	SWITCH_1	IF_15	CALL_31
0x400bf4d	      0xbb00000000	                              mov ebx, 0	      8112	normal.c	FUNCTION_107	SWITCH_1	IF_13
0x400bf52	      0xb800000000	                              mov eax, 0	      8124	normal.c	FUNCTION_107	SWITCH_1	CALL_32
0x400bf57	      0xe964faffff	                           jmp 0x400b9c0	      8124	normal.c	FUNCTION_107	SWITCH_1	CALL_32
0x400bf5c	        0x837d106d	           cmp dword [rbp + 0x10], 0x6d 	      8121	normal.c	FUNCTION_107	SWITCH_1	IF_15
0x400bf60	            0x74de	                            je 0x400bf40	      8121	normal.c	FUNCTION_107	SWITCH_1	IF_15
0x400bf62	      0xbb00000000	                              mov ebx, 0	      8112	normal.c	FUNCTION_107	SWITCH_1	IF_13
0x400bf67	      0xe961faffff	                           jmp 0x400b9cd	      8112	normal.c	FUNCTION_107	SWITCH_1	IF_13
0x400bf6c	      0x488b442408	                mov rax, qword [rsp + 8]	      8461	normal.c	FUNCTION_107
0x400bf71	    0x644833042528	                xor rax, qword fs:[0x28]	      8461	normal.c	FUNCTION_107
0x400bf7a	            0x7405	                            je 0x400bf81	      8461	normal.c	FUNCTION_107
0x400bf7c	      0xe800000000	                          call 0x400bf81	      8461	normal.c	FUNCTION_107
0x400bf81	        0x4883c418	                           add rsp, 0x18	      8461	normal.c	FUNCTION_107
0x400bf85	              0x5b	                                 pop rbx	      8461	normal.c	FUNCTION_107
0x400bf86	              0x5d	                                 pop rbp	      8461	normal.c	FUNCTION_107
0x400bf87	            0x415c	                                 pop r12	      8461	normal.c	FUNCTION_107
0x400bf89	            0x415d	                                 pop r13	      8461	normal.c	FUNCTION_107
0x400bf8b	              0xc3	                                     ret	      8461	normal.c	FUNCTION_107
nv_Undo	CALL,3:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,1:IF,2	19
0x4001f5e	        0x4883ec08	                              sub rsp, 8	      8549	normal.c	FUNCTION_111
0x4001f62	          0x488b07	                    mov rax, qword [rdi]	      8551	normal.c	FUNCTION_111	IF_1
0x4001f65	          0x83380b	                    cmp dword [rax], 0xb	      8551	normal.c	FUNCTION_111	IF_1
0x4001f68	            0x7409	                            je 0x4001f73	      8551	normal.c	FUNCTION_111	IF_1
0x4001f6a	    0x833d00000000	               cmp dword [0x04001f71], 0	      8551	normal.c	FUNCTION_111	IF_1
0x4001f71	            0x7415	                            je 0x4001f88	      8551	normal.c	FUNCTION_111	IF_1
0x4001f73	    0xc7470c670000	            mov dword [rdi + 0xc], 0x67 	      8554	normal.c	FUNCTION_111	IF_1
0x4001f7a	    0xc74710550000	           mov dword [rdi + 0x10], 0x55 	      8555	normal.c	FUNCTION_111	IF_1
0x4001f81	      0xe8d8fbffff	                    call sym.nv_operator	      8556	normal.c	FUNCTION_111	IF_1	CALL_1
0x4001f86	            0xeb1f	                           jmp 0x4001fa7	      8556	normal.c	FUNCTION_111	IF_1	CALL_1
0x4001f88	          0x4889c7	                            mov rdi, rax	      8558	normal.c	FUNCTION_111	ELSE_1	IF_2	CALL_2
0x4001f8b	      0xe8d1e2ffff	                  call sym.checkclearopq	      8558	normal.c	FUNCTION_111	ELSE_1	IF_2	CALL_2
0x4001f90	            0x85c0	                           test eax, eax	      8558	normal.c	FUNCTION_111	ELSE_1	IF_2	CALL_2
0x4001f92	            0x7513	                           jne 0x4001fa7	      8558	normal.c	FUNCTION_111	ELSE_1	IF_2	CALL_2
0x4001f94	      0xe800000000	                          call 0x4001f99	      8560	normal.c	FUNCTION_111	ELSE_1	IF_2	CALL_3
0x4001f99	    0x488b05000000	            mov rax, qword [0x04001fa0] 	      8561	normal.c	FUNCTION_111	ELSE_1	IF_2
0x4001fa0	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      8561	normal.c	FUNCTION_111	ELSE_1	IF_2
0x4001fa7	        0x4883c408	                              add rsp, 8	      8563	normal.c	FUNCTION_111
0x4001fab	              0xc3	                                     ret	      8563	normal.c	FUNCTION_111
nv_wordcmd	CALL,10:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,4:IF,9	111
0x4001021	            0x4156	                                push r14	      8710	normal.c	FUNCTION_119
0x4001023	            0x4155	                                push r13	      8710	normal.c	FUNCTION_119
0x4001025	            0x4154	                                push r12	      8710	normal.c	FUNCTION_119
0x4001027	              0x55	                                push rbp	      8710	normal.c	FUNCTION_119
0x4001028	              0x53	                                push rbx	      8710	normal.c	FUNCTION_119
0x4001029	          0x4889fb	                            mov rbx, rdi	      8710	normal.c	FUNCTION_119
0x400102c	    0x488b05000000	            mov rax, qword [0x04001033] 	      8714	normal.c	FUNCTION_119
0x4001033	        0x488b6838	            mov rbp, qword [rax + 0x38] 	      8714	normal.c	FUNCTION_119
0x4001037	        0x448b6040	           mov r12d, dword [rax + 0x40] 	      8714	normal.c	FUNCTION_119
0x400103b	        0x448b6844	           mov r13d, dword [rax + 0x44] 	      8714	normal.c	FUNCTION_119
0x400103f	          0x8b470c	              mov eax, dword [rdi + 0xc]	      8719	normal.c	FUNCTION_119	IF_1
0x4001042	          0x83e0df	                     and eax, 0xffffffdf	      8719	normal.c	FUNCTION_119	IF_1
0x4001045	          0x488b17	                    mov rdx, qword [rdi]	      8723	normal.c	FUNCTION_119	ELSE_1
0x4001048	          0x83f845	                           cmp eax, 0x45	      8723	normal.c	FUNCTION_119	ELSE_1
0x400104b	           0xf94c1	                                 sete cl	      8723	normal.c	FUNCTION_119	ELSE_1
0x400104e	           0xfb6c9	                           movzx ecx, cl	      8723	normal.c	FUNCTION_119	ELSE_1
0x4001051	          0x894a14	             mov dword [rdx + 0x14], ecx	      8723	normal.c	FUNCTION_119	ELSE_1
0x4001054	     0xf84f4000000	                            je 0x400114e	      8728	normal.c	FUNCTION_119	ELSE_1	IF_2
0x400105a	          0x488b07	                    mov rax, qword [rdi]	      8728	normal.c	FUNCTION_119	ELSE_1	IF_2
0x400105d	          0x833803	                      cmp dword [rax], 3	      8728	normal.c	FUNCTION_119	ELSE_1	IF_2
0x4001060	     0xf851e010000	                           jne 0x4001184	      8728	normal.c	FUNCTION_119	ELSE_1	IF_2
0x4001066	      0xe800000000	                          call 0x400106b	      8730	normal.c	FUNCTION_119	ELSE_1	IF_2	CALL_1
0x400106b	            0x85c0	                           test eax, eax	      8731	normal.c	FUNCTION_119	ELSE_1	IF_2	IF_3
0x400106d	     0xf8411010000	                            je 0x4001184	      8731	normal.c	FUNCTION_119	ELSE_1	IF_2	IF_3
0x4001073	          0x83f820	                           cmp eax, 0x20	      8733	normal.c	FUNCTION_119	ELSE_1	IF_2	IF_3	IF_4	CALL_2
0x4001076	            0x7405	                            je 0x400107d	      8733	normal.c	FUNCTION_119	ELSE_1	IF_2	IF_3	IF_4	CALL_2
0x4001078	          0x83f809	                              cmp eax, 9	      8733	normal.c	FUNCTION_119	ELSE_1	IF_2	IF_3	IF_4	CALL_2
0x400107b	            0x753e	                           jne 0x40010bb	      8733	normal.c	FUNCTION_119	ELSE_1	IF_2	IF_3	IF_4	CALL_2
0x400107d	      0x48837b3001	               cmp qword [rbx + 0x30], 1	      8741	normal.c	FUNCTION_119	ELSE_1	IF_2	IF_3	IF_4	IF_5	CALL_3
0x4001082	     0xf85fc000000	                           jne 0x4001184	      8741	normal.c	FUNCTION_119	ELSE_1	IF_2	IF_3	IF_4	IF_5	CALL_3
0x4001088	      0xbe77000000	                           mov esi, 0x77	      8741	normal.c	FUNCTION_119	ELSE_1	IF_2	IF_3	IF_4	IF_5	CALL_3
0x400108d	    0x488b3d000000	            mov rdi, qword [0x04001094] 	      8741	normal.c	FUNCTION_119	ELSE_1	IF_2	IF_3	IF_4	IF_5	CALL_3
0x4001094	      0xe800000000	                          call 0x4001099	      8741	normal.c	FUNCTION_119	ELSE_1	IF_2	IF_3	IF_4	IF_5	CALL_3
0x4001099	          0x4885c0	                           test rax, rax	      8741	normal.c	FUNCTION_119	ELSE_1	IF_2	IF_3	IF_4	IF_5	CALL_3
0x400109c	     0xf84e2000000	                            je 0x4001184	      8741	normal.c	FUNCTION_119	ELSE_1	IF_2	IF_3	IF_4	IF_5	CALL_3
0x40010a2	          0x488b03	                    mov rax, qword [rbx]	      8743	normal.c	FUNCTION_119	ELSE_1	IF_2	IF_3	IF_4	IF_5
0x40010a5	    0xc74014010000	               mov dword [rax + 0x14], 1	      8743	normal.c	FUNCTION_119	ELSE_1	IF_2	IF_3	IF_4	IF_5
0x40010ac	          0x488b03	                    mov rax, qword [rbx]	      8744	normal.c	FUNCTION_119	ELSE_1	IF_2	IF_3	IF_4	IF_5
0x40010af	    0xc74008000000	                  mov dword [rax + 8], 0	      8744	normal.c	FUNCTION_119	ELSE_1	IF_2	IF_3	IF_4	IF_5
0x40010b6	      0xe901010000	                           jmp 0x40011bc	      8744	normal.c	FUNCTION_119	ELSE_1	IF_2	IF_3	IF_4	IF_5
0x40010bb	          0x488b03	                    mov rax, qword [rbx]	      8761	normal.c	FUNCTION_119	ELSE_1	IF_2	IF_3	ELSE_2
0x40010be	    0xc74014010000	               mov dword [rax + 0x14], 1	      8761	normal.c	FUNCTION_119	ELSE_1	IF_2	IF_3	ELSE_2
0x40010c5	      0xba01000000	                              mov edx, 1	      8763	normal.c	FUNCTION_119	ELSE_1	IF_2	IF_3	ELSE_2
0x40010ca	      0xe984000000	                           jmp 0x4001153	      8763	normal.c	FUNCTION_119	ELSE_1	IF_2	IF_3	ELSE_2
0x40010cf	    0x488b15000000	            mov rdx, qword [0x040010d6] 	      8777	normal.c	FUNCTION_119	IF_7	CALL_6
0x40010d6	        0x488b4238	            mov rax, qword [rdx + 0x38] 	      8777	normal.c	FUNCTION_119	IF_7	CALL_6
0x40010da	          0x4839e8	                            cmp rax, rbp	      8777	normal.c	FUNCTION_119	IF_7	CALL_6
0x40010dd	            0x7408	                            je 0x40010e7	      8777	normal.c	FUNCTION_119	IF_7	CALL_6
0x40010df	          0x4839e8	                            cmp rax, rbp	      8777	normal.c	FUNCTION_119	IF_7	CALL_6
0x40010e2	           0xf9fc0	                                 setg al	      8777	normal.c	FUNCTION_119	IF_7	CALL_6
0x40010e5	            0xeb17	                           jmp 0x40010fe	      8777	normal.c	FUNCTION_119	IF_7	CALL_6
0x40010e7	          0x8b4240	            mov eax, dword [rdx + 0x40] 	      8777	normal.c	FUNCTION_119	IF_7	CALL_6
0x40010ea	          0x4139c4	                           cmp r12d, eax	      8777	normal.c	FUNCTION_119	IF_7	CALL_6
0x40010ed	            0x7408	                            je 0x40010f7	      8777	normal.c	FUNCTION_119	IF_7	CALL_6
0x40010ef	          0x4139c4	                           cmp r12d, eax	      8777	normal.c	FUNCTION_119	IF_7	CALL_6
0x40010f2	           0xf9cc0	                                 setl al	      8777	normal.c	FUNCTION_119	IF_7	CALL_6
0x40010f5	            0xeb07	                           jmp 0x40010fe	      8777	normal.c	FUNCTION_119	IF_7	CALL_6
0x40010f7	        0x443b6a44	           cmp r13d, dword [rdx + 0x44] 	      8777	normal.c	FUNCTION_119	IF_7	CALL_6
0x40010fb	           0xf9cc0	                                 setl al	      8777	normal.c	FUNCTION_119	IF_7	CALL_6
0x40010fe	            0x84c0	                             test al, al	      8777	normal.c	FUNCTION_119	IF_7	CALL_6
0x4001100	            0x7408	                            je 0x400110a	      8777	normal.c	FUNCTION_119	IF_7	CALL_6
0x4001102	          0x488b3b	                    mov rdi, qword [rbx]	      8778	normal.c	FUNCTION_119	CALL_7
0x4001105	      0xe807f6ffff	                  call sym.adjust_cursor	      8778	normal.c	FUNCTION_119	CALL_7
0x400110a	          0x4585f6	                         test r14d, r14d	      8780	normal.c	FUNCTION_119	IF_8
0x400110d	            0x7512	                           jne 0x4001121	      8780	normal.c	FUNCTION_119	IF_8
0x400110f	          0x488b3b	                    mov rdi, qword [rbx]	      8780	normal.c	FUNCTION_119	IF_8
0x4001112	          0x833f00	                      cmp dword [rdi], 0	      8780	normal.c	FUNCTION_119	IF_8
0x4001115	            0x750a	                           jne 0x4001121	      8780	normal.c	FUNCTION_119	IF_8
0x4001117	      0xe81cf1ffff	                    call sym.clearopbeep	      8781	normal.c	FUNCTION_119	CALL_8
0x400111c	      0xe99b000000	                           jmp 0x40011bc	      8781	normal.c	FUNCTION_119	CALL_8
0x4001121	          0x4889df	                            mov rdi, rbx	      8784	normal.c	FUNCTION_119	ELSE_4	CALL_9
0x4001124	      0xe875f2ffff	                 call sym.adjust_for_sel	      8784	normal.c	FUNCTION_119	ELSE_4	CALL_9
0x4001129	    0xf60500000000	               test byte [0x04001130], 4	      8786	normal.c	FUNCTION_119	ELSE_4	IF_9
0x4001130	     0xf8486000000	                            je 0x40011bc	      8786	normal.c	FUNCTION_119	ELSE_4	IF_9
0x4001136	    0x833d00000000	               cmp dword [0x0400113d], 0	      8786	normal.c	FUNCTION_119	ELSE_4	IF_9
0x400113d	            0x747d	                            je 0x40011bc	      8786	normal.c	FUNCTION_119	ELSE_4	IF_9
0x400113f	          0x488b03	                    mov rax, qword [rbx]	      8786	normal.c	FUNCTION_119	ELSE_4	IF_9
0x4001142	          0x833800	                      cmp dword [rax], 0	      8786	normal.c	FUNCTION_119	ELSE_4	IF_9
0x4001145	            0x7575	                           jne 0x40011bc	      8786	normal.c	FUNCTION_119	ELSE_4	IF_9
0x4001147	      0xe800000000	                          call 0x400114c	      8787	normal.c	FUNCTION_119	ELSE_4	CALL_10
0x400114c	            0xeb6e	                           jmp 0x40011bc	      8787	normal.c	FUNCTION_119	ELSE_4	CALL_10
0x400114e	      0xba00000000	                              mov edx, 0	      8713	normal.c	FUNCTION_119
0x4001153	          0x488b03	                    mov rax, qword [rbx]	      8768	normal.c	FUNCTION_119
0x4001156	    0xc74008000000	                  mov dword [rax + 8], 0	      8768	normal.c	FUNCTION_119
0x400115d	    0x488b05000000	            mov rax, qword [0x04001164] 	      8769	normal.c	FUNCTION_119
0x4001164	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      8769	normal.c	FUNCTION_119
0x400116b	          0x8b7338	            mov esi, dword [rbx + 0x38] 	      8771	normal.c	FUNCTION_119	CALL_4
0x400116e	        0x488b7b30	            mov rdi, qword [rbx + 0x30] 	      8771	normal.c	FUNCTION_119	CALL_4
0x4001172	      0xb900000000	                              mov ecx, 0	      8771	normal.c	FUNCTION_119	CALL_4
0x4001177	      0xe800000000	                          call 0x400117c	      8771	normal.c	FUNCTION_119	CALL_4
0x400117c	          0x4189c6	                           mov r14d, eax	      8771	normal.c	FUNCTION_119	CALL_4
0x400117f	      0xe94bffffff	                           jmp 0x40010cf	      8771	normal.c	FUNCTION_119	CALL_4
0x4001184	          0x488b03	                    mov rax, qword [rbx]	      8768	normal.c	FUNCTION_119
0x4001187	    0xc74008000000	                  mov dword [rax + 8], 0	      8768	normal.c	FUNCTION_119
0x400118e	    0x488b05000000	            mov rax, qword [0x04001195] 	      8769	normal.c	FUNCTION_119
0x4001195	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      8769	normal.c	FUNCTION_119
0x400119c	          0x488b03	                    mov rax, qword [rbx]	      8773	normal.c	FUNCTION_119	CALL_5
0x400119f	          0x833800	                      cmp dword [rax], 0	      8773	normal.c	FUNCTION_119	CALL_5
0x40011a2	           0xf95c2	                                setne dl	      8773	normal.c	FUNCTION_119	CALL_5
0x40011a5	           0xfb6d2	                           movzx edx, dl	      8773	normal.c	FUNCTION_119	CALL_5
0x40011a8	          0x8b7338	            mov esi, dword [rbx + 0x38] 	      8773	normal.c	FUNCTION_119	CALL_5
0x40011ab	        0x488b7b30	            mov rdi, qword [rbx + 0x30] 	      8773	normal.c	FUNCTION_119	CALL_5
0x40011af	      0xe800000000	                          call 0x40011b4	      8773	normal.c	FUNCTION_119	CALL_5
0x40011b4	          0x4189c6	                           mov r14d, eax	      8773	normal.c	FUNCTION_119	CALL_5
0x40011b7	      0xe913ffffff	                           jmp 0x40010cf	      8773	normal.c	FUNCTION_119	CALL_5
0x40011bc	              0x5b	                                 pop rbx	      8790	normal.c	FUNCTION_119
0x40011bd	              0x5d	                                 pop rbp	      8790	normal.c	FUNCTION_119
0x40011be	            0x415c	                                 pop r12	      8790	normal.c	FUNCTION_119
0x40011c0	            0x415d	                                 pop r13	      8790	normal.c	FUNCTION_119
0x40011c2	            0x415e	                                 pop r14	      8790	normal.c	FUNCTION_119
0x40011c4	              0xc3	                                     ret	      8790	normal.c	FUNCTION_119
nv_dollar	CALL,5:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,1:IF,3	39
0x40008b6	              0x53	                                push rbx	      6292	normal.c	FUNCTION_76
0x40008b7	          0x4889fb	                            mov rbx, rdi	      6292	normal.c	FUNCTION_76
0x40008ba	          0x488b07	                    mov rax, qword [rdi]	      6293	normal.c	FUNCTION_76
0x40008bd	    0xc74008000000	                  mov dword [rax + 8], 0	      6293	normal.c	FUNCTION_76
0x40008c4	          0x488b07	                    mov rax, qword [rdi]	      6294	normal.c	FUNCTION_76
0x40008c7	    0xc74014010000	               mov dword [rax + 0x14], 1	      6294	normal.c	FUNCTION_76
0x40008ce	      0xe800000000	                          call 0x40008d3	      6299	normal.c	FUNCTION_76	IF_1	CALL_2
0x40008d3	            0x85c0	                           test eax, eax	      6299	normal.c	FUNCTION_76	IF_1	CALL_2
0x40008d5	            0x7411	                            je 0x40008e8	      6299	normal.c	FUNCTION_76	IF_1	CALL_2
0x40008d7	      0xe800000000	                          call 0x40008dc	      6299	normal.c	FUNCTION_76	IF_1	CALL_2
0x40008dc	            0x85c0	                           test eax, eax	      6299	normal.c	FUNCTION_76	IF_1	CALL_2
0x40008de	            0x7508	                           jne 0x40008e8	      6299	normal.c	FUNCTION_76	IF_1	CALL_2
0x40008e0	          0x488b03	                    mov rax, qword [rbx]	      6300	normal.c	FUNCTION_76	IF_1
0x40008e3	          0x833800	                      cmp dword [rax], 0	      6300	normal.c	FUNCTION_76	IF_1
0x40008e6	            0x750e	                           jne 0x40008f6	      6300	normal.c	FUNCTION_76	IF_1
0x40008e8	    0x488b05000000	            mov rax, qword [0x040008ef] 	      6302	normal.c	FUNCTION_76	IF_1
0x40008ef	    0xc74048ffffff	     mov dword [rax + 0x48], 0x7fffffff 	      6302	normal.c	FUNCTION_76	IF_1
0x40008f6	          0x488b03	                    mov rax, qword [rbx]	      6304	normal.c	FUNCTION_76	IF_2
0x40008f9	          0x833800	                      cmp dword [rax], 0	      6303	normal.c	FUNCTION_76	IF_2	CALL_3
0x40008fc	        0x400f94c6	                                sete sil	      6303	normal.c	FUNCTION_76	IF_2	CALL_3
0x4000900	        0x400fb6f6	                          movzx esi, sil	      6303	normal.c	FUNCTION_76	IF_2	CALL_3
0x4000904	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      6303	normal.c	FUNCTION_76	IF_2	CALL_3
0x4000908	        0x488d78ff	                      lea rdi, [rax - 1]	      6303	normal.c	FUNCTION_76	IF_2	CALL_3
0x400090c	      0xe800000000	                          call 0x4000911	      6303	normal.c	FUNCTION_76	IF_2	CALL_3
0x4000911	            0x85c0	                           test eax, eax	      6303	normal.c	FUNCTION_76	IF_2	CALL_3
0x4000913	            0x750a	                           jne 0x400091f	      6303	normal.c	FUNCTION_76	IF_2	CALL_3
0x4000915	          0x488b3b	                    mov rdi, qword [rbx]	      6305	normal.c	FUNCTION_76	CALL_4
0x4000918	      0xe81bf9ffff	                    call sym.clearopbeep	      6305	normal.c	FUNCTION_76	CALL_4
0x400091d	            0xeb1f	                           jmp 0x400093e	      6305	normal.c	FUNCTION_76	CALL_4
0x400091f	    0xf60500000000	               test byte [0x04000926], 4	      6307	normal.c	FUNCTION_76	ELSE_1	IF_3
0x4000926	            0x7416	                            je 0x400093e	      6307	normal.c	FUNCTION_76	ELSE_1	IF_3
0x4000928	    0x833d00000000	               cmp dword [0x0400092f], 0	      6307	normal.c	FUNCTION_76	ELSE_1	IF_3
0x400092f	            0x740d	                            je 0x400093e	      6307	normal.c	FUNCTION_76	ELSE_1	IF_3
0x4000931	          0x488b03	                    mov rax, qword [rbx]	      6307	normal.c	FUNCTION_76	ELSE_1	IF_3
0x4000934	          0x833800	                      cmp dword [rax], 0	      6307	normal.c	FUNCTION_76	ELSE_1	IF_3
0x4000937	            0x7505	                           jne 0x400093e	      6307	normal.c	FUNCTION_76	ELSE_1	IF_3
0x4000939	      0xe800000000	                          call 0x400093e	      6308	normal.c	FUNCTION_76	ELSE_1	IF_3
0x400093e	              0x5b	                                 pop rbx	      6310	normal.c	FUNCTION_76
0x400093f	              0xc3	                                     ret	      6310	normal.c	FUNCTION_76
normal_cmd	CALL,102:SWITCH,1:DO,0:FOR,0:functions,0:WHILE,3:ELSE,17:IF,80	1046
0x400bfe3	            0x4157	                                push r15	       541	normal.c	ELSE_1	FUNCTION_4
0x400bfe5	            0x4156	                                push r14	       541	normal.c	ELSE_1	FUNCTION_4
0x400bfe7	            0x4155	                                push r13	       541	normal.c	ELSE_1	FUNCTION_4
0x400bfe9	            0x4154	                                push r12	       541	normal.c	ELSE_1	FUNCTION_4
0x400bfeb	              0x55	                                push rbp	       541	normal.c	ELSE_1	FUNCTION_4
0x400bfec	              0x53	                                push rbx	       541	normal.c	ELSE_1	FUNCTION_4
0x400bfed	    0x4881ec880000	                           sub rsp, 0x88	       541	normal.c	ELSE_1	FUNCTION_4
0x400bff4	          0x4989fc	                            mov r12, rdi	       541	normal.c	ELSE_1	FUNCTION_4
0x400bff7	            0x89f5	                            mov ebp, esi	       541	normal.c	ELSE_1	FUNCTION_4
0x400bff9	    0x64488b042528	                mov rax, qword fs:[0x28]	       541	normal.c	ELSE_1	FUNCTION_4
0x400c002	      0x4889442478	             mov qword [rsp + 0x78], rax	       541	normal.c	ELSE_1	FUNCTION_4
0x400c007	            0x31c0	                            xor eax, eax	       541	normal.c	ELSE_1	FUNCTION_4
0x400c009	    0x488b05000000	            mov rax, qword [0x0400c010] 	       545	normal.c	ELSE_1	FUNCTION_4
0x400c010	          0x8b4048	            mov eax, dword [rax + 0x48] 	       545	normal.c	ELSE_1	FUNCTION_4
0x400c013	        0x89442418	             mov dword [rsp + 0x18], eax	       545	normal.c	ELSE_1	FUNCTION_4
0x400c017	    0xc74424280000	               mov dword [rsp + 0x28], 0	       554	normal.c	ELSE_1	FUNCTION_4
0x400c01f	      0x488d542430	                   lea rdx, [rsp + 0x30]	        90	string3.h	FUNCTION_144	CALL_6
0x400c024	      0xb909000000	                              mov ecx, 9	        90	string3.h	FUNCTION_144	CALL_6
0x400c029	      0xb800000000	                              mov eax, 0	        90	string3.h	FUNCTION_144	CALL_6
0x400c02e	          0x4889d7	                            mov rdi, rdx	        90	string3.h	FUNCTION_144	CALL_6
0x400c031	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_144	CALL_6
0x400c034	      0x4c89642430	             mov qword [rsp + 0x30], r12	       558	normal.c	ELSE_1	FUNCTION_4
0x400c039	    0x488b05000000	            mov rax, qword [0x0400c040] 	       563	normal.c	ELSE_1	FUNCTION_4
0x400c040	      0x4889442450	             mov qword [rsp + 0x50], rax	       563	normal.c	ELSE_1	FUNCTION_4
0x400c045	    0x8b1500000000	            mov edx, dword [0x0400c04b] 	       571	normal.c	ELSE_1	FUNCTION_4
0x400c04b	      0x41833c2400	                      cmp dword [r12], 0	       573	normal.c	ELSE_1	FUNCTION_4
0x400c050	           0xf95c0	                                setne al	       573	normal.c	ELSE_1	FUNCTION_4
0x400c053	           0xfb6c0	                           movzx eax, al	       573	normal.c	ELSE_1	FUNCTION_4
0x400c056	    0x890500000000	            mov dword [0x0400c05c], eax 	       573	normal.c	ELSE_1	FUNCTION_4
0x400c05c	            0x39c2	                            cmp edx, eax	       575	normal.c	ELSE_1	FUNCTION_4	IF_1
0x400c05e	            0x740f	                            je 0x400c06f	       575	normal.c	ELSE_1	FUNCTION_4	IF_1
0x400c060	      0xe800000000	                          call 0x400c065	       577	normal.c	ELSE_1	FUNCTION_4	IF_1	CALL_2
0x400c065	      0xbfffffffff	                     mov edi, 0xffffffff	       579	normal.c	ELSE_1	FUNCTION_4	IF_1	CALL_3
0x400c06a	      0xe800000000	                          call 0x400c06f	       579	normal.c	ELSE_1	FUNCTION_4	IF_1	CALL_3
0x400c06f	    0x833d00000000	               cmp dword [0x0400c076], 0	       586	normal.c	ELSE_1	FUNCTION_4	IF_2
0x400c076	            0x7519	                           jne 0x400c091	       586	normal.c	ELSE_1	FUNCTION_4	IF_2
0x400c078	    0x41837c240400	                  cmp dword [r12 + 4], 0	       586	normal.c	ELSE_1	FUNCTION_4	IF_2
0x400c07e	            0x7511	                           jne 0x400c091	       586	normal.c	ELSE_1	FUNCTION_4	IF_2
0x400c080	    0x48c744245000	               mov qword [rsp + 0x50], 0	       588	normal.c	ELSE_1	FUNCTION_4	IF_2
0x400c089	    0xc74424280100	               mov dword [rsp + 0x28], 1	       590	normal.c	ELSE_1	FUNCTION_4	IF_2
0x400c091	      0x498b442470	            mov rax, qword [r12 + 0x70] 	       597	normal.c	ELSE_1	FUNCTION_4	IF_3
0x400c096	          0x4885c0	                           test rax, rax	       597	normal.c	ELSE_1	FUNCTION_4	IF_3
0x400c099	            0x7f08	                            jg 0x400c0a3	       597	normal.c	ELSE_1	FUNCTION_4	IF_3
0x400c09b	    0x49837c247800	               cmp qword [r12 + 0x78], 0	       597	normal.c	ELSE_1	FUNCTION_4	IF_3
0x400c0a1	            0x7e21	                           jle 0x400c0c4	       597	normal.c	ELSE_1	FUNCTION_4	IF_3
0x400c0a3	      0x4889442450	             mov qword [rsp + 0x50], rax	       599	normal.c	ELSE_1	FUNCTION_4	IF_3
0x400c0a8	      0x498b442478	            mov rax, qword [r12 + 0x78] 	       600	normal.c	ELSE_1	FUNCTION_4	IF_3
0x400c0ad	      0x4889442458	             mov qword [rsp + 0x58], rax	       600	normal.c	ELSE_1	FUNCTION_4	IF_3
0x400c0b2	    0x49c744247000	               mov qword [r12 + 0x70], 0	       601	normal.c	ELSE_1	FUNCTION_4	IF_3
0x400c0bb	    0x49c744247800	               mov qword [r12 + 0x78], 0	       602	normal.c	ELSE_1	FUNCTION_4	IF_3
0x400c0c4	      0xe800000000	                          call 0x400c0c9	       605	normal.c	ELSE_1	FUNCTION_4	CALL_4
0x400c0c9	            0x89c3	                            mov ebx, eax	       605	normal.c	ELSE_1	FUNCTION_4	CALL_4
0x400c0cb	    0xc70500000000	          mov dword [0x0400c0d5], 0x101 	       607	normal.c	ELSE_1	FUNCTION_4
0x400c0d5	    0xc70500000000	               mov dword [0x0400c0df], 0	       609	normal.c	ELSE_1	FUNCTION_4
0x400c0df	            0x85ed	                           test ebp, ebp	       616	normal.c	ELSE_1	FUNCTION_4	IF_4	CALL_5
0x400c0e1	            0x7418	                            je 0x400c0fb	       616	normal.c	ELSE_1	FUNCTION_4	IF_4	CALL_5
0x400c0e3	      0xe800000000	                          call 0x400c0e8	       616	normal.c	ELSE_1	FUNCTION_4	IF_4	CALL_5
0x400c0e8	            0x85c0	                           test eax, eax	       616	normal.c	ELSE_1	FUNCTION_4	IF_4	CALL_5
0x400c0ea	            0x740f	                            je 0x400c0fb	       616	normal.c	ELSE_1	FUNCTION_4	IF_4	CALL_5
0x400c0ec	      0x488d742428	                   lea rsi, [rsp + 0x28]	       617	normal.c	ELSE_1	FUNCTION_4	CALL_6
0x400c0f1	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       617	normal.c	ELSE_1	FUNCTION_4	CALL_6
0x400c0f6	      0xe85664ffff	                  call sym.set_vcount_ca	       617	normal.c	ELSE_1	FUNCTION_4	CALL_6
0x400c0fb	      0xe800000000	                          call 0x400c100	       623	normal.c	ELSE_1	FUNCTION_4	CALL_7
0x400c100	          0x4189c5	                           mov r13d, eax	       623	normal.c	ELSE_1	FUNCTION_4	CALL_7
0x400c103	    0x488b05000000	            mov rax, qword [0x0400c10a] 	       624	normal.c	ELSE_1	FUNCTION_4	CALL_9
0x400c10a	          0x803800	                       cmp byte [rax], 0	       624	normal.c	ELSE_1	FUNCTION_4	CALL_9
0x400c10d	            0x744d	                            je 0x400c15c	       624	normal.c	ELSE_1	FUNCTION_4	CALL_9
0x400c10f	      0xe800000000	                          call 0x400c114	       624	normal.c	ELSE_1	FUNCTION_4	CALL_9
0x400c114	      0x3d00100000	                         cmp eax, 0x1000	       624	normal.c	ELSE_1	FUNCTION_4	CALL_9
0x400c119	            0x7441	                            je 0x400c15c	       624	normal.c	ELSE_1	FUNCTION_4	CALL_9
0x400c11b	    0x833d00000000	               cmp dword [0x0400c122], 0	       624	normal.c	ELSE_1	FUNCTION_4	CALL_9
0x400c122	            0x7509	                           jne 0x400c12d	       624	normal.c	ELSE_1	FUNCTION_4	CALL_9
0x400c124	    0x833d00000000	               cmp dword [0x0400c12b], 0	       624	normal.c	ELSE_1	FUNCTION_4	CALL_9
0x400c12b	            0x742f	                            je 0x400c15c	       624	normal.c	ELSE_1	FUNCTION_4	CALL_9
0x400c12d	    0x833d00000000	               cmp dword [0x0400c134], 0	       624	normal.c	ELSE_1	FUNCTION_4	CALL_9
0x400c134	            0x7526	                           jne 0x400c15c	       624	normal.c	ELSE_1	FUNCTION_4	CALL_9
0x400c136	          0x4585ed	                         test r13d, r13d	       624	normal.c	ELSE_1	FUNCTION_4	CALL_9
0x400c139	            0x7821	                            js 0x400c15c	       624	normal.c	ELSE_1	FUNCTION_4	CALL_9
0x400c13b	    0x4181fdff0000	                          cmp r13d, 0xff	       624	normal.c	ELSE_1	FUNCTION_4	CALL_9
0x400c142	            0x7f0d	                            jg 0x400c151	       624	normal.c	ELSE_1	FUNCTION_4	CALL_9
0x400c144	          0x4d63ed	                        movsxd r13, r13d	       624	normal.c	ELSE_1	FUNCTION_4	CALL_9
0x400c147	    0x450fb6ad0000	                  movzx r13d, byte [r13]	       624	normal.c	ELSE_1	FUNCTION_4	CALL_9
0x400c14f	            0xeb0b	                           jmp 0x400c15c	       624	normal.c	ELSE_1	FUNCTION_4	CALL_9
0x400c151	          0x4489ef	                           mov edi, r13d	       624	normal.c	ELSE_1	FUNCTION_4	CALL_9
0x400c154	      0xe800000000	                          call 0x400c159	       624	normal.c	ELSE_1	FUNCTION_4	CALL_9
0x400c159	          0x4189c5	                           mov r13d, eax	       624	normal.c	ELSE_1	FUNCTION_4	CALL_9
0x400c15c	    0x833d00000000	               cmp dword [0x0400c163], 0	       631	normal.c	ELSE_1	FUNCTION_4	IF_5
0x400c163	            0x750c	                           jne 0x400c171	       631	normal.c	ELSE_1	FUNCTION_4	IF_5
0x400c165	    0xc70500000000	               mov dword [0x0400c16f], 0	       632	normal.c	ELSE_1	FUNCTION_4	IF_5
0x400c16f	            0xeb2a	                           jmp 0x400c19b	       632	normal.c	ELSE_1	FUNCTION_4	IF_5
0x400c171	    0x833d00000000	               cmp dword [0x0400c178], 0	       633	normal.c	FUNCTION_4	IF_6
0x400c178	            0x7516	                           jne 0x400c190	       633	normal.c	FUNCTION_4	IF_6
0x400c17a	    0x833d00000000	               cmp dword [0x0400c181], 0	       634	normal.c	FUNCTION_4	IF_6	CALL_10
0x400c181	            0x7418	                            je 0x400c19b	       634	normal.c	FUNCTION_4	IF_6	CALL_10
0x400c183	            0x85db	                           test ebx, ebx	       634	normal.c	FUNCTION_4	IF_6	CALL_10
0x400c185	            0x7514	                           jne 0x400c19b	       634	normal.c	FUNCTION_4	IF_6	CALL_10
0x400c187	      0xe800000000	                          call 0x400c18c	       634	normal.c	FUNCTION_4	IF_6	CALL_10
0x400c18c	            0x85c0	                           test eax, eax	       634	normal.c	FUNCTION_4	IF_6	CALL_10
0x400c18e	            0x7e0b	                           jle 0x400c19b	       634	normal.c	FUNCTION_4	IF_6	CALL_10
0x400c190	      0xe800000000	                          call 0x400c195	       635	normal.c	FUNCTION_4	ELSE_1	CALL_11
0x400c195	    0x890500000000	            mov dword [0x0400c19b], eax 	       635	normal.c	FUNCTION_4	ELSE_1	CALL_11
0x400c19b	          0x4585ed	                         test r13d, r13d	       638	normal.c	FUNCTION_4	ELSE_1	IF_7
0x400c19e	      0xb801a7ffff	                     mov eax, 0xffffa701	       638	normal.c	FUNCTION_4	ELSE_1	IF_7
0x400c1a3	        0x440f44e8	                         cmove r13d, eax	       638	normal.c	FUNCTION_4	ELSE_1	IF_7
0x400c1a7	    0x833d00000000	               cmp dword [0x0400c1ae], 0	       643	normal.c	FUNCTION_4	ELSE_1	IF_8
0x400c1ae	            0x745a	                            je 0x400c20a	       643	normal.c	FUNCTION_4	ELSE_1	IF_8
0x400c1b0	    0x833d00000000	               cmp dword [0x0400c1b7], 0	       644	normal.c	FUNCTION_4	ELSE_1	IF_8
0x400c1b7	            0x7451	                            je 0x400c20a	       644	normal.c	FUNCTION_4	ELSE_1	IF_8
0x400c1b9	          0x4489ef	                           mov edi, r13d	       645	normal.c	FUNCTION_4	ELSE_1	IF_8	CALL_12
0x400c1bc	      0xe800000000	                          call 0x400c1c1	       645	normal.c	FUNCTION_4	ELSE_1	IF_8	CALL_12
0x400c1c1	            0x85c0	                           test eax, eax	       645	normal.c	FUNCTION_4	ELSE_1	IF_8	CALL_12
0x400c1c3	            0x751b	                           jne 0x400c1e0	       645	normal.c	FUNCTION_4	ELSE_1	IF_8	CALL_12
0x400c1c5	        0x4183fd0a	                           cmp r13d, 0xa	       645	normal.c	FUNCTION_4	ELSE_1	IF_8	CALL_12
0x400c1c9	           0xf94c2	                                 sete dl	       645	normal.c	FUNCTION_4	ELSE_1	IF_8	CALL_12
0x400c1cc	        0x4183fd0d	                           cmp r13d, 0xd	       645	normal.c	FUNCTION_4	ELSE_1	IF_8	CALL_12
0x400c1d0	           0xf94c0	                                 sete al	       645	normal.c	FUNCTION_4	ELSE_1	IF_8	CALL_12
0x400c1d3	             0x8c2	                               or dl, al	       645	normal.c	FUNCTION_4	ELSE_1	IF_8	CALL_12
0x400c1d5	            0x7509	                           jne 0x400c1e0	       645	normal.c	FUNCTION_4	ELSE_1	IF_8	CALL_12
0x400c1d7	    0x4181fdb5beff	                    cmp r13d, 0xffffbeb5	       645	normal.c	FUNCTION_4	ELSE_1	IF_8	CALL_12
0x400c1de	            0x752a	                           jne 0x400c20a	       645	normal.c	FUNCTION_4	ELSE_1	IF_8	CALL_12
0x400c1e0	          0x4489ef	                           mov edi, r13d	       652	normal.c	FUNCTION_4	ELSE_1	IF_8	CALL_13
0x400c1e3	      0xe800000000	                          call 0x400c1e8	       652	normal.c	FUNCTION_4	ELSE_1	IF_8	CALL_13
0x400c1e8	    0x833d00000000	               cmp dword [0x0400c1ef], 1	       656	normal.c	FUNCTION_4	ELSE_1	IF_8	ELSE_2
0x400c1ef	          0x4519ed	                          sbb r13d, r13d	       656	normal.c	FUNCTION_4	ELSE_1	IF_8	ELSE_2
0x400c1f2	        0x4183c564	                          add r13d, 0x64	       656	normal.c	FUNCTION_4	ELSE_1	IF_8	ELSE_2
0x400c1f6	    0xc70500000000	               mov dword [0x0400c200], 1	       657	normal.c	FUNCTION_4	ELSE_1	IF_8
0x400c200	    0xc70500000000	               mov dword [0x0400c20a], 0	       658	normal.c	FUNCTION_4	ELSE_1	IF_8
0x400c20a	          0x4489ef	                           mov edi, r13d	       662	normal.c	FUNCTION_4	ELSE_1	CALL_14
0x400c20d	      0xe800000000	                          call 0x400c212	       662	normal.c	FUNCTION_4	ELSE_1	CALL_14
0x400c212	            0x89c3	                            mov ebx, eax	       662	normal.c	FUNCTION_4	ELSE_1	CALL_14
0x400c214	    0x41be00000000	                             mov r14d, 0	       544	normal.c	ELSE_1	FUNCTION_4
0x400c21a	    0x49bf67666666	          movabs r15, 0x6666666666666667	       678	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_11
0x400c224	    0x833d00000000	               cmp dword [0x0400c22b], 0	       666	normal.c	FUNCTION_4	ELSE_1	IF_10
0x400c22b	     0xf842d010000	                            je 0x400c35e	       666	normal.c	FUNCTION_4	ELSE_1	IF_10
0x400c231	    0x833d00000000	               cmp dword [0x0400c238], 0	       666	normal.c	FUNCTION_4	ELSE_1	IF_10
0x400c238	     0xf8420010000	                            je 0x400c35e	       666	normal.c	FUNCTION_4	ELSE_1	IF_10
0x400c23e	      0xe90a020000	                           jmp 0x400c44d	       666	normal.c	FUNCTION_4	ELSE_1	IF_10
0x400c243	    0x4181fd95bbff	                    cmp r13d, 0xffffbb95	       676	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_11
0x400c24a	            0x7409	                            je 0x400c255	       676	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_11
0x400c24c	    0x4181fd03afff	                    cmp r13d, 0xffffaf03	       676	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_11
0x400c253	            0x7527	                           jne 0x400c27c	       676	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_11
0x400c255	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	       678	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_11
0x400c25a	          0x4889c8	                            mov rax, rcx	       678	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_11
0x400c25d	          0x49f7ef	                                imul r15	       678	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_11
0x400c260	        0x48c1fa02	                              sar rdx, 2	       678	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_11
0x400c264	        0x48c1f93f	                           sar rcx, 0x3f	       678	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_11
0x400c268	          0x4829ca	                            sub rdx, rcx	       678	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_11
0x400c26b	      0x4889542458	             mov qword [rsp + 0x58], rdx	       678	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_11
0x400c270	      0xbf04000000	                              mov edi, 4	       680	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_11	CALL_15
0x400c275	      0xe89a63ffff	               call sym.del_from_showcmd	       680	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_11	CALL_15
0x400c27a	            0xeb1a	                           jmp 0x400c296	       680	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_11	CALL_15
0x400c27c	      0x488b442458	            mov rax, qword [rsp + 0x58] 	       684	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	ELSE_3
0x400c281	        0x488d0480	                  lea rax, [rax + rax*4]	       684	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	ELSE_3
0x400c285	        0x4183ed30	                          sub r13d, 0x30	       684	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	ELSE_3
0x400c289	          0x4d63ed	                        movsxd r13, r13d	       684	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	ELSE_3
0x400c28c	      0x498d444500	                  lea rax, [r13 + rax*2]	       684	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	ELSE_3
0x400c291	      0x4889442458	             mov qword [rsp + 0x58], rax	       684	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	ELSE_3
0x400c296	    0x48837c245800	               cmp qword [rsp + 0x58], 0	       685	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_12
0x400c29c	            0x7909	                           jns 0x400c2a7	       685	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_12
0x400c29e	    0x48c7442458ff	     mov qword [rsp + 0x58], 0x3b9ac9ff 	       686	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_12
0x400c2a7	            0x85ed	                           test ebp, ebp	       691	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_13	CALL_16
0x400c2a9	            0x7418	                            je 0x400c2c3	       691	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_13	CALL_16
0x400c2ab	      0xe800000000	                          call 0x400c2b0	       691	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_13	CALL_16
0x400c2b0	            0x85c0	                           test eax, eax	       691	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_13	CALL_16
0x400c2b2	            0x740f	                            je 0x400c2c3	       691	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_13	CALL_16
0x400c2b4	      0x488d742428	                   lea rsi, [rsp + 0x28]	       692	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_17
0x400c2b9	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       692	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_17
0x400c2be	      0xe88e62ffff	                  call sym.set_vcount_ca	       692	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_17
0x400c2c3	          0x4585f6	                         test r14d, r14d	       694	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_14
0x400c2c6	     0xf842f0e0000	                            je 0x400d0fb	       694	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_14
0x400c2cc	    0x830500000000	               add dword [0x0400c2d3], 1	       696	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_14
0x400c2d3	    0x830500000000	               add dword [0x0400c2da], 1	       697	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_14
0x400c2da	    0x830500000000	               add dword [0x0400c2e1], 1	       699	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1
0x400c2e1	      0xe800000000	                          call 0x400c2e6	       700	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_18
0x400c2e6	          0x4189c5	                           mov r13d, eax	       700	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_18
0x400c2e9	    0x488b05000000	            mov rax, qword [0x0400c2f0] 	       701	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_19
0x400c2f0	          0x803800	                       cmp byte [rax], 0	       701	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_19
0x400c2f3	     0xf84ea0d0000	                            je 0x400d0e3	       701	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_19
0x400c2f9	    0x833d00000000	               cmp dword [0x0400c300], 0	       701	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_19
0x400c300	            0x7509	                           jne 0x400c30b	       701	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_19
0x400c302	    0x833d00000000	               cmp dword [0x0400c309], 0	       701	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_19
0x400c309	            0x742f	                            je 0x400c33a	       701	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_19
0x400c30b	    0x833d00000000	               cmp dword [0x0400c312], 0	       701	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_19
0x400c312	            0x7526	                           jne 0x400c33a	       701	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_19
0x400c314	          0x4585ed	                         test r13d, r13d	       701	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_19
0x400c317	            0x7821	                            js 0x400c33a	       701	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_19
0x400c319	    0x4181fdff0000	                          cmp r13d, 0xff	       701	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_19
0x400c320	            0x7f0d	                            jg 0x400c32f	       701	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_19
0x400c322	          0x4d63ed	                        movsxd r13, r13d	       701	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_19
0x400c325	    0x450fb6ad0000	                  movzx r13d, byte [r13]	       701	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_19
0x400c32d	            0xeb0b	                           jmp 0x400c33a	       701	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_19
0x400c32f	          0x4489ef	                           mov edi, r13d	       701	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_19
0x400c332	      0xe800000000	                          call 0x400c337	       701	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_19
0x400c337	          0x4189c5	                           mov r13d, eax	       701	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_19
0x400c33a	    0x832d00000000	               sub dword [0x0400c341], 1	       702	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1
0x400c341	          0x4585f6	                         test r14d, r14d	       703	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_15
0x400c344	            0x740e	                            je 0x400c354	       703	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_15
0x400c346	    0x832d00000000	               sub dword [0x0400c34d], 1	       705	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_15
0x400c34d	    0x832d00000000	               sub dword [0x0400c354], 1	       706	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_15
0x400c354	          0x4489ef	                           mov edi, r13d	       709	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_20
0x400c357	      0xe800000000	                          call 0x400c35c	       709	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_20
0x400c35c	             0x9c3	                             or ebx, eax	       709	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_20
0x400c35e	        0x418d45cf	                   lea eax, [r13 - 0x31]	       673	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1
0x400c362	          0x83f808	                              cmp eax, 8	       673	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1
0x400c365	     0xf86d8feffff	                           jbe 0x400c243	       673	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1
0x400c36b	      0x488b442458	            mov rax, qword [rsp + 0x58] 	       674	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1
0x400c370	          0x4885c0	                           test rax, rax	       674	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1
0x400c373	            0x7426	                            je 0x400c39b	       674	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1
0x400c375	    0x4181fd95bbff	                    cmp r13d, 0xffffbb95	       674	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1
0x400c37c	           0xf94c1	                                 sete cl	       674	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1
0x400c37f	    0x4181fd03afff	                    cmp r13d, 0xffffaf03	       674	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1
0x400c386	           0xf94c2	                                 sete dl	       674	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1
0x400c389	             0x8d1	                               or cl, dl	       674	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1
0x400c38b	     0xf85b2feffff	                           jne 0x400c243	       674	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1
0x400c391	        0x4183fd30	                          cmp r13d, 0x30	       674	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1
0x400c395	     0xf84a8feffff	                            je 0x400c243	       674	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1
0x400c39b	        0x4183fd17	                          cmp r13d, 0x17	       716	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16
0x400c39f	     0xf85a8000000	                           jne 0x400c44d	       716	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16
0x400c3a5	          0x4585f6	                         test r14d, r14d	       716	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16
0x400c3a8	     0xf859f000000	                           jne 0x400c44d	       716	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16
0x400c3ae	      0x41833c2400	                      cmp dword [r12], 0	       716	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16
0x400c3b3	     0xf8594000000	                           jne 0x400c44d	       716	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16
0x400c3b9	      0x4889442450	             mov qword [rsp + 0x50], rax	       719	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16
0x400c3be	    0x48c744245800	               mov qword [rsp + 0x58], 0	       720	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16
0x400c3c7	    0x830500000000	               add dword [0x0400c3ce], 1	       721	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16
0x400c3ce	    0x830500000000	               add dword [0x0400c3d5], 1	       722	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16
0x400c3d5	      0xe800000000	                          call 0x400c3da	       723	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16	CALL_21
0x400c3da	          0x4189c5	                           mov r13d, eax	       723	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16	CALL_21
0x400c3dd	    0x488b05000000	            mov rax, qword [0x0400c3e4] 	       724	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16	CALL_22
0x400c3e4	          0x803800	                       cmp byte [rax], 0	       724	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16	CALL_22
0x400c3e7	            0x7441	                            je 0x400c42a	       724	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16	CALL_22
0x400c3e9	    0x833d00000000	               cmp dword [0x0400c3f0], 0	       724	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16	CALL_22
0x400c3f0	            0x7509	                           jne 0x400c3fb	       724	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16	CALL_22
0x400c3f2	    0x833d00000000	               cmp dword [0x0400c3f9], 0	       724	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16	CALL_22
0x400c3f9	            0x742f	                            je 0x400c42a	       724	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16	CALL_22
0x400c3fb	    0x833d00000000	               cmp dword [0x0400c402], 0	       724	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16	CALL_22
0x400c402	            0x7526	                           jne 0x400c42a	       724	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16	CALL_22
0x400c404	          0x4585ed	                         test r13d, r13d	       724	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16	CALL_22
0x400c407	            0x7821	                            js 0x400c42a	       724	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16	CALL_22
0x400c409	    0x4181fdff0000	                          cmp r13d, 0xff	       724	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16	CALL_22
0x400c410	            0x7f0d	                            jg 0x400c41f	       724	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16	CALL_22
0x400c412	          0x4d63ed	                        movsxd r13, r13d	       724	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16	CALL_22
0x400c415	    0x450fb6ad0000	                  movzx r13d, byte [r13]	       724	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16	CALL_22
0x400c41d	            0xeb0b	                           jmp 0x400c42a	       724	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16	CALL_22
0x400c41f	          0x4489ef	                           mov edi, r13d	       724	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16	CALL_22
0x400c422	      0xe800000000	                          call 0x400c427	       724	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16	CALL_22
0x400c427	          0x4189c5	                           mov r13d, eax	       724	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16	CALL_22
0x400c42a	    0x832d00000000	               sub dword [0x0400c431], 1	       725	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16
0x400c431	    0x832d00000000	               sub dword [0x0400c438], 1	       726	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16
0x400c438	          0x4489ef	                           mov edi, r13d	       728	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16	CALL_23
0x400c43b	      0xe800000000	                          call 0x400c440	       728	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16	CALL_23
0x400c440	             0x9c3	                             or ebx, eax	       728	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16	CALL_23
0x400c442	    0x41be01000000	                             mov r14d, 1	       718	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16
0x400c448	      0xe9d7fdffff	                           jmp 0x400c224	       730	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16
0x400c44d	    0x4181fd039fff	                    cmp r13d, 0xffff9f03	       734	normal.c	FUNCTION_4	ELSE_1	IF_17
0x400c454	            0x7516	                           jne 0x400c46c	       734	normal.c	FUNCTION_4	ELSE_1	IF_17
0x400c456	      0x488b442450	            mov rax, qword [rsp + 0x50] 	       738	normal.c	FUNCTION_4	ELSE_1	IF_17
0x400c45b	      0x4989442470	             mov qword [r12 + 0x70], rax	       738	normal.c	FUNCTION_4	ELSE_1	IF_17
0x400c460	      0x488b442458	            mov rax, qword [rsp + 0x58] 	       739	normal.c	FUNCTION_4	ELSE_1	IF_17
0x400c465	      0x4989442478	             mov qword [r12 + 0x78], rax	       739	normal.c	FUNCTION_4	ELSE_1	IF_17
0x400c46a	            0xeb26	                           jmp 0x400c492	       739	normal.c	FUNCTION_4	ELSE_1	IF_17
0x400c46c	      0x488b442450	            mov rax, qword [rsp + 0x50] 	       741	normal.c	FUNCTION_4	ELSE_1	ELSE_4	IF_18
0x400c471	          0x4885c0	                           test rax, rax	       741	normal.c	FUNCTION_4	ELSE_1	ELSE_4	IF_18
0x400c474	            0x741c	                            je 0x400c492	       741	normal.c	FUNCTION_4	ELSE_1	ELSE_4	IF_18
0x400c476	      0x488b542458	            mov rdx, qword [rsp + 0x58] 	       752	normal.c	FUNCTION_4	ELSE_1	ELSE_4	IF_18	IF_19
0x400c47b	          0x4885d2	                           test rdx, rdx	       752	normal.c	FUNCTION_4	ELSE_1	ELSE_4	IF_18	IF_19
0x400c47e	            0x740b	                            je 0x400c48b	       752	normal.c	FUNCTION_4	ELSE_1	ELSE_4	IF_18	IF_19
0x400c480	        0x480fafc2	                           imul rax, rdx	       753	normal.c	FUNCTION_4	ELSE_1	ELSE_4	IF_18	IF_19
0x400c484	      0x4889442458	             mov qword [rsp + 0x58], rax	       753	normal.c	FUNCTION_4	ELSE_1	ELSE_4	IF_18	IF_19
0x400c489	            0xeb07	                           jmp 0x400c492	       753	normal.c	FUNCTION_4	ELSE_1	ELSE_4	IF_18	IF_19
0x400c48b	      0x4889442458	             mov qword [rsp + 0x58], rax	       755	normal.c	FUNCTION_4	ELSE_1	ELSE_4	IF_18	ELSE_5
0x400c490	            0xeb16	                           jmp 0x400c4a8	       755	normal.c	FUNCTION_4	ELSE_1	ELSE_4	IF_18	ELSE_5
0x400c492	      0x488b442458	            mov rax, qword [rsp + 0x58] 	       764	normal.c	FUNCTION_4	ELSE_1
0x400c497	      0x4889442450	             mov qword [rsp + 0x50], rax	       764	normal.c	FUNCTION_4	ELSE_1
0x400c49c	          0x4885c0	                           test rax, rax	       765	normal.c	FUNCTION_4	ELSE_1
0x400c49f	      0xba01000000	                              mov edx, 1	       765	normal.c	FUNCTION_4	ELSE_1
0x400c4a4	        0x480f44c2	                          cmove rax, rdx	       765	normal.c	FUNCTION_4	ELSE_1
0x400c4a8	      0x4889442460	             mov qword [rsp + 0x60], rax	       765	normal.c	FUNCTION_4	ELSE_1
0x400c4ad	            0x85ed	                           test ebp, ebp	       772	normal.c	FUNCTION_4	ELSE_1	IF_20	CALL_24
0x400c4af	            0x741c	                            je 0x400c4cd	       772	normal.c	FUNCTION_4	ELSE_1	IF_20	CALL_24
0x400c4b1	      0xe800000000	                          call 0x400c4b6	       772	normal.c	FUNCTION_4	ELSE_1	IF_20	CALL_24
0x400c4b6	            0x85c0	                           test eax, eax	       772	normal.c	FUNCTION_4	ELSE_1	IF_20	CALL_24
0x400c4b8	            0x7413	                            je 0x400c4cd	       772	normal.c	FUNCTION_4	ELSE_1	IF_20	CALL_24
0x400c4ba	        0x8b542428	            mov edx, dword [rsp + 0x28] 	       773	normal.c	FUNCTION_4	ELSE_1	CALL_25
0x400c4be	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	       773	normal.c	FUNCTION_4	ELSE_1	CALL_25
0x400c4c3	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	       773	normal.c	FUNCTION_4	ELSE_1	CALL_25
0x400c4c8	      0xe800000000	                          call 0x400c4cd	       773	normal.c	FUNCTION_4	ELSE_1	CALL_25
0x400c4cd	          0x4585f6	                         test r14d, r14d	       780	normal.c	FUNCTION_4	ELSE_1	IF_21
0x400c4d0	            0x740f	                            je 0x400c4e1	       780	normal.c	FUNCTION_4	ELSE_1	IF_21
0x400c4d2	      0x44896c2440	            mov dword [rsp + 0x40], r13d	       782	normal.c	FUNCTION_4	ELSE_1	IF_21
0x400c4d7	    0xc744243c1700	           mov dword [rsp + 0x3c], 0x17 	       783	normal.c	FUNCTION_4	ELSE_1	IF_21
0x400c4df	            0xeb05	                           jmp 0x400c4e6	       783	normal.c	FUNCTION_4	ELSE_1	IF_21
0x400c4e1	      0x44896c243c	            mov dword [rsp + 0x3c], r13d	       786	normal.c	FUNCTION_4	ELSE_1	ELSE_6
0x400c4e6	        0x8b7c243c	            mov edi, dword [rsp + 0x3c] 	       787	normal.c	FUNCTION_4	ELSE_1	CALL_26
0x400c4ea	      0xe8843bffff	                   call sym.find_command	       787	normal.c	FUNCTION_4	ELSE_1	CALL_26
0x400c4ef	          0x4189c6	                           mov r14d, eax	       787	normal.c	FUNCTION_4	ELSE_1	CALL_26
0x400c4f2	            0x85c0	                           test eax, eax	       788	normal.c	FUNCTION_4	ELSE_1	IF_22
0x400c4f4	            0x790d	                           jns 0x400c503	       788	normal.c	FUNCTION_4	ELSE_1	IF_22
0x400c4f6	          0x4c89e7	                            mov rdi, r12	       791	normal.c	FUNCTION_4	ELSE_1	IF_22	CALL_27
0x400c4f9	      0xe83a3dffff	                    call sym.clearopbeep	       791	normal.c	FUNCTION_4	ELSE_1	IF_22	CALL_27
0x400c4fe	      0xe9250a0000	                           jmp 0x400cf28	       792	normal.c	FUNCTION_4	ELSE_1	IF_22
0x400c503	      0xe800000000	                          call 0x400c508	       795	normal.c	FUNCTION_4	ELSE_1	IF_23	CALL_28
0x400c508	            0x85c0	                           test eax, eax	       795	normal.c	FUNCTION_4	ELSE_1	IF_23	CALL_28
0x400c50a	            0x742a	                            je 0x400c536	       795	normal.c	FUNCTION_4	ELSE_1	IF_23	CALL_28
0x400c50c	          0x4963c6	                        movsxd rax, r14d	       795	normal.c	FUNCTION_4	ELSE_1	IF_23	CALL_28
0x400c50f	        0x488d0440	                  lea rax, [rax + rax*2]	       795	normal.c	FUNCTION_4	ELSE_1	IF_23	CALL_28
0x400c513	    0x440fb72cc500	                movzx r13d, word [rax*8]	       795	normal.c	FUNCTION_4	ELSE_1	IF_23	CALL_28
0x400c51c	    0x6641f7c50002	                        test r13w, 0x200	       795	normal.c	FUNCTION_4	ELSE_1	IF_23	CALL_28
0x400c522	            0x7437	                            je 0x400c55b	       795	normal.c	FUNCTION_4	ELSE_1	IF_23	CALL_28
0x400c524	          0x4c89e7	                            mov rdi, r12	       798	normal.c	FUNCTION_4	ELSE_1	IF_23	CALL_29
0x400c527	      0xe80c3dffff	                    call sym.clearopbeep	       798	normal.c	FUNCTION_4	ELSE_1	IF_23	CALL_29
0x400c52c	      0xe800000000	                          call 0x400c531	       799	normal.c	FUNCTION_4	ELSE_1	IF_23	CALL_30
0x400c531	      0xe9f2090000	                           jmp 0x400cf28	       800	normal.c	FUNCTION_4	ELSE_1	IF_23
0x400c536	          0x4963c6	                        movsxd rax, r14d	       802	normal.c	FUNCTION_4	ELSE_1	IF_24	CALL_31
0x400c539	        0x488d0440	                  lea rax, [rax + rax*2]	       802	normal.c	FUNCTION_4	ELSE_1	IF_24	CALL_31
0x400c53d	    0x440fb72cc500	                movzx r13d, word [rax*8]	       802	normal.c	FUNCTION_4	ELSE_1	IF_24	CALL_31
0x400c546	    0x6641f7c50002	                        test r13w, 0x200	       802	normal.c	FUNCTION_4	ELSE_1	IF_24	CALL_31
0x400c54c	            0x740d	                            je 0x400c55b	       802	normal.c	FUNCTION_4	ELSE_1	IF_24	CALL_31
0x400c54e	      0xe800000000	                          call 0x400c553	       802	normal.c	FUNCTION_4	ELSE_1	IF_24	CALL_31
0x400c553	            0x85c0	                           test eax, eax	       802	normal.c	FUNCTION_4	ELSE_1	IF_24	CALL_31
0x400c555	     0xf85cd090000	                           jne 0x400cf28	       802	normal.c	FUNCTION_4	ELSE_1	IF_24	CALL_31
0x400c55b	    0x833d00000000	               cmp dword [0x0400c562], 0	       808	normal.c	FUNCTION_4	ELSE_1	IF_25
0x400c562	            0x7476	                            je 0x400c5da	       808	normal.c	FUNCTION_4	ELSE_1	IF_25
0x400c564	    0x833d00000000	               cmp dword [0x0400c56b], 0	       811	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_26
0x400c56b	            0x741e	                            je 0x400c58b	       811	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_26
0x400c56d	        0x41f6c540	                         test r13b, 0x40	       812	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_26
0x400c571	            0x7418	                            je 0x400c58b	       812	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_26
0x400c573	    0xf60500000000	               test byte [0x0400c57a], 2	       813	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_26
0x400c57a	            0x750f	                           jne 0x400c58b	       813	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_26
0x400c57c	      0xe800000000	                          call 0x400c581	       815	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_26	CALL_32
0x400c581	      0xbf14000000	                           mov edi, 0x14	       816	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_26	CALL_33
0x400c586	      0xe800000000	                          call 0x400c58b	       816	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_26	CALL_33
0x400c58b	    0x833d00000000	               cmp dword [0x0400c592], 0	       820	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27
0x400c592	            0x7446	                            je 0x400c5da	       820	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27
0x400c594	        0x41f6c510	                         test r13b, 0x10	       822	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	IF_28
0x400c598	            0x7427	                            je 0x400c5c1	       822	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	IF_28
0x400c59a	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       824	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	IF_28	CALL_34
0x400c59f	      0xe8be60ffff	                call sym.unshift_special	       824	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	IF_28	CALL_34
0x400c5a4	        0x8b7c243c	            mov edi, dword [rsp + 0x3c] 	       825	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	IF_28	CALL_35
0x400c5a8	      0xe8c63affff	                   call sym.find_command	       825	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	IF_28	CALL_35
0x400c5ad	          0x4189c6	                           mov r14d, eax	       825	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	IF_28	CALL_35
0x400c5b0	            0x85c0	                           test eax, eax	       826	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	IF_28	IF_29
0x400c5b2	            0x7926	                           jns 0x400c5da	       826	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	IF_28	IF_29
0x400c5b4	          0x4c89e7	                            mov rdi, r12	       829	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	IF_28	IF_29	CALL_36
0x400c5b7	      0xe87c3cffff	                    call sym.clearopbeep	       829	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	IF_28	IF_29	CALL_36
0x400c5bc	      0xe967090000	                           jmp 0x400cf28	       830	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	IF_28	IF_29
0x400c5c1	        0x41f6c520	                         test r13b, 0x20	       833	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	ELSE_7	IF_30
0x400c5c5	            0x7413	                            je 0x400c5da	       833	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	ELSE_7	IF_30
0x400c5c7	    0x8b0500000000	            mov eax, dword [0x0400c5cd] 	       834	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	ELSE_7	IF_30
0x400c5cd	            0xa802	                              test al, 2	       834	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	ELSE_7	IF_30
0x400c5cf	            0x7409	                            je 0x400c5da	       834	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	ELSE_7	IF_30
0x400c5d1	          0x83e0fd	                     and eax, 0xfffffffd	       836	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	ELSE_7	IF_30
0x400c5d4	    0x890500000000	            mov dword [0x0400c5da], eax 	       836	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	ELSE_7	IF_30
0x400c5da	    0x488b05000000	            mov rax, qword [0x0400c5e1] 	       842	normal.c	FUNCTION_4	ELSE_1	IF_31
0x400c5e1	    0x83b854020000	              cmp dword [rax + 0x254], 0	       842	normal.c	FUNCTION_4	ELSE_1	IF_31
0x400c5e8	     0xf8402010000	                            je 0x400c6f0	       842	normal.c	FUNCTION_4	ELSE_1	IF_31
0x400c5ee	    0x833d00000000	               cmp dword [0x0400c5f5], 0	       842	normal.c	FUNCTION_4	ELSE_1	IF_31
0x400c5f5	     0xf84f5000000	                            je 0x400c6f0	       842	normal.c	FUNCTION_4	ELSE_1	IF_31
0x400c5fb	    0x833d00000000	               cmp dword [0x0400c602], 0	       842	normal.c	FUNCTION_4	ELSE_1	IF_31
0x400c602	     0xf85e8000000	                           jne 0x400c6f0	       842	normal.c	FUNCTION_4	ELSE_1	IF_31
0x400c608	          0x4963c6	                        movsxd rax, r14d	       843	normal.c	FUNCTION_4	ELSE_1	IF_31
0x400c60b	        0x488d0440	                  lea rax, [rax + rax*2]	       843	normal.c	FUNCTION_4	ELSE_1	IF_31
0x400c60f	    0xf604c5000000	                 test byte [rax*8], 0x80	       843	normal.c	FUNCTION_4	ELSE_1	IF_31
0x400c617	     0xf84d3000000	                            je 0x400c6f0	       843	normal.c	FUNCTION_4	ELSE_1	IF_31
0x400c61d	        0x8b44243c	            mov eax, dword [rsp + 0x3c] 	       848	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0x400c621	      0x3d03aaffff	                     cmp eax, 0xffffaa03	       848	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0x400c626	     0xf849c000000	                            je 0x400c6c8	       848	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0x400c62c	      0x3d03aaffff	                     cmp eax, 0xffffaa03	       848	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0x400c631	            0x7f2d	                            jg 0x400c660	       848	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0x400c633	      0x3d9593ffff	                     cmp eax, 0xffff9395	       848	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0x400c638	            0x747a	                            je 0x400c6b4	       848	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0x400c63a	      0x3d9593ffff	                     cmp eax, 0xffff9395	       848	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0x400c63f	            0x7f0c	                            jg 0x400c64d	       848	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0x400c641	      0x3d958dffff	                     cmp eax, 0xffff8d95	       848	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0x400c646	            0x7444	                            je 0x400c68c	       848	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0x400c648	      0xe997000000	                           jmp 0x400c6e4	       848	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0x400c64d	      0x3ddb96ffff	                     cmp eax, 0xffff96db	       848	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0x400c652	            0x7442	                            je 0x400c696	       848	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0x400c654	      0x3d03a9ffff	                     cmp eax, 0xffffa903	       848	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0x400c659	            0x7445	                            je 0x400c6a0	       848	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0x400c65b	      0xe984000000	                           jmp 0x400c6e4	       848	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0x400c660	          0x83f83e	                           cmp eax, 0x3e	       848	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0x400c663	            0x746d	                            je 0x400c6d2	       848	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0x400c665	          0x83f83e	                           cmp eax, 0x3e	       848	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0x400c668	            0x7f0e	                            jg 0x400c678	       848	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0x400c66a	      0x3dddcbffff	                     cmp eax, 0xffffcbdd	       848	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0x400c66f	            0x744d	                            je 0x400c6be	       848	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0x400c671	          0x83f83c	                           cmp eax, 0x3c	       848	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0x400c674	            0x7466	                            je 0x400c6dc	       848	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0x400c676	            0xeb6c	                           jmp 0x400c6e4	       848	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0x400c678	          0x83f868	                           cmp eax, 0x68	       848	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0x400c67b	            0x742d	                            je 0x400c6aa	       848	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0x400c67d	          0x83f86c	                           cmp eax, 0x6c	       848	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0x400c680	            0x7562	                           jne 0x400c6e4	       848	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0x400c682	    0xc744243c6800	           mov dword [rsp + 0x3c], 0x68 	       850	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0x400c68a	            0xeb58	                           jmp 0x400c6e4	       850	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0x400c68c	    0xc744243c9593	     mov dword [rsp + 0x3c], 0xffff9395 	       851	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0x400c694	            0xeb4e	                           jmp 0x400c6e4	       851	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0x400c696	    0xc744243cddcb	     mov dword [rsp + 0x3c], 0xffffcbdd 	       852	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0x400c69e	            0xeb44	                           jmp 0x400c6e4	       852	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0x400c6a0	    0xc744243c03aa	     mov dword [rsp + 0x3c], 0xffffaa03 	       853	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0x400c6a8	            0xeb3a	                           jmp 0x400c6e4	       853	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0x400c6aa	    0xc744243c6c00	           mov dword [rsp + 0x3c], 0x6c 	       854	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0x400c6b2	            0xeb30	                           jmp 0x400c6e4	       854	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0x400c6b4	    0xc744243c958d	     mov dword [rsp + 0x3c], 0xffff8d95 	       855	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0x400c6bc	            0xeb26	                           jmp 0x400c6e4	       855	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0x400c6be	    0xc744243cdb96	     mov dword [rsp + 0x3c], 0xffff96db 	       856	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0x400c6c6	            0xeb1c	                           jmp 0x400c6e4	       856	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0x400c6c8	    0xc744243c03a9	     mov dword [rsp + 0x3c], 0xffffa903 	       857	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0x400c6d0	            0xeb12	                           jmp 0x400c6e4	       857	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0x400c6d2	    0xc744243c3c00	           mov dword [rsp + 0x3c], 0x3c 	       858	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0x400c6da	            0xeb08	                           jmp 0x400c6e4	       858	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0x400c6dc	    0xc744243c3e00	           mov dword [rsp + 0x3c], 0x3e 	       859	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0x400c6e4	        0x8b7c243c	            mov edi, dword [rsp + 0x3c] 	       861	normal.c	FUNCTION_4	ELSE_1	IF_31	CALL_37
0x400c6e8	      0xe88639ffff	                   call sym.find_command	       861	normal.c	FUNCTION_4	ELSE_1	IF_31	CALL_37
0x400c6ed	          0x4189c6	                           mov r14d, eax	       861	normal.c	FUNCTION_4	ELSE_1	IF_31	CALL_37
0x400c6f0	          0x4963c6	                        movsxd rax, r14d	       868	normal.c	FUNCTION_4	ELSE_1	IF_32
0x400c6f3	        0x488d0440	                  lea rax, [rax + rax*2]	       868	normal.c	FUNCTION_4	ELSE_1	IF_32
0x400c6f7	     0xfb704c50000	                 movzx eax, word [rax*8]	       868	normal.c	FUNCTION_4	ELSE_1	IF_32
0x400c6ff	      0x6689442408	                  mov word [rsp + 8], ax	       868	normal.c	FUNCTION_4	ELSE_1	IF_32
0x400c704	            0xa801	                              test al, 1	       868	normal.c	FUNCTION_4	ELSE_1	IF_32
0x400c706	     0xf84ad040000	                            je 0x400cbb9	       868	normal.c	FUNCTION_4	ELSE_1	IF_32
0x400c70c	          0x83e003	                              and eax, 3	       869	normal.c	FUNCTION_4	ELSE_1	IF_32
0x400c70f	        0x6683f803	                               cmp ax, 3	       869	normal.c	FUNCTION_4	ELSE_1	IF_32
0x400c713	            0x7507	                           jne 0x400c71c	       869	normal.c	FUNCTION_4	ELSE_1	IF_32
0x400c715	      0x41833c2400	                      cmp dword [r12], 0	       870	normal.c	FUNCTION_4	ELSE_1	IF_32
0x400c71a	            0x7461	                            je 0x400c77d	       870	normal.c	FUNCTION_4	ELSE_1	IF_32
0x400c71c	       0xfb7442408	               movzx eax, word [rsp + 8]	       871	normal.c	FUNCTION_4	ELSE_1	IF_32
0x400c721	          0x83e005	                              and eax, 5	       871	normal.c	FUNCTION_4	ELSE_1	IF_32
0x400c724	        0x6683f805	                               cmp ax, 5	       871	normal.c	FUNCTION_4	ELSE_1	IF_32
0x400c728	            0x7453	                            je 0x400c77d	       871	normal.c	FUNCTION_4	ELSE_1	IF_32
0x400c72a	        0x8b44243c	            mov eax, dword [rsp + 0x3c] 	       872	normal.c	FUNCTION_4	ELSE_1	IF_32
0x400c72e	          0x83f871	                           cmp eax, 0x71	       872	normal.c	FUNCTION_4	ELSE_1	IF_32
0x400c731	            0x752a	                           jne 0x400c75d	       872	normal.c	FUNCTION_4	ELSE_1	IF_32
0x400c733	      0x41833c2400	                      cmp dword [r12], 0	       873	normal.c	FUNCTION_4	ELSE_1	IF_32
0x400c738	     0xf85c40a0000	                           jne 0x400d202	       873	normal.c	FUNCTION_4	ELSE_1	IF_32
0x400c73e	    0x833d00000000	               cmp dword [0x0400c745], 0	       874	normal.c	FUNCTION_4	ELSE_1	IF_32
0x400c745	     0xf85b70a0000	                           jne 0x400d202	       874	normal.c	FUNCTION_4	ELSE_1	IF_32
0x400c74b	    0x833d00000000	               cmp dword [0x0400c752], 0	       875	normal.c	FUNCTION_4	ELSE_1	IF_32
0x400c752	     0xf84c3090000	                            je 0x400d11b	       875	normal.c	FUNCTION_4	ELSE_1	IF_32
0x400c758	      0xe9a50a0000	                           jmp 0x400d202	       875	normal.c	FUNCTION_4	ELSE_1	IF_32
0x400c75d	          0x83e0f7	                     and eax, 0xfffffff7	       876	normal.c	FUNCTION_4	ELSE_1	IF_32
0x400c760	          0x83f861	                           cmp eax, 0x61	       876	normal.c	FUNCTION_4	ELSE_1	IF_32
0x400c763	     0xf8550040000	                           jne 0x400cbb9	       876	normal.c	FUNCTION_4	ELSE_1	IF_32
0x400c769	      0x41833c2400	                      cmp dword [r12], 0	       877	normal.c	FUNCTION_4	ELSE_1	IF_32
0x400c76e	            0x750d	                           jne 0x400c77d	       877	normal.c	FUNCTION_4	ELSE_1	IF_32
0x400c770	    0x833d00000000	               cmp dword [0x0400c777], 0	       877	normal.c	FUNCTION_4	ELSE_1	IF_32
0x400c777	     0xf843c040000	                            je 0x400cbb9	       877	normal.c	FUNCTION_4	ELSE_1	IF_32
0x400c77d	    0x830500000000	               add dword [0x0400c784], 1	       888	normal.c	FUNCTION_4	ELSE_1	IF_32
0x400c784	    0x830500000000	               add dword [0x0400c78b], 1	       889	normal.c	FUNCTION_4	ELSE_1	IF_32
0x400c78b	    0xc70500000000	               mov dword [0x0400c795], 1	       892	normal.c	FUNCTION_4	ELSE_1	IF_32
0x400c795	        0x8b44243c	            mov eax, dword [rsp + 0x3c] 	       893	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33
0x400c799	          0x83f867	                           cmp eax, 0x67	       893	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33
0x400c79c	     0xf859d000000	                           jne 0x400c83f	       893	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33
0x400c7a2	      0xe800000000	                          call 0x400c7a7	       899	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_38
0x400c7a7	        0x89442440	             mov dword [rsp + 0x40], eax	       899	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_38
0x400c7ab	    0x488b15000000	            mov rdx, qword [0x0400c7b2] 	       900	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_39
0x400c7b2	          0x803a00	                       cmp byte [rdx], 0	       900	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_39
0x400c7b5	            0x7440	                            je 0x400c7f7	       900	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_39
0x400c7b7	    0x833d00000000	               cmp dword [0x0400c7be], 0	       900	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_39
0x400c7be	            0x7509	                           jne 0x400c7c9	       900	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_39
0x400c7c0	    0x833d00000000	               cmp dword [0x0400c7c7], 0	       900	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_39
0x400c7c7	            0x742e	                            je 0x400c7f7	       900	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_39
0x400c7c9	    0x833d00000000	               cmp dword [0x0400c7d0], 0	       900	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_39
0x400c7d0	            0x7525	                           jne 0x400c7f7	       900	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_39
0x400c7d2	            0x85c0	                           test eax, eax	       900	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_39
0x400c7d4	            0x7821	                            js 0x400c7f7	       900	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_39
0x400c7d6	      0x3dff000000	                           cmp eax, 0xff	       900	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_39
0x400c7db	            0x7f0f	                            jg 0x400c7ec	       900	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_39
0x400c7dd	            0x4898	                                    cdqe	       900	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_39
0x400c7df	     0xfb680000000	                   movzx eax, byte [rax]	       900	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_39
0x400c7e6	        0x89442440	             mov dword [rsp + 0x40], eax	       900	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_39
0x400c7ea	            0xeb0b	                           jmp 0x400c7f7	       900	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_39
0x400c7ec	            0x89c7	                            mov edi, eax	       900	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_39
0x400c7ee	      0xe800000000	                          call 0x400c7f3	       900	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_39
0x400c7f3	        0x89442440	             mov dword [rsp + 0x40], eax	       900	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_39
0x400c7f7	        0x8b7c2440	            mov edi, dword [rsp + 0x40] 	       902	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_40
0x400c7fb	      0xe800000000	                          call 0x400c800	       902	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_40
0x400c800	             0x9c3	                             or ebx, eax	       902	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_40
0x400c802	        0x8b442440	            mov eax, dword [rsp + 0x40] 	       904	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	IF_34
0x400c806	          0x83f872	                           cmp eax, 0x72	       905	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	IF_34
0x400c809	           0xf94c1	                                 sete cl	       905	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	IF_34
0x400c80c	          0x83f827	                           cmp eax, 0x27	       905	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	IF_34
0x400c80f	           0xf94c2	                                 sete dl	       905	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	IF_34
0x400c812	             0x9ca	                             or edx, ecx	       905	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	IF_34
0x400c814	          0x83f860	                           cmp eax, 0x60	       905	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	IF_34
0x400c817	           0xf94c1	                                 sete cl	       905	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	IF_34
0x400c81a	             0x8ca	                               or dl, cl	       905	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	IF_34
0x400c81c	            0x7509	                           jne 0x400c827	       905	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	IF_34
0x400c81e	          0x83f81c	                           cmp eax, 0x1c	       905	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	IF_34
0x400c821	     0xf8584030000	                           jne 0x400cbab	       905	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	IF_34
0x400c827	          0x83f872	                           cmp eax, 0x72	       908	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	IF_34	IF_35
0x400c82a	     0xf85f1090000	                           jne 0x400d221	       908	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	IF_34	IF_35
0x400c830	    0xc74424100100	               mov dword [rsp + 0x10], 1	       911	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	IF_34	ELSE_8
0x400c838	      0x4c8d6c244c	                   lea r13, [rsp + 0x4c]	       907	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	IF_34
0x400c83d	            0xeb1a	                           jmp 0x400c859	       907	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	IF_34
0x400c83f	          0x83f872	                           cmp eax, 0x72	       880	normal.c	FUNCTION_4	ELSE_1	IF_32
0x400c842	        0x400f94c6	                                sete sil	       880	normal.c	FUNCTION_4	ELSE_1	IF_32
0x400c846	        0x400fb6f6	                          movzx esi, sil	       880	normal.c	FUNCTION_4	ELSE_1	IF_32
0x400c84a	        0x89742410	             mov dword [rsp + 0x10], esi	       880	normal.c	FUNCTION_4	ELSE_1	IF_32
0x400c84e	     0xf856d090000	                           jne 0x400d1c1	       922	normal.c	FUNCTION_4	ELSE_1	IF_32
0x400c854	      0x4c8d6c2440	                   lea r13, [rsp + 0x40]	       920	normal.c	FUNCTION_4	ELSE_1	IF_32	ELSE_10
0x400c859	    0xc70500000000	           mov dword [0x0400c863], 0x50 	       932	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_38
0x400c863	      0xe800000000	                          call 0x400c868	       933	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_38	CALL_41
0x400c868	    0x41bf01000000	                             mov r15d, 1	       933	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_38	CALL_41
0x400c86e	    0xc74424140000	               mov dword [rsp + 0x14], 0	       933	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_38	CALL_41
0x400c876	            0xeb09	                           jmp 0x400c881	       933	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_38	CALL_41
0x400c878	          0x4585ff	                         test r15d, r15d	       936	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_39
0x400c87b	     0xf84db080000	                            je 0x400d15c	       936	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_39
0x400c881	    0x488b05000000	            mov rax, qword [0x0400c888] 	       936	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_39
0x400c888	    0x488b80781200	          mov rax, qword [rax + 0x1278] 	       936	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_39
0x400c88f	        0x4883f801	                              cmp rax, 1	       936	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_39
0x400c893	     0xf85bf090000	                           jne 0x400d258	       936	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_39
0x400c899	    0x832d00000000	               sub dword [0x0400c8a0], 1	       939	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_39
0x400c8a0	    0x832d00000000	               sub dword [0x0400c8a7], 1	       940	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_39
0x400c8a7	      0x837c241001	               cmp dword [rsp + 0x10], 1	       942	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_39	IF_40
0x400c8ac	            0x19c0	                            sbb eax, eax	       942	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_39	IF_40
0x400c8ae	          0x83e0c0	                     and eax, 0xffffffc0	       942	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_39	IF_40
0x400c8b1	          0x83c060	                           add eax, 0x60	       942	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_39	IF_40
0x400c8b4	    0x890500000000	            mov dword [0x0400c8ba], eax 	       942	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_39	IF_40
0x400c8ba	    0x8b0500000000	            mov eax, dword [0x0400c8c0] 	       948	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37
0x400c8c0	        0x89442410	             mov dword [rsp + 0x10], eax	       948	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37
0x400c8c4	    0xc70500000000	               mov dword [0x0400c8ce], 0	       949	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37
0x400c8ce	    0xc744241c0100	               mov dword [rsp + 0x1c], 1	       949	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37
0x400c8d6	      0xe9a3080000	                           jmp 0x400d17e	       949	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37
0x400c8db	      0xbf01000000	                              mov edi, 1	       951	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	CALL_42
0x400c8e0	      0xe800000000	                          call 0x400c8e5	       951	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	CALL_42
0x400c8e5	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	       882	normal.c	FUNCTION_4	ELSE_1	IF_32
0x400c8ed	      0xe98c080000	                           jmp 0x400d17e	       882	normal.c	FUNCTION_4	ELSE_1	IF_32
0x400c8f2	    0x830500000000	               add dword [0x0400c8f9], 1	       959	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_42
0x400c8f9	    0x830500000000	               add dword [0x0400c900], 1	       960	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_42
0x400c900	    0xc70500000000	          mov dword [0x0400c90a], 0x101 	       961	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_42
0x400c90a	    0x488b05000000	            mov rax, qword [0x0400c911] 	       966	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_43	IF_44
0x400c911	    0x4883b8781200	            cmp qword [rax + 0x1278], 1 	       966	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_43	IF_44
0x400c919	            0x740c	                            je 0x400c927	       966	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_43	IF_44
0x400c91b	    0x488db8781200	                 lea rdi, [rax + 0x1278]	       967	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_43	CALL_44
0x400c922	      0xe800000000	                          call 0x400c927	       967	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_43	CALL_44
0x400c927	      0xbf00000000	                              mov edi, 0	       968	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_43	CALL_45
0x400c92c	      0xe800000000	                          call 0x400c931	       968	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_43	CALL_45
0x400c931	        0x8b442410	            mov eax, dword [rsp + 0x10] 	       970	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37
0x400c935	    0x890500000000	            mov dword [0x0400c93b], eax 	       970	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37
0x400c93b	    0xc70500000000	          mov dword [0x0400c945], 0x101 	       973	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37
0x400c945	        0x418b7d00	                    mov edi, dword [r13]	       976	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	CALL_46
0x400c949	      0xe800000000	                          call 0x400c94e	       976	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	CALL_46
0x400c94e	             0x9c3	                             or ebx, eax	       976	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	CALL_46
0x400c950	      0x837c241400	               cmp dword [rsp + 0x14], 0	       979	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45
0x400c955	     0xf85fd000000	                           jne 0x400ca58	       979	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45
0x400c95b	      0x41837d000b	                    cmp dword [r13], 0xb	       983	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46
0x400c960	            0x754e	                           jne 0x400c9b0	       983	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46
0x400c962	      0xf644240808	                  test byte [rsp + 8], 8	       985	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46
0x400c967	            0x750a	                           jne 0x400c973	       985	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46
0x400c969	      0x488d44244c	                   lea rax, [rsp + 0x4c]	       985	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46
0x400c96e	          0x4939c5	                            cmp r13, rax	       985	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46
0x400c971	            0x753d	                           jne 0x400c9b0	       985	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46
0x400c973	      0xbe44000000	                           mov esi, 0x44	       986	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46	CALL_47
0x400c978	    0x488b3d000000	            mov rdi, qword [0x0400c97f] 	       986	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46	CALL_47
0x400c97f	      0xe800000000	                          call 0x400c984	       986	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46	CALL_47
0x400c984	          0x4885c0	                           test rax, rax	       986	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46	CALL_47
0x400c987	            0x7527	                           jne 0x400c9b0	       986	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46	CALL_47
0x400c989	      0xbf00000000	                              mov edi, 0	       988	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46	CALL_48
0x400c98e	      0xe800000000	                          call 0x400c993	       988	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46	CALL_48
0x400c993	            0x85c0	                           test eax, eax	       989	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46	IF_47
0x400c995	            0x7e19	                           jle 0x400c9b0	       989	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46	IF_47
0x400c997	        0x41894500	                    mov dword [r13], eax	       991	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46	IF_47
0x400c99b	      0xbf03000000	                              mov edi, 3	       994	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46	IF_47	CALL_49
0x400c9a0	      0xe86f5cffff	               call sym.del_from_showcmd	       994	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46	IF_47	CALL_49
0x400c9a5	        0x418b7d00	                    mov edi, dword [r13]	       995	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46	IF_47	CALL_50
0x400c9a9	      0xe800000000	                          call 0x400c9ae	       995	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46	IF_47	CALL_50
0x400c9ae	             0x9c3	                             or ebx, eax	       995	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46	IF_47	CALL_50
0x400c9b0	    0x488b05000000	            mov rax, qword [0x0400c9b7] 	      1002	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x400c9b7	          0x803800	                       cmp byte [rax], 0	      1002	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x400c9ba	            0x744d	                            je 0x400ca09	      1002	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x400c9bc	          0x4585ff	                         test r15d, r15d	      1002	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x400c9bf	            0x7548	                           jne 0x400ca09	      1002	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x400c9c1	    0x833d00000000	               cmp dword [0x0400c9c8], 0	      1002	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x400c9c8	            0x750d	                           jne 0x400c9d7	      1002	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x400c9ca	    0x833d00000000	               cmp dword [0x0400c9d1], 0	      1002	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x400c9d1	     0xf840b080000	                            je 0x400d1e2	      1002	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x400c9d7	    0x833d00000000	               cmp dword [0x0400c9de], 0	      1002	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x400c9de	            0x7529	                           jne 0x400ca09	      1002	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x400c9e0	        0x418b7d00	                    mov edi, dword [r13]	      1002	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x400c9e4	            0x85ff	                           test edi, edi	      1002	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x400c9e6	            0x7821	                            js 0x400ca09	      1002	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x400c9e8	    0x81ffff000000	                           cmp edi, 0xff	      1002	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x400c9ee	            0x7f10	                            jg 0x400ca00	      1002	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x400c9f0	          0x4863ff	                         movsxd rdi, edi	      1002	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x400c9f3	     0xfb687000000	                   movzx eax, byte [rdi]	      1002	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x400c9fa	        0x41894500	                    mov dword [r13], eax	      1002	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x400c9fe	            0xeb09	                           jmp 0x400ca09	      1002	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x400ca00	      0xe800000000	                          call 0x400ca05	      1002	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x400ca05	        0x41894500	                    mov dword [r13], eax	      1002	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x400ca09	      0x44887c2408	                mov byte [rsp + 8], r15b	      1005	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_48
0x400ca0e	    0x833d00000000	               cmp dword [0x0400ca15], 0	      1005	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_48
0x400ca15	            0x741b	                            je 0x400ca32	      1005	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_48
0x400ca17	          0x4584ff	                         test r15b, r15b	      1005	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_48
0x400ca1a	            0x7416	                            je 0x400ca32	      1005	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_48
0x400ca1c	    0x833d00000000	               cmp dword [0x0400ca23], 0	      1005	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_48
0x400ca23	            0x7433	                            je 0x400ca58	      1005	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_48
0x400ca25	        0x418b7d00	                    mov edi, dword [r13]	      1006	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_52
0x400ca29	      0xe800000000	                          call 0x400ca2e	      1006	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_52
0x400ca2e	        0x41894500	                    mov dword [r13], eax	      1006	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_52
0x400ca32	    0x833d00000000	               cmp dword [0x0400ca39], 0	      1009	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_49
0x400ca39	            0x741d	                            je 0x400ca58	      1009	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_49
0x400ca3b	      0x807c240800	                   cmp byte [rsp + 8], 0	      1009	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_49
0x400ca40	            0x7416	                            je 0x400ca58	      1009	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_49
0x400ca42	    0x833d00000000	               cmp dword [0x0400ca49], 0	      1009	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_49
0x400ca49	            0x740d	                            je 0x400ca58	      1009	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_49
0x400ca4b	        0x418b7d00	                    mov edi, dword [r13]	      1010	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_53
0x400ca4f	      0xe800000000	                          call 0x400ca54	      1010	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_53
0x400ca54	        0x41894500	                    mov dword [r13], eax	      1010	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_53
0x400ca58	      0x488d44244c	                   lea rax, [rsp + 0x4c]	      1019	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_50
0x400ca5d	          0x4939c5	                            cmp r13, rax	      1019	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_50
0x400ca60	            0x7533	                           jne 0x400ca95	      1019	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_50
0x400ca62	      0x837c24401c	           cmp dword [rsp + 0x40], 0x1c 	      1020	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_50
0x400ca67	            0x752c	                           jne 0x400ca95	      1020	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_50
0x400ca69	        0x8b44244c	            mov eax, dword [rsp + 0x4c] 	      1021	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_50
0x400ca6d	          0x83f80e	                            cmp eax, 0xe	      1021	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_50
0x400ca70	            0x7405	                            je 0x400ca77	      1021	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_50
0x400ca72	          0x83f807	                              cmp eax, 7	      1021	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_50
0x400ca75	            0x7552	                           jne 0x400cac9	      1021	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_50
0x400ca77	    0xc744243c1c00	           mov dword [rsp + 0x3c], 0x1c 	      1023	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_50
0x400ca7f	        0x89442440	             mov dword [rsp + 0x40], eax	      1024	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_50
0x400ca83	      0xbf1c000000	                           mov edi, 0x1c	      1025	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_50	CALL_54
0x400ca88	      0xe8e635ffff	                   call sym.find_command	      1025	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_50	CALL_54
0x400ca8d	          0x4189c6	                           mov r14d, eax	      1025	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_50	CALL_54
0x400ca90	      0xe9a8000000	                           jmp 0x400cb3d	      1025	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_50	CALL_54
0x400ca95	        0x8b442440	            mov eax, dword [rsp + 0x40] 	      1027	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_12	IF_51
0x400ca99	          0x83e0df	                     and eax, 0xffffffdf	      1027	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_12	IF_51
0x400ca9c	          0x83f84e	                           cmp eax, 0x4e	      1027	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_12	IF_51
0x400ca9f	            0x7528	                           jne 0x400cac9	      1027	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_12	IF_51
0x400caa1	      0x837c243c67	           cmp dword [rsp + 0x3c], 0x67 	      1027	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_12	IF_51
0x400caa6	            0x7521	                           jne 0x400cac9	      1027	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_12	IF_51
0x400caa8	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      1028	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_12	IF_51
0x400caad	      0x4889442408	                mov qword [rsp + 8], rax	      1028	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_12	IF_51
0x400cab2	      0xbe00000000	                              mov esi, 0	      1028	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_12	IF_51
0x400cab7	        0x418b7d00	                    mov edi, dword [r13]	      1028	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_12	IF_51
0x400cabb	      0xe800000000	                          call 0x400cac0	      1028	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_12	IF_51
0x400cac0	      0x488b742408	                mov rsi, qword [rsp + 8]	      1028	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_12	IF_51
0x400cac5	            0x8906	                    mov dword [rsi], eax	      1028	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_12	IF_51
0x400cac7	            0xeb74	                           jmp 0x400cb3d	      1028	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_12	IF_51
0x400cac9	      0x41837d001c	                   cmp dword [r13], 0x1c	      1029	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52
0x400cace	            0x756d	                           jne 0x400cb3d	      1029	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52
0x400cad0	    0x4c8b2d000000	            mov r13, qword [0x0400cad7] 	      1031	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52
0x400cad7	          0x4d85ed	                           test r13, r13	      1031	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52
0x400cada	    0x4c0f482d0000	           cmovs r13, qword [0x0400cae2]	      1031	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52
0x400cae2	            0xeb16	                           jmp 0x400cafa	      1031	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52
0x400cae4	        0x4983fd32	                           cmp r13, 0x32	      1037	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52	WHILE_2	CALL_57
0x400cae8	      0xbf32000000	                           mov edi, 0x32	      1037	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52	WHILE_2	CALL_57
0x400caed	        0x490f4efd	                         cmovle rdi, r13	      1037	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52	WHILE_2	CALL_57
0x400caf1	      0xe800000000	                          call 0x400caf6	      1037	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52	WHILE_2	CALL_57
0x400caf6	        0x4983ed32	                           sub r13, 0x32	      1038	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52	WHILE_2
0x400cafa	      0xe800000000	                          call 0x400caff	      1035	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52	WHILE_2	CALL_56
0x400caff	          0x4d85ed	                           test r13, r13	      1035	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52	WHILE_2	CALL_56
0x400cb02	            0x7e04	                           jle 0x400cb08	      1035	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52	WHILE_2	CALL_56
0x400cb04	            0x85c0	                           test eax, eax	      1035	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52	WHILE_2	CALL_56
0x400cb06	            0x7edc	                           jle 0x400cae4	      1035	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52	WHILE_2	CALL_56
0x400cb08	            0x85c0	                           test eax, eax	      1040	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52	IF_53
0x400cb0a	            0x7e31	                           jle 0x400cb3d	      1040	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52	IF_53
0x400cb0c	      0xe800000000	                          call 0x400cb11	      1042	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52	IF_53	CALL_58
0x400cb11	          0x83f80e	                            cmp eax, 0xe	      1043	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52	IF_53	IF_54
0x400cb14	            0x740e	                            je 0x400cb24	      1043	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52	IF_53	IF_54
0x400cb16	          0x83f807	                              cmp eax, 7	      1043	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52	IF_53	IF_54
0x400cb19	            0x7409	                            je 0x400cb24	      1043	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52	IF_53	IF_54
0x400cb1b	            0x89c7	                            mov edi, eax	      1044	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52	IF_53	CALL_59
0x400cb1d	      0xe800000000	                          call 0x400cb22	      1044	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52	IF_53	CALL_59
0x400cb22	            0xeb19	                           jmp 0x400cb3d	      1044	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52	IF_53	CALL_59
0x400cb24	    0xc744243c1c00	           mov dword [rsp + 0x3c], 0x1c 	      1047	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52	IF_53	ELSE_14
0x400cb2c	        0x89442440	             mov dword [rsp + 0x40], eax	      1048	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52	IF_53	ELSE_14
0x400cb30	      0xbf1c000000	                           mov edi, 0x1c	      1049	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52	IF_53	ELSE_14	CALL_60
0x400cb35	      0xe83935ffff	                   call sym.find_command	      1049	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52	IF_53	ELSE_14	CALL_60
0x400cb3a	          0x4189c6	                           mov r14d, eax	      1049	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52	IF_53	ELSE_14	CALL_60
0x400cb3d	    0x832d00000000	               sub dword [0x0400cb44], 1	      1060	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37
0x400cb44	            0xeb30	                           jmp 0x400cb76	      1061	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	CALL_61
0x400cb46	      0xe800000000	                          call 0x400cb4b	      1064	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	CALL_64
0x400cb4b	          0x4189c5	                           mov r13d, eax	      1064	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	CALL_64
0x400cb4e	            0x89c7	                            mov edi, eax	      1065	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	IF_55	CALL_65
0x400cb50	      0xe800000000	                          call 0x400cb55	      1065	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	IF_55	CALL_65
0x400cb55	            0x85c0	                           test eax, eax	      1065	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	IF_55	CALL_65
0x400cb57	            0x750a	                           jne 0x400cb63	      1065	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	IF_55	CALL_65
0x400cb59	          0x4489ef	                           mov edi, r13d	      1067	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	IF_55	CALL_66
0x400cb5c	      0xe800000000	                          call 0x400cb61	      1067	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	IF_55	CALL_66
0x400cb61	            0xeb41	                           jmp 0x400cba4	      1068	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	IF_55
0x400cb63	      0x837c244400	               cmp dword [rsp + 0x44], 0	      1070	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	ELSE_15	IF_56
0x400cb68	            0x7507	                           jne 0x400cb71	      1070	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	ELSE_15	IF_56
0x400cb6a	      0x44896c2444	            mov dword [rsp + 0x44], r13d	      1071	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	ELSE_15	IF_56
0x400cb6f	            0xeb05	                           jmp 0x400cb76	      1071	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	ELSE_15	IF_56
0x400cb71	      0x44896c2448	            mov dword [rsp + 0x48], r13d	      1073	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	ELSE_16
0x400cb76	    0x833d00000000	               cmp dword [0x0400cb7d], 0	      1061	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	CALL_61
0x400cb7d	            0x7425	                            je 0x400cba4	      1061	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	CALL_61
0x400cb7f	          0x4585ff	                         test r15d, r15d	      1061	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	CALL_61
0x400cb82	            0x7420	                            je 0x400cba4	      1061	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	CALL_61
0x400cb84	      0xe800000000	                          call 0x400cb89	      1061	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	CALL_61
0x400cb89	            0x85c0	                           test eax, eax	      1061	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	CALL_61
0x400cb8b	            0x7e17	                           jle 0x400cba4	      1061	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	CALL_61
0x400cb8d	      0x3dff000000	                           cmp eax, 0xff	      1062	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	CALL_63
0x400cb92	            0x7fb2	                            jg 0x400cb46	      1062	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	CALL_63
0x400cb94	      0xe800000000	                          call 0x400cb99	      1062	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	CALL_63
0x400cb99	            0x4898	                                    cdqe	      1062	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	CALL_63
0x400cb9b	    0x80b800000000	                       cmp byte [rax], 1	      1062	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	CALL_63
0x400cba2	            0x7fa2	                            jg 0x400cb46	      1062	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	CALL_63
0x400cba4	    0x830500000000	               add dword [0x0400cbab], 1	      1075	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37
0x400cbab	    0x832d00000000	               sub dword [0x0400cbb2], 1	      1078	normal.c	FUNCTION_4	ELSE_1	IF_32
0x400cbb2	    0x832d00000000	               sub dword [0x0400cbb9], 1	      1079	normal.c	FUNCTION_4	ELSE_1	IF_32
0x400cbb9	            0x85db	                           test ebx, ebx	      1089	normal.c	FUNCTION_4	ELSE_1	IF_57
0x400cbbb	            0x7405	                            je 0x400cbc2	      1089	normal.c	FUNCTION_4	ELSE_1	IF_57
0x400cbbd	      0xe800000000	                          call 0x400cbc2	      1090	normal.c	FUNCTION_4	ELSE_1	CALL_67
0x400cbc2	    0x817c243c03ca	     cmp dword [rsp + 0x3c], 0xffffca03 	      1092	normal.c	FUNCTION_4	ELSE_1	IF_58
0x400cbca	     0xf84c7050000	                            je 0x400d197	      1092	normal.c	FUNCTION_4	ELSE_1	IF_58
0x400cbd0	    0xc70500000000	               mov dword [0x0400cbda], 0	      1093	normal.c	FUNCTION_4	ELSE_1	IF_58
0x400cbda	    0xc70500000000	               mov dword [0x0400cbe4], 1	      1095	normal.c	FUNCTION_4	ELSE_1
0x400cbe4	      0x837c24401b	           cmp dword [rsp + 0x40], 0x1b 	      1097	normal.c	FUNCTION_4	ELSE_1	IF_59
0x400cbe9	            0x754c	                           jne 0x400cc37	      1097	normal.c	FUNCTION_4	ELSE_1	IF_59
0x400cbeb	    0x41c704240000	                      mov dword [r12], 0	      3676	normal.c	FUNCTION_24
0x400cbf3	    0x41c744240400	                  mov dword [r12 + 4], 0	      3677	normal.c	FUNCTION_24
0x400cbfc	    0x41c744240c00	                mov dword [r12 + 0xc], 0	      3678	normal.c	FUNCTION_24
0x400cc05	    0x41c744241000	               mov dword [r12 + 0x10], 0	      3679	normal.c	FUNCTION_24
0x400cc0e	    0x833d00000000	               cmp dword [0x0400cc15], 0	      1100	normal.c	FUNCTION_4	ELSE_1	IF_59	IF_60	CALL_69
0x400cc15	     0xf850d030000	                           jne 0x400cf28	      1100	normal.c	FUNCTION_4	ELSE_1	IF_59	IF_60	CALL_69
0x400cc1b	      0xe800000000	                          call 0x400cc20	      1100	normal.c	FUNCTION_4	ELSE_1	IF_59	IF_60	CALL_69
0x400cc20	            0x85c0	                           test eax, eax	      1100	normal.c	FUNCTION_4	ELSE_1	IF_59	IF_60	CALL_69
0x400cc22	     0xf8400030000	                            je 0x400cf28	      1100	normal.c	FUNCTION_4	ELSE_1	IF_59	IF_60	CALL_69
0x400cc28	    0xc70500000000	           mov dword [0x0400cc32], 0x61 	      1101	normal.c	FUNCTION_4	ELSE_1	IF_59	IF_60
0x400cc32	      0xe9f1020000	                           jmp 0x400cf28	      1101	normal.c	FUNCTION_4	ELSE_1	IF_59	IF_60
0x400cc37	    0xc70500000000	               mov dword [0x0400cc41], 0	      1107	normal.c	FUNCTION_4	ELSE_1	IF_61
0x400cc41	    0xc70500000000	               mov dword [0x0400cc4b], 0	      1108	normal.c	FUNCTION_4	ELSE_1	IF_61
0x400cc4b	    0x488b05000000	            mov rax, qword [0x0400cc52] 	      1111	normal.c	FUNCTION_4	ELSE_1
0x400cc52	        0x4c8b6838	            mov r13, qword [rax + 0x38] 	      1111	normal.c	FUNCTION_4	ELSE_1
0x400cc56	          0x8b5840	            mov ebx, dword [rax + 0x40] 	      1111	normal.c	FUNCTION_4	ELSE_1
0x400cc59	    0x833d00000000	               cmp dword [0x0400cc60], 0	      1115	normal.c	FUNCTION_4	ELSE_1	IF_62
0x400cc60	            0x7552	                           jne 0x400ccb4	      1115	normal.c	FUNCTION_4	ELSE_1	IF_62
0x400cc62	    0x833d00000000	               cmp dword [0x0400cc69], 0	      1115	normal.c	FUNCTION_4	ELSE_1	IF_62
0x400cc69	            0x7449	                            je 0x400ccb4	      1115	normal.c	FUNCTION_4	ELSE_1	IF_62
0x400cc6b	          0x4963c6	                        movsxd rax, r14d	      1117	normal.c	FUNCTION_4	ELSE_1	IF_62	IF_63
0x400cc6e	        0x488d0440	                  lea rax, [rax + rax*2]	      1117	normal.c	FUNCTION_4	ELSE_1	IF_62	IF_63
0x400cc72	     0xfb704c50000	                 movzx eax, word [rax*8]	      1117	normal.c	FUNCTION_4	ELSE_1	IF_62	IF_63
0x400cc7a	            0xa810	                           test al, 0x10	      1117	normal.c	FUNCTION_4	ELSE_1	IF_62	IF_63
0x400cc7c	            0x741d	                            je 0x400cc9b	      1117	normal.c	FUNCTION_4	ELSE_1	IF_62	IF_63
0x400cc7e	      0xe800000000	                          call 0x400cc83	      1119	normal.c	FUNCTION_4	ELSE_1	IF_62	IF_63	CALL_70
0x400cc83	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      1120	normal.c	FUNCTION_4	ELSE_1	IF_62	IF_63	CALL_71
0x400cc88	      0xe8d559ffff	                call sym.unshift_special	      1120	normal.c	FUNCTION_4	ELSE_1	IF_62	IF_63	CALL_71
0x400cc8d	        0x8b7c243c	            mov edi, dword [rsp + 0x3c] 	      1121	normal.c	FUNCTION_4	ELSE_1	IF_62	IF_63	CALL_72
0x400cc91	      0xe8dd33ffff	                   call sym.find_command	      1121	normal.c	FUNCTION_4	ELSE_1	IF_62	IF_63	CALL_72
0x400cc96	          0x4189c6	                           mov r14d, eax	      1121	normal.c	FUNCTION_4	ELSE_1	IF_62	IF_63	CALL_72
0x400cc99	            0xeb19	                           jmp 0x400ccb4	      1121	normal.c	FUNCTION_4	ELSE_1	IF_62	IF_63	CALL_72
0x400cc9b	            0xa820	                           test al, 0x20	      1123	normal.c	FUNCTION_4	ELSE_1	IF_62	ELSE_17	IF_64
0x400cc9d	            0x7415	                            je 0x400ccb4	      1123	normal.c	FUNCTION_4	ELSE_1	IF_62	ELSE_17	IF_64
0x400cc9f	    0xf60500000000	               test byte [0x0400cca6], 2	      1124	normal.c	FUNCTION_4	ELSE_1	IF_62	ELSE_17	IF_64
0x400cca6	            0x740c	                            je 0x400ccb4	      1124	normal.c	FUNCTION_4	ELSE_1	IF_62	ELSE_17	IF_64
0x400cca8	      0xe800000000	                          call 0x400ccad	      1126	normal.c	FUNCTION_4	ELSE_1	IF_62	ELSE_17	IF_64	CALL_73
0x400ccad	    0x832500000000	      and dword [0x0400ccb4], 0xfffffffd	      1127	normal.c	FUNCTION_4	ELSE_1	IF_62	ELSE_17	IF_64
0x400ccb4	          0x4963c6	                        movsxd rax, r14d	      1135	normal.c	FUNCTION_4	ELSE_1
0x400ccb7	        0x488d1400	                    lea rdx, [rax + rax]	      1135	normal.c	FUNCTION_4	ELSE_1
0x400ccbb	        0x488d0c02	                    lea rcx, [rdx + rax]	      1135	normal.c	FUNCTION_4	ELSE_1
0x400ccbf	     0xfbf0ccd0000	                 movsx ecx, word [rcx*8]	      1135	normal.c	FUNCTION_4	ELSE_1
0x400ccc7	        0x894c2468	             mov dword [rsp + 0x68], ecx	      1135	normal.c	FUNCTION_4	ELSE_1
0x400cccb	          0x4801d0	                            add rax, rdx	      1136	normal.c	FUNCTION_4	ELSE_1
0x400ccce	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      1136	normal.c	FUNCTION_4	ELSE_1
0x400ccd3	    0xff14c5000000	                      call qword [rax*8]	      1136	normal.c	FUNCTION_4	ELSE_1
0x400ccda	    0x833d00000000	               cmp dword [0x0400cce1], 0	      1142	normal.c	FUNCTION_4	ELSE_1	IF_65
0x400cce1	            0x7553	                           jne 0x400cd36	      1142	normal.c	FUNCTION_4	ELSE_1	IF_65
0x400cce3	      0x41833c2400	                      cmp dword [r12], 0	      1143	normal.c	FUNCTION_4	ELSE_1	IF_65
0x400cce8	            0x754c	                           jne 0x400cd36	      1143	normal.c	FUNCTION_4	ELSE_1	IF_65
0x400ccea	          0x4585f6	                         test r14d, r14d	      1144	normal.c	FUNCTION_4	ELSE_1	IF_65
0x400cced	            0x7811	                            js 0x400cd00	      1144	normal.c	FUNCTION_4	ELSE_1	IF_65
0x400ccef	          0x4d63f6	                        movsxd r14, r14d	      1144	normal.c	FUNCTION_4	ELSE_1	IF_65
0x400ccf2	        0x4b8d0476	                  lea rax, [r14 + r14*2]	      1144	normal.c	FUNCTION_4	ELSE_1	IF_65
0x400ccf6	    0xf604c5000000	                    test byte [rax*8], 1	      1144	normal.c	FUNCTION_4	ELSE_1	IF_65
0x400ccfe	            0x7536	                           jne 0x400cd36	      1144	normal.c	FUNCTION_4	ELSE_1	IF_65
0x400cd00	    0x41c744240400	                  mov dword [r12 + 4], 0	      3677	normal.c	FUNCTION_24
0x400cd09	    0x41c744240c00	                mov dword [r12 + 0xc], 0	      3678	normal.c	FUNCTION_24
0x400cd12	    0x41c744241000	               mov dword [r12 + 0x10], 0	      3679	normal.c	FUNCTION_24
0x400cd1b	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	      1149	normal.c	FUNCTION_4	ELSE_1	IF_65
0x400cd23	      0x488d7c242c	                   lea rdi, [rsp + 0x2c]	      1154	normal.c	FUNCTION_4	ELSE_1	IF_65	CALL_75
0x400cd28	      0xe800000000	                          call 0x400cd2d	      1154	normal.c	FUNCTION_4	ELSE_1	IF_65	CALL_75
0x400cd2d	        0x8b7c242c	            mov edi, dword [rsp + 0x2c] 	      1156	normal.c	FUNCTION_4	ELSE_1	IF_65	CALL_76
0x400cd31	      0xe800000000	                          call 0x400cd36	      1156	normal.c	FUNCTION_4	ELSE_1	IF_65	CALL_76
0x400cd36	    0x833d00000000	               cmp dword [0x0400cd3d], 0	      1163	normal.c	FUNCTION_4	ELSE_1	IF_66
0x400cd3d	            0x7e0b	                           jle 0x400cd4a	      1163	normal.c	FUNCTION_4	ELSE_1	IF_66
0x400cd3f	      0xe800000000	                          call 0x400cd44	      1164	normal.c	FUNCTION_4	ELSE_1	CALL_77
0x400cd44	    0x890500000000	            mov dword [0x0400cd4a], eax 	      1164	normal.c	FUNCTION_4	ELSE_1	CALL_77
0x400cd4a	      0xba00000000	                              mov edx, 0	      1169	normal.c	FUNCTION_4	ELSE_1	CALL_78
0x400cd4f	        0x8b742418	            mov esi, dword [rsp + 0x18] 	      1169	normal.c	FUNCTION_4	ELSE_1	CALL_78
0x400cd53	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      1169	normal.c	FUNCTION_4	ELSE_1	CALL_78
0x400cd58	      0xe800000000	                          call 0x400cd5d	      1169	normal.c	FUNCTION_4	ELSE_1	CALL_78
0x400cd5d	    0x833d00000000	               cmp dword [0x0400cd64], 0	      1183	normal.c	FUNCTION_4	ELSE_1	IF_67
0x400cd64	            0x7478	                            je 0x400cdde	      1183	normal.c	FUNCTION_4	ELSE_1	IF_67
0x400cd66	    0x833d00000000	               cmp dword [0x0400cd6d], 0	      1184	normal.c	FUNCTION_4	ELSE_1	IF_67
0x400cd6d	            0x756f	                           jne 0x400cdde	      1184	normal.c	FUNCTION_4	ELSE_1	IF_67
0x400cd6f	    0x833d00000000	               cmp dword [0x0400cd76], 0	      1185	normal.c	FUNCTION_4	ELSE_1	IF_67
0x400cd76	            0x7527	                           jne 0x400cd9f	      1185	normal.c	FUNCTION_4	ELSE_1	IF_67
0x400cd78	    0x833d00000000	               cmp dword [0x0400cd7f], 0	      1186	normal.c	FUNCTION_4	ELSE_1	IF_67
0x400cd7f	     0xf84a3010000	                            je 0x400cf28	      1186	normal.c	FUNCTION_4	ELSE_1	IF_67
0x400cd85	    0x488b05000000	            mov rax, qword [0x0400cd8c] 	      1187	normal.c	FUNCTION_4	ELSE_1	IF_67
0x400cd8c	        0x4c396838	            cmp qword [rax + 0x38], r13 	      1187	normal.c	FUNCTION_4	ELSE_1	IF_67
0x400cd90	     0xf8592010000	                           jne 0x400cf28	      1187	normal.c	FUNCTION_4	ELSE_1	IF_67
0x400cd96	          0x395840	            cmp dword [rax + 0x40], ebx 	      1188	normal.c	FUNCTION_4	ELSE_1	IF_67
0x400cd99	     0xf8589010000	                           jne 0x400cf28	      1188	normal.c	FUNCTION_4	ELSE_1	IF_67
0x400cd9f	    0x833d00000000	               cmp dword [0x0400cda6], 0	      1190	normal.c	FUNCTION_4	ELSE_1	IF_67
0x400cda6	            0x7509	                           jne 0x400cdb1	      1190	normal.c	FUNCTION_4	ELSE_1	IF_67
0x400cda8	    0x833d00000000	               cmp dword [0x0400cdaf], 0	      1191	normal.c	FUNCTION_4	ELSE_1	IF_67
0x400cdaf	            0x742d	                            je 0x400cdde	      1191	normal.c	FUNCTION_4	ELSE_1	IF_67
0x400cdb1	    0x833d00000000	               cmp dword [0x0400cdb8], 0	      1192	normal.c	FUNCTION_4	ELSE_1	IF_67
0x400cdb8	            0x7512	                           jne 0x400cdcc	      1192	normal.c	FUNCTION_4	ELSE_1	IF_67
0x400cdba	    0x833d00000000	               cmp dword [0x0400cdc1], 0	      1192	normal.c	FUNCTION_4	ELSE_1	IF_67
0x400cdc1	            0x741b	                            je 0x400cdde	      1192	normal.c	FUNCTION_4	ELSE_1	IF_67
0x400cdc3	    0x833d00000000	               cmp dword [0x0400cdca], 0	      1192	normal.c	FUNCTION_4	ELSE_1	IF_67
0x400cdca	            0x7412	                            je 0x400cdde	      1192	normal.c	FUNCTION_4	ELSE_1	IF_67
0x400cdcc	    0x833d00000000	               cmp dword [0x0400cdd3], 0	      1193	normal.c	FUNCTION_4	ELSE_1	IF_67
0x400cdd3	            0x7509	                           jne 0x400cdde	      1193	normal.c	FUNCTION_4	ELSE_1	IF_67
0x400cdd5	    0x833d00000000	               cmp dword [0x0400cddc], 0	      1194	normal.c	FUNCTION_4	ELSE_1	IF_67
0x400cddc	            0x7530	                           jne 0x400ce0e	      1194	normal.c	FUNCTION_4	ELSE_1	IF_67
0x400cdde	    0x833d00000000	               cmp dword [0x0400cde5], 0	      1195	normal.c	FUNCTION_4	ELSE_1	IF_67
0x400cde5	     0xf843d010000	                            je 0x400cf28	      1195	normal.c	FUNCTION_4	ELSE_1	IF_67
0x400cdeb	    0x833d00000000	               cmp dword [0x0400cdf2], 0	      1196	normal.c	FUNCTION_4	ELSE_1	IF_67
0x400cdf2	     0xf8530010000	                           jne 0x400cf28	      1196	normal.c	FUNCTION_4	ELSE_1	IF_67
0x400cdf8	    0x833d00000000	               cmp dword [0x0400cdff], 0	      1197	normal.c	FUNCTION_4	ELSE_1	IF_67
0x400cdff	            0x750d	                           jne 0x400ce0e	      1197	normal.c	FUNCTION_4	ELSE_1	IF_67
0x400ce01	    0x833d00000000	               cmp dword [0x0400ce08], 0	      1198	normal.c	FUNCTION_4	ELSE_1	IF_67
0x400ce08	     0xf841a010000	                            je 0x400cf28	      1198	normal.c	FUNCTION_4	ELSE_1	IF_67
0x400ce0e	    0x41837c240400	                  cmp dword [r12 + 4], 0	      1199	normal.c	FUNCTION_4	ELSE_1	IF_67
0x400ce14	     0xf850e010000	                           jne 0x400cf28	      1199	normal.c	FUNCTION_4	ELSE_1	IF_67
0x400ce1a	      0xf644246c01	               test byte [rsp + 0x6c], 1	      1200	normal.c	FUNCTION_4	ELSE_1	IF_67
0x400ce1f	     0xf8503010000	                           jne 0x400cf28	      1200	normal.c	FUNCTION_4	ELSE_1	IF_67
0x400ce25	      0xe800000000	                          call 0x400ce2a	      1201	normal.c	FUNCTION_4	ELSE_1	IF_67	CALL_79
0x400ce2a	            0x85c0	                           test eax, eax	      1201	normal.c	FUNCTION_4	ELSE_1	IF_67	CALL_79
0x400ce2c	     0xf84f6000000	                            je 0x400cf28	      1201	normal.c	FUNCTION_4	ELSE_1	IF_67	CALL_79
0x400ce32	      0xe800000000	                          call 0x400ce37	      1202	normal.c	FUNCTION_4	ELSE_1	IF_67	CALL_80
0x400ce37	            0x85c0	                           test eax, eax	      1202	normal.c	FUNCTION_4	ELSE_1	IF_67	CALL_80
0x400ce39	     0xf84e9000000	                            je 0x400cf28	      1202	normal.c	FUNCTION_4	ELSE_1	IF_67	CALL_80
0x400ce3f	    0x833d00000000	               cmp dword [0x0400ce46], 0	      1203	normal.c	FUNCTION_4	ELSE_1	IF_67
0x400ce46	     0xf85dc000000	                           jne 0x400cf28	      1203	normal.c	FUNCTION_4	ELSE_1	IF_67
0x400ce4c	    0x833d00000000	               cmp dword [0x0400ce53], 0	      1204	normal.c	FUNCTION_4	ELSE_1	IF_67
0x400ce53	     0xf85cf000000	                           jne 0x400cf28	      1204	normal.c	FUNCTION_4	ELSE_1	IF_67
0x400ce59	      0x41833c2400	                      cmp dword [r12], 0	      1205	normal.c	FUNCTION_4	ELSE_1	IF_67
0x400ce5e	     0xf85c4000000	                           jne 0x400cf28	      1205	normal.c	FUNCTION_4	ELSE_1	IF_67
0x400ce64	    0x448b2d000000	           mov r13d, dword [0x0400ce6b] 	      1207	normal.c	FUNCTION_4	ELSE_1	IF_67
0x400ce6b	    0x833d00000000	               cmp dword [0x0400ce72], 0	      1210	normal.c	FUNCTION_4	ELSE_1	IF_67	IF_68
0x400ce72	            0x740a	                            je 0x400ce7e	      1210	normal.c	FUNCTION_4	ELSE_1	IF_67	IF_68
0x400ce74	    0xc70500000000	           mov dword [0x0400ce7e], 0x10 	      1211	normal.c	FUNCTION_4	ELSE_1	IF_67	IF_68
0x400ce7e	    0x833d00000000	               cmp dword [0x0400ce85], 0	      1215	normal.c	FUNCTION_4	ELSE_1	IF_67	IF_69
0x400ce85	            0x7447	                            je 0x400cece	      1215	normal.c	FUNCTION_4	ELSE_1	IF_67	IF_69
0x400ce87	    0x488b1d000000	            mov rbx, qword [0x0400ce8e] 	      1215	normal.c	FUNCTION_4	ELSE_1	IF_67	IF_69
0x400ce8e	          0x4885db	                           test rbx, rbx	      1215	normal.c	FUNCTION_4	ELSE_1	IF_67	IF_69
0x400ce91	            0x743b	                            je 0x400cece	      1215	normal.c	FUNCTION_4	ELSE_1	IF_67	IF_69
0x400ce93	    0x833d00000000	               cmp dword [0x0400ce9a], 0	      1215	normal.c	FUNCTION_4	ELSE_1	IF_67	IF_69
0x400ce9a	            0x7532	                           jne 0x400cece	      1215	normal.c	FUNCTION_4	ELSE_1	IF_67	IF_69
0x400ce9c	    0x48c705000000	               mov qword [0x0400cea7], 0	      1220	normal.c	FUNCTION_4	ELSE_1	IF_67	IF_69
0x400cea7	      0xbf00000000	                              mov edi, 0	      1222	normal.c	FUNCTION_4	ELSE_1	IF_67	IF_69	CALL_81
0x400ceac	      0xe800000000	                          call 0x400ceb1	      1222	normal.c	FUNCTION_4	ELSE_1	IF_67	IF_69	CALL_81
0x400ceb1	    0x48891d000000	            mov qword [0x0400ceb8], rbx 	      1224	normal.c	FUNCTION_4	ELSE_1	IF_67	IF_69
0x400ceb8	    0x8b3500000000	            mov esi, dword [0x0400cebe] 	      1225	normal.c	FUNCTION_4	ELSE_1	IF_67	IF_69	CALL_82
0x400cebe	          0x4889df	                            mov rdi, rbx	      1225	normal.c	FUNCTION_4	ELSE_1	IF_67	IF_69	CALL_82
0x400cec1	      0xe800000000	                          call 0x400cec6	      1225	normal.c	FUNCTION_4	ELSE_1	IF_67	IF_69	CALL_82
0x400cec6	          0x4889df	                            mov rdi, rbx	      1226	normal.c	FUNCTION_4	ELSE_1	IF_67	IF_69	CALL_83
0x400cec9	      0xe800000000	                          call 0x400cece	      1226	normal.c	FUNCTION_4	ELSE_1	IF_67	IF_69	CALL_83
0x400cece	      0xe800000000	                          call 0x400ced3	      1228	normal.c	FUNCTION_4	ELSE_1	IF_67	CALL_84
0x400ced3	      0xe800000000	                          call 0x400ced8	      1229	normal.c	FUNCTION_4	ELSE_1	IF_67	CALL_85
0x400ced8	      0xe800000000	                          call 0x400cedd	      1230	normal.c	FUNCTION_4	ELSE_1	IF_67	CALL_86
0x400cedd	    0x833d00000000	               cmp dword [0x0400cee4], 0	      1231	normal.c	FUNCTION_4	ELSE_1	IF_67	IF_70
0x400cee4	            0x7509	                           jne 0x400ceef	      1231	normal.c	FUNCTION_4	ELSE_1	IF_67	IF_70
0x400cee6	    0x833d00000000	               cmp dword [0x0400ceed], 0	      1231	normal.c	FUNCTION_4	ELSE_1	IF_67	IF_70
0x400ceed	            0x740f	                            je 0x400cefe	      1231	normal.c	FUNCTION_4	ELSE_1	IF_67	IF_70
0x400ceef	      0xbe01000000	                              mov esi, 1	      1232	normal.c	FUNCTION_4	ELSE_1	IF_67	CALL_87
0x400cef4	      0xbfe8030000	                          mov edi, 0x3e8	      1232	normal.c	FUNCTION_4	ELSE_1	IF_67	CALL_87
0x400cef9	      0xe800000000	                          call 0x400cefe	      1232	normal.c	FUNCTION_4	ELSE_1	IF_67	CALL_87
0x400cefe	      0xbe00000000	                              mov esi, 0	      1233	normal.c	FUNCTION_4	ELSE_1	IF_67	CALL_88
0x400cf03	      0xbfb80b0000	                          mov edi, 0xbb8	      1233	normal.c	FUNCTION_4	ELSE_1	IF_67	CALL_88
0x400cf08	      0xe800000000	                          call 0x400cf0d	      1233	normal.c	FUNCTION_4	ELSE_1	IF_67	CALL_88
0x400cf0d	    0x44892d000000	           mov dword [0x0400cf14], r13d 	      1234	normal.c	FUNCTION_4	ELSE_1	IF_67
0x400cf14	    0xc70500000000	               mov dword [0x0400cf1e], 0	      1236	normal.c	FUNCTION_4	ELSE_1	IF_67
0x400cf1e	    0xc70500000000	               mov dword [0x0400cf28], 0	      1237	normal.c	FUNCTION_4	ELSE_1	IF_67
0x400cf28	    0xc70500000000	               mov dword [0x0400cf32], 0	      1245	normal.c	FUNCTION_4	ELSE_1
0x400cf32	    0x8b0500000000	            mov eax, dword [0x0400cf38] 	      1249	normal.c	FUNCTION_4	ELSE_1
0x400cf38	    0xc70500000000	               mov dword [0x0400cf42], 0	      1251	normal.c	FUNCTION_4	ELSE_1
0x400cf42	            0x85c0	                           test eax, eax	      1255	normal.c	FUNCTION_4	ELSE_1	IF_71
0x400cf44	            0x7507	                           jne 0x400cf4d	      1255	normal.c	FUNCTION_4	ELSE_1	IF_71
0x400cf46	      0x837c243c72	           cmp dword [rsp + 0x3c], 0x72 	      1255	normal.c	FUNCTION_4	ELSE_1	IF_71
0x400cf4b	            0x750f	                           jne 0x400cf5c	      1255	normal.c	FUNCTION_4	ELSE_1	IF_71
0x400cf4d	      0xe800000000	                          call 0x400cf52	      1257	normal.c	FUNCTION_4	ELSE_1	IF_71	CALL_89
0x400cf52	      0xbfffffffff	                     mov edi, 0xffffffff	      1259	normal.c	FUNCTION_4	ELSE_1	IF_71	CALL_90
0x400cf57	      0xe800000000	                          call 0x400cf5c	      1259	normal.c	FUNCTION_4	ELSE_1	IF_71	CALL_90
0x400cf5c	      0x49833c2400	                      cmp qword [r12], 0	      1265	normal.c	FUNCTION_4	ELSE_1	IF_72
0x400cf61	            0x750f	                           jne 0x400cf72	      1265	normal.c	FUNCTION_4	ELSE_1	IF_72
0x400cf63	    0x817c243c039f	     cmp dword [rsp + 0x3c], 0xffff9f03 	      1266	normal.c	FUNCTION_4	ELSE_1	IF_72
0x400cf6b	            0x7405	                            je 0x400cf72	      1266	normal.c	FUNCTION_4	ELSE_1	IF_72
0x400cf6d	      0xe800000000	                          call 0x400cf72	      1267	normal.c	FUNCTION_4	ELSE_1	CALL_91
0x400cf72	      0xe800000000	                          call 0x400cf77	      1270	normal.c	FUNCTION_4	ELSE_1	CALL_92
0x400cf77	      0x488b7c2470	            mov rdi, qword [rsp + 0x70] 	      1271	normal.c	FUNCTION_4	ELSE_1	CALL_93
0x400cf7c	      0xe800000000	                          call 0x400cf81	      1271	normal.c	FUNCTION_4	ELSE_1	CALL_93
0x400cf81	    0x833d00000000	               cmp dword [0x0400cf88], 0	      1274	normal.c	FUNCTION_4	ELSE_1	IF_73
0x400cf88	            0x7405	                            je 0x400cf8f	      1274	normal.c	FUNCTION_4	ELSE_1	IF_73
0x400cf8a	      0xe800000000	                          call 0x400cf8f	      1275	normal.c	FUNCTION_4	ELSE_1	CALL_94
0x400cf8f	            0x85ed	                           test ebp, ebp	      1278	normal.c	FUNCTION_4	ELSE_1	IF_74
0x400cf91	           0xf95c3	                                setne bl	      1278	normal.c	FUNCTION_4	ELSE_1	IF_74
0x400cf94	    0x488b05000000	            mov rax, qword [0x0400cf9b] 	      1278	normal.c	FUNCTION_4	ELSE_1	IF_74
0x400cf9b	    0x83b888020000	              cmp dword [rax + 0x288], 0	      1278	normal.c	FUNCTION_4	ELSE_1	IF_74
0x400cfa2	            0x7413	                            je 0x400cfb7	      1278	normal.c	FUNCTION_4	ELSE_1	IF_74
0x400cfa4	            0x84db	                             test bl, bl	      1278	normal.c	FUNCTION_4	ELSE_1	IF_74
0x400cfa6	            0x740f	                            je 0x400cfb7	      1278	normal.c	FUNCTION_4	ELSE_1	IF_74
0x400cfa8	      0xe800000000	                          call 0x400cfad	      1280	normal.c	FUNCTION_4	ELSE_1	IF_74	CALL_95
0x400cfad	      0xbf01000000	                              mov edi, 1	      1281	normal.c	FUNCTION_4	ELSE_1	IF_74	CALL_96
0x400cfb2	      0xe800000000	                          call 0x400cfb7	      1281	normal.c	FUNCTION_4	ELSE_1	IF_74	CALL_96
0x400cfb7	    0x488b05000000	            mov rax, qword [0x0400cfbe] 	      1284	normal.c	FUNCTION_4	ELSE_1	IF_75
0x400cfbe	    0x83b8b0020000	              cmp dword [rax + 0x2b0], 0	      1284	normal.c	FUNCTION_4	ELSE_1	IF_75
0x400cfc5	            0x740e	                            je 0x400cfd5	      1284	normal.c	FUNCTION_4	ELSE_1	IF_75
0x400cfc7	            0x84db	                             test bl, bl	      1284	normal.c	FUNCTION_4	ELSE_1	IF_75
0x400cfc9	            0x740a	                            je 0x400cfd5	      1284	normal.c	FUNCTION_4	ELSE_1	IF_75
0x400cfcb	      0xe800000000	                          call 0x400cfd0	      1286	normal.c	FUNCTION_4	ELSE_1	IF_75	CALL_97
0x400cfd0	      0xe800000000	                          call 0x400cfd5	      1287	normal.c	FUNCTION_4	ELSE_1	IF_75	CALL_98
0x400cfd5	    0x488b05000000	            mov rax, qword [0x0400cfdc] 	      1292	normal.c	FUNCTION_4	ELSE_1	IF_76	CALL_99
0x400cfdc	    0x488bb8481c00	          mov rdi, qword [rax + 0x1c48] 	      1292	normal.c	FUNCTION_4	ELSE_1	IF_76	CALL_99
0x400cfe3	      0xe800000000	                          call 0x400cfe8	      1292	normal.c	FUNCTION_4	ELSE_1	IF_76	CALL_99
0x400cfe8	            0x85c0	                           test eax, eax	      1292	normal.c	FUNCTION_4	ELSE_1	IF_76	CALL_99
0x400cfea	            0x7416	                            je 0x400d002	      1292	normal.c	FUNCTION_4	ELSE_1	IF_76	CALL_99
0x400cfec	    0xc70500000000	               mov dword [0x0400cff6], 0	      1293	normal.c	FUNCTION_4	ELSE_1	IF_76
0x400cff6	      0x41833c2400	                      cmp dword [r12], 0	      1301	normal.c	FUNCTION_4	ELSE_1	IF_77
0x400cffb	            0x742b	                            je 0x400d028	      1301	normal.c	FUNCTION_4	ELSE_1	IF_77
0x400cffd	      0xe9a9000000	                           jmp 0x400d0ab	      1301	normal.c	FUNCTION_4	ELSE_1	IF_77
0x400d002	      0x41833c2400	                      cmp dword [r12], 0	      1301	normal.c	FUNCTION_4	ELSE_1	IF_77
0x400d007	     0xf859e000000	                           jne 0x400d0ab	      1301	normal.c	FUNCTION_4	ELSE_1	IF_77
0x400d00d	    0x833d00000000	               cmp dword [0x0400d014], 0	      1302	normal.c	FUNCTION_4	ELSE_1	IF_77
0x400d014	            0x7412	                            je 0x400d028	      1302	normal.c	FUNCTION_4	ELSE_1	IF_77
0x400d016	    0x833d00000000	               cmp dword [0x0400d01d], 0	      1302	normal.c	FUNCTION_4	ELSE_1	IF_77
0x400d01d	            0x7509	                           jne 0x400d028	      1302	normal.c	FUNCTION_4	ELSE_1	IF_77
0x400d01f	    0x833d00000000	               cmp dword [0x0400d026], 0	      1302	normal.c	FUNCTION_4	ELSE_1	IF_77
0x400d026	            0x740e	                            je 0x400d036	      1302	normal.c	FUNCTION_4	ELSE_1	IF_77
0x400d028	    0x833d00000000	               cmp dword [0x0400d02f], 1	      1303	normal.c	FUNCTION_4	ELSE_1	IF_77
0x400d02f	            0x757a	                           jne 0x400d0ab	      1303	normal.c	FUNCTION_4	ELSE_1	IF_77
0x400d031	      0xe97b010000	                           jmp 0x400d1b1	      1303	normal.c	FUNCTION_4	ELSE_1	IF_77
0x400d036	      0xf644246c01	               test byte [rsp + 0x6c], 1	      1304	normal.c	FUNCTION_4	ELSE_1	IF_77
0x400d03b	            0x756e	                           jne 0x400d0ab	      1304	normal.c	FUNCTION_4	ELSE_1	IF_77
0x400d03d	      0xe800000000	                          call 0x400d042	      1305	normal.c	FUNCTION_4	ELSE_1	IF_77	CALL_100
0x400d042	            0x85c0	                           test eax, eax	      1305	normal.c	FUNCTION_4	ELSE_1	IF_77	CALL_100
0x400d044	            0x7465	                            je 0x400d0ab	      1305	normal.c	FUNCTION_4	ELSE_1	IF_77	CALL_100
0x400d046	    0x41837c240400	                  cmp dword [r12 + 4], 0	      1306	normal.c	FUNCTION_4	ELSE_1	IF_77
0x400d04c	            0x755d	                           jne 0x400d0ab	      1306	normal.c	FUNCTION_4	ELSE_1	IF_77
0x400d04e	    0x833d00000000	               cmp dword [0x0400d055], 1	      1308	normal.c	FUNCTION_4	ELSE_1	IF_77	IF_78
0x400d055	            0x7529	                           jne 0x400d080	      1308	normal.c	FUNCTION_4	ELSE_1	IF_77	IF_78
0x400d057	    0xc70500000000	               mov dword [0x0400d061], 1	      1310	normal.c	FUNCTION_4	ELSE_1	IF_77	IF_78
0x400d061	      0xe800000000	                          call 0x400d066	      1311	normal.c	FUNCTION_4	ELSE_1	IF_77	IF_78	CALL_101
0x400d066	    0xc70500000000	               mov dword [0x0400d070], 0	      1312	normal.c	FUNCTION_4	ELSE_1	IF_77	IF_78
0x400d070	    0x8b3d00000000	            mov edi, dword [0x0400d076] 	      1314	normal.c	FUNCTION_4	ELSE_1	IF_77	IF_79
0x400d076	            0x85ff	                           test edi, edi	      1314	normal.c	FUNCTION_4	ELSE_1	IF_77	IF_79
0x400d078	     0xf8591010000	                           jne 0x400d20f	      1314	normal.c	FUNCTION_4	ELSE_1	IF_77	IF_79
0x400d07e	            0xeb3e	                           jmp 0x400d0be	      1314	normal.c	FUNCTION_4	ELSE_1	IF_77	IF_79
0x400d080	    0x8b3d00000000	            mov edi, dword [0x0400d086] 	      1314	normal.c	FUNCTION_4	ELSE_1	IF_77	IF_79
0x400d086	            0x85ff	                           test edi, edi	      1314	normal.c	FUNCTION_4	ELSE_1	IF_77	IF_79
0x400d088	            0x7421	                            je 0x400d0ab	      1314	normal.c	FUNCTION_4	ELSE_1	IF_77	IF_79
0x400d08a	    0x833d00000000	               cmp dword [0x0400d091], 0	      1314	normal.c	FUNCTION_4	ELSE_1	IF_77	IF_79
0x400d091	            0x7518	                           jne 0x400d0ab	      1314	normal.c	FUNCTION_4	ELSE_1	IF_77	IF_79
0x400d093	    0x833d00000000	               cmp dword [0x0400d09a], 0	      1314	normal.c	FUNCTION_4	ELSE_1	IF_77	IF_79
0x400d09a	            0x750f	                           jne 0x400d0ab	      1314	normal.c	FUNCTION_4	ELSE_1	IF_77	IF_79
0x400d09c	      0xba01000000	                              mov edx, 1	      1315	normal.c	FUNCTION_4	ELSE_1	IF_77	CALL_102
0x400d0a1	      0xbe00000000	                              mov esi, 0	      1315	normal.c	FUNCTION_4	ELSE_1	IF_77	CALL_102
0x400d0a6	      0xe800000000	                          call 0x400d0ab	      1315	normal.c	FUNCTION_4	ELSE_1	IF_77	CALL_102
0x400d0ab	    0x833d00000000	               cmp dword [0x0400d0b2], 2	      1318	normal.c	FUNCTION_4	ELSE_1	IF_80
0x400d0b2	            0x750a	                           jne 0x400d0be	      1318	normal.c	FUNCTION_4	ELSE_1	IF_80
0x400d0b4	    0xc70500000000	               mov dword [0x0400d0be], 1	      1319	normal.c	FUNCTION_4	ELSE_1	IF_80
0x400d0be	      0x488b442450	            mov rax, qword [rsp + 0x50] 	      1322	normal.c	FUNCTION_4	ELSE_1
0x400d0c3	    0x488905000000	            mov qword [0x0400d0ca], rax 	      1322	normal.c	FUNCTION_4	ELSE_1
0x400d0ca	      0x488b442478	            mov rax, qword [rsp + 0x78] 	      1323	normal.c	FUNCTION_4	ELSE_1
0x400d0cf	    0x644833042528	                xor rax, qword fs:[0x28]	      1323	normal.c	FUNCTION_4	ELSE_1
0x400d0d8	     0xf849e010000	                            je 0x400d27c	      1323	normal.c	FUNCTION_4	ELSE_1
0x400d0de	      0xe994010000	                           jmp 0x400d277	      1323	normal.c	FUNCTION_4	ELSE_1
0x400d0e3	    0x832d00000000	               sub dword [0x0400d0ea], 1	       702	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1
0x400d0ea	      0xe957f2ffff	                           jmp 0x400c346	       702	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1
0x400d0ef	    0x832d00000000	               sub dword [0x0400d0f6], 1	       702	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1
0x400d0f6	      0xe959f2ffff	                           jmp 0x400c354	       702	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1
0x400d0fb	    0x830500000000	               add dword [0x0400d102], 1	       699	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1
0x400d102	      0xe800000000	                          call 0x400d107	       700	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_18
0x400d107	          0x4189c5	                           mov r13d, eax	       700	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_18
0x400d10a	    0x488b05000000	            mov rax, qword [0x0400d111] 	       701	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_19
0x400d111	          0x803800	                       cmp byte [rax], 0	       701	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_19
0x400d114	            0x74d9	                            je 0x400d0ef	       701	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_19
0x400d116	      0xe9def1ffff	                           jmp 0x400c2f9	       701	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_19
0x400d11b	    0x830500000000	               add dword [0x0400d122], 1	       888	normal.c	FUNCTION_4	ELSE_1	IF_32
0x400d122	    0x830500000000	               add dword [0x0400d129], 1	       889	normal.c	FUNCTION_4	ELSE_1	IF_32
0x400d129	    0xc70500000000	               mov dword [0x0400d133], 1	       892	normal.c	FUNCTION_4	ELSE_1	IF_32
0x400d133	    0x440fb77c2408	              movzx r15d, word [rsp + 8]	       922	normal.c	FUNCTION_4	ELSE_1	IF_32
0x400d139	      0x6641c1ef03	                             shr r15w, 3	       922	normal.c	FUNCTION_4	ELSE_1	IF_32
0x400d13e	        0x4183e701	                             and r15d, 1	       922	normal.c	FUNCTION_4	ELSE_1	IF_32
0x400d142	    0xc74424140000	               mov dword [rsp + 0x14], 0	       881	normal.c	FUNCTION_4	ELSE_1	IF_32
0x400d14a	    0xc74424100000	               mov dword [rsp + 0x10], 0	       880	normal.c	FUNCTION_4	ELSE_1	IF_32
0x400d152	      0x4c8d6c2440	                   lea r13, [rsp + 0x40]	       920	normal.c	FUNCTION_4	ELSE_1	IF_32	ELSE_10
0x400d157	      0xe91cf7ffff	                           jmp 0x400c878	       920	normal.c	FUNCTION_4	ELSE_1	IF_32	ELSE_10
0x400d15c	    0x8b0500000000	            mov eax, dword [0x0400d162] 	       948	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37
0x400d162	        0x89442410	             mov dword [rsp + 0x10], eax	       948	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37
0x400d166	    0xc70500000000	               mov dword [0x0400d170], 0	       949	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37
0x400d170	      0xe800000000	                          call 0x400d175	       954	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	CALL_43
0x400d175	        0x41894500	                    mov dword [r13], eax	       954	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	CALL_43
0x400d179	      0xe9b3f7ffff	                           jmp 0x400c931	       954	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	CALL_43
0x400d17e	      0xe800000000	                          call 0x400d183	       954	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	CALL_43
0x400d183	        0x41894500	                    mov dword [r13], eax	       954	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	CALL_43
0x400d187	      0x837c241c00	               cmp dword [rsp + 0x1c], 0	       956	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_42
0x400d18c	     0xf8560f7ffff	                           jne 0x400c8f2	       956	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_42
0x400d192	      0xe973f7ffff	                           jmp 0x400c90a	       956	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_42
0x400d197	    0xc70500000000	               mov dword [0x0400d1a1], 1	      1095	normal.c	FUNCTION_4	ELSE_1
0x400d1a1	      0x837c24401b	           cmp dword [rsp + 0x40], 0x1b 	      1097	normal.c	FUNCTION_4	ELSE_1	IF_59
0x400d1a6	     0xf859ffaffff	                           jne 0x400cc4b	      1097	normal.c	FUNCTION_4	ELSE_1	IF_59
0x400d1ac	      0xe93afaffff	                           jmp 0x400cbeb	      1097	normal.c	FUNCTION_4	ELSE_1	IF_59
0x400d1b1	      0xf644246c01	               test byte [rsp + 0x6c], 1	      1304	normal.c	FUNCTION_4	ELSE_1	IF_77
0x400d1b6	     0xf8502ffffff	                           jne 0x400d0be	      1304	normal.c	FUNCTION_4	ELSE_1	IF_77
0x400d1bc	      0xe97cfeffff	                           jmp 0x400d03d	      1304	normal.c	FUNCTION_4	ELSE_1	IF_77
0x400d1c1	    0x440fb77c2408	              movzx r15d, word [rsp + 8]	       922	normal.c	FUNCTION_4	ELSE_1	IF_32
0x400d1c7	      0x6641c1ef03	                             shr r15w, 3	       922	normal.c	FUNCTION_4	ELSE_1	IF_32
0x400d1cc	        0x4183e701	                             and r15d, 1	       922	normal.c	FUNCTION_4	ELSE_1	IF_32
0x400d1d0	    0xc74424140000	               mov dword [rsp + 0x14], 0	       881	normal.c	FUNCTION_4	ELSE_1	IF_32
0x400d1d8	      0x4c8d6c2440	                   lea r13, [rsp + 0x40]	       920	normal.c	FUNCTION_4	ELSE_1	IF_32	ELSE_10
0x400d1dd	      0xe996f6ffff	                           jmp 0x400c878	       920	normal.c	FUNCTION_4	ELSE_1	IF_32	ELSE_10
0x400d1e2	      0x44887c2408	                mov byte [rsp + 8], r15b	      1005	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_48
0x400d1e7	    0x833d00000000	               cmp dword [0x0400d1ee], 0	      1005	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_48
0x400d1ee	     0xf843ef8ffff	                            je 0x400ca32	      1005	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_48
0x400d1f4	          0x4584ff	                         test r15b, r15b	      1005	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_48
0x400d1f7	     0xf855bf8ffff	                           jne 0x400ca58	      1005	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_48
0x400d1fd	      0xe930f8ffff	                           jmp 0x400ca32	      1005	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_48
0x400d202	            0x85db	                           test ebx, ebx	      1089	normal.c	FUNCTION_4	ELSE_1	IF_57
0x400d204	     0xf84c6f9ffff	                            je 0x400cbd0	      1089	normal.c	FUNCTION_4	ELSE_1	IF_57
0x400d20a	      0xe9aef9ffff	                           jmp 0x400cbbd	      1089	normal.c	FUNCTION_4	ELSE_1	IF_57
0x400d20f	    0x833d00000000	               cmp dword [0x0400d216], 0	      1314	normal.c	FUNCTION_4	ELSE_1	IF_77	IF_79
0x400d216	     0xf8477feffff	                            je 0x400d093	      1314	normal.c	FUNCTION_4	ELSE_1	IF_77	IF_79
0x400d21c	      0xe99dfeffff	                           jmp 0x400d0be	      1314	normal.c	FUNCTION_4	ELSE_1	IF_77	IF_79
0x400d221	    0x440fb77c2408	              movzx r15d, word [rsp + 8]	       922	normal.c	FUNCTION_4	ELSE_1	IF_32
0x400d227	      0x6641c1ef03	                             shr r15w, 3	       922	normal.c	FUNCTION_4	ELSE_1	IF_32
0x400d22c	        0x4183e701	                             and r15d, 1	       922	normal.c	FUNCTION_4	ELSE_1	IF_32
0x400d230	    0xc74424140100	               mov dword [rsp + 0x14], 1	       909	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	IF_34	IF_35
0x400d238	    0xc74424100000	               mov dword [rsp + 0x10], 0	       922	normal.c	FUNCTION_4	ELSE_1	IF_32
0x400d240	      0x4c8d6c244c	                   lea r13, [rsp + 0x4c]	       907	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	IF_34
0x400d245	      0xe92ef6ffff	                           jmp 0x400c878	       907	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	IF_34
0x400d24a	      0xe800000000	                          call 0x400d24f	       954	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	CALL_43
0x400d24f	        0x41894500	                    mov dword [r13], eax	       954	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	CALL_43
0x400d253	      0xe9b2f6ffff	                           jmp 0x400c90a	       954	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	CALL_43
0x400d258	    0x8b3500000000	            mov esi, dword [0x0400d25e] 	       948	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37
0x400d25e	        0x89742410	             mov dword [rsp + 0x10], esi	       948	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37
0x400d262	    0xc70500000000	               mov dword [0x0400d26c], 0	       949	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37
0x400d26c	        0x4883f802	                              cmp rax, 2	       950	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_41
0x400d270	            0x75d8	                           jne 0x400d24a	       950	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_41
0x400d272	      0xe964f6ffff	                           jmp 0x400c8db	       950	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_41
0x400d277	      0xe800000000	                          call 0x400d27c	      1323	normal.c	FUNCTION_4	ELSE_1
0x400d27c	    0x4881c4880000	                           add rsp, 0x88	      1323	normal.c	FUNCTION_4	ELSE_1
0x400d283	              0x5b	                                 pop rbx	      1323	normal.c	FUNCTION_4	ELSE_1
0x400d284	              0x5d	                                 pop rbp	      1323	normal.c	FUNCTION_4	ELSE_1
0x400d285	            0x415c	                                 pop r12	      1323	normal.c	FUNCTION_4	ELSE_1
0x400d287	            0x415d	                                 pop r13	      1323	normal.c	FUNCTION_4	ELSE_1
0x400d289	            0x415e	                                 pop r14	      1323	normal.c	FUNCTION_4	ELSE_1
0x400d28b	            0x415f	                                 pop r15	      1323	normal.c	FUNCTION_4	ELSE_1
0x400d28d	              0xc3	                                     ret	      1323	normal.c	FUNCTION_4	ELSE_1
nv_nop	CALL,0:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,0:IF,0	1
0x40001cf	            0xf3c3	                                     ret	      4155	normal.c	FUNCTION_38
checkclearop	CALL,1:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,0:IF,1	8
0x4000283	            0x8b07	                    mov eax, dword [rdi]	      3653	normal.c	FUNCTION_22	IF_1
0x4000285	            0x85c0	                           test eax, eax	      3653	normal.c	FUNCTION_22	IF_1
0x4000287	            0x7412	                            je 0x400029b	      3653	normal.c	FUNCTION_22	IF_1
0x4000289	        0x4883ec08	                              sub rsp, 8	      3652	normal.c	FUNCTION_22
0x400028d	      0xe8a6ffffff	                    call sym.clearopbeep	      3655	normal.c	FUNCTION_22	CALL_1
0x4000292	      0xb801000000	                              mov eax, 1	      3656	normal.c	FUNCTION_22
0x4000297	        0x4883c408	                              add rsp, 8	      3657	normal.c	FUNCTION_22
0x400029b	            0xf3c3	                                     ret	      3657	normal.c	FUNCTION_22
nv_hor_scrollbar	CALL,2:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,0:IF,1	10
0x40002cf	        0x4883ec08	                              sub rsp, 8	      5263	normal.c	FUNCTION_53
0x40002d3	          0x488b3f	                    mov rdi, qword [rdi]	      5264	normal.c	FUNCTION_53	IF_1
0x40002d6	          0x833f00	                      cmp dword [rdi], 0	      5264	normal.c	FUNCTION_53	IF_1
0x40002d9	            0x7405	                            je 0x40002e0	      5264	normal.c	FUNCTION_53	IF_1
0x40002db	      0xe858ffffff	                    call sym.clearopbeep	      5265	normal.c	FUNCTION_53	CALL_1
0x40002e0	      0xbe00000000	                              mov esi, 0	      5268	normal.c	FUNCTION_53	CALL_2
0x40002e5	    0x488b3d000000	            mov rdi, qword [0x040002ec] 	      5268	normal.c	FUNCTION_53	CALL_2
0x40002ec	      0xe800000000	                          call 0x40002f1	      5268	normal.c	FUNCTION_53	CALL_2
0x40002f1	        0x4883c408	                              add rsp, 8	      5269	normal.c	FUNCTION_53
0x40002f5	              0xc3	                                     ret	      5269	normal.c	FUNCTION_53
pop_showcmd	CALL,2:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,0:IF,1	10
0x40066a8	    0x833d00000000	               cmp dword [0x040066af], 0	      3945	normal.c	FUNCTION_33	IF_1
0x40066af	            0x7421	                            je 0x40066d2	      3945	normal.c	FUNCTION_33	IF_1
0x40066b1	        0x4883ec08	                              sub rsp, 8	      3944	normal.c	FUNCTION_33
0x40066b5	      0xba29000000	                           mov edx, 0x29	       110	string3.h	FUNCTION_147	CALL_3
0x40066ba	      0xbe00000000	                              mov esi, 0	       110	string3.h	FUNCTION_147	CALL_3
0x40066bf	      0xbf00000000	                              mov edi, 0	       110	string3.h	FUNCTION_147	CALL_3
0x40066c4	      0xe800000000	                          call 0x40066c9	       110	string3.h	FUNCTION_147	CALL_3
0x40066c9	      0xe8c2beffff	                call sym.display_showcmd	      3950	normal.c	FUNCTION_33	CALL_2
0x40066ce	        0x4883c408	                              add rsp, 8	      3951	normal.c	FUNCTION_33
0x40066d2	            0xf3c3	                                     ret	      3951	normal.c	FUNCTION_33
nv_bck_word	CALL,3:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,1:IF,2	27
0x400140a	              0x53	                                push rbx	      8692	normal.c	ELSE_1	FUNCTION_118
0x400140b	          0x4889fb	                            mov rbx, rdi	      8692	normal.c	ELSE_1	FUNCTION_118
0x400140e	          0x488b07	                    mov rax, qword [rdi]	      8693	normal.c	ELSE_1	FUNCTION_118
0x4001411	    0xc74008000000	                  mov dword [rax + 8], 0	      8693	normal.c	ELSE_1	FUNCTION_118
0x4001418	          0x488b07	                    mov rax, qword [rdi]	      8694	normal.c	ELSE_1	FUNCTION_118
0x400141b	    0xc74014000000	               mov dword [rax + 0x14], 0	      8694	normal.c	ELSE_1	FUNCTION_118
0x4001422	    0x488b05000000	            mov rax, qword [0x04001429] 	      8695	normal.c	ELSE_1	FUNCTION_118
0x4001429	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      8695	normal.c	ELSE_1	FUNCTION_118
0x4001430	          0x8b7738	            mov esi, dword [rdi + 0x38] 	      8696	normal.c	ELSE_1	FUNCTION_118	IF_1	CALL_1
0x4001433	        0x488b7f30	            mov rdi, qword [rdi + 0x30] 	      8696	normal.c	ELSE_1	FUNCTION_118	IF_1	CALL_1
0x4001437	      0xba00000000	                              mov edx, 0	      8696	normal.c	ELSE_1	FUNCTION_118	IF_1	CALL_1
0x400143c	      0xe800000000	                          call 0x4001441	      8696	normal.c	ELSE_1	FUNCTION_118	IF_1	CALL_1
0x4001441	            0x85c0	                           test eax, eax	      8696	normal.c	ELSE_1	FUNCTION_118	IF_1	CALL_1
0x4001443	            0x750a	                           jne 0x400144f	      8696	normal.c	ELSE_1	FUNCTION_118	IF_1	CALL_1
0x4001445	          0x488b3b	                    mov rdi, qword [rbx]	      8697	normal.c	ELSE_1	FUNCTION_118	CALL_2
0x4001448	      0xe8ebedffff	                    call sym.clearopbeep	      8697	normal.c	ELSE_1	FUNCTION_118	CALL_2
0x400144d	            0xeb1f	                           jmp 0x400146e	      8697	normal.c	ELSE_1	FUNCTION_118	CALL_2
0x400144f	    0xf60500000000	               test byte [0x04001456], 4	      8699	normal.c	FUNCTION_118	IF_2
0x4001456	            0x7416	                            je 0x400146e	      8699	normal.c	FUNCTION_118	IF_2
0x4001458	    0x833d00000000	               cmp dword [0x0400145f], 0	      8699	normal.c	FUNCTION_118	IF_2
0x400145f	            0x740d	                            je 0x400146e	      8699	normal.c	FUNCTION_118	IF_2
0x4001461	          0x488b03	                    mov rax, qword [rbx]	      8699	normal.c	FUNCTION_118	IF_2
0x4001464	          0x833800	                      cmp dword [rax], 0	      8699	normal.c	FUNCTION_118	IF_2
0x4001467	            0x7505	                           jne 0x400146e	      8699	normal.c	FUNCTION_118	IF_2
0x4001469	      0xe800000000	                          call 0x400146e	      8700	normal.c	FUNCTION_118	ELSE_1	CALL_3
0x400146e	              0x5b	                                 pop rbx	      8702	normal.c	FUNCTION_118	ELSE_1
0x400146f	              0xc3	                                     ret	      8702	normal.c	FUNCTION_118	ELSE_1
nv_tabline	CALL,2:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,0:IF,1	9
0x40002ae	        0x4883ec08	                              sub rsp, 8	      5278	normal.c	FUNCTION_54
0x40002b2	          0x488b3f	                    mov rdi, qword [rdi]	      5279	normal.c	FUNCTION_54	IF_1
0x40002b5	          0x833f00	                      cmp dword [rdi], 0	      5279	normal.c	FUNCTION_54	IF_1
0x40002b8	            0x7405	                            je 0x40002bf	      5279	normal.c	FUNCTION_54	IF_1
0x40002ba	      0xe879ffffff	                    call sym.clearopbeep	      5280	normal.c	FUNCTION_54	CALL_1
0x40002bf	    0x8b3d00000000	            mov edi, dword [0x040002c5] 	      5283	normal.c	FUNCTION_54	CALL_2
0x40002c5	      0xe800000000	                          call 0x40002ca	      5283	normal.c	FUNCTION_54	CALL_2
0x40002ca	        0x4883c408	                              add rsp, 8	      5284	normal.c	FUNCTION_54
0x40002ce	              0xc3	                                     ret	      5284	normal.c	FUNCTION_54
nv_end	CALL,2:SWITCH,0:DO,0:FOR,0:functions,0:WHILE,0:ELSE,0:IF,1	14
0x4000940	              0x53	                                push rbx	      6277	normal.c	FUNCTION_75
0x4000941	          0x4889fb	                            mov rbx, rdi	      6277	normal.c	FUNCTION_75
0x4000944	        0x837f3800	               cmp dword [rdi + 0x38], 0	      6278	normal.c	FUNCTION_75	IF_1
0x4000948	            0x7509	                           jne 0x4000953	      6278	normal.c	FUNCTION_75	IF_1
0x400094a	    0xf60500000000	               test byte [0x04000951], 4	      6278	normal.c	FUNCTION_75	IF_1
0x4000951	            0x7417	                            je 0x400096a	      6278	normal.c	FUNCTION_75	IF_1
0x4000953	    0xc74338010000	               mov dword [rbx + 0x38], 1	      6280	normal.c	FUNCTION_75	IF_1
0x400095a	          0x4889df	                            mov rdi, rbx	      6281	normal.c	FUNCTION_75	IF_1	CALL_1
0x400095d	      0xe8d4fcffff	                        call sym.nv_goto	      6281	normal.c	FUNCTION_75	IF_1	CALL_1
0x4000962	    0x48c743300100	               mov qword [rbx + 0x30], 1	      6282	normal.c	FUNCTION_75	IF_1
0x400096a	          0x4889df	                            mov rdi, rbx	      6284	normal.c	FUNCTION_75	CALL_2
0x400096d	      0xe844ffffff	                      call sym.nv_dollar	      6284	normal.c	FUNCTION_75	CALL_2
0x4000972	              0x5b	                                 pop rbx	      6285	normal.c	FUNCTION_75
0x4000973	              0xc3	                                     ret	      6285	normal.c	FUNCTION_75
