interactive_add	FOR,0:DO,0:CALL,2:ELSE,0:IF,0:functions,0:SWITCH,0:WHILE,0	35
0xab2	              0x55	                                push rbp	       204	add.c	FUNCTION_9
0xab3	          0x4889e5	                            mov rbp, rsp	       204	add.c	FUNCTION_9
0xab6	        0x4883ec40	                           sub rsp, 0x40	       204	add.c	FUNCTION_9
0xaba	          0x897ddc	             mov dword [rbp - 0x24], edi	       204	add.c	FUNCTION_9
0xabd	        0x488975d0	             mov qword [rbp - 0x30], rsi	       204	add.c	FUNCTION_9
0xac1	        0x488955c8	             mov qword [rbp - 0x38], rdx	       204	add.c	FUNCTION_9
0xac5	          0x894dd8	             mov dword [rbp - 0x28], ecx	       204	add.c	FUNCTION_9
0xac8	    0x64488b042528	                mov rax, qword fs:[0x28]	       204	add.c	FUNCTION_9
0xad1	        0x488945f8	                mov qword [rbp - 8], rax	       204	add.c	FUNCTION_9
0xad5	            0x31c0	                            xor eax, eax	       204	add.c	FUNCTION_9
0xad7	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       207	add.c	FUNCTION_9	CALL_1
0xadb	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       207	add.c	FUNCTION_9	CALL_1
0xadf	        0x488d45e0	                   lea rax, [rbp - 0x20]	       207	add.c	FUNCTION_9	CALL_1
0xae3	          0x4989c8	                             mov r8, rcx	       207	add.c	FUNCTION_9	CALL_1
0xae6	          0x4889d1	                            mov rcx, rdx	       207	add.c	FUNCTION_9	CALL_1
0xae9	      0xba1a000000	                           mov edx, 0x1a	       207	add.c	FUNCTION_9	CALL_1
0xaee	      0xbe00000000	                              mov esi, 0	       207	add.c	FUNCTION_9	CALL_1
0xaf3	          0x4889c7	                            mov rdi, rax	       207	add.c	FUNCTION_9	CALL_1
0xaf6	      0xe800000000	                          call 0x4000b3b	       207	add.c	FUNCTION_9	CALL_1
0xafb	        0x837dd800	               cmp dword [rbp - 0x28], 0	       213	add.c	FUNCTION_9	CALL_2
0xaff	            0x7407	                            je 0x4000b48	       213	add.c	FUNCTION_9	CALL_2
0xb01	      0xb900000000	                              mov ecx, 0	       213	add.c	FUNCTION_9	CALL_2
0xb06	            0xeb05	                           jmp 0x4000b4d	       213	add.c	FUNCTION_9	CALL_2
0xb08	      0xb900000000	                              mov ecx, 0	       213	add.c	FUNCTION_9	CALL_2
0xb0d	        0x488d45e0	                   lea rax, [rbp - 0x20]	       213	add.c	FUNCTION_9	CALL_2
0xb11	          0x4889c2	                            mov rdx, rax	       213	add.c	FUNCTION_9	CALL_2
0xb14	          0x4889ce	                            mov rsi, rcx	       213	add.c	FUNCTION_9	CALL_2
0xb17	      0xbf00000000	                              mov edi, 0	       213	add.c	FUNCTION_9	CALL_2
0xb1c	      0xe800000000	                          call 0x4000b61	       213	add.c	FUNCTION_9	CALL_2
0xb21	        0x488b75f8	                mov rsi, qword [rbp - 8]	       216	add.c	FUNCTION_9
0xb25	    0x644833342528	                xor rsi, qword fs:[0x28]	       216	add.c	FUNCTION_9
0xb2e	            0x7405	                            je 0x4000b75	       216	add.c	FUNCTION_9
0xb30	      0xe800000000	                          call 0x4000b75	       216	add.c	FUNCTION_9
0xb35	              0xc9	                                   leave	       216	add.c	FUNCTION_9
0xb36	              0xc3	                                     ret	       216	add.c	FUNCTION_9
edit_patch	FOR,0:DO,0:CALL,27:ELSE,0:IF,7:functions,0:SWITCH,0:WHILE,0	157
0xb37	              0x55	                                push rbp	       219	add.c	FUNCTION_10
0xb38	          0x4889e5	                            mov rbp, rsp	       219	add.c	FUNCTION_10
0xb3b	    0x4881ec100a00	                          sub rsp, 0xa10	       219	add.c	FUNCTION_10
0xb42	    0x89bd0cf6ffff	            mov dword [rbp - 0x9f4], edi	       219	add.c	FUNCTION_10
0xb48	    0x4889b500f6ff	            mov qword [rbp - 0xa00], rsi	       219	add.c	FUNCTION_10
0xb4f	    0x488995f8f5ff	            mov qword [rbp - 0xa08], rdx	       219	add.c	FUNCTION_10
0xb56	    0x64488b042528	                mov rax, qword fs:[0x28]	       219	add.c	FUNCTION_10
0xb5f	        0x488945f8	                mov qword [rbp - 8], rax	       219	add.c	FUNCTION_10
0xb63	            0x31c0	                            xor eax, eax	       219	add.c	FUNCTION_10
0xb65	      0xbf00000000	                              mov edi, 0	       220	add.c	FUNCTION_10	CALL_1
0xb6a	      0xb800000000	                              mov eax, 0	       220	add.c	FUNCTION_10	CALL_1
0xb6f	      0xe800000000	                          call 0x4000bb4	       220	add.c	FUNCTION_10	CALL_1
0xb74	    0x48898518f6ff	            mov qword [rbp - 0x9e8], rax	       220	add.c	FUNCTION_10	CALL_1
0xb7b	    0x48c78580f6ff	              mov qword [rbp - 0x980], 0	       221	add.c	FUNCTION_10
0xb86	    0x48c78588f6ff	              mov qword [rbp - 0x978], 0	       221	add.c	FUNCTION_10
0xb91	    0x48c78590f6ff	              mov qword [rbp - 0x970], 0	       221	add.c	FUNCTION_10
0xb9c	    0x48c78598f6ff	              mov qword [rbp - 0x968], 0	       221	add.c	FUNCTION_10
0xba7	    0x48c785a0f6ff	              mov qword [rbp - 0x960], 0	       221	add.c	FUNCTION_10
0xbb2	    0x488d9520f6ff	                  lea rdx, [rbp - 0x9e0]	       223	add.c	FUNCTION_10
0xbb9	      0xb800000000	                              mov eax, 0	       223	add.c	FUNCTION_10
0xbbe	      0xb90c000000	                            mov ecx, 0xc	       223	add.c	FUNCTION_10
0xbc3	          0x4889d7	                            mov rdi, rdx	       223	add.c	FUNCTION_10
0xbc6	          0xf348ab	              rep stosq qword [rdi], rax	       223	add.c	FUNCTION_10
0xbc9	    0x48c78528f6ff	              mov qword [rbp - 0x9d8], 0	       223	add.c	FUNCTION_10
0xbd4	    0x48c78538f6ff	              mov qword [rbp - 0x9c8], 0	       223	add.c	FUNCTION_10
0xbdf	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	       228	add.c	FUNCTION_10
0xbe6	    0x48898598f6ff	            mov qword [rbp - 0x968], rax	       228	add.c	FUNCTION_10
0xbed	      0xbe00000000	                              mov esi, 0	       230	add.c	FUNCTION_10	CALL_2
0xbf2	      0xbf00000000	                              mov edi, 0	       230	add.c	FUNCTION_10	CALL_2
0xbf7	      0xe800000000	                          call 0x4000c3c	       230	add.c	FUNCTION_10	CALL_2
0xbfc	      0xbf00000000	                              mov edi, 0	       232	add.c	FUNCTION_10	IF_1	CALL_3
0xc01	      0xe800000000	                          call 0x4000c46	       232	add.c	FUNCTION_10	IF_1	CALL_3
0xc06	            0x85c0	                           test eax, eax	       232	add.c	FUNCTION_10	IF_1	CALL_3
0xc08	            0x7917	                           jns 0x4000c61	       232	add.c	FUNCTION_10	IF_1	CALL_3
0xc0a	      0xbf00000000	                              mov edi, 0	       233	add.c	FUNCTION_10	CALL_5
0xc0f	      0xe823f6ffff	                               call sym.	       233	add.c	FUNCTION_10	CALL_5
0xc14	          0x4889c7	                            mov rdi, rax	       233	add.c	FUNCTION_10	CALL_5
0xc17	      0xb800000000	                              mov eax, 0	       233	add.c	FUNCTION_10	CALL_5
0xc1c	      0xe800000000	                          call 0x4000c61	       233	add.c	FUNCTION_10	CALL_5
0xc21	    0x488b95f8f5ff	            mov rdx, qword [rbp - 0xa08]	       235	add.c	FUNCTION_10	CALL_6
0xc28	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       235	add.c	FUNCTION_10	CALL_6
0xc2f	          0x4889d6	                            mov rsi, rdx	       235	add.c	FUNCTION_10	CALL_6
0xc32	          0x4889c7	                            mov rdi, rax	       235	add.c	FUNCTION_10	CALL_6
0xc35	      0xe800000000	                          call 0x4000c7a	       235	add.c	FUNCTION_10	CALL_6
0xc3a	    0xc7857cfcffff	              mov dword [rbp - 0x384], 7	       236	add.c	FUNCTION_10
0xc44	    0x488d9540f7ff	                  lea rdx, [rbp - 0x8c0]	       238	add.c	FUNCTION_10	CALL_7
0xc4b	    0x488bb500f6ff	            mov rsi, qword [rbp - 0xa00]	       238	add.c	FUNCTION_10	CALL_7
0xc52	    0x8b850cf6ffff	            mov eax, dword [rbp - 0x9f4]	       238	add.c	FUNCTION_10	CALL_7
0xc58	      0xb900000000	                              mov ecx, 0	       238	add.c	FUNCTION_10	CALL_7
0xc5d	            0x89c7	                            mov edi, eax	       238	add.c	FUNCTION_10	CALL_7
0xc5f	      0xe800000000	                          call 0x4000ca4	       238	add.c	FUNCTION_10	CALL_7
0xc64	    0x89850cf6ffff	            mov dword [rbp - 0x9f4], eax	       238	add.c	FUNCTION_10	CALL_7
0xc6a	    0xc78598fcffff	          mov dword [rbp - 0x368], 0x10 	       239	add.c	FUNCTION_10
0xc74	    0xc78578fcffff	              mov dword [rbp - 0x388], 0	       240	add.c	FUNCTION_10
0xc7e	     0xfb68573fcff	           movzx eax, byte [rbp - 0x38d]	       241	add.c	FUNCTION_10
0xc85	          0x83c802	                               or eax, 2	       241	add.c	FUNCTION_10
0xc88	    0x888573fcffff	              mov byte [rbp - 0x38d], al	       241	add.c	FUNCTION_10
0xc8e	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	       242	add.c	FUNCTION_10	CALL_8
0xc95	      0xbab6010000	                          mov edx, 0x1b6	       242	add.c	FUNCTION_10	CALL_8
0xc9a	      0xbe41000000	                           mov esi, 0x41	       242	add.c	FUNCTION_10	CALL_8
0xc9f	          0x4889c7	                            mov rdi, rax	       242	add.c	FUNCTION_10	CALL_8
0xca2	      0xb800000000	                              mov eax, 0	       242	add.c	FUNCTION_10	CALL_8
0xca7	      0xe800000000	                          call 0x4000cec	       242	add.c	FUNCTION_10	CALL_8
0xcac	    0x898514f6ffff	            mov dword [rbp - 0x9ec], eax	       242	add.c	FUNCTION_10	CALL_8
0xcb2	    0x83bd14f6ffff	              cmp dword [rbp - 0x9ec], 0	       243	add.c	FUNCTION_10	IF_2
0xcb9	            0x7924	                           jns 0x4000d1f	       243	add.c	FUNCTION_10	IF_2
0xcbb	      0xbf00000000	                              mov edi, 0	       244	add.c	FUNCTION_10	CALL_10
0xcc0	      0xe872f5ffff	                               call sym.	       244	add.c	FUNCTION_10	CALL_10
0xcc5	          0x4889c2	                            mov rdx, rax	       244	add.c	FUNCTION_10	CALL_10
0xcc8	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	       244	add.c	FUNCTION_10	CALL_10
0xccf	          0x4889c6	                            mov rsi, rax	       244	add.c	FUNCTION_10	CALL_10
0xcd2	          0x4889d7	                            mov rdi, rdx	       244	add.c	FUNCTION_10	CALL_10
0xcd5	      0xb800000000	                              mov eax, 0	       244	add.c	FUNCTION_10	CALL_10
0xcda	      0xe800000000	                          call 0x4000d1f	       244	add.c	FUNCTION_10	CALL_10
0xcdf	    0x8b8514f6ffff	            mov eax, dword [rbp - 0x9ec]	       245	add.c	FUNCTION_10	CALL_11
0xce5	      0xbe00000000	                              mov esi, 0	       245	add.c	FUNCTION_10	CALL_11
0xcea	            0x89c7	                            mov edi, eax	       245	add.c	FUNCTION_10	CALL_11
0xcec	      0xe800000000	                          call 0x4000d31	       245	add.c	FUNCTION_10	CALL_11
0xcf1	    0x48898538fdff	            mov qword [rbp - 0x2c8], rax	       245	add.c	FUNCTION_10	CALL_11
0xcf8	    0xc78540fdffff	              mov dword [rbp - 0x2c0], 1	       246	add.c	FUNCTION_10
0xd02	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       247	add.c	FUNCTION_10	IF_3	CALL_12
0xd09	      0xbe00000000	                              mov esi, 0	       247	add.c	FUNCTION_10	IF_3	CALL_12
0xd0e	          0x4889c7	                            mov rdi, rax	       247	add.c	FUNCTION_10	IF_3	CALL_12
0xd11	      0xe800000000	                          call 0x4000d56	       247	add.c	FUNCTION_10	IF_3	CALL_12
0xd16	            0x85c0	                           test eax, eax	       247	add.c	FUNCTION_10	IF_3	CALL_12
0xd18	            0x7417	                            je 0x4000d71	       247	add.c	FUNCTION_10	IF_3	CALL_12
0xd1a	      0xbf00000000	                              mov edi, 0	       248	add.c	FUNCTION_10	CALL_14
0xd1f	      0xe813f5ffff	                               call sym.	       248	add.c	FUNCTION_10	CALL_14
0xd24	          0x4889c7	                            mov rdi, rax	       248	add.c	FUNCTION_10	CALL_14
0xd27	      0xb800000000	                              mov eax, 0	       248	add.c	FUNCTION_10	CALL_14
0xd2c	      0xe800000000	                          call 0x4000d71	       248	add.c	FUNCTION_10	CALL_14
0xd31	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	       250	add.c	FUNCTION_10	IF_4	CALL_15
0xd38	      0xba00000000	                              mov edx, 0	       250	add.c	FUNCTION_10	IF_4	CALL_15
0xd3d	      0xbe00000000	                              mov esi, 0	       250	add.c	FUNCTION_10	IF_4	CALL_15
0xd42	          0x4889c7	                            mov rdi, rax	       250	add.c	FUNCTION_10	IF_4	CALL_15
0xd45	      0xe800000000	                          call 0x4000d8a	       250	add.c	FUNCTION_10	IF_4	CALL_15
0xd4a	            0x85c0	                           test eax, eax	       250	add.c	FUNCTION_10	IF_4	CALL_15
0xd4c	            0x7417	                            je 0x4000da5	       250	add.c	FUNCTION_10	IF_4	CALL_15
0xd4e	      0xbf00000000	                              mov edi, 0	       251	add.c	FUNCTION_10	CALL_17
0xd53	      0xe8dff4ffff	                               call sym.	       251	add.c	FUNCTION_10	CALL_17
0xd58	          0x4889c7	                            mov rdi, rax	       251	add.c	FUNCTION_10	CALL_17
0xd5b	      0xb800000000	                              mov eax, 0	       251	add.c	FUNCTION_10	CALL_17
0xd60	      0xe800000000	                          call 0x4000da5	       251	add.c	FUNCTION_10	CALL_17
0xd65	    0x488d95b0f6ff	                  lea rdx, [rbp - 0x950]	       253	add.c	FUNCTION_10	IF_5	CALL_18
0xd6c	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	       253	add.c	FUNCTION_10	IF_5	CALL_18
0xd73	          0x4889d6	                            mov rsi, rdx	       253	add.c	FUNCTION_10	IF_5	CALL_18
0xd76	          0x4889c7	                            mov rdi, rax	       253	add.c	FUNCTION_10	IF_5	CALL_18
0xd79	      0xe800000000	                          call 0x4000dbe	       253	add.c	FUNCTION_10	IF_5	CALL_18
0xd7e	            0x85c0	                           test eax, eax	       253	add.c	FUNCTION_10	IF_5	CALL_18
0xd80	            0x7424	                            je 0x4000de6	       253	add.c	FUNCTION_10	IF_5	CALL_18
0xd82	      0xbf00000000	                              mov edi, 0	       254	add.c	FUNCTION_10	CALL_20
0xd87	      0xe8abf4ffff	                               call sym.	       254	add.c	FUNCTION_10	CALL_20
0xd8c	          0x4889c2	                            mov rdx, rax	       254	add.c	FUNCTION_10	CALL_20
0xd8f	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	       254	add.c	FUNCTION_10	CALL_20
0xd96	          0x4889c6	                            mov rsi, rax	       254	add.c	FUNCTION_10	CALL_20
0xd99	          0x4889d7	                            mov rdi, rdx	       254	add.c	FUNCTION_10	CALL_20
0xd9c	      0xb800000000	                              mov eax, 0	       254	add.c	FUNCTION_10	CALL_20
0xda1	      0xe800000000	                          call 0x4000de6	       254	add.c	FUNCTION_10	CALL_20
0xda6	    0x488b85e0f6ff	            mov rax, qword [rbp - 0x920]	       255	add.c	FUNCTION_10	IF_6
0xdad	          0x4885c0	                           test rax, rax	       255	add.c	FUNCTION_10	IF_6
0xdb0	            0x7517	                           jne 0x4000e09	       255	add.c	FUNCTION_10	IF_6
0xdb2	      0xbf00000000	                              mov edi, 0	       256	add.c	FUNCTION_10	CALL_22
0xdb7	      0xe87bf4ffff	                               call sym.	       256	add.c	FUNCTION_10	CALL_22
0xdbc	          0x4889c7	                            mov rdi, rax	       256	add.c	FUNCTION_10	CALL_22
0xdbf	      0xb800000000	                              mov eax, 0	       256	add.c	FUNCTION_10	CALL_22
0xdc4	      0xe800000000	                          call 0x4000e09	       256	add.c	FUNCTION_10	CALL_22
0xdc9	     0xfb68568f6ff	           movzx eax, byte [rbp - 0x998]	       258	add.c	FUNCTION_10
0xdd0	          0x83c808	                               or eax, 8	       258	add.c	FUNCTION_10
0xdd3	    0x888568f6ffff	              mov byte [rbp - 0x998], al	       258	add.c	FUNCTION_10
0xdd9	    0x488d8580f6ff	                  lea rax, [rbp - 0x980]	       259	add.c	FUNCTION_10
0xde0	    0x48898520f6ff	            mov qword [rbp - 0x9e0], rax	       259	add.c	FUNCTION_10
0xde7	    0x488d8520f6ff	                  lea rax, [rbp - 0x9e0]	       260	add.c	FUNCTION_10	IF_7	CALL_23
0xdee	          0x4889c7	                            mov rdi, rax	       260	add.c	FUNCTION_10	IF_7	CALL_23
0xdf1	      0xe800000000	                          call 0x4000e36	       260	add.c	FUNCTION_10	IF_7	CALL_23
0xdf6	            0x85c0	                           test eax, eax	       260	add.c	FUNCTION_10	IF_7	CALL_23
0xdf8	            0x7424	                            je 0x4000e5e	       260	add.c	FUNCTION_10	IF_7	CALL_23
0xdfa	      0xbf00000000	                              mov edi, 0	       261	add.c	FUNCTION_10	CALL_25
0xdff	      0xe833f4ffff	                               call sym.	       261	add.c	FUNCTION_10	CALL_25
0xe04	          0x4889c2	                            mov rdx, rax	       261	add.c	FUNCTION_10	CALL_25
0xe07	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	       261	add.c	FUNCTION_10	CALL_25
0xe0e	          0x4889c6	                            mov rsi, rax	       261	add.c	FUNCTION_10	CALL_25
0xe11	          0x4889d7	                            mov rdi, rdx	       261	add.c	FUNCTION_10	CALL_25
0xe14	      0xb800000000	                              mov eax, 0	       261	add.c	FUNCTION_10	CALL_25
0xe19	      0xe800000000	                          call 0x4000e5e	       261	add.c	FUNCTION_10	CALL_25
0xe1e	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	       263	add.c	FUNCTION_10	CALL_26
0xe25	          0x4889c7	                            mov rdi, rax	       263	add.c	FUNCTION_10	CALL_26
0xe28	      0xe800000000	                          call 0x4000e6d	       263	add.c	FUNCTION_10	CALL_26
0xe2d	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	       264	add.c	FUNCTION_10	CALL_27
0xe34	          0x4889c7	                            mov rdi, rax	       264	add.c	FUNCTION_10	CALL_27
0xe37	      0xe800000000	                          call 0x4000e7c	       264	add.c	FUNCTION_10	CALL_27
0xe3c	      0xb800000000	                              mov eax, 0	       265	add.c	FUNCTION_10
0xe41	        0x488b4df8	                mov rcx, qword [rbp - 8]	       266	add.c	FUNCTION_10
0xe45	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       266	add.c	FUNCTION_10
0xe4e	            0x7405	                            je 0x4000e95	       266	add.c	FUNCTION_10
0xe50	      0xe800000000	                          call 0x4000e95	       266	add.c	FUNCTION_10
0xe55	              0xc9	                                   leave	       266	add.c	FUNCTION_10
0xe56	              0xc3	                                     ret	       266	add.c	FUNCTION_10
strbuf_addstr	FOR,0:DO,0:CALL,2:ELSE,0:IF,0:functions,0:SWITCH,0:WHILE,0	17
0x1aa	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_47
0x1ab	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_47
0x1ae	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_47
0x1b2	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_47
0x1b6	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_47
0x1ba	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_47	CALL_2
0x1be	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_47	CALL_2
0x1c1	      0xe800000000	                          call 0x4000206	       279	strbuf.h	FUNCTION_47	CALL_2
0x1c6	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_47	CALL_2
0x1c9	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_47	CALL_2
0x1cd	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_47	CALL_2
0x1d1	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_47	CALL_2
0x1d4	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_47	CALL_2
0x1d7	      0xe800000000	                          call 0x400021c	       279	strbuf.h	FUNCTION_47	CALL_2
0x1dc	              0x90	                                     nop	       280	strbuf.h	FUNCTION_47
0x1dd	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_47
0x1de	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_47
check_embedded_repo	FOR,0:DO,0:CALL,7:ELSE,0:IF,3:functions,0:SWITCH,0:WHILE,0	61
0xef8	              0x55	                                push rbp	       342	add.c	FUNCTION_13
0xef9	          0x4889e5	                            mov rbp, rsp	       342	add.c	FUNCTION_13
0xefc	              0x53	                                push rbx	       342	add.c	FUNCTION_13
0xefd	        0x4883ec38	                           sub rsp, 0x38	       342	add.c	FUNCTION_13
0xf01	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       342	add.c	FUNCTION_13
0xf05	    0x64488b042528	                mov rax, qword fs:[0x28]	       342	add.c	FUNCTION_13
0xf0e	        0x488945e8	             mov qword [rbp - 0x18], rax	       342	add.c	FUNCTION_13
0xf12	            0x31c0	                            xor eax, eax	       342	add.c	FUNCTION_13
0xf14	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       343	add.c	FUNCTION_13
0xf1c	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       343	add.c	FUNCTION_13
0xf24	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       343	add.c	FUNCTION_13
0xf2c	    0x8b0500000000	            mov eax, dword [0x04000f72] 	       345	add.c	FUNCTION_13	IF_1
0xf32	            0x85c0	                           test eax, eax	       345	add.c	FUNCTION_13	IF_1
0xf34	     0xf8497000000	                            je 0x4001011	       345	add.c	FUNCTION_13	IF_1
0xf3a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       347	add.c	FUNCTION_13	IF_2	CALL_1
0xf3e	      0xbe00000000	                              mov esi, 0	       347	add.c	FUNCTION_13	IF_2	CALL_1
0xf43	          0x4889c7	                            mov rdi, rax	       347	add.c	FUNCTION_13	IF_2	CALL_1
0xf46	      0xe879f1ffff	                      call sym.ends_with	       347	add.c	FUNCTION_13	IF_2	CALL_1
0xf4b	            0x85c0	                           test eax, eax	       347	add.c	FUNCTION_13	IF_2	CALL_1
0xf4d	     0xf8481000000	                            je 0x4001014	       347	add.c	FUNCTION_13	IF_2	CALL_1
0xf53	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       351	add.c	FUNCTION_13	CALL_2
0xf57	        0x488d45d0	                   lea rax, [rbp - 0x30]	       351	add.c	FUNCTION_13	CALL_2
0xf5b	          0x4889d6	                            mov rsi, rdx	       351	add.c	FUNCTION_13	CALL_2
0xf5e	          0x4889c7	                            mov rdi, rax	       351	add.c	FUNCTION_13	CALL_2
0xf61	      0xe844f2ffff	                  call sym.strbuf_addstr	       351	add.c	FUNCTION_13	CALL_2
0xf66	        0x488d45d0	                   lea rax, [rbp - 0x30]	       352	add.c	FUNCTION_13	CALL_3
0xf6a	      0xbe00000000	                              mov esi, 0	       352	add.c	FUNCTION_13	CALL_3
0xf6f	          0x4889c7	                            mov rdi, rax	       352	add.c	FUNCTION_13	CALL_3
0xf72	      0xe868f2ffff	            call sym.strbuf_strip_suffix	       352	add.c	FUNCTION_13	CALL_3
0xf77	        0x488b5de0	             mov rbx, qword [rbp - 0x20]	       354	add.c	FUNCTION_13	CALL_5
0xf7b	      0xbf00000000	                              mov edi, 0	       354	add.c	FUNCTION_13	CALL_5
0xf80	      0xe8b2f2ffff	                               call sym.	       354	add.c	FUNCTION_13	CALL_5
0xf85	          0x4889de	                            mov rsi, rbx	       354	add.c	FUNCTION_13	CALL_5
0xf88	          0x4889c7	                            mov rdi, rax	       354	add.c	FUNCTION_13	CALL_5
0xf8b	      0xb800000000	                              mov eax, 0	       354	add.c	FUNCTION_13	CALL_5
0xf90	      0xe800000000	                          call 0x4000fd5	       354	add.c	FUNCTION_13	CALL_5
0xf95	    0x8b0500000000	            mov eax, dword [0x04000fdb] 	       355	add.c	FUNCTION_13	IF_3
0xf9b	            0x85c0	                           test eax, eax	       355	add.c	FUNCTION_13	IF_3
0xf9d	            0x7424	                            je 0x4001003	       355	add.c	FUNCTION_13	IF_3
0xf9f	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       356	add.c	FUNCTION_13	IF_3	CALL_6
0xfa3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       356	add.c	FUNCTION_13	IF_3	CALL_6
0xfa7	          0x4889c6	                            mov rsi, rax	       356	add.c	FUNCTION_13	IF_3	CALL_6
0xfaa	      0xbf00000000	                              mov edi, 0	       356	add.c	FUNCTION_13	IF_3	CALL_6
0xfaf	      0xb800000000	                              mov eax, 0	       356	add.c	FUNCTION_13	IF_3	CALL_6
0xfb4	      0xe800000000	                          call 0x4000ff9	       356	add.c	FUNCTION_13	IF_3	CALL_6
0xfb9	    0xc70500000000	               mov dword [0x04001003], 0	       358	add.c	FUNCTION_13	IF_3
0xfc3	        0x488d45d0	                   lea rax, [rbp - 0x30]	       361	add.c	FUNCTION_13	CALL_7
0xfc7	          0x4889c7	                            mov rdi, rax	       361	add.c	FUNCTION_13	CALL_7
0xfca	      0xe800000000	                          call 0x400100f	       361	add.c	FUNCTION_13	CALL_7
0xfcf	            0xeb04	                           jmp 0x4001015	       361	add.c	FUNCTION_13	CALL_7
0xfd1	              0x90	                                     nop	       346	add.c	FUNCTION_13	IF_1
0xfd2	            0xeb01	                           jmp 0x4001015	       346	add.c	FUNCTION_13	IF_1
0xfd4	              0x90	                                     nop	       348	add.c	FUNCTION_13	IF_2
0xfd5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       362	add.c	FUNCTION_13
0xfd9	    0x644833042528	                xor rax, qword fs:[0x28]	       362	add.c	FUNCTION_13
0xfe2	            0x7405	                            je 0x4001029	       362	add.c	FUNCTION_13
0xfe4	      0xe800000000	                          call 0x4001029	       362	add.c	FUNCTION_13
0xfe9	        0x4883c438	                           add rsp, 0x38	       362	add.c	FUNCTION_13
0xfed	              0x5b	                                 pop rbx	       362	add.c	FUNCTION_13
0xfee	              0x5d	                                 pop rbp	       362	add.c	FUNCTION_13
0xfef	              0xc3	                                     ret	       362	add.c	FUNCTION_13
strbuf_setlen	FOR,0:DO,0:CALL,2:ELSE,1:IF,2:functions,0:SWITCH,0:WHILE,0	43
0x110	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_45
0x111	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_45
0x114	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_45
0x118	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_45
0x11c	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_45
0x120	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_45	IF_1
0x124	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_45	IF_1
0x127	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_45	IF_1
0x12a	            0x740d	                            je 0x4000179	       162	strbuf.h	FUNCTION_45	IF_1
0x12c	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_45	IF_1
0x130	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_45	IF_1
0x133	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_45	IF_1
0x137	            0xeb05	                           jmp 0x400017e	       162	strbuf.h	FUNCTION_45	IF_1
0x139	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_45	IF_1
0x13e	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_45	IF_1
0x142	            0x730f	                           jae 0x4000193	       162	strbuf.h	FUNCTION_45	IF_1
0x144	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_45	CALL_1
0x149	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_45	CALL_1
0x14e	      0xe800000000	                          call 0x4000193	       163	strbuf.h	FUNCTION_45	CALL_1
0x153	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_45
0x157	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_45
0x15b	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_45
0x15f	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_45	IF_2
0x163	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_45	IF_2
0x167	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_45	IF_2
0x16d	            0x7414	                            je 0x40001c3	       165	strbuf.h	FUNCTION_45	IF_2
0x16f	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_45	IF_2
0x173	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_45	IF_2
0x177	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_45	IF_2
0x17b	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_45	IF_2
0x17e	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_45	IF_2
0x181	            0xeb24	                           jmp 0x40001e7	       169	strbuf.h	FUNCTION_45
0x183	     0xfb605000000	           movzx eax, byte [0x040001ca] 	       168	strbuf.h	FUNCTION_45	CALL_2
0x18a	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_45	CALL_2
0x18c	            0x7419	                            je 0x40001e7	       168	strbuf.h	FUNCTION_45	CALL_2
0x18e	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_45	CALL_2
0x193	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_45	CALL_2
0x198	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_45	CALL_2
0x19d	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_45	CALL_2
0x1a2	      0xe800000000	                          call 0x40001e7	       168	strbuf.h	FUNCTION_45	CALL_2
0x1a7	              0x90	                                     nop	       169	strbuf.h	FUNCTION_45
0x1a8	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_45
0x1a9	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_45
ce_path_match	FOR,0:DO,0:CALL,4:ELSE,0:IF,0:functions,0:SWITCH,0:WHILE,0	34
0x263	              0x55	                                push rbp	       335	dir.h	FUNCTION_55
0x264	          0x4889e5	                            mov rbp, rsp	       335	dir.h	FUNCTION_55
0x267	        0x4883ec20	                           sub rsp, 0x20	       335	dir.h	FUNCTION_55
0x26b	        0x48897df8	                mov qword [rbp - 8], rdi	       335	dir.h	FUNCTION_55
0x26f	        0x488975f0	             mov qword [rbp - 0x10], rsi	       335	dir.h	FUNCTION_55
0x273	        0x488955e8	             mov qword [rbp - 0x18], rdx	       335	dir.h	FUNCTION_55
0x277	        0x488b45f8	                mov rax, qword [rbp - 8]	       337	dir.h	FUNCTION_55	CALL_4
0x27b	          0x8b4034	            mov eax, dword [rax + 0x34] 	       337	dir.h	FUNCTION_55	CALL_4
0x27e	      0x2500f00000	                         and eax, 0xf000	       337	dir.h	FUNCTION_55	CALL_4
0x283	      0x3d00400000	                         cmp eax, 0x4000	       336	dir.h	FUNCTION_55	CALL_2
0x288	            0x7413	                            je 0x40002dd	       336	dir.h	FUNCTION_55	CALL_2
0x28a	        0x488b45f8	                mov rax, qword [rbp - 8]	       337	dir.h	FUNCTION_55	CALL_4
0x28e	          0x8b4034	            mov eax, dword [rax + 0x34] 	       337	dir.h	FUNCTION_55	CALL_4
0x291	      0x2500f00000	                         and eax, 0xf000	       337	dir.h	FUNCTION_55	CALL_4
0x296	      0x3d00e00000	                         cmp eax, 0xe000	       336	dir.h	FUNCTION_55	CALL_2
0x29b	            0x7507	                           jne 0x40002e4	       336	dir.h	FUNCTION_55	CALL_2
0x29d	      0xb901000000	                              mov ecx, 1	       336	dir.h	FUNCTION_55	CALL_2
0x2a2	            0xeb05	                           jmp 0x40002e9	       336	dir.h	FUNCTION_55	CALL_2
0x2a4	      0xb900000000	                              mov ecx, 0	       336	dir.h	FUNCTION_55	CALL_2
0x2a9	        0x488b45f8	                mov rax, qword [rbp - 8]	       336	dir.h	FUNCTION_55	CALL_2
0x2ad	          0x8b403c	            mov eax, dword [rax + 0x3c] 	       336	dir.h	FUNCTION_55	CALL_2
0x2b0	            0x89c7	                            mov edi, eax	       336	dir.h	FUNCTION_55	CALL_2
0x2b2	        0x488b45f8	                mov rax, qword [rbp - 8]	       336	dir.h	FUNCTION_55	CALL_2
0x2b6	        0x488d7058	                   lea rsi, [rax + 0x58]	       336	dir.h	FUNCTION_55	CALL_2
0x2ba	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       336	dir.h	FUNCTION_55	CALL_2
0x2be	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       336	dir.h	FUNCTION_55	CALL_2
0x2c2	          0x4189c9	                            mov r9d, ecx	       336	dir.h	FUNCTION_55	CALL_2
0x2c5	          0x4989d0	                             mov r8, rdx	       336	dir.h	FUNCTION_55	CALL_2
0x2c8	      0xb900000000	                              mov ecx, 0	       336	dir.h	FUNCTION_55	CALL_2
0x2cd	            0x89fa	                            mov edx, edi	       336	dir.h	FUNCTION_55	CALL_2
0x2cf	          0x4889c7	                            mov rdi, rax	       336	dir.h	FUNCTION_55	CALL_2
0x2d2	      0xe800000000	                          call 0x4000317	       336	dir.h	FUNCTION_55	CALL_2
0x2d7	              0xc9	                                   leave	       338	dir.h	FUNCTION_55
0x2d8	              0xc3	                                     ret	       338	dir.h	FUNCTION_55
fix_unmerged_status	FOR,0:DO,0:CALL,0:ELSE,1:IF,2:functions,0:SWITCH,0:WHILE,0	27
0x419	              0x55	                                push rbp	        53	add.c	FUNCTION_2
0x41a	          0x4889e5	                            mov rbp, rsp	        53	add.c	FUNCTION_2
0x41d	        0x48897df8	                mov qword [rbp - 8], rdi	        53	add.c	FUNCTION_2
0x421	        0x488975f0	             mov qword [rbp - 0x10], rsi	        53	add.c	FUNCTION_2
0x425	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	add.c	FUNCTION_2	IF_1
0x429	         0xfb64012	           movzx eax, byte [rax + 0x12] 	        54	add.c	FUNCTION_2	IF_1
0x42d	            0x3c55	                            cmp al, 0x55	        54	add.c	FUNCTION_2	IF_1
0x42f	            0x740d	                            je 0x400047e	        54	add.c	FUNCTION_2	IF_1
0x431	        0x488b45f8	                mov rax, qword [rbp - 8]	        55	add.c	FUNCTION_2	IF_1
0x435	         0xfb64012	           movzx eax, byte [rax + 0x12] 	        55	add.c	FUNCTION_2	IF_1
0x439	           0xfbec0	                           movsx eax, al	        55	add.c	FUNCTION_2	IF_1
0x43c	            0xeb2a	                           jmp 0x40004a8	        55	add.c	FUNCTION_2	IF_1
0x43e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        56	add.c	FUNCTION_2	IF_2
0x442	            0x8b00	                    mov eax, dword [rax]	        56	add.c	FUNCTION_2	IF_2
0x444	          0x83e008	                              and eax, 8	        56	add.c	FUNCTION_2	IF_2
0x447	            0x85c0	                           test eax, eax	        56	add.c	FUNCTION_2	IF_2
0x449	            0x7518	                           jne 0x40004a3	        56	add.c	FUNCTION_2	IF_2
0x44b	        0x488b45f8	                mov rax, qword [rbp - 8]	        56	add.c	FUNCTION_2	IF_2
0x44f	        0x488b4008	                mov rax, qword [rax + 8]	        56	add.c	FUNCTION_2	IF_2
0x453	         0xfb74040	           movzx eax, word [rax + 0x40] 	        56	add.c	FUNCTION_2	IF_2
0x457	          0x6685c0	                             test ax, ax	        56	add.c	FUNCTION_2	IF_2
0x45a	            0x7507	                           jne 0x40004a3	        56	add.c	FUNCTION_2	IF_2
0x45c	      0xb844000000	                           mov eax, 0x44	        61	add.c	FUNCTION_2	IF_2
0x461	            0xeb05	                           jmp 0x40004a8	        61	add.c	FUNCTION_2	IF_2
0x463	      0xb84d000000	                           mov eax, 0x4d	        69	add.c	FUNCTION_2	ELSE_1
0x468	              0x5d	                                 pop rbp	        70	add.c	FUNCTION_2	ELSE_1
0x469	              0xc3	                                     ret	        70	add.c	FUNCTION_2	ELSE_1
add_files_to_cache	FOR,0:DO,0:CALL,6:ELSE,0:IF,1:functions,0:SWITCH,0:WHILE,0	61
0x5d7	              0x55	                                push rbp	       106	add.c	FUNCTION_4
0x5d8	          0x4889e5	                            mov rbp, rsp	       106	add.c	FUNCTION_4
0x5db	    0x4881ecf00800	                          sub rsp, 0x8f0	       106	add.c	FUNCTION_4
0x5e2	    0x4889bd28f7ff	            mov qword [rbp - 0x8d8], rdi	       106	add.c	FUNCTION_4
0x5e9	    0x4889b520f7ff	            mov qword [rbp - 0x8e0], rsi	       106	add.c	FUNCTION_4
0x5f0	    0x89951cf7ffff	            mov dword [rbp - 0x8e4], edx	       106	add.c	FUNCTION_4
0x5f6	    0x64488b042528	                mov rax, qword fs:[0x28]	       106	add.c	FUNCTION_4
0x5ff	        0x488945f8	                mov qword [rbp - 8], rax	       106	add.c	FUNCTION_4
0x603	            0x31c0	                            xor eax, eax	       106	add.c	FUNCTION_4
0x605	    0x488d8530f7ff	                  lea rax, [rbp - 0x8d0]	       110	add.c	FUNCTION_4	CALL_1
0x60c	      0xba08000000	                              mov edx, 8	       110	add.c	FUNCTION_4	CALL_1
0x611	      0xbe00000000	                              mov esi, 0	       110	add.c	FUNCTION_4	CALL_1
0x616	          0x4889c7	                            mov rdi, rax	       110	add.c	FUNCTION_4	CALL_1
0x619	      0xe800000000	                          call 0x400065e	       110	add.c	FUNCTION_4	CALL_1
0x61e	    0x8b851cf7ffff	            mov eax, dword [rbp - 0x8e4]	       111	add.c	FUNCTION_4
0x624	    0x898530f7ffff	            mov dword [rbp - 0x8d0], eax	       111	add.c	FUNCTION_4
0x62a	    0x488b9528f7ff	            mov rdx, qword [rbp - 0x8d8]	       113	add.c	FUNCTION_4	CALL_2
0x631	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       113	add.c	FUNCTION_4	CALL_2
0x638	          0x4889d6	                            mov rsi, rdx	       113	add.c	FUNCTION_4	CALL_2
0x63b	          0x4889c7	                            mov rdi, rax	       113	add.c	FUNCTION_4	CALL_2
0x63e	      0xe800000000	                          call 0x4000683	       113	add.c	FUNCTION_4	CALL_2
0x643	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       114	add.c	FUNCTION_4	CALL_3
0x64a	      0xb900000000	                              mov ecx, 0	       114	add.c	FUNCTION_4	CALL_3
0x64f	          0x4889c2	                            mov rdx, rax	       114	add.c	FUNCTION_4	CALL_3
0x652	      0xbe00000000	                              mov esi, 0	       114	add.c	FUNCTION_4	CALL_3
0x657	      0xbf00000000	                              mov edi, 0	       114	add.c	FUNCTION_4	CALL_3
0x65c	      0xe800000000	                          call 0x40006a1	       114	add.c	FUNCTION_4	CALL_3
0x661	    0x4883bd20f7ff	              cmp qword [rbp - 0x8e0], 0	       115	add.c	FUNCTION_4	IF_1
0x669	            0x741d	                            je 0x40006c8	       115	add.c	FUNCTION_4	IF_1
0x66b	    0x488b8520f7ff	            mov rax, qword [rbp - 0x8e0]	       116	add.c	FUNCTION_4	CALL_4
0x672	    0x488d9540f7ff	                  lea rdx, [rbp - 0x8c0]	       116	add.c	FUNCTION_4	CALL_4
0x679	        0x4883c250	                           add rdx, 0x50	       116	add.c	FUNCTION_4	CALL_4
0x67d	          0x4889c6	                            mov rsi, rax	       116	add.c	FUNCTION_4	CALL_4
0x680	          0x4889d7	                            mov rdi, rdx	       116	add.c	FUNCTION_4	CALL_4
0x683	      0xe800000000	                          call 0x40006c8	       116	add.c	FUNCTION_4	CALL_4
0x688	    0xc78598fcffff	         mov dword [rbp - 0x368], 0x1000	       117	add.c	FUNCTION_4
0x692	    0x48c78580fdff	              mov qword [rbp - 0x280], 0	       118	add.c	FUNCTION_4
0x69d	    0x488d8530f7ff	                  lea rax, [rbp - 0x8d0]	       119	add.c	FUNCTION_4
0x6a4	    0x48898588fdff	            mov qword [rbp - 0x278], rax	       119	add.c	FUNCTION_4
0x6ab	     0xfb68573fcff	           movzx eax, byte [rbp - 0x38d]	       120	add.c	FUNCTION_4
0x6b2	          0x83c804	                               or eax, 4	       120	add.c	FUNCTION_4
0x6b5	    0x888573fcffff	              mov byte [rbp - 0x38d], al	       120	add.c	FUNCTION_4
0x6bb	    0xc7850cfcffff	              mov dword [rbp - 0x3f4], 0	       121	add.c	FUNCTION_4
0x6c5	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       122	add.c	FUNCTION_4	CALL_5
0x6cc	      0xbe02000000	                              mov esi, 2	       122	add.c	FUNCTION_4	CALL_5
0x6d1	          0x4889c7	                            mov rdi, rax	       122	add.c	FUNCTION_4	CALL_5
0x6d4	      0xe800000000	                          call 0x4000719	       122	add.c	FUNCTION_4	CALL_5
0x6d9	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       123	add.c	FUNCTION_4	CALL_6
0x6e0	        0x4883c050	                           add rax, 0x50	       123	add.c	FUNCTION_4	CALL_6
0x6e4	          0x4889c7	                            mov rdi, rax	       123	add.c	FUNCTION_4	CALL_6
0x6e7	      0xe800000000	                          call 0x400072c	       123	add.c	FUNCTION_4	CALL_6
0x6ec	    0x8b8534f7ffff	            mov eax, dword [rbp - 0x8cc]	       124	add.c	FUNCTION_4
0x6f2	            0x85c0	                           test eax, eax	       124	add.c	FUNCTION_4
0x6f4	           0xf95c0	                                setne al	       124	add.c	FUNCTION_4
0x6f7	           0xfb6c0	                           movzx eax, al	       124	add.c	FUNCTION_4
0x6fa	        0x488b4df8	                mov rcx, qword [rbp - 8]	       125	add.c	FUNCTION_4
0x6fe	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       125	add.c	FUNCTION_4
0x707	            0x7405	                            je 0x400074e	       125	add.c	FUNCTION_4
0x709	      0xe800000000	                          call 0x400074e	       125	add.c	FUNCTION_4
0x70e	              0xc9	                                   leave	       125	add.c	FUNCTION_4
0x70f	              0xc3	                                     ret	       125	add.c	FUNCTION_4
chmod_pathspec	FOR,1:DO,0:CALL,3:ELSE,0:IF,2:functions,0:SWITCH,0:WHILE,0	50
0x365	              0x55	                                push rbp	        37	add.c	FUNCTION_1
0x366	          0x4889e5	                            mov rbp, rsp	        37	add.c	FUNCTION_1
0x369	        0x4883ec20	                           sub rsp, 0x20	        37	add.c	FUNCTION_1
0x36d	        0x48897de8	             mov qword [rbp - 0x18], rdi	        37	add.c	FUNCTION_1
0x371	            0x89f0	                            mov eax, esi	        37	add.c	FUNCTION_1
0x373	          0x8845e4	               mov byte [rbp - 0x1c], al	        37	add.c	FUNCTION_1
0x376	    0xc745f4000000	                mov dword [rbp - 0xc], 0	        40	add.c	FUNCTION_1	FOR_1
0x37d	      0xe983000000	                           jmp 0x4000445	        40	add.c	FUNCTION_1	FOR_1
0x382	    0x488b05000000	            mov rax, qword [0x040003c9] 	        41	add.c	FUNCTION_1	FOR_1
0x389	          0x8b55f4	              mov edx, dword [rbp - 0xc]	        41	add.c	FUNCTION_1	FOR_1
0x38c	          0x4863d2	                         movsxd rdx, edx	        41	add.c	FUNCTION_1	FOR_1
0x38f	        0x48c1e203	                              shl rdx, 3	        41	add.c	FUNCTION_1	FOR_1
0x393	          0x4801d0	                            add rax, rdx	        41	add.c	FUNCTION_1	FOR_1
0x396	          0x488b00	                    mov rax, qword [rax]	        41	add.c	FUNCTION_1	FOR_1
0x399	        0x488945f8	                mov qword [rbp - 8], rax	        41	add.c	FUNCTION_1	FOR_1
0x39d	      0x48837de800	               cmp qword [rbp - 0x18], 0	        43	add.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x3a2	            0x741c	                            je 0x4000400	        43	add.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x3a4	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	        43	add.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x3a8	        0x488b45f8	                mov rax, qword [rbp - 8]	        43	add.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x3ac	      0xba00000000	                              mov edx, 0	        43	add.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x3b1	          0x4889ce	                            mov rsi, rcx	        43	add.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x3b4	          0x4889c7	                            mov rdi, rax	        43	add.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x3b7	      0xe8a7feffff	                  call sym.ce_path_match	        43	add.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x3bc	            0x85c0	                           test eax, eax	        43	add.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x3be	            0x7440	                            je 0x4000440	        43	add.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x3c0	         0xfbe55e4	            movsx edx, byte [rbp - 0x1c]	        46	add.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x3c4	        0x488b45f8	                mov rax, qword [rbp - 8]	        46	add.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x3c8	          0x4889c6	                            mov rsi, rax	        46	add.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x3cb	      0xbf00000000	                              mov edi, 0	        46	add.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x3d0	      0xe800000000	                          call 0x4000415	        46	add.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x3d5	            0x85c0	                           test eax, eax	        46	add.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x3d7	            0x7928	                           jns 0x4000441	        46	add.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x3d9	        0x488b45f8	                mov rax, qword [rbp - 8]	        47	add.c	FUNCTION_1	FOR_1	CALL_3
0x3dd	        0x488d4858	                   lea rcx, [rax + 0x58]	        47	add.c	FUNCTION_1	FOR_1	CALL_3
0x3e1	         0xfbe55e4	            movsx edx, byte [rbp - 0x1c]	        47	add.c	FUNCTION_1	FOR_1	CALL_3
0x3e5	    0x488b05000000	            mov rax, qword [0x0400042c] 	        47	add.c	FUNCTION_1	FOR_1	CALL_3
0x3ec	      0xbe00000000	                              mov esi, 0	        47	add.c	FUNCTION_1	FOR_1	CALL_3
0x3f1	          0x4889c7	                            mov rdi, rax	        47	add.c	FUNCTION_1	FOR_1	CALL_3
0x3f4	      0xb800000000	                              mov eax, 0	        47	add.c	FUNCTION_1	FOR_1	CALL_3
0x3f9	      0xe800000000	                          call 0x400043e	        47	add.c	FUNCTION_1	FOR_1	CALL_3
0x3fe	            0xeb01	                           jmp 0x4000441	        47	add.c	FUNCTION_1	FOR_1	CALL_3
0x400	              0x90	                                     nop	        44	add.c	FUNCTION_1	FOR_1	IF_1
0x401	        0x8345f401	                add dword [rbp - 0xc], 1	        40	add.c	FUNCTION_1	FOR_1
0x405	    0x8b1500000000	            mov edx, dword [0x0400044b] 	        40	add.c	FUNCTION_1	FOR_1
0x40b	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        40	add.c	FUNCTION_1	FOR_1
0x40e	            0x39c2	                            cmp edx, eax	        40	add.c	FUNCTION_1	FOR_1
0x410	     0xf876cffffff	                            ja 0x40003c2	        40	add.c	FUNCTION_1	FOR_1
0x416	              0x90	                                     nop	        49	add.c	FUNCTION_1
0x417	              0xc9	                                   leave	        49	add.c	FUNCTION_1
0x418	              0xc3	                                     ret	        49	add.c	FUNCTION_1
prune_directory	FOR,0:DO,0:CALL,3:ELSE,0:IF,1:functions,0:SWITCH,0:WHILE,1	60
0x7ec	              0x55	                                push rbp	       147	add.c	FUNCTION_6
0x7ed	          0x4889e5	                            mov rbp, rsp	       147	add.c	FUNCTION_6
0x7f0	        0x4883ec50	                           sub rsp, 0x50	       147	add.c	FUNCTION_6
0x7f4	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       147	add.c	FUNCTION_6
0x7f8	        0x488975c0	             mov qword [rbp - 0x40], rsi	       147	add.c	FUNCTION_6
0x7fc	          0x8955bc	             mov dword [rbp - 0x44], edx	       147	add.c	FUNCTION_6
0x7ff	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       152	add.c	FUNCTION_6	CALL_1
0x803	            0x8b00	                    mov eax, dword [rax]	       152	add.c	FUNCTION_6	CALL_1
0x805	            0x4898	                                    cdqe	       152	add.c	FUNCTION_6	CALL_1
0x807	      0xbe01000000	                              mov esi, 1	       152	add.c	FUNCTION_6	CALL_1
0x80c	          0x4889c7	                            mov rdi, rax	       152	add.c	FUNCTION_6	CALL_1
0x80f	      0xe800000000	                          call 0x4000854	       152	add.c	FUNCTION_6	CALL_1
0x814	        0x488945f0	             mov qword [rbp - 0x10], rax	       152	add.c	FUNCTION_6	CALL_1
0x818	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       154	add.c	FUNCTION_6
0x81c	        0x488b4018	            mov rax, qword [rax + 0x18] 	       154	add.c	FUNCTION_6
0x820	        0x488945e8	             mov qword [rbp - 0x18], rax	       154	add.c	FUNCTION_6
0x824	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       154	add.c	FUNCTION_6
0x828	        0x488945e0	             mov qword [rbp - 0x20], rax	       154	add.c	FUNCTION_6
0x82c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       155	add.c	FUNCTION_6
0x830	            0x8b00	                    mov eax, dword [rax]	       155	add.c	FUNCTION_6
0x832	          0x8945dc	             mov dword [rbp - 0x24], eax	       155	add.c	FUNCTION_6
0x835	            0xeb41	                           jmp 0x40008b8	       156	add.c	FUNCTION_6	WHILE_1
0x837	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       157	add.c	FUNCTION_6	WHILE_1
0x83b	        0x488d5008	                      lea rdx, [rax + 8]	       157	add.c	FUNCTION_6	WHILE_1
0x83f	        0x488955e0	             mov qword [rbp - 0x20], rdx	       157	add.c	FUNCTION_6	WHILE_1
0x843	          0x488b00	                    mov rax, qword [rax]	       157	add.c	FUNCTION_6	WHILE_1
0x846	        0x488945f8	                mov qword [rbp - 8], rax	       157	add.c	FUNCTION_6	WHILE_1
0x84a	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       158	add.c	FUNCTION_6	WHILE_1	IF_1	CALL_2
0x84e	          0x8b55bc	             mov edx, dword [rbp - 0x44]	       158	add.c	FUNCTION_6	WHILE_1	IF_1	CALL_2
0x851	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	       158	add.c	FUNCTION_6	WHILE_1	IF_1	CALL_2
0x855	        0x488b45f8	                mov rax, qword [rbp - 8]	       158	add.c	FUNCTION_6	WHILE_1	IF_1	CALL_2
0x859	          0x4889c7	                            mov rdi, rax	       158	add.c	FUNCTION_6	WHILE_1	IF_1	CALL_2
0x85c	      0xe878faffff	                 call sym.dir_path_match	       158	add.c	FUNCTION_6	WHILE_1	IF_1	CALL_2
0x861	            0x85c0	                           test eax, eax	       158	add.c	FUNCTION_6	WHILE_1	IF_1	CALL_2
0x863	            0x7413	                            je 0x40008b8	       158	add.c	FUNCTION_6	WHILE_1	IF_1	CALL_2
0x865	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       159	add.c	FUNCTION_6	WHILE_1	IF_1
0x869	        0x488d5008	                      lea rdx, [rax + 8]	       159	add.c	FUNCTION_6	WHILE_1	IF_1
0x86d	        0x488955e8	             mov qword [rbp - 0x18], rdx	       159	add.c	FUNCTION_6	WHILE_1	IF_1
0x871	        0x488b55f8	                mov rdx, qword [rbp - 8]	       159	add.c	FUNCTION_6	WHILE_1	IF_1
0x875	          0x488910	                    mov qword [rax], rdx	       159	add.c	FUNCTION_6	WHILE_1	IF_1
0x878	        0x836ddc01	               sub dword [rbp - 0x24], 1	       156	add.c	FUNCTION_6	WHILE_1
0x87c	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       156	add.c	FUNCTION_6	WHILE_1
0x880	            0x79b5	                           jns 0x4000877	       156	add.c	FUNCTION_6	WHILE_1
0x882	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       161	add.c	FUNCTION_6
0x886	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       161	add.c	FUNCTION_6
0x88a	        0x488b4018	            mov rax, qword [rax + 0x18] 	       161	add.c	FUNCTION_6
0x88e	          0x4829c2	                            sub rdx, rax	       161	add.c	FUNCTION_6
0x891	          0x4889d0	                            mov rax, rdx	       161	add.c	FUNCTION_6
0x894	        0x48c1f803	                              sar rax, 3	       161	add.c	FUNCTION_6
0x898	            0x89c2	                            mov edx, eax	       161	add.c	FUNCTION_6
0x89a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       161	add.c	FUNCTION_6
0x89e	            0x8910	                    mov dword [rax], edx	       161	add.c	FUNCTION_6
0x8a0	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       162	add.c	FUNCTION_6	CALL_3
0x8a4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       162	add.c	FUNCTION_6	CALL_3
0x8a8	      0xbe00000000	                              mov esi, 0	       162	add.c	FUNCTION_6	CALL_3
0x8ad	          0x4889c7	                            mov rdi, rax	       162	add.c	FUNCTION_6	CALL_3
0x8b0	      0xe800000000	                          call 0x40008f5	       162	add.c	FUNCTION_6	CALL_3
0x8b5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       163	add.c	FUNCTION_6
0x8b9	              0xc9	                                   leave	       164	add.c	FUNCTION_6
0x8ba	              0xc3	                                     ret	       164	add.c	FUNCTION_6
dir_path_match	FOR,0:DO,0:CALL,1:ELSE,0:IF,0:functions,0:SWITCH,0:WHILE,0	45
0x2d9	              0x55	                                push rbp	       343	dir.h	FUNCTION_56
0x2da	          0x4889e5	                            mov rbp, rsp	       343	dir.h	FUNCTION_56
0x2dd	        0x4883ec30	                           sub rsp, 0x30	       343	dir.h	FUNCTION_56
0x2e1	        0x48897de8	             mov qword [rbp - 0x18], rdi	       343	dir.h	FUNCTION_56
0x2e5	        0x488975e0	             mov qword [rbp - 0x20], rsi	       343	dir.h	FUNCTION_56
0x2e9	          0x8955dc	             mov dword [rbp - 0x24], edx	       343	dir.h	FUNCTION_56
0x2ec	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       343	dir.h	FUNCTION_56
0x2f0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       344	dir.h	FUNCTION_56
0x2f4	            0x8b00	                    mov eax, dword [rax]	       344	dir.h	FUNCTION_56
0x2f6	            0x85c0	                           test eax, eax	       344	dir.h	FUNCTION_56
0x2f8	            0x741f	                            je 0x4000359	       344	dir.h	FUNCTION_56
0x2fa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       344	dir.h	FUNCTION_56
0x2fe	            0x8b00	                    mov eax, dword [rax]	       344	dir.h	FUNCTION_56
0x300	          0x8d50ff	                      lea edx, [rax - 1]	       344	dir.h	FUNCTION_56
0x303	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       344	dir.h	FUNCTION_56
0x307	            0x89d2	                            mov edx, edx	       344	dir.h	FUNCTION_56
0x309	       0xfb6441004	        movzx eax, byte [rax + rdx + 4] 	       344	dir.h	FUNCTION_56
0x30e	            0x3c2f	                            cmp al, 0x2f	       344	dir.h	FUNCTION_56
0x310	            0x7507	                           jne 0x4000359	       344	dir.h	FUNCTION_56
0x312	      0xb801000000	                              mov eax, 1	       344	dir.h	FUNCTION_56
0x317	            0xeb05	                           jmp 0x400035e	       344	dir.h	FUNCTION_56
0x319	      0xb800000000	                              mov eax, 0	       344	dir.h	FUNCTION_56
0x31e	          0x8945f8	                mov dword [rbp - 8], eax	       344	dir.h	FUNCTION_56
0x321	        0x837df800	                  cmp dword [rbp - 8], 0	       345	dir.h	FUNCTION_56
0x325	            0x740b	                            je 0x4000372	       345	dir.h	FUNCTION_56
0x327	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       345	dir.h	FUNCTION_56
0x32b	            0x8b00	                    mov eax, dword [rax]	       345	dir.h	FUNCTION_56
0x32d	          0x83e801	                              sub eax, 1	       345	dir.h	FUNCTION_56
0x330	            0xeb06	                           jmp 0x4000378	       345	dir.h	FUNCTION_56
0x332	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       345	dir.h	FUNCTION_56
0x336	            0x8b00	                    mov eax, dword [rax]	       345	dir.h	FUNCTION_56
0x338	          0x8945fc	                mov dword [rbp - 4], eax	       345	dir.h	FUNCTION_56
0x33b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       346	dir.h	FUNCTION_56	CALL_1
0x33f	        0x488d7004	                      lea rsi, [rax + 4]	       346	dir.h	FUNCTION_56	CALL_1
0x343	        0x448b45f8	                mov r8d, dword [rbp - 8]	       346	dir.h	FUNCTION_56	CALL_1
0x347	        0x488b7dd0	             mov rdi, qword [rbp - 0x30]	       346	dir.h	FUNCTION_56	CALL_1
0x34b	          0x8b4ddc	             mov ecx, dword [rbp - 0x24]	       346	dir.h	FUNCTION_56	CALL_1
0x34e	          0x8b55fc	                mov edx, dword [rbp - 4]	       346	dir.h	FUNCTION_56	CALL_1
0x351	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       346	dir.h	FUNCTION_56	CALL_1
0x355	          0x4589c1	                            mov r9d, r8d	       346	dir.h	FUNCTION_56	CALL_1
0x358	          0x4989f8	                             mov r8, rdi	       346	dir.h	FUNCTION_56	CALL_1
0x35b	          0x4889c7	                            mov rdi, rax	       346	dir.h	FUNCTION_56	CALL_1
0x35e	      0xe800000000	                          call 0x40003a3	       346	dir.h	FUNCTION_56	CALL_1
0x363	              0xc9	                                   leave	       348	dir.h	FUNCTION_56
0x364	              0xc3	                                     ret	       348	dir.h	FUNCTION_56
run_add_interactive	FOR,1:DO,0:CALL,7:ELSE,0:IF,2:functions,0:SWITCH,0:WHILE,0	70
0x99d	              0x55	                                push rbp	       184	add.c	FUNCTION_8
0x99e	          0x4889e5	                            mov rbp, rsp	       184	add.c	FUNCTION_8
0x9a1	        0x4883ec50	                           sub rsp, 0x50	       184	add.c	FUNCTION_8
0x9a5	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       184	add.c	FUNCTION_8
0x9a9	        0x488975c0	             mov qword [rbp - 0x40], rsi	       184	add.c	FUNCTION_8
0x9ad	        0x488955b8	             mov qword [rbp - 0x48], rdx	       184	add.c	FUNCTION_8
0x9b1	    0x64488b042528	                mov rax, qword fs:[0x28]	       184	add.c	FUNCTION_8
0x9ba	        0x488945f8	                mov qword [rbp - 8], rax	       184	add.c	FUNCTION_8
0x9be	            0x31c0	                            xor eax, eax	       184	add.c	FUNCTION_8
0x9c0	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       186	add.c	FUNCTION_8
0x9c8	    0xc745e8000000	               mov dword [rbp - 0x18], 0	       186	add.c	FUNCTION_8
0x9cf	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       186	add.c	FUNCTION_8
0x9d6	        0x488d45e0	                   lea rax, [rbp - 0x20]	       188	add.c	FUNCTION_8	CALL_1
0x9da	      0xbe00000000	                              mov esi, 0	       188	add.c	FUNCTION_8	CALL_1
0x9df	          0x4889c7	                            mov rdi, rax	       188	add.c	FUNCTION_8	CALL_1
0x9e2	      0xe800000000	                          call 0x4000a27	       188	add.c	FUNCTION_8	CALL_1
0x9e7	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       189	add.c	FUNCTION_8	IF_1
0x9ec	            0x7413	                            je 0x4000a41	       189	add.c	FUNCTION_8	IF_1
0x9ee	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       190	add.c	FUNCTION_8	CALL_2
0x9f2	        0x488d45e0	                   lea rax, [rbp - 0x20]	       190	add.c	FUNCTION_8	CALL_2
0x9f6	          0x4889d6	                            mov rsi, rdx	       190	add.c	FUNCTION_8	CALL_2
0x9f9	          0x4889c7	                            mov rdi, rax	       190	add.c	FUNCTION_8	CALL_2
0x9fc	      0xe800000000	                          call 0x4000a41	       190	add.c	FUNCTION_8	CALL_2
0xa01	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       191	add.c	FUNCTION_8	IF_2
0xa06	            0x7413	                            je 0x4000a5b	       191	add.c	FUNCTION_8	IF_2
0xa08	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       192	add.c	FUNCTION_8	CALL_3
0xa0c	        0x488d45e0	                   lea rax, [rbp - 0x20]	       192	add.c	FUNCTION_8	CALL_3
0xa10	          0x4889d6	                            mov rsi, rdx	       192	add.c	FUNCTION_8	CALL_3
0xa13	          0x4889c7	                            mov rdi, rax	       192	add.c	FUNCTION_8	CALL_3
0xa16	      0xe800000000	                          call 0x4000a5b	       192	add.c	FUNCTION_8	CALL_3
0xa1b	        0x488d45e0	                   lea rax, [rbp - 0x20]	       193	add.c	FUNCTION_8	CALL_4
0xa1f	      0xbe00000000	                              mov esi, 0	       193	add.c	FUNCTION_8	CALL_4
0xa24	          0x4889c7	                            mov rdi, rax	       193	add.c	FUNCTION_8	CALL_4
0xa27	      0xe800000000	                          call 0x4000a6c	       193	add.c	FUNCTION_8	CALL_4
0xa2c	    0xc745d8000000	               mov dword [rbp - 0x28], 0	       194	add.c	FUNCTION_8	FOR_1
0xa33	            0xeb39	                           jmp 0x4000aae	       194	add.c	FUNCTION_8	FOR_1
0xa35	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       196	add.c	FUNCTION_8	CALL_5
0xa39	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       196	add.c	FUNCTION_8	CALL_5
0xa3d	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       196	add.c	FUNCTION_8	CALL_5
0xa40	            0x4898	                                    cdqe	       196	add.c	FUNCTION_8	CALL_5
0xa42	        0x48c1e003	                              shl rax, 3	       196	add.c	FUNCTION_8	CALL_5
0xa46	    0x488d0cc50000	                        lea rcx, [rax*8]	       196	add.c	FUNCTION_8	CALL_5
0xa4e	          0x4829c1	                            sub rcx, rax	       196	add.c	FUNCTION_8	CALL_5
0xa51	          0x4889c8	                            mov rax, rcx	       196	add.c	FUNCTION_8	CALL_5
0xa54	          0x4801d0	                            add rax, rdx	       196	add.c	FUNCTION_8	CALL_5
0xa57	        0x488b5008	                mov rdx, qword [rax + 8]	       196	add.c	FUNCTION_8	CALL_5
0xa5b	        0x488d45e0	                   lea rax, [rbp - 0x20]	       196	add.c	FUNCTION_8	CALL_5
0xa5f	          0x4889d6	                            mov rsi, rdx	       196	add.c	FUNCTION_8	CALL_5
0xa62	          0x4889c7	                            mov rdi, rax	       196	add.c	FUNCTION_8	CALL_5
0xa65	      0xe800000000	                          call 0x4000aaa	       196	add.c	FUNCTION_8	CALL_5
0xa6a	        0x8345d801	               add dword [rbp - 0x28], 1	       194	add.c	FUNCTION_8	FOR_1
0xa6e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       194	add.c	FUNCTION_8	FOR_1
0xa72	            0x8b00	                    mov eax, dword [rax]	       194	add.c	FUNCTION_8	FOR_1
0xa74	          0x3b45d8	             cmp eax, dword [rbp - 0x28]	       194	add.c	FUNCTION_8	FOR_1
0xa77	            0x7fbc	                            jg 0x4000a75	       194	add.c	FUNCTION_8	FOR_1
0xa79	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       198	add.c	FUNCTION_8	CALL_6
0xa7d	      0xbe02000000	                              mov esi, 2	       198	add.c	FUNCTION_8	CALL_6
0xa82	          0x4889c7	                            mov rdi, rax	       198	add.c	FUNCTION_8	CALL_6
0xa85	      0xe800000000	                          call 0x4000aca	       198	add.c	FUNCTION_8	CALL_6
0xa8a	          0x8945dc	             mov dword [rbp - 0x24], eax	       198	add.c	FUNCTION_8	CALL_6
0xa8d	        0x488d45e0	                   lea rax, [rbp - 0x20]	       199	add.c	FUNCTION_8	CALL_7
0xa91	          0x4889c7	                            mov rdi, rax	       199	add.c	FUNCTION_8	CALL_7
0xa94	      0xe800000000	                          call 0x4000ad9	       199	add.c	FUNCTION_8	CALL_7
0xa99	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       200	add.c	FUNCTION_8
0xa9c	        0x488b4df8	                mov rcx, qword [rbp - 8]	       201	add.c	FUNCTION_8
0xaa0	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       201	add.c	FUNCTION_8
0xaa9	            0x7405	                            je 0x4000af0	       201	add.c	FUNCTION_8
0xaab	      0xe800000000	                          call 0x4000af0	       201	add.c	FUNCTION_8
0xab0	              0xc9	                                   leave	       201	add.c	FUNCTION_8
0xab1	              0xc3	                                     ret	       201	add.c	FUNCTION_8
ends_with	FOR,0:DO,0:CALL,1:ELSE,0:IF,0:functions,0:SWITCH,0:WHILE,0	20
0xc4	              0x55	                                push rbp	       560	git-compat-util.h	FUNCTION_27
0xc5	          0x4889e5	                            mov rbp, rsp	       560	git-compat-util.h	FUNCTION_27
0xc8	        0x4883ec20	                           sub rsp, 0x20	       560	git-compat-util.h	FUNCTION_27
0xcc	        0x48897de8	             mov qword [rbp - 0x18], rdi	       560	git-compat-util.h	FUNCTION_27
0xd0	        0x488975e0	             mov qword [rbp - 0x20], rsi	       560	git-compat-util.h	FUNCTION_27
0xd4	    0x64488b042528	                mov rax, qword fs:[0x28]	       560	git-compat-util.h	FUNCTION_27
0xdd	        0x488945f8	                mov qword [rbp - 8], rax	       560	git-compat-util.h	FUNCTION_27
0xe1	            0x31c0	                            xor eax, eax	       560	git-compat-util.h	FUNCTION_27
0xe3	        0x488d55f0	                   lea rdx, [rbp - 0x10]	       562	git-compat-util.h	FUNCTION_27	CALL_1
0xe7	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       562	git-compat-util.h	FUNCTION_27	CALL_1
0xeb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       562	git-compat-util.h	FUNCTION_27	CALL_1
0xef	          0x4889ce	                            mov rsi, rcx	       562	git-compat-util.h	FUNCTION_27	CALL_1
0xf2	          0x4889c7	                            mov rdi, rax	       562	git-compat-util.h	FUNCTION_27	CALL_1
0xf5	      0xe887ffffff	                   call sym.strip_suffix	       562	git-compat-util.h	FUNCTION_27	CALL_1
0xfa	        0x488b4df8	                mov rcx, qword [rbp - 8]	       563	git-compat-util.h	FUNCTION_27
0xfe	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       563	git-compat-util.h	FUNCTION_27
0x107	            0x7405	                            je 0x400014e	       563	git-compat-util.h	FUNCTION_27
0x109	      0xe800000000	                          call 0x400014e	       563	git-compat-util.h	FUNCTION_27
0x10e	              0xc9	                                   leave	       563	git-compat-util.h	FUNCTION_27
0x10f	              0xc3	                                     ret	       563	git-compat-util.h	FUNCTION_27
update_callback	FOR,1:DO,0:CALL,9:ELSE,0:IF,5:functions,0:SWITCH,1:WHILE,0	110
0x46a	              0x55	                                push rbp	        74	add.c	ELSE_1	FUNCTION_3
0x46b	          0x4889e5	                            mov rbp, rsp	        74	add.c	ELSE_1	FUNCTION_3
0x46e	              0x53	                                push rbx	        74	add.c	ELSE_1	FUNCTION_3
0x46f	        0x4883ec48	                           sub rsp, 0x48	        74	add.c	ELSE_1	FUNCTION_3
0x473	        0x48897dc8	             mov qword [rbp - 0x38], rdi	        74	add.c	ELSE_1	FUNCTION_3
0x477	        0x488975c0	             mov qword [rbp - 0x40], rsi	        74	add.c	ELSE_1	FUNCTION_3
0x47b	        0x488955b8	             mov qword [rbp - 0x48], rdx	        74	add.c	ELSE_1	FUNCTION_3
0x47f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        76	add.c	ELSE_1	FUNCTION_3
0x483	        0x488945d8	             mov qword [rbp - 0x28], rax	        76	add.c	ELSE_1	FUNCTION_3
0x487	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	        78	add.c	ELSE_1	FUNCTION_3	FOR_1
0x48e	      0xe92c010000	                           jmp 0x40005ff	        78	add.c	ELSE_1	FUNCTION_3	FOR_1
0x493	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        79	add.c	ELSE_1	FUNCTION_3	FOR_1
0x497	          0x488b00	                    mov rax, qword [rax]	        79	add.c	ELSE_1	FUNCTION_3	FOR_1
0x49a	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	        79	add.c	ELSE_1	FUNCTION_3	FOR_1
0x49d	          0x4863d2	                         movsxd rdx, edx	        79	add.c	ELSE_1	FUNCTION_3	FOR_1
0x4a0	        0x48c1e203	                              shl rdx, 3	        79	add.c	ELSE_1	FUNCTION_3	FOR_1
0x4a4	          0x4801d0	                            add rax, rdx	        79	add.c	ELSE_1	FUNCTION_3	FOR_1
0x4a7	          0x488b00	                    mov rax, qword [rax]	        79	add.c	ELSE_1	FUNCTION_3	FOR_1
0x4aa	        0x488945e0	             mov qword [rbp - 0x20], rax	        79	add.c	ELSE_1	FUNCTION_3	FOR_1
0x4ae	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        80	add.c	ELSE_1	FUNCTION_3	FOR_1
0x4b2	          0x488b00	                    mov rax, qword [rax]	        80	add.c	ELSE_1	FUNCTION_3	FOR_1
0x4b5	        0x488b4018	            mov rax, qword [rax + 0x18] 	        80	add.c	ELSE_1	FUNCTION_3	FOR_1
0x4b9	        0x488945e8	             mov qword [rbp - 0x18], rax	        80	add.c	ELSE_1	FUNCTION_3	FOR_1
0x4bd	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	        81	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_1
0x4c1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        81	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_1
0x4c5	          0x4889d6	                            mov rsi, rdx	        81	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_1
0x4c8	          0x4889c7	                            mov rdi, rax	        81	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_1
0x4cb	      0xe849ffffff	            call sym.fix_unmerged_status	        81	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_1
0x4d0	          0x83f84d	                           cmp eax, 0x4d	        81	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_1
0x4d3	            0x742e	                            je 0x4000543	        81	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_1
0x4d5	          0x83f854	                           cmp eax, 0x54	        81	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_1
0x4d8	            0x7429	                            je 0x4000543	        81	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_1
0x4da	          0x83f844	                           cmp eax, 0x44	        81	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_1
0x4dd	            0x747a	                            je 0x4000599	        81	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_1
0x4df	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        83	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_3
0x4e3	         0xfb64012	           movzx eax, byte [rax + 0x12] 	        83	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_3
0x4e7	           0xfbed8	                           movsx ebx, al	        83	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_3
0x4ea	      0xbf00000000	                              mov edi, 0	        83	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_3
0x4ef	      0xe843fdffff	                               call sym.	        83	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_3
0x4f4	            0x89de	                            mov esi, ebx	        83	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_3
0x4f6	          0x4889c7	                            mov rdi, rax	        83	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_3
0x4f9	      0xb800000000	                              mov eax, 0	        83	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_3
0x4fe	      0xe800000000	                          call 0x4000543	        83	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_3
0x503	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        86	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	CALL_4
0x507	            0x8b10	                    mov edx, dword [rax]	        86	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	CALL_4
0x509	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        86	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	CALL_4
0x50d	          0x4889c6	                            mov rsi, rax	        86	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	CALL_4
0x510	      0xbf00000000	                              mov edi, 0	        86	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	CALL_4
0x515	      0xe800000000	                          call 0x400055a	        86	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	CALL_4
0x51a	            0x85c0	                           test eax, eax	        86	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	CALL_4
0x51c	     0xf8492000000	                            je 0x40005f4	        86	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	CALL_4
0x522	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        87	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	IF_2
0x526	            0x8b00	                    mov eax, dword [rax]	        87	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	IF_2
0x528	          0x83e004	                              and eax, 4	        87	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	IF_2
0x52b	            0x85c0	                           test eax, eax	        87	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	IF_2
0x52d	            0x7517	                           jne 0x4000586	        87	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	IF_2
0x52f	      0xbf00000000	                              mov edi, 0	        88	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	CALL_6
0x534	      0xe8fefcffff	                               call sym.	        88	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	CALL_6
0x539	          0x4889c7	                            mov rdi, rax	        88	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	CALL_6
0x53c	      0xb800000000	                              mov eax, 0	        88	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	CALL_6
0x541	      0xe800000000	                          call 0x4000586	        88	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	CALL_6
0x546	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        89	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1
0x54a	          0x8b4004	                mov eax, dword [rax + 4]	        89	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1
0x54d	          0x8d5001	                      lea edx, [rax + 1]	        89	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1
0x550	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        89	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1
0x554	          0x895004	                mov dword [rax + 4], edx	        89	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1
0x557	            0xeb5b	                           jmp 0x40005f4	        91	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1
0x559	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        93	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_3
0x55d	            0x8b00	                    mov eax, dword [rax]	        93	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_3
0x55f	          0x83e008	                              and eax, 8	        93	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_3
0x562	            0x85c0	                           test eax, eax	        93	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_3
0x564	            0x7551	                           jne 0x40005f7	        93	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_3
0x566	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        95	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_4
0x56a	            0x8b00	                    mov eax, dword [rax]	        95	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_4
0x56c	          0x83e002	                              and eax, 2	        95	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_4
0x56f	            0x85c0	                           test eax, eax	        95	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_4
0x571	            0x7511	                           jne 0x40005c4	        95	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_4
0x573	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        96	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_7
0x577	          0x4889c6	                            mov rsi, rax	        96	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_7
0x57a	      0xbf00000000	                              mov edi, 0	        96	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_7
0x57f	      0xe800000000	                          call 0x40005c4	        96	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_7
0x584	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        97	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_5
0x588	            0x8b00	                    mov eax, dword [rax]	        97	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_5
0x58a	          0x83e003	                              and eax, 3	        97	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_5
0x58d	            0x85c0	                           test eax, eax	        97	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_5
0x58f	            0x7429	                            je 0x40005fa	        97	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_5
0x591	      0xbf00000000	                              mov edi, 0	        98	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_9
0x596	      0xe89cfcffff	                               call sym.	        98	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_9
0x59b	          0x4889c2	                            mov rdx, rax	        98	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_9
0x59e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        98	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_9
0x5a2	          0x4889c6	                            mov rsi, rax	        98	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_9
0x5a5	          0x4889d7	                            mov rdi, rdx	        98	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_9
0x5a8	      0xb800000000	                              mov eax, 0	        98	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_9
0x5ad	      0xe800000000	                          call 0x40005f2	        98	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_9
0x5b2	            0xeb06	                           jmp 0x40005fa	        99	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1
0x5b4	              0x90	                                     nop	        91	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1
0x5b5	            0xeb04	                           jmp 0x40005fb	        91	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1
0x5b7	              0x90	                                     nop	        94	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_3
0x5b8	            0xeb01	                           jmp 0x40005fb	        94	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_3
0x5ba	              0x90	                                     nop	        99	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1
0x5bb	        0x8345d401	               add dword [rbp - 0x2c], 1	        78	add.c	ELSE_1	FUNCTION_3	FOR_1
0x5bf	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        78	add.c	ELSE_1	FUNCTION_3	FOR_1
0x5c3	          0x8b400c	              mov eax, dword [rax + 0xc]	        78	add.c	ELSE_1	FUNCTION_3	FOR_1
0x5c6	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	        78	add.c	ELSE_1	FUNCTION_3	FOR_1
0x5c9	     0xf8fc4feffff	                            jg 0x40004d3	        78	add.c	ELSE_1	FUNCTION_3	FOR_1
0x5cf	              0x90	                                     nop	       102	add.c	ELSE_1	FUNCTION_3
0x5d0	        0x4883c448	                           add rsp, 0x48	       102	add.c	ELSE_1	FUNCTION_3
0x5d4	              0x5b	                                 pop rbx	       102	add.c	ELSE_1	FUNCTION_3
0x5d5	              0x5d	                                 pop rbp	       102	add.c	ELSE_1	FUNCTION_3
0x5d6	              0xc3	                                     ret	       102	add.c	ELSE_1	FUNCTION_3
_	FOR,0:DO,0:CALL,2:ELSE,0:IF,1:functions,0:SWITCH,0:WHILE,0	15
0x237	              0x55	                                push rbp	        51	gettext.h	FUNCTION_59
0x238	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_59
0x23b	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_59
0x23f	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_59
0x243	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_59	IF_1
0x247	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_59	IF_1
0x24a	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_59	IF_1
0x24c	            0x7507	                           jne 0x4000295	        52	gettext.h	FUNCTION_59	IF_1
0x24e	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_59	IF_1
0x253	            0xeb0c	                           jmp 0x40002a1	        53	gettext.h	FUNCTION_59	IF_1
0x255	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_59	CALL_2
0x259	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_59	CALL_2
0x25c	      0xe800000000	                          call 0x40002a1	        54	gettext.h	FUNCTION_59	CALL_2
0x261	              0xc9	                                   leave	        55	gettext.h	FUNCTION_59
0x262	              0xc3	                                     ret	        55	gettext.h	FUNCTION_59
add_files	FOR,2:DO,0:CALL,9:ELSE,0:IF,3:functions,0:SWITCH,0:WHILE,0	91
0xff0	              0x55	                                push rbp	       365	add.c	FUNCTION_14
0xff1	          0x4889e5	                            mov rbp, rsp	       365	add.c	FUNCTION_14
0xff4	        0x4883ec20	                           sub rsp, 0x20	       365	add.c	FUNCTION_14
0xff8	        0x48897de8	             mov qword [rbp - 0x18], rdi	       365	add.c	FUNCTION_14
0xffc	          0x8975e4	             mov dword [rbp - 0x1c], esi	       365	add.c	FUNCTION_14
0xfff	    0xc745fc000000	                  mov dword [rbp - 4], 0	       366	add.c	FUNCTION_14
0x1006	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       368	add.c	FUNCTION_14	IF_1
0x100a	          0x8b4008	                mov eax, dword [rax + 8]	       368	add.c	FUNCTION_14	IF_1
0x100d	            0x85c0	                           test eax, eax	       368	add.c	FUNCTION_14	IF_1
0x100f	     0xf849d000000	                            je 0x40010f2	       368	add.c	FUNCTION_14	IF_1
0x1015	      0xbf00000000	                              mov edi, 0	       369	add.c	FUNCTION_14	IF_1	CALL_2
0x101a	      0xe818f2ffff	                               call sym.	       369	add.c	FUNCTION_14	IF_1	CALL_2
0x101f	          0x4889c2	                            mov rdx, rax	       369	add.c	FUNCTION_14	IF_1	CALL_2
0x1022	    0x488b05000000	            mov rax, qword [0x04001069] 	       369	add.c	FUNCTION_14	IF_1	CALL_2
0x1029	          0x4889d6	                            mov rsi, rdx	       369	add.c	FUNCTION_14	IF_1	CALL_2
0x102c	          0x4889c7	                            mov rdi, rax	       369	add.c	FUNCTION_14	IF_1	CALL_2
0x102f	      0xb800000000	                              mov eax, 0	       369	add.c	FUNCTION_14	IF_1	CALL_2
0x1034	      0xe800000000	                          call 0x4001079	       369	add.c	FUNCTION_14	IF_1	CALL_2
0x1039	    0xc745f8000000	                  mov dword [rbp - 8], 0	       370	add.c	FUNCTION_14	IF_1	FOR_1
0x1040	            0xeb39	                           jmp 0x40010bb	       370	add.c	FUNCTION_14	IF_1	FOR_1
0x1042	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       371	add.c	FUNCTION_14	IF_1	CALL_3
0x1046	        0x488b4020	            mov rax, qword [rax + 0x20] 	       371	add.c	FUNCTION_14	IF_1	CALL_3
0x104a	          0x8b55f8	                mov edx, dword [rbp - 8]	       371	add.c	FUNCTION_14	IF_1	CALL_3
0x104d	          0x4863d2	                         movsxd rdx, edx	       371	add.c	FUNCTION_14	IF_1	CALL_3
0x1050	        0x48c1e203	                              shl rdx, 3	       371	add.c	FUNCTION_14	IF_1	CALL_3
0x1054	          0x4801d0	                            add rax, rdx	       371	add.c	FUNCTION_14	IF_1	CALL_3
0x1057	          0x488b00	                    mov rax, qword [rax]	       371	add.c	FUNCTION_14	IF_1	CALL_3
0x105a	        0x488d5004	                      lea rdx, [rax + 4]	       371	add.c	FUNCTION_14	IF_1	CALL_3
0x105e	    0x488b05000000	            mov rax, qword [0x040010a5] 	       371	add.c	FUNCTION_14	IF_1	CALL_3
0x1065	      0xbe00000000	                              mov esi, 0	       371	add.c	FUNCTION_14	IF_1	CALL_3
0x106a	          0x4889c7	                            mov rdi, rax	       371	add.c	FUNCTION_14	IF_1	CALL_3
0x106d	      0xb800000000	                              mov eax, 0	       371	add.c	FUNCTION_14	IF_1	CALL_3
0x1072	      0xe800000000	                          call 0x40010b7	       371	add.c	FUNCTION_14	IF_1	CALL_3
0x1077	        0x8345f801	                  add dword [rbp - 8], 1	       370	add.c	FUNCTION_14	IF_1	FOR_1
0x107b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       370	add.c	FUNCTION_14	IF_1	FOR_1
0x107f	          0x8b4008	                mov eax, dword [rax + 8]	       370	add.c	FUNCTION_14	IF_1	FOR_1
0x1082	          0x3b45f8	                cmp eax, dword [rbp - 8]	       370	add.c	FUNCTION_14	IF_1	FOR_1
0x1085	            0x7fbb	                            jg 0x4001082	       370	add.c	FUNCTION_14	IF_1	FOR_1
0x1087	      0xbf00000000	                              mov edi, 0	       372	add.c	FUNCTION_14	IF_1	CALL_5
0x108c	      0xe8a6f1ffff	                               call sym.	       372	add.c	FUNCTION_14	IF_1	CALL_5
0x1091	          0x4889c2	                            mov rdx, rax	       372	add.c	FUNCTION_14	IF_1	CALL_5
0x1094	    0x488b05000000	            mov rax, qword [0x040010db] 	       372	add.c	FUNCTION_14	IF_1	CALL_5
0x109b	          0x4889d6	                            mov rsi, rdx	       372	add.c	FUNCTION_14	IF_1	CALL_5
0x109e	          0x4889c7	                            mov rdi, rax	       372	add.c	FUNCTION_14	IF_1	CALL_5
0x10a1	      0xb800000000	                              mov eax, 0	       372	add.c	FUNCTION_14	IF_1	CALL_5
0x10a6	      0xe800000000	                          call 0x40010eb	       372	add.c	FUNCTION_14	IF_1	CALL_5
0x10ab	    0xc745fc010000	                  mov dword [rbp - 4], 1	       373	add.c	FUNCTION_14	IF_1
0x10b2	    0xc745f8000000	                  mov dword [rbp - 8], 0	       376	add.c	FUNCTION_14	FOR_2
0x10b9	      0xe982000000	                           jmp 0x4001180	       376	add.c	FUNCTION_14	FOR_2
0x10be	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       377	add.c	FUNCTION_14	FOR_2	CALL_6
0x10c2	        0x488b4018	            mov rax, qword [rax + 0x18] 	       377	add.c	FUNCTION_14	FOR_2	CALL_6
0x10c6	          0x8b55f8	                mov edx, dword [rbp - 8]	       377	add.c	FUNCTION_14	FOR_2	CALL_6
0x10c9	          0x4863d2	                         movsxd rdx, edx	       377	add.c	FUNCTION_14	FOR_2	CALL_6
0x10cc	        0x48c1e203	                              shl rdx, 3	       377	add.c	FUNCTION_14	FOR_2	CALL_6
0x10d0	          0x4801d0	                            add rax, rdx	       377	add.c	FUNCTION_14	FOR_2	CALL_6
0x10d3	          0x488b00	                    mov rax, qword [rax]	       377	add.c	FUNCTION_14	FOR_2	CALL_6
0x10d6	        0x4883c004	                              add rax, 4	       377	add.c	FUNCTION_14	FOR_2	CALL_6
0x10da	          0x4889c7	                            mov rdi, rax	       377	add.c	FUNCTION_14	FOR_2	CALL_6
0x10dd	      0xe816feffff	            call sym.check_embedded_repo	       377	add.c	FUNCTION_14	FOR_2	CALL_6
0x10e2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       378	add.c	FUNCTION_14	FOR_2	IF_2	CALL_7
0x10e6	        0x488b4018	            mov rax, qword [rax + 0x18] 	       378	add.c	FUNCTION_14	FOR_2	IF_2	CALL_7
0x10ea	          0x8b55f8	                mov edx, dword [rbp - 8]	       378	add.c	FUNCTION_14	FOR_2	IF_2	CALL_7
0x10ed	          0x4863d2	                         movsxd rdx, edx	       378	add.c	FUNCTION_14	FOR_2	IF_2	CALL_7
0x10f0	        0x48c1e203	                              shl rdx, 3	       378	add.c	FUNCTION_14	FOR_2	IF_2	CALL_7
0x10f4	          0x4801d0	                            add rax, rdx	       378	add.c	FUNCTION_14	FOR_2	IF_2	CALL_7
0x10f7	          0x488b00	                    mov rax, qword [rax]	       378	add.c	FUNCTION_14	FOR_2	IF_2	CALL_7
0x10fa	        0x488d4804	                      lea rcx, [rax + 4]	       378	add.c	FUNCTION_14	FOR_2	IF_2	CALL_7
0x10fe	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       378	add.c	FUNCTION_14	FOR_2	IF_2	CALL_7
0x1101	            0x89c2	                            mov edx, eax	       378	add.c	FUNCTION_14	FOR_2	IF_2	CALL_7
0x1103	          0x4889ce	                            mov rsi, rcx	       378	add.c	FUNCTION_14	FOR_2	IF_2	CALL_7
0x1106	      0xbf00000000	                              mov edi, 0	       378	add.c	FUNCTION_14	FOR_2	IF_2	CALL_7
0x110b	      0xe800000000	                          call 0x4001150	       378	add.c	FUNCTION_14	FOR_2	IF_2	CALL_7
0x1110	            0x85c0	                           test eax, eax	       378	add.c	FUNCTION_14	FOR_2	IF_2	CALL_7
0x1112	            0x7428	                            je 0x400117c	       378	add.c	FUNCTION_14	FOR_2	IF_2	CALL_7
0x1114	    0x8b0500000000	            mov eax, dword [0x0400115a] 	       379	add.c	FUNCTION_14	FOR_2	IF_2	IF_3
0x111a	            0x85c0	                           test eax, eax	       379	add.c	FUNCTION_14	FOR_2	IF_2	IF_3
0x111c	            0x7517	                           jne 0x4001175	       379	add.c	FUNCTION_14	FOR_2	IF_2	IF_3
0x111e	      0xbf00000000	                              mov edi, 0	       380	add.c	FUNCTION_14	FOR_2	IF_2	CALL_9
0x1123	      0xe80ff1ffff	                               call sym.	       380	add.c	FUNCTION_14	FOR_2	IF_2	CALL_9
0x1128	          0x4889c7	                            mov rdi, rax	       380	add.c	FUNCTION_14	FOR_2	IF_2	CALL_9
0x112b	      0xb800000000	                              mov eax, 0	       380	add.c	FUNCTION_14	FOR_2	IF_2	CALL_9
0x1130	      0xe800000000	                          call 0x4001175	       380	add.c	FUNCTION_14	FOR_2	IF_2	CALL_9
0x1135	    0xc745fc010000	                  mov dword [rbp - 4], 1	       381	add.c	FUNCTION_14	FOR_2	IF_2
0x113c	        0x8345f801	                  add dword [rbp - 8], 1	       376	add.c	FUNCTION_14	FOR_2
0x1140	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       376	add.c	FUNCTION_14	FOR_2
0x1144	            0x8b00	                    mov eax, dword [rax]	       376	add.c	FUNCTION_14	FOR_2
0x1146	          0x3b45f8	                cmp eax, dword [rbp - 8]	       376	add.c	FUNCTION_14	FOR_2
0x1149	     0xf8f6fffffff	                            jg 0x40010fe	       376	add.c	FUNCTION_14	FOR_2
0x114f	          0x8b45fc	                mov eax, dword [rbp - 4]	       384	add.c	FUNCTION_14
0x1152	              0xc9	                                   leave	       385	add.c	FUNCTION_14
0x1153	              0xc3	                                     ret	       385	add.c	FUNCTION_14
add_config	FOR,0:DO,0:CALL,4:ELSE,0:IF,1:functions,0:SWITCH,0:WHILE,0	34
0xe81	              0x55	                                push rbp	       316	add.c	FUNCTION_12
0xe82	          0x4889e5	                            mov rbp, rsp	       316	add.c	FUNCTION_12
0xe85	        0x4883ec20	                           sub rsp, 0x20	       316	add.c	FUNCTION_12
0xe89	        0x48897df8	                mov qword [rbp - 8], rdi	       316	add.c	FUNCTION_12
0xe8d	        0x488975f0	             mov qword [rbp - 0x10], rsi	       316	add.c	FUNCTION_12
0xe91	        0x488955e8	             mov qword [rbp - 0x18], rdx	       316	add.c	FUNCTION_12
0xe95	        0x488b45f8	                mov rax, qword [rbp - 8]	       317	add.c	FUNCTION_12	IF_1	CALL_1
0xe99	      0xbe00000000	                              mov esi, 0	       317	add.c	FUNCTION_12	IF_1	CALL_1
0xe9e	          0x4889c7	                            mov rdi, rax	       317	add.c	FUNCTION_12	IF_1	CALL_1
0xea1	      0xe800000000	                          call 0x4000ee6	       317	add.c	FUNCTION_12	IF_1	CALL_1
0xea6	            0x85c0	                           test eax, eax	       317	add.c	FUNCTION_12	IF_1	CALL_1
0xea8	            0x7415	                            je 0x4000eff	       317	add.c	FUNCTION_12	IF_1	CALL_1
0xeaa	        0x488b45f8	                mov rax, qword [rbp - 8]	       318	add.c	FUNCTION_12	IF_1	CALL_2
0xeae	      0xbe00000000	                              mov esi, 0	       318	add.c	FUNCTION_12	IF_1	CALL_2
0xeb3	          0x4889c7	                            mov rdi, rax	       318	add.c	FUNCTION_12	IF_1	CALL_2
0xeb6	      0xe800000000	                          call 0x4000efb	       318	add.c	FUNCTION_12	IF_1	CALL_2
0xebb	            0x85c0	                           test eax, eax	       317	add.c	FUNCTION_12	IF_1	CALL_1
0xebd	            0x7520	                           jne 0x4000f1f	       317	add.c	FUNCTION_12	IF_1	CALL_1
0xebf	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       319	add.c	FUNCTION_12	IF_1	CALL_3
0xec3	        0x488b45f8	                mov rax, qword [rbp - 8]	       319	add.c	FUNCTION_12	IF_1	CALL_3
0xec7	          0x4889d6	                            mov rsi, rdx	       319	add.c	FUNCTION_12	IF_1	CALL_3
0xeca	          0x4889c7	                            mov rdi, rax	       319	add.c	FUNCTION_12	IF_1	CALL_3
0xecd	      0xe800000000	                          call 0x4000f12	       319	add.c	FUNCTION_12	IF_1	CALL_3
0xed2	    0x890500000000	            mov dword [0x04000f18], eax 	       319	add.c	FUNCTION_12	IF_1	CALL_3
0xed8	      0xb800000000	                              mov eax, 0	       320	add.c	FUNCTION_12	IF_1
0xedd	            0xeb17	                           jmp 0x4000f36	       320	add.c	FUNCTION_12	IF_1
0xedf	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       322	add.c	FUNCTION_12	CALL_4
0xee3	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       322	add.c	FUNCTION_12	CALL_4
0xee7	        0x488b45f8	                mov rax, qword [rbp - 8]	       322	add.c	FUNCTION_12	CALL_4
0xeeb	          0x4889ce	                            mov rsi, rcx	       322	add.c	FUNCTION_12	CALL_4
0xeee	          0x4889c7	                            mov rdi, rax	       322	add.c	FUNCTION_12	CALL_4
0xef1	      0xe800000000	                          call 0x4000f36	       322	add.c	FUNCTION_12	CALL_4
0xef6	              0xc9	                                   leave	       323	add.c	FUNCTION_12
0xef7	              0xc3	                                     ret	       323	add.c	FUNCTION_12
ignore_removal_cb	FOR,0:DO,0:CALL,0:ELSE,0:IF,0:functions,0:SWITCH,0:WHILE,0	14
0xe57	              0x55	                                push rbp	       284	add.c	FUNCTION_11
0xe58	          0x4889e5	                            mov rbp, rsp	       284	add.c	FUNCTION_11
0xe5b	        0x48897df8	                mov qword [rbp - 8], rdi	       284	add.c	FUNCTION_11
0xe5f	        0x488975f0	             mov qword [rbp - 0x10], rsi	       284	add.c	FUNCTION_11
0xe63	          0x8955ec	             mov dword [rbp - 0x14], edx	       284	add.c	FUNCTION_11
0xe66	        0x488b45f8	                mov rax, qword [rbp - 8]	       286	add.c	FUNCTION_11
0xe6a	        0x488b4010	            mov rax, qword [rax + 0x10] 	       286	add.c	FUNCTION_11
0xe6e	        0x837dec00	               cmp dword [rbp - 0x14], 0	       286	add.c	FUNCTION_11
0xe72	           0xf95c2	                                setne dl	       286	add.c	FUNCTION_11
0xe75	           0xfb6d2	                           movzx edx, dl	       286	add.c	FUNCTION_11
0xe78	            0x8910	                    mov dword [rax], edx	       286	add.c	FUNCTION_11
0xe7a	      0xb800000000	                              mov eax, 0	       287	add.c	FUNCTION_11
0xe7f	              0x5d	                                 pop rbp	       288	add.c	FUNCTION_11
0xe80	              0xc3	                                     ret	       288	add.c	FUNCTION_11
cmd_add	FOR,1:DO,0:CALL,46:ELSE,3:IF,25:functions,0:SWITCH,0:WHILE,0	458
0x1154	              0x55	                                push rbp	       388	add.c	FUNCTION_15
0x1155	          0x4889e5	                            mov rbp, rsp	       388	add.c	FUNCTION_15
0x1158	              0x53	                                push rbx	       388	add.c	FUNCTION_15
0x1159	    0x4881ec980100	                          sub rsp, 0x198	       388	add.c	FUNCTION_15
0x1160	    0x89bd7cfeffff	            mov dword [rbp - 0x184], edi	       388	add.c	FUNCTION_15
0x1166	    0x4889b570feff	            mov qword [rbp - 0x190], rsi	       388	add.c	FUNCTION_15
0x116d	    0x48899568feff	            mov qword [rbp - 0x198], rdx	       388	add.c	FUNCTION_15
0x1174	    0x64488b042528	                mov rax, qword fs:[0x28]	       388	add.c	FUNCTION_15
0x117d	        0x488945e8	             mov qword [rbp - 0x18], rax	       388	add.c	FUNCTION_15
0x1181	            0x31c0	                            xor eax, eax	       388	add.c	FUNCTION_15
0x1183	    0xc78588feffff	              mov dword [rbp - 0x178], 0	       389	add.c	FUNCTION_15
0x118d	    0x48c785a0feff	              mov qword [rbp - 0x160], 0	       395	add.c	FUNCTION_15
0x1198	      0xbe00000000	                              mov esi, 0	       397	add.c	FUNCTION_15	CALL_1
0x119d	      0xbf00000000	                              mov edi, 0	       397	add.c	FUNCTION_15	CALL_1
0x11a2	      0xe800000000	                          call 0x40011e7	       397	add.c	FUNCTION_15	CALL_1
0x11a7	    0x488b9568feff	            mov rdx, qword [rbp - 0x198]	       399	add.c	FUNCTION_15	CALL_2
0x11ae	    0x488bb570feff	            mov rsi, qword [rbp - 0x190]	       399	add.c	FUNCTION_15	CALL_2
0x11b5	    0x8b857cfeffff	            mov eax, dword [rbp - 0x184]	       399	add.c	FUNCTION_15	CALL_2
0x11bb	    0x41b904000000	                              mov r9d, 4	       399	add.c	FUNCTION_15	CALL_2
0x11c1	    0x41b800000000	                              mov r8d, 0	       399	add.c	FUNCTION_15	CALL_2
0x11c7	      0xb900000000	                              mov ecx, 0	       399	add.c	FUNCTION_15	CALL_2
0x11cc	            0x89c7	                            mov edi, eax	       399	add.c	FUNCTION_15	CALL_2
0x11ce	      0xe800000000	                          call 0x4001213	       399	add.c	FUNCTION_15	CALL_2
0x11d3	    0x89857cfeffff	            mov dword [rbp - 0x184], eax	       399	add.c	FUNCTION_15	CALL_2
0x11d9	    0x8b0500000000	            mov eax, dword [0x0400121f] 	       401	add.c	FUNCTION_15	IF_1
0x11df	            0x85c0	                           test eax, eax	       401	add.c	FUNCTION_15	IF_1
0x11e1	            0x740a	                            je 0x400122d	       401	add.c	FUNCTION_15	IF_1
0x11e3	    0xc70500000000	               mov dword [0x0400122d], 1	       402	add.c	FUNCTION_15	IF_1
0x11ed	    0x8b0500000000	            mov eax, dword [0x04001233] 	       403	add.c	FUNCTION_15	IF_2
0x11f3	            0x85c0	                           test eax, eax	       403	add.c	FUNCTION_15	IF_2
0x11f5	            0x7432	                            je 0x4001269	       403	add.c	FUNCTION_15	IF_2
0x11f7	    0x8b1500000000	            mov edx, dword [0x0400123d] 	       404	add.c	FUNCTION_15	CALL_4
0x11fd	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	       404	add.c	FUNCTION_15	CALL_4
0x1204	        0x488d7008	                      lea rsi, [rax + 8]	       404	add.c	FUNCTION_15	CALL_4
0x1208	    0x8b857cfeffff	            mov eax, dword [rbp - 0x184]	       404	add.c	FUNCTION_15	CALL_4
0x120e	          0x8d78ff	                      lea edi, [rax - 1]	       404	add.c	FUNCTION_15	CALL_4
0x1211	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	       404	add.c	FUNCTION_15	CALL_4
0x1218	            0x89d1	                            mov ecx, edx	       404	add.c	FUNCTION_15	CALL_4
0x121a	          0x4889c2	                            mov rdx, rax	       404	add.c	FUNCTION_15	CALL_4
0x121d	      0xe800000000	                          call 0x4001262	       404	add.c	FUNCTION_15	CALL_4
0x1222	            0x89c7	                            mov edi, eax	       404	add.c	FUNCTION_15	CALL_4
0x1224	      0xe800000000	                          call 0x4001269	       404	add.c	FUNCTION_15	CALL_4
0x1229	    0x8b0500000000	            mov eax, dword [0x0400126f] 	       406	add.c	FUNCTION_15	IF_3
0x122f	            0x85c0	                           test eax, eax	       406	add.c	FUNCTION_15	IF_3
0x1231	            0x7423	                            je 0x4001296	       406	add.c	FUNCTION_15	IF_3
0x1233	    0x488b9568feff	            mov rdx, qword [rbp - 0x198]	       407	add.c	FUNCTION_15	CALL_5
0x123a	    0x488b8d70feff	            mov rcx, qword [rbp - 0x190]	       407	add.c	FUNCTION_15	CALL_5
0x1241	    0x8b857cfeffff	            mov eax, dword [rbp - 0x184]	       407	add.c	FUNCTION_15	CALL_5
0x1247	          0x4889ce	                            mov rsi, rcx	       407	add.c	FUNCTION_15	CALL_5
0x124a	            0x89c7	                            mov edi, eax	       407	add.c	FUNCTION_15	CALL_5
0x124c	      0xe8e6f8ffff	                     call sym.edit_patch	       407	add.c	FUNCTION_15	CALL_5
0x1251	      0xe9c7060000	                           jmp 0x400195d	       407	add.c	FUNCTION_15	CALL_5
0x1256	    0x83ad7cfeffff	              sub dword [rbp - 0x184], 1	       408	add.c	FUNCTION_15
0x125d	    0x48838570feff	              add qword [rbp - 0x190], 8	       409	add.c	FUNCTION_15
0x1265	    0x8b0500000000	            mov eax, dword [0x040012ab] 	       411	add.c	FUNCTION_15	IF_4
0x126b	            0x85c0	                           test eax, eax	       411	add.c	FUNCTION_15	IF_4
0x126d	            0x780e	                            js 0x40012bd	       411	add.c	FUNCTION_15	IF_4
0x126f	    0x8b0500000000	            mov eax, dword [0x040012b5] 	       412	add.c	FUNCTION_15	IF_4
0x1275	    0x890500000000	            mov dword [0x040012bb], eax 	       412	add.c	FUNCTION_15	IF_4
0x127b	            0xeb14	                           jmp 0x40012d1	       412	add.c	FUNCTION_15	IF_4
0x127d	    0x8b0500000000	            mov eax, dword [0x040012c3] 	       413	add.c	FUNCTION_15	ELSE_1	IF_5
0x1283	            0x85c0	                           test eax, eax	       413	add.c	FUNCTION_15	ELSE_1	IF_5
0x1285	            0x740a	                            je 0x40012d1	       413	add.c	FUNCTION_15	ELSE_1	IF_5
0x1287	    0xc70500000000	               mov dword [0x040012d1], 0	       414	add.c	FUNCTION_15	ELSE_1	IF_5
0x1291	    0x8b0500000000	            mov eax, dword [0x040012d7] 	       416	add.c	FUNCTION_15	IF_6
0x1297	            0x85c0	                           test eax, eax	       416	add.c	FUNCTION_15	IF_6
0x1299	            0x7421	                            je 0x40012fc	       416	add.c	FUNCTION_15	IF_6
0x129b	    0x8b0500000000	            mov eax, dword [0x040012e1] 	       416	add.c	FUNCTION_15	IF_6
0x12a1	            0x85c0	                           test eax, eax	       416	add.c	FUNCTION_15	IF_6
0x12a3	            0x7417	                            je 0x40012fc	       416	add.c	FUNCTION_15	IF_6
0x12a5	      0xbf00000000	                              mov edi, 0	       417	add.c	FUNCTION_15	CALL_7
0x12aa	      0xe888efffff	                               call sym.	       417	add.c	FUNCTION_15	CALL_7
0x12af	          0x4889c7	                            mov rdi, rax	       417	add.c	FUNCTION_15	CALL_7
0x12b2	      0xb800000000	                              mov eax, 0	       417	add.c	FUNCTION_15	CALL_7
0x12b7	      0xe800000000	                          call 0x40012fc	       417	add.c	FUNCTION_15	CALL_7
0x12bc	    0x8b0500000000	            mov eax, dword [0x04001302] 	       419	add.c	FUNCTION_15	IF_7
0x12c2	            0x85c0	                           test eax, eax	       419	add.c	FUNCTION_15	IF_7
0x12c4	            0x751d	                           jne 0x4001323	       419	add.c	FUNCTION_15	IF_7
0x12c6	    0x8b0500000000	            mov eax, dword [0x0400130c] 	       419	add.c	FUNCTION_15	IF_7
0x12cc	            0x85c0	                           test eax, eax	       419	add.c	FUNCTION_15	IF_7
0x12ce	            0x7913	                           jns 0x4001323	       419	add.c	FUNCTION_15	IF_7
0x12d0	    0x83bd7cfeffff	              cmp dword [rbp - 0x184], 0	       419	add.c	FUNCTION_15	IF_7
0x12d7	            0x740a	                            je 0x4001323	       419	add.c	FUNCTION_15	IF_7
0x12d9	    0xc70500000000	               mov dword [0x04001323], 1	       421	add.c	FUNCTION_15	IF_7
0x12e3	    0x8b0500000000	            mov eax, dword [0x04001329] 	       423	add.c	FUNCTION_15	IF_8
0x12e9	            0x85c0	                           test eax, eax	       423	add.c	FUNCTION_15	IF_8
0x12eb	            0x7521	                           jne 0x400134e	       423	add.c	FUNCTION_15	IF_8
0x12ed	    0x8b0500000000	            mov eax, dword [0x04001333] 	       423	add.c	FUNCTION_15	IF_8
0x12f3	            0x85c0	                           test eax, eax	       423	add.c	FUNCTION_15	IF_8
0x12f5	            0x7417	                            je 0x400134e	       423	add.c	FUNCTION_15	IF_8
0x12f7	      0xbf00000000	                              mov edi, 0	       424	add.c	FUNCTION_15	CALL_9
0x12fc	      0xe836efffff	                               call sym.	       424	add.c	FUNCTION_15	CALL_9
0x1301	          0x4889c7	                            mov rdi, rax	       424	add.c	FUNCTION_15	CALL_9
0x1304	      0xb800000000	                              mov eax, 0	       424	add.c	FUNCTION_15	CALL_9
0x1309	      0xe800000000	                          call 0x400134e	       424	add.c	FUNCTION_15	CALL_9
0x130e	    0x488b05000000	            mov rax, qword [0x04001355] 	       426	add.c	FUNCTION_15	IF_9
0x1315	          0x4885c0	                           test rax, rax	       426	add.c	FUNCTION_15	IF_9
0x1318	            0x7461	                            je 0x40013bb	       426	add.c	FUNCTION_15	IF_9
0x131a	    0x488b05000000	            mov rax, qword [0x04001361] 	       426	add.c	FUNCTION_15	IF_9
0x1321	           0xfb600	                   movzx eax, byte [rax]	       426	add.c	FUNCTION_15	IF_9
0x1324	            0x3c2d	                            cmp al, 0x2d	       426	add.c	FUNCTION_15	IF_9
0x1326	            0x740e	                            je 0x4001376	       426	add.c	FUNCTION_15	IF_9
0x1328	    0x488b05000000	            mov rax, qword [0x0400136f] 	       426	add.c	FUNCTION_15	IF_9
0x132f	           0xfb600	                   movzx eax, byte [rax]	       426	add.c	FUNCTION_15	IF_9
0x1332	            0x3c2b	                            cmp al, 0x2b	       426	add.c	FUNCTION_15	IF_9
0x1334	            0x7524	                           jne 0x400139a	       426	add.c	FUNCTION_15	IF_9
0x1336	    0x488b05000000	            mov rax, qword [0x0400137d] 	       427	add.c	FUNCTION_15	IF_9
0x133d	        0x4883c001	                              add rax, 1	       427	add.c	FUNCTION_15	IF_9
0x1341	           0xfb600	                   movzx eax, byte [rax]	       427	add.c	FUNCTION_15	IF_9
0x1344	            0x3c78	                            cmp al, 0x78	       426	add.c	FUNCTION_15	IF_9
0x1346	            0x7512	                           jne 0x400139a	       426	add.c	FUNCTION_15	IF_9
0x1348	    0x488b05000000	            mov rax, qword [0x0400138f] 	       427	add.c	FUNCTION_15	IF_9
0x134f	        0x4883c002	                              add rax, 2	       427	add.c	FUNCTION_15	IF_9
0x1353	           0xfb600	                   movzx eax, byte [rax]	       427	add.c	FUNCTION_15	IF_9
0x1356	            0x84c0	                             test al, al	       427	add.c	FUNCTION_15	IF_9
0x1358	            0x7421	                            je 0x40013bb	       427	add.c	FUNCTION_15	IF_9
0x135a	    0x488b1d000000	            mov rbx, qword [0x040013a1] 	       428	add.c	FUNCTION_15	CALL_11
0x1361	      0xbf00000000	                              mov edi, 0	       428	add.c	FUNCTION_15	CALL_11
0x1366	      0xe8cceeffff	                               call sym.	       428	add.c	FUNCTION_15	CALL_11
0x136b	          0x4889de	                            mov rsi, rbx	       428	add.c	FUNCTION_15	CALL_11
0x136e	          0x4889c7	                            mov rdi, rax	       428	add.c	FUNCTION_15	CALL_11
0x1371	      0xb800000000	                              mov eax, 0	       428	add.c	FUNCTION_15	CALL_11
0x1376	      0xe800000000	                          call 0x40013bb	       428	add.c	FUNCTION_15	CALL_11
0x137b	    0x8b0500000000	            mov eax, dword [0x040013c1] 	       430	add.c	FUNCTION_15
0x1381	            0x85c0	                           test eax, eax	       430	add.c	FUNCTION_15
0x1383	            0x751b	                           jne 0x40013e0	       430	add.c	FUNCTION_15
0x1385	    0x8b0500000000	            mov eax, dword [0x040013cb] 	       430	add.c	FUNCTION_15
0x138b	            0x85c0	                           test eax, eax	       430	add.c	FUNCTION_15
0x138d	            0x7511	                           jne 0x40013e0	       430	add.c	FUNCTION_15
0x138f	    0x8b0500000000	            mov eax, dword [0x040013d5] 	       430	add.c	FUNCTION_15
0x1395	            0x85c0	                           test eax, eax	       430	add.c	FUNCTION_15
0x1397	            0x7507	                           jne 0x40013e0	       430	add.c	FUNCTION_15
0x1399	      0xb801000000	                              mov eax, 1	       430	add.c	FUNCTION_15
0x139e	            0xeb05	                           jmp 0x40013e5	       430	add.c	FUNCTION_15
0x13a0	      0xb800000000	                              mov eax, 0	       430	add.c	FUNCTION_15
0x13a5	    0x898590feffff	            mov dword [rbp - 0x170], eax	       430	add.c	FUNCTION_15
0x13ab	    0x8b0500000000	            mov eax, dword [0x040013f1] 	       431	add.c	FUNCTION_15
0x13b1	            0x85c0	                           test eax, eax	       431	add.c	FUNCTION_15
0x13b3	            0x7511	                           jne 0x4001406	       431	add.c	FUNCTION_15
0x13b5	    0x8b0500000000	            mov eax, dword [0x040013fb] 	       431	add.c	FUNCTION_15
0x13bb	            0x85c0	                           test eax, eax	       431	add.c	FUNCTION_15
0x13bd	            0x7f07	                            jg 0x4001406	       431	add.c	FUNCTION_15
0x13bf	      0xb801000000	                              mov eax, 1	       431	add.c	FUNCTION_15
0x13c4	            0xeb05	                           jmp 0x400140b	       431	add.c	FUNCTION_15
0x13c6	      0xb800000000	                              mov eax, 0	       431	add.c	FUNCTION_15
0x13cb	    0x898594feffff	            mov dword [rbp - 0x16c], eax	       431	add.c	FUNCTION_15
0x13d1	      0xbe01000000	                              mov esi, 1	       433	add.c	FUNCTION_15	CALL_12
0x13d6	      0xbf00000000	                              mov edi, 0	       433	add.c	FUNCTION_15	CALL_12
0x13db	      0xe800000000	                          call 0x4001420	       433	add.c	FUNCTION_15	CALL_12
0x13e0	    0x8b0500000000	            mov eax, dword [0x04001426] 	       435	add.c	FUNCTION_15
0x13e6	            0x85c0	                           test eax, eax	       435	add.c	FUNCTION_15
0x13e8	           0xf95c0	                                setne al	       435	add.c	FUNCTION_15
0x13eb	           0xfb6d0	                           movzx edx, al	       435	add.c	FUNCTION_15
0x13ee	    0x8b0500000000	            mov eax, dword [0x04001434] 	       436	add.c	FUNCTION_15
0x13f4	            0x85c0	                           test eax, eax	       436	add.c	FUNCTION_15
0x13f6	            0x7407	                            je 0x400143f	       436	add.c	FUNCTION_15
0x13f8	      0xb802000000	                              mov eax, 2	       436	add.c	FUNCTION_15
0x13fd	            0xeb05	                           jmp 0x4001444	       436	add.c	FUNCTION_15
0x13ff	      0xb800000000	                              mov eax, 0	       436	add.c	FUNCTION_15
0x1404	             0x9c2	                             or edx, eax	       435	add.c	FUNCTION_15
0x1406	    0x8b0500000000	            mov eax, dword [0x0400144c] 	       437	add.c	FUNCTION_15
0x140c	            0x85c0	                           test eax, eax	       437	add.c	FUNCTION_15
0x140e	            0x7407	                            je 0x4001457	       437	add.c	FUNCTION_15
0x1410	      0xb810000000	                           mov eax, 0x10	       437	add.c	FUNCTION_15
0x1415	            0xeb05	                           jmp 0x400145c	       437	add.c	FUNCTION_15
0x1417	      0xb800000000	                              mov eax, 0	       437	add.c	FUNCTION_15
0x141c	             0x9c2	                             or edx, eax	       436	add.c	FUNCTION_15
0x141e	    0x8b0500000000	            mov eax, dword [0x04001464] 	       438	add.c	FUNCTION_15
0x1424	            0x85c0	                           test eax, eax	       438	add.c	FUNCTION_15
0x1426	            0x7407	                            je 0x400146f	       438	add.c	FUNCTION_15
0x1428	      0xb804000000	                              mov eax, 4	       438	add.c	FUNCTION_15
0x142d	            0xeb05	                           jmp 0x4001474	       438	add.c	FUNCTION_15
0x142f	      0xb800000000	                              mov eax, 0	       438	add.c	FUNCTION_15
0x1434	             0x9c2	                             or edx, eax	       437	add.c	FUNCTION_15
0x1436	    0x8b0500000000	            mov eax, dword [0x0400147c] 	       439	add.c	FUNCTION_15
0x143c	            0x85c0	                           test eax, eax	       440	add.c	FUNCTION_15
0x143e	            0x7511	                           jne 0x4001491	       440	add.c	FUNCTION_15
0x1440	    0x8b0500000000	            mov eax, dword [0x04001486] 	       439	add.c	FUNCTION_15
0x1446	            0x85c0	                           test eax, eax	       439	add.c	FUNCTION_15
0x1448	            0x7507	                           jne 0x4001491	       439	add.c	FUNCTION_15
0x144a	      0xb808000000	                              mov eax, 8	       440	add.c	FUNCTION_15
0x144f	            0xeb05	                           jmp 0x4001496	       440	add.c	FUNCTION_15
0x1451	      0xb800000000	                              mov eax, 0	       440	add.c	FUNCTION_15
0x1456	             0x9d0	                             or eax, edx	       435	add.c	FUNCTION_15
0x1458	    0x898598feffff	            mov dword [rbp - 0x168], eax	       435	add.c	FUNCTION_15
0x145e	    0x83bd94feffff	              cmp dword [rbp - 0x16c], 0	       442	add.c	FUNCTION_15	IF_10
0x1465	            0x745b	                            je 0x4001502	       442	add.c	FUNCTION_15	IF_10
0x1467	    0x83bd7cfeffff	              cmp dword [rbp - 0x184], 0	       442	add.c	FUNCTION_15	IF_10
0x146e	            0x7552	                           jne 0x4001502	       442	add.c	FUNCTION_15	IF_10
0x1470	      0xbf00000000	                              mov edi, 0	       443	add.c	FUNCTION_15	IF_10	CALL_14
0x1475	      0xe8bdedffff	                               call sym.	       443	add.c	FUNCTION_15	IF_10	CALL_14
0x147a	          0x4889c2	                            mov rdx, rax	       443	add.c	FUNCTION_15	IF_10	CALL_14
0x147d	    0x488b05000000	            mov rax, qword [0x040014c4] 	       443	add.c	FUNCTION_15	IF_10	CALL_14
0x1484	          0x4889d6	                            mov rsi, rdx	       443	add.c	FUNCTION_15	IF_10	CALL_14
0x1487	          0x4889c7	                            mov rdi, rax	       443	add.c	FUNCTION_15	IF_10	CALL_14
0x148a	      0xb800000000	                              mov eax, 0	       443	add.c	FUNCTION_15	IF_10	CALL_14
0x148f	      0xe800000000	                          call 0x40014d4	       443	add.c	FUNCTION_15	IF_10	CALL_14
0x1494	      0xbf00000000	                              mov edi, 0	       444	add.c	FUNCTION_15	IF_10	CALL_16
0x1499	      0xe899edffff	                               call sym.	       444	add.c	FUNCTION_15	IF_10	CALL_16
0x149e	          0x4889c2	                            mov rdx, rax	       444	add.c	FUNCTION_15	IF_10	CALL_16
0x14a1	    0x488b05000000	            mov rax, qword [0x040014e8] 	       444	add.c	FUNCTION_15	IF_10	CALL_16
0x14a8	          0x4889d6	                            mov rsi, rdx	       444	add.c	FUNCTION_15	IF_10	CALL_16
0x14ab	          0x4889c7	                            mov rdi, rax	       444	add.c	FUNCTION_15	IF_10	CALL_16
0x14ae	      0xb800000000	                              mov eax, 0	       444	add.c	FUNCTION_15	IF_10	CALL_16
0x14b3	      0xe800000000	                          call 0x40014f8	       444	add.c	FUNCTION_15	IF_10	CALL_16
0x14b8	      0xb800000000	                              mov eax, 0	       445	add.c	FUNCTION_15	IF_10
0x14bd	      0xe95b040000	                           jmp 0x400195d	       445	add.c	FUNCTION_15	IF_10
0x14c2	      0xbf00000000	                              mov edi, 0	       448	add.c	FUNCTION_15	IF_11	CALL_17
0x14c7	      0xe800000000	                          call 0x400150c	       448	add.c	FUNCTION_15	IF_11	CALL_17
0x14cc	            0x85c0	                           test eax, eax	       448	add.c	FUNCTION_15	IF_11	CALL_17
0x14ce	            0x7917	                           jns 0x4001527	       448	add.c	FUNCTION_15	IF_11	CALL_17
0x14d0	      0xbf00000000	                              mov edi, 0	       449	add.c	FUNCTION_15	CALL_19
0x14d5	      0xe85dedffff	                               call sym.	       449	add.c	FUNCTION_15	CALL_19
0x14da	          0x4889c7	                            mov rdi, rax	       449	add.c	FUNCTION_15	CALL_19
0x14dd	      0xb800000000	                              mov eax, 0	       449	add.c	FUNCTION_15	CALL_19
0x14e2	      0xe800000000	                          call 0x4001527	       449	add.c	FUNCTION_15	CALL_19
0x14e7	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	       451	add.c	FUNCTION_15	CALL_20
0x14ee	          0x4889c6	                            mov rsi, rax	       451	add.c	FUNCTION_15	CALL_20
0x14f1	      0xbf00000000	                              mov edi, 0	       451	add.c	FUNCTION_15	CALL_20
0x14f6	      0xe800000000	                          call 0x400153b	       451	add.c	FUNCTION_15	CALL_20
0x14fb	    0x488b8d70feff	            mov rcx, qword [rbp - 0x190]	       457	add.c	FUNCTION_15	CALL_21
0x1502	    0x488b9568feff	            mov rdx, qword [rbp - 0x198]	       457	add.c	FUNCTION_15	CALL_21
0x1509	    0x488d85b0feff	                  lea rax, [rbp - 0x150]	       457	add.c	FUNCTION_15	CALL_21
0x1510	          0x4989c8	                             mov r8, rcx	       457	add.c	FUNCTION_15	CALL_21
0x1513	          0x4889d1	                            mov rcx, rdx	       457	add.c	FUNCTION_15	CALL_21
0x1516	      0xba0a000000	                            mov edx, 0xa	       457	add.c	FUNCTION_15	CALL_21
0x151b	      0xbe00000000	                              mov esi, 0	       457	add.c	FUNCTION_15	CALL_21
0x1520	          0x4889c7	                            mov rdi, rax	       457	add.c	FUNCTION_15	CALL_21
0x1523	      0xe800000000	                          call 0x4001568	       457	add.c	FUNCTION_15	CALL_21
0x1528	    0x488d85b0feff	                  lea rax, [rbp - 0x150]	       462	add.c	FUNCTION_15	CALL_22
0x152f	          0x4889c6	                            mov rsi, rax	       462	add.c	FUNCTION_15	CALL_22
0x1532	      0xbf00000000	                              mov edi, 0	       462	add.c	FUNCTION_15	CALL_22
0x1537	      0xe800000000	                          call 0x400157c	       462	add.c	FUNCTION_15	CALL_22
0x153c	    0x83bd90feffff	              cmp dword [rbp - 0x170], 0	       464	add.c	FUNCTION_15	IF_12
0x1543	     0xf8492000000	                            je 0x400161b	       464	add.c	FUNCTION_15	IF_12
0x1549	    0x488d85d0feff	                  lea rax, [rbp - 0x130]	       468	add.c	FUNCTION_15	IF_12	CALL_23
0x1550	      0xba10010000	                          mov edx, 0x110	       468	add.c	FUNCTION_15	IF_12	CALL_23
0x1555	      0xbe00000000	                              mov esi, 0	       468	add.c	FUNCTION_15	IF_12	CALL_23
0x155a	          0x4889c7	                            mov rdi, rax	       468	add.c	FUNCTION_15	IF_12	CALL_23
0x155d	      0xe800000000	                          call 0x40015a2	       468	add.c	FUNCTION_15	IF_12	CALL_23
0x1562	    0x8b0500000000	            mov eax, dword [0x040015a8] 	       469	add.c	FUNCTION_15	IF_12	IF_13
0x1568	            0x85c0	                           test eax, eax	       469	add.c	FUNCTION_15	IF_12	IF_13
0x156a	            0x751e	                           jne 0x40015ca	       469	add.c	FUNCTION_15	IF_12	IF_13
0x156c	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	       470	add.c	FUNCTION_15	IF_12	IF_13
0x1572	          0x83c810	                            or eax, 0x10	       470	add.c	FUNCTION_15	IF_12	IF_13
0x1575	    0x8985e0feffff	            mov dword [rbp - 0x120], eax	       470	add.c	FUNCTION_15	IF_12	IF_13
0x157b	    0x488d85d0feff	                  lea rax, [rbp - 0x130]	       471	add.c	FUNCTION_15	IF_12	IF_13	CALL_24
0x1582	          0x4889c7	                            mov rdi, rax	       471	add.c	FUNCTION_15	IF_12	IF_13	CALL_24
0x1585	      0xe800000000	                          call 0x40015ca	       471	add.c	FUNCTION_15	IF_12	IF_13	CALL_24
0x158a	    0x488d95b0feff	                  lea rdx, [rbp - 0x150]	       475	add.c	FUNCTION_15	IF_12	CALL_25
0x1591	    0x488d85d0feff	                  lea rax, [rbp - 0x130]	       475	add.c	FUNCTION_15	IF_12	CALL_25
0x1598	      0xbe00000000	                              mov esi, 0	       475	add.c	FUNCTION_15	IF_12	CALL_25
0x159d	          0x4889c7	                            mov rdi, rax	       475	add.c	FUNCTION_15	IF_12	CALL_25
0x15a0	      0xe800000000	                          call 0x40015e5	       475	add.c	FUNCTION_15	IF_12	CALL_25
0x15a5	    0x89859cfeffff	            mov dword [rbp - 0x164], eax	       475	add.c	FUNCTION_15	IF_12	CALL_25
0x15ab	    0x8b85b0feffff	            mov eax, dword [rbp - 0x150]	       476	add.c	FUNCTION_15	IF_12	IF_14
0x15b1	            0x85c0	                           test eax, eax	       476	add.c	FUNCTION_15	IF_12	IF_14
0x15b3	            0x7426	                            je 0x400161b	       476	add.c	FUNCTION_15	IF_12	IF_14
0x15b5	    0x8b959cfeffff	            mov edx, dword [rbp - 0x164]	       477	add.c	FUNCTION_15	IF_12	CALL_26
0x15bb	    0x488d8db0feff	                  lea rcx, [rbp - 0x150]	       477	add.c	FUNCTION_15	IF_12	CALL_26
0x15c2	    0x488d85d0feff	                  lea rax, [rbp - 0x130]	       477	add.c	FUNCTION_15	IF_12	CALL_26
0x15c9	          0x4889ce	                            mov rsi, rcx	       477	add.c	FUNCTION_15	IF_12	CALL_26
0x15cc	          0x4889c7	                            mov rdi, rax	       477	add.c	FUNCTION_15	IF_12	CALL_26
0x15cf	      0xe818f2ffff	                call sym.prune_directory	       477	add.c	FUNCTION_15	IF_12	CALL_26
0x15d4	    0x488985a0feff	            mov qword [rbp - 0x160], rax	       477	add.c	FUNCTION_15	IF_12	CALL_26
0x15db	    0x8b0500000000	            mov eax, dword [0x04001621] 	       480	add.c	FUNCTION_15	IF_15
0x15e1	            0x85c0	                           test eax, eax	       480	add.c	FUNCTION_15	IF_15
0x15e3	            0x741c	                            je 0x4001641	       480	add.c	FUNCTION_15	IF_15
0x15e5	    0x8b0500000000	            mov eax, dword [0x0400162b] 	       481	add.c	FUNCTION_15	IF_15	CALL_27
0x15eb	    0x488d95b0feff	                  lea rdx, [rbp - 0x150]	       481	add.c	FUNCTION_15	IF_15	CALL_27
0x15f2	          0x4889d6	                            mov rsi, rdx	       481	add.c	FUNCTION_15	IF_15	CALL_27
0x15f5	            0x89c7	                            mov edi, eax	       481	add.c	FUNCTION_15	IF_15	CALL_27
0x15f7	      0xe8bff2ffff	                        call sym.refresh	       481	add.c	FUNCTION_15	IF_15	CALL_27
0x15fc	      0xe9e7020000	                           jmp 0x4001928	       482	add.c	FUNCTION_15	IF_15
0x1601	    0x8b85b0feffff	            mov eax, dword [rbp - 0x150]	       485	add.c	FUNCTION_15	IF_16
0x1607	            0x85c0	                           test eax, eax	       485	add.c	FUNCTION_15	IF_16
0x1609	     0xf8427020000	                            je 0x4001876	       485	add.c	FUNCTION_15	IF_16
0x160f	    0x4883bda0feff	              cmp qword [rbp - 0x160], 0	       488	add.c	FUNCTION_15	IF_16	IF_17
0x1617	            0x751b	                           jne 0x4001674	       488	add.c	FUNCTION_15	IF_16	IF_17
0x1619	    0x488d85b0feff	                  lea rax, [rbp - 0x150]	       489	add.c	FUNCTION_15	IF_16	CALL_28
0x1620	      0xbe00000000	                              mov esi, 0	       489	add.c	FUNCTION_15	IF_16	CALL_28
0x1625	          0x4889c7	                            mov rdi, rax	       489	add.c	FUNCTION_15	IF_16	CALL_28
0x1628	      0xe800000000	                          call 0x400166d	       489	add.c	FUNCTION_15	IF_16	CALL_28
0x162d	    0x488985a0feff	            mov qword [rbp - 0x160], rax	       489	add.c	FUNCTION_15	IF_16	CALL_28
0x1634	    0x8b85b8feffff	            mov eax, dword [rbp - 0x148]	       494	add.c	FUNCTION_15	IF_16	CALL_29
0x163a	          0x83e0c2	                     and eax, 0xffffffc2	       494	add.c	FUNCTION_15	IF_16	CALL_29
0x163d	            0x85c0	                           test eax, eax	       494	add.c	FUNCTION_15	IF_16	CALL_29
0x163f	            0x7424	                            je 0x40016a5	       494	add.c	FUNCTION_15	IF_16	CALL_29
0x1641	    0x8b85b8feffff	            mov eax, dword [rbp - 0x148]	       494	add.c	FUNCTION_15	IF_16	CALL_29
0x1647	          0x83e0c2	                     and eax, 0xffffffc2	       494	add.c	FUNCTION_15	IF_16	CALL_29
0x164a	            0x89c1	                            mov ecx, eax	       494	add.c	FUNCTION_15	IF_16	CALL_29
0x164c	      0xbaf3010000	                          mov edx, 0x1f3	       494	add.c	FUNCTION_15	IF_16	CALL_29
0x1651	      0xbe00000000	                              mov esi, 0	       494	add.c	FUNCTION_15	IF_16	CALL_29
0x1656	      0xbf00000000	                              mov edi, 0	       494	add.c	FUNCTION_15	IF_16	CALL_29
0x165b	      0xb800000000	                              mov eax, 0	       494	add.c	FUNCTION_15	IF_16	CALL_29
0x1660	      0xe800000000	                          call 0x40016a5	       494	add.c	FUNCTION_15	IF_16	CALL_29
0x1665	    0xc7858cfeffff	              mov dword [rbp - 0x174], 0	       501	add.c	FUNCTION_15	IF_16	FOR_1
0x166f	      0xe9a1010000	                           jmp 0x4001855	       501	add.c	FUNCTION_15	IF_16	FOR_1
0x1674	    0x488b95c0feff	            mov rdx, qword [rbp - 0x140]	       502	add.c	FUNCTION_15	IF_16	FOR_1
0x167b	    0x8b858cfeffff	            mov eax, dword [rbp - 0x174]	       502	add.c	FUNCTION_15	IF_16	FOR_1
0x1681	            0x4898	                                    cdqe	       502	add.c	FUNCTION_15	IF_16	FOR_1
0x1683	        0x48c1e003	                              shl rax, 3	       502	add.c	FUNCTION_15	IF_16	FOR_1
0x1687	    0x488d0cc50000	                        lea rcx, [rax*8]	       502	add.c	FUNCTION_15	IF_16	FOR_1
0x168f	          0x4829c1	                            sub rcx, rax	       502	add.c	FUNCTION_15	IF_16	FOR_1
0x1692	          0x4889c8	                            mov rax, rcx	       502	add.c	FUNCTION_15	IF_16	FOR_1
0x1695	          0x4801d0	                            add rax, rdx	       502	add.c	FUNCTION_15	IF_16	FOR_1
0x1698	          0x488b00	                    mov rax, qword [rax]	       502	add.c	FUNCTION_15	IF_16	FOR_1
0x169b	    0x488985a8feff	            mov qword [rbp - 0x158], rax	       502	add.c	FUNCTION_15	IF_16	FOR_1
0x16a2	    0x488b95c0feff	            mov rdx, qword [rbp - 0x140]	       503	add.c	FUNCTION_15	IF_16	FOR_1	IF_18
0x16a9	    0x8b858cfeffff	            mov eax, dword [rbp - 0x174]	       503	add.c	FUNCTION_15	IF_16	FOR_1	IF_18
0x16af	            0x4898	                                    cdqe	       503	add.c	FUNCTION_15	IF_16	FOR_1	IF_18
0x16b1	        0x48c1e003	                              shl rax, 3	       503	add.c	FUNCTION_15	IF_16	FOR_1	IF_18
0x16b5	    0x488d0cc50000	                        lea rcx, [rax*8]	       503	add.c	FUNCTION_15	IF_16	FOR_1	IF_18
0x16bd	          0x4829c1	                            sub rcx, rax	       503	add.c	FUNCTION_15	IF_16	FOR_1	IF_18
0x16c0	          0x4889c8	                            mov rax, rcx	       503	add.c	FUNCTION_15	IF_16	FOR_1	IF_18
0x16c3	          0x4801d0	                            add rax, rdx	       503	add.c	FUNCTION_15	IF_16	FOR_1	IF_18
0x16c6	          0x8b4010	            mov eax, dword [rax + 0x10] 	       503	add.c	FUNCTION_15	IF_16	FOR_1	IF_18
0x16c9	          0x83e020	                           and eax, 0x20	       503	add.c	FUNCTION_15	IF_16	FOR_1	IF_18
0x16cc	            0x85c0	                           test eax, eax	       503	add.c	FUNCTION_15	IF_16	FOR_1	IF_18
0x16ce	     0xf8539010000	                           jne 0x400184d	       503	add.c	FUNCTION_15	IF_16	FOR_1	IF_18
0x16d4	    0x8b858cfeffff	            mov eax, dword [rbp - 0x174]	       505	add.c	FUNCTION_15	IF_16	FOR_1	IF_19
0x16da	          0x4863d0	                         movsxd rdx, eax	       505	add.c	FUNCTION_15	IF_16	FOR_1	IF_19
0x16dd	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	       505	add.c	FUNCTION_15	IF_16	FOR_1	IF_19
0x16e4	          0x4801d0	                            add rax, rdx	       505	add.c	FUNCTION_15	IF_16	FOR_1	IF_19
0x16e7	           0xfb600	                   movzx eax, byte [rax]	       505	add.c	FUNCTION_15	IF_16	FOR_1	IF_19
0x16ea	            0x84c0	                             test al, al	       505	add.c	FUNCTION_15	IF_16	FOR_1	IF_19
0x16ec	     0xf851c010000	                           jne 0x400184e	       505	add.c	FUNCTION_15	IF_16	FOR_1	IF_19
0x16f2	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	       505	add.c	FUNCTION_15	IF_16	FOR_1	IF_19
0x16f9	           0xfb600	                   movzx eax, byte [rax]	       505	add.c	FUNCTION_15	IF_16	FOR_1	IF_19
0x16fc	            0x84c0	                             test al, al	       505	add.c	FUNCTION_15	IF_16	FOR_1	IF_19
0x16fe	     0xf840a010000	                            je 0x400184e	       505	add.c	FUNCTION_15	IF_16	FOR_1	IF_19
0x1704	    0x488b95c0feff	            mov rdx, qword [rbp - 0x140]	       506	add.c	FUNCTION_15	IF_16	FOR_1	IF_19
0x170b	    0x8b858cfeffff	            mov eax, dword [rbp - 0x174]	       506	add.c	FUNCTION_15	IF_16	FOR_1	IF_19
0x1711	            0x4898	                                    cdqe	       506	add.c	FUNCTION_15	IF_16	FOR_1	IF_19
0x1713	        0x48c1e003	                              shl rax, 3	       506	add.c	FUNCTION_15	IF_16	FOR_1	IF_19
0x1717	    0x488d0cc50000	                        lea rcx, [rax*8]	       506	add.c	FUNCTION_15	IF_16	FOR_1	IF_19
0x171f	          0x4829c1	                            sub rcx, rax	       506	add.c	FUNCTION_15	IF_16	FOR_1	IF_19
0x1722	          0x4889c8	                            mov rax, rcx	       506	add.c	FUNCTION_15	IF_16	FOR_1	IF_19
0x1725	          0x4801d0	                            add rax, rdx	       506	add.c	FUNCTION_15	IF_16	FOR_1	IF_19
0x1728	          0x8b4010	            mov eax, dword [rax + 0x10] 	       506	add.c	FUNCTION_15	IF_16	FOR_1	IF_19
0x172b	          0x83e018	                           and eax, 0x18	       506	add.c	FUNCTION_15	IF_16	FOR_1	IF_19
0x172e	            0x85c0	                           test eax, eax	       505	add.c	FUNCTION_15	IF_16	FOR_1	IF_19
0x1730	            0x7517	                           jne 0x4001789	       505	add.c	FUNCTION_15	IF_16	FOR_1	IF_19
0x1732	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	       508	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	CALL_30
0x1739	          0x4889c7	                            mov rdi, rax	       508	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	CALL_30
0x173c	      0xe800000000	                          call 0x4001781	       508	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	CALL_30
0x1741	            0x85c0	                           test eax, eax	       507	add.c	FUNCTION_15	IF_16	FOR_1	IF_19
0x1743	     0xf85c5000000	                           jne 0x400184e	       507	add.c	FUNCTION_15	IF_16	FOR_1	IF_19
0x1749	    0x8b0500000000	            mov eax, dword [0x0400178f] 	       509	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	IF_20
0x174f	            0x85c0	                           test eax, eax	       509	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	IF_20
0x1751	            0x7478	                            je 0x400180b	       509	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	IF_20
0x1753	    0xc78584feffff	              mov dword [rbp - 0x17c], 0	       510	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	IF_20
0x175d	    0x488d8d84feff	                  lea rcx, [rbp - 0x17c]	       511	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	IF_20	IF_21	CALL_31
0x1764	    0x488b95a8feff	            mov rdx, qword [rbp - 0x158]	       511	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	IF_20	IF_21	CALL_31
0x176b	    0x488d85d0feff	                  lea rax, [rbp - 0x130]	       511	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	IF_20	IF_21	CALL_31
0x1772	      0xbe00000000	                              mov esi, 0	       511	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	IF_20	IF_21	CALL_31
0x1777	          0x4889c7	                            mov rdi, rax	       511	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	IF_20	IF_21	CALL_31
0x177a	      0xe800000000	                          call 0x40017bf	       511	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	IF_20	IF_21	CALL_31
0x177f	            0x85c0	                           test eax, eax	       511	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	IF_20	IF_21	CALL_31
0x1781	     0xf8487000000	                            je 0x400184e	       511	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	IF_20	IF_21	CALL_31
0x1787	    0x488b95c0feff	            mov rdx, qword [rbp - 0x140]	       513	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	IF_20	IF_21
0x178e	    0x8b858cfeffff	            mov eax, dword [rbp - 0x174]	       513	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	IF_20	IF_21
0x1794	            0x4898	                                    cdqe	       513	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	IF_20	IF_21
0x1796	        0x48c1e003	                              shl rax, 3	       513	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	IF_20	IF_21
0x179a	    0x488d0cc50000	                        lea rcx, [rax*8]	       513	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	IF_20	IF_21
0x17a2	          0x4829c1	                            sub rcx, rax	       513	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	IF_20	IF_21
0x17a5	          0x4889c8	                            mov rax, rcx	       513	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	IF_20	IF_21
0x17a8	          0x4801d0	                            add rax, rdx	       513	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	IF_20	IF_21
0x17ab	          0x8b4814	            mov ecx, dword [rax + 0x14] 	       512	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	IF_20	IF_21	CALL_32
0x17ae	    0x488b95a8feff	            mov rdx, qword [rbp - 0x158]	       512	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	IF_20	IF_21	CALL_32
0x17b5	    0x488d85d0feff	                  lea rax, [rbp - 0x130]	       512	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	IF_20	IF_21	CALL_32
0x17bc	      0xbe00000000	                              mov esi, 0	       512	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	IF_20	IF_21	CALL_32
0x17c1	          0x4889c7	                            mov rdi, rax	       512	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	IF_20	IF_21	CALL_32
0x17c4	      0xe800000000	                          call 0x4001809	       512	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	IF_20	IF_21	CALL_32
0x17c9	            0xeb43	                           jmp 0x400184e	       512	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	IF_20	IF_21	CALL_32
0x17cb	    0x488b95c0feff	            mov rdx, qword [rbp - 0x140]	       516	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	ELSE_2
0x17d2	    0x8b858cfeffff	            mov eax, dword [rbp - 0x174]	       516	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	ELSE_2
0x17d8	            0x4898	                                    cdqe	       516	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	ELSE_2
0x17da	        0x48c1e003	                              shl rax, 3	       516	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	ELSE_2
0x17de	    0x488d0cc50000	                        lea rcx, [rax*8]	       516	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	ELSE_2
0x17e6	          0x4829c1	                            sub rcx, rax	       516	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	ELSE_2
0x17e9	          0x4889c8	                            mov rax, rcx	       516	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	ELSE_2
0x17ec	          0x4801d0	                            add rax, rdx	       516	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	ELSE_2
0x17ef	        0x488b5808	                mov rbx, qword [rax + 8]	       515	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	ELSE_2	CALL_34
0x17f3	      0xbf00000000	                              mov edi, 0	       515	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	ELSE_2	CALL_34
0x17f8	      0xe83aeaffff	                               call sym.	       515	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	ELSE_2	CALL_34
0x17fd	          0x4889de	                            mov rsi, rbx	       515	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	ELSE_2	CALL_34
0x1800	          0x4889c7	                            mov rdi, rax	       515	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	ELSE_2	CALL_34
0x1803	      0xb800000000	                              mov eax, 0	       515	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	ELSE_2	CALL_34
0x1808	      0xe800000000	                          call 0x400184d	       515	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	ELSE_2	CALL_34
0x180d	              0x90	                                     nop	       504	add.c	FUNCTION_15	IF_16	FOR_1	IF_18
0x180e	    0x83858cfeffff	              add dword [rbp - 0x174], 1	       501	add.c	FUNCTION_15	IF_16	FOR_1
0x1815	    0x8b85b0feffff	            mov eax, dword [rbp - 0x150]	       501	add.c	FUNCTION_15	IF_16	FOR_1
0x181b	    0x3b858cfeffff	            cmp eax, dword [rbp - 0x174]	       501	add.c	FUNCTION_15	IF_16	FOR_1
0x1821	     0xf8f4dfeffff	                            jg 0x40016b4	       501	add.c	FUNCTION_15	IF_16	FOR_1
0x1827	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	       519	add.c	FUNCTION_15	IF_16	CALL_35
0x182e	          0x4889c7	                            mov rdi, rax	       519	add.c	FUNCTION_15	IF_16	CALL_35
0x1831	      0xe800000000	                          call 0x4001876	       519	add.c	FUNCTION_15	IF_16	CALL_35
0x1836	      0xe800000000	                          call 0x400187b	       522	add.c	FUNCTION_15	CALL_36
0x183b	    0x8b0500000000	            mov eax, dword [0x04001881] 	       524	add.c	FUNCTION_15	IF_22
0x1841	            0x85c0	                           test eax, eax	       524	add.c	FUNCTION_15	IF_22
0x1843	            0x741f	                            je 0x40018a4	       524	add.c	FUNCTION_15	IF_22
0x1845	    0x8b9598feffff	            mov edx, dword [rbp - 0x168]	       525	add.c	FUNCTION_15	CALL_37
0x184b	    0x488d85b0feff	                  lea rax, [rbp - 0x150]	       525	add.c	FUNCTION_15	CALL_37
0x1852	            0x89d6	                            mov esi, edx	       525	add.c	FUNCTION_15	CALL_37
0x1854	          0x4889c7	                            mov rdi, rax	       525	add.c	FUNCTION_15	CALL_37
0x1857	      0xe8b4eeffff	      call sym.renormalize_tracked_files	       525	add.c	FUNCTION_15	CALL_37
0x185c	     0x98588feffff	             or dword [rbp - 0x178], eax	       525	add.c	FUNCTION_15	CALL_37
0x1862	            0xeb25	                           jmp 0x40018c9	       525	add.c	FUNCTION_15	CALL_37
0x1864	    0x8b9598feffff	            mov edx, dword [rbp - 0x168]	       527	add.c	FUNCTION_15	CALL_38
0x186a	    0x488d8db0feff	                  lea rcx, [rbp - 0x150]	       527	add.c	FUNCTION_15	CALL_38
0x1871	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	       527	add.c	FUNCTION_15	CALL_38
0x1878	          0x4889ce	                            mov rsi, rcx	       527	add.c	FUNCTION_15	CALL_38
0x187b	          0x4889c7	                            mov rdi, rax	       527	add.c	FUNCTION_15	CALL_38
0x187e	      0xe800000000	                          call 0x40018c3	       527	add.c	FUNCTION_15	CALL_38
0x1883	     0x98588feffff	             or dword [rbp - 0x178], eax	       527	add.c	FUNCTION_15	CALL_38
0x1889	    0x83bd90feffff	              cmp dword [rbp - 0x170], 0	       529	add.c	FUNCTION_15	IF_23
0x1890	            0x741d	                            je 0x40018ef	       529	add.c	FUNCTION_15	IF_23
0x1892	    0x8b9598feffff	            mov edx, dword [rbp - 0x168]	       530	add.c	FUNCTION_15	CALL_39
0x1898	    0x488d85d0feff	                  lea rax, [rbp - 0x130]	       530	add.c	FUNCTION_15	CALL_39
0x189f	            0x89d6	                            mov esi, edx	       530	add.c	FUNCTION_15	CALL_39
0x18a1	          0x4889c7	                            mov rdi, rax	       530	add.c	FUNCTION_15	CALL_39
0x18a4	      0xe847f7ffff	                      call sym.add_files	       530	add.c	FUNCTION_15	CALL_39
0x18a9	     0x98588feffff	             or dword [rbp - 0x178], eax	       530	add.c	FUNCTION_15	CALL_39
0x18af	    0x488b05000000	            mov rax, qword [0x040018f6] 	       532	add.c	FUNCTION_15	IF_24
0x18b6	          0x4885c0	                           test rax, rax	       532	add.c	FUNCTION_15	IF_24
0x18b9	            0x7428	                            je 0x4001923	       532	add.c	FUNCTION_15	IF_24
0x18bb	    0x8b85b0feffff	            mov eax, dword [rbp - 0x150]	       532	add.c	FUNCTION_15	IF_24
0x18c1	            0x85c0	                           test eax, eax	       532	add.c	FUNCTION_15	IF_24
0x18c3	            0x741e	                            je 0x4001923	       532	add.c	FUNCTION_15	IF_24
0x18c5	    0x488b05000000	            mov rax, qword [0x0400190c] 	       533	add.c	FUNCTION_15	CALL_40
0x18cc	           0xfb600	                   movzx eax, byte [rax]	       533	add.c	FUNCTION_15	CALL_40
0x18cf	           0xfbed0	                           movsx edx, al	       533	add.c	FUNCTION_15	CALL_40
0x18d2	    0x488d85b0feff	                  lea rax, [rbp - 0x150]	       533	add.c	FUNCTION_15	CALL_40
0x18d9	            0x89d6	                            mov esi, edx	       533	add.c	FUNCTION_15	CALL_40
0x18db	          0x4889c7	                            mov rdi, rax	       533	add.c	FUNCTION_15	CALL_40
0x18de	      0xe882eaffff	                 call sym.chmod_pathspec	       533	add.c	FUNCTION_15	CALL_40
0x18e3	      0xe800000000	                          call 0x4001928	       534	add.c	FUNCTION_15	CALL_41
0x18e8	      0xba03000000	                              mov edx, 3	       537	add.c	FUNCTION_15	IF_25	CALL_42
0x18ed	      0xbe00000000	                              mov esi, 0	       537	add.c	FUNCTION_15	IF_25	CALL_42
0x18f2	      0xbf00000000	                              mov edi, 0	       537	add.c	FUNCTION_15	IF_25	CALL_42
0x18f7	      0xe800000000	                          call 0x400193c	       537	add.c	FUNCTION_15	IF_25	CALL_42
0x18fc	            0x85c0	                           test eax, eax	       537	add.c	FUNCTION_15	IF_25	CALL_42
0x18fe	            0x7417	                            je 0x4001957	       537	add.c	FUNCTION_15	IF_25	CALL_42
0x1900	      0xbf00000000	                              mov edi, 0	       539	add.c	FUNCTION_15	CALL_44
0x1905	      0xe82de9ffff	                               call sym.	       539	add.c	FUNCTION_15	CALL_44
0x190a	          0x4889c7	                            mov rdi, rax	       539	add.c	FUNCTION_15	CALL_44
0x190d	      0xb800000000	                              mov eax, 0	       539	add.c	FUNCTION_15	CALL_44
0x1912	      0xe800000000	                          call 0x4001957	       539	add.c	FUNCTION_15	CALL_44
0x1917	    0x8b8588feffff	            mov eax, dword [rbp - 0x178]	       543	add.c	FUNCTION_15
0x191d	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       544	add.c	FUNCTION_15
0x1921	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       544	add.c	FUNCTION_15
0x192a	            0x7405	                            je 0x4001971	       544	add.c	FUNCTION_15
0x192c	      0xe800000000	                          call 0x4001971	       544	add.c	FUNCTION_15
0x1931	    0x4881c4980100	                          add rsp, 0x198	       544	add.c	FUNCTION_15
0x1938	              0x5b	                                 pop rbx	       544	add.c	FUNCTION_15
0x1939	              0x5d	                                 pop rbp	       544	add.c	FUNCTION_15
0x193a	              0xc3	                                     ret	       544	add.c	FUNCTION_15
strbuf_strip_suffix	FOR,0:DO,0:CALL,2:ELSE,1:IF,1:functions,0:SWITCH,0:WHILE,0	26
0x1df	              0x55	                                push rbp	       495	strbuf.h	FUNCTION_48
0x1e0	          0x4889e5	                            mov rbp, rsp	       495	strbuf.h	FUNCTION_48
0x1e3	        0x4883ec10	                           sub rsp, 0x10	       495	strbuf.h	FUNCTION_48
0x1e7	        0x48897df8	                mov qword [rbp - 8], rdi	       495	strbuf.h	FUNCTION_48
0x1eb	        0x488975f0	             mov qword [rbp - 0x10], rsi	       495	strbuf.h	FUNCTION_48
0x1ef	        0x488b45f8	                mov rax, qword [rbp - 8]	       496	strbuf.h	FUNCTION_48	IF_1	CALL_1
0x1f3	        0x488d4808	                      lea rcx, [rax + 8]	       496	strbuf.h	FUNCTION_48	IF_1	CALL_1
0x1f7	        0x488b45f8	                mov rax, qword [rbp - 8]	       496	strbuf.h	FUNCTION_48	IF_1	CALL_1
0x1fb	        0x488b4010	            mov rax, qword [rax + 0x10] 	       496	strbuf.h	FUNCTION_48	IF_1	CALL_1
0x1ff	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       496	strbuf.h	FUNCTION_48	IF_1	CALL_1
0x203	          0x4889ce	                            mov rsi, rcx	       496	strbuf.h	FUNCTION_48	IF_1	CALL_1
0x206	          0x4889c7	                            mov rdi, rax	       496	strbuf.h	FUNCTION_48	IF_1	CALL_1
0x209	      0xe8f2fdffff	               call sym.strip_suffix_mem	       496	strbuf.h	FUNCTION_48	IF_1	CALL_1
0x20e	            0x85c0	                           test eax, eax	       496	strbuf.h	FUNCTION_48	IF_1	CALL_1
0x210	            0x741e	                            je 0x4000270	       496	strbuf.h	FUNCTION_48	IF_1	CALL_1
0x212	        0x488b45f8	                mov rax, qword [rbp - 8]	       497	strbuf.h	FUNCTION_48	IF_1	CALL_2
0x216	        0x488b5008	                mov rdx, qword [rax + 8]	       497	strbuf.h	FUNCTION_48	IF_1	CALL_2
0x21a	        0x488b45f8	                mov rax, qword [rbp - 8]	       497	strbuf.h	FUNCTION_48	IF_1	CALL_2
0x21e	          0x4889d6	                            mov rsi, rdx	       497	strbuf.h	FUNCTION_48	IF_1	CALL_2
0x221	          0x4889c7	                            mov rdi, rax	       497	strbuf.h	FUNCTION_48	IF_1	CALL_2
0x224	      0xe8e7feffff	                  call sym.strbuf_setlen	       497	strbuf.h	FUNCTION_48	IF_1	CALL_2
0x229	      0xb801000000	                              mov eax, 1	       498	strbuf.h	FUNCTION_48	IF_1
0x22e	            0xeb05	                           jmp 0x4000275	       498	strbuf.h	FUNCTION_48	IF_1
0x230	      0xb800000000	                              mov eax, 0	       500	strbuf.h	FUNCTION_48	ELSE_1
0x235	              0xc9	                                   leave	       501	strbuf.h	FUNCTION_48
0x236	              0xc3	                                     ret	       501	strbuf.h	FUNCTION_48
strip_suffix	FOR,0:DO,0:CALL,2:ELSE,0:IF,0:functions,0:SWITCH,0:WHILE,0	20
0x81	              0x55	                                push rbp	       554	git-compat-util.h	FUNCTION_26
0x82	          0x4889e5	                            mov rbp, rsp	       554	git-compat-util.h	FUNCTION_26
0x85	        0x4883ec20	                           sub rsp, 0x20	       554	git-compat-util.h	FUNCTION_26
0x89	        0x48897df8	                mov qword [rbp - 8], rdi	       554	git-compat-util.h	FUNCTION_26
0x8d	        0x488975f0	             mov qword [rbp - 0x10], rsi	       554	git-compat-util.h	FUNCTION_26
0x91	        0x488955e8	             mov qword [rbp - 0x18], rdx	       554	git-compat-util.h	FUNCTION_26
0x95	        0x488b45f8	                mov rax, qword [rbp - 8]	       555	git-compat-util.h	FUNCTION_26	CALL_1
0x99	          0x4889c7	                            mov rdi, rax	       555	git-compat-util.h	FUNCTION_26	CALL_1
0x9c	      0xe800000000	                          call 0x40000e1	       555	git-compat-util.h	FUNCTION_26	CALL_1
0xa1	          0x4889c2	                            mov rdx, rax	       555	git-compat-util.h	FUNCTION_26	CALL_1
0xa4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       555	git-compat-util.h	FUNCTION_26	CALL_1
0xa8	          0x488910	                    mov qword [rax], rdx	       555	git-compat-util.h	FUNCTION_26	CALL_1
0xab	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       556	git-compat-util.h	FUNCTION_26	CALL_2
0xaf	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       556	git-compat-util.h	FUNCTION_26	CALL_2
0xb3	        0x488b45f8	                mov rax, qword [rbp - 8]	       556	git-compat-util.h	FUNCTION_26	CALL_2
0xb7	          0x4889ce	                            mov rsi, rcx	       556	git-compat-util.h	FUNCTION_26	CALL_2
0xba	          0x4889c7	                            mov rdi, rax	       556	git-compat-util.h	FUNCTION_26	CALL_2
0xbd	      0xe83effffff	               call sym.strip_suffix_mem	       556	git-compat-util.h	FUNCTION_26	CALL_2
0xc2	              0xc9	                                   leave	       557	git-compat-util.h	FUNCTION_26
0xc3	              0xc3	                                     ret	       557	git-compat-util.h	FUNCTION_26
refresh	FOR,1:DO,0:CALL,6:ELSE,0:IF,1:functions,0:SWITCH,0:WHILE,0	66
0x8bb	              0x55	                                push rbp	       167	add.c	FUNCTION_7
0x8bc	          0x4889e5	                            mov rbp, rsp	       167	add.c	FUNCTION_7
0x8bf	              0x53	                                push rbx	       167	add.c	FUNCTION_7
0x8c0	        0x4883ec28	                           sub rsp, 0x28	       167	add.c	FUNCTION_7
0x8c4	          0x897ddc	             mov dword [rbp - 0x24], edi	       167	add.c	FUNCTION_7
0x8c7	        0x488975d0	             mov qword [rbp - 0x30], rsi	       167	add.c	FUNCTION_7
0x8cb	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       171	add.c	FUNCTION_7	CALL_1
0x8cf	            0x8b00	                    mov eax, dword [rax]	       171	add.c	FUNCTION_7	CALL_1
0x8d1	            0x4898	                                    cdqe	       171	add.c	FUNCTION_7	CALL_1
0x8d3	      0xbe01000000	                              mov esi, 1	       171	add.c	FUNCTION_7	CALL_1
0x8d8	          0x4889c7	                            mov rdi, rax	       171	add.c	FUNCTION_7	CALL_1
0x8db	      0xe800000000	                          call 0x4000920	       171	add.c	FUNCTION_7	CALL_1
0x8e0	        0x488945e8	             mov qword [rbp - 0x18], rax	       171	add.c	FUNCTION_7	CALL_1
0x8e4	      0xbf00000000	                              mov edi, 0	       172	add.c	FUNCTION_7	CALL_2
0x8e9	      0xe849f9ffff	                               call sym.	       172	add.c	FUNCTION_7	CALL_2
0x8ee	          0x4889c1	                            mov rcx, rax	       172	add.c	FUNCTION_7	CALL_2
0x8f1	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       172	add.c	FUNCTION_7	CALL_2
0x8f5	            0x7407	                            je 0x400093e	       172	add.c	FUNCTION_7	CALL_2
0x8f7	      0xbe20000000	                           mov esi, 0x20	       172	add.c	FUNCTION_7	CALL_2
0x8fc	            0xeb05	                           jmp 0x4000943	       172	add.c	FUNCTION_7	CALL_2
0x8fe	      0xbe04000000	                              mov esi, 4	       172	add.c	FUNCTION_7	CALL_2
0x903	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       172	add.c	FUNCTION_7	CALL_2
0x907	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       172	add.c	FUNCTION_7	CALL_2
0x90b	          0x4989c8	                             mov r8, rcx	       172	add.c	FUNCTION_7	CALL_2
0x90e	          0x4889d1	                            mov rcx, rdx	       172	add.c	FUNCTION_7	CALL_2
0x911	          0x4889c2	                            mov rdx, rax	       172	add.c	FUNCTION_7	CALL_2
0x914	      0xbf00000000	                              mov edi, 0	       172	add.c	FUNCTION_7	CALL_2
0x919	      0xe800000000	                          call 0x400095e	       172	add.c	FUNCTION_7	CALL_2
0x91e	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	       174	add.c	FUNCTION_7	FOR_1
0x925	            0xeb57	                           jmp 0x40009be	       174	add.c	FUNCTION_7	FOR_1
0x927	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       175	add.c	FUNCTION_7	FOR_1	IF_1
0x92a	          0x4863d0	                         movsxd rdx, eax	       175	add.c	FUNCTION_7	FOR_1	IF_1
0x92d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       175	add.c	FUNCTION_7	FOR_1	IF_1
0x931	          0x4801d0	                            add rax, rdx	       175	add.c	FUNCTION_7	FOR_1	IF_1
0x934	           0xfb600	                   movzx eax, byte [rax]	       175	add.c	FUNCTION_7	FOR_1	IF_1
0x937	            0x84c0	                             test al, al	       175	add.c	FUNCTION_7	FOR_1	IF_1
0x939	            0x753f	                           jne 0x40009ba	       175	add.c	FUNCTION_7	FOR_1	IF_1
0x93b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       177	add.c	FUNCTION_7	FOR_1	IF_1
0x93f	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       177	add.c	FUNCTION_7	FOR_1	IF_1
0x943	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       177	add.c	FUNCTION_7	FOR_1	IF_1
0x946	            0x4898	                                    cdqe	       177	add.c	FUNCTION_7	FOR_1	IF_1
0x948	        0x48c1e003	                              shl rax, 3	       177	add.c	FUNCTION_7	FOR_1	IF_1
0x94c	    0x488d0cc50000	                        lea rcx, [rax*8]	       177	add.c	FUNCTION_7	FOR_1	IF_1
0x954	          0x4829c1	                            sub rcx, rax	       177	add.c	FUNCTION_7	FOR_1	IF_1
0x957	          0x4889c8	                            mov rax, rcx	       177	add.c	FUNCTION_7	FOR_1	IF_1
0x95a	          0x4801d0	                            add rax, rdx	       177	add.c	FUNCTION_7	FOR_1	IF_1
0x95d	          0x488b18	                    mov rbx, qword [rax]	       176	add.c	FUNCTION_7	FOR_1	IF_1	CALL_5
0x960	      0xbf00000000	                              mov edi, 0	       176	add.c	FUNCTION_7	FOR_1	IF_1	CALL_5
0x965	      0xe8cdf8ffff	                               call sym.	       176	add.c	FUNCTION_7	FOR_1	IF_1	CALL_5
0x96a	          0x4889de	                            mov rsi, rbx	       176	add.c	FUNCTION_7	FOR_1	IF_1	CALL_5
0x96d	          0x4889c7	                            mov rdi, rax	       176	add.c	FUNCTION_7	FOR_1	IF_1	CALL_5
0x970	      0xb800000000	                              mov eax, 0	       176	add.c	FUNCTION_7	FOR_1	IF_1	CALL_5
0x975	      0xe800000000	                          call 0x40009ba	       176	add.c	FUNCTION_7	FOR_1	IF_1	CALL_5
0x97a	        0x8345e401	               add dword [rbp - 0x1c], 1	       174	add.c	FUNCTION_7	FOR_1
0x97e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       174	add.c	FUNCTION_7	FOR_1
0x982	            0x8b00	                    mov eax, dword [rax]	       174	add.c	FUNCTION_7	FOR_1
0x984	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	       174	add.c	FUNCTION_7	FOR_1
0x987	            0x7f9e	                            jg 0x4000967	       174	add.c	FUNCTION_7	FOR_1
0x989	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       179	add.c	FUNCTION_7	CALL_6
0x98d	          0x4889c7	                            mov rdi, rax	       179	add.c	FUNCTION_7	CALL_6
0x990	      0xe800000000	                          call 0x40009d5	       179	add.c	FUNCTION_7	CALL_6
0x995	              0x90	                                     nop	       180	add.c	FUNCTION_7
0x996	        0x4883c428	                           add rsp, 0x28	       180	add.c	FUNCTION_7
0x99a	              0x5b	                                 pop rbx	       180	add.c	FUNCTION_7
0x99b	              0x5d	                                 pop rbp	       180	add.c	FUNCTION_7
0x99c	              0xc3	                                     ret	       180	add.c	FUNCTION_7
strip_suffix_mem	FOR,0:DO,0:CALL,2:ELSE,0:IF,1:functions,0:SWITCH,0:WHILE,0	38
0x0	              0x55	                                push rbp	       538	git-compat-util.h	FUNCTION_25
0x1	          0x4889e5	                            mov rbp, rsp	       538	git-compat-util.h	FUNCTION_25
0x4	        0x4883ec30	                           sub rsp, 0x30	       538	git-compat-util.h	FUNCTION_25
0x8	        0x48897de8	             mov qword [rbp - 0x18], rdi	       538	git-compat-util.h	FUNCTION_25
0xc	        0x488975e0	             mov qword [rbp - 0x20], rsi	       538	git-compat-util.h	FUNCTION_25
0x10	        0x488955d8	             mov qword [rbp - 0x28], rdx	       538	git-compat-util.h	FUNCTION_25
0x14	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       539	git-compat-util.h	FUNCTION_25	CALL_1
0x18	          0x4889c7	                            mov rdi, rax	       539	git-compat-util.h	FUNCTION_25	CALL_1
0x1b	      0xe800000000	                          call 0x4000060	       539	git-compat-util.h	FUNCTION_25	CALL_1
0x20	        0x488945f8	                mov qword [rbp - 8], rax	       539	git-compat-util.h	FUNCTION_25	CALL_1
0x24	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       540	git-compat-util.h	FUNCTION_25	IF_1	CALL_2
0x28	          0x488b00	                    mov rax, qword [rax]	       540	git-compat-util.h	FUNCTION_25	IF_1	CALL_2
0x2b	        0x483b45f8	                cmp rax, qword [rbp - 8]	       540	git-compat-util.h	FUNCTION_25	IF_1	CALL_2
0x2f	            0x722d	                            jb 0x400009e	       540	git-compat-util.h	FUNCTION_25	IF_1	CALL_2
0x31	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       540	git-compat-util.h	FUNCTION_25	IF_1	CALL_2
0x35	          0x488b00	                    mov rax, qword [rax]	       540	git-compat-util.h	FUNCTION_25	IF_1	CALL_2
0x38	        0x482b45f8	                sub rax, qword [rbp - 8]	       540	git-compat-util.h	FUNCTION_25	IF_1	CALL_2
0x3c	          0x4889c2	                            mov rdx, rax	       540	git-compat-util.h	FUNCTION_25	IF_1	CALL_2
0x3f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       540	git-compat-util.h	FUNCTION_25	IF_1	CALL_2
0x43	        0x488d0c02	                    lea rcx, [rdx + rax]	       540	git-compat-util.h	FUNCTION_25	IF_1	CALL_2
0x47	        0x488b55f8	                mov rdx, qword [rbp - 8]	       540	git-compat-util.h	FUNCTION_25	IF_1	CALL_2
0x4b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       540	git-compat-util.h	FUNCTION_25	IF_1	CALL_2
0x4f	          0x4889c6	                            mov rsi, rax	       540	git-compat-util.h	FUNCTION_25	IF_1	CALL_2
0x52	          0x4889cf	                            mov rdi, rcx	       540	git-compat-util.h	FUNCTION_25	IF_1	CALL_2
0x55	      0xe800000000	                          call 0x400009a	       540	git-compat-util.h	FUNCTION_25	IF_1	CALL_2
0x5a	            0x85c0	                           test eax, eax	       540	git-compat-util.h	FUNCTION_25	IF_1	CALL_2
0x5c	            0x7407	                            je 0x40000a5	       540	git-compat-util.h	FUNCTION_25	IF_1	CALL_2
0x5e	      0xb800000000	                              mov eax, 0	       541	git-compat-util.h	FUNCTION_25	IF_1
0x63	            0xeb1a	                           jmp 0x40000bf	       541	git-compat-util.h	FUNCTION_25	IF_1
0x65	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       542	git-compat-util.h	FUNCTION_25
0x69	          0x488b00	                    mov rax, qword [rax]	       542	git-compat-util.h	FUNCTION_25
0x6c	        0x482b45f8	                sub rax, qword [rbp - 8]	       542	git-compat-util.h	FUNCTION_25
0x70	          0x4889c2	                            mov rdx, rax	       542	git-compat-util.h	FUNCTION_25
0x73	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       542	git-compat-util.h	FUNCTION_25
0x77	          0x488910	                    mov qword [rax], rdx	       542	git-compat-util.h	FUNCTION_25
0x7a	      0xb801000000	                              mov eax, 1	       543	git-compat-util.h	FUNCTION_25
0x7f	              0xc9	                                   leave	       544	git-compat-util.h	FUNCTION_25
0x80	              0xc3	                                     ret	       544	git-compat-util.h	FUNCTION_25
renormalize_tracked_files	FOR,1:DO,0:CALL,5:ELSE,0:IF,3:functions,0:SWITCH,0:WHILE,0	64
0x710	              0x55	                                push rbp	       128	add.c	FUNCTION_5
0x711	          0x4889e5	                            mov rbp, rsp	       128	add.c	FUNCTION_5
0x714	        0x4883ec20	                           sub rsp, 0x20	       128	add.c	FUNCTION_5
0x718	        0x48897de8	             mov qword [rbp - 0x18], rdi	       128	add.c	FUNCTION_5
0x71c	          0x8975e4	             mov dword [rbp - 0x1c], esi	       128	add.c	FUNCTION_5
0x71f	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       129	add.c	FUNCTION_5
0x726	    0xc745f0000000	               mov dword [rbp - 0x10], 0	       131	add.c	FUNCTION_5	FOR_1
0x72d	      0xe9a4000000	                           jmp 0x4000816	       131	add.c	FUNCTION_5	FOR_1
0x732	    0x488b05000000	            mov rax, qword [0x04000779] 	       132	add.c	FUNCTION_5	FOR_1
0x739	          0x8b55f0	             mov edx, dword [rbp - 0x10]	       132	add.c	FUNCTION_5	FOR_1
0x73c	          0x4863d2	                         movsxd rdx, edx	       132	add.c	FUNCTION_5	FOR_1
0x73f	        0x48c1e203	                              shl rdx, 3	       132	add.c	FUNCTION_5	FOR_1
0x743	          0x4801d0	                            add rax, rdx	       132	add.c	FUNCTION_5	FOR_1
0x746	          0x488b00	                    mov rax, qword [rax]	       132	add.c	FUNCTION_5	FOR_1
0x749	        0x488945f8	                mov qword [rbp - 8], rax	       132	add.c	FUNCTION_5	FOR_1
0x74d	        0x488b45f8	                mov rax, qword [rbp - 8]	       134	add.c	FUNCTION_5	FOR_1	IF_1	CALL_1
0x751	          0x8b4038	            mov eax, dword [rax + 0x38] 	       134	add.c	FUNCTION_5	FOR_1	IF_1	CALL_1
0x754	      0x2500300000	                         and eax, 0x3000	       134	add.c	FUNCTION_5	FOR_1	IF_1	CALL_1
0x759	          0xc1e80c	                            shr eax, 0xc	       134	add.c	FUNCTION_5	FOR_1	IF_1	CALL_1
0x75c	            0x85c0	                           test eax, eax	       134	add.c	FUNCTION_5	FOR_1	IF_1	CALL_1
0x75e	            0x756b	                           jne 0x400080b	       134	add.c	FUNCTION_5	FOR_1	IF_1	CALL_1
0x760	        0x488b45f8	                mov rax, qword [rbp - 8]	       136	add.c	FUNCTION_5	FOR_1	IF_2	CALL_3
0x764	          0x8b4034	            mov eax, dword [rax + 0x34] 	       136	add.c	FUNCTION_5	FOR_1	IF_2	CALL_3
0x767	      0x2500f00000	                         and eax, 0xf000	       136	add.c	FUNCTION_5	FOR_1	IF_2	CALL_3
0x76c	      0x3d00800000	                         cmp eax, 0x8000	       136	add.c	FUNCTION_5	FOR_1	IF_2	CALL_3
0x771	            0x7413	                            je 0x40007c6	       136	add.c	FUNCTION_5	FOR_1	IF_2	CALL_3
0x773	        0x488b45f8	                mov rax, qword [rbp - 8]	       136	add.c	FUNCTION_5	FOR_1	IF_2	CALL_3
0x777	          0x8b4034	            mov eax, dword [rax + 0x34] 	       136	add.c	FUNCTION_5	FOR_1	IF_2	CALL_3
0x77a	      0x2500f00000	                         and eax, 0xf000	       136	add.c	FUNCTION_5	FOR_1	IF_2	CALL_3
0x77f	      0x3d00a00000	                         cmp eax, 0xa000	       136	add.c	FUNCTION_5	FOR_1	IF_2	CALL_3
0x784	            0x7548	                           jne 0x400080e	       136	add.c	FUNCTION_5	FOR_1	IF_2	CALL_3
0x786	      0x48837de800	               cmp qword [rbp - 0x18], 0	       138	add.c	FUNCTION_5	FOR_1	IF_3	CALL_4
0x78b	            0x741c	                            je 0x40007e9	       138	add.c	FUNCTION_5	FOR_1	IF_3	CALL_4
0x78d	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       138	add.c	FUNCTION_5	FOR_1	IF_3	CALL_4
0x791	        0x488b45f8	                mov rax, qword [rbp - 8]	       138	add.c	FUNCTION_5	FOR_1	IF_3	CALL_4
0x795	      0xba00000000	                              mov edx, 0	       138	add.c	FUNCTION_5	FOR_1	IF_3	CALL_4
0x79a	          0x4889ce	                            mov rsi, rcx	       138	add.c	FUNCTION_5	FOR_1	IF_3	CALL_4
0x79d	          0x4889c7	                            mov rdi, rax	       138	add.c	FUNCTION_5	FOR_1	IF_3	CALL_4
0x7a0	      0xe8befaffff	                  call sym.ce_path_match	       138	add.c	FUNCTION_5	FOR_1	IF_3	CALL_4
0x7a5	            0x85c0	                           test eax, eax	       138	add.c	FUNCTION_5	FOR_1	IF_3	CALL_4
0x7a7	            0x7428	                            je 0x4000811	       138	add.c	FUNCTION_5	FOR_1	IF_3	CALL_4
0x7a9	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       140	add.c	FUNCTION_5	FOR_1	CALL_5
0x7ac	          0x83c804	                               or eax, 4	       140	add.c	FUNCTION_5	FOR_1	CALL_5
0x7af	            0x89c2	                            mov edx, eax	       140	add.c	FUNCTION_5	FOR_1	CALL_5
0x7b1	        0x488b45f8	                mov rax, qword [rbp - 8]	       140	add.c	FUNCTION_5	FOR_1	CALL_5
0x7b5	        0x4883c058	                           add rax, 0x58	       140	add.c	FUNCTION_5	FOR_1	CALL_5
0x7b9	          0x4889c6	                            mov rsi, rax	       140	add.c	FUNCTION_5	FOR_1	CALL_5
0x7bc	      0xbf00000000	                              mov edi, 0	       140	add.c	FUNCTION_5	FOR_1	CALL_5
0x7c1	      0xe800000000	                          call 0x4000806	       140	add.c	FUNCTION_5	FOR_1	CALL_5
0x7c6	           0x945f4	               or dword [rbp - 0xc], eax	       140	add.c	FUNCTION_5	FOR_1	CALL_5
0x7c9	            0xeb07	                           jmp 0x4000812	       140	add.c	FUNCTION_5	FOR_1	CALL_5
0x7cb	              0x90	                                     nop	       135	add.c	FUNCTION_5	FOR_1	IF_1
0x7cc	            0xeb04	                           jmp 0x4000812	       135	add.c	FUNCTION_5	FOR_1	IF_1
0x7ce	              0x90	                                     nop	       137	add.c	FUNCTION_5	FOR_1	IF_2
0x7cf	            0xeb01	                           jmp 0x4000812	       137	add.c	FUNCTION_5	FOR_1	IF_2
0x7d1	              0x90	                                     nop	       139	add.c	FUNCTION_5	FOR_1	IF_3
0x7d2	        0x8345f001	               add dword [rbp - 0x10], 1	       131	add.c	FUNCTION_5	FOR_1
0x7d6	    0x8b1500000000	            mov edx, dword [0x0400081c] 	       131	add.c	FUNCTION_5	FOR_1
0x7dc	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       131	add.c	FUNCTION_5	FOR_1
0x7df	            0x39c2	                            cmp edx, eax	       131	add.c	FUNCTION_5	FOR_1
0x7e1	     0xf874bffffff	                            ja 0x4000772	       131	add.c	FUNCTION_5	FOR_1
0x7e7	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       143	add.c	FUNCTION_5
0x7ea	              0xc9	                                   leave	       144	add.c	FUNCTION_5
0x7eb	              0xc3	                                     ret	       144	add.c	FUNCTION_5
