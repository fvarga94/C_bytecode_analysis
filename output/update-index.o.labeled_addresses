ce_path_match	FOR,0:DO,0:functions,0:ELSE,0:CALL,4:SWITCH,0:IF,0:WHILE,0	34
0x46c	              0x55	                                push rbp	       335	dir.h	FUNCTION_2
0x46d	          0x4889e5	                            mov rbp, rsp	       335	dir.h	FUNCTION_2
0x470	        0x4883ec20	                           sub rsp, 0x20	       335	dir.h	FUNCTION_2
0x474	        0x48897df8	                mov qword [rbp - 8], rdi	       335	dir.h	FUNCTION_2
0x478	        0x488975f0	             mov qword [rbp - 0x10], rsi	       335	dir.h	FUNCTION_2
0x47c	        0x488955e8	             mov qword [rbp - 0x18], rdx	       335	dir.h	FUNCTION_2
0x480	        0x488b45f8	                mov rax, qword [rbp - 8]	       337	dir.h	FUNCTION_2	CALL_4
0x484	          0x8b4034	            mov eax, dword [rax + 0x34] 	       337	dir.h	FUNCTION_2	CALL_4
0x487	      0x2500f00000	                         and eax, 0xf000	       337	dir.h	FUNCTION_2	CALL_4
0x48c	      0x3d00400000	                         cmp eax, 0x4000	       336	dir.h	FUNCTION_2	CALL_2
0x491	            0x7413	                            je 0x40004e6	       336	dir.h	FUNCTION_2	CALL_2
0x493	        0x488b45f8	                mov rax, qword [rbp - 8]	       337	dir.h	FUNCTION_2	CALL_4
0x497	          0x8b4034	            mov eax, dword [rax + 0x34] 	       337	dir.h	FUNCTION_2	CALL_4
0x49a	      0x2500f00000	                         and eax, 0xf000	       337	dir.h	FUNCTION_2	CALL_4
0x49f	      0x3d00e00000	                         cmp eax, 0xe000	       336	dir.h	FUNCTION_2	CALL_2
0x4a4	            0x7507	                           jne 0x40004ed	       336	dir.h	FUNCTION_2	CALL_2
0x4a6	      0xb901000000	                              mov ecx, 1	       336	dir.h	FUNCTION_2	CALL_2
0x4ab	            0xeb05	                           jmp 0x40004f2	       336	dir.h	FUNCTION_2	CALL_2
0x4ad	      0xb900000000	                              mov ecx, 0	       336	dir.h	FUNCTION_2	CALL_2
0x4b2	        0x488b45f8	                mov rax, qword [rbp - 8]	       336	dir.h	FUNCTION_2	CALL_2
0x4b6	          0x8b403c	            mov eax, dword [rax + 0x3c] 	       336	dir.h	FUNCTION_2	CALL_2
0x4b9	            0x89c7	                            mov edi, eax	       336	dir.h	FUNCTION_2	CALL_2
0x4bb	        0x488b45f8	                mov rax, qword [rbp - 8]	       336	dir.h	FUNCTION_2	CALL_2
0x4bf	        0x488d7058	                   lea rsi, [rax + 0x58]	       336	dir.h	FUNCTION_2	CALL_2
0x4c3	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       336	dir.h	FUNCTION_2	CALL_2
0x4c7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       336	dir.h	FUNCTION_2	CALL_2
0x4cb	          0x4189c9	                            mov r9d, ecx	       336	dir.h	FUNCTION_2	CALL_2
0x4ce	          0x4989d0	                             mov r8, rdx	       336	dir.h	FUNCTION_2	CALL_2
0x4d1	      0xb900000000	                              mov ecx, 0	       336	dir.h	FUNCTION_2	CALL_2
0x4d6	            0x89fa	                            mov edx, edi	       336	dir.h	FUNCTION_2	CALL_2
0x4d8	          0x4889c7	                            mov rdi, rax	       336	dir.h	FUNCTION_2	CALL_2
0x4db	      0xe800000000	                          call 0x4000520	       336	dir.h	FUNCTION_2	CALL_2
0x4e0	              0xc9	                                   leave	       338	dir.h	FUNCTION_2
0x4e1	              0xc3	                                     ret	       338	dir.h	FUNCTION_2
xrmdir	FOR,0:DO,0:functions,0:ELSE,0:CALL,4:SWITCH,0:IF,1:WHILE,0	24
0x814	              0x55	                                push rbp	       110	update-index.c	FUNCTION_11
0x815	          0x4889e5	                            mov rbp, rsp	       110	update-index.c	FUNCTION_11
0x818	        0x4883ec10	                           sub rsp, 0x10	       110	update-index.c	FUNCTION_11
0x81c	        0x48897df8	                mov qword [rbp - 8], rdi	       110	update-index.c	FUNCTION_11
0x820	        0x488b45f8	                mov rax, qword [rbp - 8]	       111	update-index.c	FUNCTION_11	CALL_1
0x824	          0x4889c7	                            mov rdi, rax	       111	update-index.c	FUNCTION_11	CALL_1
0x827	      0xe840feffff	                 call sym.get_mtime_path	       111	update-index.c	FUNCTION_11	CALL_1
0x82c	        0x488945f8	                mov qword [rbp - 8], rax	       111	update-index.c	FUNCTION_11	CALL_1
0x830	        0x488b45f8	                mov rax, qword [rbp - 8]	       112	update-index.c	FUNCTION_11	IF_1	CALL_2
0x834	          0x4889c7	                            mov rdi, rax	       112	update-index.c	FUNCTION_11	IF_1	CALL_2
0x837	      0xe800000000	                          call 0x400087c	       112	update-index.c	FUNCTION_11	IF_1	CALL_2
0x83c	            0x85c0	                           test eax, eax	       112	update-index.c	FUNCTION_11	IF_1	CALL_2
0x83e	            0x7421	                            je 0x40008a1	       112	update-index.c	FUNCTION_11	IF_1	CALL_2
0x840	      0xbf00000000	                              mov edi, 0	       113	update-index.c	FUNCTION_11	CALL_4
0x845	      0xe803faffff	                               call sym.	       113	update-index.c	FUNCTION_11	CALL_4
0x84a	          0x4889c2	                            mov rdx, rax	       113	update-index.c	FUNCTION_11	CALL_4
0x84d	        0x488b45f8	                mov rax, qword [rbp - 8]	       113	update-index.c	FUNCTION_11	CALL_4
0x851	          0x4889c6	                            mov rsi, rax	       113	update-index.c	FUNCTION_11	CALL_4
0x854	          0x4889d7	                            mov rdi, rdx	       113	update-index.c	FUNCTION_11	CALL_4
0x857	      0xb800000000	                              mov eax, 0	       113	update-index.c	FUNCTION_11	CALL_4
0x85c	      0xe800000000	                          call 0x40008a1	       113	update-index.c	FUNCTION_11	CALL_4
0x861	              0x90	                                     nop	       114	update-index.c	FUNCTION_11
0x862	              0xc9	                                   leave	       114	update-index.c	FUNCTION_11
0x863	              0xc3	                                     ret	       114	update-index.c	FUNCTION_11
avoid_racy	FOR,0:DO,0:functions,0:ELSE,0:CALL,1:SWITCH,0:IF,0:WHILE,0	7
0x864	              0x55	                                push rbp	       117	update-index.c	FUNCTION_12
0x865	          0x4889e5	                            mov rbp, rsp	       117	update-index.c	FUNCTION_12
0x868	      0xbf01000000	                              mov edi, 1	       123	update-index.c	FUNCTION_12	CALL_1
0x86d	      0xe800000000	                          call 0x40008b2	       123	update-index.c	FUNCTION_12	CALL_1
0x872	              0x90	                                     nop	       124	update-index.c	FUNCTION_12
0x873	              0x5d	                                 pop rbp	       124	update-index.c	FUNCTION_12
0x874	              0xc3	                                     ret	       124	update-index.c	FUNCTION_12
create_file	FOR,0:DO,0:functions,0:ELSE,0:CALL,4:SWITCH,0:IF,1:WHILE,0	28
0x75e	              0x55	                                push rbp	        93	update-index.c	FUNCTION_9
0x75f	          0x4889e5	                            mov rbp, rsp	        93	update-index.c	FUNCTION_9
0x762	        0x4883ec20	                           sub rsp, 0x20	        93	update-index.c	FUNCTION_9
0x766	        0x48897de8	             mov qword [rbp - 0x18], rdi	        93	update-index.c	FUNCTION_9
0x76a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        95	update-index.c	FUNCTION_9	CALL_1
0x76e	          0x4889c7	                            mov rdi, rax	        95	update-index.c	FUNCTION_9	CALL_1
0x771	      0xe8f6feffff	                 call sym.get_mtime_path	        95	update-index.c	FUNCTION_9	CALL_1
0x776	        0x488945e8	             mov qword [rbp - 0x18], rax	        95	update-index.c	FUNCTION_9	CALL_1
0x77a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        96	update-index.c	FUNCTION_9	CALL_2
0x77e	      0xbaa4010000	                          mov edx, 0x1a4	        96	update-index.c	FUNCTION_9	CALL_2
0x783	      0xbe42000000	                           mov esi, 0x42	        96	update-index.c	FUNCTION_9	CALL_2
0x788	          0x4889c7	                            mov rdi, rax	        96	update-index.c	FUNCTION_9	CALL_2
0x78b	      0xb800000000	                              mov eax, 0	        96	update-index.c	FUNCTION_9	CALL_2
0x790	      0xe800000000	                          call 0x40007d5	        96	update-index.c	FUNCTION_9	CALL_2
0x795	          0x8945fc	                mov dword [rbp - 4], eax	        96	update-index.c	FUNCTION_9	CALL_2
0x798	        0x837dfc00	                  cmp dword [rbp - 4], 0	        97	update-index.c	FUNCTION_9	IF_1
0x79c	            0x7921	                           jns 0x40007ff	        97	update-index.c	FUNCTION_9	IF_1
0x79e	      0xbf00000000	                              mov edi, 0	        98	update-index.c	FUNCTION_9	CALL_4
0x7a3	      0xe8a5faffff	                               call sym.	        98	update-index.c	FUNCTION_9	CALL_4
0x7a8	          0x4889c2	                            mov rdx, rax	        98	update-index.c	FUNCTION_9	CALL_4
0x7ab	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        98	update-index.c	FUNCTION_9	CALL_4
0x7af	          0x4889c6	                            mov rsi, rax	        98	update-index.c	FUNCTION_9	CALL_4
0x7b2	          0x4889d7	                            mov rdi, rdx	        98	update-index.c	FUNCTION_9	CALL_4
0x7b5	      0xb800000000	                              mov eax, 0	        98	update-index.c	FUNCTION_9	CALL_4
0x7ba	      0xe800000000	                          call 0x40007ff	        98	update-index.c	FUNCTION_9	CALL_4
0x7bf	          0x8b45fc	                mov eax, dword [rbp - 4]	        99	update-index.c	FUNCTION_9
0x7c2	              0xc9	                                   leave	       100	update-index.c	FUNCTION_9
0x7c3	              0xc3	                                     ret	       100	update-index.c	FUNCTION_9
strtoul_ui	FOR,0:DO,0:functions,0:ELSE,0:CALL,2:SWITCH,0:IF,2:WHILE,0	54
0xb	              0x55	                                push rbp	      1010	git-compat-util.h	FUNCTION_63
0xc	          0x4889e5	                            mov rbp, rsp	      1010	git-compat-util.h	FUNCTION_63
0xf	        0x4883ec40	                           sub rsp, 0x40	      1010	git-compat-util.h	FUNCTION_63
0x13	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1010	git-compat-util.h	FUNCTION_63
0x17	          0x8975d4	             mov dword [rbp - 0x2c], esi	      1010	git-compat-util.h	FUNCTION_63
0x1a	        0x488955c8	             mov qword [rbp - 0x38], rdx	      1010	git-compat-util.h	FUNCTION_63
0x1e	    0x64488b042528	                mov rax, qword fs:[0x28]	      1010	git-compat-util.h	FUNCTION_63
0x27	        0x488945f8	                mov qword [rbp - 8], rax	      1010	git-compat-util.h	FUNCTION_63
0x2b	            0x31c0	                            xor eax, eax	      1010	git-compat-util.h	FUNCTION_63
0x2d	      0xe800000000	                          call 0x4000072	      1014	git-compat-util.h	FUNCTION_63
0x32	    0xc70000000000	                      mov dword [rax], 0	      1014	git-compat-util.h	FUNCTION_63
0x38	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1016	git-compat-util.h	FUNCTION_63	IF_1	CALL_1
0x3c	      0xbe2d000000	                           mov esi, 0x2d	      1016	git-compat-util.h	FUNCTION_63	IF_1	CALL_1
0x41	          0x4889c7	                            mov rdi, rax	      1016	git-compat-util.h	FUNCTION_63	IF_1	CALL_1
0x44	      0xe800000000	                          call 0x4000089	      1016	git-compat-util.h	FUNCTION_63	IF_1	CALL_1
0x49	          0x4885c0	                           test rax, rax	      1016	git-compat-util.h	FUNCTION_63	IF_1	CALL_1
0x4c	            0x7407	                            je 0x4000095	      1016	git-compat-util.h	FUNCTION_63	IF_1	CALL_1
0x4e	      0xb8ffffffff	                     mov eax, 0xffffffff	      1017	git-compat-util.h	FUNCTION_63	IF_1
0x53	            0xeb5e	                           jmp 0x40000f3	      1017	git-compat-util.h	FUNCTION_63	IF_1
0x55	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      1018	git-compat-util.h	FUNCTION_63	CALL_2
0x58	        0x488d4de8	                   lea rcx, [rbp - 0x18]	      1018	git-compat-util.h	FUNCTION_63	CALL_2
0x5c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1018	git-compat-util.h	FUNCTION_63	CALL_2
0x60	          0x4889ce	                            mov rsi, rcx	      1018	git-compat-util.h	FUNCTION_63	CALL_2
0x63	          0x4889c7	                            mov rdi, rax	      1018	git-compat-util.h	FUNCTION_63	CALL_2
0x66	      0xe800000000	                          call 0x40000ab	      1018	git-compat-util.h	FUNCTION_63	CALL_2
0x6b	        0x488945f0	             mov qword [rbp - 0x10], rax	      1018	git-compat-util.h	FUNCTION_63	CALL_2
0x6f	      0xe800000000	                          call 0x40000b4	      1019	git-compat-util.h	FUNCTION_63	IF_2
0x74	            0x8b00	                    mov eax, dword [rax]	      1019	git-compat-util.h	FUNCTION_63	IF_2
0x76	            0x85c0	                           test eax, eax	      1019	git-compat-util.h	FUNCTION_63	IF_2
0x78	            0x7521	                           jne 0x40000db	      1019	git-compat-util.h	FUNCTION_63	IF_2
0x7a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1019	git-compat-util.h	FUNCTION_63	IF_2
0x7e	           0xfb600	                   movzx eax, byte [rax]	      1019	git-compat-util.h	FUNCTION_63	IF_2
0x81	            0x84c0	                             test al, al	      1019	git-compat-util.h	FUNCTION_63	IF_2
0x83	            0x7516	                           jne 0x40000db	      1019	git-compat-util.h	FUNCTION_63	IF_2
0x85	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1019	git-compat-util.h	FUNCTION_63	IF_2
0x89	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      1019	git-compat-util.h	FUNCTION_63	IF_2
0x8d	            0x740c	                            je 0x40000db	      1019	git-compat-util.h	FUNCTION_63	IF_2
0x8f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1019	git-compat-util.h	FUNCTION_63	IF_2
0x93	            0x89c0	                            mov eax, eax	      1019	git-compat-util.h	FUNCTION_63	IF_2
0x95	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      1019	git-compat-util.h	FUNCTION_63	IF_2
0x99	            0x7407	                            je 0x40000e2	      1019	git-compat-util.h	FUNCTION_63	IF_2
0x9b	      0xb8ffffffff	                     mov eax, 0xffffffff	      1020	git-compat-util.h	FUNCTION_63	IF_2
0xa0	            0xeb11	                           jmp 0x40000f3	      1020	git-compat-util.h	FUNCTION_63	IF_2
0xa2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1021	git-compat-util.h	FUNCTION_63
0xa6	            0x89c2	                            mov edx, eax	      1021	git-compat-util.h	FUNCTION_63
0xa8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1021	git-compat-util.h	FUNCTION_63
0xac	            0x8910	                    mov dword [rax], edx	      1021	git-compat-util.h	FUNCTION_63
0xae	      0xb800000000	                              mov eax, 0	      1022	git-compat-util.h	FUNCTION_63
0xb3	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1023	git-compat-util.h	FUNCTION_63
0xb7	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1023	git-compat-util.h	FUNCTION_63
0xc0	            0x7405	                            je 0x4000107	      1023	git-compat-util.h	FUNCTION_63
0xc2	      0xe800000000	                          call 0x4000107	      1023	git-compat-util.h	FUNCTION_63
0xc7	              0xc9	                                   leave	      1023	git-compat-util.h	FUNCTION_63
0xc8	              0xc3	                                     ret	      1023	git-compat-util.h	FUNCTION_63
do_unresolve	FOR,1:DO,0:functions,0:ELSE,0:CALL,4:SWITCH,0:IF,0:WHILE,0	39
0x2071	              0x55	                                push rbp	       700	update-index.c	FUNCTION_27
0x2072	          0x4889e5	                            mov rbp, rsp	       700	update-index.c	FUNCTION_27
0x2075	        0x4883ec40	                           sub rsp, 0x40	       700	update-index.c	FUNCTION_27
0x2079	          0x897ddc	             mov dword [rbp - 0x24], edi	       700	update-index.c	FUNCTION_27
0x207c	        0x488975d0	             mov qword [rbp - 0x30], rsi	       700	update-index.c	FUNCTION_27
0x2080	        0x488955c8	             mov qword [rbp - 0x38], rdx	       700	update-index.c	FUNCTION_27
0x2084	          0x894dd8	             mov dword [rbp - 0x28], ecx	       700	update-index.c	FUNCTION_27
0x2087	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       702	update-index.c	FUNCTION_27
0x208e	      0xe87affffff	             call sym.read_head_pointers	       707	update-index.c	FUNCTION_27	CALL_1
0x2093	    0xc745e8010000	               mov dword [rbp - 0x18], 1	       709	update-index.c	FUNCTION_27	FOR_1
0x209a	            0xeb53	                           jmp 0x400212f	       709	update-index.c	FUNCTION_27	FOR_1
0x209c	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       710	update-index.c	FUNCTION_27	FOR_1
0x209f	            0x4898	                                    cdqe	       710	update-index.c	FUNCTION_27	FOR_1
0x20a1	    0x488d14c50000	                        lea rdx, [rax*8]	       710	update-index.c	FUNCTION_27	FOR_1
0x20a9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       710	update-index.c	FUNCTION_27	FOR_1
0x20ad	          0x4801d0	                            add rax, rdx	       710	update-index.c	FUNCTION_27	FOR_1
0x20b0	          0x488b00	                    mov rax, qword [rax]	       710	update-index.c	FUNCTION_27	FOR_1
0x20b3	        0x488945f0	             mov qword [rbp - 0x10], rax	       710	update-index.c	FUNCTION_27	FOR_1
0x20b7	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       711	update-index.c	FUNCTION_27	FOR_1	CALL_2
0x20bb	          0x8b4dd8	             mov ecx, dword [rbp - 0x28]	       711	update-index.c	FUNCTION_27	FOR_1	CALL_2
0x20be	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       711	update-index.c	FUNCTION_27	FOR_1	CALL_2
0x20c2	            0x89ce	                            mov esi, ecx	       711	update-index.c	FUNCTION_27	FOR_1	CALL_2
0x20c4	          0x4889c7	                            mov rdi, rax	       711	update-index.c	FUNCTION_27	FOR_1	CALL_2
0x20c7	      0xe800000000	                          call 0x400210c	       711	update-index.c	FUNCTION_27	FOR_1	CALL_2
0x20cc	        0x488945f8	                mov qword [rbp - 8], rax	       711	update-index.c	FUNCTION_27	FOR_1	CALL_2
0x20d0	        0x488b45f8	                mov rax, qword [rbp - 8]	       712	update-index.c	FUNCTION_27	FOR_1	CALL_3
0x20d4	          0x4889c7	                            mov rdi, rax	       712	update-index.c	FUNCTION_27	FOR_1	CALL_3
0x20d7	      0xe866fcffff	                  call sym.unresolve_one	       712	update-index.c	FUNCTION_27	FOR_1	CALL_3
0x20dc	           0x945ec	              or dword [rbp - 0x14], eax	       712	update-index.c	FUNCTION_27	FOR_1	CALL_3
0x20df	        0x488b45f8	                mov rax, qword [rbp - 8]	       713	update-index.c	FUNCTION_27	FOR_1	CALL_4
0x20e3	          0x4889c7	                            mov rdi, rax	       713	update-index.c	FUNCTION_27	FOR_1	CALL_4
0x20e6	      0xe800000000	                          call 0x400212b	       713	update-index.c	FUNCTION_27	FOR_1	CALL_4
0x20eb	        0x8345e801	               add dword [rbp - 0x18], 1	       709	update-index.c	FUNCTION_27	FOR_1
0x20ef	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       709	update-index.c	FUNCTION_27	FOR_1
0x20f2	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	       709	update-index.c	FUNCTION_27	FOR_1
0x20f5	            0x7ca5	                            jl 0x40020dc	       709	update-index.c	FUNCTION_27	FOR_1
0x20f7	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       715	update-index.c	FUNCTION_27
0x20fa	              0xc9	                                   leave	       716	update-index.c	FUNCTION_27
0x20fb	              0xc3	                                     ret	       716	update-index.c	FUNCTION_27
chmod_callback	FOR,0:DO,0:functions,0:ELSE,0:CALL,1:SWITCH,0:IF,1:WHILE,0	39
0x2396	              0x55	                                push rbp	       797	update-index.c	FUNCTION_32
0x2397	          0x4889e5	                            mov rbp, rsp	       797	update-index.c	FUNCTION_32
0x239a	        0x4883ec30	                           sub rsp, 0x30	       797	update-index.c	FUNCTION_32
0x239e	        0x48897de8	             mov qword [rbp - 0x18], rdi	       797	update-index.c	FUNCTION_32
0x23a2	        0x488975e0	             mov qword [rbp - 0x20], rsi	       797	update-index.c	FUNCTION_32
0x23a6	          0x8955dc	             mov dword [rbp - 0x24], edx	       797	update-index.c	FUNCTION_32
0x23a9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       798	update-index.c	FUNCTION_32
0x23ad	        0x488b4010	            mov rax, qword [rax + 0x10] 	       798	update-index.c	FUNCTION_32
0x23b1	        0x488945f8	                mov qword [rbp - 8], rax	       798	update-index.c	FUNCTION_32
0x23b5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       799	update-index.c	FUNCTION_32	IF_1
0x23b9	           0xfb600	                   movzx eax, byte [rax]	       799	update-index.c	FUNCTION_32	IF_1
0x23bc	            0x3c2d	                            cmp al, 0x2d	       799	update-index.c	FUNCTION_32	IF_1
0x23be	            0x740b	                            je 0x400240b	       799	update-index.c	FUNCTION_32	IF_1
0x23c0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       799	update-index.c	FUNCTION_32	IF_1
0x23c4	           0xfb600	                   movzx eax, byte [rax]	       799	update-index.c	FUNCTION_32	IF_1
0x23c7	            0x3c2b	                            cmp al, 0x2b	       799	update-index.c	FUNCTION_32	IF_1
0x23c9	            0x751e	                           jne 0x4002429	       799	update-index.c	FUNCTION_32	IF_1
0x23cb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       799	update-index.c	FUNCTION_32	IF_1
0x23cf	        0x4883c001	                              add rax, 1	       799	update-index.c	FUNCTION_32	IF_1
0x23d3	           0xfb600	                   movzx eax, byte [rax]	       799	update-index.c	FUNCTION_32	IF_1
0x23d6	            0x3c78	                            cmp al, 0x78	       799	update-index.c	FUNCTION_32	IF_1
0x23d8	            0x750f	                           jne 0x4002429	       799	update-index.c	FUNCTION_32	IF_1
0x23da	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       799	update-index.c	FUNCTION_32	IF_1
0x23de	        0x4883c002	                              add rax, 2	       799	update-index.c	FUNCTION_32	IF_1
0x23e2	           0xfb600	                   movzx eax, byte [rax]	       799	update-index.c	FUNCTION_32	IF_1
0x23e5	            0x84c0	                             test al, al	       799	update-index.c	FUNCTION_32	IF_1
0x23e7	            0x7416	                            je 0x400243f	       799	update-index.c	FUNCTION_32	IF_1
0x23e9	      0xbf00000000	                              mov edi, 0	       800	update-index.c	FUNCTION_32	CALL_1
0x23ee	      0xb800000000	                              mov eax, 0	       800	update-index.c	FUNCTION_32	CALL_1
0x23f3	      0xe800000000	                          call 0x4002438	       800	update-index.c	FUNCTION_32	CALL_1
0x23f8	      0xe803dcffff	                    call sym.const_error	       800	update-index.c	FUNCTION_32	CALL_1
0x23fd	            0xeb12	                           jmp 0x4002451	       800	update-index.c	FUNCTION_32	CALL_1
0x23ff	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       801	update-index.c	FUNCTION_32
0x2403	           0xfb610	                   movzx edx, byte [rax]	       801	update-index.c	FUNCTION_32
0x2406	        0x488b45f8	                mov rax, qword [rbp - 8]	       801	update-index.c	FUNCTION_32
0x240a	            0x8810	                      mov byte [rax], dl	       801	update-index.c	FUNCTION_32
0x240c	      0xb800000000	                              mov eax, 0	       802	update-index.c	FUNCTION_32
0x2411	              0xc9	                                   leave	       803	update-index.c	FUNCTION_32
0x2412	              0xc3	                                     ret	       803	update-index.c	FUNCTION_32
_	FOR,0:DO,0:functions,0:ELSE,0:CALL,2:SWITCH,0:IF,1:WHILE,0	15
0x24d	              0x55	                                push rbp	        51	gettext.h	FUNCTION_70
0x24e	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_70
0x251	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_70
0x255	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_70
0x259	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_70	IF_1
0x25d	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_70	IF_1
0x260	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_70	IF_1
0x262	            0x7507	                           jne 0x40002ab	        52	gettext.h	FUNCTION_70	IF_1
0x264	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_70	IF_1
0x269	            0xeb0c	                           jmp 0x40002b7	        53	gettext.h	FUNCTION_70	IF_1
0x26b	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_70	CALL_2
0x26f	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_70	CALL_2
0x272	      0xe800000000	                          call 0x40002b7	        54	gettext.h	FUNCTION_70	CALL_2
0x277	              0xc9	                                   leave	        55	gettext.h	FUNCTION_70
0x278	              0xc3	                                     ret	        55	gettext.h	FUNCTION_70
process_directory	FOR,0:DO,0:functions,0:ELSE,0:CALL,10:SWITCH,0:IF,7:WHILE,1	124
0x114c	              0x55	                                push rbp	       324	update-index.c	FUNCTION_18
0x114d	          0x4889e5	                            mov rbp, rsp	       324	update-index.c	FUNCTION_18
0x1150	        0x4883ec60	                           sub rsp, 0x60	       324	update-index.c	FUNCTION_18
0x1154	        0x48897db8	             mov qword [rbp - 0x48], rdi	       324	update-index.c	FUNCTION_18
0x1158	          0x8975b4	             mov dword [rbp - 0x4c], esi	       324	update-index.c	FUNCTION_18
0x115b	        0x488955a8	             mov qword [rbp - 0x58], rdx	       324	update-index.c	FUNCTION_18
0x115f	    0x64488b042528	                mov rax, qword fs:[0x28]	       324	update-index.c	FUNCTION_18
0x1168	        0x488945f8	                mov qword [rbp - 8], rax	       324	update-index.c	FUNCTION_18
0x116c	            0x31c0	                            xor eax, eax	       324	update-index.c	FUNCTION_18
0x116e	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       326	update-index.c	FUNCTION_18	CALL_1
0x1171	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       326	update-index.c	FUNCTION_18	CALL_1
0x1175	          0x4889c6	                            mov rsi, rax	       326	update-index.c	FUNCTION_18	CALL_1
0x1178	      0xbf00000000	                              mov edi, 0	       326	update-index.c	FUNCTION_18	CALL_1
0x117d	      0xe800000000	                          call 0x40011c2	       326	update-index.c	FUNCTION_18	CALL_1
0x1182	          0x8945cc	             mov dword [rbp - 0x34], eax	       326	update-index.c	FUNCTION_18	CALL_1
0x1185	        0x837dcc00	               cmp dword [rbp - 0x34], 0	       329	update-index.c	FUNCTION_18	IF_1
0x1189	            0x787e	                            js 0x4001249	       329	update-index.c	FUNCTION_18	IF_1
0x118b	    0x488b05000000	            mov rax, qword [0x040011d2] 	       330	update-index.c	FUNCTION_18	IF_1
0x1192	          0x8b55cc	             mov edx, dword [rbp - 0x34]	       330	update-index.c	FUNCTION_18	IF_1
0x1195	          0x4863d2	                         movsxd rdx, edx	       330	update-index.c	FUNCTION_18	IF_1
0x1198	        0x48c1e203	                              shl rdx, 3	       330	update-index.c	FUNCTION_18	IF_1
0x119c	          0x4801d0	                            add rax, rdx	       330	update-index.c	FUNCTION_18	IF_1
0x119f	          0x488b00	                    mov rax, qword [rax]	       330	update-index.c	FUNCTION_18	IF_1
0x11a2	        0x488945d0	             mov qword [rbp - 0x30], rax	       330	update-index.c	FUNCTION_18	IF_1
0x11a6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       331	update-index.c	FUNCTION_18	IF_1	IF_2	CALL_2
0x11aa	          0x8b4034	            mov eax, dword [rax + 0x34] 	       331	update-index.c	FUNCTION_18	IF_1	IF_2	CALL_2
0x11ad	      0x2500f00000	                         and eax, 0xf000	       331	update-index.c	FUNCTION_18	IF_1	IF_2	CALL_2
0x11b2	      0x3d00e00000	                         cmp eax, 0xe000	       331	update-index.c	FUNCTION_18	IF_1	IF_2	CALL_2
0x11b7	            0x753f	                           jne 0x4001238	       331	update-index.c	FUNCTION_18	IF_1	IF_2	CALL_2
0x11b9	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       334	update-index.c	FUNCTION_18	IF_1	IF_2	IF_3	CALL_3
0x11bd	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       334	update-index.c	FUNCTION_18	IF_1	IF_2	IF_3	CALL_3
0x11c1	      0xbe00000000	                              mov esi, 0	       334	update-index.c	FUNCTION_18	IF_1	IF_2	IF_3	CALL_3
0x11c6	          0x4889c7	                            mov rdi, rax	       334	update-index.c	FUNCTION_18	IF_1	IF_2	IF_3	CALL_3
0x11c9	      0xe800000000	                          call 0x400120e	       334	update-index.c	FUNCTION_18	IF_1	IF_2	IF_3	CALL_3
0x11ce	            0x85c0	                           test eax, eax	       334	update-index.c	FUNCTION_18	IF_1	IF_2	IF_3	CALL_3
0x11d0	            0x790a	                           jns 0x400121c	       334	update-index.c	FUNCTION_18	IF_1	IF_2	IF_3	CALL_3
0x11d2	      0xb800000000	                              mov eax, 0	       335	update-index.c	FUNCTION_18	IF_1	IF_2	IF_3
0x11d7	      0xe91e010000	                           jmp 0x400133a	       335	update-index.c	FUNCTION_18	IF_1	IF_2	IF_3
0x11dc	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	       337	update-index.c	FUNCTION_18	IF_1	IF_2	CALL_4
0x11e0	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       337	update-index.c	FUNCTION_18	IF_1	IF_2	CALL_4
0x11e3	        0x488b75b8	             mov rsi, qword [rbp - 0x48]	       337	update-index.c	FUNCTION_18	IF_1	IF_2	CALL_4
0x11e7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       337	update-index.c	FUNCTION_18	IF_1	IF_2	CALL_4
0x11eb	          0x4889c7	                            mov rdi, rax	       337	update-index.c	FUNCTION_18	IF_1	IF_2	CALL_4
0x11ee	      0xe8c7fdffff	                   call sym.add_one_path	       337	update-index.c	FUNCTION_18	IF_1	IF_2	CALL_4
0x11f3	      0xe902010000	                           jmp 0x400133a	       337	update-index.c	FUNCTION_18	IF_1	IF_2	CALL_4
0x11f8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       340	update-index.c	FUNCTION_18	IF_1	CALL_5
0x11fc	          0x4889c7	                            mov rdi, rax	       340	update-index.c	FUNCTION_18	IF_1	CALL_5
0x11ff	      0xe8f5fcffff	                call sym.remove_one_path	       340	update-index.c	FUNCTION_18	IF_1	CALL_5
0x1204	      0xe9f1000000	                           jmp 0x400133a	       340	update-index.c	FUNCTION_18	IF_1	CALL_5
0x1209	          0xf755cc	                  not dword [rbp - 0x34]	       344	update-index.c	FUNCTION_18
0x120c	      0xe984000000	                           jmp 0x40012d5	       345	update-index.c	FUNCTION_18	WHILE_1
0x1211	    0x488b0d000000	            mov rcx, qword [0x04001258] 	       346	update-index.c	FUNCTION_18	WHILE_1
0x1218	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       346	update-index.c	FUNCTION_18	WHILE_1
0x121b	          0x8d5001	                      lea edx, [rax + 1]	       346	update-index.c	FUNCTION_18	WHILE_1
0x121e	          0x8955cc	             mov dword [rbp - 0x34], edx	       346	update-index.c	FUNCTION_18	WHILE_1
0x1221	            0x4898	                                    cdqe	       346	update-index.c	FUNCTION_18	WHILE_1
0x1223	        0x48c1e003	                              shl rax, 3	       346	update-index.c	FUNCTION_18	WHILE_1
0x1227	          0x4801c8	                            add rax, rcx	       346	update-index.c	FUNCTION_18	WHILE_1
0x122a	          0x488b00	                    mov rax, qword [rax]	       346	update-index.c	FUNCTION_18	WHILE_1
0x122d	        0x488945d8	             mov qword [rbp - 0x28], rax	       346	update-index.c	FUNCTION_18	WHILE_1
0x1231	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       348	update-index.c	FUNCTION_18	WHILE_1	IF_4	CALL_6
0x1234	          0x4863d0	                         movsxd rdx, eax	       348	update-index.c	FUNCTION_18	WHILE_1	IF_4	CALL_6
0x1237	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       348	update-index.c	FUNCTION_18	WHILE_1	IF_4	CALL_6
0x123b	        0x488d4858	                   lea rcx, [rax + 0x58]	       348	update-index.c	FUNCTION_18	WHILE_1	IF_4	CALL_6
0x123f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       348	update-index.c	FUNCTION_18	WHILE_1	IF_4	CALL_6
0x1243	          0x4889c6	                            mov rsi, rax	       348	update-index.c	FUNCTION_18	WHILE_1	IF_4	CALL_6
0x1246	          0x4889cf	                            mov rdi, rcx	       348	update-index.c	FUNCTION_18	WHILE_1	IF_4	CALL_6
0x1249	      0xe800000000	                          call 0x400128e	       348	update-index.c	FUNCTION_18	WHILE_1	IF_4	CALL_6
0x124e	            0x85c0	                           test eax, eax	       348	update-index.c	FUNCTION_18	WHILE_1	IF_4	CALL_6
0x1250	            0x7556	                           jne 0x40012e8	       348	update-index.c	FUNCTION_18	WHILE_1	IF_4	CALL_6
0x1252	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       350	update-index.c	FUNCTION_18	WHILE_1	IF_5
0x1256	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       350	update-index.c	FUNCTION_18	WHILE_1	IF_5
0x1259	            0x4898	                                    cdqe	       350	update-index.c	FUNCTION_18	WHILE_1	IF_5
0x125b	       0xfb6440258	     movzx eax, byte [rdx + rax + 0x58] 	       350	update-index.c	FUNCTION_18	WHILE_1	IF_5
0x1260	            0x3c2f	                            cmp al, 0x2f	       350	update-index.c	FUNCTION_18	WHILE_1	IF_5
0x1262	            0x7f47	                            jg 0x40012eb	       350	update-index.c	FUNCTION_18	WHILE_1	IF_5
0x1264	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       352	update-index.c	FUNCTION_18	WHILE_1	IF_6
0x1268	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       352	update-index.c	FUNCTION_18	WHILE_1	IF_6
0x126b	            0x4898	                                    cdqe	       352	update-index.c	FUNCTION_18	WHILE_1	IF_6
0x126d	       0xfb6440258	     movzx eax, byte [rdx + rax + 0x58] 	       352	update-index.c	FUNCTION_18	WHILE_1	IF_6
0x1272	            0x3c2e	                            cmp al, 0x2e	       352	update-index.c	FUNCTION_18	WHILE_1	IF_6
0x1274	            0x7f02	                            jg 0x40012b8	       352	update-index.c	FUNCTION_18	WHILE_1	IF_6
0x1276	            0xeb1d	                           jmp 0x40012d5	       353	update-index.c	FUNCTION_18	WHILE_1	IF_6
0x1278	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       356	update-index.c	FUNCTION_18	WHILE_1	CALL_7
0x127c	          0x4889c6	                            mov rsi, rax	       356	update-index.c	FUNCTION_18	WHILE_1	CALL_7
0x127f	      0xbf00000000	                              mov edi, 0	       356	update-index.c	FUNCTION_18	WHILE_1	CALL_7
0x1284	      0xb800000000	                              mov eax, 0	       356	update-index.c	FUNCTION_18	WHILE_1	CALL_7
0x1289	      0xe800000000	                          call 0x40012ce	       356	update-index.c	FUNCTION_18	WHILE_1	CALL_7
0x128e	      0xe86dedffff	                    call sym.const_error	       356	update-index.c	FUNCTION_18	WHILE_1	CALL_7
0x1293	            0xeb65	                           jmp 0x400133a	       356	update-index.c	FUNCTION_18	WHILE_1	CALL_7
0x1295	    0x8b1500000000	            mov edx, dword [0x040012db] 	       345	update-index.c	FUNCTION_18	WHILE_1
0x129b	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       345	update-index.c	FUNCTION_18	WHILE_1
0x129e	            0x39c2	                            cmp edx, eax	       345	update-index.c	FUNCTION_18	WHILE_1
0x12a0	     0xf876bffffff	                            ja 0x4001251	       345	update-index.c	FUNCTION_18	WHILE_1
0x12a6	            0xeb04	                           jmp 0x40012ec	       345	update-index.c	FUNCTION_18	WHILE_1
0x12a8	              0x90	                                     nop	       349	update-index.c	FUNCTION_18	WHILE_1	IF_4
0x12a9	            0xeb01	                           jmp 0x40012ec	       349	update-index.c	FUNCTION_18	WHILE_1	IF_4
0x12ab	              0x90	                                     nop	       351	update-index.c	FUNCTION_18	WHILE_1	IF_5
0x12ac	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       360	update-index.c	FUNCTION_18	IF_7	CALL_8
0x12b0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       360	update-index.c	FUNCTION_18	IF_7	CALL_8
0x12b4	      0xbe00000000	                              mov esi, 0	       360	update-index.c	FUNCTION_18	IF_7	CALL_8
0x12b9	          0x4889c7	                            mov rdi, rax	       360	update-index.c	FUNCTION_18	IF_7	CALL_8
0x12bc	      0xe800000000	                          call 0x4001301	       360	update-index.c	FUNCTION_18	IF_7	CALL_8
0x12c1	            0x85c0	                           test eax, eax	       360	update-index.c	FUNCTION_18	IF_7	CALL_8
0x12c3	            0x751a	                           jne 0x400131f	       360	update-index.c	FUNCTION_18	IF_7	CALL_8
0x12c5	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	       361	update-index.c	FUNCTION_18	CALL_9
0x12c9	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       361	update-index.c	FUNCTION_18	CALL_9
0x12cc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       361	update-index.c	FUNCTION_18	CALL_9
0x12d0	          0x4889c6	                            mov rsi, rax	       361	update-index.c	FUNCTION_18	CALL_9
0x12d3	      0xbf00000000	                              mov edi, 0	       361	update-index.c	FUNCTION_18	CALL_9
0x12d8	      0xe8ddfcffff	                   call sym.add_one_path	       361	update-index.c	FUNCTION_18	CALL_9
0x12dd	            0xeb1b	                           jmp 0x400133a	       361	update-index.c	FUNCTION_18	CALL_9
0x12df	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       364	update-index.c	FUNCTION_18	CALL_10
0x12e3	          0x4889c6	                            mov rsi, rax	       364	update-index.c	FUNCTION_18	CALL_10
0x12e6	      0xbf00000000	                              mov edi, 0	       364	update-index.c	FUNCTION_18	CALL_10
0x12eb	      0xb800000000	                              mov eax, 0	       364	update-index.c	FUNCTION_18	CALL_10
0x12f0	      0xe800000000	                          call 0x4001335	       364	update-index.c	FUNCTION_18	CALL_10
0x12f5	      0xe806edffff	                    call sym.const_error	       364	update-index.c	FUNCTION_18	CALL_10
0x12fa	        0x488b4df8	                mov rcx, qword [rbp - 8]	       365	update-index.c	FUNCTION_18
0x12fe	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       365	update-index.c	FUNCTION_18
0x1307	            0x7405	                            je 0x400134e	       365	update-index.c	FUNCTION_18
0x1309	      0xe800000000	                          call 0x400134e	       365	update-index.c	FUNCTION_18
0x130e	              0xc9	                                   leave	       365	update-index.c	FUNCTION_18
0x130f	              0xc3	                                     ret	       365	update-index.c	FUNCTION_18
rollback_lock_file	FOR,0:DO,0:functions,0:ELSE,0:CALL,1:SWITCH,0:IF,0:WHILE,0	10
0x451	              0x55	                                push rbp	       303	lockfile.h	FUNCTION_81
0x452	          0x4889e5	                            mov rbp, rsp	       303	lockfile.h	FUNCTION_81
0x455	        0x4883ec10	                           sub rsp, 0x10	       303	lockfile.h	FUNCTION_81
0x459	        0x48897df8	                mov qword [rbp - 8], rdi	       303	lockfile.h	FUNCTION_81
0x45d	        0x488b45f8	                mov rax, qword [rbp - 8]	       304	lockfile.h	FUNCTION_81	CALL_1
0x461	          0x4889c7	                            mov rdi, rax	       304	lockfile.h	FUNCTION_81	CALL_1
0x464	      0xe800000000	                          call 0x40004a9	       304	lockfile.h	FUNCTION_81	CALL_1
0x469	              0x90	                                     nop	       305	lockfile.h	FUNCTION_81
0x46a	              0xc9	                                   leave	       305	lockfile.h	FUNCTION_81
0x46b	              0xc3	                                     ret	       305	lockfile.h	FUNCTION_81
strbuf_setlen	FOR,0:DO,0:functions,0:ELSE,1:CALL,2:SWITCH,0:IF,2:WHILE,0	43
0x17e	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_84
0x17f	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_84
0x182	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_84
0x186	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_84
0x18a	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_84
0x18e	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_84	IF_1
0x192	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_84	IF_1
0x195	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_84	IF_1
0x198	            0x740d	                            je 0x40001e7	       162	strbuf.h	FUNCTION_84	IF_1
0x19a	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_84	IF_1
0x19e	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_84	IF_1
0x1a1	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_84	IF_1
0x1a5	            0xeb05	                           jmp 0x40001ec	       162	strbuf.h	FUNCTION_84	IF_1
0x1a7	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_84	IF_1
0x1ac	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_84	IF_1
0x1b0	            0x730f	                           jae 0x4000201	       162	strbuf.h	FUNCTION_84	IF_1
0x1b2	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_84	CALL_1
0x1b7	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_84	CALL_1
0x1bc	      0xe800000000	                          call 0x4000201	       163	strbuf.h	FUNCTION_84	CALL_1
0x1c1	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_84
0x1c5	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_84
0x1c9	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_84
0x1cd	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_84	IF_2
0x1d1	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_84	IF_2
0x1d5	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_84	IF_2
0x1db	            0x7414	                            je 0x4000231	       165	strbuf.h	FUNCTION_84	IF_2
0x1dd	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_84	IF_2
0x1e1	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_84	IF_2
0x1e5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_84	IF_2
0x1e9	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_84	IF_2
0x1ec	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_84	IF_2
0x1ef	            0xeb24	                           jmp 0x4000255	       169	strbuf.h	FUNCTION_84
0x1f1	     0xfb605000000	           movzx eax, byte [0x04000238] 	       168	strbuf.h	FUNCTION_84	CALL_2
0x1f8	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_84	CALL_2
0x1fa	            0x7419	                            je 0x4000255	       168	strbuf.h	FUNCTION_84	CALL_2
0x1fc	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_84	CALL_2
0x201	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_84	CALL_2
0x206	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_84	CALL_2
0x20b	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_84	CALL_2
0x210	      0xe800000000	                          call 0x4000255	       168	strbuf.h	FUNCTION_84	CALL_2
0x215	              0x90	                                     nop	       169	strbuf.h	FUNCTION_84
0x216	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_84
0x217	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_84
strbuf_swap	FOR,0:DO,0:functions,0:ELSE,0:CALL,1:SWITCH,0:IF,0:WHILE,0	39
0xea	              0x55	                                push rbp	       126	strbuf.h	FUNCTION_82
0xeb	          0x4889e5	                            mov rbp, rsp	       126	strbuf.h	FUNCTION_82
0xee	        0x4883ec40	                           sub rsp, 0x40	       126	strbuf.h	FUNCTION_82
0xf2	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       126	strbuf.h	FUNCTION_82
0xf6	        0x488975c0	             mov qword [rbp - 0x40], rsi	       126	strbuf.h	FUNCTION_82
0xfa	    0x64488b042528	                mov rax, qword fs:[0x28]	       126	strbuf.h	FUNCTION_82
0x103	        0x488945f8	                mov qword [rbp - 8], rax	       126	strbuf.h	FUNCTION_82
0x107	            0x31c0	                            xor eax, eax	       126	strbuf.h	FUNCTION_82
0x109	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       127	strbuf.h	FUNCTION_82	CALL_1
0x10d	        0x488945d0	             mov qword [rbp - 0x30], rax	       127	strbuf.h	FUNCTION_82	CALL_1
0x111	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       127	strbuf.h	FUNCTION_82	CALL_1
0x115	        0x488945d8	             mov qword [rbp - 0x28], rax	       127	strbuf.h	FUNCTION_82	CALL_1
0x119	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       127	strbuf.h	FUNCTION_82	CALL_1
0x11d	          0x488b10	                    mov rdx, qword [rax]	       127	strbuf.h	FUNCTION_82	CALL_1
0x120	        0x488955e0	             mov qword [rbp - 0x20], rdx	       127	strbuf.h	FUNCTION_82	CALL_1
0x124	        0x488b5008	                mov rdx, qword [rax + 8]	       127	strbuf.h	FUNCTION_82	CALL_1
0x128	        0x488955e8	             mov qword [rbp - 0x18], rdx	       127	strbuf.h	FUNCTION_82	CALL_1
0x12c	        0x488b4010	            mov rax, qword [rax + 0x10] 	       127	strbuf.h	FUNCTION_82	CALL_1
0x130	        0x488945f0	             mov qword [rbp - 0x10], rax	       127	strbuf.h	FUNCTION_82	CALL_1
0x134	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       127	strbuf.h	FUNCTION_82	CALL_1
0x138	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       127	strbuf.h	FUNCTION_82	CALL_1
0x13c	      0xba18000000	                           mov edx, 0x18	       127	strbuf.h	FUNCTION_82	CALL_1
0x141	          0x4889ce	                            mov rsi, rcx	       127	strbuf.h	FUNCTION_82	CALL_1
0x144	          0x4889c7	                            mov rdi, rax	       127	strbuf.h	FUNCTION_82	CALL_1
0x147	      0xe800000000	                          call 0x400018c	       127	strbuf.h	FUNCTION_82	CALL_1
0x14c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       127	strbuf.h	FUNCTION_82	CALL_1
0x150	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       127	strbuf.h	FUNCTION_82	CALL_1
0x154	          0x488910	                    mov qword [rax], rdx	       127	strbuf.h	FUNCTION_82	CALL_1
0x157	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       127	strbuf.h	FUNCTION_82	CALL_1
0x15b	        0x48895008	                mov qword [rax + 8], rdx	       127	strbuf.h	FUNCTION_82	CALL_1
0x15f	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       127	strbuf.h	FUNCTION_82	CALL_1
0x163	        0x48895010	             mov qword [rax + 0x10], rdx	       127	strbuf.h	FUNCTION_82	CALL_1
0x167	              0x90	                                     nop	       128	strbuf.h	FUNCTION_82
0x168	        0x488b45f8	                mov rax, qword [rbp - 8]	       128	strbuf.h	FUNCTION_82
0x16c	    0x644833042528	                xor rax, qword fs:[0x28]	       128	strbuf.h	FUNCTION_82
0x175	            0x7405	                            je 0x40001bc	       128	strbuf.h	FUNCTION_82
0x177	      0xe800000000	                          call 0x40001bc	       128	strbuf.h	FUNCTION_82
0x17c	              0xc9	                                   leave	       128	strbuf.h	FUNCTION_82
0x17d	              0xc3	                                     ret	       128	strbuf.h	FUNCTION_82
add_cacheinfo	FOR,0:DO,0:functions,0:ELSE,0:CALL,12:SWITCH,0:IF,3:WHILE,0	104
0x14e3	              0x55	                                push rbp	       405	update-index.c	FUNCTION_20
0x14e4	          0x4889e5	                            mov rbp, rsp	       405	update-index.c	FUNCTION_20
0x14e7	        0x4883ec40	                           sub rsp, 0x40	       405	update-index.c	FUNCTION_20
0x14eb	          0x897ddc	             mov dword [rbp - 0x24], edi	       405	update-index.c	FUNCTION_20
0x14ee	        0x488975d0	             mov qword [rbp - 0x30], rsi	       405	update-index.c	FUNCTION_20
0x14f2	        0x488955c8	             mov qword [rbp - 0x38], rdx	       405	update-index.c	FUNCTION_20
0x14f6	          0x894dd8	             mov dword [rbp - 0x28], ecx	       405	update-index.c	FUNCTION_20
0x14f9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       409	update-index.c	FUNCTION_20	IF_1	CALL_1
0x14fd	          0x4889c7	                            mov rdi, rax	       409	update-index.c	FUNCTION_20	IF_1	CALL_1
0x1500	      0xe800000000	                          call 0x4001545	       409	update-index.c	FUNCTION_20	IF_1	CALL_1
0x1505	            0x85c0	                           test eax, eax	       409	update-index.c	FUNCTION_20	IF_1	CALL_1
0x1507	            0x7520	                           jne 0x4001569	       409	update-index.c	FUNCTION_20	IF_1	CALL_1
0x1509	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       410	update-index.c	FUNCTION_20	CALL_2
0x150d	          0x4889c6	                            mov rsi, rax	       410	update-index.c	FUNCTION_20	CALL_2
0x1510	      0xbf00000000	                              mov edi, 0	       410	update-index.c	FUNCTION_20	CALL_2
0x1515	      0xb800000000	                              mov eax, 0	       410	update-index.c	FUNCTION_20	CALL_2
0x151a	      0xe800000000	                          call 0x400155f	       410	update-index.c	FUNCTION_20	CALL_2
0x151f	      0xe8dceaffff	                    call sym.const_error	       410	update-index.c	FUNCTION_20	CALL_2
0x1524	      0xe929010000	                           jmp 0x4001692	       410	update-index.c	FUNCTION_20	CALL_2
0x1529	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       412	update-index.c	FUNCTION_20	CALL_3
0x152d	          0x4889c7	                            mov rdi, rax	       412	update-index.c	FUNCTION_20	CALL_3
0x1530	      0xe800000000	                          call 0x4001575	       412	update-index.c	FUNCTION_20	CALL_3
0x1535	          0x8945ec	             mov dword [rbp - 0x14], eax	       412	update-index.c	FUNCTION_20	CALL_3
0x1538	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       413	update-index.c	FUNCTION_20	CALL_4
0x153b	          0x83c059	                           add eax, 0x59	       413	update-index.c	FUNCTION_20	CALL_4
0x153e	          0x8945f0	             mov dword [rbp - 0x10], eax	       413	update-index.c	FUNCTION_20	CALL_4
0x1541	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       414	update-index.c	FUNCTION_20	CALL_5
0x1544	            0x4898	                                    cdqe	       414	update-index.c	FUNCTION_20	CALL_5
0x1546	          0x4889c6	                            mov rsi, rax	       414	update-index.c	FUNCTION_20	CALL_5
0x1549	      0xbf01000000	                              mov edi, 1	       414	update-index.c	FUNCTION_20	CALL_5
0x154e	      0xe800000000	                          call 0x4001593	       414	update-index.c	FUNCTION_20	CALL_5
0x1553	        0x488945f8	                mov qword [rbp - 8], rax	       414	update-index.c	FUNCTION_20	CALL_5
0x1557	        0x488b45f8	                mov rax, qword [rbp - 8]	       416	update-index.c	FUNCTION_20	CALL_6
0x155b	        0x488d5044	                   lea rdx, [rax + 0x44]	       416	update-index.c	FUNCTION_20	CALL_6
0x155f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       416	update-index.c	FUNCTION_20	CALL_6
0x1563	          0x4889c6	                            mov rsi, rax	       416	update-index.c	FUNCTION_20	CALL_6
0x1566	          0x4889d7	                            mov rdi, rdx	       416	update-index.c	FUNCTION_20	CALL_6
0x1569	      0xe8bdeeffff	                         call sym.oidcpy	       416	update-index.c	FUNCTION_20	CALL_6
0x156e	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       417	update-index.c	FUNCTION_20	CALL_7
0x1571	          0x4863d0	                         movsxd rdx, eax	       417	update-index.c	FUNCTION_20	CALL_7
0x1574	        0x488b45f8	                mov rax, qword [rbp - 8]	       417	update-index.c	FUNCTION_20	CALL_7
0x1578	        0x488d4858	                   lea rcx, [rax + 0x58]	       417	update-index.c	FUNCTION_20	CALL_7
0x157c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       417	update-index.c	FUNCTION_20	CALL_7
0x1580	          0x4889c6	                            mov rsi, rax	       417	update-index.c	FUNCTION_20	CALL_7
0x1583	          0x4889cf	                            mov rdi, rcx	       417	update-index.c	FUNCTION_20	CALL_7
0x1586	      0xe800000000	                          call 0x40015cb	       417	update-index.c	FUNCTION_20	CALL_7
0x158b	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       418	update-index.c	FUNCTION_20	CALL_8
0x158e	            0x89c7	                            mov edi, eax	       418	update-index.c	FUNCTION_20	CALL_8
0x1590	      0xe814edffff	                call sym.create_ce_flags	       418	update-index.c	FUNCTION_20	CALL_8
0x1595	            0x89c2	                            mov edx, eax	       418	update-index.c	FUNCTION_20	CALL_8
0x1597	        0x488b45f8	                mov rax, qword [rbp - 8]	       418	update-index.c	FUNCTION_20	CALL_8
0x159b	          0x895038	             mov dword [rax + 0x38], edx	       418	update-index.c	FUNCTION_20	CALL_8
0x159e	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       419	update-index.c	FUNCTION_20
0x15a1	        0x488b45f8	                mov rax, qword [rbp - 8]	       419	update-index.c	FUNCTION_20
0x15a5	          0x89503c	             mov dword [rax + 0x3c], edx	       419	update-index.c	FUNCTION_20
0x15a8	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       420	update-index.c	FUNCTION_20	CALL_9
0x15ab	            0x89c7	                            mov edi, eax	       420	update-index.c	FUNCTION_20	CALL_9
0x15ad	      0xe806edffff	                 call sym.create_ce_mode	       420	update-index.c	FUNCTION_20	CALL_9
0x15b2	            0x89c2	                            mov edx, eax	       420	update-index.c	FUNCTION_20	CALL_9
0x15b4	        0x488b45f8	                mov rax, qword [rbp - 8]	       420	update-index.c	FUNCTION_20	CALL_9
0x15b8	          0x895034	             mov dword [rax + 0x34], edx	       420	update-index.c	FUNCTION_20	CALL_9
0x15bb	    0x8b0500000000	            mov eax, dword [0x04001601] 	       421	update-index.c	FUNCTION_20	IF_2
0x15c1	            0x85c0	                           test eax, eax	       421	update-index.c	FUNCTION_20	IF_2
0x15c3	            0x7413	                            je 0x4001618	       421	update-index.c	FUNCTION_20	IF_2
0x15c5	        0x488b45f8	                mov rax, qword [rbp - 8]	       422	update-index.c	FUNCTION_20	IF_2
0x15c9	          0x8b4038	            mov eax, dword [rax + 0x38] 	       422	update-index.c	FUNCTION_20	IF_2
0x15cc	          0x80cc80	                             or ah, 0x80	       422	update-index.c	FUNCTION_20	IF_2
0x15cf	            0x89c2	                            mov edx, eax	       422	update-index.c	FUNCTION_20	IF_2
0x15d1	        0x488b45f8	                mov rax, qword [rbp - 8]	       422	update-index.c	FUNCTION_20	IF_2
0x15d5	          0x895038	             mov dword [rax + 0x38], edx	       422	update-index.c	FUNCTION_20	IF_2
0x15d8	    0x8b0500000000	            mov eax, dword [0x0400161e] 	       423	update-index.c	FUNCTION_20
0x15de	            0x85c0	                           test eax, eax	       423	update-index.c	FUNCTION_20
0x15e0	           0xf95c0	                                setne al	       423	update-index.c	FUNCTION_20
0x15e3	           0xfb6c0	                           movzx eax, al	       423	update-index.c	FUNCTION_20
0x15e6	          0x8945f4	              mov dword [rbp - 0xc], eax	       423	update-index.c	FUNCTION_20
0x15e9	    0x8b0500000000	            mov eax, dword [0x0400162f] 	       424	update-index.c	FUNCTION_20
0x15ef	            0x85c0	                           test eax, eax	       424	update-index.c	FUNCTION_20
0x15f1	            0x7407	                            je 0x400163a	       424	update-index.c	FUNCTION_20
0x15f3	      0xb802000000	                              mov eax, 2	       424	update-index.c	FUNCTION_20
0x15f8	            0xeb05	                           jmp 0x400163f	       424	update-index.c	FUNCTION_20
0x15fa	      0xb800000000	                              mov eax, 0	       424	update-index.c	FUNCTION_20
0x15ff	           0x945f4	               or dword [rbp - 0xc], eax	       424	update-index.c	FUNCTION_20
0x1602	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       425	update-index.c	FUNCTION_20	IF_3	CALL_10
0x1605	        0x488b45f8	                mov rax, qword [rbp - 8]	       425	update-index.c	FUNCTION_20	IF_3	CALL_10
0x1609	          0x4889c6	                            mov rsi, rax	       425	update-index.c	FUNCTION_20	IF_3	CALL_10
0x160c	      0xbf00000000	                              mov edi, 0	       425	update-index.c	FUNCTION_20	IF_3	CALL_10
0x1611	      0xe800000000	                          call 0x4001656	       425	update-index.c	FUNCTION_20	IF_3	CALL_10
0x1616	            0x85c0	                           test eax, eax	       425	update-index.c	FUNCTION_20	IF_3	CALL_10
0x1618	            0x741d	                            je 0x4001677	       425	update-index.c	FUNCTION_20	IF_3	CALL_10
0x161a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       426	update-index.c	FUNCTION_20	IF_3	CALL_11
0x161e	          0x4889c6	                            mov rsi, rax	       426	update-index.c	FUNCTION_20	IF_3	CALL_11
0x1621	      0xbf00000000	                              mov edi, 0	       426	update-index.c	FUNCTION_20	IF_3	CALL_11
0x1626	      0xb800000000	                              mov eax, 0	       426	update-index.c	FUNCTION_20	IF_3	CALL_11
0x162b	      0xe800000000	                          call 0x4001670	       426	update-index.c	FUNCTION_20	IF_3	CALL_11
0x1630	      0xe8cbe9ffff	                    call sym.const_error	       426	update-index.c	FUNCTION_20	IF_3	CALL_11
0x1635	            0xeb1b	                           jmp 0x4001692	       426	update-index.c	FUNCTION_20	IF_3	CALL_11
0x1637	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       428	update-index.c	FUNCTION_20	CALL_12
0x163b	          0x4889c6	                            mov rsi, rax	       428	update-index.c	FUNCTION_20	CALL_12
0x163e	      0xbf00000000	                              mov edi, 0	       428	update-index.c	FUNCTION_20	CALL_12
0x1643	      0xb800000000	                              mov eax, 0	       428	update-index.c	FUNCTION_20	CALL_12
0x1648	      0xe81cefffff	                         call sym.report	       428	update-index.c	FUNCTION_20	CALL_12
0x164d	      0xb800000000	                              mov eax, 0	       429	update-index.c	FUNCTION_20
0x1652	              0xc9	                                   leave	       430	update-index.c	FUNCTION_20
0x1653	              0xc3	                                     ret	       430	update-index.c	FUNCTION_20
refresh	FOR,0:DO,0:functions,0:ELSE,0:CALL,3:SWITCH,0:IF,0:WHILE,0	29
0x22db	              0x55	                                push rbp	       776	update-index.c	FUNCTION_29
0x22dc	          0x4889e5	                            mov rbp, rsp	       776	update-index.c	FUNCTION_29
0x22df	        0x4883ec10	                           sub rsp, 0x10	       776	update-index.c	FUNCTION_29
0x22e3	        0x48897df8	                mov qword [rbp - 8], rdi	       776	update-index.c	FUNCTION_29
0x22e7	          0x8975f4	              mov dword [rbp - 0xc], esi	       776	update-index.c	FUNCTION_29
0x22ea	      0xe800000000	                          call 0x400232f	       777	update-index.c	FUNCTION_29	CALL_1
0x22ef	      0xbe00000000	                              mov esi, 0	       778	update-index.c	FUNCTION_29	CALL_2
0x22f4	      0xbf00000000	                              mov edi, 0	       778	update-index.c	FUNCTION_29	CALL_2
0x22f9	      0xe800000000	                          call 0x400233e	       778	update-index.c	FUNCTION_29	CALL_2
0x22fe	        0x488b45f8	                mov rax, qword [rbp - 8]	       779	update-index.c	FUNCTION_29	CALL_3
0x2302	            0x8b00	                    mov eax, dword [rax]	       779	update-index.c	FUNCTION_29	CALL_3
0x2304	           0xb45f4	               or eax, dword [rbp - 0xc]	       779	update-index.c	FUNCTION_29	CALL_3
0x2307	    0x41b800000000	                              mov r8d, 0	       779	update-index.c	FUNCTION_29	CALL_3
0x230d	      0xb900000000	                              mov ecx, 0	       779	update-index.c	FUNCTION_29	CALL_3
0x2312	      0xba00000000	                              mov edx, 0	       779	update-index.c	FUNCTION_29	CALL_3
0x2317	            0x89c6	                            mov esi, eax	       779	update-index.c	FUNCTION_29	CALL_3
0x2319	      0xbf00000000	                              mov edi, 0	       779	update-index.c	FUNCTION_29	CALL_3
0x231e	      0xe800000000	                          call 0x4002363	       779	update-index.c	FUNCTION_29	CALL_3
0x2323	            0x89c1	                            mov ecx, eax	       779	update-index.c	FUNCTION_29	CALL_3
0x2325	        0x488b45f8	                mov rax, qword [rbp - 8]	       779	update-index.c	FUNCTION_29	CALL_3
0x2329	        0x488b4008	                mov rax, qword [rax + 8]	       779	update-index.c	FUNCTION_29	CALL_3
0x232d	        0x488b55f8	                mov rdx, qword [rbp - 8]	       779	update-index.c	FUNCTION_29	CALL_3
0x2331	        0x488b5208	                mov rdx, qword [rdx + 8]	       779	update-index.c	FUNCTION_29	CALL_3
0x2335	            0x8b12	                    mov edx, dword [rdx]	       779	update-index.c	FUNCTION_29	CALL_3
0x2337	             0x9ca	                             or edx, ecx	       779	update-index.c	FUNCTION_29	CALL_3
0x2339	            0x8910	                    mov dword [rax], edx	       779	update-index.c	FUNCTION_29	CALL_3
0x233b	      0xb800000000	                              mov eax, 0	       780	update-index.c	FUNCTION_29
0x2340	              0xc9	                                   leave	       781	update-index.c	FUNCTION_29
0x2341	              0xc3	                                     ret	       781	update-index.c	FUNCTION_29
cmd_update_index	FOR,0:DO,0:functions,0:ELSE,4:CALL,128:SWITCH,2:IF,29:WHILE,2	666
0x2928	              0x55	                                push rbp	       918	update-index.c	FUNCTION_40
0x2929	          0x4889e5	                            mov rbp, rsp	       918	update-index.c	FUNCTION_40
0x292c	              0x53	                                push rbx	       918	update-index.c	FUNCTION_40
0x292d	    0x4881ecb80900	                          sub rsp, 0x9b8	       918	update-index.c	FUNCTION_40
0x2934	    0x89bd5cf6ffff	            mov dword [rbp - 0x9a4], edi	       918	update-index.c	FUNCTION_40
0x293a	    0x4889b550f6ff	            mov qword [rbp - 0x9b0], rsi	       918	update-index.c	FUNCTION_40
0x2941	    0x48899548f6ff	            mov qword [rbp - 0x9b8], rdx	       918	update-index.c	FUNCTION_40
0x2948	    0x64488b042528	                mov rax, qword fs:[0x28]	       918	update-index.c	FUNCTION_40
0x2951	        0x488945e8	             mov qword [rbp - 0x18], rax	       918	update-index.c	FUNCTION_40
0x2955	            0x31c0	                            xor eax, eax	       918	update-index.c	FUNCTION_40
0x2957	    0xc7856cf6ffff	              mov dword [rbp - 0x994], 0	       919	update-index.c	FUNCTION_40
0x2961	    0xc78570f6ffff	              mov dword [rbp - 0x990], 0	       919	update-index.c	FUNCTION_40
0x296b	    0xc78574f6ffff	    mov dword [rbp - 0x98c], 0xffffffff 	       920	update-index.c	FUNCTION_40
0x2975	    0xc78578f6ffff	              mov dword [rbp - 0x988], 0	       921	update-index.c	FUNCTION_40
0x297f	    0x4883bd48f6ff	              cmp qword [rbp - 0x9b8], 0	       922	update-index.c	FUNCTION_40	CALL_1
0x2987	            0x7411	                            je 0x40029da	       922	update-index.c	FUNCTION_40	CALL_1
0x2989	    0x488b8548f6ff	            mov rax, qword [rbp - 0x9b8]	       922	update-index.c	FUNCTION_40	CALL_1
0x2990	          0x4889c7	                            mov rdi, rax	       922	update-index.c	FUNCTION_40	CALL_1
0x2993	      0xe800000000	                          call 0x40029d8	       922	update-index.c	FUNCTION_40	CALL_1
0x2998	            0xeb05	                           jmp 0x40029df	       922	update-index.c	FUNCTION_40	CALL_1
0x299a	      0xb800000000	                              mov eax, 0	       922	update-index.c	FUNCTION_40	CALL_1
0x299f	    0x898594f6ffff	            mov dword [rbp - 0x96c], eax	       922	update-index.c	FUNCTION_40	CALL_1
0x29a5	    0xc7857cf6ffff	              mov dword [rbp - 0x984], 0	       923	update-index.c	FUNCTION_40
0x29af	    0xc6856bf6ffff	               mov byte [rbp - 0x995], 0	       924	update-index.c	FUNCTION_40
0x29b6	    0xc785d0f6ffff	              mov dword [rbp - 0x930], 0	       925	update-index.c	FUNCTION_40
0x29c0	    0x488d856cf6ff	                  lea rax, [rbp - 0x994]	       925	update-index.c	FUNCTION_40
0x29c7	    0x488985d8f6ff	            mov qword [rbp - 0x928], rax	       925	update-index.c	FUNCTION_40
0x29ce	    0xc7858cf6ffff	              mov dword [rbp - 0x974], 0	       926	update-index.c	FUNCTION_40
0x29d8	    0xc78580f6ffff	    mov dword [rbp - 0x980], 0xffffffff 	       927	update-index.c	FUNCTION_40
0x29e2	    0xc78584f6ffff	              mov dword [rbp - 0x97c], 0	       928	update-index.c	FUNCTION_40
0x29ec	    0xc78588f6ffff	    mov dword [rbp - 0x978], 0xffffffff 	       929	update-index.c	FUNCTION_40
0x29f6	    0x48c785a0f6ff	              mov qword [rbp - 0x960], 0	       930	update-index.c	FUNCTION_40
0x2a01	    0xc78590f6ffff	              mov dword [rbp - 0x970], 3	       933	update-index.c	FUNCTION_40
0x2a0b	    0x488d9560f7ff	                  lea rdx, [rbp - 0x8a0]	       934	update-index.c	FUNCTION_40
0x2a12	      0xb800000000	                              mov eax, 0	       934	update-index.c	FUNCTION_40
0x2a17	      0xb910010000	                          mov ecx, 0x110	       934	update-index.c	FUNCTION_40
0x2a1c	          0x4889d7	                            mov rdi, rdx	       934	update-index.c	FUNCTION_40
0x2a1f	          0xf348ab	              rep stosq qword [rdi], rax	       934	update-index.c	FUNCTION_40
0x2a22	    0xc78560f7ffff	              mov dword [rbp - 0x8a0], 4	       934	update-index.c	FUNCTION_40
0x2a2c	    0xc78564f7ffff	          mov dword [rbp - 0x89c], 0x71 	       934	update-index.c	FUNCTION_40
0x2a36	    0x488d85d0f6ff	                  lea rax, [rbp - 0x930]	       934	update-index.c	FUNCTION_40
0x2a3d	    0x48898570f7ff	            mov qword [rbp - 0x890], rax	       934	update-index.c	FUNCTION_40
0x2a44	    0x48c78580f7ff	              mov qword [rbp - 0x880], 0	       934	update-index.c	FUNCTION_40
0x2a4f	    0xc78588f7ffff	              mov dword [rbp - 0x878], 2	       934	update-index.c	FUNCTION_40
0x2a59	    0x48c78598f7ff	              mov qword [rbp - 0x868], 4	       934	update-index.c	FUNCTION_40
0x2a64	    0xc785a0f7ffff	              mov dword [rbp - 0x860], 4	       934	update-index.c	FUNCTION_40
0x2a6e	    0x48c785a8f7ff	              mov qword [rbp - 0x858], 0	       934	update-index.c	FUNCTION_40
0x2a79	    0x488d85d0f6ff	                  lea rax, [rbp - 0x930]	       934	update-index.c	FUNCTION_40
0x2a80	    0x488985b0f7ff	            mov qword [rbp - 0x850], rax	       934	update-index.c	FUNCTION_40
0x2a87	    0x48c785c0f7ff	              mov qword [rbp - 0x840], 0	       934	update-index.c	FUNCTION_40
0x2a92	    0xc785c8f7ffff	              mov dword [rbp - 0x838], 2	       934	update-index.c	FUNCTION_40
0x2a9c	    0x48c785d8f7ff	          mov qword [rbp - 0x828], 0x10 	       934	update-index.c	FUNCTION_40
0x2aa7	    0xc785e0f7ffff	              mov dword [rbp - 0x820], 7	       934	update-index.c	FUNCTION_40
0x2ab1	    0x48c785e8f7ff	              mov qword [rbp - 0x818], 0	       934	update-index.c	FUNCTION_40
0x2abc	    0x48c785f0f7ff	              mov qword [rbp - 0x810], 0	       934	update-index.c	FUNCTION_40
0x2ac7	    0x48c78500f8ff	              mov qword [rbp - 0x800], 0	       934	update-index.c	FUNCTION_40
0x2ad2	    0xc78508f8ffff	              mov dword [rbp - 0x7f8], 2	       934	update-index.c	FUNCTION_40
0x2adc	    0x48c78518f8ff	              mov qword [rbp - 0x7e8], 1	       934	update-index.c	FUNCTION_40
0x2ae7	    0xc78520f8ffff	              mov dword [rbp - 0x7e0], 7	       934	update-index.c	FUNCTION_40
0x2af1	    0x48c78528f8ff	              mov qword [rbp - 0x7d8], 0	       934	update-index.c	FUNCTION_40
0x2afc	    0x48c78530f8ff	              mov qword [rbp - 0x7d0], 0	       934	update-index.c	FUNCTION_40
0x2b07	    0x48c78540f8ff	              mov qword [rbp - 0x7c0], 0	       934	update-index.c	FUNCTION_40
0x2b12	    0xc78548f8ffff	              mov dword [rbp - 0x7b8], 2	       934	update-index.c	FUNCTION_40
0x2b1c	    0x48c78558f8ff	              mov qword [rbp - 0x7a8], 1	       934	update-index.c	FUNCTION_40
0x2b27	    0xc78560f8ffff	              mov dword [rbp - 0x7a0], 7	       934	update-index.c	FUNCTION_40
0x2b31	    0x48c78568f8ff	              mov qword [rbp - 0x798], 0	       934	update-index.c	FUNCTION_40
0x2b3c	    0x48c78570f8ff	              mov qword [rbp - 0x790], 0	       934	update-index.c	FUNCTION_40
0x2b47	    0x48c78580f8ff	              mov qword [rbp - 0x780], 0	       934	update-index.c	FUNCTION_40
0x2b52	    0xc78588f8ffff	              mov dword [rbp - 0x778], 2	       934	update-index.c	FUNCTION_40
0x2b5c	    0x48c78598f8ff	              mov qword [rbp - 0x768], 1	       934	update-index.c	FUNCTION_40
0x2b67	    0xc785a0f8ffff	              mov dword [rbp - 0x760], 4	       934	update-index.c	FUNCTION_40
0x2b71	    0x48c785a8f8ff	              mov qword [rbp - 0x758], 0	       934	update-index.c	FUNCTION_40
0x2b7c	    0x488d85d0f6ff	                  lea rax, [rbp - 0x930]	       934	update-index.c	FUNCTION_40
0x2b83	    0x488985b0f8ff	            mov qword [rbp - 0x750], rax	       934	update-index.c	FUNCTION_40
0x2b8a	    0x48c785c0f8ff	              mov qword [rbp - 0x740], 0	       934	update-index.c	FUNCTION_40
0x2b95	    0xc785c8f8ffff	              mov dword [rbp - 0x738], 2	       934	update-index.c	FUNCTION_40
0x2b9f	    0x48c785d8f8ff	              mov qword [rbp - 0x728], 2	       934	update-index.c	FUNCTION_40
0x2baa	    0xc785e0f8ffff	           mov dword [rbp - 0x720], 0xc 	       934	update-index.c	FUNCTION_40
0x2bb4	    0x48c785e8f8ff	              mov qword [rbp - 0x718], 0	       934	update-index.c	FUNCTION_40
0x2bbf	    0x488d85d0f6ff	                  lea rax, [rbp - 0x930]	       934	update-index.c	FUNCTION_40
0x2bc6	    0x488985f0f8ff	            mov qword [rbp - 0x710], rax	       934	update-index.c	FUNCTION_40
0x2bcd	    0x48c78500f9ff	              mov qword [rbp - 0x700], 0	       934	update-index.c	FUNCTION_40
0x2bd8	    0xc78508f9ffff	              mov dword [rbp - 0x6f8], 6	       934	update-index.c	FUNCTION_40
0x2be2	    0x48c78510f9ff	              mov qword [rbp - 0x6f0], 0	       934	update-index.c	FUNCTION_40
0x2bed	    0xc78520f9ffff	           mov dword [rbp - 0x6e0], 0xc 	       934	update-index.c	FUNCTION_40
0x2bf7	    0x48c78528f9ff	              mov qword [rbp - 0x6d8], 0	       934	update-index.c	FUNCTION_40
0x2c02	    0x488d85d0f6ff	                  lea rax, [rbp - 0x930]	       934	update-index.c	FUNCTION_40
0x2c09	    0x48898530f9ff	            mov qword [rbp - 0x6d0], rax	       934	update-index.c	FUNCTION_40
0x2c10	    0x48c78540f9ff	              mov qword [rbp - 0x6c0], 0	       934	update-index.c	FUNCTION_40
0x2c1b	    0xc78548f9ffff	              mov dword [rbp - 0x6b8], 6	       934	update-index.c	FUNCTION_40
0x2c25	    0x48c78550f9ff	              mov qword [rbp - 0x6b0], 0	       934	update-index.c	FUNCTION_40
0x2c30	    0xc78560f9ffff	           mov dword [rbp - 0x6a0], 0xd 	       934	update-index.c	FUNCTION_40
0x2c3a	    0x48c78568f9ff	              mov qword [rbp - 0x698], 0	       934	update-index.c	FUNCTION_40
0x2c45	    0x48c78578f9ff	              mov qword [rbp - 0x688], 0	       934	update-index.c	FUNCTION_40
0x2c50	    0x48c78580f9ff	              mov qword [rbp - 0x680], 0	       934	update-index.c	FUNCTION_40
0x2c5b	    0xc78588f9ffff	          mov dword [rbp - 0x678], 0x46 	       934	update-index.c	FUNCTION_40
0x2c65	    0x48c78590f9ff	              mov qword [rbp - 0x670], 0	       934	update-index.c	FUNCTION_40
0x2c70	    0xc785a0f9ffff	           mov dword [rbp - 0x660], 0xc 	       934	update-index.c	FUNCTION_40
0x2c7a	    0x48c785a8f9ff	              mov qword [rbp - 0x658], 0	       934	update-index.c	FUNCTION_40
0x2c85	    0x488d856bf6ff	                  lea rax, [rbp - 0x995]	       934	update-index.c	FUNCTION_40
0x2c8c	    0x488985b0f9ff	            mov qword [rbp - 0x650], rax	       934	update-index.c	FUNCTION_40
0x2c93	    0x48c785b8f9ff	              mov qword [rbp - 0x648], 0	       934	update-index.c	FUNCTION_40
0x2c9e	    0x48c785c0f9ff	              mov qword [rbp - 0x640], 0	       934	update-index.c	FUNCTION_40
0x2ca9	    0xc785c8f9ffff	          mov dword [rbp - 0x638], 0x44 	       934	update-index.c	FUNCTION_40
0x2cb3	    0x48c785d0f9ff	              mov qword [rbp - 0x630], 0	       934	update-index.c	FUNCTION_40
0x2cbe	    0xc785e0f9ffff	              mov dword [rbp - 0x620], 7	       934	update-index.c	FUNCTION_40
0x2cc8	    0x48c785e8f9ff	              mov qword [rbp - 0x618], 0	       934	update-index.c	FUNCTION_40
0x2cd3	    0x48c785f0f9ff	              mov qword [rbp - 0x610], 0	       934	update-index.c	FUNCTION_40
0x2cde	    0x48c78500faff	              mov qword [rbp - 0x600], 0	       934	update-index.c	FUNCTION_40
0x2ce9	    0xc78508faffff	              mov dword [rbp - 0x5f8], 6	       934	update-index.c	FUNCTION_40
0x2cf3	    0x48c78518faff	              mov qword [rbp - 0x5e8], 1	       934	update-index.c	FUNCTION_40
0x2cfe	    0xc78520faffff	              mov dword [rbp - 0x5e0], 7	       934	update-index.c	FUNCTION_40
0x2d08	    0x48c78528faff	              mov qword [rbp - 0x5d8], 0	       934	update-index.c	FUNCTION_40
0x2d13	    0x48c78530faff	              mov qword [rbp - 0x5d0], 0	       934	update-index.c	FUNCTION_40
0x2d1e	    0x48c78540faff	              mov qword [rbp - 0x5c0], 0	       934	update-index.c	FUNCTION_40
0x2d29	    0xc78548faffff	              mov dword [rbp - 0x5b8], 6	       934	update-index.c	FUNCTION_40
0x2d33	    0x48c78558faff	              mov qword [rbp - 0x5a8], 2	       934	update-index.c	FUNCTION_40
0x2d3e	    0xc78560faffff	              mov dword [rbp - 0x5a0], 7	       934	update-index.c	FUNCTION_40
0x2d48	    0x48c78568faff	              mov qword [rbp - 0x598], 0	       934	update-index.c	FUNCTION_40
0x2d53	    0x48c78570faff	              mov qword [rbp - 0x590], 0	       934	update-index.c	FUNCTION_40
0x2d5e	    0x48c78580faff	              mov qword [rbp - 0x580], 0	       934	update-index.c	FUNCTION_40
0x2d69	    0xc78588faffff	              mov dword [rbp - 0x578], 6	       934	update-index.c	FUNCTION_40
0x2d73	    0x48c78598faff	              mov qword [rbp - 0x568], 1	       934	update-index.c	FUNCTION_40
0x2d7e	    0xc785a0faffff	              mov dword [rbp - 0x560], 7	       934	update-index.c	FUNCTION_40
0x2d88	    0x48c785a8faff	              mov qword [rbp - 0x558], 0	       934	update-index.c	FUNCTION_40
0x2d93	    0x48c785b0faff	              mov qword [rbp - 0x550], 0	       934	update-index.c	FUNCTION_40
0x2d9e	    0x48c785c0faff	              mov qword [rbp - 0x540], 0	       934	update-index.c	FUNCTION_40
0x2da9	    0xc785c8faffff	              mov dword [rbp - 0x538], 6	       934	update-index.c	FUNCTION_40
0x2db3	    0x48c785d8faff	              mov qword [rbp - 0x528], 2	       934	update-index.c	FUNCTION_40
0x2dbe	    0xc785e0faffff	              mov dword [rbp - 0x520], 7	       934	update-index.c	FUNCTION_40
0x2dc8	    0x48c785e8faff	              mov qword [rbp - 0x518], 0	       934	update-index.c	FUNCTION_40
0x2dd3	    0x48c785f0faff	              mov qword [rbp - 0x510], 0	       934	update-index.c	FUNCTION_40
0x2dde	    0x48c78500fbff	              mov qword [rbp - 0x500], 0	       934	update-index.c	FUNCTION_40
0x2de9	    0xc78508fbffff	              mov dword [rbp - 0x4f8], 2	       934	update-index.c	FUNCTION_40
0x2df3	    0x48c78518fbff	              mov qword [rbp - 0x4e8], 1	       934	update-index.c	FUNCTION_40
0x2dfe	    0xc78520fbffff	              mov dword [rbp - 0x4e0], 7	       934	update-index.c	FUNCTION_40
0x2e08	    0x48c78528fbff	              mov qword [rbp - 0x4d8], 0	       934	update-index.c	FUNCTION_40
0x2e13	    0x48c78530fbff	              mov qword [rbp - 0x4d0], 0	       934	update-index.c	FUNCTION_40
0x2e1e	    0x48c78540fbff	              mov qword [rbp - 0x4c0], 0	       934	update-index.c	FUNCTION_40
0x2e29	    0xc78548fbffff	              mov dword [rbp - 0x4b8], 2	       934	update-index.c	FUNCTION_40
0x2e33	    0x48c78558fbff	              mov qword [rbp - 0x4a8], 1	       934	update-index.c	FUNCTION_40
0x2e3e	    0xc78560fbffff	              mov dword [rbp - 0x4a0], 7	       934	update-index.c	FUNCTION_40
0x2e48	    0xc78564fbffff	          mov dword [rbp - 0x49c], 0x7a 	       934	update-index.c	FUNCTION_40
0x2e52	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	       934	update-index.c	FUNCTION_40
0x2e59	    0x48898570fbff	            mov qword [rbp - 0x490], rax	       934	update-index.c	FUNCTION_40
0x2e60	    0x48c78580fbff	              mov qword [rbp - 0x480], 0	       934	update-index.c	FUNCTION_40
0x2e6b	    0xc78588fbffff	              mov dword [rbp - 0x478], 2	       934	update-index.c	FUNCTION_40
0x2e75	    0x48c78598fbff	              mov qword [rbp - 0x468], 1	       934	update-index.c	FUNCTION_40
0x2e80	    0xc785a0fbffff	           mov dword [rbp - 0x460], 0xd 	       934	update-index.c	FUNCTION_40
0x2e8a	    0x48c785a8fbff	              mov qword [rbp - 0x458], 0	       934	update-index.c	FUNCTION_40
0x2e95	    0x488d8578f6ff	                  lea rax, [rbp - 0x988]	       934	update-index.c	FUNCTION_40
0x2e9c	    0x488985b0fbff	            mov qword [rbp - 0x450], rax	       934	update-index.c	FUNCTION_40
0x2ea3	    0x48c785c0fbff	              mov qword [rbp - 0x440], 0	       934	update-index.c	FUNCTION_40
0x2eae	    0xc785c8fbffff	              mov dword [rbp - 0x438], 6	       934	update-index.c	FUNCTION_40
0x2eb8	    0x48c785d0fbff	              mov qword [rbp - 0x430], 0	       934	update-index.c	FUNCTION_40
0x2ec3	    0xc785e0fbffff	           mov dword [rbp - 0x420], 0xd 	       934	update-index.c	FUNCTION_40
0x2ecd	    0x48c785e8fbff	              mov qword [rbp - 0x418], 0	       934	update-index.c	FUNCTION_40
0x2ed8	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	       934	update-index.c	FUNCTION_40
0x2edf	    0x488985f0fbff	            mov qword [rbp - 0x410], rax	       934	update-index.c	FUNCTION_40
0x2ee6	    0x48c78500fcff	              mov qword [rbp - 0x400], 0	       934	update-index.c	FUNCTION_40
0x2ef1	    0xc78508fcffff	              mov dword [rbp - 0x3f8], 6	       934	update-index.c	FUNCTION_40
0x2efb	    0x48c78510fcff	              mov qword [rbp - 0x3f0], 0	       934	update-index.c	FUNCTION_40
0x2f06	    0xc78520fcffff	           mov dword [rbp - 0x3e0], 0xd 	       934	update-index.c	FUNCTION_40
0x2f10	    0x48c78528fcff	              mov qword [rbp - 0x3d8], 0	       934	update-index.c	FUNCTION_40
0x2f1b	    0x488d856cf6ff	                  lea rax, [rbp - 0x994]	       934	update-index.c	FUNCTION_40
0x2f22	    0x48898530fcff	            mov qword [rbp - 0x3d0], rax	       934	update-index.c	FUNCTION_40
0x2f29	    0x48c78540fcff	              mov qword [rbp - 0x3c0], 0	       934	update-index.c	FUNCTION_40
0x2f34	    0xc78548fcffff	              mov dword [rbp - 0x3b8], 6	       934	update-index.c	FUNCTION_40
0x2f3e	    0x48c78550fcff	              mov qword [rbp - 0x3b0], 0	       934	update-index.c	FUNCTION_40
0x2f49	    0xc78560fcffff	           mov dword [rbp - 0x3a0], 0xd 	       934	update-index.c	FUNCTION_40
0x2f53	    0xc78564fcffff	          mov dword [rbp - 0x39c], 0x67 	       934	update-index.c	FUNCTION_40
0x2f5d	    0x48c78568fcff	              mov qword [rbp - 0x398], 0	       934	update-index.c	FUNCTION_40
0x2f68	    0x488d856cf6ff	                  lea rax, [rbp - 0x994]	       934	update-index.c	FUNCTION_40
0x2f6f	    0x48898570fcff	            mov qword [rbp - 0x390], rax	       934	update-index.c	FUNCTION_40
0x2f76	    0x48c78580fcff	              mov qword [rbp - 0x380], 0	       934	update-index.c	FUNCTION_40
0x2f81	    0xc78588fcffff	              mov dword [rbp - 0x378], 6	       934	update-index.c	FUNCTION_40
0x2f8b	    0x48c78590fcff	              mov qword [rbp - 0x370], 0	       934	update-index.c	FUNCTION_40
0x2f96	    0xc785a0fcffff	              mov dword [rbp - 0x360], 4	       934	update-index.c	FUNCTION_40
0x2fa0	    0x48c785a8fcff	              mov qword [rbp - 0x358], 0	       934	update-index.c	FUNCTION_40
0x2fab	    0x488d85d0f6ff	                  lea rax, [rbp - 0x930]	       934	update-index.c	FUNCTION_40
0x2fb2	    0x488985b0fcff	            mov qword [rbp - 0x350], rax	       934	update-index.c	FUNCTION_40
0x2fb9	    0x48c785c0fcff	              mov qword [rbp - 0x340], 0	       934	update-index.c	FUNCTION_40
0x2fc4	    0xc785c8fcffff	              mov dword [rbp - 0x338], 2	       934	update-index.c	FUNCTION_40
0x2fce	    0x48c785d8fcff	              mov qword [rbp - 0x328], 8	       934	update-index.c	FUNCTION_40
0x2fd9	    0xc785e0fcffff	              mov dword [rbp - 0x320], 7	       934	update-index.c	FUNCTION_40
0x2fe3	    0x48c785e8fcff	              mov qword [rbp - 0x318], 0	       934	update-index.c	FUNCTION_40
0x2fee	    0x48c785f0fcff	              mov qword [rbp - 0x310], 0	       934	update-index.c	FUNCTION_40
0x2ff9	    0x48c78500fdff	              mov qword [rbp - 0x300], 0	       934	update-index.c	FUNCTION_40
0x3004	    0xc78508fdffff	              mov dword [rbp - 0x2f8], 2	       934	update-index.c	FUNCTION_40
0x300e	    0x48c78518fdff	              mov qword [rbp - 0x2e8], 1	       934	update-index.c	FUNCTION_40
0x3019	    0xc78520fdffff	           mov dword [rbp - 0x2e0], 0xc 	       934	update-index.c	FUNCTION_40
0x3023	    0x48c78528fdff	              mov qword [rbp - 0x2d8], 0	       934	update-index.c	FUNCTION_40
0x302e	    0x48c78540fdff	              mov qword [rbp - 0x2c0], 0	       934	update-index.c	FUNCTION_40
0x3039	    0xc78548fdffff	              mov dword [rbp - 0x2b8], 6	       934	update-index.c	FUNCTION_40
0x3043	    0x48c78550fdff	              mov qword [rbp - 0x2b0], 0	       934	update-index.c	FUNCTION_40
0x304e	    0xc78560fdffff	            mov dword [rbp - 0x2a0], 0xa	       934	update-index.c	FUNCTION_40
0x3058	    0x48c78568fdff	              mov qword [rbp - 0x298], 0	       934	update-index.c	FUNCTION_40
0x3063	    0x488d857cf6ff	                  lea rax, [rbp - 0x984]	       934	update-index.c	FUNCTION_40
0x306a	    0x48898570fdff	            mov qword [rbp - 0x290], rax	       934	update-index.c	FUNCTION_40
0x3071	    0x48c78578fdff	              mov qword [rbp - 0x288], 0	       934	update-index.c	FUNCTION_40
0x307c	    0x48c78580fdff	              mov qword [rbp - 0x280], 0	       934	update-index.c	FUNCTION_40
0x3087	    0xc785a0fdffff	              mov dword [rbp - 0x260], 7	       934	update-index.c	FUNCTION_40
0x3091	    0x48c785a8fdff	              mov qword [rbp - 0x258], 0	       934	update-index.c	FUNCTION_40
0x309c	    0x488d8580f6ff	                  lea rax, [rbp - 0x980]	       934	update-index.c	FUNCTION_40
0x30a3	    0x488985b0fdff	            mov qword [rbp - 0x250], rax	       934	update-index.c	FUNCTION_40
0x30aa	    0x48c785c0fdff	              mov qword [rbp - 0x240], 0	       934	update-index.c	FUNCTION_40
0x30b5	    0xc785c8fdffff	              mov dword [rbp - 0x238], 2	       934	update-index.c	FUNCTION_40
0x30bf	    0x48c785d8fdff	              mov qword [rbp - 0x228], 1	       934	update-index.c	FUNCTION_40
0x30ca	    0xc785e0fdffff	              mov dword [rbp - 0x220], 7	       934	update-index.c	FUNCTION_40
0x30d4	    0x48c785e8fdff	              mov qword [rbp - 0x218], 0	       934	update-index.c	FUNCTION_40
0x30df	    0x488d8574f6ff	                  lea rax, [rbp - 0x98c]	       934	update-index.c	FUNCTION_40
0x30e6	    0x488985f0fdff	            mov qword [rbp - 0x210], rax	       934	update-index.c	FUNCTION_40
0x30ed	    0x48c78500feff	              mov qword [rbp - 0x200], 0	       934	update-index.c	FUNCTION_40
0x30f8	    0xc78508feffff	              mov dword [rbp - 0x1f8], 2	       934	update-index.c	FUNCTION_40
0x3102	    0x48c78518feff	              mov qword [rbp - 0x1e8], 1	       934	update-index.c	FUNCTION_40
0x310d	    0xc78520feffff	              mov dword [rbp - 0x1e0], 7	       934	update-index.c	FUNCTION_40
0x3117	    0x48c78528feff	              mov qword [rbp - 0x1d8], 0	       934	update-index.c	FUNCTION_40
0x3122	    0x488d8574f6ff	                  lea rax, [rbp - 0x98c]	       934	update-index.c	FUNCTION_40
0x3129	    0x48898530feff	            mov qword [rbp - 0x1d0], rax	       934	update-index.c	FUNCTION_40
0x3130	    0x48c78540feff	              mov qword [rbp - 0x1c0], 0	       934	update-index.c	FUNCTION_40
0x313b	    0xc78548feffff	              mov dword [rbp - 0x1b8], 2	       934	update-index.c	FUNCTION_40
0x3145	    0x48c78558feff	              mov qword [rbp - 0x1a8], 2	       934	update-index.c	FUNCTION_40
0x3150	    0xc78560feffff	              mov dword [rbp - 0x1a0], 7	       934	update-index.c	FUNCTION_40
0x315a	    0x48c78568feff	              mov qword [rbp - 0x198], 0	       934	update-index.c	FUNCTION_40
0x3165	    0x488d8574f6ff	                  lea rax, [rbp - 0x98c]	       934	update-index.c	FUNCTION_40
0x316c	    0x48898570feff	            mov qword [rbp - 0x190], rax	       934	update-index.c	FUNCTION_40
0x3173	    0x48c78580feff	              mov qword [rbp - 0x180], 0	       934	update-index.c	FUNCTION_40
0x317e	    0xc78588feffff	              mov dword [rbp - 0x178], 2	       934	update-index.c	FUNCTION_40
0x3188	    0x48c78598feff	              mov qword [rbp - 0x168], 3	       934	update-index.c	FUNCTION_40
0x3193	    0xc785a0feffff	              mov dword [rbp - 0x160], 7	       934	update-index.c	FUNCTION_40
0x319d	    0x48c785a8feff	              mov qword [rbp - 0x158], 0	       934	update-index.c	FUNCTION_40
0x31a8	    0x488d8584f6ff	                  lea rax, [rbp - 0x97c]	       934	update-index.c	FUNCTION_40
0x31af	    0x488985b0feff	            mov qword [rbp - 0x150], rax	       934	update-index.c	FUNCTION_40
0x31b6	    0x48c785c0feff	              mov qword [rbp - 0x140], 0	       934	update-index.c	FUNCTION_40
0x31c1	    0xc785c8feffff	              mov dword [rbp - 0x138], 2	       934	update-index.c	FUNCTION_40
0x31cb	    0x48c785d8feff	              mov qword [rbp - 0x128], 1	       934	update-index.c	FUNCTION_40
0x31d6	    0xc785e0feffff	              mov dword [rbp - 0x120], 7	       934	update-index.c	FUNCTION_40
0x31e0	    0x48c785e8feff	              mov qword [rbp - 0x118], 0	       934	update-index.c	FUNCTION_40
0x31eb	    0x488d8588f6ff	                  lea rax, [rbp - 0x978]	       934	update-index.c	FUNCTION_40
0x31f2	    0x488985f0feff	            mov qword [rbp - 0x110], rax	       934	update-index.c	FUNCTION_40
0x31f9	    0x48c78500ffff	              mov qword [rbp - 0x100], 0	       934	update-index.c	FUNCTION_40
0x3204	    0xc78508ffffff	               mov dword [rbp - 0xf8], 2	       934	update-index.c	FUNCTION_40
0x320e	    0x48c78518ffff	               mov qword [rbp - 0xe8], 1	       934	update-index.c	FUNCTION_40
0x3219	    0xc78520ffffff	               mov dword [rbp - 0xe0], 7	       934	update-index.c	FUNCTION_40
0x3223	    0x48c78528ffff	               mov qword [rbp - 0xd8], 0	       934	update-index.c	FUNCTION_40
0x322e	    0x48c78530ffff	               mov qword [rbp - 0xd0], 0	       934	update-index.c	FUNCTION_40
0x3239	    0x48c78540ffff	               mov qword [rbp - 0xc0], 0	       934	update-index.c	FUNCTION_40
0x3244	    0xc78548ffffff	               mov dword [rbp - 0xb8], 6	       934	update-index.c	FUNCTION_40
0x324e	    0x48c78558ffff	               mov qword [rbp - 0xa8], 1	       934	update-index.c	FUNCTION_40
0x3259	    0xc78560ffffff	               mov dword [rbp - 0xa0], 7	       934	update-index.c	FUNCTION_40
0x3263	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	       934	update-index.c	FUNCTION_40
0x326e	    0x48c78570ffff	               mov qword [rbp - 0x90], 0	       934	update-index.c	FUNCTION_40
0x3279	    0x48c745800000	               mov qword [rbp - 0x80], 0	       934	update-index.c	FUNCTION_40
0x3281	    0xc74588060000	               mov dword [rbp - 0x78], 6	       934	update-index.c	FUNCTION_40
0x3288	    0x48c745980200	               mov qword [rbp - 0x68], 2	       934	update-index.c	FUNCTION_40
0x3290	    0x83bd5cf6ffff	              cmp dword [rbp - 0x9a4], 2	      1034	update-index.c	FUNCTION_40	IF_1	CALL_56
0x3297	            0x7533	                           jne 0x400330c	      1034	update-index.c	FUNCTION_40	IF_1	CALL_56
0x3299	    0x488b8550f6ff	            mov rax, qword [rbp - 0x9b0]	      1034	update-index.c	FUNCTION_40	IF_1	CALL_56
0x32a0	        0x4883c008	                              add rax, 8	      1034	update-index.c	FUNCTION_40	IF_1	CALL_56
0x32a4	          0x488b00	                    mov rax, qword [rax]	      1034	update-index.c	FUNCTION_40	IF_1	CALL_56
0x32a7	      0xbe00000000	                              mov esi, 0	      1034	update-index.c	FUNCTION_40	IF_1	CALL_56
0x32ac	          0x4889c7	                            mov rdi, rax	      1034	update-index.c	FUNCTION_40	IF_1	CALL_56
0x32af	      0xe800000000	                          call 0x40032f4	      1034	update-index.c	FUNCTION_40	IF_1	CALL_56
0x32b4	            0x85c0	                           test eax, eax	      1034	update-index.c	FUNCTION_40	IF_1	CALL_56
0x32b6	            0x7514	                           jne 0x400330c	      1034	update-index.c	FUNCTION_40	IF_1	CALL_56
0x32b8	    0x488d8560f7ff	                  lea rax, [rbp - 0x8a0]	      1035	update-index.c	FUNCTION_40	CALL_57
0x32bf	          0x4889c6	                            mov rsi, rax	      1035	update-index.c	FUNCTION_40	CALL_57
0x32c2	      0xbf00000000	                              mov edi, 0	      1035	update-index.c	FUNCTION_40	CALL_57
0x32c7	      0xe800000000	                          call 0x400330c	      1035	update-index.c	FUNCTION_40	CALL_57
0x32cc	      0xbe00000000	                              mov esi, 0	      1037	update-index.c	FUNCTION_40	CALL_58
0x32d1	      0xbf00000000	                              mov edi, 0	      1037	update-index.c	FUNCTION_40	CALL_58
0x32d6	      0xe800000000	                          call 0x400331b	      1037	update-index.c	FUNCTION_40	CALL_58
0x32db	    0x488d85a0f6ff	                  lea rax, [rbp - 0x960]	      1040	update-index.c	FUNCTION_40	CALL_59
0x32e2	      0xbe00000000	                              mov esi, 0	      1040	update-index.c	FUNCTION_40	CALL_59
0x32e7	          0x4889c7	                            mov rdi, rax	      1040	update-index.c	FUNCTION_40	CALL_59
0x32ea	      0xe800000000	                          call 0x400332f	      1040	update-index.c	FUNCTION_40	CALL_59
0x32ef	    0x898598f6ffff	            mov dword [rbp - 0x968], eax	      1040	update-index.c	FUNCTION_40	CALL_59
0x32f5	    0x83bd98f6ffff	              cmp dword [rbp - 0x968], 0	      1041	update-index.c	FUNCTION_40	IF_2
0x32fc	            0x790d	                           jns 0x400334b	      1041	update-index.c	FUNCTION_40	IF_2
0x32fe	      0xe800000000	                          call 0x4003343	      1042	update-index.c	FUNCTION_40	IF_2
0x3303	            0x8b00	                    mov eax, dword [rax]	      1042	update-index.c	FUNCTION_40	IF_2
0x3305	    0x89858cf6ffff	            mov dword [rbp - 0x974], eax	      1042	update-index.c	FUNCTION_40	IF_2
0x330b	      0xbf00000000	                              mov edi, 0	      1044	update-index.c	FUNCTION_40	CALL_60
0x3310	      0xe800000000	                          call 0x4003355	      1044	update-index.c	FUNCTION_40	CALL_60
0x3315	    0x89859cf6ffff	            mov dword [rbp - 0x964], eax	      1044	update-index.c	FUNCTION_40	CALL_60
0x331b	    0x83bd9cf6ffff	              cmp dword [rbp - 0x964], 0	      1045	update-index.c	FUNCTION_40	IF_3
0x3322	            0x790f	                           jns 0x4003373	      1045	update-index.c	FUNCTION_40	IF_3
0x3324	      0xbf00000000	                              mov edi, 0	      1046	update-index.c	FUNCTION_40	CALL_61
0x3329	      0xb800000000	                              mov eax, 0	      1046	update-index.c	FUNCTION_40	CALL_61
0x332e	      0xe800000000	                          call 0x4003373	      1046	update-index.c	FUNCTION_40	CALL_61
0x3333	    0x488dbd60f7ff	                  lea rdi, [rbp - 0x8a0]	      1052	update-index.c	FUNCTION_40	CALL_62
0x333a	    0x488b8d48f6ff	            mov rcx, qword [rbp - 0x9b8]	      1052	update-index.c	FUNCTION_40	CALL_62
0x3341	    0x488b9550f6ff	            mov rdx, qword [rbp - 0x9b0]	      1052	update-index.c	FUNCTION_40	CALL_62
0x3348	    0x8bb55cf6ffff	            mov esi, dword [rbp - 0x9a4]	      1052	update-index.c	FUNCTION_40	CALL_62
0x334e	    0x488d8520f7ff	                  lea rax, [rbp - 0x8e0]	      1052	update-index.c	FUNCTION_40	CALL_62
0x3355	    0x41b902000000	                              mov r9d, 2	      1052	update-index.c	FUNCTION_40	CALL_62
0x335b	          0x4989f8	                             mov r8, rdi	      1052	update-index.c	FUNCTION_40	CALL_62
0x335e	          0x4889c7	                            mov rdi, rax	      1052	update-index.c	FUNCTION_40	CALL_62
0x3361	      0xe800000000	                          call 0x40033a6	      1052	update-index.c	FUNCTION_40	CALL_62
0x3366	      0xe978010000	                           jmp 0x4003523	      1054	update-index.c	FUNCTION_40	WHILE_1
0x336b	    0x83bd90f6ffff	              cmp dword [rbp - 0x970], 0	      1055	update-index.c	FUNCTION_40	WHILE_1	IF_4
0x3372	            0x7424	                            je 0x40033d8	      1055	update-index.c	FUNCTION_40	WHILE_1	IF_4
0x3374	    0x488d8d60f7ff	                  lea rcx, [rbp - 0x8a0]	      1056	update-index.c	FUNCTION_40	WHILE_1	IF_4	CALL_63
0x337b	    0x488d8520f7ff	                  lea rax, [rbp - 0x8e0]	      1056	update-index.c	FUNCTION_40	WHILE_1	IF_4	CALL_63
0x3382	      0xba00000000	                              mov edx, 0	      1056	update-index.c	FUNCTION_40	WHILE_1	IF_4	CALL_63
0x3387	          0x4889ce	                            mov rsi, rcx	      1056	update-index.c	FUNCTION_40	WHILE_1	IF_4	CALL_63
0x338a	          0x4889c7	                            mov rdi, rax	      1056	update-index.c	FUNCTION_40	WHILE_1	IF_4	CALL_63
0x338d	      0xe800000000	                          call 0x40033d2	      1056	update-index.c	FUNCTION_40	WHILE_1	IF_4	CALL_63
0x3392	    0x898590f6ffff	            mov dword [rbp - 0x970], eax	      1056	update-index.c	FUNCTION_40	WHILE_1	IF_4	CALL_63
0x3398	    0x8b8530f7ffff	            mov eax, dword [rbp - 0x8d0]	      1058	update-index.c	FUNCTION_40	WHILE_1	IF_5
0x339e	            0x85c0	                           test eax, eax	      1058	update-index.c	FUNCTION_40	WHILE_1	IF_5
0x33a0	     0xf844d010000	                            je 0x4003533	      1058	update-index.c	FUNCTION_40	WHILE_1	IF_5
0x33a6	    0x8b8590f6ffff	            mov eax, dword [rbp - 0x970]	      1060	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1
0x33ac	          0x83c001	                              add eax, 1	      1060	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1
0x33af	          0x83f804	                              cmp eax, 4	      1060	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1
0x33b2	     0xf872b010000	                            ja 0x4003523	      1060	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1
0x33b8	            0x89c0	                            mov eax, eax	      1060	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1
0x33ba	    0x488b04c50000	                  mov rax, qword [rax*8]	      1060	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1
0x33c2	            0xffe0	                                 jmp rax	      1060	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1
0x33c4	      0xbf81000000	                           mov edi, 0x81	      1063	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1	CALL_64
0x33c9	      0xe800000000	                          call 0x400340e	      1063	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1	CALL_64
0x33ce	    0x488b8520f7ff	            mov rax, qword [rbp - 0x8e0]	      1067	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1
0x33d5	          0x488b00	                    mov rax, qword [rax]	      1067	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1
0x33d8	    0x488985b0f6ff	            mov qword [rbp - 0x950], rax	      1067	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1
0x33df	      0xe800000000	                          call 0x4003424	      1070	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1	CALL_65
0x33e4	    0x488b95b0f6ff	            mov rdx, qword [rbp - 0x950]	      1071	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1	CALL_66
0x33eb	    0x8b8d94f6ffff	            mov ecx, dword [rbp - 0x96c]	      1071	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1	CALL_66
0x33f1	    0x488b8548f6ff	            mov rax, qword [rbp - 0x9b8]	      1071	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1	CALL_66
0x33f8	            0x89ce	                            mov esi, ecx	      1071	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1	CALL_66
0x33fa	          0x4889c7	                            mov rdi, rax	      1071	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1	CALL_66
0x33fd	      0xe800000000	                          call 0x4003442	      1071	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1	CALL_66
0x3402	    0x488985b8f6ff	            mov qword [rbp - 0x948], rax	      1071	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1	CALL_66
0x3409	    0x488b85b8f6ff	            mov rax, qword [rbp - 0x948]	      1072	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1	CALL_67
0x3410	          0x4889c7	                            mov rdi, rax	      1072	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1	CALL_67
0x3413	      0xe8e3e2ffff	                     call sym.update_one	      1072	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1	CALL_67
0x3418	     0xfb6856bf6ff	           movzx eax, byte [rbp - 0x995]	      1073	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1	IF_6
0x341f	            0x84c0	                             test al, al	      1073	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1	IF_6
0x3421	            0x741b	                            je 0x400347e	      1073	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1	IF_6
0x3423	     0xfb6856bf6ff	           movzx eax, byte [rbp - 0x995]	      1074	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1	CALL_68
0x342a	           0xfbec0	                           movsx eax, al	      1074	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1	CALL_68
0x342d	    0x488b95b8f6ff	            mov rdx, qword [rbp - 0x948]	      1074	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1	CALL_68
0x3434	          0x4889d6	                            mov rsi, rdx	      1074	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1	CALL_68
0x3437	            0x89c7	                            mov edi, eax	      1074	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1	CALL_68
0x3439	      0xe816e2ffff	                     call sym.chmod_path	      1074	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1	CALL_68
0x343e	    0x488b85b8f6ff	            mov rax, qword [rbp - 0x948]	      1075	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1	CALL_69
0x3445	          0x4889c7	                            mov rdi, rax	      1075	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1	CALL_69
0x3448	      0xe800000000	                          call 0x400348d	      1075	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1	CALL_69
0x344d	    0x8b8530f7ffff	            mov eax, dword [rbp - 0x8d0]	      1076	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1
0x3453	          0x83e801	                              sub eax, 1	      1076	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1
0x3456	    0x898530f7ffff	            mov dword [rbp - 0x8d0], eax	      1076	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1
0x345c	    0x488b8520f7ff	            mov rax, qword [rbp - 0x8e0]	      1077	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1
0x3463	        0x4883c008	                              add rax, 8	      1077	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1
0x3467	    0x48898520f7ff	            mov qword [rbp - 0x8e0], rax	      1077	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1
0x346e	            0xeb73	                           jmp 0x4003523	      1078	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1
0x3470	    0x488b8520f7ff	            mov rax, qword [rbp - 0x8e0]	      1081	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1	IF_7
0x3477	          0x488b00	                    mov rax, qword [rax]	      1081	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1	IF_7
0x347a	        0x4883c001	                              add rax, 1	      1081	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1	IF_7
0x347e	           0xfb600	                   movzx eax, byte [rax]	      1081	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1	IF_7
0x3481	            0x3c2d	                            cmp al, 0x2d	      1081	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1	IF_7
0x3483	            0x7527	                           jne 0x40034ec	      1081	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1	IF_7
0x3485	    0x488b8520f7ff	            mov rax, qword [rbp - 0x8e0]	      1082	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1	CALL_70
0x348c	          0x488b00	                    mov rax, qword [rax]	      1082	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1	CALL_70
0x348f	        0x4883c002	                              add rax, 2	      1082	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1	CALL_70
0x3493	          0x4889c6	                            mov rsi, rax	      1082	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1	CALL_70
0x3496	      0xbf00000000	                              mov edi, 0	      1082	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1	CALL_70
0x349b	      0xb800000000	                              mov eax, 0	      1082	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1	CALL_70
0x34a0	      0xe800000000	                          call 0x40034e5	      1082	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1	CALL_70
0x34a5	      0xe856cbffff	                    call sym.const_error	      1082	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1	CALL_70
0x34aa	            0xeb23	                           jmp 0x400350f	      1082	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1	CALL_70
0x34ac	    0x488b8540f7ff	            mov rax, qword [rbp - 0x8c0]	      1084	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1	CALL_71
0x34b3	           0xfb600	                   movzx eax, byte [rax]	      1084	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1	CALL_71
0x34b6	           0xfbec0	                           movsx eax, al	      1084	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1	CALL_71
0x34b9	            0x89c6	                            mov esi, eax	      1084	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1	CALL_71
0x34bb	      0xbf00000000	                              mov edi, 0	      1084	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1	CALL_71
0x34c0	      0xb800000000	                              mov eax, 0	      1084	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1	CALL_71
0x34c5	      0xe800000000	                          call 0x400350a	      1084	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1	CALL_71
0x34ca	      0xe831cbffff	                    call sym.const_error	      1084	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1	CALL_71
0x34cf	    0x488d8560f7ff	                  lea rax, [rbp - 0x8a0]	      1085	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1	CALL_72
0x34d6	          0x4889c6	                            mov rsi, rax	      1085	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1	CALL_72
0x34d9	      0xbf00000000	                              mov edi, 0	      1085	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1	CALL_72
0x34de	      0xe800000000	                          call 0x4003523	      1085	update-index.c	FUNCTION_40	WHILE_1	SWITCH_1	CALL_72
0x34e3	    0x8b8530f7ffff	            mov eax, dword [rbp - 0x8d0]	      1054	update-index.c	FUNCTION_40	WHILE_1
0x34e9	            0x85c0	                           test eax, eax	      1054	update-index.c	FUNCTION_40	WHILE_1
0x34eb	     0xf857afeffff	                           jne 0x40033ab	      1054	update-index.c	FUNCTION_40	WHILE_1
0x34f1	            0xeb01	                           jmp 0x4003534	      1054	update-index.c	FUNCTION_40	WHILE_1
0x34f3	              0x90	                                     nop	      1059	update-index.c	FUNCTION_40	WHILE_1	IF_5
0x34f4	    0x488d8520f7ff	                  lea rax, [rbp - 0x8e0]	      1088	update-index.c	FUNCTION_40	CALL_73
0x34fb	          0x4889c7	                            mov rdi, rax	      1088	update-index.c	FUNCTION_40	CALL_73
0x34fe	      0xe800000000	                          call 0x4003543	      1088	update-index.c	FUNCTION_40	CALL_73
0x3503	    0x89855cf6ffff	            mov dword [rbp - 0x9a4], eax	      1088	update-index.c	FUNCTION_40	CALL_73
0x3509	    0x8b8570f6ffff	            mov eax, dword [rbp - 0x990]	      1090	update-index.c	FUNCTION_40
0x350f	            0x85c0	                           test eax, eax	      1090	update-index.c	FUNCTION_40
0x3511	            0x7407	                            je 0x400355a	      1090	update-index.c	FUNCTION_40
0x3513	      0xb800000000	                              mov eax, 0	      1090	update-index.c	FUNCTION_40
0x3518	            0xeb05	                           jmp 0x400355f	      1090	update-index.c	FUNCTION_40
0x351a	      0xb800000000	                              mov eax, 0	      1090	update-index.c	FUNCTION_40
0x351f	    0x488985c0f6ff	            mov qword [rbp - 0x940], rax	      1090	update-index.c	FUNCTION_40
0x3526	    0x8b857cf6ffff	            mov eax, dword [rbp - 0x984]	      1091	update-index.c	FUNCTION_40	IF_8
0x352c	            0x85c0	                           test eax, eax	      1091	update-index.c	FUNCTION_40	IF_8
0x352e	            0x7462	                            je 0x40035d2	      1091	update-index.c	FUNCTION_40	IF_8
0x3530	    0x8b857cf6ffff	            mov eax, dword [rbp - 0x984]	      1092	update-index.c	FUNCTION_40	IF_8	IF_9
0x3536	          0x83f801	                              cmp eax, 1	      1092	update-index.c	FUNCTION_40	IF_8	IF_9
0x3539	            0x7e0b	                           jle 0x4003586	      1092	update-index.c	FUNCTION_40	IF_8	IF_9
0x353b	    0x8b857cf6ffff	            mov eax, dword [rbp - 0x984]	      1093	update-index.c	FUNCTION_40	IF_8	IF_9
0x3541	          0x83f804	                              cmp eax, 4	      1092	update-index.c	FUNCTION_40	IF_8	IF_9
0x3544	            0x7e21	                           jle 0x40035a7	      1092	update-index.c	FUNCTION_40	IF_8	IF_9
0x3546	    0x8b857cf6ffff	            mov eax, dword [rbp - 0x984]	      1094	update-index.c	FUNCTION_40	IF_8	IF_9	CALL_74
0x354c	      0xb904000000	                              mov ecx, 4	      1094	update-index.c	FUNCTION_40	IF_8	IF_9	CALL_74
0x3551	      0xba02000000	                              mov edx, 2	      1094	update-index.c	FUNCTION_40	IF_8	IF_9	CALL_74
0x3556	            0x89c6	                            mov esi, eax	      1094	update-index.c	FUNCTION_40	IF_8	IF_9	CALL_74
0x3558	      0xbf00000000	                              mov edi, 0	      1094	update-index.c	FUNCTION_40	IF_8	IF_9	CALL_74
0x355d	      0xb800000000	                              mov eax, 0	      1094	update-index.c	FUNCTION_40	IF_8	IF_9	CALL_74
0x3562	      0xe800000000	                          call 0x40035a7	      1094	update-index.c	FUNCTION_40	IF_8	IF_9	CALL_74
0x3567	    0x8b0500000000	            mov eax, dword [0x040035ad] 	      1098	update-index.c	FUNCTION_40	IF_8	IF_10
0x356d	    0x8b957cf6ffff	            mov edx, dword [rbp - 0x984]	      1098	update-index.c	FUNCTION_40	IF_8	IF_10
0x3573	            0x39d0	                            cmp eax, edx	      1098	update-index.c	FUNCTION_40	IF_8	IF_10
0x3575	            0x740f	                            je 0x40035c6	      1098	update-index.c	FUNCTION_40	IF_8	IF_10
0x3577	    0x8b0500000000	            mov eax, dword [0x040035bd] 	      1099	update-index.c	FUNCTION_40	IF_8	IF_10
0x357d	          0x83c801	                               or eax, 1	      1099	update-index.c	FUNCTION_40	IF_8	IF_10
0x3580	    0x890500000000	            mov dword [0x040035c6], eax 	      1099	update-index.c	FUNCTION_40	IF_8	IF_10
0x3586	    0x8b857cf6ffff	            mov eax, dword [rbp - 0x984]	      1100	update-index.c	FUNCTION_40	IF_8
0x358c	    0x890500000000	            mov dword [0x040035d2], eax 	      1100	update-index.c	FUNCTION_40	IF_8
0x3592	    0x8b8578f6ffff	            mov eax, dword [rbp - 0x988]	      1103	update-index.c	FUNCTION_40	IF_11
0x3598	            0x85c0	                           test eax, eax	      1103	update-index.c	FUNCTION_40	IF_11
0x359a	     0xf846f010000	                            je 0x400374f	      1103	update-index.c	FUNCTION_40	IF_11
0x35a0	    0x48c785e0f6ff	              mov qword [rbp - 0x920], 0	      1104	update-index.c	FUNCTION_40	IF_11
0x35ab	    0x48c785e8f6ff	              mov qword [rbp - 0x918], 0	      1104	update-index.c	FUNCTION_40	IF_11
0x35b6	    0x48c785f0f6ff	              mov qword [rbp - 0x910], 0	      1104	update-index.c	FUNCTION_40	IF_11
0x35c1	    0x48c78500f7ff	              mov qword [rbp - 0x900], 0	      1105	update-index.c	FUNCTION_40	IF_11
0x35cc	    0x48c78508f7ff	              mov qword [rbp - 0x8f8], 0	      1105	update-index.c	FUNCTION_40	IF_11
0x35d7	    0x48c78510f7ff	              mov qword [rbp - 0x8f0], 0	      1105	update-index.c	FUNCTION_40	IF_11
0x35e2	      0xe800000000	                          call 0x4003627	      1107	update-index.c	FUNCTION_40	IF_11	CALL_75
0x35e7	      0xe9df000000	                           jmp 0x400370b	      1108	update-index.c	FUNCTION_40	IF_11	WHILE_2	CALL_76
0x35ec	    0x8b8570f6ffff	            mov eax, dword [rbp - 0x990]	      1110	update-index.c	FUNCTION_40	IF_11	WHILE_2	IF_12
0x35f2	            0x85c0	                           test eax, eax	      1110	update-index.c	FUNCTION_40	IF_11	WHILE_2	IF_12
0x35f4	            0x756c	                           jne 0x40036a2	      1110	update-index.c	FUNCTION_40	IF_11	WHILE_2	IF_12
0x35f6	    0x488b85f0f6ff	            mov rax, qword [rbp - 0x910]	      1110	update-index.c	FUNCTION_40	IF_11	WHILE_2	IF_12
0x35fd	           0xfb600	                   movzx eax, byte [rax]	      1110	update-index.c	FUNCTION_40	IF_11	WHILE_2	IF_12
0x3600	            0x3c22	                            cmp al, 0x22	      1110	update-index.c	FUNCTION_40	IF_11	WHILE_2	IF_12
0x3602	            0x755e	                           jne 0x40036a2	      1110	update-index.c	FUNCTION_40	IF_11	WHILE_2	IF_12
0x3604	    0x488d8500f7ff	                  lea rax, [rbp - 0x900]	      1111	update-index.c	FUNCTION_40	IF_11	WHILE_2	IF_12	CALL_77
0x360b	      0xbe00000000	                              mov esi, 0	      1111	update-index.c	FUNCTION_40	IF_11	WHILE_2	IF_12	CALL_77
0x3610	          0x4889c7	                            mov rdi, rax	      1111	update-index.c	FUNCTION_40	IF_11	WHILE_2	IF_12	CALL_77
0x3613	      0xe866cbffff	                  call sym.strbuf_setlen	      1111	update-index.c	FUNCTION_40	IF_11	WHILE_2	IF_12	CALL_77
0x3618	    0x488b8df0f6ff	            mov rcx, qword [rbp - 0x910]	      1112	update-index.c	FUNCTION_40	IF_11	WHILE_2	IF_12	IF_13	CALL_78
0x361f	    0x488d8500f7ff	                  lea rax, [rbp - 0x900]	      1112	update-index.c	FUNCTION_40	IF_11	WHILE_2	IF_12	IF_13	CALL_78
0x3626	      0xba00000000	                              mov edx, 0	      1112	update-index.c	FUNCTION_40	IF_11	WHILE_2	IF_12	IF_13	CALL_78
0x362b	          0x4889ce	                            mov rsi, rcx	      1112	update-index.c	FUNCTION_40	IF_11	WHILE_2	IF_12	IF_13	CALL_78
0x362e	          0x4889c7	                            mov rdi, rax	      1112	update-index.c	FUNCTION_40	IF_11	WHILE_2	IF_12	IF_13	CALL_78
0x3631	      0xe800000000	                          call 0x4003676	      1112	update-index.c	FUNCTION_40	IF_11	WHILE_2	IF_12	IF_13	CALL_78
0x3636	            0x85c0	                           test eax, eax	      1112	update-index.c	FUNCTION_40	IF_11	WHILE_2	IF_12	IF_13	CALL_78
0x3638	            0x740f	                            je 0x4003689	      1112	update-index.c	FUNCTION_40	IF_11	WHILE_2	IF_12	IF_13	CALL_78
0x363a	      0xbf00000000	                              mov edi, 0	      1113	update-index.c	FUNCTION_40	IF_11	WHILE_2	IF_12	CALL_79
0x363f	      0xb800000000	                              mov eax, 0	      1113	update-index.c	FUNCTION_40	IF_11	WHILE_2	IF_12	CALL_79
0x3644	      0xe800000000	                          call 0x4003689	      1113	update-index.c	FUNCTION_40	IF_11	WHILE_2	IF_12	CALL_79
0x3649	    0x488d9500f7ff	                  lea rdx, [rbp - 0x900]	      1114	update-index.c	FUNCTION_40	IF_11	WHILE_2	IF_12	CALL_80
0x3650	    0x488d85e0f6ff	                  lea rax, [rbp - 0x920]	      1114	update-index.c	FUNCTION_40	IF_11	WHILE_2	IF_12	CALL_80
0x3657	          0x4889d6	                            mov rsi, rdx	      1114	update-index.c	FUNCTION_40	IF_11	WHILE_2	IF_12	CALL_80
0x365a	          0x4889c7	                            mov rdi, rax	      1114	update-index.c	FUNCTION_40	IF_11	WHILE_2	IF_12	CALL_80
0x365d	      0xe888caffff	                    call sym.strbuf_swap	      1114	update-index.c	FUNCTION_40	IF_11	WHILE_2	IF_12	CALL_80
0x3662	    0x488b95f0f6ff	            mov rdx, qword [rbp - 0x910]	      1116	update-index.c	FUNCTION_40	IF_11	WHILE_2	CALL_81
0x3669	    0x8b8d94f6ffff	            mov ecx, dword [rbp - 0x96c]	      1116	update-index.c	FUNCTION_40	IF_11	WHILE_2	CALL_81
0x366f	    0x488b8548f6ff	            mov rax, qword [rbp - 0x9b8]	      1116	update-index.c	FUNCTION_40	IF_11	WHILE_2	CALL_81
0x3676	            0x89ce	                            mov esi, ecx	      1116	update-index.c	FUNCTION_40	IF_11	WHILE_2	CALL_81
0x3678	          0x4889c7	                            mov rdi, rax	      1116	update-index.c	FUNCTION_40	IF_11	WHILE_2	CALL_81
0x367b	      0xe800000000	                          call 0x40036c0	      1116	update-index.c	FUNCTION_40	IF_11	WHILE_2	CALL_81
0x3680	    0x488985c8f6ff	            mov qword [rbp - 0x938], rax	      1116	update-index.c	FUNCTION_40	IF_11	WHILE_2	CALL_81
0x3687	    0x488b85c8f6ff	            mov rax, qword [rbp - 0x938]	      1117	update-index.c	FUNCTION_40	IF_11	WHILE_2	CALL_82
0x368e	          0x4889c7	                            mov rdi, rax	      1117	update-index.c	FUNCTION_40	IF_11	WHILE_2	CALL_82
0x3691	      0xe865e0ffff	                     call sym.update_one	      1117	update-index.c	FUNCTION_40	IF_11	WHILE_2	CALL_82
0x3696	     0xfb6856bf6ff	           movzx eax, byte [rbp - 0x995]	      1118	update-index.c	FUNCTION_40	IF_11	WHILE_2	IF_14
0x369d	            0x84c0	                             test al, al	      1118	update-index.c	FUNCTION_40	IF_11	WHILE_2	IF_14
0x369f	            0x741b	                            je 0x40036fc	      1118	update-index.c	FUNCTION_40	IF_11	WHILE_2	IF_14
0x36a1	     0xfb6856bf6ff	           movzx eax, byte [rbp - 0x995]	      1119	update-index.c	FUNCTION_40	IF_11	WHILE_2	CALL_83
0x36a8	           0xfbec0	                           movsx eax, al	      1119	update-index.c	FUNCTION_40	IF_11	WHILE_2	CALL_83
0x36ab	    0x488b95c8f6ff	            mov rdx, qword [rbp - 0x938]	      1119	update-index.c	FUNCTION_40	IF_11	WHILE_2	CALL_83
0x36b2	          0x4889d6	                            mov rsi, rdx	      1119	update-index.c	FUNCTION_40	IF_11	WHILE_2	CALL_83
0x36b5	            0x89c7	                            mov edi, eax	      1119	update-index.c	FUNCTION_40	IF_11	WHILE_2	CALL_83
0x36b7	      0xe898dfffff	                     call sym.chmod_path	      1119	update-index.c	FUNCTION_40	IF_11	WHILE_2	CALL_83
0x36bc	    0x488b85c8f6ff	            mov rax, qword [rbp - 0x938]	      1120	update-index.c	FUNCTION_40	IF_11	WHILE_2	CALL_84
0x36c3	          0x4889c7	                            mov rdi, rax	      1120	update-index.c	FUNCTION_40	IF_11	WHILE_2	CALL_84
0x36c6	      0xe800000000	                          call 0x400370b	      1120	update-index.c	FUNCTION_40	IF_11	WHILE_2	CALL_84
0x36cb	    0x488b0d000000	            mov rcx, qword [0x04003712] 	      1108	update-index.c	FUNCTION_40	IF_11	WHILE_2	CALL_76
0x36d2	    0x488d95e0f6ff	                  lea rdx, [rbp - 0x920]	      1108	update-index.c	FUNCTION_40	IF_11	WHILE_2	CALL_76
0x36d9	    0x488b85c0f6ff	            mov rax, qword [rbp - 0x940]	      1108	update-index.c	FUNCTION_40	IF_11	WHILE_2	CALL_76
0x36e0	          0x4889ce	                            mov rsi, rcx	      1108	update-index.c	FUNCTION_40	IF_11	WHILE_2	CALL_76
0x36e3	          0x4889d7	                            mov rdi, rdx	      1108	update-index.c	FUNCTION_40	IF_11	WHILE_2	CALL_76
0x36e6	            0xffd0	                                call rax	      1108	update-index.c	FUNCTION_40	IF_11	WHILE_2	CALL_76
0x36e8	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1108	update-index.c	FUNCTION_40	IF_11	WHILE_2	CALL_76
0x36eb	     0xf85fbfeffff	                           jne 0x400362c	      1108	update-index.c	FUNCTION_40	IF_11	WHILE_2	CALL_76
0x36f1	    0x488d8500f7ff	                  lea rax, [rbp - 0x900]	      1122	update-index.c	FUNCTION_40	IF_11	CALL_85
0x36f8	          0x4889c7	                            mov rdi, rax	      1122	update-index.c	FUNCTION_40	IF_11	CALL_85
0x36fb	      0xe800000000	                          call 0x4003740	      1122	update-index.c	FUNCTION_40	IF_11	CALL_85
0x3700	    0x488d85e0f6ff	                  lea rax, [rbp - 0x920]	      1123	update-index.c	FUNCTION_40	IF_11	CALL_86
0x3707	          0x4889c7	                            mov rdi, rax	      1123	update-index.c	FUNCTION_40	IF_11	CALL_86
0x370a	      0xe800000000	                          call 0x400374f	      1123	update-index.c	FUNCTION_40	IF_11	CALL_86
0x370f	    0x8b8580f6ffff	            mov eax, dword [rbp - 0x980]	      1126	update-index.c	FUNCTION_40	IF_15
0x3715	            0x85c0	                           test eax, eax	      1126	update-index.c	FUNCTION_40	IF_15
0x3717	            0x7e49	                           jle 0x40037a2	      1126	update-index.c	FUNCTION_40	IF_15
0x3719	      0xe800000000	                          call 0x400375e	      1127	update-index.c	FUNCTION_40	IF_15	IF_16	CALL_87
0x371e	            0x85c0	                           test eax, eax	      1127	update-index.c	FUNCTION_40	IF_15	IF_16	CALL_87
0x3720	            0x7517	                           jne 0x4003779	      1127	update-index.c	FUNCTION_40	IF_15	IF_16	CALL_87
0x3722	      0xbf00000000	                              mov edi, 0	      1128	update-index.c	FUNCTION_40	IF_15	IF_16	CALL_89
0x3727	      0xe821cbffff	                               call sym.	      1128	update-index.c	FUNCTION_40	IF_15	IF_16	CALL_89
0x372c	          0x4889c7	                            mov rdi, rax	      1128	update-index.c	FUNCTION_40	IF_15	IF_16	CALL_89
0x372f	      0xb800000000	                              mov eax, 0	      1128	update-index.c	FUNCTION_40	IF_15	IF_16	CALL_89
0x3734	      0xe800000000	                          call 0x4003779	      1128	update-index.c	FUNCTION_40	IF_15	IF_16	CALL_89
0x3739	    0x488b05000000	            mov rax, qword [0x04003780] 	      1131	update-index.c	FUNCTION_40	IF_15	IF_17
0x3740	          0x4885c0	                           test rax, rax	      1131	update-index.c	FUNCTION_40	IF_15	IF_17
0x3743	            0x7411	                            je 0x4003796	      1131	update-index.c	FUNCTION_40	IF_15	IF_17
0x3745	    0x8b0500000000	            mov eax, dword [0x0400378b] 	      1132	update-index.c	FUNCTION_40	IF_15	IF_17
0x374b	          0x83c840	                            or eax, 0x40	      1132	update-index.c	FUNCTION_40	IF_15	IF_17
0x374e	    0x890500000000	            mov dword [0x04003794], eax 	      1132	update-index.c	FUNCTION_40	IF_15	IF_17
0x3754	            0xeb41	                           jmp 0x40037d7	      1132	update-index.c	FUNCTION_40	IF_15	IF_17
0x3756	      0xbf00000000	                              mov edi, 0	      1134	update-index.c	FUNCTION_40	IF_15	CALL_90
0x375b	      0xe800000000	                          call 0x40037a0	      1134	update-index.c	FUNCTION_40	IF_15	CALL_90
0x3760	            0xeb35	                           jmp 0x40037d7	      1134	update-index.c	FUNCTION_40	IF_15	CALL_90
0x3762	    0x8b8580f6ffff	            mov eax, dword [rbp - 0x980]	      1135	update-index.c	FUNCTION_40	ELSE_3	IF_18
0x3768	            0x85c0	                           test eax, eax	      1135	update-index.c	FUNCTION_40	ELSE_3	IF_18
0x376a	            0x752b	                           jne 0x40037d7	      1135	update-index.c	FUNCTION_40	ELSE_3	IF_18
0x376c	      0xe800000000	                          call 0x40037b1	      1136	update-index.c	FUNCTION_40	ELSE_3	IF_18	IF_19	CALL_91
0x3771	          0x83f801	                              cmp eax, 1	      1136	update-index.c	FUNCTION_40	ELSE_3	IF_18	IF_19	CALL_91
0x3774	            0x7517	                           jne 0x40037cd	      1136	update-index.c	FUNCTION_40	ELSE_3	IF_18	IF_19	CALL_91
0x3776	      0xbf00000000	                              mov edi, 0	      1137	update-index.c	FUNCTION_40	ELSE_3	IF_18	IF_19	CALL_93
0x377b	      0xe8cdcaffff	                               call sym.	      1137	update-index.c	FUNCTION_40	ELSE_3	IF_18	IF_19	CALL_93
0x3780	          0x4889c7	                            mov rdi, rax	      1137	update-index.c	FUNCTION_40	ELSE_3	IF_18	IF_19	CALL_93
0x3783	      0xb800000000	                              mov eax, 0	      1137	update-index.c	FUNCTION_40	ELSE_3	IF_18	IF_19	CALL_93
0x3788	      0xe800000000	                          call 0x40037cd	      1137	update-index.c	FUNCTION_40	ELSE_3	IF_18	IF_19	CALL_93
0x378d	      0xbf00000000	                              mov edi, 0	      1140	update-index.c	FUNCTION_40	ELSE_3	IF_18	CALL_94
0x3792	      0xe800000000	                          call 0x40037d7	      1140	update-index.c	FUNCTION_40	ELSE_3	IF_18	CALL_94
0x3797	    0x8b8574f6ffff	            mov eax, dword [rbp - 0x98c]	      1143	update-index.c	FUNCTION_40	SWITCH_2
0x379d	          0x83c001	                              add eax, 1	      1143	update-index.c	FUNCTION_40	SWITCH_2
0x37a0	          0x83f804	                              cmp eax, 4	      1143	update-index.c	FUNCTION_40	SWITCH_2
0x37a3	     0xf87b5000000	                            ja 0x400389e	      1143	update-index.c	FUNCTION_40	SWITCH_2
0x37a9	            0x89c0	                            mov eax, eax	      1143	update-index.c	FUNCTION_40	SWITCH_2
0x37ab	    0x488b04c50000	                  mov rax, qword [rax*8]	      1143	update-index.c	FUNCTION_40	SWITCH_2
0x37b3	            0xffe0	                                 jmp rax	      1143	update-index.c	FUNCTION_40	SWITCH_2
0x37b5	      0xe800000000	                          call 0x40037fa	      1147	update-index.c	FUNCTION_40	SWITCH_2	IF_20	CALL_95
0x37ba	          0x83f801	                              cmp eax, 1	      1147	update-index.c	FUNCTION_40	SWITCH_2	IF_20	CALL_95
0x37bd	            0x7517	                           jne 0x4003816	      1147	update-index.c	FUNCTION_40	SWITCH_2	IF_20	CALL_95
0x37bf	      0xbf00000000	                              mov edi, 0	      1148	update-index.c	FUNCTION_40	SWITCH_2	IF_20	CALL_97
0x37c4	      0xe884caffff	                               call sym.	      1148	update-index.c	FUNCTION_40	SWITCH_2	IF_20	CALL_97
0x37c9	          0x4889c7	                            mov rdi, rax	      1148	update-index.c	FUNCTION_40	SWITCH_2	IF_20	CALL_97
0x37cc	      0xb800000000	                              mov eax, 0	      1148	update-index.c	FUNCTION_40	SWITCH_2	IF_20	CALL_97
0x37d1	      0xe800000000	                          call 0x4003816	      1148	update-index.c	FUNCTION_40	SWITCH_2	IF_20	CALL_97
0x37d6	      0xbf00000000	                              mov edi, 0	      1151	update-index.c	FUNCTION_40	SWITCH_2	CALL_98
0x37db	      0xe800000000	                          call 0x4003820	      1151	update-index.c	FUNCTION_40	SWITCH_2	CALL_98
0x37e0	      0xbf00000000	                              mov edi, 0	      1152	update-index.c	FUNCTION_40	SWITCH_2	CALL_100
0x37e5	      0xe863caffff	                               call sym.	      1152	update-index.c	FUNCTION_40	SWITCH_2	CALL_100
0x37ea	          0x4889c7	                            mov rdi, rax	      1152	update-index.c	FUNCTION_40	SWITCH_2	CALL_100
0x37ed	      0xb800000000	                              mov eax, 0	      1152	update-index.c	FUNCTION_40	SWITCH_2	CALL_100
0x37f2	      0xe872cdffff	                         call sym.report	      1152	update-index.c	FUNCTION_40	SWITCH_2	CALL_100
0x37f7	            0xeb7d	                           jmp 0x40038b6	      1153	update-index.c	FUNCTION_40	SWITCH_2
0x37f9	      0xe800000000	                          call 0x400383e	      1155	update-index.c	FUNCTION_40	SWITCH_2	CALL_101
0x37fe	      0xe872d0ffff	call sym.test_if_untracked_cache_is_supported	      1156	update-index.c	FUNCTION_40	SWITCH_2	CALL_102
0x3803	            0x85c0	                           test eax, eax	      1156	update-index.c	FUNCTION_40	SWITCH_2	CALL_102
0x3805	           0xf94c0	                                 sete al	      1156	update-index.c	FUNCTION_40	SWITCH_2	CALL_102
0x3808	           0xfb6c0	                           movzx eax, al	      1156	update-index.c	FUNCTION_40	SWITCH_2	CALL_102
0x380b	      0xe994010000	                           jmp 0x40039e4	      1156	update-index.c	FUNCTION_40	SWITCH_2	CALL_102
0x3810	      0xe800000000	                          call 0x4003855	      1159	update-index.c	FUNCTION_40	SWITCH_2	IF_21	CALL_103
0x3815	            0x85c0	                           test eax, eax	      1159	update-index.c	FUNCTION_40	SWITCH_2	IF_21	CALL_103
0x3817	            0x7517	                           jne 0x4003870	      1159	update-index.c	FUNCTION_40	SWITCH_2	IF_21	CALL_103
0x3819	      0xbf00000000	                              mov edi, 0	      1160	update-index.c	FUNCTION_40	SWITCH_2	IF_21	CALL_105
0x381e	      0xe82acaffff	                               call sym.	      1160	update-index.c	FUNCTION_40	SWITCH_2	IF_21	CALL_105
0x3823	          0x4889c7	                            mov rdi, rax	      1160	update-index.c	FUNCTION_40	SWITCH_2	IF_21	CALL_105
0x3826	      0xb800000000	                              mov eax, 0	      1160	update-index.c	FUNCTION_40	SWITCH_2	IF_21	CALL_105
0x382b	      0xe800000000	                          call 0x4003870	      1160	update-index.c	FUNCTION_40	SWITCH_2	IF_21	CALL_105
0x3830	      0xbf00000000	                              mov edi, 0	      1163	update-index.c	FUNCTION_40	SWITCH_2	CALL_106
0x3835	      0xe800000000	                          call 0x400387a	      1163	update-index.c	FUNCTION_40	SWITCH_2	CALL_106
0x383a	      0xe800000000	                          call 0x400387f	      1164	update-index.c	FUNCTION_40	SWITCH_2	CALL_109
0x383f	          0x4889c3	                            mov rbx, rax	      1164	update-index.c	FUNCTION_40	SWITCH_2	CALL_109
0x3842	      0xbf00000000	                              mov edi, 0	      1164	update-index.c	FUNCTION_40	SWITCH_2	CALL_109
0x3847	      0xe801caffff	                               call sym.	      1164	update-index.c	FUNCTION_40	SWITCH_2	CALL_109
0x384c	          0x4889de	                            mov rsi, rbx	      1164	update-index.c	FUNCTION_40	SWITCH_2	CALL_109
0x384f	          0x4889c7	                            mov rdi, rax	      1164	update-index.c	FUNCTION_40	SWITCH_2	CALL_109
0x3852	      0xb800000000	                              mov eax, 0	      1164	update-index.c	FUNCTION_40	SWITCH_2	CALL_109
0x3857	      0xe80dcdffff	                         call sym.report	      1164	update-index.c	FUNCTION_40	SWITCH_2	CALL_109
0x385c	            0xeb18	                           jmp 0x40038b6	      1165	update-index.c	FUNCTION_40	SWITCH_2
0x385e	    0x8b8574f6ffff	            mov eax, dword [rbp - 0x98c]	      1167	update-index.c	FUNCTION_40	SWITCH_2	CALL_110
0x3864	            0x89c6	                            mov esi, eax	      1167	update-index.c	FUNCTION_40	SWITCH_2	CALL_110
0x3866	      0xbf00000000	                              mov edi, 0	      1167	update-index.c	FUNCTION_40	SWITCH_2	CALL_110
0x386b	      0xb800000000	                              mov eax, 0	      1167	update-index.c	FUNCTION_40	SWITCH_2	CALL_110
0x3870	      0xe800000000	                          call 0x40038b5	      1167	update-index.c	FUNCTION_40	SWITCH_2	CALL_110
0x3875	              0x90	                                     nop	      1145	update-index.c	FUNCTION_40	SWITCH_2
0x3876	    0x8b8588f6ffff	            mov eax, dword [rbp - 0x978]	      1170	update-index.c	FUNCTION_40	IF_22
0x387c	            0x85c0	                           test eax, eax	      1170	update-index.c	FUNCTION_40	IF_22
0x387e	            0x7e43	                           jle 0x4003903	      1170	update-index.c	FUNCTION_40	IF_22
0x3880	      0xe800000000	                          call 0x40038c5	      1171	update-index.c	FUNCTION_40	IF_22	IF_23	CALL_111
0x3885	            0x85c0	                           test eax, eax	      1171	update-index.c	FUNCTION_40	IF_22	IF_23	CALL_111
0x3887	            0x7517	                           jne 0x40038e0	      1171	update-index.c	FUNCTION_40	IF_22	IF_23	CALL_111
0x3889	      0xbf00000000	                              mov edi, 0	      1172	update-index.c	FUNCTION_40	IF_22	IF_23	CALL_113
0x388e	      0xe8bac9ffff	                               call sym.	      1172	update-index.c	FUNCTION_40	IF_22	IF_23	CALL_113
0x3893	          0x4889c7	                            mov rdi, rax	      1172	update-index.c	FUNCTION_40	IF_22	IF_23	CALL_113
0x3896	      0xb800000000	                              mov eax, 0	      1172	update-index.c	FUNCTION_40	IF_22	IF_23	CALL_113
0x389b	      0xe800000000	                          call 0x40038e0	      1172	update-index.c	FUNCTION_40	IF_22	IF_23	CALL_113
0x38a0	      0xbf00000000	                              mov edi, 0	      1175	update-index.c	FUNCTION_40	IF_22	CALL_114
0x38a5	      0xe800000000	                          call 0x40038ea	      1175	update-index.c	FUNCTION_40	IF_22	CALL_114
0x38aa	      0xbf00000000	                              mov edi, 0	      1176	update-index.c	FUNCTION_40	IF_22	CALL_116
0x38af	      0xe899c9ffff	                               call sym.	      1176	update-index.c	FUNCTION_40	IF_22	CALL_116
0x38b4	          0x4889c7	                            mov rdi, rax	      1176	update-index.c	FUNCTION_40	IF_22	CALL_116
0x38b7	      0xb800000000	                              mov eax, 0	      1176	update-index.c	FUNCTION_40	IF_22	CALL_116
0x38bc	      0xe8a8ccffff	                         call sym.report	      1176	update-index.c	FUNCTION_40	IF_22	CALL_116
0x38c1	            0xeb4c	                           jmp 0x400394f	      1176	update-index.c	FUNCTION_40	IF_22	CALL_116
0x38c3	    0x8b8588f6ffff	            mov eax, dword [rbp - 0x978]	      1177	update-index.c	FUNCTION_40	ELSE_4	IF_24
0x38c9	            0x85c0	                           test eax, eax	      1177	update-index.c	FUNCTION_40	ELSE_4	IF_24
0x38cb	            0x7542	                           jne 0x400394f	      1177	update-index.c	FUNCTION_40	ELSE_4	IF_24
0x38cd	      0xe800000000	                          call 0x4003912	      1178	update-index.c	FUNCTION_40	ELSE_4	IF_24	IF_25	CALL_117
0x38d2	          0x83f801	                              cmp eax, 1	      1178	update-index.c	FUNCTION_40	ELSE_4	IF_24	IF_25	CALL_117
0x38d5	            0x7517	                           jne 0x400392e	      1178	update-index.c	FUNCTION_40	ELSE_4	IF_24	IF_25	CALL_117
0x38d7	      0xbf00000000	                              mov edi, 0	      1179	update-index.c	FUNCTION_40	ELSE_4	IF_24	IF_25	CALL_119
0x38dc	      0xe86cc9ffff	                               call sym.	      1179	update-index.c	FUNCTION_40	ELSE_4	IF_24	IF_25	CALL_119
0x38e1	          0x4889c7	                            mov rdi, rax	      1179	update-index.c	FUNCTION_40	ELSE_4	IF_24	IF_25	CALL_119
0x38e4	      0xb800000000	                              mov eax, 0	      1179	update-index.c	FUNCTION_40	ELSE_4	IF_24	IF_25	CALL_119
0x38e9	      0xe800000000	                          call 0x400392e	      1179	update-index.c	FUNCTION_40	ELSE_4	IF_24	IF_25	CALL_119
0x38ee	      0xbf00000000	                              mov edi, 0	      1182	update-index.c	FUNCTION_40	ELSE_4	IF_24	CALL_120
0x38f3	      0xe800000000	                          call 0x4003938	      1182	update-index.c	FUNCTION_40	ELSE_4	IF_24	CALL_120
0x38f8	      0xbf00000000	                              mov edi, 0	      1183	update-index.c	FUNCTION_40	ELSE_4	IF_24	CALL_122
0x38fd	      0xe84bc9ffff	                               call sym.	      1183	update-index.c	FUNCTION_40	ELSE_4	IF_24	CALL_122
0x3902	          0x4889c7	                            mov rdi, rax	      1183	update-index.c	FUNCTION_40	ELSE_4	IF_24	CALL_122
0x3905	      0xb800000000	                              mov eax, 0	      1183	update-index.c	FUNCTION_40	ELSE_4	IF_24	CALL_122
0x390a	      0xe85accffff	                         call sym.report	      1183	update-index.c	FUNCTION_40	ELSE_4	IF_24	CALL_122
0x390f	    0x8b0500000000	            mov eax, dword [0x04003955] 	      1186	update-index.c	FUNCTION_40	IF_26
0x3915	            0x85c0	                           test eax, eax	      1186	update-index.c	FUNCTION_40	IF_26
0x3917	            0x750a	                           jne 0x4003963	      1186	update-index.c	FUNCTION_40	IF_26
0x3919	    0x8b8584f6ffff	            mov eax, dword [rbp - 0x97c]	      1186	update-index.c	FUNCTION_40	IF_26
0x391f	            0x85c0	                           test eax, eax	      1186	update-index.c	FUNCTION_40	IF_26
0x3921	            0x7464	                            je 0x40039c7	      1186	update-index.c	FUNCTION_40	IF_26
0x3923	    0x83bd98f6ffff	              cmp dword [rbp - 0x968], 0	      1187	update-index.c	FUNCTION_40	IF_26	IF_27
0x392a	            0x792f	                           jns 0x400399b	      1187	update-index.c	FUNCTION_40	IF_26	IF_27
0x392c	    0x8b85d0f6ffff	            mov eax, dword [rbp - 0x930]	      1188	update-index.c	FUNCTION_40	IF_26	IF_27	IF_28
0x3932	          0x83e004	                              and eax, 4	      1188	update-index.c	FUNCTION_40	IF_26	IF_27	IF_28
0x3935	            0x85c0	                           test eax, eax	      1188	update-index.c	FUNCTION_40	IF_26	IF_27	IF_28
0x3937	            0x740a	                            je 0x4003983	      1188	update-index.c	FUNCTION_40	IF_26	IF_27	IF_28
0x3939	      0xbf80000000	                           mov edi, 0x80	      1189	update-index.c	FUNCTION_40	IF_26	IF_27	CALL_123
0x393e	      0xe800000000	                          call 0x4003983	      1189	update-index.c	FUNCTION_40	IF_26	IF_27	CALL_123
0x3943	      0xe800000000	                          call 0x4003988	      1190	update-index.c	FUNCTION_40	IF_26	IF_27	CALL_125
0x3948	          0x4889c2	                            mov rdx, rax	      1190	update-index.c	FUNCTION_40	IF_26	IF_27	CALL_125
0x394b	    0x8b858cf6ffff	            mov eax, dword [rbp - 0x974]	      1190	update-index.c	FUNCTION_40	IF_26	IF_27	CALL_125
0x3951	            0x89c6	                            mov esi, eax	      1190	update-index.c	FUNCTION_40	IF_26	IF_27	CALL_125
0x3953	          0x4889d7	                            mov rdi, rdx	      1190	update-index.c	FUNCTION_40	IF_26	IF_27	CALL_125
0x3956	      0xe800000000	                          call 0x400399b	      1190	update-index.c	FUNCTION_40	IF_26	IF_27	CALL_125
0x395b	    0x488d85a0f6ff	                  lea rax, [rbp - 0x960]	      1192	update-index.c	FUNCTION_40	IF_26	IF_29	CALL_126
0x3962	      0xba01000000	                              mov edx, 1	      1192	update-index.c	FUNCTION_40	IF_26	IF_29	CALL_126
0x3967	          0x4889c6	                            mov rsi, rax	      1192	update-index.c	FUNCTION_40	IF_26	IF_29	CALL_126
0x396a	      0xbf00000000	                              mov edi, 0	      1192	update-index.c	FUNCTION_40	IF_26	IF_29	CALL_126
0x396f	      0xe800000000	                          call 0x40039b4	      1192	update-index.c	FUNCTION_40	IF_26	IF_29	CALL_126
0x3974	            0x85c0	                           test eax, eax	      1192	update-index.c	FUNCTION_40	IF_26	IF_29	CALL_126
0x3976	            0x740f	                            je 0x40039c7	      1192	update-index.c	FUNCTION_40	IF_26	IF_29	CALL_126
0x3978	      0xbf00000000	                              mov edi, 0	      1193	update-index.c	FUNCTION_40	IF_26	CALL_127
0x397d	      0xb800000000	                              mov eax, 0	      1193	update-index.c	FUNCTION_40	IF_26	CALL_127
0x3982	      0xe800000000	                          call 0x40039c7	      1193	update-index.c	FUNCTION_40	IF_26	CALL_127
0x3987	    0x488d85a0f6ff	                  lea rax, [rbp - 0x960]	      1196	update-index.c	FUNCTION_40	CALL_128
0x398e	          0x4889c7	                            mov rdi, rax	      1196	update-index.c	FUNCTION_40	CALL_128
0x3991	      0xe8bbcaffff	             call sym.rollback_lock_file	      1196	update-index.c	FUNCTION_40	CALL_128
0x3996	    0x8b856cf6ffff	            mov eax, dword [rbp - 0x994]	      1198	update-index.c	FUNCTION_40
0x399c	            0x85c0	                           test eax, eax	      1198	update-index.c	FUNCTION_40
0x399e	           0xf95c0	                                setne al	      1198	update-index.c	FUNCTION_40
0x39a1	           0xfb6c0	                           movzx eax, al	      1198	update-index.c	FUNCTION_40
0x39a4	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      1199	update-index.c	FUNCTION_40
0x39a8	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1199	update-index.c	FUNCTION_40
0x39b1	            0x7405	                            je 0x40039f8	      1199	update-index.c	FUNCTION_40
0x39b3	      0xe800000000	                          call 0x40039f8	      1199	update-index.c	FUNCTION_40
0x39b8	    0x4881c4b80900	                          add rsp, 0x9b8	      1199	update-index.c	FUNCTION_40
0x39bf	              0x5b	                                 pop rbx	      1199	update-index.c	FUNCTION_40
0x39c0	              0x5d	                                 pop rbp	      1199	update-index.c	FUNCTION_40
0x39c1	              0xc3	                                     ret	      1199	update-index.c	FUNCTION_40
read_head_pointers	FOR,0:DO,0:functions,0:ELSE,0:CALL,5:SWITCH,0:IF,2:WHILE,0	26
0x200d	              0x55	                                push rbp	       689	update-index.c	FUNCTION_26
0x200e	          0x4889e5	                            mov rbp, rsp	       689	update-index.c	FUNCTION_26
0x2011	      0xbe00000000	                              mov esi, 0	       690	update-index.c	FUNCTION_26	IF_1	CALL_1
0x2016	      0xbf00000000	                              mov edi, 0	       690	update-index.c	FUNCTION_26	IF_1	CALL_1
0x201b	      0xe800000000	                          call 0x4002060	       690	update-index.c	FUNCTION_26	IF_1	CALL_1
0x2020	            0x85c0	                           test eax, eax	       690	update-index.c	FUNCTION_26	IF_1	CALL_1
0x2022	            0x740f	                            je 0x4002073	       690	update-index.c	FUNCTION_26	IF_1	CALL_1
0x2024	      0xbf00000000	                              mov edi, 0	       691	update-index.c	FUNCTION_26	CALL_2
0x2029	      0xb800000000	                              mov eax, 0	       691	update-index.c	FUNCTION_26	CALL_2
0x202e	      0xe800000000	                          call 0x4002073	       691	update-index.c	FUNCTION_26	CALL_2
0x2033	      0xbe00000000	                              mov esi, 0	       692	update-index.c	FUNCTION_26	IF_2	CALL_3
0x2038	      0xbf00000000	                              mov edi, 0	       692	update-index.c	FUNCTION_26	IF_2	CALL_3
0x203d	      0xe800000000	                          call 0x4002082	       692	update-index.c	FUNCTION_26	IF_2	CALL_3
0x2042	            0x85c0	                           test eax, eax	       692	update-index.c	FUNCTION_26	IF_2	CALL_3
0x2044	            0x7428	                            je 0x40020ae	       692	update-index.c	FUNCTION_26	IF_2	CALL_3
0x2046	    0x488b05000000	            mov rax, qword [0x0400208d] 	       693	update-index.c	FUNCTION_26	IF_2	CALL_4
0x204d	          0x4889c1	                            mov rcx, rax	       693	update-index.c	FUNCTION_26	IF_2	CALL_4
0x2050	      0xba1e000000	                           mov edx, 0x1e	       693	update-index.c	FUNCTION_26	IF_2	CALL_4
0x2055	      0xbe01000000	                              mov esi, 1	       693	update-index.c	FUNCTION_26	IF_2	CALL_4
0x205a	      0xbf00000000	                              mov edi, 0	       693	update-index.c	FUNCTION_26	IF_2	CALL_4
0x205f	      0xe800000000	                          call 0x40020a4	       693	update-index.c	FUNCTION_26	IF_2	CALL_4
0x2064	      0xbf00000000	                              mov edi, 0	       694	update-index.c	FUNCTION_26	IF_2	CALL_5
0x2069	      0xe800000000	                          call 0x40020ae	       694	update-index.c	FUNCTION_26	IF_2	CALL_5
0x206e	              0x90	                                     nop	       696	update-index.c	FUNCTION_26
0x206f	              0x5d	                                 pop rbp	       696	update-index.c	FUNCTION_26
0x2070	              0xc3	                                     ret	       696	update-index.c	FUNCTION_26
const_error	FOR,0:DO,0:functions,0:ELSE,0:CALL,0:SWITCH,0:IF,0:WHILE,0	5
0x0	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_46
0x1	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_46
0x4	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_46
0x9	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_46
0xa	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_46
get_mtime_path	FOR,0:DO,0:functions,0:ELSE,0:CALL,2:SWITCH,0:IF,0:WHILE,0	18
0x66c	              0x55	                                push rbp	        71	update-index.c	FUNCTION_6
0x66d	          0x4889e5	                            mov rbp, rsp	        71	update-index.c	FUNCTION_6
0x670	        0x4883ec10	                           sub rsp, 0x10	        71	update-index.c	FUNCTION_6
0x674	        0x48897df8	                mov qword [rbp - 8], rdi	        71	update-index.c	FUNCTION_6
0x678	      0xbe00000000	                              mov esi, 0	        73	update-index.c	FUNCTION_6	CALL_1
0x67d	      0xbf00000000	                              mov edi, 0	        73	update-index.c	FUNCTION_6	CALL_1
0x682	      0xe8f7faffff	                  call sym.strbuf_setlen	        73	update-index.c	FUNCTION_6	CALL_1
0x687	    0x488b05000000	            mov rax, qword [0x040006ce] 	        74	update-index.c	FUNCTION_6	CALL_2
0x68e	        0x488b55f8	                mov rdx, qword [rbp - 8]	        74	update-index.c	FUNCTION_6	CALL_2
0x692	          0x4889d1	                            mov rcx, rdx	        74	update-index.c	FUNCTION_6	CALL_2
0x695	          0x4889c2	                            mov rdx, rax	        74	update-index.c	FUNCTION_6	CALL_2
0x698	      0xbe00000000	                              mov esi, 0	        74	update-index.c	FUNCTION_6	CALL_2
0x69d	      0xbf00000000	                              mov edi, 0	        74	update-index.c	FUNCTION_6	CALL_2
0x6a2	      0xb800000000	                              mov eax, 0	        74	update-index.c	FUNCTION_6	CALL_2
0x6a7	      0xe800000000	                          call 0x40006ec	        74	update-index.c	FUNCTION_6	CALL_2
0x6ac	    0x488b05000000	            mov rax, qword [0x040006f3] 	        75	update-index.c	FUNCTION_6
0x6b3	              0xc9	                                   leave	        76	update-index.c	FUNCTION_6
0x6b4	              0xc3	                                     ret	        76	update-index.c	FUNCTION_6
xmkdir	FOR,0:DO,0:functions,0:ELSE,0:CALL,4:SWITCH,0:IF,1:WHILE,0	25
0x6b5	              0x55	                                push rbp	        79	update-index.c	FUNCTION_7
0x6b6	          0x4889e5	                            mov rbp, rsp	        79	update-index.c	FUNCTION_7
0x6b9	        0x4883ec10	                           sub rsp, 0x10	        79	update-index.c	FUNCTION_7
0x6bd	        0x48897df8	                mov qword [rbp - 8], rdi	        79	update-index.c	FUNCTION_7
0x6c1	        0x488b45f8	                mov rax, qword [rbp - 8]	        80	update-index.c	FUNCTION_7	CALL_1
0x6c5	          0x4889c7	                            mov rdi, rax	        80	update-index.c	FUNCTION_7	CALL_1
0x6c8	      0xe89fffffff	                 call sym.get_mtime_path	        80	update-index.c	FUNCTION_7	CALL_1
0x6cd	        0x488945f8	                mov qword [rbp - 8], rax	        80	update-index.c	FUNCTION_7	CALL_1
0x6d1	        0x488b45f8	                mov rax, qword [rbp - 8]	        81	update-index.c	FUNCTION_7	IF_1	CALL_2
0x6d5	      0xbec0010000	                          mov esi, 0x1c0	        81	update-index.c	FUNCTION_7	IF_1	CALL_2
0x6da	          0x4889c7	                            mov rdi, rax	        81	update-index.c	FUNCTION_7	IF_1	CALL_2
0x6dd	      0xe800000000	                          call 0x4000722	        81	update-index.c	FUNCTION_7	IF_1	CALL_2
0x6e2	            0x85c0	                           test eax, eax	        81	update-index.c	FUNCTION_7	IF_1	CALL_2
0x6e4	            0x7421	                            je 0x4000747	        81	update-index.c	FUNCTION_7	IF_1	CALL_2
0x6e6	      0xbf00000000	                              mov edi, 0	        82	update-index.c	FUNCTION_7	CALL_4
0x6eb	      0xe85dfbffff	                               call sym.	        82	update-index.c	FUNCTION_7	CALL_4
0x6f0	          0x4889c2	                            mov rdx, rax	        82	update-index.c	FUNCTION_7	CALL_4
0x6f3	        0x488b45f8	                mov rax, qword [rbp - 8]	        82	update-index.c	FUNCTION_7	CALL_4
0x6f7	          0x4889c6	                            mov rsi, rax	        82	update-index.c	FUNCTION_7	CALL_4
0x6fa	          0x4889d7	                            mov rdi, rdx	        82	update-index.c	FUNCTION_7	CALL_4
0x6fd	      0xb800000000	                              mov eax, 0	        82	update-index.c	FUNCTION_7	CALL_4
0x702	      0xe800000000	                          call 0x4000747	        82	update-index.c	FUNCTION_7	CALL_4
0x707	              0x90	                                     nop	        83	update-index.c	FUNCTION_7
0x708	              0xc9	                                   leave	        83	update-index.c	FUNCTION_7
0x709	              0xc3	                                     ret	        83	update-index.c	FUNCTION_7
really_refresh_callback	FOR,0:DO,0:functions,0:ELSE,0:CALL,1:SWITCH,0:IF,0:WHILE,0	13
0x236c	              0x55	                                push rbp	       791	update-index.c	FUNCTION_31
0x236d	          0x4889e5	                            mov rbp, rsp	       791	update-index.c	FUNCTION_31
0x2370	        0x4883ec20	                           sub rsp, 0x20	       791	update-index.c	FUNCTION_31
0x2374	        0x48897df8	                mov qword [rbp - 8], rdi	       791	update-index.c	FUNCTION_31
0x2378	        0x488975f0	             mov qword [rbp - 0x10], rsi	       791	update-index.c	FUNCTION_31
0x237c	          0x8955ec	             mov dword [rbp - 0x14], edx	       791	update-index.c	FUNCTION_31
0x237f	        0x488b45f8	                mov rax, qword [rbp - 8]	       792	update-index.c	FUNCTION_31	CALL_1
0x2383	        0x488b4010	            mov rax, qword [rax + 0x10] 	       792	update-index.c	FUNCTION_31	CALL_1
0x2387	      0xbe01000000	                              mov esi, 1	       792	update-index.c	FUNCTION_31	CALL_1
0x238c	          0x4889c7	                            mov rdi, rax	       792	update-index.c	FUNCTION_31	CALL_1
0x238f	      0xe847ffffff	                        call sym.refresh	       792	update-index.c	FUNCTION_31	CALL_1
0x2394	              0xc9	                                   leave	       793	update-index.c	FUNCTION_31
0x2395	              0xc3	                                     ret	       793	update-index.c	FUNCTION_31
unresolve_one	FOR,0:DO,0:functions,0:ELSE,1:CALL,20:SWITCH,0:IF,9:WHILE,0	182
0x1d42	              0x55	                                push rbp	       617	update-index.c	FUNCTION_25
0x1d43	          0x4889e5	                            mov rbp, rsp	       617	update-index.c	FUNCTION_25
0x1d46	        0x4883ec40	                           sub rsp, 0x40	       617	update-index.c	FUNCTION_25
0x1d4a	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       617	update-index.c	FUNCTION_25
0x1d4e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       618	update-index.c	FUNCTION_25	CALL_1
0x1d52	          0x4889c7	                            mov rdi, rax	       618	update-index.c	FUNCTION_25	CALL_1
0x1d55	      0xe800000000	                          call 0x4001d9a	       618	update-index.c	FUNCTION_25	CALL_1
0x1d5a	          0x8945d8	             mov dword [rbp - 0x28], eax	       618	update-index.c	FUNCTION_25	CALL_1
0x1d5d	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	       620	update-index.c	FUNCTION_25
0x1d64	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       621	update-index.c	FUNCTION_25
0x1d6c	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       621	update-index.c	FUNCTION_25
0x1d74	          0x8b55d8	             mov edx, dword [rbp - 0x28]	       624	update-index.c	FUNCTION_25	CALL_2
0x1d77	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       624	update-index.c	FUNCTION_25	CALL_2
0x1d7b	          0x4889c6	                            mov rsi, rax	       624	update-index.c	FUNCTION_25	CALL_2
0x1d7e	      0xbf00000000	                              mov edi, 0	       624	update-index.c	FUNCTION_25	CALL_2
0x1d83	      0xe800000000	                          call 0x4001dc8	       624	update-index.c	FUNCTION_25	CALL_2
0x1d88	          0x8945dc	             mov dword [rbp - 0x24], eax	       624	update-index.c	FUNCTION_25	CALL_2
0x1d8b	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       625	update-index.c	FUNCTION_25	IF_1
0x1d8f	     0xf8896000000	                            js 0x4001e6b	       625	update-index.c	FUNCTION_25	IF_1
0x1d95	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       627	update-index.c	FUNCTION_25	IF_1	CALL_3
0x1d98	            0x89c6	                            mov esi, eax	       627	update-index.c	FUNCTION_25	IF_1	CALL_3
0x1d9a	      0xbf00000000	                              mov edi, 0	       627	update-index.c	FUNCTION_25	IF_1	CALL_3
0x1d9f	      0xe800000000	                          call 0x4001de4	       627	update-index.c	FUNCTION_25	IF_1	CALL_3
0x1da4	          0x8945dc	             mov dword [rbp - 0x24], eax	       627	update-index.c	FUNCTION_25	IF_1	CALL_3
0x1da7	    0x8b1500000000	            mov edx, dword [0x04001ded] 	       628	update-index.c	FUNCTION_25	IF_1	IF_2
0x1dad	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       628	update-index.c	FUNCTION_25	IF_1	IF_2
0x1db0	            0x39c2	                            cmp edx, eax	       628	update-index.c	FUNCTION_25	IF_1	IF_2
0x1db2	     0xf86ef000000	                           jbe 0x4001ee7	       628	update-index.c	FUNCTION_25	IF_1	IF_2
0x1db8	    0x488b05000000	            mov rax, qword [0x04001dff] 	       629	update-index.c	FUNCTION_25	IF_1	IF_2
0x1dbf	          0x8b55dc	             mov edx, dword [rbp - 0x24]	       629	update-index.c	FUNCTION_25	IF_1	IF_2
0x1dc2	          0x4863d2	                         movsxd rdx, edx	       629	update-index.c	FUNCTION_25	IF_1	IF_2
0x1dc5	        0x48c1e203	                              shl rdx, 3	       629	update-index.c	FUNCTION_25	IF_1	IF_2
0x1dc9	          0x4801d0	                            add rax, rdx	       629	update-index.c	FUNCTION_25	IF_1	IF_2
0x1dcc	          0x488b00	                    mov rax, qword [rax]	       629	update-index.c	FUNCTION_25	IF_1	IF_2
0x1dcf	        0x488945f0	             mov qword [rbp - 0x10], rax	       629	update-index.c	FUNCTION_25	IF_1	IF_2
0x1dd3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       630	update-index.c	FUNCTION_25	IF_1	IF_2	IF_3	CALL_4
0x1dd7	          0x8b4038	            mov eax, dword [rax + 0x38] 	       630	update-index.c	FUNCTION_25	IF_1	IF_2	IF_3	CALL_4
0x1dda	      0x2500300000	                         and eax, 0x3000	       630	update-index.c	FUNCTION_25	IF_1	IF_2	IF_3	CALL_4
0x1ddf	          0xc1e80c	                            shr eax, 0xc	       630	update-index.c	FUNCTION_25	IF_1	IF_2	IF_3	CALL_4
0x1de2	            0x85c0	                           test eax, eax	       630	update-index.c	FUNCTION_25	IF_1	IF_2	IF_3	CALL_4
0x1de4	     0xf84bd000000	                            je 0x4001ee7	       630	update-index.c	FUNCTION_25	IF_1	IF_2	IF_3	CALL_4
0x1dea	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       631	update-index.c	FUNCTION_25	IF_1	IF_2	IF_3	CALL_5
0x1dee	          0x8b503c	            mov edx, dword [rax + 0x3c] 	       631	update-index.c	FUNCTION_25	IF_1	IF_2	IF_3	CALL_5
0x1df1	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       631	update-index.c	FUNCTION_25	IF_1	IF_2	IF_3	CALL_5
0x1df4	            0x39c2	                            cmp edx, eax	       630	update-index.c	FUNCTION_25	IF_1	IF_2	IF_3	CALL_4
0x1df6	     0xf85ab000000	                           jne 0x4001ee7	       630	update-index.c	FUNCTION_25	IF_1	IF_2	IF_3	CALL_4
0x1dfc	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       632	update-index.c	FUNCTION_25	IF_1	IF_2	IF_3	CALL_6
0x1dff	          0x4863d0	                         movsxd rdx, eax	       632	update-index.c	FUNCTION_25	IF_1	IF_2	IF_3	CALL_6
0x1e02	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       632	update-index.c	FUNCTION_25	IF_1	IF_2	IF_3	CALL_6
0x1e06	        0x488d4858	                   lea rcx, [rax + 0x58]	       632	update-index.c	FUNCTION_25	IF_1	IF_2	IF_3	CALL_6
0x1e0a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       632	update-index.c	FUNCTION_25	IF_1	IF_2	IF_3	CALL_6
0x1e0e	          0x4889c6	                            mov rsi, rax	       632	update-index.c	FUNCTION_25	IF_1	IF_2	IF_3	CALL_6
0x1e11	          0x4889cf	                            mov rdi, rcx	       632	update-index.c	FUNCTION_25	IF_1	IF_2	IF_3	CALL_6
0x1e14	      0xe800000000	                          call 0x4001e59	       632	update-index.c	FUNCTION_25	IF_1	IF_2	IF_3	CALL_6
0x1e19	            0x85c0	                           test eax, eax	       631	update-index.c	FUNCTION_25	IF_1	IF_2	IF_3	CALL_5
0x1e1b	     0xf8586000000	                           jne 0x4001ee7	       631	update-index.c	FUNCTION_25	IF_1	IF_2	IF_3	CALL_5
0x1e21	      0xb800000000	                              mov eax, 0	       633	update-index.c	FUNCTION_25	IF_1	IF_2	IF_3
0x1e26	      0xe9e0010000	                           jmp 0x400204b	       633	update-index.c	FUNCTION_25	IF_1	IF_2	IF_3
0x1e2b	          0xf755dc	                  not dword [rbp - 0x24]	       641	update-index.c	FUNCTION_25	ELSE_1
0x1e2e	    0x8b1500000000	            mov edx, dword [0x04001e74] 	       642	update-index.c	FUNCTION_25	ELSE_1	IF_4
0x1e34	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       642	update-index.c	FUNCTION_25	ELSE_1	IF_4
0x1e37	            0x39c2	                            cmp edx, eax	       642	update-index.c	FUNCTION_25	ELSE_1	IF_4
0x1e39	            0x766c	                           jbe 0x4001ee7	       642	update-index.c	FUNCTION_25	ELSE_1	IF_4
0x1e3b	    0x488b05000000	            mov rax, qword [0x04001e82] 	       643	update-index.c	FUNCTION_25	ELSE_1	IF_4
0x1e42	          0x8b55dc	             mov edx, dword [rbp - 0x24]	       643	update-index.c	FUNCTION_25	ELSE_1	IF_4
0x1e45	          0x4863d2	                         movsxd rdx, edx	       643	update-index.c	FUNCTION_25	ELSE_1	IF_4
0x1e48	        0x48c1e203	                              shl rdx, 3	       643	update-index.c	FUNCTION_25	ELSE_1	IF_4
0x1e4c	          0x4801d0	                            add rax, rdx	       643	update-index.c	FUNCTION_25	ELSE_1	IF_4
0x1e4f	          0x488b00	                    mov rax, qword [rax]	       643	update-index.c	FUNCTION_25	ELSE_1	IF_4
0x1e52	        0x488945f8	                mov qword [rbp - 8], rax	       643	update-index.c	FUNCTION_25	ELSE_1	IF_4
0x1e56	        0x488b45f8	                mov rax, qword [rbp - 8]	       644	update-index.c	FUNCTION_25	ELSE_1	IF_4	IF_5	CALL_7
0x1e5a	          0x8b503c	            mov edx, dword [rax + 0x3c] 	       644	update-index.c	FUNCTION_25	ELSE_1	IF_4	IF_5	CALL_7
0x1e5d	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       644	update-index.c	FUNCTION_25	ELSE_1	IF_4	IF_5	CALL_7
0x1e60	            0x39c2	                            cmp edx, eax	       644	update-index.c	FUNCTION_25	ELSE_1	IF_4	IF_5	CALL_7
0x1e62	            0x7543	                           jne 0x4001ee7	       644	update-index.c	FUNCTION_25	ELSE_1	IF_4	IF_5	CALL_7
0x1e64	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       645	update-index.c	FUNCTION_25	ELSE_1	IF_4	IF_5	CALL_8
0x1e67	          0x4863d0	                         movsxd rdx, eax	       645	update-index.c	FUNCTION_25	ELSE_1	IF_4	IF_5	CALL_8
0x1e6a	        0x488b45f8	                mov rax, qword [rbp - 8]	       645	update-index.c	FUNCTION_25	ELSE_1	IF_4	IF_5	CALL_8
0x1e6e	        0x488d4858	                   lea rcx, [rax + 0x58]	       645	update-index.c	FUNCTION_25	ELSE_1	IF_4	IF_5	CALL_8
0x1e72	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       645	update-index.c	FUNCTION_25	ELSE_1	IF_4	IF_5	CALL_8
0x1e76	          0x4889c6	                            mov rsi, rax	       645	update-index.c	FUNCTION_25	ELSE_1	IF_4	IF_5	CALL_8
0x1e79	          0x4889cf	                            mov rdi, rcx	       645	update-index.c	FUNCTION_25	ELSE_1	IF_4	IF_5	CALL_8
0x1e7c	      0xe800000000	                          call 0x4001ec1	       645	update-index.c	FUNCTION_25	ELSE_1	IF_4	IF_5	CALL_8
0x1e81	            0x85c0	                           test eax, eax	       644	update-index.c	FUNCTION_25	ELSE_1	IF_4	IF_5	CALL_7
0x1e83	            0x7522	                           jne 0x4001ee7	       644	update-index.c	FUNCTION_25	ELSE_1	IF_4	IF_5	CALL_7
0x1e85	    0x488b05000000	            mov rax, qword [0x04001ecc] 	       646	update-index.c	FUNCTION_25	ELSE_1	IF_4	IF_5	CALL_9
0x1e8c	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       646	update-index.c	FUNCTION_25	ELSE_1	IF_4	IF_5	CALL_9
0x1e90	      0xbe00000000	                              mov esi, 0	       646	update-index.c	FUNCTION_25	ELSE_1	IF_4	IF_5	CALL_9
0x1e95	          0x4889c7	                            mov rdi, rax	       646	update-index.c	FUNCTION_25	ELSE_1	IF_4	IF_5	CALL_9
0x1e98	      0xb800000000	                              mov eax, 0	       646	update-index.c	FUNCTION_25	ELSE_1	IF_4	IF_5	CALL_9
0x1e9d	      0xe800000000	                          call 0x4001ee2	       646	update-index.c	FUNCTION_25	ELSE_1	IF_4	IF_5	CALL_9
0x1ea2	      0xe949010000	                           jmp 0x4002030	       649	update-index.c	FUNCTION_25	ELSE_1	IF_4	IF_5
0x1ea7	          0x8b55d8	             mov edx, dword [rbp - 0x28]	       658	update-index.c	FUNCTION_25	CALL_10
0x1eaa	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       658	update-index.c	FUNCTION_25	CALL_10
0x1eae	    0x41b802000000	                              mov r8d, 2	       658	update-index.c	FUNCTION_25	CALL_10
0x1eb4	            0x89d1	                            mov ecx, edx	       658	update-index.c	FUNCTION_25	CALL_10
0x1eb6	          0x4889c2	                            mov rdx, rax	       658	update-index.c	FUNCTION_25	CALL_10
0x1eb9	      0xbe00000000	                              mov esi, 0	       658	update-index.c	FUNCTION_25	CALL_10
0x1ebe	      0xbf00000000	                              mov edi, 0	       658	update-index.c	FUNCTION_25	CALL_10
0x1ec3	      0xe82dfdffff	                   call sym.read_one_ent	       658	update-index.c	FUNCTION_25	CALL_10
0x1ec8	        0x488945e0	             mov qword [rbp - 0x20], rax	       658	update-index.c	FUNCTION_25	CALL_10
0x1ecc	          0x8b55d8	             mov edx, dword [rbp - 0x28]	       659	update-index.c	FUNCTION_25	CALL_11
0x1ecf	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       659	update-index.c	FUNCTION_25	CALL_11
0x1ed3	    0x41b803000000	                              mov r8d, 3	       659	update-index.c	FUNCTION_25	CALL_11
0x1ed9	            0x89d1	                            mov ecx, edx	       659	update-index.c	FUNCTION_25	CALL_11
0x1edb	          0x4889c2	                            mov rdx, rax	       659	update-index.c	FUNCTION_25	CALL_11
0x1ede	      0xbe00000000	                              mov esi, 0	       659	update-index.c	FUNCTION_25	CALL_11
0x1ee3	      0xbf00000000	                              mov edi, 0	       659	update-index.c	FUNCTION_25	CALL_11
0x1ee8	      0xe808fdffff	                   call sym.read_one_ent	       659	update-index.c	FUNCTION_25	CALL_11
0x1eed	        0x488945e8	             mov qword [rbp - 0x18], rax	       659	update-index.c	FUNCTION_25	CALL_11
0x1ef1	      0x48837de000	               cmp qword [rbp - 0x20], 0	       661	update-index.c	FUNCTION_25	IF_6
0x1ef6	            0x7407	                            je 0x4001f3f	       661	update-index.c	FUNCTION_25	IF_6
0x1ef8	      0x48837de800	               cmp qword [rbp - 0x18], 0	       661	update-index.c	FUNCTION_25	IF_6
0x1efd	            0x750c	                           jne 0x4001f4b	       661	update-index.c	FUNCTION_25	IF_6
0x1eff	    0xc745d4ffffff	     mov dword [rbp - 0x2c], 0xffffffff 	       662	update-index.c	FUNCTION_25	IF_6
0x1f06	      0xe9e5000000	                           jmp 0x4002030	       663	update-index.c	FUNCTION_25	IF_6
0x1f0b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       665	update-index.c	FUNCTION_25	IF_7	CALL_12
0x1f0f	        0x488d5044	                   lea rdx, [rax + 0x44]	       665	update-index.c	FUNCTION_25	IF_7	CALL_12
0x1f13	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       665	update-index.c	FUNCTION_25	IF_7	CALL_12
0x1f17	        0x4883c044	                           add rax, 0x44	       665	update-index.c	FUNCTION_25	IF_7	CALL_12
0x1f1b	          0x4889d6	                            mov rsi, rdx	       665	update-index.c	FUNCTION_25	IF_7	CALL_12
0x1f1e	          0x4889c7	                            mov rdi, rax	       665	update-index.c	FUNCTION_25	IF_7	CALL_12
0x1f21	      0xe8b5e4ffff	                         call sym.oidcmp	       665	update-index.c	FUNCTION_25	IF_7	CALL_12
0x1f26	            0x85c0	                           test eax, eax	       665	update-index.c	FUNCTION_25	IF_7	CALL_12
0x1f28	            0x7534	                           jne 0x4001f9e	       665	update-index.c	FUNCTION_25	IF_7	CALL_12
0x1f2a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       666	update-index.c	FUNCTION_25	IF_7
0x1f2e	          0x8b5034	            mov edx, dword [rax + 0x34] 	       666	update-index.c	FUNCTION_25	IF_7
0x1f31	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       666	update-index.c	FUNCTION_25	IF_7
0x1f35	          0x8b4034	            mov eax, dword [rax + 0x34] 	       666	update-index.c	FUNCTION_25	IF_7
0x1f38	            0x39c2	                            cmp edx, eax	       665	update-index.c	FUNCTION_25	IF_7	CALL_12
0x1f3a	            0x7522	                           jne 0x4001f9e	       665	update-index.c	FUNCTION_25	IF_7	CALL_12
0x1f3c	    0x488b05000000	            mov rax, qword [0x04001f83] 	       667	update-index.c	FUNCTION_25	IF_7	CALL_13
0x1f43	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       667	update-index.c	FUNCTION_25	IF_7	CALL_13
0x1f47	      0xbe00000000	                              mov esi, 0	       667	update-index.c	FUNCTION_25	IF_7	CALL_13
0x1f4c	          0x4889c7	                            mov rdi, rax	       667	update-index.c	FUNCTION_25	IF_7	CALL_13
0x1f4f	      0xb800000000	                              mov eax, 0	       667	update-index.c	FUNCTION_25	IF_7	CALL_13
0x1f54	      0xe800000000	                          call 0x4001f99	       667	update-index.c	FUNCTION_25	IF_7	CALL_13
0x1f59	      0xe992000000	                           jmp 0x4002030	       669	update-index.c	FUNCTION_25	IF_7
0x1f5e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       672	update-index.c	FUNCTION_25	CALL_14
0x1f62	          0x4889c6	                            mov rsi, rax	       672	update-index.c	FUNCTION_25	CALL_14
0x1f65	      0xbf00000000	                              mov edi, 0	       672	update-index.c	FUNCTION_25	CALL_14
0x1f6a	      0xe800000000	                          call 0x4001faf	       672	update-index.c	FUNCTION_25	CALL_14
0x1f6f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       673	update-index.c	FUNCTION_25	IF_8	CALL_15
0x1f73	      0xba01000000	                              mov edx, 1	       673	update-index.c	FUNCTION_25	IF_8	CALL_15
0x1f78	          0x4889c6	                            mov rsi, rax	       673	update-index.c	FUNCTION_25	IF_8	CALL_15
0x1f7b	      0xbf00000000	                              mov edi, 0	       673	update-index.c	FUNCTION_25	IF_8	CALL_15
0x1f80	      0xe800000000	                          call 0x4001fc5	       673	update-index.c	FUNCTION_25	IF_8	CALL_15
0x1f85	            0x85c0	                           test eax, eax	       673	update-index.c	FUNCTION_25	IF_8	CALL_15
0x1f87	            0x7424	                            je 0x4001fed	       673	update-index.c	FUNCTION_25	IF_8	CALL_15
0x1f89	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       674	update-index.c	FUNCTION_25	IF_8	CALL_16
0x1f8d	          0x4889c6	                            mov rsi, rax	       674	update-index.c	FUNCTION_25	IF_8	CALL_16
0x1f90	      0xbf00000000	                              mov edi, 0	       674	update-index.c	FUNCTION_25	IF_8	CALL_16
0x1f95	      0xb800000000	                              mov eax, 0	       674	update-index.c	FUNCTION_25	IF_8	CALL_16
0x1f9a	      0xe800000000	                          call 0x4001fdf	       674	update-index.c	FUNCTION_25	IF_8	CALL_16
0x1f9f	      0xe85ce0ffff	                    call sym.const_error	       674	update-index.c	FUNCTION_25	IF_8	CALL_16
0x1fa4	    0xc745d4ffffff	     mov dword [rbp - 0x2c], 0xffffffff 	       675	update-index.c	FUNCTION_25	IF_8
0x1fab	            0xeb43	                           jmp 0x4002030	       676	update-index.c	FUNCTION_25	IF_8
0x1fad	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       678	update-index.c	FUNCTION_25	IF_9	CALL_17
0x1fb1	      0xba01000000	                              mov edx, 1	       678	update-index.c	FUNCTION_25	IF_9	CALL_17
0x1fb6	          0x4889c6	                            mov rsi, rax	       678	update-index.c	FUNCTION_25	IF_9	CALL_17
0x1fb9	      0xbf00000000	                              mov edi, 0	       678	update-index.c	FUNCTION_25	IF_9	CALL_17
0x1fbe	      0xe800000000	                          call 0x4002003	       678	update-index.c	FUNCTION_25	IF_9	CALL_17
0x1fc3	            0x85c0	                           test eax, eax	       678	update-index.c	FUNCTION_25	IF_9	CALL_17
0x1fc5	            0x7507	                           jne 0x400200e	       678	update-index.c	FUNCTION_25	IF_9	CALL_17
0x1fc7	      0xb800000000	                              mov eax, 0	       679	update-index.c	FUNCTION_25	IF_9
0x1fcc	            0xeb3d	                           jmp 0x400204b	       679	update-index.c	FUNCTION_25	IF_9
0x1fce	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       680	update-index.c	FUNCTION_25	CALL_18
0x1fd2	          0x4889c6	                            mov rsi, rax	       680	update-index.c	FUNCTION_25	CALL_18
0x1fd5	      0xbf00000000	                              mov edi, 0	       680	update-index.c	FUNCTION_25	CALL_18
0x1fda	      0xb800000000	                              mov eax, 0	       680	update-index.c	FUNCTION_25	CALL_18
0x1fdf	      0xe800000000	                          call 0x4002024	       680	update-index.c	FUNCTION_25	CALL_18
0x1fe4	      0xe817e0ffff	                    call sym.const_error	       680	update-index.c	FUNCTION_25	CALL_18
0x1fe9	    0xc745d4ffffff	     mov dword [rbp - 0x2c], 0xffffffff 	       681	update-index.c	FUNCTION_25
0x1ff0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       683	update-index.c	FUNCTION_25	CALL_19
0x1ff4	          0x4889c7	                            mov rdi, rax	       683	update-index.c	FUNCTION_25	CALL_19
0x1ff7	      0xe800000000	                          call 0x400203c	       683	update-index.c	FUNCTION_25	CALL_19
0x1ffc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       684	update-index.c	FUNCTION_25	CALL_20
0x2000	          0x4889c7	                            mov rdi, rax	       684	update-index.c	FUNCTION_25	CALL_20
0x2003	      0xe800000000	                          call 0x4002048	       684	update-index.c	FUNCTION_25	CALL_20
0x2008	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       685	update-index.c	FUNCTION_25
0x200b	              0xc9	                                   leave	       686	update-index.c	FUNCTION_25
0x200c	              0xc3	                                     ret	       686	update-index.c	FUNCTION_25
report	FOR,0:DO,0:functions,0:ELSE,0:CALL,4:SWITCH,0:IF,1:WHILE,0	46
0x569	              0x55	                                push rbp	        52	update-index.c	FUNCTION_4
0x56a	          0x4889e5	                            mov rbp, rsp	        52	update-index.c	FUNCTION_4
0x56d	    0x4881ece00000	                           sub rsp, 0xe0	        52	update-index.c	FUNCTION_4
0x574	    0x4889bd28ffff	             mov qword [rbp - 0xd8], rdi	        52	update-index.c	FUNCTION_4
0x57b	    0x4889b558ffff	             mov qword [rbp - 0xa8], rsi	        52	update-index.c	FUNCTION_4
0x582	    0x48899560ffff	             mov qword [rbp - 0xa0], rdx	        52	update-index.c	FUNCTION_4
0x589	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	        52	update-index.c	FUNCTION_4
0x590	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	        52	update-index.c	FUNCTION_4
0x597	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	        52	update-index.c	FUNCTION_4
0x59e	            0x84c0	                             test al, al	        52	update-index.c	FUNCTION_4
0x5a0	            0x7420	                            je 0x4000602	        52	update-index.c	FUNCTION_4
0x5a2	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	        52	update-index.c	FUNCTION_4
0x5a6	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	        52	update-index.c	FUNCTION_4
0x5aa	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	        52	update-index.c	FUNCTION_4
0x5ae	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	        52	update-index.c	FUNCTION_4
0x5b2	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	        52	update-index.c	FUNCTION_4
0x5b6	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	        52	update-index.c	FUNCTION_4
0x5ba	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	        52	update-index.c	FUNCTION_4
0x5be	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	        52	update-index.c	FUNCTION_4
0x5c2	    0x64488b042528	                mov rax, qword fs:[0x28]	        52	update-index.c	FUNCTION_4
0x5cb	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	        52	update-index.c	FUNCTION_4
0x5d2	            0x31c0	                            xor eax, eax	        52	update-index.c	FUNCTION_4
0x5d4	    0x8b0500000000	            mov eax, dword [0x0400061a] 	        55	update-index.c	FUNCTION_4	IF_1
0x5da	            0x85c0	                           test eax, eax	        55	update-index.c	FUNCTION_4	IF_1
0x5dc	            0x7452	                            je 0x4000670	        55	update-index.c	FUNCTION_4	IF_1
0x5de	    0xc78530ffffff	               mov dword [rbp - 0xd0], 8	        58	update-index.c	FUNCTION_4	CALL_1
0x5e8	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	        58	update-index.c	FUNCTION_4	CALL_1
0x5f2	        0x488d4510	                   lea rax, [rbp + 0x10]	        58	update-index.c	FUNCTION_4	CALL_1
0x5f6	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	        58	update-index.c	FUNCTION_4	CALL_1
0x5fd	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	        58	update-index.c	FUNCTION_4	CALL_1
0x604	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	        58	update-index.c	FUNCTION_4	CALL_1
0x60b	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	        59	update-index.c	FUNCTION_4	CALL_2
0x612	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	        59	update-index.c	FUNCTION_4	CALL_2
0x619	          0x4889d6	                            mov rsi, rdx	        59	update-index.c	FUNCTION_4	CALL_2
0x61c	          0x4889c7	                            mov rdi, rax	        59	update-index.c	FUNCTION_4	CALL_2
0x61f	      0xe800000000	                          call 0x4000664	        59	update-index.c	FUNCTION_4	CALL_2
0x624	      0xbf0a000000	                            mov edi, 0xa	        60	update-index.c	FUNCTION_4	CALL_3
0x629	      0xe800000000	                          call 0x400066e	        60	update-index.c	FUNCTION_4	CALL_3
0x62e	            0xeb01	                           jmp 0x4000671	        60	update-index.c	FUNCTION_4	CALL_3
0x630	              0x90	                                     nop	        56	update-index.c	FUNCTION_4	IF_1
0x631	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	        62	update-index.c	FUNCTION_4
0x638	    0x644833042528	                xor rax, qword fs:[0x28]	        62	update-index.c	FUNCTION_4
0x641	            0x7405	                            je 0x4000688	        62	update-index.c	FUNCTION_4
0x643	      0xe800000000	                          call 0x4000688	        62	update-index.c	FUNCTION_4
0x648	              0xc9	                                   leave	        62	update-index.c	FUNCTION_4
0x649	              0xc3	                                     ret	        62	update-index.c	FUNCTION_4
add_one_path	FOR,0:DO,0:functions,0:ELSE,0:CALL,13:SWITCH,0:IF,3:WHILE,0	113
0xfba	              0x55	                                push rbp	       270	update-index.c	FUNCTION_17
0xfbb	          0x4889e5	                            mov rbp, rsp	       270	update-index.c	FUNCTION_17
0xfbe	        0x4883ec30	                           sub rsp, 0x30	       270	update-index.c	FUNCTION_17
0xfc2	        0x48897de8	             mov qword [rbp - 0x18], rdi	       270	update-index.c	FUNCTION_17
0xfc6	        0x488975e0	             mov qword [rbp - 0x20], rsi	       270	update-index.c	FUNCTION_17
0xfca	          0x8955dc	             mov dword [rbp - 0x24], edx	       270	update-index.c	FUNCTION_17
0xfcd	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       270	update-index.c	FUNCTION_17
0xfd1	      0x48837de800	               cmp qword [rbp - 0x18], 0	       275	update-index.c	FUNCTION_17	IF_1	CALL_2
0xfd6	            0x743b	                            je 0x4001053	       275	update-index.c	FUNCTION_17	IF_1	CALL_2
0xfd8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       275	update-index.c	FUNCTION_17	IF_1	CALL_2
0xfdc	          0x8b4038	            mov eax, dword [rax + 0x38] 	       275	update-index.c	FUNCTION_17	IF_1	CALL_2
0xfdf	      0x2500300000	                         and eax, 0x3000	       275	update-index.c	FUNCTION_17	IF_1	CALL_2
0xfe4	          0xc1e80c	                            shr eax, 0xc	       275	update-index.c	FUNCTION_17	IF_1	CALL_2
0xfe7	            0x85c0	                           test eax, eax	       275	update-index.c	FUNCTION_17	IF_1	CALL_2
0xfe9	            0x7528	                           jne 0x4001053	       275	update-index.c	FUNCTION_17	IF_1	CALL_2
0xfeb	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       275	update-index.c	FUNCTION_17	IF_1	CALL_2
0xfef	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       275	update-index.c	FUNCTION_17	IF_1	CALL_2
0xff3	      0xb900000000	                              mov ecx, 0	       275	update-index.c	FUNCTION_17	IF_1	CALL_2
0xff8	          0x4889c6	                            mov rsi, rax	       275	update-index.c	FUNCTION_17	IF_1	CALL_2
0xffb	      0xbf00000000	                              mov edi, 0	       275	update-index.c	FUNCTION_17	IF_1	CALL_2
0x1000	      0xe800000000	                          call 0x4001045	       275	update-index.c	FUNCTION_17	IF_1	CALL_2
0x1005	            0x85c0	                           test eax, eax	       275	update-index.c	FUNCTION_17	IF_1	CALL_2
0x1007	            0x750a	                           jne 0x4001053	       275	update-index.c	FUNCTION_17	IF_1	CALL_2
0x1009	      0xb800000000	                              mov eax, 0	       276	update-index.c	FUNCTION_17	IF_1
0x100e	      0xe937010000	                           jmp 0x400118a	       276	update-index.c	FUNCTION_17	IF_1
0x1013	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       278	update-index.c	FUNCTION_17	CALL_3
0x1016	          0x83c059	                           add eax, 0x59	       278	update-index.c	FUNCTION_17	CALL_3
0x1019	          0x8945f0	             mov dword [rbp - 0x10], eax	       278	update-index.c	FUNCTION_17	CALL_3
0x101c	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       279	update-index.c	FUNCTION_17	CALL_4
0x101f	            0x4898	                                    cdqe	       279	update-index.c	FUNCTION_17	CALL_4
0x1021	          0x4889c6	                            mov rsi, rax	       279	update-index.c	FUNCTION_17	CALL_4
0x1024	      0xbf01000000	                              mov edi, 1	       279	update-index.c	FUNCTION_17	CALL_4
0x1029	      0xe800000000	                          call 0x400106e	       279	update-index.c	FUNCTION_17	CALL_4
0x102e	        0x488945f8	                mov qword [rbp - 8], rax	       279	update-index.c	FUNCTION_17	CALL_4
0x1032	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       280	update-index.c	FUNCTION_17	CALL_5
0x1035	          0x4863d0	                         movsxd rdx, eax	       280	update-index.c	FUNCTION_17	CALL_5
0x1038	        0x488b45f8	                mov rax, qword [rbp - 8]	       280	update-index.c	FUNCTION_17	CALL_5
0x103c	        0x488d4858	                   lea rcx, [rax + 0x58]	       280	update-index.c	FUNCTION_17	CALL_5
0x1040	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       280	update-index.c	FUNCTION_17	CALL_5
0x1044	          0x4889c6	                            mov rsi, rax	       280	update-index.c	FUNCTION_17	CALL_5
0x1047	          0x4889cf	                            mov rdi, rcx	       280	update-index.c	FUNCTION_17	CALL_5
0x104a	      0xe800000000	                          call 0x400108f	       280	update-index.c	FUNCTION_17	CALL_5
0x104f	      0xbf00000000	                              mov edi, 0	       281	update-index.c	FUNCTION_17	CALL_6
0x1054	      0xe850f2ffff	                call sym.create_ce_flags	       281	update-index.c	FUNCTION_17	CALL_6
0x1059	            0x89c2	                            mov edx, eax	       281	update-index.c	FUNCTION_17	CALL_6
0x105b	        0x488b45f8	                mov rax, qword [rbp - 8]	       281	update-index.c	FUNCTION_17	CALL_6
0x105f	          0x895038	             mov dword [rax + 0x38], edx	       281	update-index.c	FUNCTION_17	CALL_6
0x1062	          0x8b55dc	             mov edx, dword [rbp - 0x24]	       282	update-index.c	FUNCTION_17
0x1065	        0x488b45f8	                mov rax, qword [rbp - 8]	       282	update-index.c	FUNCTION_17
0x1069	          0x89503c	             mov dword [rax + 0x3c], edx	       282	update-index.c	FUNCTION_17
0x106c	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       283	update-index.c	FUNCTION_17	CALL_7
0x1070	        0x488b45f8	                mov rax, qword [rbp - 8]	       283	update-index.c	FUNCTION_17	CALL_7
0x1074	          0x4889d6	                            mov rsi, rdx	       283	update-index.c	FUNCTION_17	CALL_7
0x1077	          0x4889c7	                            mov rdi, rax	       283	update-index.c	FUNCTION_17	CALL_7
0x107a	      0xe800000000	                          call 0x40010bf	       283	update-index.c	FUNCTION_17	CALL_7
0x107f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       284	update-index.c	FUNCTION_17	CALL_8
0x1083	          0x8b5018	            mov edx, dword [rax + 0x18] 	       284	update-index.c	FUNCTION_17	CALL_8
0x1086	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       284	update-index.c	FUNCTION_17	CALL_8
0x108a	            0x89d6	                            mov esi, edx	       284	update-index.c	FUNCTION_17	CALL_8
0x108c	          0x4889c7	                            mov rdi, rax	       284	update-index.c	FUNCTION_17	CALL_8
0x108f	      0xe87ef2ffff	              call sym.ce_mode_from_stat	       284	update-index.c	FUNCTION_17	CALL_8
0x1094	            0x89c2	                            mov edx, eax	       284	update-index.c	FUNCTION_17	CALL_8
0x1096	        0x488b45f8	                mov rax, qword [rbp - 8]	       284	update-index.c	FUNCTION_17	CALL_8
0x109a	          0x895034	             mov dword [rax + 0x34], edx	       284	update-index.c	FUNCTION_17	CALL_8
0x109d	    0x8b0500000000	            mov eax, dword [0x040010e3] 	       286	update-index.c	FUNCTION_17	IF_2	CALL_9
0x10a3	            0x85c0	                           test eax, eax	       286	update-index.c	FUNCTION_17	IF_2	CALL_9
0x10a5	           0xf94c0	                                 sete al	       286	update-index.c	FUNCTION_17	IF_2	CALL_9
0x10a8	           0xfb6c8	                           movzx ecx, al	       286	update-index.c	FUNCTION_17	IF_2	CALL_9
0x10ab	        0x488b45f8	                mov rax, qword [rbp - 8]	       286	update-index.c	FUNCTION_17	IF_2	CALL_9
0x10af	        0x488d7844	                   lea rdi, [rax + 0x44]	       286	update-index.c	FUNCTION_17	IF_2	CALL_9
0x10b3	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       286	update-index.c	FUNCTION_17	IF_2	CALL_9
0x10b7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       286	update-index.c	FUNCTION_17	IF_2	CALL_9
0x10bb	          0x4889c6	                            mov rsi, rax	       286	update-index.c	FUNCTION_17	IF_2	CALL_9
0x10be	      0xe800000000	                          call 0x4001103	       286	update-index.c	FUNCTION_17	IF_2	CALL_9
0x10c3	            0x85c0	                           test eax, eax	       286	update-index.c	FUNCTION_17	IF_2	CALL_9
0x10c5	            0x7413	                            je 0x400111a	       286	update-index.c	FUNCTION_17	IF_2	CALL_9
0x10c7	        0x488b45f8	                mov rax, qword [rbp - 8]	       288	update-index.c	FUNCTION_17	IF_2	CALL_10
0x10cb	          0x4889c7	                            mov rdi, rax	       288	update-index.c	FUNCTION_17	IF_2	CALL_10
0x10ce	      0xe800000000	                          call 0x4001113	       288	update-index.c	FUNCTION_17	IF_2	CALL_10
0x10d3	      0xb8ffffffff	                     mov eax, 0xffffffff	       289	update-index.c	FUNCTION_17	IF_2
0x10d8	            0xeb70	                           jmp 0x400118a	       289	update-index.c	FUNCTION_17	IF_2
0x10da	    0x8b0500000000	            mov eax, dword [0x04001120] 	       291	update-index.c	FUNCTION_17
0x10e0	            0x85c0	                           test eax, eax	       291	update-index.c	FUNCTION_17
0x10e2	           0xf95c0	                                setne al	       291	update-index.c	FUNCTION_17
0x10e5	           0xfb6c0	                           movzx eax, al	       291	update-index.c	FUNCTION_17
0x10e8	          0x8945f4	              mov dword [rbp - 0xc], eax	       291	update-index.c	FUNCTION_17
0x10eb	    0x8b0500000000	            mov eax, dword [0x04001131] 	       292	update-index.c	FUNCTION_17
0x10f1	            0x85c0	                           test eax, eax	       292	update-index.c	FUNCTION_17
0x10f3	            0x7407	                            je 0x400113c	       292	update-index.c	FUNCTION_17
0x10f5	      0xb802000000	                              mov eax, 2	       292	update-index.c	FUNCTION_17
0x10fa	            0xeb05	                           jmp 0x4001141	       292	update-index.c	FUNCTION_17
0x10fc	      0xb800000000	                              mov eax, 0	       292	update-index.c	FUNCTION_17
0x1101	           0x945f4	               or dword [rbp - 0xc], eax	       292	update-index.c	FUNCTION_17
0x1104	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       293	update-index.c	FUNCTION_17	IF_3	CALL_11
0x1107	        0x488b45f8	                mov rax, qword [rbp - 8]	       293	update-index.c	FUNCTION_17	IF_3	CALL_11
0x110b	          0x4889c6	                            mov rsi, rax	       293	update-index.c	FUNCTION_17	IF_3	CALL_11
0x110e	      0xbf00000000	                              mov edi, 0	       293	update-index.c	FUNCTION_17	IF_3	CALL_11
0x1113	      0xe800000000	                          call 0x4001158	       293	update-index.c	FUNCTION_17	IF_3	CALL_11
0x1118	            0x85c0	                           test eax, eax	       293	update-index.c	FUNCTION_17	IF_3	CALL_11
0x111a	            0x7429	                            je 0x4001185	       293	update-index.c	FUNCTION_17	IF_3	CALL_11
0x111c	        0x488b45f8	                mov rax, qword [rbp - 8]	       294	update-index.c	FUNCTION_17	IF_3	CALL_12
0x1120	          0x4889c7	                            mov rdi, rax	       294	update-index.c	FUNCTION_17	IF_3	CALL_12
0x1123	      0xe800000000	                          call 0x4001168	       294	update-index.c	FUNCTION_17	IF_3	CALL_12
0x1128	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       295	update-index.c	FUNCTION_17	IF_3	CALL_13
0x112c	          0x4889c6	                            mov rsi, rax	       295	update-index.c	FUNCTION_17	IF_3	CALL_13
0x112f	      0xbf00000000	                              mov edi, 0	       295	update-index.c	FUNCTION_17	IF_3	CALL_13
0x1134	      0xb800000000	                              mov eax, 0	       295	update-index.c	FUNCTION_17	IF_3	CALL_13
0x1139	      0xe800000000	                          call 0x400117e	       295	update-index.c	FUNCTION_17	IF_3	CALL_13
0x113e	      0xe8bdeeffff	                    call sym.const_error	       295	update-index.c	FUNCTION_17	IF_3	CALL_13
0x1143	            0xeb05	                           jmp 0x400118a	       295	update-index.c	FUNCTION_17	IF_3	CALL_13
0x1145	      0xb800000000	                              mov eax, 0	       297	update-index.c	FUNCTION_17
0x114a	              0xc9	                                   leave	       298	update-index.c	FUNCTION_17
0x114b	              0xc3	                                     ret	       298	update-index.c	FUNCTION_17
stdin_callback	FOR,0:DO,0:functions,0:ELSE,0:CALL,1:SWITCH,0:IF,1:WHILE,0	26
0x2760	              0x55	                                push rbp	       873	update-index.c	FUNCTION_37
0x2761	          0x4889e5	                            mov rbp, rsp	       873	update-index.c	FUNCTION_37
0x2764	        0x4883ec30	                           sub rsp, 0x30	       873	update-index.c	FUNCTION_37
0x2768	        0x48897de8	             mov qword [rbp - 0x18], rdi	       873	update-index.c	FUNCTION_37
0x276c	        0x488975e0	             mov qword [rbp - 0x20], rsi	       873	update-index.c	FUNCTION_37
0x2770	          0x8955dc	             mov dword [rbp - 0x24], edx	       873	update-index.c	FUNCTION_37
0x2773	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       874	update-index.c	FUNCTION_37
0x2777	        0x488b4010	            mov rax, qword [rax + 0x10] 	       874	update-index.c	FUNCTION_37
0x277b	        0x488945f8	                mov qword [rbp - 8], rax	       874	update-index.c	FUNCTION_37
0x277f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       876	update-index.c	FUNCTION_37	IF_1
0x2783	          0x8b4010	            mov eax, dword [rax + 0x10] 	       876	update-index.c	FUNCTION_37	IF_1
0x2786	          0x83f801	                              cmp eax, 1	       876	update-index.c	FUNCTION_37	IF_1
0x2789	            0x7421	                            je 0x40027ec	       876	update-index.c	FUNCTION_37	IF_1
0x278b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       877	update-index.c	FUNCTION_37	CALL_1
0x278f	        0x488b4008	                mov rax, qword [rax + 8]	       877	update-index.c	FUNCTION_37	CALL_1
0x2793	          0x4889c6	                            mov rsi, rax	       877	update-index.c	FUNCTION_37	CALL_1
0x2796	      0xbf00000000	                              mov edi, 0	       877	update-index.c	FUNCTION_37	CALL_1
0x279b	      0xb800000000	                              mov eax, 0	       877	update-index.c	FUNCTION_37	CALL_1
0x27a0	      0xe800000000	                          call 0x40027e5	       877	update-index.c	FUNCTION_37	CALL_1
0x27a5	      0xe856d8ffff	                    call sym.const_error	       877	update-index.c	FUNCTION_37	CALL_1
0x27aa	            0xeb0f	                           jmp 0x40027fb	       877	update-index.c	FUNCTION_37	CALL_1
0x27ac	        0x488b45f8	                mov rax, qword [rbp - 8]	       878	update-index.c	FUNCTION_37
0x27b0	    0xc70001000000	                      mov dword [rax], 1	       878	update-index.c	FUNCTION_37
0x27b6	      0xb800000000	                              mov eax, 0	       879	update-index.c	FUNCTION_37
0x27bb	              0xc9	                                   leave	       880	update-index.c	FUNCTION_37
0x27bc	              0xc3	                                     ret	       880	update-index.c	FUNCTION_37
update_one	FOR,0:DO,0:functions,0:ELSE,0:CALL,14:SWITCH,0:IF,10:WHILE,0	113
0x16fb	              0x55	                                push rbp	       451	update-index.c	FUNCTION_22
0x16fc	          0x4889e5	                            mov rbp, rsp	       451	update-index.c	FUNCTION_22
0x16ff	        0x4883ec10	                           sub rsp, 0x10	       451	update-index.c	FUNCTION_22
0x1703	        0x48897df8	                mov qword [rbp - 8], rdi	       451	update-index.c	FUNCTION_22
0x1707	        0x488b45f8	                mov rax, qword [rbp - 8]	       452	update-index.c	FUNCTION_22	IF_1	CALL_1
0x170b	          0x4889c7	                            mov rdi, rax	       452	update-index.c	FUNCTION_22	IF_1	CALL_1
0x170e	      0xe800000000	                          call 0x4001753	       452	update-index.c	FUNCTION_22	IF_1	CALL_1
0x1713	            0x85c0	                           test eax, eax	       452	update-index.c	FUNCTION_22	IF_1	CALL_1
0x1715	            0x7522	                           jne 0x4001779	       452	update-index.c	FUNCTION_22	IF_1	CALL_1
0x1717	    0x488b05000000	            mov rax, qword [0x0400175e] 	       453	update-index.c	FUNCTION_22	IF_1	CALL_2
0x171e	        0x488b55f8	                mov rdx, qword [rbp - 8]	       453	update-index.c	FUNCTION_22	IF_1	CALL_2
0x1722	      0xbe00000000	                              mov esi, 0	       453	update-index.c	FUNCTION_22	IF_1	CALL_2
0x1727	          0x4889c7	                            mov rdi, rax	       453	update-index.c	FUNCTION_22	IF_1	CALL_2
0x172a	      0xb800000000	                              mov eax, 0	       453	update-index.c	FUNCTION_22	IF_1	CALL_2
0x172f	      0xe800000000	                          call 0x4001774	       453	update-index.c	FUNCTION_22	IF_1	CALL_2
0x1734	      0xe96a010000	                           jmp 0x40018e3	       454	update-index.c	FUNCTION_22	IF_1
0x1739	    0x8b0500000000	            mov eax, dword [0x0400177f] 	       456	update-index.c	FUNCTION_22	IF_2
0x173f	            0x85c0	                           test eax, eax	       456	update-index.c	FUNCTION_22	IF_2
0x1741	            0x743e	                            je 0x40017c1	       456	update-index.c	FUNCTION_22	IF_2
0x1743	    0x8b0500000000	            mov eax, dword [0x04001789] 	       457	update-index.c	FUNCTION_22	IF_2	IF_3	CALL_3
0x1749	          0x83f801	                              cmp eax, 1	       457	update-index.c	FUNCTION_22	IF_2	IF_3	CALL_3
0x174c	           0xf94c0	                                 sete al	       457	update-index.c	FUNCTION_22	IF_2	IF_3	CALL_3
0x174f	           0xfb6d0	                           movzx edx, al	       457	update-index.c	FUNCTION_22	IF_2	IF_3	CALL_3
0x1752	        0x488b45f8	                mov rax, qword [rbp - 8]	       457	update-index.c	FUNCTION_22	IF_2	IF_3	CALL_3
0x1756	      0xbe00800000	                         mov esi, 0x8000	       457	update-index.c	FUNCTION_22	IF_2	IF_3	CALL_3
0x175b	          0x4889c7	                            mov rdi, rax	       457	update-index.c	FUNCTION_22	IF_2	IF_3	CALL_3
0x175e	      0xe84cf6ffff	                  call sym.mark_ce_flags	       457	update-index.c	FUNCTION_22	IF_2	IF_3	CALL_3
0x1763	            0x85c0	                           test eax, eax	       457	update-index.c	FUNCTION_22	IF_2	IF_3	CALL_3
0x1765	     0xf8431010000	                            je 0x40018dc	       457	update-index.c	FUNCTION_22	IF_2	IF_3	CALL_3
0x176b	        0x488b45f8	                mov rax, qword [rbp - 8]	       458	update-index.c	FUNCTION_22	IF_2	CALL_4
0x176f	          0x4889c6	                            mov rsi, rax	       458	update-index.c	FUNCTION_22	IF_2	CALL_4
0x1772	      0xbf00000000	                              mov edi, 0	       458	update-index.c	FUNCTION_22	IF_2	CALL_4
0x1777	      0xb800000000	                              mov eax, 0	       458	update-index.c	FUNCTION_22	IF_2	CALL_4
0x177c	      0xe800000000	                          call 0x40017c1	       458	update-index.c	FUNCTION_22	IF_2	CALL_4
0x1781	    0x8b0500000000	            mov eax, dword [0x040017c7] 	       461	update-index.c	FUNCTION_22	IF_4
0x1787	            0x85c0	                           test eax, eax	       461	update-index.c	FUNCTION_22	IF_4
0x1789	            0x743e	                            je 0x4001809	       461	update-index.c	FUNCTION_22	IF_4
0x178b	    0x8b0500000000	            mov eax, dword [0x040017d1] 	       462	update-index.c	FUNCTION_22	IF_4	IF_5	CALL_5
0x1791	          0x83f801	                              cmp eax, 1	       462	update-index.c	FUNCTION_22	IF_4	IF_5	CALL_5
0x1794	           0xf94c0	                                 sete al	       462	update-index.c	FUNCTION_22	IF_4	IF_5	CALL_5
0x1797	           0xfb6d0	                           movzx edx, al	       462	update-index.c	FUNCTION_22	IF_4	IF_5	CALL_5
0x179a	        0x488b45f8	                mov rax, qword [rbp - 8]	       462	update-index.c	FUNCTION_22	IF_4	IF_5	CALL_5
0x179e	      0xbe00000040	                     mov esi, 0x40000000	       462	update-index.c	FUNCTION_22	IF_4	IF_5	CALL_5
0x17a3	          0x4889c7	                            mov rdi, rax	       462	update-index.c	FUNCTION_22	IF_4	IF_5	CALL_5
0x17a6	      0xe804f6ffff	                  call sym.mark_ce_flags	       462	update-index.c	FUNCTION_22	IF_4	IF_5	CALL_5
0x17ab	            0x85c0	                           test eax, eax	       462	update-index.c	FUNCTION_22	IF_4	IF_5	CALL_5
0x17ad	     0xf84ec000000	                            je 0x40018df	       462	update-index.c	FUNCTION_22	IF_4	IF_5	CALL_5
0x17b3	        0x488b45f8	                mov rax, qword [rbp - 8]	       463	update-index.c	FUNCTION_22	IF_4	CALL_6
0x17b7	          0x4889c6	                            mov rsi, rax	       463	update-index.c	FUNCTION_22	IF_4	CALL_6
0x17ba	      0xbf00000000	                              mov edi, 0	       463	update-index.c	FUNCTION_22	IF_4	CALL_6
0x17bf	      0xb800000000	                              mov eax, 0	       463	update-index.c	FUNCTION_22	IF_4	CALL_6
0x17c4	      0xe800000000	                          call 0x4001809	       463	update-index.c	FUNCTION_22	IF_4	CALL_6
0x17c9	    0x8b0500000000	            mov eax, dword [0x0400180f] 	       466	update-index.c	FUNCTION_22	IF_6
0x17cf	            0x85c0	                           test eax, eax	       466	update-index.c	FUNCTION_22	IF_6
0x17d1	            0x743e	                            je 0x4001851	       466	update-index.c	FUNCTION_22	IF_6
0x17d3	    0x8b0500000000	            mov eax, dword [0x04001819] 	       467	update-index.c	FUNCTION_22	IF_6	IF_7	CALL_7
0x17d9	          0x83f801	                              cmp eax, 1	       467	update-index.c	FUNCTION_22	IF_6	IF_7	CALL_7
0x17dc	           0xf94c0	                                 sete al	       467	update-index.c	FUNCTION_22	IF_6	IF_7	CALL_7
0x17df	           0xfb6d0	                           movzx edx, al	       467	update-index.c	FUNCTION_22	IF_6	IF_7	CALL_7
0x17e2	        0x488b45f8	                mov rax, qword [rbp - 8]	       467	update-index.c	FUNCTION_22	IF_6	IF_7	CALL_7
0x17e6	      0xbe00002000	                       mov esi, 0x200000	       467	update-index.c	FUNCTION_22	IF_6	IF_7	CALL_7
0x17eb	          0x4889c7	                            mov rdi, rax	       467	update-index.c	FUNCTION_22	IF_6	IF_7	CALL_7
0x17ee	      0xe8bcf5ffff	                  call sym.mark_ce_flags	       467	update-index.c	FUNCTION_22	IF_6	IF_7	CALL_7
0x17f3	            0x85c0	                           test eax, eax	       467	update-index.c	FUNCTION_22	IF_6	IF_7	CALL_7
0x17f5	     0xf84a7000000	                            je 0x40018e2	       467	update-index.c	FUNCTION_22	IF_6	IF_7	CALL_7
0x17fb	        0x488b45f8	                mov rax, qword [rbp - 8]	       468	update-index.c	FUNCTION_22	IF_6	CALL_8
0x17ff	          0x4889c6	                            mov rsi, rax	       468	update-index.c	FUNCTION_22	IF_6	CALL_8
0x1802	      0xbf00000000	                              mov edi, 0	       468	update-index.c	FUNCTION_22	IF_6	CALL_8
0x1807	      0xb800000000	                              mov eax, 0	       468	update-index.c	FUNCTION_22	IF_6	CALL_8
0x180c	      0xe800000000	                          call 0x4001851	       468	update-index.c	FUNCTION_22	IF_6	CALL_8
0x1811	    0x8b0500000000	            mov eax, dword [0x04001857] 	       472	update-index.c	FUNCTION_22	IF_8
0x1817	            0x85c0	                           test eax, eax	       472	update-index.c	FUNCTION_22	IF_8
0x1819	            0x7443	                            je 0x400189e	       472	update-index.c	FUNCTION_22	IF_8
0x181b	        0x488b45f8	                mov rax, qword [rbp - 8]	       473	update-index.c	FUNCTION_22	IF_8	IF_9	CALL_9
0x181f	          0x4889c6	                            mov rsi, rax	       473	update-index.c	FUNCTION_22	IF_8	IF_9	CALL_9
0x1822	      0xbf00000000	                              mov edi, 0	       473	update-index.c	FUNCTION_22	IF_8	IF_9	CALL_9
0x1827	      0xe800000000	                          call 0x400186c	       473	update-index.c	FUNCTION_22	IF_8	IF_9	CALL_9
0x182c	            0x85c0	                           test eax, eax	       473	update-index.c	FUNCTION_22	IF_8	IF_9	CALL_9
0x182e	            0x7416	                            je 0x4001886	       473	update-index.c	FUNCTION_22	IF_8	IF_9	CALL_9
0x1830	        0x488b45f8	                mov rax, qword [rbp - 8]	       474	update-index.c	FUNCTION_22	IF_8	CALL_10
0x1834	          0x4889c6	                            mov rsi, rax	       474	update-index.c	FUNCTION_22	IF_8	CALL_10
0x1837	      0xbf00000000	                              mov edi, 0	       474	update-index.c	FUNCTION_22	IF_8	CALL_10
0x183c	      0xb800000000	                              mov eax, 0	       474	update-index.c	FUNCTION_22	IF_8	CALL_10
0x1841	      0xe800000000	                          call 0x4001886	       474	update-index.c	FUNCTION_22	IF_8	CALL_10
0x1846	        0x488b45f8	                mov rax, qword [rbp - 8]	       475	update-index.c	FUNCTION_22	IF_8	CALL_11
0x184a	          0x4889c6	                            mov rsi, rax	       475	update-index.c	FUNCTION_22	IF_8	CALL_11
0x184d	      0xbf00000000	                              mov edi, 0	       475	update-index.c	FUNCTION_22	IF_8	CALL_11
0x1852	      0xb800000000	                              mov eax, 0	       475	update-index.c	FUNCTION_22	IF_8	CALL_11
0x1857	      0xe80dedffff	                         call sym.report	       475	update-index.c	FUNCTION_22	IF_8	CALL_11
0x185c	            0xeb45	                           jmp 0x40018e3	       476	update-index.c	FUNCTION_22	IF_8
0x185e	        0x488b45f8	                mov rax, qword [rbp - 8]	       478	update-index.c	FUNCTION_22	IF_10	CALL_12
0x1862	          0x4889c7	                            mov rdi, rax	       478	update-index.c	FUNCTION_22	IF_10	CALL_12
0x1865	      0xe8a6faffff	                   call sym.process_path	       478	update-index.c	FUNCTION_22	IF_10	CALL_12
0x186a	            0x85c0	                           test eax, eax	       478	update-index.c	FUNCTION_22	IF_10	CALL_12
0x186c	            0x7416	                            je 0x40018c4	       478	update-index.c	FUNCTION_22	IF_10	CALL_12
0x186e	        0x488b45f8	                mov rax, qword [rbp - 8]	       479	update-index.c	FUNCTION_22	CALL_13
0x1872	          0x4889c6	                            mov rsi, rax	       479	update-index.c	FUNCTION_22	CALL_13
0x1875	      0xbf00000000	                              mov edi, 0	       479	update-index.c	FUNCTION_22	CALL_13
0x187a	      0xb800000000	                              mov eax, 0	       479	update-index.c	FUNCTION_22	CALL_13
0x187f	      0xe800000000	                          call 0x40018c4	       479	update-index.c	FUNCTION_22	CALL_13
0x1884	        0x488b45f8	                mov rax, qword [rbp - 8]	       480	update-index.c	FUNCTION_22	CALL_14
0x1888	          0x4889c6	                            mov rsi, rax	       480	update-index.c	FUNCTION_22	CALL_14
0x188b	      0xbf00000000	                              mov edi, 0	       480	update-index.c	FUNCTION_22	CALL_14
0x1890	      0xb800000000	                              mov eax, 0	       480	update-index.c	FUNCTION_22	CALL_14
0x1895	      0xe8cfecffff	                         call sym.report	       480	update-index.c	FUNCTION_22	CALL_14
0x189a	            0xeb07	                           jmp 0x40018e3	       480	update-index.c	FUNCTION_22	CALL_14
0x189c	              0x90	                                     nop	       459	update-index.c	FUNCTION_22	IF_2
0x189d	            0xeb04	                           jmp 0x40018e3	       459	update-index.c	FUNCTION_22	IF_2
0x189f	              0x90	                                     nop	       464	update-index.c	FUNCTION_22	IF_4
0x18a0	            0xeb01	                           jmp 0x40018e3	       464	update-index.c	FUNCTION_22	IF_4
0x18a2	              0x90	                                     nop	       469	update-index.c	FUNCTION_22	IF_6
0x18a3	              0xc9	                                   leave	       481	update-index.c	FUNCTION_22
0x18a4	              0xc3	                                     ret	       481	update-index.c	FUNCTION_22
strbuf_addstr	FOR,0:DO,0:functions,0:ELSE,0:CALL,2:SWITCH,0:IF,0:WHILE,0	17
0x218	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_86
0x219	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_86
0x21c	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_86
0x220	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_86
0x224	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_86
0x228	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_86	CALL_2
0x22c	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_86	CALL_2
0x22f	      0xe800000000	                          call 0x4000274	       279	strbuf.h	FUNCTION_86	CALL_2
0x234	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_86	CALL_2
0x237	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_86	CALL_2
0x23b	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_86	CALL_2
0x23f	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_86	CALL_2
0x242	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_86	CALL_2
0x245	      0xe800000000	                          call 0x400028a	       279	strbuf.h	FUNCTION_86	CALL_2
0x24a	              0x90	                                     nop	       280	strbuf.h	FUNCTION_86
0x24b	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_86
0x24c	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_86
cacheinfo_callback	FOR,0:DO,0:functions,0:ELSE,0:CALL,8:SWITCH,0:IF,4:WHILE,0	116
0x2538	              0x55	                                push rbp	       837	update-index.c	FUNCTION_35
0x2539	          0x4889e5	                            mov rbp, rsp	       837	update-index.c	FUNCTION_35
0x253c	        0x4883ec50	                           sub rsp, 0x50	       837	update-index.c	FUNCTION_35
0x2540	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       837	update-index.c	FUNCTION_35
0x2544	        0x488975c0	             mov qword [rbp - 0x40], rsi	       837	update-index.c	FUNCTION_35
0x2548	          0x8955bc	             mov dword [rbp - 0x44], edx	       837	update-index.c	FUNCTION_35
0x254b	    0x64488b042528	                mov rax, qword fs:[0x28]	       837	update-index.c	FUNCTION_35
0x2554	        0x488945f8	                mov qword [rbp - 8], rax	       837	update-index.c	FUNCTION_35
0x2558	            0x31c0	                            xor eax, eax	       837	update-index.c	FUNCTION_35
0x255a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       842	update-index.c	FUNCTION_35	IF_1	CALL_1
0x255e	          0x488b00	                    mov rax, qword [rax]	       842	update-index.c	FUNCTION_35	IF_1	CALL_1
0x2561	        0x4883c008	                              add rax, 8	       842	update-index.c	FUNCTION_35	IF_1	CALL_1
0x2565	          0x488b00	                    mov rax, qword [rax]	       842	update-index.c	FUNCTION_35	IF_1	CALL_1
0x2568	        0x488d4dd8	                   lea rcx, [rbp - 0x28]	       842	update-index.c	FUNCTION_35	IF_1	CALL_1
0x256c	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       842	update-index.c	FUNCTION_35	IF_1	CALL_1
0x2570	        0x488d75d4	                   lea rsi, [rbp - 0x2c]	       842	update-index.c	FUNCTION_35	IF_1	CALL_1
0x2574	          0x4889c7	                            mov rdi, rax	       842	update-index.c	FUNCTION_35	IF_1	CALL_1
0x2577	      0xe8bbfeffff	      call sym.parse_new_style_cacheinfo	       842	update-index.c	FUNCTION_35	IF_1	CALL_1
0x257c	            0x85c0	                           test eax, eax	       842	update-index.c	FUNCTION_35	IF_1	CALL_1
0x257e	            0x755e	                           jne 0x400261e	       842	update-index.c	FUNCTION_35	IF_1	CALL_1
0x2580	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       843	update-index.c	FUNCTION_35	IF_1	IF_2	CALL_2
0x2584	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       843	update-index.c	FUNCTION_35	IF_1	IF_2	CALL_2
0x2587	        0x488d75e0	                   lea rsi, [rbp - 0x20]	       843	update-index.c	FUNCTION_35	IF_1	IF_2	CALL_2
0x258b	      0xb900000000	                              mov ecx, 0	       843	update-index.c	FUNCTION_35	IF_1	IF_2	CALL_2
0x2590	            0x89c7	                            mov edi, eax	       843	update-index.c	FUNCTION_35	IF_1	IF_2	CALL_2
0x2592	      0xe84cefffff	                  call sym.add_cacheinfo	       843	update-index.c	FUNCTION_35	IF_1	IF_2	CALL_2
0x2597	            0x85c0	                           test eax, eax	       843	update-index.c	FUNCTION_35	IF_1	IF_2	CALL_2
0x2599	            0x7416	                            je 0x40025f1	       843	update-index.c	FUNCTION_35	IF_1	IF_2	CALL_2
0x259b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       844	update-index.c	FUNCTION_35	IF_1	CALL_3
0x259f	          0x4889c6	                            mov rsi, rax	       844	update-index.c	FUNCTION_35	IF_1	CALL_3
0x25a2	      0xbf00000000	                              mov edi, 0	       844	update-index.c	FUNCTION_35	IF_1	CALL_3
0x25a7	      0xb800000000	                              mov eax, 0	       844	update-index.c	FUNCTION_35	IF_1	CALL_3
0x25ac	      0xe800000000	                          call 0x40025f1	       844	update-index.c	FUNCTION_35	IF_1	CALL_3
0x25b1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       845	update-index.c	FUNCTION_35	IF_1
0x25b5	          0x488b00	                    mov rax, qword [rax]	       845	update-index.c	FUNCTION_35	IF_1
0x25b8	        0x488d5008	                      lea rdx, [rax + 8]	       845	update-index.c	FUNCTION_35	IF_1
0x25bc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       845	update-index.c	FUNCTION_35	IF_1
0x25c0	          0x488910	                    mov qword [rax], rdx	       845	update-index.c	FUNCTION_35	IF_1
0x25c3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       846	update-index.c	FUNCTION_35	IF_1
0x25c7	          0x8b4010	            mov eax, dword [rax + 0x10] 	       846	update-index.c	FUNCTION_35	IF_1
0x25ca	          0x8d50ff	                      lea edx, [rax - 1]	       846	update-index.c	FUNCTION_35	IF_1
0x25cd	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       846	update-index.c	FUNCTION_35	IF_1
0x25d1	          0x895010	             mov dword [rax + 0x10], edx	       846	update-index.c	FUNCTION_35	IF_1
0x25d4	      0xb800000000	                              mov eax, 0	       847	update-index.c	FUNCTION_35	IF_1
0x25d9	      0xe9ea000000	                           jmp 0x4002708	       847	update-index.c	FUNCTION_35	IF_1
0x25de	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       849	update-index.c	FUNCTION_35	IF_3
0x25e2	          0x8b4010	            mov eax, dword [rax + 0x10] 	       849	update-index.c	FUNCTION_35	IF_3
0x25e5	          0x83f803	                              cmp eax, 3	       849	update-index.c	FUNCTION_35	IF_3
0x25e8	            0x7f19	                            jg 0x4002643	       849	update-index.c	FUNCTION_35	IF_3
0x25ea	      0xbf00000000	                              mov edi, 0	       850	update-index.c	FUNCTION_35	CALL_4
0x25ef	      0xb800000000	                              mov eax, 0	       850	update-index.c	FUNCTION_35	CALL_4
0x25f4	      0xe800000000	                          call 0x4002639	       850	update-index.c	FUNCTION_35	CALL_4
0x25f9	      0xe802daffff	                    call sym.const_error	       850	update-index.c	FUNCTION_35	CALL_4
0x25fe	      0xe9c5000000	                           jmp 0x4002708	       850	update-index.c	FUNCTION_35	CALL_4
0x2603	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       851	update-index.c	FUNCTION_35	IF_4	CALL_5
0x2607	          0x488b00	                    mov rax, qword [rax]	       851	update-index.c	FUNCTION_35	IF_4	CALL_5
0x260a	        0x488d5008	                      lea rdx, [rax + 8]	       851	update-index.c	FUNCTION_35	IF_4	CALL_5
0x260e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       851	update-index.c	FUNCTION_35	IF_4	CALL_5
0x2612	          0x488910	                    mov qword [rax], rdx	       851	update-index.c	FUNCTION_35	IF_4	CALL_5
0x2615	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       851	update-index.c	FUNCTION_35	IF_4	CALL_5
0x2619	          0x488b00	                    mov rax, qword [rax]	       851	update-index.c	FUNCTION_35	IF_4	CALL_5
0x261c	          0x488b00	                    mov rax, qword [rax]	       851	update-index.c	FUNCTION_35	IF_4	CALL_5
0x261f	        0x488d55d4	                   lea rdx, [rbp - 0x2c]	       851	update-index.c	FUNCTION_35	IF_4	CALL_5
0x2623	      0xbe08000000	                              mov esi, 8	       851	update-index.c	FUNCTION_35	IF_4	CALL_5
0x2628	          0x4889c7	                            mov rdi, rax	       851	update-index.c	FUNCTION_35	IF_4	CALL_5
0x262b	      0xe8dbd9ffff	                     call sym.strtoul_ui	       851	update-index.c	FUNCTION_35	IF_4	CALL_5
0x2630	            0x85c0	                           test eax, eax	       851	update-index.c	FUNCTION_35	IF_4	CALL_5
0x2632	            0x7562	                           jne 0x40026d6	       851	update-index.c	FUNCTION_35	IF_4	CALL_5
0x2634	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       852	update-index.c	FUNCTION_35	IF_4	CALL_6
0x2638	          0x488b00	                    mov rax, qword [rax]	       852	update-index.c	FUNCTION_35	IF_4	CALL_6
0x263b	        0x488d5008	                      lea rdx, [rax + 8]	       852	update-index.c	FUNCTION_35	IF_4	CALL_6
0x263f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       851	update-index.c	FUNCTION_35	IF_4	CALL_5
0x2643	          0x488910	                    mov qword [rax], rdx	       851	update-index.c	FUNCTION_35	IF_4	CALL_5
0x2646	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       852	update-index.c	FUNCTION_35	IF_4	CALL_6
0x264a	          0x488b00	                    mov rax, qword [rax]	       852	update-index.c	FUNCTION_35	IF_4	CALL_6
0x264d	          0x488b00	                    mov rax, qword [rax]	       852	update-index.c	FUNCTION_35	IF_4	CALL_6
0x2650	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       852	update-index.c	FUNCTION_35	IF_4	CALL_6
0x2654	          0x4889d6	                            mov rsi, rdx	       852	update-index.c	FUNCTION_35	IF_4	CALL_6
0x2657	          0x4889c7	                            mov rdi, rax	       852	update-index.c	FUNCTION_35	IF_4	CALL_6
0x265a	      0xe800000000	                          call 0x400269f	       852	update-index.c	FUNCTION_35	IF_4	CALL_6
0x265f	            0x85c0	                           test eax, eax	       851	update-index.c	FUNCTION_35	IF_4	CALL_5
0x2661	            0x7533	                           jne 0x40026d6	       851	update-index.c	FUNCTION_35	IF_4	CALL_5
0x2663	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       853	update-index.c	FUNCTION_35	IF_4	CALL_7
0x2667	          0x488b00	                    mov rax, qword [rax]	       853	update-index.c	FUNCTION_35	IF_4	CALL_7
0x266a	        0x488d5008	                      lea rdx, [rax + 8]	       853	update-index.c	FUNCTION_35	IF_4	CALL_7
0x266e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       852	update-index.c	FUNCTION_35	IF_4	CALL_6
0x2672	          0x488910	                    mov qword [rax], rdx	       852	update-index.c	FUNCTION_35	IF_4	CALL_6
0x2675	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       853	update-index.c	FUNCTION_35	IF_4	CALL_7
0x2679	          0x488b00	                    mov rax, qword [rax]	       853	update-index.c	FUNCTION_35	IF_4	CALL_7
0x267c	          0x488b10	                    mov rdx, qword [rax]	       853	update-index.c	FUNCTION_35	IF_4	CALL_7
0x267f	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       853	update-index.c	FUNCTION_35	IF_4	CALL_7
0x2682	        0x488d75e0	                   lea rsi, [rbp - 0x20]	       853	update-index.c	FUNCTION_35	IF_4	CALL_7
0x2686	      0xb900000000	                              mov ecx, 0	       853	update-index.c	FUNCTION_35	IF_4	CALL_7
0x268b	            0x89c7	                            mov edi, eax	       853	update-index.c	FUNCTION_35	IF_4	CALL_7
0x268d	      0xe851eeffff	                  call sym.add_cacheinfo	       853	update-index.c	FUNCTION_35	IF_4	CALL_7
0x2692	            0x85c0	                           test eax, eax	       852	update-index.c	FUNCTION_35	IF_4	CALL_6
0x2694	            0x741c	                            je 0x40026f2	       852	update-index.c	FUNCTION_35	IF_4	CALL_6
0x2696	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       854	update-index.c	FUNCTION_35	CALL_8
0x269a	          0x488b00	                    mov rax, qword [rax]	       854	update-index.c	FUNCTION_35	CALL_8
0x269d	          0x488b00	                    mov rax, qword [rax]	       854	update-index.c	FUNCTION_35	CALL_8
0x26a0	          0x4889c6	                            mov rsi, rax	       854	update-index.c	FUNCTION_35	CALL_8
0x26a3	      0xbf00000000	                              mov edi, 0	       854	update-index.c	FUNCTION_35	CALL_8
0x26a8	      0xb800000000	                              mov eax, 0	       854	update-index.c	FUNCTION_35	CALL_8
0x26ad	      0xe800000000	                          call 0x40026f2	       854	update-index.c	FUNCTION_35	CALL_8
0x26b2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       855	update-index.c	FUNCTION_35
0x26b6	          0x8b4010	            mov eax, dword [rax + 0x10] 	       855	update-index.c	FUNCTION_35
0x26b9	          0x8d50fd	                      lea edx, [rax - 3]	       855	update-index.c	FUNCTION_35
0x26bc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       855	update-index.c	FUNCTION_35
0x26c0	          0x895010	             mov dword [rax + 0x10], edx	       855	update-index.c	FUNCTION_35
0x26c3	      0xb800000000	                              mov eax, 0	       856	update-index.c	FUNCTION_35
0x26c8	        0x488b4df8	                mov rcx, qword [rbp - 8]	       857	update-index.c	FUNCTION_35
0x26cc	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       857	update-index.c	FUNCTION_35
0x26d5	            0x7405	                            je 0x400271c	       857	update-index.c	FUNCTION_35
0x26d7	      0xe800000000	                          call 0x400271c	       857	update-index.c	FUNCTION_35
0x26dc	              0xc9	                                   leave	       857	update-index.c	FUNCTION_35
0x26dd	              0xc3	                                     ret	       857	update-index.c	FUNCTION_35
xunlink	FOR,0:DO,0:functions,0:ELSE,0:CALL,4:SWITCH,0:IF,1:WHILE,0	24
0x7c4	              0x55	                                push rbp	       103	update-index.c	FUNCTION_10
0x7c5	          0x4889e5	                            mov rbp, rsp	       103	update-index.c	FUNCTION_10
0x7c8	        0x4883ec10	                           sub rsp, 0x10	       103	update-index.c	FUNCTION_10
0x7cc	        0x48897df8	                mov qword [rbp - 8], rdi	       103	update-index.c	FUNCTION_10
0x7d0	        0x488b45f8	                mov rax, qword [rbp - 8]	       104	update-index.c	FUNCTION_10	CALL_1
0x7d4	          0x4889c7	                            mov rdi, rax	       104	update-index.c	FUNCTION_10	CALL_1
0x7d7	      0xe890feffff	                 call sym.get_mtime_path	       104	update-index.c	FUNCTION_10	CALL_1
0x7dc	        0x488945f8	                mov qword [rbp - 8], rax	       104	update-index.c	FUNCTION_10	CALL_1
0x7e0	        0x488b45f8	                mov rax, qword [rbp - 8]	       105	update-index.c	FUNCTION_10	IF_1	CALL_2
0x7e4	          0x4889c7	                            mov rdi, rax	       105	update-index.c	FUNCTION_10	IF_1	CALL_2
0x7e7	      0xe800000000	                          call 0x400082c	       105	update-index.c	FUNCTION_10	IF_1	CALL_2
0x7ec	            0x85c0	                           test eax, eax	       105	update-index.c	FUNCTION_10	IF_1	CALL_2
0x7ee	            0x7421	                            je 0x4000851	       105	update-index.c	FUNCTION_10	IF_1	CALL_2
0x7f0	      0xbf00000000	                              mov edi, 0	       106	update-index.c	FUNCTION_10	CALL_4
0x7f5	      0xe853faffff	                               call sym.	       106	update-index.c	FUNCTION_10	CALL_4
0x7fa	          0x4889c2	                            mov rdx, rax	       106	update-index.c	FUNCTION_10	CALL_4
0x7fd	        0x488b45f8	                mov rax, qword [rbp - 8]	       106	update-index.c	FUNCTION_10	CALL_4
0x801	          0x4889c6	                            mov rsi, rax	       106	update-index.c	FUNCTION_10	CALL_4
0x804	          0x4889d7	                            mov rdi, rdx	       106	update-index.c	FUNCTION_10	CALL_4
0x807	      0xb800000000	                              mov eax, 0	       106	update-index.c	FUNCTION_10	CALL_4
0x80c	      0xe800000000	                          call 0x4000851	       106	update-index.c	FUNCTION_10	CALL_4
0x811	              0x90	                                     nop	       107	update-index.c	FUNCTION_10
0x812	              0xc9	                                   leave	       107	update-index.c	FUNCTION_10
0x813	              0xc3	                                     ret	       107	update-index.c	FUNCTION_10
parse_new_style_cacheinfo	FOR,0:DO,0:functions,0:ELSE,0:CALL,2:SWITCH,0:IF,3:WHILE,0	72
0x2437	              0x55	                                push rbp	       816	update-index.c	FUNCTION_34
0x2438	          0x4889e5	                            mov rbp, rsp	       816	update-index.c	FUNCTION_34
0x243b	        0x4883ec40	                           sub rsp, 0x40	       816	update-index.c	FUNCTION_34
0x243f	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       816	update-index.c	FUNCTION_34
0x2443	        0x488975d0	             mov qword [rbp - 0x30], rsi	       816	update-index.c	FUNCTION_34
0x2447	        0x488955c8	             mov qword [rbp - 0x38], rdx	       816	update-index.c	FUNCTION_34
0x244b	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       816	update-index.c	FUNCTION_34
0x244f	    0x64488b042528	                mov rax, qword fs:[0x28]	       816	update-index.c	FUNCTION_34
0x2458	        0x488945f8	                mov qword [rbp - 8], rax	       816	update-index.c	FUNCTION_34
0x245c	            0x31c0	                            xor eax, eax	       816	update-index.c	FUNCTION_34
0x245e	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       820	update-index.c	FUNCTION_34	IF_1
0x2463	            0x750a	                           jne 0x40024af	       820	update-index.c	FUNCTION_34	IF_1
0x2465	      0xb8ffffffff	                     mov eax, 0xffffffff	       821	update-index.c	FUNCTION_34	IF_1
0x246a	      0xe9b3000000	                           jmp 0x4002562	       821	update-index.c	FUNCTION_34	IF_1
0x246f	      0xe800000000	                          call 0x40024b4	       823	update-index.c	FUNCTION_34
0x2474	    0xc70000000000	                      mov dword [rax], 0	       823	update-index.c	FUNCTION_34
0x247a	        0x488d4de8	                   lea rcx, [rbp - 0x18]	       824	update-index.c	FUNCTION_34	CALL_1
0x247e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       824	update-index.c	FUNCTION_34	CALL_1
0x2482	      0xba08000000	                              mov edx, 8	       824	update-index.c	FUNCTION_34	CALL_1
0x2487	          0x4889ce	                            mov rsi, rcx	       824	update-index.c	FUNCTION_34	CALL_1
0x248a	          0x4889c7	                            mov rdi, rax	       824	update-index.c	FUNCTION_34	CALL_1
0x248d	      0xe800000000	                          call 0x40024d2	       824	update-index.c	FUNCTION_34	CALL_1
0x2492	        0x488945f0	             mov qword [rbp - 0x10], rax	       824	update-index.c	FUNCTION_34	CALL_1
0x2496	      0xe800000000	                          call 0x40024db	       825	update-index.c	FUNCTION_34	IF_2
0x249b	            0x8b00	                    mov eax, dword [rax]	       825	update-index.c	FUNCTION_34	IF_2
0x249d	            0x85c0	                           test eax, eax	       825	update-index.c	FUNCTION_34	IF_2
0x249f	            0x7521	                           jne 0x4002502	       825	update-index.c	FUNCTION_34	IF_2
0x24a1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       825	update-index.c	FUNCTION_34	IF_2
0x24a5	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	       825	update-index.c	FUNCTION_34	IF_2
0x24a9	            0x7417	                            je 0x4002502	       825	update-index.c	FUNCTION_34	IF_2
0x24ab	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       825	update-index.c	FUNCTION_34	IF_2
0x24af	           0xfb600	                   movzx eax, byte [rax]	       825	update-index.c	FUNCTION_34	IF_2
0x24b2	            0x3c2c	                            cmp al, 0x2c	       825	update-index.c	FUNCTION_34	IF_2
0x24b4	            0x750c	                           jne 0x4002502	       825	update-index.c	FUNCTION_34	IF_2
0x24b6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       825	update-index.c	FUNCTION_34	IF_2
0x24ba	            0x89c0	                            mov eax, eax	       825	update-index.c	FUNCTION_34	IF_2
0x24bc	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       825	update-index.c	FUNCTION_34	IF_2
0x24c0	            0x7407	                            je 0x4002509	       825	update-index.c	FUNCTION_34	IF_2
0x24c2	      0xb8ffffffff	                     mov eax, 0xffffffff	       826	update-index.c	FUNCTION_34	IF_2
0x24c7	            0xeb59	                           jmp 0x4002562	       826	update-index.c	FUNCTION_34	IF_2
0x24c9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       827	update-index.c	FUNCTION_34
0x24cd	            0x89c2	                            mov edx, eax	       827	update-index.c	FUNCTION_34
0x24cf	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       827	update-index.c	FUNCTION_34
0x24d3	            0x8910	                    mov dword [rax], edx	       827	update-index.c	FUNCTION_34
0x24d5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       828	update-index.c	FUNCTION_34
0x24d9	        0x4883c001	                              add rax, 1	       828	update-index.c	FUNCTION_34
0x24dd	        0x488945e8	             mov qword [rbp - 0x18], rax	       828	update-index.c	FUNCTION_34
0x24e1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       829	update-index.c	FUNCTION_34	IF_3	CALL_2
0x24e5	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       829	update-index.c	FUNCTION_34	IF_3	CALL_2
0x24e9	          0x4889d6	                            mov rsi, rdx	       829	update-index.c	FUNCTION_34	IF_3	CALL_2
0x24ec	          0x4889c7	                            mov rdi, rax	       829	update-index.c	FUNCTION_34	IF_3	CALL_2
0x24ef	      0xe800000000	                          call 0x4002534	       829	update-index.c	FUNCTION_34	IF_3	CALL_2
0x24f4	            0x85c0	                           test eax, eax	       829	update-index.c	FUNCTION_34	IF_3	CALL_2
0x24f6	            0x750f	                           jne 0x4002547	       829	update-index.c	FUNCTION_34	IF_3	CALL_2
0x24f8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       829	update-index.c	FUNCTION_34	IF_3	CALL_2
0x24fc	        0x4883c028	                           add rax, 0x28	       829	update-index.c	FUNCTION_34	IF_3	CALL_2
0x2500	           0xfb600	                   movzx eax, byte [rax]	       829	update-index.c	FUNCTION_34	IF_3	CALL_2
0x2503	            0x3c2c	                            cmp al, 0x2c	       829	update-index.c	FUNCTION_34	IF_3	CALL_2
0x2505	            0x7407	                            je 0x400254e	       829	update-index.c	FUNCTION_34	IF_3	CALL_2
0x2507	      0xb8ffffffff	                     mov eax, 0xffffffff	       830	update-index.c	FUNCTION_34	IF_3
0x250c	            0xeb14	                           jmp 0x4002562	       830	update-index.c	FUNCTION_34	IF_3
0x250e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       831	update-index.c	FUNCTION_34
0x2512	        0x488d5029	                   lea rdx, [rax + 0x29]	       831	update-index.c	FUNCTION_34
0x2516	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       831	update-index.c	FUNCTION_34
0x251a	          0x488910	                    mov qword [rax], rdx	       831	update-index.c	FUNCTION_34
0x251d	      0xb800000000	                              mov eax, 0	       832	update-index.c	FUNCTION_34
0x2522	        0x488b4df8	                mov rcx, qword [rbp - 8]	       833	update-index.c	FUNCTION_34
0x2526	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       833	update-index.c	FUNCTION_34
0x252f	            0x7405	                            je 0x4002576	       833	update-index.c	FUNCTION_34
0x2531	      0xe800000000	                          call 0x4002576	       833	update-index.c	FUNCTION_34
0x2536	              0xc9	                                   leave	       833	update-index.c	FUNCTION_34
0x2537	              0xc3	                                     ret	       833	update-index.c	FUNCTION_34
process_lstat_error	FOR,0:DO,0:functions,0:ELSE,0:CALL,4:SWITCH,0:IF,1:WHILE,0	26
0xf65	              0x55	                                push rbp	       263	update-index.c	FUNCTION_16
0xf66	          0x4889e5	                            mov rbp, rsp	       263	update-index.c	FUNCTION_16
0xf69	        0x4883ec10	                           sub rsp, 0x10	       263	update-index.c	FUNCTION_16
0xf6d	        0x48897df8	                mov qword [rbp - 8], rdi	       263	update-index.c	FUNCTION_16
0xf71	          0x8975f4	              mov dword [rbp - 0xc], esi	       263	update-index.c	FUNCTION_16
0xf74	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       264	update-index.c	FUNCTION_16	IF_1	CALL_1
0xf77	            0x89c7	                            mov edi, eax	       264	update-index.c	FUNCTION_16	IF_1	CALL_1
0xf79	      0xe84bf1ffff	          call sym.is_missing_file_error	       264	update-index.c	FUNCTION_16	IF_1	CALL_1
0xf7e	            0x85c0	                           test eax, eax	       264	update-index.c	FUNCTION_16	IF_1	CALL_1
0xf80	            0x740e	                            je 0x4000fd0	       264	update-index.c	FUNCTION_16	IF_1	CALL_1
0xf82	        0x488b45f8	                mov rax, qword [rbp - 8]	       265	update-index.c	FUNCTION_16	CALL_2
0xf86	          0x4889c7	                            mov rdi, rax	       265	update-index.c	FUNCTION_16	CALL_2
0xf89	      0xe86bffffff	                call sym.remove_one_path	       265	update-index.c	FUNCTION_16	CALL_2
0xf8e	            0xeb28	                           jmp 0x4000ff8	       265	update-index.c	FUNCTION_16	CALL_2
0xf90	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       266	update-index.c	FUNCTION_16	CALL_4
0xf93	            0x89c7	                            mov edi, eax	       266	update-index.c	FUNCTION_16	CALL_4
0xf95	      0xe800000000	                          call 0x4000fda	       266	update-index.c	FUNCTION_16	CALL_4
0xf9a	          0x4889c2	                            mov rdx, rax	       266	update-index.c	FUNCTION_16	CALL_4
0xf9d	        0x488b45f8	                mov rax, qword [rbp - 8]	       266	update-index.c	FUNCTION_16	CALL_4
0xfa1	          0x4889c6	                            mov rsi, rax	       266	update-index.c	FUNCTION_16	CALL_4
0xfa4	      0xbf00000000	                              mov edi, 0	       266	update-index.c	FUNCTION_16	CALL_4
0xfa9	      0xb800000000	                              mov eax, 0	       266	update-index.c	FUNCTION_16	CALL_4
0xfae	      0xe800000000	                          call 0x4000ff3	       266	update-index.c	FUNCTION_16	CALL_4
0xfb3	      0xe848f0ffff	                    call sym.const_error	       266	update-index.c	FUNCTION_16	CALL_4
0xfb8	              0xc9	                                   leave	       267	update-index.c	FUNCTION_16
0xfb9	              0xc3	                                     ret	       267	update-index.c	FUNCTION_16
read_index_info	FOR,0:DO,0:functions,0:ELSE,2:CALL,16:SWITCH,0:IF,10:WHILE,1	199
0x18a5	              0x55	                                push rbp	       484	update-index.c	FUNCTION_23
0x18a6	          0x4889e5	                            mov rbp, rsp	       484	update-index.c	FUNCTION_23
0x18a9	    0x4881eca00000	                           sub rsp, 0xa0	       484	update-index.c	FUNCTION_23
0x18b0	    0x89bd6cffffff	             mov dword [rbp - 0x94], edi	       484	update-index.c	FUNCTION_23
0x18b6	    0x64488b042528	                mov rax, qword fs:[0x28]	       484	update-index.c	FUNCTION_23
0x18bf	        0x488945f8	                mov qword [rbp - 8], rax	       484	update-index.c	FUNCTION_23
0x18c3	            0x31c0	                            xor eax, eax	       484	update-index.c	FUNCTION_23
0x18c5	    0x48c745a00000	               mov qword [rbp - 0x60], 0	       485	update-index.c	FUNCTION_23
0x18cd	    0x48c745a80000	               mov qword [rbp - 0x58], 0	       485	update-index.c	FUNCTION_23
0x18d5	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       485	update-index.c	FUNCTION_23
0x18dd	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       486	update-index.c	FUNCTION_23
0x18e5	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       486	update-index.c	FUNCTION_23
0x18ed	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       486	update-index.c	FUNCTION_23
0x18f5	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	       489	update-index.c	FUNCTION_23
0x18fc	            0x7407	                            je 0x4001945	       489	update-index.c	FUNCTION_23
0x18fe	      0xb800000000	                              mov eax, 0	       489	update-index.c	FUNCTION_23
0x1903	            0xeb05	                           jmp 0x400194a	       489	update-index.c	FUNCTION_23
0x1905	      0xb800000000	                              mov eax, 0	       489	update-index.c	FUNCTION_23
0x190a	        0x48894590	             mov qword [rbp - 0x70], rax	       489	update-index.c	FUNCTION_23
0x190e	      0xe993020000	                           jmp 0x4001be6	       490	update-index.c	FUNCTION_23	WHILE_1	CALL_1
0x1913	      0xe800000000	                          call 0x4001958	       514	update-index.c	FUNCTION_23	WHILE_1
0x1918	    0xc70000000000	                      mov dword [rax], 0	       514	update-index.c	FUNCTION_23	WHILE_1
0x191e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       515	update-index.c	FUNCTION_23	WHILE_1	CALL_2
0x1922	    0x488d8d78ffff	                   lea rcx, [rbp - 0x88]	       515	update-index.c	FUNCTION_23	WHILE_1	CALL_2
0x1929	      0xba08000000	                              mov edx, 8	       515	update-index.c	FUNCTION_23	WHILE_1	CALL_2
0x192e	          0x4889ce	                            mov rsi, rcx	       515	update-index.c	FUNCTION_23	WHILE_1	CALL_2
0x1931	          0x4889c7	                            mov rdi, rax	       515	update-index.c	FUNCTION_23	WHILE_1	CALL_2
0x1934	      0xe800000000	                          call 0x4001979	       515	update-index.c	FUNCTION_23	WHILE_1	CALL_2
0x1939	        0x48894598	             mov qword [rbp - 0x68], rax	       515	update-index.c	FUNCTION_23	WHILE_1	CALL_2
0x193d	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       516	update-index.c	FUNCTION_23	WHILE_1	IF_1
0x1941	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       516	update-index.c	FUNCTION_23	WHILE_1	IF_1
0x1948	          0x4839c2	                            cmp rdx, rax	       516	update-index.c	FUNCTION_23	WHILE_1	IF_1
0x194b	     0xf843e020000	                            je 0x4001bcf	       516	update-index.c	FUNCTION_23	WHILE_1	IF_1
0x1951	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       516	update-index.c	FUNCTION_23	WHILE_1	IF_1
0x1958	           0xfb600	                   movzx eax, byte [rax]	       516	update-index.c	FUNCTION_23	WHILE_1	IF_1
0x195b	            0x3c20	                            cmp al, 0x20	       516	update-index.c	FUNCTION_23	WHILE_1	IF_1
0x195d	     0xf852c020000	                           jne 0x4001bcf	       516	update-index.c	FUNCTION_23	WHILE_1	IF_1
0x1963	      0xe800000000	                          call 0x40019a8	       517	update-index.c	FUNCTION_23	WHILE_1	IF_1
0x1968	            0x8b00	                    mov eax, dword [rax]	       517	update-index.c	FUNCTION_23	WHILE_1	IF_1
0x196a	            0x85c0	                           test eax, eax	       517	update-index.c	FUNCTION_23	WHILE_1	IF_1
0x196c	     0xf851d020000	                           jne 0x4001bcf	       517	update-index.c	FUNCTION_23	WHILE_1	IF_1
0x1972	        0x488b4598	             mov rax, qword [rbp - 0x68]	       517	update-index.c	FUNCTION_23	WHILE_1	IF_1
0x1976	            0x89c0	                            mov eax, eax	       517	update-index.c	FUNCTION_23	WHILE_1	IF_1
0x1978	        0x483b4598	             cmp rax, qword [rbp - 0x68]	       517	update-index.c	FUNCTION_23	WHILE_1	IF_1
0x197c	     0xf850d020000	                           jne 0x4001bcf	       517	update-index.c	FUNCTION_23	WHILE_1	IF_1
0x1982	        0x488b4598	             mov rax, qword [rbp - 0x68]	       519	update-index.c	FUNCTION_23	WHILE_1
0x1986	    0x898574ffffff	             mov dword [rbp - 0x8c], eax	       519	update-index.c	FUNCTION_23	WHILE_1
0x198c	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       521	update-index.c	FUNCTION_23	WHILE_1	CALL_3
0x1993	      0xbe09000000	                              mov esi, 9	       521	update-index.c	FUNCTION_23	WHILE_1	CALL_3
0x1998	          0x4889c7	                            mov rdi, rax	       521	update-index.c	FUNCTION_23	WHILE_1	CALL_3
0x199b	      0xe800000000	                          call 0x40019e0	       521	update-index.c	FUNCTION_23	WHILE_1	CALL_3
0x19a0	        0x48894580	             mov qword [rbp - 0x80], rax	       521	update-index.c	FUNCTION_23	WHILE_1	CALL_3
0x19a4	      0x48837d8000	               cmp qword [rbp - 0x80], 0	       522	update-index.c	FUNCTION_23	WHILE_1	IF_2
0x19a9	     0xf84e0010000	                            je 0x4001bcf	       522	update-index.c	FUNCTION_23	WHILE_1	IF_2
0x19af	        0x488b4580	             mov rax, qword [rbp - 0x80]	       522	update-index.c	FUNCTION_23	WHILE_1	IF_2
0x19b3	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	       522	update-index.c	FUNCTION_23	WHILE_1	IF_2
0x19ba	          0x4829d0	                            sub rax, rdx	       522	update-index.c	FUNCTION_23	WHILE_1	IF_2
0x19bd	        0x4883f828	                           cmp rax, 0x28	       522	update-index.c	FUNCTION_23	WHILE_1	IF_2
0x19c1	     0xf8ec8010000	                           jle 0x4001bcf	       522	update-index.c	FUNCTION_23	WHILE_1	IF_2
0x19c7	        0x488b4580	             mov rax, qword [rbp - 0x80]	       525	update-index.c	FUNCTION_23	WHILE_1	IF_3
0x19cb	        0x4883e802	                              sub rax, 2	       525	update-index.c	FUNCTION_23	WHILE_1	IF_3
0x19cf	           0xfb600	                   movzx eax, byte [rax]	       525	update-index.c	FUNCTION_23	WHILE_1	IF_3
0x19d2	            0x3c20	                            cmp al, 0x20	       525	update-index.c	FUNCTION_23	WHILE_1	IF_3
0x19d4	            0x754b	                           jne 0x4001a61	       525	update-index.c	FUNCTION_23	WHILE_1	IF_3
0x19d6	        0x488b4580	             mov rax, qword [rbp - 0x80]	       525	update-index.c	FUNCTION_23	WHILE_1	IF_3
0x19da	        0x4883e801	                              sub rax, 1	       525	update-index.c	FUNCTION_23	WHILE_1	IF_3
0x19de	           0xfb600	                   movzx eax, byte [rax]	       525	update-index.c	FUNCTION_23	WHILE_1	IF_3
0x19e1	            0x3c2f	                            cmp al, 0x2f	       525	update-index.c	FUNCTION_23	WHILE_1	IF_3
0x19e3	            0x7e3c	                           jle 0x4001a61	       525	update-index.c	FUNCTION_23	WHILE_1	IF_3
0x19e5	        0x488b4580	             mov rax, qword [rbp - 0x80]	       525	update-index.c	FUNCTION_23	WHILE_1	IF_3
0x19e9	        0x4883e801	                              sub rax, 1	       525	update-index.c	FUNCTION_23	WHILE_1	IF_3
0x19ed	           0xfb600	                   movzx eax, byte [rax]	       525	update-index.c	FUNCTION_23	WHILE_1	IF_3
0x19f0	            0x3c33	                            cmp al, 0x33	       525	update-index.c	FUNCTION_23	WHILE_1	IF_3
0x19f2	            0x7f2d	                            jg 0x4001a61	       525	update-index.c	FUNCTION_23	WHILE_1	IF_3
0x19f4	        0x488b4580	             mov rax, qword [rbp - 0x80]	       526	update-index.c	FUNCTION_23	WHILE_1	IF_3
0x19f8	        0x4883e801	                              sub rax, 1	       526	update-index.c	FUNCTION_23	WHILE_1	IF_3
0x19fc	           0xfb600	                   movzx eax, byte [rax]	       526	update-index.c	FUNCTION_23	WHILE_1	IF_3
0x19ff	           0xfbec0	                           movsx eax, al	       526	update-index.c	FUNCTION_23	WHILE_1	IF_3
0x1a02	          0x83e830	                           sub eax, 0x30	       526	update-index.c	FUNCTION_23	WHILE_1	IF_3
0x1a05	    0x898570ffffff	             mov dword [rbp - 0x90], eax	       526	update-index.c	FUNCTION_23	WHILE_1	IF_3
0x1a0b	        0x488b4580	             mov rax, qword [rbp - 0x80]	       527	update-index.c	FUNCTION_23	WHILE_1	IF_3
0x1a0f	        0x4883c001	                              add rax, 1	       527	update-index.c	FUNCTION_23	WHILE_1	IF_3
0x1a13	    0x48898578ffff	             mov qword [rbp - 0x88], rax	       527	update-index.c	FUNCTION_23	WHILE_1	IF_3
0x1a1a	      0x48836d8002	               sub qword [rbp - 0x80], 2	       528	update-index.c	FUNCTION_23	WHILE_1	IF_3
0x1a1f	            0xeb19	                           jmp 0x4001a7a	       528	update-index.c	FUNCTION_23	WHILE_1	IF_3
0x1a21	    0xc78570ffffff	               mov dword [rbp - 0x90], 0	       531	update-index.c	FUNCTION_23	WHILE_1	ELSE_1
0x1a2b	        0x488b4580	             mov rax, qword [rbp - 0x80]	       532	update-index.c	FUNCTION_23	WHILE_1	ELSE_1
0x1a2f	        0x4883c001	                              add rax, 1	       532	update-index.c	FUNCTION_23	WHILE_1	ELSE_1
0x1a33	    0x48898578ffff	             mov qword [rbp - 0x88], rax	       532	update-index.c	FUNCTION_23	WHILE_1	ELSE_1
0x1a3a	        0x488b4580	             mov rax, qword [rbp - 0x80]	       535	update-index.c	FUNCTION_23	WHILE_1	IF_4	CALL_4
0x1a3e	        0x488d50d8	                   lea rdx, [rax - 0x28]	       535	update-index.c	FUNCTION_23	WHILE_1	IF_4	CALL_4
0x1a42	        0x488d45e0	                   lea rax, [rbp - 0x20]	       535	update-index.c	FUNCTION_23	WHILE_1	IF_4	CALL_4
0x1a46	          0x4889c6	                            mov rsi, rax	       535	update-index.c	FUNCTION_23	WHILE_1	IF_4	CALL_4
0x1a49	          0x4889d7	                            mov rdi, rdx	       535	update-index.c	FUNCTION_23	WHILE_1	IF_4	CALL_4
0x1a4c	      0xe800000000	                          call 0x4001a91	       535	update-index.c	FUNCTION_23	WHILE_1	IF_4	CALL_4
0x1a51	            0x85c0	                           test eax, eax	       535	update-index.c	FUNCTION_23	WHILE_1	IF_4	CALL_4
0x1a53	     0xf8536010000	                           jne 0x4001bcf	       535	update-index.c	FUNCTION_23	WHILE_1	IF_4	CALL_4
0x1a59	        0x488b4580	             mov rax, qword [rbp - 0x80]	       536	update-index.c	FUNCTION_23	WHILE_1	IF_4
0x1a5d	        0x4883e829	                           sub rax, 0x29	       536	update-index.c	FUNCTION_23	WHILE_1	IF_4
0x1a61	           0xfb600	                   movzx eax, byte [rax]	       536	update-index.c	FUNCTION_23	WHILE_1	IF_4
0x1a64	            0x3c20	                            cmp al, 0x20	       535	update-index.c	FUNCTION_23	WHILE_1	IF_4	CALL_4
0x1a66	     0xf8523010000	                           jne 0x4001bcf	       535	update-index.c	FUNCTION_23	WHILE_1	IF_4	CALL_4
0x1a6c	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       539	update-index.c	FUNCTION_23	WHILE_1
0x1a73	        0x48894588	             mov qword [rbp - 0x78], rax	       539	update-index.c	FUNCTION_23	WHILE_1
0x1a77	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	       540	update-index.c	FUNCTION_23	WHILE_1	IF_5
0x1a7e	            0x754f	                           jne 0x4001b0f	       540	update-index.c	FUNCTION_23	WHILE_1	IF_5
0x1a80	        0x488b4588	             mov rax, qword [rbp - 0x78]	       540	update-index.c	FUNCTION_23	WHILE_1	IF_5
0x1a84	           0xfb600	                   movzx eax, byte [rax]	       540	update-index.c	FUNCTION_23	WHILE_1	IF_5
0x1a87	            0x3c22	                            cmp al, 0x22	       540	update-index.c	FUNCTION_23	WHILE_1	IF_5
0x1a89	            0x7544	                           jne 0x4001b0f	       540	update-index.c	FUNCTION_23	WHILE_1	IF_5
0x1a8b	        0x488d45c0	                   lea rax, [rbp - 0x40]	       541	update-index.c	FUNCTION_23	WHILE_1	IF_5	CALL_5
0x1a8f	      0xbe00000000	                              mov esi, 0	       541	update-index.c	FUNCTION_23	WHILE_1	IF_5	CALL_5
0x1a94	          0x4889c7	                            mov rdi, rax	       541	update-index.c	FUNCTION_23	WHILE_1	IF_5	CALL_5
0x1a97	      0xe8e2e6ffff	                  call sym.strbuf_setlen	       541	update-index.c	FUNCTION_23	WHILE_1	IF_5	CALL_5
0x1a9c	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	       542	update-index.c	FUNCTION_23	WHILE_1	IF_5	IF_6	CALL_6
0x1aa0	        0x488d45c0	                   lea rax, [rbp - 0x40]	       542	update-index.c	FUNCTION_23	WHILE_1	IF_5	IF_6	CALL_6
0x1aa4	      0xba00000000	                              mov edx, 0	       542	update-index.c	FUNCTION_23	WHILE_1	IF_5	IF_6	CALL_6
0x1aa9	          0x4889ce	                            mov rsi, rcx	       542	update-index.c	FUNCTION_23	WHILE_1	IF_5	IF_6	CALL_6
0x1aac	          0x4889c7	                            mov rdi, rax	       542	update-index.c	FUNCTION_23	WHILE_1	IF_5	IF_6	CALL_6
0x1aaf	      0xe800000000	                          call 0x4001af4	       542	update-index.c	FUNCTION_23	WHILE_1	IF_5	IF_6	CALL_6
0x1ab4	            0x85c0	                           test eax, eax	       542	update-index.c	FUNCTION_23	WHILE_1	IF_5	IF_6	CALL_6
0x1ab6	            0x740f	                            je 0x4001b07	       542	update-index.c	FUNCTION_23	WHILE_1	IF_5	IF_6	CALL_6
0x1ab8	      0xbf00000000	                              mov edi, 0	       543	update-index.c	FUNCTION_23	WHILE_1	IF_5	IF_6	CALL_7
0x1abd	      0xb800000000	                              mov eax, 0	       543	update-index.c	FUNCTION_23	WHILE_1	IF_5	IF_6	CALL_7
0x1ac2	      0xe800000000	                          call 0x4001b07	       543	update-index.c	FUNCTION_23	WHILE_1	IF_5	IF_6	CALL_7
0x1ac7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       545	update-index.c	FUNCTION_23	WHILE_1	IF_5
0x1acb	        0x48894588	             mov qword [rbp - 0x78], rax	       545	update-index.c	FUNCTION_23	WHILE_1	IF_5
0x1acf	        0x488b4588	             mov rax, qword [rbp - 0x78]	       548	update-index.c	FUNCTION_23	WHILE_1	IF_7	CALL_8
0x1ad3	          0x4889c7	                            mov rdi, rax	       548	update-index.c	FUNCTION_23	WHILE_1	IF_7	CALL_8
0x1ad6	      0xe800000000	                          call 0x4001b1b	       548	update-index.c	FUNCTION_23	WHILE_1	IF_7	CALL_8
0x1adb	            0x85c0	                           test eax, eax	       548	update-index.c	FUNCTION_23	WHILE_1	IF_7	CALL_8
0x1add	            0x7522	                           jne 0x4001b41	       548	update-index.c	FUNCTION_23	WHILE_1	IF_7	CALL_8
0x1adf	    0x488b05000000	            mov rax, qword [0x04001b26] 	       549	update-index.c	FUNCTION_23	WHILE_1	IF_7	CALL_9
0x1ae6	        0x488b5588	             mov rdx, qword [rbp - 0x78]	       549	update-index.c	FUNCTION_23	WHILE_1	IF_7	CALL_9
0x1aea	      0xbe00000000	                              mov esi, 0	       549	update-index.c	FUNCTION_23	WHILE_1	IF_7	CALL_9
0x1aef	          0x4889c7	                            mov rdi, rax	       549	update-index.c	FUNCTION_23	WHILE_1	IF_7	CALL_9
0x1af2	      0xb800000000	                              mov eax, 0	       549	update-index.c	FUNCTION_23	WHILE_1	IF_7	CALL_9
0x1af7	      0xe800000000	                          call 0x4001b3c	       549	update-index.c	FUNCTION_23	WHILE_1	IF_7	CALL_9
0x1afc	      0xe9a5000000	                           jmp 0x4001be6	       550	update-index.c	FUNCTION_23	WHILE_1	IF_7
0x1b01	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 0	       553	update-index.c	FUNCTION_23	WHILE_1	IF_8
0x1b08	            0x7532	                           jne 0x4001b7c	       553	update-index.c	FUNCTION_23	WHILE_1	IF_8
0x1b0a	        0x488b4588	             mov rax, qword [rbp - 0x78]	       555	update-index.c	FUNCTION_23	WHILE_1	IF_8	IF_9	CALL_10
0x1b0e	          0x4889c6	                            mov rsi, rax	       555	update-index.c	FUNCTION_23	WHILE_1	IF_8	IF_9	CALL_10
0x1b11	      0xbf00000000	                              mov edi, 0	       555	update-index.c	FUNCTION_23	WHILE_1	IF_8	IF_9	CALL_10
0x1b16	      0xe800000000	                          call 0x4001b5b	       555	update-index.c	FUNCTION_23	WHILE_1	IF_8	IF_9	CALL_10
0x1b1b	            0x85c0	                           test eax, eax	       555	update-index.c	FUNCTION_23	WHILE_1	IF_8	IF_9	CALL_10
0x1b1d	     0xf8482000000	                            je 0x4001be5	       555	update-index.c	FUNCTION_23	WHILE_1	IF_8	IF_9	CALL_10
0x1b23	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       556	update-index.c	FUNCTION_23	WHILE_1	IF_8	IF_9	CALL_11
0x1b2a	          0x4889c6	                            mov rsi, rax	       556	update-index.c	FUNCTION_23	WHILE_1	IF_8	IF_9	CALL_11
0x1b2d	      0xbf00000000	                              mov edi, 0	       556	update-index.c	FUNCTION_23	WHILE_1	IF_8	IF_9	CALL_11
0x1b32	      0xb800000000	                              mov eax, 0	       556	update-index.c	FUNCTION_23	WHILE_1	IF_8	IF_9	CALL_11
0x1b37	      0xe800000000	                          call 0x4001b7c	       556	update-index.c	FUNCTION_23	WHILE_1	IF_8	IF_9	CALL_11
0x1b3c	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       564	update-index.c	FUNCTION_23	WHILE_1	ELSE_2
0x1b43	        0x488d50d6	                   lea rdx, [rax - 0x2a]	       564	update-index.c	FUNCTION_23	WHILE_1	ELSE_2
0x1b47	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       564	update-index.c	FUNCTION_23	WHILE_1	ELSE_2
0x1b4e	        0x4883e801	                              sub rax, 1	       564	update-index.c	FUNCTION_23	WHILE_1	ELSE_2
0x1b52	          0xc60000	                       mov byte [rax], 0	       564	update-index.c	FUNCTION_23	WHILE_1	ELSE_2
0x1b55	           0xfb600	                   movzx eax, byte [rax]	       564	update-index.c	FUNCTION_23	WHILE_1	ELSE_2
0x1b58	            0x8802	                      mov byte [rdx], al	       564	update-index.c	FUNCTION_23	WHILE_1	ELSE_2
0x1b5a	    0x8b8d70ffffff	             mov ecx, dword [rbp - 0x90]	       565	update-index.c	FUNCTION_23	WHILE_1	ELSE_2	IF_10	CALL_12
0x1b60	        0x488b5588	             mov rdx, qword [rbp - 0x78]	       565	update-index.c	FUNCTION_23	WHILE_1	ELSE_2	IF_10	CALL_12
0x1b64	        0x488d75e0	                   lea rsi, [rbp - 0x20]	       565	update-index.c	FUNCTION_23	WHILE_1	ELSE_2	IF_10	CALL_12
0x1b68	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	       565	update-index.c	FUNCTION_23	WHILE_1	ELSE_2	IF_10	CALL_12
0x1b6e	            0x89c7	                            mov edi, eax	       565	update-index.c	FUNCTION_23	WHILE_1	ELSE_2	IF_10	CALL_12
0x1b70	      0xe86ef9ffff	                  call sym.add_cacheinfo	       565	update-index.c	FUNCTION_23	WHILE_1	ELSE_2	IF_10	CALL_12
0x1b75	            0x85c0	                           test eax, eax	       565	update-index.c	FUNCTION_23	WHILE_1	ELSE_2	IF_10	CALL_12
0x1b77	            0x742c	                            je 0x4001be5	       565	update-index.c	FUNCTION_23	WHILE_1	ELSE_2	IF_10	CALL_12
0x1b79	        0x488b4588	             mov rax, qword [rbp - 0x78]	       566	update-index.c	FUNCTION_23	WHILE_1	ELSE_2	IF_10	CALL_13
0x1b7d	          0x4889c6	                            mov rsi, rax	       566	update-index.c	FUNCTION_23	WHILE_1	ELSE_2	IF_10	CALL_13
0x1b80	      0xbf00000000	                              mov edi, 0	       566	update-index.c	FUNCTION_23	WHILE_1	ELSE_2	IF_10	CALL_13
0x1b85	      0xb800000000	                              mov eax, 0	       566	update-index.c	FUNCTION_23	WHILE_1	ELSE_2	IF_10	CALL_13
0x1b8a	      0xe800000000	                          call 0x4001bcf	       566	update-index.c	FUNCTION_23	WHILE_1	ELSE_2	IF_10	CALL_13
0x1b8f	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       572	update-index.c	FUNCTION_23	WHILE_1	CALL_14
0x1b93	          0x4889c6	                            mov rsi, rax	       572	update-index.c	FUNCTION_23	WHILE_1	CALL_14
0x1b96	      0xbf00000000	                              mov edi, 0	       572	update-index.c	FUNCTION_23	WHILE_1	CALL_14
0x1b9b	      0xb800000000	                              mov eax, 0	       572	update-index.c	FUNCTION_23	WHILE_1	CALL_14
0x1ba0	      0xe800000000	                          call 0x4001be5	       572	update-index.c	FUNCTION_23	WHILE_1	CALL_14
0x1ba5	              0x90	                                     nop	       569	update-index.c	FUNCTION_23	WHILE_1
0x1ba6	    0x488b0d000000	            mov rcx, qword [0x04001bed] 	       490	update-index.c	FUNCTION_23	WHILE_1	CALL_1
0x1bad	        0x488d55a0	                   lea rdx, [rbp - 0x60]	       490	update-index.c	FUNCTION_23	WHILE_1	CALL_1
0x1bb1	        0x488b4590	             mov rax, qword [rbp - 0x70]	       490	update-index.c	FUNCTION_23	WHILE_1	CALL_1
0x1bb5	          0x4889ce	                            mov rsi, rcx	       490	update-index.c	FUNCTION_23	WHILE_1	CALL_1
0x1bb8	          0x4889d7	                            mov rdi, rdx	       490	update-index.c	FUNCTION_23	WHILE_1	CALL_1
0x1bbb	            0xffd0	                                call rax	       490	update-index.c	FUNCTION_23	WHILE_1	CALL_1
0x1bbd	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       490	update-index.c	FUNCTION_23	WHILE_1	CALL_1
0x1bc0	     0xf854dfdffff	                           jne 0x4001953	       490	update-index.c	FUNCTION_23	WHILE_1	CALL_1
0x1bc6	        0x488d45a0	                   lea rax, [rbp - 0x60]	       574	update-index.c	FUNCTION_23	CALL_15
0x1bca	          0x4889c7	                            mov rdi, rax	       574	update-index.c	FUNCTION_23	CALL_15
0x1bcd	      0xe800000000	                          call 0x4001c12	       574	update-index.c	FUNCTION_23	CALL_15
0x1bd2	        0x488d45c0	                   lea rax, [rbp - 0x40]	       575	update-index.c	FUNCTION_23	CALL_16
0x1bd6	          0x4889c7	                            mov rdi, rax	       575	update-index.c	FUNCTION_23	CALL_16
0x1bd9	      0xe800000000	                          call 0x4001c1e	       575	update-index.c	FUNCTION_23	CALL_16
0x1bde	              0x90	                                     nop	       576	update-index.c	FUNCTION_23
0x1bdf	        0x488b45f8	                mov rax, qword [rbp - 8]	       576	update-index.c	FUNCTION_23
0x1be3	    0x644833042528	                xor rax, qword fs:[0x28]	       576	update-index.c	FUNCTION_23
0x1bec	            0x7405	                            je 0x4001c33	       576	update-index.c	FUNCTION_23
0x1bee	      0xe800000000	                          call 0x4001c33	       576	update-index.c	FUNCTION_23
0x1bf3	              0xc9	                                   leave	       576	update-index.c	FUNCTION_23
0x1bf4	              0xc3	                                     ret	       576	update-index.c	FUNCTION_23
read_one_ent	FOR,0:DO,0:functions,0:ELSE,0:CALL,9:SWITCH,0:IF,4:WHILE,0	89
0x1bf5	              0x55	                                push rbp	       589	update-index.c	FUNCTION_24
0x1bf6	          0x4889e5	                            mov rbp, rsp	       589	update-index.c	FUNCTION_24
0x1bf9	        0x4883ec50	                           sub rsp, 0x50	       589	update-index.c	FUNCTION_24
0x1bfd	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       589	update-index.c	FUNCTION_24
0x1c01	        0x488975c0	             mov qword [rbp - 0x40], rsi	       589	update-index.c	FUNCTION_24
0x1c05	        0x488955b8	             mov qword [rbp - 0x48], rdx	       589	update-index.c	FUNCTION_24
0x1c09	          0x894db4	             mov dword [rbp - 0x4c], ecx	       589	update-index.c	FUNCTION_24
0x1c0c	        0x448945b0	             mov dword [rbp - 0x50], r8d	       589	update-index.c	FUNCTION_24
0x1c10	    0x64488b042528	                mov rax, qword fs:[0x28]	       589	update-index.c	FUNCTION_24
0x1c19	        0x488945f8	                mov qword [rbp - 8], rax	       589	update-index.c	FUNCTION_24
0x1c1d	            0x31c0	                            xor eax, eax	       589	update-index.c	FUNCTION_24
0x1c1f	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	       595	update-index.c	FUNCTION_24	IF_1	CALL_1
0x1c23	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       595	update-index.c	FUNCTION_24	IF_1	CALL_1
0x1c27	        0x488b75b8	             mov rsi, qword [rbp - 0x48]	       595	update-index.c	FUNCTION_24	IF_1	CALL_1
0x1c2b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       595	update-index.c	FUNCTION_24	IF_1	CALL_1
0x1c2f	          0x4889c7	                            mov rdi, rax	       595	update-index.c	FUNCTION_24	IF_1	CALL_1
0x1c32	      0xe800000000	                          call 0x4001c77	       595	update-index.c	FUNCTION_24	IF_1	CALL_1
0x1c37	            0x85c0	                           test eax, eax	       595	update-index.c	FUNCTION_24	IF_1	CALL_1
0x1c39	            0x7430	                            je 0x4001cab	       595	update-index.c	FUNCTION_24	IF_1	CALL_1
0x1c3b	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       596	update-index.c	FUNCTION_24	IF_1	IF_2
0x1c40	            0x741f	                            je 0x4001ca1	       596	update-index.c	FUNCTION_24	IF_1	IF_2
0x1c42	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       597	update-index.c	FUNCTION_24	IF_1	CALL_2
0x1c46	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       597	update-index.c	FUNCTION_24	IF_1	CALL_2
0x1c4a	          0x4889c6	                            mov rsi, rax	       597	update-index.c	FUNCTION_24	IF_1	CALL_2
0x1c4d	      0xbf00000000	                              mov edi, 0	       597	update-index.c	FUNCTION_24	IF_1	CALL_2
0x1c52	      0xb800000000	                              mov eax, 0	       597	update-index.c	FUNCTION_24	IF_1	CALL_2
0x1c57	      0xe800000000	                          call 0x4001c9c	       597	update-index.c	FUNCTION_24	IF_1	CALL_2
0x1c5c	      0xe89fe3ffff	                    call sym.const_error	       597	update-index.c	FUNCTION_24	IF_1	CALL_2
0x1c61	      0xb800000000	                              mov eax, 0	       598	update-index.c	FUNCTION_24	IF_1
0x1c66	      0xe9c1000000	                           jmp 0x4001d6c	       598	update-index.c	FUNCTION_24	IF_1
0x1c6b	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       600	update-index.c	FUNCTION_24	IF_3
0x1c6e	      0x3d00400000	                         cmp eax, 0x4000	       600	update-index.c	FUNCTION_24	IF_3
0x1c73	            0x7530	                           jne 0x4001ce5	       600	update-index.c	FUNCTION_24	IF_3
0x1c75	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       601	update-index.c	FUNCTION_24	IF_3	IF_4
0x1c7a	            0x741f	                            je 0x4001cdb	       601	update-index.c	FUNCTION_24	IF_3	IF_4
0x1c7c	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       602	update-index.c	FUNCTION_24	IF_3	CALL_3
0x1c80	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       602	update-index.c	FUNCTION_24	IF_3	CALL_3
0x1c84	          0x4889c6	                            mov rsi, rax	       602	update-index.c	FUNCTION_24	IF_3	CALL_3
0x1c87	      0xbf00000000	                              mov edi, 0	       602	update-index.c	FUNCTION_24	IF_3	CALL_3
0x1c8c	      0xb800000000	                              mov eax, 0	       602	update-index.c	FUNCTION_24	IF_3	CALL_3
0x1c91	      0xe800000000	                          call 0x4001cd6	       602	update-index.c	FUNCTION_24	IF_3	CALL_3
0x1c96	      0xe865e3ffff	                    call sym.const_error	       602	update-index.c	FUNCTION_24	IF_3	CALL_3
0x1c9b	      0xb800000000	                              mov eax, 0	       603	update-index.c	FUNCTION_24	IF_3
0x1ca0	      0xe987000000	                           jmp 0x4001d6c	       603	update-index.c	FUNCTION_24	IF_3
0x1ca5	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       605	update-index.c	FUNCTION_24	CALL_4
0x1ca8	          0x83c059	                           add eax, 0x59	       605	update-index.c	FUNCTION_24	CALL_4
0x1cab	          0x8945d4	             mov dword [rbp - 0x2c], eax	       605	update-index.c	FUNCTION_24	CALL_4
0x1cae	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       606	update-index.c	FUNCTION_24	CALL_5
0x1cb1	            0x4898	                                    cdqe	       606	update-index.c	FUNCTION_24	CALL_5
0x1cb3	          0x4889c6	                            mov rsi, rax	       606	update-index.c	FUNCTION_24	CALL_5
0x1cb6	      0xbf01000000	                              mov edi, 1	       606	update-index.c	FUNCTION_24	CALL_5
0x1cbb	      0xe800000000	                          call 0x4001d00	       606	update-index.c	FUNCTION_24	CALL_5
0x1cc0	        0x488945d8	             mov qword [rbp - 0x28], rax	       606	update-index.c	FUNCTION_24	CALL_5
0x1cc4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       608	update-index.c	FUNCTION_24	CALL_6
0x1cc8	        0x488d5044	                   lea rdx, [rax + 0x44]	       608	update-index.c	FUNCTION_24	CALL_6
0x1ccc	        0x488d45e0	                   lea rax, [rbp - 0x20]	       608	update-index.c	FUNCTION_24	CALL_6
0x1cd0	          0x4889c6	                            mov rsi, rax	       608	update-index.c	FUNCTION_24	CALL_6
0x1cd3	          0x4889d7	                            mov rdi, rdx	       608	update-index.c	FUNCTION_24	CALL_6
0x1cd6	      0xe850e7ffff	                         call sym.oidcpy	       608	update-index.c	FUNCTION_24	CALL_6
0x1cdb	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       609	update-index.c	FUNCTION_24	CALL_7
0x1cde	          0x4863d0	                         movsxd rdx, eax	       609	update-index.c	FUNCTION_24	CALL_7
0x1ce1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       609	update-index.c	FUNCTION_24	CALL_7
0x1ce5	        0x488d4858	                   lea rcx, [rax + 0x58]	       609	update-index.c	FUNCTION_24	CALL_7
0x1ce9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       609	update-index.c	FUNCTION_24	CALL_7
0x1ced	          0x4889c6	                            mov rsi, rax	       609	update-index.c	FUNCTION_24	CALL_7
0x1cf0	          0x4889cf	                            mov rdi, rcx	       609	update-index.c	FUNCTION_24	CALL_7
0x1cf3	      0xe800000000	                          call 0x4001d38	       609	update-index.c	FUNCTION_24	CALL_7
0x1cf8	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       610	update-index.c	FUNCTION_24	CALL_8
0x1cfb	            0x89c7	                            mov edi, eax	       610	update-index.c	FUNCTION_24	CALL_8
0x1cfd	      0xe8a7e5ffff	                call sym.create_ce_flags	       610	update-index.c	FUNCTION_24	CALL_8
0x1d02	            0x89c2	                            mov edx, eax	       610	update-index.c	FUNCTION_24	CALL_8
0x1d04	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       610	update-index.c	FUNCTION_24	CALL_8
0x1d08	          0x895038	             mov dword [rax + 0x38], edx	       610	update-index.c	FUNCTION_24	CALL_8
0x1d0b	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       611	update-index.c	FUNCTION_24
0x1d0e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       611	update-index.c	FUNCTION_24
0x1d12	          0x89503c	             mov dword [rax + 0x3c], edx	       611	update-index.c	FUNCTION_24
0x1d15	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       612	update-index.c	FUNCTION_24	CALL_9
0x1d18	            0x89c7	                            mov edi, eax	       612	update-index.c	FUNCTION_24	CALL_9
0x1d1a	      0xe899e5ffff	                 call sym.create_ce_mode	       612	update-index.c	FUNCTION_24	CALL_9
0x1d1f	            0x89c2	                            mov edx, eax	       612	update-index.c	FUNCTION_24	CALL_9
0x1d21	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       612	update-index.c	FUNCTION_24	CALL_9
0x1d25	          0x895034	             mov dword [rax + 0x34], edx	       612	update-index.c	FUNCTION_24	CALL_9
0x1d28	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       613	update-index.c	FUNCTION_24
0x1d2c	        0x488b4df8	                mov rcx, qword [rbp - 8]	       614	update-index.c	FUNCTION_24
0x1d30	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       614	update-index.c	FUNCTION_24
0x1d39	            0x7405	                            je 0x4001d80	       614	update-index.c	FUNCTION_24
0x1d3b	      0xe800000000	                          call 0x4001d80	       614	update-index.c	FUNCTION_24
0x1d40	              0xc9	                                   leave	       614	update-index.c	FUNCTION_24
0x1d41	              0xc3	                                     ret	       614	update-index.c	FUNCTION_24
stdin_cacheinfo_callback	FOR,0:DO,0:functions,0:ELSE,0:CALL,2:SWITCH,0:IF,1:WHILE,0	33
0x26de	              0x55	                                push rbp	       861	update-index.c	FUNCTION_36
0x26df	          0x4889e5	                            mov rbp, rsp	       861	update-index.c	FUNCTION_36
0x26e2	        0x4883ec30	                           sub rsp, 0x30	       861	update-index.c	FUNCTION_36
0x26e6	        0x48897de8	             mov qword [rbp - 0x18], rdi	       861	update-index.c	FUNCTION_36
0x26ea	        0x488975e0	             mov qword [rbp - 0x20], rsi	       861	update-index.c	FUNCTION_36
0x26ee	          0x8955dc	             mov dword [rbp - 0x24], edx	       861	update-index.c	FUNCTION_36
0x26f1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       862	update-index.c	FUNCTION_36
0x26f5	        0x488b4010	            mov rax, qword [rax + 0x10] 	       862	update-index.c	FUNCTION_36
0x26f9	        0x488945f8	                mov qword [rbp - 8], rax	       862	update-index.c	FUNCTION_36
0x26fd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       864	update-index.c	FUNCTION_36	IF_1
0x2701	          0x8b4010	            mov eax, dword [rax + 0x10] 	       864	update-index.c	FUNCTION_36	IF_1
0x2704	          0x83f801	                              cmp eax, 1	       864	update-index.c	FUNCTION_36	IF_1
0x2707	            0x7421	                            je 0x400276a	       864	update-index.c	FUNCTION_36	IF_1
0x2709	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       865	update-index.c	FUNCTION_36	CALL_1
0x270d	        0x488b4008	                mov rax, qword [rax + 8]	       865	update-index.c	FUNCTION_36	CALL_1
0x2711	          0x4889c6	                            mov rsi, rax	       865	update-index.c	FUNCTION_36	CALL_1
0x2714	      0xbf00000000	                              mov edi, 0	       865	update-index.c	FUNCTION_36	CALL_1
0x2719	      0xb800000000	                              mov eax, 0	       865	update-index.c	FUNCTION_36	CALL_1
0x271e	      0xe800000000	                          call 0x4002763	       865	update-index.c	FUNCTION_36	CALL_1
0x2723	      0xe8d8d8ffff	                    call sym.const_error	       865	update-index.c	FUNCTION_36	CALL_1
0x2728	            0xeb34	                           jmp 0x400279e	       865	update-index.c	FUNCTION_36	CALL_1
0x272a	    0xc70500000000	               mov dword [0x04002774], 1	       866	update-index.c	FUNCTION_36
0x2734	    0x8b0500000000	            mov eax, dword [0x0400277a] 	       866	update-index.c	FUNCTION_36
0x273a	    0x890500000000	            mov dword [0x04002780], eax 	       866	update-index.c	FUNCTION_36
0x2740	    0x8b0500000000	            mov eax, dword [0x04002786] 	       866	update-index.c	FUNCTION_36
0x2746	    0x890500000000	            mov dword [0x0400278c], eax 	       866	update-index.c	FUNCTION_36
0x274c	        0x488b45f8	                mov rax, qword [rbp - 8]	       867	update-index.c	FUNCTION_36	CALL_2
0x2750	            0x8b00	                    mov eax, dword [rax]	       867	update-index.c	FUNCTION_36	CALL_2
0x2752	            0x89c7	                            mov edi, eax	       867	update-index.c	FUNCTION_36	CALL_2
0x2754	      0xe84cf1ffff	                call sym.read_index_info	       867	update-index.c	FUNCTION_36	CALL_2
0x2759	      0xb800000000	                              mov eax, 0	       868	update-index.c	FUNCTION_36
0x275e	              0xc9	                                   leave	       869	update-index.c	FUNCTION_36
0x275f	              0xc3	                                     ret	       869	update-index.c	FUNCTION_36
trace_pass_fl	FOR,0:DO,0:functions,0:ELSE,0:CALL,0:SWITCH,0:IF,0:WHILE,0	17
0x279	              0x55	                                push rbp	       134	trace.h	FUNCTION_93
0x27a	          0x4889e5	                            mov rbp, rsp	       134	trace.h	FUNCTION_93
0x27d	        0x48897df8	                mov qword [rbp - 8], rdi	       134	trace.h	FUNCTION_93
0x281	        0x488b45f8	                mov rax, qword [rbp - 8]	       135	trace.h	FUNCTION_93
0x285	          0x8b4008	                mov eax, dword [rax + 8]	       135	trace.h	FUNCTION_93
0x288	            0x85c0	                           test eax, eax	       135	trace.h	FUNCTION_93
0x28a	            0x750f	                           jne 0x40002db	       135	trace.h	FUNCTION_93
0x28c	        0x488b45f8	                mov rax, qword [rbp - 8]	       135	trace.h	FUNCTION_93
0x290	         0xfb6400c	            movzx eax, byte [rax + 0xc] 	       135	trace.h	FUNCTION_93
0x294	          0x83e001	                              and eax, 1	       135	trace.h	FUNCTION_93
0x297	            0x84c0	                             test al, al	       135	trace.h	FUNCTION_93
0x299	            0x7507	                           jne 0x40002e2	       135	trace.h	FUNCTION_93
0x29b	      0xb801000000	                              mov eax, 1	       135	trace.h	FUNCTION_93
0x2a0	            0xeb05	                           jmp 0x40002e7	       135	trace.h	FUNCTION_93
0x2a2	      0xb800000000	                              mov eax, 0	       135	trace.h	FUNCTION_93
0x2a7	              0x5d	                                 pop rbp	       136	trace.h	FUNCTION_93
0x2a8	              0xc3	                                     ret	       136	trace.h	FUNCTION_93
chmod_path	FOR,0:DO,0:functions,0:ELSE,0:CALL,5:SWITCH,0:IF,2:WHILE,0	49
0x1654	              0x55	                                push rbp	       433	update-index.c	FUNCTION_21
0x1655	          0x4889e5	                            mov rbp, rsp	       433	update-index.c	FUNCTION_21
0x1658	        0x4883ec20	                           sub rsp, 0x20	       433	update-index.c	FUNCTION_21
0x165c	            0x89f8	                            mov eax, edi	       433	update-index.c	FUNCTION_21
0x165e	        0x488975e0	             mov qword [rbp - 0x20], rsi	       433	update-index.c	FUNCTION_21
0x1662	          0x8845ec	               mov byte [rbp - 0x14], al	       433	update-index.c	FUNCTION_21
0x1665	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       437	update-index.c	FUNCTION_21	CALL_2
0x1669	          0x4889c7	                            mov rdi, rax	       437	update-index.c	FUNCTION_21	CALL_2
0x166c	      0xe800000000	                          call 0x40016b1	       437	update-index.c	FUNCTION_21	CALL_2
0x1671	            0x89c2	                            mov edx, eax	       437	update-index.c	FUNCTION_21	CALL_2
0x1673	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       437	update-index.c	FUNCTION_21	CALL_2
0x1677	          0x4889c6	                            mov rsi, rax	       437	update-index.c	FUNCTION_21	CALL_2
0x167a	      0xbf00000000	                              mov edi, 0	       437	update-index.c	FUNCTION_21	CALL_2
0x167f	      0xe800000000	                          call 0x40016c4	       437	update-index.c	FUNCTION_21	CALL_2
0x1684	          0x8945f4	              mov dword [rbp - 0xc], eax	       437	update-index.c	FUNCTION_21	CALL_2
0x1687	        0x837df400	                cmp dword [rbp - 0xc], 0	       438	update-index.c	FUNCTION_21	IF_1
0x168b	            0x784f	                            js 0x400171c	       438	update-index.c	FUNCTION_21	IF_1
0x168d	    0x488b05000000	            mov rax, qword [0x040016d4] 	       440	update-index.c	FUNCTION_21
0x1694	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       440	update-index.c	FUNCTION_21
0x1697	          0x4863d2	                         movsxd rdx, edx	       440	update-index.c	FUNCTION_21
0x169a	        0x48c1e203	                              shl rdx, 3	       440	update-index.c	FUNCTION_21
0x169e	          0x4801d0	                            add rax, rdx	       440	update-index.c	FUNCTION_21
0x16a1	          0x488b00	                    mov rax, qword [rax]	       440	update-index.c	FUNCTION_21
0x16a4	        0x488945f8	                mov qword [rbp - 8], rax	       440	update-index.c	FUNCTION_21
0x16a8	         0xfbe55ec	            movsx edx, byte [rbp - 0x14]	       441	update-index.c	FUNCTION_21	IF_2	CALL_3
0x16ac	        0x488b45f8	                mov rax, qword [rbp - 8]	       441	update-index.c	FUNCTION_21	IF_2	CALL_3
0x16b0	          0x4889c6	                            mov rsi, rax	       441	update-index.c	FUNCTION_21	IF_2	CALL_3
0x16b3	      0xbf00000000	                              mov edi, 0	       441	update-index.c	FUNCTION_21	IF_2	CALL_3
0x16b8	      0xe800000000	                          call 0x40016fd	       441	update-index.c	FUNCTION_21	IF_2	CALL_3
0x16bd	            0x85c0	                           test eax, eax	       441	update-index.c	FUNCTION_21	IF_2	CALL_3
0x16bf	            0x781e	                            js 0x400171f	       441	update-index.c	FUNCTION_21	IF_2	CALL_3
0x16c1	         0xfbe45ec	            movsx eax, byte [rbp - 0x14]	       444	update-index.c	FUNCTION_21	CALL_4
0x16c5	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       444	update-index.c	FUNCTION_21	CALL_4
0x16c9	            0x89c6	                            mov esi, eax	       444	update-index.c	FUNCTION_21	CALL_4
0x16cb	      0xbf00000000	                              mov edi, 0	       444	update-index.c	FUNCTION_21	CALL_4
0x16d0	      0xb800000000	                              mov eax, 0	       444	update-index.c	FUNCTION_21	CALL_4
0x16d5	      0xe88feeffff	                         call sym.report	       444	update-index.c	FUNCTION_21	CALL_4
0x16da	            0xeb1d	                           jmp 0x4001739	       445	update-index.c	FUNCTION_21
0x16dc	              0x90	                                     nop	       439	update-index.c	FUNCTION_21	IF_1
0x16dd	            0xeb01	                           jmp 0x4001720	       439	update-index.c	FUNCTION_21	IF_1
0x16df	              0x90	                                     nop	       442	update-index.c	FUNCTION_21	IF_2
0x16e0	         0xfbe45ec	            movsx eax, byte [rbp - 0x14]	       447	update-index.c	FUNCTION_21	CALL_5
0x16e4	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       447	update-index.c	FUNCTION_21	CALL_5
0x16e8	            0x89c6	                            mov esi, eax	       447	update-index.c	FUNCTION_21	CALL_5
0x16ea	      0xbf00000000	                              mov edi, 0	       447	update-index.c	FUNCTION_21	CALL_5
0x16ef	      0xb800000000	                              mov eax, 0	       447	update-index.c	FUNCTION_21	CALL_5
0x16f4	      0xe800000000	                          call 0x4001739	       447	update-index.c	FUNCTION_21	CALL_5
0x16f9	              0xc9	                                   leave	       448	update-index.c	FUNCTION_21
0x16fa	              0xc3	                                     ret	       448	update-index.c	FUNCTION_21
process_path	FOR,0:DO,0:functions,0:ELSE,0:CALL,12:SWITCH,0:IF,5:WHILE,0	104
0x1310	              0x55	                                push rbp	       368	update-index.c	FUNCTION_19
0x1311	          0x4889e5	                            mov rbp, rsp	       368	update-index.c	FUNCTION_19
0x1314	    0x4881ecc00000	                           sub rsp, 0xc0	       368	update-index.c	FUNCTION_19
0x131b	    0x4889bd48ffff	             mov qword [rbp - 0xb8], rdi	       368	update-index.c	FUNCTION_19
0x1322	    0x64488b042528	                mov rax, qword fs:[0x28]	       368	update-index.c	FUNCTION_19
0x132b	        0x488945f8	                mov qword [rbp - 8], rax	       368	update-index.c	FUNCTION_19
0x132f	            0x31c0	                            xor eax, eax	       368	update-index.c	FUNCTION_19
0x1331	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       373	update-index.c	FUNCTION_19	CALL_1
0x1338	          0x4889c7	                            mov rdi, rax	       373	update-index.c	FUNCTION_19	CALL_1
0x133b	      0xe800000000	                          call 0x4001380	       373	update-index.c	FUNCTION_19	CALL_1
0x1340	    0x898550ffffff	             mov dword [rbp - 0xb0], eax	       373	update-index.c	FUNCTION_19	CALL_1
0x1346	    0x8b9550ffffff	             mov edx, dword [rbp - 0xb0]	       374	update-index.c	FUNCTION_19	IF_1	CALL_2
0x134c	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       374	update-index.c	FUNCTION_19	IF_1	CALL_2
0x1353	            0x89d6	                            mov esi, edx	       374	update-index.c	FUNCTION_19	IF_1	CALL_2
0x1355	          0x4889c7	                            mov rdi, rax	       374	update-index.c	FUNCTION_19	IF_1	CALL_2
0x1358	      0xe800000000	                          call 0x400139d	       374	update-index.c	FUNCTION_19	IF_1	CALL_2
0x135d	            0x85c0	                           test eax, eax	       374	update-index.c	FUNCTION_19	IF_1	CALL_2
0x135f	            0x7423	                            je 0x40013c4	       374	update-index.c	FUNCTION_19	IF_1	CALL_2
0x1361	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       375	update-index.c	FUNCTION_19	CALL_3
0x1368	          0x4889c6	                            mov rsi, rax	       375	update-index.c	FUNCTION_19	CALL_3
0x136b	      0xbf00000000	                              mov edi, 0	       375	update-index.c	FUNCTION_19	CALL_3
0x1370	      0xb800000000	                              mov eax, 0	       375	update-index.c	FUNCTION_19	CALL_3
0x1375	      0xe800000000	                          call 0x40013ba	       375	update-index.c	FUNCTION_19	CALL_3
0x137a	      0xe881ecffff	                    call sym.const_error	       375	update-index.c	FUNCTION_19	CALL_3
0x137f	      0xe949010000	                           jmp 0x400150d	       375	update-index.c	FUNCTION_19	CALL_3
0x1384	    0x8b9550ffffff	             mov edx, dword [rbp - 0xb0]	       377	update-index.c	FUNCTION_19	CALL_4
0x138a	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       377	update-index.c	FUNCTION_19	CALL_4
0x1391	          0x4889c6	                            mov rsi, rax	       377	update-index.c	FUNCTION_19	CALL_4
0x1394	      0xbf00000000	                              mov edi, 0	       377	update-index.c	FUNCTION_19	CALL_4
0x1399	      0xe800000000	                          call 0x40013de	       377	update-index.c	FUNCTION_19	CALL_4
0x139e	    0x898554ffffff	             mov dword [rbp - 0xac], eax	       377	update-index.c	FUNCTION_19	CALL_4
0x13a4	    0x83bd54ffffff	               cmp dword [rbp - 0xac], 0	       378	update-index.c	FUNCTION_19
0x13ab	            0x781c	                            js 0x4001409	       378	update-index.c	FUNCTION_19
0x13ad	    0x488b05000000	            mov rax, qword [0x040013f4] 	       378	update-index.c	FUNCTION_19
0x13b4	    0x8b9554ffffff	             mov edx, dword [rbp - 0xac]	       378	update-index.c	FUNCTION_19
0x13ba	          0x4863d2	                         movsxd rdx, edx	       378	update-index.c	FUNCTION_19
0x13bd	        0x48c1e203	                              shl rdx, 3	       378	update-index.c	FUNCTION_19
0x13c1	          0x4801d0	                            add rax, rdx	       378	update-index.c	FUNCTION_19
0x13c4	          0x488b00	                    mov rax, qword [rax]	       378	update-index.c	FUNCTION_19
0x13c7	            0xeb05	                           jmp 0x400140e	       378	update-index.c	FUNCTION_19
0x13c9	      0xb800000000	                              mov eax, 0	       378	update-index.c	FUNCTION_19
0x13ce	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	       378	update-index.c	FUNCTION_19
0x13d5	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	       379	update-index.c	FUNCTION_19	IF_2	CALL_5
0x13dd	            0x7462	                            je 0x4001481	       379	update-index.c	FUNCTION_19	IF_2	CALL_5
0x13df	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       379	update-index.c	FUNCTION_19	IF_2	CALL_5
0x13e6	          0x8b4038	            mov eax, dword [rax + 0x38] 	       379	update-index.c	FUNCTION_19	IF_2	CALL_5
0x13e9	      0x2500000040	                     and eax, 0x40000000	       379	update-index.c	FUNCTION_19	IF_2	CALL_5
0x13ee	            0x85c0	                           test eax, eax	       379	update-index.c	FUNCTION_19	IF_2	CALL_5
0x13f0	            0x744f	                            je 0x4001481	       379	update-index.c	FUNCTION_19	IF_2	CALL_5
0x13f2	    0x8b0500000000	            mov eax, dword [0x04001438] 	       385	update-index.c	FUNCTION_19	IF_2	IF_3	CALL_6
0x13f8	            0x85c0	                           test eax, eax	       385	update-index.c	FUNCTION_19	IF_2	IF_3	CALL_6
0x13fa	            0x743b	                            je 0x4001477	       385	update-index.c	FUNCTION_19	IF_2	IF_3	CALL_6
0x13fc	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       385	update-index.c	FUNCTION_19	IF_2	IF_3	CALL_6
0x1403	          0x4889c6	                            mov rsi, rax	       385	update-index.c	FUNCTION_19	IF_2	IF_3	CALL_6
0x1406	      0xbf00000000	                              mov edi, 0	       385	update-index.c	FUNCTION_19	IF_2	IF_3	CALL_6
0x140b	      0xe800000000	                          call 0x4001450	       385	update-index.c	FUNCTION_19	IF_2	IF_3	CALL_6
0x1410	            0x85c0	                           test eax, eax	       385	update-index.c	FUNCTION_19	IF_2	IF_3	CALL_6
0x1412	            0x7423	                            je 0x4001477	       385	update-index.c	FUNCTION_19	IF_2	IF_3	CALL_6
0x1414	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       386	update-index.c	FUNCTION_19	IF_2	CALL_7
0x141b	          0x4889c6	                            mov rsi, rax	       386	update-index.c	FUNCTION_19	IF_2	CALL_7
0x141e	      0xbf00000000	                              mov edi, 0	       386	update-index.c	FUNCTION_19	IF_2	CALL_7
0x1423	      0xb800000000	                              mov eax, 0	       386	update-index.c	FUNCTION_19	IF_2	CALL_7
0x1428	      0xe800000000	                          call 0x400146d	       386	update-index.c	FUNCTION_19	IF_2	CALL_7
0x142d	      0xe8ceebffff	                    call sym.const_error	       386	update-index.c	FUNCTION_19	IF_2	CALL_7
0x1432	      0xe996000000	                           jmp 0x400150d	       386	update-index.c	FUNCTION_19	IF_2	CALL_7
0x1437	      0xb800000000	                              mov eax, 0	       387	update-index.c	FUNCTION_19	IF_2
0x143c	      0xe98c000000	                           jmp 0x400150d	       387	update-index.c	FUNCTION_19	IF_2
0x1441	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	       394	update-index.c	FUNCTION_19	IF_4	CALL_8
0x1448	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       394	update-index.c	FUNCTION_19	IF_4	CALL_8
0x144f	          0x4889d6	                            mov rsi, rdx	       394	update-index.c	FUNCTION_19	IF_4	CALL_8
0x1452	          0x4889c7	                            mov rdi, rax	       394	update-index.c	FUNCTION_19	IF_4	CALL_8
0x1455	      0xe800000000	                          call 0x400149a	       394	update-index.c	FUNCTION_19	IF_4	CALL_8
0x145a	            0x85c0	                           test eax, eax	       394	update-index.c	FUNCTION_19	IF_4	CALL_8
0x145c	            0x791a	                           jns 0x40014b8	       394	update-index.c	FUNCTION_19	IF_4	CALL_8
0x145e	      0xe800000000	                          call 0x40014a3	       395	update-index.c	FUNCTION_19	CALL_9
0x1463	            0x8b10	                    mov edx, dword [rax]	       395	update-index.c	FUNCTION_19	CALL_9
0x1465	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       395	update-index.c	FUNCTION_19	CALL_9
0x146c	            0x89d6	                            mov esi, edx	       395	update-index.c	FUNCTION_19	CALL_9
0x146e	          0x4889c7	                            mov rdi, rax	       395	update-index.c	FUNCTION_19	CALL_9
0x1471	      0xe8effaffff	            call sym.process_lstat_error	       395	update-index.c	FUNCTION_19	CALL_9
0x1476	            0xeb55	                           jmp 0x400150d	       395	update-index.c	FUNCTION_19	CALL_9
0x1478	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	       397	update-index.c	FUNCTION_19	IF_5	CALL_10
0x147e	      0x2500f00000	                         and eax, 0xf000	       397	update-index.c	FUNCTION_19	IF_5	CALL_10
0x1483	      0x3d00400000	                         cmp eax, 0x4000	       397	update-index.c	FUNCTION_19	IF_5	CALL_10
0x1488	            0x7520	                           jne 0x40014ea	       397	update-index.c	FUNCTION_19	IF_5	CALL_10
0x148a	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	       398	update-index.c	FUNCTION_19	CALL_11
0x1491	    0x8b8d50ffffff	             mov ecx, dword [rbp - 0xb0]	       398	update-index.c	FUNCTION_19	CALL_11
0x1497	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       398	update-index.c	FUNCTION_19	CALL_11
0x149e	            0x89ce	                            mov esi, ecx	       398	update-index.c	FUNCTION_19	CALL_11
0x14a0	          0x4889c7	                            mov rdi, rax	       398	update-index.c	FUNCTION_19	CALL_11
0x14a3	      0xe8a4fcffff	              call sym.process_directory	       398	update-index.c	FUNCTION_19	CALL_11
0x14a8	            0xeb23	                           jmp 0x400150d	       398	update-index.c	FUNCTION_19	CALL_11
0x14aa	    0x488d8d60ffff	                   lea rcx, [rbp - 0xa0]	       400	update-index.c	FUNCTION_19	CALL_12
0x14b1	    0x8b9550ffffff	             mov edx, dword [rbp - 0xb0]	       400	update-index.c	FUNCTION_19	CALL_12
0x14b7	    0x488bb548ffff	             mov rsi, qword [rbp - 0xb8]	       400	update-index.c	FUNCTION_19	CALL_12
0x14be	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       400	update-index.c	FUNCTION_19	CALL_12
0x14c5	          0x4889c7	                            mov rdi, rax	       400	update-index.c	FUNCTION_19	CALL_12
0x14c8	      0xe8edfaffff	                   call sym.add_one_path	       400	update-index.c	FUNCTION_19	CALL_12
0x14cd	        0x488b4df8	                mov rcx, qword [rbp - 8]	       401	update-index.c	FUNCTION_19
0x14d1	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       401	update-index.c	FUNCTION_19
0x14da	            0x7405	                            je 0x4001521	       401	update-index.c	FUNCTION_19
0x14dc	      0xe800000000	                          call 0x4001521	       401	update-index.c	FUNCTION_19
0x14e1	              0xc9	                                   leave	       401	update-index.c	FUNCTION_19
0x14e2	              0xc3	                                     ret	       401	update-index.c	FUNCTION_19
resolve_undo_clear_callback	FOR,0:DO,0:functions,0:ELSE,0:CALL,1:SWITCH,0:IF,0:WHILE,0	11
0x2413	              0x55	                                push rbp	       807	update-index.c	FUNCTION_33
0x2414	          0x4889e5	                            mov rbp, rsp	       807	update-index.c	FUNCTION_33
0x2417	        0x4883ec20	                           sub rsp, 0x20	       807	update-index.c	FUNCTION_33
0x241b	        0x48897df8	                mov qword [rbp - 8], rdi	       807	update-index.c	FUNCTION_33
0x241f	        0x488975f0	             mov qword [rbp - 0x10], rsi	       807	update-index.c	FUNCTION_33
0x2423	          0x8955ec	             mov dword [rbp - 0x14], edx	       807	update-index.c	FUNCTION_33
0x2426	      0xbf00000000	                              mov edi, 0	       808	update-index.c	FUNCTION_33	CALL_1
0x242b	      0xe800000000	                          call 0x4002470	       808	update-index.c	FUNCTION_33	CALL_1
0x2430	      0xb800000000	                              mov eax, 0	       809	update-index.c	FUNCTION_33
0x2435	              0xc9	                                   leave	       810	update-index.c	FUNCTION_33
0x2436	              0xc3	                                     ret	       810	update-index.c	FUNCTION_33
remove_test_directory	FOR,0:DO,0:functions,0:ELSE,0:CALL,1:SWITCH,0:IF,1:WHILE,0	11
0x64a	              0x55	                                push rbp	        65	update-index.c	FUNCTION_5
0x64b	          0x4889e5	                            mov rbp, rsp	        65	update-index.c	FUNCTION_5
0x64e	    0x488b05000000	            mov rax, qword [0x04000695] 	        66	update-index.c	FUNCTION_5	IF_1
0x655	          0x4885c0	                           test rax, rax	        66	update-index.c	FUNCTION_5	IF_1
0x658	            0x740f	                            je 0x40006a9	        66	update-index.c	FUNCTION_5	IF_1
0x65a	      0xbe00000000	                              mov esi, 0	        67	update-index.c	FUNCTION_5	CALL_1
0x65f	      0xbf00000000	                              mov edi, 0	        67	update-index.c	FUNCTION_5	CALL_1
0x664	      0xe800000000	                          call 0x40006a9	        67	update-index.c	FUNCTION_5	CALL_1
0x669	              0x90	                                     nop	        68	update-index.c	FUNCTION_5
0x66a	              0x5d	                                 pop rbp	        68	update-index.c	FUNCTION_5
0x66b	              0xc3	                                     ret	        68	update-index.c	FUNCTION_5
mark_fsmonitor_invalid	FOR,0:DO,0:functions,0:ELSE,0:CALL,2:SWITCH,0:IF,1:WHILE,0	37
0x4e2	              0x55	                                push rbp	        65	fsmonitor.h	FUNCTION_95
0x4e3	          0x4889e5	                            mov rbp, rsp	        65	fsmonitor.h	FUNCTION_95
0x4e6	        0x4883ec10	                           sub rsp, 0x10	        65	fsmonitor.h	FUNCTION_95
0x4ea	        0x48897df8	                mov qword [rbp - 8], rdi	        65	fsmonitor.h	FUNCTION_95
0x4ee	        0x488975f0	             mov qword [rbp - 0x10], rsi	        65	fsmonitor.h	FUNCTION_95
0x4f2	    0x488b05000000	            mov rax, qword [0x04000539] 	        66	fsmonitor.h	FUNCTION_95	IF_1
0x4f9	          0x4885c0	                           test rax, rax	        66	fsmonitor.h	FUNCTION_95	IF_1
0x4fc	            0x7468	                            je 0x40005a6	        66	fsmonitor.h	FUNCTION_95	IF_1
0x4fe	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        67	fsmonitor.h	FUNCTION_95	IF_1
0x502	          0x8b4038	            mov eax, dword [rax + 0x38] 	        67	fsmonitor.h	FUNCTION_95	IF_1
0x505	      0x25ffffdfff	                     and eax, 0xffdfffff	        67	fsmonitor.h	FUNCTION_95	IF_1
0x50a	            0x89c2	                            mov edx, eax	        67	fsmonitor.h	FUNCTION_95	IF_1
0x50c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        67	fsmonitor.h	FUNCTION_95	IF_1
0x510	          0x895038	             mov dword [rax + 0x38], edx	        67	fsmonitor.h	FUNCTION_95	IF_1
0x513	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        68	fsmonitor.h	FUNCTION_95	IF_1	CALL_1
0x517	        0x488d4858	                   lea rcx, [rax + 0x58]	        68	fsmonitor.h	FUNCTION_95	IF_1	CALL_1
0x51b	        0x488b45f8	                mov rax, qword [rbp - 8]	        68	fsmonitor.h	FUNCTION_95	IF_1	CALL_1
0x51f	      0xba01000000	                              mov edx, 1	        68	fsmonitor.h	FUNCTION_95	IF_1	CALL_1
0x524	          0x4889ce	                            mov rsi, rcx	        68	fsmonitor.h	FUNCTION_95	IF_1	CALL_1
0x527	          0x4889c7	                            mov rdi, rax	        68	fsmonitor.h	FUNCTION_95	IF_1	CALL_1
0x52a	      0xe800000000	                          call 0x400056f	        68	fsmonitor.h	FUNCTION_95	IF_1	CALL_1
0x52f	      0xbf00000000	                              mov edi, 0	        69	fsmonitor.h	FUNCTION_95	IF_1	CALL_2
0x534	      0xe840fdffff	                  call sym.trace_pass_fl	        69	fsmonitor.h	FUNCTION_95	IF_1	CALL_2
0x539	            0x85c0	                           test eax, eax	        69	fsmonitor.h	FUNCTION_95	IF_1	CALL_2
0x53b	            0x7429	                            je 0x40005a6	        69	fsmonitor.h	FUNCTION_95	IF_1	CALL_2
0x53d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        69	fsmonitor.h	FUNCTION_95	IF_1	CALL_2
0x541	        0x4883c058	                           add rax, 0x58	        69	fsmonitor.h	FUNCTION_95	IF_1	CALL_2
0x545	          0x4989c0	                             mov r8, rax	        69	fsmonitor.h	FUNCTION_95	IF_1	CALL_2
0x548	      0xb900000000	                              mov ecx, 0	        69	fsmonitor.h	FUNCTION_95	IF_1	CALL_2
0x54d	      0xba00000000	                              mov edx, 0	        69	fsmonitor.h	FUNCTION_95	IF_1	CALL_2
0x552	      0xbe45000000	                           mov esi, 0x45	        69	fsmonitor.h	FUNCTION_95	IF_1	CALL_2
0x557	      0xbf00000000	                              mov edi, 0	        69	fsmonitor.h	FUNCTION_95	IF_1	CALL_2
0x55c	      0xb800000000	                              mov eax, 0	        69	fsmonitor.h	FUNCTION_95	IF_1	CALL_2
0x561	      0xe800000000	                          call 0x40005a6	        69	fsmonitor.h	FUNCTION_95	IF_1	CALL_2
0x566	              0x90	                                     nop	        71	fsmonitor.h	FUNCTION_95
0x567	              0xc9	                                   leave	        71	fsmonitor.h	FUNCTION_95
0x568	              0xc3	                                     ret	        71	fsmonitor.h	FUNCTION_95
reupdate_callback	FOR,0:DO,0:functions,0:ELSE,0:CALL,3:SWITCH,0:IF,1:WHILE,0	51
0x2870	              0x55	                                push rbp	       901	update-index.c	FUNCTION_39
0x2871	          0x4889e5	                            mov rbp, rsp	       901	update-index.c	FUNCTION_39
0x2874	        0x4883ec30	                           sub rsp, 0x30	       901	update-index.c	FUNCTION_39
0x2878	        0x48897de8	             mov qword [rbp - 0x18], rdi	       901	update-index.c	FUNCTION_39
0x287c	        0x488975e0	             mov qword [rbp - 0x20], rsi	       901	update-index.c	FUNCTION_39
0x2880	          0x8955dc	             mov dword [rbp - 0x24], edx	       901	update-index.c	FUNCTION_39
0x2883	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       902	update-index.c	FUNCTION_39
0x2887	        0x488b4010	            mov rax, qword [rax + 0x10] 	       902	update-index.c	FUNCTION_39
0x288b	        0x488945f0	             mov qword [rbp - 0x10], rax	       902	update-index.c	FUNCTION_39
0x288f	    0x488b05000000	            mov rax, qword [0x040028d6] 	       903	update-index.c	FUNCTION_39
0x2896	        0x488b4008	                mov rax, qword [rax + 8]	       903	update-index.c	FUNCTION_39
0x289a	        0x488945f8	                mov qword [rbp - 8], rax	       903	update-index.c	FUNCTION_39
0x289e	      0xe800000000	                          call 0x40028e3	       906	update-index.c	FUNCTION_39	CALL_1
0x28a3	      0x48837df800	                  cmp qword [rbp - 8], 0	       907	update-index.c	FUNCTION_39	CALL_2
0x28a8	            0x7410	                            je 0x40028fa	       907	update-index.c	FUNCTION_39	CALL_2
0x28aa	        0x488b45f8	                mov rax, qword [rbp - 8]	       908	update-index.c	FUNCTION_39	CALL_3
0x28ae	          0x4889c7	                            mov rdi, rax	       908	update-index.c	FUNCTION_39	CALL_3
0x28b1	      0xe800000000	                          call 0x40028f6	       908	update-index.c	FUNCTION_39	CALL_3
0x28b6	            0x89c1	                            mov ecx, eax	       907	update-index.c	FUNCTION_39	CALL_2
0x28b8	            0xeb05	                           jmp 0x40028ff	       907	update-index.c	FUNCTION_39	CALL_2
0x28ba	      0xb900000000	                              mov ecx, 0	       907	update-index.c	FUNCTION_39	CALL_2
0x28bf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       907	update-index.c	FUNCTION_39	CALL_2
0x28c3	          0x488b30	                    mov rsi, qword [rax]	       907	update-index.c	FUNCTION_39	CALL_2
0x28c6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       907	update-index.c	FUNCTION_39	CALL_2
0x28ca	          0x8b4010	            mov eax, dword [rax + 0x10] 	       907	update-index.c	FUNCTION_39	CALL_2
0x28cd	        0x488b55f8	                mov rdx, qword [rbp - 8]	       907	update-index.c	FUNCTION_39	CALL_2
0x28d1	            0x89c7	                            mov edi, eax	       907	update-index.c	FUNCTION_39	CALL_2
0x28d3	      0xe824f8ffff	                    call sym.do_reupdate	       907	update-index.c	FUNCTION_39	CALL_2
0x28d8	            0x89c2	                            mov edx, eax	       907	update-index.c	FUNCTION_39	CALL_2
0x28da	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       907	update-index.c	FUNCTION_39	CALL_2
0x28de	            0x8910	                    mov dword [rax], edx	       907	update-index.c	FUNCTION_39	CALL_2
0x28e0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       909	update-index.c	FUNCTION_39	IF_1
0x28e4	            0x8b00	                    mov eax, dword [rax]	       909	update-index.c	FUNCTION_39	IF_1
0x28e6	            0x85c0	                           test eax, eax	       909	update-index.c	FUNCTION_39	IF_1
0x28e8	            0x740a	                            je 0x4002934	       909	update-index.c	FUNCTION_39	IF_1
0x28ea	    0xc70500000000	               mov dword [0x04002934], 0	       910	update-index.c	FUNCTION_39	IF_1
0x28f4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       912	update-index.c	FUNCTION_39
0x28f8	          0x488b10	                    mov rdx, qword [rax]	       912	update-index.c	FUNCTION_39
0x28fb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       912	update-index.c	FUNCTION_39
0x28ff	          0x8b4010	            mov eax, dword [rax + 0x10] 	       912	update-index.c	FUNCTION_39
0x2902	            0x4898	                                    cdqe	       912	update-index.c	FUNCTION_39
0x2904	        0x48c1e003	                              shl rax, 3	       912	update-index.c	FUNCTION_39
0x2908	        0x4883e808	                              sub rax, 8	       912	update-index.c	FUNCTION_39
0x290c	          0x4801c2	                            add rdx, rax	       912	update-index.c	FUNCTION_39
0x290f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       912	update-index.c	FUNCTION_39
0x2913	          0x488910	                    mov qword [rax], rdx	       912	update-index.c	FUNCTION_39
0x2916	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       913	update-index.c	FUNCTION_39
0x291a	    0xc74010010000	               mov dword [rax + 0x10], 1	       913	update-index.c	FUNCTION_39
0x2921	      0xb800000000	                              mov eax, 0	       914	update-index.c	FUNCTION_39
0x2926	              0xc9	                                   leave	       915	update-index.c	FUNCTION_39
0x2927	              0xc3	                                     ret	       915	update-index.c	FUNCTION_39
do_reupdate	FOR,1:DO,0:functions,0:ELSE,0:CALL,13:SWITCH,0:IF,5:WHILE,0	123
0x20fc	              0x55	                                push rbp	       720	update-index.c	FUNCTION_28
0x20fd	          0x4889e5	                            mov rbp, rsp	       720	update-index.c	FUNCTION_28
0x2100	        0x4883ec70	                           sub rsp, 0x70	       720	update-index.c	FUNCTION_28
0x2104	          0x897dac	             mov dword [rbp - 0x54], edi	       720	update-index.c	FUNCTION_28
0x2107	        0x488975a0	             mov qword [rbp - 0x60], rsi	       720	update-index.c	FUNCTION_28
0x210b	        0x48895598	             mov qword [rbp - 0x68], rdx	       720	update-index.c	FUNCTION_28
0x210f	          0x894da8	             mov dword [rbp - 0x58], ecx	       720	update-index.c	FUNCTION_28
0x2112	    0x64488b042528	                mov rax, qword fs:[0x28]	       720	update-index.c	FUNCTION_28
0x211b	        0x488945f8	                mov qword [rbp - 8], rax	       720	update-index.c	FUNCTION_28
0x211f	            0x31c0	                            xor eax, eax	       720	update-index.c	FUNCTION_28
0x2121	    0xc745c0010000	               mov dword [rbp - 0x40], 1	       725	update-index.c	FUNCTION_28
0x2128	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       728	update-index.c	FUNCTION_28	CALL_1
0x212c	        0x488d4808	                      lea rcx, [rax + 8]	       728	update-index.c	FUNCTION_28	CALL_1
0x2130	        0x488b5598	             mov rdx, qword [rbp - 0x68]	       728	update-index.c	FUNCTION_28	CALL_1
0x2134	        0x488d45e0	                   lea rax, [rbp - 0x20]	       728	update-index.c	FUNCTION_28	CALL_1
0x2138	          0x4989c8	                             mov r8, rcx	       728	update-index.c	FUNCTION_28	CALL_1
0x213b	          0x4889d1	                            mov rcx, rdx	       728	update-index.c	FUNCTION_28	CALL_1
0x213e	      0xba01000000	                              mov edx, 1	       728	update-index.c	FUNCTION_28	CALL_1
0x2143	      0xbe00000000	                              mov esi, 0	       728	update-index.c	FUNCTION_28	CALL_1
0x2148	          0x4889c7	                            mov rdi, rax	       728	update-index.c	FUNCTION_28	CALL_1
0x214b	      0xe800000000	                          call 0x4002190	       728	update-index.c	FUNCTION_28	CALL_1
0x2150	      0xbe00000000	                              mov esi, 0	       732	update-index.c	FUNCTION_28	IF_1	CALL_2
0x2155	      0xbf00000000	                              mov edi, 0	       732	update-index.c	FUNCTION_28	IF_1	CALL_2
0x215a	      0xe800000000	                          call 0x400219f	       732	update-index.c	FUNCTION_28	IF_1	CALL_2
0x215f	            0x85c0	                           test eax, eax	       732	update-index.c	FUNCTION_28	IF_1	CALL_2
0x2161	            0x7407	                            je 0x40021aa	       732	update-index.c	FUNCTION_28	IF_1	CALL_2
0x2163	    0xc745c0000000	               mov dword [rbp - 0x40], 0	       736	update-index.c	FUNCTION_28	IF_1
0x216a	    0xc745bc000000	               mov dword [rbp - 0x44], 0	       738	update-index.c	FUNCTION_28	FOR_1
0x2171	      0xe92d010000	                           jmp 0x40022e3	       738	update-index.c	FUNCTION_28	FOR_1
0x2176	    0x488b05000000	            mov rax, qword [0x040021bd] 	       739	update-index.c	FUNCTION_28	FOR_1
0x217d	          0x8b55bc	             mov edx, dword [rbp - 0x44]	       739	update-index.c	FUNCTION_28	FOR_1
0x2180	          0x4863d2	                         movsxd rdx, edx	       739	update-index.c	FUNCTION_28	FOR_1
0x2183	        0x48c1e203	                              shl rdx, 3	       739	update-index.c	FUNCTION_28	FOR_1
0x2187	          0x4801d0	                            add rax, rdx	       739	update-index.c	FUNCTION_28	FOR_1
0x218a	          0x488b00	                    mov rax, qword [rax]	       739	update-index.c	FUNCTION_28	FOR_1
0x218d	        0x488945d0	             mov qword [rbp - 0x30], rax	       739	update-index.c	FUNCTION_28	FOR_1
0x2191	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       740	update-index.c	FUNCTION_28	FOR_1
0x2199	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       744	update-index.c	FUNCTION_28	FOR_1	IF_2	CALL_4
0x219d	          0x8b4038	            mov eax, dword [rax + 0x38] 	       744	update-index.c	FUNCTION_28	FOR_1	IF_2	CALL_4
0x21a0	      0x2500300000	                         and eax, 0x3000	       744	update-index.c	FUNCTION_28	FOR_1	IF_2	CALL_4
0x21a5	          0xc1e80c	                            shr eax, 0xc	       744	update-index.c	FUNCTION_28	FOR_1	IF_2	CALL_4
0x21a8	            0x85c0	                           test eax, eax	       744	update-index.c	FUNCTION_28	FOR_1	IF_2	CALL_4
0x21aa	     0xf85ee000000	                           jne 0x40022de	       744	update-index.c	FUNCTION_28	FOR_1	IF_2	CALL_4
0x21b0	        0x488d4de0	                   lea rcx, [rbp - 0x20]	       744	update-index.c	FUNCTION_28	FOR_1	IF_2	CALL_4
0x21b4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       744	update-index.c	FUNCTION_28	FOR_1	IF_2	CALL_4
0x21b8	      0xba00000000	                              mov edx, 0	       744	update-index.c	FUNCTION_28	FOR_1	IF_2	CALL_4
0x21bd	          0x4889ce	                            mov rsi, rcx	       744	update-index.c	FUNCTION_28	FOR_1	IF_2	CALL_4
0x21c0	          0x4889c7	                            mov rdi, rax	       744	update-index.c	FUNCTION_28	FOR_1	IF_2	CALL_4
0x21c3	      0xe8a4e2ffff	                  call sym.ce_path_match	       744	update-index.c	FUNCTION_28	FOR_1	IF_2	CALL_4
0x21c8	            0x85c0	                           test eax, eax	       744	update-index.c	FUNCTION_28	FOR_1	IF_2	CALL_4
0x21ca	     0xf84ce000000	                            je 0x40022de	       744	update-index.c	FUNCTION_28	FOR_1	IF_2	CALL_4
0x21d0	        0x837dc000	               cmp dword [rbp - 0x40], 0	       746	update-index.c	FUNCTION_28	FOR_1	IF_3
0x21d4	            0x742f	                            je 0x4002245	       746	update-index.c	FUNCTION_28	FOR_1	IF_3
0x21d6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       748	update-index.c	FUNCTION_28	FOR_1	CALL_6
0x21da	          0x8b403c	            mov eax, dword [rax + 0x3c] 	       748	update-index.c	FUNCTION_28	FOR_1	CALL_6
0x21dd	            0x89c2	                            mov edx, eax	       747	update-index.c	FUNCTION_28	FOR_1	IF_3	CALL_5
0x21df	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       748	update-index.c	FUNCTION_28	FOR_1	CALL_6
0x21e3	        0x4883c058	                           add rax, 0x58	       748	update-index.c	FUNCTION_28	FOR_1	CALL_6
0x21e7	    0x41b800000000	                              mov r8d, 0	       747	update-index.c	FUNCTION_28	FOR_1	IF_3	CALL_5
0x21ed	            0x89d1	                            mov ecx, edx	       747	update-index.c	FUNCTION_28	FOR_1	IF_3	CALL_5
0x21ef	          0x4889c2	                            mov rdx, rax	       747	update-index.c	FUNCTION_28	FOR_1	IF_3	CALL_5
0x21f2	      0xbe00000000	                              mov esi, 0	       747	update-index.c	FUNCTION_28	FOR_1	IF_3	CALL_5
0x21f7	      0xbf00000000	                              mov edi, 0	       747	update-index.c	FUNCTION_28	FOR_1	IF_3	CALL_5
0x21fc	      0xe8f4f9ffff	                   call sym.read_one_ent	       747	update-index.c	FUNCTION_28	FOR_1	IF_3	CALL_5
0x2201	        0x488945c8	             mov qword [rbp - 0x38], rax	       747	update-index.c	FUNCTION_28	FOR_1	IF_3	CALL_5
0x2205	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       749	update-index.c	FUNCTION_28	FOR_1	IF_4
0x220a	            0x743f	                            je 0x400228b	       749	update-index.c	FUNCTION_28	FOR_1	IF_4
0x220c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       749	update-index.c	FUNCTION_28	FOR_1	IF_4
0x2210	          0x8b5034	            mov edx, dword [rax + 0x34] 	       749	update-index.c	FUNCTION_28	FOR_1	IF_4
0x2213	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       749	update-index.c	FUNCTION_28	FOR_1	IF_4
0x2217	          0x8b4034	            mov eax, dword [rax + 0x34] 	       749	update-index.c	FUNCTION_28	FOR_1	IF_4
0x221a	            0x39c2	                            cmp edx, eax	       749	update-index.c	FUNCTION_28	FOR_1	IF_4
0x221c	            0x752d	                           jne 0x400228b	       749	update-index.c	FUNCTION_28	FOR_1	IF_4
0x221e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       750	update-index.c	FUNCTION_28	FOR_1	IF_4	CALL_7
0x2222	        0x488d5044	                   lea rdx, [rax + 0x44]	       750	update-index.c	FUNCTION_28	FOR_1	IF_4	CALL_7
0x2226	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       750	update-index.c	FUNCTION_28	FOR_1	IF_4	CALL_7
0x222a	        0x4883c044	                           add rax, 0x44	       750	update-index.c	FUNCTION_28	FOR_1	IF_4	CALL_7
0x222e	          0x4889d6	                            mov rsi, rdx	       750	update-index.c	FUNCTION_28	FOR_1	IF_4	CALL_7
0x2231	          0x4889c7	                            mov rdi, rax	       750	update-index.c	FUNCTION_28	FOR_1	IF_4	CALL_7
0x2234	      0xe8a2e1ffff	                         call sym.oidcmp	       750	update-index.c	FUNCTION_28	FOR_1	IF_4	CALL_7
0x2239	            0x85c0	                           test eax, eax	       749	update-index.c	FUNCTION_28	FOR_1	IF_4
0x223b	            0x750e	                           jne 0x400228b	       749	update-index.c	FUNCTION_28	FOR_1	IF_4
0x223d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       751	update-index.c	FUNCTION_28	FOR_1	IF_4	CALL_8
0x2241	          0x4889c7	                            mov rdi, rax	       751	update-index.c	FUNCTION_28	FOR_1	IF_4	CALL_8
0x2244	      0xe800000000	                          call 0x4002289	       751	update-index.c	FUNCTION_28	FOR_1	IF_4	CALL_8
0x2249	            0xeb54	                           jmp 0x40022df	       752	update-index.c	FUNCTION_28	FOR_1	IF_4
0x224b	    0x8b0500000000	            mov eax, dword [0x04002291] 	       758	update-index.c	FUNCTION_28	FOR_1
0x2251	          0x8945c4	             mov dword [rbp - 0x3c], eax	       758	update-index.c	FUNCTION_28	FOR_1
0x2254	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       759	update-index.c	FUNCTION_28	FOR_1	CALL_9
0x2258	        0x4883c058	                           add rax, 0x58	       759	update-index.c	FUNCTION_28	FOR_1	CALL_9
0x225c	          0x4889c7	                            mov rdi, rax	       759	update-index.c	FUNCTION_28	FOR_1	CALL_9
0x225f	      0xe800000000	                          call 0x40022a4	       759	update-index.c	FUNCTION_28	FOR_1	CALL_9
0x2264	        0x488945d8	             mov qword [rbp - 0x28], rax	       759	update-index.c	FUNCTION_28	FOR_1	CALL_9
0x2268	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       760	update-index.c	FUNCTION_28	FOR_1	CALL_10
0x226c	          0x4889c7	                            mov rdi, rax	       760	update-index.c	FUNCTION_28	FOR_1	CALL_10
0x226f	      0xe887f4ffff	                     call sym.update_one	       760	update-index.c	FUNCTION_28	FOR_1	CALL_10
0x2274	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       761	update-index.c	FUNCTION_28	FOR_1	CALL_11
0x2278	          0x4889c7	                            mov rdi, rax	       761	update-index.c	FUNCTION_28	FOR_1	CALL_11
0x227b	      0xe800000000	                          call 0x40022c0	       761	update-index.c	FUNCTION_28	FOR_1	CALL_11
0x2280	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       762	update-index.c	FUNCTION_28	FOR_1	CALL_12
0x2284	          0x4889c7	                            mov rdi, rax	       762	update-index.c	FUNCTION_28	FOR_1	CALL_12
0x2287	      0xe800000000	                          call 0x40022cc	       762	update-index.c	FUNCTION_28	FOR_1	CALL_12
0x228c	    0x8b1500000000	            mov edx, dword [0x040022d2] 	       763	update-index.c	FUNCTION_28	FOR_1	IF_5
0x2292	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       763	update-index.c	FUNCTION_28	FOR_1	IF_5
0x2295	            0x39c2	                            cmp edx, eax	       763	update-index.c	FUNCTION_28	FOR_1	IF_5
0x2297	            0x7406	                            je 0x40022df	       763	update-index.c	FUNCTION_28	FOR_1	IF_5
0x2299	      0xe9ccfeffff	                           jmp 0x40021aa	       764	update-index.c	FUNCTION_28	FOR_1	IF_5
0x229e	              0x90	                                     nop	       745	update-index.c	FUNCTION_28	FOR_1	IF_2
0x229f	        0x8345bc01	               add dword [rbp - 0x44], 1	       738	update-index.c	FUNCTION_28	FOR_1
0x22a3	    0x8b1500000000	            mov edx, dword [0x040022e9] 	       738	update-index.c	FUNCTION_28	FOR_1
0x22a9	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       738	update-index.c	FUNCTION_28	FOR_1
0x22ac	            0x39c2	                            cmp edx, eax	       738	update-index.c	FUNCTION_28	FOR_1
0x22ae	     0xf87c2feffff	                            ja 0x40021b6	       738	update-index.c	FUNCTION_28	FOR_1
0x22b4	        0x488d45e0	                   lea rax, [rbp - 0x20]	       766	update-index.c	FUNCTION_28	CALL_13
0x22b8	          0x4889c7	                            mov rdi, rax	       766	update-index.c	FUNCTION_28	CALL_13
0x22bb	      0xe800000000	                          call 0x4002300	       766	update-index.c	FUNCTION_28	CALL_13
0x22c0	      0xb800000000	                              mov eax, 0	       767	update-index.c	FUNCTION_28
0x22c5	        0x488b75f8	                mov rsi, qword [rbp - 8]	       768	update-index.c	FUNCTION_28
0x22c9	    0x644833342528	                xor rsi, qword fs:[0x28]	       768	update-index.c	FUNCTION_28
0x22d2	            0x7405	                            je 0x4002319	       768	update-index.c	FUNCTION_28
0x22d4	      0xe800000000	                          call 0x4002319	       768	update-index.c	FUNCTION_28
0x22d9	              0xc9	                                   leave	       768	update-index.c	FUNCTION_28
0x22da	              0xc3	                                     ret	       768	update-index.c	FUNCTION_28
xstat_mtime_dir	FOR,0:DO,0:functions,0:ELSE,0:CALL,3:SWITCH,0:IF,1:WHILE,0	24
0x70a	              0x55	                                push rbp	        86	update-index.c	FUNCTION_8
0x70b	          0x4889e5	                            mov rbp, rsp	        86	update-index.c	FUNCTION_8
0x70e	              0x53	                                push rbx	        86	update-index.c	FUNCTION_8
0x70f	        0x4883ec18	                           sub rsp, 0x18	        86	update-index.c	FUNCTION_8
0x713	        0x48897de8	             mov qword [rbp - 0x18], rdi	        86	update-index.c	FUNCTION_8
0x717	    0x488b05000000	            mov rax, qword [0x0400075e] 	        87	update-index.c	FUNCTION_8	IF_1	CALL_1
0x71e	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        87	update-index.c	FUNCTION_8	IF_1	CALL_1
0x722	          0x4889d6	                            mov rsi, rdx	        87	update-index.c	FUNCTION_8	IF_1	CALL_1
0x725	          0x4889c7	                            mov rdi, rax	        87	update-index.c	FUNCTION_8	IF_1	CALL_1
0x728	      0xe800000000	                          call 0x400076d	        87	update-index.c	FUNCTION_8	IF_1	CALL_1
0x72d	            0x85c0	                           test eax, eax	        87	update-index.c	FUNCTION_8	IF_1	CALL_1
0x72f	            0x7421	                            je 0x4000792	        87	update-index.c	FUNCTION_8	IF_1	CALL_1
0x731	    0x488b1d000000	            mov rbx, qword [0x04000778] 	        88	update-index.c	FUNCTION_8	CALL_3
0x738	      0xbf00000000	                              mov edi, 0	        88	update-index.c	FUNCTION_8	CALL_3
0x73d	      0xe80bfbffff	                               call sym.	        88	update-index.c	FUNCTION_8	CALL_3
0x742	          0x4889de	                            mov rsi, rbx	        88	update-index.c	FUNCTION_8	CALL_3
0x745	          0x4889c7	                            mov rdi, rax	        88	update-index.c	FUNCTION_8	CALL_3
0x748	      0xb800000000	                              mov eax, 0	        88	update-index.c	FUNCTION_8	CALL_3
0x74d	      0xe800000000	                          call 0x4000792	        88	update-index.c	FUNCTION_8	CALL_3
0x752	      0xb800000000	                              mov eax, 0	        89	update-index.c	FUNCTION_8
0x757	        0x4883c418	                           add rsp, 0x18	        90	update-index.c	FUNCTION_8
0x75b	              0x5b	                                 pop rbx	        90	update-index.c	FUNCTION_8
0x75c	              0x5d	                                 pop rbp	        90	update-index.c	FUNCTION_8
0x75d	              0xc3	                                     ret	        90	update-index.c	FUNCTION_8
remove_one_path	FOR,0:DO,0:functions,0:ELSE,0:CALL,3:SWITCH,0:IF,2:WHILE,0	30
0xef9	              0x55	                                push rbp	       247	update-index.c	FUNCTION_15
0xefa	          0x4889e5	                            mov rbp, rsp	       247	update-index.c	FUNCTION_15
0xefd	        0x4883ec10	                           sub rsp, 0x10	       247	update-index.c	FUNCTION_15
0xf01	        0x48897df8	                mov qword [rbp - 8], rdi	       247	update-index.c	FUNCTION_15
0xf05	    0x8b0500000000	            mov eax, dword [0x04000f4b] 	       248	update-index.c	FUNCTION_15	IF_1
0xf0b	            0x85c0	                           test eax, eax	       248	update-index.c	FUNCTION_15	IF_1
0xf0d	            0x751d	                           jne 0x4000f6c	       248	update-index.c	FUNCTION_15	IF_1
0xf0f	        0x488b45f8	                mov rax, qword [rbp - 8]	       249	update-index.c	FUNCTION_15	CALL_1
0xf13	          0x4889c6	                            mov rsi, rax	       249	update-index.c	FUNCTION_15	CALL_1
0xf16	      0xbf00000000	                              mov edi, 0	       249	update-index.c	FUNCTION_15	CALL_1
0xf1b	      0xb800000000	                              mov eax, 0	       249	update-index.c	FUNCTION_15	CALL_1
0xf20	      0xe800000000	                          call 0x4000f65	       249	update-index.c	FUNCTION_15	CALL_1
0xf25	      0xe8d6f0ffff	                    call sym.const_error	       249	update-index.c	FUNCTION_15	CALL_1
0xf2a	            0xeb37	                           jmp 0x4000fa3	       249	update-index.c	FUNCTION_15	CALL_1
0xf2c	        0x488b45f8	                mov rax, qword [rbp - 8]	       250	update-index.c	FUNCTION_15	IF_2	CALL_2
0xf30	          0x4889c6	                            mov rsi, rax	       250	update-index.c	FUNCTION_15	IF_2	CALL_2
0xf33	      0xbf00000000	                              mov edi, 0	       250	update-index.c	FUNCTION_15	IF_2	CALL_2
0xf38	      0xe800000000	                          call 0x4000f7d	       250	update-index.c	FUNCTION_15	IF_2	CALL_2
0xf3d	            0x85c0	                           test eax, eax	       250	update-index.c	FUNCTION_15	IF_2	CALL_2
0xf3f	            0x741d	                            je 0x4000f9e	       250	update-index.c	FUNCTION_15	IF_2	CALL_2
0xf41	        0x488b45f8	                mov rax, qword [rbp - 8]	       251	update-index.c	FUNCTION_15	CALL_3
0xf45	          0x4889c6	                            mov rsi, rax	       251	update-index.c	FUNCTION_15	CALL_3
0xf48	      0xbf00000000	                              mov edi, 0	       251	update-index.c	FUNCTION_15	CALL_3
0xf4d	      0xb800000000	                              mov eax, 0	       251	update-index.c	FUNCTION_15	CALL_3
0xf52	      0xe800000000	                          call 0x4000f97	       251	update-index.c	FUNCTION_15	CALL_3
0xf57	      0xe8a4f0ffff	                    call sym.const_error	       251	update-index.c	FUNCTION_15	CALL_3
0xf5c	            0xeb05	                           jmp 0x4000fa3	       251	update-index.c	FUNCTION_15	CALL_3
0xf5e	      0xb800000000	                              mov eax, 0	       252	update-index.c	FUNCTION_15
0xf63	              0xc9	                                   leave	       253	update-index.c	FUNCTION_15
0xf64	              0xc3	                                     ret	       253	update-index.c	FUNCTION_15
is_missing_file_error	FOR,0:DO,0:functions,0:ELSE,0:CALL,0:SWITCH,0:IF,0:WHILE,0	12
0xc9	              0x55	                                push rbp	      1196	git-compat-util.h	FUNCTION_67
0xca	          0x4889e5	                            mov rbp, rsp	      1196	git-compat-util.h	FUNCTION_67
0xcd	          0x897dfc	                mov dword [rbp - 4], edi	      1196	git-compat-util.h	FUNCTION_67
0xd0	        0x837dfc02	                  cmp dword [rbp - 4], 2	      1197	git-compat-util.h	FUNCTION_67
0xd4	            0x7406	                            je 0x400011c	      1197	git-compat-util.h	FUNCTION_67
0xd6	        0x837dfc14	               cmp dword [rbp - 4], 0x14	      1197	git-compat-util.h	FUNCTION_67
0xda	            0x7507	                           jne 0x4000123	      1197	git-compat-util.h	FUNCTION_67
0xdc	      0xb801000000	                              mov eax, 1	      1197	git-compat-util.h	FUNCTION_67
0xe1	            0xeb05	                           jmp 0x4000128	      1197	git-compat-util.h	FUNCTION_67
0xe3	      0xb800000000	                              mov eax, 0	      1197	git-compat-util.h	FUNCTION_67
0xe8	              0x5d	                                 pop rbp	      1198	git-compat-util.h	FUNCTION_67
0xe9	              0xc3	                                     ret	      1198	git-compat-util.h	FUNCTION_67
unresolve_callback	FOR,0:DO,0:functions,0:ELSE,0:CALL,2:SWITCH,0:IF,1:WHILE,0	50
0x27bd	              0x55	                                push rbp	       884	update-index.c	FUNCTION_38
0x27be	          0x4889e5	                            mov rbp, rsp	       884	update-index.c	FUNCTION_38
0x27c1	        0x4883ec30	                           sub rsp, 0x30	       884	update-index.c	FUNCTION_38
0x27c5	        0x48897de8	             mov qword [rbp - 0x18], rdi	       884	update-index.c	FUNCTION_38
0x27c9	        0x488975e0	             mov qword [rbp - 0x20], rsi	       884	update-index.c	FUNCTION_38
0x27cd	          0x8955dc	             mov dword [rbp - 0x24], edx	       884	update-index.c	FUNCTION_38
0x27d0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       885	update-index.c	FUNCTION_38
0x27d4	        0x488b4010	            mov rax, qword [rax + 0x10] 	       885	update-index.c	FUNCTION_38
0x27d8	        0x488945f0	             mov qword [rbp - 0x10], rax	       885	update-index.c	FUNCTION_38
0x27dc	    0x488b05000000	            mov rax, qword [0x04002823] 	       886	update-index.c	FUNCTION_38
0x27e3	        0x488b4008	                mov rax, qword [rax + 8]	       886	update-index.c	FUNCTION_38
0x27e7	        0x488945f8	                mov qword [rbp - 8], rax	       886	update-index.c	FUNCTION_38
0x27eb	      0x48837df800	                  cmp qword [rbp - 8], 0	       889	update-index.c	FUNCTION_38	CALL_1
0x27f0	            0x7410	                            je 0x4002842	       889	update-index.c	FUNCTION_38	CALL_1
0x27f2	        0x488b45f8	                mov rax, qword [rbp - 8]	       890	update-index.c	FUNCTION_38	CALL_2
0x27f6	          0x4889c7	                            mov rdi, rax	       890	update-index.c	FUNCTION_38	CALL_2
0x27f9	      0xe800000000	                          call 0x400283e	       890	update-index.c	FUNCTION_38	CALL_2
0x27fe	            0x89c1	                            mov ecx, eax	       889	update-index.c	FUNCTION_38	CALL_1
0x2800	            0xeb05	                           jmp 0x4002847	       889	update-index.c	FUNCTION_38	CALL_1
0x2802	      0xb900000000	                              mov ecx, 0	       889	update-index.c	FUNCTION_38	CALL_1
0x2807	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       889	update-index.c	FUNCTION_38	CALL_1
0x280b	          0x488b30	                    mov rsi, qword [rax]	       889	update-index.c	FUNCTION_38	CALL_1
0x280e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       889	update-index.c	FUNCTION_38	CALL_1
0x2812	          0x8b4010	            mov eax, dword [rax + 0x10] 	       889	update-index.c	FUNCTION_38	CALL_1
0x2815	        0x488b55f8	                mov rdx, qword [rbp - 8]	       889	update-index.c	FUNCTION_38	CALL_1
0x2819	            0x89c7	                            mov edi, eax	       889	update-index.c	FUNCTION_38	CALL_1
0x281b	      0xe851f8ffff	                   call sym.do_unresolve	       889	update-index.c	FUNCTION_38	CALL_1
0x2820	            0x89c2	                            mov edx, eax	       889	update-index.c	FUNCTION_38	CALL_1
0x2822	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       889	update-index.c	FUNCTION_38	CALL_1
0x2826	            0x8910	                    mov dword [rax], edx	       889	update-index.c	FUNCTION_38	CALL_1
0x2828	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       891	update-index.c	FUNCTION_38	IF_1
0x282c	            0x8b00	                    mov eax, dword [rax]	       891	update-index.c	FUNCTION_38	IF_1
0x282e	            0x85c0	                           test eax, eax	       891	update-index.c	FUNCTION_38	IF_1
0x2830	            0x740a	                            je 0x400287c	       891	update-index.c	FUNCTION_38	IF_1
0x2832	    0xc70500000000	               mov dword [0x0400287c], 0	       892	update-index.c	FUNCTION_38	IF_1
0x283c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       894	update-index.c	FUNCTION_38
0x2840	          0x488b10	                    mov rdx, qword [rax]	       894	update-index.c	FUNCTION_38
0x2843	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       894	update-index.c	FUNCTION_38
0x2847	          0x8b4010	            mov eax, dword [rax + 0x10] 	       894	update-index.c	FUNCTION_38
0x284a	            0x4898	                                    cdqe	       894	update-index.c	FUNCTION_38
0x284c	        0x48c1e003	                              shl rax, 3	       894	update-index.c	FUNCTION_38
0x2850	        0x4883e808	                              sub rax, 8	       894	update-index.c	FUNCTION_38
0x2854	          0x4801c2	                            add rdx, rax	       894	update-index.c	FUNCTION_38
0x2857	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       894	update-index.c	FUNCTION_38
0x285b	          0x488910	                    mov qword [rax], rdx	       894	update-index.c	FUNCTION_38
0x285e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       895	update-index.c	FUNCTION_38
0x2862	    0xc74010010000	               mov dword [rax + 0x10], 1	       895	update-index.c	FUNCTION_38
0x2869	      0xb800000000	                              mov eax, 0	       896	update-index.c	FUNCTION_38
0x286e	              0xc9	                                   leave	       897	update-index.c	FUNCTION_38
0x286f	              0xc3	                                     ret	       897	update-index.c	FUNCTION_38
mark_ce_flags	FOR,0:DO,0:functions,0:ELSE,1:CALL,4:SWITCH,0:IF,2:WHILE,0	90
0xdaf	              0x55	                                push rbp	       229	update-index.c	FUNCTION_14
0xdb0	          0x4889e5	                            mov rbp, rsp	       229	update-index.c	FUNCTION_14
0xdb3	        0x4883ec20	                           sub rsp, 0x20	       229	update-index.c	FUNCTION_14
0xdb7	        0x48897de8	             mov qword [rbp - 0x18], rdi	       229	update-index.c	FUNCTION_14
0xdbb	          0x8975e4	             mov dword [rbp - 0x1c], esi	       229	update-index.c	FUNCTION_14
0xdbe	          0x8955e0	             mov dword [rbp - 0x20], edx	       229	update-index.c	FUNCTION_14
0xdc1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       230	update-index.c	FUNCTION_14	CALL_1
0xdc5	          0x4889c7	                            mov rdi, rax	       230	update-index.c	FUNCTION_14	CALL_1
0xdc8	      0xe800000000	                          call 0x4000e0d	       230	update-index.c	FUNCTION_14	CALL_1
0xdcd	          0x8945f8	                mov dword [rbp - 8], eax	       230	update-index.c	FUNCTION_14	CALL_1
0xdd0	          0x8b55f8	                mov edx, dword [rbp - 8]	       231	update-index.c	FUNCTION_14	CALL_2
0xdd3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       231	update-index.c	FUNCTION_14	CALL_2
0xdd7	          0x4889c6	                            mov rsi, rax	       231	update-index.c	FUNCTION_14	CALL_2
0xdda	      0xbf00000000	                              mov edi, 0	       231	update-index.c	FUNCTION_14	CALL_2
0xddf	      0xe800000000	                          call 0x4000e24	       231	update-index.c	FUNCTION_14	CALL_2
0xde4	          0x8945fc	                mov dword [rbp - 4], eax	       231	update-index.c	FUNCTION_14	CALL_2
0xde7	        0x837dfc00	                  cmp dword [rbp - 4], 0	       232	update-index.c	FUNCTION_14	IF_1
0xdeb	     0xf8801010000	                            js 0x4000f32	       232	update-index.c	FUNCTION_14	IF_1
0xdf1	    0x488b05000000	            mov rax, qword [0x04000e38] 	       233	update-index.c	FUNCTION_14	IF_1	CALL_3
0xdf8	          0x8b55fc	                mov edx, dword [rbp - 4]	       233	update-index.c	FUNCTION_14	IF_1	CALL_3
0xdfb	          0x4863d2	                         movsxd rdx, edx	       233	update-index.c	FUNCTION_14	IF_1	CALL_3
0xdfe	        0x48c1e203	                              shl rdx, 3	       233	update-index.c	FUNCTION_14	IF_1	CALL_3
0xe02	          0x4801d0	                            add rax, rdx	       233	update-index.c	FUNCTION_14	IF_1	CALL_3
0xe05	          0x488b00	                    mov rax, qword [rax]	       233	update-index.c	FUNCTION_14	IF_1	CALL_3
0xe08	          0x4889c6	                            mov rsi, rax	       233	update-index.c	FUNCTION_14	IF_1	CALL_3
0xe0b	      0xbf00000000	                              mov edi, 0	       233	update-index.c	FUNCTION_14	IF_1	CALL_3
0xe10	      0xe8cdf6ffff	         call sym.mark_fsmonitor_invalid	       233	update-index.c	FUNCTION_14	IF_1	CALL_3
0xe15	        0x837de000	               cmp dword [rbp - 0x20], 0	       234	update-index.c	FUNCTION_14	IF_1	IF_2
0xe19	            0x743b	                            je 0x4000e96	       234	update-index.c	FUNCTION_14	IF_1	IF_2
0xe1b	    0x488b05000000	            mov rax, qword [0x04000e62] 	       235	update-index.c	FUNCTION_14	IF_1	IF_2
0xe22	          0x8b55fc	                mov edx, dword [rbp - 4]	       235	update-index.c	FUNCTION_14	IF_1	IF_2
0xe25	          0x4863d2	                         movsxd rdx, edx	       235	update-index.c	FUNCTION_14	IF_1	IF_2
0xe28	        0x48c1e203	                              shl rdx, 3	       235	update-index.c	FUNCTION_14	IF_1	IF_2
0xe2c	          0x4801d0	                            add rax, rdx	       235	update-index.c	FUNCTION_14	IF_1	IF_2
0xe2f	          0x488b00	                    mov rax, qword [rax]	       235	update-index.c	FUNCTION_14	IF_1	IF_2
0xe32	    0x488b15000000	            mov rdx, qword [0x04000e79] 	       235	update-index.c	FUNCTION_14	IF_1	IF_2
0xe39	          0x8b4dfc	                mov ecx, dword [rbp - 4]	       235	update-index.c	FUNCTION_14	IF_1	IF_2
0xe3c	          0x4863c9	                         movsxd rcx, ecx	       235	update-index.c	FUNCTION_14	IF_1	IF_2
0xe3f	        0x48c1e103	                              shl rcx, 3	       235	update-index.c	FUNCTION_14	IF_1	IF_2
0xe43	          0x4801ca	                            add rdx, rcx	       235	update-index.c	FUNCTION_14	IF_1	IF_2
0xe46	          0x488b12	                    mov rdx, qword [rdx]	       235	update-index.c	FUNCTION_14	IF_1	IF_2
0xe49	          0x8b4a38	            mov ecx, dword [rdx + 0x38] 	       235	update-index.c	FUNCTION_14	IF_1	IF_2
0xe4c	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       235	update-index.c	FUNCTION_14	IF_1	IF_2
0xe4f	             0x9ca	                             or edx, ecx	       235	update-index.c	FUNCTION_14	IF_1	IF_2
0xe51	          0x895038	             mov dword [rax + 0x38], edx	       235	update-index.c	FUNCTION_14	IF_1	IF_2
0xe54	            0xeb3b	                           jmp 0x4000ed1	       235	update-index.c	FUNCTION_14	IF_1	IF_2
0xe56	    0x488b05000000	            mov rax, qword [0x04000e9d] 	       237	update-index.c	FUNCTION_14	IF_1	ELSE_1
0xe5d	          0x8b55fc	                mov edx, dword [rbp - 4]	       237	update-index.c	FUNCTION_14	IF_1	ELSE_1
0xe60	          0x4863d2	                         movsxd rdx, edx	       237	update-index.c	FUNCTION_14	IF_1	ELSE_1
0xe63	        0x48c1e203	                              shl rdx, 3	       237	update-index.c	FUNCTION_14	IF_1	ELSE_1
0xe67	          0x4801d0	                            add rax, rdx	       237	update-index.c	FUNCTION_14	IF_1	ELSE_1
0xe6a	          0x488b00	                    mov rax, qword [rax]	       237	update-index.c	FUNCTION_14	IF_1	ELSE_1
0xe6d	    0x488b15000000	            mov rdx, qword [0x04000eb4] 	       237	update-index.c	FUNCTION_14	IF_1	ELSE_1
0xe74	          0x8b4dfc	                mov ecx, dword [rbp - 4]	       237	update-index.c	FUNCTION_14	IF_1	ELSE_1
0xe77	          0x4863c9	                         movsxd rcx, ecx	       237	update-index.c	FUNCTION_14	IF_1	ELSE_1
0xe7a	        0x48c1e103	                              shl rcx, 3	       237	update-index.c	FUNCTION_14	IF_1	ELSE_1
0xe7e	          0x4801ca	                            add rdx, rcx	       237	update-index.c	FUNCTION_14	IF_1	ELSE_1
0xe81	          0x488b12	                    mov rdx, qword [rdx]	       237	update-index.c	FUNCTION_14	IF_1	ELSE_1
0xe84	          0x8b5238	            mov edx, dword [rdx + 0x38] 	       237	update-index.c	FUNCTION_14	IF_1	ELSE_1
0xe87	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	       237	update-index.c	FUNCTION_14	IF_1	ELSE_1
0xe8a	            0xf7d1	                                 not ecx	       237	update-index.c	FUNCTION_14	IF_1	ELSE_1
0xe8c	            0x21ca	                            and edx, ecx	       237	update-index.c	FUNCTION_14	IF_1	ELSE_1
0xe8e	          0x895038	             mov dword [rax + 0x38], edx	       237	update-index.c	FUNCTION_14	IF_1	ELSE_1
0xe91	    0x488b05000000	            mov rax, qword [0x04000ed8] 	       238	update-index.c	FUNCTION_14	IF_1
0xe98	          0x8b55fc	                mov edx, dword [rbp - 4]	       238	update-index.c	FUNCTION_14	IF_1
0xe9b	          0x4863d2	                         movsxd rdx, edx	       238	update-index.c	FUNCTION_14	IF_1
0xe9e	        0x48c1e203	                              shl rdx, 3	       238	update-index.c	FUNCTION_14	IF_1
0xea2	          0x4801d0	                            add rax, rdx	       238	update-index.c	FUNCTION_14	IF_1
0xea5	          0x488b00	                    mov rax, qword [rax]	       238	update-index.c	FUNCTION_14	IF_1
0xea8	    0x488b15000000	            mov rdx, qword [0x04000eef] 	       238	update-index.c	FUNCTION_14	IF_1
0xeaf	          0x8b4dfc	                mov ecx, dword [rbp - 4]	       238	update-index.c	FUNCTION_14	IF_1
0xeb2	          0x4863c9	                         movsxd rcx, ecx	       238	update-index.c	FUNCTION_14	IF_1
0xeb5	        0x48c1e103	                              shl rcx, 3	       238	update-index.c	FUNCTION_14	IF_1
0xeb9	          0x4801ca	                            add rdx, rcx	       238	update-index.c	FUNCTION_14	IF_1
0xebc	          0x488b12	                    mov rdx, qword [rdx]	       238	update-index.c	FUNCTION_14	IF_1
0xebf	          0x8b5238	            mov edx, dword [rdx + 0x38] 	       238	update-index.c	FUNCTION_14	IF_1
0xec2	    0x81ca00000008	                    or edx, section_end.	       238	update-index.c	FUNCTION_14	IF_1
0xec8	          0x895038	             mov dword [rax + 0x38], edx	       238	update-index.c	FUNCTION_14	IF_1
0xecb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       239	update-index.c	FUNCTION_14	IF_1	CALL_4
0xecf	          0x4889c6	                            mov rsi, rax	       239	update-index.c	FUNCTION_14	IF_1	CALL_4
0xed2	      0xbf00000000	                              mov edi, 0	       239	update-index.c	FUNCTION_14	IF_1	CALL_4
0xed7	      0xe800000000	                          call 0x4000f1c	       239	update-index.c	FUNCTION_14	IF_1	CALL_4
0xedc	    0x8b0500000000	            mov eax, dword [0x04000f22] 	       240	update-index.c	FUNCTION_14	IF_1
0xee2	          0x83c802	                               or eax, 2	       240	update-index.c	FUNCTION_14	IF_1
0xee5	    0x890500000000	            mov dword [0x04000f2b], eax 	       240	update-index.c	FUNCTION_14	IF_1
0xeeb	      0xb800000000	                              mov eax, 0	       241	update-index.c	FUNCTION_14	IF_1
0xef0	            0xeb05	                           jmp 0x4000f37	       241	update-index.c	FUNCTION_14	IF_1
0xef2	      0xb8ffffffff	                     mov eax, 0xffffffff	       243	update-index.c	FUNCTION_14
0xef7	              0xc9	                                   leave	       244	update-index.c	FUNCTION_14
0xef8	              0xc3	                                     ret	       244	update-index.c	FUNCTION_14
refresh_callback	FOR,0:DO,0:functions,0:ELSE,0:CALL,1:SWITCH,0:IF,0:WHILE,0	13
0x2342	              0x55	                                push rbp	       785	update-index.c	FUNCTION_30
0x2343	          0x4889e5	                            mov rbp, rsp	       785	update-index.c	FUNCTION_30
0x2346	        0x4883ec20	                           sub rsp, 0x20	       785	update-index.c	FUNCTION_30
0x234a	        0x48897df8	                mov qword [rbp - 8], rdi	       785	update-index.c	FUNCTION_30
0x234e	        0x488975f0	             mov qword [rbp - 0x10], rsi	       785	update-index.c	FUNCTION_30
0x2352	          0x8955ec	             mov dword [rbp - 0x14], edx	       785	update-index.c	FUNCTION_30
0x2355	        0x488b45f8	                mov rax, qword [rbp - 8]	       786	update-index.c	FUNCTION_30	CALL_1
0x2359	        0x488b4010	            mov rax, qword [rax + 0x10] 	       786	update-index.c	FUNCTION_30	CALL_1
0x235d	      0xbe00000000	                              mov esi, 0	       786	update-index.c	FUNCTION_30	CALL_1
0x2362	          0x4889c7	                            mov rdi, rax	       786	update-index.c	FUNCTION_30	CALL_1
0x2365	      0xe871ffffff	                        call sym.refresh	       786	update-index.c	FUNCTION_30	CALL_1
0x236a	              0xc9	                                   leave	       787	update-index.c	FUNCTION_30
0x236b	              0xc3	                                     ret	       787	update-index.c	FUNCTION_30
test_if_untracked_cache_is_supported	FOR,0:DO,0:functions,0:ELSE,0:CALL,72:SWITCH,0:IF,8:WHILE,0	287
0x875	              0x55	                                push rbp	       127	update-index.c	FUNCTION_13
0x876	          0x4889e5	                            mov rbp, rsp	       127	update-index.c	FUNCTION_13
0x879	              0x53	                                push rbx	       127	update-index.c	FUNCTION_13
0x87a	    0x4881ece80000	                           sub rsp, 0xe8	       127	update-index.c	FUNCTION_13
0x881	    0x64488b042528	                mov rax, qword fs:[0x28]	       127	update-index.c	FUNCTION_13
0x88a	        0x488945e8	             mov qword [rbp - 0x18], rax	       127	update-index.c	FUNCTION_13
0x88e	            0x31c0	                            xor eax, eax	       127	update-index.c	FUNCTION_13
0x890	    0xc78510ffffff	               mov dword [rbp - 0xf0], 0	       130	update-index.c	FUNCTION_13
0x89a	      0xbe00000000	                              mov esi, 0	       133	update-index.c	FUNCTION_13	CALL_1
0x89f	      0xbf00000000	                              mov edi, 0	       133	update-index.c	FUNCTION_13	CALL_1
0x8a4	      0xe86ff9ffff	                  call sym.strbuf_addstr	       133	update-index.c	FUNCTION_13	CALL_1
0x8a9	    0x488b05000000	            mov rax, qword [0x040008f0] 	       134	update-index.c	FUNCTION_13	IF_1	CALL_2
0x8b0	          0x4889c7	                            mov rdi, rax	       134	update-index.c	FUNCTION_13	IF_1	CALL_2
0x8b3	      0xe800000000	                          call 0x40008f8	       134	update-index.c	FUNCTION_13	IF_1	CALL_2
0x8b8	          0x4885c0	                           test rax, rax	       134	update-index.c	FUNCTION_13	IF_1	CALL_2
0x8bb	            0x750f	                           jne 0x400090c	       134	update-index.c	FUNCTION_13	IF_1	CALL_2
0x8bd	      0xbf00000000	                              mov edi, 0	       135	update-index.c	FUNCTION_13	CALL_3
0x8c2	      0xb800000000	                              mov eax, 0	       135	update-index.c	FUNCTION_13	CALL_3
0x8c7	      0xe800000000	                          call 0x400090c	       135	update-index.c	FUNCTION_13	CALL_3
0x8cc	      0xe800000000	                          call 0x4000911	       137	update-index.c	FUNCTION_13	CALL_4
0x8d1	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	       137	update-index.c	FUNCTION_13	CALL_4
0x8d8	      0xbf00000000	                              mov edi, 0	       138	update-index.c	FUNCTION_13	CALL_6
0x8dd	      0xe86bf9ffff	                               call sym.	       138	update-index.c	FUNCTION_13	CALL_6
0x8e2	          0x4889c1	                            mov rcx, rax	       138	update-index.c	FUNCTION_13	CALL_6
0x8e5	    0x488b05000000	            mov rax, qword [0x0400092c] 	       138	update-index.c	FUNCTION_13	CALL_6
0x8ec	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	       138	update-index.c	FUNCTION_13	CALL_6
0x8f3	          0x4889ce	                            mov rsi, rcx	       138	update-index.c	FUNCTION_13	CALL_6
0x8f6	          0x4889c7	                            mov rdi, rax	       138	update-index.c	FUNCTION_13	CALL_6
0x8f9	      0xb800000000	                              mov eax, 0	       138	update-index.c	FUNCTION_13	CALL_6
0x8fe	      0xe800000000	                          call 0x4000943	       138	update-index.c	FUNCTION_13	CALL_6
0x903	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       139	update-index.c	FUNCTION_13	CALL_7
0x90a	          0x4889c7	                            mov rdi, rax	       139	update-index.c	FUNCTION_13	CALL_7
0x90d	      0xe800000000	                          call 0x4000952	       139	update-index.c	FUNCTION_13	CALL_7
0x912	      0xbf00000000	                              mov edi, 0	       141	update-index.c	FUNCTION_13	CALL_8
0x917	      0xe800000000	                          call 0x400095c	       141	update-index.c	FUNCTION_13	CALL_8
0x91c	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       142	update-index.c	FUNCTION_13	CALL_9
0x923	          0x4889c7	                            mov rdi, rax	       142	update-index.c	FUNCTION_13	CALL_9
0x926	      0xe8dffdffff	                call sym.xstat_mtime_dir	       142	update-index.c	FUNCTION_13	CALL_9
0x92b	    0x488d9550ffff	                   lea rdx, [rbp - 0xb0]	       143	update-index.c	FUNCTION_13	CALL_10
0x932	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	       143	update-index.c	FUNCTION_13	CALL_10
0x939	          0x4889d6	                            mov rsi, rdx	       143	update-index.c	FUNCTION_13	CALL_10
0x93c	          0x4889c7	                            mov rdi, rax	       143	update-index.c	FUNCTION_13	CALL_10
0x93f	      0xe800000000	                          call 0x4000984	       143	update-index.c	FUNCTION_13	CALL_10
0x944	    0x488b05000000	            mov rax, qword [0x0400098b] 	       144	update-index.c	FUNCTION_13	CALL_11
0x94b	          0x4889c6	                            mov rsi, rax	       144	update-index.c	FUNCTION_13	CALL_11
0x94e	      0xbf2e000000	                           mov edi, 0x2e	       144	update-index.c	FUNCTION_13	CALL_11
0x953	      0xe800000000	                          call 0x4000998	       144	update-index.c	FUNCTION_13	CALL_11
0x958	      0xe807ffffff	                     call sym.avoid_racy	       146	update-index.c	FUNCTION_13	CALL_12
0x95d	      0xbf00000000	                              mov edi, 0	       147	update-index.c	FUNCTION_13	CALL_13
0x962	      0xe8f7fdffff	                    call sym.create_file	       147	update-index.c	FUNCTION_13	CALL_13
0x967	    0x898514ffffff	             mov dword [rbp - 0xec], eax	       147	update-index.c	FUNCTION_13	CALL_13
0x96d	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       148	update-index.c	FUNCTION_13	CALL_14
0x974	          0x4889c7	                            mov rdi, rax	       148	update-index.c	FUNCTION_13	CALL_14
0x977	      0xe88efdffff	                call sym.xstat_mtime_dir	       148	update-index.c	FUNCTION_13	CALL_14
0x97c	    0x488d9550ffff	                   lea rdx, [rbp - 0xb0]	       149	update-index.c	FUNCTION_13	IF_2	CALL_15
0x983	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	       149	update-index.c	FUNCTION_13	IF_2	CALL_15
0x98a	          0x4889d6	                            mov rsi, rdx	       149	update-index.c	FUNCTION_13	IF_2	CALL_15
0x98d	          0x4889c7	                            mov rdi, rax	       149	update-index.c	FUNCTION_13	IF_2	CALL_15
0x990	      0xe800000000	                          call 0x40009d5	       149	update-index.c	FUNCTION_13	IF_2	CALL_15
0x995	            0x85c0	                           test eax, eax	       149	update-index.c	FUNCTION_13	IF_2	CALL_15
0x997	            0x754a	                           jne 0x4000a23	       149	update-index.c	FUNCTION_13	IF_2	CALL_15
0x999	    0x8b8514ffffff	             mov eax, dword [rbp - 0xec]	       150	update-index.c	FUNCTION_13	IF_2	CALL_16
0x99f	            0x89c7	                            mov edi, eax	       150	update-index.c	FUNCTION_13	IF_2	CALL_16
0x9a1	      0xe800000000	                          call 0x40009e6	       150	update-index.c	FUNCTION_13	IF_2	CALL_16
0x9a6	    0x488b05000000	            mov rax, qword [0x040009ed] 	       151	update-index.c	FUNCTION_13	IF_2	CALL_17
0x9ad	          0x4889c6	                            mov rsi, rax	       151	update-index.c	FUNCTION_13	IF_2	CALL_17
0x9b0	      0xbf0a000000	                            mov edi, 0xa	       151	update-index.c	FUNCTION_13	IF_2	CALL_17
0x9b5	      0xe800000000	                          call 0x40009fa	       151	update-index.c	FUNCTION_13	IF_2	CALL_17
0x9ba	      0xbf00000000	                              mov edi, 0	       152	update-index.c	FUNCTION_13	IF_2	CALL_19
0x9bf	      0xe889f8ffff	                               call sym.	       152	update-index.c	FUNCTION_13	IF_2	CALL_19
0x9c4	          0x4889c2	                            mov rdx, rax	       152	update-index.c	FUNCTION_13	IF_2	CALL_19
0x9c7	    0x488b05000000	            mov rax, qword [0x04000a0e] 	       152	update-index.c	FUNCTION_13	IF_2	CALL_19
0x9ce	          0x4889d6	                            mov rsi, rdx	       152	update-index.c	FUNCTION_13	IF_2	CALL_19
0x9d1	          0x4889c7	                            mov rdi, rax	       152	update-index.c	FUNCTION_13	IF_2	CALL_19
0x9d4	      0xb800000000	                              mov eax, 0	       152	update-index.c	FUNCTION_13	IF_2	CALL_19
0x9d9	      0xe800000000	                          call 0x4000a1e	       152	update-index.c	FUNCTION_13	IF_2	CALL_19
0x9de	      0xe99e030000	                           jmp 0x4000dc1	       154	update-index.c	FUNCTION_13	IF_2
0x9e3	    0x488d9550ffff	                   lea rdx, [rbp - 0xb0]	       156	update-index.c	FUNCTION_13	CALL_20
0x9ea	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	       156	update-index.c	FUNCTION_13	CALL_20
0x9f1	          0x4889d6	                            mov rsi, rdx	       156	update-index.c	FUNCTION_13	CALL_20
0x9f4	          0x4889c7	                            mov rdi, rax	       156	update-index.c	FUNCTION_13	CALL_20
0x9f7	      0xe800000000	                          call 0x4000a3c	       156	update-index.c	FUNCTION_13	CALL_20
0x9fc	    0x488b05000000	            mov rax, qword [0x04000a43] 	       157	update-index.c	FUNCTION_13	CALL_21
0xa03	          0x4889c6	                            mov rsi, rax	       157	update-index.c	FUNCTION_13	CALL_21
0xa06	      0xbf2e000000	                           mov edi, 0x2e	       157	update-index.c	FUNCTION_13	CALL_21
0xa0b	      0xe800000000	                          call 0x4000a50	       157	update-index.c	FUNCTION_13	CALL_21
0xa10	      0xe84ffeffff	                     call sym.avoid_racy	       159	update-index.c	FUNCTION_13	CALL_22
0xa15	      0xbf00000000	                              mov edi, 0	       160	update-index.c	FUNCTION_13	CALL_23
0xa1a	      0xe896fcffff	                         call sym.xmkdir	       160	update-index.c	FUNCTION_13	CALL_23
0xa1f	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       161	update-index.c	FUNCTION_13	CALL_24
0xa26	          0x4889c7	                            mov rdi, rax	       161	update-index.c	FUNCTION_13	CALL_24
0xa29	      0xe8dcfcffff	                call sym.xstat_mtime_dir	       161	update-index.c	FUNCTION_13	CALL_24
0xa2e	    0x488d9550ffff	                   lea rdx, [rbp - 0xb0]	       162	update-index.c	FUNCTION_13	IF_3	CALL_25
0xa35	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	       162	update-index.c	FUNCTION_13	IF_3	CALL_25
0xa3c	          0x4889d6	                            mov rsi, rdx	       162	update-index.c	FUNCTION_13	IF_3	CALL_25
0xa3f	          0x4889c7	                            mov rdi, rax	       162	update-index.c	FUNCTION_13	IF_3	CALL_25
0xa42	      0xe800000000	                          call 0x4000a87	       162	update-index.c	FUNCTION_13	IF_3	CALL_25
0xa47	            0x85c0	                           test eax, eax	       162	update-index.c	FUNCTION_13	IF_3	CALL_25
0xa49	            0x754a	                           jne 0x4000ad5	       162	update-index.c	FUNCTION_13	IF_3	CALL_25
0xa4b	    0x8b8514ffffff	             mov eax, dword [rbp - 0xec]	       163	update-index.c	FUNCTION_13	IF_3	CALL_26
0xa51	            0x89c7	                            mov edi, eax	       163	update-index.c	FUNCTION_13	IF_3	CALL_26
0xa53	      0xe800000000	                          call 0x4000a98	       163	update-index.c	FUNCTION_13	IF_3	CALL_26
0xa58	    0x488b05000000	            mov rax, qword [0x04000a9f] 	       164	update-index.c	FUNCTION_13	IF_3	CALL_27
0xa5f	          0x4889c6	                            mov rsi, rax	       164	update-index.c	FUNCTION_13	IF_3	CALL_27
0xa62	      0xbf0a000000	                            mov edi, 0xa	       164	update-index.c	FUNCTION_13	IF_3	CALL_27
0xa67	      0xe800000000	                          call 0x4000aac	       164	update-index.c	FUNCTION_13	IF_3	CALL_27
0xa6c	      0xbf00000000	                              mov edi, 0	       165	update-index.c	FUNCTION_13	IF_3	CALL_29
0xa71	      0xe8d7f7ffff	                               call sym.	       165	update-index.c	FUNCTION_13	IF_3	CALL_29
0xa76	          0x4889c2	                            mov rdx, rax	       165	update-index.c	FUNCTION_13	IF_3	CALL_29
0xa79	    0x488b05000000	            mov rax, qword [0x04000ac0] 	       165	update-index.c	FUNCTION_13	IF_3	CALL_29
0xa80	          0x4889d6	                            mov rsi, rdx	       165	update-index.c	FUNCTION_13	IF_3	CALL_29
0xa83	          0x4889c7	                            mov rdi, rax	       165	update-index.c	FUNCTION_13	IF_3	CALL_29
0xa86	      0xb800000000	                              mov eax, 0	       165	update-index.c	FUNCTION_13	IF_3	CALL_29
0xa8b	      0xe800000000	                          call 0x4000ad0	       165	update-index.c	FUNCTION_13	IF_3	CALL_29
0xa90	      0xe9ec020000	                           jmp 0x4000dc1	       167	update-index.c	FUNCTION_13	IF_3
0xa95	    0x488d9550ffff	                   lea rdx, [rbp - 0xb0]	       169	update-index.c	FUNCTION_13	CALL_30
0xa9c	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	       169	update-index.c	FUNCTION_13	CALL_30
0xaa3	          0x4889d6	                            mov rsi, rdx	       169	update-index.c	FUNCTION_13	CALL_30
0xaa6	          0x4889c7	                            mov rdi, rax	       169	update-index.c	FUNCTION_13	CALL_30
0xaa9	      0xe800000000	                          call 0x4000aee	       169	update-index.c	FUNCTION_13	CALL_30
0xaae	    0x488b05000000	            mov rax, qword [0x04000af5] 	       170	update-index.c	FUNCTION_13	CALL_31
0xab5	          0x4889c6	                            mov rsi, rax	       170	update-index.c	FUNCTION_13	CALL_31
0xab8	      0xbf2e000000	                           mov edi, 0x2e	       170	update-index.c	FUNCTION_13	CALL_31
0xabd	      0xe800000000	                          call 0x4000b02	       170	update-index.c	FUNCTION_13	CALL_31
0xac2	      0xe89dfdffff	                     call sym.avoid_racy	       172	update-index.c	FUNCTION_13	CALL_32
0xac7	    0x8b8514ffffff	             mov eax, dword [rbp - 0xec]	       173	update-index.c	FUNCTION_13	CALL_33
0xacd	      0xba04000000	                              mov edx, 4	       173	update-index.c	FUNCTION_13	CALL_33
0xad2	      0xbe00000000	                              mov esi, 0	       173	update-index.c	FUNCTION_13	CALL_33
0xad7	            0x89c7	                            mov edi, eax	       173	update-index.c	FUNCTION_13	CALL_33
0xad9	      0xe800000000	                          call 0x4000b1e	       173	update-index.c	FUNCTION_13	CALL_33
0xade	    0x8b8514ffffff	             mov eax, dword [rbp - 0xec]	       174	update-index.c	FUNCTION_13	CALL_34
0xae4	            0x89c7	                            mov edi, eax	       174	update-index.c	FUNCTION_13	CALL_34
0xae6	      0xe800000000	                          call 0x4000b2b	       174	update-index.c	FUNCTION_13	CALL_34
0xaeb	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       175	update-index.c	FUNCTION_13	CALL_35
0xaf2	          0x4889c7	                            mov rdi, rax	       175	update-index.c	FUNCTION_13	CALL_35
0xaf5	      0xe810fcffff	                call sym.xstat_mtime_dir	       175	update-index.c	FUNCTION_13	CALL_35
0xafa	    0x488d9550ffff	                   lea rdx, [rbp - 0xb0]	       176	update-index.c	FUNCTION_13	IF_4	CALL_36
0xb01	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	       176	update-index.c	FUNCTION_13	IF_4	CALL_36
0xb08	          0x4889d6	                            mov rsi, rdx	       176	update-index.c	FUNCTION_13	IF_4	CALL_36
0xb0b	          0x4889c7	                            mov rdi, rax	       176	update-index.c	FUNCTION_13	IF_4	CALL_36
0xb0e	      0xe800000000	                          call 0x4000b53	       176	update-index.c	FUNCTION_13	IF_4	CALL_36
0xb13	            0x85c0	                           test eax, eax	       176	update-index.c	FUNCTION_13	IF_4	CALL_36
0xb15	            0x743d	                            je 0x4000b94	       176	update-index.c	FUNCTION_13	IF_4	CALL_36
0xb17	    0x488b05000000	            mov rax, qword [0x04000b5e] 	       177	update-index.c	FUNCTION_13	IF_4	CALL_37
0xb1e	          0x4889c6	                            mov rsi, rax	       177	update-index.c	FUNCTION_13	IF_4	CALL_37
0xb21	      0xbf0a000000	                            mov edi, 0xa	       177	update-index.c	FUNCTION_13	IF_4	CALL_37
0xb26	      0xe800000000	                          call 0x4000b6b	       177	update-index.c	FUNCTION_13	IF_4	CALL_37
0xb2b	      0xbf00000000	                              mov edi, 0	       178	update-index.c	FUNCTION_13	IF_4	CALL_39
0xb30	      0xe818f7ffff	                               call sym.	       178	update-index.c	FUNCTION_13	IF_4	CALL_39
0xb35	          0x4889c2	                            mov rdx, rax	       178	update-index.c	FUNCTION_13	IF_4	CALL_39
0xb38	    0x488b05000000	            mov rax, qword [0x04000b7f] 	       178	update-index.c	FUNCTION_13	IF_4	CALL_39
0xb3f	          0x4889d6	                            mov rsi, rdx	       178	update-index.c	FUNCTION_13	IF_4	CALL_39
0xb42	          0x4889c7	                            mov rdi, rax	       178	update-index.c	FUNCTION_13	IF_4	CALL_39
0xb45	      0xb800000000	                              mov eax, 0	       178	update-index.c	FUNCTION_13	IF_4	CALL_39
0xb4a	      0xe800000000	                          call 0x4000b8f	       178	update-index.c	FUNCTION_13	IF_4	CALL_39
0xb4f	      0xe92d020000	                           jmp 0x4000dc1	       180	update-index.c	FUNCTION_13	IF_4
0xb54	    0x488b05000000	            mov rax, qword [0x04000b9b] 	       182	update-index.c	FUNCTION_13	CALL_40
0xb5b	          0x4889c6	                            mov rsi, rax	       182	update-index.c	FUNCTION_13	CALL_40
0xb5e	      0xbf2e000000	                           mov edi, 0x2e	       182	update-index.c	FUNCTION_13	CALL_40
0xb63	      0xe800000000	                          call 0x4000ba8	       182	update-index.c	FUNCTION_13	CALL_40
0xb68	      0xe8f7fcffff	                     call sym.avoid_racy	       184	update-index.c	FUNCTION_13	CALL_41
0xb6d	      0xbf00000000	                              mov edi, 0	       185	update-index.c	FUNCTION_13	CALL_43
0xb72	      0xe8e7fbffff	                    call sym.create_file	       185	update-index.c	FUNCTION_13	CALL_43
0xb77	            0x89c7	                            mov edi, eax	       185	update-index.c	FUNCTION_13	CALL_43
0xb79	      0xe800000000	                          call 0x4000bbe	       185	update-index.c	FUNCTION_13	CALL_43
0xb7e	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       186	update-index.c	FUNCTION_13	CALL_44
0xb85	          0x4889c7	                            mov rdi, rax	       186	update-index.c	FUNCTION_13	CALL_44
0xb88	      0xe87dfbffff	                call sym.xstat_mtime_dir	       186	update-index.c	FUNCTION_13	CALL_44
0xb8d	    0x488d9550ffff	                   lea rdx, [rbp - 0xb0]	       187	update-index.c	FUNCTION_13	IF_5	CALL_45
0xb94	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	       187	update-index.c	FUNCTION_13	IF_5	CALL_45
0xb9b	          0x4889d6	                            mov rsi, rdx	       187	update-index.c	FUNCTION_13	IF_5	CALL_45
0xb9e	          0x4889c7	                            mov rdi, rax	       187	update-index.c	FUNCTION_13	IF_5	CALL_45
0xba1	      0xe800000000	                          call 0x4000be6	       187	update-index.c	FUNCTION_13	IF_5	CALL_45
0xba6	            0x85c0	                           test eax, eax	       187	update-index.c	FUNCTION_13	IF_5	CALL_45
0xba8	            0x743d	                            je 0x4000c27	       187	update-index.c	FUNCTION_13	IF_5	CALL_45
0xbaa	    0x488b05000000	            mov rax, qword [0x04000bf1] 	       188	update-index.c	FUNCTION_13	IF_5	CALL_46
0xbb1	          0x4889c6	                            mov rsi, rax	       188	update-index.c	FUNCTION_13	IF_5	CALL_46
0xbb4	      0xbf0a000000	                            mov edi, 0xa	       188	update-index.c	FUNCTION_13	IF_5	CALL_46
0xbb9	      0xe800000000	                          call 0x4000bfe	       188	update-index.c	FUNCTION_13	IF_5	CALL_46
0xbbe	      0xbf00000000	                              mov edi, 0	       189	update-index.c	FUNCTION_13	IF_5	CALL_48
0xbc3	      0xe885f6ffff	                               call sym.	       189	update-index.c	FUNCTION_13	IF_5	CALL_48
0xbc8	          0x4889c2	                            mov rdx, rax	       189	update-index.c	FUNCTION_13	IF_5	CALL_48
0xbcb	    0x488b05000000	            mov rax, qword [0x04000c12] 	       189	update-index.c	FUNCTION_13	IF_5	CALL_48
0xbd2	          0x4889d6	                            mov rsi, rdx	       189	update-index.c	FUNCTION_13	IF_5	CALL_48
0xbd5	          0x4889c7	                            mov rdi, rax	       189	update-index.c	FUNCTION_13	IF_5	CALL_48
0xbd8	      0xb800000000	                              mov eax, 0	       189	update-index.c	FUNCTION_13	IF_5	CALL_48
0xbdd	      0xe800000000	                          call 0x4000c22	       189	update-index.c	FUNCTION_13	IF_5	CALL_48
0xbe2	      0xe99a010000	                           jmp 0x4000dc1	       191	update-index.c	FUNCTION_13	IF_5
0xbe7	    0x488b05000000	            mov rax, qword [0x04000c2e] 	       193	update-index.c	FUNCTION_13	CALL_49
0xbee	          0x4889c6	                            mov rsi, rax	       193	update-index.c	FUNCTION_13	CALL_49
0xbf1	      0xbf2e000000	                           mov edi, 0x2e	       193	update-index.c	FUNCTION_13	CALL_49
0xbf6	      0xe800000000	                          call 0x4000c3b	       193	update-index.c	FUNCTION_13	CALL_49
0xbfb	      0xe864fcffff	                     call sym.avoid_racy	       195	update-index.c	FUNCTION_13	CALL_50
0xc00	      0xbf00000000	                              mov edi, 0	       196	update-index.c	FUNCTION_13	CALL_51
0xc05	      0xe8bafbffff	                        call sym.xunlink	       196	update-index.c	FUNCTION_13	CALL_51
0xc0a	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       197	update-index.c	FUNCTION_13	CALL_52
0xc11	          0x4889c7	                            mov rdi, rax	       197	update-index.c	FUNCTION_13	CALL_52
0xc14	      0xe8f1faffff	                call sym.xstat_mtime_dir	       197	update-index.c	FUNCTION_13	CALL_52
0xc19	    0x488d9550ffff	                   lea rdx, [rbp - 0xb0]	       198	update-index.c	FUNCTION_13	IF_6	CALL_53
0xc20	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	       198	update-index.c	FUNCTION_13	IF_6	CALL_53
0xc27	          0x4889d6	                            mov rsi, rdx	       198	update-index.c	FUNCTION_13	IF_6	CALL_53
0xc2a	          0x4889c7	                            mov rdi, rax	       198	update-index.c	FUNCTION_13	IF_6	CALL_53
0xc2d	      0xe800000000	                          call 0x4000c72	       198	update-index.c	FUNCTION_13	IF_6	CALL_53
0xc32	            0x85c0	                           test eax, eax	       198	update-index.c	FUNCTION_13	IF_6	CALL_53
0xc34	            0x753d	                           jne 0x4000cb3	       198	update-index.c	FUNCTION_13	IF_6	CALL_53
0xc36	    0x488b05000000	            mov rax, qword [0x04000c7d] 	       199	update-index.c	FUNCTION_13	IF_6	CALL_54
0xc3d	          0x4889c6	                            mov rsi, rax	       199	update-index.c	FUNCTION_13	IF_6	CALL_54
0xc40	      0xbf0a000000	                            mov edi, 0xa	       199	update-index.c	FUNCTION_13	IF_6	CALL_54
0xc45	      0xe800000000	                          call 0x4000c8a	       199	update-index.c	FUNCTION_13	IF_6	CALL_54
0xc4a	      0xbf00000000	                              mov edi, 0	       200	update-index.c	FUNCTION_13	IF_6	CALL_56
0xc4f	      0xe8f9f5ffff	                               call sym.	       200	update-index.c	FUNCTION_13	IF_6	CALL_56
0xc54	          0x4889c2	                            mov rdx, rax	       200	update-index.c	FUNCTION_13	IF_6	CALL_56
0xc57	    0x488b05000000	            mov rax, qword [0x04000c9e] 	       200	update-index.c	FUNCTION_13	IF_6	CALL_56
0xc5e	          0x4889d6	                            mov rsi, rdx	       200	update-index.c	FUNCTION_13	IF_6	CALL_56
0xc61	          0x4889c7	                            mov rdi, rax	       200	update-index.c	FUNCTION_13	IF_6	CALL_56
0xc64	      0xb800000000	                              mov eax, 0	       200	update-index.c	FUNCTION_13	IF_6	CALL_56
0xc69	      0xe800000000	                          call 0x4000cae	       200	update-index.c	FUNCTION_13	IF_6	CALL_56
0xc6e	      0xe90e010000	                           jmp 0x4000dc1	       202	update-index.c	FUNCTION_13	IF_6
0xc73	    0x488d9550ffff	                   lea rdx, [rbp - 0xb0]	       204	update-index.c	FUNCTION_13	CALL_57
0xc7a	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	       204	update-index.c	FUNCTION_13	CALL_57
0xc81	          0x4889d6	                            mov rsi, rdx	       204	update-index.c	FUNCTION_13	CALL_57
0xc84	          0x4889c7	                            mov rdi, rax	       204	update-index.c	FUNCTION_13	CALL_57
0xc87	      0xe800000000	                          call 0x4000ccc	       204	update-index.c	FUNCTION_13	CALL_57
0xc8c	    0x488b05000000	            mov rax, qword [0x04000cd3] 	       205	update-index.c	FUNCTION_13	CALL_58
0xc93	          0x4889c6	                            mov rsi, rax	       205	update-index.c	FUNCTION_13	CALL_58
0xc96	      0xbf2e000000	                           mov edi, 0x2e	       205	update-index.c	FUNCTION_13	CALL_58
0xc9b	      0xe800000000	                          call 0x4000ce0	       205	update-index.c	FUNCTION_13	CALL_58
0xca0	      0xe8bffbffff	                     call sym.avoid_racy	       207	update-index.c	FUNCTION_13	CALL_59
0xca5	      0xbf00000000	                              mov edi, 0	       208	update-index.c	FUNCTION_13	CALL_60
0xcaa	      0xe815fbffff	                        call sym.xunlink	       208	update-index.c	FUNCTION_13	CALL_60
0xcaf	      0xbf00000000	                              mov edi, 0	       209	update-index.c	FUNCTION_13	CALL_61
0xcb4	      0xe85bfbffff	                         call sym.xrmdir	       209	update-index.c	FUNCTION_13	CALL_61
0xcb9	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       210	update-index.c	FUNCTION_13	CALL_62
0xcc0	          0x4889c7	                            mov rdi, rax	       210	update-index.c	FUNCTION_13	CALL_62
0xcc3	      0xe842faffff	                call sym.xstat_mtime_dir	       210	update-index.c	FUNCTION_13	CALL_62
0xcc8	    0x488d9550ffff	                   lea rdx, [rbp - 0xb0]	       211	update-index.c	FUNCTION_13	IF_7	CALL_63
0xccf	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	       211	update-index.c	FUNCTION_13	IF_7	CALL_63
0xcd6	          0x4889d6	                            mov rsi, rdx	       211	update-index.c	FUNCTION_13	IF_7	CALL_63
0xcd9	          0x4889c7	                            mov rdi, rax	       211	update-index.c	FUNCTION_13	IF_7	CALL_63
0xcdc	      0xe800000000	                          call 0x4000d21	       211	update-index.c	FUNCTION_13	IF_7	CALL_63
0xce1	            0x85c0	                           test eax, eax	       211	update-index.c	FUNCTION_13	IF_7	CALL_63
0xce3	            0x753a	                           jne 0x4000d5f	       211	update-index.c	FUNCTION_13	IF_7	CALL_63
0xce5	    0x488b05000000	            mov rax, qword [0x04000d2c] 	       212	update-index.c	FUNCTION_13	IF_7	CALL_64
0xcec	          0x4889c6	                            mov rsi, rax	       212	update-index.c	FUNCTION_13	IF_7	CALL_64
0xcef	      0xbf0a000000	                            mov edi, 0xa	       212	update-index.c	FUNCTION_13	IF_7	CALL_64
0xcf4	      0xe800000000	                          call 0x4000d39	       212	update-index.c	FUNCTION_13	IF_7	CALL_64
0xcf9	      0xbf00000000	                              mov edi, 0	       213	update-index.c	FUNCTION_13	IF_7	CALL_66
0xcfe	      0xe84af5ffff	                               call sym.	       213	update-index.c	FUNCTION_13	IF_7	CALL_66
0xd03	          0x4889c2	                            mov rdx, rax	       213	update-index.c	FUNCTION_13	IF_7	CALL_66
0xd06	    0x488b05000000	            mov rax, qword [0x04000d4d] 	       213	update-index.c	FUNCTION_13	IF_7	CALL_66
0xd0d	          0x4889d6	                            mov rsi, rdx	       213	update-index.c	FUNCTION_13	IF_7	CALL_66
0xd10	          0x4889c7	                            mov rdi, rax	       213	update-index.c	FUNCTION_13	IF_7	CALL_66
0xd13	      0xb800000000	                              mov eax, 0	       213	update-index.c	FUNCTION_13	IF_7	CALL_66
0xd18	      0xe800000000	                          call 0x4000d5d	       213	update-index.c	FUNCTION_13	IF_7	CALL_66
0xd1d	            0xeb62	                           jmp 0x4000dc1	       215	update-index.c	FUNCTION_13	IF_7
0xd1f	    0x488b05000000	            mov rax, qword [0x04000d66] 	       218	update-index.c	FUNCTION_13	IF_8	CALL_67
0xd26	          0x4889c7	                            mov rdi, rax	       218	update-index.c	FUNCTION_13	IF_8	CALL_67
0xd29	      0xe800000000	                          call 0x4000d6e	       218	update-index.c	FUNCTION_13	IF_8	CALL_67
0xd2e	            0x85c0	                           test eax, eax	       218	update-index.c	FUNCTION_13	IF_8	CALL_67
0xd30	            0x7421	                            je 0x4000d93	       218	update-index.c	FUNCTION_13	IF_8	CALL_67
0xd32	    0x488b1d000000	            mov rbx, qword [0x04000d79] 	       219	update-index.c	FUNCTION_13	CALL_69
0xd39	      0xbf00000000	                              mov edi, 0	       219	update-index.c	FUNCTION_13	CALL_69
0xd3e	      0xe80af5ffff	                               call sym.	       219	update-index.c	FUNCTION_13	CALL_69
0xd43	          0x4889de	                            mov rsi, rbx	       219	update-index.c	FUNCTION_13	CALL_69
0xd46	          0x4889c7	                            mov rdi, rax	       219	update-index.c	FUNCTION_13	CALL_69
0xd49	      0xb800000000	                              mov eax, 0	       219	update-index.c	FUNCTION_13	CALL_69
0xd4e	      0xe800000000	                          call 0x4000d93	       219	update-index.c	FUNCTION_13	CALL_69
0xd53	      0xbf00000000	                              mov edi, 0	       220	update-index.c	FUNCTION_13	CALL_71
0xd58	      0xe8f0f4ffff	                               call sym.	       220	update-index.c	FUNCTION_13	CALL_71
0xd5d	          0x4889c2	                            mov rdx, rax	       220	update-index.c	FUNCTION_13	CALL_71
0xd60	    0x488b05000000	            mov rax, qword [0x04000da7] 	       220	update-index.c	FUNCTION_13	CALL_71
0xd67	          0x4889d6	                            mov rsi, rdx	       220	update-index.c	FUNCTION_13	CALL_71
0xd6a	          0x4889c7	                            mov rdi, rax	       220	update-index.c	FUNCTION_13	CALL_71
0xd6d	      0xb800000000	                              mov eax, 0	       220	update-index.c	FUNCTION_13	CALL_71
0xd72	      0xe800000000	                          call 0x4000db7	       220	update-index.c	FUNCTION_13	CALL_71
0xd77	    0xc78510ffffff	               mov dword [rbp - 0xf0], 1	       221	update-index.c	FUNCTION_13
0xd81	      0xbf00000000	                              mov edi, 0	       224	update-index.c	FUNCTION_13	CALL_72
0xd86	      0xe800000000	                          call 0x4000dcb	       224	update-index.c	FUNCTION_13	CALL_72
0xd8b	    0x8b8510ffffff	             mov eax, dword [rbp - 0xf0]	       225	update-index.c	FUNCTION_13
0xd91	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       226	update-index.c	FUNCTION_13
0xd95	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       226	update-index.c	FUNCTION_13
0xd9e	            0x7405	                            je 0x4000de5	       226	update-index.c	FUNCTION_13
0xda0	      0xe800000000	                          call 0x4000de5	       226	update-index.c	FUNCTION_13
0xda5	    0x4881c4e80000	                           add rsp, 0xe8	       226	update-index.c	FUNCTION_13
0xdac	              0x5b	                                 pop rbx	       226	update-index.c	FUNCTION_13
0xdad	              0x5d	                                 pop rbp	       226	update-index.c	FUNCTION_13
0xdae	              0xc3	                                     ret	       226	update-index.c	FUNCTION_13
