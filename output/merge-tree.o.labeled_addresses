traverse_path_len	SWITCH,0:WHILE,0:CALL,1:ELSE,0:functions,0:FOR,0:IF,0:DO,0	16
0xa3	              0x55	                                push rbp	        87	tree-walk.h	FUNCTION_23
0xa4	          0x4889e5	                            mov rbp, rsp	        87	tree-walk.h	FUNCTION_23
0xa7	              0x53	                                push rbx	        87	tree-walk.h	FUNCTION_23
0xa8	        0x4883ec10	                           sub rsp, 0x10	        87	tree-walk.h	FUNCTION_23
0xac	        0x48897df0	             mov qword [rbp - 0x10], rdi	        87	tree-walk.h	FUNCTION_23
0xb0	        0x488975e8	             mov qword [rbp - 0x18], rsi	        87	tree-walk.h	FUNCTION_23
0xb4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        88	tree-walk.h	FUNCTION_23	CALL_1
0xb8	          0x8b5828	            mov ebx, dword [rax + 0x28] 	        88	tree-walk.h	FUNCTION_23	CALL_1
0xbb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        88	tree-walk.h	FUNCTION_23	CALL_1
0xbf	          0x4889c7	                            mov rdi, rax	        88	tree-walk.h	FUNCTION_23	CALL_1
0xc2	      0xe8b7ffffff	                 call sym.tree_entry_len	        88	tree-walk.h	FUNCTION_23	CALL_1
0xc7	             0x1d8	                            add eax, ebx	        88	tree-walk.h	FUNCTION_23	CALL_1
0xc9	        0x4883c410	                           add rsp, 0x10	        89	tree-walk.h	FUNCTION_23
0xcd	              0x5b	                                 pop rbx	        89	tree-walk.h	FUNCTION_23
0xce	              0x5d	                                 pop rbp	        89	tree-walk.h	FUNCTION_23
0xcf	              0xc3	                                     ret	        89	tree-walk.h	FUNCTION_23
same_entry	SWITCH,0:WHILE,0:CALL,1:ELSE,0:functions,0:FOR,0:IF,0:DO,0	33
0x5a9	              0x55	                                push rbp	       153	merge-tree.c	FUNCTION_9
0x5aa	          0x4889e5	                            mov rbp, rsp	       153	merge-tree.c	FUNCTION_9
0x5ad	        0x4883ec10	                           sub rsp, 0x10	       153	merge-tree.c	FUNCTION_9
0x5b1	        0x48897df8	                mov qword [rbp - 8], rdi	       153	merge-tree.c	FUNCTION_9
0x5b5	        0x488975f0	             mov qword [rbp - 0x10], rsi	       153	merge-tree.c	FUNCTION_9
0x5b9	        0x488b45f8	                mov rax, qword [rbp - 8]	       154	merge-tree.c	FUNCTION_9
0x5bd	          0x488b00	                    mov rax, qword [rax]	       154	merge-tree.c	FUNCTION_9
0x5c0	          0x4885c0	                           test rax, rax	       156	merge-tree.c	FUNCTION_9	CALL_1
0x5c3	            0x7442	                            je 0x4000647	       156	merge-tree.c	FUNCTION_9	CALL_1
0x5c5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       155	merge-tree.c	FUNCTION_9
0x5c9	          0x488b00	                    mov rax, qword [rax]	       155	merge-tree.c	FUNCTION_9
0x5cc	          0x4885c0	                           test rax, rax	       154	merge-tree.c	FUNCTION_9
0x5cf	            0x7436	                            je 0x4000647	       154	merge-tree.c	FUNCTION_9
0x5d1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       156	merge-tree.c	FUNCTION_9	CALL_1
0x5d5	          0x488b10	                    mov rdx, qword [rax]	       156	merge-tree.c	FUNCTION_9	CALL_1
0x5d8	        0x488b45f8	                mov rax, qword [rbp - 8]	       156	merge-tree.c	FUNCTION_9	CALL_1
0x5dc	          0x488b00	                    mov rax, qword [rax]	       156	merge-tree.c	FUNCTION_9	CALL_1
0x5df	          0x4889d6	                            mov rsi, rdx	       156	merge-tree.c	FUNCTION_9	CALL_1
0x5e2	          0x4889c7	                            mov rdi, rax	       156	merge-tree.c	FUNCTION_9	CALL_1
0x5e5	      0xe840faffff	                         call sym.oidcmp	       156	merge-tree.c	FUNCTION_9	CALL_1
0x5ea	            0x85c0	                           test eax, eax	       155	merge-tree.c	FUNCTION_9
0x5ec	            0x7519	                           jne 0x4000647	       155	merge-tree.c	FUNCTION_9
0x5ee	        0x488b45f8	                mov rax, qword [rbp - 8]	       157	merge-tree.c	FUNCTION_9
0x5f2	          0x8b5010	            mov edx, dword [rax + 0x10] 	       157	merge-tree.c	FUNCTION_9
0x5f5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       157	merge-tree.c	FUNCTION_9
0x5f9	          0x8b4010	            mov eax, dword [rax + 0x10] 	       157	merge-tree.c	FUNCTION_9
0x5fc	            0x39c2	                            cmp edx, eax	       156	merge-tree.c	FUNCTION_9	CALL_1
0x5fe	            0x7507	                           jne 0x4000647	       156	merge-tree.c	FUNCTION_9	CALL_1
0x600	      0xb801000000	                              mov eax, 1	       156	merge-tree.c	FUNCTION_9	CALL_1
0x605	            0xeb05	                           jmp 0x400064c	       156	merge-tree.c	FUNCTION_9	CALL_1
0x607	      0xb800000000	                              mov eax, 0	       156	merge-tree.c	FUNCTION_9	CALL_1
0x60c	              0xc9	                                   leave	       158	merge-tree.c	FUNCTION_9
0x60d	              0xc3	                                     ret	       158	merge-tree.c	FUNCTION_9
add_merge_entry	SWITCH,0:WHILE,0:CALL,0:ELSE,0:functions,0:FOR,0:IF,0:DO,0	11
0xd0	              0x55	                                push rbp	        23	merge-tree.c	FUNCTION_1
0xd1	          0x4889e5	                            mov rbp, rsp	        23	merge-tree.c	FUNCTION_1
0xd4	        0x48897df8	                mov qword [rbp - 8], rdi	        23	merge-tree.c	FUNCTION_1
0xd8	    0x488b05000000	            mov rax, qword [0x0400011f] 	        24	merge-tree.c	FUNCTION_1
0xdf	        0x488b55f8	                mov rdx, qword [rbp - 8]	        24	merge-tree.c	FUNCTION_1
0xe3	          0x488910	                    mov qword [rax], rdx	        24	merge-tree.c	FUNCTION_1
0xe6	        0x488b45f8	                mov rax, qword [rbp - 8]	        25	merge-tree.c	FUNCTION_1
0xea	    0x488905000000	            mov qword [0x04000131], rax 	        25	merge-tree.c	FUNCTION_1
0xf1	              0x90	                                     nop	        26	merge-tree.c	FUNCTION_1
0xf2	              0x5d	                                 pop rbp	        26	merge-tree.c	FUNCTION_1
0xf3	              0xc3	                                     ret	        26	merge-tree.c	FUNCTION_1
link_entry	SWITCH,0:WHILE,0:CALL,2:ELSE,1:functions,0:FOR,0:IF,2:DO,0	40
0x9b5	              0x55	                                push rbp	       233	merge-tree.c	FUNCTION_15
0x9b6	          0x4889e5	                            mov rbp, rsp	       233	merge-tree.c	FUNCTION_15
0x9b9	        0x4883ec30	                           sub rsp, 0x30	       233	merge-tree.c	FUNCTION_15
0x9bd	          0x897dec	             mov dword [rbp - 0x14], edi	       233	merge-tree.c	FUNCTION_15
0x9c0	        0x488975e0	             mov qword [rbp - 0x20], rsi	       233	merge-tree.c	FUNCTION_15
0x9c4	        0x488955d8	             mov qword [rbp - 0x28], rdx	       233	merge-tree.c	FUNCTION_15
0x9c8	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       233	merge-tree.c	FUNCTION_15
0x9cc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       237	merge-tree.c	FUNCTION_15	IF_1
0x9d0	          0x8b4010	            mov eax, dword [rax + 0x10] 	       237	merge-tree.c	FUNCTION_15	IF_1
0x9d3	            0x85c0	                           test eax, eax	       237	merge-tree.c	FUNCTION_15	IF_1
0x9d5	            0x7506	                           jne 0x4000a1d	       237	merge-tree.c	FUNCTION_15	IF_1
0x9d7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       238	merge-tree.c	FUNCTION_15	IF_1
0x9db	            0xeb5c	                           jmp 0x4000a79	       238	merge-tree.c	FUNCTION_15	IF_1
0x9dd	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       239	merge-tree.c	FUNCTION_15	IF_2
0x9e2	            0x740e	                            je 0x4000a32	       239	merge-tree.c	FUNCTION_15	IF_2
0x9e4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       240	merge-tree.c	FUNCTION_15	IF_2
0x9e8	        0x488b4018	            mov rax, qword [rax + 0x18] 	       240	merge-tree.c	FUNCTION_15	IF_2
0x9ec	        0x488945f0	             mov qword [rbp - 0x10], rax	       240	merge-tree.c	FUNCTION_15	IF_2
0x9f0	            0xeb17	                           jmp 0x4000a49	       240	merge-tree.c	FUNCTION_15	IF_2
0x9f2	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       242	merge-tree.c	FUNCTION_15	CALL_1
0x9f6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       242	merge-tree.c	FUNCTION_15	CALL_1
0x9fa	          0x4889d6	                            mov rsi, rdx	       242	merge-tree.c	FUNCTION_15	CALL_1
0x9fd	          0x4889c7	                            mov rdi, rax	       242	merge-tree.c	FUNCTION_15	CALL_1
0xa00	      0xe8b4fcffff	                  call sym.traverse_path	       242	merge-tree.c	FUNCTION_15	CALL_1
0xa05	        0x488945f0	             mov qword [rbp - 0x10], rax	       242	merge-tree.c	FUNCTION_15	CALL_1
0xa09	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       243	merge-tree.c	FUNCTION_15	CALL_2
0xa0d	          0x488b10	                    mov rdx, qword [rax]	       243	merge-tree.c	FUNCTION_15	CALL_2
0xa10	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       243	merge-tree.c	FUNCTION_15	CALL_2
0xa14	          0x8b7010	            mov esi, dword [rax + 0x10] 	       243	merge-tree.c	FUNCTION_15	CALL_2
0xa17	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       243	merge-tree.c	FUNCTION_15	CALL_2
0xa1b	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       243	merge-tree.c	FUNCTION_15	CALL_2
0xa1e	            0x89c7	                            mov edi, eax	       243	merge-tree.c	FUNCTION_15	CALL_2
0xa20	      0xe81bfcffff	                   call sym.create_entry	       243	merge-tree.c	FUNCTION_15	CALL_2
0xa25	        0x488945f8	                mov qword [rbp - 8], rax	       243	merge-tree.c	FUNCTION_15	CALL_2
0xa29	        0x488b45f8	                mov rax, qword [rbp - 8]	       244	merge-tree.c	FUNCTION_15
0xa2d	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       244	merge-tree.c	FUNCTION_15
0xa31	        0x48895008	                mov qword [rax + 8], rdx	       244	merge-tree.c	FUNCTION_15
0xa35	        0x488b45f8	                mov rax, qword [rbp - 8]	       245	merge-tree.c	FUNCTION_15
0xa39	              0xc9	                                   leave	       246	merge-tree.c	FUNCTION_15
0xa3a	              0xc3	                                     ret	       246	merge-tree.c	FUNCTION_15
show_outf	SWITCH,0:WHILE,0:CALL,1:ELSE,0:functions,0:FOR,1:IF,0:DO,0	35
0x31e	              0x55	                                push rbp	        93	merge-tree.c	FUNCTION_5
0x31f	          0x4889e5	                            mov rbp, rsp	        93	merge-tree.c	FUNCTION_5
0x322	        0x4883ec30	                           sub rsp, 0x30	        93	merge-tree.c	FUNCTION_5
0x326	        0x48897de8	             mov qword [rbp - 0x18], rdi	        93	merge-tree.c	FUNCTION_5
0x32a	        0x488975e0	             mov qword [rbp - 0x20], rsi	        93	merge-tree.c	FUNCTION_5
0x32e	          0x8955dc	             mov dword [rbp - 0x24], edx	        93	merge-tree.c	FUNCTION_5
0x331	    0xc745fc000000	                  mov dword [rbp - 4], 0	        95	merge-tree.c	FUNCTION_5	FOR_1
0x338	            0xeb48	                           jmp 0x40003c2	        95	merge-tree.c	FUNCTION_5	FOR_1
0x33a	          0x8b45fc	                mov eax, dword [rbp - 4]	        96	merge-tree.c	FUNCTION_5	CALL_1
0x33d	            0x4898	                                    cdqe	        96	merge-tree.c	FUNCTION_5	CALL_1
0x33f	        0x48c1e004	                              shl rax, 4	        96	merge-tree.c	FUNCTION_5	CALL_1
0x343	          0x4889c2	                            mov rdx, rax	        96	merge-tree.c	FUNCTION_5	CALL_1
0x346	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        96	merge-tree.c	FUNCTION_5	CALL_1
0x34a	          0x4801d0	                            add rax, rdx	        96	merge-tree.c	FUNCTION_5	CALL_1
0x34d	          0x488b00	                    mov rax, qword [rax]	        96	merge-tree.c	FUNCTION_5	CALL_1
0x350	          0x8b55fc	                mov edx, dword [rbp - 4]	        96	merge-tree.c	FUNCTION_5	CALL_1
0x353	          0x4863d2	                         movsxd rdx, edx	        96	merge-tree.c	FUNCTION_5	CALL_1
0x356	          0x4889d1	                            mov rcx, rdx	        96	merge-tree.c	FUNCTION_5	CALL_1
0x359	        0x48c1e104	                              shl rcx, 4	        96	merge-tree.c	FUNCTION_5	CALL_1
0x35d	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	        96	merge-tree.c	FUNCTION_5	CALL_1
0x361	          0x4801ca	                            add rdx, rcx	        96	merge-tree.c	FUNCTION_5	CALL_1
0x364	        0x488b5208	                mov rdx, qword [rdx + 8]	        96	merge-tree.c	FUNCTION_5	CALL_1
0x368	            0x89d1	                            mov ecx, edx	        96	merge-tree.c	FUNCTION_5	CALL_1
0x36a	          0x4889c2	                            mov rdx, rax	        96	merge-tree.c	FUNCTION_5	CALL_1
0x36d	            0x89ce	                            mov esi, ecx	        96	merge-tree.c	FUNCTION_5	CALL_1
0x36f	      0xbf00000000	                              mov edi, 0	        96	merge-tree.c	FUNCTION_5	CALL_1
0x374	      0xb800000000	                              mov eax, 0	        96	merge-tree.c	FUNCTION_5	CALL_1
0x379	      0xe800000000	                          call 0x40003be	        96	merge-tree.c	FUNCTION_5	CALL_1
0x37e	        0x8345fc01	                  add dword [rbp - 4], 1	        95	merge-tree.c	FUNCTION_5	FOR_1
0x382	          0x8b45fc	                mov eax, dword [rbp - 4]	        95	merge-tree.c	FUNCTION_5	FOR_1
0x385	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	        95	merge-tree.c	FUNCTION_5	FOR_1
0x388	            0x7cb0	                            jl 0x400037a	        95	merge-tree.c	FUNCTION_5	FOR_1
0x38a	      0xb800000000	                              mov eax, 0	        97	merge-tree.c	FUNCTION_5
0x38f	              0xc9	                                   leave	        98	merge-tree.c	FUNCTION_5
0x390	              0xc3	                                     ret	        98	merge-tree.c	FUNCTION_5
result	SWITCH,0:WHILE,0:CALL,2:ELSE,0:functions,0:FOR,0:IF,4:DO,0	71
0x18c	              0x55	                                push rbp	        57	merge-tree.c	FUNCTION_3
0x18d	          0x4889e5	                            mov rbp, rsp	        57	merge-tree.c	FUNCTION_3
0x190	        0x4883ec40	                           sub rsp, 0x40	        57	merge-tree.c	FUNCTION_3
0x194	        0x48897dc8	             mov qword [rbp - 0x38], rdi	        57	merge-tree.c	FUNCTION_3
0x198	        0x488975c0	             mov qword [rbp - 0x40], rsi	        57	merge-tree.c	FUNCTION_3
0x19c	    0x64488b042528	                mov rax, qword fs:[0x28]	        57	merge-tree.c	FUNCTION_3
0x1a5	        0x488945f8	                mov qword [rbp - 8], rax	        57	merge-tree.c	FUNCTION_3
0x1a9	            0x31c0	                            xor eax, eax	        57	merge-tree.c	FUNCTION_3
0x1ab	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        60	merge-tree.c	FUNCTION_3
0x1af	        0x488b4018	            mov rax, qword [rax + 0x18] 	        60	merge-tree.c	FUNCTION_3
0x1b3	        0x488945f0	             mov qword [rbp - 0x10], rax	        60	merge-tree.c	FUNCTION_3
0x1b7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        62	merge-tree.c	FUNCTION_3	IF_1
0x1bb	         0xfb64010	           movzx eax, byte [rax + 0x10] 	        62	merge-tree.c	FUNCTION_3	IF_1
0x1bf	          0x83e003	                              and eax, 3	        62	merge-tree.c	FUNCTION_3	IF_1
0x1c2	            0x84c0	                             test al, al	        62	merge-tree.c	FUNCTION_3	IF_1
0x1c4	            0x7524	                           jne 0x400022a	        62	merge-tree.c	FUNCTION_3	IF_1
0x1c6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        63	merge-tree.c	FUNCTION_3	CALL_1
0x1ca	        0x488b4020	            mov rax, qword [rax + 0x20] 	        63	merge-tree.c	FUNCTION_3	CALL_1
0x1ce	        0x488d4804	                      lea rcx, [rax + 4]	        63	merge-tree.c	FUNCTION_3	CALL_1
0x1d2	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	        63	merge-tree.c	FUNCTION_3	CALL_1
0x1d6	        0x488d45d4	                   lea rax, [rbp - 0x2c]	        63	merge-tree.c	FUNCTION_3	CALL_1
0x1da	          0x4889c6	                            mov rsi, rax	        63	merge-tree.c	FUNCTION_3	CALL_1
0x1dd	          0x4889cf	                            mov rdi, rcx	        63	merge-tree.c	FUNCTION_3	CALL_1
0x1e0	      0xe86afeffff	               call sym.read_object_file	        63	merge-tree.c	FUNCTION_3	CALL_1
0x1e5	      0xe99f000000	                           jmp 0x40002c9	        63	merge-tree.c	FUNCTION_3	CALL_1
0x1ea	    0x48c745d80000	               mov qword [rbp - 0x28], 0	        64	merge-tree.c	FUNCTION_3
0x1f2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        65	merge-tree.c	FUNCTION_3	IF_2
0x1f6	         0xfb64010	           movzx eax, byte [rax + 0x10] 	        65	merge-tree.c	FUNCTION_3	IF_2
0x1fa	          0x83e003	                              and eax, 3	        65	merge-tree.c	FUNCTION_3	IF_2
0x1fd	            0x3c01	                               cmp al, 1	        65	merge-tree.c	FUNCTION_3	IF_2
0x1ff	            0x7518	                           jne 0x4000259	        65	merge-tree.c	FUNCTION_3	IF_2
0x201	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        66	merge-tree.c	FUNCTION_3	IF_2
0x205	        0x488b4020	            mov rax, qword [rax + 0x20] 	        66	merge-tree.c	FUNCTION_3	IF_2
0x209	        0x488945d8	             mov qword [rbp - 0x28], rax	        66	merge-tree.c	FUNCTION_3	IF_2
0x20d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        67	merge-tree.c	FUNCTION_3	IF_2
0x211	        0x488b4008	                mov rax, qword [rax + 8]	        67	merge-tree.c	FUNCTION_3	IF_2
0x215	        0x488945c8	             mov qword [rbp - 0x38], rax	        67	merge-tree.c	FUNCTION_3	IF_2
0x219	    0x48c745e00000	               mov qword [rbp - 0x20], 0	        69	merge-tree.c	FUNCTION_3
0x221	      0x48837dc800	               cmp qword [rbp - 0x38], 0	        70	merge-tree.c	FUNCTION_3	IF_3
0x226	            0x7427	                            je 0x400028f	        70	merge-tree.c	FUNCTION_3	IF_3
0x228	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        70	merge-tree.c	FUNCTION_3	IF_3
0x22c	         0xfb64010	           movzx eax, byte [rax + 0x10] 	        70	merge-tree.c	FUNCTION_3	IF_3
0x230	          0x83e003	                              and eax, 3	        70	merge-tree.c	FUNCTION_3	IF_3
0x233	            0x3c02	                               cmp al, 2	        70	merge-tree.c	FUNCTION_3	IF_3
0x235	            0x7518	                           jne 0x400028f	        70	merge-tree.c	FUNCTION_3	IF_3
0x237	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        71	merge-tree.c	FUNCTION_3	IF_3
0x23b	        0x488b4020	            mov rax, qword [rax + 0x20] 	        71	merge-tree.c	FUNCTION_3	IF_3
0x23f	        0x488945e0	             mov qword [rbp - 0x20], rax	        71	merge-tree.c	FUNCTION_3	IF_3
0x243	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        72	merge-tree.c	FUNCTION_3	IF_3
0x247	        0x488b4008	                mov rax, qword [rax + 8]	        72	merge-tree.c	FUNCTION_3	IF_3
0x24b	        0x488945c8	             mov qword [rbp - 0x38], rax	        72	merge-tree.c	FUNCTION_3	IF_3
0x24f	    0x48c745e80000	               mov qword [rbp - 0x18], 0	        74	merge-tree.c	FUNCTION_3
0x257	      0x48837dc800	               cmp qword [rbp - 0x38], 0	        75	merge-tree.c	FUNCTION_3	IF_4
0x25c	            0x740c	                            je 0x40002aa	        75	merge-tree.c	FUNCTION_3	IF_4
0x25e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        76	merge-tree.c	FUNCTION_3	IF_4
0x262	        0x488b4020	            mov rax, qword [rax + 0x20] 	        76	merge-tree.c	FUNCTION_3	IF_4
0x266	        0x488945e8	             mov qword [rbp - 0x18], rax	        76	merge-tree.c	FUNCTION_3	IF_4
0x26a	        0x488b7dc0	             mov rdi, qword [rbp - 0x40]	        77	merge-tree.c	FUNCTION_3	CALL_2
0x26e	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	        77	merge-tree.c	FUNCTION_3	CALL_2
0x272	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	        77	merge-tree.c	FUNCTION_3	CALL_2
0x276	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	        77	merge-tree.c	FUNCTION_3	CALL_2
0x27a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        77	merge-tree.c	FUNCTION_3	CALL_2
0x27e	          0x4989f8	                             mov r8, rdi	        77	merge-tree.c	FUNCTION_3	CALL_2
0x281	          0x4889c7	                            mov rdi, rax	        77	merge-tree.c	FUNCTION_3	CALL_2
0x284	      0xe800000000	                          call 0x40002c9	        77	merge-tree.c	FUNCTION_3	CALL_2
0x289	        0x488b4df8	                mov rcx, qword [rbp - 8]	        78	merge-tree.c	FUNCTION_3
0x28d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        78	merge-tree.c	FUNCTION_3
0x296	            0x7405	                            je 0x40002dd	        78	merge-tree.c	FUNCTION_3
0x298	      0xe800000000	                          call 0x40002dd	        78	merge-tree.c	FUNCTION_3
0x29d	              0xc9	                                   leave	        78	merge-tree.c	FUNCTION_3
0x29e	              0xc3	                                     ret	        78	merge-tree.c	FUNCTION_3
traverse_path	SWITCH,0:WHILE,0:CALL,3:ELSE,0:functions,0:FOR,0:IF,0:DO,0	22
0x6b9	              0x55	                                push rbp	       177	merge-tree.c	FUNCTION_12
0x6ba	          0x4889e5	                            mov rbp, rsp	       177	merge-tree.c	FUNCTION_12
0x6bd	        0x4883ec20	                           sub rsp, 0x20	       177	merge-tree.c	FUNCTION_12
0x6c1	        0x48897de8	             mov qword [rbp - 0x18], rdi	       177	merge-tree.c	FUNCTION_12
0x6c5	        0x488975e0	             mov qword [rbp - 0x20], rsi	       177	merge-tree.c	FUNCTION_12
0x6c9	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       178	merge-tree.c	FUNCTION_12	CALL_2
0x6cd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       178	merge-tree.c	FUNCTION_12	CALL_2
0x6d1	          0x4889d6	                            mov rsi, rdx	       178	merge-tree.c	FUNCTION_12	CALL_2
0x6d4	          0x4889c7	                            mov rdi, rax	       178	merge-tree.c	FUNCTION_12	CALL_2
0x6d7	      0xe8c7f9ffff	              call sym.traverse_path_len	       178	merge-tree.c	FUNCTION_12	CALL_2
0x6dc	            0x4898	                                    cdqe	       178	merge-tree.c	FUNCTION_12	CALL_2
0x6de	          0x4889c7	                            mov rdi, rax	       178	merge-tree.c	FUNCTION_12	CALL_2
0x6e1	      0xe800000000	                          call 0x4000726	       178	merge-tree.c	FUNCTION_12	CALL_2
0x6e6	        0x488945f8	                mov qword [rbp - 8], rax	       178	merge-tree.c	FUNCTION_12	CALL_2
0x6ea	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       179	merge-tree.c	FUNCTION_12	CALL_3
0x6ee	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       179	merge-tree.c	FUNCTION_12	CALL_3
0x6f2	        0x488b45f8	                mov rax, qword [rbp - 8]	       179	merge-tree.c	FUNCTION_12	CALL_3
0x6f6	          0x4889ce	                            mov rsi, rcx	       179	merge-tree.c	FUNCTION_12	CALL_3
0x6f9	          0x4889c7	                            mov rdi, rax	       179	merge-tree.c	FUNCTION_12	CALL_3
0x6fc	      0xe800000000	                          call 0x4000741	       179	merge-tree.c	FUNCTION_12	CALL_3
0x701	              0xc9	                                   leave	       180	merge-tree.c	FUNCTION_12
0x702	              0xc3	                                     ret	       180	merge-tree.c	FUNCTION_12
resolve	SWITCH,0:WHILE,0:CALL,4:ELSE,0:functions,0:FOR,0:IF,1:DO,0	42
0x703	              0x55	                                push rbp	       183	merge-tree.c	FUNCTION_13
0x704	          0x4889e5	                            mov rbp, rsp	       183	merge-tree.c	FUNCTION_13
0x707	        0x4883ec40	                           sub rsp, 0x40	       183	merge-tree.c	FUNCTION_13
0x70b	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       183	merge-tree.c	FUNCTION_13
0x70f	        0x488975d0	             mov qword [rbp - 0x30], rsi	       183	merge-tree.c	FUNCTION_13
0x713	        0x488955c8	             mov qword [rbp - 0x38], rdx	       183	merge-tree.c	FUNCTION_13
0x717	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       188	merge-tree.c	FUNCTION_13	IF_1
0x71c	            0x7475	                            je 0x40007d3	       188	merge-tree.c	FUNCTION_13	IF_1
0x71e	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       191	merge-tree.c	FUNCTION_13	CALL_1
0x722	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       191	merge-tree.c	FUNCTION_13	CALL_1
0x726	          0x4889d6	                            mov rsi, rdx	       191	merge-tree.c	FUNCTION_13	CALL_1
0x729	          0x4889c7	                            mov rdi, rax	       191	merge-tree.c	FUNCTION_13	CALL_1
0x72c	      0xe888ffffff	                  call sym.traverse_path	       191	merge-tree.c	FUNCTION_13	CALL_1
0x731	        0x488945e8	             mov qword [rbp - 0x18], rax	       191	merge-tree.c	FUNCTION_13	CALL_1
0x735	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       192	merge-tree.c	FUNCTION_13	CALL_2
0x739	          0x488b10	                    mov rdx, qword [rax]	       192	merge-tree.c	FUNCTION_13	CALL_2
0x73c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       192	merge-tree.c	FUNCTION_13	CALL_2
0x740	          0x8b4010	            mov eax, dword [rax + 0x10] 	       192	merge-tree.c	FUNCTION_13	CALL_2
0x743	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       192	merge-tree.c	FUNCTION_13	CALL_2
0x747	            0x89c6	                            mov esi, eax	       192	merge-tree.c	FUNCTION_13	CALL_2
0x749	      0xbf02000000	                              mov edi, 2	       192	merge-tree.c	FUNCTION_13	CALL_2
0x74e	      0xe8edfeffff	                   call sym.create_entry	       192	merge-tree.c	FUNCTION_13	CALL_2
0x753	        0x488945f0	             mov qword [rbp - 0x10], rax	       192	merge-tree.c	FUNCTION_13	CALL_2
0x757	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       193	merge-tree.c	FUNCTION_13	CALL_3
0x75b	          0x488b10	                    mov rdx, qword [rax]	       193	merge-tree.c	FUNCTION_13	CALL_3
0x75e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       193	merge-tree.c	FUNCTION_13	CALL_3
0x762	          0x8b4010	            mov eax, dword [rax + 0x10] 	       193	merge-tree.c	FUNCTION_13	CALL_3
0x765	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       193	merge-tree.c	FUNCTION_13	CALL_3
0x769	            0x89c6	                            mov esi, eax	       193	merge-tree.c	FUNCTION_13	CALL_3
0x76b	      0xbf00000000	                              mov edi, 0	       193	merge-tree.c	FUNCTION_13	CALL_3
0x770	      0xe8cbfeffff	                   call sym.create_entry	       193	merge-tree.c	FUNCTION_13	CALL_3
0x775	        0x488945f8	                mov qword [rbp - 8], rax	       193	merge-tree.c	FUNCTION_13	CALL_3
0x779	        0x488b45f8	                mov rax, qword [rbp - 8]	       195	merge-tree.c	FUNCTION_13
0x77d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       195	merge-tree.c	FUNCTION_13
0x781	        0x48895008	                mov qword [rax + 8], rdx	       195	merge-tree.c	FUNCTION_13
0x785	        0x488b45f8	                mov rax, qword [rbp - 8]	       197	merge-tree.c	FUNCTION_13	CALL_4
0x789	          0x4889c7	                            mov rdi, rax	       197	merge-tree.c	FUNCTION_13	CALL_4
0x78c	      0xe83ff9ffff	                call sym.add_merge_entry	       197	merge-tree.c	FUNCTION_13	CALL_4
0x791	            0xeb01	                           jmp 0x40007d4	       197	merge-tree.c	FUNCTION_13	CALL_4
0x793	              0x90	                                     nop	       189	merge-tree.c	FUNCTION_13	IF_1
0x794	              0xc9	                                   leave	       198	merge-tree.c	FUNCTION_13
0x795	              0xc3	                                     ret	       198	merge-tree.c	FUNCTION_13
both_empty	SWITCH,0:WHILE,0:CALL,0:ELSE,0:functions,0:FOR,0:IF,0:DO,0	17
0x60e	              0x55	                                push rbp	       161	merge-tree.c	FUNCTION_10
0x60f	          0x4889e5	                            mov rbp, rsp	       161	merge-tree.c	FUNCTION_10
0x612	        0x48897df8	                mov qword [rbp - 8], rdi	       161	merge-tree.c	FUNCTION_10
0x616	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	merge-tree.c	FUNCTION_10
0x61a	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	merge-tree.c	FUNCTION_10
0x61e	          0x488b00	                    mov rax, qword [rax]	       162	merge-tree.c	FUNCTION_10
0x621	          0x4885c0	                           test rax, rax	       162	merge-tree.c	FUNCTION_10
0x624	            0x7513	                           jne 0x4000679	       162	merge-tree.c	FUNCTION_10
0x626	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       162	merge-tree.c	FUNCTION_10
0x62a	          0x488b00	                    mov rax, qword [rax]	       162	merge-tree.c	FUNCTION_10
0x62d	          0x4885c0	                           test rax, rax	       162	merge-tree.c	FUNCTION_10
0x630	            0x7507	                           jne 0x4000679	       162	merge-tree.c	FUNCTION_10
0x632	      0xb801000000	                              mov eax, 1	       162	merge-tree.c	FUNCTION_10
0x637	            0xeb05	                           jmp 0x400067e	       162	merge-tree.c	FUNCTION_10
0x639	      0xb800000000	                              mov eax, 0	       162	merge-tree.c	FUNCTION_10
0x63e	              0x5d	                                 pop rbp	       163	merge-tree.c	FUNCTION_10
0x63f	              0xc3	                                     ret	       163	merge-tree.c	FUNCTION_10
show_diff	SWITCH,0:WHILE,0:CALL,7:ELSE,0:functions,0:FOR,0:IF,3:DO,0	66
0x391	              0x55	                                push rbp	       101	merge-tree.c	FUNCTION_6
0x392	          0x4889e5	                            mov rbp, rsp	       101	merge-tree.c	FUNCTION_6
0x395	    0x4881ecb00000	                           sub rsp, 0xb0	       101	merge-tree.c	FUNCTION_6
0x39c	    0x4889bd58ffff	             mov qword [rbp - 0xa8], rdi	       101	merge-tree.c	FUNCTION_6
0x3a3	    0x64488b042528	                mov rax, qword fs:[0x28]	       101	merge-tree.c	FUNCTION_6
0x3ac	        0x488945f8	                mov qword [rbp - 8], rax	       101	merge-tree.c	FUNCTION_6
0x3b0	            0x31c0	                            xor eax, eax	       101	merge-tree.c	FUNCTION_6
0x3b2	    0x48c745a00000	               mov qword [rbp - 0x60], 0	       108	merge-tree.c	FUNCTION_6
0x3ba	        0x488d45c0	                   lea rax, [rbp - 0x40]	       109	merge-tree.c	FUNCTION_6	CALL_1
0x3be	      0xba30000000	                           mov edx, 0x30	       109	merge-tree.c	FUNCTION_6	CALL_1
0x3c3	      0xbe00000000	                              mov esi, 0	       109	merge-tree.c	FUNCTION_6	CALL_1
0x3c8	          0x4889c7	                            mov rdi, rax	       109	merge-tree.c	FUNCTION_6	CALL_1
0x3cb	      0xe800000000	                          call 0x4000410	       109	merge-tree.c	FUNCTION_6	CALL_1
0x3d0	    0x48c745c00300	               mov qword [rbp - 0x40], 3	       110	merge-tree.c	FUNCTION_6
0x3d8	    0x48c745980000	               mov qword [rbp - 0x68], 0	       111	merge-tree.c	FUNCTION_6
0x3e0	    0x48c745900000	               mov qword [rbp - 0x70], 0	       112	merge-tree.c	FUNCTION_6
0x3e8	    0x488d9568ffff	                   lea rdx, [rbp - 0x98]	       114	merge-tree.c	FUNCTION_6	CALL_2
0x3ef	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       114	merge-tree.c	FUNCTION_6	CALL_2
0x3f6	          0x4889d6	                            mov rsi, rdx	       114	merge-tree.c	FUNCTION_6	CALL_2
0x3f9	          0x4889c7	                            mov rdi, rax	       114	merge-tree.c	FUNCTION_6	CALL_2
0x3fc	      0xe89efeffff	                         call sym.origin	       114	merge-tree.c	FUNCTION_6	CALL_2
0x401	    0x48898570ffff	             mov qword [rbp - 0x90], rax	       114	merge-tree.c	FUNCTION_6	CALL_2
0x408	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       115	merge-tree.c	FUNCTION_6	IF_1
0x40f	          0x4885c0	                           test rax, rax	       115	merge-tree.c	FUNCTION_6	IF_1
0x412	            0x750b	                           jne 0x400045f	       115	merge-tree.c	FUNCTION_6	IF_1
0x414	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	       116	merge-tree.c	FUNCTION_6	IF_1
0x41f	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       117	merge-tree.c	FUNCTION_6
0x426	    0x48898578ffff	             mov qword [rbp - 0x88], rax	       117	merge-tree.c	FUNCTION_6
0x42d	    0x488d9568ffff	                   lea rdx, [rbp - 0x98]	       118	merge-tree.c	FUNCTION_6	CALL_3
0x434	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       118	merge-tree.c	FUNCTION_6	CALL_3
0x43b	          0x4889d6	                            mov rsi, rdx	       118	merge-tree.c	FUNCTION_6	CALL_3
0x43e	          0x4889c7	                            mov rdi, rax	       118	merge-tree.c	FUNCTION_6	CALL_3
0x441	      0xe846fdffff	                         call sym.result	       118	merge-tree.c	FUNCTION_6	CALL_3
0x446	        0x48894580	             mov qword [rbp - 0x80], rax	       118	merge-tree.c	FUNCTION_6	CALL_3
0x44a	        0x488b4580	             mov rax, qword [rbp - 0x80]	       119	merge-tree.c	FUNCTION_6	IF_2
0x44e	          0x4885c0	                           test rax, rax	       119	merge-tree.c	FUNCTION_6	IF_2
0x451	            0x750b	                           jne 0x400049e	       119	merge-tree.c	FUNCTION_6	IF_2
0x453	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	       120	merge-tree.c	FUNCTION_6	IF_2
0x45e	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       121	merge-tree.c	FUNCTION_6
0x465	        0x48894588	             mov qword [rbp - 0x78], rax	       121	merge-tree.c	FUNCTION_6
0x469	        0x488d7d90	                   lea rdi, [rbp - 0x70]	       122	merge-tree.c	FUNCTION_6	IF_3	CALL_4
0x46d	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	       122	merge-tree.c	FUNCTION_6	IF_3	CALL_4
0x471	        0x488d55a0	                   lea rdx, [rbp - 0x60]	       122	merge-tree.c	FUNCTION_6	IF_3	CALL_4
0x475	        0x488d7580	                   lea rsi, [rbp - 0x80]	       122	merge-tree.c	FUNCTION_6	IF_3	CALL_4
0x479	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	       122	merge-tree.c	FUNCTION_6	IF_3	CALL_4
0x480	          0x4989f8	                             mov r8, rdi	       122	merge-tree.c	FUNCTION_6	IF_3	CALL_4
0x483	          0x4889c7	                            mov rdi, rax	       122	merge-tree.c	FUNCTION_6	IF_3	CALL_4
0x486	      0xe800000000	                          call 0x40004cb	       122	merge-tree.c	FUNCTION_6	IF_3	CALL_4
0x48b	            0x85c0	                           test eax, eax	       122	merge-tree.c	FUNCTION_6	IF_3	CALL_4
0x48d	            0x740f	                            je 0x40004de	       122	merge-tree.c	FUNCTION_6	IF_3	CALL_4
0x48f	      0xbf00000000	                              mov edi, 0	       123	merge-tree.c	FUNCTION_6	CALL_5
0x494	      0xb800000000	                              mov eax, 0	       123	merge-tree.c	FUNCTION_6	CALL_5
0x499	      0xe800000000	                          call 0x40004de	       123	merge-tree.c	FUNCTION_6	CALL_5
0x49e	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       124	merge-tree.c	FUNCTION_6	CALL_6
0x4a5	          0x4889c7	                            mov rdi, rax	       124	merge-tree.c	FUNCTION_6	CALL_6
0x4a8	      0xe800000000	                          call 0x40004ed	       124	merge-tree.c	FUNCTION_6	CALL_6
0x4ad	        0x488b4580	             mov rax, qword [rbp - 0x80]	       125	merge-tree.c	FUNCTION_6	CALL_7
0x4b1	          0x4889c7	                            mov rdi, rax	       125	merge-tree.c	FUNCTION_6	CALL_7
0x4b4	      0xe800000000	                          call 0x40004f9	       125	merge-tree.c	FUNCTION_6	CALL_7
0x4b9	              0x90	                                     nop	       126	merge-tree.c	FUNCTION_6
0x4ba	        0x488b45f8	                mov rax, qword [rbp - 8]	       126	merge-tree.c	FUNCTION_6
0x4be	    0x644833042528	                xor rax, qword fs:[0x28]	       126	merge-tree.c	FUNCTION_6
0x4c7	            0x7405	                            je 0x400050e	       126	merge-tree.c	FUNCTION_6
0x4c9	      0xe800000000	                          call 0x400050e	       126	merge-tree.c	FUNCTION_6
0x4ce	              0xc9	                                   leave	       126	merge-tree.c	FUNCTION_6
0x4cf	              0xc3	                                     ret	       126	merge-tree.c	FUNCTION_6
merge_trees	SWITCH,0:WHILE,0:CALL,2:ELSE,0:functions,0:FOR,0:IF,0:DO,0	26
0xd3b	              0x55	                                push rbp	       341	merge-tree.c	FUNCTION_18
0xd3c	          0x4889e5	                            mov rbp, rsp	       341	merge-tree.c	FUNCTION_18
0xd3f	        0x4883ec70	                           sub rsp, 0x70	       341	merge-tree.c	FUNCTION_18
0xd43	        0x48897d98	             mov qword [rbp - 0x68], rdi	       341	merge-tree.c	FUNCTION_18
0xd47	        0x48897590	             mov qword [rbp - 0x70], rsi	       341	merge-tree.c	FUNCTION_18
0xd4b	    0x64488b042528	                mov rax, qword fs:[0x28]	       341	merge-tree.c	FUNCTION_18
0xd54	        0x488945f8	                mov qword [rbp - 8], rax	       341	merge-tree.c	FUNCTION_18
0xd58	            0x31c0	                            xor eax, eax	       341	merge-tree.c	FUNCTION_18
0xd5a	        0x488b5590	             mov rdx, qword [rbp - 0x70]	       344	merge-tree.c	FUNCTION_18	CALL_1
0xd5e	        0x488d45a0	                   lea rax, [rbp - 0x60]	       344	merge-tree.c	FUNCTION_18	CALL_1
0xd62	          0x4889d6	                            mov rsi, rdx	       344	merge-tree.c	FUNCTION_18	CALL_1
0xd65	          0x4889c7	                            mov rdi, rax	       344	merge-tree.c	FUNCTION_18	CALL_1
0xd68	      0xe800000000	                          call 0x4000dad	       344	merge-tree.c	FUNCTION_18	CALL_1
0xd6d	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       345	merge-tree.c	FUNCTION_18
0xd75	        0x488d55a0	                   lea rdx, [rbp - 0x60]	       346	merge-tree.c	FUNCTION_18	CALL_2
0xd79	        0x488b4598	             mov rax, qword [rbp - 0x68]	       346	merge-tree.c	FUNCTION_18	CALL_2
0xd7d	          0x4889c6	                            mov rsi, rax	       346	merge-tree.c	FUNCTION_18	CALL_2
0xd80	      0xbf03000000	                              mov edi, 3	       346	merge-tree.c	FUNCTION_18	CALL_2
0xd85	      0xe800000000	                          call 0x4000dca	       346	merge-tree.c	FUNCTION_18	CALL_2
0xd8a	              0x90	                                     nop	       347	merge-tree.c	FUNCTION_18
0xd8b	        0x488b45f8	                mov rax, qword [rbp - 8]	       347	merge-tree.c	FUNCTION_18
0xd8f	    0x644833042528	                xor rax, qword fs:[0x28]	       347	merge-tree.c	FUNCTION_18
0xd98	            0x7405	                            je 0x4000ddf	       347	merge-tree.c	FUNCTION_18
0xd9a	      0xe800000000	                          call 0x4000ddf	       347	merge-tree.c	FUNCTION_18
0xd9f	              0xc9	                                   leave	       347	merge-tree.c	FUNCTION_18
0xda0	              0xc3	                                     ret	       347	merge-tree.c	FUNCTION_18
unresolved_directory	SWITCH,0:WHILE,0:CALL,13:ELSE,0:functions,0:FOR,1:IF,2:DO,0	124
0x796	              0x55	                                push rbp	       202	merge-tree.c	FUNCTION_14
0x797	          0x4889e5	                            mov rbp, rsp	       202	merge-tree.c	FUNCTION_14
0x79a	    0x4881ecc00000	                           sub rsp, 0xc0	       202	merge-tree.c	FUNCTION_14
0x7a1	    0x4889bd48ffff	             mov qword [rbp - 0xb8], rdi	       202	merge-tree.c	FUNCTION_14
0x7a8	    0x4889b540ffff	             mov qword [rbp - 0xc0], rsi	       202	merge-tree.c	FUNCTION_14
0x7af	    0x64488b042528	                mov rax, qword fs:[0x28]	       202	merge-tree.c	FUNCTION_14
0x7b8	        0x488945f8	                mov qword [rbp - 8], rax	       202	merge-tree.c	FUNCTION_14
0x7bc	            0x31c0	                            xor eax, eax	       202	merge-tree.c	FUNCTION_14
0x7be	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       208	merge-tree.c	FUNCTION_14	FOR_1
0x7c5	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	       208	merge-tree.c	FUNCTION_14	FOR_1
0x7cc	            0xeb2c	                           jmp 0x400083a	       208	merge-tree.c	FUNCTION_14	FOR_1
0x7ce	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       209	merge-tree.c	FUNCTION_14	FOR_1	IF_1	CALL_1
0x7d5	          0x8b4010	            mov eax, dword [rax + 0x10] 	       209	merge-tree.c	FUNCTION_14	FOR_1	IF_1	CALL_1
0x7d8	            0x85c0	                           test eax, eax	       209	merge-tree.c	FUNCTION_14	FOR_1	IF_1	CALL_1
0x7da	            0x7416	                            je 0x4000832	       209	merge-tree.c	FUNCTION_14	FOR_1	IF_1	CALL_1
0x7dc	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       209	merge-tree.c	FUNCTION_14	FOR_1	IF_1	CALL_1
0x7e3	          0x8b4010	            mov eax, dword [rax + 0x10] 	       209	merge-tree.c	FUNCTION_14	FOR_1	IF_1	CALL_1
0x7e6	      0x2500f00000	                         and eax, 0xf000	       209	merge-tree.c	FUNCTION_14	FOR_1	IF_1	CALL_1
0x7eb	      0x3d00400000	                         cmp eax, 0x4000	       209	merge-tree.c	FUNCTION_14	FOR_1	IF_1	CALL_1
0x7f0	            0x741e	                            je 0x4000850	       209	merge-tree.c	FUNCTION_14	FOR_1	IF_1	CALL_1
0x7f2	    0x48838558ffff	            add qword [rbp - 0xa8], 0x18	       208	merge-tree.c	FUNCTION_14	FOR_1
0x7fa	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       208	merge-tree.c	FUNCTION_14	FOR_1
0x801	        0x4883c048	                           add rax, 0x48	       208	merge-tree.c	FUNCTION_14	FOR_1
0x805	    0x483b8558ffff	             cmp rax, qword [rbp - 0xa8]	       208	merge-tree.c	FUNCTION_14	FOR_1
0x80c	            0x77c0	                            ja 0x400080e	       208	merge-tree.c	FUNCTION_14	FOR_1
0x80e	            0xeb01	                           jmp 0x4000851	       208	merge-tree.c	FUNCTION_14	FOR_1
0x810	              0x90	                                     nop	       210	merge-tree.c	FUNCTION_14	FOR_1	IF_1
0x811	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       212	merge-tree.c	FUNCTION_14	IF_2
0x818	        0x4883c048	                           add rax, 0x48	       212	merge-tree.c	FUNCTION_14	IF_2
0x81c	    0x483b8558ffff	             cmp rax, qword [rbp - 0xa8]	       212	merge-tree.c	FUNCTION_14	IF_2
0x823	     0xf8675010000	                           jbe 0x40009de	       212	merge-tree.c	FUNCTION_14	IF_2
0x829	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	       215	merge-tree.c	FUNCTION_14	CALL_2
0x830	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       215	merge-tree.c	FUNCTION_14	CALL_2
0x837	          0x4889d6	                            mov rsi, rdx	       215	merge-tree.c	FUNCTION_14	CALL_2
0x83a	          0x4889c7	                            mov rdi, rax	       215	merge-tree.c	FUNCTION_14	CALL_2
0x83d	      0xe877feffff	                  call sym.traverse_path	       215	merge-tree.c	FUNCTION_14	CALL_2
0x842	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	       215	merge-tree.c	FUNCTION_14	CALL_2
0x849	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       218	merge-tree.c	FUNCTION_14	CALL_4
0x850	          0x8b4010	            mov eax, dword [rax + 0x10] 	       218	merge-tree.c	FUNCTION_14	CALL_4
0x853	            0x85c0	                           test eax, eax	       218	merge-tree.c	FUNCTION_14	CALL_4
0x855	            0x7422	                            je 0x40008b9	       218	merge-tree.c	FUNCTION_14	CALL_4
0x857	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       218	merge-tree.c	FUNCTION_14	CALL_4
0x85e	          0x8b4010	            mov eax, dword [rax + 0x10] 	       218	merge-tree.c	FUNCTION_14	CALL_4
0x861	      0x2500f00000	                         and eax, 0xf000	       218	merge-tree.c	FUNCTION_14	CALL_4
0x866	      0x3d00400000	                         cmp eax, 0x4000	       218	merge-tree.c	FUNCTION_14	CALL_4
0x86b	            0x750c	                           jne 0x40008b9	       218	merge-tree.c	FUNCTION_14	CALL_4
0x86d	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       218	merge-tree.c	FUNCTION_14	CALL_4
0x874	          0x488b00	                    mov rax, qword [rax]	       218	merge-tree.c	FUNCTION_14	CALL_4
0x877	            0xeb05	                           jmp 0x40008be	       218	merge-tree.c	FUNCTION_14	CALL_4
0x879	      0xb800000000	                              mov eax, 0	       218	merge-tree.c	FUNCTION_14	CALL_4
0x87e	        0x488d5580	                   lea rdx, [rbp - 0x80]	       218	merge-tree.c	FUNCTION_14	CALL_4
0x882	          0x4889c6	                            mov rsi, rax	       218	merge-tree.c	FUNCTION_14	CALL_4
0x885	          0x4889d7	                            mov rdi, rdx	       218	merge-tree.c	FUNCTION_14	CALL_4
0x888	      0xe800000000	                          call 0x40008cd	       218	merge-tree.c	FUNCTION_14	CALL_4
0x88d	    0x48898568ffff	             mov qword [rbp - 0x98], rax	       218	merge-tree.c	FUNCTION_14	CALL_4
0x894	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       219	merge-tree.c	FUNCTION_14	CALL_6
0x89b	        0x4883c018	                           add rax, 0x18	       219	merge-tree.c	FUNCTION_14	CALL_6
0x89f	          0x8b4010	            mov eax, dword [rax + 0x10] 	       219	merge-tree.c	FUNCTION_14	CALL_6
0x8a2	            0x85c0	                           test eax, eax	       219	merge-tree.c	FUNCTION_14	CALL_6
0x8a4	            0x742a	                            je 0x4000910	       219	merge-tree.c	FUNCTION_14	CALL_6
0x8a6	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       219	merge-tree.c	FUNCTION_14	CALL_6
0x8ad	        0x4883c018	                           add rax, 0x18	       219	merge-tree.c	FUNCTION_14	CALL_6
0x8b1	          0x8b4010	            mov eax, dword [rax + 0x10] 	       219	merge-tree.c	FUNCTION_14	CALL_6
0x8b4	      0x2500f00000	                         and eax, 0xf000	       219	merge-tree.c	FUNCTION_14	CALL_6
0x8b9	      0x3d00400000	                         cmp eax, 0x4000	       219	merge-tree.c	FUNCTION_14	CALL_6
0x8be	            0x7510	                           jne 0x4000910	       219	merge-tree.c	FUNCTION_14	CALL_6
0x8c0	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       219	merge-tree.c	FUNCTION_14	CALL_6
0x8c7	        0x4883c018	                           add rax, 0x18	       219	merge-tree.c	FUNCTION_14	CALL_6
0x8cb	          0x488b10	                    mov rdx, qword [rax]	       219	merge-tree.c	FUNCTION_14	CALL_6
0x8ce	            0xeb05	                           jmp 0x4000915	       219	merge-tree.c	FUNCTION_14	CALL_6
0x8d0	      0xba00000000	                              mov edx, 0	       219	merge-tree.c	FUNCTION_14	CALL_6
0x8d5	        0x488d4580	                   lea rax, [rbp - 0x80]	       219	merge-tree.c	FUNCTION_14	CALL_6
0x8d9	        0x4883c028	                           add rax, 0x28	       219	merge-tree.c	FUNCTION_14	CALL_6
0x8dd	          0x4889d6	                            mov rsi, rdx	       219	merge-tree.c	FUNCTION_14	CALL_6
0x8e0	          0x4889c7	                            mov rdi, rax	       219	merge-tree.c	FUNCTION_14	CALL_6
0x8e3	      0xe800000000	                          call 0x4000928	       219	merge-tree.c	FUNCTION_14	CALL_6
0x8e8	    0x48898570ffff	             mov qword [rbp - 0x90], rax	       219	merge-tree.c	FUNCTION_14	CALL_6
0x8ef	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       220	merge-tree.c	FUNCTION_14	CALL_8
0x8f6	        0x4883c030	                           add rax, 0x30	       220	merge-tree.c	FUNCTION_14	CALL_8
0x8fa	          0x8b4010	            mov eax, dword [rax + 0x10] 	       220	merge-tree.c	FUNCTION_14	CALL_8
0x8fd	            0x85c0	                           test eax, eax	       220	merge-tree.c	FUNCTION_14	CALL_8
0x8ff	            0x742a	                            je 0x400096b	       220	merge-tree.c	FUNCTION_14	CALL_8
0x901	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       220	merge-tree.c	FUNCTION_14	CALL_8
0x908	        0x4883c030	                           add rax, 0x30	       220	merge-tree.c	FUNCTION_14	CALL_8
0x90c	          0x8b4010	            mov eax, dword [rax + 0x10] 	       220	merge-tree.c	FUNCTION_14	CALL_8
0x90f	      0x2500f00000	                         and eax, 0xf000	       220	merge-tree.c	FUNCTION_14	CALL_8
0x914	      0x3d00400000	                         cmp eax, 0x4000	       220	merge-tree.c	FUNCTION_14	CALL_8
0x919	            0x7510	                           jne 0x400096b	       220	merge-tree.c	FUNCTION_14	CALL_8
0x91b	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       220	merge-tree.c	FUNCTION_14	CALL_8
0x922	        0x4883c030	                           add rax, 0x30	       220	merge-tree.c	FUNCTION_14	CALL_8
0x926	          0x488b10	                    mov rdx, qword [rax]	       220	merge-tree.c	FUNCTION_14	CALL_8
0x929	            0xeb05	                           jmp 0x4000970	       220	merge-tree.c	FUNCTION_14	CALL_8
0x92b	      0xba00000000	                              mov edx, 0	       220	merge-tree.c	FUNCTION_14	CALL_8
0x930	        0x488d4580	                   lea rax, [rbp - 0x80]	       220	merge-tree.c	FUNCTION_14	CALL_8
0x934	        0x4883c050	                           add rax, 0x50	       220	merge-tree.c	FUNCTION_14	CALL_8
0x938	          0x4889d6	                            mov rsi, rdx	       220	merge-tree.c	FUNCTION_14	CALL_8
0x93b	          0x4889c7	                            mov rdi, rax	       220	merge-tree.c	FUNCTION_14	CALL_8
0x93e	      0xe800000000	                          call 0x4000983	       220	merge-tree.c	FUNCTION_14	CALL_8
0x943	    0x48898578ffff	             mov qword [rbp - 0x88], rax	       220	merge-tree.c	FUNCTION_14	CALL_8
0x94a	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	       223	merge-tree.c	FUNCTION_14	CALL_9
0x951	        0x488d4580	                   lea rax, [rbp - 0x80]	       223	merge-tree.c	FUNCTION_14	CALL_9
0x955	          0x4889d6	                            mov rsi, rdx	       223	merge-tree.c	FUNCTION_14	CALL_9
0x958	          0x4889c7	                            mov rdi, rax	       223	merge-tree.c	FUNCTION_14	CALL_9
0x95b	      0xe8db030000	                    call sym.merge_trees	       223	merge-tree.c	FUNCTION_14	CALL_9
0x960	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       225	merge-tree.c	FUNCTION_14	CALL_10
0x967	          0x4889c7	                            mov rdi, rax	       225	merge-tree.c	FUNCTION_14	CALL_10
0x96a	      0xe800000000	                          call 0x40009af	       225	merge-tree.c	FUNCTION_14	CALL_10
0x96f	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       226	merge-tree.c	FUNCTION_14	CALL_11
0x976	          0x4889c7	                            mov rdi, rax	       226	merge-tree.c	FUNCTION_14	CALL_11
0x979	      0xe800000000	                          call 0x40009be	       226	merge-tree.c	FUNCTION_14	CALL_11
0x97e	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       227	merge-tree.c	FUNCTION_14	CALL_12
0x985	          0x4889c7	                            mov rdi, rax	       227	merge-tree.c	FUNCTION_14	CALL_12
0x988	      0xe800000000	                          call 0x40009cd	       227	merge-tree.c	FUNCTION_14	CALL_12
0x98d	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       228	merge-tree.c	FUNCTION_14	CALL_13
0x994	          0x4889c7	                            mov rdi, rax	       228	merge-tree.c	FUNCTION_14	CALL_13
0x997	      0xe800000000	                          call 0x40009dc	       228	merge-tree.c	FUNCTION_14	CALL_13
0x99c	            0xeb01	                           jmp 0x40009df	       228	merge-tree.c	FUNCTION_14	CALL_13
0x99e	              0x90	                                     nop	       213	merge-tree.c	FUNCTION_14	IF_2
0x99f	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	merge-tree.c	FUNCTION_14
0x9a3	    0x644833042528	                xor rax, qword fs:[0x28]	       229	merge-tree.c	FUNCTION_14
0x9ac	            0x7405	                            je 0x40009f3	       229	merge-tree.c	FUNCTION_14
0x9ae	      0xe800000000	                          call 0x40009f3	       229	merge-tree.c	FUNCTION_14
0x9b3	              0xc9	                                   leave	       229	merge-tree.c	FUNCTION_14
0x9b4	              0xc3	                                     ret	       229	merge-tree.c	FUNCTION_14
show_result_list	SWITCH,0:WHILE,0:CALL,4:ELSE,0:functions,0:FOR,0:IF,0:DO,1	43
0x4d0	              0x55	                                push rbp	       129	merge-tree.c	FUNCTION_7
0x4d1	          0x4889e5	                            mov rbp, rsp	       129	merge-tree.c	FUNCTION_7
0x4d4	              0x53	                                push rbx	       129	merge-tree.c	FUNCTION_7
0x4d5	        0x4883ec28	                           sub rsp, 0x28	       129	merge-tree.c	FUNCTION_7
0x4d9	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       129	merge-tree.c	FUNCTION_7
0x4dd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       130	merge-tree.c	FUNCTION_7	CALL_2
0x4e1	          0x4889c7	                            mov rdi, rax	       130	merge-tree.c	FUNCTION_7	CALL_2
0x4e4	      0xe80bfcffff	                    call sym.explanation	       130	merge-tree.c	FUNCTION_7	CALL_2
0x4e9	          0x4889c7	                            mov rdi, rax	       130	merge-tree.c	FUNCTION_7	CALL_2
0x4ec	      0xe800000000	                          call 0x4000531	       130	merge-tree.c	FUNCTION_7	CALL_2
0x4f1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       132	merge-tree.c	FUNCTION_7	DO_1
0x4f5	        0x488b4008	                mov rax, qword [rax + 8]	       132	merge-tree.c	FUNCTION_7	DO_1
0x4f9	        0x488945e8	             mov qword [rbp - 0x18], rax	       132	merge-tree.c	FUNCTION_7	DO_1
0x4fd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       134	merge-tree.c	FUNCTION_7	DO_1	CALL_4
0x501	        0x488b5818	            mov rbx, qword [rax + 0x18] 	       134	merge-tree.c	FUNCTION_7	DO_1	CALL_4
0x505	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       134	merge-tree.c	FUNCTION_7	DO_1	CALL_4
0x509	        0x488b4020	            mov rax, qword [rax + 0x20] 	       134	merge-tree.c	FUNCTION_7	DO_1	CALL_4
0x50d	        0x4883c004	                              add rax, 4	       134	merge-tree.c	FUNCTION_7	DO_1	CALL_4
0x511	          0x4889c7	                            mov rdi, rax	       134	merge-tree.c	FUNCTION_7	DO_1	CALL_4
0x514	      0xe800000000	                          call 0x4000559	       134	merge-tree.c	FUNCTION_7	DO_1	CALL_4
0x519	          0x4889c1	                            mov rcx, rax	       134	merge-tree.c	FUNCTION_7	DO_1	CALL_4
0x51c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       134	merge-tree.c	FUNCTION_7	DO_1	CALL_4
0x520	          0x8b5014	            mov edx, dword [rax + 0x14] 	       134	merge-tree.c	FUNCTION_7	DO_1	CALL_4
0x523	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       134	merge-tree.c	FUNCTION_7	DO_1	CALL_4
0x527	         0xfb64010	           movzx eax, byte [rax + 0x10] 	       134	merge-tree.c	FUNCTION_7	DO_1	CALL_4
0x52b	          0x83e003	                              and eax, 3	       134	merge-tree.c	FUNCTION_7	DO_1	CALL_4
0x52e	           0xfb6c0	                           movzx eax, al	       134	merge-tree.c	FUNCTION_7	DO_1	CALL_4
0x531	            0x4898	                                    cdqe	       134	merge-tree.c	FUNCTION_7	DO_1	CALL_4
0x533	    0x488b04c50000	                  mov rax, qword [rax*8]	       134	merge-tree.c	FUNCTION_7	DO_1	CALL_4
0x53b	          0x4989d8	                             mov r8, rbx	       134	merge-tree.c	FUNCTION_7	DO_1	CALL_4
0x53e	          0x4889c6	                            mov rsi, rax	       134	merge-tree.c	FUNCTION_7	DO_1	CALL_4
0x541	      0xbf00000000	                              mov edi, 0	       134	merge-tree.c	FUNCTION_7	DO_1	CALL_4
0x546	      0xb800000000	                              mov eax, 0	       134	merge-tree.c	FUNCTION_7	DO_1	CALL_4
0x54b	      0xe800000000	                          call 0x4000590	       134	merge-tree.c	FUNCTION_7	DO_1	CALL_4
0x550	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       135	merge-tree.c	FUNCTION_7	DO_1
0x554	        0x488945d8	             mov qword [rbp - 0x28], rax	       135	merge-tree.c	FUNCTION_7	DO_1
0x558	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       136	merge-tree.c	FUNCTION_7	DO_1
0x55d	            0x7592	                           jne 0x4000531	       136	merge-tree.c	FUNCTION_7	DO_1
0x55f	              0x90	                                     nop	       137	merge-tree.c	FUNCTION_7
0x560	        0x4883c428	                           add rsp, 0x28	       137	merge-tree.c	FUNCTION_7
0x564	              0x5b	                                 pop rbx	       137	merge-tree.c	FUNCTION_7
0x565	              0x5d	                                 pop rbp	       137	merge-tree.c	FUNCTION_7
0x566	              0xc3	                                     ret	       137	merge-tree.c	FUNCTION_7
cmd_merge_tree	SWITCH,0:WHILE,0:CALL,9:ELSE,0:functions,0:FOR,0:IF,1:DO,0	60
0xe3b	              0x55	                                push rbp	       363	merge-tree.c	FUNCTION_20
0xe3c	          0x4889e5	                            mov rbp, rsp	       363	merge-tree.c	FUNCTION_20
0xe3f	    0x4881ecc00000	                           sub rsp, 0xc0	       363	merge-tree.c	FUNCTION_20
0xe46	    0x89bd5cffffff	             mov dword [rbp - 0xa4], edi	       363	merge-tree.c	FUNCTION_20
0xe4c	    0x4889b550ffff	             mov qword [rbp - 0xb0], rsi	       363	merge-tree.c	FUNCTION_20
0xe53	    0x48899548ffff	             mov qword [rbp - 0xb8], rdx	       363	merge-tree.c	FUNCTION_20
0xe5a	    0x64488b042528	                mov rax, qword fs:[0x28]	       363	merge-tree.c	FUNCTION_20
0xe63	        0x488945f8	                mov qword [rbp - 8], rax	       363	merge-tree.c	FUNCTION_20
0xe67	            0x31c0	                            xor eax, eax	       363	merge-tree.c	FUNCTION_20
0xe69	    0x83bd5cffffff	               cmp dword [rbp - 0xa4], 4	       367	merge-tree.c	FUNCTION_20	IF_1
0xe70	            0x740a	                            je 0x4000ebc	       367	merge-tree.c	FUNCTION_20	IF_1
0xe72	      0xbf00000000	                              mov edi, 0	       368	merge-tree.c	FUNCTION_20	CALL_1
0xe77	      0xe800000000	                          call 0x4000ebc	       368	merge-tree.c	FUNCTION_20	CALL_1
0xe7c	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       370	merge-tree.c	FUNCTION_20	CALL_2
0xe83	        0x4883c008	                              add rax, 8	       370	merge-tree.c	FUNCTION_20	CALL_2
0xe87	          0x488b10	                    mov rdx, qword [rax]	       370	merge-tree.c	FUNCTION_20	CALL_2
0xe8a	        0x488d4580	                   lea rax, [rbp - 0x80]	       370	merge-tree.c	FUNCTION_20	CALL_2
0xe8e	          0x4889d6	                            mov rsi, rdx	       370	merge-tree.c	FUNCTION_20	CALL_2
0xe91	          0x4889c7	                            mov rdi, rax	       370	merge-tree.c	FUNCTION_20	CALL_2
0xe94	      0xe808ffffff	            call sym.get_tree_descriptor	       370	merge-tree.c	FUNCTION_20	CALL_2
0xe99	    0x48898568ffff	             mov qword [rbp - 0x98], rax	       370	merge-tree.c	FUNCTION_20	CALL_2
0xea0	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       371	merge-tree.c	FUNCTION_20	CALL_3
0xea7	        0x4883c010	                           add rax, 0x10	       371	merge-tree.c	FUNCTION_20	CALL_3
0xeab	          0x488b10	                    mov rdx, qword [rax]	       371	merge-tree.c	FUNCTION_20	CALL_3
0xeae	        0x488d4580	                   lea rax, [rbp - 0x80]	       371	merge-tree.c	FUNCTION_20	CALL_3
0xeb2	        0x4883c028	                           add rax, 0x28	       371	merge-tree.c	FUNCTION_20	CALL_3
0xeb6	          0x4889d6	                            mov rsi, rdx	       371	merge-tree.c	FUNCTION_20	CALL_3
0xeb9	          0x4889c7	                            mov rdi, rax	       371	merge-tree.c	FUNCTION_20	CALL_3
0xebc	      0xe8e0feffff	            call sym.get_tree_descriptor	       371	merge-tree.c	FUNCTION_20	CALL_3
0xec1	    0x48898570ffff	             mov qword [rbp - 0x90], rax	       371	merge-tree.c	FUNCTION_20	CALL_3
0xec8	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       372	merge-tree.c	FUNCTION_20	CALL_4
0xecf	        0x4883c018	                           add rax, 0x18	       372	merge-tree.c	FUNCTION_20	CALL_4
0xed3	          0x488b10	                    mov rdx, qword [rax]	       372	merge-tree.c	FUNCTION_20	CALL_4
0xed6	        0x488d4580	                   lea rax, [rbp - 0x80]	       372	merge-tree.c	FUNCTION_20	CALL_4
0xeda	        0x4883c050	                           add rax, 0x50	       372	merge-tree.c	FUNCTION_20	CALL_4
0xede	          0x4889d6	                            mov rsi, rdx	       372	merge-tree.c	FUNCTION_20	CALL_4
0xee1	          0x4889c7	                            mov rdi, rax	       372	merge-tree.c	FUNCTION_20	CALL_4
0xee4	      0xe8b8feffff	            call sym.get_tree_descriptor	       372	merge-tree.c	FUNCTION_20	CALL_4
0xee9	    0x48898578ffff	             mov qword [rbp - 0x88], rax	       372	merge-tree.c	FUNCTION_20	CALL_4
0xef0	        0x488d4580	                   lea rax, [rbp - 0x80]	       373	merge-tree.c	FUNCTION_20	CALL_5
0xef4	      0xbe00000000	                              mov esi, 0	       373	merge-tree.c	FUNCTION_20	CALL_5
0xef9	          0x4889c7	                            mov rdi, rax	       373	merge-tree.c	FUNCTION_20	CALL_5
0xefc	      0xe83afeffff	                    call sym.merge_trees	       373	merge-tree.c	FUNCTION_20	CALL_5
0xf01	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       374	merge-tree.c	FUNCTION_20	CALL_6
0xf08	          0x4889c7	                            mov rdi, rax	       374	merge-tree.c	FUNCTION_20	CALL_6
0xf0b	      0xe800000000	                          call 0x4000f50	       374	merge-tree.c	FUNCTION_20	CALL_6
0xf10	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       375	merge-tree.c	FUNCTION_20	CALL_7
0xf17	          0x4889c7	                            mov rdi, rax	       375	merge-tree.c	FUNCTION_20	CALL_7
0xf1a	      0xe800000000	                          call 0x4000f5f	       375	merge-tree.c	FUNCTION_20	CALL_7
0xf1f	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       376	merge-tree.c	FUNCTION_20	CALL_8
0xf26	          0x4889c7	                            mov rdi, rax	       376	merge-tree.c	FUNCTION_20	CALL_8
0xf29	      0xe800000000	                          call 0x4000f6e	       376	merge-tree.c	FUNCTION_20	CALL_8
0xf2e	      0xe834f6ffff	                    call sym.show_result	       378	merge-tree.c	FUNCTION_20	CALL_9
0xf33	      0xb800000000	                              mov eax, 0	       379	merge-tree.c	FUNCTION_20
0xf38	        0x488b4df8	                mov rcx, qword [rbp - 8]	       380	merge-tree.c	FUNCTION_20
0xf3c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       380	merge-tree.c	FUNCTION_20
0xf45	            0x7405	                            je 0x4000f8c	       380	merge-tree.c	FUNCTION_20
0xf47	      0xe800000000	                          call 0x4000f8c	       380	merge-tree.c	FUNCTION_20
0xf4c	              0xc9	                                   leave	       380	merge-tree.c	FUNCTION_20
0xf4d	              0xc3	                                     ret	       380	merge-tree.c	FUNCTION_20
get_tree_descriptor	SWITCH,0:WHILE,0:CALL,4:ELSE,0:functions,0:FOR,0:IF,2:DO,0	40
0xda1	              0x55	                                push rbp	       350	merge-tree.c	FUNCTION_19
0xda2	          0x4889e5	                            mov rbp, rsp	       350	merge-tree.c	FUNCTION_19
0xda5	        0x4883ec40	                           sub rsp, 0x40	       350	merge-tree.c	FUNCTION_19
0xda9	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       350	merge-tree.c	FUNCTION_19
0xdad	        0x488975c0	             mov qword [rbp - 0x40], rsi	       350	merge-tree.c	FUNCTION_19
0xdb1	    0x64488b042528	                mov rax, qword fs:[0x28]	       350	merge-tree.c	FUNCTION_19
0xdba	        0x488945f8	                mov qword [rbp - 8], rax	       350	merge-tree.c	FUNCTION_19
0xdbe	            0x31c0	                            xor eax, eax	       350	merge-tree.c	FUNCTION_19
0xdc0	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       354	merge-tree.c	FUNCTION_19	IF_1	CALL_1
0xdc4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       354	merge-tree.c	FUNCTION_19	IF_1	CALL_1
0xdc8	          0x4889d6	                            mov rsi, rdx	       354	merge-tree.c	FUNCTION_19	IF_1	CALL_1
0xdcb	          0x4889c7	                            mov rdi, rax	       354	merge-tree.c	FUNCTION_19	IF_1	CALL_1
0xdce	      0xe800000000	                          call 0x4000e13	       354	merge-tree.c	FUNCTION_19	IF_1	CALL_1
0xdd3	            0x85c0	                           test eax, eax	       354	merge-tree.c	FUNCTION_19	IF_1	CALL_1
0xdd5	            0x7416	                            je 0x4000e2d	       354	merge-tree.c	FUNCTION_19	IF_1	CALL_1
0xdd7	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       355	merge-tree.c	FUNCTION_19	CALL_2
0xddb	          0x4889c6	                            mov rsi, rax	       355	merge-tree.c	FUNCTION_19	CALL_2
0xdde	      0xbf00000000	                              mov edi, 0	       355	merge-tree.c	FUNCTION_19	CALL_2
0xde3	      0xb800000000	                              mov eax, 0	       355	merge-tree.c	FUNCTION_19	CALL_2
0xde8	      0xe800000000	                          call 0x4000e2d	       355	merge-tree.c	FUNCTION_19	CALL_2
0xded	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       356	merge-tree.c	FUNCTION_19	CALL_3
0xdf1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       356	merge-tree.c	FUNCTION_19	CALL_3
0xdf5	          0x4889d6	                            mov rsi, rdx	       356	merge-tree.c	FUNCTION_19	CALL_3
0xdf8	          0x4889c7	                            mov rdi, rax	       356	merge-tree.c	FUNCTION_19	CALL_3
0xdfb	      0xe800000000	                          call 0x4000e40	       356	merge-tree.c	FUNCTION_19	CALL_3
0xe00	        0x488945d8	             mov qword [rbp - 0x28], rax	       356	merge-tree.c	FUNCTION_19	CALL_3
0xe04	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       357	merge-tree.c	FUNCTION_19	IF_2
0xe09	            0x7516	                           jne 0x4000e61	       357	merge-tree.c	FUNCTION_19	IF_2
0xe0b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       358	merge-tree.c	FUNCTION_19	CALL_4
0xe0f	          0x4889c6	                            mov rsi, rax	       358	merge-tree.c	FUNCTION_19	CALL_4
0xe12	      0xbf00000000	                              mov edi, 0	       358	merge-tree.c	FUNCTION_19	CALL_4
0xe17	      0xb800000000	                              mov eax, 0	       358	merge-tree.c	FUNCTION_19	CALL_4
0xe1c	      0xe800000000	                          call 0x4000e61	       358	merge-tree.c	FUNCTION_19	CALL_4
0xe21	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       359	merge-tree.c	FUNCTION_19
0xe25	        0x488b4df8	                mov rcx, qword [rbp - 8]	       360	merge-tree.c	FUNCTION_19
0xe29	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       360	merge-tree.c	FUNCTION_19
0xe32	            0x7405	                            je 0x4000e79	       360	merge-tree.c	FUNCTION_19
0xe34	      0xe800000000	                          call 0x4000e79	       360	merge-tree.c	FUNCTION_19
0xe39	              0xc9	                                   leave	       360	merge-tree.c	FUNCTION_19
0xe3a	              0xc3	                                     ret	       360	merge-tree.c	FUNCTION_19
create_entry	SWITCH,0:WHILE,0:CALL,2:ELSE,0:functions,0:FOR,0:IF,0:DO,0	36
0x640	              0x55	                                push rbp	       166	merge-tree.c	FUNCTION_11
0x641	          0x4889e5	                            mov rbp, rsp	       166	merge-tree.c	FUNCTION_11
0x644	        0x4883ec30	                           sub rsp, 0x30	       166	merge-tree.c	FUNCTION_11
0x648	          0x897dec	             mov dword [rbp - 0x14], edi	       166	merge-tree.c	FUNCTION_11
0x64b	          0x8975e8	             mov dword [rbp - 0x18], esi	       166	merge-tree.c	FUNCTION_11
0x64e	        0x488955e0	             mov qword [rbp - 0x20], rdx	       166	merge-tree.c	FUNCTION_11
0x652	        0x48894dd8	             mov qword [rbp - 0x28], rcx	       166	merge-tree.c	FUNCTION_11
0x656	      0xbe28000000	                           mov esi, 0x28	       167	merge-tree.c	FUNCTION_11	CALL_1
0x65b	      0xbf01000000	                              mov edi, 1	       167	merge-tree.c	FUNCTION_11	CALL_1
0x660	      0xe800000000	                          call 0x40006a5	       167	merge-tree.c	FUNCTION_11	CALL_1
0x665	        0x488945f8	                mov qword [rbp - 8], rax	       167	merge-tree.c	FUNCTION_11	CALL_1
0x669	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       169	merge-tree.c	FUNCTION_11
0x66c	          0x83e003	                              and eax, 3	       169	merge-tree.c	FUNCTION_11
0x66f	            0x89c2	                            mov edx, eax	       169	merge-tree.c	FUNCTION_11
0x671	        0x488b45f8	                mov rax, qword [rbp - 8]	       169	merge-tree.c	FUNCTION_11
0x675	            0x89d1	                            mov ecx, edx	       169	merge-tree.c	FUNCTION_11
0x677	          0x83e103	                              and ecx, 3	       169	merge-tree.c	FUNCTION_11
0x67a	         0xfb65010	           movzx edx, byte [rax + 0x10] 	       169	merge-tree.c	FUNCTION_11
0x67e	          0x83e2fc	                     and edx, 0xfffffffc	       169	merge-tree.c	FUNCTION_11
0x681	             0x9ca	                             or edx, ecx	       169	merge-tree.c	FUNCTION_11
0x683	          0x885010	               mov byte [rax + 0x10], dl	       169	merge-tree.c	FUNCTION_11
0x686	        0x488b45f8	                mov rax, qword [rbp - 8]	       170	merge-tree.c	FUNCTION_11
0x68a	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       170	merge-tree.c	FUNCTION_11
0x68e	        0x48895018	             mov qword [rax + 0x18], rdx	       170	merge-tree.c	FUNCTION_11
0x692	        0x488b45f8	                mov rax, qword [rbp - 8]	       171	merge-tree.c	FUNCTION_11
0x696	          0x8b55e8	             mov edx, dword [rbp - 0x18]	       171	merge-tree.c	FUNCTION_11
0x699	          0x895014	             mov dword [rax + 0x14], edx	       171	merge-tree.c	FUNCTION_11
0x69c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       172	merge-tree.c	FUNCTION_11	CALL_2
0x6a0	          0x4889c7	                            mov rdi, rax	       172	merge-tree.c	FUNCTION_11	CALL_2
0x6a3	      0xe800000000	                          call 0x40006e8	       172	merge-tree.c	FUNCTION_11	CALL_2
0x6a8	          0x4889c2	                            mov rdx, rax	       172	merge-tree.c	FUNCTION_11	CALL_2
0x6ab	        0x488b45f8	                mov rax, qword [rbp - 8]	       172	merge-tree.c	FUNCTION_11	CALL_2
0x6af	        0x48895020	             mov qword [rax + 0x20], rdx	       172	merge-tree.c	FUNCTION_11	CALL_2
0x6b3	        0x488b45f8	                mov rax, qword [rbp - 8]	       173	merge-tree.c	FUNCTION_11
0x6b7	              0xc9	                                   leave	       174	merge-tree.c	FUNCTION_11
0x6b8	              0xc3	                                     ret	       174	merge-tree.c	FUNCTION_11
origin	SWITCH,0:WHILE,1:CALL,1:ELSE,0:functions,0:FOR,0:IF,1:DO,0	35
0x29f	              0x55	                                push rbp	        81	merge-tree.c	FUNCTION_4
0x2a0	          0x4889e5	                            mov rbp, rsp	        81	merge-tree.c	FUNCTION_4
0x2a3	        0x4883ec20	                           sub rsp, 0x20	        81	merge-tree.c	FUNCTION_4
0x2a7	        0x48897de8	             mov qword [rbp - 0x18], rdi	        81	merge-tree.c	FUNCTION_4
0x2ab	        0x488975e0	             mov qword [rbp - 0x20], rsi	        81	merge-tree.c	FUNCTION_4
0x2af	    0x64488b042528	                mov rax, qword fs:[0x28]	        81	merge-tree.c	FUNCTION_4
0x2b8	        0x488945f8	                mov qword [rbp - 8], rax	        81	merge-tree.c	FUNCTION_4
0x2bc	            0x31c0	                            xor eax, eax	        81	merge-tree.c	FUNCTION_4
0x2be	            0xeb3c	                           jmp 0x400033c	        83	merge-tree.c	FUNCTION_4	WHILE_1
0x2c0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        84	merge-tree.c	FUNCTION_4	WHILE_1	IF_1
0x2c4	         0xfb64010	           movzx eax, byte [rax + 0x10] 	        84	merge-tree.c	FUNCTION_4	WHILE_1	IF_1
0x2c8	          0x83e003	                              and eax, 3	        84	merge-tree.c	FUNCTION_4	WHILE_1	IF_1
0x2cb	            0x3c02	                               cmp al, 2	        84	merge-tree.c	FUNCTION_4	WHILE_1	IF_1
0x2cd	            0x7521	                           jne 0x4000330	        84	merge-tree.c	FUNCTION_4	WHILE_1	IF_1
0x2cf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        85	merge-tree.c	FUNCTION_4	WHILE_1	IF_1	CALL_1
0x2d3	        0x488b4020	            mov rax, qword [rax + 0x20] 	        85	merge-tree.c	FUNCTION_4	WHILE_1	IF_1	CALL_1
0x2d7	        0x488d4804	                      lea rcx, [rax + 4]	        85	merge-tree.c	FUNCTION_4	WHILE_1	IF_1	CALL_1
0x2db	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	        85	merge-tree.c	FUNCTION_4	WHILE_1	IF_1	CALL_1
0x2df	        0x488d45f4	                    lea rax, [rbp - 0xc]	        85	merge-tree.c	FUNCTION_4	WHILE_1	IF_1	CALL_1
0x2e3	          0x4889c6	                            mov rsi, rax	        85	merge-tree.c	FUNCTION_4	WHILE_1	IF_1	CALL_1
0x2e6	          0x4889cf	                            mov rdi, rcx	        85	merge-tree.c	FUNCTION_4	WHILE_1	IF_1	CALL_1
0x2e9	      0xe861fdffff	               call sym.read_object_file	        85	merge-tree.c	FUNCTION_4	WHILE_1	IF_1	CALL_1
0x2ee	            0xeb18	                           jmp 0x4000348	        85	merge-tree.c	FUNCTION_4	WHILE_1	IF_1	CALL_1
0x2f0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        87	merge-tree.c	FUNCTION_4	WHILE_1
0x2f4	        0x488b4008	                mov rax, qword [rax + 8]	        87	merge-tree.c	FUNCTION_4	WHILE_1
0x2f8	        0x488945e8	             mov qword [rbp - 0x18], rax	        87	merge-tree.c	FUNCTION_4	WHILE_1
0x2fc	      0x48837de800	               cmp qword [rbp - 0x18], 0	        83	merge-tree.c	FUNCTION_4	WHILE_1
0x301	            0x75bd	                           jne 0x4000300	        83	merge-tree.c	FUNCTION_4	WHILE_1
0x303	      0xb800000000	                              mov eax, 0	        89	merge-tree.c	FUNCTION_4
0x308	        0x488b4df8	                mov rcx, qword [rbp - 8]	        90	merge-tree.c	FUNCTION_4
0x30c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        90	merge-tree.c	FUNCTION_4
0x315	            0x7405	                            je 0x400035c	        90	merge-tree.c	FUNCTION_4
0x317	      0xe800000000	                          call 0x400035c	        90	merge-tree.c	FUNCTION_4
0x31c	              0xc9	                                   leave	        90	merge-tree.c	FUNCTION_4
0x31d	              0xc3	                                     ret	        90	merge-tree.c	FUNCTION_4
tree_entry_len	SWITCH,0:WHILE,0:CALL,0:ELSE,0:functions,0:FOR,0:IF,0:DO,0	13
0x7e	              0x55	                                push rbp	        24	tree-walk.h	FUNCTION_22
0x7f	          0x4889e5	                            mov rbp, rsp	        24	tree-walk.h	FUNCTION_22
0x82	        0x48897df8	                mov qword [rbp - 8], rdi	        24	tree-walk.h	FUNCTION_22
0x86	        0x488b45f8	                mov rax, qword [rbp - 8]	        25	tree-walk.h	FUNCTION_22
0x8a	          0x488b00	                    mov rax, qword [rax]	        25	tree-walk.h	FUNCTION_22
0x8d	          0x4889c2	                            mov rdx, rax	        25	tree-walk.h	FUNCTION_22
0x90	        0x488b45f8	                mov rax, qword [rbp - 8]	        25	tree-walk.h	FUNCTION_22
0x94	        0x488b4008	                mov rax, qword [rax + 8]	        25	tree-walk.h	FUNCTION_22
0x98	          0x4829c2	                            sub rdx, rax	        25	tree-walk.h	FUNCTION_22
0x9b	          0x4889d0	                            mov rax, rdx	        25	tree-walk.h	FUNCTION_22
0x9e	          0x83e801	                              sub eax, 1	        25	tree-walk.h	FUNCTION_22
0xa1	              0x5d	                                 pop rbp	        26	tree-walk.h	FUNCTION_22
0xa2	              0xc3	                                     ret	        26	tree-walk.h	FUNCTION_22
show_result	SWITCH,0:WHILE,1:CALL,2:ELSE,0:functions,0:FOR,0:IF,0:DO,0	20
0x567	              0x55	                                push rbp	       140	merge-tree.c	FUNCTION_8
0x568	          0x4889e5	                            mov rbp, rsp	       140	merge-tree.c	FUNCTION_8
0x56b	        0x4883ec10	                           sub rsp, 0x10	       140	merge-tree.c	FUNCTION_8
0x56f	    0x488b05000000	            mov rax, qword [0x040005b6] 	       143	merge-tree.c	FUNCTION_8
0x576	        0x488945f8	                mov qword [rbp - 8], rax	       143	merge-tree.c	FUNCTION_8
0x57a	            0xeb23	                           jmp 0x40005df	       144	merge-tree.c	FUNCTION_8	WHILE_1
0x57c	        0x488b45f8	                mov rax, qword [rbp - 8]	       145	merge-tree.c	FUNCTION_8	WHILE_1	CALL_1
0x580	          0x4889c7	                            mov rdi, rax	       145	merge-tree.c	FUNCTION_8	WHILE_1	CALL_1
0x583	      0xe848ffffff	               call sym.show_result_list	       145	merge-tree.c	FUNCTION_8	WHILE_1	CALL_1
0x588	        0x488b45f8	                mov rax, qword [rbp - 8]	       146	merge-tree.c	FUNCTION_8	WHILE_1	CALL_2
0x58c	          0x4889c7	                            mov rdi, rax	       146	merge-tree.c	FUNCTION_8	WHILE_1	CALL_2
0x58f	      0xe8fdfdffff	                      call sym.show_diff	       146	merge-tree.c	FUNCTION_8	WHILE_1	CALL_2
0x594	        0x488b45f8	                mov rax, qword [rbp - 8]	       147	merge-tree.c	FUNCTION_8	WHILE_1
0x598	          0x488b00	                    mov rax, qword [rax]	       147	merge-tree.c	FUNCTION_8	WHILE_1
0x59b	        0x488945f8	                mov qword [rbp - 8], rax	       147	merge-tree.c	FUNCTION_8	WHILE_1
0x59f	      0x48837df800	                  cmp qword [rbp - 8], 0	       144	merge-tree.c	FUNCTION_8	WHILE_1
0x5a4	            0x75d6	                           jne 0x40005bc	       144	merge-tree.c	FUNCTION_8	WHILE_1
0x5a6	              0x90	                                     nop	       149	merge-tree.c	FUNCTION_8
0x5a7	              0xc9	                                   leave	       149	merge-tree.c	FUNCTION_8
0x5a8	              0xc3	                                     ret	       149	merge-tree.c	FUNCTION_8
explanation	SWITCH,1:WHILE,0:CALL,0:ELSE,0:functions,0:FOR,0:IF,4:DO,0	48
0xf4	              0x55	                                push rbp	        31	merge-tree.c	FUNCTION_2
0xf5	          0x4889e5	                            mov rbp, rsp	        31	merge-tree.c	FUNCTION_2
0xf8	        0x48897df8	                mov qword [rbp - 8], rdi	        31	merge-tree.c	FUNCTION_2
0xfc	        0x488b45f8	                mov rax, qword [rbp - 8]	        32	merge-tree.c	FUNCTION_2	SWITCH_1
0x100	         0xfb64010	           movzx eax, byte [rax + 0x10] 	        32	merge-tree.c	FUNCTION_2	SWITCH_1
0x104	          0x83e003	                              and eax, 3	        32	merge-tree.c	FUNCTION_2	SWITCH_1
0x107	           0xfb6c0	                           movzx eax, al	        32	merge-tree.c	FUNCTION_2	SWITCH_1
0x10a	          0x83f802	                              cmp eax, 2	        32	merge-tree.c	FUNCTION_2	SWITCH_1
0x10d	            0x7417	                            je 0x4000166	        32	merge-tree.c	FUNCTION_2	SWITCH_1
0x10f	          0x83f803	                              cmp eax, 3	        32	merge-tree.c	FUNCTION_2	SWITCH_1
0x112	            0x740b	                            je 0x400015f	        32	merge-tree.c	FUNCTION_2	SWITCH_1
0x114	            0x85c0	                           test eax, eax	        32	merge-tree.c	FUNCTION_2	SWITCH_1
0x116	            0x7529	                           jne 0x4000181	        32	merge-tree.c	FUNCTION_2	SWITCH_1
0x118	      0xb800000000	                              mov eax, 0	        34	merge-tree.c	FUNCTION_2	SWITCH_1
0x11d	            0xeb6b	                           jmp 0x40001ca	        34	merge-tree.c	FUNCTION_2	SWITCH_1
0x11f	      0xb800000000	                              mov eax, 0	        36	merge-tree.c	FUNCTION_2	SWITCH_1
0x124	            0xeb64	                           jmp 0x40001ca	        36	merge-tree.c	FUNCTION_2	SWITCH_1
0x126	        0x488b45f8	                mov rax, qword [rbp - 8]	        38	merge-tree.c	FUNCTION_2	SWITCH_1	IF_1
0x12a	        0x488b4008	                mov rax, qword [rax + 8]	        38	merge-tree.c	FUNCTION_2	SWITCH_1	IF_1
0x12e	          0x4885c0	                           test rax, rax	        38	merge-tree.c	FUNCTION_2	SWITCH_1	IF_1
0x131	            0x7407	                            je 0x400017a	        38	merge-tree.c	FUNCTION_2	SWITCH_1	IF_1
0x133	      0xb800000000	                              mov eax, 0	        39	merge-tree.c	FUNCTION_2	SWITCH_1	IF_1
0x138	            0xeb50	                           jmp 0x40001ca	        39	merge-tree.c	FUNCTION_2	SWITCH_1	IF_1
0x13a	      0xb800000000	                              mov eax, 0	        40	merge-tree.c	FUNCTION_2	SWITCH_1
0x13f	            0xeb49	                           jmp 0x40001ca	        40	merge-tree.c	FUNCTION_2	SWITCH_1
0x141	        0x488b45f8	                mov rax, qword [rbp - 8]	        44	merge-tree.c	FUNCTION_2
0x145	        0x488b4008	                mov rax, qword [rax + 8]	        44	merge-tree.c	FUNCTION_2
0x149	        0x488945f8	                mov qword [rbp - 8], rax	        44	merge-tree.c	FUNCTION_2
0x14d	      0x48837df800	                  cmp qword [rbp - 8], 0	        45	merge-tree.c	FUNCTION_2	IF_2
0x152	            0x7507	                           jne 0x400019b	        45	merge-tree.c	FUNCTION_2	IF_2
0x154	      0xb800000000	                              mov eax, 0	        46	merge-tree.c	FUNCTION_2	IF_2
0x159	            0xeb2f	                           jmp 0x40001ca	        46	merge-tree.c	FUNCTION_2	IF_2
0x15b	        0x488b45f8	                mov rax, qword [rbp - 8]	        48	merge-tree.c	FUNCTION_2	IF_3
0x15f	        0x488b4008	                mov rax, qword [rax + 8]	        48	merge-tree.c	FUNCTION_2	IF_3
0x163	          0x4885c0	                           test rax, rax	        48	merge-tree.c	FUNCTION_2	IF_3
0x166	            0x7407	                            je 0x40001af	        48	merge-tree.c	FUNCTION_2	IF_3
0x168	      0xb800000000	                              mov eax, 0	        49	merge-tree.c	FUNCTION_2	IF_3
0x16d	            0xeb1b	                           jmp 0x40001ca	        49	merge-tree.c	FUNCTION_2	IF_3
0x16f	        0x488b45f8	                mov rax, qword [rbp - 8]	        51	merge-tree.c	FUNCTION_2	IF_4
0x173	         0xfb64010	           movzx eax, byte [rax + 0x10] 	        51	merge-tree.c	FUNCTION_2	IF_4
0x177	          0x83e003	                              and eax, 3	        51	merge-tree.c	FUNCTION_2	IF_4
0x17a	            0x3c03	                               cmp al, 3	        51	merge-tree.c	FUNCTION_2	IF_4
0x17c	            0x7507	                           jne 0x40001c5	        51	merge-tree.c	FUNCTION_2	IF_4
0x17e	      0xb800000000	                              mov eax, 0	        52	merge-tree.c	FUNCTION_2	IF_4
0x183	            0xeb05	                           jmp 0x40001ca	        52	merge-tree.c	FUNCTION_2	IF_4
0x185	      0xb800000000	                              mov eax, 0	        53	merge-tree.c	FUNCTION_2
0x18a	              0x5d	                                 pop rbp	        54	merge-tree.c	FUNCTION_2
0x18b	              0xc3	                                     ret	        54	merge-tree.c	FUNCTION_2
threeway_callback	SWITCH,0:WHILE,0:CALL,10:ELSE,0:functions,0:FOR,0:IF,4:DO,0	95
0xbeb	              0x55	                                push rbp	       309	merge-tree.c	FUNCTION_17
0xbec	          0x4889e5	                            mov rbp, rsp	       309	merge-tree.c	FUNCTION_17
0xbef	        0x4883ec30	                           sub rsp, 0x30	       309	merge-tree.c	FUNCTION_17
0xbf3	          0x897dfc	                mov dword [rbp - 4], edi	       309	merge-tree.c	FUNCTION_17
0xbf6	        0x488975f0	             mov qword [rbp - 0x10], rsi	       309	merge-tree.c	FUNCTION_17
0xbfa	        0x488955e8	             mov qword [rbp - 0x18], rdx	       309	merge-tree.c	FUNCTION_17
0xbfe	        0x48894de0	             mov qword [rbp - 0x20], rcx	       309	merge-tree.c	FUNCTION_17
0xc02	        0x4c8945d8	              mov qword [rbp - 0x28], r8	       309	merge-tree.c	FUNCTION_17
0xc06	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       311	merge-tree.c	FUNCTION_17	IF_1	CALL_2
0xc0a	        0x488d5030	                   lea rdx, [rax + 0x30]	       311	merge-tree.c	FUNCTION_17	IF_1	CALL_2
0xc0e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       311	merge-tree.c	FUNCTION_17	IF_1	CALL_2
0xc12	        0x4883c018	                           add rax, 0x18	       311	merge-tree.c	FUNCTION_17	IF_1	CALL_2
0xc16	          0x4889d6	                            mov rsi, rdx	       311	merge-tree.c	FUNCTION_17	IF_1	CALL_2
0xc19	          0x4889c7	                            mov rdi, rax	       311	merge-tree.c	FUNCTION_17	IF_1	CALL_2
0xc1c	      0xe888f9ffff	                     call sym.same_entry	       311	merge-tree.c	FUNCTION_17	IF_1	CALL_2
0xc21	            0x85c0	                           test eax, eax	       311	merge-tree.c	FUNCTION_17	IF_1	CALL_2
0xc23	            0x751f	                           jne 0x4000c84	       311	merge-tree.c	FUNCTION_17	IF_1	CALL_2
0xc25	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       311	merge-tree.c	FUNCTION_17	IF_1	CALL_2
0xc29	        0x488d5030	                   lea rdx, [rax + 0x30]	       311	merge-tree.c	FUNCTION_17	IF_1	CALL_2
0xc2d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       311	merge-tree.c	FUNCTION_17	IF_1	CALL_2
0xc31	        0x4883c018	                           add rax, 0x18	       311	merge-tree.c	FUNCTION_17	IF_1	CALL_2
0xc35	          0x4889d6	                            mov rsi, rdx	       311	merge-tree.c	FUNCTION_17	IF_1	CALL_2
0xc38	          0x4889c7	                            mov rdi, rax	       311	merge-tree.c	FUNCTION_17	IF_1	CALL_2
0xc3b	      0xe8cef9ffff	                     call sym.both_empty	       311	merge-tree.c	FUNCTION_17	IF_1	CALL_2
0xc40	            0x85c0	                           test eax, eax	       311	merge-tree.c	FUNCTION_17	IF_1	CALL_2
0xc42	            0x7422	                            je 0x4000ca6	       311	merge-tree.c	FUNCTION_17	IF_1	CALL_2
0xc44	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       313	merge-tree.c	FUNCTION_17	IF_1	CALL_3
0xc48	        0x488d5018	                   lea rdx, [rax + 0x18]	       313	merge-tree.c	FUNCTION_17	IF_1	CALL_3
0xc4c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       313	merge-tree.c	FUNCTION_17	IF_1	CALL_3
0xc50	      0xbe00000000	                              mov esi, 0	       313	merge-tree.c	FUNCTION_17	IF_1	CALL_3
0xc55	          0x4889c7	                            mov rdi, rax	       313	merge-tree.c	FUNCTION_17	IF_1	CALL_3
0xc58	      0xe8a6faffff	                        call sym.resolve	       313	merge-tree.c	FUNCTION_17	IF_1	CALL_3
0xc5d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       314	merge-tree.c	FUNCTION_17	IF_1
0xc61	      0xe9d3000000	                           jmp 0x4000d79	       314	merge-tree.c	FUNCTION_17	IF_1
0xc66	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       317	merge-tree.c	FUNCTION_17	IF_2	CALL_4
0xc6a	        0x488d5018	                   lea rdx, [rax + 0x18]	       317	merge-tree.c	FUNCTION_17	IF_2	CALL_4
0xc6e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       317	merge-tree.c	FUNCTION_17	IF_2	CALL_4
0xc72	          0x4889d6	                            mov rsi, rdx	       317	merge-tree.c	FUNCTION_17	IF_2	CALL_4
0xc75	          0x4889c7	                            mov rdi, rax	       317	merge-tree.c	FUNCTION_17	IF_2	CALL_4
0xc78	      0xe82cf9ffff	                     call sym.same_entry	       317	merge-tree.c	FUNCTION_17	IF_2	CALL_4
0xc7d	            0x85c0	                           test eax, eax	       317	merge-tree.c	FUNCTION_17	IF_2	CALL_4
0xc7f	            0x744c	                            je 0x4000d0d	       317	merge-tree.c	FUNCTION_17	IF_2	CALL_4
0xc81	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       318	merge-tree.c	FUNCTION_17	IF_2	IF_3	CALL_5
0xc85	        0x4883c030	                           add rax, 0x30	       318	merge-tree.c	FUNCTION_17	IF_2	IF_3	CALL_5
0xc89	          0x488b00	                    mov rax, qword [rax]	       318	merge-tree.c	FUNCTION_17	IF_2	IF_3	CALL_5
0xc8c	          0x4885c0	                           test rax, rax	       318	merge-tree.c	FUNCTION_17	IF_2	IF_3	CALL_5
0xc8f	            0x743c	                            je 0x4000d0d	       318	merge-tree.c	FUNCTION_17	IF_2	IF_3	CALL_5
0xc91	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       318	merge-tree.c	FUNCTION_17	IF_2	IF_3	CALL_5
0xc95	        0x4883c030	                           add rax, 0x30	       318	merge-tree.c	FUNCTION_17	IF_2	IF_3	CALL_5
0xc99	          0x8b4010	            mov eax, dword [rax + 0x10] 	       318	merge-tree.c	FUNCTION_17	IF_2	IF_3	CALL_5
0xc9c	      0x2500f00000	                         and eax, 0xf000	       318	merge-tree.c	FUNCTION_17	IF_2	IF_3	CALL_5
0xca1	      0x3d00400000	                         cmp eax, 0x4000	       318	merge-tree.c	FUNCTION_17	IF_2	IF_3	CALL_5
0xca6	            0x7425	                            je 0x4000d0d	       318	merge-tree.c	FUNCTION_17	IF_2	IF_3	CALL_5
0xca8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       320	merge-tree.c	FUNCTION_17	IF_2	IF_3	CALL_6
0xcac	        0x488d5030	                   lea rdx, [rax + 0x30]	       320	merge-tree.c	FUNCTION_17	IF_2	IF_3	CALL_6
0xcb0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       320	merge-tree.c	FUNCTION_17	IF_2	IF_3	CALL_6
0xcb4	        0x488d4818	                   lea rcx, [rax + 0x18]	       320	merge-tree.c	FUNCTION_17	IF_2	IF_3	CALL_6
0xcb8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       320	merge-tree.c	FUNCTION_17	IF_2	IF_3	CALL_6
0xcbc	          0x4889ce	                            mov rsi, rcx	       320	merge-tree.c	FUNCTION_17	IF_2	IF_3	CALL_6
0xcbf	          0x4889c7	                            mov rdi, rax	       320	merge-tree.c	FUNCTION_17	IF_2	IF_3	CALL_6
0xcc2	      0xe83cfaffff	                        call sym.resolve	       320	merge-tree.c	FUNCTION_17	IF_2	IF_3	CALL_6
0xcc7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       321	merge-tree.c	FUNCTION_17	IF_2	IF_3
0xccb	            0xeb6c	                           jmp 0x4000d79	       321	merge-tree.c	FUNCTION_17	IF_2	IF_3
0xccd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       330	merge-tree.c	FUNCTION_17	IF_4	CALL_8
0xcd1	        0x488d5030	                   lea rdx, [rax + 0x30]	       330	merge-tree.c	FUNCTION_17	IF_4	CALL_8
0xcd5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       330	merge-tree.c	FUNCTION_17	IF_4	CALL_8
0xcd9	          0x4889d6	                            mov rsi, rdx	       330	merge-tree.c	FUNCTION_17	IF_4	CALL_8
0xcdc	          0x4889c7	                            mov rdi, rax	       330	merge-tree.c	FUNCTION_17	IF_4	CALL_8
0xcdf	      0xe8c5f8ffff	                     call sym.same_entry	       330	merge-tree.c	FUNCTION_17	IF_4	CALL_8
0xce4	            0x85c0	                           test eax, eax	       330	merge-tree.c	FUNCTION_17	IF_4	CALL_8
0xce6	            0x751b	                           jne 0x4000d43	       330	merge-tree.c	FUNCTION_17	IF_4	CALL_8
0xce8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       330	merge-tree.c	FUNCTION_17	IF_4	CALL_8
0xcec	        0x488d5030	                   lea rdx, [rax + 0x30]	       330	merge-tree.c	FUNCTION_17	IF_4	CALL_8
0xcf0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       330	merge-tree.c	FUNCTION_17	IF_4	CALL_8
0xcf4	          0x4889d6	                            mov rsi, rdx	       330	merge-tree.c	FUNCTION_17	IF_4	CALL_8
0xcf7	          0x4889c7	                            mov rdi, rax	       330	merge-tree.c	FUNCTION_17	IF_4	CALL_8
0xcfa	      0xe80ff9ffff	                     call sym.both_empty	       330	merge-tree.c	FUNCTION_17	IF_4	CALL_8
0xcff	            0x85c0	                           test eax, eax	       330	merge-tree.c	FUNCTION_17	IF_4	CALL_8
0xd01	            0x741f	                            je 0x4000d62	       330	merge-tree.c	FUNCTION_17	IF_4	CALL_8
0xd03	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       332	merge-tree.c	FUNCTION_17	IF_4	CALL_9
0xd07	        0x488d5018	                   lea rdx, [rax + 0x18]	       332	merge-tree.c	FUNCTION_17	IF_4	CALL_9
0xd0b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       332	merge-tree.c	FUNCTION_17	IF_4	CALL_9
0xd0f	      0xbe00000000	                              mov esi, 0	       332	merge-tree.c	FUNCTION_17	IF_4	CALL_9
0xd14	          0x4889c7	                            mov rdi, rax	       332	merge-tree.c	FUNCTION_17	IF_4	CALL_9
0xd17	      0xe8e7f9ffff	                        call sym.resolve	       332	merge-tree.c	FUNCTION_17	IF_4	CALL_9
0xd1c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       333	merge-tree.c	FUNCTION_17	IF_4
0xd20	            0xeb17	                           jmp 0x4000d79	       333	merge-tree.c	FUNCTION_17	IF_4
0xd22	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       336	merge-tree.c	FUNCTION_17	CALL_10
0xd26	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       336	merge-tree.c	FUNCTION_17	CALL_10
0xd2a	          0x4889d6	                            mov rsi, rdx	       336	merge-tree.c	FUNCTION_17	CALL_10
0xd2d	          0x4889c7	                            mov rdi, rax	       336	merge-tree.c	FUNCTION_17	CALL_10
0xd30	      0xe806fdffff	                     call sym.unresolved	       336	merge-tree.c	FUNCTION_17	CALL_10
0xd35	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       337	merge-tree.c	FUNCTION_17
0xd39	              0xc9	                                   leave	       338	merge-tree.c	FUNCTION_17
0xd3a	              0xc3	                                     ret	       338	merge-tree.c	FUNCTION_17
unresolved	SWITCH,0:WHILE,0:CALL,9:ELSE,0:functions,0:FOR,1:IF,5:DO,0	123
0xa3b	              0x55	                                push rbp	       249	merge-tree.c	FUNCTION_16
0xa3c	          0x4889e5	                            mov rbp, rsp	       249	merge-tree.c	FUNCTION_16
0xa3f	        0x4883ec30	                           sub rsp, 0x30	       249	merge-tree.c	FUNCTION_16
0xa43	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       249	merge-tree.c	FUNCTION_16
0xa47	        0x488975d0	             mov qword [rbp - 0x30], rsi	       249	merge-tree.c	FUNCTION_16
0xa4b	    0x48c745f80000	                  mov qword [rbp - 8], 0	       250	merge-tree.c	FUNCTION_16
0xa53	    0xc745f0000000	               mov dword [rbp - 0x10], 0	       252	merge-tree.c	FUNCTION_16
0xa5a	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       252	merge-tree.c	FUNCTION_16
0xa61	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       254	merge-tree.c	FUNCTION_16	FOR_1
0xa68	            0xeb76	                           jmp 0x4000b20	       254	merge-tree.c	FUNCTION_16	FOR_1
0xa6a	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       255	merge-tree.c	FUNCTION_16	FOR_1
0xa6d	      0xba01000000	                              mov edx, 1	       255	merge-tree.c	FUNCTION_16	FOR_1
0xa72	            0x89c1	                            mov ecx, eax	       255	merge-tree.c	FUNCTION_16	FOR_1
0xa74	            0xd3e2	                             shl edx, cl	       255	merge-tree.c	FUNCTION_16	FOR_1
0xa76	            0x89d0	                            mov eax, edx	       255	merge-tree.c	FUNCTION_16	FOR_1
0xa78	           0x945f4	               or dword [rbp - 0xc], eax	       255	merge-tree.c	FUNCTION_16	FOR_1
0xa7b	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       260	merge-tree.c	FUNCTION_16	FOR_1	IF_1	CALL_1
0xa7e	          0x4863d0	                         movsxd rdx, eax	       260	merge-tree.c	FUNCTION_16	FOR_1	IF_1	CALL_1
0xa81	          0x4889d0	                            mov rax, rdx	       260	merge-tree.c	FUNCTION_16	FOR_1	IF_1	CALL_1
0xa84	          0x4801c0	                            add rax, rax	       260	merge-tree.c	FUNCTION_16	FOR_1	IF_1	CALL_1
0xa87	          0x4801d0	                            add rax, rdx	       260	merge-tree.c	FUNCTION_16	FOR_1	IF_1	CALL_1
0xa8a	        0x48c1e003	                              shl rax, 3	       260	merge-tree.c	FUNCTION_16	FOR_1	IF_1	CALL_1
0xa8e	          0x4889c2	                            mov rdx, rax	       260	merge-tree.c	FUNCTION_16	FOR_1	IF_1	CALL_1
0xa91	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       260	merge-tree.c	FUNCTION_16	FOR_1	IF_1	CALL_1
0xa95	          0x4801d0	                            add rax, rdx	       260	merge-tree.c	FUNCTION_16	FOR_1	IF_1	CALL_1
0xa98	          0x8b4010	            mov eax, dword [rax + 0x10] 	       260	merge-tree.c	FUNCTION_16	FOR_1	IF_1	CALL_1
0xa9b	            0x85c0	                           test eax, eax	       260	merge-tree.c	FUNCTION_16	FOR_1	IF_1	CALL_1
0xa9d	            0x742c	                            je 0x4000b0b	       260	merge-tree.c	FUNCTION_16	FOR_1	IF_1	CALL_1
0xa9f	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       260	merge-tree.c	FUNCTION_16	FOR_1	IF_1	CALL_1
0xaa2	          0x4863d0	                         movsxd rdx, eax	       260	merge-tree.c	FUNCTION_16	FOR_1	IF_1	CALL_1
0xaa5	          0x4889d0	                            mov rax, rdx	       260	merge-tree.c	FUNCTION_16	FOR_1	IF_1	CALL_1
0xaa8	          0x4801c0	                            add rax, rax	       260	merge-tree.c	FUNCTION_16	FOR_1	IF_1	CALL_1
0xaab	          0x4801d0	                            add rax, rdx	       260	merge-tree.c	FUNCTION_16	FOR_1	IF_1	CALL_1
0xaae	        0x48c1e003	                              shl rax, 3	       260	merge-tree.c	FUNCTION_16	FOR_1	IF_1	CALL_1
0xab2	          0x4889c2	                            mov rdx, rax	       260	merge-tree.c	FUNCTION_16	FOR_1	IF_1	CALL_1
0xab5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       260	merge-tree.c	FUNCTION_16	FOR_1	IF_1	CALL_1
0xab9	          0x4801d0	                            add rax, rdx	       260	merge-tree.c	FUNCTION_16	FOR_1	IF_1	CALL_1
0xabc	          0x8b4010	            mov eax, dword [rax + 0x10] 	       260	merge-tree.c	FUNCTION_16	FOR_1	IF_1	CALL_1
0xabf	      0x2500f00000	                         and eax, 0xf000	       260	merge-tree.c	FUNCTION_16	FOR_1	IF_1	CALL_1
0xac4	      0x3d00400000	                         cmp eax, 0x4000	       260	merge-tree.c	FUNCTION_16	FOR_1	IF_1	CALL_1
0xac9	            0x7511	                           jne 0x4000b1c	       260	merge-tree.c	FUNCTION_16	FOR_1	IF_1	CALL_1
0xacb	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       261	merge-tree.c	FUNCTION_16	FOR_1	IF_1
0xace	      0xba01000000	                              mov edx, 1	       261	merge-tree.c	FUNCTION_16	FOR_1	IF_1
0xad3	            0x89c1	                            mov ecx, eax	       261	merge-tree.c	FUNCTION_16	FOR_1	IF_1
0xad5	            0xd3e2	                             shl edx, cl	       261	merge-tree.c	FUNCTION_16	FOR_1	IF_1
0xad7	            0x89d0	                            mov eax, edx	       261	merge-tree.c	FUNCTION_16	FOR_1	IF_1
0xad9	           0x945f0	              or dword [rbp - 0x10], eax	       261	merge-tree.c	FUNCTION_16	FOR_1	IF_1
0xadc	        0x8345ec01	               add dword [rbp - 0x14], 1	       254	merge-tree.c	FUNCTION_16	FOR_1
0xae0	        0x837dec02	               cmp dword [rbp - 0x14], 2	       254	merge-tree.c	FUNCTION_16	FOR_1
0xae4	            0x7e84	                           jle 0x4000aaa	       254	merge-tree.c	FUNCTION_16	FOR_1
0xae6	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       264	merge-tree.c	FUNCTION_16	CALL_2
0xaea	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       264	merge-tree.c	FUNCTION_16	CALL_2
0xaee	          0x4889d6	                            mov rsi, rdx	       264	merge-tree.c	FUNCTION_16	CALL_2
0xaf1	          0x4889c7	                            mov rdi, rax	       264	merge-tree.c	FUNCTION_16	CALL_2
0xaf4	      0xe89dfcffff	           call sym.unresolved_directory	       264	merge-tree.c	FUNCTION_16	CALL_2
0xaf9	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       266	merge-tree.c	FUNCTION_16	IF_2
0xafc	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	       266	merge-tree.c	FUNCTION_16	IF_2
0xaff	     0xf84e3000000	                            je 0x4000c28	       266	merge-tree.c	FUNCTION_16	IF_2
0xb05	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       269	merge-tree.c	FUNCTION_16	IF_3	CALL_3
0xb09	        0x4883c030	                           add rax, 0x30	       269	merge-tree.c	FUNCTION_16	IF_3	CALL_3
0xb0d	          0x8b4010	            mov eax, dword [rax + 0x10] 	       269	merge-tree.c	FUNCTION_16	IF_3	CALL_3
0xb10	            0x85c0	                           test eax, eax	       269	merge-tree.c	FUNCTION_16	IF_3	CALL_3
0xb12	            0x743e	                            je 0x4000b92	       269	merge-tree.c	FUNCTION_16	IF_3	CALL_3
0xb14	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       269	merge-tree.c	FUNCTION_16	IF_3	CALL_3
0xb18	        0x4883c030	                           add rax, 0x30	       269	merge-tree.c	FUNCTION_16	IF_3	CALL_3
0xb1c	          0x8b4010	            mov eax, dword [rax + 0x10] 	       269	merge-tree.c	FUNCTION_16	IF_3	CALL_3
0xb1f	      0x2500f00000	                         and eax, 0xf000	       269	merge-tree.c	FUNCTION_16	IF_3	CALL_3
0xb24	      0x3d00400000	                         cmp eax, 0x4000	       269	merge-tree.c	FUNCTION_16	IF_3	CALL_3
0xb29	            0x7427	                            je 0x4000b92	       269	merge-tree.c	FUNCTION_16	IF_3	CALL_3
0xb2b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       270	merge-tree.c	FUNCTION_16	CALL_4
0xb2f	        0x488d7030	                   lea rsi, [rax + 0x30]	       270	merge-tree.c	FUNCTION_16	CALL_4
0xb33	        0x488b55f8	                mov rdx, qword [rbp - 8]	       270	merge-tree.c	FUNCTION_16	CALL_4
0xb37	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       270	merge-tree.c	FUNCTION_16	CALL_4
0xb3b	          0x4889d1	                            mov rcx, rdx	       270	merge-tree.c	FUNCTION_16	CALL_4
0xb3e	          0x4889f2	                            mov rdx, rsi	       270	merge-tree.c	FUNCTION_16	CALL_4
0xb41	          0x4889c6	                            mov rsi, rax	       270	merge-tree.c	FUNCTION_16	CALL_4
0xb44	      0xbf03000000	                              mov edi, 3	       270	merge-tree.c	FUNCTION_16	CALL_4
0xb49	      0xe867feffff	                     call sym.link_entry	       270	merge-tree.c	FUNCTION_16	CALL_4
0xb4e	        0x488945f8	                mov qword [rbp - 8], rax	       270	merge-tree.c	FUNCTION_16	CALL_4
0xb52	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       271	merge-tree.c	FUNCTION_16	IF_4	CALL_5
0xb56	        0x4883c018	                           add rax, 0x18	       271	merge-tree.c	FUNCTION_16	IF_4	CALL_5
0xb5a	          0x8b4010	            mov eax, dword [rax + 0x10] 	       271	merge-tree.c	FUNCTION_16	IF_4	CALL_5
0xb5d	            0x85c0	                           test eax, eax	       271	merge-tree.c	FUNCTION_16	IF_4	CALL_5
0xb5f	            0x743e	                            je 0x4000bdf	       271	merge-tree.c	FUNCTION_16	IF_4	CALL_5
0xb61	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       271	merge-tree.c	FUNCTION_16	IF_4	CALL_5
0xb65	        0x4883c018	                           add rax, 0x18	       271	merge-tree.c	FUNCTION_16	IF_4	CALL_5
0xb69	          0x8b4010	            mov eax, dword [rax + 0x10] 	       271	merge-tree.c	FUNCTION_16	IF_4	CALL_5
0xb6c	      0x2500f00000	                         and eax, 0xf000	       271	merge-tree.c	FUNCTION_16	IF_4	CALL_5
0xb71	      0x3d00400000	                         cmp eax, 0x4000	       271	merge-tree.c	FUNCTION_16	IF_4	CALL_5
0xb76	            0x7427	                            je 0x4000bdf	       271	merge-tree.c	FUNCTION_16	IF_4	CALL_5
0xb78	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       272	merge-tree.c	FUNCTION_16	CALL_6
0xb7c	        0x488d7018	                   lea rsi, [rax + 0x18]	       272	merge-tree.c	FUNCTION_16	CALL_6
0xb80	        0x488b55f8	                mov rdx, qword [rbp - 8]	       272	merge-tree.c	FUNCTION_16	CALL_6
0xb84	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       272	merge-tree.c	FUNCTION_16	CALL_6
0xb88	          0x4889d1	                            mov rcx, rdx	       272	merge-tree.c	FUNCTION_16	CALL_6
0xb8b	          0x4889f2	                            mov rdx, rsi	       272	merge-tree.c	FUNCTION_16	CALL_6
0xb8e	          0x4889c6	                            mov rsi, rax	       272	merge-tree.c	FUNCTION_16	CALL_6
0xb91	      0xbf02000000	                              mov edi, 2	       272	merge-tree.c	FUNCTION_16	CALL_6
0xb96	      0xe81afeffff	                     call sym.link_entry	       272	merge-tree.c	FUNCTION_16	CALL_6
0xb9b	        0x488945f8	                mov qword [rbp - 8], rax	       272	merge-tree.c	FUNCTION_16	CALL_6
0xb9f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       273	merge-tree.c	FUNCTION_16	IF_5	CALL_7
0xba3	          0x8b4010	            mov eax, dword [rax + 0x10] 	       273	merge-tree.c	FUNCTION_16	IF_5	CALL_7
0xba6	            0x85c0	                           test eax, eax	       273	merge-tree.c	FUNCTION_16	IF_5	CALL_7
0xba8	            0x7430	                            je 0x4000c1a	       273	merge-tree.c	FUNCTION_16	IF_5	CALL_7
0xbaa	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       273	merge-tree.c	FUNCTION_16	IF_5	CALL_7
0xbae	          0x8b4010	            mov eax, dword [rax + 0x10] 	       273	merge-tree.c	FUNCTION_16	IF_5	CALL_7
0xbb1	      0x2500f00000	                         and eax, 0xf000	       273	merge-tree.c	FUNCTION_16	IF_5	CALL_7
0xbb6	      0x3d00400000	                         cmp eax, 0x4000	       273	merge-tree.c	FUNCTION_16	IF_5	CALL_7
0xbbb	            0x741d	                            je 0x4000c1a	       273	merge-tree.c	FUNCTION_16	IF_5	CALL_7
0xbbd	        0x488b4df8	                mov rcx, qword [rbp - 8]	       274	merge-tree.c	FUNCTION_16	CALL_8
0xbc1	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       274	merge-tree.c	FUNCTION_16	CALL_8
0xbc5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       274	merge-tree.c	FUNCTION_16	CALL_8
0xbc9	          0x4889c6	                            mov rsi, rax	       274	merge-tree.c	FUNCTION_16	CALL_8
0xbcc	      0xbf01000000	                              mov edi, 1	       274	merge-tree.c	FUNCTION_16	CALL_8
0xbd1	      0xe8dffdffff	                     call sym.link_entry	       274	merge-tree.c	FUNCTION_16	CALL_8
0xbd6	        0x488945f8	                mov qword [rbp - 8], rax	       274	merge-tree.c	FUNCTION_16	CALL_8
0xbda	        0x488b45f8	                mov rax, qword [rbp - 8]	       276	merge-tree.c	FUNCTION_16	CALL_9
0xbde	          0x4889c7	                            mov rdi, rax	       276	merge-tree.c	FUNCTION_16	CALL_9
0xbe1	      0xe8eaf4ffff	                call sym.add_merge_entry	       276	merge-tree.c	FUNCTION_16	CALL_9
0xbe6	            0xeb01	                           jmp 0x4000c29	       276	merge-tree.c	FUNCTION_16	CALL_9
0xbe8	              0x90	                                     nop	       267	merge-tree.c	FUNCTION_16	IF_2
0xbe9	              0xc9	                                   leave	       277	merge-tree.c	FUNCTION_16
0xbea	              0xc3	                                     ret	       277	merge-tree.c	FUNCTION_16
