strbuf_avail	FOR,0:DO,0:IF,0:WHILE,0:SWITCH,0:ELSE,0:functions,0:CALL,0	18
0x65	              0x55	                                push rbp	       140	strbuf.h	FUNCTION_2
0x66	          0x4889e5	                            mov rbp, rsp	       140	strbuf.h	FUNCTION_2
0x69	        0x48897df8	                mov qword [rbp - 8], rdi	       140	strbuf.h	FUNCTION_2
0x6d	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_2
0x71	          0x488b00	                    mov rax, qword [rax]	       141	strbuf.h	FUNCTION_2
0x74	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_2
0x77	            0x741b	                            je 0x40000d4	       141	strbuf.h	FUNCTION_2
0x79	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_2
0x7d	          0x488b10	                    mov rdx, qword [rax]	       141	strbuf.h	FUNCTION_2
0x80	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_2
0x84	        0x488b4008	                mov rax, qword [rax + 8]	       141	strbuf.h	FUNCTION_2
0x88	          0x4829c2	                            sub rdx, rax	       141	strbuf.h	FUNCTION_2
0x8b	          0x4889d0	                            mov rax, rdx	       141	strbuf.h	FUNCTION_2
0x8e	        0x4883e801	                              sub rax, 1	       141	strbuf.h	FUNCTION_2
0x92	            0xeb05	                           jmp 0x40000d9	       141	strbuf.h	FUNCTION_2
0x94	      0xb800000000	                              mov eax, 0	       141	strbuf.h	FUNCTION_2
0x99	              0x5d	                                 pop rbp	       142	strbuf.h	FUNCTION_2
0x9a	              0xc3	                                     ret	       142	strbuf.h	FUNCTION_2
dir_iterator_abort	FOR,1:DO,0:IF,1:WHILE,0:SWITCH,0:ELSE,0:functions,0:CALL,7	64
0x6b0	              0x55	                                push rbp	       165	dir-iterator.c	FUNCTION_13
0x6b1	          0x4889e5	                            mov rbp, rsp	       165	dir-iterator.c	FUNCTION_13
0x6b4	        0x4883ec20	                           sub rsp, 0x20	       165	dir-iterator.c	FUNCTION_13
0x6b8	        0x48897de8	             mov qword [rbp - 0x18], rdi	       165	dir-iterator.c	FUNCTION_13
0x6bc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       166	dir-iterator.c	FUNCTION_13
0x6c0	        0x488945f0	             mov qword [rbp - 0x10], rax	       166	dir-iterator.c	FUNCTION_13
0x6c4	      0xe9a2000000	                           jmp 0x40007ab	       168	dir-iterator.c	FUNCTION_13	FOR_1
0x6c9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       170	dir-iterator.c	FUNCTION_13	FOR_1
0x6cd	    0x488b90c80000	            mov rdx, qword [rax + 0xc8] 	       170	dir-iterator.c	FUNCTION_13	FOR_1
0x6d4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       170	dir-iterator.c	FUNCTION_13	FOR_1
0x6d8	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	       170	dir-iterator.c	FUNCTION_13	FOR_1
0x6df	        0x48c1e005	                              shl rax, 5	       170	dir-iterator.c	FUNCTION_13	FOR_1
0x6e3	        0x4883e820	                           sub rax, 0x20	       170	dir-iterator.c	FUNCTION_13	FOR_1
0x6e7	          0x4801d0	                            add rax, rdx	       169	dir-iterator.c	FUNCTION_13	FOR_1
0x6ea	        0x488945f8	                mov qword [rbp - 8], rax	       169	dir-iterator.c	FUNCTION_13	FOR_1
0x6ee	        0x488b45f8	                mov rax, qword [rbp - 8]	       172	dir-iterator.c	FUNCTION_13	FOR_1	IF_1	CALL_1
0x6f2	        0x488b4008	                mov rax, qword [rax + 8]	       172	dir-iterator.c	FUNCTION_13	FOR_1	IF_1	CALL_1
0x6f6	          0x4885c0	                           test rax, rax	       172	dir-iterator.c	FUNCTION_13	FOR_1	IF_1	CALL_1
0x6f9	            0x7456	                            je 0x4000791	       172	dir-iterator.c	FUNCTION_13	FOR_1	IF_1	CALL_1
0x6fb	        0x488b45f8	                mov rax, qword [rbp - 8]	       172	dir-iterator.c	FUNCTION_13	FOR_1	IF_1	CALL_1
0x6ff	        0x488b4008	                mov rax, qword [rax + 8]	       172	dir-iterator.c	FUNCTION_13	FOR_1	IF_1	CALL_1
0x703	          0x4889c7	                            mov rdi, rax	       172	dir-iterator.c	FUNCTION_13	FOR_1	IF_1	CALL_1
0x706	      0xe800000000	                          call 0x400074b	       172	dir-iterator.c	FUNCTION_13	FOR_1	IF_1	CALL_1
0x70b	            0x85c0	                           test eax, eax	       172	dir-iterator.c	FUNCTION_13	FOR_1	IF_1	CALL_1
0x70d	            0x7442	                            je 0x4000791	       172	dir-iterator.c	FUNCTION_13	FOR_1	IF_1	CALL_1
0x70f	        0x488b45f8	                mov rax, qword [rbp - 8]	       173	dir-iterator.c	FUNCTION_13	FOR_1	IF_1	CALL_2
0x713	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       173	dir-iterator.c	FUNCTION_13	FOR_1	IF_1	CALL_2
0x717	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       173	dir-iterator.c	FUNCTION_13	FOR_1	IF_1	CALL_2
0x71b	          0x4889d6	                            mov rsi, rdx	       173	dir-iterator.c	FUNCTION_13	FOR_1	IF_1	CALL_2
0x71e	          0x4889c7	                            mov rdi, rax	       173	dir-iterator.c	FUNCTION_13	FOR_1	IF_1	CALL_2
0x721	      0xe875f9ffff	                  call sym.strbuf_setlen	       173	dir-iterator.c	FUNCTION_13	FOR_1	IF_1	CALL_2
0x726	      0xe800000000	                          call 0x400076b	       175	dir-iterator.c	FUNCTION_13	FOR_1	IF_1	CALL_4
0x72b	            0x8b00	                    mov eax, dword [rax]	       174	dir-iterator.c	FUNCTION_13	FOR_1	IF_1	CALL_3
0x72d	            0x89c7	                            mov edi, eax	       174	dir-iterator.c	FUNCTION_13	FOR_1	IF_1	CALL_3
0x72f	      0xe800000000	                          call 0x4000774	       174	dir-iterator.c	FUNCTION_13	FOR_1	IF_1	CALL_3
0x734	          0x4889c2	                            mov rdx, rax	       174	dir-iterator.c	FUNCTION_13	FOR_1	IF_1	CALL_3
0x737	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       174	dir-iterator.c	FUNCTION_13	FOR_1	IF_1	CALL_3
0x73b	        0x488b4010	            mov rax, qword [rax + 0x10] 	       174	dir-iterator.c	FUNCTION_13	FOR_1	IF_1	CALL_3
0x73f	          0x4889c6	                            mov rsi, rax	       174	dir-iterator.c	FUNCTION_13	FOR_1	IF_1	CALL_3
0x742	      0xbf00000000	                              mov edi, 0	       174	dir-iterator.c	FUNCTION_13	FOR_1	IF_1	CALL_3
0x747	      0xb800000000	                              mov eax, 0	       174	dir-iterator.c	FUNCTION_13	FOR_1	IF_1	CALL_3
0x74c	      0xe800000000	                          call 0x4000791	       174	dir-iterator.c	FUNCTION_13	FOR_1	IF_1	CALL_3
0x751	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       168	dir-iterator.c	FUNCTION_13	FOR_1
0x755	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	       168	dir-iterator.c	FUNCTION_13	FOR_1
0x75c	        0x488d50ff	                      lea rdx, [rax - 1]	       168	dir-iterator.c	FUNCTION_13	FOR_1
0x760	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       168	dir-iterator.c	FUNCTION_13	FOR_1
0x764	    0x488990b80000	             mov qword [rax + 0xb8], rdx	       168	dir-iterator.c	FUNCTION_13	FOR_1
0x76b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       168	dir-iterator.c	FUNCTION_13	FOR_1
0x76f	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	       168	dir-iterator.c	FUNCTION_13	FOR_1
0x776	          0x4885c0	                           test rax, rax	       168	dir-iterator.c	FUNCTION_13	FOR_1
0x779	     0xf854affffff	                           jne 0x4000709	       168	dir-iterator.c	FUNCTION_13	FOR_1
0x77f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       179	dir-iterator.c	FUNCTION_13	CALL_5
0x783	    0x488b80c80000	            mov rax, qword [rax + 0xc8] 	       179	dir-iterator.c	FUNCTION_13	CALL_5
0x78a	          0x4889c7	                            mov rdi, rax	       179	dir-iterator.c	FUNCTION_13	CALL_5
0x78d	      0xe800000000	                          call 0x40007d2	       179	dir-iterator.c	FUNCTION_13	CALL_5
0x792	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       180	dir-iterator.c	FUNCTION_13	CALL_6
0x796	          0x4889c7	                            mov rdi, rax	       180	dir-iterator.c	FUNCTION_13	CALL_6
0x799	      0xe800000000	                          call 0x40007de	       180	dir-iterator.c	FUNCTION_13	CALL_6
0x79e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       181	dir-iterator.c	FUNCTION_13	CALL_7
0x7a2	          0x4889c7	                            mov rdi, rax	       181	dir-iterator.c	FUNCTION_13	CALL_7
0x7a5	      0xe800000000	                          call 0x40007ea	       181	dir-iterator.c	FUNCTION_13	CALL_7
0x7aa	      0xb8ffffffff	                     mov eax, 0xffffffff	       182	dir-iterator.c	FUNCTION_13
0x7af	              0xc9	                                   leave	       183	dir-iterator.c	FUNCTION_13
0x7b0	              0xc3	                                     ret	       183	dir-iterator.c	FUNCTION_13
is_dot_or_dotdot	FOR,0:DO,0:IF,0:WHILE,0:SWITCH,0:ELSE,0:functions,0:CALL,0	27
0x1d8	              0x55	                                push rbp	       276	dir.h	FUNCTION_42
0x1d9	          0x4889e5	                            mov rbp, rsp	       276	dir.h	FUNCTION_42
0x1dc	        0x48897df8	                mov qword [rbp - 8], rdi	       276	dir.h	FUNCTION_42
0x1e0	        0x488b45f8	                mov rax, qword [rbp - 8]	       277	dir.h	FUNCTION_42
0x1e4	           0xfb600	                   movzx eax, byte [rax]	       277	dir.h	FUNCTION_42
0x1e7	            0x3c2e	                            cmp al, 0x2e	       277	dir.h	FUNCTION_42
0x1e9	            0x7534	                           jne 0x400025f	       277	dir.h	FUNCTION_42
0x1eb	        0x488b45f8	                mov rax, qword [rbp - 8]	       278	dir.h	FUNCTION_42
0x1ef	        0x4883c001	                              add rax, 1	       278	dir.h	FUNCTION_42
0x1f3	           0xfb600	                   movzx eax, byte [rax]	       278	dir.h	FUNCTION_42
0x1f6	            0x84c0	                             test al, al	       277	dir.h	FUNCTION_42
0x1f8	            0x741e	                            je 0x4000258	       277	dir.h	FUNCTION_42
0x1fa	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	dir.h	FUNCTION_42
0x1fe	        0x4883c001	                              add rax, 1	       279	dir.h	FUNCTION_42
0x202	           0xfb600	                   movzx eax, byte [rax]	       279	dir.h	FUNCTION_42
0x205	            0x3c2e	                            cmp al, 0x2e	       278	dir.h	FUNCTION_42
0x207	            0x7516	                           jne 0x400025f	       278	dir.h	FUNCTION_42
0x209	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	dir.h	FUNCTION_42
0x20d	        0x4883c002	                              add rax, 2	       279	dir.h	FUNCTION_42
0x211	           0xfb600	                   movzx eax, byte [rax]	       279	dir.h	FUNCTION_42
0x214	            0x84c0	                             test al, al	       279	dir.h	FUNCTION_42
0x216	            0x7507	                           jne 0x400025f	       279	dir.h	FUNCTION_42
0x218	      0xb801000000	                              mov eax, 1	       277	dir.h	FUNCTION_42
0x21d	            0xeb05	                           jmp 0x4000264	       277	dir.h	FUNCTION_42
0x21f	      0xb800000000	                              mov eax, 0	       277	dir.h	FUNCTION_42
0x224	              0x5d	                                 pop rbp	       280	dir.h	FUNCTION_42
0x225	              0xc3	                                     ret	       280	dir.h	FUNCTION_42
strbuf_addch	FOR,0:DO,0:IF,1:WHILE,0:SWITCH,0:ELSE,0:functions,0:CALL,2	33
0x135	              0x55	                                push rbp	       226	strbuf.h	FUNCTION_4
0x136	          0x4889e5	                            mov rbp, rsp	       226	strbuf.h	FUNCTION_4
0x139	        0x4883ec10	                           sub rsp, 0x10	       226	strbuf.h	FUNCTION_4
0x13d	        0x48897df8	                mov qword [rbp - 8], rdi	       226	strbuf.h	FUNCTION_4
0x141	          0x8975f4	              mov dword [rbp - 0xc], esi	       226	strbuf.h	FUNCTION_4
0x144	        0x488b45f8	                mov rax, qword [rbp - 8]	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0x148	          0x4889c7	                            mov rdi, rax	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0x14b	      0xe815ffffff	                   call sym.strbuf_avail	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0x150	          0x4885c0	                           test rax, rax	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0x153	            0x7511	                           jne 0x40001a6	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0x155	        0x488b45f8	                mov rax, qword [rbp - 8]	       228	strbuf.h	FUNCTION_4	CALL_2
0x159	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_4	CALL_2
0x15e	          0x4889c7	                            mov rdi, rax	       228	strbuf.h	FUNCTION_4	CALL_2
0x161	      0xe800000000	                          call 0x40001a6	       228	strbuf.h	FUNCTION_4	CALL_2
0x166	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_4
0x16a	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       229	strbuf.h	FUNCTION_4
0x16e	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_4
0x172	        0x488b4008	                mov rax, qword [rax + 8]	       229	strbuf.h	FUNCTION_4
0x176	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_4
0x17a	        0x488b55f8	                mov rdx, qword [rbp - 8]	       229	strbuf.h	FUNCTION_4
0x17e	        0x48894a08	                mov qword [rdx + 8], rcx	       229	strbuf.h	FUNCTION_4
0x182	          0x4801f0	                            add rax, rsi	       229	strbuf.h	FUNCTION_4
0x185	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       229	strbuf.h	FUNCTION_4
0x188	            0x8810	                      mov byte [rax], dl	       229	strbuf.h	FUNCTION_4
0x18a	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_4
0x18e	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       230	strbuf.h	FUNCTION_4
0x192	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_4
0x196	        0x488b4008	                mov rax, qword [rax + 8]	       230	strbuf.h	FUNCTION_4
0x19a	          0x4801d0	                            add rax, rdx	       230	strbuf.h	FUNCTION_4
0x19d	          0xc60000	                       mov byte [rax], 0	       230	strbuf.h	FUNCTION_4
0x1a0	              0x90	                                     nop	       231	strbuf.h	FUNCTION_4
0x1a1	              0xc9	                                   leave	       231	strbuf.h	FUNCTION_4
0x1a2	              0xc3	                                     ret	       231	strbuf.h	FUNCTION_4
git_is_dir_sep	FOR,0:DO,0:IF,0:WHILE,0:SWITCH,0:ELSE,0:functions,0:CALL,0	8
0x0	              0x55	                                push rbp	       363	git-compat-util.h	FUNCTION_17
0x1	          0x4889e5	                            mov rbp, rsp	       363	git-compat-util.h	FUNCTION_17
0x4	          0x897dfc	                mov dword [rbp - 4], edi	       363	git-compat-util.h	FUNCTION_17
0x7	        0x837dfc2f	               cmp dword [rbp - 4], 0x2f	       364	git-compat-util.h	FUNCTION_17
0xb	           0xf94c0	                                 sete al	       364	git-compat-util.h	FUNCTION_17
0xe	           0xfb6c0	                           movzx eax, al	       364	git-compat-util.h	FUNCTION_17
0x11	              0x5d	                                 pop rbp	       365	git-compat-util.h	FUNCTION_17
0x12	              0xc3	                                     ret	       365	git-compat-util.h	FUNCTION_17
dir_iterator_advance	FOR,0:DO,0:IF,14:WHILE,2:SWITCH,0:ELSE,3:functions,0:CALL,21	287
0x226	              0x55	                                push rbp	        54	dir-iterator.c	FUNCTION_12
0x227	          0x4889e5	                            mov rbp, rsp	        54	dir-iterator.c	FUNCTION_12
0x22a	        0x4883ec30	                           sub rsp, 0x30	        54	dir-iterator.c	FUNCTION_12
0x22e	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        54	dir-iterator.c	FUNCTION_12
0x232	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        55	dir-iterator.c	FUNCTION_12
0x236	        0x488945e8	             mov qword [rbp - 0x18], rax	        55	dir-iterator.c	FUNCTION_12
0x23a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        60	dir-iterator.c	FUNCTION_12	WHILE_1
0x23e	    0x488b90c80000	            mov rdx, qword [rax + 0xc8] 	        60	dir-iterator.c	FUNCTION_12	WHILE_1
0x245	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        60	dir-iterator.c	FUNCTION_12	WHILE_1
0x249	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	        60	dir-iterator.c	FUNCTION_12	WHILE_1
0x250	        0x48c1e005	                              shl rax, 5	        60	dir-iterator.c	FUNCTION_12	WHILE_1
0x254	        0x4883e820	                           sub rax, 0x20	        60	dir-iterator.c	FUNCTION_12	WHILE_1
0x258	          0x4801d0	                            add rax, rdx	        59	dir-iterator.c	FUNCTION_12	WHILE_1
0x25b	        0x488945f0	             mov qword [rbp - 0x10], rax	        59	dir-iterator.c	FUNCTION_12	WHILE_1
0x25f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        63	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1
0x263	            0x8b00	                    mov eax, dword [rax]	        63	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1
0x265	            0x85c0	                           test eax, eax	        63	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1
0x267	     0xf85b7000000	                           jne 0x4000364	        63	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1
0x26d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        68	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	IF_2	CALL_1
0x271	        0x488b5010	            mov rdx, qword [rax + 0x10] 	        68	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	IF_2	CALL_1
0x275	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        68	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	IF_2	CALL_1
0x279	        0x488b4008	                mov rax, qword [rax + 8]	        68	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	IF_2	CALL_1
0x27d	        0x4883e801	                              sub rax, 1	        68	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	IF_2	CALL_1
0x281	          0x4801d0	                            add rax, rdx	        68	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	IF_2	CALL_1
0x284	           0xfb600	                   movzx eax, byte [rax]	        68	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	IF_2	CALL_1
0x287	           0xfbec0	                           movsx eax, al	        68	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	IF_2	CALL_1
0x28a	            0x89c7	                            mov edi, eax	        68	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	IF_2	CALL_1
0x28c	      0xe86ffdffff	                 call sym.git_is_dir_sep	        68	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	IF_2	CALL_1
0x291	            0x85c0	                           test eax, eax	        68	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	IF_2	CALL_1
0x293	            0x7511	                           jne 0x40002e6	        68	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	IF_2	CALL_1
0x295	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        69	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	CALL_2
0x299	      0xbe2f000000	                           mov esi, 0x2f	        69	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	CALL_2
0x29e	          0x4889c7	                            mov rdi, rax	        69	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	CALL_2
0x2a1	      0xe88ffeffff	                   call sym.strbuf_addch	        69	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	CALL_2
0x2a6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        70	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1
0x2aa	        0x488b5008	                mov rdx, qword [rax + 8]	        70	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1
0x2ae	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        70	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1
0x2b2	        0x48895010	             mov qword [rax + 0x10], rdx	        70	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1
0x2b6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        72	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	CALL_3
0x2ba	        0x488b4010	            mov rax, qword [rax + 0x10] 	        72	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	CALL_3
0x2be	          0x4889c7	                            mov rdi, rax	        72	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	CALL_3
0x2c1	      0xe800000000	                          call 0x4000306	        72	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	CALL_3
0x2c6	          0x4889c2	                            mov rdx, rax	        72	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	CALL_3
0x2c9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        72	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	CALL_3
0x2cd	        0x48895008	                mov qword [rax + 8], rdx	        72	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	CALL_3
0x2d1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        73	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	IF_3
0x2d5	        0x488b4008	                mov rax, qword [rax + 8]	        73	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	IF_3
0x2d9	          0x4885c0	                           test rax, rax	        73	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	IF_3
0x2dc	            0x7537	                           jne 0x4000355	        73	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	IF_3
0x2de	      0xe800000000	                          call 0x4000323	        73	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	IF_3
0x2e3	            0x8b00	                    mov eax, dword [rax]	        73	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	IF_3
0x2e5	          0x83f802	                              cmp eax, 2	        73	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	IF_3
0x2e8	            0x742b	                            je 0x4000355	        73	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	IF_3
0x2ea	      0xe800000000	                          call 0x400032f	        75	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	IF_3	CALL_5
0x2ef	            0x8b00	                    mov eax, dword [rax]	        74	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	IF_3	CALL_4
0x2f1	            0x89c7	                            mov edi, eax	        74	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	IF_3	CALL_4
0x2f3	      0xe800000000	                          call 0x4000338	        74	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	IF_3	CALL_4
0x2f8	          0x4889c2	                            mov rdx, rax	        74	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	IF_3	CALL_4
0x2fb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        74	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	IF_3	CALL_4
0x2ff	        0x488b4010	            mov rax, qword [rax + 0x10] 	        74	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	IF_3	CALL_4
0x303	          0x4889c6	                            mov rsi, rax	        74	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	IF_3	CALL_4
0x306	      0xbf00000000	                              mov edi, 0	        74	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	IF_3	CALL_4
0x30b	      0xb800000000	                              mov eax, 0	        74	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	IF_3	CALL_4
0x310	      0xe800000000	                          call 0x4000355	        74	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	IF_3	CALL_4
0x315	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        79	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1
0x319	    0xc70001000000	                      mov dword [rax], 1	        79	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1
0x31f	      0xe949010000	                           jmp 0x40004ad	        79	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1
0x324	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        80	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	CALL_6
0x328	          0x8b4040	            mov eax, dword [rax + 0x40] 	        80	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	CALL_6
0x32b	      0x2500f00000	                         and eax, 0xf000	        80	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	CALL_6
0x330	      0x3d00400000	                         cmp eax, 0x4000	        80	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	CALL_6
0x335	     0xf8532010000	                           jne 0x40004ad	        80	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	CALL_6
0x33b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        81	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5
0x33f	          0x8b4018	            mov eax, dword [rax + 0x18] 	        81	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5
0x342	            0x85c0	                           test eax, eax	        81	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5
0x344	     0xf8523010000	                           jne 0x40004ad	        81	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5
0x34a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        87	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5
0x34e	    0xc74018010000	               mov dword [rax + 0x18], 1	        87	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5
0x355	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_7
0x359	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_7
0x360	        0x488d5001	                      lea rdx, [rax + 1]	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_7
0x364	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_7
0x368	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_7
0x36f	          0x4839c2	                            cmp rdx, rax	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_7
0x372	     0xf86b6000000	                           jbe 0x400046e	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_7
0x378	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_7
0x37c	    0x488b90c00000	            mov rdx, qword [rax + 0xc0] 	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_7
0x383	          0x4889d0	                            mov rax, rdx	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_7
0x386	          0x4801c0	                            add rax, rax	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_7
0x389	          0x4801d0	                            add rax, rdx	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_7
0x38c	        0x4883c030	                           add rax, 0x30	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_7
0x390	          0x48d1e8	                              shr rax, 1	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_7
0x393	          0x4889c2	                            mov rdx, rax	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_7
0x396	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_7
0x39a	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_7
0x3a1	        0x4883c001	                              add rax, 1	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_7
0x3a5	          0x4839c2	                            cmp rdx, rax	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_7
0x3a8	            0x731c	                           jae 0x4000406	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_7
0x3aa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_7
0x3ae	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_7
0x3b5	        0x488d5001	                      lea rdx, [rax + 1]	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_7
0x3b9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_7
0x3bd	    0x488990c00000	             mov qword [rax + 0xc0], rdx	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_7
0x3c4	            0xeb29	                           jmp 0x400042f	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_7
0x3c6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_7
0x3ca	    0x488b90c00000	            mov rdx, qword [rax + 0xc0] 	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_7
0x3d1	          0x4889d0	                            mov rax, rdx	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_7
0x3d4	          0x4801c0	                            add rax, rax	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_7
0x3d7	          0x4801d0	                            add rax, rdx	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_7
0x3da	        0x4883c030	                           add rax, 0x30	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_7
0x3de	          0x48d1e8	                              shr rax, 1	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_7
0x3e1	          0x4889c2	                            mov rdx, rax	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_7
0x3e4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_7
0x3e8	    0x488990c00000	             mov qword [rax + 0xc0], rdx	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_7
0x3ef	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_7
0x3f3	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_7
0x3fa	          0x4889c6	                            mov rsi, rax	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_7
0x3fd	      0xbf20000000	                           mov edi, 0x20	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_7
0x402	      0xe80cfcffff	                        call sym.st_mult	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_7
0x407	          0x4889c2	                            mov rdx, rax	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_7
0x40a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_7
0x40e	    0x488b80c80000	            mov rax, qword [rax + 0xc8] 	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_7
0x415	          0x4889d6	                            mov rsi, rdx	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_7
0x418	          0x4889c7	                            mov rdi, rax	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_7
0x41b	      0xe800000000	                          call 0x4000460	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_7
0x420	          0x4889c2	                            mov rdx, rax	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_7
0x423	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_7
0x427	    0x488990c80000	             mov qword [rax + 0xc8], rdx	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_7
0x42e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        90	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5
0x432	    0x488bb0c80000	            mov rsi, qword [rax + 0xc8] 	        90	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5
0x439	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        90	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5
0x43d	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	        90	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5
0x444	        0x488d4801	                      lea rcx, [rax + 1]	        90	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5
0x448	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        90	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5
0x44c	    0x48898ab80000	             mov qword [rdx + 0xb8], rcx	        90	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5
0x453	        0x48c1e005	                              shl rax, 5	        90	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5
0x457	          0x4801f0	                            add rax, rsi	        90	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5
0x45a	        0x488945f0	             mov qword [rbp - 0x10], rax	        90	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5
0x45e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        91	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5
0x462	    0xc70000000000	                      mov dword [rax], 0	        91	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5
0x468	      0xe93c020000	                           jmp 0x40006e9	        92	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5
0x46d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       102	dir-iterator.c	FUNCTION_12	WHILE_1	IF_6
0x471	        0x488b4008	                mov rax, qword [rax + 8]	       102	dir-iterator.c	FUNCTION_12	WHILE_1	IF_6
0x475	          0x4885c0	                           test rax, rax	       102	dir-iterator.c	FUNCTION_12	WHILE_1	IF_6
0x478	            0x753f	                           jne 0x40004f9	       102	dir-iterator.c	FUNCTION_12	WHILE_1	IF_6
0x47a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       107	dir-iterator.c	FUNCTION_12	WHILE_1	IF_6	IF_7
0x47e	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	       107	dir-iterator.c	FUNCTION_12	WHILE_1	IF_6	IF_7
0x485	        0x488d50ff	                      lea rdx, [rax - 1]	       107	dir-iterator.c	FUNCTION_12	WHILE_1	IF_6	IF_7
0x489	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       107	dir-iterator.c	FUNCTION_12	WHILE_1	IF_6	IF_7
0x48d	    0x488990b80000	             mov qword [rax + 0xb8], rdx	       107	dir-iterator.c	FUNCTION_12	WHILE_1	IF_6	IF_7
0x494	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       107	dir-iterator.c	FUNCTION_12	WHILE_1	IF_6	IF_7
0x498	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	       107	dir-iterator.c	FUNCTION_12	WHILE_1	IF_6	IF_7
0x49f	          0x4885c0	                           test rax, rax	       107	dir-iterator.c	FUNCTION_12	WHILE_1	IF_6	IF_7
0x4a2	     0xf85fa010000	                           jne 0x40006e2	       107	dir-iterator.c	FUNCTION_12	WHILE_1	IF_6	IF_7
0x4a8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       108	dir-iterator.c	FUNCTION_12	WHILE_1	IF_6	CALL_8
0x4ac	          0x4889c7	                            mov rdi, rax	       108	dir-iterator.c	FUNCTION_12	WHILE_1	IF_6	CALL_8
0x4af	      0xe800000000	                          call 0x40004f4	       108	dir-iterator.c	FUNCTION_12	WHILE_1	IF_6	CALL_8
0x4b4	      0xe9f5010000	                           jmp 0x40006ee	       108	dir-iterator.c	FUNCTION_12	WHILE_1	IF_6	CALL_8
0x4b9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       118	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_9
0x4bd	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       118	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_9
0x4c1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       118	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_9
0x4c5	          0x4889d6	                            mov rsi, rdx	       118	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_9
0x4c8	          0x4889c7	                            mov rdi, rax	       118	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_9
0x4cb	      0xe8cbfbffff	                  call sym.strbuf_setlen	       118	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_9
0x4d0	      0xe800000000	                          call 0x4000515	       119	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2
0x4d5	    0xc70000000000	                      mov dword [rax], 0	       119	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2
0x4db	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       120	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_10
0x4df	        0x488b4008	                mov rax, qword [rax + 8]	       120	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_10
0x4e3	          0x4889c7	                            mov rdi, rax	       120	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_10
0x4e6	      0xe800000000	                          call 0x400052b	       120	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_10
0x4eb	        0x488945f8	                mov qword [rbp - 8], rax	       120	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_10
0x4ef	      0x48837df800	                  cmp qword [rbp - 8], 0	       122	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8
0x4f4	     0xf85c2000000	                           jne 0x40005fc	       122	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8
0x4fa	      0xe800000000	                          call 0x400053f	       124	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	IF_9
0x4ff	            0x8b00	                    mov eax, dword [rax]	       124	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	IF_9
0x501	            0x85c0	                           test eax, eax	       124	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	IF_9
0x503	            0x742d	                            je 0x4000572	       124	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	IF_9
0x505	      0xe800000000	                          call 0x400054a	       126	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	IF_9	CALL_12
0x50a	            0x8b00	                    mov eax, dword [rax]	       125	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	IF_9	CALL_11
0x50c	            0x89c7	                            mov edi, eax	       125	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	IF_9	CALL_11
0x50e	      0xe800000000	                          call 0x4000553	       125	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	IF_9	CALL_11
0x513	          0x4889c2	                            mov rdx, rax	       125	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	IF_9	CALL_11
0x516	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       125	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	IF_9	CALL_11
0x51a	        0x488b4010	            mov rax, qword [rax + 0x10] 	       125	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	IF_9	CALL_11
0x51e	          0x4889c6	                            mov rsi, rax	       125	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	IF_9	CALL_11
0x521	      0xbf00000000	                              mov edi, 0	       125	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	IF_9	CALL_11
0x526	      0xb800000000	                              mov eax, 0	       125	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	IF_9	CALL_11
0x52b	      0xe800000000	                          call 0x4000570	       125	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	IF_9	CALL_11
0x530	            0xeb3f	                           jmp 0x40005b1	       125	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	IF_9	CALL_11
0x532	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       127	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	ELSE_3	IF_10	CALL_13
0x536	        0x488b4008	                mov rax, qword [rax + 8]	       127	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	ELSE_3	IF_10	CALL_13
0x53a	          0x4889c7	                            mov rdi, rax	       127	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	ELSE_3	IF_10	CALL_13
0x53d	      0xe800000000	                          call 0x4000582	       127	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	ELSE_3	IF_10	CALL_13
0x542	            0x85c0	                           test eax, eax	       127	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	ELSE_3	IF_10	CALL_13
0x544	            0x742b	                            je 0x40005b1	       127	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	ELSE_3	IF_10	CALL_13
0x546	      0xe800000000	                          call 0x400058b	       129	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	ELSE_3	IF_10
0x54b	            0x8b00	                    mov eax, dword [rax]	       128	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	ELSE_3	IF_10	CALL_14
0x54d	            0x89c7	                            mov edi, eax	       128	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	ELSE_3	IF_10	CALL_14
0x54f	      0xe800000000	                          call 0x4000594	       128	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	ELSE_3	IF_10	CALL_14
0x554	          0x4889c2	                            mov rdx, rax	       128	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	ELSE_3	IF_10	CALL_14
0x557	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       128	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	ELSE_3	IF_10	CALL_14
0x55b	        0x488b4010	            mov rax, qword [rax + 0x10] 	       128	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	ELSE_3	IF_10	CALL_14
0x55f	          0x4889c6	                            mov rsi, rax	       128	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	ELSE_3	IF_10	CALL_14
0x562	      0xbf00000000	                              mov edi, 0	       128	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	ELSE_3	IF_10	CALL_14
0x567	      0xb800000000	                              mov eax, 0	       128	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	ELSE_3	IF_10	CALL_14
0x56c	      0xe800000000	                          call 0x40005b1	       128	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	ELSE_3	IF_10	CALL_14
0x571	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       131	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8
0x575	    0x48c740080000	                  mov qword [rax + 8], 0	       131	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8
0x57d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       132	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	IF_11
0x581	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	       132	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	IF_11
0x588	        0x488d50ff	                      lea rdx, [rax - 1]	       132	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	IF_11
0x58c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       132	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	IF_11
0x590	    0x488990b80000	             mov qword [rax + 0xb8], rdx	       132	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	IF_11
0x597	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       132	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	IF_11
0x59b	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	       132	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	IF_11
0x5a2	          0x4885c0	                           test rax, rax	       132	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	IF_11
0x5a5	     0xf85fd000000	                           jne 0x40006e8	       132	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	IF_11
0x5ab	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       133	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	CALL_16
0x5af	          0x4889c7	                            mov rdi, rax	       133	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	CALL_16
0x5b2	      0xe800000000	                          call 0x40005f7	       133	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	CALL_16
0x5b7	      0xe9f2000000	                           jmp 0x40006ee	       133	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	CALL_16
0x5bc	        0x488b45f8	                mov rax, qword [rbp - 8]	       137	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_12	CALL_17
0x5c0	        0x4883c013	                           add rax, 0x13	       137	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_12	CALL_17
0x5c4	          0x4889c7	                            mov rdi, rax	       137	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_12	CALL_17
0x5c7	      0xe80cfcffff	               call sym.is_dot_or_dotdot	       137	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_12	CALL_17
0x5cc	            0x85c0	                           test eax, eax	       137	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_12	CALL_17
0x5ce	     0xf85c2000000	                           jne 0x40006d6	       137	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_12	CALL_17
0x5d4	        0x488b45f8	                mov rax, qword [rbp - 8]	       140	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_18
0x5d8	        0x488d5013	                   lea rdx, [rax + 0x13]	       140	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_18
0x5dc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       140	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_18
0x5e0	          0x4889d6	                            mov rsi, rdx	       140	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_18
0x5e3	          0x4889c7	                            mov rdi, rax	       140	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_18
0x5e6	      0xe8b8fbffff	                  call sym.strbuf_addstr	       140	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_18
0x5eb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       141	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_13	CALL_19
0x5ef	        0x488d5028	                   lea rdx, [rax + 0x28]	       141	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_13	CALL_19
0x5f3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       141	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_13	CALL_19
0x5f7	        0x488b4010	            mov rax, qword [rax + 0x10] 	       141	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_13	CALL_19
0x5fb	          0x4889d6	                            mov rsi, rdx	       141	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_13	CALL_19
0x5fe	          0x4889c7	                            mov rdi, rax	       141	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_13	CALL_19
0x601	      0xe800000000	                          call 0x4000646	       141	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_13	CALL_19
0x606	            0x85c0	                           test eax, eax	       141	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_13	CALL_19
0x608	            0x793d	                           jns 0x4000687	       141	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_13	CALL_19
0x60a	      0xe800000000	                          call 0x400064f	       142	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_13	IF_14
0x60f	            0x8b00	                    mov eax, dword [rax]	       142	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_13	IF_14
0x611	          0x83f802	                              cmp eax, 2	       142	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_13	IF_14
0x614	     0xf8482000000	                            je 0x40006dc	       142	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_13	IF_14
0x61a	      0xe800000000	                          call 0x400065f	       145	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_13	CALL_21
0x61f	            0x8b00	                    mov eax, dword [rax]	       143	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_13	IF_14	CALL_20
0x621	            0x89c7	                            mov edi, eax	       143	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_13	IF_14	CALL_20
0x623	      0xe800000000	                          call 0x4000668	       143	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_13	IF_14	CALL_20
0x628	          0x4889c2	                            mov rdx, rax	       143	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_13	IF_14	CALL_20
0x62b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       143	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_13	IF_14	CALL_20
0x62f	        0x488b4010	            mov rax, qword [rax + 0x10] 	       143	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_13	IF_14	CALL_20
0x633	          0x4889c6	                            mov rsi, rax	       143	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_13	IF_14	CALL_20
0x636	      0xbf00000000	                              mov edi, 0	       143	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_13	IF_14	CALL_20
0x63b	      0xb800000000	                              mov eax, 0	       143	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_13	IF_14	CALL_20
0x640	      0xe800000000	                          call 0x4000685	       143	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_13	IF_14	CALL_20
0x645	            0xeb55	                           jmp 0x40006dc	       146	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_13
0x647	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       154	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2
0x64b	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       154	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2
0x64f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       154	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2
0x653	    0x488b80c80000	            mov rax, qword [rax + 0xc8] 	       154	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2
0x65a	        0x488b4010	            mov rax, qword [rax + 0x10] 	       154	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2
0x65e	          0x4801c2	                            add rdx, rax	       154	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2
0x661	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       153	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2
0x665	        0x48895018	             mov qword [rax + 0x18], rdx	       153	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2
0x669	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       156	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2
0x66d	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       156	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2
0x671	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       156	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2
0x675	        0x488b4010	            mov rax, qword [rax + 0x10] 	       156	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2
0x679	          0x4801c2	                            add rdx, rax	       156	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2
0x67c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       155	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2
0x680	        0x48895020	             mov qword [rax + 0x20], rdx	       155	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2
0x684	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       157	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2
0x688	    0xc74018000000	               mov dword [rax + 0x18], 0	       157	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2
0x68f	      0xb800000000	                              mov eax, 0	       159	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2
0x694	            0xeb18	                           jmp 0x40006ee	       159	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2
0x696	              0x90	                                     nop	       138	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_12
0x697	      0xe91dfeffff	                           jmp 0x40004f9	       138	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_12
0x69c	              0x90	                                     nop	       146	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_13
0x69d	      0xe917feffff	                           jmp 0x40004f9	       160	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2
0x6a2	              0x90	                                     nop	       110	dir-iterator.c	FUNCTION_12	WHILE_1	IF_6
0x6a3	      0xe992fbffff	                           jmp 0x400027a	       110	dir-iterator.c	FUNCTION_12	WHILE_1	IF_6
0x6a8	              0x90	                                     nop	       134	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8
0x6a9	      0xe98cfbffff	                           jmp 0x400027a	       161	dir-iterator.c	FUNCTION_12	WHILE_1
0x6ae	              0xc9	                                   leave	       162	dir-iterator.c	FUNCTION_12
0x6af	              0xc3	                                     ret	       162	dir-iterator.c	FUNCTION_12
strbuf_setlen	FOR,0:DO,0:IF,2:WHILE,0:SWITCH,0:ELSE,1:functions,0:CALL,2	43
0x9b	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_3
0x9c	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_3
0x9f	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_3
0xa3	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_3
0xa7	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_3
0xab	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_3	IF_1
0xaf	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_3	IF_1
0xb2	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_3	IF_1
0xb5	            0x740d	                            je 0x4000104	       162	strbuf.h	FUNCTION_3	IF_1
0xb7	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_3	IF_1
0xbb	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_3	IF_1
0xbe	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_3	IF_1
0xc2	            0xeb05	                           jmp 0x4000109	       162	strbuf.h	FUNCTION_3	IF_1
0xc4	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_3	IF_1
0xc9	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_3	IF_1
0xcd	            0x730f	                           jae 0x400011e	       162	strbuf.h	FUNCTION_3	IF_1
0xcf	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_3	CALL_1
0xd4	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_3	CALL_1
0xd9	      0xe800000000	                          call 0x400011e	       163	strbuf.h	FUNCTION_3	CALL_1
0xde	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_3
0xe2	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_3
0xe6	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_3
0xea	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_3	IF_2
0xee	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_3	IF_2
0xf2	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_3	IF_2
0xf8	            0x7414	                            je 0x400014e	       165	strbuf.h	FUNCTION_3	IF_2
0xfa	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_3	IF_2
0xfe	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_3	IF_2
0x102	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_3	IF_2
0x106	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_3	IF_2
0x109	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_3	IF_2
0x10c	            0xeb24	                           jmp 0x4000172	       169	strbuf.h	FUNCTION_3
0x10e	     0xfb605000000	           movzx eax, byte [0x04000155] 	       168	strbuf.h	FUNCTION_3	CALL_2
0x115	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_3	CALL_2
0x117	            0x7419	                            je 0x4000172	       168	strbuf.h	FUNCTION_3	CALL_2
0x119	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_3	CALL_2
0x11e	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_3	CALL_2
0x123	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_3	CALL_2
0x128	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_3	CALL_2
0x12d	      0xe800000000	                          call 0x4000172	       168	strbuf.h	FUNCTION_3	CALL_2
0x132	              0x90	                                     nop	       169	strbuf.h	FUNCTION_3
0x133	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_3
0x134	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_3
dir_iterator_begin	FOR,0:DO,0:IF,1:WHILE,0:SWITCH,0:ELSE,0:functions,0:CALL,5	75
0x7b1	              0x55	                                push rbp	       186	dir-iterator.c	FUNCTION_14
0x7b2	          0x4889e5	                            mov rbp, rsp	       186	dir-iterator.c	FUNCTION_14
0x7b5	        0x4883ec20	                           sub rsp, 0x20	       186	dir-iterator.c	FUNCTION_14
0x7b9	        0x48897de8	             mov qword [rbp - 0x18], rdi	       186	dir-iterator.c	FUNCTION_14
0x7bd	      0xbed0000000	                           mov esi, 0xd0	       187	dir-iterator.c	FUNCTION_14	CALL_1
0x7c2	      0xbf01000000	                              mov edi, 1	       187	dir-iterator.c	FUNCTION_14	CALL_1
0x7c7	      0xe800000000	                          call 0x400080c	       187	dir-iterator.c	FUNCTION_14	CALL_1
0x7cc	        0x488945f0	             mov qword [rbp - 0x10], rax	       187	dir-iterator.c	FUNCTION_14	CALL_1
0x7d0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       188	dir-iterator.c	FUNCTION_14
0x7d4	        0x488945f8	                mov qword [rbp - 8], rax	       188	dir-iterator.c	FUNCTION_14
0x7d8	      0x48837de800	               cmp qword [rbp - 0x18], 0	       190	dir-iterator.c	FUNCTION_14	IF_1
0x7dd	            0x740b	                            je 0x400082a	       190	dir-iterator.c	FUNCTION_14	IF_1
0x7df	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       190	dir-iterator.c	FUNCTION_14	IF_1
0x7e3	           0xfb600	                   movzx eax, byte [rax]	       190	dir-iterator.c	FUNCTION_14	IF_1
0x7e6	            0x84c0	                             test al, al	       190	dir-iterator.c	FUNCTION_14	IF_1
0x7e8	            0x750f	                           jne 0x4000839	       190	dir-iterator.c	FUNCTION_14	IF_1
0x7ea	      0xbf00000000	                              mov edi, 0	       191	dir-iterator.c	FUNCTION_14	CALL_2
0x7ef	      0xb800000000	                              mov eax, 0	       191	dir-iterator.c	FUNCTION_14	CALL_2
0x7f4	      0xe800000000	                          call 0x4000839	       191	dir-iterator.c	FUNCTION_14	CALL_2
0x7f9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       193	dir-iterator.c	FUNCTION_14	CALL_3
0x7fd	      0xbe00100000	                         mov esi, 0x1000	       193	dir-iterator.c	FUNCTION_14	CALL_3
0x802	          0x4889c7	                            mov rdi, rax	       193	dir-iterator.c	FUNCTION_14	CALL_3
0x805	      0xe800000000	                          call 0x400084a	       193	dir-iterator.c	FUNCTION_14	CALL_3
0x80a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       194	dir-iterator.c	FUNCTION_14	CALL_4
0x80e	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       194	dir-iterator.c	FUNCTION_14	CALL_4
0x812	          0x4889d6	                            mov rsi, rdx	       194	dir-iterator.c	FUNCTION_14	CALL_4
0x815	          0x4889c7	                            mov rdi, rax	       194	dir-iterator.c	FUNCTION_14	CALL_4
0x818	      0xe886f9ffff	                  call sym.strbuf_addstr	       194	dir-iterator.c	FUNCTION_14	CALL_4
0x81d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x821	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x828	        0x4883f809	                              cmp rax, 9	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x82c	     0xf8797000000	                            ja 0x4000909	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x832	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x836	    0x488b90c00000	            mov rdx, qword [rax + 0xc0] 	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x83d	          0x4889d0	                            mov rax, rdx	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x840	          0x4801c0	                            add rax, rax	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x843	          0x4801d0	                            add rax, rdx	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x846	        0x4883c030	                           add rax, 0x30	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x84a	        0x4883f813	                           cmp rax, 0x13	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x84e	            0x7711	                            ja 0x40008a1	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x850	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x854	    0x48c780c00000	             mov qword [rax + 0xc0], 0xa	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x85f	            0xeb29	                           jmp 0x40008ca	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x861	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x865	    0x488b90c00000	            mov rdx, qword [rax + 0xc0] 	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x86c	          0x4889d0	                            mov rax, rdx	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x86f	          0x4801c0	                            add rax, rax	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x872	          0x4801d0	                            add rax, rdx	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x875	        0x4883c030	                           add rax, 0x30	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x879	          0x48d1e8	                              shr rax, 1	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x87c	          0x4889c2	                            mov rdx, rax	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x87f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x883	    0x488990c00000	             mov qword [rax + 0xc0], rdx	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x88a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x88e	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x895	          0x4889c6	                            mov rsi, rax	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x898	      0xbf20000000	                           mov edi, 0x20	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x89d	      0xe871f7ffff	                        call sym.st_mult	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x8a2	          0x4889c2	                            mov rdx, rax	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x8a5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x8a9	    0x488b80c80000	            mov rax, qword [rax + 0xc8] 	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x8b0	          0x4889d6	                            mov rsi, rdx	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x8b3	          0x4889c7	                            mov rdi, rax	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x8b6	      0xe800000000	                          call 0x40008fb	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x8bb	          0x4889c2	                            mov rdx, rax	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x8be	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x8c2	    0x488990c80000	             mov qword [rax + 0xc8], rdx	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x8c9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       198	dir-iterator.c	FUNCTION_14
0x8cd	    0x48c780b80000	               mov qword [rax + 0xb8], 1	       198	dir-iterator.c	FUNCTION_14
0x8d8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       199	dir-iterator.c	FUNCTION_14
0x8dc	    0x488b80c80000	            mov rax, qword [rax + 0xc8] 	       199	dir-iterator.c	FUNCTION_14
0x8e3	    0xc70000000000	                      mov dword [rax], 0	       199	dir-iterator.c	FUNCTION_14
0x8e9	        0x488b45f8	                mov rax, qword [rbp - 8]	       201	dir-iterator.c	FUNCTION_14
0x8ed	              0xc9	                                   leave	       202	dir-iterator.c	FUNCTION_14
0x8ee	              0xc3	                                     ret	       202	dir-iterator.c	FUNCTION_14
st_mult	FOR,0:DO,0:IF,1:WHILE,0:SWITCH,0:ELSE,0:functions,0:CALL,2	22
0x13	              0x55	                                push rbp	       794	git-compat-util.h	FUNCTION_29
0x14	          0x4889e5	                            mov rbp, rsp	       794	git-compat-util.h	FUNCTION_29
0x17	        0x4883ec10	                           sub rsp, 0x10	       794	git-compat-util.h	FUNCTION_29
0x1b	        0x48897df8	                mov qword [rbp - 8], rdi	       794	git-compat-util.h	FUNCTION_29
0x1f	        0x488975f0	             mov qword [rbp - 0x10], rsi	       794	git-compat-util.h	FUNCTION_29
0x23	      0x48837df800	                  cmp qword [rbp - 8], 0	       795	git-compat-util.h	FUNCTION_29	IF_1	CALL_1
0x28	            0x7430	                            je 0x400009a	       795	git-compat-util.h	FUNCTION_29	IF_1	CALL_1
0x2a	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       795	git-compat-util.h	FUNCTION_29	IF_1	CALL_1
0x31	      0xba00000000	                              mov edx, 0	       795	git-compat-util.h	FUNCTION_29	IF_1	CALL_1
0x36	        0x48f775f8	                     div qword [rbp - 8]	       795	git-compat-util.h	FUNCTION_29	IF_1	CALL_1
0x3a	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       795	git-compat-util.h	FUNCTION_29	IF_1	CALL_1
0x3e	            0x731a	                           jae 0x400009a	       795	git-compat-util.h	FUNCTION_29	IF_1	CALL_1
0x40	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       796	git-compat-util.h	FUNCTION_29	IF_1	CALL_2
0x44	        0x488b45f8	                mov rax, qword [rbp - 8]	       796	git-compat-util.h	FUNCTION_29	IF_1	CALL_2
0x48	          0x4889c6	                            mov rsi, rax	       796	git-compat-util.h	FUNCTION_29	IF_1	CALL_2
0x4b	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_29	IF_1	CALL_2
0x50	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_29	IF_1	CALL_2
0x55	      0xe800000000	                          call 0x400009a	       796	git-compat-util.h	FUNCTION_29	IF_1	CALL_2
0x5a	        0x488b45f8	                mov rax, qword [rbp - 8]	       798	git-compat-util.h	FUNCTION_29
0x5e	      0x480faf45f0	            imul rax, qword [rbp - 0x10]	       798	git-compat-util.h	FUNCTION_29
0x63	              0xc9	                                   leave	       799	git-compat-util.h	FUNCTION_29
0x64	              0xc3	                                     ret	       799	git-compat-util.h	FUNCTION_29
strbuf_addstr	FOR,0:DO,0:IF,0:WHILE,0:SWITCH,0:ELSE,0:functions,0:CALL,2	17
0x1a3	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_5
0x1a4	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_5
0x1a7	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_5
0x1ab	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_5
0x1af	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_5
0x1b3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_5	CALL_2
0x1b7	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_5	CALL_2
0x1ba	      0xe800000000	                          call 0x40001ff	       279	strbuf.h	FUNCTION_5	CALL_2
0x1bf	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_5	CALL_2
0x1c2	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_5	CALL_2
0x1c6	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_5	CALL_2
0x1ca	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_5	CALL_2
0x1cd	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_5	CALL_2
0x1d0	      0xe800000000	                          call 0x4000215	       279	strbuf.h	FUNCTION_5	CALL_2
0x1d5	              0x90	                                     nop	       280	strbuf.h	FUNCTION_5
0x1d6	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_5
0x1d7	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_5
